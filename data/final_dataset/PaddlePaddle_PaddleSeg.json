{"home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.predict.parse_args": [[26, 114], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model prediction'", ")", "\n", "\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The image to predict, which can be a path of image, or a file list containing image paths, or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# custom color map", "\n", "parser", ".", "add_argument", "(", "\n", "'--custom_color'", ",", "\n", "dest", "=", "'custom_color'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Save images with a custom color map. Default: None, use paddleseg\\'s default color map.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# set device", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.predict.get_test_config": [[116, 140], ["test_config.pop"], "function", ["None"], ["", "def", "get_test_config", "(", "cfg", ",", "args", ")", ":", "\n", "\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "'aug_eval'", "in", "test_config", ":", "\n", "        ", "test_config", ".", "pop", "(", "'aug_eval'", ")", "\n", "", "if", "args", ".", "aug_pred", ":", "\n", "        ", "test_config", "[", "'aug_pred'", "]", "=", "args", ".", "aug_pred", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "\n", "", "if", "args", ".", "flip_horizontal", ":", "\n", "        ", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "\n", "", "if", "args", ".", "flip_vertical", ":", "\n", "        ", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "if", "args", ".", "custom_color", ":", "\n", "        ", "test_config", "[", "'custom_color'", "]", "=", "args", ".", "custom_color", "\n", "\n", "", "return", "test_config", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.predict.main": [[142, 181], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.transforms.Compose", "paddleseg.utils.get_image_list", "paddleseg.utils.logger.info", "predict.get_test_config", "paddleseg.core.predict", "RuntimeError", "paddle.is_compiled_with_xpu", "len", "paddle.is_compiled_with_npu"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.get_test_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "transforms", "=", "Compose", "(", "cfg", ".", "val_transforms", ")", "\n", "image_list", ",", "image_dir", "=", "get_image_list", "(", "args", ".", "image_path", ")", "\n", "logger", ".", "info", "(", "'Number of predict images = {}'", ".", "format", "(", "len", "(", "image_list", ")", ")", ")", "\n", "\n", "test_config", "=", "get_test_config", "(", "cfg", ",", "args", ")", "\n", "\n", "predict", "(", "\n", "model", ",", "\n", "model_path", "=", "args", ".", "model_path", ",", "\n", "transforms", "=", "transforms", ",", "\n", "image_list", "=", "image_list", ",", "\n", "image_dir", "=", "image_dir", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "**", "test_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.train.parse_args": [[26, 138], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "=", "\"Auto mixed precision level. Accepted values are \u201cO1\u201d and \u201cO2\u201d: O1 represent mixed precision, the input \\\n                data type of each operator will be casted by white_list and black_list; O2 represent Pure fp16, all operators \\\n                parameters and input data will be casted to fp16, except operators in black_list, don\u2019t support fp16 kernel \\\n                and batchnorm. Default is O1(amp)\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.train.main": [[140, 226], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "paddleseg.core.train", "paddle.seed", "numpy.random.seed", "random.seed", "RuntimeError", "len", "range", "RuntimeError", "paddle.nn.SyncBatchNorm.convert_sync_batchnorm", "paddleseg.utils.get_sys_env.items", "paddle.is_compiled_with_xpu", "ValueError", "len", "ValueError", "paddle.is_compiled_with_npu", "paddle.distributed.ParallelEnv", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "train_dataset", "=", "cfg", ".", "train_dataset", "\n", "if", "train_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "", "elif", "len", "(", "train_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of train_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "", "val_dataset", "=", "cfg", ".", "val_dataset", "if", "args", ".", "do_eval", "else", "None", "\n", "losses", "=", "cfg", ".", "loss", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "config_check", "(", "cfg", ",", "train_dataset", "=", "train_dataset", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "if", "place", "==", "'gpu'", "and", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "nranks", ">", "1", ":", "\n", "# convert bn to sync_bn", "\n", "        ", "cfg", ".", "_model", "=", "paddle", ".", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "cfg", ".", "model", ")", "\n", "\n", "", "train", "(", "\n", "cfg", ".", "model", ",", "\n", "train_dataset", ",", "\n", "val_dataset", "=", "val_dataset", ",", "\n", "optimizer", "=", "cfg", ".", "optimizer", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "iters", "=", "cfg", ".", "iters", ",", "\n", "batch_size", "=", "cfg", ".", "batch_size", ",", "\n", "resume_model", "=", "args", ".", "resume_model", ",", "\n", "save_interval", "=", "args", ".", "save_interval", ",", "\n", "log_iters", "=", "args", ".", "log_iters", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "use_vdl", "=", "args", ".", "use_vdl", ",", "\n", "losses", "=", "losses", ",", "\n", "keep_checkpoint_max", "=", "args", ".", "keep_checkpoint_max", ",", "\n", "test_config", "=", "cfg", ".", "test_config", ",", "\n", "precision", "=", "args", ".", "precision", ",", "\n", "amp_level", "=", "args", ".", "amp_level", ",", "\n", "profiler_options", "=", "args", ".", "profiler_options", ",", "\n", "to_static_training", "=", "cfg", ".", "to_static_training", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.val.get_test_config": [[25, 40], ["None"], "function", ["None"], ["def", "get_test_config", "(", "cfg", ",", "args", ")", ":", "\n", "\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.val.parse_args": [[42, 128], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--auc_roc'", ",", "\n", "dest", "=", "'add auc_roc metric'", ",", "\n", "help", "=", "'Whether to use auc_roc metric'", ",", "\n", "type", "=", "bool", ",", "\n", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.val.main": [[130, 183], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "val.get_test_config", "paddleseg.utils.config_check", "paddleseg.core.evaluate", "RuntimeError", "len", "range", "RuntimeError", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "paddle.is_compiled_with_xpu", "ValueError", "len", "ValueError", "paddle.is_compiled_with_npu"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.get_test_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "val_dataset", "=", "cfg", ".", "val_dataset", "\n", "if", "val_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The verification dataset is not specified in the configuration file.'", "\n", ")", "\n", "", "elif", "len", "(", "val_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of val_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "\n", "", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "utils", ".", "load_entire_model", "(", "model", ",", "args", ".", "model_path", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully'", ")", "\n", "\n", "", "test_config", "=", "get_test_config", "(", "cfg", ",", "args", ")", "\n", "config_check", "(", "cfg", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "evaluate", "(", "model", ",", "val_dataset", ",", "num_workers", "=", "args", ".", "num_workers", ",", "**", "test_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.export.SavedSegmentationNet.__init__": [[68, 72], ["super().__init__", "export.PostPorcesser"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net", ",", "without_argmax", "=", "False", ",", "with_softmax", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "post_processer", "=", "PostPorcesser", "(", "without_argmax", ",", "with_softmax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.export.SavedSegmentationNet.forward": [[73, 77], ["export.SavedSegmentationNet.net", "export.SavedSegmentationNet.post_processer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "self", ".", "net", "(", "x", ")", "\n", "outs", "=", "self", ".", "post_processer", "(", "outs", ")", "\n", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.export.PostPorcesser.__init__": [[80, 84], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "without_argmax", ",", "with_softmax", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "without_argmax", "=", "without_argmax", "\n", "self", ".", "with_softmax", "=", "with_softmax", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.export.PostPorcesser.forward": [[85, 94], ["new_outs.append", "paddle.nn.functional.softmax", "paddle.argmax"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "outs", ")", ":", "\n", "        ", "new_outs", "=", "[", "]", "\n", "for", "out", "in", "outs", ":", "\n", "            ", "if", "self", ".", "with_softmax", ":", "\n", "                ", "out", "=", "paddle", ".", "nn", ".", "functional", ".", "softmax", "(", "out", ",", "axis", "=", "1", ")", "\n", "", "if", "not", "self", ".", "without_argmax", ":", "\n", "                ", "out", "=", "paddle", ".", "argmax", "(", "out", ",", "axis", "=", "1", ")", "\n", "", "new_outs", ".", "append", "(", "out", ")", "\n", "", "return", "new_outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.export.parse_args": [[25, 65], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model export.'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the exported model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for export'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--without_argmax'", ",", "\n", "dest", "=", "'without_argmax'", ",", "\n", "help", "=", "'Do not add the argmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--with_softmax'", ",", "\n", "dest", "=", "'with_softmax'", ",", "\n", "help", "=", "'Add the softmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--input_shape\"", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "\"Export the model with fixed input shape, such as 1 3 1024 1024.\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.None.export.main": [[96, 140], ["paddleseg.cvlibs.Config", "SavedSegmentationNet.eval", "paddle.jit.to_static", "os.path.join", "paddle.jit.save", "os.path.join", "paddleseg.utils.logger.info", "paddle.load", "net.set_dict", "paddleseg.utils.logger.info", "export.SavedSegmentationNet", "open", "paddleseg.cvlibs.Config.export_config.get", "yaml.dump", "paddle.static.InputSpec"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'PADDLESEG_EXPORT_STAGE'", "]", "=", "'True'", "\n", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "net", "=", "cfg", ".", "model", "\n", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "para_state_dict", "=", "paddle", ".", "load", "(", "args", ".", "model_path", ")", "\n", "net", ".", "set_dict", "(", "para_state_dict", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully.'", ")", "\n", "\n", "", "if", "args", ".", "input_shape", "is", "None", ":", "\n", "        ", "shape", "=", "[", "None", ",", "3", ",", "None", ",", "None", "]", "\n", "", "else", ":", "\n", "        ", "shape", "=", "args", ".", "input_shape", "\n", "\n", "", "if", "not", "args", ".", "without_argmax", "or", "args", ".", "with_softmax", ":", "\n", "        ", "new_net", "=", "SavedSegmentationNet", "(", "net", ",", "args", ".", "without_argmax", ",", "\n", "args", ".", "with_softmax", ")", "\n", "", "else", ":", "\n", "        ", "new_net", "=", "net", "\n", "\n", "", "new_net", ".", "eval", "(", ")", "\n", "new_net", "=", "paddle", ".", "jit", ".", "to_static", "(", "\n", "new_net", ",", "\n", "input_spec", "=", "[", "paddle", ".", "static", ".", "InputSpec", "(", "\n", "shape", "=", "shape", ",", "dtype", "=", "'float32'", ")", "]", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "'model'", ")", "\n", "paddle", ".", "jit", ".", "save", "(", "new_net", ",", "save_path", ")", "\n", "\n", "yml_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "'deploy.yaml'", ")", "\n", "with", "open", "(", "yml_file", ",", "'w'", ")", "as", "file", ":", "\n", "        ", "transforms", "=", "cfg", ".", "export_config", ".", "get", "(", "'transforms'", ",", "[", "{", "\n", "'type'", ":", "'Normalize'", "\n", "}", "]", ")", "\n", "data", "=", "{", "\n", "'Deploy'", ":", "{", "\n", "'transforms'", ":", "transforms", ",", "\n", "'model'", ":", "'model.pdmodel'", ",", "\n", "'params'", ":", "'model.pdiparams'", "\n", "}", "\n", "}", "\n", "yaml", ".", "dump", "(", "data", ",", "file", ")", "\n", "\n", "", "logger", ".", "info", "(", "f'Model is saved in {args.save_dir}.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.compare_results.init_args": [[11, 21], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "init_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "# params for testing assert allclose", "\n", "parser", ".", "add_argument", "(", "\"--atol\"", ",", "type", "=", "float", ",", "default", "=", "1e-3", ")", "\n", "parser", ".", "add_argument", "(", "\"--rtol\"", ",", "type", "=", "float", ",", "default", "=", "1e-3", ")", "\n", "parser", ".", "add_argument", "(", "\"--metric_file\"", ",", "type", "=", "str", ",", "default", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--predict_dir\"", ",", "type", "=", "str", ",", "default", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gt_dir\"", ",", "type", "=", "str", ",", "default", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_classes\"", ",", "type", "=", "int", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.compare_results.parse_args": [[23, 26], ["compare_results.init_args", "init_args.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.compare_results.init_args", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "init_args", "(", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.compare_results.run_shell_command": [[28, 37], ["subprocess.Popen", "subprocess.Popen.communicate", "out.decode"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["", "def", "run_shell_command", "(", "cmd", ")", ":", "\n", "    ", "p", "=", "subprocess", ".", "Popen", "(", "\n", "cmd", ",", "stdout", "=", "subprocess", ".", "PIPE", ",", "stderr", "=", "subprocess", ".", "PIPE", ",", "shell", "=", "True", ")", "\n", "out", ",", "err", "=", "p", ".", "communicate", "(", ")", "\n", "\n", "if", "p", ".", "returncode", "==", "0", ":", "\n", "        ", "return", "out", ".", "decode", "(", "'utf-8'", ")", "\n", "", "else", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.compare_results.load_gt_from_file": [[39, 53], ["os.path.exists", "ValueError", "open", "f.readlines", "f.close", "line.strip().split", "float", "line.strip"], "function", ["None"], ["", "", "def", "load_gt_from_file", "(", "metric_file", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "metric_file", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"The log file {} does not exists!\"", ".", "format", "(", "metric_file", ")", ")", "\n", "", "with", "open", "(", "metric_file", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "data", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "parser_gt", "=", "{", "}", "\n", "for", "line", "in", "data", ":", "\n", "        ", "metric", ",", "result", "=", "line", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "\":\"", ")", "\n", "if", "'Class'", "in", "metric", ":", "\n", "            ", "parser_gt", "[", "metric", "]", "=", "result", "\n", "", "else", ":", "\n", "            ", "parser_gt", "[", "metric", "]", "=", "float", "(", "result", ")", "\n", "", "", "return", "parser_gt", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.compare_results.load_metric_from_txts": [[55, 70], ["glob.glob", "compare_results.load_gt_from_file", "os.path.basename"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.compare_results.load_gt_from_file"], ["", "def", "load_metric_from_txts", "(", "metric_file", ")", ":", "\n", "    ", "gt_list", "=", "glob", ".", "glob", "(", "metric_file", ")", "\n", "true_metrics", "=", "{", "}", "\n", "for", "gt_f", "in", "gt_list", ":", "\n", "        ", "gt_dict", "=", "load_gt_from_file", "(", "gt_f", ")", "\n", "basename", "=", "os", ".", "path", ".", "basename", "(", "gt_f", ")", "\n", "if", "\"fp32\"", "in", "basename", ":", "\n", "            ", "true_metrics", "[", "\"fp32\"", "]", "=", "[", "gt_dict", ",", "gt_f", "]", "\n", "", "elif", "\"fp16\"", "in", "basename", ":", "\n", "            ", "true_metrics", "[", "\"fp16\"", "]", "=", "[", "gt_dict", ",", "gt_f", "]", "\n", "", "elif", "\"int8\"", "in", "basename", ":", "\n", "            ", "true_metrics", "[", "\"int8\"", "]", "=", "[", "gt_dict", ",", "gt_f", "]", "\n", "", "else", ":", "\n", "            ", "continue", "\n", "", "", "return", "true_metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.compare_results.cal_metric": [[72, 81], ["glob.glob", "os.path.basename", "print", "val.evaluate"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate"], ["", "def", "cal_metric", "(", "predict_dir", ",", "gt_dir", ",", "num_classes", ",", "key_list", ")", ":", "\n", "    ", "predict_list", "=", "glob", ".", "glob", "(", "predict_dir", ")", "\n", "pred_metics", "=", "{", "}", "\n", "for", "predict_dir_", "in", "predict_list", ":", "\n", "        ", "key", "=", "os", ".", "path", ".", "basename", "(", "predict_dir_", ")", "\n", "print", "(", "key", ")", "\n", "pred_dict", "=", "evaluate", "(", "predict_dir_", ",", "gt_dir", ",", "num_classes", ")", "\n", "pred_metics", "[", "key", "]", "=", "pred_dict", "\n", "", "return", "pred_metics", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.compare_results.testing_assert_allclose": [[83, 89], ["numpy.testing.assert_allclose", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "testing_assert_allclose", "(", "dict_x", ",", "dict_y", ",", "atol", "=", "1e-7", ",", "rtol", "=", "1e-7", ")", ":", "\n", "    ", "for", "k", "in", "dict_x", ":", "\n", "        ", "if", "'Class'", "in", "k", ":", "\n", "            ", "continue", "\n", "", "np", ".", "testing", ".", "assert_allclose", "(", "\n", "np", ".", "array", "(", "dict_x", "[", "k", "]", ")", ",", "np", ".", "array", "(", "dict_y", "[", "k", "]", ")", ",", "atol", "=", "atol", ",", "rtol", "=", "rtol", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.test_tipc.val.evaluate": [[28, 96], ["paddleseg.utils.get_image_list", "paddleseg.utils.metrics.mean_iou", "paddleseg.utils.metrics.accuracy", "paddleseg.utils.metrics.kappa", "len", "os.basename", "os.join", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.interpolate", "paddleseg.utils.metrics.calculate_area", "print", "print", "print", "numpy.asarray", "numpy.asarray", "PIL.Image.open", "PIL.Image.open", "len", "str", "str"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.mean_iou", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.accuracy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.kappa", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.calculate_area"], ["if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.Compose.__init__": [[34, 39], ["isinstance", "TypeError"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ",", "to_rgb", "=", "True", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "transforms", ",", "list", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'The transforms must be a list!'", ")", "\n", "", "self", ".", "transforms", "=", "transforms", "\n", "self", ".", "to_rgb", "=", "to_rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.Compose.__call__": [[40, 62], ["numpy.transpose", "op.get", "op", "numpy.transpose", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            data (dict): The data to transform.\n\n        Returns:\n            dict: Data after transformation\n        \"\"\"", "\n", "if", "'trans_info'", "not", "in", "data", ":", "\n", "            ", "data", "[", "'trans_info'", "]", "=", "[", "]", "\n", "", "for", "op", "in", "self", ".", "transforms", ":", "\n", "            ", "data", "=", "op", "(", "data", ")", "\n", "if", "data", "is", "None", ":", "\n", "                ", "return", "None", "\n", "\n", "", "", "data", "[", "'img'", "]", "=", "np", ".", "transpose", "(", "data", "[", "'img'", "]", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "len", "(", "data", "[", "key", "]", ".", "shape", ")", "==", "2", ":", "\n", "                ", "continue", "\n", "", "data", "[", "key", "]", "=", "np", ".", "transpose", "(", "data", "[", "key", "]", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.LoadImages.__init__": [[66, 68], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "to_rgb", "=", "True", ")", ":", "\n", "        ", "self", ".", "to_rgb", "=", "to_rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.LoadImages.__call__": [[69, 88], ["isinstance", "data.get", "cv2.imread", "isinstance", "cv2.cvtColor", "data.get", "cv2.imread", "cv2.cvtColor", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "isinstance", "(", "data", "[", "'img'", "]", ",", "str", ")", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "cv2", ".", "imread", "(", "data", "[", "'img'", "]", ")", "\n", "", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "isinstance", "(", "data", "[", "key", "]", ",", "str", ")", ":", "\n", "                ", "data", "[", "key", "]", "=", "cv2", ".", "imread", "(", "data", "[", "key", "]", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "\n", "# if alpha and trimap has 3 channels, extract one.", "\n", "", "if", "key", "in", "[", "'alpha'", ",", "'trimap'", "]", ":", "\n", "                ", "if", "len", "(", "data", "[", "key", "]", ".", "shape", ")", ">", "2", ":", "\n", "                    ", "data", "[", "key", "]", "=", "data", "[", "key", "]", "[", ":", ",", ":", ",", "0", "]", "\n", "\n", "", "", "", "if", "self", ".", "to_rgb", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "cv2", ".", "cvtColor", "(", "data", "[", "'img'", "]", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "                ", "if", "len", "(", "data", "[", "key", "]", ".", "shape", ")", "==", "2", ":", "\n", "                    ", "continue", "\n", "", "data", "[", "key", "]", "=", "cv2", ".", "cvtColor", "(", "data", "[", "key", "]", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.Resize.__init__": [[92, 106], ["isinstance", "isinstance", "TypeError", "len", "ValueError", "type"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "target_size", "=", "(", "512", ",", "512", ")", ",", "random_interp", "=", "False", ")", ":", "\n", "        ", "if", "isinstance", "(", "target_size", ",", "list", ")", "or", "isinstance", "(", "target_size", ",", "tuple", ")", ":", "\n", "            ", "if", "len", "(", "target_size", ")", "!=", "2", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'`target_size` should include 2 elements, but it is {}'", ".", "\n", "format", "(", "target_size", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "\"Type of `target_size` is invalid. It should be list or tuple, but it is {}\"", "\n", ".", "format", "(", "type", "(", "target_size", ")", ")", ")", "\n", "\n", "", "self", ".", "target_size", "=", "target_size", "\n", "self", ".", "random_interp", "=", "random_interp", "\n", "self", ".", "interps", "=", "[", "cv2", ".", "INTER_NEAREST", ",", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_CUBIC", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.Resize.__call__": [[107, 122], ["data[].append", "paddleseg.transforms.functional.resize", "data.get", "numpy.random.choice", "paddleseg.transforms.functional.resize", "paddleseg.transforms.functional.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "random_interp", ":", "\n", "            ", "interp", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "interps", ")", "\n", "", "else", ":", "\n", "            ", "interp", "=", "cv2", ".", "INTER_LINEAR", "\n", "", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "resize", "(", "data", "[", "'img'", "]", ",", "self", ".", "target_size", ",", "interp", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "self", ".", "target_size", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "self", ".", "target_size", ",", "\n", "interp", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomResize.__init__": [[134, 157], ["isinstance", "isinstance", "len", "ValueError", "TypeError", "isinstance", "isinstance", "TypeError", "len", "ValueError", "type", "type"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", "=", "None", ",", "scale", "=", "None", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "list", ")", "or", "isinstance", "(", "size", ",", "tuple", ")", ":", "\n", "            ", "if", "len", "(", "size", ")", "!=", "2", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'`size` should include 2 elements, but it is {}'", ".", "format", "(", "\n", "size", ")", ")", "\n", "", "", "elif", "size", "is", "not", "None", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "\"Type of `size` is invalid. It should be list or tuple, but it is {}\"", "\n", ".", "format", "(", "type", "(", "size", ")", ")", ")", "\n", "\n", "", "if", "scale", "is", "not", "None", ":", "\n", "            ", "if", "isinstance", "(", "scale", ",", "list", ")", "or", "isinstance", "(", "scale", ",", "tuple", ")", ":", "\n", "                ", "if", "len", "(", "scale", ")", "!=", "2", ":", "\n", "                    ", "raise", "ValueError", "(", "\n", "'`scale` should include 2 elements, but it is {}'", ".", "\n", "format", "(", "scale", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"Type of `scale` is invalid. It should be list or tuple, but it is {}\"", "\n", ".", "format", "(", "type", "(", "scale", ")", ")", ")", "\n", "", "", "self", ".", "size", "=", "size", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomResize.__call__": [[158, 180], ["int", "int", "paddleseg.transforms.functional.resize", "data.get", "numpy.random.uniform", "max", "round", "round", "paddleseg.transforms.functional.resize", "paddleseg.transforms.functional.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "h", ",", "w", "=", "data", "[", "'img'", "]", ".", "shape", "[", ":", "2", "]", "\n", "if", "self", ".", "scale", "is", "not", "None", ":", "\n", "            ", "scale", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "scale", "[", "0", "]", ",", "self", ".", "scale", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "scale", "=", "1.", "\n", "", "if", "self", ".", "size", "is", "not", "None", ":", "\n", "            ", "scale_factor", "=", "max", "(", "self", ".", "size", "[", "0", "]", "/", "w", ",", "self", ".", "size", "[", "1", "]", "/", "h", ")", "\n", "", "else", ":", "\n", "            ", "scale_factor", "=", "1", "\n", "", "scale", "=", "scale", "*", "scale_factor", "\n", "\n", "w", "=", "int", "(", "round", "(", "w", "*", "scale", ")", ")", "\n", "h", "=", "int", "(", "round", "(", "h", "*", "scale", ")", ")", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "resize", "(", "data", "[", "'img'", "]", ",", "(", "w", ",", "h", ")", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "(", "w", ",", "h", ")", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "(", "w", ",", "h", ")", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.ResizeByLong.__init__": [[191, 193], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "long_size", ")", ":", "\n", "        ", "self", ".", "long_size", "=", "long_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.ResizeByLong.__call__": [[194, 204], ["data[].append", "paddleseg.transforms.functional.resize_long", "data.get", "paddleseg.transforms.functional.resize_long", "paddleseg.transforms.functional.resize_long"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "resize_long", "(", "data", "[", "'img'", "]", ",", "self", ".", "long_size", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize_long", "(", "data", "[", "key", "]", ",", "self", ".", "long_size", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize_long", "(", "data", "[", "key", "]", ",", "self", ".", "long_size", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.ResizeByShort.__init__": [[215, 217], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "short_size", ")", ":", "\n", "        ", "self", ".", "short_size", "=", "short_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.ResizeByShort.__call__": [[218, 228], ["data[].append", "paddleseg.transforms.functional.resize_short", "data.get", "paddleseg.transforms.functional.resize_short", "paddleseg.transforms.functional.resize_short"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_short", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_short", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_short"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "resize_short", "(", "data", "[", "'img'", "]", ",", "self", ".", "short_size", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize_short", "(", "data", "[", "key", "]", ",", "self", ".", "short_size", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize_short", "(", "data", "[", "key", "]", ",", "self", ".", "short_size", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.ResizeToIntMult.__init__": [[236, 238], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mult_int", "=", "32", ")", ":", "\n", "        ", "self", ".", "mult_int", "=", "mult_int", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.ResizeToIntMult.__call__": [[239, 254], ["data[].append", "paddleseg.transforms.functional.resize", "data.get", "paddleseg.transforms.functional.resize", "paddleseg.transforms.functional.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "\n", "h", ",", "w", "=", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "rw", "=", "w", "-", "w", "%", "self", ".", "mult_int", "\n", "rh", "=", "h", "-", "h", "%", "self", ".", "mult_int", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "resize", "(", "data", "[", "'img'", "]", ",", "(", "rw", ",", "rh", ")", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "(", "rw", ",", "rh", ")", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "(", "rw", ",", "rh", ")", ")", "\n", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.Normalize.__init__": [[269, 281], ["ValueError", "reduce", "ValueError", "isinstance", "isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mean", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "std", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "if", "not", "(", "isinstance", "(", "self", ".", "mean", ",", "\n", "(", "list", ",", "tuple", ")", ")", "and", "isinstance", "(", "self", ".", "std", ",", "\n", "(", "list", ",", "tuple", ")", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"{}: input type is invalid. It should be list or tuple\"", ".", "format", "(", "\n", "self", ")", ")", "\n", "", "from", "functools", "import", "reduce", "\n", "if", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "*", "y", ",", "self", ".", "std", ")", "==", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'{}: std is invalid!'", ".", "format", "(", "self", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.Normalize.__call__": [[282, 292], ["paddleseg.transforms.functional.normalize", "numpy.array", "numpy.array", "data.get", "paddleseg.transforms.functional.normalize", "data.get", "paddleseg.transforms.functional.normalize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize"], ["", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "mean", "=", "np", ".", "array", "(", "self", ".", "mean", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", ":", "]", "\n", "std", "=", "np", ".", "array", "(", "self", ".", "std", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", ":", "]", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "normalize", "(", "data", "[", "'img'", "]", ",", "mean", ",", "std", ")", "\n", "if", "'fg'", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "data", "[", "'fg'", "]", "=", "functional", ".", "normalize", "(", "data", "[", "'fg'", "]", ",", "mean", ",", "std", ")", "\n", "", "if", "'bg'", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "data", "[", "'bg'", "]", "=", "functional", ".", "normalize", "(", "data", "[", "'bg'", "]", ",", "mean", ",", "std", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomCropByAlpha.__init__": [[305, 309], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "crop_size", "=", "(", "(", "320", ",", "320", ")", ",", "(", "480", ",", "480", ")", ",", "(", "640", ",", "640", ")", ")", ",", "\n", "prob", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "prob", "=", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomCropByAlpha.__call__": [[310, 344], ["numpy.random.randint", "min", "min", "data.get", "numpy.random.rand", "numpy.where", "numpy.random.randint", "max", "max", "len", "len", "len", "numpy.random.randint", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "idex", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "len", "(", "self", ".", "crop_size", ")", ")", "\n", "crop_w", ",", "crop_h", "=", "self", ".", "crop_size", "[", "idex", "]", "\n", "\n", "img_h", "=", "data", "[", "'img'", "]", ".", "shape", "[", "0", "]", "\n", "img_w", "=", "data", "[", "'img'", "]", ".", "shape", "[", "1", "]", "\n", "if", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "prob", ":", "\n", "            ", "crop_center", "=", "np", ".", "where", "(", "(", "data", "[", "'alpha'", "]", ">", "0", ")", "&", "(", "data", "[", "'alpha'", "]", "<", "255", ")", ")", "\n", "center_h_array", ",", "center_w_array", "=", "crop_center", "\n", "if", "len", "(", "center_h_array", ")", "==", "0", ":", "\n", "                ", "return", "data", "\n", "", "rand_ind", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "center_h_array", ")", ")", "\n", "center_h", "=", "center_h_array", "[", "rand_ind", "]", "\n", "center_w", "=", "center_w_array", "[", "rand_ind", "]", "\n", "delta_h", "=", "crop_h", "//", "2", "\n", "delta_w", "=", "crop_w", "//", "2", "\n", "start_h", "=", "max", "(", "0", ",", "center_h", "-", "delta_h", ")", "\n", "start_w", "=", "max", "(", "0", ",", "center_w", "-", "delta_w", ")", "\n", "", "else", ":", "\n", "            ", "start_h", "=", "0", "\n", "start_w", "=", "0", "\n", "if", "img_h", ">", "crop_h", ":", "\n", "                ", "start_h", "=", "np", ".", "random", ".", "randint", "(", "img_h", "-", "crop_h", "+", "1", ")", "\n", "", "if", "img_w", ">", "crop_w", ":", "\n", "                ", "start_w", "=", "np", ".", "random", ".", "randint", "(", "img_w", "-", "crop_w", "+", "1", ")", "\n", "\n", "", "", "end_h", "=", "min", "(", "img_h", ",", "start_h", "+", "crop_h", ")", "\n", "end_w", "=", "min", "(", "img_w", ",", "start_w", "+", "crop_w", ")", "\n", "\n", "data", "[", "'img'", "]", "=", "data", "[", "'img'", "]", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "data", "[", "key", "]", "=", "data", "[", "key", "]", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomCrop.__init__": [[355, 359], ["isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "crop_size", "=", "(", "(", "320", ",", "320", ")", ",", "(", "480", ",", "480", ")", ",", "(", "640", ",", "640", ")", ")", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "crop_size", "[", "0", "]", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "crop_size", "=", "[", "crop_size", "]", "\n", "", "self", ".", "crop_size", "=", "crop_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomCrop.__call__": [[360, 380], ["numpy.random.randint", "min", "min", "data.get", "numpy.random.randint", "numpy.random.randint", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "idex", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "len", "(", "self", ".", "crop_size", ")", ")", "\n", "crop_w", ",", "crop_h", "=", "self", ".", "crop_size", "[", "idex", "]", "\n", "img_h", ",", "img_w", "=", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "\n", "start_h", "=", "0", "\n", "start_w", "=", "0", "\n", "if", "img_h", ">", "crop_h", ":", "\n", "            ", "start_h", "=", "np", ".", "random", ".", "randint", "(", "img_h", "-", "crop_h", "+", "1", ")", "\n", "", "if", "img_w", ">", "crop_w", ":", "\n", "            ", "start_w", "=", "np", ".", "random", ".", "randint", "(", "img_w", "-", "crop_w", "+", "1", ")", "\n", "\n", "", "end_h", "=", "min", "(", "img_h", ",", "start_h", "+", "crop_h", ")", "\n", "end_w", "=", "min", "(", "img_w", ",", "start_w", "+", "crop_w", ")", "\n", "\n", "data", "[", "'img'", "]", "=", "data", "[", "'img'", "]", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "data", "[", "key", "]", "=", "data", "[", "key", "]", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.LimitLong.__init__": [[400, 418], ["isinstance", "TypeError", "isinstance", "TypeError", "ValueError", "type", "type"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "max_long", "=", "None", ",", "min_long", "=", "None", ")", ":", "\n", "        ", "if", "max_long", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "max_long", ",", "int", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"Type of `max_long` is invalid. It should be int, but it is {}\"", "\n", ".", "format", "(", "type", "(", "max_long", ")", ")", ")", "\n", "", "", "if", "min_long", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "min_long", ",", "int", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"Type of `min_long` is invalid. It should be int, but it is {}\"", "\n", ".", "format", "(", "type", "(", "min_long", ")", ")", ")", "\n", "", "", "if", "(", "max_long", "is", "not", "None", ")", "and", "(", "min_long", "is", "not", "None", ")", ":", "\n", "            ", "if", "min_long", ">", "max_long", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'`max_long should not smaller than min_long, but they are {} and {}'", "\n", ".", "format", "(", "max_long", ",", "min_long", ")", ")", "\n", "", "", "self", ".", "max_long", "=", "max_long", "\n", "self", ".", "min_long", "=", "min_long", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.LimitLong.__call__": [[419, 439], ["max", "data[].append", "paddleseg.transforms.functional.resize_long", "data.get", "paddleseg.transforms.functional.resize_long", "paddleseg.transforms.functional.resize_long"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "h", ",", "w", "=", "data", "[", "'img'", "]", ".", "shape", "[", ":", "2", "]", "\n", "long_edge", "=", "max", "(", "h", ",", "w", ")", "\n", "target", "=", "long_edge", "\n", "if", "(", "self", ".", "max_long", "is", "not", "None", ")", "and", "(", "long_edge", ">", "self", ".", "max_long", ")", ":", "\n", "            ", "target", "=", "self", ".", "max_long", "\n", "", "elif", "(", "self", ".", "min_long", "is", "not", "None", ")", "and", "(", "long_edge", "<", "self", ".", "min_long", ")", ":", "\n", "            ", "target", "=", "self", ".", "min_long", "\n", "\n", "", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "if", "target", "!=", "long_edge", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "functional", ".", "resize_long", "(", "data", "[", "'img'", "]", ",", "target", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "                ", "if", "key", "==", "'trimap'", ":", "\n", "                    ", "data", "[", "key", "]", "=", "functional", ".", "resize_long", "(", "data", "[", "key", "]", ",", "target", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                    ", "data", "[", "key", "]", "=", "functional", ".", "resize_long", "(", "data", "[", "key", "]", ",", "target", ")", "\n", "\n", "", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.LimitShort.__init__": [[459, 477], ["isinstance", "TypeError", "isinstance", "TypeError", "ValueError", "type", "type"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "max_short", "=", "None", ",", "min_short", "=", "None", ")", ":", "\n", "        ", "if", "max_short", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "max_short", ",", "int", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"Type of `max_short` is invalid. It should be int, but it is {}\"", "\n", ".", "format", "(", "type", "(", "max_short", ")", ")", ")", "\n", "", "", "if", "min_short", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "min_short", ",", "int", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"Type of `min_short` is invalid. It should be int, but it is {}\"", "\n", ".", "format", "(", "type", "(", "min_short", ")", ")", ")", "\n", "", "", "if", "(", "max_short", "is", "not", "None", ")", "and", "(", "min_short", "is", "not", "None", ")", ":", "\n", "            ", "if", "min_short", ">", "max_short", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'`max_short should not smaller than min_short, but they are {} and {}'", "\n", ".", "format", "(", "max_short", ",", "min_short", ")", ")", "\n", "", "", "self", ".", "max_short", "=", "max_short", "\n", "self", ".", "min_short", "=", "min_short", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.LimitShort.__call__": [[478, 498], ["min", "data[].append", "paddleseg.transforms.functional.resize_short", "data.get", "paddleseg.transforms.functional.resize_short", "paddleseg.transforms.functional.resize_short"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_short", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_short", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_short"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "h", ",", "w", "=", "data", "[", "'img'", "]", ".", "shape", "[", ":", "2", "]", "\n", "short_edge", "=", "min", "(", "h", ",", "w", ")", "\n", "target", "=", "short_edge", "\n", "if", "(", "self", ".", "max_short", "is", "not", "None", ")", "and", "(", "short_edge", ">", "self", ".", "max_short", ")", ":", "\n", "            ", "target", "=", "self", ".", "max_short", "\n", "", "elif", "(", "self", ".", "min_short", "is", "not", "None", ")", "and", "(", "short_edge", "<", "self", ".", "min_short", ")", ":", "\n", "            ", "target", "=", "self", ".", "min_short", "\n", "\n", "", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "if", "target", "!=", "short_edge", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "functional", ".", "resize_short", "(", "data", "[", "'img'", "]", ",", "target", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "                ", "if", "key", "==", "'trimap'", ":", "\n", "                    ", "data", "[", "key", "]", "=", "functional", ".", "resize_short", "(", "data", "[", "key", "]", ",", "target", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                    ", "data", "[", "key", "]", "=", "functional", ".", "resize_short", "(", "data", "[", "key", "]", ",", "target", ")", "\n", "\n", "", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomHorizontalFlip.__init__": [[509, 511], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "prob", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "prob", "=", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomHorizontalFlip.__call__": [[512, 519], ["random.random", "paddleseg.transforms.functional.horizontal_flip", "data.get", "paddleseg.transforms.functional.horizontal_flip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.horizontal_flip", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.horizontal_flip"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "functional", ".", "horizontal_flip", "(", "data", "[", "'img'", "]", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "horizontal_flip", "(", "data", "[", "key", "]", ")", "\n", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomBlur.__init__": [[530, 532], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "prob", "=", "0.1", ")", ":", "\n", "        ", "self", ".", "prob", "=", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomBlur.__call__": [[533, 555], ["int", "numpy.random.randint", "numpy.random.randint", "cv2.GaussianBlur", "data.get", "cv2.GaussianBlur"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "prob", "<=", "0", ":", "\n", "            ", "n", "=", "0", "\n", "", "elif", "self", ".", "prob", ">=", "1", ":", "\n", "            ", "n", "=", "1", "\n", "", "else", ":", "\n", "            ", "n", "=", "int", "(", "1.0", "/", "self", ".", "prob", ")", "\n", "", "if", "n", ">", "0", ":", "\n", "            ", "if", "np", ".", "random", ".", "randint", "(", "0", ",", "n", ")", "==", "0", ":", "\n", "                ", "radius", "=", "np", ".", "random", ".", "randint", "(", "3", ",", "10", ")", "\n", "if", "radius", "%", "2", "!=", "1", ":", "\n", "                    ", "radius", "=", "radius", "+", "1", "\n", "", "if", "radius", ">", "9", ":", "\n", "                    ", "radius", "=", "9", "\n", "", "data", "[", "'img'", "]", "=", "cv2", ".", "GaussianBlur", "(", "data", "[", "'img'", "]", ",", "(", "radius", ",", "radius", ")", ",", "0", ",", "\n", "0", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "                    ", "if", "key", "==", "'trimap'", ":", "\n", "                        ", "continue", "\n", "", "data", "[", "key", "]", "=", "cv2", ".", "GaussianBlur", "(", "data", "[", "key", "]", ",", "(", "radius", ",", "radius", ")", ",", "0", ",", "\n", "0", ")", "\n", "", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomDistort.__init__": [[573, 590], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "brightness_range", "=", "0.5", ",", "\n", "brightness_prob", "=", "0.5", ",", "\n", "contrast_range", "=", "0.5", ",", "\n", "contrast_prob", "=", "0.5", ",", "\n", "saturation_range", "=", "0.5", ",", "\n", "saturation_prob", "=", "0.5", ",", "\n", "hue_range", "=", "18", ",", "\n", "hue_prob", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "brightness_range", "=", "brightness_range", "\n", "self", ".", "brightness_prob", "=", "brightness_prob", "\n", "self", ".", "contrast_range", "=", "contrast_range", "\n", "self", ".", "contrast_prob", "=", "contrast_prob", "\n", "self", ".", "saturation_range", "=", "saturation_range", "\n", "self", ".", "saturation_prob", "=", "saturation_prob", "\n", "self", ".", "hue_range", "=", "hue_range", "\n", "self", ".", "hue_prob", "=", "hue_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomDistort.__call__": [[591, 654], ["random.shuffle", "data[].astype", "PIL.Image.fromarray", "range", "numpy.asarray", "data.get", "len", "numpy.random.uniform", "data[].astype", "PIL.Image.fromarray", "range", "numpy.asarray", "len", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "brightness_lower", "=", "1", "-", "self", ".", "brightness_range", "\n", "brightness_upper", "=", "1", "+", "self", ".", "brightness_range", "\n", "contrast_lower", "=", "1", "-", "self", ".", "contrast_range", "\n", "contrast_upper", "=", "1", "+", "self", ".", "contrast_range", "\n", "saturation_lower", "=", "1", "-", "self", ".", "saturation_range", "\n", "saturation_upper", "=", "1", "+", "self", ".", "saturation_range", "\n", "hue_lower", "=", "-", "self", ".", "hue_range", "\n", "hue_upper", "=", "self", ".", "hue_range", "\n", "ops", "=", "[", "\n", "functional", ".", "brightness", ",", "functional", ".", "contrast", ",", "functional", ".", "saturation", ",", "\n", "functional", ".", "hue", "\n", "]", "\n", "random", ".", "shuffle", "(", "ops", ")", "\n", "params_dict", "=", "{", "\n", "'brightness'", ":", "{", "\n", "'brightness_lower'", ":", "brightness_lower", ",", "\n", "'brightness_upper'", ":", "brightness_upper", "\n", "}", ",", "\n", "'contrast'", ":", "{", "\n", "'contrast_lower'", ":", "contrast_lower", ",", "\n", "'contrast_upper'", ":", "contrast_upper", "\n", "}", ",", "\n", "'saturation'", ":", "{", "\n", "'saturation_lower'", ":", "saturation_lower", ",", "\n", "'saturation_upper'", ":", "saturation_upper", "\n", "}", ",", "\n", "'hue'", ":", "{", "\n", "'hue_lower'", ":", "hue_lower", ",", "\n", "'hue_upper'", ":", "hue_upper", "\n", "}", "\n", "}", "\n", "prob_dict", "=", "{", "\n", "'brightness'", ":", "self", ".", "brightness_prob", ",", "\n", "'contrast'", ":", "self", ".", "contrast_prob", ",", "\n", "'saturation'", ":", "self", ".", "saturation_prob", ",", "\n", "'hue'", ":", "self", ".", "hue_prob", "\n", "}", "\n", "\n", "im", "=", "data", "[", "'img'", "]", ".", "astype", "(", "'uint8'", ")", "\n", "im", "=", "Image", ".", "fromarray", "(", "im", ")", "\n", "for", "id", "in", "range", "(", "len", "(", "ops", ")", ")", ":", "\n", "            ", "params", "=", "params_dict", "[", "ops", "[", "id", "]", ".", "__name__", "]", "\n", "params", "[", "'im'", "]", "=", "im", "\n", "prob", "=", "prob_dict", "[", "ops", "[", "id", "]", ".", "__name__", "]", "\n", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<", "prob", ":", "\n", "                ", "im", "=", "ops", "[", "id", "]", "(", "**", "params", ")", "\n", "", "", "data", "[", "'img'", "]", "=", "np", ".", "asarray", "(", "im", ")", "\n", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "in", "[", "'alpha'", ",", "'trimap'", "]", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "im", "=", "data", "[", "key", "]", ".", "astype", "(", "'uint8'", ")", "\n", "im", "=", "Image", ".", "fromarray", "(", "im", ")", "\n", "for", "id", "in", "range", "(", "len", "(", "ops", ")", ")", ":", "\n", "                    ", "params", "=", "params_dict", "[", "ops", "[", "id", "]", ".", "__name__", "]", "\n", "params", "[", "'im'", "]", "=", "im", "\n", "prob", "=", "prob_dict", "[", "ops", "[", "id", "]", ".", "__name__", "]", "\n", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<", "prob", ":", "\n", "                        ", "im", "=", "ops", "[", "id", "]", "(", "**", "params", ")", "\n", "", "", "data", "[", "key", "]", "=", "np", ".", "asarray", "(", "im", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.Padding.__init__": [[672, 685], ["isinstance", "isinstance", "TypeError", "len", "ValueError", "type"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "target_size", ",", "im_padding_value", "=", "(", "127.5", ",", "127.5", ",", "127.5", ")", ")", ":", "\n", "        ", "if", "isinstance", "(", "target_size", ",", "list", ")", "or", "isinstance", "(", "target_size", ",", "tuple", ")", ":", "\n", "            ", "if", "len", "(", "target_size", ")", "!=", "2", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'`target_size` should include 2 elements, but it is {}'", ".", "\n", "format", "(", "target_size", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "\"Type of target_size is invalid. It should be list or tuple, now is {}\"", "\n", ".", "format", "(", "type", "(", "target_size", ")", ")", ")", "\n", "\n", "", "self", ".", "target_size", "=", "target_size", "\n", "self", ".", "im_padding_value", "=", "im_padding_value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.Padding.__call__": [[686, 718], ["max", "max", "data[].append", "cv2.copyMakeBorder", "data.get", "cv2.copyMakeBorder"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "im_height", ",", "im_width", "=", "data", "[", "'img'", "]", ".", "shape", "[", "0", "]", ",", "data", "[", "'img'", "]", ".", "shape", "[", "1", "]", "\n", "target_height", "=", "self", ".", "target_size", "[", "1", "]", "\n", "target_width", "=", "self", ".", "target_size", "[", "0", "]", "\n", "pad_height", "=", "max", "(", "0", ",", "target_height", "-", "im_height", ")", "\n", "pad_width", "=", "max", "(", "0", ",", "target_width", "-", "im_width", ")", "\n", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'padding'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "if", "(", "pad_height", "==", "0", ")", "and", "(", "pad_width", "==", "0", ")", ":", "\n", "            ", "return", "data", "\n", "", "else", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "cv2", ".", "copyMakeBorder", "(", "\n", "data", "[", "'img'", "]", ",", "\n", "0", ",", "\n", "pad_height", ",", "\n", "0", ",", "\n", "pad_width", ",", "\n", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "value", "=", "self", ".", "im_padding_value", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "                ", "if", "key", "in", "[", "'trimap'", ",", "'alpha'", "]", ":", "\n", "                    ", "value", "=", "0", "\n", "", "else", ":", "\n", "                    ", "value", "=", "self", ".", "im_padding_value", "\n", "", "data", "[", "key", "]", "=", "cv2", ".", "copyMakeBorder", "(", "\n", "data", "[", "key", "]", ",", "\n", "0", ",", "\n", "pad_height", ",", "\n", "0", ",", "\n", "pad_width", ",", "\n", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "value", "=", "value", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomSharpen.__init__": [[722, 729], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "prob", "=", "0.1", ")", ":", "\n", "        ", "if", "prob", "<", "0", ":", "\n", "            ", "self", ".", "prob", "=", "0", "\n", "", "elif", "prob", ">", "1", ":", "\n", "            ", "self", ".", "prob", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "prob", "=", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomSharpen.__call__": [[730, 745], ["numpy.random.choice", "numpy.random.uniform", "cv2.GaussianBlur", "cv2.addWeighted", "data.get", "numpy.random.rand", "cv2.GaussianBlur", "cv2.addWeighted"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "self", ".", "prob", ":", "\n", "            ", "return", "data", "\n", "\n", "", "radius", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "3", ",", "5", ",", "7", ",", "9", "]", ")", "\n", "w", "=", "np", ".", "random", ".", "uniform", "(", "0.1", ",", "0.5", ")", "\n", "blur_img", "=", "cv2", ".", "GaussianBlur", "(", "data", "[", "'img'", "]", ",", "(", "radius", ",", "radius", ")", ",", "5", ")", "\n", "data", "[", "'img'", "]", "=", "cv2", ".", "addWeighted", "(", "data", "[", "'img'", "]", ",", "1", "+", "w", ",", "blur_img", ",", "-", "w", ",", "0", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", "or", "key", "==", "'alpha'", ":", "\n", "                ", "continue", "\n", "", "blur_img", "=", "cv2", ".", "GaussianBlur", "(", "data", "[", "key", "]", ",", "(", "0", ",", "0", ")", ",", "5", ")", "\n", "data", "[", "key", "]", "=", "cv2", ".", "addWeighted", "(", "data", "[", "key", "]", ",", "1.5", ",", "blur_img", ",", "-", "0.5", ",", "0", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomNoise.__init__": [[749, 756], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "prob", "=", "0.1", ")", ":", "\n", "        ", "if", "prob", "<", "0", ":", "\n", "            ", "self", ".", "prob", "=", "0", "\n", "", "elif", "prob", ">", "1", ":", "\n", "            ", "self", ".", "prob", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "prob", "=", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomNoise.__call__": [[757, 767], ["numpy.random.uniform", "numpy.random.uniform", "numpy.clip", "numpy.random.rand", "numpy.random.normal"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "self", ".", "prob", ":", "\n", "            ", "return", "data", "\n", "", "mean", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "0.04", ")", "\n", "var", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "0.001", ")", "\n", "noise", "=", "np", ".", "random", ".", "normal", "(", "mean", ",", "var", "**", "0.5", ",", "data", "[", "'img'", "]", ".", "shape", ")", "*", "255", "\n", "data", "[", "'img'", "]", "=", "data", "[", "'img'", "]", "+", "noise", "\n", "data", "[", "'img'", "]", "=", "np", ".", "clip", "(", "data", "[", "'img'", "]", ",", "0", ",", "255", ")", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomReJpeg.__init__": [[771, 778], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "prob", "=", "0.1", ")", ":", "\n", "        ", "if", "prob", "<", "0", ":", "\n", "            ", "self", ".", "prob", "=", "0", "\n", "", "elif", "prob", ">", "1", ":", "\n", "            ", "self", ".", "prob", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "prob", "=", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.transforms.RandomReJpeg.__call__": [[779, 792], ["numpy.random.randint", "data[].astype", "os.path.join", "cv2.imwrite", "cv2.imread", "numpy.random.rand", "str", "os.getpid", "int"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "self", ".", "prob", ":", "\n", "            ", "return", "data", "\n", "", "q", "=", "np", ".", "random", ".", "randint", "(", "70", ",", "95", ")", "\n", "img", "=", "data", "[", "'img'", "]", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "# Ensure no conflicts between processes", "\n", "tmp_name", "=", "str", "(", "os", ".", "getpid", "(", ")", ")", "+", "'.jpg'", "\n", "tmp_name", "=", "os", ".", "path", ".", "join", "(", "seg_env", ".", "TMP_HOME", ",", "tmp_name", ")", "\n", "cv2", ".", "imwrite", "(", "tmp_name", ",", "img", ",", "[", "int", "(", "cv2", ".", "IMWRITE_JPEG_QUALITY", ")", ",", "q", "]", ")", "\n", "data", "[", "'img'", "]", "=", "cv2", ".", "imread", "(", "tmp_name", ")", "\n", "\n", "return", "data", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.predict.parse_args": [[28, 66], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The image to predict, which can be a path of image, or a file list containing image paths, or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.predict.main": [[68, 103], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "transforms.Compose", "utils.get_image_list", "paddleseg.utils.logger.info", "core.predict", "RuntimeError", "utils.get_image_list", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list"], ["action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# custom color map", "\n", "parser", ".", "add_argument", "(", "\n", "'--custom_color'", ",", "\n", "dest", "=", "'custom_color'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Save images with a custom color map. Default: None, use paddleseg\\'s default color map.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.train.parse_args": [[31, 113], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "="]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.train.main": [[115, 170], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "core.train", "paddle.seed", "paddle.seed", "numpy.random.seed", "random.seed", "RuntimeError", "RuntimeError", "paddleseg.utils.get_sys_env.items", "len", "ValueError", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train"], [")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.val.parse_args": [[27, 56], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.val.main": [[58, 94], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "core.evaluate", "RuntimeError", "RuntimeError", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.export.parse_args": [[28, 63], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the exported model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for export'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--without_argmax'", ",", "\n", "dest", "=", "'without_argmax'", ",", "\n", "help", "=", "'Do not add the argmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--with_softmax'", ",", "\n", "dest", "=", "'with_softmax'", ",", "\n", "help", "=", "'Add the softmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--input_shape\"", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "\"Export the model with fixed input shape, such as 1 3 1024 1024.\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.export.main": [[65, 106], ["paddleseg.cvlibs.Config", "paddle.jit.to_static.eval", "paddle.jit.to_static", "os.path.join", "paddle.jit.save", "os.path.join", "paddleseg.utils.logger.info", "paddle.load", "paddle.jit.to_static.set_dict", "paddleseg.utils.logger.info", "paddle.static.InputSpec", "open", "paddleseg.cvlibs.Config.val_dataset_config.get", "yaml.dump", "paddle.static.InputSpec"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["\n", "\n", "", "class", "SavedSegmentationNet", "(", "paddle", ".", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "net", ",", "without_argmax", "=", "False", ",", "with_softmax", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "post_processer", "=", "PostPorcesser", "(", "without_argmax", ",", "with_softmax", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "self", ".", "net", "(", "x", ")", "\n", "outs", "=", "self", ".", "post_processer", "(", "outs", ")", "\n", "return", "outs", "\n", "\n", "\n", "", "", "class", "PostPorcesser", "(", "paddle", ".", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "without_argmax", ",", "with_softmax", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "without_argmax", "=", "without_argmax", "\n", "self", ".", "with_softmax", "=", "with_softmax", "\n", "\n", "", "def", "forward", "(", "self", ",", "outs", ")", ":", "\n", "        ", "new_outs", "=", "[", "]", "\n", "for", "out", "in", "outs", ":", "\n", "            ", "if", "self", ".", "with_softmax", ":", "\n", "                ", "out", "=", "paddle", ".", "nn", ".", "functional", ".", "softmax", "(", "out", ",", "axis", "=", "1", ")", "\n", "", "if", "not", "self", ".", "without_argmax", ":", "\n", "                ", "out", "=", "paddle", ".", "argmax", "(", "out", ",", "axis", "=", "1", ")", "\n", "", "new_outs", ".", "append", "(", "out", ")", "\n", "", "return", "new_outs", "\n", "\n", "\n", "", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'PADDLESEG_EXPORT_STAGE'", "]", "=", "'True'", "\n", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "net", "=", "cfg", ".", "model", "\n", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "para_state_dict", "=", "paddle", ".", "load", "(", "args", ".", "model_path", ")", "\n", "net", ".", "set_dict", "(", "para_state_dict", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully.'", ")", "\n", "\n", "", "if", "args", ".", "input_shape", "is", "None", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.MSE.__init__": [[33, 36], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "mse_diffs", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.MSE.update": [[37, 66], ["float", "ValueError", "mask.sum", "numpy.ones_like"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ",", "trimap", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        update metric.\n        Args:\n            pred (np.ndarray): The value range is [0., 255.].\n            gt (np.ndarray): The value range is [0, 255].\n            trimap (np.ndarray, optional) The value is in {0, 128, 255}. Default: None.\n        \"\"\"", "\n", "if", "trimap", "is", "None", ":", "\n", "            ", "trimap", "=", "np", ".", "ones_like", "(", "gt", ")", "*", "128", "\n", "", "if", "not", "(", "pred", ".", "shape", "==", "gt", ".", "shape", "==", "trimap", ".", "shape", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of `pred`, `gt` and `trimap` should be equal. '", "\n", "'but they are {}, {} and {}'", ".", "format", "(", "pred", ".", "shape", ",", "gt", ".", "shape", ",", "\n", "trimap", ".", "shape", ")", ")", "\n", "", "pred", "[", "trimap", "==", "0", "]", "=", "0", "\n", "pred", "[", "trimap", "==", "255", "]", "=", "255", "\n", "\n", "mask", "=", "trimap", "==", "128", "\n", "pixels", "=", "float", "(", "mask", ".", "sum", "(", ")", ")", "\n", "pred", "=", "pred", "/", "255.", "\n", "gt", "=", "gt", "/", "255.", "\n", "diff", "=", "(", "pred", "-", "gt", ")", "*", "mask", "\n", "mse_diff", "=", "(", "diff", "**", "2", ")", ".", "sum", "(", ")", "/", "pixels", "if", "pixels", ">", "0", "else", "0", "\n", "\n", "self", ".", "mse_diffs", "+=", "mse_diff", "\n", "self", ".", "count", "+=", "1", "\n", "\n", "return", "mse_diff", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.MSE.evaluate": [[67, 70], ["None"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "mse", "=", "self", ".", "mse_diffs", "/", "self", ".", "count", "if", "self", ".", "count", ">", "0", "else", "0", "\n", "return", "mse", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.SAD.__init__": [[77, 80], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "sad_diffs", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.SAD.update": [[81, 110], ["numpy.abs().sum", "ValueError", "numpy.ones_like", "numpy.abs"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ",", "trimap", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        update metric.\n        Args:\n            pred (np.ndarray): The value range is [0., 255.].\n            gt (np.ndarray): The value range is [0., 255.].\n            trimap (np.ndarray, optional)L The value is in {0, 128, 255}. Default: None.\n        \"\"\"", "\n", "if", "trimap", "is", "None", ":", "\n", "            ", "trimap", "=", "np", ".", "ones_like", "(", "gt", ")", "*", "128", "\n", "", "if", "not", "(", "pred", ".", "shape", "==", "gt", ".", "shape", "==", "trimap", ".", "shape", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of `pred`, `gt` and `trimap` should be equal. '", "\n", "'but they are {}, {} and {}'", ".", "format", "(", "pred", ".", "shape", ",", "gt", ".", "shape", ",", "\n", "trimap", ".", "shape", ")", ")", "\n", "", "pred", "[", "trimap", "==", "0", "]", "=", "0", "\n", "pred", "[", "trimap", "==", "255", "]", "=", "255", "\n", "\n", "mask", "=", "trimap", "==", "128", "\n", "pred", "=", "pred", "/", "255.", "\n", "gt", "=", "gt", "/", "255.", "\n", "diff", "=", "(", "pred", "-", "gt", ")", "*", "mask", "\n", "sad_diff", "=", "(", "np", ".", "abs", "(", "diff", ")", ")", ".", "sum", "(", ")", "\n", "\n", "sad_diff", "/=", "1000", "\n", "self", ".", "sad_diffs", "+=", "sad_diff", "\n", "self", ".", "count", "+=", "1", "\n", "\n", "return", "sad_diff", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.SAD.evaluate": [[111, 114], ["None"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "sad", "=", "self", ".", "sad_diffs", "/", "self", ".", "count", "if", "self", ".", "count", ">", "0", "else", "0", "\n", "return", "sad", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.__init__": [[122, 125], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "grad_diffs", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.gaussian": [[126, 128], ["numpy.exp", "numpy.sqrt"], "methods", ["None"], ["", "def", "gaussian", "(", "self", ",", "x", ",", "sigma", ")", ":", "\n", "        ", "return", "np", ".", "exp", "(", "-", "x", "**", "2", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "/", "(", "sigma", "*", "np", ".", "sqrt", "(", "2", "*", "np", ".", "pi", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.dgaussian": [[129, 131], ["metric.Grad.gaussian"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.nonlocal2d.NonLocal2D.gaussian"], ["", "def", "dgaussian", "(", "self", ",", "x", ",", "sigma", ")", ":", "\n", "        ", "return", "-", "x", "*", "self", ".", "gaussian", "(", "x", ",", "sigma", ")", "/", "sigma", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.gauss_filter": [[132, 150], ["numpy.ceil", "int", "numpy.zeros", "range", "numpy.sqrt", "numpy.transpose", "range", "numpy.sqrt", "metric.Grad.gaussian", "metric.Grad.dgaussian", "numpy.log", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.nonlocal2d.NonLocal2D.gaussian", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.dgaussian", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "def", "gauss_filter", "(", "self", ",", "sigma", ",", "epsilon", "=", "1e-2", ")", ":", "\n", "        ", "half_size", "=", "np", ".", "ceil", "(", "\n", "sigma", "*", "np", ".", "sqrt", "(", "-", "2", "*", "np", ".", "log", "(", "np", ".", "sqrt", "(", "2", "*", "np", ".", "pi", ")", "*", "sigma", "*", "epsilon", ")", ")", ")", "\n", "size", "=", "int", "(", "2", "*", "half_size", "+", "1", ")", "\n", "\n", "# create filter in x axis", "\n", "filter_x", "=", "np", ".", "zeros", "(", "(", "size", ",", "size", ")", ")", "\n", "for", "i", "in", "range", "(", "size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "size", ")", ":", "\n", "                ", "filter_x", "[", "i", ",", "j", "]", "=", "self", ".", "gaussian", "(", "\n", "i", "-", "half_size", ",", "sigma", ")", "*", "self", ".", "dgaussian", "(", "j", "-", "half_size", ",", "sigma", ")", "\n", "\n", "# normalize filter", "\n", "", "", "norm", "=", "np", ".", "sqrt", "(", "(", "filter_x", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "filter_x", "=", "filter_x", "/", "norm", "\n", "filter_y", "=", "np", ".", "transpose", "(", "filter_x", ")", "\n", "\n", "return", "filter_x", ",", "filter_y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.gauss_gradient": [[151, 158], ["metric.Grad.gauss_filter", "cv2.filter2D", "cv2.filter2D", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.gauss_filter"], ["", "def", "gauss_gradient", "(", "self", ",", "img", ",", "sigma", ")", ":", "\n", "        ", "filter_x", ",", "filter_y", "=", "self", ".", "gauss_filter", "(", "sigma", ")", "\n", "img_filtered_x", "=", "cv2", ".", "filter2D", "(", "\n", "img", ",", "-", "1", ",", "filter_x", ",", "borderType", "=", "cv2", ".", "BORDER_REPLICATE", ")", "\n", "img_filtered_y", "=", "cv2", ".", "filter2D", "(", "\n", "img", ",", "-", "1", ",", "filter_y", ",", "borderType", "=", "cv2", ".", "BORDER_REPLICATE", ")", "\n", "return", "np", ".", "sqrt", "(", "img_filtered_x", "**", "2", "+", "img_filtered_y", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.update": [[159, 197], ["gt.astype.astype.squeeze", "pred.astype.astype.squeeze", "gt.astype.astype.astype", "pred.astype.astype.astype", "numpy.zeros_like", "numpy.zeros_like", "cv2.normalize", "cv2.normalize", "metric.Grad.gauss_gradient().astype", "metric.Grad.gauss_gradient().astype", "ValueError", "numpy.ones_like", "metric.Grad.gauss_gradient", "metric.Grad.gauss_gradient"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.gauss_gradient", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.gauss_gradient"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ",", "trimap", "=", "None", ",", "sigma", "=", "1.4", ")", ":", "\n", "        ", "\"\"\"\n        update metric.\n        Args:\n            pred (np.ndarray): The value range is [0., 1.].\n            gt (np.ndarray): The value range is [0, 255].\n            trimap (np.ndarray, optional)L The value is in {0, 128, 255}. Default: None.\n            sigma (float, optional): Standard deviation of the gaussian kernel. Default: 1.4.\n        \"\"\"", "\n", "if", "trimap", "is", "None", ":", "\n", "            ", "trimap", "=", "np", ".", "ones_like", "(", "gt", ")", "*", "128", "\n", "", "if", "not", "(", "pred", ".", "shape", "==", "gt", ".", "shape", "==", "trimap", ".", "shape", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of `pred`, `gt` and `trimap` should be equal. '", "\n", "'but they are {}, {} and {}'", ".", "format", "(", "pred", ".", "shape", ",", "gt", ".", "shape", ",", "\n", "trimap", ".", "shape", ")", ")", "\n", "", "pred", "[", "trimap", "==", "0", "]", "=", "0", "\n", "pred", "[", "trimap", "==", "255", "]", "=", "255", "\n", "\n", "gt", "=", "gt", ".", "squeeze", "(", ")", "\n", "pred", "=", "pred", ".", "squeeze", "(", ")", "\n", "gt", "=", "gt", ".", "astype", "(", "np", ".", "float64", ")", "\n", "pred", "=", "pred", ".", "astype", "(", "np", ".", "float64", ")", "\n", "gt_normed", "=", "np", ".", "zeros_like", "(", "gt", ")", "\n", "pred_normed", "=", "np", ".", "zeros_like", "(", "pred", ")", "\n", "cv2", ".", "normalize", "(", "gt", ",", "gt_normed", ",", "1.", ",", "0.", ",", "cv2", ".", "NORM_MINMAX", ")", "\n", "cv2", ".", "normalize", "(", "pred", ",", "pred_normed", ",", "1.", ",", "0.", ",", "cv2", ".", "NORM_MINMAX", ")", "\n", "\n", "gt_grad", "=", "self", ".", "gauss_gradient", "(", "gt_normed", ",", "sigma", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "pred_grad", "=", "self", ".", "gauss_gradient", "(", "pred_normed", ",", "sigma", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "grad_diff", "=", "(", "(", "gt_grad", "-", "pred_grad", ")", "**", "2", "*", "(", "trimap", "==", "128", ")", ")", ".", "sum", "(", ")", "\n", "\n", "grad_diff", "/=", "1000", "\n", "self", ".", "grad_diffs", "+=", "grad_diff", "\n", "self", ".", "count", "+=", "1", "\n", "\n", "return", "grad_diff", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Grad.evaluate": [[198, 201], ["None"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "grad", "=", "self", ".", "grad_diffs", "/", "self", ".", "count", "if", "self", ".", "count", ">", "0", "else", "0", "\n", "return", "grad", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Conn.__init__": [[209, 212], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "conn_diffs", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Conn.update": [[213, 275], ["gt.squeeze.squeeze.squeeze", "pred.squeeze.squeeze.squeeze", "numpy.arange", "range", "numpy.sum", "ValueError", "gt.squeeze.squeeze.astype", "pred.squeeze.squeeze.astype", "numpy.ones_like", "len", "cv2.connectedComponentsWithStats", "numpy.zeros_like", "numpy.ones_like", "len", "numpy.argmax", "numpy.abs"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ",", "trimap", "=", "None", ",", "step", "=", "0.1", ")", ":", "\n", "        ", "\"\"\"\n        update metric.\n        Args:\n            pred (np.ndarray): The value range is [0., 1.].\n            gt (np.ndarray): The value range is [0, 255].\n            trimap (np.ndarray, optional)L The value is in {0, 128, 255}. Default: None.\n            step (float, optional): Step of threshold when computing intersection between\n            `gt` and `pred`. Default: 0.1.\n        \"\"\"", "\n", "if", "trimap", "is", "None", ":", "\n", "            ", "trimap", "=", "np", ".", "ones_like", "(", "gt", ")", "*", "128", "\n", "", "if", "not", "(", "pred", ".", "shape", "==", "gt", ".", "shape", "==", "trimap", ".", "shape", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of `pred`, `gt` and `trimap` should be equal. '", "\n", "'but they are {}, {} and {}'", ".", "format", "(", "pred", ".", "shape", ",", "gt", ".", "shape", ",", "\n", "trimap", ".", "shape", ")", ")", "\n", "", "pred", "[", "trimap", "==", "0", "]", "=", "0", "\n", "pred", "[", "trimap", "==", "255", "]", "=", "255", "\n", "\n", "gt", "=", "gt", ".", "squeeze", "(", ")", "\n", "pred", "=", "pred", ".", "squeeze", "(", ")", "\n", "gt", "=", "gt", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "pred", "=", "pred", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "\n", "thresh_steps", "=", "np", ".", "arange", "(", "0", ",", "1", "+", "step", ",", "step", ")", "\n", "round_down_map", "=", "-", "np", ".", "ones_like", "(", "gt", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "thresh_steps", ")", ")", ":", "\n", "            ", "gt_thresh", "=", "gt", ">=", "thresh_steps", "[", "i", "]", "\n", "pred_thresh", "=", "pred", ">=", "thresh_steps", "[", "i", "]", "\n", "intersection", "=", "(", "gt_thresh", "&", "pred_thresh", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "# connected components", "\n", "_", ",", "output", ",", "stats", ",", "_", "=", "cv2", ".", "connectedComponentsWithStats", "(", "\n", "intersection", ",", "connectivity", "=", "4", ")", "\n", "# start from 1 in dim 0 to exclude background", "\n", "size", "=", "stats", "[", "1", ":", ",", "-", "1", "]", "\n", "\n", "# largest connected component of the intersection", "\n", "omega", "=", "np", ".", "zeros_like", "(", "gt", ")", "\n", "if", "len", "(", "size", ")", "!=", "0", ":", "\n", "                ", "max_id", "=", "np", ".", "argmax", "(", "size", ")", "\n", "# plus one to include background", "\n", "omega", "[", "output", "==", "max_id", "+", "1", "]", "=", "1", "\n", "\n", "", "mask", "=", "(", "round_down_map", "==", "-", "1", ")", "&", "(", "omega", "==", "0", ")", "\n", "round_down_map", "[", "mask", "]", "=", "thresh_steps", "[", "i", "-", "1", "]", "\n", "", "round_down_map", "[", "round_down_map", "==", "-", "1", "]", "=", "1", "\n", "\n", "gt_diff", "=", "gt", "-", "round_down_map", "\n", "pred_diff", "=", "pred", "-", "round_down_map", "\n", "# only calculate difference larger than or equal to 0.15", "\n", "gt_phi", "=", "1", "-", "gt_diff", "*", "(", "gt_diff", ">=", "0.15", ")", "\n", "pred_phi", "=", "1", "-", "pred_diff", "*", "(", "pred_diff", ">=", "0.15", ")", "\n", "\n", "conn_diff", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "gt_phi", "-", "pred_phi", ")", "*", "(", "trimap", "==", "128", ")", ")", "\n", "\n", "conn_diff", "/=", "1000", "\n", "self", ".", "conn_diffs", "+=", "conn_diff", "\n", "self", ".", "count", "+=", "1", "\n", "\n", "return", "conn_diff", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.metric.Conn.evaluate": [[276, 279], ["None"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "conn", "=", "self", ".", "conn_diffs", "/", "self", ".", "count", "if", "self", ".", "count", ">", "0", "else", "0", "\n", "return", "conn", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.bg_replace.parse_args": [[32, 80], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'PP-HumanSeg inference for video'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'Image including human'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--trimap_path'", ",", "\n", "dest", "=", "'trimap_path'", ",", "\n", "help", "=", "'The path of trimap'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--background'", ",", "\n", "dest", "=", "'background'", ",", "\n", "help", "=", "'Background for replacing. It is a string which specifies the background color (r,g,b,w) or a path to background image. If not specified, a green background is used.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the inference results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--fg_estimate'", ",", "\n", "default", "=", "True", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to estimate foreground when predicting.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.bg_replace.main": [[82, 118], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.transforms.Compose", "core.predict", "cv2.imread", "bg_replace.get_bg", "com.astype.astype", "os.path.join", "cv2.imwrite", "RuntimeError", "os.path.basename"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.bg_replace.get_bg"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "transforms", "=", "Compose", "(", "cfg", ".", "val_transforms", ")", "\n", "\n", "alpha", ",", "fg", "=", "predict", "(", "\n", "model", ",", "\n", "model_path", "=", "args", ".", "model_path", ",", "\n", "transforms", "=", "transforms", ",", "\n", "image_list", "=", "[", "args", ".", "image_path", "]", ",", "\n", "trimap_list", "=", "[", "args", ".", "trimap_path", "]", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "fg_estimate", "=", "args", ".", "fg_estimate", ")", "\n", "\n", "img_ori", "=", "cv2", ".", "imread", "(", "args", ".", "image_path", ")", "\n", "bg", "=", "get_bg", "(", "args", ".", "background", ",", "img_ori", ".", "shape", ")", "\n", "alpha", "=", "alpha", "/", "255.0", "\n", "alpha", "=", "alpha", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "com", "=", "alpha", "*", "fg", "+", "(", "1", "-", "alpha", ")", "*", "bg", "\n", "com", "=", "com", ".", "astype", "(", "'uint8'", ")", "\n", "com_save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "\n", "os", ".", "path", ".", "basename", "(", "args", ".", "image_path", ")", ")", "\n", "cv2", ".", "imwrite", "(", "com_save_path", ",", "com", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.Matting.bg_replace.get_bg": [[120, 138], ["numpy.zeros", "os.path.exists", "Exception", "cv2.imread", "cv2.resize"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "def", "get_bg", "(", "background", ",", "img_shape", ")", ":", "\n", "    ", "bg", "=", "np", ".", "zeros", "(", "img_shape", ")", "\n", "if", "background", "==", "'r'", ":", "\n", "        ", "bg", "[", ":", ",", ":", ",", "2", "]", "=", "255", "\n", "", "elif", "background", "is", "None", "or", "background", "==", "'g'", ":", "\n", "        ", "bg", "[", ":", ",", ":", ",", "1", "]", "=", "255", "\n", "", "elif", "background", "==", "'b'", ":", "\n", "        ", "bg", "[", ":", ",", ":", ",", "0", "]", "=", "255", "\n", "", "elif", "background", "==", "'w'", ":", "\n", "        ", "bg", "[", ":", ",", ":", ",", ":", "]", "=", "255", "\n", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "background", ")", ":", "\n", "        ", "raise", "Exception", "(", "'The --background is not existed: {}'", ".", "format", "(", "\n", "background", ")", ")", "\n", "", "else", ":", "\n", "        ", "bg", "=", "cv2", ".", "imread", "(", "background", ")", "\n", "bg", "=", "cv2", ".", "resize", "(", "bg", ",", "(", "img_shape", "[", "1", "]", ",", "img_shape", "[", "0", "]", ")", ")", "\n", "", "return", "bg", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml._resize_nearest_multichannel": [[7, 32], ["numba.njit", "numba.prange", "range", "max", "max", "range", "min", "min"], "function", ["None"], ["@", "njit", "(", "\"void(f4[:, :, :], f4[:, :, :])\"", ",", "cache", "=", "True", ",", "nogil", "=", "True", ",", "parallel", "=", "True", ")", "\n", "def", "_resize_nearest_multichannel", "(", "dst", ",", "src", ")", ":", "\n", "    ", "\"\"\"\n    Internal method.\n\n    Resize image src to dst using nearest neighbors filtering.\n    Images must have multiple color channels, i.e. :code:`len(shape) == 3`.\n\n    Parameters\n    ----------\n    dst: numpy.ndarray of type np.float32\n        output image\n    src: numpy.ndarray of type np.float32\n        input image\n    \"\"\"", "\n", "h_src", ",", "w_src", ",", "depth", "=", "src", ".", "shape", "\n", "h_dst", ",", "w_dst", ",", "depth", "=", "dst", ".", "shape", "\n", "\n", "for", "y_dst", "in", "prange", "(", "h_dst", ")", ":", "\n", "        ", "for", "x_dst", "in", "range", "(", "w_dst", ")", ":", "\n", "            ", "x_src", "=", "max", "(", "0", ",", "min", "(", "w_src", "-", "1", ",", "x_dst", "*", "w_src", "//", "w_dst", ")", ")", "\n", "y_src", "=", "max", "(", "0", ",", "min", "(", "h_src", "-", "1", ",", "y_dst", "*", "h_src", "//", "h_dst", ")", ")", "\n", "\n", "for", "c", "in", "range", "(", "depth", ")", ":", "\n", "                ", "dst", "[", "y_dst", ",", "x_dst", ",", "c", "]", "=", "src", "[", "y_src", ",", "x_src", ",", "c", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml._resize_nearest": [[34, 58], ["numba.njit", "numba.prange", "range", "max", "max", "min", "min"], "function", ["None"], ["", "", "", "", "@", "njit", "(", "\"void(f4[:, :], f4[:, :])\"", ",", "cache", "=", "True", ",", "nogil", "=", "True", ",", "parallel", "=", "True", ")", "\n", "def", "_resize_nearest", "(", "dst", ",", "src", ")", ":", "\n", "    ", "\"\"\"\n    Internal method.\n\n    Resize image src to dst using nearest neighbors filtering.\n    Images must be grayscale, i.e. :code:`len(shape) == 3`.\n\n    Parameters\n    ----------\n    dst: numpy.ndarray of type np.float32\n        output image\n    src: numpy.ndarray of type np.float32\n        input image\n    \"\"\"", "\n", "h_src", ",", "w_src", "=", "src", ".", "shape", "\n", "h_dst", ",", "w_dst", "=", "dst", ".", "shape", "\n", "\n", "for", "y_dst", "in", "prange", "(", "h_dst", ")", ":", "\n", "        ", "for", "x_dst", "in", "range", "(", "w_dst", ")", ":", "\n", "            ", "x_src", "=", "max", "(", "0", ",", "min", "(", "w_src", "-", "1", ",", "x_dst", "*", "w_src", "//", "w_dst", ")", ")", "\n", "y_src", "=", "max", "(", "0", ",", "min", "(", "h_src", "-", "1", ",", "y_dst", "*", "h_src", "//", "h_dst", ")", ")", "\n", "\n", "dst", "[", "y_dst", ",", "x_dst", "]", "=", "src", "[", "y_src", ",", "x_src", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml._estimate_fb_ml": [[64, 169], ["numba.njit", "numpy.empty", "numpy.empty", "int", "range", "numpy.ceil", "round", "round", "numpy.empty", "numpy.empty", "estimate_foreground_ml._resize_nearest_multichannel", "estimate_foreground_ml._resize_nearest", "numpy.empty", "numpy.empty", "estimate_foreground_ml._resize_nearest_multichannel", "estimate_foreground_ml._resize_nearest_multichannel", "numpy.zeros", "range", "numpy.log2", "numba.prange", "max", "range", "range", "range", "range", "max", "max", "abs", "range", "max", "max", "min", "min", "min", "min"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml._resize_nearest_multichannel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml._resize_nearest", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml._resize_nearest_multichannel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml._resize_nearest_multichannel"], ["", "", "", "@", "njit", "(", "\n", "\"Tuple((f4[:, :, :], f4[:, :, :]))(f4[:, :, :], f4[:, :], f4, i4, i4, i4, f4)\"", ",", "\n", "cache", "=", "True", ",", "\n", "nogil", "=", "True", ")", "\n", "def", "_estimate_fb_ml", "(", "\n", "input_image", ",", "\n", "input_alpha", ",", "\n", "regularization", ",", "\n", "n_small_iterations", ",", "\n", "n_big_iterations", ",", "\n", "small_size", ",", "\n", "gradient_weight", ",", ")", ":", "\n", "    ", "h0", ",", "w0", ",", "depth", "=", "input_image", ".", "shape", "\n", "\n", "dtype", "=", "np", ".", "float32", "\n", "\n", "w_prev", "=", "1", "\n", "h_prev", "=", "1", "\n", "\n", "F_prev", "=", "np", ".", "empty", "(", "(", "h_prev", ",", "w_prev", ",", "depth", ")", ",", "dtype", "=", "dtype", ")", "\n", "B_prev", "=", "np", ".", "empty", "(", "(", "h_prev", ",", "w_prev", ",", "depth", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "n_levels", "=", "int", "(", "np", ".", "ceil", "(", "np", ".", "log2", "(", "max", "(", "w0", ",", "h0", ")", ")", ")", ")", "\n", "\n", "for", "i_level", "in", "range", "(", "n_levels", "+", "1", ")", ":", "\n", "        ", "w", "=", "round", "(", "w0", "**", "(", "i_level", "/", "n_levels", ")", ")", "\n", "h", "=", "round", "(", "h0", "**", "(", "i_level", "/", "n_levels", ")", ")", "\n", "\n", "image", "=", "np", ".", "empty", "(", "(", "h", ",", "w", ",", "depth", ")", ",", "dtype", "=", "dtype", ")", "\n", "alpha", "=", "np", ".", "empty", "(", "(", "h", ",", "w", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "_resize_nearest_multichannel", "(", "image", ",", "input_image", ")", "\n", "_resize_nearest", "(", "alpha", ",", "input_alpha", ")", "\n", "\n", "F", "=", "np", ".", "empty", "(", "(", "h", ",", "w", ",", "depth", ")", ",", "dtype", "=", "dtype", ")", "\n", "B", "=", "np", ".", "empty", "(", "(", "h", ",", "w", ",", "depth", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "_resize_nearest_multichannel", "(", "F", ",", "F_prev", ")", "\n", "_resize_nearest_multichannel", "(", "B", ",", "B_prev", ")", "\n", "\n", "if", "w", "<=", "small_size", "and", "h", "<=", "small_size", ":", "\n", "            ", "n_iter", "=", "n_small_iterations", "\n", "", "else", ":", "\n", "            ", "n_iter", "=", "n_big_iterations", "\n", "\n", "", "b", "=", "np", ".", "zeros", "(", "(", "2", ",", "depth", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "dx", "=", "[", "-", "1", ",", "1", ",", "0", ",", "0", "]", "\n", "dy", "=", "[", "0", ",", "0", ",", "-", "1", ",", "1", "]", "\n", "\n", "for", "i_iter", "in", "range", "(", "n_iter", ")", ":", "\n", "            ", "for", "y", "in", "prange", "(", "h", ")", ":", "\n", "                ", "for", "x", "in", "range", "(", "w", ")", ":", "\n", "                    ", "a0", "=", "alpha", "[", "y", ",", "x", "]", "\n", "a1", "=", "1.0", "-", "a0", "\n", "\n", "a00", "=", "a0", "*", "a0", "\n", "a01", "=", "a0", "*", "a1", "\n", "# a10 = a01 can be omitted due to symmetry of matrix", "\n", "a11", "=", "a1", "*", "a1", "\n", "\n", "for", "c", "in", "range", "(", "depth", ")", ":", "\n", "                        ", "b", "[", "0", ",", "c", "]", "=", "a0", "*", "image", "[", "y", ",", "x", ",", "c", "]", "\n", "b", "[", "1", ",", "c", "]", "=", "a1", "*", "image", "[", "y", ",", "x", ",", "c", "]", "\n", "\n", "", "for", "d", "in", "range", "(", "4", ")", ":", "\n", "                        ", "x2", "=", "max", "(", "0", ",", "min", "(", "w", "-", "1", ",", "x", "+", "dx", "[", "d", "]", ")", ")", "\n", "y2", "=", "max", "(", "0", ",", "min", "(", "h", "-", "1", ",", "y", "+", "dy", "[", "d", "]", ")", ")", "\n", "\n", "gradient", "=", "abs", "(", "a0", "-", "alpha", "[", "y2", ",", "x2", "]", ")", "\n", "\n", "da", "=", "regularization", "+", "gradient_weight", "*", "gradient", "\n", "\n", "a00", "+=", "da", "\n", "a11", "+=", "da", "\n", "\n", "for", "c", "in", "range", "(", "depth", ")", ":", "\n", "                            ", "b", "[", "0", ",", "c", "]", "+=", "da", "*", "F", "[", "y2", ",", "x2", ",", "c", "]", "\n", "b", "[", "1", ",", "c", "]", "+=", "da", "*", "B", "[", "y2", ",", "x2", ",", "c", "]", "\n", "\n", "", "", "determinant", "=", "a00", "*", "a11", "-", "a01", "*", "a01", "\n", "\n", "inv_det", "=", "1.0", "/", "determinant", "\n", "\n", "b00", "=", "inv_det", "*", "a11", "\n", "b01", "=", "inv_det", "*", "-", "a01", "\n", "b11", "=", "inv_det", "*", "a00", "\n", "\n", "for", "c", "in", "range", "(", "depth", ")", ":", "\n", "                        ", "F_c", "=", "b00", "*", "b", "[", "0", ",", "c", "]", "+", "b01", "*", "b", "[", "1", ",", "c", "]", "\n", "B_c", "=", "b01", "*", "b", "[", "0", ",", "c", "]", "+", "b11", "*", "b", "[", "1", ",", "c", "]", "\n", "\n", "F_c", "=", "max", "(", "0.0", ",", "min", "(", "1.0", ",", "F_c", ")", ")", "\n", "B_c", "=", "max", "(", "0.0", ",", "min", "(", "1.0", ",", "B_c", ")", ")", "\n", "\n", "F", "[", "y", ",", "x", ",", "c", "]", "=", "F_c", "\n", "B", "[", "y", ",", "x", ",", "c", "]", "=", "B_c", "\n", "\n", "", "", "", "", "F_prev", "=", "F", "\n", "B_prev", "=", "B", "\n", "\n", "w_prev", "=", "w", "\n", "h_prev", "=", "h", "\n", "\n", "", "return", "F", ",", "B", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml.estimate_foreground_ml": [[171, 237], ["estimate_foreground_ml._estimate_fb_ml", "image.astype", "alpha.astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml._estimate_fb_ml"], ["", "def", "estimate_foreground_ml", "(", "\n", "image", ",", "\n", "alpha", ",", "\n", "regularization", "=", "1e-5", ",", "\n", "n_small_iterations", "=", "10", ",", "\n", "n_big_iterations", "=", "2", ",", "\n", "small_size", "=", "32", ",", "\n", "return_background", "=", "False", ",", "\n", "gradient_weight", "=", "1.0", ",", ")", ":", "\n", "    ", "\"\"\"Estimates the foreground of an image given its alpha matte.\n\n    See :cite:`germer2020multilevel` for reference.\n\n    Parameters\n    ----------\n    image: numpy.ndarray\n        Input image with shape :math:`h \\\\times  w \\\\times d`\n    alpha: numpy.ndarray\n        Input alpha matte shape :math:`h \\\\times  w`\n    regularization: float\n        Regularization strength :math:`\\\\epsilon`, defaults to :math:`10^{-5}`.\n        Higher regularization results in smoother colors.\n    n_small_iterations: int\n        Number of iterations performed on small scale, defaults to :math:`10`\n    n_big_iterations: int\n        Number of iterations performed on large scale, defaults to :math:`2`\n    small_size: int\n        Threshold that determines at which size `n_small_iterations` should be used\n    return_background: bool\n        Whether to return the estimated background in addition to the foreground\n    gradient_weight: float\n        Larger values enforce smoother foregrounds, defaults to :math:`1`\n\n    Returns\n    -------\n    F: numpy.ndarray\n        Extracted foreground\n    B: numpy.ndarray\n        Extracted background\n\n    Example\n    -------\n    >>> from pymatting import *\n    >>> image = load_image(\"data/lemur/lemur.png\", \"RGB\")\n    >>> alpha = load_image(\"data/lemur/lemur_alpha.png\", \"GRAY\")\n    >>> F = estimate_foreground_ml(image, alpha, return_background=False)\n    >>> F, B = estimate_foreground_ml(image, alpha, return_background=True)\n\n    See Also\n    ----\n    stack_images: This function can be used to place the foreground on a new background.\n    \"\"\"", "\n", "\n", "foreground", ",", "background", "=", "_estimate_fb_ml", "(", "\n", "image", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "alpha", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "regularization", ",", "\n", "n_small_iterations", ",", "\n", "n_big_iterations", ",", "\n", "small_size", ",", "\n", "gradient_weight", ",", ")", "\n", "\n", "if", "return_background", ":", "\n", "        ", "return", "foreground", ",", "background", "\n", "\n", "", "return", "foreground", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_files": [[18, 25], ["os.walk", "f.endswith", "res.append", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "get_files", "(", "root_path", ")", ":", "\n", "    ", "res", "=", "[", "]", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "root_path", ",", "followlinks", "=", "True", ")", ":", "\n", "        ", "for", "f", "in", "files", ":", "\n", "            ", "if", "f", ".", "endswith", "(", "(", "'.jpg'", ",", "'.png'", ",", "'.jpeg'", ",", "'JPG'", ")", ")", ":", "\n", "                ", "res", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", "f", ")", ")", "\n", "", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_image_list": [[142, 203], ["os.path.isfile", "os.path.isdir", "len", "RuntimeError", "FileNotFoundError", "os.walk", "FileNotFoundError", "[].split", "filter_key.items", "image_list.append", "image_path.split", "image_list.append", "image_path.split", "f_name.lower", "f.split", "filter_key.items", "image_list.append", "image_list.append", "os.path.join", "os.path.join", "f.lower"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.mkdir": [[67, 71], ["os.path.dirname", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "sub_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "sub_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "sub_dir", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.op_flops_funs.count_syncbn": [[19, 23], ["x.numel", "int"], "function", ["None"], ["def", "count_syncbn", "(", "m", ",", "x", ",", "y", ")", ":", "\n", "    ", "x", "=", "x", "[", "0", "]", "\n", "nelements", "=", "x", ".", "numel", "(", ")", "\n", "m", ".", "total_ops", "+=", "int", "(", "2", "*", "nelements", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.train_profiler.ProfilerOptions.__init__": [[46, 60], ["isinstance", "train_profiler.ProfilerOptions._parse_from_string"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.train_profiler.ProfilerOptions._parse_from_string"], ["def", "__init__", "(", "self", ",", "options_str", ")", ":", "\n", "        ", "assert", "isinstance", "(", "options_str", ",", "str", ")", "\n", "\n", "self", ".", "_options", "=", "{", "\n", "'batch_range'", ":", "[", "10", ",", "20", "]", ",", "\n", "'state'", ":", "'All'", ",", "\n", "'sorted_key'", ":", "'total'", ",", "\n", "'tracer_option'", ":", "'Default'", ",", "\n", "'profile_path'", ":", "'/tmp/profile'", ",", "\n", "'exit_on_finished'", ":", "True", "\n", "}", "\n", "\n", "if", "options_str", "!=", "\"\"", ":", "\n", "            ", "self", ".", "_parse_from_string", "(", "options_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.train_profiler.ProfilerOptions._parse_from_string": [[61, 76], ["options_str.replace().split", "kv.split", "options_str.replace", "value.replace().replace().split", "list", "map", "value.replace().replace", "len", "value.lower", "value.replace"], "methods", ["None"], ["", "", "def", "_parse_from_string", "(", "self", ",", "options_str", ")", ":", "\n", "        ", "for", "kv", "in", "options_str", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "';'", ")", ":", "\n", "            ", "key", ",", "value", "=", "kv", ".", "split", "(", "'='", ")", "\n", "if", "key", "==", "'batch_range'", ":", "\n", "                ", "value_list", "=", "value", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "split", "(", "','", ")", "\n", "value_list", "=", "list", "(", "map", "(", "int", ",", "value_list", ")", ")", "\n", "if", "len", "(", "value_list", ")", ">=", "2", "and", "value_list", "[", "0", "]", ">=", "0", "and", "value_list", "[", "\n", "1", "]", ">", "value_list", "[", "0", "]", ":", "\n", "                    ", "self", ".", "_options", "[", "key", "]", "=", "value_list", "\n", "", "", "elif", "key", "==", "'exit_on_finished'", ":", "\n", "                ", "self", ".", "_options", "[", "key", "]", "=", "value", ".", "lower", "(", ")", "in", "(", "\"yes\"", ",", "\"true\"", ",", "\"t\"", ",", "\"1\"", ")", "\n", "", "elif", "key", "in", "[", "\n", "'state'", ",", "'sorted_key'", ",", "'tracer_option'", ",", "'profile_path'", "\n", "]", ":", "\n", "                ", "self", ".", "_options", "[", "key", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.train_profiler.ProfilerOptions.__getitem__": [[77, 82], ["train_profiler.ProfilerOptions._options.get", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "", "def", "__getitem__", "(", "self", ",", "name", ")", ":", "\n", "        ", "if", "self", ".", "_options", ".", "get", "(", "name", ",", "None", ")", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"ProfilerOptions does not have an option named %s.\"", "%", "name", ")", "\n", "", "return", "self", ".", "_options", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.train_profiler.add_profiler_step": [[84, 113], ["train_profiler.ProfilerOptions", "paddle.utils.profiler.start_profiler", "paddle.utils.profiler.stop_profiler", "sys.exit"], "function", ["None"], ["", "", "def", "add_profiler_step", "(", "options_str", "=", "None", ")", ":", "\n", "    ", "'''\n    Enable the operator-level timing using PaddlePaddle's profiler.\n    The profiler uses a independent variable to count the profiler steps.\n    One call of this function is treated as a profiler step.\n\n    Args:\n      profiler_options - a string to initialize the ProfilerOptions.\n                         Default is None, and the profiler is disabled.\n    '''", "\n", "if", "options_str", "is", "None", ":", "\n", "        ", "return", "\n", "\n", "", "global", "_profiler_step_id", "\n", "global", "_profiler_options", "\n", "\n", "if", "_profiler_options", "is", "None", ":", "\n", "        ", "_profiler_options", "=", "ProfilerOptions", "(", "options_str", ")", "\n", "\n", "", "if", "_profiler_step_id", "==", "_profiler_options", "[", "'batch_range'", "]", "[", "0", "]", ":", "\n", "        ", "paddle", ".", "utils", ".", "profiler", ".", "start_profiler", "(", "_profiler_options", "[", "'state'", "]", ",", "\n", "_profiler_options", "[", "'tracer_option'", "]", ")", "\n", "", "elif", "_profiler_step_id", "==", "_profiler_options", "[", "'batch_range'", "]", "[", "1", "]", ":", "\n", "        ", "paddle", ".", "utils", ".", "profiler", ".", "stop_profiler", "(", "_profiler_options", "[", "'sorted_key'", "]", ",", "\n", "_profiler_options", "[", "'profile_path'", "]", ")", "\n", "if", "_profiler_options", "[", "'exit_on_finished'", "]", ":", "\n", "            ", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "", "", "_profiler_step_id", "+=", "1", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check": [[18, 29], ["config_check.num_classes_check"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.num_classes_check"], ["def", "config_check", "(", "cfg", ",", "train_dataset", "=", "None", ",", "val_dataset", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    To check config\u3002\n\n    Args:\n        cfg (paddleseg.cvlibs.Config): An object of paddleseg.cvlibs.Config.\n        train_dataset (paddle.io.Dataset): Used to read and process training datasets.\n        val_dataset (paddle.io.Dataset, optional): Used to read and process validation datasets.\n    \"\"\"", "\n", "\n", "num_classes_check", "(", "cfg", ",", "train_dataset", ",", "val_dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.num_classes_check": [[31, 61], ["set", "hasattr", "set.add", "hasattr", "set.add", "cfg.dic.get", "cfg.dic[].get", "set.add", "ValueError", "len", "ValueError", "cfg.dic[].get", "len", "ValueError", "set.pop"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "num_classes_check", "(", "cfg", ",", "train_dataset", ",", "val_dataset", ")", ":", "\n", "    ", "\"\"\"\"\n    Check that the num_classes in model, train_dataset and val_dataset is consistent.\n    \"\"\"", "\n", "num_classes_set", "=", "set", "(", ")", "\n", "if", "train_dataset", "and", "hasattr", "(", "train_dataset", ",", "'num_classes'", ")", ":", "\n", "        ", "num_classes_set", ".", "add", "(", "train_dataset", ".", "num_classes", ")", "\n", "", "if", "val_dataset", "and", "hasattr", "(", "val_dataset", ",", "'num_classes'", ")", ":", "\n", "        ", "num_classes_set", ".", "add", "(", "val_dataset", ".", "num_classes", ")", "\n", "", "if", "cfg", ".", "dic", ".", "get", "(", "'model'", ",", "None", ")", "and", "cfg", ".", "dic", "[", "'model'", "]", ".", "get", "(", "'num_classes'", ",", "None", ")", ":", "\n", "        ", "num_classes_set", ".", "add", "(", "cfg", ".", "dic", "[", "'model'", "]", ".", "get", "(", "'num_classes'", ")", ")", "\n", "", "if", "(", "not", "cfg", ".", "train_dataset", ")", "and", "(", "not", "cfg", ".", "val_dataset", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'One of `train_dataset` or `val_dataset should be given, but there are none.'", "\n", ")", "\n", "", "if", "len", "(", "num_classes_set", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'`num_classes` is not found. Please set it in model, train_dataset or val_dataset'", "\n", ")", "\n", "", "elif", "len", "(", "num_classes_set", ")", ">", "1", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'`num_classes` is not consistent: {}. Please set it consistently in model or train_dataset or val_dataset'", "\n", ".", "format", "(", "num_classes_set", ")", ")", "\n", "", "else", ":", "\n", "        ", "num_classes", "=", "num_classes_set", ".", "pop", "(", ")", "\n", "if", "train_dataset", ":", "\n", "            ", "train_dataset", ".", "num_classes", "=", "num_classes", "\n", "", "if", "val_dataset", ":", "\n", "            ", "val_dataset", ".", "num_classes", "=", "num_classes", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metrics.calculate_area": [[21, 62], ["range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "len", "paddle.squeeze", "paddle.squeeze", "len", "paddle.squeeze", "paddle.squeeze", "ValueError", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.concat.append", "paddle.concat.append", "paddle.concat.append", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "calculate_area", "(", "pred", ",", "label", ",", "num_classes", ",", "ignore_index", "=", "255", ")", ":", "\n", "    ", "\"\"\"\n    Calculate intersect, prediction and label area\n\n    Args:\n        pred (Tensor): The prediction by model.\n        label (Tensor): The ground truth of image.\n        num_classes (int): The unique number of target classes.\n        ignore_index (int): Specifies a target value that is ignored. Default: 255.\n\n    Returns:\n        Tensor: The intersection area of prediction and the ground on all class.\n        Tensor: The prediction area on all class.\n        Tensor: The ground truth area on all class\n    \"\"\"", "\n", "if", "len", "(", "pred", ".", "shape", ")", "==", "4", ":", "\n", "        ", "pred", "=", "paddle", ".", "squeeze", "(", "pred", ",", "axis", "=", "1", ")", "\n", "", "if", "len", "(", "label", ".", "shape", ")", "==", "4", ":", "\n", "        ", "label", "=", "paddle", ".", "squeeze", "(", "label", ",", "axis", "=", "1", ")", "\n", "", "if", "not", "pred", ".", "shape", "==", "label", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "'Shape of `pred` and `label should be equal, '", "\n", "'but there are {} and {}.'", ".", "format", "(", "pred", ".", "shape", ",", "\n", "label", ".", "shape", ")", ")", "\n", "", "pred_area", "=", "[", "]", "\n", "label_area", "=", "[", "]", "\n", "intersect_area", "=", "[", "]", "\n", "mask", "=", "label", "!=", "ignore_index", "\n", "\n", "for", "i", "in", "range", "(", "num_classes", ")", ":", "\n", "        ", "pred_i", "=", "paddle", ".", "logical_and", "(", "pred", "==", "i", ",", "mask", ")", "\n", "label_i", "=", "label", "==", "i", "\n", "intersect_i", "=", "paddle", ".", "logical_and", "(", "pred_i", ",", "label_i", ")", "\n", "pred_area", ".", "append", "(", "paddle", ".", "sum", "(", "paddle", ".", "cast", "(", "pred_i", ",", "\"int32\"", ")", ")", ")", "\n", "label_area", ".", "append", "(", "paddle", ".", "sum", "(", "paddle", ".", "cast", "(", "label_i", ",", "\"int32\"", ")", ")", ")", "\n", "intersect_area", ".", "append", "(", "paddle", ".", "sum", "(", "paddle", ".", "cast", "(", "intersect_i", ",", "\"int32\"", ")", ")", ")", "\n", "\n", "", "pred_area", "=", "paddle", ".", "concat", "(", "pred_area", ")", "\n", "label_area", "=", "paddle", ".", "concat", "(", "label_area", ")", "\n", "intersect_area", "=", "paddle", ".", "concat", "(", "intersect_area", ")", "\n", "\n", "return", "intersect_area", ",", "pred_area", ",", "label_area", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metrics.auc_roc": [[64, 108], ["numpy.transpose", "logits.reshape().transpose.reshape().transpose", "numpy.transpose", "label.reshape().squeeze.reshape().squeeze", "RuntimeError", "len", "ValueError", "len", "ValueError", "ValueError", "sklearn.roc_auc_score", "sklearn.roc_auc_score", "len", "logits.reshape().transpose.reshape", "label.reshape().squeeze.reshape", "numpy.unique"], "function", ["None"], ["", "def", "auc_roc", "(", "logits", ",", "label", ",", "num_classes", ",", "ignore_index", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Calculate area under the roc curve\n\n    Args:\n        logits (Tensor): The prediction by model on testset, of shape (N,C,H,W) .\n        label (Tensor): The ground truth of image.   (N,1,H,W)\n        num_classes (int): The unique number of target classes.\n        ignore_index (int): Specifies a target value that is ignored. Default: 255.\n\n    Returns:\n        auc_roc(float): The area under roc curve\n    \"\"\"", "\n", "if", "ignore_index", "or", "len", "(", "np", ".", "unique", "(", "label", ")", ")", ">", "num_classes", ":", "\n", "        ", "raise", "RuntimeError", "(", "'labels with ignore_index is not supported yet.'", ")", "\n", "\n", "", "if", "len", "(", "label", ".", "shape", ")", "!=", "4", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The shape of label is not 4 dimension as (N, C, H, W), it is {}'", ".", "\n", "format", "(", "label", ".", "shape", ")", ")", "\n", "\n", "", "if", "len", "(", "logits", ".", "shape", ")", "!=", "4", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The shape of logits is not 4 dimension as (N, C, H, W), it is {}'", ".", "\n", "format", "(", "logits", ".", "shape", ")", ")", "\n", "\n", "", "N", ",", "C", ",", "H", ",", "W", "=", "logits", ".", "shape", "\n", "logits", "=", "np", ".", "transpose", "(", "logits", ",", "(", "1", ",", "0", ",", "2", ",", "3", ")", ")", "\n", "logits", "=", "logits", ".", "reshape", "(", "[", "C", ",", "N", "*", "H", "*", "W", "]", ")", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "\n", "label", "=", "np", ".", "transpose", "(", "label", ",", "(", "1", ",", "0", ",", "2", ",", "3", ")", ")", "\n", "label", "=", "label", ".", "reshape", "(", "[", "1", ",", "N", "*", "H", "*", "W", "]", ")", ".", "squeeze", "(", ")", "\n", "\n", "if", "not", "logits", ".", "shape", "[", "0", "]", "==", "label", ".", "shape", "[", "0", "]", ":", "\n", "        ", "raise", "ValueError", "(", "'length of `logit` and `label` should be equal, '", "\n", "'but they are {} and {}.'", ".", "format", "(", "logits", ".", "shape", "[", "0", "]", ",", "\n", "label", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "", "if", "num_classes", "==", "2", ":", "\n", "        ", "auc", "=", "skmetrics", ".", "roc_auc_score", "(", "label", ",", "logits", "[", ":", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "        ", "auc", "=", "skmetrics", ".", "roc_auc_score", "(", "label", ",", "logits", ",", "multi_class", "=", "'ovr'", ")", "\n", "\n", "", "return", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metrics.mean_iou": [[110, 136], ["intersect_area.numpy.numpy", "pred_area.numpy.numpy", "label_area.numpy.numpy", "range", "numpy.mean", "len", "class_iou.append", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "mean_iou", "(", "intersect_area", ",", "pred_area", ",", "label_area", ")", ":", "\n", "    ", "\"\"\"\n    Calculate iou.\n\n    Args:\n        intersect_area (Tensor): The intersection area of prediction and ground truth on all classes.\n        pred_area (Tensor): The prediction area on all classes.\n        label_area (Tensor): The ground truth area on all classes.\n\n    Returns:\n        np.ndarray: iou on all classes.\n        float: mean iou of all classes.\n    \"\"\"", "\n", "intersect_area", "=", "intersect_area", ".", "numpy", "(", ")", "\n", "pred_area", "=", "pred_area", ".", "numpy", "(", ")", "\n", "label_area", "=", "label_area", ".", "numpy", "(", ")", "\n", "union", "=", "pred_area", "+", "label_area", "-", "intersect_area", "\n", "class_iou", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "intersect_area", ")", ")", ":", "\n", "        ", "if", "union", "[", "i", "]", "==", "0", ":", "\n", "            ", "iou", "=", "0", "\n", "", "else", ":", "\n", "            ", "iou", "=", "intersect_area", "[", "i", "]", "/", "union", "[", "i", "]", "\n", "", "class_iou", ".", "append", "(", "iou", ")", "\n", "", "miou", "=", "np", ".", "mean", "(", "class_iou", ")", "\n", "return", "np", ".", "array", "(", "class_iou", ")", ",", "miou", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metrics.dice": [[138, 164], ["intersect_area.numpy.numpy", "pred_area.numpy.numpy", "label_area.numpy.numpy", "range", "numpy.mean", "len", "class_dice.append", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "dice", "(", "intersect_area", ",", "pred_area", ",", "label_area", ")", ":", "\n", "    ", "\"\"\"\n    Calculate DICE.\n\n    Args:\n        intersect_area (Tensor): The intersection area of prediction and ground truth on all classes.\n        pred_area (Tensor): The prediction area on all classes.\n        label_area (Tensor): The ground truth area on all classes.\n\n    Returns:\n        np.ndarray: DICE on all classes.\n        float: mean DICE of all classes.\n    \"\"\"", "\n", "intersect_area", "=", "intersect_area", ".", "numpy", "(", ")", "\n", "pred_area", "=", "pred_area", ".", "numpy", "(", ")", "\n", "label_area", "=", "label_area", ".", "numpy", "(", ")", "\n", "union", "=", "pred_area", "+", "label_area", "\n", "class_dice", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "intersect_area", ")", ")", ":", "\n", "        ", "if", "union", "[", "i", "]", "==", "0", ":", "\n", "            ", "dice", "=", "0", "\n", "", "else", ":", "\n", "            ", "dice", "=", "(", "2", "*", "intersect_area", "[", "i", "]", ")", "/", "union", "[", "i", "]", "\n", "", "class_dice", ".", "append", "(", "dice", ")", "\n", "", "mdice", "=", "np", ".", "mean", "(", "class_dice", ")", "\n", "return", "np", ".", "array", "(", "class_dice", ")", ",", "mdice", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metrics.accuracy": [[167, 190], ["intersect_area.numpy.numpy", "pred_area.numpy.numpy", "range", "len", "class_acc.append", "numpy.sum", "numpy.sum", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "accuracy", "(", "intersect_area", ",", "pred_area", ")", ":", "\n", "    ", "\"\"\"\n    Calculate accuracy\n\n    Args:\n        intersect_area (Tensor): The intersection area of prediction and ground truth on all classes..\n        pred_area (Tensor): The prediction area on all classes.\n\n    Returns:\n        np.ndarray: accuracy on all classes.\n        float: mean accuracy.\n    \"\"\"", "\n", "intersect_area", "=", "intersect_area", ".", "numpy", "(", ")", "\n", "pred_area", "=", "pred_area", ".", "numpy", "(", ")", "\n", "class_acc", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "intersect_area", ")", ")", ":", "\n", "        ", "if", "pred_area", "[", "i", "]", "==", "0", ":", "\n", "            ", "acc", "=", "0", "\n", "", "else", ":", "\n", "            ", "acc", "=", "intersect_area", "[", "i", "]", "/", "pred_area", "[", "i", "]", "\n", "", "class_acc", ".", "append", "(", "acc", ")", "\n", "", "macc", "=", "np", ".", "sum", "(", "intersect_area", ")", "/", "np", ".", "sum", "(", "pred_area", ")", "\n", "return", "np", ".", "array", "(", "class_acc", ")", ",", "macc", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metrics.class_measurement": [[192, 222], ["intersect_area.numpy.numpy", "pred_area.numpy.numpy", "label_area.numpy.numpy", "range", "numpy.sum", "numpy.sum", "len", "class_precision.append", "class_recall.append", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "class_measurement", "(", "intersect_area", ",", "pred_area", ",", "label_area", ")", ":", "\n", "    ", "\"\"\"\n    Calculate accuracy, calss precision and class recall.\n\n    Args:\n        intersect_area (Tensor): The intersection area of prediction and ground truth on all classes.\n        pred_area (Tensor): The prediction area on all classes.\n        label_area (Tensor): The ground truth area on all classes.\n\n    Returns:\n        float: The mean accuracy.\n        np.ndarray: The precision of all classes.\n        np.ndarray: The recall of all classes.\n    \"\"\"", "\n", "intersect_area", "=", "intersect_area", ".", "numpy", "(", ")", "\n", "pred_area", "=", "pred_area", ".", "numpy", "(", ")", "\n", "label_area", "=", "label_area", ".", "numpy", "(", ")", "\n", "\n", "mean_acc", "=", "np", ".", "sum", "(", "intersect_area", ")", "/", "np", ".", "sum", "(", "pred_area", ")", "\n", "class_precision", "=", "[", "]", "\n", "class_recall", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "intersect_area", ")", ")", ":", "\n", "        ", "precision", "=", "0", "if", "pred_area", "[", "i", "]", "==", "0", "else", "intersect_area", "[", "i", "]", "/", "pred_area", "[", "i", "]", "\n", "recall", "=", "0", "if", "label_area", "[", "i", "]", "==", "0", "else", "intersect_area", "[", "i", "]", "/", "label_area", "[", "i", "]", "\n", "class_precision", ".", "append", "(", "precision", ")", "\n", "class_recall", ".", "append", "(", "recall", ")", "\n", "\n", "", "return", "mean_acc", ",", "np", ".", "array", "(", "class_precision", ")", ",", "np", ".", "array", "(", "class_recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metrics.kappa": [[224, 244], ["intersect_area.numpy().astype.numpy().astype", "pred_area.numpy().astype.numpy().astype", "label_area.numpy().astype.numpy().astype", "numpy.sum", "numpy.sum", "numpy.sum", "intersect_area.numpy().astype.numpy", "pred_area.numpy().astype.numpy", "label_area.numpy().astype.numpy"], "function", ["None"], ["", "def", "kappa", "(", "intersect_area", ",", "pred_area", ",", "label_area", ")", ":", "\n", "    ", "\"\"\"\n    Calculate kappa coefficient\n\n    Args:\n        intersect_area (Tensor): The intersection area of prediction and ground truth on all classes..\n        pred_area (Tensor): The prediction area on all classes.\n        label_area (Tensor): The ground truth area on all classes.\n\n    Returns:\n        float: kappa coefficient.\n    \"\"\"", "\n", "intersect_area", "=", "intersect_area", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "pred_area", "=", "pred_area", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "label_area", "=", "label_area", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "total_area", "=", "np", ".", "sum", "(", "label_area", ")", "\n", "po", "=", "np", ".", "sum", "(", "intersect_area", ")", "/", "total_area", "\n", "pe", "=", "np", ".", "sum", "(", "pred_area", "*", "label_area", ")", "/", "(", "total_area", "*", "total_area", ")", "\n", "kappa", "=", "(", "po", "-", "pe", ")", "/", "(", "1", "-", "pe", ")", "\n", "return", "kappa", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.__init__": [[19, 21], ["timer.TimeAverager.reset"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.reset": [[22, 26], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_cnt", "=", "0", "\n", "self", ".", "_total_time", "=", "0", "\n", "self", ".", "_total_samples", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record": [[27, 32], ["None"], "methods", ["None"], ["", "def", "record", "(", "self", ",", "usetime", ",", "num_samples", "=", "None", ")", ":", "\n", "        ", "self", ".", "_cnt", "+=", "1", "\n", "self", ".", "_total_time", "+=", "usetime", "\n", "if", "num_samples", ":", "\n", "            ", "self", ".", "_total_samples", "+=", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average": [[33, 37], ["float"], "methods", ["None"], ["", "", "def", "get_average", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_cnt", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "self", ".", "_total_time", "/", "float", "(", "self", ".", "_cnt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_ips_average": [[38, 42], ["float"], "methods", ["None"], ["", "def", "get_ips_average", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_total_samples", "or", "self", ".", "_cnt", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "float", "(", "self", ".", "_total_samples", ")", "/", "self", ".", "_total_time", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.calculate_eta": [[44, 54], ["int", "range", "result.format", "arr.append", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "calculate_eta", "(", "remaining_step", ",", "speed", ")", ":", "\n", "    ", "if", "remaining_step", "<", "0", ":", "\n", "        ", "remaining_step", "=", "0", "\n", "", "remaining_time", "=", "int", "(", "remaining_step", "*", "speed", ")", "\n", "result", "=", "\"{:0>2}:{:0>2}:{:0>2}\"", "\n", "arr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "        ", "arr", ".", "append", "(", "int", "(", "remaining_time", "/", "60", "**", "i", ")", ")", "\n", "remaining_time", "%=", "60", "**", "i", "\n", "", "return", "result", ".", "format", "(", "*", "arr", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.progbar.Progbar.__init__": [[38, 67], ["time.time", "set", "set", "hasattr", "sys.stderr.isatty"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "target", ",", "\n", "width", "=", "30", ",", "\n", "verbose", "=", "1", ",", "\n", "interval", "=", "0.05", ",", "\n", "stateful_metrics", "=", "None", ",", "\n", "unit_name", "=", "'step'", ")", ":", "\n", "        ", "self", ".", "target", "=", "target", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "verbose", "=", "verbose", "\n", "self", ".", "interval", "=", "interval", "\n", "self", ".", "unit_name", "=", "unit_name", "\n", "if", "stateful_metrics", ":", "\n", "            ", "self", ".", "stateful_metrics", "=", "set", "(", "stateful_metrics", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "stateful_metrics", "=", "set", "(", ")", "\n", "\n", "", "self", ".", "_dynamic_display", "=", "(", "\n", "(", "hasattr", "(", "sys", ".", "stderr", ",", "'isatty'", ")", "and", "\n", "sys", ".", "stderr", ".", "isatty", "(", ")", ")", "or", "'ipykernel'", "in", "sys", ".", "modules", "or", "\n", "'posix'", "in", "sys", ".", "modules", "or", "'PYCHARM_HOSTED'", "in", "os", ".", "environ", ")", "\n", "self", ".", "_total_width", "=", "0", "\n", "self", ".", "_seen_so_far", "=", "0", "\n", "# We use a dict + list to avoid garbage collection", "\n", "# issues found in OrderedDict", "\n", "self", ".", "_values", "=", "{", "}", "\n", "self", ".", "_values_order", "=", "[", "]", "\n", "self", ".", "_start", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "_last_update", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.progbar.Progbar.update": [[68, 206], ["time.time", "len", "sys.stderr.write", "len", "sys.stderr.write", "sys.stderr.flush", "progbar.Progbar._values_order.append", "max", "sys.stderr.write", "sys.stderr.write", "sys.stderr.write", "int", "isinstance", "int", "float", "numpy.mean", "sys.stderr.write", "sys.stderr.flush", "numpy.log10", "abs", "int", "numpy.mean", "str", "max", "numpy.log10", "str", "max"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "update", "(", "self", ",", "current", ",", "values", "=", "None", ",", "finalize", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Updates the progress bar.\n\n        Args:\n            current (int): Index of current step.\n            values (list): List of tuples: `(name, value_for_last_step)`. If `name` is in\n                `stateful_metrics`, `value_for_last_step` will be displayed as-is.\n                Else, an average of the metric over time will be displayed.\n            finalize (bool): Whether this is the last update for the progress bar. If\n                `None`, defaults to `current >= self.target`.\n        \"\"\"", "\n", "\n", "if", "finalize", "is", "None", ":", "\n", "            ", "if", "self", ".", "target", "is", "None", ":", "\n", "                ", "finalize", "=", "False", "\n", "", "else", ":", "\n", "                ", "finalize", "=", "current", ">=", "self", ".", "target", "\n", "\n", "", "", "values", "=", "values", "or", "[", "]", "\n", "for", "k", ",", "v", "in", "values", ":", "\n", "            ", "if", "k", "not", "in", "self", ".", "_values_order", ":", "\n", "                ", "self", ".", "_values_order", ".", "append", "(", "k", ")", "\n", "", "if", "k", "not", "in", "self", ".", "stateful_metrics", ":", "\n", "# In the case that progress bar doesn't have a target value in the first", "\n", "# epoch, both on_batch_end and on_epoch_end will be called, which will", "\n", "# cause 'current' and 'self._seen_so_far' to have the same value. Force", "\n", "# the minimal value to 1 here, otherwise stateful_metric will be 0s.", "\n", "                ", "value_base", "=", "max", "(", "current", "-", "self", ".", "_seen_so_far", ",", "1", ")", "\n", "if", "k", "not", "in", "self", ".", "_values", ":", "\n", "                    ", "self", ".", "_values", "[", "k", "]", "=", "[", "v", "*", "value_base", ",", "value_base", "]", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_values", "[", "k", "]", "[", "0", "]", "+=", "v", "*", "value_base", "\n", "self", ".", "_values", "[", "k", "]", "[", "1", "]", "+=", "value_base", "\n", "", "", "else", ":", "\n", "# Stateful metrics output a numeric value. This representation", "\n", "# means \"take an average from a single value\" but keeps the", "\n", "# numeric formatting.", "\n", "                ", "self", ".", "_values", "[", "k", "]", "=", "[", "v", ",", "1", "]", "\n", "", "", "self", ".", "_seen_so_far", "=", "current", "\n", "\n", "now", "=", "time", ".", "time", "(", ")", "\n", "info", "=", "' - %.0fs'", "%", "(", "now", "-", "self", ".", "_start", ")", "\n", "if", "self", ".", "verbose", "==", "1", ":", "\n", "            ", "if", "now", "-", "self", ".", "_last_update", "<", "self", ".", "interval", "and", "not", "finalize", ":", "\n", "                ", "return", "\n", "\n", "", "prev_total_width", "=", "self", ".", "_total_width", "\n", "if", "self", ".", "_dynamic_display", ":", "\n", "                ", "sys", ".", "stderr", ".", "write", "(", "'\\b'", "*", "prev_total_width", ")", "\n", "sys", ".", "stderr", ".", "write", "(", "'\\r'", ")", "\n", "", "else", ":", "\n", "                ", "sys", ".", "stderr", ".", "write", "(", "'\\n'", ")", "\n", "\n", "", "if", "self", ".", "target", "is", "not", "None", ":", "\n", "                ", "numdigits", "=", "int", "(", "np", ".", "log10", "(", "self", ".", "target", ")", ")", "+", "1", "\n", "bar", "=", "(", "'%'", "+", "str", "(", "numdigits", ")", "+", "'d/%d ['", ")", "%", "(", "current", ",", "self", ".", "target", ")", "\n", "prog", "=", "float", "(", "current", ")", "/", "self", ".", "target", "\n", "prog_width", "=", "int", "(", "self", ".", "width", "*", "prog", ")", "\n", "if", "prog_width", ">", "0", ":", "\n", "                    ", "bar", "+=", "(", "'='", "*", "(", "prog_width", "-", "1", ")", ")", "\n", "if", "current", "<", "self", ".", "target", ":", "\n", "                        ", "bar", "+=", "'>'", "\n", "", "else", ":", "\n", "                        ", "bar", "+=", "'='", "\n", "", "", "bar", "+=", "(", "'.'", "*", "(", "self", ".", "width", "-", "prog_width", ")", ")", "\n", "bar", "+=", "']'", "\n", "", "else", ":", "\n", "                ", "bar", "=", "'%7d/Unknown'", "%", "current", "\n", "\n", "", "self", ".", "_total_width", "=", "len", "(", "bar", ")", "\n", "sys", ".", "stderr", ".", "write", "(", "bar", ")", "\n", "\n", "if", "current", ":", "\n", "                ", "time_per_unit", "=", "(", "now", "-", "self", ".", "_start", ")", "/", "current", "\n", "", "else", ":", "\n", "                ", "time_per_unit", "=", "0", "\n", "\n", "", "if", "self", ".", "target", "is", "None", "or", "finalize", ":", "\n", "                ", "if", "time_per_unit", ">=", "1", "or", "time_per_unit", "==", "0", ":", "\n", "                    ", "info", "+=", "' %.0fs/%s'", "%", "(", "time_per_unit", ",", "self", ".", "unit_name", ")", "\n", "", "elif", "time_per_unit", ">=", "1e-3", ":", "\n", "                    ", "info", "+=", "' %.0fms/%s'", "%", "(", "time_per_unit", "*", "1e3", ",", "self", ".", "unit_name", ")", "\n", "", "else", ":", "\n", "                    ", "info", "+=", "' %.0fus/%s'", "%", "(", "time_per_unit", "*", "1e6", ",", "self", ".", "unit_name", ")", "\n", "", "", "else", ":", "\n", "                ", "eta", "=", "time_per_unit", "*", "(", "self", ".", "target", "-", "current", ")", "\n", "if", "eta", ">", "3600", ":", "\n", "                    ", "eta_format", "=", "'%d:%02d:%02d'", "%", "(", "eta", "//", "3600", ",", "\n", "(", "eta", "%", "3600", ")", "//", "60", ",", "eta", "%", "60", ")", "\n", "", "elif", "eta", ">", "60", ":", "\n", "                    ", "eta_format", "=", "'%d:%02d'", "%", "(", "eta", "//", "60", ",", "eta", "%", "60", ")", "\n", "", "else", ":", "\n", "                    ", "eta_format", "=", "'%ds'", "%", "eta", "\n", "\n", "", "info", "=", "' - ETA: %s'", "%", "eta_format", "\n", "\n", "", "for", "k", "in", "self", ".", "_values_order", ":", "\n", "                ", "info", "+=", "' - %s:'", "%", "k", "\n", "if", "isinstance", "(", "self", ".", "_values", "[", "k", "]", ",", "list", ")", ":", "\n", "                    ", "avg", "=", "np", ".", "mean", "(", "self", ".", "_values", "[", "k", "]", "[", "0", "]", "/", "\n", "max", "(", "1", ",", "self", ".", "_values", "[", "k", "]", "[", "1", "]", ")", ")", "\n", "if", "abs", "(", "avg", ")", ">", "1e-3", ":", "\n", "                        ", "info", "+=", "' %.4f'", "%", "avg", "\n", "", "else", ":", "\n", "                        ", "info", "+=", "' %.4e'", "%", "avg", "\n", "", "", "else", ":", "\n", "                    ", "info", "+=", "' %s'", "%", "self", ".", "_values", "[", "k", "]", "\n", "\n", "", "", "self", ".", "_total_width", "+=", "len", "(", "info", ")", "\n", "if", "prev_total_width", ">", "self", ".", "_total_width", ":", "\n", "                ", "info", "+=", "(", "' '", "*", "(", "prev_total_width", "-", "self", ".", "_total_width", ")", ")", "\n", "\n", "", "if", "finalize", ":", "\n", "                ", "info", "+=", "'\\n'", "\n", "\n", "", "sys", ".", "stderr", ".", "write", "(", "info", ")", "\n", "sys", ".", "stderr", ".", "flush", "(", ")", "\n", "\n", "", "elif", "self", ".", "verbose", "==", "2", ":", "\n", "            ", "if", "finalize", ":", "\n", "                ", "numdigits", "=", "int", "(", "np", ".", "log10", "(", "self", ".", "target", ")", ")", "+", "1", "\n", "count", "=", "(", "'%'", "+", "str", "(", "numdigits", ")", "+", "'d/%d'", ")", "%", "(", "current", ",", "self", ".", "target", ")", "\n", "info", "=", "count", "+", "info", "\n", "for", "k", "in", "self", ".", "_values_order", ":", "\n", "                    ", "info", "+=", "' - %s:'", "%", "k", "\n", "avg", "=", "np", ".", "mean", "(", "self", ".", "_values", "[", "k", "]", "[", "0", "]", "/", "\n", "max", "(", "1", ",", "self", ".", "_values", "[", "k", "]", "[", "1", "]", ")", ")", "\n", "if", "avg", ">", "1e-3", ":", "\n", "                        ", "info", "+=", "' %.4f'", "%", "avg", "\n", "", "else", ":", "\n", "                        ", "info", "+=", "' %.4e'", "%", "avg", "\n", "", "", "info", "+=", "'\\n'", "\n", "\n", "sys", ".", "stderr", ".", "write", "(", "info", ")", "\n", "sys", ".", "stderr", ".", "flush", "(", ")", "\n", "\n", "", "", "self", ".", "_last_update", "=", "now", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.progbar.Progbar.add": [[207, 209], ["progbar.Progbar.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], ["", "def", "add", "(", "self", ",", "n", ",", "values", "=", "None", ")", ":", "\n", "        ", "self", ".", "update", "(", "self", ".", "_seen_so_far", "+", "n", ",", "values", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log": [[24, 33], ["time.time", "time.localtime", "time.strftime", "paddle.distributed.ParallelEnv", "print", "sys.stdout.flush"], "function", ["None"], ["def", "log", "(", "level", "=", "2", ",", "message", "=", "\"\"", ")", ":", "\n", "    ", "if", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "local_rank", "==", "0", ":", "\n", "        ", "current_time", "=", "time", ".", "time", "(", ")", "\n", "time_array", "=", "time", ".", "localtime", "(", "current_time", ")", "\n", "current_time", "=", "time", ".", "strftime", "(", "\"%Y-%m-%d %H:%M:%S\"", ",", "time_array", ")", "\n", "if", "log_level", ">=", "level", ":", "\n", "            ", "print", "(", "\"{} [{}]\\t{}\"", ".", "format", "(", "current_time", ",", "levels", "[", "level", "]", ",", "message", ")", "\n", ".", "encode", "(", "\"utf-8\"", ")", ".", "decode", "(", "\"latin1\"", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.debug": [[35, 37], ["logger.log"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "", "", "def", "debug", "(", "message", "=", "\"\"", ")", ":", "\n", "    ", "log", "(", "level", "=", "3", ",", "message", "=", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.info": [[39, 41], ["logger.log"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "def", "info", "(", "message", "=", "\"\"", ")", ":", "\n", "    ", "log", "(", "level", "=", "2", ",", "message", "=", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning": [[43, 45], ["logger.log"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "def", "warning", "(", "message", "=", "\"\"", ")", ":", "\n", "    ", "log", "(", "level", "=", "1", ",", "message", "=", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.error": [[47, 49], ["logger.log"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "def", "error", "(", "message", "=", "\"\"", ")", ":", "\n", "    ", "log", "(", "level", "=", "0", ",", "message", "=", "message", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.__init__": [[56, 72], ["object.__init__", "isinstance", "ema.EMA._model.named_parameters", "param.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "model", ",", "decay", "=", "0.99", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "isinstance", "(", "model", ",", "paddle", ".", "nn", ".", "Layer", ")", ",", "\"The model should be the instance of paddle.nn.Layer.\"", "\n", "assert", "decay", ">=", "0", "and", "decay", "<=", "1.0", ",", "\"The decay = {} should in [0.0, 1.0]\"", ".", "format", "(", "decay", ")", "\n", "\n", "self", ".", "_model", "=", "model", "\n", "self", ".", "_decay", "=", "decay", "\n", "self", ".", "_ema_data", "=", "{", "}", "\n", "self", ".", "_backup_data", "=", "{", "}", "\n", "\n", "for", "name", ",", "param", "in", "self", ".", "_model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "not", "param", ".", "stop_gradient", ":", "\n", "                ", "self", ".", "_ema_data", "[", "name", "]", "=", "param", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step": [[73, 83], ["ema.EMA._model.named_parameters", "param.numpy"], "methods", ["None"], ["", "", "", "def", "step", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Calculate the EMA data for all trainable parameters.\n        \"\"\"", "\n", "for", "name", ",", "param", "in", "self", ".", "_model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "not", "param", ".", "stop_gradient", ":", "\n", "                ", "assert", "name", "in", "self", ".", "_ema_data", ",", "\"The param ({}) isn't in the model\"", ".", "format", "(", "name", ")", "\n", "self", ".", "_ema_data", "[", "name", "]", "=", "self", ".", "_decay", "*", "self", ".", "_ema_data", "[", "name", "]", "+", "(", "1.0", "-", "self", ".", "_decay", ")", "*", "param", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.apply": [[84, 94], ["ema.EMA._model.named_parameters", "param.numpy", "param.set_value"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.set_value"], ["", "", "", "def", "apply", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Save the origin data and use the EMA data to replace the origin data.\n        \"\"\"", "\n", "for", "name", ",", "param", "in", "self", ".", "_model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "not", "param", ".", "stop_gradient", ":", "\n", "                ", "assert", "name", "in", "self", ".", "_ema_data", ",", "\"The param ({}) isn't in the model\"", ".", "format", "(", "name", ")", "\n", "self", ".", "_backup_data", "[", "name", "]", "=", "param", ".", "numpy", "(", ")", "\n", "param", ".", "set_value", "(", "self", ".", "_ema_data", "[", "name", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.restore": [[95, 105], ["ema.EMA._model.named_parameters", "param.set_value"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.set_value"], ["", "", "", "def", "restore", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Restore the origin data to the model.\n        \"\"\"", "\n", "for", "name", ",", "param", "in", "self", ".", "_model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "not", "param", ".", "stop_gradient", ":", "\n", "                ", "assert", "name", "in", "self", ".", "_backup_data", ",", "\"The param ({}) isn't in the model\"", ".", "format", "(", "name", ")", "\n", "param", ".", "set_value", "(", "self", ".", "_backup_data", "[", "name", "]", ")", "\n", "", "", "self", ".", "_backup_data", "=", "{", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.progress": [[29, 38], ["sys.stdout.write", "time.time", "sys.stdout.flush", "time.time"], "function", ["None"], ["def", "progress", "(", "str", ",", "end", "=", "False", ")", ":", "\n", "    ", "global", "lasttime", "\n", "if", "end", ":", "\n", "        ", "str", "+=", "\"\\n\"", "\n", "lasttime", "=", "0", "\n", "", "if", "time", ".", "time", "(", ")", "-", "lasttime", ">=", "FLUSH_INTERVAL", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "\"\\r%s\"", "%", "str", ")", "\n", "lasttime", "=", "time", ".", "time", "(", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download._download_file": [[40, 65], ["requests.get", "requests.get.headers.get", "print", "open", "shutil.copyfileobj", "open", "int", "time.time", "requests.get.iter_content", "download.progress", "print", "len", "f.write", "int", "download.progress", "os.path.basename", "float"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.progress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.progress"], ["", "", "def", "_download_file", "(", "url", ",", "savepath", ",", "print_progress", ")", ":", "\n", "    ", "if", "print_progress", ":", "\n", "        ", "print", "(", "\"Connecting to {}\"", ".", "format", "(", "url", ")", ")", "\n", "", "r", "=", "requests", ".", "get", "(", "url", ",", "stream", "=", "True", ",", "timeout", "=", "15", ")", "\n", "total_length", "=", "r", ".", "headers", ".", "get", "(", "'content-length'", ")", "\n", "\n", "if", "total_length", "is", "None", ":", "\n", "        ", "with", "open", "(", "savepath", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "shutil", ".", "copyfileobj", "(", "r", ".", "raw", ",", "f", ")", "\n", "", "", "else", ":", "\n", "        ", "with", "open", "(", "savepath", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "dl", "=", "0", "\n", "total_length", "=", "int", "(", "total_length", ")", "\n", "starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "print_progress", ":", "\n", "                ", "print", "(", "\"Downloading %s\"", "%", "os", ".", "path", ".", "basename", "(", "savepath", ")", ")", "\n", "", "for", "data", "in", "r", ".", "iter_content", "(", "chunk_size", "=", "4096", ")", ":", "\n", "                ", "dl", "+=", "len", "(", "data", ")", "\n", "f", ".", "write", "(", "data", ")", "\n", "if", "print_progress", ":", "\n", "                    ", "done", "=", "int", "(", "50", "*", "dl", "/", "total_length", ")", "\n", "progress", "(", "\"[%-50s] %.2f%%\"", "%", "\n", "(", "'='", "*", "done", ",", "float", "(", "100", "*", "dl", ")", "/", "total_length", ")", ")", "\n", "", "", "", "if", "print_progress", ":", "\n", "            ", "progress", "(", "\"[%-50s] %.2f%%\"", "%", "(", "'='", "*", "50", ",", "100", ")", ",", "end", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download._uncompress_file_zip": [[67, 77], ["zipfile.ZipFile", "zipfile.ZipFile.namelist", "len", "enumerate", "zipfile.ZipFile.close", "zipfile.ZipFile.extract"], "function", ["None"], ["", "", "", "def", "_uncompress_file_zip", "(", "filepath", ",", "extrapath", ")", ":", "\n", "    ", "files", "=", "zipfile", ".", "ZipFile", "(", "filepath", ",", "'r'", ")", "\n", "filelist", "=", "files", ".", "namelist", "(", ")", "\n", "rootpath", "=", "filelist", "[", "0", "]", "\n", "total_num", "=", "len", "(", "filelist", ")", "\n", "for", "index", ",", "file", "in", "enumerate", "(", "filelist", ")", ":", "\n", "        ", "files", ".", "extract", "(", "file", ",", "extrapath", ")", "\n", "yield", "total_num", ",", "index", ",", "rootpath", "\n", "", "files", ".", "close", "(", ")", "\n", "yield", "total_num", ",", "index", ",", "rootpath", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download._uncompress_file_tar": [[79, 89], ["tarfile.open", "tarfile.open.getnames", "len", "enumerate", "tarfile.open.close", "tarfile.open.extract"], "function", ["None"], ["", "def", "_uncompress_file_tar", "(", "filepath", ",", "extrapath", ",", "mode", "=", "\"r:gz\"", ")", ":", "\n", "    ", "files", "=", "tarfile", ".", "open", "(", "filepath", ",", "mode", ")", "\n", "filelist", "=", "files", ".", "getnames", "(", ")", "\n", "total_num", "=", "len", "(", "filelist", ")", "\n", "rootpath", "=", "filelist", "[", "0", "]", "\n", "for", "index", ",", "file", "in", "enumerate", "(", "filelist", ")", ":", "\n", "        ", "files", ".", "extract", "(", "file", ",", "extrapath", ")", "\n", "yield", "total_num", ",", "index", ",", "rootpath", "\n", "", "files", ".", "close", "(", ")", "\n", "yield", "total_num", ",", "index", ",", "rootpath", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download._uncompress_file": [[91, 114], ["filepath.endswith", "functools.partial.", "print", "filepath.endswith", "download.progress", "os.remove", "functools.partial", "functools.partial", "int", "download.progress", "os.path.basename", "float", "float"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.progress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.progress"], ["", "def", "_uncompress_file", "(", "filepath", ",", "extrapath", ",", "delete_file", ",", "print_progress", ")", ":", "\n", "    ", "if", "print_progress", ":", "\n", "        ", "print", "(", "\"Uncompress %s\"", "%", "os", ".", "path", ".", "basename", "(", "filepath", ")", ")", "\n", "\n", "", "if", "filepath", ".", "endswith", "(", "\"zip\"", ")", ":", "\n", "        ", "handler", "=", "_uncompress_file_zip", "\n", "", "elif", "filepath", ".", "endswith", "(", "\"tgz\"", ")", ":", "\n", "        ", "handler", "=", "functools", ".", "partial", "(", "_uncompress_file_tar", ",", "mode", "=", "\"r:*\"", ")", "\n", "", "else", ":", "\n", "        ", "handler", "=", "functools", ".", "partial", "(", "_uncompress_file_tar", ",", "mode", "=", "\"r\"", ")", "\n", "\n", "", "for", "total_num", ",", "index", ",", "rootpath", "in", "handler", "(", "filepath", ",", "extrapath", ")", ":", "\n", "        ", "if", "print_progress", ":", "\n", "            ", "done", "=", "int", "(", "50", "*", "float", "(", "index", ")", "/", "total_num", ")", "\n", "progress", "(", "\"[%-50s] %.2f%%\"", "%", "\n", "(", "'='", "*", "done", ",", "float", "(", "100", "*", "index", ")", "/", "total_num", ")", ")", "\n", "", "", "if", "print_progress", ":", "\n", "        ", "progress", "(", "\"[%-50s] %.2f%%\"", "%", "(", "'='", "*", "50", ",", "100", ")", ",", "end", "=", "True", ")", "\n", "\n", "", "if", "delete_file", ":", "\n", "        ", "os", ".", "remove", "(", "filepath", ")", "\n", "\n", "", "return", "rootpath", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress": [[116, 164], ["os.path.join", "os.path.join", "url.split", "os.path.exists", "os.makedirs", "os.path.join", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "shutil.move", "os.path.join.split", "shutil.rmtree", "shutil.rmtree", "shutil.rmtree", "os.path.exists", "download._uncompress_file", "os.path.join", "os.path.exists", "download._download_file", "shutil.move", "tarfile.is_tarfile", "zipfile.is_zipfile", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor._uncompress_file", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor._download_file"], ["", "def", "download_file_and_uncompress", "(", "url", ",", "\n", "savepath", "=", "None", ",", "\n", "extrapath", "=", "None", ",", "\n", "extraname", "=", "None", ",", "\n", "print_progress", "=", "True", ",", "\n", "cover", "=", "False", ",", "\n", "delete_file", "=", "True", ")", ":", "\n", "    ", "if", "savepath", "is", "None", ":", "\n", "        ", "savepath", "=", "\".\"", "\n", "\n", "", "if", "extrapath", "is", "None", ":", "\n", "        ", "extrapath", "=", "\".\"", "\n", "\n", "", "savename", "=", "url", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "savepath", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "savepath", ")", "\n", "\n", "", "savepath", "=", "os", ".", "path", ".", "join", "(", "savepath", ",", "savename", ")", "\n", "savename", "=", "\".\"", ".", "join", "(", "savename", ".", "split", "(", "\".\"", ")", "[", ":", "-", "1", "]", ")", "\n", "savename", "=", "os", ".", "path", ".", "join", "(", "extrapath", ",", "savename", ")", "\n", "extraname", "=", "savename", "if", "extraname", "is", "None", "else", "os", ".", "path", ".", "join", "(", "extrapath", ",", "\n", "extraname", ")", "\n", "\n", "if", "cover", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "savepath", ")", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "savepath", ")", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "savename", ")", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "savename", ")", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "extraname", ")", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "extraname", ")", "\n", "\n", "", "", "if", "not", "os", ".", "path", ".", "exists", "(", "extraname", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "savename", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "savepath", ")", ":", "\n", "                ", "_download_file", "(", "url", ",", "savepath", ",", "print_progress", ")", "\n", "\n", "", "if", "(", "not", "tarfile", ".", "is_tarfile", "(", "savepath", ")", ")", "and", "(", "\n", "not", "zipfile", ".", "is_zipfile", "(", "savepath", ")", ")", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "exists", "(", "extraname", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "extraname", ")", "\n", "", "shutil", ".", "move", "(", "savepath", ",", "extraname", ")", "\n", "return", "extraname", "\n", "\n", "", "savename", "=", "_uncompress_file", "(", "savepath", ",", "extrapath", ",", "delete_file", ",", "\n", "print_progress", ")", "\n", "savename", "=", "os", ".", "path", ".", "join", "(", "extrapath", ",", "savename", ")", "\n", "", "shutil", ".", "move", "(", "savename", ",", "extraname", ")", "\n", "", "return", "extraname", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize": [[44, 78], ["numpy.array().astype", "cv2.LUT", "cv2.LUT", "cv2.LUT", "numpy.dstack", "cv2.imread", "cv2.addWeighted", "os.path.join", "cv2.imwrite", "range", "numpy.array", "os.path.exists", "os.makedirs", "os.path.split", "len"], "function", ["None"], ["\n", "im", "=", "cv2", ".", "imread", "(", "image", ")", "\n", "vis_result", "=", "cv2", ".", "addWeighted", "(", "im", ",", "weight", ",", "pseudo_img", ",", "1", "-", "weight", ",", "0", ")", "\n", "\n", "if", "save_dir", "is", "not", "None", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "image_name", "=", "os", ".", "path", ".", "split", "(", "image", ")", "[", "-", "1", "]", "\n", "out_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "image_name", ")", "\n", "cv2", ".", "imwrite", "(", "out_path", ",", "vis_result", ")", "\n", "", "else", ":", "\n", "        ", "return", "vis_result", "\n", "\n", "\n", "", "", "def", "get_pseudo_color_map", "(", "pred", ",", "color_map", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Get the pseudo color image.\n\n    Args:\n        pred (numpy.ndarray): the origin predicted image.\n        color_map (list, optional): the palette color map. Default: None,\n            use paddleseg's default color map.\n\n    Returns:\n        (numpy.ndarray): the pseduo image.\n    \"\"\"", "\n", "pred_mask", "=", "PILImage", ".", "fromarray", "(", "pred", ".", "astype", "(", "np", ".", "uint8", ")", ",", "mode", "=", "'P'", ")", "\n", "if", "color_map", "is", "None", ":", "\n", "        ", "color_map", "=", "get_color_map_list", "(", "256", ")", "\n", "", "pred_mask", ".", "putpalette", "(", "color_map", ")", "\n", "return", "pred_mask", "\n", "\n", "\n", "", "def", "get_color_map_list", "(", "num_classes", ",", "custom_color", "=", "None", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.get_pseudo_color_map": [[80, 97], ["PIL.Image.fromarray", "PILImage.fromarray.putpalette", "pred.astype", "visualize.get_color_map_list"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes_autolabeling.get_color_map_list"], ["\n", "\n", "num_classes", "+=", "1", "\n", "color_map", "=", "num_classes", "*", "[", "0", ",", "0", ",", "0", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "num_classes", ")", ":", "\n", "        ", "j", "=", "0", "\n", "lab", "=", "i", "\n", "while", "lab", ":", "\n", "            ", "color_map", "[", "i", "*", "3", "]", "|=", "(", "(", "(", "lab", ">>", "0", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "color_map", "[", "i", "*", "3", "+", "1", "]", "|=", "(", "(", "(", "lab", ">>", "1", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.get_color_map_list": [[99, 128], ["range", "len"], "function", ["None"], ["j", "+=", "1", "\n", "lab", ">>=", "3", "\n", "", "", "color_map", "=", "color_map", "[", "3", ":", "]", "\n", "\n", "if", "custom_color", ":", "\n", "        ", "color_map", "[", ":", "len", "(", "custom_color", ")", "]", "=", "custom_color", "\n", "", "return", "color_map", "\n", "\n", "\n", "", "def", "paste_images", "(", "image_list", ")", ":", "\n", "    ", "\"\"\"\n    Paste all image to a image.\n    Args:\n        image_list (List or Tuple): The images to be pasted and their size are the same.\n    Returns:\n        result_img (PIL.Image): The pasted image.\n    \"\"\"", "\n", "assert", "isinstance", "(", "image_list", ",", "\n", "(", "list", ",", "tuple", ")", ")", ",", "\"image_list should be a list or tuple\"", "\n", "assert", "len", "(", "\n", "image_list", ")", ">", "1", ",", "\"The length of image_list should be greater than 1\"", "\n", "\n", "pil_img_list", "=", "[", "]", "\n", "for", "img", "in", "image_list", ":", "\n", "        ", "if", "isinstance", "(", "img", ",", "str", ")", ":", "\n", "            ", "assert", "os", ".", "path", ".", "exists", "(", "img", ")", ",", "\"The image is not existed: {}\"", ".", "format", "(", "\n", "img", ")", "\n", "img", "=", "PILImage", ".", "open", "(", "img", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "", "elif", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.paste_images": [[108, 144], ["isinstance", "PIL.Image.new", "enumerate", "len", "isinstance", "pil_img_list.append", "PILImage.new.paste", "os.path.exists", "PIL.Image.open", "numpy.array", "isinstance", "PIL.Image.fromarray", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "paste_images", "(", "image_list", ")", ":", "\n", "    ", "\"\"\"\n    Paste all image to a image.\n    Args:\n        image_list (List or Tuple): The images to be pasted and their size are the same.\n    Returns:\n        result_img (PIL.Image): The pasted image.\n    \"\"\"", "\n", "assert", "isinstance", "(", "image_list", ",", "\n", "(", "list", ",", "tuple", ")", ")", ",", "\"image_list should be a list or tuple\"", "\n", "assert", "len", "(", "\n", "image_list", ")", ">", "1", ",", "\"The length of image_list should be greater than 1\"", "\n", "\n", "pil_img_list", "=", "[", "]", "\n", "for", "img", "in", "image_list", ":", "\n", "        ", "if", "isinstance", "(", "img", ",", "str", ")", ":", "\n", "            ", "assert", "os", ".", "path", ".", "exists", "(", "img", ")", ",", "\"The image is not existed: {}\"", ".", "format", "(", "\n", "img", ")", "\n", "img", "=", "PILImage", ".", "open", "(", "img", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "", "elif", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "img", "=", "PILImage", ".", "fromarray", "(", "img", ")", "\n", "", "pil_img_list", ".", "append", "(", "img", ")", "\n", "\n", "", "sample_img", "=", "pil_img_list", "[", "0", "]", "\n", "size", "=", "sample_img", ".", "size", "\n", "for", "img", "in", "pil_img_list", ":", "\n", "        ", "assert", "size", "==", "img", ".", "size", ",", "\"The image size in image_list should be the same\"", "\n", "\n", "", "width", ",", "height", "=", "sample_img", ".", "size", "\n", "result_img", "=", "PILImage", ".", "new", "(", "sample_img", ".", "mode", ",", "\n", "(", "width", "*", "len", "(", "pil_img_list", ")", ",", "height", ")", ")", "\n", "for", "i", ",", "img", "in", "enumerate", "(", "pil_img_list", ")", ":", "\n", "        ", "result_img", ".", "paste", "(", "img", ",", "box", "=", "(", "width", "*", "i", ",", "0", ")", ")", "\n", "\n", "", "return", "result_img", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.generate_tempdir": [[32, 38], ["tempfile.TemporaryDirectory"], "function", ["None"], ["image_list", "=", "[", "]", "\n", "image_dir", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "image_path", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "splitext", "(", "image_path", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "            ", "image_list", ".", "append", "(", "image_path", ")", "\n", "", "else", ":", "\n", "            ", "image_dir", "=", "os", ".", "path", ".", "dirname", "(", "image_path", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model": [[40, 46], ["utils.load_pretrained_model", "medicalseg.utils.logger.warning"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning"], ["                ", "for", "line", "in", "f", ":", "\n", "                    ", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "len", "(", "line", ".", "split", "(", ")", ")", ">", "1", ":", "\n", "                        ", "raise", "RuntimeError", "(", "\n", "'There should be only one image path per line in `image_path` file. Wrong line: {}'", "\n", ".", "format", "(", "line", ")", ")", "\n", "", "image_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "image_dir", ",", "line", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.download_pretrained_model": [[48, 74], ["urllib.parse.unquote", "urllib.parse.urlparse", "os.path.join.split", "savename.endswith", "utils.generate_tempdir", "os.path.join.split", "savename.split", "filelock.FileLock", "medicalseg.utils.download.download_file_and_uncompress", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.generate_tempdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress"], ["        ", "image_dir", "=", "image_path", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "image_path", ")", ":", "\n", "            ", "for", "f", "in", "files", ":", "\n", "                ", "if", "'.ipynb_checkpoints'", "in", "root", ":", "\n", "                    ", "continue", "\n", "", "if", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "                    ", "image_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", "f", ")", ")", "\n", "", "", "", "image_list", ".", "sort", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\n", "'`image_path` is not found. it should be an image file or a directory including images'", "\n", ")", "\n", "\n", "", "if", "len", "(", "image_list", ")", "==", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "'There are not image file in `image_path`'", ")", "\n", "\n", "", "return", "image_list", ",", "image_dir", "\n", "\n", "\n", "", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "sub_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "sub_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "sub_dir", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model": [[76, 113], ["medicalseg.utils.logger.info", "os.path.exists", "medicalseg.utils.logger.info", "urllib.parse.urlparse", "utils.download_pretrained_model", "paddle.load", "model.state_dict", "model.state_dict.keys", "model.set_dict", "medicalseg.utils.logger.info", "ValueError", "medicalseg.utils.logger.warning", "len", "list", "list", "medicalseg.utils.logger.warning"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.download_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.resume": [[115, 136], ["medicalseg.utils.logger.info", "os.path.exists", "medicalseg.utils.logger.info", "os.path.normpath", "os.path.join", "paddle.load", "os.path.join", "paddle.load", "model.set_state_dict", "optimizer.set_state_dict", "int", "ValueError", "os.path.normpath.split"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.worker_init_fn": [[138, 140], ["numpy.random.seed", "random.randint"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.random_color": [[49, 65], ["numpy.random.randint", "len"], "function", ["None"], ["        ", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "image_name", "=", "os", ".", "path", ".", "split", "(", "image", ")", "[", "-", "1", "]", "\n", "out_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "image_name", ")", "\n", "cv2", ".", "imwrite", "(", "out_path", ",", "vis_result", ")", "\n", "", "else", ":", "\n", "        ", "return", "vis_result", "\n", "\n", "\n", "", "", "def", "get_pseudo_color_map", "(", "pred", ",", "color_map", "=", "None", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.cityscape_colormap": [[67, 91], ["numpy.zeros"], "function", ["None"], ["\n", "pred_mask", "=", "PILImage", ".", "fromarray", "(", "pred", ".", "astype", "(", "np", ".", "uint8", ")", ",", "mode", "=", "'P'", ")", "\n", "if", "color_map", "is", "None", ":", "\n", "        ", "color_map", "=", "get_color_map_list", "(", "256", ")", "\n", "", "pred_mask", ".", "putpalette", "(", "color_map", ")", "\n", "return", "pred_mask", "\n", "\n", "\n", "", "def", "get_color_map_list", "(", "num_classes", ",", "custom_color", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Returns the color map for visualizing the segmentation mask,\n    which can support arbitrary number of classes.\n\n    Args:\n        num_classes (int): Number of classes.\n        custom_color (list, optional): Save images with a custom color map. Default: None, use paddleseg's default color map.\n\n    Returns:\n        (list). The color map.\n    \"\"\"", "\n", "\n", "num_classes", "+=", "1", "\n", "color_map", "=", "num_classes", "*", "[", "0", ",", "0", ",", "0", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_semantic": [[93, 111], ["semantic.astype.astype", "cv2.imwrite", "cv2.addWeighted"], "function", ["None"], ["        ", "j", "=", "0", "\n", "lab", "=", "i", "\n", "while", "lab", ":", "\n", "            ", "color_map", "[", "i", "*", "3", "]", "|=", "(", "(", "(", "lab", ">>", "0", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "color_map", "[", "i", "*", "3", "+", "1", "]", "|=", "(", "(", "(", "lab", ">>", "1", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "color_map", "[", "i", "*", "3", "+", "2", "]", "|=", "(", "(", "(", "lab", ">>", "2", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "j", "+=", "1", "\n", "lab", ">>=", "3", "\n", "", "", "color_map", "=", "color_map", "[", "3", ":", "]", "\n", "\n", "if", "custom_color", ":", "\n", "        ", "color_map", "[", ":", "len", "(", "custom_color", ")", "]", "=", "custom_color", "\n", "", "return", "color_map", "\n", "\n", "\n", "", "def", "paste_images", "(", "image_list", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_instance": [[113, 141], ["numpy.unique", "len", "numpy.zeros", "range", "cv2.imwrite", "visualize.random_color", "cv2.addWeighted", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.random_color"], ["\n", "assert", "isinstance", "(", "image_list", ",", "\n", "(", "list", ",", "tuple", ")", ")", ",", "\"image_list should be a list or tuple\"", "\n", "assert", "len", "(", "\n", "image_list", ")", ">", "1", ",", "\"The length of image_list should be greater than 1\"", "\n", "\n", "pil_img_list", "=", "[", "]", "\n", "for", "img", "in", "image_list", ":", "\n", "        ", "if", "isinstance", "(", "img", ",", "str", ")", ":", "\n", "            ", "assert", "os", ".", "path", ".", "exists", "(", "img", ")", ",", "\"The image is not existed: {}\"", ".", "format", "(", "\n", "img", ")", "\n", "img", "=", "PILImage", ".", "open", "(", "img", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "", "elif", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "img", "=", "PILImage", ".", "fromarray", "(", "img", ")", "\n", "", "pil_img_list", ".", "append", "(", "img", ")", "\n", "\n", "", "sample_img", "=", "pil_img_list", "[", "0", "]", "\n", "size", "=", "sample_img", ".", "size", "\n", "for", "img", "in", "pil_img_list", ":", "\n", "        ", "assert", "size", "==", "img", ".", "size", ",", "\"The image size in image_list should be the same\"", "\n", "\n", "", "width", ",", "height", "=", "sample_img", ".", "size", "\n", "result_img", "=", "PILImage", ".", "new", "(", "sample_img", ".", "mode", ",", "\n", "(", "width", "*", "len", "(", "pil_img_list", ")", ",", "height", ")", ")", "\n", "for", "i", ",", "img", "in", "enumerate", "(", "pil_img_list", ")", ":", "\n", "        ", "result_img", ".", "paste", "(", "img", ",", "box", "=", "(", "width", "*", "i", ",", "0", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_panoptic": [[143, 198], ["numpy.zeros", "set", "numpy.unique", "cv2.imwrite", "tuple", "cv2.addWeighted", "numpy.random.randint", "numpy.maximum", "tuple", "set.add", "numpy.minimum", "tuple", "visualize.visualize_panoptic._random_color"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "return", "result_img", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.op_flops_run.count_syncbn": [[19, 23], ["x.numel", "int"], "function", ["None"], ["def", "count_syncbn", "(", "m", ",", "x", ",", "y", ")", ":", "\n", "    ", "x", "=", "x", "[", "0", "]", "\n", "nelements", "=", "x", ".", "numel", "(", ")", "\n", "m", ".", "total_ops", "+=", "int", "(", "2", "*", "nelements", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.calculate_area": [[21, 62], ["range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "len", "paddle.squeeze", "paddle.squeeze", "len", "paddle.squeeze", "paddle.squeeze", "ValueError", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.concat.append", "paddle.concat.append", "paddle.concat.append", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["import", "cv2", "\n", "import", "numpy", "as", "np", "\n", "from", "scipy", ".", "ndimage", ".", "filters", "import", "convolve", "\n", "from", "scipy", ".", "special", "import", "gamma", "\n", "from", "skimage", ".", "measure", "import", "label", "\n", "\n", "\n", "class", "MSE", "(", ")", ":", "\n", "    ", "\"\"\"\n    Only calculate the unknown region if trimap provided.\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "mse_diffs", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n", "", "def", "update", "(", "self", ",", "pred", ",", "gt", ",", "trimap", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        update metric.\n        Args:\n            pred (np.ndarray): The value range is [0., 255.].\n            gt (np.ndarray): The value range is [0, 255].\n            trimap (np.ndarray, optional) The value is in {0, 128, 255}. Default: None.\n        \"\"\"", "\n", "if", "trimap", "is", "None", ":", "\n", "            ", "trimap", "=", "np", ".", "ones_like", "(", "gt", ")", "*", "128", "\n", "", "if", "not", "(", "pred", ".", "shape", "==", "gt", ".", "shape", "==", "trimap", ".", "shape", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of `pred`, `gt` and `trimap` should be equal. '", "\n", "'but they are {}, {} and {}'", ".", "format", "(", "pred", ".", "shape", ",", "gt", ".", "shape", ",", "\n", "trimap", ".", "shape", ")", ")", "\n", "", "pred", "[", "trimap", "==", "0", "]", "=", "0", "\n", "pred", "[", "trimap", "==", "255", "]", "=", "255", "\n", "\n", "mask", "=", "trimap", "==", "128", "\n", "pixels", "=", "float", "(", "mask", ".", "sum", "(", ")", ")", "\n", "pred", "=", "pred", "/", "255.", "\n", "gt", "=", "gt", "/", "255.", "\n", "diff", "=", "(", "pred", "-", "gt", ")", "*", "mask", "\n", "mse_diff", "=", "(", "diff", "**", "2", ")", ".", "sum", "(", ")", "/", "pixels", "if", "pixels", ">", "0", "else", "0", "\n", "\n", "self", ".", "mse_diffs", "+=", "mse_diff", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.auc_roc": [[64, 108], ["numpy.transpose", "logits.reshape().transpose.reshape().transpose", "numpy.transpose", "label.reshape().squeeze.reshape().squeeze", "RuntimeError", "len", "ValueError", "len", "ValueError", "ValueError", "sklearn.roc_auc_score", "sklearn.roc_auc_score", "len", "logits.reshape().transpose.reshape", "label.reshape().squeeze.reshape", "numpy.unique"], "function", ["None"], ["\n", "return", "mse_diff", "\n", "\n", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "mse", "=", "self", ".", "mse_diffs", "/", "self", ".", "count", "if", "self", ".", "count", ">", "0", "else", "0", "\n", "return", "mse", "\n", "\n", "\n", "", "", "class", "SAD", "(", ")", ":", "\n", "    ", "\"\"\"\n    Only calculate the unknown region if trimap provided.\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "sad_diffs", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n", "", "def", "update", "(", "self", ",", "pred", ",", "gt", ",", "trimap", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        update metric.\n        Args:\n            pred (np.ndarray): The value range is [0., 255.].\n            gt (np.ndarray): The value range is [0., 255.].\n            trimap (np.ndarray, optional)L The value is in {0, 128, 255}. Default: None.\n        \"\"\"", "\n", "if", "trimap", "is", "None", ":", "\n", "            ", "trimap", "=", "np", ".", "ones_like", "(", "gt", ")", "*", "128", "\n", "", "if", "not", "(", "pred", ".", "shape", "==", "gt", ".", "shape", "==", "trimap", ".", "shape", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of `pred`, `gt` and `trimap` should be equal. '", "\n", "'but they are {}, {} and {}'", ".", "format", "(", "pred", ".", "shape", ",", "gt", ".", "shape", ",", "\n", "trimap", ".", "shape", ")", ")", "\n", "", "pred", "[", "trimap", "==", "0", "]", "=", "0", "\n", "pred", "[", "trimap", "==", "255", "]", "=", "255", "\n", "\n", "mask", "=", "trimap", "==", "128", "\n", "pred", "=", "pred", "/", "255.", "\n", "gt", "=", "gt", "/", "255.", "\n", "diff", "=", "(", "pred", "-", "gt", ")", "*", "mask", "\n", "sad_diff", "=", "(", "np", ".", "abs", "(", "diff", ")", ")", ".", "sum", "(", ")", "\n", "\n", "sad_diff", "/=", "1000", "\n", "self", ".", "sad_diffs", "+=", "sad_diff", "\n", "self", ".", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.mean_iou": [[110, 136], ["intersect_area.numpy.numpy", "pred_area.numpy.numpy", "label_area.numpy.numpy", "range", "numpy.mean", "len", "class_iou.append", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["\n", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "sad", "=", "self", ".", "sad_diffs", "/", "self", ".", "count", "if", "self", ".", "count", ">", "0", "else", "0", "\n", "return", "sad", "\n", "\n", "\n", "", "", "class", "Grad", "(", ")", ":", "\n", "    ", "\"\"\"\n    Only calculate the unknown region if trimap provided.\n    Refer to: https://github.com/open-mlab/mmediting/blob/master/mmedit/core/evaluation/metrics.py\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "grad_diffs", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n", "", "def", "gaussian", "(", "self", ",", "x", ",", "sigma", ")", ":", "\n", "        ", "return", "np", ".", "exp", "(", "-", "x", "**", "2", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "/", "(", "sigma", "*", "np", ".", "sqrt", "(", "2", "*", "np", ".", "pi", ")", ")", "\n", "\n", "", "def", "dgaussian", "(", "self", ",", "x", ",", "sigma", ")", ":", "\n", "        ", "return", "-", "x", "*", "self", ".", "gaussian", "(", "x", ",", "sigma", ")", "/", "sigma", "**", "2", "\n", "\n", "", "def", "gauss_filter", "(", "self", ",", "sigma", ",", "epsilon", "=", "1e-2", ")", ":", "\n", "        ", "half_size", "=", "np", ".", "ceil", "(", "\n", "sigma", "*", "np", ".", "sqrt", "(", "-", "2", "*", "np", ".", "log", "(", "np", ".", "sqrt", "(", "2", "*", "np", ".", "pi", ")", "*", "sigma", "*", "epsilon", ")", ")", ")", "\n", "size", "=", "int", "(", "2", "*", "half_size", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.dice": [[138, 164], ["intersect_area.numpy.numpy", "pred_area.numpy.numpy", "label_area.numpy.numpy", "range", "numpy.mean", "len", "class_dice.append", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["filter_x", "=", "np", ".", "zeros", "(", "(", "size", ",", "size", ")", ")", "\n", "for", "i", "in", "range", "(", "size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "size", ")", ":", "\n", "                ", "filter_x", "[", "i", ",", "j", "]", "=", "self", ".", "gaussian", "(", "\n", "i", "-", "half_size", ",", "sigma", ")", "*", "self", ".", "dgaussian", "(", "j", "-", "half_size", ",", "sigma", ")", "\n", "\n", "# normalize filter", "\n", "", "", "norm", "=", "np", ".", "sqrt", "(", "(", "filter_x", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "filter_x", "=", "filter_x", "/", "norm", "\n", "filter_y", "=", "np", ".", "transpose", "(", "filter_x", ")", "\n", "\n", "return", "filter_x", ",", "filter_y", "\n", "\n", "", "def", "gauss_gradient", "(", "self", ",", "img", ",", "sigma", ")", ":", "\n", "        ", "filter_x", ",", "filter_y", "=", "self", ".", "gauss_filter", "(", "sigma", ")", "\n", "img_filtered_x", "=", "cv2", ".", "filter2D", "(", "\n", "img", ",", "-", "1", ",", "filter_x", ",", "borderType", "=", "cv2", ".", "BORDER_REPLICATE", ")", "\n", "img_filtered_y", "=", "cv2", ".", "filter2D", "(", "\n", "img", ",", "-", "1", ",", "filter_y", ",", "borderType", "=", "cv2", ".", "BORDER_REPLICATE", ")", "\n", "return", "np", ".", "sqrt", "(", "img_filtered_x", "**", "2", "+", "img_filtered_y", "**", "2", ")", "\n", "\n", "", "def", "update", "(", "self", ",", "pred", ",", "gt", ",", "trimap", "=", "None", ",", "sigma", "=", "1.4", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.accuracy": [[166, 189], ["intersect_area.numpy.numpy", "pred_area.numpy.numpy", "range", "len", "class_acc.append", "numpy.sum", "numpy.sum", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["\n", "if", "trimap", "is", "None", ":", "\n", "            ", "trimap", "=", "np", ".", "ones_like", "(", "gt", ")", "*", "128", "\n", "", "if", "not", "(", "pred", ".", "shape", "==", "gt", ".", "shape", "==", "trimap", ".", "shape", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of `pred`, `gt` and `trimap` should be equal. '", "\n", "'but they are {}, {} and {}'", ".", "format", "(", "pred", ".", "shape", ",", "gt", ".", "shape", ",", "\n", "trimap", ".", "shape", ")", ")", "\n", "", "pred", "[", "trimap", "==", "0", "]", "=", "0", "\n", "pred", "[", "trimap", "==", "255", "]", "=", "255", "\n", "\n", "gt", "=", "gt", ".", "squeeze", "(", ")", "\n", "pred", "=", "pred", ".", "squeeze", "(", ")", "\n", "gt", "=", "gt", ".", "astype", "(", "np", ".", "float64", ")", "\n", "pred", "=", "pred", ".", "astype", "(", "np", ".", "float64", ")", "\n", "gt_normed", "=", "np", ".", "zeros_like", "(", "gt", ")", "\n", "pred_normed", "=", "np", ".", "zeros_like", "(", "pred", ")", "\n", "cv2", ".", "normalize", "(", "gt", ",", "gt_normed", ",", "1.", ",", "0.", ",", "cv2", ".", "NORM_MINMAX", ")", "\n", "cv2", ".", "normalize", "(", "pred", ",", "pred_normed", ",", "1.", ",", "0.", ",", "cv2", ".", "NORM_MINMAX", ")", "\n", "\n", "gt_grad", "=", "self", ".", "gauss_gradient", "(", "gt_normed", ",", "sigma", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "pred_grad", "=", "self", ".", "gauss_gradient", "(", "pred_normed", ",", "sigma", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.kappa": [[191, 211], ["intersect_area.numpy.numpy", "pred_area.numpy.numpy", "label_area.numpy.numpy", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["\n", "grad_diff", "/=", "1000", "\n", "self", ".", "grad_diffs", "+=", "grad_diff", "\n", "self", ".", "count", "+=", "1", "\n", "\n", "return", "grad_diff", "\n", "\n", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "grad", "=", "self", ".", "grad_diffs", "/", "self", ".", "count", "if", "self", ".", "count", ">", "0", "else", "0", "\n", "return", "grad", "\n", "\n", "\n", "", "", "class", "Conn", "(", ")", ":", "\n", "    ", "\"\"\"\n    Only calculate the unknown region if trimap provided.\n    Refer to: Refer to: https://github.com/open-mlab/mmediting/blob/master/mmedit/core/evaluation/metrics.py\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "conn_diffs", "=", "0", "\n", "self", ".", "count", "=", "0", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.add_image_vdl": [[22, 42], ["im.clone().detach().squeeze().numpy", "pred.clone().detach().squeeze().numpy", "label.clone().detach().squeeze().numpy", "range", "print", "writer.add_image", "writer.add_image", "writer.add_image", "writer.add_image", "im.clone().detach().squeeze", "pred.clone().detach().squeeze", "label.clone().detach().squeeze", "im.clone().detach", "pred.clone().detach", "label.clone().detach", "im.clone", "pred.clone", "label.clone"], "function", ["None"], ["def", "visualize", "(", "image", ",", "result", ",", "color_map", ",", "save_dir", "=", "None", ",", "weight", "=", "0.6", ")", ":", "\n", "    ", "\"\"\"\n    Convert predict result to color image, and save added image.\n\n    Args:\n        image (str): The path of origin image.\n        result (np.ndarray): The predict result of image.\n        color_map (list): The color used to save the prediction results.\n        save_dir (str): The directory for saving visual image. Default: None.\n        weight (float): The image weight of visual image, and the result weight is (1 - weight). Default: 0.6\n\n    Returns:\n        vis_result (np.ndarray): If `save_dir` is None, return the visualized result.\n    \"\"\"", "\n", "\n", "color_map", "=", "[", "color_map", "[", "i", ":", "i", "+", "3", "]", "for", "i", "in", "range", "(", "0", ",", "len", "(", "color_map", ")", ",", "3", ")", "]", "\n", "color_map", "=", "np", ".", "array", "(", "color_map", ")", ".", "astype", "(", "\"uint8\"", ")", "\n", "# Use OpenCV LUT for color mapping", "\n", "c1", "=", "cv2", ".", "LUT", "(", "result", ",", "color_map", "[", ":", ",", "0", "]", ")", "\n", "c2", "=", "cv2", ".", "LUT", "(", "result", ",", "color_map", "[", ":", ",", "1", "]", ")", "\n", "c3", "=", "cv2", ".", "LUT", "(", "result", ",", "color_map", "[", ":", ",", "2", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.loss_utils.check_logits_losses": [[16, 23], ["len", "len", "RuntimeError"], "function", ["None"], ["def", "check_logits_losses", "(", "logits_list", ",", "losses", ")", ":", "\n", "    ", "len_logits", "=", "len", "(", "logits_list", ")", "\n", "len_losses", "=", "len", "(", "losses", "[", "'types'", "]", ")", "\n", "if", "len_logits", "!=", "len_losses", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The length of logits_list should equal to the types of loss config: {} != {}.'", "\n", ".", "format", "(", "len_logits", ",", "len_losses", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.loss_utils.loss_computation": [[25, 53], ["loss_utils.check_logits_losses", "range", "len", "loss_list.append", "loss_i", "loss_i", "loss_list.append", "loss_list.append", "loss_i", "loss_list.append", "loss_list.append", "loss_i", "logits_list[].detach", "loss_i"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.check_logits_losses", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "loss_computation", "(", "logits_list", ",", "labels", ",", "losses", ",", "edges", "=", "None", ")", ":", "\n", "    ", "check_logits_losses", "(", "logits_list", ",", "losses", ")", "\n", "loss_list", "=", "[", "]", "\n", "per_channel_dice", "=", "None", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "logits_list", ")", ")", ":", "\n", "        ", "logits", "=", "logits_list", "[", "i", "]", "\n", "loss_i", "=", "losses", "[", "'types'", "]", "[", "i", "]", "\n", "coef_i", "=", "losses", "[", "'coef'", "]", "[", "i", "]", "\n", "\n", "if", "loss_i", ".", "__class__", ".", "__name__", "in", "(", "'BCELoss'", ",", "'FocalLoss'", "\n", ")", "and", "loss_i", ".", "edge_label", ":", "\n", "# If use edges as labels According to loss type.", "\n", "            ", "loss_list", ".", "append", "(", "coef_i", "*", "loss_i", "(", "logits", ",", "edges", ")", ")", "\n", "", "elif", "loss_i", ".", "__class__", ".", "__name__", "==", "'MixedLoss'", ":", "\n", "            ", "mixed_loss_list", ",", "per_channel_dice", "=", "loss_i", "(", "logits", ",", "labels", ")", "\n", "for", "mixed_loss", "in", "mixed_loss_list", ":", "\n", "                ", "loss_list", ".", "append", "(", "coef_i", "*", "mixed_loss", ")", "\n", "", "", "elif", "loss_i", ".", "__class__", ".", "__name__", "in", "(", "\"KLLoss\"", ",", ")", ":", "\n", "            ", "loss_list", ".", "append", "(", "coef_i", "*", "\n", "loss_i", "(", "logits_list", "[", "0", "]", ",", "logits_list", "[", "1", "]", ".", "detach", "(", ")", ")", ")", "\n", "", "elif", "loss_i", ".", "__class__", ".", "__name__", "==", "\"DiceLoss\"", ":", "\n", "            ", "loss", ",", "per_channel_dice", "=", "loss_i", "(", "logits", ",", "labels", ")", "\n", "loss_list", ".", "append", "(", "coef_i", "*", "loss", ")", "\n", "", "else", ":", "\n", "            ", "loss_list", ".", "append", "(", "coef_i", "*", "loss_i", "(", "logits", ",", "labels", ")", ")", "\n", "\n", "", "", "return", "loss_list", ",", "per_channel_dice", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_array": [[205, 257], ["save_content.items", "isinstance", "TypeError", "isinstance", "TypeError", "print", "isinstance", "TypeError", "len", "numpy.squeeze", "type", "type", "save_content.items", "type", "numpy.save", "save_content.items", "RuntimeError", "SimpleITK.GetImageFromArray", "sitk.GetImageFromArray.SetSpacing", "sitk.GetImageFromArray.SetOrigin", "sitk.GetImageFromArray.SetDirection", "SimpleITK.WriteImage", "numpy.transpose", "tuple", "tuple", "tuple", "os.path.join", "RuntimeError"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial": [[259, 263], ["functools.partial", "functools.update_wrapper"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_ema_model": [[25, 39], ["paddleseg.utils.logger.info", "os.path.exists", "paddleseg.utils.logger.info", "os.path.normpath", "os.path.join", "paddle.load", "model.set_state_dict", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["\n", "\n", "", "def", "get_image_list", "(", "image_path", ")", ":", "\n", "    ", "\"\"\"Get image list\"\"\"", "\n", "valid_suffix", "=", "[", "\n", "'.JPEG'", ",", "'.jpeg'", ",", "'.JPG'", ",", "'.jpg'", ",", "'.BMP'", ",", "'.bmp'", ",", "'.PNG'", ",", "'.png'", "\n", "]", "\n", "image_list", "=", "[", "]", "\n", "image_dir", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "image_path", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "splitext", "(", "image_path", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "            ", "image_list", ".", "append", "(", "image_path", ")", "\n", "", "else", ":", "\n", "            ", "image_dir", "=", "os", ".", "path", ".", "dirname", "(", "image_path", ")", "\n", "with", "open", "(", "image_path", ",", "'r'", ")", "as", "f", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_edge": [[41, 45], ["edges_src.detach().clone().squeeze().numpy", "imageio.imwrite", "edges_src.detach().clone().squeeze", "edges_src.detach().clone", "edges_src.detach"], "function", ["None"], ["                    ", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "len", "(", "line", ".", "split", "(", ")", ")", ">", "1", ":", "\n", "                        ", "raise", "RuntimeError", "(", "\n", "'There should be only one image path per line in `image_path` file. Wrong line: {}'", "\n", ".", "format", "(", "line", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_color_map_list": [[47, 56], ["None"], "function", ["None"], ["", "", "", "", "elif", "os", ".", "path", ".", "isdir", "(", "image_path", ")", ":", "\n", "        ", "image_dir", "=", "image_path", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "image_path", ")", ":", "\n", "            ", "for", "f", "in", "files", ":", "\n", "                ", "if", "'.ipynb_checkpoints'", "in", "root", ":", "\n", "                    ", "continue", "\n", "", "if", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "                    ", "image_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", "f", ")", ")", "\n", "", "", "", "image_list", ".", "sort", "(", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map": [[58, 77], ["PIL.Image.fromarray", "utils.get_color_map_list", "PIL.Image.fromarray.putpalette", "len", "numpy.squeeze", "np.squeeze.astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes_autolabeling.get_color_map_list"], ["'`image_path` is not found. it should be an image file or a directory including images'", "\n", ")", "\n", "\n", "", "if", "len", "(", "image_list", ")", "==", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "'There are not image file in `image_path`'", ")", "\n", "\n", "", "return", "image_list", ",", "image_dir", "\n", "\n", "\n", "", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "sub_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "sub_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "sub_dir", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_imgs": [[79, 88], ["range", "utils.get_pseudo_color_map", "get_pseudo_color_map.save", "os.path.exists", "os.mkdir", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.augmentation.get_augmentation": [[7, 21], ["albumentations.Compose", "albumentations.RandomResizedCrop", "albumentations.Compose", "albumentations.ToGray", "albumentations.GaussianBlur", "albumentations.RandomBrightnessContrast", "albumentations.HueSaturationValue"], "function", ["None"], ["def", "get_augmentation", "(", ")", ":", "\n", "    ", "return", "al", ".", "Compose", "(", "[", "\n", "al", ".", "RandomResizedCrop", "(", "\n", "512", ",", "512", ",", "scale", "=", "(", "0.2", ",", "1.", ")", ")", ",", "\n", "al", ".", "Compose", "(", "\n", "[", "\n", "# NOTE: RandomBrightnessContrast replaces ColorJitter", "\n", "al", ".", "RandomBrightnessContrast", "(", "p", "=", "1", ")", ",", "\n", "al", ".", "HueSaturationValue", "(", "p", "=", "1", ")", ",", "\n", "]", ",", "\n", "p", "=", "0.8", ")", ",", "\n", "al", ".", "ToGray", "(", "p", "=", "0.2", ")", ",", "\n", "al", ".", "GaussianBlur", "(", "\n", "5", ",", "p", "=", "0.5", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.augmentation.augment": [[24, 71], ["numpy.array", "zip", "paddle.stack", "paddle.stack", "len", "labels.permute.permute", "cv2.cvtColor().astype", "label.astype.numpy", "label.astype.astype", "aug", "paddle.to_tensor", "paddle.to_tensor", "aug_images.append", "aug_labels.append", "labels.permute.permute", "label.astype.astype", "cv2.cvtColor", "paddle.to_tensor.numpy().transpose", "cv2.cvtColor", "paddle.to_tensor.astype", "paddle.to_tensor.numpy"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "augment", "(", "images", ",", "labels", ",", "aug", ",", "iters", ")", ":", "\n", "    ", "\"\"\"Augments both image and label. Assumes input is a tensor with\n       a batch dimension and values normalized to N(0,1).\"\"\"", "\n", "IMG_MEAN", "=", "np", ".", "array", "(", "\n", "(", "104.00698793", ",", "116.66876762", ",", "122.67891434", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "# Transform label shape: B, C, W, H ==> B, W, H, C", "\n", "labels_are_3d", "=", "(", "len", "(", "labels", ".", "shape", ")", "==", "4", ")", "\n", "if", "labels_are_3d", ":", "\n", "        ", "labels", "=", "labels", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "\n", "# Transform each image independently.", "\n", "", "aug_images", ",", "aug_labels", "=", "[", "]", ",", "[", "]", "\n", "for", "image", ",", "label", "in", "zip", "(", "images", ",", "labels", ")", ":", "\n", "\n", "# Step 1: Undo normalization transformation, convert to numpy", "\n", "        ", "image", "=", "cv2", ".", "cvtColor", "(", "image", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "+", "IMG_MEAN", ",", "\n", "cv2", ".", "COLOR_BGR2RGB", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "label", "=", "label", ".", "numpy", "(", ")", "\n", "label", "=", "label", ".", "astype", "(", "'int64'", ")", "\n", "\n", "# Step 2: Perform transformations on numpy images", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "label", ")", "\n", "image", ",", "label", "=", "data", "[", "'image'", "]", ",", "data", "[", "'mask'", "]", "\n", "\n", "# Step 3: Convert back to PyTorch tensors", "\n", "image", "=", "paddle", ".", "to_tensor", "(", "(", "cv2", ".", "cvtColor", "(", "\n", "image", ".", "astype", "(", "np", ".", "float32", ")", ",", "cv2", ".", "COLOR_RGB2BGR", ")", "-", "IMG_MEAN", ")", ".", "transpose", "(", "\n", "2", ",", "0", ",", "1", ")", ")", "\n", "# label = np.where(label==-1, 255, label)", "\n", "label", "=", "paddle", ".", "to_tensor", "(", "label", ")", "\n", "if", "not", "labels_are_3d", ":", "\n", "            ", "label", "=", "label", ".", "astype", "(", "'int64'", ")", "\n", "\n", "# Add to list", "\n", "", "aug_images", ".", "append", "(", "image", ")", "\n", "aug_labels", ".", "append", "(", "label", ")", "\n", "\n", "# Stack", "\n", "", "images", "=", "paddle", ".", "stack", "(", "aug_images", ",", "axis", "=", "0", ")", "\n", "labels", "=", "paddle", ".", "stack", "(", "aug_labels", ",", "axis", "=", "0", ")", "\n", "\n", "# Transform label shape back: B, W, H, C ==> B, C, W, H", "\n", "if", "labels_are_3d", ":", "\n", "        ", "labels", "=", "labels", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "", "return", "images", ",", "labels", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.dataset.matting_dataset.MattingDataset.__init__": [[63, 115], ["super().__init__", "transforms.Compose", "isinstance", "isinstance", "os.path.join", "random.shuffle", "ValueError", "ValueError", "open", "f.readlines", "line.strip.strip.strip", "matting_dataset.MattingDataset.fg_bg_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", ",", "\n", "transforms", ",", "\n", "mode", "=", "'train'", ",", "\n", "train_file", "=", "None", ",", "\n", "val_file", "=", "None", ",", "\n", "get_trimap", "=", "True", ",", "\n", "separator", "=", "' '", ",", "\n", "key_del", "=", "None", ",", "\n", "if_rssn", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "T", ".", "Compose", "(", "transforms", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "get_trimap", "=", "get_trimap", "\n", "self", ".", "separator", "=", "separator", "\n", "self", ".", "key_del", "=", "key_del", "\n", "self", ".", "if_rssn", "=", "if_rssn", "\n", "\n", "# check file", "\n", "if", "mode", "==", "'train'", "or", "mode", "==", "'trainval'", ":", "\n", "            ", "if", "train_file", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"When `mode` is 'train' or 'trainval', `train_file must be provided!\"", "\n", ")", "\n", "", "if", "isinstance", "(", "train_file", ",", "str", ")", ":", "\n", "                ", "train_file", "=", "[", "train_file", "]", "\n", "", "file_list", "=", "train_file", "\n", "\n", "", "if", "mode", "==", "'val'", "or", "mode", "==", "'trainval'", ":", "\n", "            ", "if", "val_file", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"When `mode` is 'val' or 'trainval', `val_file must be provided!\"", "\n", ")", "\n", "", "if", "isinstance", "(", "val_file", ",", "str", ")", ":", "\n", "                ", "val_file", "=", "[", "val_file", "]", "\n", "", "file_list", "=", "val_file", "\n", "\n", "", "if", "mode", "==", "'trainval'", ":", "\n", "            ", "file_list", "=", "train_file", "+", "val_file", "\n", "\n", "# read file", "\n", "", "self", ".", "fg_bg_list", "=", "[", "]", "\n", "for", "file", "in", "file_list", ":", "\n", "            ", "file", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "file", ")", "\n", "with", "open", "(", "file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "                    ", "line", "=", "line", ".", "strip", "(", ")", "\n", "self", ".", "fg_bg_list", ".", "append", "(", "line", ")", "\n", "", "", "", "if", "mode", "!=", "'val'", ":", "\n", "            ", "random", ".", "shuffle", "(", "self", ".", "fg_bg_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.dataset.matting_dataset.MattingDataset.__getitem__": [[116, 192], ["fg_bg_file.split.split.split", "os.path.join", "os.path.join.replace", "cv2.imread", "cv2.imread", "matting_dataset.MattingDataset.transforms", "data[].astype", "matting_dataset.MattingDataset.get", "len", "os.path.join", "cv2.imread", "matting_dataset.MattingDataset.composite", "data[].append", "data[].astype", "data[].append", "data[].append", "data[].append", "cv2.imread.copy", "cv2.imread.copy", "data[].append", "data[].append", "data[].append", "matting_dataset.MattingDataset.gen_trimap().astype", "data[].append", "len", "os.path.join", "os.path.exists", "data[].copy", "matting_dataset.MattingDataset.keys", "matting_dataset.MattingDataset.pop", "data[].remove", "data[].append", "cv2.imread", "FileNotFoundError", "matting_dataset.MattingDataset.gen_trimap"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.dataset.matting_dataset.MattingDataset.composite", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.dataset.matting_dataset.MattingDataset.gen_trimap"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "data", "=", "{", "}", "\n", "fg_bg_file", "=", "self", ".", "fg_bg_list", "[", "idx", "]", "\n", "fg_bg_file", "=", "fg_bg_file", ".", "split", "(", "self", ".", "separator", ")", "\n", "data", "[", "'img_name'", "]", "=", "fg_bg_file", "[", "0", "]", "# using in save prediction results", "\n", "fg_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "fg_bg_file", "[", "0", "]", ")", "\n", "alpha_file", "=", "fg_file", ".", "replace", "(", "'/fg'", ",", "'/alpha'", ")", "\n", "fg", "=", "cv2", ".", "imread", "(", "fg_file", ")", "\n", "alpha", "=", "cv2", ".", "imread", "(", "alpha_file", ",", "0", ")", "\n", "data", "[", "'alpha'", "]", "=", "alpha", "\n", "data", "[", "'gt_fields'", "]", "=", "[", "]", "\n", "\n", "# line is: fg [bg] [trimap]", "\n", "if", "len", "(", "fg_bg_file", ")", ">=", "2", ":", "\n", "            ", "bg_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "fg_bg_file", "[", "1", "]", ")", "\n", "bg", "=", "cv2", ".", "imread", "(", "bg_file", ")", "\n", "data", "[", "'img'", "]", ",", "data", "[", "'fg'", "]", ",", "data", "[", "'bg'", "]", "=", "self", ".", "composite", "(", "fg", ",", "alpha", ",", "bg", ")", "\n", "if", "self", ".", "mode", "in", "[", "'train'", ",", "'trainval'", "]", ":", "\n", "                ", "data", "[", "'gt_fields'", "]", ".", "append", "(", "'fg'", ")", "\n", "data", "[", "'gt_fields'", "]", ".", "append", "(", "'bg'", ")", "\n", "data", "[", "'gt_fields'", "]", ".", "append", "(", "'alpha'", ")", "\n", "", "if", "len", "(", "fg_bg_file", ")", "==", "3", "and", "self", ".", "get_trimap", ":", "\n", "                ", "if", "self", ".", "mode", "==", "'val'", ":", "\n", "                    ", "trimap_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "fg_bg_file", "[", "2", "]", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "trimap_path", ")", ":", "\n", "                        ", "data", "[", "'trimap'", "]", "=", "trimap_path", "\n", "data", "[", "'gt_fields'", "]", ".", "append", "(", "'trimap'", ")", "\n", "data", "[", "'ori_trimap'", "]", "=", "cv2", ".", "imread", "(", "trimap_path", ",", "0", ")", "\n", "", "else", ":", "\n", "                        ", "raise", "FileNotFoundError", "(", "\n", "'trimap is not Found: {}'", ".", "format", "(", "fg_bg_file", "[", "2", "]", ")", ")", "\n", "", "", "", "", "else", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "fg", "\n", "if", "self", ".", "mode", "in", "[", "'train'", ",", "'trainval'", "]", ":", "\n", "                ", "data", "[", "'fg'", "]", "=", "fg", ".", "copy", "(", ")", "\n", "data", "[", "'bg'", "]", "=", "fg", ".", "copy", "(", ")", "\n", "data", "[", "'gt_fields'", "]", ".", "append", "(", "'fg'", ")", "\n", "data", "[", "'gt_fields'", "]", ".", "append", "(", "'bg'", ")", "\n", "data", "[", "'gt_fields'", "]", ".", "append", "(", "'alpha'", ")", "\n", "\n", "", "", "data", "[", "'trans_info'", "]", "=", "[", "]", "# Record shape change information", "\n", "\n", "# Generate trimap from alpha if no trimap file provided", "\n", "if", "self", ".", "get_trimap", ":", "\n", "            ", "if", "'trimap'", "not", "in", "data", ":", "\n", "                ", "data", "[", "'trimap'", "]", "=", "self", ".", "gen_trimap", "(", "\n", "data", "[", "'alpha'", "]", ",", "mode", "=", "self", ".", "mode", ")", ".", "astype", "(", "'float32'", ")", "\n", "data", "[", "'gt_fields'", "]", ".", "append", "(", "'trimap'", ")", "\n", "if", "self", ".", "mode", "==", "'val'", ":", "\n", "                    ", "data", "[", "'ori_trimap'", "]", "=", "data", "[", "'trimap'", "]", ".", "copy", "(", ")", "\n", "\n", "# Delete key which is not need", "\n", "", "", "", "if", "self", ".", "key_del", "is", "not", "None", ":", "\n", "            ", "for", "key", "in", "self", ".", "key_del", ":", "\n", "                ", "if", "key", "in", "data", ".", "keys", "(", ")", ":", "\n", "                    ", "data", ".", "pop", "(", "key", ")", "\n", "", "if", "key", "in", "data", "[", "'gt_fields'", "]", ":", "\n", "                    ", "data", "[", "'gt_fields'", "]", ".", "remove", "(", "key", ")", "\n", "", "", "", "data", "=", "self", ".", "transforms", "(", "data", ")", "\n", "\n", "# When evaluation, gt should not be transforms.", "\n", "if", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "data", "[", "'gt_fields'", "]", ".", "append", "(", "'alpha'", ")", "\n", "\n", "", "data", "[", "'img'", "]", "=", "data", "[", "'img'", "]", ".", "astype", "(", "'float32'", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "data", "[", "key", "]", "=", "data", "[", "key", "]", ".", "astype", "(", "'float32'", ")", "\n", "\n", "", "if", "'trimap'", "in", "data", ":", "\n", "            ", "data", "[", "'trimap'", "]", "=", "data", "[", "'trimap'", "]", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "", "if", "'ori_trimap'", "in", "data", ":", "\n", "            ", "data", "[", "'ori_trimap'", "]", "=", "data", "[", "'ori_trimap'", "]", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "\n", "", "data", "[", "'alpha'", "]", "=", "data", "[", "'alpha'", "]", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "/", "255.", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.dataset.matting_dataset.MattingDataset.__len__": [[193, 195], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "fg_bg_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.dataset.matting_dataset.MattingDataset.composite": [[196, 227], ["numpy.expand_dims", "image.astype.astype.astype", "math.ceil", "math.ceil", "cv2.resize", "numpy.random.rand", "cv2.fastNlMeansDenoisingColored", "cv2.fastNlMeansDenoisingColored", "numpy.random.rand", "numpy.random.choice", "cv2.GaussianBlur"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "def", "composite", "(", "self", ",", "fg", ",", "alpha", ",", "ori_bg", ")", ":", "\n", "        ", "if", "self", ".", "if_rssn", ":", "\n", "            ", "if", "np", ".", "random", ".", "rand", "(", ")", "<", "0.5", ":", "\n", "                ", "fg", "=", "cv2", ".", "fastNlMeansDenoisingColored", "(", "fg", ",", "None", ",", "3", ",", "3", ",", "7", ",", "21", ")", "\n", "ori_bg", "=", "cv2", ".", "fastNlMeansDenoisingColored", "(", "ori_bg", ",", "None", ",", "3", ",", "3", ",", "7", ",", "\n", "21", ")", "\n", "", "if", "np", ".", "random", ".", "rand", "(", ")", "<", "0.5", ":", "\n", "                ", "radius", "=", "np", ".", "random", ".", "choice", "(", "[", "19", ",", "29", ",", "39", ",", "49", ",", "59", "]", ")", "\n", "ori_bg", "=", "cv2", ".", "GaussianBlur", "(", "ori_bg", ",", "(", "radius", ",", "radius", ")", ",", "0", ",", "0", ")", "\n", "", "", "fg_h", ",", "fg_w", "=", "fg", ".", "shape", "[", ":", "2", "]", "\n", "ori_bg_h", ",", "ori_bg_w", "=", "ori_bg", ".", "shape", "[", ":", "2", "]", "\n", "\n", "wratio", "=", "fg_w", "/", "ori_bg_w", "\n", "hratio", "=", "fg_h", "/", "ori_bg_h", "\n", "ratio", "=", "wratio", "if", "wratio", ">", "hratio", "else", "hratio", "\n", "\n", "# Resize ori_bg if it is smaller than fg.", "\n", "if", "ratio", ">", "1", ":", "\n", "            ", "resize_h", "=", "math", ".", "ceil", "(", "ori_bg_h", "*", "ratio", ")", "\n", "resize_w", "=", "math", ".", "ceil", "(", "ori_bg_w", "*", "ratio", ")", "\n", "bg", "=", "cv2", ".", "resize", "(", "\n", "ori_bg", ",", "(", "resize_w", ",", "resize_h", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "else", ":", "\n", "            ", "bg", "=", "ori_bg", "\n", "\n", "", "bg", "=", "bg", "[", "0", ":", "fg_h", ",", "0", ":", "fg_w", ",", ":", "]", "\n", "alpha", "=", "alpha", "/", "255", "\n", "alpha", "=", "np", ".", "expand_dims", "(", "alpha", ",", "axis", "=", "2", ")", "\n", "image", "=", "alpha", "*", "fg", "+", "(", "1", "-", "alpha", ")", "*", "bg", "\n", "image", "=", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "image", ",", "fg", ",", "bg", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.dataset.matting_dataset.MattingDataset.gen_trimap": [[228, 252], ["random.choice", "numpy.random.randint", "cv2.getStructuringElement", "cv2.dilate", "cv2.erode", "numpy.zeros", "numpy.zeros.fill", "cv2.getStructuringElement", "cv2.dilate", "numpy.zeros", "numpy.zeros.fill", "range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "gen_trimap", "(", "alpha", ",", "mode", "=", "'train'", ",", "eval_kernel", "=", "7", ")", ":", "\n", "        ", "if", "mode", "==", "'train'", ":", "\n", "            ", "k_size", "=", "random", ".", "choice", "(", "range", "(", "2", ",", "5", ")", ")", "\n", "iterations", "=", "np", ".", "random", ".", "randint", "(", "5", ",", "15", ")", "\n", "kernel", "=", "cv2", ".", "getStructuringElement", "(", "cv2", ".", "MORPH_ELLIPSE", ",", "\n", "(", "k_size", ",", "k_size", ")", ")", "\n", "dilated", "=", "cv2", ".", "dilate", "(", "alpha", ",", "kernel", ",", "iterations", "=", "iterations", ")", "\n", "eroded", "=", "cv2", ".", "erode", "(", "alpha", ",", "kernel", ",", "iterations", "=", "iterations", ")", "\n", "trimap", "=", "np", ".", "zeros", "(", "alpha", ".", "shape", ")", "\n", "trimap", ".", "fill", "(", "128", ")", "\n", "trimap", "[", "eroded", ">", "254.5", "]", "=", "255", "\n", "trimap", "[", "dilated", "<", "0.5", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "k_size", "=", "eval_kernel", "\n", "kernel", "=", "cv2", ".", "getStructuringElement", "(", "cv2", ".", "MORPH_ELLIPSE", ",", "\n", "(", "k_size", ",", "k_size", ")", ")", "\n", "dilated", "=", "cv2", ".", "dilate", "(", "alpha", ",", "kernel", ")", "\n", "trimap", "=", "np", ".", "zeros", "(", "alpha", ".", "shape", ")", "\n", "trimap", ".", "fill", "(", "128", ")", "\n", "trimap", "[", "alpha", ">=", "250", "]", "=", "255", "\n", "trimap", "[", "dilated", "<=", "5", "]", "=", "0", "\n", "\n", "", "return", "trimap", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.update_vgg16_params.update_vgg16_params": [[18, 52], ["paddle.load", "paddle.load.items", "print", "paddle.zeros", "paddle.concat", "print", "paddle.transpose", "print", "paddle.reshape", "print", "print", "paddle.save", "print"], "function", ["None"], ["def", "update_vgg16_params", "(", "model_path", ")", ":", "\n", "    ", "param_state_dict", "=", "paddle", ".", "load", "(", "model_path", ")", "\n", "# first conv weight name _conv_block_1._conv_1.weight, shape is [64, 3, ,3, 3]", "\n", "# first fc weight name: _fc1.weight, shape is [25088, 4096]", "\n", "for", "k", ",", "v", "in", "param_state_dict", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "k", ",", "v", ".", "shape", ")", "\n", "\n", "# # first weight", "\n", "", "weight", "=", "param_state_dict", "[", "'_conv_block_1._conv_1.weight'", "]", "# [64, 3,3,3]", "\n", "print", "(", "'ori shape: '", ",", "weight", ".", "shape", ")", "\n", "zeros_pad", "=", "paddle", ".", "zeros", "(", "(", "64", ",", "1", ",", "3", ",", "3", ")", ")", "\n", "param_state_dict", "[", "'_conv_block_1._conv_1.weight'", "]", "=", "paddle", ".", "concat", "(", "\n", "[", "weight", ",", "zeros_pad", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "'shape after padding'", ",", "\n", "param_state_dict", "[", "'_conv_block_1._conv_1.weight'", "]", ".", "shape", ")", "\n", "\n", "# fc1", "\n", "weight", "=", "param_state_dict", "[", "'_fc1.weight'", "]", "\n", "weight", "=", "paddle", ".", "transpose", "(", "weight", ",", "[", "1", ",", "0", "]", ")", "\n", "print", "(", "'after transpose: '", ",", "weight", ".", "shape", ")", "\n", "weight", "=", "paddle", ".", "reshape", "(", "weight", ",", "(", "4096", ",", "512", ",", "7", ",", "7", ")", ")", "\n", "print", "(", "'after reshape: '", ",", "weight", ".", "shape", ")", "\n", "weight", "=", "weight", "[", "0", ":", "512", ",", ":", ",", "2", ":", "5", ",", "2", ":", "5", "]", "\n", "print", "(", "'after crop: '", ",", "weight", ".", "shape", ")", "\n", "param_state_dict", "[", "'_conv_6.weight'", "]", "=", "weight", "\n", "\n", "del", "param_state_dict", "[", "'_fc1.weight'", "]", "\n", "del", "param_state_dict", "[", "'_fc1.bias'", "]", "\n", "del", "param_state_dict", "[", "'_fc2.weight'", "]", "\n", "del", "param_state_dict", "[", "'_fc2.bias'", "]", "\n", "del", "param_state_dict", "[", "'_out.weight'", "]", "\n", "del", "param_state_dict", "[", "'_out.bias'", "]", "\n", "\n", "paddle", ".", "save", "(", "param_state_dict", ",", "'VGG16_pretrained.pdparams'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes.parse_args": [[40, 56], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "multiprocessing.cpu_count"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'Generate **labelTrainIds.png for training'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--cityscapes_path'", ",", "\n", "dest", "=", "'cityscapes_path'", ",", "\n", "help", "=", "'cityscapes path'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'How many processes are used for data conversion'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "cpu_count", "(", ")", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes.gen_labelTrainIds": [[58, 61], ["json_file.replace", "cityscapesscripts.preparation.json2labelImg.json2labelImg"], "function", ["None"], ["", "def", "gen_labelTrainIds", "(", "json_file", ")", ":", "\n", "    ", "label_file", "=", "json_file", ".", "replace", "(", "\"_polygons.json\"", ",", "\"_labelTrainIds.png\"", ")", "\n", "json2labelImg", "(", "json_file", ",", "label_file", ",", "\"trainIds\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes.main": [[63, 74], ["convert_cityscapes.parse_args", "os.path.join", "glob.glob", "print", "multiprocessing.Pool", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "os.path.join", "multiprocessing.Pool.apply_async"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "fine_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "cityscapes_path", ",", "'gtFine'", ")", "\n", "json_files", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "fine_path", ",", "'*'", ",", "'*'", ",", "'*_polygons.json'", ")", ")", "\n", "\n", "print", "(", "'generating **_labelTrainIds.png'", ")", "\n", "p", "=", "Pool", "(", "args", ".", "num_workers", ")", "\n", "for", "f", "in", "json_files", ":", "\n", "        ", "p", ".", "apply_async", "(", "gen_labelTrainIds", ",", "args", "=", "(", "f", ",", ")", ")", "\n", "", "p", ".", "close", "(", ")", "\n", "p", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.voc_augment.parse_args": [[36, 54], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "multiprocessing.cpu_count"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'Convert SBD to Pascal Voc annotations to augment the train dataset of Pascal Voc'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--voc_path'", ",", "\n", "dest", "=", "'voc_path'", ",", "\n", "help", "=", "'pascal voc path'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "os", ".", "path", ".", "join", "(", "DATA_HOME", ",", "'VOCdevkit'", ")", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'How many processes are used for data conversion'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "cpu_count", "(", ")", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.voc_augment.mat_to_png": [[56, 62], ["os.path.join", "scipy.io.loadmat", "[].astype", "os.path.join", "cv2.imwrite", "mat_file.replace"], "function", ["None"], ["", "def", "mat_to_png", "(", "mat_file", ",", "sbd_cls_dir", ",", "save_dir", ")", ":", "\n", "    ", "mat_path", "=", "os", ".", "path", ".", "join", "(", "sbd_cls_dir", ",", "mat_file", ")", "\n", "mat", "=", "loadmat", "(", "mat_path", ")", "\n", "mask", "=", "mat", "[", "'GTcls'", "]", "[", "0", "]", "[", "'Segmentation'", "]", "[", "0", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "save_file", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "mat_file", ".", "replace", "(", "'mat'", ",", "'png'", ")", ")", "\n", "cv2", ".", "imwrite", "(", "save_file", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.voc_augment.main": [[64, 101], ["voc_augment.parse_args", "paddleseg.utils.download.download_file_and_uncompress", "list", "os.path.join", "os.path.join", "os.listdir", "multiprocessing.Pool", "tqdm.tqdm", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "open", "open", "os.path.exists", "FileNotFoundError", "open", "open", "f.writelines", "os.path.exists", "os.mkdir", "multiprocessing.Pool.apply_async", "os.path.join", "line.strip", "os.path.join", "line.strip", "os.path.join", "line.strip", "set", "set", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "sbd_path", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "DATA_HOME", ",", "\n", "extrapath", "=", "DATA_HOME", ",", "\n", "extraname", "=", "'benchmark_RELEASE'", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "sbd_path", ",", "'dataset/train.txt'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "sbd_file_list", "=", "[", "line", ".", "strip", "(", ")", "for", "line", "in", "f", "]", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "sbd_path", ",", "'dataset/val.txt'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "sbd_file_list", "+=", "[", "line", ".", "strip", "(", ")", "for", "line", "in", "f", "]", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "voc_path", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\n", "'There is no voc_path: {}. Please ensure that the Pascal VOC dataset has been downloaded correctly'", "\n", ")", "\n", "", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "voc_path", ",", "\n", "'VOC2012/ImageSets/Segmentation/trainval.txt'", ")", ",", "\n", "'r'", ")", "as", "f", ":", "\n", "        ", "voc_file_list", "=", "[", "line", ".", "strip", "(", ")", "for", "line", "in", "f", "]", "\n", "\n", "", "aug_file_list", "=", "list", "(", "set", "(", "sbd_file_list", ")", "-", "set", "(", "voc_file_list", ")", ")", "\n", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "voc_path", ",", "\n", "'VOC2012/ImageSets/Segmentation/aug.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "writelines", "(", "''", ".", "join", "(", "[", "line", ",", "'\\n'", "]", ")", "for", "line", "in", "aug_file_list", ")", "\n", "\n", "", "sbd_cls_dir", "=", "os", ".", "path", ".", "join", "(", "sbd_path", ",", "'dataset/cls'", ")", "\n", "save_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "voc_path", ",", "'VOC2012/SegmentationClassAug'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "save_dir", ")", "\n", "", "mat_file_list", "=", "os", ".", "listdir", "(", "sbd_cls_dir", ")", "\n", "p", "=", "Pool", "(", "args", ".", "num_workers", ")", "\n", "for", "f", "in", "tqdm", ".", "tqdm", "(", "mat_file_list", ")", ":", "\n", "        ", "p", ".", "apply_async", "(", "mat_to_png", ",", "args", "=", "(", "f", ",", "sbd_cls_dir", ",", "save_dir", ")", ")", "\n", "", "p", ".", "close", "(", ")", "\n", "p", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.labelme2seg.parse_args": [[32, 37], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "'input_dir'", ",", "help", "=", "'input annotated directory'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.labelme2seg.main": [[39, 99], ["os.join", "glob.glob", "enumerate", "tuple", "print", "os.join", "print", "gray2pseudo_color.get_color_map_list", "glob.glob", "os.exists", "os.makedirs", "os.makedirs", "print", "os.join", "open", "f.writelines", "os.join", "print", "open", "json.load", "open", "os.join", "json.load", "os.join", "numpy.asarray", "labelme2seg.shape2label", "os.splitext", "os.dirname", "cv2.imread", "PIL.Image.fromarray", "PIL.Image.fromarray", "PIL.Image.fromarray.putpalette", "PIL.Image.fromarray.save", "ValueError", "tuple.append", "os.basename", "os.splitext", "shape2label.min", "shape2label.max", "shape2label.astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes_autolabeling.get_color_map_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.labelme2seg.shape2label", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "output_dir", "=", "osp", ".", "join", "(", "args", ".", "input_dir", ",", "'annotations'", ")", "\n", "if", "not", "osp", ".", "exists", "(", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_dir", ")", "\n", "print", "(", "'Creating annotations directory:'", ",", "output_dir", ")", "\n", "\n", "# get the all class names for the given dataset", "\n", "", "class_names", "=", "[", "'_background_'", "]", "\n", "for", "label_file", "in", "glob", ".", "glob", "(", "osp", ".", "join", "(", "args", ".", "input_dir", ",", "'*.json'", ")", ")", ":", "\n", "        ", "with", "open", "(", "label_file", ")", "as", "f", ":", "\n", "            ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "for", "shape", "in", "data", "[", "'shapes'", "]", ":", "\n", "                ", "label", "=", "shape", "[", "'label'", "]", "\n", "cls_name", "=", "label", "\n", "if", "not", "cls_name", "in", "class_names", ":", "\n", "                    ", "class_names", ".", "append", "(", "cls_name", ")", "\n", "\n", "", "", "", "", "class_name_to_id", "=", "{", "}", "\n", "for", "i", ",", "class_name", "in", "enumerate", "(", "class_names", ")", ":", "\n", "        ", "class_id", "=", "i", "# starts with 0", "\n", "class_name_to_id", "[", "class_name", "]", "=", "class_id", "\n", "if", "class_id", "==", "0", ":", "\n", "            ", "assert", "class_name", "==", "'_background_'", "\n", "", "", "class_names", "=", "tuple", "(", "class_names", ")", "\n", "print", "(", "'class_names:'", ",", "class_names", ")", "\n", "\n", "out_class_names_file", "=", "osp", ".", "join", "(", "args", ".", "input_dir", ",", "'class_names.txt'", ")", "\n", "with", "open", "(", "out_class_names_file", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "writelines", "(", "'\\n'", ".", "join", "(", "class_names", ")", ")", "\n", "", "print", "(", "'Saved class_names:'", ",", "out_class_names_file", ")", "\n", "\n", "color_map", "=", "get_color_map_list", "(", "256", ")", "\n", "\n", "for", "label_file", "in", "glob", ".", "glob", "(", "osp", ".", "join", "(", "args", ".", "input_dir", ",", "'*.json'", ")", ")", ":", "\n", "        ", "print", "(", "'Generating dataset from:'", ",", "label_file", ")", "\n", "with", "open", "(", "label_file", ")", "as", "f", ":", "\n", "            ", "base", "=", "osp", ".", "splitext", "(", "osp", ".", "basename", "(", "label_file", ")", ")", "[", "0", "]", "\n", "out_png_file", "=", "osp", ".", "join", "(", "output_dir", ",", "base", "+", "'.png'", ")", "\n", "\n", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "img_file", "=", "osp", ".", "join", "(", "osp", ".", "dirname", "(", "label_file", ")", ",", "data", "[", "'imagePath'", "]", ")", "\n", "img", "=", "np", ".", "asarray", "(", "cv2", ".", "imread", "(", "img_file", ")", ")", "\n", "\n", "lbl", "=", "shape2label", "(", "\n", "img_size", "=", "img", ".", "shape", ",", "\n", "shapes", "=", "data", "[", "'shapes'", "]", ",", "\n", "class_name_mapping", "=", "class_name_to_id", ",", ")", "\n", "\n", "if", "osp", ".", "splitext", "(", "out_png_file", ")", "[", "1", "]", "!=", "'.png'", ":", "\n", "                ", "out_png_file", "+=", "'.png'", "\n", "# Assume label ranges [0, 255] for uint8,", "\n", "", "if", "lbl", ".", "min", "(", ")", ">=", "0", "and", "lbl", ".", "max", "(", ")", "<=", "255", ":", "\n", "                ", "lbl_pil", "=", "PIL", ".", "Image", ".", "fromarray", "(", "lbl", ".", "astype", "(", "np", ".", "uint8", ")", ",", "mode", "=", "'P'", ")", "\n", "lbl_pil", ".", "putpalette", "(", "color_map", ")", "\n", "lbl_pil", ".", "save", "(", "out_png_file", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'[%s] Cannot save the pixel-wise class label as PNG. '", "\n", "'Please consider using the .npy format.'", "%", "out_png_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.labelme2seg.shape2mask": [[101, 108], ["PIL.Image.fromarray", "PIL.Image.fromarray", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw.polygon", "numpy.array", "numpy.zeros", "tuple", "len"], "function", ["None"], ["", "", "", "", "def", "shape2mask", "(", "img_size", ",", "points", ")", ":", "\n", "    ", "label_mask", "=", "PIL", ".", "Image", ".", "fromarray", "(", "np", ".", "zeros", "(", "img_size", "[", ":", "2", "]", ",", "dtype", "=", "np", ".", "uint8", ")", ")", "\n", "image_draw", "=", "PIL", ".", "ImageDraw", ".", "Draw", "(", "label_mask", ")", "\n", "points_list", "=", "[", "tuple", "(", "point", ")", "for", "point", "in", "points", "]", "\n", "assert", "len", "(", "points_list", ")", ">", "2", ",", "'Polygon must have points more than 2'", "\n", "image_draw", ".", "polygon", "(", "xy", "=", "points_list", ",", "outline", "=", "1", ",", "fill", "=", "1", ")", "\n", "return", "np", ".", "array", "(", "label_mask", ",", "dtype", "=", "bool", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.labelme2seg.shape2label": [[110, 120], ["numpy.zeros", "shape.get", "labelme2seg.shape2mask", "numpy.np.uint8"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.labelme2seg.shape2mask"], ["", "def", "shape2label", "(", "img_size", ",", "shapes", ",", "class_name_mapping", ")", ":", "\n", "    ", "label", "=", "np", ".", "zeros", "(", "img_size", "[", ":", "2", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "for", "shape", "in", "shapes", ":", "\n", "        ", "points", "=", "shape", "[", "'points'", "]", "\n", "class_name", "=", "shape", "[", "'label'", "]", "\n", "shape_type", "=", "shape", ".", "get", "(", "'shape_type'", ",", "None", ")", "\n", "class_id", "=", "class_name_mapping", "[", "class_name", "]", "\n", "label_mask", "=", "shape2mask", "(", "img_size", "[", ":", "2", "]", ",", "points", ")", "\n", "label", "[", "label_mask", "]", "=", "class_id", "\n", "", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.gray2pseudo_color.parse_args": [[26, 35], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'dir_or_file'", ",", "help", "=", "'input gray label directory or file list path'", ")", "\n", "parser", ".", "add_argument", "(", "'output_dir'", ",", "help", "=", "'output colorful label directory'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset_dir'", ",", "help", "=", "'dataset directory'", ")", "\n", "parser", ".", "add_argument", "(", "'--file_separator'", ",", "help", "=", "'file list separator'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.gray2pseudo_color.get_color_map_list": [[37, 60], ["range"], "function", ["None"], ["", "def", "get_color_map_list", "(", "num_classes", ")", ":", "\n", "    ", "\"\"\"\n    Returns the color map for visualizing the segmentation mask,\n    which can support arbitrary number of classes.\n    Args:\n        num_classes (int): Number of classes.\n    Returns:\n        (list). The color map.\n    \"\"\"", "\n", "\n", "num_classes", "+=", "1", "\n", "color_map", "=", "num_classes", "*", "[", "0", ",", "0", ",", "0", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "num_classes", ")", ":", "\n", "        ", "j", "=", "0", "\n", "lab", "=", "i", "\n", "while", "lab", ":", "\n", "            ", "color_map", "[", "i", "*", "3", "]", "|=", "(", "(", "(", "lab", ">>", "0", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "color_map", "[", "i", "*", "3", "+", "1", "]", "|=", "(", "(", "(", "lab", ">>", "1", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "color_map", "[", "i", "*", "3", "+", "2", "]", "|=", "(", "(", "(", "lab", ">>", "2", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "j", "+=", "1", "\n", "lab", ">>=", "3", "\n", "", "", "color_map", "=", "color_map", "[", "3", ":", "]", "\n", "return", "color_map", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.gray2pseudo_color.gray2pseudo_color": [[62, 120], ["gray2pseudo_color.get_color_map_list", "os.path.isdir", "os.path.isdir", "os.exists", "os.makedirs", "os.makedirs", "print", "os.walk", "os.walk", "os.path.isfile", "os.path.isfile", "print", "print", "sys.exit", "open", "os.join", "fpath.replace", "_output_dir.lstrip.lstrip", "PIL.Image.open", "numpy.asarray", "PIL.Image.fromarray", "Image.fromarray.putpalette", "os.join", "os.join", "Image.fromarray.save", "print", "line.strip().split", "os.path.join", "os.path.join", "PIL.Image.open", "numpy.asarray", "PIL.Image.fromarray", "Image.fromarray.putpalette", "os.split", "os.join", "os.join", "Image.fromarray.save", "print", "np.asarray.astype", "os.exists", "os.makedirs", "os.makedirs", "np.asarray.astype", "os.exists", "os.makedirs", "os.makedirs", "line.strip"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes_autolabeling.get_color_map_list"], ["", "def", "gray2pseudo_color", "(", "args", ")", ":", "\n", "    ", "\"\"\"\u5c06\u7070\u5ea6\u6807\u6ce8\u56fe\u7247\u8f6c\u6362\u4e3a\u4f2a\u5f69\u8272\u56fe\u7247\"\"\"", "\n", "input", "=", "args", ".", "dir_or_file", "\n", "output_dir", "=", "args", ".", "output_dir", "\n", "if", "not", "osp", ".", "exists", "(", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_dir", ")", "\n", "print", "(", "'Creating colorful label directory:'", ",", "output_dir", ")", "\n", "\n", "", "color_map", "=", "get_color_map_list", "(", "256", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "input", ")", ":", "\n", "        ", "for", "fpath", ",", "dirs", ",", "fs", "in", "os", ".", "walk", "(", "input", ")", ":", "\n", "            ", "for", "f", "in", "fs", ":", "\n", "                ", "try", ":", "\n", "                    ", "grt_path", "=", "osp", ".", "join", "(", "fpath", ",", "f", ")", "\n", "_output_dir", "=", "fpath", ".", "replace", "(", "input", ",", "''", ")", "\n", "_output_dir", "=", "_output_dir", ".", "lstrip", "(", "os", ".", "path", ".", "sep", ")", "\n", "\n", "im", "=", "Image", ".", "open", "(", "grt_path", ")", "\n", "lbl", "=", "np", ".", "asarray", "(", "im", ")", "\n", "\n", "lbl_pil", "=", "Image", ".", "fromarray", "(", "lbl", ".", "astype", "(", "np", ".", "uint8", ")", ",", "mode", "=", "'P'", ")", "\n", "lbl_pil", ".", "putpalette", "(", "color_map", ")", "\n", "\n", "real_dir", "=", "osp", ".", "join", "(", "output_dir", ",", "_output_dir", ")", "\n", "if", "not", "osp", ".", "exists", "(", "real_dir", ")", ":", "\n", "                        ", "os", ".", "makedirs", "(", "real_dir", ")", "\n", "", "new_grt_path", "=", "osp", ".", "join", "(", "real_dir", ",", "f", ")", "\n", "\n", "lbl_pil", ".", "save", "(", "new_grt_path", ")", "\n", "print", "(", "'New label path:'", ",", "new_grt_path", ")", "\n", "", "except", ":", "\n", "                    ", "continue", "\n", "", "", "", "", "elif", "os", ".", "path", ".", "isfile", "(", "input", ")", ":", "\n", "        ", "if", "args", ".", "dataset_dir", "is", "None", "or", "args", ".", "file_separator", "is", "None", ":", "\n", "            ", "print", "(", "'No dataset_dir or file_separator input!'", ")", "\n", "sys", ".", "exit", "(", ")", "\n", "", "with", "open", "(", "input", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "parts", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "args", ".", "file_separator", ")", "\n", "grt_name", "=", "parts", "[", "1", "]", "\n", "grt_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "dataset_dir", ",", "grt_name", ")", "\n", "\n", "im", "=", "Image", ".", "open", "(", "grt_path", ")", "\n", "lbl", "=", "np", ".", "asarray", "(", "im", ")", "\n", "\n", "lbl_pil", "=", "Image", ".", "fromarray", "(", "lbl", ".", "astype", "(", "np", ".", "uint8", ")", ",", "mode", "=", "'P'", ")", "\n", "lbl_pil", ".", "putpalette", "(", "color_map", ")", "\n", "\n", "grt_dir", ",", "_", "=", "osp", ".", "split", "(", "grt_name", ")", "\n", "new_dir", "=", "osp", ".", "join", "(", "output_dir", ",", "grt_dir", ")", "\n", "if", "not", "osp", ".", "exists", "(", "new_dir", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "new_dir", ")", "\n", "", "new_grt_path", "=", "osp", ".", "join", "(", "output_dir", ",", "grt_name", ")", "\n", "\n", "lbl_pil", ".", "save", "(", "new_grt_path", ")", "\n", "print", "(", "'New label path:'", ",", "new_grt_path", ")", "\n", "", "", "", "else", ":", "\n", "        ", "print", "(", "'It\\'s neither a dir nor a file'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.plot_model_performance.ModelPerformance.set_model_info": [[25, 279], ["None"], "methods", ["None"], ["def", "set_model_info", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n                Define the detailed information of each implemented models.\n                The mIoU is evaluated with the resulotion: 1024x512.  \n                The whole processing time includes preprocess_time, Inference Time (ms) and postprocess_time.(ms)\n                \"\"\"", "\n", "model_infos", "=", "{", "}", "\n", "# large model", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "79.50", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "143.3464", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "94.9185", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0133", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "564.43", "\n", "model_info", "[", "'Params (M)'", "]", "=", "67.70", "\n", "model_infos", "[", "'ANN_ResNet101'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "80.85", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "141.65", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "114.00", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.014", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "481.00", "\n", "model_info", "[", "'Params (M)'", "]", "=", "58.17", "\n", "model_infos", "[", "'DeeplabV3_ResNet101'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "81.10", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "147.2358", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "69.7831", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.016", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "228.44", "\n", "model_info", "[", "'Params (M)'", "]", "=", "26.79", "\n", "model_infos", "[", "'DeeplabV3p_ResNet50'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "80.70", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "130.5809", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "45.4565", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.012", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "187.50", "\n", "model_info", "[", "'Params (M)'", "]", "=", "65.94", "\n", "model_infos", "[", "'FCN_HRNetw18'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "81.01", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "119.3773", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "90.2779", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0127", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "570.74", "\n", "model_info", "[", "'Params (M)'", "]", "=", "68.73", "\n", "model_infos", "[", "'GCNet_ResNet101'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "82.15", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "138.4849", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "61.8837", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0143", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "324.66", "\n", "model_info", "[", "'Params (M)'", "]", "=", "70.47", "\n", "model_infos", "[", "'OCRNet_HRNetw48'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "80.48", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "134.2316", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "115.9394", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0123", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "686.89", "\n", "model_info", "[", "'Params (M)'", "]", "=", "86.97", "\n", "model_infos", "[", "'PSPNet_ResNet101'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "81.26", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "136.2757", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "66.8982", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0125", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "395.10", "\n", "model_info", "[", "'Params (M)'", "]", "=", "41.71", "\n", "model_infos", "[", "'DecoupledSegnet_ResNet50'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "80.00", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "140.4741", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "80.0515", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0133", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "512.18", "\n", "model_info", "[", "'Params (M)'", "]", "=", "61.45", "\n", "model_infos", "[", "'EMANet_ResNet101'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "81.03", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "138.9493", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "97.8105", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0142", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "575.04", "\n", "model_info", "[", "'Params (M)'", "]", "=", "69.13", "\n", "model_infos", "[", "'DNLnet_ResNet101'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "80.27", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "134.7776", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "95.0819", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0146", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "398.48", "\n", "model_info", "[", "'Params (M)'", "]", "=", "47.52", "\n", "model_infos", "[", "'DANet_ResNet50'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "80.10", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "132.4482", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "81.2459", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0143", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "474.13", "\n", "model_info", "[", "'Params (M)'", "]", "=", "56.81", "\n", "model_infos", "[", "'ISANet_ResNet101'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "78.72", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "131.6711", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "69.5135", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0153", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "136.80", "\n", "model_info", "[", "'Params (M)'", "]", "=", "13.81", "\n", "model_infos", "[", "'SFNet_ResNet18'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "81.49", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "121.35", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "394.37", "\n", "model_info", "[", "'Params (M)'", "]", "=", "42.03", "\n", "model_infos", "[", "'SFNet_ResNet50'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "76.54", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "70.35", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "363.17", "\n", "model_info", "[", "'Params (M)'", "]", "=", "28.18", "\n", "model_infos", "[", "'PointRend_ResNet50'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "81.60", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "47.08", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "113.71", "\n", "model_info", "[", "'Params (M)'", "]", "=", "27.36", "\n", "model_infos", "[", "'SegFormer_B2'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "82.47", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "62.70", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "142.97", "\n", "model_info", "[", "'Params (M)'", "]", "=", "47.24", "\n", "model_infos", "[", "'SegFormer_B3'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "82.38", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "73.26", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "171.05", "\n", "model_info", "[", "'Params (M)'", "]", "=", "64.01", "\n", "model_infos", "[", "'SegFormer_B4'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "82.58", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "84.34", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "199.68", "\n", "model_info", "[", "'Params (M)'", "]", "=", "84.61", "\n", "model_infos", "[", "'SegFormer_B5'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "77.29", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "201.26", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "620.94", "\n", "model_info", "[", "'Params (M)'", "]", "=", "303.37", "\n", "model_infos", "[", "'SETR-Naive'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "78.08", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "212.22", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "727.46", "\n", "model_info", "[", "'Params (M)'", "]", "=", "307.24", "\n", "model_infos", "[", "'SETR-PUP'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "76.52", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "204.87", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "633.88", "\n", "model_info", "[", "'Params (M)'", "]", "=", "307.05", "\n", "model_infos", "[", "'SETR-MLA'", "]", "=", "model_info", "\n", "\n", "# lightweight", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "76.73", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "15.66", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "13.63", "\n", "model_info", "[", "'Params (M)'", "]", "=", "3.72", "\n", "model_infos", "[", "'SegFormer_B0'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "78.35", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "21.48", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "26.55", "\n", "model_info", "[", "'Params (M)'", "]", "=", "13.68", "\n", "model_infos", "[", "'SegFormer_B1'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "74.74", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "9.10", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "24.83", "\n", "model_info", "[", "'Params (M)'", "]", "=", "8.29", "\n", "model_infos", "[", "'STDC1-Seg50'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "77.60", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "10.88", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "38.05", "\n", "model_info", "[", "'Params (M)'", "]", "=", "12.33", "\n", "model_infos", "[", "'STDC2-Seg50'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "73.19", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "145.7413", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "7.5558", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0132", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "16.14", "\n", "model_info", "[", "'Params (M)'", "]", "=", "2.33", "\n", "model_infos", "[", "'BiseNetV2'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "69.31", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "142.109", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "8.7706", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0134", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "2.04", "\n", "model_info", "[", "'Params (M)'", "]", "=", "1.44", "\n", "model_infos", "[", "'Fast-SCNN'", "]", "=", "model_info", "\n", "\n", "model_info", "=", "{", "}", "\n", "model_info", "[", "'mIoU'", "]", "=", "79.03", "\n", "model_info", "[", "'preprocess_time'", "]", "=", "135.8398", "\n", "model_info", "[", "'Inference Time (ms)'", "]", "=", "12.8848", "\n", "model_info", "[", "'postprocess_time'", "]", "=", "0.0127", "\n", "model_info", "[", "'FLOPs (G)'", "]", "=", "35.40", "\n", "model_info", "[", "'Params (M)'", "]", "=", "4.13", "\n", "model_infos", "[", "'HarDNet'", "]", "=", "model_info", "\n", "\n", "# model_info = {}", "\n", "# model_info['mIoU'] = 65.00", "\n", "# model_info['preprocess_time'] = 137.7497", "\n", "# model_info['Inference Time (ms)'] = 29.1146", "\n", "# model_info['postprocess_time'] = 0.0123  ", "\n", "# model_info['FLOPs (G)'] = 253.75", "\n", "# model_info['Params (M)'] = 13.41", "\n", "# model_infos['U-Net'] = model_info", "\n", "\n", "return", "model_infos", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.plot_model_performance.ModelPerformance.do_plot": [[280, 338], ["matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "len", "matplotlib.pyplot.legend", "matplotlib.pyplot.subplots_adjust", "matplotlib.pyplot.grid", "matplotlib.pyplot.show", "infer_time.append", "mIoUs.append", "matplotlib.pyplot.plot", "marks.append", "labels.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "do_plot", "(", "self", ",", "title", ",", "xlabel", ",", "model_infos", ")", ":", "\n", "        ", "plt", ".", "title", "(", "title", ")", "\n", "plt", ".", "xlabel", "(", "xlabel", ")", "\n", "plt", ".", "ylabel", "(", "'mIoU(%)'", ")", "\n", "\n", "styles", "=", "[", "\n", "'Hr'", ",", "'+r'", ",", "'*r'", ",", "'*g'", ",", "'hg'", ",", "'pg'", ",", "'sg'", ",", "'+g'", ",", "'hc'", ",", "'^c'", ",", "'+c'", ",", "\n", "'*c'", ",", "'py'", ",", "'*y'", ",", "'+y'", ",", "'pk'", ",", "'+k'", ",", "'Dk'", ",", "'sk'", ",", "'dm'", ",", "'*m'", ",", "'Dm'", ",", "\n", "'hb'", ",", "'pb'", ",", "'Db'", ",", "'+b'", ",", "'sy'", ",", "'Hy'", ",", "'Dy'", ",", "'^y'", "\n", "]", "\n", "num_styles", "=", "len", "(", "styles", ")", "\n", "\n", "# random.shuffle(styles)", "\n", "\n", "infer_time", "=", "[", "]", "\n", "mIoUs", "=", "[", "]", "\n", "marks", "=", "[", "]", "# Related to the model that on the figure already.", "\n", "labels", "=", "[", "]", "# Model's name whose status is `Correct`.", "\n", "\n", "index", "=", "0", "# The index of the current using style.", "\n", "\n", "for", "model", "in", "model_infos", ":", "\n", "            ", "infer_time", ".", "append", "(", "model_infos", "[", "model", "]", "[", "xlabel", "]", ")", "\n", "mIoUs", ".", "append", "(", "model_infos", "[", "model", "]", "[", "'mIoU'", "]", ")", "\n", "x", ",", "=", "plt", ".", "plot", "(", "infer_time", "[", "index", "]", ",", "mIoUs", "[", "index", "]", ",", "styles", "[", "index", "]", ")", "\n", "marks", ".", "append", "(", "x", ")", "\n", "labels", ".", "append", "(", "model", ")", "\n", "\n", "index", "=", "(", "index", "+", "1", ")", "%", "num_styles", "\n", "\n", "# Add some fonts.", "\n", "# if 'OCRNet' in model_infos:", "\n", "#         plt.text(55, 82.3,'OCRNet', fontdict={'size':11, 'color':'red'}) ", "\n", "# if 'BiseNetV2' in model_infos:", "\n", "#         plt.text(14, 74.5, 'BiseNetV2', fontdict={'size':11, 'color':'red'})", "\n", "# if 'DeepLabV3p' in model_infos:", "\n", "#         plt.text(60.1, 80.1, 'DeepLabV3p', fontdict={'size':11, 'color':'green'})", "\n", "# if 'PSPNet' in model_infos:", "\n", "#         plt.text(110, 79.8, 'PSPNet', fontdict={'size':11, 'color':'c'})", "\n", "# if 'DANet' in model_infos:", "\n", "#         plt.text(86.2, 79.6, 'DANet', fontdict={'size':11, 'color':'green'})", "\n", "# plt.text(12.889,82.54,'OCRNet',fontdict={'size':11,'color':'c'})", "\n", "# plt.text(31.365,78.13,'HarDNet',fontdict={'size':11,'color':'m'})", "\n", "# plt.text(35.986,81.49,'SFNet',fontdict={'size':11,'color':'green'})", "\n", "\n", "", "plt", ".", "legend", "(", "\n", "marks", ",", "labels", ",", "bbox_to_anchor", "=", "(", "1.05", ",", "1", ")", ",", "loc", "=", "2", ",", "borderaxespad", "=", "0", ")", "\n", "\n", "plt", ".", "subplots_adjust", "(", "right", "=", "0.7", ")", "\n", "plt", ".", "grid", "(", "\n", "b", "=", "None", ",", "\n", "which", "=", "'major'", ",", "\n", "axis", "=", "'both'", ",", ")", "\n", "\n", "# Add a line on the figure. Could connect DeepLab series or UNet series.", "\n", "# plt.plot([29.1, 70, 90.3],[67.2, 81.4, 81.6], linewidth=1, color='orange')", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cocostuff.COCOStuffGenerator.__init__": [[56, 76], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "annotation_path", ",", "save_path", ")", ":", "\n", "\n", "        ", "super", "(", "COCOStuffGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mapping", "=", "[", "\n", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "\n", "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "26", ",", "27", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "\n", "40", ",", "41", ",", "42", ",", "43", ",", "45", ",", "46", ",", "47", ",", "48", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", ",", "55", ",", "56", ",", "57", ",", "\n", "58", ",", "59", ",", "60", ",", "61", ",", "62", ",", "63", ",", "64", ",", "66", ",", "69", ",", "71", ",", "72", ",", "73", ",", "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "\n", "79", ",", "80", ",", "81", ",", "83", ",", "84", ",", "85", ",", "86", ",", "87", ",", "88", ",", "89", ",", "91", ",", "92", ",", "93", ",", "94", ",", "95", ",", "96", ",", "97", ",", "\n", "98", ",", "99", ",", "100", ",", "101", ",", "102", ",", "103", ",", "104", ",", "105", ",", "106", ",", "107", ",", "108", ",", "109", ",", "110", ",", "111", ",", "\n", "112", ",", "113", ",", "114", ",", "115", ",", "116", ",", "117", ",", "118", ",", "119", ",", "120", ",", "121", ",", "122", ",", "123", ",", "124", ",", "\n", "125", ",", "126", ",", "127", ",", "128", ",", "129", ",", "130", ",", "131", ",", "132", ",", "133", ",", "134", ",", "135", ",", "136", ",", "137", ",", "\n", "138", ",", "139", ",", "140", ",", "141", ",", "142", ",", "143", ",", "144", ",", "145", ",", "146", ",", "147", ",", "148", ",", "149", ",", "150", ",", "\n", "151", ",", "152", ",", "153", ",", "154", ",", "155", ",", "156", ",", "157", ",", "158", ",", "159", ",", "160", ",", "161", ",", "162", ",", "163", ",", "\n", "164", ",", "165", ",", "166", ",", "167", ",", "168", ",", "169", ",", "170", ",", "171", ",", "172", ",", "173", ",", "174", ",", "175", ",", "176", ",", "\n", "177", ",", "178", ",", "179", ",", "180", ",", "181", "\n", "]", "\n", "self", ".", "annotation_path", "=", "annotation_path", "\n", "self", ".", "save_path", "=", "save_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cocostuff.COCOStuffGenerator.encode_label": [[77, 83], ["enumerate", "ret.astype", "numpy.ones_like"], "methods", ["None"], ["", "def", "encode_label", "(", "self", ",", "labelmap", ")", ":", "\n", "        ", "ret", "=", "np", ".", "ones_like", "(", "labelmap", ")", "*", "255", "\n", "for", "idx", ",", "label", "in", "enumerate", "(", "self", ".", "mapping", ")", ":", "\n", "\n", "            ", "ret", "[", "labelmap", "==", "label", "]", "=", "idx", "\n", "", "return", "ret", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cocostuff.COCOStuffGenerator.generate_label": [[84, 108], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "tqdm.tqdm.tqdm", "tqdm.tqdm.tqdm", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.listdir", "numpy.array", "convert_cocostuff.COCOStuffGenerator.encode_label", "PIL.Image.fromarray", "PIL.Image.fromarray.save", "os.listdir", "numpy.array", "convert_cocostuff.COCOStuffGenerator.encode_label", "PIL.Image.fromarray", "PIL.Image.fromarray.save", "PIL.Image.open().convert", "os.path.join", "PIL.Image.open().convert", "os.path.join", "PIL.Image.open", "PIL.Image.open", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cocostuff.COCOStuffGenerator.encode_label", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cocostuff.COCOStuffGenerator.encode_label"], ["", "def", "generate_label", "(", "self", ")", ":", "\n", "        ", "train_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "annotation_path", ",", "'train2017'", ")", "\n", "val_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "annotation_path", ",", "'val2017'", ")", "\n", "save_train_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_path", ",", "'train2017'", ")", "\n", "save_val_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_path", ",", "'val2017'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_train_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_train_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "save_val_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_val_path", ")", "\n", "\n", "", "for", "label_id", "in", "tqdm", "(", "os", ".", "listdir", "(", "train_path", ")", ",", "desc", "=", "'trainset'", ")", ":", "\n", "            ", "label", "=", "np", ".", "array", "(", "\n", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "train_path", ",", "label_id", ")", ")", ".", "convert", "(", "'P'", ")", ")", "\n", "label", "=", "self", ".", "encode_label", "(", "label", ")", "\n", "label", "=", "Image", ".", "fromarray", "(", "label", ")", "\n", "label", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_train_path", ",", "label_id", ")", ")", "\n", "\n", "", "for", "label_id", "in", "tqdm", "(", "os", ".", "listdir", "(", "val_path", ")", ",", "desc", "=", "'valset'", ")", ":", "\n", "            ", "label", "=", "np", ".", "array", "(", "\n", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "val_path", ",", "label_id", ")", ")", ".", "convert", "(", "'P'", ")", ")", "\n", "label", "=", "self", ".", "encode_label", "(", "label", ")", "\n", "label", "=", "Image", ".", "fromarray", "(", "label", ")", "\n", "label", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_val_path", ",", "label_id", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cocostuff.parse_args": [[39, 53], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Generate COCOStuff dataset'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--annotation_path'", ",", "\n", "default", "=", "'annotations'", ",", "\n", "help", "=", "'COCOStuff anotation path'", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_path'", ",", "\n", "default", "=", "'convert_annotations'", ",", "\n", "help", "=", "'COCOStuff anotation path'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cocostuff.main": [[110, 115], ["convert_cocostuff.parse_args", "convert_cocostuff.COCOStuffGenerator", "convert_cocostuff.COCOStuffGenerator.generate_label"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator.generate_label"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "generator", "=", "COCOStuffGenerator", "(", "\n", "annotation_path", "=", "args", ".", "annotation_path", ",", "save_path", "=", "args", ".", "save_path", ")", "\n", "generator", ".", "generate_label", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.analyze_model.parse_args": [[37, 48], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--input_size\"", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "\"The input shape.\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "[", "1", ",", "3", ",", "1024", ",", "1024", "]", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.analyze_model._dynamic_flops": [[51, 135], ["set", "model.eval", "model.apply", "model.sublayers", "paddle.hapi.static_flops.Table", "model.named_sublayers", "print", "int", "m.register_buffer", "m.register_buffer", "type", "m.register_forward_post_hook", "m.register_forward_post_hook", "handler_collection.append", "handler_collection.append", "set.add", "paddle.framework.no_grad", "model", "set().issubset", "model.train", "handler.remove", "set().issubset", "paddle.hapi.static_flops.Table.print_table", "len", "paddle.zeros", "paddle.zeros", "m.register_forward_post_hook", "handler_collection.append", "len", "set", "len", "set", "paddle.hapi.static_flops.Table.add_row", "m._buffers.pop", "m._buffers.pop", "m._buffers.pop", "m._buffers.pop", "round", "round", "list", "print", "list", "set", "list", "list", "set", "list", "float", "float", "m.children", "print", "print", "m.children", "m._buffers.keys", "m.children", "m._buffers.keys", "m.full_name", "list", "list", "round", "round", "m.input_shape.numpy", "m.output_shape.numpy", "float", "float"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "_dynamic_flops", "(", "model", ",", "inputs", ",", "custom_ops", "=", "None", ",", "print_detail", "=", "False", ")", ":", "\n", "    ", "handler_collection", "=", "[", "]", "\n", "types_collection", "=", "set", "(", ")", "\n", "if", "custom_ops", "is", "None", ":", "\n", "        ", "custom_ops", "=", "{", "}", "\n", "\n", "", "def", "add_hooks", "(", "m", ")", ":", "\n", "        ", "if", "len", "(", "list", "(", "m", ".", "children", "(", ")", ")", ")", ">", "0", ":", "\n", "            ", "return", "\n", "", "m", ".", "register_buffer", "(", "'total_ops'", ",", "paddle", ".", "zeros", "(", "[", "1", "]", ",", "dtype", "=", "'int64'", ")", ")", "\n", "m", ".", "register_buffer", "(", "'total_params'", ",", "paddle", ".", "zeros", "(", "[", "1", "]", ",", "dtype", "=", "'int64'", ")", ")", "\n", "m_type", "=", "type", "(", "m", ")", "\n", "\n", "flops_fn", "=", "None", "\n", "if", "m_type", "in", "custom_ops", ":", "\n", "            ", "flops_fn", "=", "custom_ops", "[", "m_type", "]", "\n", "if", "m_type", "not", "in", "types_collection", ":", "\n", "                ", "print", "(", "\"Customize Function has been applied to {}\"", ".", "format", "(", "\n", "m_type", ")", ")", "\n", "", "", "elif", "m_type", "in", "register_hooks", ":", "\n", "            ", "flops_fn", "=", "register_hooks", "[", "m_type", "]", "\n", "if", "m_type", "not", "in", "types_collection", ":", "\n", "                ", "print", "(", "\"{}'s flops has been counted\"", ".", "format", "(", "m_type", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "m_type", "not", "in", "types_collection", ":", "\n", "                ", "print", "(", "\n", "\"Cannot find suitable count function for {}. Treat it as zero FLOPs.\"", "\n", ".", "format", "(", "m_type", ")", ")", "\n", "\n", "", "", "if", "flops_fn", "is", "not", "None", ":", "\n", "            ", "flops_handler", "=", "m", ".", "register_forward_post_hook", "(", "flops_fn", ")", "\n", "handler_collection", ".", "append", "(", "flops_handler", ")", "\n", "", "params_handler", "=", "m", ".", "register_forward_post_hook", "(", "count_parameters", ")", "\n", "io_handler", "=", "m", ".", "register_forward_post_hook", "(", "count_io_info", ")", "\n", "handler_collection", ".", "append", "(", "params_handler", ")", "\n", "handler_collection", ".", "append", "(", "io_handler", ")", "\n", "types_collection", ".", "add", "(", "m_type", ")", "\n", "\n", "", "training", "=", "model", ".", "training", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "model", ".", "apply", "(", "add_hooks", ")", "\n", "\n", "with", "paddle", ".", "framework", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", "(", "inputs", ")", "\n", "\n", "", "total_ops", "=", "0", "\n", "total_params", "=", "0", "\n", "for", "m", "in", "model", ".", "sublayers", "(", ")", ":", "\n", "        ", "if", "len", "(", "list", "(", "m", ".", "children", "(", ")", ")", ")", ">", "0", ":", "\n", "            ", "continue", "\n", "", "if", "set", "(", "[", "'total_ops'", ",", "'total_params'", ",", "'input_shape'", ",", "\n", "'output_shape'", "]", ")", ".", "issubset", "(", "set", "(", "list", "(", "m", ".", "_buffers", ".", "keys", "(", ")", ")", ")", ")", ":", "\n", "            ", "total_ops", "+=", "m", ".", "total_ops", "\n", "total_params", "+=", "m", ".", "total_params", "\n", "\n", "", "", "if", "training", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "", "for", "handler", "in", "handler_collection", ":", "\n", "        ", "handler", ".", "remove", "(", ")", "\n", "\n", "", "table", "=", "Table", "(", "\n", "[", "\"Layer Name\"", ",", "\"Input Shape\"", ",", "\"Output Shape\"", ",", "\"Params(M)\"", ",", "\"Flops(G)\"", "]", ")", "\n", "\n", "for", "n", ",", "m", "in", "model", ".", "named_sublayers", "(", ")", ":", "\n", "        ", "if", "len", "(", "list", "(", "m", ".", "children", "(", ")", ")", ")", ">", "0", ":", "\n", "            ", "continue", "\n", "", "if", "set", "(", "[", "'total_ops'", ",", "'total_params'", ",", "'input_shape'", ",", "\n", "'output_shape'", "]", ")", ".", "issubset", "(", "set", "(", "list", "(", "m", ".", "_buffers", ".", "keys", "(", ")", ")", ")", ")", ":", "\n", "            ", "table", ".", "add_row", "(", "[", "\n", "m", ".", "full_name", "(", ")", ",", "list", "(", "m", ".", "input_shape", ".", "numpy", "(", ")", ")", ",", "\n", "list", "(", "m", ".", "output_shape", ".", "numpy", "(", ")", ")", ",", "\n", "round", "(", "float", "(", "m", ".", "total_params", "/", "1e6", ")", ",", "3", ")", ",", "\n", "round", "(", "float", "(", "m", ".", "total_ops", "/", "1e9", ")", ",", "3", ")", "\n", "]", ")", "\n", "m", ".", "_buffers", ".", "pop", "(", "\"total_ops\"", ")", "\n", "m", ".", "_buffers", ".", "pop", "(", "\"total_params\"", ")", "\n", "m", ".", "_buffers", ".", "pop", "(", "'input_shape'", ")", "\n", "m", ".", "_buffers", ".", "pop", "(", "'output_shape'", ")", "\n", "", "", "if", "print_detail", ":", "\n", "        ", "table", ".", "print_table", "(", ")", "\n", "", "print", "(", "'Total Flops: {}G     Total Params: {}M'", ".", "format", "(", "\n", "round", "(", "float", "(", "total_ops", "/", "1e9", ")", ",", "3", ")", ",", "round", "(", "float", "(", "total_params", "/", "1e6", ")", ",", "3", ")", ")", ")", "\n", "return", "int", "(", "total_ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.analyze_model.analyze": [[137, 151], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddleseg.cvlibs.Config", "paddle.randn", "analyze_model._dynamic_flops", "paddleseg.utils.get_sys_env.items", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.analyze_model._dynamic_flops"], ["", "def", "analyze", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "paddle", ".", "set_device", "(", "'cpu'", ")", "\n", "\n", "cfg", "=", "Config", "(", "args", ".", "config", ")", "\n", "\n", "custom_ops", "=", "{", "paddle", ".", "nn", ".", "SyncBatchNorm", ":", "op_flops_funs", ".", "count_syncbn", "}", "\n", "inputs", "=", "paddle", ".", "randn", "(", "args", ".", "input_size", ")", "\n", "_dynamic_flops", "(", "cfg", ".", "model", ",", "inputs", ",", "custom_ops", "=", "custom_ops", ",", "print_detail", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.create_dataset_list.parse_args": [[22, 66], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'PaddleSeg generate file list on cityscapes or your customized dataset.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "'dataset_root'", ",", "help", "=", "'dataset root directory'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--type'", ",", "\n", "help", "=", "'dataset type: \\n'", "\n", "'- cityscapes \\n'", "\n", "'- custom(default)'", ",", "\n", "default", "=", "\"custom\"", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--separator'", ",", "\n", "dest", "=", "'separator'", ",", "\n", "help", "=", "'file list separator'", ",", "\n", "default", "=", "\" \"", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--folder'", ",", "\n", "help", "=", "'the folder names of images and labels'", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "2", ",", "\n", "default", "=", "[", "'images'", ",", "'annotations'", "]", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--second_folder'", ",", "\n", "help", "=", "'the second-level folder names of train set, validation set, test set'", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "'*'", ",", "\n", "default", "=", "[", "'train'", ",", "'val'", ",", "'test'", "]", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--format'", ",", "\n", "help", "=", "'data format of images and labels, e.g. jpg or png.'", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "2", ",", "\n", "default", "=", "[", "'jpg'", ",", "'png'", "]", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--postfix'", ",", "\n", "help", "=", "'postfix of images or labels'", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "2", ",", "\n", "default", "=", "[", "''", ",", "''", "]", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.create_dataset_list.cityscape_cfg": [[68, 74], ["None"], "function", ["None"], ["", "def", "cityscape_cfg", "(", "args", ")", ":", "\n", "    ", "args", ".", "postfix", "=", "[", "'_leftImg8bit'", ",", "'_gtFine_labelTrainIds'", "]", "\n", "\n", "args", ".", "folder", "=", "[", "'leftImg8bit'", ",", "'gtFine'", "]", "\n", "\n", "args", ".", "format", "=", "[", "'png'", ",", "'png'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.create_dataset_list.get_files": [[76, 106], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "glob.glob", "glob.glob", "glob.glob", "glob.glob", "glob.glob", "sorted"], "function", ["None"], ["", "def", "get_files", "(", "image_or_label", ",", "dataset_split", ",", "args", ")", ":", "\n", "    ", "dataset_root", "=", "args", ".", "dataset_root", "\n", "postfix", "=", "args", ".", "postfix", "\n", "format", "=", "args", ".", "format", "\n", "folder", "=", "args", ".", "folder", "\n", "\n", "pattern", "=", "'*%s.%s'", "%", "(", "postfix", "[", "image_or_label", "]", ",", "format", "[", "image_or_label", "]", ")", "\n", "\n", "search_files", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "folder", "[", "image_or_label", "]", ",", "\n", "dataset_split", ",", "pattern", ")", "\n", "search_files2", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "folder", "[", "image_or_label", "]", ",", "\n", "dataset_split", ",", "\"*\"", ",", "pattern", ")", "# \u5305\u542b\u5b50\u76ee\u5f55", "\n", "search_files3", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "folder", "[", "image_or_label", "]", ",", "\n", "dataset_split", ",", "\"*\"", ",", "\"*\"", ",", "pattern", ")", "# \u5305\u542b\u4e09\u7ea7\u76ee\u5f55", "\n", "search_files4", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "folder", "[", "image_or_label", "]", ",", "\n", "dataset_split", ",", "\"*\"", ",", "\"*\"", ",", "\"*\"", ",", "\n", "pattern", ")", "# \u5305\u542b\u56db\u7ea7\u76ee\u5f55", "\n", "search_files5", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "folder", "[", "image_or_label", "]", ",", "\n", "dataset_split", ",", "\"*\"", ",", "\"*\"", ",", "\"*\"", ",", "\"*\"", ",", "\n", "pattern", ")", "# \u5305\u542b\u4e94\u7ea7\u76ee\u5f55", "\n", "\n", "filenames", "=", "glob", ".", "glob", "(", "search_files", ")", "\n", "filenames2", "=", "glob", ".", "glob", "(", "search_files2", ")", "\n", "filenames3", "=", "glob", ".", "glob", "(", "search_files3", ")", "\n", "filenames4", "=", "glob", ".", "glob", "(", "search_files4", ")", "\n", "filenames5", "=", "glob", ".", "glob", "(", "search_files5", ")", "\n", "\n", "filenames", "=", "filenames", "+", "filenames2", "+", "filenames3", "+", "filenames4", "+", "filenames5", "\n", "\n", "return", "sorted", "(", "filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.create_dataset_list.generate_list": [[108, 151], ["print", "create_dataset_list.get_files", "create_dataset_list.get_files", "len", "len", "os.path.join", "os.path.join", "warnings.warn", "os.path.join", "warnings.warn", "Exception", "open", "range", "image_files[].replace", "f.write", "print", "left.lstrip.lstrip", "label_files[].replace", "right.lstrip.lstrip"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.split_dataset_list.get_files", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.split_dataset_list.get_files", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn"], ["", "def", "generate_list", "(", "args", ")", ":", "\n", "    ", "dataset_root", "=", "args", ".", "dataset_root", "\n", "separator", "=", "args", ".", "separator", "\n", "\n", "for", "dataset_split", "in", "args", ".", "second_folder", ":", "\n", "        ", "print", "(", "\"Creating {}.txt...\"", ".", "format", "(", "dataset_split", ")", ")", "\n", "image_files", "=", "get_files", "(", "0", ",", "dataset_split", ",", "args", ")", "\n", "label_files", "=", "get_files", "(", "1", ",", "dataset_split", ",", "args", ")", "\n", "if", "not", "image_files", ":", "\n", "            ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "args", ".", "folder", "[", "0", "]", ",", "dataset_split", ")", "\n", "warnings", ".", "warn", "(", "\"No images in {} !!!\"", ".", "format", "(", "img_dir", ")", ")", "\n", "", "num_images", "=", "len", "(", "image_files", ")", "\n", "\n", "if", "not", "label_files", ":", "\n", "            ", "label_dir", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "args", ".", "folder", "[", "1", "]", ",", "\n", "dataset_split", ")", "\n", "warnings", ".", "warn", "(", "\"No labels in {} !!!\"", ".", "format", "(", "label_dir", ")", ")", "\n", "", "num_label", "=", "len", "(", "label_files", ")", "\n", "\n", "if", "num_images", "!=", "num_label", "and", "num_label", ">", "0", ":", "\n", "            ", "raise", "Exception", "(", "\n", "\"Number of images = {}    number of labels = {} \\n\"", "\n", "\"Either number of images is equal to number of labels, \"", "\n", "\"or number of labels is equal to 0.\\n\"", "\n", "\"Please check your dataset!\"", ".", "format", "(", "num_images", ",", "num_label", ")", ")", "\n", "\n", "", "file_list", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "dataset_split", "+", "'.txt'", ")", "\n", "with", "open", "(", "file_list", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "for", "item", "in", "range", "(", "num_images", ")", ":", "\n", "                ", "left", "=", "image_files", "[", "item", "]", ".", "replace", "(", "dataset_root", ",", "''", ",", "1", ")", "\n", "if", "left", "[", "0", "]", "==", "os", ".", "path", ".", "sep", ":", "\n", "                    ", "left", "=", "left", ".", "lstrip", "(", "os", ".", "path", ".", "sep", ")", "\n", "\n", "", "try", ":", "\n", "                    ", "right", "=", "label_files", "[", "item", "]", ".", "replace", "(", "dataset_root", ",", "''", ",", "1", ")", "\n", "if", "right", "[", "0", "]", "==", "os", ".", "path", ".", "sep", ":", "\n", "                        ", "right", "=", "right", ".", "lstrip", "(", "os", ".", "path", ".", "sep", ")", "\n", "", "line", "=", "left", "+", "separator", "+", "right", "+", "'\\n'", "\n", "", "except", ":", "\n", "                    ", "line", "=", "left", "+", "'\\n'", "\n", "\n", "", "f", ".", "write", "(", "line", ")", "\n", "print", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.split_dataset_list.parse_args": [[23, 60], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'A tool for proportionally randomizing dataset to produce file lists.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "'dataset_root'", ",", "help", "=", "'the dataset root path'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'images_dir_name'", ",", "help", "=", "'the directory name of images'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'labels_dir_name'", ",", "help", "=", "'the directory name of labels'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--split'", ",", "help", "=", "''", ",", "nargs", "=", "3", ",", "type", "=", "float", ",", "default", "=", "[", "0.7", ",", "0.3", ",", "0", "]", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--label_class'", ",", "\n", "help", "=", "'label class names'", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "'*'", ",", "\n", "default", "=", "[", "'__background__'", ",", "'__foreground__'", "]", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--separator'", ",", "\n", "dest", "=", "'separator'", ",", "\n", "help", "=", "'file list separator'", ",", "\n", "default", "=", "\" \"", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--format'", ",", "\n", "help", "=", "'data format of images and labels, e.g. jpg, tif or png.'", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "2", ",", "\n", "default", "=", "[", "'jpg'", ",", "'png'", "]", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--postfix'", ",", "\n", "help", "=", "'postfix of images or labels'", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "2", ",", "\n", "default", "=", "[", "''", ",", "''", "]", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.split_dataset_list.get_files": [[62, 76], ["os.path.join", "os.path.join", "os.path.join", "glob.glob", "glob.glob", "glob.glob", "sorted"], "function", ["None"], ["", "def", "get_files", "(", "path", ",", "format", ",", "postfix", ")", ":", "\n", "    ", "pattern", "=", "'*%s.%s'", "%", "(", "postfix", ",", "format", ")", "\n", "\n", "search_files", "=", "os", ".", "path", ".", "join", "(", "path", ",", "pattern", ")", "\n", "search_files2", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"*\"", ",", "pattern", ")", "# \u5305\u542b\u5b50\u76ee\u5f55", "\n", "search_files3", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"*\"", ",", "\"*\"", ",", "pattern", ")", "# \u5305\u542b\u4e09\u7ea7\u76ee\u5f55", "\n", "\n", "filenames", "=", "glob", ".", "glob", "(", "search_files", ")", "\n", "filenames2", "=", "glob", ".", "glob", "(", "search_files2", ")", "\n", "filenames3", "=", "glob", ".", "glob", "(", "search_files3", ")", "\n", "\n", "filenames", "=", "filenames", "+", "filenames2", "+", "filenames3", "\n", "\n", "return", "sorted", "(", "filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.split_dataset_list.generate_list": [[78, 147], ["os.path.join", "os.path.join", "os.path.join", "split_dataset_list.get_files", "split_dataset_list.get_files", "len", "len", "numpy.array", "numpy.array", "numpy.random.get_state", "numpy.random.shuffle", "numpy.random.set_state", "numpy.random.shuffle", "len", "range", "sum", "ValueError", "open", "warnings.warn", "warnings.warn", "Exception", "print", "os.path.join", "f.write", "ValueError", "open", "round", "range", "image_files[].replace", "f.write", "print", "left.lstrip.lstrip", "label_files[].replace", "right.lstrip.lstrip"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.split_dataset_list.get_files", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.split_dataset_list.get_files", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.get_state", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.set_state", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn"], ["", "def", "generate_list", "(", "args", ")", ":", "\n", "    ", "separator", "=", "args", ".", "separator", "\n", "dataset_root", "=", "args", ".", "dataset_root", "\n", "if", "sum", "(", "args", ".", "split", ")", "!=", "1.0", ":", "\n", "        ", "raise", "ValueError", "(", "\"\u5212\u5206\u6bd4\u4f8b\u4e4b\u548c\u5fc5\u987b\u4e3a1\"", ")", "\n", "\n", "", "file_list", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'labels.txt'", ")", "\n", "with", "open", "(", "file_list", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "for", "label_class", "in", "args", ".", "label_class", ":", "\n", "            ", "f", ".", "write", "(", "label_class", "+", "'\\n'", ")", "\n", "\n", "", "", "image_dir", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "args", ".", "images_dir_name", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "args", ".", "labels_dir_name", ")", "\n", "image_files", "=", "get_files", "(", "image_dir", ",", "args", ".", "format", "[", "0", "]", ",", "args", ".", "postfix", "[", "0", "]", ")", "\n", "label_files", "=", "get_files", "(", "label_dir", ",", "args", ".", "format", "[", "1", "]", ",", "args", ".", "postfix", "[", "1", "]", ")", "\n", "if", "not", "image_files", ":", "\n", "        ", "warnings", ".", "warn", "(", "\"No files in {}\"", ".", "format", "(", "image_dir", ")", ")", "\n", "", "num_images", "=", "len", "(", "image_files", ")", "\n", "\n", "if", "not", "label_files", ":", "\n", "        ", "warnings", ".", "warn", "(", "\"No files in {}\"", ".", "format", "(", "label_dir", ")", ")", "\n", "", "num_label", "=", "len", "(", "label_files", ")", "\n", "\n", "if", "num_images", "!=", "num_label", "and", "num_label", ">", "0", ":", "\n", "        ", "raise", "Exception", "(", "\"Number of images = {}    number of labels = {} \\n\"", "\n", "\"Either number of images is equal to number of labels, \"", "\n", "\"or number of labels is equal to 0.\\n\"", "\n", "\"Please check your dataset!\"", ".", "format", "(", "num_images", ",", "\n", "num_label", ")", ")", "\n", "\n", "", "image_files", "=", "np", ".", "array", "(", "image_files", ")", "\n", "label_files", "=", "np", ".", "array", "(", "label_files", ")", "\n", "state", "=", "np", ".", "random", ".", "get_state", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "image_files", ")", "\n", "np", ".", "random", ".", "set_state", "(", "state", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "label_files", ")", "\n", "\n", "start", "=", "0", "\n", "num_split", "=", "len", "(", "args", ".", "split", ")", "\n", "dataset_name", "=", "[", "'train'", ",", "'val'", ",", "'test'", "]", "\n", "for", "i", "in", "range", "(", "num_split", ")", ":", "\n", "        ", "dataset_split", "=", "dataset_name", "[", "i", "]", "\n", "print", "(", "\"Creating {}.txt...\"", ".", "format", "(", "dataset_split", ")", ")", "\n", "if", "args", ".", "split", "[", "i", "]", ">", "1.0", "or", "args", ".", "split", "[", "i", "]", "<", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"{} dataset percentage should be 0~1.\"", ".", "format", "(", "\n", "dataset_split", ")", ")", "\n", "\n", "", "file_list", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "dataset_split", "+", "'.txt'", ")", "\n", "with", "open", "(", "file_list", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "num", "=", "round", "(", "args", ".", "split", "[", "i", "]", "*", "num_images", ")", "\n", "end", "=", "start", "+", "num", "\n", "if", "i", "==", "num_split", "-", "1", ":", "\n", "                ", "end", "=", "num_images", "\n", "", "for", "item", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "                ", "left", "=", "image_files", "[", "item", "]", ".", "replace", "(", "dataset_root", ",", "''", ")", "\n", "if", "left", "[", "0", "]", "==", "os", ".", "path", ".", "sep", ":", "\n", "                    ", "left", "=", "left", ".", "lstrip", "(", "os", ".", "path", ".", "sep", ")", "\n", "\n", "", "try", ":", "\n", "                    ", "right", "=", "label_files", "[", "item", "]", ".", "replace", "(", "dataset_root", ",", "''", ")", "\n", "if", "right", "[", "0", "]", "==", "os", ".", "path", ".", "sep", ":", "\n", "                        ", "right", "=", "right", ".", "lstrip", "(", "os", ".", "path", ".", "sep", ")", "\n", "", "line", "=", "left", "+", "separator", "+", "right", "+", "'\\n'", "\n", "", "except", ":", "\n", "                    ", "line", "=", "left", "+", "'\\n'", "\n", "\n", "", "f", ".", "write", "(", "line", ")", "\n", "print", "(", "line", ")", "\n", "", "start", "=", "end", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator.__init__": [[58, 83], ["os.path.join", "os.path.join", "os.path.join", "numpy.sort", "numpy.array().astype", "detail.Detail", "convert_voc2010.PascalContextGenerator.train_detail.getImgs", "detail.Detail", "convert_voc2010.PascalContextGenerator.val_detail.getImgs", "numpy.array", "os.path.exists", "os.makedirs", "numpy.array", "range", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "voc_path", ",", "annotation_path", ")", ":", "\n", "        ", "self", ".", "voc_path", "=", "voc_path", "\n", "self", ".", "annotation_path", "=", "annotation_path", "\n", "self", ".", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "voc_path", ",", "'Context'", ")", "\n", "self", ".", "_image_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "voc_path", ",", "'JPEGImages'", ")", "\n", "self", ".", "annFile", "=", "os", ".", "path", ".", "join", "(", "self", ".", "annotation_path", ",", "\n", "'trainval_merged.json'", ")", "\n", "\n", "self", ".", "_mapping", "=", "np", ".", "sort", "(", "\n", "np", ".", "array", "(", "[", "\n", "0", ",", "2", ",", "259", ",", "260", ",", "415", ",", "324", ",", "9", ",", "258", ",", "144", ",", "18", ",", "19", ",", "22", ",", "23", ",", "397", ",", "25", ",", "\n", "284", ",", "158", ",", "159", ",", "416", ",", "33", ",", "162", ",", "420", ",", "454", ",", "295", ",", "296", ",", "427", ",", "44", ",", "45", ",", "\n", "46", ",", "308", ",", "59", ",", "440", ",", "445", ",", "31", ",", "232", ",", "65", ",", "354", ",", "424", ",", "68", ",", "326", ",", "72", ",", "458", ",", "\n", "34", ",", "207", ",", "80", ",", "355", ",", "85", ",", "347", ",", "220", ",", "349", ",", "360", ",", "98", ",", "187", ",", "104", ",", "105", ",", "\n", "366", ",", "189", ",", "368", ",", "113", ",", "115", "\n", "]", ")", ")", "\n", "self", ".", "_key", "=", "np", ".", "array", "(", "range", "(", "len", "(", "self", ".", "_mapping", ")", ")", ")", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "self", ".", "train_detail", "=", "Detail", "(", "self", ".", "annFile", ",", "self", ".", "_image_dir", ",", "'train'", ")", "\n", "self", ".", "train_ids", "=", "self", ".", "train_detail", ".", "getImgs", "(", ")", "\n", "self", ".", "val_detail", "=", "Detail", "(", "self", ".", "annFile", ",", "self", ".", "_image_dir", ",", "'val'", ")", "\n", "self", ".", "val_ids", "=", "self", ".", "val_detail", ".", "getImgs", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "label_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "label_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator._class_to_index": [[84, 91], ["numpy.unique", "range", "numpy.digitize", "_key[].reshape", "len", "mask.ravel"], "methods", ["None"], ["", "", "def", "_class_to_index", "(", "self", ",", "mask", ",", "_mapping", ",", "_key", ")", ":", "\n", "# assert the values", "\n", "        ", "values", "=", "np", ".", "unique", "(", "mask", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "values", ")", ")", ":", "\n", "            ", "assert", "(", "values", "[", "i", "]", "in", "_mapping", ")", "\n", "", "index", "=", "np", ".", "digitize", "(", "mask", ".", "ravel", "(", ")", ",", "_mapping", ",", "right", "=", "True", ")", "\n", "return", "_key", "[", "index", "]", ".", "reshape", "(", "mask", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator.save_mask": [[92, 111], ["os.path.splitext", "filename.endswith", "PIL.Image.fromarray", "PIL.Image.fromarray.save", "convert_voc2010.PascalContextGenerator._class_to_index", "PIL.Image.fromarray", "os.path.join", "convert_voc2010.PascalContextGenerator.train_detail.getMask", "convert_voc2010.PascalContextGenerator._class_to_index", "convert_voc2010.PascalContextGenerator.val_detail.getMask"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator._class_to_index", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.getMask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator._class_to_index", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.getMask"], ["", "def", "save_mask", "(", "self", ",", "img_id", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'train'", ":", "\n", "            ", "mask", "=", "Image", ".", "fromarray", "(", "\n", "self", ".", "_class_to_index", "(", "\n", "self", ".", "train_detail", ".", "getMask", "(", "img_id", ")", ",", "\n", "_mapping", "=", "self", ".", "_mapping", ",", "\n", "_key", "=", "self", ".", "_key", ")", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "mask", "=", "Image", ".", "fromarray", "(", "\n", "self", ".", "_class_to_index", "(", "\n", "self", ".", "val_detail", ".", "getMask", "(", "img_id", ")", ",", "\n", "_mapping", "=", "self", ".", "_mapping", ",", "\n", "_key", "=", "self", ".", "_key", ")", ")", "\n", "", "filename", "=", "img_id", "[", "'file_name'", "]", "\n", "basename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "\n", "if", "filename", ".", "endswith", "(", "\".jpg\"", ")", ":", "\n", "            ", "mask_png_name", "=", "basename", "+", "'.png'", "\n", "mask", ".", "save", "(", "os", ".", "path", ".", "join", "(", "self", ".", "label_dir", ",", "mask_png_name", ")", ")", "\n", "", "return", "basename", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator.generate_label": [[112, 138], ["open", "tqdm.tqdm", "open", "tqdm.tqdm", "open", "tqdm.tqdm", "os.path.join", "convert_voc2010.PascalContextGenerator.save_mask", "f.writelines", "os.path.join", "convert_voc2010.PascalContextGenerator.save_mask", "f.writelines", "os.path.join", "os.listdir", "img.endswith", "f.writelines", "img.split"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator.save_mask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator.save_mask"], ["", "def", "generate_label", "(", "self", ")", ":", "\n", "\n", "        ", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "voc_path", ",", "\n", "'ImageSets/Segmentation/train_context.txt'", ")", ",", "\n", "'w'", ")", "as", "f", ":", "\n", "            ", "for", "img_id", "in", "tqdm", ".", "tqdm", "(", "self", ".", "train_ids", ",", "desc", "=", "'train'", ")", ":", "\n", "                ", "basename", "=", "self", ".", "save_mask", "(", "img_id", ",", "'train'", ")", "\n", "f", ".", "writelines", "(", "''", ".", "join", "(", "[", "basename", ",", "'\\n'", "]", ")", ")", "\n", "\n", "", "", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "voc_path", ",", "\n", "'ImageSets/Segmentation/val_context.txt'", ")", ",", "\n", "'w'", ")", "as", "f", ":", "\n", "            ", "for", "img_id", "in", "tqdm", ".", "tqdm", "(", "self", ".", "val_ids", ",", "desc", "=", "'val'", ")", ":", "\n", "                ", "basename", "=", "self", ".", "save_mask", "(", "img_id", ",", "'val'", ")", "\n", "f", ".", "writelines", "(", "''", ".", "join", "(", "[", "basename", ",", "'\\n'", "]", ")", ")", "\n", "\n", "", "", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "voc_path", ",", "\n", "'ImageSets/Segmentation/trainval_context.txt'", ")", ",", "\n", "'w'", ")", "as", "f", ":", "\n", "            ", "for", "img", "in", "tqdm", ".", "tqdm", "(", "os", ".", "listdir", "(", "self", ".", "label_dir", ")", ",", "desc", "=", "'trainval'", ")", ":", "\n", "                ", "if", "img", ".", "endswith", "(", "'.png'", ")", ":", "\n", "                    ", "basename", "=", "img", ".", "split", "(", "'.'", ",", "1", ")", "[", "0", "]", "\n", "f", ".", "writelines", "(", "''", ".", "join", "(", "[", "basename", ",", "'\\n'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.parse_args": [[43, 55], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'Generate PASCAL-Context dataset'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--voc_path'", ",", "dest", "=", "'voc_path'", ",", "help", "=", "'pascal voc path'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--annotation_path'", ",", "\n", "dest", "=", "'annotation_path'", ",", "\n", "help", "=", "'pascal context annotation path'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.main": [[140, 145], ["convert_voc2010.parse_args", "convert_voc2010.PascalContextGenerator", "convert_voc2010.PascalContextGenerator.generate_label"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_voc2010.PascalContextGenerator.generate_label"], ["", "", "", "", "", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "generator", "=", "PascalContextGenerator", "(", "\n", "voc_path", "=", "args", ".", "voc_path", ",", "annotation_path", "=", "args", ".", "annotation_path", ")", "\n", "generator", ".", "generate_label", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.visualize_annotation.parse_args": [[36, 50], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Visualization'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--file_path'", ",", "\n", "help", "=", "'The file contains the path of origin and annotated images'", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--pred_dir'", ",", "help", "=", "'the dir of predicted images'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "help", "=", "'The directory for saving the visualized images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/visualize_annotation'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.visualize_annotation.get_images_path": [[52, 70], ["os.path.isfile", "os.path.dirname", "open", "line.strip.strip", "line.strip.split", "os.path.join", "os.path.join", "images_path.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "get_images_path", "(", "file_path", ")", ":", "\n", "    ", "\"\"\"\n    Get the path of origin images and annotated images.\n    \"\"\"", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "file_path", ")", "\n", "\n", "images_path", "=", "[", "]", "\n", "image_dir", "=", "os", ".", "path", ".", "dirname", "(", "file_path", ")", "\n", "\n", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", "\n", "origin_path", ",", "annot_path", "=", "line", ".", "split", "(", "\" \"", ")", "\n", "origin_path", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "origin_path", ")", "\n", "annot_path", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "annot_path", ")", "\n", "images_path", ".", "append", "(", "[", "origin_path", ",", "annot_path", "]", ")", "\n", "\n", "", "", "return", "images_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.visualize_annotation.mkdir": [[72, 79], ["os.path.exists", "os.makedirs", "shutil.rmtree", "os.makedirs"], "function", ["None"], ["", "def", "mkdir", "(", "dir", ",", "rm_exist", "=", "False", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dir", ")", "\n", "", "else", ":", "\n", "        ", "if", "rm_exist", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "dir", ")", "\n", "os", ".", "makedirs", "(", "dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.visualize_annotation.visualize_imgs": [[81, 127], ["visualize_annotation.get_images_path", "paddleseg.utils.progbar.Progbar", "visualize_annotation.mkdir", "enumerate", "PIL.Image.open", "PIL.Image.open", "numpy.array", "paddleseg.utils.visualize.get_color_map_list", "paddleseg.utils.visualize.visualize", "PIL.Image.fromarray", "paddleseg.utils.visualize.paste_images", "visualize.paste_images.save", "progbar.Progbar.update", "len", "cv2.cvtColor", "image_name.replace", "os.path.join", "os.path.exists", "imgs.append", "os.path.split", "os.path.join", "os.path.split", "numpy.array", "paddleseg.utils.visualize.visualize", "PIL.Image.fromarray", "PIL.Image.open", "cv2.cvtColor"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.visualize_annotation.get_images_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes_autolabeling.get_color_map_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.visualize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.paste_images", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.visualize"], ["", "", "", "def", "visualize_imgs", "(", "args", ")", ":", "\n", "    ", "file_path", "=", "args", ".", "file_path", "\n", "pred_dir", "=", "args", ".", "pred_dir", "\n", "save_dir", "=", "args", ".", "save_dir", "\n", "weight", "=", "0.1", "\n", "\n", "images_path", "=", "get_images_path", "(", "file_path", ")", "\n", "bar", "=", "progbar", ".", "Progbar", "(", "target", "=", "len", "(", "images_path", ")", ",", "verbose", "=", "1", ")", "\n", "mkdir", "(", "save_dir", ",", "True", ")", "\n", "\n", "for", "idx", ",", "(", "origin_path", ",", "annot_path", ")", "in", "enumerate", "(", "images_path", ")", ":", "\n", "        ", "origin_img", "=", "Image", ".", "open", "(", "origin_path", ")", "\n", "annot_img", "=", "Image", ".", "open", "(", "annot_path", ")", "\n", "annot_img", "=", "np", ".", "array", "(", "annot_img", ")", "\n", "wt_annot_img", "=", "None", "\n", "wt_pred_img", "=", "None", "\n", "color_map", "=", "visualize", ".", "get_color_map_list", "(", "256", ")", "\n", "\n", "# weighted annoted image", "\n", "wt_annot_img", "=", "utils", ".", "visualize", ".", "visualize", "(", "\n", "origin_path", ",", "annot_img", ",", "color_map", ",", "weight", "=", "weight", ")", "\n", "wt_annot_img", "=", "Image", ".", "fromarray", "(", "\n", "cv2", ".", "cvtColor", "(", "wt_annot_img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", ")", "\n", "\n", "# weighted predicted image", "\n", "if", "pred_dir", "is", "not", "None", ":", "\n", "            ", "image_name", "=", "os", ".", "path", ".", "split", "(", "origin_path", ")", "[", "-", "1", "]", "\n", "tmp_name", "=", "image_name", ".", "replace", "(", "'jpg'", ",", "'png'", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "pred_dir", ",", "tmp_name", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "pred_path", ")", ":", "\n", "                ", "pred_img", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "pred_path", ")", ")", "\n", "wt_pred_img", "=", "utils", ".", "visualize", ".", "visualize", "(", "\n", "origin_path", ",", "pred_img", ",", "color_map", ",", "weight", "=", "weight", ")", "\n", "wt_pred_img", "=", "Image", ".", "fromarray", "(", "\n", "cv2", ".", "cvtColor", "(", "wt_pred_img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", ")", "\n", "\n", "# result image", "\n", "", "", "imgs", "=", "[", "origin_img", ",", "wt_annot_img", "]", "\n", "if", "wt_pred_img", "is", "not", "None", ":", "\n", "            ", "imgs", ".", "append", "(", "wt_pred_img", ")", "\n", "", "result_img", "=", "visualize", ".", "paste_images", "(", "imgs", ")", "\n", "\n", "image_name", "=", "os", ".", "path", ".", "split", "(", "origin_path", ")", "[", "-", "1", "]", "\n", "result_img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "image_name", ")", ")", "\n", "\n", "bar", ".", "update", "(", "idx", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.IDD_labeling.mkdir": [[9, 13], ["os.path.dirname", "os.path.exists", "os.makedirs"], "function", ["None"], ["def", "mkdir", "(", "path", ")", ":", "\n", "    ", "sub_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "sub_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "sub_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.IDD_labeling.get_image_list": [[15, 42], ["os.path.isfile", "os.path.isdir", "len", "RuntimeError", "image_list.append", "os.walk", "FileNotFoundError", "os.path.splitext", "image_list.append", "os.path.splitext", "os.path.join", "root.split"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "get_image_list", "(", "image_path", ")", ":", "\n", "    ", "\"\"\"Get image list\"\"\"", "\n", "valid_suffix", "=", "[", "\n", "'.JPEG'", ",", "'.jpeg'", ",", "'.JPG'", ",", "'.jpg'", ",", "'.BMP'", ",", "'.bmp'", ",", "'.PNG'", ",", "'.png'", "\n", "]", "\n", "image_list", "=", "[", "]", "\n", "image_dir", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "image_path", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "splitext", "(", "image_path", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "            ", "image_list", ".", "append", "(", "image_path", ")", "\n", "", "", "elif", "os", ".", "path", ".", "isdir", "(", "image_path", ")", ":", "\n", "        ", "image_dir", "=", "image_path", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "image_path", ")", ":", "\n", "            ", "for", "f", "in", "files", ":", "\n", "                ", "if", "'.ipynb_checkpoints'", "in", "root", ":", "\n", "                    ", "continue", "\n", "", "if", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "                    ", "image_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ",", "f", ")", ")", "\n", "", "", "", "", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\n", "'`--image_path` is not found. it should be an image file or a directory including images'", "\n", ")", "\n", "\n", "", "if", "len", "(", "image_list", ")", "==", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "'There are not image file in `--image_path`'", ")", "\n", "\n", "", "return", "image_list", ",", "image_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.IDD_labeling.refine_pred": [[44, 86], ["IDD_labeling.get_image_list", "numpy.array().astype", "xml.dom.minidom.parse", "root.getElementsByTagName", "paddleseg.utils.visualize.get_pseudo_color_map", "IDD_labeling.mkdir", "utils.visualize.get_pseudo_color_map.save", "os.path.exists", "paddleseg.utils.visualize.get_pseudo_color_map", "IDD_labeling.mkdir", "utils.visualize.get_pseudo_color_map.save", "numpy.array", "item.getElementsByTagName", "print", "int", "int", "int", "int", "PIL.Image.open", "[].getElementsByTagName", "[].getElementsByTagName", "[].getElementsByTagName", "[].getElementsByTagName", "item.getElementsByTagName", "item.getElementsByTagName", "item.getElementsByTagName", "item.getElementsByTagName"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir"], ["", "def", "refine_pred", "(", ")", ":", "\n", "    ", "image_list", ",", "image_dir", "=", "get_image_list", "(", "\n", "'detection_out/pseudo_color_prediction'", ")", "\n", "for", "ii", "in", "image_list", ":", "\n", "        ", "name_pred", "=", "'detection_out/pseudo_color_prediction/'", "+", "ii", "\n", "name_label", "=", "'data/IDD_Detection/Annotations/all/'", "+", "ii", "[", ":", "-", "3", "]", "+", "'xml'", "\n", "pred", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "name_pred", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "name_label", ")", ":", "\n", "            ", "pred_mask", "=", "utils", ".", "visualize", ".", "get_pseudo_color_map", "(", "pred", ")", "\n", "pred_saved_path", "=", "'detect_out/pred_refine/'", "+", "ii", "\n", "mkdir", "(", "pred_saved_path", ")", "\n", "pred_mask", ".", "save", "(", "pred_saved_path", ")", "\n", "continue", "\n", "\n", "", "dom", "=", "xml", ".", "dom", ".", "minidom", ".", "parse", "(", "name_label", ")", "\n", "root", "=", "dom", ".", "documentElement", "\n", "objects", "=", "root", ".", "getElementsByTagName", "(", "\"object\"", ")", "\n", "for", "item", "in", "objects", ":", "\n", "            ", "name", "=", "item", ".", "getElementsByTagName", "(", "\"name\"", ")", "[", "0", "]", "\n", "if", "name", ".", "firstChild", ".", "data", "==", "'traffic sign'", "or", "name", ".", "firstChild", ".", "data", "==", "'traffic light'", ":", "\n", "                ", "print", "(", "ii", ")", "\n", "xmin", "=", "int", "(", "\n", "item", ".", "getElementsByTagName", "(", "'bndbox'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "\n", "'xmin'", ")", "[", "0", "]", ".", "firstChild", ".", "data", ")", "\n", "ymin", "=", "int", "(", "\n", "item", ".", "getElementsByTagName", "(", "'bndbox'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "\n", "'ymin'", ")", "[", "0", "]", ".", "firstChild", ".", "data", ")", "\n", "xmax", "=", "int", "(", "\n", "item", ".", "getElementsByTagName", "(", "'bndbox'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "\n", "'xmax'", ")", "[", "0", "]", ".", "firstChild", ".", "data", ")", "\n", "ymax", "=", "int", "(", "\n", "item", ".", "getElementsByTagName", "(", "'bndbox'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "\n", "'ymax'", ")", "[", "0", "]", ".", "firstChild", ".", "data", ")", "\n", "if", "name", ".", "firstChild", ".", "data", "==", "'traffic sign'", ":", "\n", "                    ", "pred", "[", "ymin", ":", "ymax", ",", "xmin", ":", "xmax", "]", "=", "18", "\n", "", "elif", "name", ".", "firstChild", ".", "data", "==", "'traffic light'", ":", "\n", "                    ", "pred", "[", "ymin", ":", "ymax", ",", "xmin", ":", "xmax", "]", "=", "19", "\n", "\n", "", "", "", "pred_mask", "=", "utils", ".", "visualize", ".", "get_pseudo_color_map", "(", "pred", ")", "\n", "pred_saved_path", "=", "'detect_out/pred_refine/'", "+", "ii", "\n", "mkdir", "(", "pred_saved_path", ")", "\n", "pred_mask", ".", "save", "(", "pred_saved_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.IDD_labeling.test": [[88, 128], ["IDD_labeling.get_image_list", "cv2.imread", "numpy.zeros_like", "xml.dom.minidom.parse", "root.getElementsByTagName", "cv2.imwrite", "print", "item.getElementsByTagName", "int", "int", "int", "int", "ii.split", "[].getElementsByTagName", "[].getElementsByTagName", "[].getElementsByTagName", "[].getElementsByTagName", "item.getElementsByTagName", "item.getElementsByTagName", "item.getElementsByTagName", "item.getElementsByTagName"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list"], ["", "", "def", "test", "(", ")", ":", "\n", "    ", "path", "=", "'/Users/liliulei/Downloads/IDD_Detection/JPEGImages/frontNear/'", "\n", "image_list", ",", "image_dir", "=", "get_image_list", "(", "path", ")", "\n", "\n", "for", "ii", "in", "image_list", ":", "\n", "        ", "name_xml", "=", "'/Users/liliulei/Downloads/IDD_Detection/Annotations/frontNear/'", "+", "ii", "[", ":", "\n", "-", "3", "]", "+", "'xml'", "\n", "image", "=", "cv2", ".", "imread", "(", "path", "+", "ii", ")", "\n", "# print(image.shape)", "\n", "(", "h", ",", "w", ")", "=", "image", ".", "shape", "[", "0", ":", "2", "]", "\n", "\n", "pred", "=", "np", ".", "zeros_like", "(", "image", ")", "\n", "\n", "dom", "=", "xml", ".", "dom", ".", "minidom", ".", "parse", "(", "name_xml", ")", "\n", "root", "=", "dom", ".", "documentElement", "\n", "objects", "=", "root", ".", "getElementsByTagName", "(", "\"object\"", ")", "\n", "for", "item", "in", "objects", ":", "\n", "            ", "name", "=", "item", ".", "getElementsByTagName", "(", "\"name\"", ")", "[", "0", "]", "\n", "print", "(", "name", ".", "firstChild", ".", "data", ")", "\n", "if", "name", ".", "firstChild", ".", "data", "==", "'traffic sign'", "or", "name", ".", "firstChild", ".", "data", "==", "'traffic light'", ":", "\n", "                ", "xmin", "=", "int", "(", "\n", "item", ".", "getElementsByTagName", "(", "'bndbox'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "\n", "'xmin'", ")", "[", "0", "]", ".", "firstChild", ".", "data", ")", "\n", "ymin", "=", "int", "(", "\n", "item", ".", "getElementsByTagName", "(", "'bndbox'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "\n", "'ymin'", ")", "[", "0", "]", ".", "firstChild", ".", "data", ")", "\n", "xmax", "=", "int", "(", "\n", "item", ".", "getElementsByTagName", "(", "'bndbox'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "\n", "'xmax'", ")", "[", "0", "]", ".", "firstChild", ".", "data", ")", "\n", "ymax", "=", "int", "(", "\n", "item", ".", "getElementsByTagName", "(", "'bndbox'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "\n", "'ymax'", ")", "[", "0", "]", ".", "firstChild", ".", "data", ")", "\n", "if", "name", ".", "firstChild", ".", "data", "==", "'traffic sign'", ":", "\n", "                    ", "pred", "[", "ymin", ":", "ymax", ",", "xmin", ":", "xmax", ",", "0", "]", "=", "255", "\n", "", "elif", "name", ".", "firstChild", ".", "data", "==", "'traffic light'", ":", "\n", "                    ", "pred", "[", "ymin", ":", "ymax", ",", "xmin", ":", "xmax", ",", "1", "]", "=", "255", "\n", "\n", "", "", "", "new_im", "=", "image", "*", "0.5", "+", "pred", "*", "0.5", "\n", "\n", "cv2", ".", "imwrite", "(", "ii", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "[", ":", "-", "3", "]", "+", "'png'", ",", "new_im", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.cityscapes_labels.assureSingleInstanceName": [[156, 173], ["name.endswith", "len"], "function", ["None"], ["", "", "def", "assureSingleInstanceName", "(", "name", ")", ":", "\n", "# if the name is known, it is not a group", "\n", "    ", "if", "name", "in", "name2label", ":", "\n", "        ", "return", "name", "\n", "# test if the name actually denotes a group", "\n", "", "if", "not", "name", ".", "endswith", "(", "\"group\"", ")", ":", "\n", "        ", "return", "None", "\n", "# remove group", "\n", "", "name", "=", "name", "[", ":", "-", "len", "(", "\"group\"", ")", "]", "\n", "# test if the new name exists", "\n", "if", "not", "name", "in", "name2label", ":", "\n", "        ", "return", "None", "\n", "# test if the new name denotes a label that actually has instances", "\n", "", "if", "not", "name2label", "[", "name", "]", ".", "hasInstances", ":", "\n", "        ", "return", "None", "\n", "# all good then", "\n", "", "return", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes_autolabeling.parse_args": [[10, 17], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'Convert autolabelled data according to PaddleSeg data format'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--dataset_root\"", ",", "dest", "=", "\"dataset_root\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes_autolabeling.get_color_map_list": [[19, 39], ["range"], "function", ["None"], ["", "def", "get_color_map_list", "(", "num_classes", ")", ":", "\n", "    ", "\"\"\" Returns the color map for visualizing the segmentation mask,\n        which can support arbitrary number of classes.\n    Args:\n        num_classes: Number of classes\n    Returns:\n        The color map\n    \"\"\"", "\n", "color_map", "=", "num_classes", "*", "[", "0", ",", "0", ",", "0", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "num_classes", ")", ":", "\n", "        ", "j", "=", "0", "\n", "lab", "=", "i", "\n", "while", "lab", ":", "\n", "            ", "color_map", "[", "i", "*", "3", "]", "|=", "(", "(", "(", "lab", ">>", "0", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "color_map", "[", "i", "*", "3", "+", "1", "]", "|=", "(", "(", "(", "lab", ">>", "1", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "color_map", "[", "i", "*", "3", "+", "2", "]", "|=", "(", "(", "(", "lab", ">>", "2", ")", "&", "1", ")", "<<", "(", "7", "-", "j", ")", ")", "\n", "j", "+=", "1", "\n", "lab", ">>=", "3", "\n", "\n", "", "", "return", "color_map", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes_autolabeling.main": [[41, 71], ["os.path.join", "sorted", "print", "convert_cityscapes_autolabeling.get_color_map_list", "ValueError", "glob.glob", "numpy.array", "cityscapes_labels.label2trainid.items", "PIL.Image.fromarray().convert", "Image.fromarray().convert.putpalette", "file.split", "os.path.join", "Image.fromarray().convert.save", "os.path.isdir", "os.path.isdir", "os.path.join", "PIL.Image.open", "os.path.exists", "os.makedirs", "os.path.join", "print", "PIL.Image.fromarray", "np.array.astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.convert_cityscapes_autolabeling.get_color_map_list"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "dataset_root", "=", "args", ".", "dataset_root", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'refinement_final'", ",", "'train_extra'", ")", "\n", "if", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"The dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "autolabeling_label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "label_dir", ",", "'*'", ",", "'*_leftImg8bit.png'", ")", ")", ")", "\n", "print", "(", "'start converting...'", ")", "\n", "color_map", "=", "get_color_map_list", "(", "255", ")", "\n", "count", "=", "0", "\n", "for", "file", "in", "autolabeling_label_files", ":", "\n", "        ", "mask", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "file", ")", ")", "\n", "for", "k", ",", "v", "in", "cl", ".", "label2trainid", ".", "items", "(", ")", ":", "\n", "            ", "binary_mask", "=", "(", "mask", "==", "k", ")", "\n", "mask", "[", "binary_mask", "]", "=", "v", "\n", "", "new_mask", "=", "Image", ".", "fromarray", "(", "mask", ".", "astype", "(", "np", ".", "uint8", ")", ")", ".", "convert", "(", "'P'", ")", "\n", "new_mask", ".", "putpalette", "(", "color_map", ")", "\n", "file_split", "=", "file", ".", "split", "(", "os", ".", "sep", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'convert_autolabelled'", ",", "\n", "file_split", "[", "-", "2", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "new_mask", ".", "save", "(", "os", ".", "path", ".", "join", "(", "path", ",", "file_split", "[", "-", "1", "]", ")", ")", "\n", "count", "+=", "1", "\n", "if", "count", "%", "10", "==", "0", ":", "\n", "            ", "print", "(", "'processed {} images'", ".", "format", "(", "count", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare_prostate.Prep_prostate.__init__": [[136, 162], ["prepare.Prep.__init__", "medicalseg.utils.wrapped_partial", "medicalseg.utils.wrapped_partial"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "\"data/TemDataSet\"", ",", "\n", "raw_dataset_dir", "=", "\"TemDataSet_seg_raw/\"", ",", "\n", "images_dir", "=", "\"train_imgs\"", ",", "\n", "labels_dir", "=", "\"train_labels\"", ",", "\n", "phase_dir", "=", "\"phase0\"", ",", "\n", "urls", "=", "None", ",", "\n", "valid_suffix", "=", "(", "\"nii.gz\"", ",", "\"nii.gz\"", ")", ",", "\n", "filter_key", "=", "(", "None", ",", "None", ")", ",", "\n", "uncompress_params", "=", "{", "\"format\"", ":", "\"zip\"", ",", "\n", "\"num_files\"", ":", "1", "}", ",", "\n", "images_dir_test", "=", "\"\"", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dataset_root", ",", "raw_dataset_dir", ",", "images_dir", ",", "labels_dir", ",", "\n", "phase_dir", ",", "urls", ",", "valid_suffix", ",", "filter_key", ",", "\n", "uncompress_params", ",", "images_dir_test", ")", "\n", "\n", "self", ".", "preprocess", "=", "{", "\"images\"", ":", "[", "# todo: make params set automatically", "\n", "normalize", ",", "\n", "wrapped_partial", "(", "\n", "resample", ",", "new_shape", "=", "[", "512", ",", "512", ",", "24", "]", ",", "\n", "order", "=", "1", ")", "]", ",", "\n", "\"labels\"", ":", "[", "\n", "wrapped_partial", "(", "\n", "resample", ",", "new_shape", "=", "[", "512", ",", "512", ",", "24", "]", ",", "order", "=", "0", ")", "]", ",", "\n", "\"images_test\"", ":", "[", "normalize", ",", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare_prostate.Prep_prostate.generate_txt": [[163, 187], ["os.listdir", "prepare_prostate.Prep_prostate.split_files_txt", "prepare_prostate.Prep_prostate.split_files_txt", "prepare_prostate.Prep_prostate.split_files_txt", "os.path.join", "os.path.join", "txtname.append", "os.listdir", "name.replace", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "generate_txt", "(", "self", ",", "split", "=", "1.0", ")", ":", "\n", "        ", "\"\"\"generate the train_list.txt and val_list.txt\"\"\"", "\n", "\n", "txtname", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "'train_list.txt'", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "'val_list.txt'", ")", "\n", "]", "\n", "\n", "if", "self", ".", "image_files_test", ":", "\n", "            ", "txtname", ".", "append", "(", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "'test_list.txt'", ")", ")", "\n", "test_file_npy", "=", "os", ".", "listdir", "(", "self", ".", "image_path_test", ")", "\n", "\n", "", "image_files_npy", "=", "os", ".", "listdir", "(", "self", ".", "image_path", ")", "\n", "label_files_npy", "=", "[", "\n", "name", ".", "replace", "(", "\".npy\"", ",", "\"_segmentation.npy\"", ")", "\n", "for", "name", "in", "image_files_npy", "# to have the save order", "\n", "]", "\n", "\n", "self", ".", "split_files_txt", "(", "\n", "txtname", "[", "0", "]", ",", "image_files_npy", ",", "label_files_npy", ",", "split", "=", "split", ")", "\n", "self", ".", "split_files_txt", "(", "\n", "txtname", "[", "1", "]", ",", "image_files_npy", ",", "label_files_npy", ",", "split", "=", "split", ")", "\n", "\n", "self", ".", "split_files_txt", "(", "txtname", "[", "2", "]", ",", "test_file_npy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare_mri_spine_seg.Prep_mri_spine.__init__": [[57, 79], ["prepare.Prep.__init__", "medicalseg.utils.wrapped_partial", "medicalseg.utils.wrapped_partial", "medicalseg.utils.wrapped_partial"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "dataset_root", "=", "\"data/MRSpineSeg\"", ",", "\n", "raw_dataset_dir", "=", "\"MRI_spine_seg_raw/\"", ",", "\n", "images_dir", "=", "\"MRI_train/train/MR\"", ",", "\n", "labels_dir", "=", "\"MRI_train/train/Mask\"", ",", "\n", "phase_dir", "=", "\"MRI_spine_seg_phase0_class20_big_12/\"", ",", "\n", "urls", "=", "urls", ",", "\n", "valid_suffix", "=", "(", "\"nii.gz\"", ",", "\"nii.gz\"", ")", ",", "\n", "filter_key", "=", "(", "None", ",", "None", ")", ",", "\n", "uncompress_params", "=", "{", "\"format\"", ":", "\"zip\"", ",", "\n", "\"num_files\"", ":", "1", "}", ")", "\n", "\n", "self", ".", "preprocess", "=", "{", "\n", "\"images\"", ":", "[", "\n", "wrapped_partial", "(", "\n", "normalize", ",", "min_val", "=", "0", ",", "max_val", "=", "2650", ")", ",", "wrapped_partial", "(", "\n", "resample", ",", "new_shape", "=", "[", "512", ",", "512", ",", "12", "]", ",", "order", "=", "1", ")", "\n", "]", ",", "# original shape is (1008, 1008, 12)", "\n", "\"labels\"", ":", "\n", "[", "wrapped_partial", "(", "\n", "resample", ",", "new_shape", "=", "[", "512", ",", "512", ",", "12", "]", ",", "order", "=", "0", ")", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare_mri_spine_seg.Prep_mri_spine.generate_txt": [[81, 98], ["os.listdir", "prepare_mri_spine_seg.Prep_mri_spine.split_files_txt", "prepare_mri_spine_seg.Prep_mri_spine.split_files_txt", "os.path.join", "os.path.join", "name.replace"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt"], ["", "def", "generate_txt", "(", "self", ",", "train_split", "=", "1.0", ")", ":", "\n", "        ", "\"\"\"generate the train_list.txt and val_list.txt\"\"\"", "\n", "\n", "txtname", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "'train_list.txt'", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "'val_list.txt'", ")", "\n", "]", "\n", "\n", "image_files_npy", "=", "os", ".", "listdir", "(", "self", ".", "image_path", ")", "\n", "label_files_npy", "=", "[", "\n", "name", ".", "replace", "(", "\"Case\"", ",", "\"mask_case\"", ")", "for", "name", "in", "image_files_npy", "\n", "]", "\n", "\n", "self", ".", "split_files_txt", "(", "txtname", "[", "0", "]", ",", "image_files_npy", ",", "label_files_npy", ",", "\n", "train_split", ")", "\n", "self", ".", "split_files_txt", "(", "txtname", "[", "1", "]", ",", "image_files_npy", ",", "label_files_npy", ",", "\n", "train_split", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.__init__": [[46, 135], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.exists", "os.exists", "isinstance", "prepare.Prep.image_files.sort", "prepare.Prep.label_files.sort", "tools.preprocess_utils.global_var.get_value", "print", "prepare.Prep.uncompress_file", "len", "medicalseg.utils.get_image_list", "prepare.Prep.image_files_test.sort", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "range", "medicalseg.utils.get_image_list", "medicalseg.utils.get_image_list", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "len", "medicalseg.utils.get_image_list", "medicalseg.utils.get_image_list", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.get_value", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.uncompress_file", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "\"data/TemDataSet\"", ",", "\n", "raw_dataset_dir", "=", "\"TemDataSet_seg_raw/\"", ",", "\n", "images_dir", "=", "\"train_imgs\"", ",", "\n", "labels_dir", "=", "\"train_labels\"", ",", "\n", "phase_dir", "=", "\"phase0\"", ",", "\n", "urls", "=", "None", ",", "\n", "valid_suffix", "=", "(", "\"nii.gz\"", ",", "\"nii.gz\"", ")", ",", "\n", "filter_key", "=", "(", "None", ",", "None", ")", ",", "\n", "uncompress_params", "=", "{", "\"format\"", ":", "\"zip\"", ",", "\n", "\"num_files\"", ":", "1", "}", ",", "\n", "images_dir_test", "=", "\"\"", ")", ":", "\n", "        ", "\"\"\"\n        Create proprosessor for medical dataset.\n        Folder structure:\n            dataset_root\n            \u251c\u2500\u2500 raw_dataset_dir\n            \u2502   \u251c\u2500\u2500 image_dir\n            \u2502   \u251c\u2500\u2500 labels_dir  \n            \u2502   \u251c\u2500\u2500 images_dir_test       \n            \u251c\u2500\u2500 phase_dir\n            \u2502   \u251c\u2500\u2500 images\n            \u2502   \u251c\u2500\u2500 labels\n            \u2502   \u251c\u2500\u2500 train_list.txt\n            \u2502   \u2514\u2500\u2500 val_list.txt\n            \u251c\u2500\u2500 archive_1.zip\n            \u251c\u2500\u2500 archive_2.zip\n            \u2514\u2500\u2500 ... archives ...\n        Args:\n            urls (dict): Urls to download dataset archive. Key will be used as archive name.\n            valid_suffix(tuple):  Only files with the assigned suffix will be considered. The first is the suffix for image, and the other is for label.\n            filter_key(tuple): Only files containing the filter_key the will be considered.\n        \"\"\"", "\n", "# combine all paths", "\n", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "phase_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "phase_dir", ")", "\n", "self", ".", "raw_data_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "raw_dataset_dir", ")", "\n", "self", ".", "dataset_json_path", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "raw_data_path", ",", "\n", "\"dataset.json\"", ")", "# save the dataset.json to raw path", "\n", "self", ".", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "\"images\"", ")", "\n", "self", ".", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "\"labels\"", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "dataset_root", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "phase_path", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "image_path", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "label_path", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "gpu_tag", "=", "\"GPU\"", "if", "global_var", ".", "get_value", "(", "'USE_GPU'", ")", "else", "\"CPU\"", "\n", "self", ".", "urls", "=", "urls", "\n", "\n", "if", "osp", ".", "exists", "(", "self", ".", "raw_data_path", ")", ":", "\n", "            ", "print", "(", "\n", "f\"raw_dataset_dir {self.raw_data_path} exists, skipping uncompress. To uncompress again, remove this directory\"", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "uncompress_file", "(", "\n", "num_files", "=", "uncompress_params", "[", "\"num_files\"", "]", ",", "\n", "form", "=", "uncompress_params", "[", "\"format\"", "]", ")", "\n", "\n", "", "self", ".", "image_files_test", "=", "None", "\n", "if", "len", "(", "images_dir_test", "\n", ")", "!=", "0", ":", "# test image filter is the same as training image", "\n", "            ", "self", ".", "image_files_test", "=", "get_image_list", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "images_dir_test", ")", ",", "\n", "valid_suffix", "[", "0", "]", ",", "filter_key", "[", "0", "]", ")", "\n", "self", ".", "image_files_test", ".", "sort", "(", ")", "\n", "self", ".", "image_path_test", "=", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "'images_test'", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "image_path_test", ",", "exist_ok", "=", "True", ")", "\n", "\n", "# Load the needed file with filter", "\n", "", "if", "isinstance", "(", "images_dir", ",", "tuple", ")", ":", "\n", "            ", "self", ".", "image_files", "=", "[", "]", "\n", "self", ".", "label_files", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "images_dir", ")", ")", ":", "\n", "                ", "self", ".", "image_files", "+=", "get_image_list", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "images_dir", "[", "i", "]", ")", ",", "\n", "valid_suffix", "[", "0", "]", ",", "filter_key", "[", "0", "]", ")", "\n", "self", ".", "label_files", "+=", "get_image_list", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "labels_dir", "[", "i", "]", ")", ",", "\n", "valid_suffix", "[", "1", "]", ",", "filter_key", "[", "1", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "image_files", "=", "get_image_list", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "images_dir", ")", ",", "valid_suffix", "[", "0", "]", ",", "\n", "filter_key", "[", "0", "]", ")", "\n", "self", ".", "label_files", "=", "get_image_list", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "labels_dir", ")", ",", "valid_suffix", "[", "1", "]", ",", "\n", "filter_key", "[", "1", "]", ")", "\n", "\n", "", "self", ".", "image_files", ".", "sort", "(", ")", "\n", "self", ".", "label_files", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.uncompress_file": [[136, 149], ["tools.preprocess_utils.uncompressor", "glob.glob", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "len", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "tools.preprocess_utils.uncompressor._uncompress_file", "[].split", "f.split"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor._uncompress_file"], ["", "def", "uncompress_file", "(", "self", ",", "num_files", ",", "form", ")", ":", "\n", "        ", "uncompress_tool", "=", "uncompressor", "(", "\n", "download_params", "=", "(", "self", ".", "urls", ",", "self", ".", "dataset_root", ",", "True", ")", ")", "\n", "\"\"\"unzip all the file in the root directory\"\"\"", "\n", "files", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\"*.{}\"", ".", "format", "(", "form", ")", ")", ")", "\n", "\n", "assert", "len", "(", "files", ")", "==", "num_files", ",", "\"The file directory should include {} compressed files, but there is only {}\"", ".", "format", "(", "num_files", ",", "len", "(", "files", ")", ")", "\n", "\n", "for", "f", "in", "files", ":", "\n", "            ", "extract_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "\n", "f", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "uncompress_tool", ".", "_uncompress_file", "(", "\n", "f", ",", "extract_path", ",", "delete_file", "=", "False", ",", "print_progress", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.load_medical_data": [[150, 200], ["os.basename().lower", "os.basename().lower", "os.basename().lower.endswith", "os.basename().lower.endswith", "os.basename", "os.basename", "SimpleITK.ReadImage", "SimpleITK.DICOMOrient", "SimpleITK.GetArrayFromImage", "os.basename().lower.endswith", "nibabel.load().get_fdata", "SimpleITK.DICOMOrient.GetDimension", "SimpleITK.ExtractImageFilter", "list", "SimpleITK.ExtractImageFilter.SetSize", "range", "SimpleITK.DICOMOrient", "SimpleITK.GetArrayFromImage", "SimpleITK.ReadImage", "numpy.transpose", "RuntimeError", "SimpleITK.DICOMOrient.GetSize", "SimpleITK.ExtractImageFilter.SetIndex", "SimpleITK.ExtractImageFilter.Execute", "images.append", "nibabel.load", "SimpleITK.DICOMOrient.GetSize", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "@", "staticmethod", "\n", "def", "load_medical_data", "(", "f", ")", ":", "\n", "        ", "\"\"\"\n        load data of different format into numpy array, return data is in xyz\n\n        f: the complete path to the file that you want to load\n\n        \"\"\"", "\n", "filename", "=", "osp", ".", "basename", "(", "f", ")", ".", "lower", "(", ")", "\n", "images", "=", "[", "]", "\n", "\n", "# validate nii.gz on lung and mri with correct spacing_resample", "\n", "if", "filename", ".", "endswith", "(", "(", "\".nii\"", ",", "\".nii.gz\"", ",", "\".dcm\"", ")", ")", ":", "\n", "            ", "if", "\"radiopaedia\"", "in", "filename", "or", "\"corona\"", "in", "filename", ":", "\n", "                 ", "f_nps", "=", "[", "nib", ".", "load", "(", "f", ")", ".", "get_fdata", "(", "dtype", "=", "np", ".", "float32", ")", "]", "\n", "", "else", ":", "\n", "                ", "itkimage", "=", "sitk", ".", "ReadImage", "(", "f", ")", "\n", "if", "itkimage", ".", "GetDimension", "(", ")", "==", "4", ":", "\n", "                    ", "slicer", "=", "sitk", ".", "ExtractImageFilter", "(", ")", "\n", "s", "=", "list", "(", "itkimage", ".", "GetSize", "(", ")", ")", "\n", "s", "[", "-", "1", "]", "=", "0", "\n", "slicer", ".", "SetSize", "(", "s", ")", "\n", "for", "slice_idx", "in", "range", "(", "itkimage", ".", "GetSize", "(", ")", "[", "-", "1", "]", ")", ":", "\n", "                        ", "slicer", ".", "SetIndex", "(", "[", "0", ",", "0", ",", "0", ",", "slice_idx", "]", ")", "\n", "sitk_volume", "=", "slicer", ".", "Execute", "(", "itkimage", ")", "\n", "images", ".", "append", "(", "sitk_volume", ")", "\n", "", "", "else", ":", "\n", "                    ", "images", "=", "[", "itkimage", "]", "\n", "", "images", "=", "[", "sitk", ".", "DICOMOrient", "(", "img", ",", "'LPS'", ")", "for", "img", "in", "images", "]", "\n", "f_nps", "=", "[", "sitk", ".", "GetArrayFromImage", "(", "img", ")", "for", "img", "in", "images", "]", "\n", "\n", "", "", "elif", "filename", ".", "endswith", "(", "\n", "(", "\".mha\"", ",", "\".mhd\"", ",", "\"nrrd\"", "\n", ")", ")", ":", "# validate mhd on lung and mri with correct spacing_resample", "\n", "            ", "itkimage", "=", "sitk", ".", "DICOMOrient", "(", "sitk", ".", "ReadImage", "(", "f", ")", ",", "'LPS'", ")", "\n", "f_np", "=", "sitk", ".", "GetArrayFromImage", "(", "itkimage", ")", "\n", "if", "f_np", ".", "ndim", "==", "4", ":", "\n", "                ", "f_nps", "=", "[", "f_np", "[", ":", ",", ":", ",", ":", ",", "idx", "]", "for", "idx", "in", "range", "(", "f_np", ".", "shape", "[", "3", "]", ")", "]", "\n", "", "else", ":", "\n", "                ", "f_nps", "=", "[", "f_np", "]", "\n", "", "f_nps", "=", "[", "np", ".", "transpose", "(", "f_np", ",", "[", "1", ",", "2", ",", "0", "]", ")", "for", "f_np", "in", "f_nps", "]", "\n", "", "elif", "filename", ".", "endswith", "(", "\".raw\"", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "f\"Received {f}. Please only provide path to .mhd file, not to .raw file\"", "\n", ")", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "return", "f_nps", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.load_save": [[201, 265], ["print", "time.time", "enumerate", "print", "open", "json.load", "tqdm.tqdm.tqdm", "open", "json.dump", "prepare.Prep.load_medical_data", "enumerate", "len", "numpy.save", "time.time", "op.astype", "op.astype", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "op", "op", "len", "os.basename().split", "os.basename().split", "os.basename().split", "os.basename().split", "os.basename().split", "os.basename().split", "os.basename", "os.basename", "os.basename", "os.basename", "os.basename", "os.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.load_medical_data"], ["", "def", "load_save", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        preprocess files, transfer to the correct type, and save it to the directory.\n        \"\"\"", "\n", "print", "(", "\n", "\"Start convert images to numpy array using {}, please wait patiently\"", "\n", ".", "format", "(", "self", ".", "gpu_tag", ")", ")", "\n", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "with", "open", "(", "self", ".", "dataset_json_path", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "            ", "dataset_json_dict", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "if", "self", ".", "image_files_test", ":", "\n", "            ", "process_files", "=", "(", "self", ".", "image_files", ",", "self", ".", "label_files", ",", "\n", "self", ".", "image_files_test", ")", "\n", "process_tuple", "=", "(", "\"images\"", ",", "\"labels\"", ",", "\"images_test\"", ")", "\n", "save_tuple", "=", "(", "self", ".", "image_path", ",", "self", ".", "label_path", ",", "\n", "self", ".", "image_path_test", ")", "\n", "", "else", ":", "\n", "            ", "process_files", "=", "(", "self", ".", "image_files", ",", "self", ".", "label_files", ")", "\n", "process_tuple", "=", "(", "\"images\"", ",", "\"labels\"", ")", "\n", "save_tuple", "=", "(", "self", ".", "image_path", ",", "self", ".", "label_path", ")", "\n", "\n", "", "for", "i", ",", "files", "in", "enumerate", "(", "process_files", ")", ":", "\n", "            ", "pre", "=", "self", ".", "preprocess", "[", "process_tuple", "[", "i", "]", "]", "\n", "savepath", "=", "save_tuple", "[", "i", "]", "\n", "\n", "for", "f", "in", "tqdm", "(", "\n", "files", ",", "\n", "total", "=", "len", "(", "files", ")", ",", "\n", "desc", "=", "\"preprocessing the {}\"", ".", "format", "(", "\n", "[", "\"images\"", ",", "\"labels\"", ",", "\"images_test\"", "]", "[", "i", "]", ")", ")", ":", "\n", "\n", "# load data will transpose the image from \"zyx\" to \"xyz\"", "\n", "                ", "spacing", "=", "dataset_json_dict", "[", "\"training\"", "]", "[", "\n", "osp", ".", "basename", "(", "f", ")", ".", "split", "(", "\".\"", ")", "[", "0", "]", "]", "[", "\"spacing\"", "]", "if", "i", "==", "0", "else", "None", "\n", "f_nps", "=", "Prep", ".", "load_medical_data", "(", "f", ")", "\n", "\n", "for", "volume_idx", ",", "f_np", "in", "enumerate", "(", "f_nps", ")", ":", "\n", "                    ", "for", "op", "in", "pre", ":", "\n", "                        ", "if", "op", ".", "__name__", "==", "\"resample\"", ":", "\n", "                            ", "f_np", ",", "new_spacing", "=", "op", "(", "\n", "f_np", ",", "\n", "spacing", "=", "spacing", ")", "# (960, 15, 960) if transpose", "\n", "", "else", ":", "\n", "                            ", "f_np", "=", "op", "(", "f_np", ")", "\n", "\n", "", "", "f_np", "=", "f_np", ".", "astype", "(", "\"float32\"", ")", "if", "i", "==", "0", "else", "f_np", ".", "astype", "(", "\n", "\"int32\"", ")", "\n", "volume_idx", "=", "\"\"", "if", "len", "(", "f_nps", ")", "==", "1", "else", "f\"-{volume_idx}\"", "\n", "np", ".", "save", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "savepath", ",", "\n", "osp", ".", "basename", "(", "f", ")", ".", "split", "(", "\".\"", ")", "[", "0", "]", "+", "volume_idx", ")", ",", "f_np", ")", "\n", "\n", "", "if", "i", "==", "0", ":", "\n", "                    ", "dataset_json_dict", "[", "\"training\"", "]", "[", "osp", ".", "basename", "(", "f", ")", ".", "split", "(", "\".\"", ")", "[", "\n", "0", "]", "]", "[", "\"spacing_resample\"", "]", "=", "new_spacing", "\n", "\n", "", "", "", "with", "open", "(", "self", ".", "dataset_json_path", ",", "'w'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "dataset_json_dict", ",", "f", ",", "ensure_ascii", "=", "False", ",", "indent", "=", "4", ")", "\n", "\n", "", "print", "(", "\"The preprocess time on {} is {}\"", ".", "format", "(", "self", ".", "gpu_tag", ",", "\n", "time", ".", "time", "(", ")", "-", "tic", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.convert_path": [[266, 269], ["None"], "methods", ["None"], ["", "def", "convert_path", "(", "self", ")", ":", "\n", "        ", "\"\"\"convert nii.gz file to numpy array in the right directory\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.generate_txt": [[270, 273], ["None"], "methods", ["None"], ["", "def", "generate_txt", "(", "self", ")", ":", "\n", "        ", "\"\"\"generate the train_list.txt and val_list.txt\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.visualize": [[275, 277], ["None"], "methods", ["None"], ["", "def", "visualize", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "# imga = Image.fromarray(np.int8(imga))", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.write_txt": [[287, 312], ["print", "open", "range", "len", "f.write"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "write_txt", "(", "txt", ",", "image_names", ",", "label_names", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        write the image_names and label_names on the txt file like this:\n\n        images/image_name labels/label_name\n        ...\n\n        or this when label is None.\n\n        images/image_name\n        ...\n\n        \"\"\"", "\n", "with", "open", "(", "txt", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "image_names", ")", ")", ":", "\n", "                ", "if", "label_names", "is", "not", "None", ":", "\n", "                    ", "string", "=", "\"{} {}\\n\"", ".", "format", "(", "'images/'", "+", "image_names", "[", "i", "]", ",", "\n", "'labels/'", "+", "label_names", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                    ", "string", "=", "\"{}\\n\"", ".", "format", "(", "'images/'", "+", "image_names", "[", "i", "]", ")", "\n", "\n", "", "f", ".", "write", "(", "string", ")", "\n", "\n", "", "", "print", "(", "\"successfully write to {}\"", ".", "format", "(", "txt", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt": [[313, 358], ["prepare.Prep.write_txt", "len", "int", "int", "RuntimeError", "len", "int", "prepare.Prep.write_txt", "NotImplementedError", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.write_txt", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.write_txt"], ["", "def", "split_files_txt", "(", "self", ",", "txt", ",", "image_files", ",", "label_files", "=", "None", ",", "split", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Split filenames and write the image names and label names on train.txt, val.txt or test.txt.\n        Set the valset to 20% of images if all files need to be used in training.\n\n        Args:\n        txt(string): the path to the txt file, for example: \"data/train.txt\"\n        image_files(list|tuple): the list of image names.\n        label_files(list|tuple): the list of label names, order is corresponding with the image_files.\n        split(float|int): Percentage of the dataset used in training\n\n        \"\"\"", "\n", "if", "split", "is", "None", ":", "\n", "            ", "if", "label_files", "is", "None", ":", "# testset don't have", "\n", "                ", "split", "=", "len", "(", "image_files", ")", "\n", "", "else", ":", "\n", "                ", "split", "=", "int", "(", "0.8", "*", "len", "(", "image_files", ")", ")", "\n", "", "", "elif", "split", "<=", "1", ":", "\n", "            ", "split", "=", "int", "(", "split", "*", "len", "(", "image_files", ")", ")", "\n", "", "elif", "split", ">", "1", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"Only have {} images but required {} images in trainset\"", ")", "\n", "\n", "", "if", "\"train\"", "in", "txt", ":", "\n", "            ", "image_names", "=", "image_files", "[", ":", "split", "]", "\n", "label_names", "=", "label_files", "[", ":", "split", "]", "\n", "", "elif", "\"val\"", "in", "txt", ":", "\n", "# set the valset to 20% of images if all files need to be used in training", "\n", "            ", "if", "split", "==", "len", "(", "image_files", ")", ":", "\n", "                ", "valsplit", "=", "int", "(", "0.8", "*", "len", "(", "image_files", ")", ")", "\n", "image_names", "=", "image_files", "[", "valsplit", ":", "]", "\n", "label_names", "=", "label_files", "[", "valsplit", ":", "]", "\n", "", "else", ":", "\n", "                ", "image_names", "=", "image_files", "[", "split", ":", "]", "\n", "label_names", "=", "label_files", "[", "split", ":", "]", "\n", "", "", "elif", "\"test\"", "in", "txt", ":", "\n", "            ", "self", ".", "write_txt", "(", "txt", ",", "image_files", "[", ":", "split", "]", ")", "\n", "\n", "return", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\n", "\"The txt split except for train.txt, val.txt and test.txt is not implemented yet.\"", "\n", ")", "\n", "\n", "", "self", ".", "write_txt", "(", "txt", ",", "image_names", ",", "label_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.set_image_infor": [[359, 375], ["SimpleITK.ReadImage.GetDimension", "SimpleITK.GetArrayFromImage", "SimpleITK.ReadImage.GetSpacing", "SimpleITK.ReadImage.GetOrigin", "SimpleITK.ReadImage.GetDirection", "SimpleITK.ReadImage", "str", "str", "tools.preprocess_utils.add_qform_sform", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage.min", "SimpleITK.GetArrayFromImage.max"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.load_image.add_qform_sform"], ["", "@", "staticmethod", "\n", "def", "set_image_infor", "(", "image_name", ",", "infor_dict", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "img_itk", "=", "sitk", ".", "ReadImage", "(", "image_name", ")", "\n", "", "except", ":", "\n", "            ", "add_qform_sform", "(", "image_name", ")", "\n", "img_itk", "=", "sitk", ".", "ReadImage", "(", "image_name", ")", "\n", "", "infor_dict", "[", "\"dim\"", "]", "=", "img_itk", ".", "GetDimension", "(", ")", "\n", "img_npy", "=", "sitk", ".", "GetArrayFromImage", "(", "img_itk", ")", "\n", "infor_dict", "[", "\"shape\"", "]", "=", "[", "img_npy", ".", "shape", ",", "]", "\n", "infor_dict", "[", "\"minmax_vals\"", "]", "=", "[", "str", "(", "img_npy", ".", "min", "(", ")", ")", ",", "str", "(", "img_npy", ".", "max", "(", ")", ")", "]", "\n", "infor_dict", "[", "\"spacing\"", "]", "=", "img_itk", ".", "GetSpacing", "(", ")", "\n", "infor_dict", "[", "\"origin\"", "]", "=", "img_itk", ".", "GetOrigin", "(", ")", "\n", "infor_dict", "[", "\"direction\"", "]", "=", "img_itk", ".", "GetDirection", "(", ")", "\n", "\n", "return", "infor_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.generate_dataset_json": [[376, 456], ["os.exists", "os.exists", "enumerate", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "print", "prepare.Prep.dataset_json_path.endswith", "print", "str", "str", "tqdm.tqdm.tqdm", "prepare.Prep.set_image_infor", "enumerate", "open", "json.dump", "print", "range", "labels.keys", "tqdm.tqdm.tqdm", "prepare.Prep.set_image_infor", "len", "len", "[].split", "len", "[].split", "image_name.split", "image_name.split"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.set_image_infor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.set_image_infor"], ["", "def", "generate_dataset_json", "(", "self", ",", "\n", "modalities", ",", "\n", "labels", ",", "\n", "dataset_name", ",", "\n", "license_desc", "=", "\"hands off!\"", ",", "\n", "dataset_description", "=", "\"\"", ",", "\n", "dataset_reference", "=", "\"\"", ",", "\n", "save_path", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param save_path: This needs to be the full path to the dataset.json you intend to write, default is the raw_data_path\n        :param images_dir: path to the images folder of that dataset\n        :param labels_dir: path to the label folder of that dataset\n        :param modalities: tuple of strings with modality names. must be in the same order as the images (first entry\n        corresponds to _0000.nii.gz, etc). Example: ('T1', 'T2', 'FLAIR').\n        :param labels: dict with int->str (key->value) mapping the label IDs to label names. Note that 0 is always\n        supposed to be background! Example: {0: 'background', 1: 'edema', 2: 'enhancing tumor'}\n        :param dataset_name: The name of the dataset. Can be anything you want\n        :param license_desc:\n        :param dataset_description:\n        :param dataset_reference: website of the dataset, if available\n        :return: saved dataset.json \n        \"\"\"", "\n", "\n", "if", "save_path", "is", "not", "None", ":", "\n", "            ", "self", ".", "dataset_json_path", "=", "os", ".", "path", ".", "join", "(", "\n", "save_path", ",", "\"dataset.json\"", ")", "# save the dataset.json to raw path", "\n", "\n", "", "if", "osp", ".", "exists", "(", "self", ".", "dataset_json_path", ")", ":", "\n", "            ", "print", "(", "\n", "f\"Dataset json exists, skipping. Delete file {self.dataset_json_path} to regenerate.\"", "\n", ")", "\n", "return", "\n", "\n", "", "if", "not", "self", ".", "dataset_json_path", ".", "endswith", "(", "\"dataset.json\"", ")", ":", "\n", "            ", "print", "(", "\n", "\"WARNING: output file name is not dataset.json! This may be intentional or not. You decide. \"", "\n", "\"Proceeding anyways...\"", ")", "\n", "\n", "", "json_dict", "=", "{", "}", "\n", "json_dict", "[", "'name'", "]", "=", "dataset_name", "\n", "json_dict", "[", "'description'", "]", "=", "dataset_description", "\n", "json_dict", "[", "'reference'", "]", "=", "dataset_reference", "\n", "json_dict", "[", "'licence'", "]", "=", "license_desc", "\n", "json_dict", "[", "'modality'", "]", "=", "{", "\n", "str", "(", "i", ")", ":", "modalities", "[", "i", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "modalities", ")", ")", "\n", "}", "\n", "json_dict", "[", "'labels'", "]", "=", "{", "str", "(", "i", ")", ":", "labels", "[", "i", "]", "for", "i", "in", "labels", ".", "keys", "(", ")", "}", "\n", "\n", "# set information of training and testing file", "\n", "json_dict", "[", "'training'", "]", "=", "{", "}", "\n", "\n", "for", "i", ",", "image_name", "in", "enumerate", "(", "\n", "tqdm", "(", "\n", "self", ".", "image_files", ",", "\n", "total", "=", "len", "(", "self", ".", "image_files", ")", ",", "\n", "desc", "=", "\"Load train file information into dataset.json\"", ")", ")", ":", "\n", "            ", "infor_dict", "=", "{", "\n", "'image'", ":", "image_name", ",", "\n", "\"label\"", ":", "self", ".", "label_files", "[", "i", "]", "\n", "}", "# nii.gz filename", "\n", "infor_dict", "=", "self", ".", "set_image_infor", "(", "image_name", ",", "infor_dict", ")", "\n", "json_dict", "[", "'training'", "]", "[", "image_name", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "\n", "0", "]", "]", "=", "infor_dict", "\n", "\n", "", "json_dict", "[", "'test'", "]", "=", "{", "}", "\n", "if", "self", ".", "image_files_test", ":", "\n", "            ", "for", "i", ",", "image_name", "in", "enumerate", "(", "\n", "tqdm", "(", "\n", "self", ".", "image_files_test", ",", "\n", "total", "=", "len", "(", "self", ".", "image_files_test", ")", ",", "\n", "desc", "=", "\"Load Test file information\"", ")", ")", ":", "\n", "                ", "infor_dict", "=", "{", "'image'", ":", "image_name", "}", "\n", "infor_dict", "=", "self", ".", "set_image_infor", "(", "image_name", ",", "infor_dict", ")", "\n", "json_dict", "[", "'test'", "]", "[", "image_name", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "\n", "0", "]", "]", "=", "infor_dict", "\n", "\n", "", "", "with", "open", "(", "self", ".", "dataset_json_path", ",", "'w'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "json_dict", ",", "f", ",", "ensure_ascii", "=", "False", ",", "indent", "=", "4", ")", "\n", "print", "(", "\"save dataset.json to {}\"", ".", "format", "(", "self", ".", "dataset_json_path", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare_lung_coronavirus.Prep_lung_coronavirus.__init__": [[67, 88], ["prepare.Prep.__init__", "medicalseg.utils.wrapped_partial", "medicalseg.utils.wrapped_partial"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "dataset_root", "=", "\"data/lung_coronavirus\"", ",", "\n", "raw_dataset_dir", "=", "\"lung_coronavirus_raw/\"", ",", "\n", "images_dir", "=", "\"20_ncov_scan\"", ",", "\n", "labels_dir", "=", "\"lung_mask\"", ",", "\n", "phase_dir", "=", "\"lung_coronavirus_phase0/\"", ",", "\n", "urls", "=", "urls", ",", "\n", "valid_suffix", "=", "(", "\"nii.gz\"", ",", "\"nii.gz\"", ")", ",", "\n", "filter_key", "=", "(", "None", ",", "None", ")", ",", "\n", "uncompress_params", "=", "{", "\"format\"", ":", "\"zip\"", ",", "\n", "\"num_files\"", ":", "4", "}", ")", "\n", "\n", "self", ".", "preprocess", "=", "{", "\n", "\"images\"", ":", "[", "\n", "HUnorm", ",", "wrapped_partial", "(", "\n", "resample", ",", "new_shape", "=", "[", "128", ",", "128", ",", "128", "]", ",", "order", "=", "1", ")", "\n", "]", ",", "\n", "\"labels\"", ":", "[", "\n", "wrapped_partial", "(", "\n", "resample", ",", "new_shape", "=", "[", "128", ",", "128", ",", "128", "]", ",", "order", "=", "0", ")", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare_lung_coronavirus.Prep_lung_coronavirus.generate_txt": [[91, 110], ["os.listdir", "prepare_lung_coronavirus.Prep_lung_coronavirus.split_files_txt", "prepare_lung_coronavirus.Prep_lung_coronavirus.split_files_txt", "os.path.join", "os.path.join", "name.replace().replace().replace", "name.replace().replace", "name.replace"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt"], ["", "def", "generate_txt", "(", "self", ",", "train_split", "=", "0.75", ")", ":", "\n", "        ", "\"\"\"generate the train_list.txt and val_list.txt\"\"\"", "\n", "\n", "txtname", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "'train_list.txt'", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "phase_path", ",", "'val_list.txt'", ")", "\n", "]", "\n", "\n", "image_files_npy", "=", "os", ".", "listdir", "(", "self", ".", "image_path", ")", "\n", "label_files_npy", "=", "[", "\n", "name", ".", "replace", "(", "\"_org_covid-19-pneumonia-\"", ",", "\n", "\"_\"", ")", ".", "replace", "(", "\"-dcm\"", ",", "\"\"", ")", ".", "replace", "(", "\"_org_\"", ",", "\"_\"", ")", "\n", "for", "name", "in", "image_files_npy", "\n", "]", "\n", "\n", "self", ".", "split_files_txt", "(", "txtname", "[", "0", "]", ",", "image_files_npy", ",", "label_files_npy", ",", "\n", "train_split", ")", "\n", "self", ".", "split_files_txt", "(", "txtname", "[", "1", "]", ",", "image_files_npy", ",", "label_files_npy", ",", "\n", "train_split", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare_msd.Prep_msd.__init__": [[112, 135], ["print", "prepare.Prep.__init__", "[].split", "medicalseg.utils.wrapped_partial", "medicalseg.utils.wrapped_partial", "list", "tasks[].keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.wrapped_partial", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["    ", "def", "__init__", "(", "self", ",", "task_id", ")", ":", "\n", "        ", "task_name", "=", "list", "(", "tasks", "[", "task_id", "]", ".", "keys", "(", ")", ")", "[", "0", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "print", "(", "f\"Preparing task {task_id} {task_name}\"", ")", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "dataset_root", "=", "f\"data/{task_name}\"", ",", "\n", "raw_dataset_dir", "=", "f\"{task_name}_raw/\"", ",", "\n", "images_dir", "=", "f\"{task_name}/{task_name}/imagesTr\"", ",", "\n", "labels_dir", "=", "f\"{task_name}/{task_name}/labelsTr\"", ",", "\n", "phase_dir", "=", "f\"{task_name}_phase0/\"", ",", "\n", "urls", "=", "tasks", "[", "task_id", "]", ",", "\n", "valid_suffix", "=", "(", "\"nii.gz\"", ",", "\"nii.gz\"", ")", ",", "\n", "filter_key", "=", "(", "None", ",", "None", ")", ",", "\n", "uncompress_params", "=", "{", "\"format\"", ":", "\"tar\"", ",", "\n", "\"num_files\"", ":", "1", "}", ")", "\n", "\n", "self", ".", "preprocess", "=", "{", "\n", "\"images\"", ":", "[", "\n", "HUNorm", ",", "wrapped_partial", "(", "\n", "resample", ",", "new_shape", "=", "[", "128", ",", "128", ",", "128", "]", ",", "order", "=", "1", ")", "\n", "]", ",", "\n", "\"labels\"", ":", "[", "\n", "wrapped_partial", "(", "\n", "resample", ",", "new_shape", "=", "[", "128", ",", "128", ",", "128", "]", ",", "order", "=", "0", ")", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare_msd.Prep_msd.generate_txt": [[138, 153], ["os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "prepare_msd.Prep_msd.split_files_txt", "prepare_msd.Prep_msd.split_files_txt", "os.join", "os.join", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.split_files_txt"], ["", "def", "generate_txt", "(", "self", ",", "train_split", "=", "0.75", ")", ":", "\n", "        ", "\"\"\"generate the train_list.txt and val_list.txt\"\"\"", "\n", "\n", "txtname", "=", "[", "\n", "osp", ".", "join", "(", "self", ".", "phase_path", ",", "'train_list.txt'", ")", ",", "\n", "osp", ".", "join", "(", "self", ".", "phase_path", ",", "'val_list.txt'", ")", "\n", "]", "\n", "\n", "image_files_npy", "=", "os", ".", "listdir", "(", "self", ".", "image_path", ")", "\n", "label_files_npy", "=", "os", ".", "listdir", "(", "self", ".", "label_path", ")", "\n", "\n", "self", ".", "split_files_txt", "(", "txtname", "[", "0", "]", ",", "image_files_npy", ",", "label_files_npy", ",", "\n", "train_split", ")", "\n", "self", ".", "split_files_txt", "(", "txtname", "[", "1", "]", ",", "image_files_npy", ",", "label_files_npy", ",", "\n", "train_split", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.__init__": [[41, 205], ["paddle.Layer.__init__", "paddleseg.models.layers.PPModule", "human_matting.conv_up_psp", "human_matting.conv_up_psp", "human_matting.conv_up_psp", "human_matting.conv_up_psp", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "human_matting.HumanMatting.init_weight", "human_matting.Refiner", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.conv_up_psp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.conv_up_psp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.conv_up_psp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.conv_up_psp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "backbone", ",", "\n", "pretrained", "=", "None", ",", "\n", "backbone_scale", "=", "0.25", ",", "\n", "refine_kernel_size", "=", "3", ",", "\n", "if_refine", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "if_refine", ":", "\n", "            ", "if", "backbone_scale", ">", "0.5", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Backbone_scale should not be greater than 1/2, but it is {}'", "\n", ".", "format", "(", "backbone_scale", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "backbone_scale", "=", "1", "\n", "\n", "", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_scale", "=", "backbone_scale", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "if_refine", "=", "if_refine", "\n", "if", "if_refine", ":", "\n", "            ", "self", ".", "refiner", "=", "Refiner", "(", "kernel_size", "=", "refine_kernel_size", ")", "\n", "\n", "", "self", ".", "backbone_channels", "=", "backbone", ".", "feat_channels", "\n", "######################", "\n", "### Decoder part - Glance", "\n", "######################", "\n", "self", ".", "psp_module", "=", "layers", ".", "PPModule", "(", "\n", "self", ".", "backbone_channels", "[", "-", "1", "]", ",", "\n", "512", ",", "\n", "bin_sizes", "=", "(", "1", ",", "3", ",", "5", ")", ",", "\n", "dim_reduction", "=", "False", ",", "\n", "align_corners", "=", "False", ")", "\n", "self", ".", "psp4", "=", "conv_up_psp", "(", "512", ",", "256", ",", "2", ")", "\n", "self", ".", "psp3", "=", "conv_up_psp", "(", "512", ",", "128", ",", "4", ")", "\n", "self", ".", "psp2", "=", "conv_up_psp", "(", "512", ",", "64", ",", "8", ")", "\n", "self", ".", "psp1", "=", "conv_up_psp", "(", "512", ",", "64", ",", "16", ")", "\n", "# stage 5g", "\n", "self", ".", "decoder5_g", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", "+", "self", ".", "backbone_channels", "[", "-", "1", "]", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "256", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 4g", "\n", "self", ".", "decoder4_g", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 3g", "\n", "self", ".", "decoder3_g", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 2g", "\n", "self", ".", "decoder2_g", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 1g", "\n", "self", ".", "decoder1_g", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 0g", "\n", "self", ".", "decoder0_g", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "64", ",", "3", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "##########################", "\n", "### Decoder part - FOCUS", "\n", "##########################", "\n", "self", ".", "bridge_block", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "backbone_channels", "[", "-", "1", "]", ",", "512", ",", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ")", "\n", "# stage 5f", "\n", "self", ".", "decoder5_f", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", "+", "self", ".", "backbone_channels", "[", "-", "1", "]", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "256", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 4f", "\n", "self", ".", "decoder4_f", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", "+", "self", ".", "backbone_channels", "[", "-", "2", "]", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 3f", "\n", "self", ".", "decoder3_f", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", "+", "self", ".", "backbone_channels", "[", "-", "3", "]", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 2f", "\n", "self", ".", "decoder2_f", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", "+", "self", ".", "backbone_channels", "[", "-", "4", "]", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 1f", "\n", "self", ".", "decoder1_f", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", "+", "self", ".", "backbone_channels", "[", "-", "5", "]", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "# stage 0f", "\n", "self", ".", "decoder0_f", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "64", ",", "1", "+", "1", "+", "32", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.forward": [[206, 289], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "human_matting.HumanMatting.backbone", "human_matting.HumanMatting.psp_module", "human_matting.HumanMatting.decoder5_g", "human_matting.HumanMatting.decoder4_g", "human_matting.HumanMatting.decoder3_g", "human_matting.HumanMatting.decoder2_g", "human_matting.HumanMatting.decoder1_g", "human_matting.HumanMatting.decoder0_g", "paddle.softmax", "paddle.softmax", "paddle.softmax", "human_matting.HumanMatting.bridge_block", "human_matting.HumanMatting.decoder5_f", "human_matting.HumanMatting.decoder4_f", "human_matting.HumanMatting.decoder3_f", "human_matting.HumanMatting.decoder2_f", "human_matting.HumanMatting.decoder1_f", "human_matting.HumanMatting.decoder0_f", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "human_matting.HumanMatting.fusion", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "isinstance", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "human_matting.HumanMatting.refiner", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "ValueError", "human_matting.HumanMatting.psp4", "human_matting.HumanMatting.psp3", "human_matting.HumanMatting.psp2", "human_matting.HumanMatting.psp1"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.fusion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "src", "=", "data", "[", "'img'", "]", "\n", "src_h", ",", "src_w", "=", "paddle", ".", "shape", "(", "src", ")", "[", "2", ":", "]", "\n", "if", "self", ".", "if_refine", ":", "\n", "# It is not need when exporting.", "\n", "            ", "if", "isinstance", "(", "src_h", ",", "paddle", ".", "Tensor", ")", ":", "\n", "                ", "if", "(", "src_h", "%", "4", "!=", "0", ")", "or", "(", "src_w", "%", "4", ")", "!=", "0", ":", "\n", "                    ", "raise", "ValueError", "(", "\n", "'The input image must have width and height that are divisible by 4'", "\n", ")", "\n", "\n", "# Downsample src for backbone", "\n", "", "", "", "src_sm", "=", "F", ".", "interpolate", "(", "\n", "src", ",", "\n", "scale_factor", "=", "self", ".", "backbone_scale", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "# Base", "\n", "fea_list", "=", "self", ".", "backbone", "(", "src_sm", ")", "\n", "##########################", "\n", "### Decoder part - GLANCE", "\n", "##########################", "\n", "#psp: N, 512, H/32, W/32", "\n", "psp", "=", "self", ".", "psp_module", "(", "fea_list", "[", "-", "1", "]", ")", "\n", "#d6_g: N, 512, H/16, W/16", "\n", "d5_g", "=", "self", ".", "decoder5_g", "(", "paddle", ".", "concat", "(", "(", "psp", ",", "fea_list", "[", "-", "1", "]", ")", ",", "1", ")", ")", "\n", "#d5_g: N, 512, H/8, W/8", "\n", "d4_g", "=", "self", ".", "decoder4_g", "(", "paddle", ".", "concat", "(", "(", "self", ".", "psp4", "(", "psp", ")", ",", "d5_g", ")", ",", "1", ")", ")", "\n", "#d4_g: N, 256, H/4, W/4", "\n", "d3_g", "=", "self", ".", "decoder3_g", "(", "paddle", ".", "concat", "(", "(", "self", ".", "psp3", "(", "psp", ")", ",", "d4_g", ")", ",", "1", ")", ")", "\n", "#d4_g: N, 128, H/2, W/2", "\n", "d2_g", "=", "self", ".", "decoder2_g", "(", "paddle", ".", "concat", "(", "(", "self", ".", "psp2", "(", "psp", ")", ",", "d3_g", ")", ",", "1", ")", ")", "\n", "#d2_g: N, 64, H, W", "\n", "d1_g", "=", "self", ".", "decoder1_g", "(", "paddle", ".", "concat", "(", "(", "self", ".", "psp1", "(", "psp", ")", ",", "d2_g", ")", ",", "1", ")", ")", "\n", "#d0_g: N, 3, H, W", "\n", "d0_g", "=", "self", ".", "decoder0_g", "(", "d1_g", ")", "\n", "# The 1st channel is foreground. The 2nd is transition region. The 3rd is background.", "\n", "# glance_sigmoid = F.sigmoid(d0_g)", "\n", "glance_sigmoid", "=", "F", ".", "softmax", "(", "d0_g", ",", "axis", "=", "1", ")", "\n", "\n", "##########################", "\n", "### Decoder part - FOCUS", "\n", "##########################", "\n", "bb", "=", "self", ".", "bridge_block", "(", "fea_list", "[", "-", "1", "]", ")", "\n", "#bg: N, 512, H/32, W/32", "\n", "d5_f", "=", "self", ".", "decoder5_f", "(", "paddle", ".", "concat", "(", "(", "bb", ",", "fea_list", "[", "-", "1", "]", ")", ",", "1", ")", ")", "\n", "#d5_f: N, 256, H/16, W/16", "\n", "d4_f", "=", "self", ".", "decoder4_f", "(", "paddle", ".", "concat", "(", "(", "d5_f", ",", "fea_list", "[", "-", "2", "]", ")", ",", "1", ")", ")", "\n", "#d4_f: N, 128, H/8, W/8", "\n", "d3_f", "=", "self", ".", "decoder3_f", "(", "paddle", ".", "concat", "(", "(", "d4_f", ",", "fea_list", "[", "-", "3", "]", ")", ",", "1", ")", ")", "\n", "#d3_f: N, 64, H/4, W/4", "\n", "d2_f", "=", "self", ".", "decoder2_f", "(", "paddle", ".", "concat", "(", "(", "d3_f", ",", "fea_list", "[", "-", "4", "]", ")", ",", "1", ")", ")", "\n", "#d2_f: N, 64, H/2, W/2", "\n", "d1_f", "=", "self", ".", "decoder1_f", "(", "paddle", ".", "concat", "(", "(", "d2_f", ",", "fea_list", "[", "-", "5", "]", ")", ",", "1", ")", ")", "\n", "#d1_f: N, 64, H, W", "\n", "d0_f", "=", "self", ".", "decoder0_f", "(", "d1_f", ")", "\n", "#d0_f: N, 1, H, W", "\n", "focus_sigmoid", "=", "F", ".", "sigmoid", "(", "d0_f", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", ")", "\n", "pha_sm", "=", "self", ".", "fusion", "(", "glance_sigmoid", ",", "focus_sigmoid", ")", "\n", "err_sm", "=", "d0_f", "[", ":", ",", "1", ":", "2", ",", ":", ",", ":", "]", "\n", "err_sm", "=", "paddle", ".", "clip", "(", "err_sm", ",", "0.", ",", "1.", ")", "\n", "hid_sm", "=", "F", ".", "relu", "(", "d0_f", "[", ":", ",", "2", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "# Refiner", "\n", "if", "self", ".", "if_refine", ":", "\n", "            ", "pha", "=", "self", ".", "refiner", "(", "\n", "src", "=", "src", ",", "pha", "=", "pha_sm", ",", "err", "=", "err_sm", ",", "hid", "=", "hid_sm", ",", "tri", "=", "glance_sigmoid", ")", "\n", "# Clamp outputs", "\n", "pha", "=", "paddle", ".", "clip", "(", "pha", ",", "0.", ",", "1.", ")", "\n", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "logit_dict", "=", "{", "\n", "'glance'", ":", "glance_sigmoid", ",", "\n", "'focus'", ":", "focus_sigmoid", ",", "\n", "'fusion'", ":", "pha_sm", ",", "\n", "'error'", ":", "err_sm", "\n", "}", "\n", "if", "self", ".", "if_refine", ":", "\n", "                ", "logit_dict", "[", "'refine'", "]", "=", "pha", "\n", "", "return", "logit_dict", "\n", "", "else", ":", "\n", "            ", "return", "pha", "if", "self", ".", "if_refine", "else", "pha_sm", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.loss": [[290, 356], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "collections.defaultdict", "loss_func_dict[].append", "loss_func_dict[].append", "loss_func_dict[].append", "loss_func_dict[].append", "loss_func_dict[].append", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.interpolate.squeeze", "paddle.NLLLoss", "paddle.NLLLoss", "paddle.NLLLoss", "model.MRSD", "model.MRSD", "paddleseg.models.MSELoss", "paddleseg.models.L1Loss", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "", "def", "loss", "(", "self", ",", "logit_dict", ",", "label_dict", ",", "loss_func_dict", "=", "None", ")", ":", "\n", "        ", "if", "loss_func_dict", "is", "None", ":", "\n", "            ", "loss_func_dict", "=", "defaultdict", "(", "list", ")", "\n", "loss_func_dict", "[", "'glance'", "]", ".", "append", "(", "nn", ".", "NLLLoss", "(", ")", ")", "\n", "loss_func_dict", "[", "'focus'", "]", ".", "append", "(", "MRSD", "(", ")", ")", "\n", "loss_func_dict", "[", "'cm'", "]", ".", "append", "(", "MRSD", "(", ")", ")", "\n", "loss_func_dict", "[", "'err'", "]", ".", "append", "(", "paddleseg", ".", "models", ".", "MSELoss", "(", ")", ")", "\n", "loss_func_dict", "[", "'refine'", "]", ".", "append", "(", "paddleseg", ".", "models", ".", "L1Loss", "(", ")", ")", "\n", "\n", "", "loss", "=", "{", "}", "\n", "\n", "# glance loss computation", "\n", "# get glance label", "\n", "glance_label", "=", "F", ".", "interpolate", "(", "\n", "label_dict", "[", "'trimap'", "]", ",", "\n", "logit_dict", "[", "'glance'", "]", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'nearest'", ",", "\n", "align_corners", "=", "False", ")", "\n", "glance_label_trans", "=", "(", "glance_label", "==", "128", ")", ".", "astype", "(", "'int64'", ")", "\n", "glance_label_bg", "=", "(", "glance_label", "==", "0", ")", ".", "astype", "(", "'int64'", ")", "\n", "glance_label", "=", "glance_label_trans", "+", "glance_label_bg", "*", "2", "\n", "loss_glance", "=", "loss_func_dict", "[", "'glance'", "]", "[", "0", "]", "(", "\n", "paddle", ".", "log", "(", "logit_dict", "[", "'glance'", "]", "+", "1e-6", ")", ",", "glance_label", ".", "squeeze", "(", "1", ")", ")", "\n", "loss", "[", "'glance'", "]", "=", "loss_glance", "\n", "\n", "# focus loss computation", "\n", "focus_label", "=", "F", ".", "interpolate", "(", "\n", "label_dict", "[", "'alpha'", "]", ",", "\n", "logit_dict", "[", "'focus'", "]", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "loss_focus", "=", "loss_func_dict", "[", "'focus'", "]", "[", "0", "]", "(", "logit_dict", "[", "'focus'", "]", ",", "\n", "focus_label", ",", "glance_label_trans", ")", "\n", "loss", "[", "'focus'", "]", "=", "loss_focus", "\n", "\n", "# collaborative matting loss", "\n", "loss_cm_func", "=", "loss_func_dict", "[", "'cm'", "]", "\n", "# fusion_sigmoid loss", "\n", "loss_cm", "=", "loss_cm_func", "[", "0", "]", "(", "logit_dict", "[", "'fusion'", "]", ",", "focus_label", ")", "\n", "loss", "[", "'cm'", "]", "=", "loss_cm", "\n", "\n", "# error loss", "\n", "err", "=", "F", ".", "interpolate", "(", "\n", "logit_dict", "[", "'error'", "]", ",", "\n", "label_dict", "[", "'alpha'", "]", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "err_label", "=", "(", "F", ".", "interpolate", "(", "\n", "logit_dict", "[", "'fusion'", "]", ",", "\n", "label_dict", "[", "'alpha'", "]", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "-", "label_dict", "[", "'alpha'", "]", ")", ".", "abs", "(", ")", "\n", "loss_err", "=", "loss_func_dict", "[", "'err'", "]", "[", "0", "]", "(", "err", ",", "err_label", ")", "\n", "loss", "[", "'err'", "]", "=", "loss_err", "\n", "\n", "loss_all", "=", "0.25", "*", "loss_glance", "+", "0.25", "*", "loss_focus", "+", "0.25", "*", "loss_cm", "+", "loss_err", "\n", "\n", "# refine loss", "\n", "if", "self", ".", "if_refine", ":", "\n", "            ", "loss_refine", "=", "loss_func_dict", "[", "'refine'", "]", "[", "0", "]", "(", "logit_dict", "[", "'refine'", "]", ",", "\n", "label_dict", "[", "'alpha'", "]", ")", "\n", "loss", "[", "'refine'", "]", "=", "loss_refine", "\n", "loss_all", "=", "loss_all", "+", "loss_refine", "\n", "\n", "", "loss", "[", "'all'", "]", "=", "loss_all", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.fusion": [[357, 366], ["paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax"], "methods", ["None"], ["", "def", "fusion", "(", "self", ",", "glance_sigmoid", ",", "focus_sigmoid", ")", ":", "\n", "# glance_sigmoid [N, 3, H, W].", "\n", "# In index, 0 is foreground, 1 is transition, 2 is backbone.", "\n", "# After fusion, the foreground is 1, the background is 0, and the transion is between (0, 1).", "\n", "        ", "index", "=", "paddle", ".", "argmax", "(", "glance_sigmoid", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "transition_mask", "=", "(", "index", "==", "1", ")", ".", "astype", "(", "'float32'", ")", "\n", "fg", "=", "(", "index", "==", "0", ")", ".", "astype", "(", "'float32'", ")", "\n", "fusion_sigmoid", "=", "focus_sigmoid", "*", "transition_mask", "+", "fg", "\n", "return", "fusion_sigmoid", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.init_weight": [[367, 370], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.Refiner.__init__": [[380, 404], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "kernel_size", "=", "3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "kernel_size", "not", "in", "[", "1", ",", "3", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\"kernel_size must be in [1, 3]\"", ")", "\n", "\n", "", "self", ".", "kernel_size", "=", "kernel_size", "\n", "\n", "channels", "=", "[", "32", ",", "24", ",", "16", ",", "12", ",", "1", "]", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "channels", "[", "0", "]", "+", "4", "+", "3", ",", "\n", "channels", "[", "1", "]", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "channels", "[", "1", "]", ",", "channels", "[", "2", "]", ",", "kernel_size", ",", "padding", "=", "0", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv3", "=", "layers", ".", "ConvBNReLU", "(", "\n", "channels", "[", "2", "]", "+", "3", ",", "\n", "channels", "[", "3", "]", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2D", "(", "\n", "channels", "[", "3", "]", ",", "channels", "[", "4", "]", ",", "kernel_size", ",", "padding", "=", "0", ",", "bias_attr", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.Refiner.forward": [[405, 450], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "human_matting.Refiner.conv1", "human_matting.Refiner.conv2", "human_matting.Refiner.conv3", "human_matting.Refiner.conv4", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "src", ",", "pha", ",", "err", ",", "hid", ",", "tri", ")", ":", "\n", "        ", "'''\n        Args\uff1a\n            src: (B, 3, H, W) full resolution source image.\n            pha: (B, 1, Hc, Wc) coarse alpha prediction.\n            err: (B, 1, Hc, Hc) coarse error prediction.\n            hid: (B, 32, Hc, Hc) coarse hidden encoding.\n            tri: (B, 1, Hc, Hc) trimap prediction.\n        '''", "\n", "h_full", ",", "w_full", "=", "paddle", ".", "shape", "(", "src", ")", "[", "2", ":", "]", "\n", "h_half", ",", "w_half", "=", "h_full", "//", "2", ",", "w_full", "//", "2", "\n", "h_quat", ",", "w_quat", "=", "h_full", "//", "4", ",", "w_full", "//", "4", "\n", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "hid", ",", "pha", ",", "tri", "]", ",", "axis", "=", "1", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "paddle", ".", "concat", "(", "(", "h_half", ",", "w_half", ")", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "y", "=", "F", ".", "interpolate", "(", "\n", "src", ",", "\n", "paddle", ".", "concat", "(", "(", "h_half", ",", "w_half", ")", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "if", "self", ".", "kernel_size", "==", "3", ":", "\n", "            ", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "3", ",", "3", ",", "3", ",", "3", "]", ")", "\n", "y", "=", "F", ".", "pad", "(", "y", ",", "[", "3", ",", "3", ",", "3", ",", "3", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "conv1", "(", "paddle", ".", "concat", "(", "[", "x", ",", "y", "]", ",", "axis", "=", "1", ")", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "\n", "if", "self", ".", "kernel_size", "==", "3", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "paddle", ".", "concat", "(", "(", "h_full", "+", "4", ",", "w_full", "+", "4", ")", ")", ")", "\n", "y", "=", "F", ".", "pad", "(", "src", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "paddle", ".", "concat", "(", "(", "h_full", ",", "w_full", ")", ")", ",", "mode", "=", "'nearest'", ")", "\n", "y", "=", "src", "\n", "\n", "", "x", "=", "self", ".", "conv3", "(", "paddle", ".", "concat", "(", "[", "x", ",", "y", "]", ",", "axis", "=", "1", ")", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "\n", "pha", "=", "x", "\n", "return", "pha", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.conv_up_psp": [[29, 35], ["paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample"], "function", ["None"], ["def", "conv_up_psp", "(", "in_channels", ",", "out_channels", ",", "up_sample", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "up_sample", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.DIM.__init__": [[43, 65], ["paddle.Layer.__init__", "dim.Decoder", "dim.DIM.init_weight", "dim.DIM.backbone.parameters", "dim.DIM.decoder.parameters", "dim.Refine"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "backbone", ",", "\n", "stage", "=", "3", ",", "\n", "decoder_input_channels", "=", "512", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "stage", "=", "stage", "\n", "\n", "decoder_output_channels", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "self", ".", "decoder", "=", "Decoder", "(", "\n", "input_channels", "=", "decoder_input_channels", ",", "\n", "output_channels", "=", "decoder_output_channels", ")", "\n", "if", "self", ".", "stage", "==", "2", ":", "\n", "            ", "for", "param", "in", "self", ".", "backbone", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "stop_gradient", "=", "True", "\n", "", "for", "param", "in", "self", ".", "decoder", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "stop_gradient", "=", "True", "\n", "", "", "if", "self", ".", "stage", ">=", "2", ":", "\n", "            ", "self", ".", "refine", "=", "Refine", "(", ")", "\n", "", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.DIM.forward": [[66, 98], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "dim.DIM.backbone", "range", "dim.DIM.decoder", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "up_shape.append", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "dim.DIM.refine", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "input_shape", "=", "paddle", ".", "shape", "(", "inputs", "[", "'img'", "]", ")", "[", "-", "2", ":", "]", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "inputs", "[", "'img'", "]", ",", "inputs", "[", "'trimap'", "]", "/", "255", "]", ",", "axis", "=", "1", ")", "\n", "fea_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "\n", "# decoder stage", "\n", "up_shape", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "            ", "up_shape", ".", "append", "(", "paddle", ".", "shape", "(", "fea_list", "[", "i", "]", ")", "[", "-", "2", ":", "]", ")", "\n", "", "alpha_raw", "=", "self", ".", "decoder", "(", "fea_list", ",", "up_shape", ")", "\n", "alpha_raw", "=", "F", ".", "interpolate", "(", "\n", "alpha_raw", ",", "input_shape", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "logit_dict", "=", "{", "'alpha_raw'", ":", "alpha_raw", "}", "\n", "if", "self", ".", "stage", "<", "2", ":", "\n", "            ", "return", "logit_dict", "\n", "\n", "", "if", "self", ".", "stage", ">=", "2", ":", "\n", "# refine stage", "\n", "            ", "refine_input", "=", "paddle", ".", "concat", "(", "[", "inputs", "[", "'img'", "]", ",", "alpha_raw", "]", ",", "axis", "=", "1", ")", "\n", "alpha_refine", "=", "self", ".", "refine", "(", "refine_input", ")", "\n", "\n", "# finally alpha", "\n", "alpha_pred", "=", "alpha_refine", "+", "alpha_raw", "\n", "alpha_pred", "=", "F", ".", "interpolate", "(", "\n", "alpha_pred", ",", "input_shape", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "if", "not", "self", ".", "training", ":", "\n", "                ", "alpha_pred", "=", "paddle", ".", "clip", "(", "alpha_pred", ",", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "", "logit_dict", "[", "'alpha_pred'", "]", "=", "alpha_pred", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "return", "logit_dict", "\n", "", "else", ":", "\n", "            ", "return", "alpha_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.DIM.loss": [[99, 130], ["collections.defaultdict", "loss_func_dict[].append", "loss_func_dict[].append", "loss_func_dict[].append", "loss.MRSD", "loss.MRSD", "loss.MRSD"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "loss", "(", "self", ",", "logit_dict", ",", "label_dict", ",", "loss_func_dict", "=", "None", ")", ":", "\n", "        ", "if", "loss_func_dict", "is", "None", ":", "\n", "            ", "loss_func_dict", "=", "defaultdict", "(", "list", ")", "\n", "loss_func_dict", "[", "'alpha_raw'", "]", ".", "append", "(", "MRSD", "(", ")", ")", "\n", "loss_func_dict", "[", "'comp'", "]", ".", "append", "(", "MRSD", "(", ")", ")", "\n", "loss_func_dict", "[", "'alpha_pred'", "]", ".", "append", "(", "MRSD", "(", ")", ")", "\n", "\n", "", "loss", "=", "{", "}", "\n", "mask", "=", "label_dict", "[", "'trimap'", "]", "==", "128", "\n", "loss", "[", "'all'", "]", "=", "0", "\n", "\n", "if", "self", ".", "stage", "!=", "2", ":", "\n", "            ", "loss", "[", "'alpha_raw'", "]", "=", "loss_func_dict", "[", "'alpha_raw'", "]", "[", "0", "]", "(", "\n", "logit_dict", "[", "'alpha_raw'", "]", ",", "label_dict", "[", "'alpha'", "]", ",", "mask", ")", "\n", "loss", "[", "'alpha_raw'", "]", "=", "0.5", "*", "loss", "[", "'alpha_raw'", "]", "\n", "loss", "[", "'all'", "]", "=", "loss", "[", "'all'", "]", "+", "loss", "[", "'alpha_raw'", "]", "\n", "\n", "", "if", "self", ".", "stage", "==", "1", "or", "self", ".", "stage", "==", "3", ":", "\n", "            ", "comp_pred", "=", "logit_dict", "[", "'alpha_raw'", "]", "*", "label_dict", "[", "'fg'", "]", "+", "(", "1", "-", "logit_dict", "[", "'alpha_raw'", "]", ")", "*", "label_dict", "[", "'bg'", "]", "\n", "loss", "[", "'comp'", "]", "=", "loss_func_dict", "[", "'comp'", "]", "[", "0", "]", "(", "comp_pred", ",", "\n", "label_dict", "[", "'img'", "]", ",", "mask", ")", "\n", "loss", "[", "'comp'", "]", "=", "0.5", "*", "loss", "[", "'comp'", "]", "\n", "loss", "[", "'all'", "]", "=", "loss", "[", "'all'", "]", "+", "loss", "[", "'comp'", "]", "\n", "\n", "", "if", "self", ".", "stage", "==", "2", "or", "self", ".", "stage", "==", "3", ":", "\n", "            ", "loss", "[", "'alpha_pred'", "]", "=", "loss_func_dict", "[", "'alpha_pred'", "]", "[", "0", "]", "(", "\n", "logit_dict", "[", "'alpha_pred'", "]", ",", "label_dict", "[", "'alpha'", "]", ",", "mask", ")", "\n", "loss", "[", "'all'", "]", "=", "loss", "[", "'all'", "]", "+", "loss", "[", "'alpha_pred'", "]", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.DIM.init_weight": [[131, 134], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.Up.__init__": [[138, 146], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "output_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "input_channels", ",", "\n", "output_channels", ",", "\n", "kernel_size", "=", "5", ",", "\n", "padding", "=", "2", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.Up.forward": [[147, 155], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "dim.Up.conv", "paddle.relu", "paddle.relu", "paddle.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "skip", ",", "output_shape", ")", ":", "\n", "        ", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "size", "=", "output_shape", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "x", "=", "x", "+", "skip", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.Decoder.__init__": [[158, 170], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "dim.Up", "dim.Up", "dim.Up", "dim.Up", "dim.Up", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "output_channels", "=", "(", "64", ",", "128", ",", "256", ",", "512", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "deconv6", "=", "nn", ".", "Conv2D", "(", "\n", "input_channels", ",", "input_channels", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "deconv5", "=", "Up", "(", "input_channels", ",", "output_channels", "[", "-", "1", "]", ")", "\n", "self", ".", "deconv4", "=", "Up", "(", "output_channels", "[", "-", "1", "]", ",", "output_channels", "[", "-", "2", "]", ")", "\n", "self", ".", "deconv3", "=", "Up", "(", "output_channels", "[", "-", "2", "]", ",", "output_channels", "[", "-", "3", "]", ")", "\n", "self", ".", "deconv2", "=", "Up", "(", "output_channels", "[", "-", "3", "]", ",", "output_channels", "[", "-", "4", "]", ")", "\n", "self", ".", "deconv1", "=", "Up", "(", "output_channels", "[", "-", "4", "]", ",", "64", ")", "\n", "\n", "self", ".", "alpha_conv", "=", "nn", ".", "Conv2D", "(", "\n", "64", ",", "1", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.Decoder.forward": [[171, 183], ["dim.Decoder.deconv6", "dim.Decoder.deconv5", "dim.Decoder.deconv4", "dim.Decoder.deconv3", "dim.Decoder.deconv2", "dim.Decoder.deconv1", "dim.Decoder.alpha_conv", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "fea_list", ",", "shape_list", ")", ":", "\n", "        ", "x", "=", "fea_list", "[", "-", "1", "]", "\n", "x", "=", "self", ".", "deconv6", "(", "x", ")", "\n", "x", "=", "self", ".", "deconv5", "(", "x", ",", "fea_list", "[", "4", "]", ",", "shape_list", "[", "4", "]", ")", "\n", "x", "=", "self", ".", "deconv4", "(", "x", ",", "fea_list", "[", "3", "]", ",", "shape_list", "[", "3", "]", ")", "\n", "x", "=", "self", ".", "deconv3", "(", "x", ",", "fea_list", "[", "2", "]", ",", "shape_list", "[", "2", "]", ")", "\n", "x", "=", "self", ".", "deconv2", "(", "x", ",", "fea_list", "[", "1", "]", ",", "shape_list", "[", "1", "]", ")", "\n", "x", "=", "self", ".", "deconv1", "(", "x", ",", "fea_list", "[", "0", "]", ",", "shape_list", "[", "0", "]", ")", "\n", "alpha", "=", "self", ".", "alpha_conv", "(", "x", ")", "\n", "alpha", "=", "F", ".", "sigmoid", "(", "alpha", ")", "\n", "\n", "return", "alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.Refine.__init__": [[186, 196], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "4", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv3", "=", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "alpha_pred", "=", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.dim.Refine.forward": [[197, 204], ["dim.Refine.conv1", "dim.Refine.conv2", "dim.Refine.conv3", "dim.Refine.alpha_pred"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "alpha", "=", "self", ".", "alpha_pred", "(", "x", ")", "\n", "\n", "return", "alpha", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.vgg.ConvBlock.__init__": [[27, 69], ["paddle.Layer.__init__", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "output_channels", ",", "groups", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "_conv_1", "=", "Conv2D", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "weight_attr", "=", "ParamAttr", "(", "name", "=", "name", "+", "\"1_weights\"", ")", ",", "\n", "bias_attr", "=", "False", ")", "\n", "if", "groups", "==", "2", "or", "groups", "==", "3", "or", "groups", "==", "4", ":", "\n", "            ", "self", ".", "_conv_2", "=", "Conv2D", "(", "\n", "in_channels", "=", "output_channels", ",", "\n", "out_channels", "=", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "weight_attr", "=", "ParamAttr", "(", "name", "=", "name", "+", "\"2_weights\"", ")", ",", "\n", "bias_attr", "=", "False", ")", "\n", "", "if", "groups", "==", "3", "or", "groups", "==", "4", ":", "\n", "            ", "self", ".", "_conv_3", "=", "Conv2D", "(", "\n", "in_channels", "=", "output_channels", ",", "\n", "out_channels", "=", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "weight_attr", "=", "ParamAttr", "(", "name", "=", "name", "+", "\"3_weights\"", ")", ",", "\n", "bias_attr", "=", "False", ")", "\n", "", "if", "groups", "==", "4", ":", "\n", "            ", "self", ".", "_conv_4", "=", "Conv2D", "(", "\n", "in_channels", "=", "output_channels", ",", "\n", "out_channels", "=", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "weight_attr", "=", "ParamAttr", "(", "name", "=", "name", "+", "\"4_weights\"", ")", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "self", ".", "_pool", "=", "MaxPool2D", "(", "\n", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "return_mask", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.vgg.ConvBlock.forward": [[70, 85], ["vgg.ConvBlock._conv_1", "paddle.relu", "paddle.relu", "paddle.relu", "vgg.ConvBlock._pool", "vgg.ConvBlock._conv_2", "paddle.relu", "paddle.relu", "paddle.relu", "vgg.ConvBlock._conv_3", "paddle.relu", "paddle.relu", "paddle.relu", "vgg.ConvBlock._conv_4", "paddle.relu", "paddle.relu", "paddle.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv_1", "(", "inputs", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "if", "self", ".", "groups", "==", "2", "or", "self", ".", "groups", "==", "3", "or", "self", ".", "groups", "==", "4", ":", "\n", "            ", "x", "=", "self", ".", "_conv_2", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "", "if", "self", ".", "groups", "==", "3", "or", "self", ".", "groups", "==", "4", ":", "\n", "            ", "x", "=", "self", ".", "_conv_3", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "", "if", "self", ".", "groups", "==", "4", ":", "\n", "            ", "x", "=", "self", ".", "_conv_4", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "", "skip", "=", "x", "\n", "x", ",", "max_indices", "=", "self", ".", "_pool", "(", "x", ")", "\n", "return", "x", ",", "max_indices", ",", "skip", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.vgg.VGGNet.__init__": [[88, 117], ["paddle.Layer.__init__", "vgg.ConvBlock", "vgg.ConvBlock", "vgg.ConvBlock", "vgg.ConvBlock", "vgg.ConvBlock", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "vgg.VGGNet.init_weight", "vgg.VGGNet.vgg_configure.keys", "vgg.VGGNet.vgg_configure.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", "=", "3", ",", "layers", "=", "11", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "VGGNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "\n", "self", ".", "layers", "=", "layers", "\n", "self", ".", "vgg_configure", "=", "{", "\n", "11", ":", "[", "1", ",", "1", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "13", ":", "[", "2", ",", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "16", ":", "[", "2", ",", "2", ",", "3", ",", "3", ",", "3", "]", ",", "\n", "19", ":", "[", "2", ",", "2", ",", "4", ",", "4", ",", "4", "]", "\n", "}", "\n", "assert", "self", ".", "layers", "in", "self", ".", "vgg_configure", ".", "keys", "(", ")", ",", "\"supported layers are {} but input layer is {}\"", ".", "format", "(", "\n", "self", ".", "vgg_configure", ".", "keys", "(", ")", ",", "layers", ")", "\n", "self", ".", "groups", "=", "self", ".", "vgg_configure", "[", "self", ".", "layers", "]", "\n", "\n", "# matting\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u8f93\u5165\u4e3a4\u901a\u9053\uff0c\u521d\u59cb\u5316\u662f\u76f4\u63a5\u521d\u59cb\u5316\u4e3a0", "\n", "self", ".", "_conv_block_1", "=", "ConvBlock", "(", "\n", "input_channels", ",", "64", ",", "self", ".", "groups", "[", "0", "]", ",", "name", "=", "\"conv1_\"", ")", "\n", "self", ".", "_conv_block_2", "=", "ConvBlock", "(", "64", ",", "128", ",", "self", ".", "groups", "[", "1", "]", ",", "name", "=", "\"conv2_\"", ")", "\n", "self", ".", "_conv_block_3", "=", "ConvBlock", "(", "128", ",", "256", ",", "self", ".", "groups", "[", "2", "]", ",", "name", "=", "\"conv3_\"", ")", "\n", "self", ".", "_conv_block_4", "=", "ConvBlock", "(", "256", ",", "512", ",", "self", ".", "groups", "[", "3", "]", ",", "name", "=", "\"conv4_\"", ")", "\n", "self", ".", "_conv_block_5", "=", "ConvBlock", "(", "512", ",", "512", ",", "self", ".", "groups", "[", "4", "]", ",", "name", "=", "\"conv5_\"", ")", "\n", "\n", "# \u8fd9\u4e00\u5c42\u7684\u521d\u59cb\u5316\u9700\u8981\u5229\u7528vgg fc6\u7684\u53c2\u6570\u8f6c\u6362\u540e\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u53ef\u4ee5\u6682\u65f6\u4e0d\u8003\u8651\u521d\u59cb\u5316", "\n", "self", ".", "_conv_6", "=", "Conv2D", "(", "\n", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.vgg.VGGNet.forward": [[118, 139], ["vgg.VGGNet._conv_block_1", "fea_list.append", "ids_list.append", "vgg.VGGNet._conv_block_2", "fea_list.append", "ids_list.append", "vgg.VGGNet._conv_block_3", "fea_list.append", "ids_list.append", "vgg.VGGNet._conv_block_4", "fea_list.append", "ids_list.append", "vgg.VGGNet._conv_block_5", "fea_list.append", "ids_list.append", "paddle.relu", "paddle.relu", "paddle.relu", "fea_list.append", "vgg.VGGNet._conv_6"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "fea_list", "=", "[", "]", "\n", "ids_list", "=", "[", "]", "\n", "x", ",", "ids", ",", "skip", "=", "self", ".", "_conv_block_1", "(", "inputs", ")", "\n", "fea_list", ".", "append", "(", "skip", ")", "\n", "ids_list", ".", "append", "(", "ids", ")", "\n", "x", ",", "ids", ",", "skip", "=", "self", ".", "_conv_block_2", "(", "x", ")", "\n", "fea_list", ".", "append", "(", "skip", ")", "\n", "ids_list", ".", "append", "(", "ids", ")", "\n", "x", ",", "ids", ",", "skip", "=", "self", ".", "_conv_block_3", "(", "x", ")", "\n", "fea_list", ".", "append", "(", "skip", ")", "\n", "ids_list", ".", "append", "(", "ids", ")", "\n", "x", ",", "ids", ",", "skip", "=", "self", ".", "_conv_block_4", "(", "x", ")", "\n", "fea_list", ".", "append", "(", "skip", ")", "\n", "ids_list", ".", "append", "(", "ids", ")", "\n", "x", ",", "ids", ",", "skip", "=", "self", ".", "_conv_block_5", "(", "x", ")", "\n", "fea_list", ".", "append", "(", "skip", ")", "\n", "ids_list", ".", "append", "(", "ids", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "_conv_6", "(", "x", ")", ")", "\n", "fea_list", ".", "append", "(", "x", ")", "\n", "return", "fea_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.vgg.VGGNet.init_weight": [[140, 143], ["paddleseg.utils.utils.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.vgg.VGG11": [[145, 149], ["vgg.VGGNet"], "function", ["None"], ["", "", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "VGG11", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "VGGNet", "(", "layers", "=", "11", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.vgg.VGG13": [[151, 155], ["vgg.VGGNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "VGG13", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "VGGNet", "(", "layers", "=", "13", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.vgg.VGG16": [[157, 161], ["vgg.VGGNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "VGG16", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "VGGNet", "(", "layers", "=", "16", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.vgg.VGG19": [[163, 167], ["vgg.VGGNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "VGG19", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "VGGNet", "(", "layers", "=", "19", ",", "**", "args", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ConvBNLayer.__init__": [[29, 56], ["paddle.Layer.__init__", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddleseg.models.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "is_vd_mode", "=", "False", ",", "\n", "act", "=", "None", ",", ")", ":", "\n", "        ", "super", "(", "ConvBNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "is_vd_mode", "=", "is_vd_mode", "\n", "self", ".", "_pool2d_avg", "=", "nn", ".", "AvgPool2D", "(", "\n", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", "if", "dilation", "==", "1", "else", "0", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "_batch_norm", "=", "layers", ".", "SyncBatchNorm", "(", "out_channels", ")", "\n", "self", ".", "_act_op", "=", "layers", ".", "Activation", "(", "act", "=", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ConvBNLayer.forward": [[57, 65], ["resnet_vd.ConvBNLayer._conv", "resnet_vd.ConvBNLayer._batch_norm", "resnet_vd.ConvBNLayer._act_op", "resnet_vd.ConvBNLayer._pool2d_avg"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "self", ".", "is_vd_mode", ":", "\n", "            ", "inputs", "=", "self", ".", "_pool2d_avg", "(", "inputs", ")", "\n", "", "y", "=", "self", ".", "_conv", "(", "inputs", ")", "\n", "y", "=", "self", ".", "_batch_norm", "(", "y", ")", "\n", "y", "=", "self", ".", "_act_op", "(", "y", ")", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.BottleneckBlock.__init__": [[68, 107], ["paddle.Layer.__init__", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "stride", ",", "\n", "shortcut", "=", "True", ",", "\n", "if_first", "=", "False", ",", "\n", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BottleneckBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv0", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "act", "=", "'relu'", ")", "\n", "\n", "self", ".", "dilation", "=", "dilation", "\n", "\n", "self", ".", "conv1", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "out_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "act", "=", "'relu'", ",", "\n", "dilation", "=", "dilation", ")", "\n", "self", ".", "conv2", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "out_channels", ",", "\n", "out_channels", "=", "out_channels", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "act", "=", "None", ")", "\n", "\n", "if", "not", "shortcut", ":", "\n", "            ", "self", ".", "short", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "is_vd_mode", "=", "False", "if", "if_first", "or", "stride", "==", "1", "else", "True", ")", "\n", "\n", "", "self", ".", "shortcut", "=", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.BottleneckBlock.forward": [[108, 130], ["resnet_vd.BottleneckBlock.conv0", "resnet_vd.BottleneckBlock.conv1", "resnet_vd.BottleneckBlock.conv2", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.pad", "paddle.pad", "paddle.pad", "resnet_vd.BottleneckBlock.short"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "y", "=", "self", ".", "conv0", "(", "inputs", ")", "\n", "\n", "####################################################################", "\n", "# If given dilation rate > 1, using corresponding padding.", "\n", "# The performance drops down without the follow padding.", "\n", "if", "self", ".", "dilation", ">", "1", ":", "\n", "            ", "padding", "=", "self", ".", "dilation", "\n", "y", "=", "F", ".", "pad", "(", "y", ",", "[", "padding", ",", "padding", ",", "padding", ",", "padding", "]", ")", "\n", "#####################################################################", "\n", "\n", "", "conv1", "=", "self", ".", "conv1", "(", "y", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "\n", "if", "self", ".", "shortcut", ":", "\n", "            ", "short", "=", "inputs", "\n", "", "else", ":", "\n", "            ", "short", "=", "self", ".", "short", "(", "inputs", ")", "\n", "\n", "", "y", "=", "paddle", ".", "add", "(", "x", "=", "short", ",", "y", "=", "conv2", ")", "\n", "y", "=", "F", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.BasicBlock.__init__": [[133, 162], ["paddle.Layer.__init__", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "stride", ",", "\n", "shortcut", "=", "True", ",", "\n", "if_first", "=", "False", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "conv0", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "act", "=", "'relu'", ")", "\n", "self", ".", "conv1", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "out_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "act", "=", "None", ")", "\n", "\n", "if", "not", "shortcut", ":", "\n", "            ", "self", ".", "short", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "is_vd_mode", "=", "False", "if", "if_first", "or", "stride", "==", "1", "else", "True", ")", "\n", "\n", "", "self", ".", "shortcut", "=", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.BasicBlock.forward": [[163, 175], ["resnet_vd.BasicBlock.conv0", "resnet_vd.BasicBlock.conv1", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.relu", "paddle.relu", "paddle.relu", "resnet_vd.BasicBlock.short"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "y", "=", "self", ".", "conv0", "(", "inputs", ")", "\n", "conv1", "=", "self", ".", "conv1", "(", "y", ")", "\n", "\n", "if", "self", ".", "shortcut", ":", "\n", "            ", "short", "=", "inputs", "\n", "", "else", ":", "\n", "            ", "short", "=", "self", ".", "short", "(", "inputs", ")", "\n", "", "y", "=", "paddle", ".", "add", "(", "x", "=", "short", ",", "y", "=", "conv1", ")", "\n", "y", "=", "F", ".", "relu", "(", "y", ")", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ResNet_vd.__init__": [[193, 315], ["paddle.Layer.__init__", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "resnet_vd.ResNet_vd.init_weight", "range", "range", "len", "range", "resnet_vd.ResNet_vd.stage_list.append", "len", "range", "resnet_vd.ResNet_vd.stage_list.append", "resnet_vd.ResNet_vd.add_sublayer", "block_list.append", "resnet_vd.ResNet_vd.add_sublayer", "block_list.append", "resnet_vd.BottleneckBlock", "chr", "resnet_vd.BasicBlock", "chr", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "input_channels", "=", "3", ",", "\n", "layers", "=", "50", ",", "\n", "output_stride", "=", "32", ",", "\n", "multi_grid", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet_vd", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1_logit", "=", "None", "# for gscnn shape stream", "\n", "self", ".", "layers", "=", "layers", "\n", "supported_layers", "=", "[", "18", ",", "34", ",", "50", ",", "101", ",", "152", ",", "200", "]", "\n", "assert", "layers", "in", "supported_layers", ",", "\"supported layers are {} but input layer is {}\"", ".", "format", "(", "\n", "supported_layers", ",", "layers", ")", "\n", "\n", "if", "layers", "==", "18", ":", "\n", "            ", "depth", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", "\n", "", "elif", "layers", "==", "34", "or", "layers", "==", "50", ":", "\n", "            ", "depth", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", "\n", "", "elif", "layers", "==", "101", ":", "\n", "            ", "depth", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", "\n", "", "elif", "layers", "==", "152", ":", "\n", "            ", "depth", "=", "[", "3", ",", "8", ",", "36", ",", "3", "]", "\n", "", "elif", "layers", "==", "200", ":", "\n", "            ", "depth", "=", "[", "3", ",", "12", ",", "48", ",", "3", "]", "\n", "", "num_channels", "=", "[", "64", ",", "256", ",", "512", ",", "\n", "1024", "]", "if", "layers", ">=", "50", "else", "[", "64", ",", "64", ",", "128", ",", "256", "]", "\n", "num_filters", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "\n", "# for channels of four returned stages", "\n", "self", ".", "feat_channels", "=", "[", "c", "*", "4", "for", "c", "in", "num_filters", "\n", "]", "if", "layers", ">=", "50", "else", "num_filters", "\n", "self", ".", "feat_channels", "=", "[", "64", "]", "+", "self", ".", "feat_channels", "\n", "\n", "dilation_dict", "=", "None", "\n", "if", "output_stride", "==", "8", ":", "\n", "            ", "dilation_dict", "=", "{", "2", ":", "2", ",", "3", ":", "4", "}", "\n", "", "elif", "output_stride", "==", "16", ":", "\n", "            ", "dilation_dict", "=", "{", "3", ":", "2", "}", "\n", "\n", "", "self", ".", "conv1_1", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "act", "=", "'relu'", ")", "\n", "self", ".", "conv1_2", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "act", "=", "'relu'", ")", "\n", "self", ".", "conv1_3", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "act", "=", "'relu'", ")", "\n", "self", ".", "pool2d_max", "=", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "# self.block_list = []", "\n", "self", ".", "stage_list", "=", "[", "]", "\n", "if", "layers", ">=", "50", ":", "\n", "            ", "for", "block", "in", "range", "(", "len", "(", "depth", ")", ")", ":", "\n", "                ", "shortcut", "=", "False", "\n", "block_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "depth", "[", "block", "]", ")", ":", "\n", "                    ", "if", "layers", "in", "[", "101", ",", "152", "]", "and", "block", "==", "2", ":", "\n", "                        ", "if", "i", "==", "0", ":", "\n", "                            ", "conv_name", "=", "\"res\"", "+", "str", "(", "block", "+", "2", ")", "+", "\"a\"", "\n", "", "else", ":", "\n", "                            ", "conv_name", "=", "\"res\"", "+", "str", "(", "block", "+", "2", ")", "+", "\"b\"", "+", "str", "(", "i", ")", "\n", "", "", "else", ":", "\n", "                        ", "conv_name", "=", "\"res\"", "+", "str", "(", "block", "+", "2", ")", "+", "chr", "(", "97", "+", "i", ")", "\n", "\n", "###############################################################################", "\n", "# Add dilation rate for some segmentation tasks, if dilation_dict is not None.", "\n", "", "dilation_rate", "=", "dilation_dict", "[", "\n", "block", "]", "if", "dilation_dict", "and", "block", "in", "dilation_dict", "else", "1", "\n", "\n", "# Actually block here is 'stage', and i is 'block' in 'stage'", "\n", "# At the stage 4, expand the the dilation_rate if given multi_grid", "\n", "if", "block", "==", "3", ":", "\n", "                        ", "dilation_rate", "=", "dilation_rate", "*", "multi_grid", "[", "i", "]", "\n", "###############################################################################", "\n", "\n", "", "bottleneck_block", "=", "self", ".", "add_sublayer", "(", "\n", "'bb_%d_%d'", "%", "(", "block", ",", "i", ")", ",", "\n", "BottleneckBlock", "(", "\n", "in_channels", "=", "num_channels", "[", "block", "]", "\n", "if", "i", "==", "0", "else", "num_filters", "[", "block", "]", "*", "4", ",", "\n", "out_channels", "=", "num_filters", "[", "block", "]", ",", "\n", "stride", "=", "2", "if", "i", "==", "0", "and", "block", "!=", "0", "and", "\n", "dilation_rate", "==", "1", "else", "1", ",", "\n", "shortcut", "=", "shortcut", ",", "\n", "if_first", "=", "block", "==", "i", "==", "0", ",", "\n", "dilation", "=", "dilation_rate", ")", ")", "\n", "\n", "block_list", ".", "append", "(", "bottleneck_block", ")", "\n", "shortcut", "=", "True", "\n", "", "self", ".", "stage_list", ".", "append", "(", "block_list", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "block", "in", "range", "(", "len", "(", "depth", ")", ")", ":", "\n", "                ", "shortcut", "=", "False", "\n", "block_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "depth", "[", "block", "]", ")", ":", "\n", "                    ", "conv_name", "=", "\"res\"", "+", "str", "(", "block", "+", "2", ")", "+", "chr", "(", "97", "+", "i", ")", "\n", "basic_block", "=", "self", ".", "add_sublayer", "(", "\n", "'bb_%d_%d'", "%", "(", "block", ",", "i", ")", ",", "\n", "BasicBlock", "(", "\n", "in_channels", "=", "num_channels", "[", "block", "]", "\n", "if", "i", "==", "0", "else", "num_filters", "[", "block", "]", ",", "\n", "out_channels", "=", "num_filters", "[", "block", "]", ",", "\n", "stride", "=", "2", "if", "i", "==", "0", "and", "block", "!=", "0", "else", "1", ",", "\n", "shortcut", "=", "shortcut", ",", "\n", "if_first", "=", "block", "==", "i", "==", "0", ")", ")", "\n", "block_list", ".", "append", "(", "basic_block", ")", "\n", "shortcut", "=", "True", "\n", "", "self", ".", "stage_list", ".", "append", "(", "block_list", ")", "\n", "\n", "", "", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ResNet_vd.forward": [[316, 332], ["resnet_vd.ResNet_vd.conv1_1", "resnet_vd.ResNet_vd.conv1_2", "resnet_vd.ResNet_vd.conv1_3", "feat_list.append", "resnet_vd.ResNet_vd.pool2d_max", "feat_list.append", "block"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "feat_list", "=", "[", "]", "\n", "y", "=", "self", ".", "conv1_1", "(", "inputs", ")", "\n", "y", "=", "self", ".", "conv1_2", "(", "y", ")", "\n", "y", "=", "self", ".", "conv1_3", "(", "y", ")", "\n", "feat_list", ".", "append", "(", "y", ")", "\n", "\n", "y", "=", "self", ".", "pool2d_max", "(", "y", ")", "\n", "\n", "# A feature list saves the output feature map of each stage.", "\n", "for", "stage", "in", "self", ".", "stage_list", ":", "\n", "            ", "for", "block", "in", "stage", ":", "\n", "                ", "y", "=", "block", "(", "y", ")", "\n", "", "feat_list", ".", "append", "(", "y", ")", "\n", "\n", "", "return", "feat_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ResNet_vd.init_weight": [[333, 335], ["paddleseg.utils.utils.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ResNet18_vd": [[337, 341], ["resnet_vd.ResNet_vd"], "function", ["None"], ["", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ResNet18_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "18", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ResNet34_vd": [[343, 347], ["resnet_vd.ResNet_vd"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ResNet34_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "34", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ResNet50_vd": [[349, 353], ["resnet_vd.ResNet_vd"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ResNet50_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "50", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ResNet101_vd": [[355, 359], ["resnet_vd.ResNet_vd"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ResNet101_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "101", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ResNet152_vd": [[361, 364], ["resnet_vd.ResNet_vd"], "function", ["None"], ["", "def", "ResNet152_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "152", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.resnet_vd.ResNet200_vd": [[366, 369], ["resnet_vd.ResNet_vd"], "function", ["None"], ["", "def", "ResNet200_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "200", ",", "**", "args", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet.__init__": [[58, 167], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "hrnet.Layer1", "hrnet.TransitionLayer", "hrnet.Stage", "hrnet.TransitionLayer", "hrnet.Stage", "hrnet.TransitionLayer", "hrnet.Stage", "hrnet.HRNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "input_channels", "=", "3", ",", "\n", "pretrained", "=", "None", ",", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "(", "4", ",", ")", ",", "\n", "stage1_num_channels", "=", "(", "64", ",", ")", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "(", "4", ",", "4", ")", ",", "\n", "stage2_num_channels", "=", "(", "18", ",", "36", ")", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "(", "4", ",", "4", ",", "4", ")", ",", "\n", "stage3_num_channels", "=", "(", "18", ",", "36", ",", "72", ")", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "(", "4", ",", "4", ",", "4", ",", "4", ")", ",", "\n", "stage4_num_channels", "=", "(", "18", ",", "36", ",", "72", ",", "144", ")", ",", "\n", "has_se", "=", "False", ",", "\n", "align_corners", "=", "False", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "HRNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "stage1_num_modules", "=", "stage1_num_modules", "\n", "self", ".", "stage1_num_blocks", "=", "stage1_num_blocks", "\n", "self", ".", "stage1_num_channels", "=", "stage1_num_channels", "\n", "self", ".", "stage2_num_modules", "=", "stage2_num_modules", "\n", "self", ".", "stage2_num_blocks", "=", "stage2_num_blocks", "\n", "self", ".", "stage2_num_channels", "=", "stage2_num_channels", "\n", "self", ".", "stage3_num_modules", "=", "stage3_num_modules", "\n", "self", ".", "stage3_num_blocks", "=", "stage3_num_blocks", "\n", "self", ".", "stage3_num_channels", "=", "stage3_num_channels", "\n", "self", ".", "stage4_num_modules", "=", "stage4_num_modules", "\n", "self", ".", "stage4_num_blocks", "=", "stage4_num_blocks", "\n", "self", ".", "stage4_num_channels", "=", "stage4_num_channels", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "feat_channels", "=", "[", "i", "for", "i", "in", "stage4_num_channels", "]", "\n", "self", ".", "feat_channels", "=", "[", "64", "]", "+", "self", ".", "feat_channels", "\n", "\n", "self", ".", "conv_layer1_1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv_layer1_2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "la1", "=", "Layer1", "(", "\n", "num_channels", "=", "64", ",", "\n", "num_blocks", "=", "self", ".", "stage1_num_blocks", "[", "0", "]", ",", "\n", "num_filters", "=", "self", ".", "stage1_num_channels", "[", "0", "]", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "\"layer2\"", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "tr1", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "[", "self", ".", "stage1_num_channels", "[", "0", "]", "*", "4", "]", ",", "\n", "out_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "name", "=", "\"tr1\"", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "st2", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage2_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage2_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage2_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st2\"", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "tr2", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "out_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "name", "=", "\"tr2\"", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "self", ".", "st3", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage3_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage3_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage3_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st3\"", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "tr3", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "out_channels", "=", "self", ".", "stage4_num_channels", ",", "\n", "name", "=", "\"tr3\"", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "self", ".", "st4", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage4_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage4_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage4_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage4_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st4\"", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet.forward": [[168, 188], ["hrnet.HRNet.conv_layer1_1", "feat_list.append", "hrnet.HRNet.conv_layer1_2", "hrnet.HRNet.la1", "hrnet.HRNet.tr1", "hrnet.HRNet.st2", "hrnet.HRNet.tr2", "hrnet.HRNet.st3", "hrnet.HRNet.tr3", "hrnet.HRNet.st4"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "[", "]", "\n", "conv1", "=", "self", ".", "conv_layer1_1", "(", "x", ")", "\n", "feat_list", ".", "append", "(", "conv1", ")", "\n", "conv2", "=", "self", ".", "conv_layer1_2", "(", "conv1", ")", "\n", "\n", "la1", "=", "self", ".", "la1", "(", "conv2", ")", "\n", "\n", "tr1", "=", "self", ".", "tr1", "(", "[", "la1", "]", ")", "\n", "st2", "=", "self", ".", "st2", "(", "tr1", ")", "\n", "\n", "tr2", "=", "self", ".", "tr2", "(", "st2", ")", "\n", "st3", "=", "self", ".", "st3", "(", "tr2", ")", "\n", "\n", "tr3", "=", "self", ".", "tr3", "(", "st3", ")", "\n", "st4", "=", "self", ".", "st4", "(", "tr3", ")", "\n", "\n", "feat_list", "=", "feat_list", "+", "st4", "\n", "\n", "return", "feat_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet.init_weight": [[189, 198], ["hrnet.HRNet.sublayers", "isinstance", "paddleseg.utils.utils.load_pretrained_model", "paddleseg.cvlibs.param_init.normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "normal_init", "(", "layer", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "layer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "layer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "layer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "", "", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.Layer1.__init__": [[201, 224], ["paddle.Layer.__init__", "range", "hrnet.Layer1.add_sublayer", "hrnet.Layer1.bottleneck_block_list.append", "hrnet.BottleneckBlock", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "num_blocks", ",", "\n", "has_se", "=", "False", ",", "\n", "name", "=", "None", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "Layer1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bottleneck_block_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "bottleneck_block", "=", "self", ".", "add_sublayer", "(", "\n", "\"bb_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "BottleneckBlock", "(", "\n", "num_channels", "=", "num_channels", "if", "i", "==", "0", "else", "num_filters", "*", "4", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "True", "if", "i", "==", "0", "else", "False", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "padding_same", "=", "padding_same", ")", ")", "\n", "self", ".", "bottleneck_block_list", ".", "append", "(", "bottleneck_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.Layer1.forward": [[225, 230], ["block_func"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv", "=", "x", "\n", "for", "block_func", "in", "self", ".", "bottleneck_block_list", ":", "\n", "            ", "conv", "=", "block_func", "(", "conv", ")", "\n", "", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.TransitionLayer.__init__": [[233, 262], ["paddle.Layer.__init__", "len", "len", "range", "hrnet.TransitionLayer.conv_bn_func_list.append", "hrnet.TransitionLayer.add_sublayer", "hrnet.TransitionLayer.add_sublayer", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "name", "=", "None", ",", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "TransitionLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_in", "=", "len", "(", "in_channels", ")", "\n", "num_out", "=", "len", "(", "out_channels", ")", "\n", "self", ".", "conv_bn_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_out", ")", ":", "\n", "            ", "residual", "=", "None", "\n", "if", "i", "<", "num_in", ":", "\n", "                ", "if", "in_channels", "[", "i", "]", "!=", "out_channels", "[", "i", "]", ":", "\n", "                    ", "residual", "=", "self", ".", "add_sublayer", "(", "\n", "\"transition_{}_layer_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "[", "i", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "residual", "=", "self", ".", "add_sublayer", "(", "\n", "\"transition_{}_layer_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "[", "-", "1", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "self", ".", "conv_bn_func_list", ".", "append", "(", "residual", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.TransitionLayer.forward": [[263, 274], ["enumerate", "outs.append", "len", "outs.append", "outs.append", "conv_bn_func", "conv_bn_func"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "for", "idx", ",", "conv_bn_func", "in", "enumerate", "(", "self", ".", "conv_bn_func_list", ")", ":", "\n", "            ", "if", "conv_bn_func", "is", "None", ":", "\n", "                ", "outs", ".", "append", "(", "x", "[", "idx", "]", ")", "\n", "", "else", ":", "\n", "                ", "if", "idx", "<", "len", "(", "x", ")", ":", "\n", "                    ", "outs", ".", "append", "(", "conv_bn_func", "(", "x", "[", "idx", "]", ")", ")", "\n", "", "else", ":", "\n", "                    ", "outs", ".", "append", "(", "conv_bn_func", "(", "x", "[", "-", "1", "]", ")", ")", "\n", "", "", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.Branches.__init__": [[277, 302], ["paddle.Layer.__init__", "range", "len", "hrnet.Branches.basic_block_list.append", "range", "hrnet.Branches.add_sublayer", "hrnet.Branches.basic_block_list[].append", "hrnet.BasicBlock", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_blocks", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "has_se", "=", "False", ",", "\n", "name", "=", "None", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "Branches", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "basic_block_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "out_channels", ")", ")", ":", "\n", "            ", "self", ".", "basic_block_list", ".", "append", "(", "[", "]", ")", "\n", "for", "j", "in", "range", "(", "num_blocks", "[", "i", "]", ")", ":", "\n", "                ", "in_ch", "=", "in_channels", "[", "i", "]", "if", "j", "==", "0", "else", "out_channels", "[", "i", "]", "\n", "basic_block_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"bb_{}_branch_layer_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ",", "j", "+", "1", ")", ",", "\n", "BasicBlock", "(", "\n", "num_channels", "=", "in_ch", ",", "\n", "num_filters", "=", "out_channels", "[", "i", "]", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", "+", "'_branch_layer_'", "+", "str", "(", "i", "+", "1", ")", "+", "'_'", "+", "\n", "str", "(", "j", "+", "1", ")", ",", "\n", "padding_same", "=", "padding_same", ")", ")", "\n", "self", ".", "basic_block_list", "[", "i", "]", ".", "append", "(", "basic_block_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.Branches.forward": [[303, 311], ["enumerate", "outs.append", "basic_block_func"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "for", "idx", ",", "input", "in", "enumerate", "(", "x", ")", ":", "\n", "            ", "conv", "=", "input", "\n", "for", "basic_block_func", "in", "self", ".", "basic_block_list", "[", "idx", "]", ":", "\n", "                ", "conv", "=", "basic_block_func", "(", "conv", ")", "\n", "", "outs", ".", "append", "(", "conv", ")", "\n", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.BottleneckBlock.__init__": [[314, 363], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.Add", "paddleseg.models.layers.Activation", "paddleseg.models.layers.ConvBN", "hrnet.SELayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "has_se", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "False", ",", "\n", "name", "=", "None", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "BottleneckBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv3", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "conv_down", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "self", ".", "se", "=", "SELayer", "(", "\n", "num_channels", "=", "num_filters", "*", "4", ",", "\n", "num_filters", "=", "num_filters", "*", "4", ",", "\n", "reduction_ratio", "=", "16", ",", "\n", "name", "=", "name", "+", "'_fc'", ")", "\n", "\n", "", "self", ".", "add", "=", "layers", ".", "Add", "(", ")", "\n", "self", ".", "relu", "=", "layers", ".", "Activation", "(", "\"relu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.BottleneckBlock.forward": [[364, 379], ["hrnet.BottleneckBlock.conv1", "hrnet.BottleneckBlock.conv2", "hrnet.BottleneckBlock.conv3", "hrnet.BottleneckBlock.add", "hrnet.BottleneckBlock.relu", "hrnet.BottleneckBlock.conv_down", "hrnet.BottleneckBlock.se"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "conv3", "=", "self", ".", "conv3", "(", "conv2", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "residual", "=", "self", ".", "conv_down", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "conv3", "=", "self", ".", "se", "(", "conv3", ")", "\n", "\n", "", "y", "=", "self", ".", "add", "(", "conv3", ",", "residual", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.BasicBlock.__init__": [[382, 425], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.Add", "paddleseg.models.layers.Activation", "paddleseg.models.layers.ConvBNReLU", "hrnet.SELayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "stride", "=", "1", ",", "\n", "has_se", "=", "False", ",", "\n", "downsample", "=", "False", ",", "\n", "name", "=", "None", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "conv_down", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "self", ".", "se", "=", "SELayer", "(", "\n", "num_channels", "=", "num_filters", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "reduction_ratio", "=", "16", ",", "\n", "name", "=", "name", "+", "'_fc'", ")", "\n", "\n", "", "self", ".", "add", "=", "layers", ".", "Add", "(", ")", "\n", "self", ".", "relu", "=", "layers", ".", "Activation", "(", "\"relu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.BasicBlock.forward": [[426, 440], ["hrnet.BasicBlock.conv1", "hrnet.BasicBlock.conv2", "hrnet.BasicBlock.add", "hrnet.BasicBlock.relu", "hrnet.BasicBlock.conv_down", "hrnet.BasicBlock.se"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "residual", "=", "self", ".", "conv_down", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "conv2", "=", "self", ".", "se", "(", "conv2", ")", "\n", "\n", "", "y", "=", "self", ".", "add", "(", "conv2", ",", "residual", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.SELayer.__init__": [[443, 464], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "int", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "math.sqrt", "math.sqrt", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "num_filters", ",", "reduction_ratio", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "pool2d_gap", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "\n", "self", ".", "_num_channels", "=", "num_channels", "\n", "\n", "med_ch", "=", "int", "(", "num_channels", "/", "reduction_ratio", ")", "\n", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "num_channels", "*", "1.0", ")", "\n", "self", ".", "squeeze", "=", "nn", ".", "Linear", "(", "\n", "num_channels", ",", "\n", "med_ch", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "stdv", ",", "stdv", ")", ")", ")", "\n", "\n", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "med_ch", "*", "1.0", ")", "\n", "self", ".", "excitation", "=", "nn", ".", "Linear", "(", "\n", "med_ch", ",", "\n", "num_filters", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "stdv", ",", "stdv", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.SELayer.forward": [[465, 476], ["hrnet.SELayer.pool2d_gap", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "hrnet.SELayer.squeeze", "paddle.relu", "paddle.relu", "paddle.relu", "hrnet.SELayer.excitation", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "pool", "=", "self", ".", "pool2d_gap", "(", "x", ")", "\n", "pool", "=", "paddle", ".", "reshape", "(", "pool", ",", "shape", "=", "[", "-", "1", ",", "self", ".", "_num_channels", "]", ")", "\n", "squeeze", "=", "self", ".", "squeeze", "(", "pool", ")", "\n", "squeeze", "=", "F", ".", "relu", "(", "squeeze", ")", "\n", "excitation", "=", "self", ".", "excitation", "(", "squeeze", ")", "\n", "excitation", "=", "F", ".", "sigmoid", "(", "excitation", ")", "\n", "excitation", "=", "paddle", ".", "reshape", "(", "\n", "excitation", ",", "shape", "=", "[", "-", "1", ",", "self", ".", "_num_channels", ",", "1", ",", "1", "]", ")", "\n", "out", "=", "x", "*", "excitation", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.Stage.__init__": [[479, 520], ["paddle.Layer.__init__", "range", "hrnet.Stage.stage_func_list.append", "hrnet.Stage.add_sublayer", "hrnet.Stage.add_sublayer", "hrnet.HighResolutionModule", "hrnet.HighResolutionModule", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_modules", ",", "\n", "num_blocks", ",", "\n", "num_filters", ",", "\n", "has_se", "=", "False", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "Stage", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_num_modules", "=", "num_modules", "\n", "\n", "self", ".", "stage_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_modules", ")", ":", "\n", "            ", "if", "i", "==", "num_modules", "-", "1", "and", "not", "multi_scale_output", ":", "\n", "                ", "stage_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"stage_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "HighResolutionModule", "(", "\n", "num_channels", "=", "num_channels", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "multi_scale_output", "=", "False", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", ")", "\n", "", "else", ":", "\n", "                ", "stage_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"stage_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "HighResolutionModule", "(", "\n", "num_channels", "=", "num_channels", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", ")", "\n", "\n", "", "self", ".", "stage_func_list", ".", "append", "(", "stage_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.Stage.forward": [[521, 526], ["range"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "\n", "for", "idx", "in", "range", "(", "self", ".", "_num_modules", ")", ":", "\n", "            ", "out", "=", "self", ".", "stage_func_list", "[", "idx", "]", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HighResolutionModule.__init__": [[529, 555], ["paddle.Layer.__init__", "hrnet.Branches", "hrnet.FuseLayers"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_blocks", ",", "\n", "num_filters", ",", "\n", "has_se", "=", "False", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "HighResolutionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "branches_func", "=", "Branches", "(", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "fuse_func", "=", "FuseLayers", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "multi_scale_output", "=", "multi_scale_output", ",", "\n", "name", "=", "name", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HighResolutionModule.forward": [[556, 560], ["hrnet.HighResolutionModule.branches_func", "hrnet.HighResolutionModule.fuse_func"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "branches_func", "(", "x", ")", "\n", "out", "=", "self", ".", "fuse_func", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.FuseLayers.__init__": [[563, 616], ["paddle.Layer.__init__", "range", "len", "range", "len", "hrnet.FuseLayers.add_sublayer", "hrnet.FuseLayers.residual_func_list.append", "paddleseg.models.layers.ConvBN", "range", "hrnet.FuseLayers.residual_func_list.append", "hrnet.FuseLayers.add_sublayer", "hrnet.FuseLayers.add_sublayer", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "FuseLayers", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_actual_ch", "=", "len", "(", "in_channels", ")", "if", "multi_scale_output", "else", "1", "\n", "self", ".", "_in_channels", "=", "in_channels", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "residual_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_actual_ch", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "in_channels", ")", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ",", "j", "+", "1", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "in_channels", "[", "j", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "residual_func_list", ".", "append", "(", "residual_func", ")", "\n", "", "elif", "j", "<", "i", ":", "\n", "                    ", "pre_num_filters", "=", "in_channels", "[", "j", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "if", "k", "==", "i", "-", "j", "-", "1", ":", "\n", "                            ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}_{}\"", ".", "format", "(", "\n", "name", ",", "i", "+", "1", ",", "j", "+", "1", ",", "k", "+", "1", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "pre_num_filters", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "pre_num_filters", "=", "out_channels", "[", "i", "]", "\n", "", "else", ":", "\n", "                            ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}_{}\"", ".", "format", "(", "\n", "name", ",", "i", "+", "1", ",", "j", "+", "1", ",", "k", "+", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "pre_num_filters", ",", "\n", "out_channels", "=", "out_channels", "[", "j", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "pre_num_filters", "=", "out_channels", "[", "j", "]", "\n", "", "self", ".", "residual_func_list", ".", "append", "(", "residual_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.FuseLayers.forward": [[617, 646], ["range", "range", "paddle.relu", "paddle.relu", "paddle.relu", "outs.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "len", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "residual_func_idx", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "_actual_ch", ")", ":", "\n", "            ", "residual", "=", "x", "[", "i", "]", "\n", "residual_shape", "=", "paddle", ".", "shape", "(", "residual", ")", "[", "-", "2", ":", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "self", ".", "_in_channels", ")", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "y", "=", "self", ".", "residual_func_list", "[", "residual_func_idx", "]", "(", "x", "[", "j", "]", ")", "\n", "residual_func_idx", "+=", "1", "\n", "\n", "y", "=", "F", ".", "interpolate", "(", "\n", "y", ",", "\n", "residual_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "residual", "=", "residual", "+", "y", "\n", "", "elif", "j", "<", "i", ":", "\n", "                    ", "y", "=", "x", "[", "j", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "y", "=", "self", ".", "residual_func_list", "[", "residual_func_idx", "]", "(", "y", ")", "\n", "residual_func_idx", "+=", "1", "\n", "\n", "", "residual", "=", "residual", "+", "y", "\n", "\n", "", "", "residual", "=", "F", ".", "relu", "(", "residual", ")", "\n", "outs", ".", "append", "(", "residual", ")", "\n", "\n", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W18_Small_V1": [[648, 665], ["hrnet.HRNet"], "function", ["None"], ["", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W18_Small_V1", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "1", "]", ",", "\n", "stage1_num_channels", "=", "[", "32", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "2", ",", "2", "]", ",", "\n", "stage2_num_channels", "=", "[", "16", ",", "32", "]", ",", "\n", "stage3_num_modules", "=", "1", ",", "\n", "stage3_num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "\n", "stage3_num_channels", "=", "[", "16", ",", "32", ",", "64", "]", ",", "\n", "stage4_num_modules", "=", "1", ",", "\n", "stage4_num_blocks", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "stage4_num_channels", "=", "[", "16", ",", "32", ",", "64", ",", "128", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W18_Small_V2": [[667, 684], ["hrnet.HRNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W18_Small_V2", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "2", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "2", ",", "2", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "3", ",", "\n", "stage3_num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n", "stage4_num_modules", "=", "2", ",", "\n", "stage4_num_blocks", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W18": [[686, 703], ["hrnet.HRNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W18", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W30": [[705, 722], ["hrnet.HRNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W30", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "30", ",", "60", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "30", ",", "60", ",", "120", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "30", ",", "60", ",", "120", ",", "240", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W32": [[724, 741], ["hrnet.HRNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W32", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "32", ",", "64", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "32", ",", "64", ",", "128", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "32", ",", "64", ",", "128", ",", "256", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W40": [[743, 760], ["hrnet.HRNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W40", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "40", ",", "80", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "40", ",", "80", ",", "160", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "40", ",", "80", ",", "160", ",", "320", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W44": [[762, 779], ["hrnet.HRNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W44", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "44", ",", "88", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "44", ",", "88", ",", "176", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "44", ",", "88", ",", "176", ",", "352", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W48": [[781, 798], ["hrnet.HRNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W48", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "48", ",", "96", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "48", ",", "96", ",", "192", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "48", ",", "96", ",", "192", ",", "384", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W60": [[800, 817], ["hrnet.HRNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W60", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "60", ",", "120", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "60", ",", "120", ",", "240", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "60", ",", "120", ",", "240", ",", "480", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.hrnet.HRNet_W64": [[819, 836], ["hrnet.HRNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W64", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "64", ",", "128", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "64", ",", "128", ",", "256", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.ConvBNLayer.__init__": [[47, 75], ["paddle.Layer.__init__", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.BatchNorm", "paddle.nn.BatchNorm", "paddle.nn.BatchNorm", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "filter_size", ",", "\n", "num_filters", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "channels", "=", "None", ",", "\n", "num_groups", "=", "1", ",", "\n", "name", "=", "None", ",", "\n", "use_cudnn", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConvBNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_conv", "=", "Conv2D", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "filter_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "num_groups", ",", "\n", "weight_attr", "=", "ParamAttr", "(", "name", "=", "name", "+", "\"_weights\"", ")", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "_batch_norm", "=", "BatchNorm", "(", "\n", "num_filters", ",", "\n", "param_attr", "=", "ParamAttr", "(", "name", "=", "name", "+", "\"_bn_scale\"", ")", ",", "\n", "bias_attr", "=", "ParamAttr", "(", "name", "=", "name", "+", "\"_bn_offset\"", ")", ",", "\n", "moving_mean_name", "=", "name", "+", "\"_bn_mean\"", ",", "\n", "moving_variance_name", "=", "name", "+", "\"_bn_variance\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.ConvBNLayer.forward": [[76, 82], ["mobilenet_v2.ConvBNLayer._conv", "mobilenet_v2.ConvBNLayer._batch_norm", "paddle.relu6", "paddle.relu6", "paddle.relu6"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "if_act", "=", "True", ")", ":", "\n", "        ", "y", "=", "self", ".", "_conv", "(", "inputs", ")", "\n", "y", "=", "self", ".", "_batch_norm", "(", "y", ")", "\n", "if", "if_act", ":", "\n", "            ", "y", "=", "F", ".", "relu6", "(", "y", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.InvertedResidualUnit.__init__": [[85, 116], ["paddle.Layer.__init__", "int", "mobilenet_v2.ConvBNLayer", "mobilenet_v2.ConvBNLayer", "mobilenet_v2.ConvBNLayer", "round"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "num_in_filter", ",", "num_filters", ",", "stride", ",", "\n", "filter_size", ",", "padding", ",", "expansion_factor", ",", "name", ")", ":", "\n", "        ", "super", "(", "InvertedResidualUnit", ",", "self", ")", ".", "__init__", "(", ")", "\n", "num_expfilter", "=", "int", "(", "round", "(", "num_in_filter", "*", "expansion_factor", ")", ")", "\n", "self", ".", "_expand_conv", "=", "ConvBNLayer", "(", "\n", "num_channels", "=", "num_channels", ",", "\n", "num_filters", "=", "num_expfilter", ",", "\n", "filter_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "num_groups", "=", "1", ",", "\n", "name", "=", "name", "+", "\"_expand\"", ")", "\n", "\n", "self", ".", "_bottleneck_conv", "=", "ConvBNLayer", "(", "\n", "num_channels", "=", "num_expfilter", ",", "\n", "num_filters", "=", "num_expfilter", ",", "\n", "filter_size", "=", "filter_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "num_groups", "=", "num_expfilter", ",", "\n", "use_cudnn", "=", "False", ",", "\n", "name", "=", "name", "+", "\"_dwise\"", ")", "\n", "\n", "self", ".", "_linear_conv", "=", "ConvBNLayer", "(", "\n", "num_channels", "=", "num_expfilter", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "filter_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "num_groups", "=", "1", ",", "\n", "name", "=", "name", "+", "\"_linear\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.InvertedResidualUnit.forward": [[117, 124], ["mobilenet_v2.InvertedResidualUnit._expand_conv", "mobilenet_v2.InvertedResidualUnit._bottleneck_conv", "mobilenet_v2.InvertedResidualUnit._linear_conv", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "ifshortcut", ")", ":", "\n", "        ", "y", "=", "self", ".", "_expand_conv", "(", "inputs", ",", "if_act", "=", "True", ")", "\n", "y", "=", "self", ".", "_bottleneck_conv", "(", "y", ",", "if_act", "=", "True", ")", "\n", "y", "=", "self", ".", "_linear_conv", "(", "y", ",", "if_act", "=", "False", ")", "\n", "if", "ifshortcut", ":", "\n", "            ", "y", "=", "paddle", ".", "add", "(", "inputs", ",", "y", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.InvresiBlocks.__init__": [[127, 154], ["paddle.Layer.__init__", "mobilenet_v2.InvertedResidualUnit", "range", "mobilenet_v2.InvresiBlocks.add_sublayer", "mobilenet_v2.InvresiBlocks._block_list.append", "str", "mobilenet_v2.InvertedResidualUnit", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "t", ",", "c", ",", "n", ",", "s", ",", "name", ")", ":", "\n", "        ", "super", "(", "InvresiBlocks", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_first_block", "=", "InvertedResidualUnit", "(", "\n", "num_channels", "=", "in_c", ",", "\n", "num_in_filter", "=", "in_c", ",", "\n", "num_filters", "=", "c", ",", "\n", "stride", "=", "s", ",", "\n", "filter_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "expansion_factor", "=", "t", ",", "\n", "name", "=", "name", "+", "\"_1\"", ")", "\n", "\n", "self", ".", "_block_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "n", ")", ":", "\n", "            ", "block", "=", "self", ".", "add_sublayer", "(", "\n", "name", "+", "\"_\"", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "sublayer", "=", "InvertedResidualUnit", "(", "\n", "num_channels", "=", "c", ",", "\n", "num_in_filter", "=", "c", ",", "\n", "num_filters", "=", "c", ",", "\n", "stride", "=", "1", ",", "\n", "filter_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "expansion_factor", "=", "t", ",", "\n", "name", "=", "name", "+", "\"_\"", "+", "str", "(", "i", "+", "1", ")", ")", ")", "\n", "self", ".", "_block_list", ".", "append", "(", "block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.InvresiBlocks.forward": [[155, 160], ["mobilenet_v2.InvresiBlocks._first_block", "block"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "y", "=", "self", ".", "_first_block", "(", "inputs", ",", "ifshortcut", "=", "False", ")", "\n", "for", "block", "in", "self", ".", "_block_list", ":", "\n", "            ", "y", "=", "block", "(", "y", ",", "ifshortcut", "=", "True", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.MobileNet.__init__": [[163, 219], ["paddle.Layer.__init__", "mobilenet_v2.ConvBNLayer", "int", "mobilenet_v2.ConvBNLayer", "mobilenet_v2.MobileNet.init_weight", "mobilenet_v2.MobileNet.add_sublayer", "mobilenet_v2.MobileNet.block_list.append", "int", "int", "int", "int", "str", "mobilenet_v2.InvresiBlocks", "int", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_channels", "=", "3", ",", "\n", "scale", "=", "1.0", ",", "\n", "pretrained", "=", "None", ",", "\n", "prefix_name", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", "MobileNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "bottleneck_params_list", "=", "[", "\n", "(", "1", ",", "16", ",", "1", ",", "1", ")", ",", "\n", "(", "6", ",", "24", ",", "2", ",", "2", ")", ",", "\n", "(", "6", ",", "32", ",", "3", ",", "2", ")", ",", "\n", "(", "6", ",", "64", ",", "4", ",", "2", ")", ",", "\n", "(", "6", ",", "96", ",", "3", ",", "1", ")", ",", "\n", "(", "6", ",", "160", ",", "3", ",", "2", ")", ",", "\n", "(", "6", ",", "320", ",", "1", ",", "1", ")", ",", "\n", "]", "\n", "\n", "self", ".", "conv1", "=", "ConvBNLayer", "(", "\n", "num_channels", "=", "input_channels", ",", "\n", "num_filters", "=", "int", "(", "32", "*", "scale", ")", ",", "\n", "filter_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "prefix_name", "+", "\"conv1_1\"", ")", "\n", "\n", "self", ".", "block_list", "=", "[", "]", "\n", "i", "=", "1", "\n", "in_c", "=", "int", "(", "32", "*", "scale", ")", "\n", "for", "layer_setting", "in", "bottleneck_params_list", ":", "\n", "            ", "t", ",", "c", ",", "n", ",", "s", "=", "layer_setting", "\n", "i", "+=", "1", "\n", "block", "=", "self", ".", "add_sublayer", "(", "\n", "prefix_name", "+", "\"conv\"", "+", "str", "(", "i", ")", ",", "\n", "sublayer", "=", "InvresiBlocks", "(", "\n", "in_c", "=", "in_c", ",", "\n", "t", "=", "t", ",", "\n", "c", "=", "int", "(", "c", "*", "scale", ")", ",", "\n", "n", "=", "n", ",", "\n", "s", "=", "s", ",", "\n", "name", "=", "prefix_name", "+", "\"conv\"", "+", "str", "(", "i", ")", ")", ")", "\n", "self", ".", "block_list", ".", "append", "(", "block", ")", "\n", "in_c", "=", "int", "(", "c", "*", "scale", ")", "\n", "\n", "", "self", ".", "out_c", "=", "int", "(", "1280", "*", "scale", ")", "if", "scale", ">", "1.0", "else", "1280", "\n", "self", ".", "conv9", "=", "ConvBNLayer", "(", "\n", "num_channels", "=", "in_c", ",", "\n", "num_filters", "=", "self", ".", "out_c", ",", "\n", "filter_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "name", "=", "prefix_name", "+", "\"conv9\"", ")", "\n", "\n", "self", ".", "feat_channels", "=", "[", "int", "(", "i", "*", "scale", ")", "for", "i", "in", "[", "16", ",", "24", ",", "32", ",", "96", ",", "1280", "]", "]", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.MobileNet.forward": [[220, 233], ["mobilenet_v2.MobileNet.conv1", "mobilenet_v2.MobileNet.conv9", "feat_list.append", "block", "feat_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "feat_list", "=", "[", "]", "\n", "y", "=", "self", ".", "conv1", "(", "inputs", ",", "if_act", "=", "True", ")", "\n", "\n", "block_index", "=", "0", "\n", "for", "block", "in", "self", ".", "block_list", ":", "\n", "            ", "y", "=", "block", "(", "y", ")", "\n", "if", "block_index", "in", "[", "0", ",", "1", ",", "2", ",", "4", "]", ":", "\n", "                ", "feat_list", ".", "append", "(", "y", ")", "\n", "", "block_index", "+=", "1", "\n", "", "y", "=", "self", ".", "conv9", "(", "y", ",", "if_act", "=", "True", ")", "\n", "feat_list", ".", "append", "(", "y", ")", "\n", "return", "feat_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.MobileNet.init_weight": [[234, 236], ["paddleseg.utils.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.mobilenet_v2.MobileNetV2": [[238, 242], ["mobilenet_v2.MobileNet"], "function", ["None"], ["", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "MobileNetV2", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNet", "(", "scale", "=", "1.0", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.MRSD.__init__": [[25, 28], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "eps", "=", "1e-6", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.MRSD.forward": [[29, 53], ["paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "len", "label.unsqueeze.unsqueeze.unsqueeze", "mask.unsqueeze.unsqueeze.astype", "loss.mean.mean.mean", "len", "mask.unsqueeze.unsqueeze.unsqueeze", "loss.mean.mean.sum", "mask.unsqueeze.unsqueeze.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logit (Tensor): Logit tensor, the data type is float32, float64.\n            label (Tensor): Label tensor, the data type is float32, float64. The shape should equal to logit.\n            mask (Tensor, optional): The mask where the loss valid. Default\uff1a None.\n        \"\"\"", "\n", "if", "len", "(", "label", ".", "shape", ")", "==", "3", ":", "\n", "            ", "label", "=", "label", ".", "unsqueeze", "(", "1", ")", "\n", "", "sd", "=", "paddle", ".", "square", "(", "logit", "-", "label", ")", "\n", "loss", "=", "paddle", ".", "sqrt", "(", "sd", "+", "self", ".", "eps", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "astype", "(", "'float32'", ")", "\n", "if", "len", "(", "mask", ".", "shape", ")", "==", "3", ":", "\n", "                ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", "\n", "", "loss", "=", "loss", "*", "mask", "\n", "loss", "=", "loss", ".", "sum", "(", ")", "/", "(", "mask", ".", "sum", "(", ")", "+", "self", ".", "eps", ")", "\n", "mask", ".", "stop_gradient", "=", "True", "\n", "", "else", ":", "\n", "            ", "loss", "=", "loss", ".", "mean", "(", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.GradientLoss.__init__": [[57, 61], ["paddle.Layer.__init__", "loss.GradientLoss.sobel_kernel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.GradientLoss.sobel_kernel"], ["    ", "def", "__init__", "(", "self", ",", "eps", "=", "1e-6", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "kernel_x", ",", "self", ".", "kernel_y", "=", "self", ".", "sobel_kernel", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.GradientLoss.forward": [[62, 77], ["len", "label.unsqueeze.unsqueeze.unsqueeze", "paddle.l1_loss", "paddle.l1_loss", "paddle.l1_loss", "len", "mask.unsqueeze.unsqueeze.unsqueeze", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "F.l1_loss.GradientLoss.sobel", "F.l1_loss.GradientLoss.sobel", "paddle.l1_loss", "paddle.l1_loss", "paddle.l1_loss", "mask.unsqueeze.unsqueeze.sum", "F.l1_loss.GradientLoss.sobel", "F.l1_loss.GradientLoss.sobel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.GradientLoss.sobel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.GradientLoss.sobel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.GradientLoss.sobel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.GradientLoss.sobel"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "if", "len", "(", "label", ".", "shape", ")", "==", "3", ":", "\n", "            ", "label", "=", "label", ".", "unsqueeze", "(", "1", ")", "\n", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "mask", ".", "shape", ")", "==", "3", ":", "\n", "                ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", "\n", "", "logit", "=", "logit", "*", "mask", "\n", "label", "=", "label", "*", "mask", "\n", "loss", "=", "paddle", ".", "sum", "(", "\n", "F", ".", "l1_loss", "(", "self", ".", "sobel", "(", "logit", ")", ",", "self", ".", "sobel", "(", "label", ")", ",", "'none'", ")", ")", "/", "(", "\n", "mask", ".", "sum", "(", ")", "+", "self", ".", "eps", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "F", ".", "l1_loss", "(", "self", ".", "sobel", "(", "logit", ")", ",", "self", ".", "sobel", "(", "label", ")", ",", "'mean'", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.GradientLoss.sobel": [[78, 96], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "ValueError", "len"], "methods", ["None"], ["", "def", "sobel", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Using Sobel to compute gradient. Return the magnitude.\"\"\"", "\n", "if", "not", "len", "(", "input", ".", "shape", ")", "==", "4", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid input shape, we expect NCHW, but it is \"", ",", "\n", "input", ".", "shape", ")", "\n", "\n", "", "n", ",", "c", ",", "h", ",", "w", "=", "input", ".", "shape", "\n", "\n", "input_pad", "=", "paddle", ".", "reshape", "(", "input", ",", "(", "n", "*", "c", ",", "1", ",", "h", ",", "w", ")", ")", "\n", "input_pad", "=", "F", ".", "pad", "(", "input_pad", ",", "pad", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'replicate'", ")", "\n", "\n", "grad_x", "=", "F", ".", "conv2d", "(", "input_pad", ",", "self", ".", "kernel_x", ",", "padding", "=", "0", ")", "\n", "grad_y", "=", "F", ".", "conv2d", "(", "input_pad", ",", "self", ".", "kernel_y", ",", "padding", "=", "0", ")", "\n", "\n", "mag", "=", "paddle", ".", "sqrt", "(", "grad_x", "*", "grad_x", "+", "grad_y", "*", "grad_y", "+", "self", ".", "eps", ")", "\n", "mag", "=", "paddle", ".", "reshape", "(", "mag", ",", "(", "n", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "\n", "return", "mag", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.GradientLoss.sobel_kernel": [[97, 107], ["paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "kernel_x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.transpose", "kernel_x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "kernel_y.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "kernel_x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.abs().sum", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "kernel_x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "kernel_y.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "kernel_x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.abs"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "def", "sobel_kernel", "(", "self", ")", ":", "\n", "        ", "kernel_x", "=", "paddle", ".", "to_tensor", "(", "[", "[", "-", "1.0", ",", "0.0", ",", "1.0", "]", ",", "[", "-", "2.0", ",", "0.0", ",", "2.0", "]", ",", "\n", "[", "-", "1.0", ",", "0.0", ",", "1.0", "]", "]", ")", ".", "astype", "(", "'float32'", ")", "\n", "kernel_x", "=", "kernel_x", "/", "kernel_x", ".", "abs", "(", ")", ".", "sum", "(", ")", "\n", "kernel_y", "=", "kernel_x", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "kernel_x", "=", "kernel_x", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "kernel_y", "=", "kernel_y", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "kernel_x", ".", "stop_gradient", "=", "True", "\n", "kernel_y", ".", "stop_gradient", "=", "True", "\n", "return", "kernel_x", ",", "kernel_y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.LaplacianLoss.__init__": [[116, 120], ["paddle.Layer.__init__", "loss.LaplacianLoss.build_gauss_kernel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.LaplacianLoss.build_gauss_kernel"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gauss_kernel", "=", "self", ".", "build_gauss_kernel", "(", "\n", "size", "=", "5", ",", "sigma", "=", "1.0", ",", "n_channels", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.LaplacianLoss.forward": [[121, 134], ["sum.LaplacianLoss.laplacian_pyramid", "sum.LaplacianLoss.laplacian_pyramid", "sum", "len", "label.unsqueeze.unsqueeze.unsqueeze", "len", "mask.unsqueeze.unsqueeze.unsqueeze", "paddle.l1_loss", "paddle.l1_loss", "paddle.l1_loss", "zip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.LaplacianLoss.laplacian_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.LaplacianLoss.laplacian_pyramid"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "if", "len", "(", "label", ".", "shape", ")", "==", "3", ":", "\n", "            ", "label", "=", "label", ".", "unsqueeze", "(", "1", ")", "\n", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "mask", ".", "shape", ")", "==", "3", ":", "\n", "                ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", "\n", "", "logit", "=", "logit", "*", "mask", "\n", "label", "=", "label", "*", "mask", "\n", "", "pyr_label", "=", "self", ".", "laplacian_pyramid", "(", "label", ",", "self", ".", "gauss_kernel", ",", "5", ")", "\n", "pyr_logit", "=", "self", ".", "laplacian_pyramid", "(", "logit", ",", "self", ".", "gauss_kernel", ",", "5", ")", "\n", "loss", "=", "sum", "(", "F", ".", "l1_loss", "(", "a", ",", "b", ")", "for", "a", ",", "b", "in", "zip", "(", "pyr_label", ",", "pyr_logit", ")", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.LaplacianLoss.build_gauss_kernel": [[135, 146], ["np.float32", "np.sum", "np.sum", "np.tile", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "ValueError", "gaussian", "np.exp"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.nonlocal2d.NonLocal2D.gaussian"], ["", "def", "build_gauss_kernel", "(", "self", ",", "size", "=", "5", ",", "sigma", "=", "1.0", ",", "n_channels", "=", "1", ")", ":", "\n", "        ", "if", "size", "%", "2", "!=", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\"kernel size must be uneven\"", ")", "\n", "", "grid", "=", "np", ".", "float32", "(", "np", ".", "mgrid", "[", "0", ":", "size", ",", "0", ":", "size", "]", ".", "T", ")", "\n", "gaussian", "=", "lambda", "x", ":", "np", ".", "exp", "(", "(", "x", "-", "size", "//", "2", ")", "**", "2", "/", "(", "-", "2", "*", "sigma", "**", "2", ")", ")", "**", "2", "\n", "kernel", "=", "np", ".", "sum", "(", "gaussian", "(", "grid", ")", ",", "axis", "=", "2", ")", "\n", "kernel", "/=", "np", ".", "sum", "(", "kernel", ")", "\n", "kernel", "=", "np", ".", "tile", "(", "kernel", ",", "(", "n_channels", ",", "1", ",", "1", ")", ")", "\n", "kernel", "=", "paddle", ".", "to_tensor", "(", "kernel", "[", ":", ",", "None", ",", ":", ",", ":", "]", ")", "\n", "kernel", ".", "stop_gradient", "=", "True", "\n", "return", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.LaplacianLoss.conv_gauss": [[147, 153], ["paddle.pad", "paddle.pad", "paddle.pad", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d"], "methods", ["None"], ["", "def", "conv_gauss", "(", "self", ",", "input", ",", "kernel", ")", ":", "\n", "        ", "n_channels", ",", "_", ",", "kh", ",", "kw", "=", "kernel", ".", "shape", "\n", "x", "=", "F", ".", "pad", "(", "input", ",", "(", "kh", "//", "2", ",", "kw", "//", "2", ",", "kh", "//", "2", ",", "kh", "//", "2", ")", ",", "mode", "=", "'replicate'", ")", "\n", "x", "=", "F", ".", "conv2d", "(", "x", ",", "kernel", ",", "groups", "=", "n_channels", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.LaplacianLoss.laplacian_pyramid": [[154, 164], ["range", "pyr.append", "loss.LaplacianLoss.conv_gauss", "pyr.append", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.loss.LaplacianLoss.conv_gauss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "laplacian_pyramid", "(", "self", ",", "input", ",", "kernel", ",", "max_levels", "=", "5", ")", ":", "\n", "        ", "current", "=", "input", "\n", "pyr", "=", "[", "]", "\n", "for", "level", "in", "range", "(", "max_levels", ")", ":", "\n", "            ", "filtered", "=", "self", ".", "conv_gauss", "(", "current", ",", "kernel", ")", "\n", "diff", "=", "current", "-", "filtered", "\n", "pyr", ".", "append", "(", "diff", ")", "\n", "current", "=", "F", ".", "avg_pool2d", "(", "filtered", ",", "2", ")", "\n", "", "pyr", ".", "append", "(", "current", ")", "\n", "return", "pyr", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.MODNet.__init__": [[41, 50], ["paddle.Layer.__init__", "modnet.MODNetHead", "modnet.MODNet.init_weight", "modnet.GaussianBlurLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "backbone", ",", "hr_channels", "=", "32", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "\n", "self", ".", "head", "=", "MODNetHead", "(", "\n", "hr_channels", "=", "hr_channels", ",", "backbone_channels", "=", "backbone", ".", "feat_channels", ")", "\n", "self", ".", "init_weight", "(", ")", "\n", "self", ".", "blurer", "=", "GaussianBlurLayer", "(", "1", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.MODNet.forward": [[51, 61], ["modnet.MODNet.backbone", "modnet.MODNet.head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        If training, return a dict.\n        If evaluation, return the final alpha prediction.\n        \"\"\"", "\n", "x", "=", "inputs", "[", "'img'", "]", "\n", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "y", "=", "self", ".", "head", "(", "inputs", "=", "inputs", ",", "feat_list", "=", "feat_list", ")", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.MODNet.loss": [[62, 144], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.MODNet.blurer", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.MODNet.blurer", "logit_dict[].clone", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddleseg.models.MSELoss", "paddleseg.models.MSELoss.", "collections.defaultdict", "loss_func_dict[].append", "loss_func_dict[].append", "loss_func_dict[].append", "loss_func_dict[].append", "paddle.where.numpy", "paddle.where.numpy", "paddle.where.numpy", "matte_con_sem_num[].squeeze", "logit_dict[].numpy", "semantic[].squeeze", "transition_mask.numpy.numpy.astype", "transition_mask.numpy.numpy.numpy", "cv2.imwrite", "cv2.imwrite", "cv2.imwrite", "paddleseg.models.MSELoss", "paddleseg.models.L1Loss", "paddleseg.models.L1Loss", "paddleseg.models.L1Loss", "mask.mean", "transition_mask[].squeeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "loss", "(", "self", ",", "logit_dict", ",", "label_dict", ",", "loss_func_dict", "=", "None", ")", ":", "\n", "        ", "if", "loss_func_dict", "is", "None", ":", "\n", "            ", "loss_func_dict", "=", "defaultdict", "(", "list", ")", "\n", "loss_func_dict", "[", "'semantic'", "]", ".", "append", "(", "paddleseg", ".", "models", ".", "MSELoss", "(", ")", ")", "\n", "loss_func_dict", "[", "'detail'", "]", ".", "append", "(", "paddleseg", ".", "models", ".", "L1Loss", "(", ")", ")", "\n", "loss_func_dict", "[", "'fusion'", "]", ".", "append", "(", "paddleseg", ".", "models", ".", "L1Loss", "(", ")", ")", "\n", "loss_func_dict", "[", "'fusion'", "]", ".", "append", "(", "paddleseg", ".", "models", ".", "L1Loss", "(", ")", ")", "\n", "\n", "", "loss", "=", "{", "}", "\n", "# semantic loss", "\n", "semantic_gt", "=", "F", ".", "interpolate", "(", "\n", "label_dict", "[", "'alpha'", "]", ",", "\n", "scale_factor", "=", "1", "/", "16", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "semantic_gt", "=", "self", ".", "blurer", "(", "semantic_gt", ")", "\n", "#         semantic_gt.stop_gradient=True", "\n", "loss", "[", "'semantic'", "]", "=", "loss_func_dict", "[", "'semantic'", "]", "[", "0", "]", "(", "logit_dict", "[", "'semantic'", "]", ",", "\n", "semantic_gt", ")", "\n", "\n", "# detail loss", "\n", "trimap", "=", "label_dict", "[", "'trimap'", "]", "\n", "mask", "=", "(", "trimap", "==", "128", ")", ".", "astype", "(", "'float32'", ")", "\n", "logit_detail", "=", "logit_dict", "[", "'detail'", "]", "*", "mask", "\n", "label_detail", "=", "label_dict", "[", "'alpha'", "]", "*", "mask", "\n", "loss_detail", "=", "loss_func_dict", "[", "'detail'", "]", "[", "0", "]", "(", "logit_detail", ",", "label_detail", ")", "\n", "loss_detail", "=", "loss_detail", "/", "(", "mask", ".", "mean", "(", ")", "+", "1e-6", ")", "\n", "loss", "[", "'detail'", "]", "=", "10", "*", "loss_detail", "\n", "\n", "# fusion loss", "\n", "matte", "=", "logit_dict", "[", "'matte'", "]", "\n", "alpha", "=", "label_dict", "[", "'alpha'", "]", "\n", "transition_mask", "=", "label_dict", "[", "'trimap'", "]", "==", "128", "\n", "matte_boundary", "=", "paddle", ".", "where", "(", "transition_mask", ",", "matte", ",", "alpha", ")", "\n", "# l1 loss", "\n", "loss_fusion_l1", "=", "loss_func_dict", "[", "'fusion'", "]", "[", "0", "]", "(", "\n", "matte", ",", "alpha", ")", "+", "4", "*", "loss_func_dict", "[", "'fusion'", "]", "[", "0", "]", "(", "matte_boundary", ",", "\n", "alpha", ")", "\n", "# composition loss", "\n", "loss_fusion_comp", "=", "loss_func_dict", "[", "'fusion'", "]", "[", "1", "]", "(", "\n", "matte", "*", "label_dict", "[", "'img'", "]", ",", "alpha", "*", "\n", "label_dict", "[", "'img'", "]", ")", "+", "4", "*", "loss_func_dict", "[", "'fusion'", "]", "[", "1", "]", "(", "\n", "matte_boundary", "*", "label_dict", "[", "'img'", "]", ",", "alpha", "*", "label_dict", "[", "'img'", "]", ")", "\n", "# consisten loss with semantic", "\n", "transition_mask", "=", "F", ".", "interpolate", "(", "\n", "label_dict", "[", "'trimap'", "]", ",", "\n", "scale_factor", "=", "1", "/", "16", ",", "\n", "mode", "=", "'nearest'", ",", "\n", "align_corners", "=", "False", ")", "\n", "transition_mask", "=", "transition_mask", "==", "128", "\n", "matte_con_sem", "=", "F", ".", "interpolate", "(", "\n", "matte", ",", "scale_factor", "=", "1", "/", "16", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "matte_con_sem", "=", "self", ".", "blurer", "(", "matte_con_sem", ")", "\n", "logit_semantic", "=", "logit_dict", "[", "'semantic'", "]", ".", "clone", "(", ")", "\n", "logit_semantic", ".", "stop_gradient", "=", "True", "\n", "matte_con_sem", "=", "paddle", ".", "where", "(", "transition_mask", ",", "logit_semantic", ",", "\n", "matte_con_sem", ")", "\n", "if", "False", ":", "\n", "            ", "import", "cv2", "\n", "matte_con_sem_num", "=", "matte_con_sem", ".", "numpy", "(", ")", "\n", "matte_con_sem_num", "=", "matte_con_sem_num", "[", "0", "]", ".", "squeeze", "(", ")", "\n", "matte_con_sem_num", "=", "(", "matte_con_sem_num", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "semantic", "=", "logit_dict", "[", "'semantic'", "]", ".", "numpy", "(", ")", "\n", "semantic", "=", "semantic", "[", "0", "]", ".", "squeeze", "(", ")", "\n", "semantic", "=", "(", "semantic", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "transition_mask", "=", "transition_mask", ".", "astype", "(", "'uint8'", ")", "\n", "transition_mask", "=", "transition_mask", ".", "numpy", "(", ")", "\n", "transition_mask", "=", "(", "transition_mask", "[", "0", "]", ".", "squeeze", "(", ")", ")", "*", "255", "\n", "cv2", ".", "imwrite", "(", "'matte_con.png'", ",", "matte_con_sem_num", ")", "\n", "cv2", ".", "imwrite", "(", "'semantic.png'", ",", "semantic", ")", "\n", "cv2", ".", "imwrite", "(", "'transition.png'", ",", "transition_mask", ")", "\n", "", "mse_loss", "=", "paddleseg", ".", "models", ".", "MSELoss", "(", ")", "\n", "loss_fusion_con_sem", "=", "mse_loss", "(", "matte_con_sem", ",", "logit_dict", "[", "'semantic'", "]", ")", "\n", "loss_fusion", "=", "loss_fusion_l1", "+", "loss_fusion_comp", "+", "loss_fusion_con_sem", "\n", "loss", "[", "'fusion'", "]", "=", "loss_fusion", "\n", "loss", "[", "'fusion_l1'", "]", "=", "loss_fusion_l1", "\n", "loss", "[", "'fusion_comp'", "]", "=", "loss_fusion_comp", "\n", "loss", "[", "'fusion_con_sem'", "]", "=", "loss_fusion_con_sem", "\n", "\n", "loss", "[", "'all'", "]", "=", "loss", "[", "'semantic'", "]", "+", "loss", "[", "'detail'", "]", "+", "loss", "[", "'fusion'", "]", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.MODNet.init_weight": [[145, 148], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.MODNetHead.__init__": [[151, 158], ["paddle.Layer.__init__", "modnet.LRBranch", "modnet.HRBranch", "modnet.FusionBranch", "modnet.MODNetHead.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["    ", "def", "__init__", "(", "self", ",", "hr_channels", ",", "backbone_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "lr_branch", "=", "LRBranch", "(", "backbone_channels", ")", "\n", "self", ".", "hr_branch", "=", "HRBranch", "(", "hr_channels", ",", "backbone_channels", ")", "\n", "self", ".", "f_branch", "=", "FusionBranch", "(", "hr_channels", ",", "backbone_channels", ")", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.MODNetHead.forward": [[159, 173], ["modnet.MODNetHead.lr_branch", "modnet.MODNetHead.hr_branch", "modnet.MODNetHead.f_branch"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "feat_list", ")", ":", "\n", "        ", "pred_semantic", ",", "lr8x", ",", "[", "enc2x", ",", "enc4x", "]", "=", "self", ".", "lr_branch", "(", "feat_list", ")", "\n", "pred_detail", ",", "hr2x", "=", "self", ".", "hr_branch", "(", "inputs", "[", "'img'", "]", ",", "enc2x", ",", "enc4x", ",", "lr8x", ")", "\n", "pred_matte", "=", "self", ".", "f_branch", "(", "inputs", "[", "'img'", "]", ",", "lr8x", ",", "hr2x", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "logit_dict", "=", "{", "\n", "'semantic'", ":", "pred_semantic", ",", "\n", "'detail'", ":", "pred_detail", ",", "\n", "'matte'", ":", "pred_matte", "\n", "}", "\n", "return", "logit_dict", "\n", "", "else", ":", "\n", "            ", "return", "pred_matte", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.MODNetHead.init_weight": [[174, 178], ["modnet.MODNetHead.sublayers", "isinstance", "paddleseg.cvlibs.param_init.kaiming_uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_uniform"], ["", "", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "kaiming_uniform", "(", "layer", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.FusionBranch.__init__": [[181, 199], ["paddle.Layer.__init__", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hr_channels", ",", "enc_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_lr4x", "=", "Conv2dIBNormRelu", "(", "\n", "enc_channels", "[", "2", "]", ",", "hr_channels", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "conv_f2x", "=", "Conv2dIBNormRelu", "(", "\n", "2", "*", "hr_channels", ",", "hr_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_f", "=", "nn", ".", "Sequential", "(", "\n", "Conv2dIBNormRelu", "(", "\n", "hr_channels", "+", "3", ",", "int", "(", "hr_channels", "/", "2", ")", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "Conv2dIBNormRelu", "(", "\n", "int", "(", "hr_channels", "/", "2", ")", ",", "\n", "1", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "with_ibn", "=", "False", ",", "\n", "with_relu", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.FusionBranch.forward": [[200, 214], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.FusionBranch.conv_lr4x", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.FusionBranch.conv_f2x", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.FusionBranch.conv_f", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ",", "lr8x", ",", "hr2x", ")", ":", "\n", "        ", "lr4x", "=", "F", ".", "interpolate", "(", "\n", "lr8x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "lr4x", "=", "self", ".", "conv_lr4x", "(", "lr4x", ")", "\n", "lr2x", "=", "F", ".", "interpolate", "(", "\n", "lr4x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "f2x", "=", "self", ".", "conv_f2x", "(", "paddle", ".", "concat", "(", "(", "lr2x", ",", "hr2x", ")", ",", "axis", "=", "1", ")", ")", "\n", "f", "=", "F", ".", "interpolate", "(", "\n", "f2x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "f", "=", "self", ".", "conv_f", "(", "paddle", ".", "concat", "(", "(", "f", ",", "img", ")", ",", "axis", "=", "1", ")", ")", "\n", "pred_matte", "=", "F", ".", "sigmoid", "(", "f", ")", "\n", "\n", "return", "pred_matte", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.HRBranch.__init__": [[221, 267], ["paddle.Layer.__init__", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "hr_channels", ",", "enc_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "tohr_enc2x", "=", "Conv2dIBNormRelu", "(", "\n", "enc_channels", "[", "0", "]", ",", "hr_channels", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv_enc2x", "=", "Conv2dIBNormRelu", "(", "\n", "hr_channels", "+", "3", ",", "hr_channels", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "tohr_enc4x", "=", "Conv2dIBNormRelu", "(", "\n", "enc_channels", "[", "1", "]", ",", "hr_channels", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv_enc4x", "=", "Conv2dIBNormRelu", "(", "\n", "2", "*", "hr_channels", ",", "2", "*", "hr_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv_hr4x", "=", "nn", ".", "Sequential", "(", "\n", "Conv2dIBNormRelu", "(", "\n", "2", "*", "hr_channels", "+", "enc_channels", "[", "2", "]", "+", "3", ",", "\n", "2", "*", "hr_channels", ",", "\n", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", ",", "\n", "Conv2dIBNormRelu", "(", "\n", "2", "*", "hr_channels", ",", "2", "*", "hr_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "Conv2dIBNormRelu", "(", "\n", "2", "*", "hr_channels", ",", "hr_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "conv_hr2x", "=", "nn", ".", "Sequential", "(", "\n", "Conv2dIBNormRelu", "(", "\n", "2", "*", "hr_channels", ",", "2", "*", "hr_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "Conv2dIBNormRelu", "(", "\n", "2", "*", "hr_channels", ",", "hr_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "Conv2dIBNormRelu", "(", "\n", "hr_channels", ",", "hr_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "Conv2dIBNormRelu", "(", "\n", "hr_channels", ",", "hr_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "conv_hr", "=", "nn", ".", "Sequential", "(", "\n", "Conv2dIBNormRelu", "(", "\n", "hr_channels", "+", "3", ",", "hr_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "Conv2dIBNormRelu", "(", "\n", "hr_channels", ",", "\n", "1", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "with_ibn", "=", "False", ",", "\n", "with_relu", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.HRBranch.forward": [[268, 296], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.HRBranch.tohr_enc2x", "modnet.HRBranch.conv_enc2x", "modnet.HRBranch.tohr_enc4x", "modnet.HRBranch.conv_enc4x", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.HRBranch.conv_hr4x", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.HRBranch.conv_hr2x", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.HRBranch.conv_hr", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ",", "enc2x", ",", "enc4x", ",", "lr8x", ")", ":", "\n", "        ", "img2x", "=", "F", ".", "interpolate", "(", "\n", "img", ",", "scale_factor", "=", "1", "/", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "img4x", "=", "F", ".", "interpolate", "(", "\n", "img", ",", "scale_factor", "=", "1", "/", "4", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "enc2x", "=", "self", ".", "tohr_enc2x", "(", "enc2x", ")", "\n", "hr4x", "=", "self", ".", "conv_enc2x", "(", "paddle", ".", "concat", "(", "(", "img2x", ",", "enc2x", ")", ",", "axis", "=", "1", ")", ")", "\n", "\n", "enc4x", "=", "self", ".", "tohr_enc4x", "(", "enc4x", ")", "\n", "hr4x", "=", "self", ".", "conv_enc4x", "(", "paddle", ".", "concat", "(", "(", "hr4x", ",", "enc4x", ")", ",", "axis", "=", "1", ")", ")", "\n", "\n", "lr4x", "=", "F", ".", "interpolate", "(", "\n", "lr8x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "hr4x", "=", "self", ".", "conv_hr4x", "(", "paddle", ".", "concat", "(", "(", "hr4x", ",", "lr4x", ",", "img4x", ")", ",", "axis", "=", "1", ")", ")", "\n", "\n", "hr2x", "=", "F", ".", "interpolate", "(", "\n", "hr4x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "hr2x", "=", "self", ".", "conv_hr2x", "(", "paddle", ".", "concat", "(", "(", "hr2x", ",", "enc2x", ")", ",", "axis", "=", "1", ")", ")", "\n", "\n", "pred_detail", "=", "None", "\n", "if", "self", ".", "training", ":", "\n", "            ", "hr", "=", "F", ".", "interpolate", "(", "\n", "hr2x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "hr", "=", "self", ".", "conv_hr", "(", "paddle", ".", "concat", "(", "(", "hr", ",", "img", ")", ",", "axis", "=", "1", ")", ")", "\n", "pred_detail", "=", "F", ".", "sigmoid", "(", "hr", ")", "\n", "\n", "", "return", "pred_detail", ",", "hr2x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.LRBranch.__init__": [[299, 314], ["paddle.Layer.__init__", "modnet.SEBlock", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu", "modnet.Conv2dIBNormRelu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "se_block", "=", "SEBlock", "(", "backbone_channels", "[", "4", "]", ",", "reduction", "=", "4", ")", "\n", "self", ".", "conv_lr16x", "=", "Conv2dIBNormRelu", "(", "\n", "backbone_channels", "[", "4", "]", ",", "backbone_channels", "[", "3", "]", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv_lr8x", "=", "Conv2dIBNormRelu", "(", "\n", "backbone_channels", "[", "3", "]", ",", "backbone_channels", "[", "2", "]", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv_lr", "=", "Conv2dIBNormRelu", "(", "\n", "backbone_channels", "[", "2", "]", ",", "\n", "1", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "with_ibn", "=", "False", ",", "\n", "with_relu", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.LRBranch.forward": [[315, 332], ["modnet.LRBranch.se_block", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.LRBranch.conv_lr16x", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "modnet.LRBranch.conv_lr8x", "modnet.LRBranch.conv_lr", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "enc2x", ",", "enc4x", ",", "enc32x", "=", "feat_list", "[", "0", "]", ",", "feat_list", "[", "1", "]", ",", "feat_list", "[", "4", "]", "\n", "\n", "enc32x", "=", "self", ".", "se_block", "(", "enc32x", ")", "\n", "lr16x", "=", "F", ".", "interpolate", "(", "\n", "enc32x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "lr16x", "=", "self", ".", "conv_lr16x", "(", "lr16x", ")", "\n", "lr8x", "=", "F", ".", "interpolate", "(", "\n", "lr16x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "lr8x", "=", "self", ".", "conv_lr8x", "(", "lr8x", ")", "\n", "\n", "pred_semantic", "=", "None", "\n", "if", "self", ".", "training", ":", "\n", "            ", "lr", "=", "self", ".", "conv_lr", "(", "lr8x", ")", "\n", "pred_semantic", "=", "F", ".", "sigmoid", "(", "lr", ")", "\n", "\n", "", "return", "pred_semantic", ",", "lr8x", ",", "[", "enc2x", ",", "enc4x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.IBNorm.__init__": [[339, 346], ["paddle.Layer.__init__", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bnorm_channels", "=", "in_channels", "//", "2", "\n", "self", ".", "inorm_channels", "=", "in_channels", "-", "self", ".", "bnorm_channels", "\n", "\n", "self", ".", "bnorm", "=", "nn", ".", "BatchNorm2D", "(", "self", ".", "bnorm_channels", ")", "\n", "self", ".", "inorm", "=", "nn", ".", "InstanceNorm2D", "(", "self", ".", "inorm_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.IBNorm.forward": [[347, 352], ["modnet.IBNorm.bnorm", "modnet.IBNorm.inorm", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "bn_x", "=", "self", ".", "bnorm", "(", "x", "[", ":", ",", ":", "self", ".", "bnorm_channels", ",", ":", ",", ":", "]", ")", "\n", "in_x", "=", "self", ".", "inorm", "(", "x", "[", ":", ",", "self", ".", "bnorm_channels", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "return", "paddle", ".", "concat", "(", "(", "bn_x", ",", "in_x", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.Conv2dIBNormRelu.__init__": [[359, 392], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.append", "paddleseg.models.layers.append", "modnet.IBNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "None", ",", "\n", "with_ibn", "=", "True", ",", "\n", "with_relu", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "]", "\n", "\n", "if", "with_ibn", ":", "\n", "            ", "layers", ".", "append", "(", "IBNorm", "(", "out_channels", ")", ")", "\n", "\n", "", "if", "with_relu", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.Conv2dIBNormRelu.forward": [[393, 395], ["modnet.Conv2dIBNormRelu.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layers", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.SEBlock.__init__": [[402, 418], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_channels", ",", "reduction", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "num_channels", ",", "\n", "int", "(", "num_channels", "//", "reduction", ")", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "int", "(", "num_channels", "//", "reduction", ")", ",", "\n", "num_channels", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.SEBlock.forward": [[419, 423], ["modnet.SEBlock.pool", "modnet.SEBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "w", "=", "self", ".", "pool", "(", "x", ")", "\n", "w", "=", "self", ".", "conv", "(", "w", ")", "\n", "return", "w", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.GaussianBlurLayer.__init__": [[431, 457], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "modnet.GaussianBlurLayer._init_kernel", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.GaussianBlurLayer._init_kernel"], ["def", "__init__", "(", "self", ",", "channels", ",", "kernel_size", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            channels (int): Channel for input tensor\n            kernel_size (int): Size of the kernel used in blurring\n        \"\"\"", "\n", "\n", "super", "(", "GaussianBlurLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "assert", "self", ".", "kernel_size", "%", "2", "!=", "0", "\n", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Pad2D", "(", "\n", "int", "(", "self", ".", "kernel_size", "/", "2", ")", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "channels", ",", "\n", "channels", ",", "\n", "self", ".", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ",", "\n", "groups", "=", "channels", ")", ")", "\n", "\n", "self", ".", "_init_kernel", "(", ")", "\n", "self", ".", "op", "[", "1", "]", ".", "weight", ".", "stop_gradient", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.GaussianBlurLayer.forward": [[458, 476], ["modnet.GaussianBlurLayer.op", "print", "exit", "len", "print", "exit", "list"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x (paddle.Tensor): input 4D tensor\n        Returns:\n            paddle.Tensor: Blurred version of the input\n        \"\"\"", "\n", "\n", "if", "not", "len", "(", "list", "(", "x", ".", "shape", ")", ")", "==", "4", ":", "\n", "            ", "print", "(", "'\\'GaussianBlurLayer\\' requires a 4D tensor as input\\n'", ")", "\n", "exit", "(", ")", "\n", "", "elif", "not", "x", ".", "shape", "[", "1", "]", "==", "self", ".", "channels", ":", "\n", "            ", "print", "(", "'In \\'GaussianBlurLayer\\', the required channel ({0}) is'", "\n", "'not the same as input ({1})\\n'", ".", "format", "(", "self", ".", "channels", ",", "x", ".", "shape", "[", "\n", "1", "]", ")", ")", "\n", "exit", "(", ")", "\n", "\n", "", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.modnet.GaussianBlurLayer._init_kernel": [[477, 487], ["numpy.zeros", "int", "scipy.ndimage.gaussian_filter", "kernel.astype.astype.astype", "paddle.assign", "paddle.assign", "paddle.assign", "paddle.assign", "paddle.assign", "paddle.assign", "paddle.assign", "paddle.assign", "paddle.assign"], "methods", ["None"], ["", "def", "_init_kernel", "(", "self", ")", ":", "\n", "        ", "sigma", "=", "0.3", "*", "(", "(", "self", ".", "kernel_size", "-", "1", ")", "*", "0.5", "-", "1", ")", "+", "0.8", "\n", "\n", "n", "=", "np", ".", "zeros", "(", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", ")", "\n", "i", "=", "int", "(", "self", ".", "kernel_size", "/", "2", ")", "\n", "n", "[", "i", ",", "i", "]", "=", "1", "\n", "kernel", "=", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "n", ",", "sigma", ")", "\n", "kernel", "=", "kernel", ".", "astype", "(", "'float32'", ")", "\n", "kernel", "=", "kernel", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "paddle", ".", "assign", "(", "kernel", ",", "self", ".", "op", "[", "1", "]", ".", "weight", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.ops.DistMaps.__init__": [[26, 40], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "norm_radius", ",", "\n", "spatial_scale", "=", "1.0", ",", "\n", "cpu_mode", "=", "True", ",", "\n", "use_disks", "=", "False", ")", ":", "\n", "        ", "super", "(", "DistMaps", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "spatial_scale", "=", "spatial_scale", "\n", "self", ".", "norm_radius", "=", "norm_radius", "\n", "self", ".", "cpu_mode", "=", "cpu_mode", "\n", "self", ".", "use_disks", "=", "use_disks", "\n", "\n", "if", "self", ".", "cpu_mode", ":", "\n", "            ", "from", "util", ".", "cython", "import", "get_dist_maps", "\n", "\n", "self", ".", "_get_dist_maps", "=", "get_dist_maps", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.ops.DistMaps.get_coord_features": [[41, 90], ["range", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "points.reshape.reshape.reshape", "paddle.split", "paddle.split", "paddle.split", "paddle.split", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.unsqueeze().tile", "paddle.unsqueeze().tile", "paddle.unsqueeze().tile", "paddle.unsqueeze().tile", "invalid_points.numpy.numpy.numpy", "paddle.tanh.reshape", "paddle.tanh.reshape", "paddle.min", "paddle.min", "paddle.min", "paddle.min", "paddle.tanh.reshape", "paddle.tanh.reshape", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh.append", "paddle.tanh.append", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "ops.DistMaps._get_dist_maps", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "points[].numpy().astype", "numpy.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "points[].numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["\n", "", "", "def", "get_coord_features", "(", "self", ",", "points", ",", "batchsize", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "if", "self", ".", "cpu_mode", ":", "\n", "            ", "coords", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batchsize", ")", ":", "\n", "                ", "norm_delimeter", "=", "(", "1.0", "if", "self", ".", "use_disks", "else", "\n", "self", ".", "spatial_scale", "*", "self", ".", "norm_radius", ")", "\n", "coords", ".", "append", "(", "\n", "self", ".", "_get_dist_maps", "(", "points", "[", "i", "]", ".", "numpy", "(", ")", ".", "astype", "(", "\"float32\"", ")", ",", "\n", "rows", ",", "cols", ",", "norm_delimeter", ")", ")", "\n", "", "coords", "=", "paddle", ".", "to_tensor", "(", "np", ".", "stack", "(", "\n", "coords", ",", "axis", "=", "0", ")", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "", "else", ":", "\n", "            ", "num_points", "=", "points", ".", "shape", "[", "1", "]", "//", "2", "\n", "points", "=", "points", ".", "reshape", "(", "[", "-", "1", ",", "points", ".", "shape", "[", "2", "]", "]", ")", "\n", "points", ",", "points_order", "=", "paddle", ".", "split", "(", "points", ",", "[", "2", ",", "1", "]", ",", "axis", "=", "1", ")", "\n", "invalid_points", "=", "paddle", ".", "max", "(", "points", ",", "axis", "=", "1", ",", "keepdim", "=", "False", ")", "<", "0", "\n", "row_array", "=", "paddle", ".", "arange", "(", "\n", "start", "=", "0", ",", "end", "=", "rows", ",", "step", "=", "1", ",", "dtype", "=", "\"float32\"", ")", "\n", "col_array", "=", "paddle", ".", "arange", "(", "\n", "start", "=", "0", ",", "end", "=", "cols", ",", "step", "=", "1", ",", "dtype", "=", "\"float32\"", ")", "\n", "\n", "coord_rows", ",", "coord_cols", "=", "paddle", ".", "meshgrid", "(", "row_array", ",", "col_array", ")", "\n", "coords", "=", "paddle", ".", "unsqueeze", "(", "\n", "paddle", ".", "stack", "(", "\n", "[", "coord_rows", ",", "coord_cols", "]", ",", "axis", "=", "0", ")", ",", "\n", "axis", "=", "0", ")", ".", "tile", "(", "[", "points", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "\n", "add_xy", "=", "(", "points", "*", "self", ".", "spatial_scale", ")", ".", "reshape", "(", "\n", "[", "points", ".", "shape", "[", "0", "]", ",", "points", ".", "shape", "[", "1", "]", ",", "1", ",", "1", "]", ")", "\n", "coords", "=", "coords", "-", "add_xy", "\n", "if", "not", "self", ".", "use_disks", ":", "\n", "                ", "coords", "=", "coords", "/", "(", "self", ".", "norm_radius", "*", "self", ".", "spatial_scale", ")", "\n", "\n", "", "coords", "=", "coords", "*", "coords", "\n", "coords", "[", ":", ",", "0", "]", "+=", "coords", "[", ":", ",", "1", "]", "\n", "coords", "=", "coords", "[", ":", ",", ":", "1", "]", "\n", "invalid_points", "=", "invalid_points", ".", "numpy", "(", ")", "\n", "\n", "coords", "[", "invalid_points", ",", ":", ",", ":", ",", ":", "]", "=", "1e6", "\n", "coords", "=", "coords", ".", "reshape", "(", "[", "-", "1", ",", "num_points", ",", "1", ",", "rows", ",", "cols", "]", ")", "\n", "coords", "=", "paddle", ".", "min", "(", "coords", ",", "axis", "=", "1", ")", "\n", "coords", "=", "coords", ".", "reshape", "(", "[", "-", "1", ",", "2", ",", "rows", ",", "cols", "]", ")", "\n", "\n", "", "if", "self", ".", "use_disks", ":", "\n", "            ", "coords", "=", "(", "\n", "coords", "<=", "\n", "(", "self", ".", "norm_radius", "*", "self", ".", "spatial_scale", ")", "**", "2", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "", "else", ":", "\n", "            ", "coords", "=", "paddle", ".", "tanh", "(", "paddle", ".", "sqrt", "(", "coords", ")", "*", "2", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.ops.DistMaps.forward": [[91, 94], ["ops.DistMaps.get_coord_features"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.DistMaps.get_coord_features"], ["", "return", "coords", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "coords", ")", ":", "\n", "        ", "return", "self", ".", "get_coord_features", "(", "coords", ",", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.ops.ScaleLayer.__init__": [[97, 104], ["paddle.Layer.__init__", "ops.ScaleLayer.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["\n", "", "", "class", "ScaleLayer", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "init_value", "=", "1.0", ",", "lr_mult", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lr_mult", "=", "lr_mult", "\n", "self", ".", "scale", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "[", "1", "]", ",", "\n", "dtype", "=", "\"float32\"", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.ops.ScaleLayer.forward": [[105, 108], ["paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs"], "methods", ["None"], ["default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "init_value", "/", "lr_mult", ")", ",", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "scale", "=", "paddle", ".", "abs", "(", "self", ".", "scale", "*", "self", ".", "lr_mult", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.ops.BatchImageNormalize.__init__": [[111, 118], ["paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["\n", "", "", "class", "BatchImageNormalize", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "array", "(", "mean", ")", "[", "np", ".", "newaxis", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", ")", ".", "astype", "(", "\n", "\"float32\"", ")", "\n", "self", ".", "std", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "array", "(", "std", ")", "[", "np", ".", "newaxis", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", ")", ".", "astype", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.ops.BatchImageNormalize.__call__": [[119, 122], ["None"], "methods", ["None"], ["\"float32\"", ")", "\n", "\n", "", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "tensor", "=", "(", "tensor", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.partition_list": [[34, 38], ["int", "math.ceil", "range", "len", "float", "len"], "function", ["None"], ["dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.save_result": [[36, 68], ["os.path.dirname", "os.path.basename", "os.path.join", "os.path.join", "alpha.astype.astype", "cv2.imwrite", "cv2.imread", "fg.astype.astype", "numpy.concatenate", "cv2.imwrite", "os.path.exists", "os.makedirs", "os.path.splitext", "cv2.imread", "utils.estimate_foreground_ml"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.estimate_foreground_ml.estimate_foreground_ml"], ["type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The image to predict, which can be a path of image, or a file list containing image paths, or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.reverse_transform": [[70, 82], ["paddle.interpolate", "Exception"], "function", ["None"], ["'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.preprocess": [[84, 99], ["transforms", "paddle.to_tensor", "paddle.to_tensor", "data[].unsqueeze", "paddle.to_tensor", "paddle.to_tensor", "data[].unsqueeze"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# custom color map", "\n", "parser", ".", "add_argument", "(", "\n", "'--custom_color'", ",", "\n", "dest", "=", "'custom_color'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.predict": [[59, 190], ["paddleseg.utils.utils.load_entire_model", "model.eval", "paddle.distributed.get_world_size", "paddle.distributed.get_rank", "os.path.join", "os.path.join", "os.path.join", "utils.cityscape_colormap", "paddleseg.utils.logger.info", "paddleseg.utils.progbar.Progbar", "predict.partition_list", "paddle.no_grad", "enumerate", "len", "cv2.imread", "transforms", "paddle.to_tensor", "core.infer.inference", "semantic.squeeze().numpy.squeeze().numpy", "instance.squeeze().numpy.squeeze().numpy", "panoptic.squeeze().numpy.squeeze().numpy", "predict.get_save_name", "os.path.join", "predict.mkdir", "utils.visualize_semantic", "predict.add_info_to_save_path", "utils.visualize_semantic", "panoptic.squeeze().numpy.copy", "predict.add_info_to_save_path", "utils.visualize_semantic", "predict.add_info_to_save_path", "utils.visualize_semantic", "panoptic.squeeze().numpy.copy", "os.path.join", "predict.mkdir", "utils.visualize_instance", "predict.add_info_to_save_path", "utils.visualize_instance", "os.path.join", "predict.mkdir", "utils.visualize_panoptic", "predict.add_info_to_save_path", "utils.visualize_panoptic", "progbar.Progbar.update", "semantic.squeeze().numpy.squeeze", "instance.squeeze().numpy.squeeze", "panoptic.squeeze().numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.cityscape_colormap", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble.partition_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.get_save_name", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_semantic", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.add_info_to_save_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_semantic", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.add_info_to_save_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_semantic", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.add_info_to_save_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_semantic", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_instance", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.add_info_to_save_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_instance", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_panoptic", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.add_info_to_save_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.visualize.visualize_panoptic", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], ["dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# custom color map", "\n", "parser", ".", "add_argument", "(", "\n", "'--custom_color'", ",", "\n", "dest", "=", "'custom_color'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Save images with a custom color map. Default: None, use paddleseg\\'s default color map.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# set device", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "get_test_config", "(", "cfg", ",", "args", ")", ":", "\n", "\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "'aug_eval'", "in", "test_config", ":", "\n", "        ", "test_config", ".", "pop", "(", "'aug_eval'", ")", "\n", "", "if", "args", ".", "aug_pred", ":", "\n", "        ", "test_config", "[", "'aug_pred'", "]", "=", "args", ".", "aug_pred", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "\n", "", "if", "args", ".", "flip_horizontal", ":", "\n", "        ", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "\n", "", "if", "args", ".", "flip_vertical", ":", "\n", "        ", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "if", "args", ".", "custom_color", ":", "\n", "        ", "test_config", "[", "'custom_color'", "]", "=", "args", ".", "custom_color", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "transforms", "=", "Compose", "(", "cfg", ".", "val_transforms", ")", "\n", "image_list", ",", "image_dir", "=", "get_image_list", "(", "args", ".", "image_path", ")", "\n", "logger", ".", "info", "(", "'Number of predict images = {}'", ".", "format", "(", "len", "(", "image_list", ")", ")", ")", "\n", "\n", "test_config", "=", "get_test_config", "(", "cfg", ",", "args", ")", "\n", "\n", "predict", "(", "\n", "model", ",", "\n", "model_path", "=", "args", ".", "model_path", ",", "\n", "transforms", "=", "transforms", ",", "\n", "image_list", "=", "image_list", ",", "\n", "image_dir", "=", "image_dir", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "**", "test_config", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "main", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.train.visual_in_traning": [[29, 55], ["vis_dict.items", "paddle.transpose", "paddle.transpose", "paddle.min", "paddle.min", "paddle.max", "paddle.max", "value.unsqueeze.astype", "value.unsqueeze.numpy", "log_writer.add_image", "value.unsqueeze.unsqueeze"], "function", ["None"], ["parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.train.get_best": [[57, 67], ["os.path.exists", "open", "pickle.load"], "function", ["None"], ["dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.train.train": [[30, 275], ["paddle.jit.to_static.train", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DataLoader", "paddle.io.DataLoader", "numpy.array", "len", "medicalseg.utils.TimeAverager", "medicalseg.utils.TimeAverager", "collections.deque", "time.time", "time.sleep", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "medicalseg.utils.resume", "os.path.isdir", "os.path.exists", "os.makedirs", "paddle.distributed.fleet.init", "paddle.distributed.fleet.init", "paddle.distributed.fleet.distributed_optimizer", "paddle.distributed.fleet.distributed_optimizer", "paddle.distributed.fleet.distributed_model", "paddle.distributed.fleet.distributed_model", "LogWriter", "paddle.jit.to_static", "paddle.jit.to_static", "medicalseg.utils.logger.info", "paddle.flops", "paddle.flops", "LogWriter.close", "os.remove", "medicalseg.utils.TimeAverager.record", "data[].astype", "medicalseg.utils.loss_computation", "sum", "sum.backward", "paddle.distributed.fleet.distributed_optimizer.step", "paddle.distributed.fleet.distributed_optimizer.get_lr", "isinstance", "isinstance", "medicalseg.utils.train_profiler.add_profiler_step", "paddle.jit.to_static.clear_gradients", "medicalseg.utils.TimeAverager.record", "time.time", "hasattr", "images.transpose.transpose", "paddle.distributed.fleet.distributed_model.", "paddle.jit.to_static.", "lr_sche.step", "sum.numpy", "numpy.mean", "len", "range", "medicalseg.utils.TimeAverager.get_average", "medicalseg.utils.TimeAverager.get_average", "medicalseg.utils.calculate_eta", "medicalseg.utils.logger.info", "numpy.array", "medicalseg.utils.TimeAverager.reset", "medicalseg.utils.TimeAverager.reset", "medicalseg.core.val.evaluate", "paddle.jit.to_static.train", "os.path.join", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "collections.deque.append", "time.time", "l.numpy", "len", "loss_list[].numpy", "time.time", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "os.path.isdir", "os.makedirs", "paddle.jit.to_static.state_dict", "os.path.join", "paddle.distributed.fleet.distributed_optimizer.state_dict", "os.path.join", "len", "collections.deque.popleft", "shutil.rmtree", "medicalseg.utils.logger.info", "medicalseg.utils.TimeAverager.get_ips_average", "len", "enumerate", "os.path.join", "paddle.save", "paddle.save", "LogWriter.add_scalar", "LogWriter.add_scalar", "paddle.jit.to_static.state_dict", "os.path.join", "LogWriter.add_scalar"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.resume", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.loss_computation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.train_profiler.add_profiler_step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.calculate_eta", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_ips_average"], ["\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "=", "\"Auto mixed precision level. Accepted values are \u201cO1\u201d and \u201cO2\u201d: O1 represent mixed precision, the input \\\n                data type of each operator will be casted by white_list and black_list; O2 represent Pure fp16, all operators \\\n                parameters and input data will be casted to fp16, except operators in black_list, don\u2019t support fp16 kernel \\\n                and batchnorm. Default is O1(amp)\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "train_dataset", "=", "cfg", ".", "train_dataset", "\n", "if", "train_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "", "elif", "len", "(", "train_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of train_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "", "val_dataset", "=", "cfg", ".", "val_dataset", "if", "args", ".", "do_eval", "else", "None", "\n", "losses", "=", "cfg", ".", "loss", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "config_check", "(", "cfg", ",", "train_dataset", "=", "train_dataset", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "if", "place", "==", "'gpu'", "and", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "nranks", ">", "1", ":", "\n", "# convert bn to sync_bn", "\n", "        ", "cfg", ".", "_model", "=", "paddle", ".", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "cfg", ".", "model", ")", "\n", "\n", "", "train", "(", "\n", "cfg", ".", "model", ",", "\n", "train_dataset", ",", "\n", "val_dataset", "=", "val_dataset", ",", "\n", "optimizer", "=", "cfg", ".", "optimizer", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "iters", "=", "cfg", ".", "iters", ",", "\n", "batch_size", "=", "cfg", ".", "batch_size", ",", "\n", "resume_model", "=", "args", ".", "resume_model", ",", "\n", "save_interval", "=", "args", ".", "save_interval", ",", "\n", "log_iters", "=", "args", ".", "log_iters", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "use_vdl", "=", "args", ".", "use_vdl", ",", "\n", "losses", "=", "losses", ",", "\n", "keep_checkpoint_max", "=", "args", ".", "keep_checkpoint_max", ",", "\n", "test_config", "=", "cfg", ".", "test_config", ",", "\n", "precision", "=", "args", ".", "precision", ",", "\n", "amp_level", "=", "args", ".", "amp_level", ",", "\n", "profiler_options", "=", "args", ".", "profiler_options", ",", "\n", "to_static_training", "=", "cfg", ".", "to_static_training", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "main", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.val.save_alpha_pred": [[29, 39], ["os.path.dirname", "alpha.astype.astype", "cv2.imwrite", "os.path.exists", "os.makedirs"], "function", ["None"], ["        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.val.reverse_transform": [[41, 53], ["paddle.interpolate", "Exception"], "function", ["None"], ["\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.val.evaluate": [[29, 188], ["dict", "model.eval", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DataLoader", "paddle.io.DataLoader", "len", "medicalseg.utils.progbar.Progbar", "medicalseg.utils.TimeAverager", "medicalseg.utils.TimeAverager", "time.time", "numpy.array", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "open", "json.load", "medicalseg.utils.logger.info", "paddle.no_grad", "paddle.no_grad", "enumerate", "medicalseg.utils.metric.auc_roc", "medicalseg.utils.logger.info", "medicalseg.utils.logger.info", "paddle.distributed.parallel.parallel_helper._is_parallel_ctx_initialized", "paddle.distributed.parallel.parallel_helper._is_parallel_ctx_initialized", "paddle.distributed.init_parallel_env", "paddle.distributed.init_parallel_env", "medicalseg.utils.TimeAverager.record", "label.astype.astype", "medicalseg.core.infer.inference", "medicalseg.utils.loss_computation", "sum", "sum.numpy", "numpy.mean", "medicalseg.utils.TimeAverager.record", "medicalseg.utils.TimeAverager.get_average", "medicalseg.utils.TimeAverager.get_average", "medicalseg.utils.TimeAverager.reset", "medicalseg.utils.TimeAverager.reset", "time.time", "len", "len", "paddle.softmax", "medicalseg.utils.save_array", "progbar.Progbar.update", "str", "time.time", "F.softmax.numpy", "label.astype.numpy", "numpy.concatenate", "numpy.concatenate", "time.time", "len", "numpy.round", "[].split", "os.path.join", "F.softmax.numpy", "label.astype.numpy", "str", "pred.numpy", "label.astype.numpy", "im.numpy", "idx[].split"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.auc_roc", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.loss_computation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_array", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], ["        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--auc_roc'", ",", "\n", "dest", "=", "'add auc_roc metric'", ",", "\n", "help", "=", "'Whether to use auc_roc metric'", ",", "\n", "type", "=", "bool", ",", "\n", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "val_dataset", "=", "cfg", ".", "val_dataset", "\n", "if", "val_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The verification dataset is not specified in the configuration file.'", "\n", ")", "\n", "", "elif", "len", "(", "val_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of val_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "\n", "", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "utils", ".", "load_entire_model", "(", "model", ",", "args", ".", "model_path", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully'", ")", "\n", "\n", "", "test_config", "=", "get_test_config", "(", "cfg", ",", "args", ")", "\n", "config_check", "(", "cfg", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "evaluate", "(", "model", ",", "val_dataset", ",", "num_workers", "=", "args", ".", "num_workers", ",", "**", "test_config", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "main", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.mkdir": [[28, 32], ["os.path.dirname", "os.path.exists", "os.makedirs"], "function", ["None"], ["\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.train.check_logits_losses": [[27, 34], ["len", "len", "RuntimeError"], "function", ["None"], ["    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.train.loss_computation": [[36, 66], ["center_weights.unsqueeze().expand_as.unsqueeze().expand_as", "offset_weights.unsqueeze().expand_as.unsqueeze().expand_as", "center_loss.sum", "offset_weights.unsqueeze().expand_as.sum", "center_weights.unsqueeze().expand_as.unsqueeze", "center_loss.sum", "center_weights.unsqueeze().expand_as.sum", "center_loss.sum", "offset_weights.unsqueeze().expand_as.unsqueeze", "offset_loss.sum", "offset_weights.unsqueeze().expand_as.sum", "offset_loss.sum"], "function", ["None"], ["default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.get_reverse_list": [[20, 41], ["reverse_list.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["LOCAL_PATH", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "sys", ".", "path", ".", "append", "(", "os", ".", "path", ".", "join", "(", "LOCAL_PATH", ",", "'..'", ",", "'..'", ")", ")", "\n", "\n", "import", "cv2", "\n", "import", "tqdm", "\n", "import", "yaml", "\n", "import", "numpy", "as", "np", "\n", "import", "paddle", "\n", "from", "paddle", ".", "inference", "import", "create_predictor", ",", "PrecisionType", "\n", "from", "paddle", ".", "inference", "import", "Config", "as", "PredictConfig", "\n", "from", "paddleseg", ".", "cvlibs", "import", "manager", "\n", "from", "paddleseg", ".", "utils", "import", "get_sys_env", ",", "logger", "\n", "\n", "from", "utils", "import", "get_image_list", ",", "mkdir", ",", "estimate_foreground_ml", "\n", "import", "transforms", "as", "T", "\n", "\n", "\n", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Deploy for matting model'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.reverse_transform": [[43, 60], ["infer.get_reverse_list", "Exception", "paddle.cast", "paddle.cast", "paddle.interpolate", "paddle.cast", "paddle.cast", "paddle.interpolate", "paddle.get_device", "paddle.get_device"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.get_reverse_list"], ["default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The directory or path or file list of the images to be predicted.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--trimap_path'", ",", "\n", "dest", "=", "'trimap_path'", ",", "\n", "help", "=", "'The directory or path or file list of the triamp to help predicted.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.flip_combination": [[80, 101], ["flip_comb.append", "flip_comb.append", "flip_comb.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to estimate foreground when predicting.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--cpu_threads'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Number of threads to predict when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_mkldnn'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Enable to use mkldnn to speed up when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_trt'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to use Nvidia TensorRT to accelerate prediction.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.tensor_flip": [[103, 110], ["None"], "function", ["None"], ["type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", ",", "\"int8\"", "]", ",", "\n", "help", "=", "'The tensorrt precision.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_auto_tune'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.slide_inference": [[112, 163], ["numpy.zeros", "range", "paddle.to_tensor", "paddle.to_tensor", "numpy.int", "numpy.int", "range", "numpy.sum", "RuntimeError", "numpy.ceil", "numpy.ceil", "min", "min", "max", "max", "model", "logits[].numpy", "isinstance", "TypeError", "numpy.zeros", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model"], ["'the dynamic shape for trt sub graph, which avoids setting dynamic shape manually.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--auto_tuned_shape_file'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"auto_tune_tmp.pbtxt\"", ",", "\n", "help", "=", "'The temp file to save tuned dynamic shape.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "\"--benchmark\"", ",", "\n", "type", "=", "eval", ",", "\n", "default", "=", "False", ",", "\n", "help", "=", "\"Whether to log some information about environment, model, configuration and performance.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--model_name\"", ",", "\n", "default", "=", "\"\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'When `--benchmark` is True, the specified model name is displayed.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--print_detail'", ",", "\n", "default", "=", "True", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Print GLOG information of Paddle Inference.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "use_auto_tune", "(", "args", ")", ":", "\n", "    ", "return", "hasattr", "(", "PredictConfig", ",", "\"collect_shape_range_info\"", ")", "and", "hasattr", "(", "PredictConfig", ",", "\"enable_tuned_tensorrt_dynamic_shape\"", ")", "and", "args", ".", "device", "==", "\"gpu\"", "and", "args", ".", "use_trt", "and", "args", ".", "enable_auto_tune", "\n", "\n", "\n", "", "class", "DeployConfig", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "codecs", ".", "open", "(", "path", ",", "'r'", ",", "'utf-8'", ")", "as", "file", ":", "\n", "            ", "self", ".", "dic", "=", "yaml", ".", "load", "(", "file", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "self", ".", "_transforms", "=", "self", ".", "load_transforms", "(", "self", ".", "dic", "[", "'Deploy'", "]", "[", "\n", "'transforms'", "]", ")", "\n", "self", ".", "_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "\n", "", "@", "property", "\n", "def", "transforms", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_transforms", "\n", "\n", "", "@", "property", "\n", "def", "model", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "_dir", ",", "self", ".", "dic", "[", "'Deploy'", "]", "[", "'model'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.inference": [[62, 95], ["model", "paddle.argmax", "paddle.argmax", "hasattr", "im.transpose.transpose", "isinstance", "TypeError", "hasattr", "reverse_transform.transpose", "infer.reverse_transform", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform"], ["help", "=", "'Mini batch size of one gpu or cpu.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predict result.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "choices", "=", "[", "'cpu'", ",", "'gpu'", "]", ",", "\n", "default", "=", "\"gpu\"", ",", "\n", "help", "=", "\"Select which device to inference, defaults to gpu.\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--fg_estimate'", ",", "\n", "default", "=", "True", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to estimate foreground when predicting.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--cpu_threads'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Number of threads to predict when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_mkldnn'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Enable to use mkldnn to speed up when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_trt'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.aug_inference": [[205, 263], ["isinstance", "infer.flip_combination", "paddle.argmax", "paddle.argmax", "paddle.interpolate", "int", "int", "paddle.interpolate", "isinstance", "TypeError", "infer.tensor_flip", "infer.inference", "infer.tensor_flip", "paddle.interpolate", "paddle.softmax", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.flip_combination", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip"], ["predictor", "=", "create_predictor", "(", "pred_cfg", ")", "\n", "input_names", "=", "predictor", ".", "get_input_names", "(", ")", "\n", "input_handle", "=", "predictor", ".", "get_input_handle", "(", "input_names", "[", "0", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "num", ")", ":", "\n", "        ", "data", "=", "np", ".", "array", "(", "[", "cfg", ".", "transforms", "(", "imgs", "[", "i", "]", ")", "[", "0", "]", "]", ")", "\n", "input_handle", ".", "reshape", "(", "data", ".", "shape", ")", "\n", "input_handle", ".", "copy_from_cpu", "(", "data", ")", "\n", "try", ":", "\n", "            ", "predictor", ".", "run", "(", ")", "\n", "", "except", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Auto tune fail. Usually, the error is out of GPU memory, \"", "\n", "\"because the model and image is too large. \\n\"", ")", "\n", "del", "predictor", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "auto_tuned_shape_file", ")", ":", "\n", "                ", "os", ".", "remove", "(", "args", ".", "auto_tuned_shape_file", ")", "\n", "", "return", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Auto tune success.\\n\"", ")", "\n", "\n", "\n", "", "class", "Predictor", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "\"\"\"\n        Prepare for prediction.\n        The usage and docs of paddle inference, please refer to\n        https://paddleinference.paddlepaddle.org.cn/product_introduction/summary.html\n        \"\"\"", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "cfg", "=", "DeployConfig", "(", "args", ".", "cfg", ")", "\n", "\n", "self", ".", "_init_base_config", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'cpu'", ":", "\n", "            ", "self", ".", "_init_cpu_config", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_init_gpu_config", "(", ")", "\n", "\n", "", "self", ".", "predictor", "=", "create_predictor", "(", "self", ".", "pred_cfg", ")", "\n", "\n", "if", "hasattr", "(", "args", ",", "'benchmark'", ")", "and", "args", ".", "benchmark", ":", "\n", "            ", "import", "auto_log", "\n", "pid", "=", "os", ".", "getpid", "(", ")", "\n", "self", ".", "autolog", "=", "auto_log", ".", "AutoLogger", "(", "\n", "model_name", "=", "args", ".", "model_name", ",", "\n", "model_precision", "=", "args", ".", "precision", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "data_shape", "=", "\"dynamic\"", ",", "\n", "save_path", "=", "None", ",", "\n", "inference_config", "=", "self", ".", "pred_cfg", ",", "\n", "pids", "=", "pid", ",", "\n", "process_name", "=", "None", ",", "\n", "gpu_ids", "=", "0", ",", "\n", "time_keys", "=", "[", "\n", "'preprocess_time'", ",", "'inference_time'", ",", "'postprocess_time'", "\n", "]", ",", "\n", "warmup", "=", "0", ",", "\n", "logger", "=", "logger", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble.get_reverse_list": [[23, 63], ["reverse_list.append", "reverse_list.append", "max", "min", "reverse_list.append", "int", "round", "reverse_list.append", "int", "round"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "get_reverse_list", "(", "ori_shape", ",", "transforms", ")", ":", "\n", "    ", "\"\"\"\n    get reverse list of transform.\n\n    Args:\n        ori_shape (list): Origin shape of image.\n        transforms (list): List of transform.\n\n    Returns:\n        list: List of tuple, there are two format:\n            ('resize', (h, w)) The image shape before resize,\n            ('padding', (h, w)) The image shape before padding.\n    \"\"\"", "\n", "reverse_list", "=", "[", "]", "\n", "h", ",", "w", "=", "ori_shape", "[", "0", "]", ",", "ori_shape", "[", "1", "]", "\n", "for", "op", "in", "transforms", ":", "\n", "        ", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'Resize'", ",", "'ResizeByLong'", "]", ":", "\n", "            ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "h", ",", "w", "=", "op", ".", "target_size", "[", "0", "]", ",", "op", ".", "target_size", "[", "1", "]", "\n", "", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'Padding'", "]", ":", "\n", "            ", "reverse_list", ".", "append", "(", "(", "'padding'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "w", ",", "h", "=", "op", ".", "target_size", "[", "0", "]", ",", "op", ".", "target_size", "[", "1", "]", "\n", "", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'LimitLong'", "]", ":", "\n", "            ", "long_edge", "=", "max", "(", "h", ",", "w", ")", "\n", "short_edge", "=", "min", "(", "h", ",", "w", ")", "\n", "if", "(", "(", "op", ".", "max_long", "is", "not", "None", ")", "and", "(", "long_edge", ">", "op", ".", "max_long", ")", ")", ":", "\n", "                ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "long_edge", "=", "op", ".", "max_long", "\n", "short_edge", "=", "int", "(", "round", "(", "short_edge", "*", "op", ".", "max_long", "/", "long_edge", ")", ")", "\n", "", "elif", "(", "(", "op", ".", "min_long", "is", "not", "None", ")", "and", "(", "long_edge", "<", "op", ".", "min_long", ")", ")", ":", "\n", "                ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "long_edge", "=", "op", ".", "min_long", "\n", "short_edge", "=", "int", "(", "round", "(", "short_edge", "*", "op", ".", "min_long", "/", "long_edge", ")", ")", "\n", "", "if", "h", ">", "w", ":", "\n", "                ", "h", "=", "long_edge", "\n", "w", "=", "short_edge", "\n", "", "else", ":", "\n", "                ", "w", "=", "long_edge", "\n", "h", "=", "short_edge", "\n", "", "", "", "return", "reverse_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble.reverse_transform": [[65, 78], ["infer_ensemble.get_reverse_list", "paddle.interpolate", "Exception"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.get_reverse_list"], ["", "def", "reverse_transform", "(", "pred", ",", "ori_shape", ",", "transforms", ")", ":", "\n", "    ", "\"\"\"recover pred to origin shape\"\"\"", "\n", "reverse_list", "=", "get_reverse_list", "(", "ori_shape", ",", "transforms", ")", "\n", "for", "item", "in", "reverse_list", "[", ":", ":", "-", "1", "]", ":", "\n", "        ", "if", "item", "[", "0", "]", "==", "'resize'", ":", "\n", "            ", "h", ",", "w", "=", "item", "[", "1", "]", "[", "0", "]", ",", "item", "[", "1", "]", "[", "1", "]", "\n", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", "\n", "", "elif", "item", "[", "0", "]", "==", "'padding'", ":", "\n", "            ", "h", ",", "w", "=", "item", "[", "1", "]", "[", "0", "]", ",", "item", "[", "1", "]", "[", "1", "]", "\n", "pred", "=", "pred", "[", ":", ",", ":", ",", "0", ":", "h", ",", "0", ":", "w", "]", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Unexpected info '{}' in im_info\"", ".", "format", "(", "item", "[", "0", "]", ")", ")", "\n", "", "", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble.flip_combination": [[80, 101], ["flip_comb.append", "flip_comb.append", "flip_comb.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "flip_combination", "(", "flip_horizontal", "=", "False", ",", "flip_vertical", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Get flip combination.\n\n    Args:\n        flip_horizontal (bool): Whether to flip horizontally. Default: False.\n        flip_vertical (bool): Whether to flip vertically. Default: False.\n\n    Returns:\n        list: List of tuple. The first element of tuple is whether to flip horizontally,\n            and the second is whether to flip vertically.\n    \"\"\"", "\n", "\n", "flip_comb", "=", "[", "(", "False", ",", "False", ")", "]", "\n", "if", "flip_horizontal", ":", "\n", "        ", "flip_comb", ".", "append", "(", "(", "True", ",", "False", ")", ")", "\n", "", "if", "flip_vertical", ":", "\n", "        ", "flip_comb", ".", "append", "(", "(", "False", ",", "True", ")", ")", "\n", "if", "flip_horizontal", ":", "\n", "            ", "flip_comb", ".", "append", "(", "(", "True", ",", "True", ")", ")", "\n", "", "", "return", "flip_comb", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble.tensor_flip": [[103, 110], ["None"], "function", ["None"], ["", "def", "tensor_flip", "(", "x", ",", "flip", ")", ":", "\n", "    ", "\"\"\"Flip tensor according directions\"\"\"", "\n", "if", "flip", "[", "0", "]", ":", "\n", "        ", "x", "=", "x", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "", "if", "flip", "[", "1", "]", ":", "\n", "        ", "x", "=", "x", "[", ":", ",", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble.inference": [[112, 155], ["paddle.softmax", "paddle.softmax", "paddle.argmax", "paddle.argmax", "infer_ensemble.reverse_transform", "model", "model_hard"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model"], ["", "def", "inference", "(", "model", ",", "\n", "model_hard", ",", "\n", "im", ",", "\n", "ori_shape", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Inference for image.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        ori_shape (list): Origin shape of image.\n        transforms (list): Transforms for image.\n        is_slide (bool): Whether to infer by sliding window. Default: False.\n        crop_size (tuple|list). The size of sliding window, (w, h). It should be probided if is_slide is True.\n        stride (tuple|list). The size of stride, (w, h). It should be probided if is_slide is True.\n\n    Returns:\n        Tensor: If ori_shape is not None, a prediction with shape (1, 1, h, w) is returned.\n            If ori_shape is None, a logit with shape (1, num_classes, h, w) is returned.\n    \"\"\"", "\n", "if", "not", "is_slide", ":", "\n", "# logits = model(im)[0]", "\n", "# logits_hard = model_hard(im)[0]", "\n", "\n", "        ", "logits", "=", "F", ".", "softmax", "(", "model", "(", "im", ")", "[", "0", "]", ",", "axis", "=", "1", ")", "\n", "logits_hard", "=", "F", ".", "softmax", "(", "model_hard", "(", "im", ")", "[", "0", "]", ",", "axis", "=", "1", ")", "\n", "\n", "#         logit_hard = logits.clone()", "\n", "#         for ii in range(logits.shape[0]):", "\n", "#             logit_hard[ii] = paddle.scatter(logit_hard[ii], paddle.to_tensor([3, 7, 12, 14, 15, 16, 18, 19, 20, 21]), logits_hard[ii][1:], overwrite=True, name=None)", "\n", "logit", "=", "(", "logits", "+", "logits_hard", ")", "/", "2", "\n", "# logit = logit_hard", "\n", "\n", "", "if", "ori_shape", "is", "not", "None", ":", "\n", "        ", "pred", "=", "paddle", ".", "argmax", "(", "logit", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ",", "dtype", "=", "'int32'", ")", "\n", "pred", "=", "reverse_transform", "(", "pred", ",", "ori_shape", ",", "transforms", ")", "\n", "return", "pred", "\n", "", "else", ":", "\n", "        ", "return", "logit", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble.aug_inference": [[157, 217], ["isinstance", "infer_ensemble.flip_combination", "paddle.argmax", "paddle.argmax", "paddle.interpolate", "int", "int", "paddle.interpolate", "isinstance", "TypeError", "infer_ensemble.tensor_flip", "infer_ensemble.inference", "infer_ensemble.tensor_flip", "paddle.interpolate", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.flip_combination", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip"], ["", "", "def", "aug_inference", "(", "model", ",", "\n", "model_hard", ",", "\n", "im", ",", "\n", "ori_shape", ",", "\n", "transforms", ",", "\n", "scales", "=", "1.0", ",", "\n", "flip_horizontal", "=", "False", ",", "\n", "flip_vertical", "=", "False", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Infer with augmentation.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        ori_shape (list): Origin shape of image.\n        transforms (list): Transforms for image.\n        scales (float|tuple|list):  Scales for resize. Default: 1.\n        flip_horizontal (bool): Whether to flip horizontally. Default: False.\n        flip_vertical (bool): Whether to flip vertically. Default: False.\n        is_slide (bool): Whether to infer by sliding wimdow. Default: False.\n        crop_size (tuple|list). The size of sliding window, (w, h). It should be probided if is_slide is True.\n        stride (tuple|list). The size of stride, (w, h). It should be probided if is_slide is True.\n\n    Returns:\n        Tensor: Prediction of image with shape (1, 1, h, w) is returned.\n    \"\"\"", "\n", "if", "isinstance", "(", "scales", ",", "float", ")", ":", "\n", "        ", "scales", "=", "[", "scales", "]", "\n", "", "elif", "not", "isinstance", "(", "scales", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'`scales` expects float/tuple/list type, but received {}'", ".", "format", "(", "\n", "type", "(", "scales", ")", ")", ")", "\n", "", "final_logit", "=", "0", "\n", "h_input", ",", "w_input", "=", "im", ".", "shape", "[", "-", "2", "]", ",", "im", ".", "shape", "[", "-", "1", "]", "\n", "flip_comb", "=", "flip_combination", "(", "flip_horizontal", ",", "flip_vertical", ")", "\n", "for", "scale", "in", "scales", ":", "\n", "        ", "h", "=", "int", "(", "h_input", "*", "scale", "+", "0.5", ")", "\n", "w", "=", "int", "(", "w_input", "*", "scale", "+", "0.5", ")", "\n", "im", "=", "F", ".", "interpolate", "(", "im", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "for", "flip", "in", "flip_comb", ":", "\n", "            ", "im_flip", "=", "tensor_flip", "(", "im", ",", "flip", ")", "\n", "logit", "=", "inference", "(", "\n", "model", ",", "\n", "model_hard", ",", "\n", "im_flip", ",", "\n", "is_slide", "=", "is_slide", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "stride", "=", "stride", ")", "\n", "logit", "=", "tensor_flip", "(", "logit", ",", "flip", ")", "\n", "logit", "=", "F", ".", "interpolate", "(", "logit", ",", "(", "h_input", ",", "w_input", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "#             logit = F.softmax(logit, axis=1)", "\n", "final_logit", "=", "final_logit", "+", "logit", "\n", "\n", "", "", "pred", "=", "paddle", ".", "argmax", "(", "final_logit", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ",", "dtype", "=", "'int32'", ")", "\n", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "(", "ori_shape", "[", "0", "]", ",", "ori_shape", "[", "1", "]", ")", ",", "mode", "=", "'nearest'", ")", "\n", "return", "pred", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_crop.get_reverse_list": [[23, 63], ["reverse_list.append", "reverse_list.append", "max", "min", "reverse_list.append", "int", "round", "reverse_list.append", "int", "round"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "get_reverse_list", "(", "ori_shape", ",", "transforms", ")", ":", "\n", "    ", "\"\"\"\n    get reverse list of transform.\n\n    Args:\n        ori_shape (list): Origin shape of image.\n        transforms (list): List of transform.\n\n    Returns:\n        list: List of tuple, there are two format:\n            ('resize', (h, w)) The image shape before resize,\n            ('padding', (h, w)) The image shape before padding.\n    \"\"\"", "\n", "reverse_list", "=", "[", "]", "\n", "h", ",", "w", "=", "ori_shape", "[", "0", "]", ",", "ori_shape", "[", "1", "]", "\n", "for", "op", "in", "transforms", ":", "\n", "        ", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'Resize'", ",", "'ResizeByLong'", "]", ":", "\n", "            ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "h", ",", "w", "=", "op", ".", "target_size", "[", "0", "]", ",", "op", ".", "target_size", "[", "1", "]", "\n", "", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'Padding'", "]", ":", "\n", "            ", "reverse_list", ".", "append", "(", "(", "'padding'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "w", ",", "h", "=", "op", ".", "target_size", "[", "0", "]", ",", "op", ".", "target_size", "[", "1", "]", "\n", "", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'LimitLong'", "]", ":", "\n", "            ", "long_edge", "=", "max", "(", "h", ",", "w", ")", "\n", "short_edge", "=", "min", "(", "h", ",", "w", ")", "\n", "if", "(", "(", "op", ".", "max_long", "is", "not", "None", ")", "and", "(", "long_edge", ">", "op", ".", "max_long", ")", ")", ":", "\n", "                ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "long_edge", "=", "op", ".", "max_long", "\n", "short_edge", "=", "int", "(", "round", "(", "short_edge", "*", "op", ".", "max_long", "/", "long_edge", ")", ")", "\n", "", "elif", "(", "(", "op", ".", "min_long", "is", "not", "None", ")", "and", "(", "long_edge", "<", "op", ".", "min_long", ")", ")", ":", "\n", "                ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "long_edge", "=", "op", ".", "min_long", "\n", "short_edge", "=", "int", "(", "round", "(", "short_edge", "*", "op", ".", "min_long", "/", "long_edge", ")", ")", "\n", "", "if", "h", ">", "w", ":", "\n", "                ", "h", "=", "long_edge", "\n", "w", "=", "short_edge", "\n", "", "else", ":", "\n", "                ", "w", "=", "long_edge", "\n", "h", "=", "short_edge", "\n", "", "", "", "return", "reverse_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_crop.reverse_transform": [[65, 78], ["infer_crop.get_reverse_list", "paddle.interpolate", "Exception"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.get_reverse_list"], ["", "def", "reverse_transform", "(", "pred", ",", "ori_shape", ",", "transforms", ")", ":", "\n", "    ", "\"\"\"recover pred to origin shape\"\"\"", "\n", "reverse_list", "=", "get_reverse_list", "(", "ori_shape", ",", "transforms", ")", "\n", "for", "item", "in", "reverse_list", "[", ":", ":", "-", "1", "]", ":", "\n", "        ", "if", "item", "[", "0", "]", "==", "'resize'", ":", "\n", "            ", "h", ",", "w", "=", "item", "[", "1", "]", "[", "0", "]", ",", "item", "[", "1", "]", "[", "1", "]", "\n", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", "\n", "", "elif", "item", "[", "0", "]", "==", "'padding'", ":", "\n", "            ", "h", ",", "w", "=", "item", "[", "1", "]", "[", "0", "]", ",", "item", "[", "1", "]", "[", "1", "]", "\n", "pred", "=", "pred", "[", ":", ",", ":", ",", "0", ":", "h", ",", "0", ":", "w", "]", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Unexpected info '{}' in im_info\"", ".", "format", "(", "item", "[", "0", "]", ")", ")", "\n", "", "", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_crop.flip_combination": [[80, 101], ["flip_comb.append", "flip_comb.append", "flip_comb.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "flip_combination", "(", "flip_horizontal", "=", "False", ",", "flip_vertical", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Get flip combination.\n\n    Args:\n        flip_horizontal (bool): Whether to flip horizontally. Default: False.\n        flip_vertical (bool): Whether to flip vertically. Default: False.\n\n    Returns:\n        list: List of tuple. The first element of tuple is whether to flip horizontally,\n            and the second is whether to flip vertically.\n    \"\"\"", "\n", "\n", "flip_comb", "=", "[", "(", "False", ",", "False", ")", "]", "\n", "if", "flip_horizontal", ":", "\n", "        ", "flip_comb", ".", "append", "(", "(", "True", ",", "False", ")", ")", "\n", "", "if", "flip_vertical", ":", "\n", "        ", "flip_comb", ".", "append", "(", "(", "False", ",", "True", ")", ")", "\n", "if", "flip_horizontal", ":", "\n", "            ", "flip_comb", ".", "append", "(", "(", "True", ",", "True", ")", ")", "\n", "", "", "return", "flip_comb", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_crop.tensor_flip": [[103, 110], ["None"], "function", ["None"], ["", "def", "tensor_flip", "(", "x", ",", "flip", ")", ":", "\n", "    ", "\"\"\"Flip tensor according directions\"\"\"", "\n", "if", "flip", "[", "0", "]", ":", "\n", "        ", "x", "=", "x", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "", "if", "flip", "[", "1", "]", ":", "\n", "        ", "x", "=", "x", "[", ":", ",", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_crop.slide_inference": [[112, 163], ["numpy.zeros", "range", "paddle.to_tensor", "paddle.to_tensor", "numpy.int", "numpy.int", "range", "numpy.sum", "RuntimeError", "numpy.ceil", "numpy.ceil", "min", "min", "max", "max", "model", "logits[].numpy", "isinstance", "TypeError", "numpy.zeros", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model"], ["", "def", "slide_inference", "(", "model", ",", "im", ",", "crop_size", ",", "stride", ")", ":", "\n", "    ", "\"\"\"\n    Infer by sliding window.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        crop_size (tuple|list). The size of sliding window, (w, h).\n        stride (tuple|list). The size of stride, (w, h).\n\n    Return:\n        Tensor: The logit of input image.\n    \"\"\"", "\n", "h_im", ",", "w_im", "=", "im", ".", "shape", "[", "-", "2", ":", "]", "\n", "w_crop", ",", "h_crop", "=", "crop_size", "\n", "w_stride", ",", "h_stride", "=", "stride", "\n", "# calculate the crop nums", "\n", "rows", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "1.0", "*", "(", "h_im", "-", "h_crop", ")", "/", "h_stride", ")", ")", "+", "1", "\n", "cols", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "1.0", "*", "(", "w_im", "-", "w_crop", ")", "/", "w_stride", ")", ")", "+", "1", "\n", "# prevent negative sliding rounds when imgs after scaling << crop_size", "\n", "rows", "=", "1", "if", "h_im", "<=", "h_crop", "else", "rows", "\n", "cols", "=", "1", "if", "w_im", "<=", "w_crop", "else", "cols", "\n", "# TODO 'Tensor' object does not support item assignment. If support, use tensor to calculation.", "\n", "final_logit", "=", "None", "\n", "count", "=", "np", ".", "zeros", "(", "[", "1", ",", "1", ",", "h_im", ",", "w_im", "]", ")", "\n", "for", "r", "in", "range", "(", "rows", ")", ":", "\n", "        ", "for", "c", "in", "range", "(", "cols", ")", ":", "\n", "            ", "h1", "=", "r", "*", "h_stride", "\n", "w1", "=", "c", "*", "w_stride", "\n", "h2", "=", "min", "(", "h1", "+", "h_crop", ",", "h_im", ")", "\n", "w2", "=", "min", "(", "w1", "+", "w_crop", ",", "w_im", ")", "\n", "h1", "=", "max", "(", "h2", "-", "h_crop", ",", "0", ")", "\n", "w1", "=", "max", "(", "w2", "-", "w_crop", ",", "0", ")", "\n", "im_crop", "=", "im", "[", ":", ",", ":", ",", "h1", ":", "h2", ",", "w1", ":", "w2", "]", "\n", "logits", "=", "model", "(", "im_crop", ")", "\n", "if", "not", "isinstance", "(", "logits", ",", "collections", ".", "abc", ".", "Sequence", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"The type of logits must be one of collections.abc.Sequence, e.g. list, tuple. But received {}\"", "\n", ".", "format", "(", "type", "(", "logits", ")", ")", ")", "\n", "", "logit", "=", "logits", "[", "0", "]", ".", "numpy", "(", ")", "\n", "if", "final_logit", "is", "None", ":", "\n", "                ", "final_logit", "=", "np", ".", "zeros", "(", "[", "1", ",", "logit", ".", "shape", "[", "1", "]", ",", "h_im", ",", "w_im", "]", ")", "\n", "", "final_logit", "[", ":", ",", ":", ",", "h1", ":", "h2", ",", "w1", ":", "w2", "]", "+=", "logit", "[", ":", ",", ":", ",", ":", "h2", "-", "h1", ",", ":", "w2", "-", "w1", "]", "\n", "count", "[", ":", ",", ":", ",", "h1", ":", "h2", ",", "w1", ":", "w2", "]", "+=", "1", "\n", "", "", "if", "np", ".", "sum", "(", "count", "==", "0", ")", "!=", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'There are pixel not predicted. It is possible that stride is greater than crop_size'", "\n", ")", "\n", "", "final_logit", "=", "final_logit", "/", "count", "\n", "final_logit", "=", "paddle", ".", "to_tensor", "(", "final_logit", ")", "\n", "return", "final_logit", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_crop.inference": [[165, 203], ["model", "infer_crop.slide_inference", "paddle.argmax", "paddle.argmax", "infer_crop.reverse_transform", "isinstance", "TypeError", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_generate_autolabel.slide_inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform"], ["", "def", "inference", "(", "model", ",", "\n", "im", ",", "\n", "ori_shape", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Inference for image.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        ori_shape (list): Origin shape of image.\n        transforms (list): Transforms for image.\n        is_slide (bool): Whether to infer by sliding window. Default: False.\n        crop_size (tuple|list). The size of sliding window, (w, h). It should be probided if is_slide is True.\n        stride (tuple|list). The size of stride, (w, h). It should be probided if is_slide is True.\n\n    Returns:\n        Tensor: If ori_shape is not None, a prediction with shape (1, 1, h, w) is returned.\n            If ori_shape is None, a logit with shape (1, num_classes, h, w) is returned.\n    \"\"\"", "\n", "if", "not", "is_slide", ":", "\n", "        ", "logits", "=", "model", "(", "im", ")", "\n", "if", "not", "isinstance", "(", "logits", ",", "collections", ".", "abc", ".", "Sequence", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "\"The type of logits must be one of collections.abc.Sequence, e.g. list, tuple. But received {}\"", "\n", ".", "format", "(", "type", "(", "logits", ")", ")", ")", "\n", "", "logit", "=", "logits", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "logit", "=", "slide_inference", "(", "model", ",", "im", ",", "crop_size", "=", "crop_size", ",", "stride", "=", "stride", ")", "\n", "", "if", "ori_shape", "is", "not", "None", ":", "\n", "        ", "pred", "=", "paddle", ".", "argmax", "(", "logit", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ",", "dtype", "=", "'int32'", ")", "\n", "pred", "=", "reverse_transform", "(", "pred", ",", "ori_shape", ",", "transforms", ")", "\n", "return", "pred", "\n", "", "else", ":", "\n", "        ", "return", "logit", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_crop.aug_inference": [[205, 261], ["isinstance", "infer_crop.flip_combination", "int", "int", "paddle.interpolate", "isinstance", "TypeError", "infer_crop.tensor_flip", "infer_crop.inference", "infer_crop.tensor_flip", "paddle.interpolate", "paddle.softmax", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.flip_combination", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip"], ["", "", "def", "aug_inference", "(", "model", ",", "\n", "im", ",", "\n", "ori_shape", ",", "\n", "transforms", ",", "\n", "scales", "=", "1.0", ",", "\n", "flip_horizontal", "=", "False", ",", "\n", "flip_vertical", "=", "False", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Infer with augmentation.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        ori_shape (list): Origin shape of image.\n        transforms (list): Transforms for image.\n        scales (float|tuple|list):  Scales for resize. Default: 1.\n        flip_horizontal (bool): Whether to flip horizontally. Default: False.\n        flip_vertical (bool): Whether to flip vertically. Default: False.\n        is_slide (bool): Whether to infer by sliding wimdow. Default: False.\n        crop_size (tuple|list). The size of sliding window, (w, h). It should be probided if is_slide is True.\n        stride (tuple|list). The size of stride, (w, h). It should be probided if is_slide is True.\n\n    Returns:\n        Tensor: Prediction of image with shape (1, 1, h, w) is returned.\n    \"\"\"", "\n", "if", "isinstance", "(", "scales", ",", "float", ")", ":", "\n", "        ", "scales", "=", "[", "scales", "]", "\n", "", "elif", "not", "isinstance", "(", "scales", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'`scales` expects float/tuple/list type, but received {}'", ".", "format", "(", "\n", "type", "(", "scales", ")", ")", ")", "\n", "", "final_logit", "=", "0", "\n", "h_input", ",", "w_input", "=", "im", ".", "shape", "[", "-", "2", "]", ",", "im", ".", "shape", "[", "-", "1", "]", "\n", "flip_comb", "=", "flip_combination", "(", "flip_horizontal", ",", "flip_vertical", ")", "\n", "for", "scale", "in", "scales", ":", "\n", "        ", "h", "=", "int", "(", "h_input", "*", "scale", "+", "0.5", ")", "\n", "w", "=", "int", "(", "w_input", "*", "scale", "+", "0.5", ")", "\n", "im", "=", "F", ".", "interpolate", "(", "im", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "for", "flip", "in", "flip_comb", ":", "\n", "            ", "im_flip", "=", "tensor_flip", "(", "im", ",", "flip", ")", "\n", "logit", "=", "inference", "(", "\n", "model", ",", "\n", "im_flip", ",", "\n", "is_slide", "=", "is_slide", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "stride", "=", "stride", ")", "\n", "logit", "=", "tensor_flip", "(", "logit", ",", "flip", ")", "\n", "logit", "=", "F", ".", "interpolate", "(", "logit", ",", "(", "h_input", ",", "w_input", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "logit", "=", "F", ".", "softmax", "(", "logit", ",", "axis", "=", "1", ")", "\n", "final_logit", "=", "final_logit", "+", "logit", "\n", "\n", "", "", "return", "final_logit", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_generate_autolabel.get_reverse_list": [[23, 63], ["reverse_list.append", "reverse_list.append", "max", "min", "reverse_list.append", "int", "round", "reverse_list.append", "int", "round"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "get_reverse_list", "(", "ori_shape", ",", "transforms", ")", ":", "\n", "    ", "\"\"\"\n    get reverse list of transform.\n\n    Args:\n        ori_shape (list): Origin shape of image.\n        transforms (list): List of transform.\n\n    Returns:\n        list: List of tuple, there are two format:\n            ('resize', (h, w)) The image shape before resize,\n            ('padding', (h, w)) The image shape before padding.\n    \"\"\"", "\n", "reverse_list", "=", "[", "]", "\n", "h", ",", "w", "=", "ori_shape", "[", "0", "]", ",", "ori_shape", "[", "1", "]", "\n", "for", "op", "in", "transforms", ":", "\n", "        ", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'Resize'", ",", "'ResizeByLong'", "]", ":", "\n", "            ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "h", ",", "w", "=", "op", ".", "target_size", "[", "0", "]", ",", "op", ".", "target_size", "[", "1", "]", "\n", "", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'Padding'", "]", ":", "\n", "            ", "reverse_list", ".", "append", "(", "(", "'padding'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "w", ",", "h", "=", "op", ".", "target_size", "[", "0", "]", ",", "op", ".", "target_size", "[", "1", "]", "\n", "", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'LimitLong'", "]", ":", "\n", "            ", "long_edge", "=", "max", "(", "h", ",", "w", ")", "\n", "short_edge", "=", "min", "(", "h", ",", "w", ")", "\n", "if", "(", "(", "op", ".", "max_long", "is", "not", "None", ")", "and", "(", "long_edge", ">", "op", ".", "max_long", ")", ")", ":", "\n", "                ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "long_edge", "=", "op", ".", "max_long", "\n", "short_edge", "=", "int", "(", "round", "(", "short_edge", "*", "op", ".", "max_long", "/", "long_edge", ")", ")", "\n", "", "elif", "(", "(", "op", ".", "min_long", "is", "not", "None", ")", "and", "(", "long_edge", "<", "op", ".", "min_long", ")", ")", ":", "\n", "                ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "long_edge", "=", "op", ".", "min_long", "\n", "short_edge", "=", "int", "(", "round", "(", "short_edge", "*", "op", ".", "min_long", "/", "long_edge", ")", ")", "\n", "", "if", "h", ">", "w", ":", "\n", "                ", "h", "=", "long_edge", "\n", "w", "=", "short_edge", "\n", "", "else", ":", "\n", "                ", "w", "=", "long_edge", "\n", "h", "=", "short_edge", "\n", "", "", "", "return", "reverse_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_generate_autolabel.reverse_transform": [[65, 78], ["infer_generate_autolabel.get_reverse_list", "paddle.interpolate", "Exception"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.get_reverse_list"], ["", "def", "reverse_transform", "(", "pred", ",", "ori_shape", ",", "transforms", ")", ":", "\n", "    ", "\"\"\"recover pred to origin shape\"\"\"", "\n", "reverse_list", "=", "get_reverse_list", "(", "ori_shape", ",", "transforms", ")", "\n", "for", "item", "in", "reverse_list", "[", ":", ":", "-", "1", "]", ":", "\n", "        ", "if", "item", "[", "0", "]", "==", "'resize'", ":", "\n", "            ", "h", ",", "w", "=", "item", "[", "1", "]", "[", "0", "]", ",", "item", "[", "1", "]", "[", "1", "]", "\n", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", "\n", "", "elif", "item", "[", "0", "]", "==", "'padding'", ":", "\n", "            ", "h", ",", "w", "=", "item", "[", "1", "]", "[", "0", "]", ",", "item", "[", "1", "]", "[", "1", "]", "\n", "pred", "=", "pred", "[", ":", ",", ":", ",", "0", ":", "h", ",", "0", ":", "w", "]", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Unexpected info '{}' in im_info\"", ".", "format", "(", "item", "[", "0", "]", ")", ")", "\n", "", "", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_generate_autolabel.flip_combination": [[80, 101], ["flip_comb.append", "flip_comb.append", "flip_comb.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "flip_combination", "(", "flip_horizontal", "=", "False", ",", "flip_vertical", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Get flip combination.\n\n    Args:\n        flip_horizontal (bool): Whether to flip horizontally. Default: False.\n        flip_vertical (bool): Whether to flip vertically. Default: False.\n\n    Returns:\n        list: List of tuple. The first element of tuple is whether to flip horizontally,\n            and the second is whether to flip vertically.\n    \"\"\"", "\n", "\n", "flip_comb", "=", "[", "(", "False", ",", "False", ")", "]", "\n", "if", "flip_horizontal", ":", "\n", "        ", "flip_comb", ".", "append", "(", "(", "True", ",", "False", ")", ")", "\n", "", "if", "flip_vertical", ":", "\n", "        ", "flip_comb", ".", "append", "(", "(", "False", ",", "True", ")", ")", "\n", "if", "flip_horizontal", ":", "\n", "            ", "flip_comb", ".", "append", "(", "(", "True", ",", "True", ")", ")", "\n", "", "", "return", "flip_comb", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_generate_autolabel.tensor_flip": [[103, 110], ["None"], "function", ["None"], ["", "def", "tensor_flip", "(", "x", ",", "flip", ")", ":", "\n", "    ", "\"\"\"Flip tensor according directions\"\"\"", "\n", "if", "flip", "[", "0", "]", ":", "\n", "        ", "x", "=", "x", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "", "if", "flip", "[", "1", "]", ":", "\n", "        ", "x", "=", "x", "[", ":", ",", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_generate_autolabel.slide_inference": [[112, 163], ["numpy.zeros", "range", "paddle.to_tensor", "paddle.to_tensor", "numpy.int", "numpy.int", "range", "numpy.sum", "RuntimeError", "numpy.ceil", "numpy.ceil", "min", "min", "max", "max", "model", "logits[].numpy", "isinstance", "TypeError", "numpy.zeros", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model"], ["", "def", "slide_inference", "(", "model", ",", "im", ",", "crop_size", ",", "stride", ")", ":", "\n", "    ", "\"\"\"\n    Infer by sliding window.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        crop_size (tuple|list). The size of sliding window, (w, h).\n        stride (tuple|list). The size of stride, (w, h).\n\n    Return:\n        Tensor: The logit of input image.\n    \"\"\"", "\n", "h_im", ",", "w_im", "=", "im", ".", "shape", "[", "-", "2", ":", "]", "\n", "w_crop", ",", "h_crop", "=", "crop_size", "\n", "w_stride", ",", "h_stride", "=", "stride", "\n", "# calculate the crop nums", "\n", "rows", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "1.0", "*", "(", "h_im", "-", "h_crop", ")", "/", "h_stride", ")", ")", "+", "1", "\n", "cols", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "1.0", "*", "(", "w_im", "-", "w_crop", ")", "/", "w_stride", ")", ")", "+", "1", "\n", "# prevent negative sliding rounds when imgs after scaling << crop_size", "\n", "rows", "=", "1", "if", "h_im", "<=", "h_crop", "else", "rows", "\n", "cols", "=", "1", "if", "w_im", "<=", "w_crop", "else", "cols", "\n", "# TODO 'Tensor' object does not support item assignment. If support, use tensor to calculation.", "\n", "final_logit", "=", "None", "\n", "count", "=", "np", ".", "zeros", "(", "[", "1", ",", "1", ",", "h_im", ",", "w_im", "]", ")", "\n", "for", "r", "in", "range", "(", "rows", ")", ":", "\n", "        ", "for", "c", "in", "range", "(", "cols", ")", ":", "\n", "            ", "h1", "=", "r", "*", "h_stride", "\n", "w1", "=", "c", "*", "w_stride", "\n", "h2", "=", "min", "(", "h1", "+", "h_crop", ",", "h_im", ")", "\n", "w2", "=", "min", "(", "w1", "+", "w_crop", ",", "w_im", ")", "\n", "h1", "=", "max", "(", "h2", "-", "h_crop", ",", "0", ")", "\n", "w1", "=", "max", "(", "w2", "-", "w_crop", ",", "0", ")", "\n", "im_crop", "=", "im", "[", ":", ",", ":", ",", "h1", ":", "h2", ",", "w1", ":", "w2", "]", "\n", "logits", "=", "model", "(", "im_crop", ")", "\n", "if", "not", "isinstance", "(", "logits", ",", "collections", ".", "abc", ".", "Sequence", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"The type of logits must be one of collections.abc.Sequence, e.g. list, tuple. But received {}\"", "\n", ".", "format", "(", "type", "(", "logits", ")", ")", ")", "\n", "", "logit", "=", "logits", "[", "0", "]", ".", "numpy", "(", ")", "\n", "if", "final_logit", "is", "None", ":", "\n", "                ", "final_logit", "=", "np", ".", "zeros", "(", "[", "1", ",", "logit", ".", "shape", "[", "1", "]", ",", "h_im", ",", "w_im", "]", ")", "\n", "", "final_logit", "[", ":", ",", ":", ",", "h1", ":", "h2", ",", "w1", ":", "w2", "]", "+=", "logit", "[", ":", ",", ":", ",", ":", "h2", "-", "h1", ",", ":", "w2", "-", "w1", "]", "\n", "count", "[", ":", ",", ":", ",", "h1", ":", "h2", ",", "w1", ":", "w2", "]", "+=", "1", "\n", "", "", "if", "np", ".", "sum", "(", "count", "==", "0", ")", "!=", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'There are pixel not predicted. It is possible that stride is greater than crop_size'", "\n", ")", "\n", "", "final_logit", "=", "final_logit", "/", "count", "\n", "final_logit", "=", "paddle", ".", "to_tensor", "(", "final_logit", ")", "\n", "return", "final_logit", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_generate_autolabel.inference": [[165, 203], ["model", "infer_generate_autolabel.slide_inference", "paddle.argmax", "paddle.argmax", "infer_generate_autolabel.reverse_transform", "isinstance", "TypeError", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_generate_autolabel.slide_inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform"], ["", "def", "inference", "(", "model", ",", "\n", "im", ",", "\n", "ori_shape", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Inference for image.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        ori_shape (list): Origin shape of image.\n        transforms (list): Transforms for image.\n        is_slide (bool): Whether to infer by sliding window. Default: False.\n        crop_size (tuple|list). The size of sliding window, (w, h). It should be probided if is_slide is True.\n        stride (tuple|list). The size of stride, (w, h). It should be probided if is_slide is True.\n\n    Returns:\n        Tensor: If ori_shape is not None, a prediction with shape (1, 1, h, w) is returned.\n            If ori_shape is None, a logit with shape (1, num_classes, h, w) is returned.\n    \"\"\"", "\n", "if", "not", "is_slide", ":", "\n", "        ", "logits", "=", "model", "(", "im", ")", "\n", "if", "not", "isinstance", "(", "logits", ",", "collections", ".", "abc", ".", "Sequence", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "\"The type of logits must be one of collections.abc.Sequence, e.g. list, tuple. But received {}\"", "\n", ".", "format", "(", "type", "(", "logits", ")", ")", ")", "\n", "", "logit", "=", "logits", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "logit", "=", "slide_inference", "(", "model", ",", "im", ",", "crop_size", "=", "crop_size", ",", "stride", "=", "stride", ")", "\n", "", "if", "ori_shape", "is", "not", "None", ":", "\n", "        ", "pred", "=", "paddle", ".", "argmax", "(", "logit", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ",", "dtype", "=", "'int32'", ")", "\n", "pred", "=", "reverse_transform", "(", "pred", ",", "ori_shape", ",", "transforms", ")", "\n", "return", "pred", "\n", "", "else", ":", "\n", "        ", "return", "logit", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_generate_autolabel.aug_inference": [[205, 268], ["isinstance", "infer_generate_autolabel.flip_combination", "paddle.softmax", "paddle.max().numpy", "paddle.max().numpy", "paddle.argmax().numpy", "paddle.argmax().numpy", "paddle.to_tensor", "paddle.to_tensor", "infer_generate_autolabel.reverse_transform", "int", "int", "paddle.interpolate", "isinstance", "TypeError", "infer_generate_autolabel.tensor_flip", "infer_generate_autolabel.inference", "infer_generate_autolabel.tensor_flip", "paddle.interpolate", "paddle.softmax", "paddle.max", "paddle.max", "paddle.argmax", "paddle.argmax", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.flip_combination", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip"], ["", "", "def", "aug_inference", "(", "model", ",", "\n", "im", ",", "\n", "ori_shape", ",", "\n", "transforms", ",", "\n", "scales", "=", "1.0", ",", "\n", "flip_horizontal", "=", "False", ",", "\n", "flip_vertical", "=", "False", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Infer with augmentation.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        ori_shape (list): Origin shape of image.\n        transforms (list): Transforms for image.\n        scales (float|tuple|list):  Scales for resize. Default: 1.\n        flip_horizontal (bool): Whether to flip horizontally. Default: False.\n        flip_vertical (bool): Whether to flip vertically. Default: False.\n        is_slide (bool): Whether to infer by sliding wimdow. Default: False.\n        crop_size (tuple|list). The size of sliding window, (w, h). It should be probided if is_slide is True.\n        stride (tuple|list). The size of stride, (w, h). It should be probided if is_slide is True.\n\n    Returns:\n        Tensor: Prediction of image with shape (1, 1, h, w) is returned.\n    \"\"\"", "\n", "if", "isinstance", "(", "scales", ",", "float", ")", ":", "\n", "        ", "scales", "=", "[", "scales", "]", "\n", "", "elif", "not", "isinstance", "(", "scales", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'`scales` expects float/tuple/list type, but received {}'", ".", "format", "(", "\n", "type", "(", "scales", ")", ")", ")", "\n", "", "final_logit", "=", "0", "\n", "h_input", ",", "w_input", "=", "im", ".", "shape", "[", "-", "2", "]", ",", "im", ".", "shape", "[", "-", "1", "]", "\n", "flip_comb", "=", "flip_combination", "(", "flip_horizontal", ",", "flip_vertical", ")", "\n", "for", "scale", "in", "scales", ":", "\n", "        ", "h", "=", "int", "(", "h_input", "*", "scale", "+", "0.5", ")", "\n", "w", "=", "int", "(", "w_input", "*", "scale", "+", "0.5", ")", "\n", "im", "=", "F", ".", "interpolate", "(", "im", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "for", "flip", "in", "flip_comb", ":", "\n", "            ", "im_flip", "=", "tensor_flip", "(", "im", ",", "flip", ")", "\n", "logit", "=", "inference", "(", "\n", "model", ",", "\n", "im_flip", ",", "\n", "is_slide", "=", "is_slide", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "stride", "=", "stride", ")", "\n", "logit", "=", "tensor_flip", "(", "logit", ",", "flip", ")", "\n", "logit", "=", "F", ".", "interpolate", "(", "logit", ",", "(", "h_input", ",", "w_input", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "logit", "=", "F", ".", "softmax", "(", "logit", ",", "axis", "=", "1", ")", "\n", "final_logit", "=", "final_logit", "+", "logit", "\n", "\n", "", "", "final_logit", "=", "F", ".", "softmax", "(", "final_logit", ",", "axis", "=", "1", ")", "\n", "filte", "=", "paddle", ".", "max", "(", "final_logit", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "paddle", ".", "argmax", "(", "\n", "final_logit", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ",", "dtype", "=", "'int32'", ")", ".", "numpy", "(", ")", "\n", "pred", "[", "filte", "<", "0.9", "]", "=", "255", "\n", "pred", "=", "paddle", ".", "to_tensor", "(", "pred", ")", "\n", "pred", "=", "reverse_transform", "(", "pred", ",", "ori_shape", ",", "transforms", ")", "\n", "return", "pred", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.get_reverse_list": [[23, 63], ["reverse_list.append", "reverse_list.append", "max", "min", "reverse_list.append", "int", "round", "reverse_list.append", "int", "round"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "get_reverse_list", "(", "ori_shape", ",", "transforms", ")", ":", "\n", "    ", "\"\"\"\n    get reverse list of transform.\n\n    Args:\n        ori_shape (list): Origin shape of image.\n        transforms (list): List of transform.\n\n    Returns:\n        list: List of tuple, there are two format:\n            ('resize', (h, w)) The image shape before resize,\n            ('padding', (h, w)) The image shape before padding.\n    \"\"\"", "\n", "reverse_list", "=", "[", "]", "\n", "h", ",", "w", "=", "ori_shape", "[", "0", "]", ",", "ori_shape", "[", "1", "]", "\n", "for", "op", "in", "transforms", ":", "\n", "        ", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'Resize'", ",", "'ResizeByLong'", "]", ":", "\n", "            ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "h", ",", "w", "=", "op", ".", "target_size", "[", "0", "]", ",", "op", ".", "target_size", "[", "1", "]", "\n", "", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'Padding'", "]", ":", "\n", "            ", "reverse_list", ".", "append", "(", "(", "'padding'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "w", ",", "h", "=", "op", ".", "target_size", "[", "0", "]", ",", "op", ".", "target_size", "[", "1", "]", "\n", "", "if", "op", ".", "__class__", ".", "__name__", "in", "[", "'LimitLong'", "]", ":", "\n", "            ", "long_edge", "=", "max", "(", "h", ",", "w", ")", "\n", "short_edge", "=", "min", "(", "h", ",", "w", ")", "\n", "if", "(", "(", "op", ".", "max_long", "is", "not", "None", ")", "and", "(", "long_edge", ">", "op", ".", "max_long", ")", ")", ":", "\n", "                ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "long_edge", "=", "op", ".", "max_long", "\n", "short_edge", "=", "int", "(", "round", "(", "short_edge", "*", "op", ".", "max_long", "/", "long_edge", ")", ")", "\n", "", "elif", "(", "(", "op", ".", "min_long", "is", "not", "None", ")", "and", "(", "long_edge", "<", "op", ".", "min_long", ")", ")", ":", "\n", "                ", "reverse_list", ".", "append", "(", "(", "'resize'", ",", "(", "h", ",", "w", ")", ")", ")", "\n", "long_edge", "=", "op", ".", "min_long", "\n", "short_edge", "=", "int", "(", "round", "(", "short_edge", "*", "op", ".", "min_long", "/", "long_edge", ")", ")", "\n", "", "if", "h", ">", "w", ":", "\n", "                ", "h", "=", "long_edge", "\n", "w", "=", "short_edge", "\n", "", "else", ":", "\n", "                ", "w", "=", "long_edge", "\n", "h", "=", "short_edge", "\n", "", "", "", "return", "reverse_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform": [[65, 78], ["infer_ensemble_three.get_reverse_list", "paddle.interpolate", "Exception"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.get_reverse_list"], ["", "def", "reverse_transform", "(", "pred", ",", "ori_shape", ",", "transforms", ")", ":", "\n", "    ", "\"\"\"recover pred to origin shape\"\"\"", "\n", "reverse_list", "=", "get_reverse_list", "(", "ori_shape", ",", "transforms", ")", "\n", "for", "item", "in", "reverse_list", "[", ":", ":", "-", "1", "]", ":", "\n", "        ", "if", "item", "[", "0", "]", "==", "'resize'", ":", "\n", "            ", "h", ",", "w", "=", "item", "[", "1", "]", "[", "0", "]", ",", "item", "[", "1", "]", "[", "1", "]", "\n", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", "\n", "", "elif", "item", "[", "0", "]", "==", "'padding'", ":", "\n", "            ", "h", ",", "w", "=", "item", "[", "1", "]", "[", "0", "]", ",", "item", "[", "1", "]", "[", "1", "]", "\n", "pred", "=", "pred", "[", ":", ",", ":", ",", "0", ":", "h", ",", "0", ":", "w", "]", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Unexpected info '{}' in im_info\"", ".", "format", "(", "item", "[", "0", "]", ")", ")", "\n", "", "", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.flip_combination": [[80, 101], ["flip_comb.append", "flip_comb.append", "flip_comb.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "flip_combination", "(", "flip_horizontal", "=", "False", ",", "flip_vertical", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Get flip combination.\n\n    Args:\n        flip_horizontal (bool): Whether to flip horizontally. Default: False.\n        flip_vertical (bool): Whether to flip vertically. Default: False.\n\n    Returns:\n        list: List of tuple. The first element of tuple is whether to flip horizontally,\n            and the second is whether to flip vertically.\n    \"\"\"", "\n", "\n", "flip_comb", "=", "[", "(", "False", ",", "False", ")", "]", "\n", "if", "flip_horizontal", ":", "\n", "        ", "flip_comb", ".", "append", "(", "(", "True", ",", "False", ")", ")", "\n", "", "if", "flip_vertical", ":", "\n", "        ", "flip_comb", ".", "append", "(", "(", "False", ",", "True", ")", ")", "\n", "if", "flip_horizontal", ":", "\n", "            ", "flip_comb", ".", "append", "(", "(", "True", ",", "True", ")", ")", "\n", "", "", "return", "flip_comb", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip": [[103, 110], ["None"], "function", ["None"], ["", "def", "tensor_flip", "(", "x", ",", "flip", ")", ":", "\n", "    ", "\"\"\"Flip tensor according directions\"\"\"", "\n", "if", "flip", "[", "0", "]", ":", "\n", "        ", "x", "=", "x", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "", "if", "flip", "[", "1", "]", ":", "\n", "        ", "x", "=", "x", "[", ":", ",", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference": [[112, 155], ["paddle.softmax", "paddle.softmax", "paddle.argmax", "paddle.argmax", "infer_ensemble_three.reverse_transform", "model", "model_hard"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model"], ["", "def", "inference", "(", "model", ",", "\n", "model_hard", ",", "\n", "im", ",", "\n", "ori_shape", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Inference for image.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        ori_shape (list): Origin shape of image.\n        transforms (list): Transforms for image.\n        is_slide (bool): Whether to infer by sliding window. Default: False.\n        crop_size (tuple|list). The size of sliding window, (w, h). It should be probided if is_slide is True.\n        stride (tuple|list). The size of stride, (w, h). It should be probided if is_slide is True.\n\n    Returns:\n        Tensor: If ori_shape is not None, a prediction with shape (1, 1, h, w) is returned.\n            If ori_shape is None, a logit with shape (1, num_classes, h, w) is returned.\n    \"\"\"", "\n", "if", "not", "is_slide", ":", "\n", "# logits = model(im)[0]", "\n", "# logits_hard = model_hard(im)[0]", "\n", "\n", "        ", "logits", "=", "F", ".", "softmax", "(", "model", "(", "im", ")", "[", "0", "]", ",", "axis", "=", "1", ")", "\n", "logits_hard", "=", "F", ".", "softmax", "(", "model_hard", "(", "im", ")", "[", "0", "]", ",", "axis", "=", "1", ")", "\n", "\n", "#         logit_hard = logits.clone()", "\n", "#         for ii in range(logits.shape[0]):", "\n", "#             logit_hard[ii] = paddle.scatter(logit_hard[ii], paddle.to_tensor([3, 7, 12, 14, 15, 16, 18, 19, 20, 21]), logits_hard[ii][1:], overwrite=True, name=None)", "\n", "logit", "=", "logits", "+", "logits_hard", "\n", "# logit = logit_hard", "\n", "\n", "", "if", "ori_shape", "is", "not", "None", ":", "\n", "        ", "pred", "=", "paddle", ".", "argmax", "(", "logit", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ",", "dtype", "=", "'int32'", ")", "\n", "pred", "=", "reverse_transform", "(", "pred", ",", "ori_shape", ",", "transforms", ")", "\n", "return", "pred", "\n", "", "else", ":", "\n", "        ", "return", "logit", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.aug_inference": [[157, 215], ["isinstance", "infer_ensemble_three.flip_combination", "int", "int", "paddle.interpolate", "isinstance", "TypeError", "infer_ensemble_three.tensor_flip", "infer_ensemble_three.inference", "infer_ensemble_three.tensor_flip", "paddle.interpolate", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.flip_combination", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.tensor_flip"], ["", "", "def", "aug_inference", "(", "model", ",", "\n", "model_hard", ",", "\n", "im", ",", "\n", "ori_shape", ",", "\n", "transforms", ",", "\n", "scales", "=", "1.0", ",", "\n", "flip_horizontal", "=", "False", ",", "\n", "flip_vertical", "=", "False", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Infer with augmentation.\n\n    Args:\n        model (paddle.nn.Layer): model to get logits of image.\n        im (Tensor): the input image.\n        ori_shape (list): Origin shape of image.\n        transforms (list): Transforms for image.\n        scales (float|tuple|list):  Scales for resize. Default: 1.\n        flip_horizontal (bool): Whether to flip horizontally. Default: False.\n        flip_vertical (bool): Whether to flip vertically. Default: False.\n        is_slide (bool): Whether to infer by sliding wimdow. Default: False.\n        crop_size (tuple|list). The size of sliding window, (w, h). It should be probided if is_slide is True.\n        stride (tuple|list). The size of stride, (w, h). It should be probided if is_slide is True.\n\n    Returns:\n        Tensor: Prediction of image with shape (1, 1, h, w) is returned.\n    \"\"\"", "\n", "if", "isinstance", "(", "scales", ",", "float", ")", ":", "\n", "        ", "scales", "=", "[", "scales", "]", "\n", "", "elif", "not", "isinstance", "(", "scales", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'`scales` expects float/tuple/list type, but received {}'", ".", "format", "(", "\n", "type", "(", "scales", ")", ")", ")", "\n", "", "final_logit", "=", "0", "\n", "h_input", ",", "w_input", "=", "im", ".", "shape", "[", "-", "2", "]", ",", "im", ".", "shape", "[", "-", "1", "]", "\n", "flip_comb", "=", "flip_combination", "(", "flip_horizontal", ",", "flip_vertical", ")", "\n", "for", "scale", "in", "scales", ":", "\n", "        ", "h", "=", "int", "(", "h_input", "*", "scale", "+", "0.5", ")", "\n", "w", "=", "int", "(", "w_input", "*", "scale", "+", "0.5", ")", "\n", "im", "=", "F", ".", "interpolate", "(", "im", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "for", "flip", "in", "flip_comb", ":", "\n", "            ", "im_flip", "=", "tensor_flip", "(", "im", ",", "flip", ")", "\n", "logit", "=", "inference", "(", "\n", "model", ",", "\n", "model_hard", ",", "\n", "im_flip", ",", "\n", "is_slide", "=", "is_slide", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "stride", "=", "stride", ")", "\n", "logit", "=", "tensor_flip", "(", "logit", ",", "flip", ")", "\n", "logit", "=", "F", ".", "interpolate", "(", "logit", ",", "(", "h_input", ",", "w_input", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "#             logit = F.softmax(logit, axis=1)", "\n", "final_logit", "=", "final_logit", "+", "logit", "\n", "\n", "", "", "return", "final_logit", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_generate_autolabel.mkdir": [[27, 31], ["os.path.dirname", "os.path.exists", "os.makedirs"], "function", ["None"], ["def", "mkdir", "(", "path", ")", ":", "\n", "    ", "sub_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "sub_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "sub_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_generate_autolabel.partition_list": [[33, 37], ["int", "math.ceil", "range", "len", "float", "len"], "function", ["None"], ["", "", "def", "partition_list", "(", "arr", ",", "m", ")", ":", "\n", "    ", "\"\"\"split the list 'arr' into m pieces\"\"\"", "\n", "n", "=", "int", "(", "math", ".", "ceil", "(", "len", "(", "arr", ")", "/", "float", "(", "m", ")", ")", ")", "\n", "return", "[", "arr", "[", "i", ":", "i", "+", "n", "]", "for", "i", "in", "range", "(", "0", ",", "len", "(", "arr", ")", ",", "n", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_generate_autolabel.predictAutolabel": [[39, 146], ["paddleseg.utils.utils.load_entire_model", "model.eval", "paddle.distributed.get_world_size", "paddle.distributed.get_rank", "os.path.join", "os.path.join", "paddleseg.utils.logger.info", "paddleseg.utils.progbar.Progbar", "predict_generate_autolabel.partition_list", "paddle.no_grad", "enumerate", "len", "cv2.imread", "transforms", "paddle.to_tensor", "paddle.squeeze", "infer_generate_autolabel.inference.numpy().astype", "paddleseg.utils.visualize.visualize", "os.path.join", "predict_generate_autolabel.mkdir", "cv2.imwrite", "paddleseg.utils.visualize.get_pseudo_color_map", "os.path.join", "predict_generate_autolabel.mkdir", "utils.visualize.get_pseudo_color_map.save", "progbar.Progbar.update", "core.infer_generate_autolabel.aug_inference", "core.infer_generate_autolabel.inference", "im_path.replace", "os.path.basename", "infer_generate_autolabel.inference.numpy", "os.path.basename.rsplit"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble.partition_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.visualize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.aug_inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference"], ["", "def", "predictAutolabel", "(", "model", ",", "\n", "model_path", ",", "\n", "transforms", ",", "\n", "image_list", ",", "\n", "image_dir", "=", "None", ",", "\n", "save_dir", "=", "'output'", ",", "\n", "aug_pred", "=", "False", ",", "\n", "scales", "=", "1.0", ",", "\n", "flip_horizontal", "=", "True", ",", "\n", "flip_vertical", "=", "False", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    predict and visualize the image_list.\n\n    Args:\n        model (nn.Layer): Used to predict for input image.\n        model_path (str): The path of pretrained model.\n        transforms (transform.Compose): Preprocess for input image.\n        image_list (list): A list of image path to be predicted.\n        image_dir (str, optional): The root directory of the images predicted. Default: None.\n        save_dir (str, optional): The directory to save the visualized results. Default: 'output'.\n        aug_pred (bool, optional): Whether to use mulit-scales and flip augment for predition. Default: False.\n        scales (list|float, optional): Scales for augment. It is valid when `aug_pred` is True. Default: 1.0.\n        flip_horizontal (bool, optional): Whether to use flip horizontally augment. It is valid when `aug_pred` is True. Default: True.\n        flip_vertical (bool, optional): Whether to use flip vertically augment. It is valid when `aug_pred` is True. Default: False.\n        is_slide (bool, optional): Whether to predict by sliding window. Default: False.\n        stride (tuple|list, optional): The stride of sliding window, the first is width and the second is height.\n            It should be provided when `is_slide` is True.\n        crop_size (tuple|list, optional):  The crop size of sliding window, the first is width and the second is height.\n            It should be provided when `is_slide` is True.\n\n    \"\"\"", "\n", "utils", ".", "utils", ".", "load_entire_model", "(", "model", ",", "model_path", ")", "\n", "model", ".", "eval", "(", ")", "\n", "nranks", "=", "paddle", ".", "distributed", ".", "get_world_size", "(", ")", "\n", "local_rank", "=", "paddle", ".", "distributed", ".", "get_rank", "(", ")", "\n", "if", "nranks", ">", "1", ":", "\n", "        ", "img_lists", "=", "partition_list", "(", "image_list", ",", "nranks", ")", "\n", "", "else", ":", "\n", "        ", "img_lists", "=", "[", "image_list", "]", "\n", "\n", "", "added_saved_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'added_prediction'", ")", "\n", "pred_saved_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'pseudo_color_prediction'", ")", "\n", "\n", "logger", ".", "info", "(", "\"Start to predict...\"", ")", "\n", "progbar_pred", "=", "progbar", ".", "Progbar", "(", "target", "=", "len", "(", "img_lists", "[", "0", "]", ")", ",", "verbose", "=", "1", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "im_path", "in", "enumerate", "(", "img_lists", "[", "local_rank", "]", ")", ":", "\n", "            ", "im", "=", "cv2", ".", "imread", "(", "im_path", ")", "\n", "ori_shape", "=", "im", ".", "shape", "[", ":", "2", "]", "\n", "im", ",", "_", "=", "transforms", "(", "im", ")", "\n", "im", "=", "im", "[", "np", ".", "newaxis", ",", "...", "]", "\n", "im", "=", "paddle", ".", "to_tensor", "(", "im", ")", "\n", "\n", "if", "aug_pred", ":", "\n", "                ", "pred", "=", "infer_generate_autolabel", ".", "aug_inference", "(", "\n", "model", ",", "\n", "im", ",", "\n", "ori_shape", "=", "ori_shape", ",", "\n", "transforms", "=", "transforms", ".", "transforms", ",", "\n", "scales", "=", "scales", ",", "\n", "flip_horizontal", "=", "flip_horizontal", ",", "\n", "flip_vertical", "=", "flip_vertical", ",", "\n", "is_slide", "=", "is_slide", ",", "\n", "stride", "=", "stride", ",", "\n", "crop_size", "=", "crop_size", ")", "\n", "", "else", ":", "\n", "                ", "pred", "=", "infer_generate_autolabel", ".", "inference", "(", "\n", "model", ",", "\n", "im", ",", "\n", "ori_shape", "=", "ori_shape", ",", "\n", "transforms", "=", "transforms", ".", "transforms", ",", "\n", "is_slide", "=", "is_slide", ",", "\n", "stride", "=", "stride", ",", "\n", "crop_size", "=", "crop_size", ")", "\n", "", "pred", "=", "paddle", ".", "squeeze", "(", "pred", ")", "\n", "pred", "=", "pred", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "# get the saved name", "\n", "if", "image_dir", "is", "not", "None", ":", "\n", "                ", "im_file", "=", "im_path", ".", "replace", "(", "image_dir", ",", "''", ")", "\n", "", "else", ":", "\n", "                ", "im_file", "=", "os", ".", "path", ".", "basename", "(", "im_path", ")", "\n", "", "if", "im_file", "[", "0", "]", "==", "'/'", ":", "\n", "                ", "im_file", "=", "im_file", "[", "1", ":", "]", "\n", "\n", "# save added image", "\n", "", "added_image", "=", "utils", ".", "visualize", ".", "visualize", "(", "im_path", ",", "pred", ",", "weight", "=", "0.6", ")", "\n", "added_image_path", "=", "os", ".", "path", ".", "join", "(", "added_saved_dir", ",", "im_file", ")", "\n", "mkdir", "(", "added_image_path", ")", "\n", "cv2", ".", "imwrite", "(", "added_image_path", ",", "added_image", ")", "\n", "\n", "# save pseudo color prediction", "\n", "pred_mask", "=", "utils", ".", "visualize", ".", "get_pseudo_color_map", "(", "pred", ")", "\n", "pred_saved_path", "=", "os", ".", "path", ".", "join", "(", "pred_saved_dir", ",", "\n", "im_file", ".", "rsplit", "(", "\".\"", ")", "[", "0", "]", "+", "\".png\"", ")", "\n", "mkdir", "(", "pred_saved_path", ")", "\n", "pred_mask", ".", "save", "(", "pred_saved_path", ")", "\n", "\n", "# pred_im = utils.visualize(im_path, pred, weight=0.0)", "\n", "# pred_saved_path = os.path.join(pred_saved_dir, im_file)", "\n", "# mkdir(pred_saved_path)", "\n", "# cv2.imwrite(pred_saved_path, pred_im)", "\n", "\n", "progbar_pred", ".", "update", "(", "i", "+", "1", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.val_crop.evaluate": [[28, 189], ["model.eval", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DataLoader", "paddle.io.DataLoader", "len", "paddleseg.utils.progbar.Progbar", "paddleseg.utils.TimeAverager", "paddleseg.utils.TimeAverager", "time.time", "paddleseg.utils.metrics.mean_iou", "paddleseg.utils.metrics.accuracy", "paddleseg.utils.metrics.kappa", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddleseg.utils.logger.info", "paddle.no_grad", "paddle.no_grad", "enumerate", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "paddle.distributed.parallel.parallel_helper._is_parallel_ctx_initialized", "paddle.distributed.parallel.parallel_helper._is_parallel_ctx_initialized", "paddle.distributed.init_parallel_env", "paddle.distributed.init_parallel_env", "paddleseg.utils.TimeAverager.record", "data[].astype", "range", "paddle.concat", "paddle.concat", "paddle.argmax", "paddle.argmax", "paddleseg.utils.metrics.calculate_area", "paddleseg.utils.TimeAverager.record", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.TimeAverager.reset", "paddleseg.utils.TimeAverager.reset", "time.time", "len", "preds.append", "paddle.distributed.all_gather", "paddle.distributed.all_gather", "paddle.distributed.all_gather", "paddle.distributed.all_gather", "paddle.distributed.all_gather", "paddle.distributed.all_gather", "range", "progbar.Progbar.update", "len", "str", "str", "time.time", "core.infer_crop.aug_inference", "core.infer_crop.inference", "len", "len", "time.time", "len", "numpy.round", "numpy.round", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.mean_iou", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.accuracy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.kappa", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.calculate_area", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.aug_inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference"], ["def", "evaluate", "(", "model", ",", "\n", "eval_dataset", ",", "\n", "aug_eval", "=", "False", ",", "\n", "scales", "=", "1.0", ",", "\n", "flip_horizontal", "=", "True", ",", "\n", "flip_vertical", "=", "False", ",", "\n", "is_slide", "=", "False", ",", "\n", "stride", "=", "None", ",", "\n", "crop_size", "=", "None", ",", "\n", "num_workers", "=", "0", ",", "\n", "print_detail", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Launch evalution.\n\n    Args:\n        model\uff08nn.Layer): A sementic segmentation model.\n        eval_dataset (paddle.io.Dataset): Used to read and process validation datasets.\n        aug_eval (bool, optional): Whether to use mulit-scales and flip augment for evaluation. Default: False.\n        scales (list|float, optional): Scales for augment. It is valid when `aug_eval` is True. Default: 1.0.\n        flip_horizontal (bool, optional): Whether to use flip horizontally augment. It is valid when `aug_eval` is True. Default: True.\n        flip_vertical (bool, optional): Whether to use flip vertically augment. It is valid when `aug_eval` is True. Default: False.\n        is_slide (bool, optional): Whether to evaluate by sliding window. Default: False.\n        stride (tuple|list, optional): The stride of sliding window, the first is width and the second is height.\n            It should be provided when `is_slide` is True.\n        crop_size (tuple|list, optional):  The crop size of sliding window, the first is width and the second is height.\n            It should be provided when `is_slide` is True.\n        num_workers (int, optional): Num workers for data loader. Default: 0.\n        print_detail (bool, optional): Whether to print detailed information about the evaluation process. Default: True.\n\n    Returns:\n        float: The mIoU of validation datasets.\n        float: The accuracy of validation datasets.\n    \"\"\"", "\n", "model", ".", "eval", "(", ")", "\n", "nranks", "=", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "nranks", "\n", "local_rank", "=", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "local_rank", "\n", "if", "nranks", ">", "1", ":", "\n", "# Initialize parallel environment if not done.", "\n", "        ", "if", "not", "paddle", ".", "distributed", ".", "parallel", ".", "parallel_helper", ".", "_is_parallel_ctx_initialized", "(", "\n", ")", ":", "\n", "            ", "paddle", ".", "distributed", ".", "init_parallel_env", "(", ")", "\n", "", "", "batch_sampler", "=", "paddle", ".", "io", ".", "DistributedBatchSampler", "(", "\n", "eval_dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ")", "\n", "loader", "=", "paddle", ".", "io", ".", "DataLoader", "(", "\n", "eval_dataset", ",", "\n", "batch_sampler", "=", "batch_sampler", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "return_list", "=", "True", ",", ")", "\n", "\n", "total_iters", "=", "len", "(", "loader", ")", "\n", "intersect_area_all", "=", "0", "\n", "pred_area_all", "=", "0", "\n", "label_area_all", "=", "0", "\n", "\n", "if", "print_detail", ":", "\n", "        ", "logger", ".", "info", "(", "\"Start evaluating (total_samples={}, total_iters={})...\"", ".", "\n", "format", "(", "len", "(", "eval_dataset", ")", ",", "total_iters", ")", ")", "\n", "", "progbar_val", "=", "progbar", ".", "Progbar", "(", "target", "=", "total_iters", ",", "verbose", "=", "1", ")", "\n", "reader_cost_averager", "=", "TimeAverager", "(", ")", "\n", "batch_cost_averager", "=", "TimeAverager", "(", ")", "\n", "batch_start", "=", "time", ".", "time", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "iter", ",", "data", "in", "enumerate", "(", "loader", ")", ":", "\n", "            ", "reader_cost_averager", ".", "record", "(", "time", ".", "time", "(", ")", "-", "batch_start", ")", "\n", "preds", "=", "[", "]", "\n", "label", "=", "data", "[", "3", "]", ".", "astype", "(", "'int64'", ")", "\n", "for", "ii", "in", "range", "(", "3", ")", ":", "\n", "                ", "im", "=", "data", "[", "ii", "]", "\n", "ori_shape", "=", "im", ".", "shape", "[", "-", "2", ":", "]", "\n", "if", "aug_eval", ":", "\n", "                    ", "pred", "=", "infer_crop", ".", "aug_inference", "(", "\n", "model", ",", "\n", "im", ",", "\n", "ori_shape", "=", "ori_shape", ",", "\n", "transforms", "=", "eval_dataset", ".", "transforms", ".", "transforms", ",", "\n", "scales", "=", "scales", ",", "\n", "flip_horizontal", "=", "flip_horizontal", ",", "\n", "flip_vertical", "=", "flip_vertical", ",", "\n", "is_slide", "=", "is_slide", ",", "\n", "stride", "=", "stride", ",", "\n", "crop_size", "=", "crop_size", ")", "\n", "", "else", ":", "\n", "                    ", "pred", "=", "infer_crop", ".", "inference", "(", "\n", "model", ",", "\n", "im", ",", "\n", "ori_shape", "=", "ori_shape", ",", "\n", "transforms", "=", "eval_dataset", ".", "transforms", ".", "transforms", ",", "\n", "is_slide", "=", "is_slide", ",", "\n", "stride", "=", "stride", ",", "\n", "crop_size", "=", "crop_size", ")", "\n", "", "preds", ".", "append", "(", "pred", ")", "\n", "\n", "", "left_ensem", "=", "(", "\n", "preds", "[", "0", "]", "[", ":", ",", ":", ",", ":", ",", "640", ":", "1280", "]", "+", "preds", "[", "1", "]", "[", ":", ",", ":", ",", ":", ",", "0", ":", "640", "]", ")", "/", "2", "\n", "right_ensem", "=", "(", "\n", "preds", "[", "1", "]", "[", ":", ",", ":", ",", ":", ",", "640", ":", "1280", "]", "+", "preds", "[", "2", "]", "[", ":", ",", ":", ",", ":", ",", "0", ":", "640", "]", ")", "/", "2", "\n", "pred_ensem", "=", "paddle", ".", "concat", "(", "\n", "[", "\n", "preds", "[", "0", "]", "[", ":", ",", ":", ",", ":", ",", "0", ":", "640", "]", ",", "left_ensem", ",", "right_ensem", ",", "\n", "preds", "[", "2", "]", "[", ":", ",", ":", ",", ":", ",", "640", ":", "1280", "]", "\n", "]", ",", "\n", "axis", "=", "3", ")", "\n", "pred", "=", "paddle", ".", "argmax", "(", "\n", "pred_ensem", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ",", "dtype", "=", "'int32'", ")", "\n", "\n", "intersect_area", ",", "pred_area", ",", "label_area", "=", "metrics", ".", "calculate_area", "(", "\n", "pred", ",", "\n", "label", ",", "\n", "eval_dataset", ".", "num_classes", ",", "\n", "ignore_index", "=", "eval_dataset", ".", "ignore_index", ")", "\n", "\n", "# Gather from all ranks", "\n", "if", "nranks", ">", "1", ":", "\n", "                ", "intersect_area_list", "=", "[", "]", "\n", "pred_area_list", "=", "[", "]", "\n", "label_area_list", "=", "[", "]", "\n", "paddle", ".", "distributed", ".", "all_gather", "(", "intersect_area_list", ",", "\n", "intersect_area", ")", "\n", "paddle", ".", "distributed", ".", "all_gather", "(", "pred_area_list", ",", "pred_area", ")", "\n", "paddle", ".", "distributed", ".", "all_gather", "(", "label_area_list", ",", "label_area", ")", "\n", "\n", "# Some image has been evaluated and should be eliminated in last iter", "\n", "if", "(", "iter", "+", "1", ")", "*", "nranks", ">", "len", "(", "eval_dataset", ")", ":", "\n", "                    ", "valid", "=", "len", "(", "eval_dataset", ")", "-", "iter", "*", "nranks", "\n", "intersect_area_list", "=", "intersect_area_list", "[", ":", "valid", "]", "\n", "pred_area_list", "=", "pred_area_list", "[", ":", "valid", "]", "\n", "label_area_list", "=", "label_area_list", "[", ":", "valid", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "intersect_area_list", ")", ")", ":", "\n", "                    ", "intersect_area_all", "=", "intersect_area_all", "+", "intersect_area_list", "[", "\n", "i", "]", "\n", "pred_area_all", "=", "pred_area_all", "+", "pred_area_list", "[", "i", "]", "\n", "label_area_all", "=", "label_area_all", "+", "label_area_list", "[", "i", "]", "\n", "", "", "else", ":", "\n", "                ", "intersect_area_all", "=", "intersect_area_all", "+", "intersect_area", "\n", "pred_area_all", "=", "pred_area_all", "+", "pred_area", "\n", "label_area_all", "=", "label_area_all", "+", "label_area", "\n", "\n", "", "batch_cost_averager", ".", "record", "(", "\n", "time", ".", "time", "(", ")", "-", "batch_start", ",", "num_samples", "=", "len", "(", "label", ")", ")", "\n", "batch_cost", "=", "batch_cost_averager", ".", "get_average", "(", ")", "\n", "reader_cost", "=", "reader_cost_averager", ".", "get_average", "(", ")", "\n", "\n", "if", "local_rank", "==", "0", "and", "print_detail", ":", "\n", "                ", "progbar_val", ".", "update", "(", "iter", "+", "1", ",", "[", "(", "'batch_cost'", ",", "batch_cost", ")", ",", "\n", "(", "'reader cost'", ",", "reader_cost", ")", "]", ")", "\n", "", "reader_cost_averager", ".", "reset", "(", ")", "\n", "batch_cost_averager", ".", "reset", "(", ")", "\n", "batch_start", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "", "class_iou", ",", "miou", "=", "metrics", ".", "mean_iou", "(", "intersect_area_all", ",", "pred_area_all", ",", "\n", "label_area_all", ")", "\n", "class_acc", ",", "acc", "=", "metrics", ".", "accuracy", "(", "intersect_area_all", ",", "pred_area_all", ")", "\n", "kappa", "=", "metrics", ".", "kappa", "(", "intersect_area_all", ",", "pred_area_all", ",", "label_area_all", ")", "\n", "\n", "if", "print_detail", ":", "\n", "        ", "logger", ".", "info", "(", "\"[EVAL] #Images={} mIoU={:.4f} Acc={:.4f} Kappa={:.4f} \"", ".", "\n", "format", "(", "len", "(", "eval_dataset", ")", ",", "miou", ",", "acc", ",", "kappa", ")", ")", "\n", "logger", ".", "info", "(", "\"[EVAL] Class IoU: \\n\"", "+", "str", "(", "np", ".", "round", "(", "class_iou", ",", "4", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"[EVAL] Class Acc: \\n\"", "+", "str", "(", "np", ".", "round", "(", "class_acc", ",", "4", ")", ")", ")", "\n", "", "return", "miou", ",", "acc", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble_three.mkdir": [[29, 33], ["os.path.dirname", "os.path.exists", "os.makedirs"], "function", ["None"], ["# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble_three.partition_list": [[35, 39], ["int", "math.ceil", "range", "len", "float", "len"], "function", ["None"], ["help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config_1\"", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble_three.predictEnsembleThree": [[41, 214], ["paddleseg.utils.utils.load_entire_model", "model.eval", "paddleseg.utils.utils.load_entire_model", "model_1.eval", "paddleseg.utils.utils.load_entire_model", "model_crop.eval", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_rank", "paddle.distributed.get_rank", "os.path.join", "os.path.join", "paddleseg.utils.logger.info", "paddleseg.utils.progbar.Progbar", "predict_ensemble_three.partition_list", "paddle.no_grad", "paddle.no_grad", "enumerate", "len", "cv2.imread", "transforms", "paddle.to_tensor", "paddle.to_tensor", "transforms_crop", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "range", "paddle.concat", "paddle.concat", "paddle.interpolate", "infer_ensemble.inference.clone", "paddle.interpolate", "paddle.argmax", "paddle.argmax", "paddle.squeeze", "paddle.squeeze", "infer_ensemble.inference.numpy().astype", "paddleseg.utils.visualize.visualize", "os.path.join", "predict_ensemble_three.mkdir", "cv2.imwrite", "paddleseg.utils.visualize.get_pseudo_color_map", "os.path.join", "predict_ensemble_three.mkdir", "utils.visualize.get_pseudo_color_map.save", "progbar.Progbar.update", "core.aug_inference", "core.inference", "preds.append", "im_path.replace", "os.path.basename", "core.aug_inference", "core.inference", "infer_ensemble.inference.numpy", "os.path.basename.rsplit"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble.partition_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.visualize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.aug_inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.aug_inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference"], ["help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path_1'", ",", "\n", "dest", "=", "'model_path_1'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config_crop\"", ",", "\n", "dest", "=", "\"cfg_crop\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path_crop'", ",", "\n", "dest", "=", "'model_path_crop'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The path of image, it can be a file or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "get_image_list", "(", "image_path", ")", ":", "\n", "    ", "\"\"\"Get image list\"\"\"", "\n", "valid_suffix", "=", "[", "\n", "'.JPEG'", ",", "'.jpeg'", ",", "'.JPG'", ",", "'.jpg'", ",", "'.BMP'", ",", "'.bmp'", ",", "'.PNG'", ",", "'.png'", "\n", "]", "\n", "image_list", "=", "[", "]", "\n", "image_dir", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "image_path", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "splitext", "(", "image_path", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "            ", "image_list", ".", "append", "(", "image_path", ")", "\n", "", "", "elif", "os", ".", "path", ".", "isdir", "(", "image_path", ")", ":", "\n", "        ", "image_dir", "=", "image_path", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "image_path", ")", ":", "\n", "            ", "for", "f", "in", "files", ":", "\n", "                ", "if", "'.ipynb_checkpoints'", "in", "root", ":", "\n", "                    ", "continue", "\n", "", "if", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "                    ", "image_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", "f", ")", ")", "\n", "", "", "", "", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\n", "'`--image_path` is not found. it should be an image file or a directory including images'", "\n", ")", "\n", "\n", "", "if", "len", "(", "image_list", ")", "==", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "'There are not image file in `--image_path`'", ")", "\n", "\n", "", "return", "image_list", ",", "image_dir", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "val_dataset", "=", "cfg", ".", "val_dataset", "\n", "cfg_1", "=", "Config", "(", "args", ".", "cfg_1", ")", "\n", "cfg_crop", "=", "Config", "(", "args", ".", "cfg_crop", ")", "\n", "val_dataset_crop", "=", "cfg_crop", ".", "val_dataset", "\n", "\n", "if", "not", "val_dataset", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The verification dataset is not specified in the configuration file.'", "\n", ")", "\n", "\n", "", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "model_1", "=", "cfg_1", ".", "model", "\n", "model_crop", "=", "cfg_crop", ".", "model", "\n", "transforms", "=", "val_dataset", ".", "transforms", "\n", "transforms_crop", "=", "val_dataset_crop", ".", "transforms", "\n", "image_list", ",", "image_dir", "=", "get_image_list", "(", "args", ".", "image_path", ")", "\n", "logger", ".", "info", "(", "'Number of predict images = {}'", ".", "format", "(", "len", "(", "image_list", ")", ")", ")", "\n", "predictEnsembleThree", "(", "\n", "model", ",", "\n", "model_1", ",", "\n", "model_crop", ",", "\n", "model_path", "=", "args", ".", "model_path", ",", "\n", "model_path_1", "=", "args", ".", "model_path_1", ",", "\n", "model_path_crop", "=", "args", ".", "model_path_crop", ",", "\n", "transforms", "=", "transforms", ",", "\n", "transforms_crop", "=", "transforms_crop", ",", "\n", "image_list", "=", "image_list", ",", "\n", "image_dir", "=", "image_dir", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "aug_pred", "=", "args", ".", "aug_pred", ",", "\n", "scales", "=", "args", ".", "scales", ",", "\n", "flip_horizontal", "=", "args", ".", "flip_horizontal", ",", "\n", "flip_vertical", "=", "args", ".", "flip_vertical", ",", "\n", "is_slide", "=", "args", ".", "is_slide", ",", "\n", "crop_size", "=", "args", ".", "crop_size", ",", "\n", "stride", "=", "args", ".", "stride", ",", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "main", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble.mkdir": [[27, 31], ["os.path.dirname", "os.path.exists", "os.makedirs"], "function", ["None"], ["    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model prediction'", ")", "\n", "\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble.partition_list": [[33, 37], ["int", "math.ceil", "range", "len", "float", "len"], "function", ["None"], ["'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble.predictEnsemble": [[39, 152], ["paddleseg.utils.utils.load_entire_model", "model.eval", "paddleseg.utils.utils.load_entire_model", "model_hard.eval", "paddle.distributed.get_world_size", "paddle.distributed.get_rank", "os.path.join", "os.path.join", "paddleseg.utils.logger.info", "paddleseg.utils.progbar.Progbar", "predict_ensemble.partition_list", "paddle.no_grad", "enumerate", "len", "cv2.imread", "transforms", "paddle.to_tensor", "paddle.squeeze", "infer_ensemble.inference.numpy().astype", "paddleseg.utils.visualize.visualize", "os.path.join", "predict_ensemble.mkdir", "cv2.imwrite", "paddleseg.utils.visualize.get_pseudo_color_map", "os.path.join", "predict_ensemble.mkdir", "utils.visualize.get_pseudo_color_map.save", "progbar.Progbar.update", "core.aug_inference", "core.inference", "im_path.replace", "os.path.basename", "infer_ensemble.inference.numpy", "os.path.basename.rsplit"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble.partition_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tools.prepare.Prep.visualize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.aug_inference", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.inference"], ["\"--config_hard\"", ",", "\n", "dest", "=", "\"cfg_hard\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path_hard'", ",", "\n", "dest", "=", "'model_path_hard'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The path of image, it can be a file or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "get_image_list", "(", "image_path", ")", ":", "\n", "    ", "\"\"\"Get image list\"\"\"", "\n", "valid_suffix", "=", "[", "\n", "'.JPEG'", ",", "'.jpeg'", ",", "'.JPG'", ",", "'.jpg'", ",", "'.BMP'", ",", "'.bmp'", ",", "'.PNG'", ",", "'.png'", "\n", "]", "\n", "image_list", "=", "[", "]", "\n", "image_dir", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "image_path", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "splitext", "(", "image_path", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "            ", "image_list", ".", "append", "(", "image_path", ")", "\n", "", "", "elif", "os", ".", "path", ".", "isdir", "(", "image_path", ")", ":", "\n", "        ", "image_dir", "=", "image_path", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "image_path", ")", ":", "\n", "            ", "for", "f", "in", "files", ":", "\n", "                ", "if", "'.ipynb_checkpoints'", "in", "root", ":", "\n", "                    ", "continue", "\n", "", "if", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "                    ", "image_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", "f", ")", ")", "\n", "", "", "", "", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\n", "'`--image_path` is not found. it should be an image file or a directory including images'", "\n", ")", "\n", "\n", "", "if", "len", "(", "image_list", ")", "==", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "'There are not image file in `--image_path`'", ")", "\n", "\n", "", "return", "image_list", ",", "image_dir", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "val_dataset", "=", "cfg", ".", "val_dataset", "\n", "cfg_hard", "=", "Config", "(", "args", ".", "cfg_hard", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.get_save_name": [[40, 49], ["im_path.replace", "os.path.basename"], "function", ["None"], ["dest", "=", "'image_path'", ",", "\n", "help", "=", "'The image to predict, which can be a path of image, or a file list containing image paths, or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict.add_info_to_save_path": [[51, 57], ["os.path.splitext"], "function", ["None"], ["# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.find_instance_center": [[93, 132], ["paddle.thresholded_relu", "ctr_hmp.squeeze.unsqueeze", "paddle.max_pool2d", "ctr_hmp.squeeze.squeeze", "len", "ValueError", "paddle.topk", "paddle.topk", "ctr_hmp_k.sum", "paddle.nonzero", "paddle.nonzero", "paddle.flatten", "paddle.flatten"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["help", "=", "'Enable to use mkldnn to speed up when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_trt'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to use Nvidia TensorRT to accelerate prediction.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", ",", "\"int8\"", "]", ",", "\n", "help", "=", "'The tensorrt precision.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_auto_tune'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to enable tuned dynamic shape. We uses some images to collect '", "\n", "'the dynamic shape for trt sub graph, which avoids setting dynamic shape manually.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--auto_tuned_shape_file'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"auto_tune_tmp.pbtxt\"", ",", "\n", "help", "=", "'The temp file to save tuned dynamic shape.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "\"--benchmark\"", ",", "\n", "type", "=", "eval", ",", "\n", "default", "=", "False", ",", "\n", "help", "=", "\"Whether to log some information about environment, model, configuration and performance.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--model_name\"", ",", "\n", "default", "=", "\"\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'When `--benchmark` is True, the specified model name is displayed.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.group_pixels": [[134, 169], ["paddle.arange().reshape", "paddle.arange().reshape", "paddle.concat", "paddle.concat", "paddle.arange().reshape", "paddle.arange().reshape", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "ctr_loc.unsqueeze.reshape().transpose", "ctr.unsqueeze.unsqueeze", "ctr_loc.unsqueeze.unsqueeze", "paddle.norm", "paddle.norm", "paddle.argmin().reshape", "paddle.argmin().reshape", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "ctr_loc.unsqueeze.reshape", "paddle.argmin", "paddle.argmin"], "function", ["None"], ["default", "=", "True", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Print GLOG information of Paddle Inference.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "use_auto_tune", "(", "args", ")", ":", "\n", "    ", "return", "hasattr", "(", "PredictConfig", ",", "\"collect_shape_range_info\"", ")", "and", "hasattr", "(", "PredictConfig", ",", "\"enable_tuned_tensorrt_dynamic_shape\"", ")", "and", "args", ".", "device", "==", "\"gpu\"", "and", "args", ".", "use_trt", "and", "args", ".", "enable_auto_tune", "\n", "\n", "\n", "", "class", "DeployConfig", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "codecs", ".", "open", "(", "path", ",", "'r'", ",", "'utf-8'", ")", "as", "file", ":", "\n", "            ", "self", ".", "dic", "=", "yaml", ".", "load", "(", "file", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "self", ".", "_transforms", "=", "self", ".", "load_transforms", "(", "self", ".", "dic", "[", "'Deploy'", "]", "[", "\n", "'transforms'", "]", ")", "\n", "self", ".", "_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "\n", "", "@", "property", "\n", "def", "transforms", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_transforms", "\n", "\n", "", "@", "property", "\n", "def", "model", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "_dir", ",", "self", ".", "dic", "[", "'Deploy'", "]", "[", "'model'", "]", ")", "\n", "\n", "", "@", "property", "\n", "def", "params", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "_dir", ",", "self", ".", "dic", "[", "'Deploy'", "]", "[", "'params'", "]", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "load_transforms", "(", "t_list", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.get_instance_segmentation": [[171, 206], ["paddle.zeros_like", "paddle.zeros_like", "infer.find_instance_center", "infer.group_pixels", "find_instance_center.unsqueeze", "paddle.zeros_like", "paddle.zeros_like"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.find_instance_center", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.group_pixels"], ["transforms", "=", "[", "]", "\n", "for", "t", "in", "t_list", ":", "\n", "            ", "ctype", "=", "t", ".", "pop", "(", "'type'", ")", "\n", "transforms", ".", "append", "(", "com", "[", "ctype", "]", "(", "**", "t", ")", ")", "\n", "", "return", "T", ".", "Compose", "(", "transforms", ")", "\n", "\n", "\n", "", "", "def", "auto_tune", "(", "args", ",", "imgs", ",", "img_nums", ")", ":", "\n", "    ", "\"\"\"\n    Use images to auto tune the dynamic shape for trt sub graph.\n    The tuned shape saved in args.auto_tuned_shape_file.\n\n    Args:\n        args(dict): input args.\n        imgs(str, list[str]): the path for images.\n        img_nums(int): the nums of images used for auto tune.\n    Returns:\n        None\n    \"\"\"", "\n", "logger", ".", "info", "(", "\"Auto tune the dynamic shape for GPU TRT.\"", ")", "\n", "\n", "assert", "use_auto_tune", "(", "args", ")", "\n", "\n", "if", "not", "isinstance", "(", "imgs", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "imgs", "=", "[", "imgs", "]", "\n", "", "num", "=", "min", "(", "len", "(", "imgs", ")", ",", "img_nums", ")", "\n", "\n", "cfg", "=", "DeployConfig", "(", "args", ".", "cfg", ")", "\n", "pred_cfg", "=", "PredictConfig", "(", "cfg", ".", "model", ",", "cfg", ".", "params", ")", "\n", "pred_cfg", ".", "enable_use_gpu", "(", "100", ",", "0", ")", "\n", "if", "not", "args", ".", "print_detail", ":", "\n", "        ", "pred_cfg", ".", "disable_glog_info", "(", ")", "\n", "", "pred_cfg", ".", "collect_shape_range_info", "(", "args", ".", "auto_tuned_shape_file", ")", "\n", "\n", "predictor", "=", "create_predictor", "(", "pred_cfg", ")", "\n", "input_names", "=", "predictor", ".", "get_input_names", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer.merge_semantic_and_instance": [[208, 282], ["paddle.zeros_like", "paddle.zeros_like", "paddle.unique", "paddle.unique", "paddle.unique", "paddle.unique", "paddle.zeros_like", "paddle.zeros_like", "paddle.logical_and", "paddle.logical_and", "paddle.all", "paddle.all", "paddle.gather", "paddle.gather", "paddle.unique", "paddle.unique", "paddle.gather", "paddle.gather", "paddle.logical_and", "paddle.logical_and", "paddle.sum", "paddle.sum", "paddle.logical_not", "paddle.logical_not", "semantic.reshape", "paddle.nonzero", "paddle.nonzero", "c.argmax", "paddle.gather.numpy", "paddle.gather.numpy", "paddle.logical_not", "paddle.logical_not", "paddle.logical_and.astype", "paddle.logical_and.reshape", "paddle.logical_not", "paddle.logical_not", "paddle.logical_and.astype", "paddle.logical_not", "paddle.logical_not", "paddle.logical_and.astype"], "function", ["None"], ["\n", "for", "i", "in", "range", "(", "0", ",", "num", ")", ":", "\n", "        ", "data", "=", "np", ".", "array", "(", "[", "cfg", ".", "transforms", "(", "imgs", "[", "i", "]", ")", "[", "0", "]", "]", ")", "\n", "input_handle", ".", "reshape", "(", "data", ".", "shape", ")", "\n", "input_handle", ".", "copy_from_cpu", "(", "data", ")", "\n", "try", ":", "\n", "            ", "predictor", ".", "run", "(", ")", "\n", "", "except", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Auto tune fail. Usually, the error is out of GPU memory, \"", "\n", "\"because the model and image is too large. \\n\"", ")", "\n", "del", "predictor", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "auto_tuned_shape_file", ")", ":", "\n", "                ", "os", ".", "remove", "(", "args", ".", "auto_tuned_shape_file", ")", "\n", "", "return", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Auto tune success.\\n\"", ")", "\n", "\n", "\n", "", "class", "Predictor", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "\"\"\"\n        Prepare for prediction.\n        The usage and docs of paddle inference, please refer to\n        https://paddleinference.paddlepaddle.org.cn/product_introduction/summary.html\n        \"\"\"", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "cfg", "=", "DeployConfig", "(", "args", ".", "cfg", ")", "\n", "\n", "self", ".", "_init_base_config", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'cpu'", ":", "\n", "            ", "self", ".", "_init_cpu_config", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_init_gpu_config", "(", ")", "\n", "\n", "", "self", ".", "predictor", "=", "create_predictor", "(", "self", ".", "pred_cfg", ")", "\n", "\n", "if", "hasattr", "(", "args", ",", "'benchmark'", ")", "and", "args", ".", "benchmark", ":", "\n", "            ", "import", "auto_log", "\n", "pid", "=", "os", ".", "getpid", "(", ")", "\n", "self", ".", "autolog", "=", "auto_log", ".", "AutoLogger", "(", "\n", "model_name", "=", "args", ".", "model_name", ",", "\n", "model_precision", "=", "args", ".", "precision", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "data_shape", "=", "\"dynamic\"", ",", "\n", "save_path", "=", "None", ",", "\n", "inference_config", "=", "self", ".", "pred_cfg", ",", "\n", "pids", "=", "pid", ",", "\n", "process_name", "=", "None", ",", "\n", "gpu_ids", "=", "0", ",", "\n", "time_keys", "=", "[", "\n", "'preprocess_time'", ",", "'inference_time'", ",", "'postprocess_time'", "\n", "]", ",", "\n", "warmup", "=", "0", ",", "\n", "logger", "=", "logger", ")", "\n", "\n", "", "", "def", "_init_base_config", "(", "self", ")", ":", "\n", "        ", "self", ".", "pred_cfg", "=", "PredictConfig", "(", "self", ".", "cfg", ".", "model", ",", "self", ".", "cfg", ".", "params", ")", "\n", "if", "not", "self", ".", "args", ".", "print_detail", ":", "\n", "            ", "self", ".", "pred_cfg", ".", "disable_glog_info", "(", ")", "\n", "", "self", ".", "pred_cfg", ".", "enable_memory_optim", "(", ")", "\n", "self", ".", "pred_cfg", ".", "switch_ir_optim", "(", "True", ")", "\n", "\n", "", "def", "_init_cpu_config", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Init the config for x86 cpu.\n        \"\"\"", "\n", "logger", ".", "info", "(", "\"Using CPU\"", ")", "\n", "self", ".", "pred_cfg", ".", "disable_gpu", "(", ")", "\n", "if", "self", ".", "args", ".", "enable_mkldnn", ":", "\n", "            ", "logger", ".", "info", "(", "\"Using MKLDNN\"", ")", "\n", "# cache 1- different shapes for mkldnn", "\n", "self", ".", "pred_cfg", ".", "set_mkldnn_cache_capacity", "(", "10", ")", "\n", "self", ".", "pred_cfg", ".", "enable_mkldnn", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.DeployConfig.__init__": [[200, 207], ["infer.DeployConfig.load_transforms", "os.path.dirname", "codecs.open", "yaml.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.DeployConfig.load_transforms"], ["pred_cfg", ".", "enable_use_gpu", "(", "100", ",", "0", ")", "\n", "if", "not", "args", ".", "print_detail", ":", "\n", "        ", "pred_cfg", ".", "disable_glog_info", "(", ")", "\n", "", "pred_cfg", ".", "collect_shape_range_info", "(", "args", ".", "auto_tuned_shape_file", ")", "\n", "\n", "predictor", "=", "create_predictor", "(", "pred_cfg", ")", "\n", "input_names", "=", "predictor", ".", "get_input_names", "(", ")", "\n", "input_handle", "=", "predictor", ".", "get_input_handle", "(", "input_names", "[", "0", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.DeployConfig.transforms": [[208, 211], ["None"], "methods", ["None"], ["\n", "for", "i", "in", "range", "(", "0", ",", "num", ")", ":", "\n", "        ", "data", "=", "np", ".", "array", "(", "[", "cfg", ".", "transforms", "(", "imgs", "[", "i", "]", ")", "[", "0", "]", "]", ")", "\n", "input_handle", ".", "reshape", "(", "data", ".", "shape", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.DeployConfig.model": [[212, 215], ["os.path.join"], "methods", ["None"], ["input_handle", ".", "copy_from_cpu", "(", "data", ")", "\n", "try", ":", "\n", "            ", "predictor", ".", "run", "(", ")", "\n", "", "except", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.DeployConfig.params": [[216, 219], ["os.path.join"], "methods", ["None"], ["            ", "logger", ".", "info", "(", "\n", "\"Auto tune fail. Usually, the error is out of GPU memory, \"", "\n", "\"because the model and image is too large. \\n\"", ")", "\n", "del", "predictor", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.DeployConfig.load_transforms": [[220, 229], ["paddleseg.Compose", "t.pop", "transforms.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["if", "os", ".", "path", ".", "exists", "(", "args", ".", "auto_tuned_shape_file", ")", ":", "\n", "                ", "os", ".", "remove", "(", "args", ".", "auto_tuned_shape_file", ")", "\n", "", "return", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Auto tune success.\\n\"", ")", "\n", "\n", "\n", "", "class", "Predictor", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor.__init__": [[232, 276], ["infer.DeployConfig", "infer.Predictor._init_base_config", "infer.Predictor._init_cpu_config", "infer.Predictor._init_gpu_config", "paddle.inference.create_predictor", "hasattr", "os.getpid", "auto_log.AutoLogger", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "exit", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._init_base_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._init_cpu_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._init_gpu_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["\n", "self", ".", "args", "=", "args", "\n", "self", ".", "cfg", "=", "DeployConfig", "(", "args", ".", "cfg", ")", "\n", "\n", "self", ".", "_init_base_config", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'cpu'", ":", "\n", "            ", "self", ".", "_init_cpu_config", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_init_gpu_config", "(", ")", "\n", "\n", "", "self", ".", "predictor", "=", "create_predictor", "(", "self", ".", "pred_cfg", ")", "\n", "\n", "if", "hasattr", "(", "args", ",", "'benchmark'", ")", "and", "args", ".", "benchmark", ":", "\n", "            ", "import", "auto_log", "\n", "pid", "=", "os", ".", "getpid", "(", ")", "\n", "self", ".", "autolog", "=", "auto_log", ".", "AutoLogger", "(", "\n", "model_name", "=", "args", ".", "model_name", ",", "\n", "model_precision", "=", "args", ".", "precision", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "data_shape", "=", "\"dynamic\"", ",", "\n", "save_path", "=", "None", ",", "\n", "inference_config", "=", "self", ".", "pred_cfg", ",", "\n", "pids", "=", "pid", ",", "\n", "process_name", "=", "None", ",", "\n", "gpu_ids", "=", "0", ",", "\n", "time_keys", "=", "[", "\n", "'preprocess_time'", ",", "'inference_time'", ",", "'postprocess_time'", "\n", "]", ",", "\n", "warmup", "=", "0", ",", "\n", "logger", "=", "logger", ")", "\n", "\n", "", "", "def", "_init_base_config", "(", "self", ")", ":", "\n", "        ", "self", ".", "pred_cfg", "=", "PredictConfig", "(", "self", ".", "cfg", ".", "model", ",", "self", ".", "cfg", ".", "params", ")", "\n", "if", "not", "self", ".", "args", ".", "print_detail", ":", "\n", "            ", "self", ".", "pred_cfg", ".", "disable_glog_info", "(", ")", "\n", "", "self", ".", "pred_cfg", ".", "enable_memory_optim", "(", ")", "\n", "self", ".", "pred_cfg", ".", "switch_ir_optim", "(", "True", ")", "\n", "\n", "", "def", "_init_cpu_config", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Init the config for x86 cpu.\n        \"\"\"", "\n", "logger", ".", "info", "(", "\"Using CPU\"", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._init_base_config": [[277, 283], ["paddle.inference.Config", "infer.Predictor.pred_cfg.enable_memory_optim", "infer.Predictor.pred_cfg.switch_ir_optim", "infer.Predictor.pred_cfg.disable_glog_info"], "methods", ["None"], ["self", ".", "pred_cfg", ".", "disable_gpu", "(", ")", "\n", "if", "self", ".", "args", ".", "enable_mkldnn", ":", "\n", "            ", "logger", ".", "info", "(", "\"Using MKLDNN\"", ")", "\n", "# cache 1- different shapes for mkldnn", "\n", "self", ".", "pred_cfg", ".", "set_mkldnn_cache_capacity", "(", "10", ")", "\n", "self", ".", "pred_cfg", ".", "enable_mkldnn", "(", ")", "\n", "", "self", ".", "pred_cfg", ".", "set_cpu_math_library_num_threads", "(", "self", ".", "args", ".", "cpu_threads", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._init_cpu_config": [[284, 296], ["paddleseg.utils.logger.info", "infer.Predictor.pred_cfg.disable_gpu", "infer.Predictor.pred_cfg.set_cpu_math_library_num_threads", "paddleseg.utils.logger.info", "infer.Predictor.pred_cfg.set_mkldnn_cache_capacity", "infer.Predictor.pred_cfg.enable_mkldnn"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["\n", "", "def", "_init_gpu_config", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Init the config for nvidia gpu.\n        \"\"\"", "\n", "logger", ".", "info", "(", "\"using GPU\"", ")", "\n", "self", ".", "pred_cfg", ".", "enable_use_gpu", "(", "100", ",", "0", ")", "\n", "precision_map", "=", "{", "\n", "\"fp16\"", ":", "PrecisionType", ".", "Half", ",", "\n", "\"fp32\"", ":", "PrecisionType", ".", "Float32", ",", "\n", "\"int8\"", ":", "PrecisionType", ".", "Int8", "\n", "}", "\n", "precision_mode", "=", "precision_map", "[", "self", ".", "args", ".", "precision", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._init_gpu_config": [[297, 333], ["paddleseg.utils.logger.info", "infer.Predictor.pred_cfg.enable_use_gpu", "paddleseg.utils.logger.info", "infer.Predictor.pred_cfg.enable_tensorrt_engine", "infer.use_auto_tune", "os.path.exists", "paddleseg.utils.logger.info", "infer.Predictor.pred_cfg.enable_tuned_tensorrt_dynamic_shape", "paddleseg.utils.logger.info", "infer.Predictor.pred_cfg.set_trt_dynamic_shape_info"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["\n", "if", "self", ".", "args", ".", "use_trt", ":", "\n", "            ", "logger", ".", "info", "(", "\"Use TRT\"", ")", "\n", "self", ".", "pred_cfg", ".", "enable_tensorrt_engine", "(", "\n", "workspace_size", "=", "1", "<<", "30", ",", "\n", "max_batch_size", "=", "1", ",", "\n", "min_subgraph_size", "=", "300", ",", "\n", "precision_mode", "=", "precision_mode", ",", "\n", "use_static", "=", "False", ",", "\n", "use_calib_mode", "=", "False", ")", "\n", "\n", "if", "use_auto_tune", "(", "self", ".", "args", ")", "and", "os", ".", "path", ".", "exists", "(", "self", ".", "args", ".", "auto_tuned_shape_file", ")", ":", "\n", "                ", "logger", ".", "info", "(", "\"Use auto tuned dynamic shape\"", ")", "\n", "allow_build_at_runtime", "=", "True", "\n", "self", ".", "pred_cfg", ".", "enable_tuned_tensorrt_dynamic_shape", "(", "\n", "self", ".", "args", ".", "auto_tuned_shape_file", ",", "allow_build_at_runtime", ")", "\n", "", "else", ":", "\n", "                ", "logger", ".", "info", "(", "\"Use manual set dynamic shape\"", ")", "\n", "min_input_shape", "=", "{", "\"x\"", ":", "[", "1", ",", "3", ",", "100", ",", "100", "]", "}", "\n", "max_input_shape", "=", "{", "\"x\"", ":", "[", "1", ",", "3", ",", "2000", ",", "3000", "]", "}", "\n", "opt_input_shape", "=", "{", "\"x\"", ":", "[", "1", ",", "3", ",", "512", ",", "1024", "]", "}", "\n", "self", ".", "pred_cfg", ".", "set_trt_dynamic_shape_info", "(", "\n", "min_input_shape", ",", "max_input_shape", ",", "opt_input_shape", ")", "\n", "\n", "", "", "", "def", "run", "(", "self", ",", "imgs", ",", "trimaps", "=", "None", ",", "imgs_dir", "=", "None", ")", ":", "\n", "        ", "self", ".", "imgs_dir", "=", "imgs_dir", "\n", "num", "=", "len", "(", "imgs", ")", "\n", "input_names", "=", "self", ".", "predictor", ".", "get_input_names", "(", ")", "\n", "input_handle", "=", "{", "}", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "input_names", ")", ")", ":", "\n", "            ", "input_handle", "[", "input_names", "[", "i", "]", "]", "=", "self", ".", "predictor", ".", "get_input_handle", "(", "\n", "input_names", "[", "i", "]", ")", "\n", "", "output_names", "=", "self", ".", "predictor", ".", "get_output_names", "(", ")", "\n", "output_handle", "=", "self", ".", "predictor", ".", "get_output_handle", "(", "output_names", "[", "0", "]", ")", "\n", "args", "=", "self", ".", "args", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor.run": [[334, 388], ["infer.Predictor.predictor.get_input_names", "infer.Predictor.predictor.get_input_handle", "infer.Predictor.predictor.get_output_names", "infer.Predictor.predictor.get_output_handle", "range", "paddleseg.utils.logger.info", "isinstance", "os.path.exists", "os.makedirs", "len", "numpy.array", "infer.Predictor.reshape", "infer.Predictor.copy_from_cpu", "infer.Predictor.predictor.run", "infer.Predictor.copy_to_cpu", "infer.Predictor._postprocess", "infer.Predictor._save_imgs", "range", "infer.Predictor.autolog.times.start", "infer.Predictor.autolog.times.stamp", "infer.Predictor.autolog.times.stamp", "infer.Predictor.autolog.times.end", "numpy.array", "infer.Predictor.reshape", "infer.Predictor.copy_from_cpu", "infer.Predictor.predictor.run", "infer.Predictor.copy_to_cpu", "infer.Predictor._postprocess", "infer.Predictor._preprocess", "infer.Predictor._preprocess"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._postprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.PredictorBenchmark._save_imgs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._postprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.PredictorBenchmark._preprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.PredictorBenchmark._preprocess"], ["\n", "for", "i", "in", "tqdm", ".", "tqdm", "(", "range", "(", "0", ",", "num", ",", "args", ".", "batch_size", ")", ")", ":", "\n", "# warm up", "\n", "            ", "if", "i", "==", "0", "and", "args", ".", "benchmark", ":", "\n", "                ", "for", "_", "in", "range", "(", "5", ")", ":", "\n", "                    ", "img_inputs", "=", "[", "]", "\n", "if", "trimaps", "is", "not", "None", ":", "\n", "                        ", "trimap_inputs", "=", "[", "]", "\n", "", "trans_info", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", ".", "batch_size", ")", ":", "\n", "                        ", "img", "=", "imgs", "[", "i", "]", "\n", "trimap", "=", "trimaps", "[", "i", "]", "if", "trimaps", "is", "not", "None", "else", "None", "\n", "data", "=", "self", ".", "_preprocess", "(", "img", "=", "img", ",", "trimap", "=", "trimap", ")", "\n", "img_inputs", ".", "append", "(", "data", "[", "'img'", "]", ")", "\n", "if", "trimaps", "is", "not", "None", ":", "\n", "                            ", "trimap_inputs", ".", "append", "(", "data", "[", "'trimap'", "]", "[", "\n", "np", ".", "newaxis", ",", ":", ",", ":", "]", ")", "\n", "", "trans_info", ".", "append", "(", "data", "[", "'trans_info'", "]", ")", "\n", "", "img_inputs", "=", "np", ".", "array", "(", "img_inputs", ")", "\n", "if", "trimaps", "is", "not", "None", ":", "\n", "                        ", "trimap_inputs", "=", "(", "\n", "np", ".", "array", "(", "trimap_inputs", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "", "input_handle", "[", "'img'", "]", ".", "copy_from_cpu", "(", "img_inputs", ")", "\n", "if", "trimaps", "is", "not", "None", ":", "\n", "                        ", "input_handle", "[", "'trimap'", "]", ".", "copy_from_cpu", "(", "trimap_inputs", ")", "\n", "", "self", ".", "predictor", ".", "run", "(", ")", "\n", "results", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "\n", "results", "=", "results", ".", "squeeze", "(", "1", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "batch_size", ")", ":", "\n", "                        ", "trimap", "=", "trimap_inputs", "[", "\n", "j", "]", "if", "trimaps", "is", "not", "None", "else", "None", "\n", "result", "=", "self", ".", "_postprocess", "(", "\n", "results", "[", "j", "]", ",", "trans_info", "[", "j", "]", ",", "trimap", "=", "trimap", ")", "\n", "\n", "# inference", "\n", "", "", "", "if", "args", ".", "benchmark", ":", "\n", "                ", "self", ".", "autolog", ".", "times", ".", "start", "(", ")", "\n", "\n", "", "img_inputs", "=", "[", "]", "\n", "if", "trimaps", "is", "not", "None", ":", "\n", "                ", "trimap_inputs", "=", "[", "]", "\n", "", "trans_info", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", ".", "batch_size", ")", ":", "\n", "                ", "img", "=", "imgs", "[", "i", "]", "\n", "trimap", "=", "trimaps", "[", "i", "]", "if", "trimaps", "is", "not", "None", "else", "None", "\n", "data", "=", "self", ".", "_preprocess", "(", "img", "=", "img", ",", "trimap", "=", "trimap", ")", "\n", "img_inputs", ".", "append", "(", "data", "[", "'img'", "]", ")", "\n", "if", "trimaps", "is", "not", "None", ":", "\n", "                    ", "trimap_inputs", ".", "append", "(", "data", "[", "'trimap'", "]", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", ")", "\n", "", "trans_info", ".", "append", "(", "data", "[", "'trans_info'", "]", ")", "\n", "", "img_inputs", "=", "np", ".", "array", "(", "img_inputs", ")", "\n", "if", "trimaps", "is", "not", "None", ":", "\n", "                ", "trimap_inputs", "=", "(", "np", ".", "array", "(", "trimap_inputs", ")", ")", ".", "astype", "(", "'float32'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._preprocess": [[389, 391], ["infer.Predictor.cfg.transforms"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms"], ["\n", "", "input_handle", "[", "'img'", "]", ".", "copy_from_cpu", "(", "img_inputs", ")", "\n", "if", "trimaps", "is", "not", "None", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._postprocess": [[392, 396], ["numpy.argmax"], "methods", ["None"], ["                ", "input_handle", "[", "'trimap'", "]", ".", "copy_from_cpu", "(", "trimap_inputs", ")", "\n", "\n", "", "if", "args", ".", "benchmark", ":", "\n", "                ", "self", ".", "autolog", ".", "times", ".", "stamp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._save_imgs": [[397, 404], ["range", "paddleseg.utils.visualize.get_pseudo_color_map", "os.path.basename", "os.path.splitext", "paddleseg.utils.visualize.get_pseudo_color_map.save", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map"], ["", "self", ".", "predictor", ".", "run", "(", ")", "\n", "\n", "if", "args", ".", "benchmark", ":", "\n", "                ", "self", ".", "autolog", ".", "times", ".", "stamp", "(", ")", "\n", "\n", "", "results", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "\n", "results", "=", "results", ".", "squeeze", "(", "1", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.parse_args": [[34, 137], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["import", "transforms", "as", "T", "\n", "\n", "\n", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Deploy for matting model'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The directory or path or file list of the images to be predicted.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--trimap_path'", ",", "\n", "dest", "=", "'trimap_path'", ",", "\n", "help", "=", "'The directory or path or file list of the triamp to help predicted.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predict result.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "choices", "=", "[", "'cpu'", ",", "'gpu'", "]", ",", "\n", "default", "=", "\"gpu\"", ",", "\n", "help", "=", "\"Select which device to inference, defaults to gpu.\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--fg_estimate'", ",", "\n", "default", "=", "True", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to estimate foreground when predicting.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--cpu_threads'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Number of threads to predict when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_mkldnn'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Enable to use mkldnn to speed up when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_trt'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to use Nvidia TensorRT to accelerate prediction.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", ",", "\"int8\"", "]", ",", "\n", "help", "=", "'The tensorrt precision.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_auto_tune'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to enable tuned dynamic shape. We uses some images to collect '", "\n", "'the dynamic shape for trt sub graph, which avoids setting dynamic shape manually.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--auto_tuned_shape_file'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"auto_tune_tmp.pbtxt\"", ",", "\n", "help", "=", "'The temp file to save tuned dynamic shape.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "\"--benchmark\"", ",", "\n", "type", "=", "eval", ",", "\n", "default", "=", "False", ",", "\n", "help", "=", "\"Whether to log some information about environment, model, configuration and performance.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--model_name\"", ",", "\n", "default", "=", "\"\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'When `--benchmark` is True, the specified model name is displayed.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--print_detail'", ",", "\n", "default", "=", "True", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Print GLOG information of Paddle Inference.'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune": [[139, 143], ["hasattr", "hasattr"], "function", ["None"], ["return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "use_auto_tune", "(", "args", ")", ":", "\n", "    ", "return", "hasattr", "(", "PredictConfig", ",", "\"collect_shape_range_info\"", ")"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.auto_tune": [[145, 197], ["paddleseg.utils.logger.info", "infer.use_auto_tune", "min", "infer.DeployConfig", "paddle.inference.Config", "paddle.inference.Config.enable_use_gpu", "paddle.inference.Config.collect_shape_range_info", "paddle.inference.create_predictor", "paddle.inference.create_predictor.get_input_names", "paddle.inference.create_predictor.get_input_handle", "range", "paddleseg.utils.logger.info", "isinstance", "len", "paddle.inference.Config.disable_glog_info", "isinstance", "predictor.get_input_handle.reshape", "predictor.get_input_handle.copy_from_cpu", "numpy.array", "paddle.inference.create_predictor.run", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "os.path.exists", "str", "os.remove", "infer.DeployConfig.transforms"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms"], ["and", "args", ".", "device", "==", "\"gpu\"", "and", "args", ".", "use_trt", "and", "args", ".", "enable_auto_tune", "\n", "\n", "\n", "", "class", "DeployConfig", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "codecs", ".", "open", "(", "path", ",", "'r'", ",", "'utf-8'", ")", "as", "file", ":", "\n", "            ", "self", ".", "dic", "=", "yaml", ".", "load", "(", "file", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "self", ".", "_transforms", "=", "self", ".", "load_transforms", "(", "self", ".", "dic", "[", "'Deploy'", "]", "[", "\n", "'transforms'", "]", ")", "\n", "self", ".", "_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "\n", "", "@", "property", "\n", "def", "transforms", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_transforms", "\n", "\n", "", "@", "property", "\n", "def", "model", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "_dir", ",", "self", ".", "dic", "[", "'Deploy'", "]", "[", "'model'", "]", ")", "\n", "\n", "", "@", "property", "\n", "def", "params", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "_dir", ",", "self", ".", "dic", "[", "'Deploy'", "]", "[", "'params'", "]", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "load_transforms", "(", "t_list", ")", ":", "\n", "        ", "com", "=", "manager", ".", "TRANSFORMS", "\n", "transforms", "=", "[", "]", "\n", "for", "t", "in", "t_list", ":", "\n", "            ", "ctype", "=", "t", ".", "pop", "(", "'type'", ")", "\n", "transforms", ".", "append", "(", "com", "[", "ctype", "]", "(", "**", "t", ")", ")", "\n", "", "return", "T", ".", "Compose", "(", "transforms", ")", "\n", "\n", "\n", "", "", "def", "auto_tune", "(", "args", ",", "imgs", ",", "img_nums", ")", ":", "\n", "    ", "\"\"\"\n    Use images to auto tune the dynamic shape for trt sub graph.\n    The tuned shape saved in args.auto_tuned_shape_file.\n\n    Args:\n        args(dict): input args.\n        imgs(str, list[str]): the path for images.\n        img_nums(int): the nums of images used for auto tune.\n    Returns:\n        None\n    \"\"\"", "\n", "logger", ".", "info", "(", "\"Auto tune the dynamic shape for GPU TRT.\"", ")", "\n", "\n", "assert", "use_auto_tune", "(", "args", ")", "\n", "\n", "if", "not", "isinstance", "(", "imgs", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "imgs", "=", "[", "imgs", "]", "\n", "", "num", "=", "min", "(", "len", "(", "imgs", ")", ",", "img_nums", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.main": [[406, 424], ["paddleseg.utils.get_image_list", "infer.use_auto_tune", "infer.Predictor", "infer.Predictor.run", "infer.auto_tune", "infer.use_auto_tune", "os.path.exists", "os.remove", "Predictor.autolog.report"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove"], ["                ", "trimap", "=", "trimap_inputs", "[", "j", "]", "if", "trimaps", "is", "not", "None", "else", "None", "\n", "result", "=", "self", ".", "_postprocess", "(", "\n", "results", "[", "j", "]", ",", "trans_info", "[", "j", "]", ",", "trimap", "=", "trimap", ")", "\n", "self", ".", "_save_imgs", "(", "result", ",", "imgs", "[", "i", "+", "j", "]", ")", "\n", "\n", "", "if", "args", ".", "benchmark", ":", "\n", "                ", "self", ".", "autolog", ".", "times", ".", "end", "(", "stamp", "=", "True", ")", "\n", "", "", "logger", ".", "info", "(", "\"Finish\"", ")", "\n", "\n", "", "def", "_preprocess", "(", "self", ",", "img", ",", "trimap", "=", "None", ")", ":", "\n", "        ", "data", "=", "{", "}", "\n", "data", "[", "'img'", "]", "=", "img", "\n", "if", "trimap", "is", "not", "None", ":", "\n", "            ", "data", "[", "'trimap'", "]", "=", "trimap", "\n", "data", "[", "'gt_fields'", "]", "=", "[", "'trimap'", "]", "\n", "", "data", "=", "self", ".", "cfg", ".", "transforms", "(", "data", ")", "\n", "return", "data", "\n", "\n", "", "def", "_postprocess", "(", "self", ",", "alpha", ",", "trans_info", ",", "trimap", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.DeployConfig._load_transforms": [[59, 67], ["paddleseg.Compose", "t.pop", "transforms.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._save_npy": [[424, 430], ["range", "os.path.basename", "os.path.splitext", "numpy.save", "os.path.join"], "methods", ["None"], ["", "def", "_postprocess", "(", "self", ",", "alpha", ",", "trans_info", ",", "trimap", "=", "None", ")", ":", "\n", "        ", "\"\"\"recover pred to origin shape\"\"\"", "\n", "if", "trimap", "is", "not", "None", ":", "\n", "            ", "trimap", "=", "trimap", ".", "squeeze", "(", "0", ")", "\n", "alpha", "[", "trimap", "==", "0", "]", "=", "0", "\n", "alpha", "[", "trimap", "==", "255", "]", "=", "1", "\n", "", "for", "item", "in", "trans_info", "[", ":", ":", "-", "1", "]", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.collect_dynamic_shape.parse_args": [[36, 56], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Test'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "help", "=", "\"The deploy config generated by exporting model.\"", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "help", "=", "'The directory or path or file list of the images to be predicted.'", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--dynamic_shape_path'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"./dynamic_shape.pbtxt\"", ",", "\n", "help", "=", "'The path to save dynamic shape.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.collect_dynamic_shape.is_support_collecting": [[58, 61], ["hasattr", "hasattr"], "function", ["None"], ["", "def", "is_support_collecting", "(", ")", ":", "\n", "    ", "return", "hasattr", "(", "PredictConfig", ",", "\"collect_shape_range_info\"", ")", "and", "hasattr", "(", "PredictConfig", ",", "\"enable_tuned_tensorrt_dynamic_shape\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.collect_dynamic_shape.collect_dynamic_shape": [[63, 106], ["infer.DeployConfig", "paddle.inference.Config", "paddle.inference.Config.enable_use_gpu", "paddle.inference.Config.collect_shape_range_info", "paddle.inference.create_predictor", "paddle.inference.create_predictor.get_input_names", "paddle.inference.create_predictor.get_input_handle", "paddleseg.utils.get_image_list", "paddleseg.utils.logger.info", "paddleseg.utils.progbar.Progbar", "enumerate", "paddleseg.utils.logger.info", "collect_dynamic_shape.is_support_collecting", "paddleseg.utils.logger.error", "isinstance", "numpy.array", "predictor.get_input_handle.reshape", "predictor.get_input_handle.copy_from_cpu", "progbar.Progbar.update", "len", "paddle.inference.create_predictor.run", "len", "paddleseg.utils.logger.info", "os.path.exists", "infer.DeployConfig.transforms", "os.remove"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.collect_dynamic_shape.is_support_collecting", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.error", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove"], ["", "def", "collect_dynamic_shape", "(", "args", ")", ":", "\n", "\n", "    ", "if", "not", "is_support_collecting", "(", ")", ":", "\n", "        ", "logger", ".", "error", "(", "\"The Paddle does not support collecting dynamic shape, \"", "\"please reinstall the PaddlePaddle (latest gpu version).\"", ")", "\n", "\n", "# prepare config", "\n", "", "cfg", "=", "DeployConfig", "(", "args", ".", "config", ")", "\n", "pred_cfg", "=", "PredictConfig", "(", "cfg", ".", "model", ",", "cfg", ".", "params", ")", "\n", "pred_cfg", ".", "enable_use_gpu", "(", "1000", ",", "0", ")", "\n", "pred_cfg", ".", "collect_shape_range_info", "(", "args", ".", "dynamic_shape_path", ")", "\n", "\n", "# create predictor", "\n", "predictor", "=", "create_predictor", "(", "pred_cfg", ")", "\n", "input_names", "=", "predictor", ".", "get_input_names", "(", ")", "\n", "input_handle", "=", "predictor", ".", "get_input_handle", "(", "input_names", "[", "0", "]", ")", "\n", "\n", "# get images", "\n", "img_path_list", ",", "_", "=", "get_image_list", "(", "args", ".", "image_path", ")", "\n", "if", "not", "isinstance", "(", "img_path_list", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "img_path_list", "=", "[", "img_path_list", "]", "\n", "", "logger", ".", "info", "(", "f\"The num of images is {len(img_path_list)} \\n\"", ")", "\n", "\n", "# collect", "\n", "progbar_val", "=", "progbar", ".", "Progbar", "(", "target", "=", "len", "(", "img_path_list", ")", ")", "\n", "for", "idx", ",", "img_path", "in", "enumerate", "(", "img_path_list", ")", ":", "\n", "        ", "data", "=", "np", ".", "array", "(", "[", "cfg", ".", "transforms", "(", "img_path", ")", "[", "0", "]", "]", ")", "\n", "input_handle", ".", "reshape", "(", "data", ".", "shape", ")", "\n", "input_handle", ".", "copy_from_cpu", "(", "data", ")", "\n", "\n", "try", ":", "\n", "            ", "predictor", ".", "run", "(", ")", "\n", "", "except", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Fail to collect dynamic shape. Usually, the error is out of \"", "\n", "\"GPU memory, for the model and image are too large.\\n\"", ")", "\n", "del", "predictor", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "dynamic_shape_path", ")", ":", "\n", "                ", "os", ".", "remove", "(", "args", ".", "dynamic_shape_path", ")", "\n", "\n", "", "", "progbar_val", ".", "update", "(", "idx", "+", "1", ")", "\n", "\n", "", "logger", ".", "info", "(", "f\"The dynamic shape is save in {args.dynamic_shape_path}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.PredictorBenchmark.run": [[138, 167], ["infer_benchmark.PredictorBenchmark.predictor.get_input_names", "infer_benchmark.PredictorBenchmark.predictor.get_input_handle", "infer_benchmark.PredictorBenchmark.predictor.get_output_names", "infer_benchmark.PredictorBenchmark.predictor.get_output_handle", "numpy.array", "print", "infer_benchmark.PredictorBenchmark.reshape", "infer_benchmark.PredictorBenchmark.copy_from_cpu", "paddleseg.utils.logger.info", "range", "paddleseg.utils.logger.info", "time.time", "range", "time.time", "infer_benchmark.PredictorBenchmark.copy_to_cpu", "infer_benchmark.PredictorBenchmark._postprocess", "infer_benchmark.PredictorBenchmark._save_imgs", "paddleseg.utils.logger.info", "infer_benchmark.PredictorBenchmark.predictor.run", "infer_benchmark.PredictorBenchmark.predictor.run", "infer_benchmark.PredictorBenchmark._preprocess"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._postprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.PredictorBenchmark._save_imgs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.PredictorBenchmark._preprocess"], ["    ", "def", "run", "(", "self", ",", "img_path", ")", ":", "\n", "        ", "args", "=", "self", ".", "args", "\n", "input_names", "=", "self", ".", "predictor", ".", "get_input_names", "(", ")", "\n", "input_handle", "=", "self", ".", "predictor", ".", "get_input_handle", "(", "input_names", "[", "0", "]", ")", "\n", "output_names", "=", "self", ".", "predictor", ".", "get_output_names", "(", ")", "\n", "output_handle", "=", "self", ".", "predictor", ".", "get_output_handle", "(", "output_names", "[", "0", "]", ")", "\n", "\n", "img_data", "=", "np", ".", "array", "(", "[", "self", ".", "_preprocess", "(", "img_path", ")", "]", ")", "\n", "print", "(", "img_data", ".", "shape", ")", "\n", "input_handle", ".", "reshape", "(", "img_data", ".", "shape", ")", "\n", "input_handle", ".", "copy_from_cpu", "(", "img_data", ")", "\n", "\n", "logger", ".", "info", "(", "\"Warmup\"", ")", "\n", "for", "_", "in", "range", "(", "args", ".", "warmup", ")", ":", "\n", "            ", "self", ".", "predictor", ".", "run", "(", ")", "\n", "\n", "", "logger", ".", "info", "(", "\"Infer\"", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "_", "in", "range", "(", "args", ".", "repeats", ")", ":", "\n", "            ", "self", ".", "predictor", ".", "run", "(", ")", "\n", "", "end_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "results", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "results", "=", "self", ".", "_postprocess", "(", "results", ")", "\n", "\n", "self", ".", "_save_imgs", "(", "results", ")", "\n", "\n", "avg_time", "=", "(", "end_time", "-", "start_time", ")", "*", "1000", "/", "args", ".", "repeats", "\n", "logger", ".", "info", "(", "\"Avg Time: {:.3}ms\"", ".", "format", "(", "avg_time", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.PredictorBenchmark._preprocess": [[168, 182], ["transforms_dic.insert", "infer.DeployConfig.load_transforms", "infer_benchmark.PredictorBenchmark.cfg.transforms", "codecs.open", "yaml.load", "infer.DeployConfig.load_transforms."], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.DeployConfig.load_transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms"], ["", "def", "_preprocess", "(", "self", ",", "img_path", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "resize_width", "==", "0", "and", "self", ".", "args", ".", "resize_height", "==", "0", ":", "\n", "            ", "return", "self", ".", "cfg", ".", "transforms", "(", "img_path", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "assert", "args", ".", "resize_width", ">", "0", "and", "args", ".", "resize_height", ">", "0", "\n", "with", "codecs", ".", "open", "(", "args", ".", "cfg", ",", "'r'", ",", "'utf-8'", ")", "as", "file", ":", "\n", "                ", "dic", "=", "yaml", ".", "load", "(", "file", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "transforms_dic", "=", "dic", "[", "'Deploy'", "]", "[", "'transforms'", "]", "\n", "transforms_dic", ".", "insert", "(", "0", ",", "{", "\n", "\"type\"", ":", "\"Resize\"", ",", "\n", "'target_size'", ":", "[", "args", ".", "resize_width", ",", "args", ".", "resize_height", "]", "\n", "}", ")", "\n", "transforms", "=", "DeployConfig", ".", "load_transforms", "(", "transforms_dic", ")", "\n", "return", "transforms", "(", "img_path", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.PredictorBenchmark._save_imgs": [[183, 190], ["range", "paddleseg.utils.visualize.get_pseudo_color_map", "os.path.basename", "os.path.splitext", "paddleseg.utils.visualize.get_pseudo_color_map.save", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map"], ["", "", "def", "_save_imgs", "(", "self", ",", "results", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "results", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "img", "=", "get_pseudo_color_map", "(", "results", "[", "i", "]", ")", "\n", "basename", "=", "os", ".", "path", ".", "basename", "(", "self", ".", "args", ".", "image_path", ")", "\n", "basename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "basename", ")", "\n", "basename", "=", "f'{basename}.png'", "\n", "img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "save_dir", ",", "basename", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.parse_args": [[37, 135], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Test'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The directory or path or file list of the images to be predicted.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predict result.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "choices", "=", "[", "'cpu'", ",", "'gpu'", "]", ",", "\n", "default", "=", "\"gpu\"", ",", "\n", "help", "=", "\"Select which device to inference, defaults to gpu.\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resize_width'", ",", "\n", "help", "=", "'Set the resize width to acclerate the test. In default, it is 0, '", "\n", "'which means use the origin width.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resize_height'", ",", "\n", "help", "=", "'Set the resize height to acclerate the test. In default, it is 0, '", "\n", "'which means use the origin height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_trt'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to use Nvidia TensorRT to accelerate prediction.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", ",", "\"int8\"", "]", ",", "\n", "help", "=", "'The tensorrt precision.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--min_subgraph_size'", ",", "\n", "default", "=", "3", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'The min subgraph size in tensorrt prediction.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_auto_tune'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to enable tuned dynamic shape. We uses some images to collect '", "\n", "'the dynamic shape for trt sub graph, which avoids setting dynamic shape manually.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--auto_tuned_shape_file'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"auto_tune_tmp.pbtxt\"", ",", "\n", "help", "=", "'The temp file to save tuned dynamic shape.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--cpu_threads'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Number of threads to predict when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_mkldnn'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Enable to use mkldnn to speed up when using cpu.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--warmup'", ",", "default", "=", "50", ",", "type", "=", "int", ",", "help", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--repeats'", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "''", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--with_argmax'", ",", "\n", "dest", "=", "'with_argmax'", ",", "\n", "help", "=", "'Perform argmax operation on the predict result.'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--print_detail'", ",", "\n", "dest", "=", "'print_detail'", ",", "\n", "help", "=", "'Print GLOG information of Paddle Inference.'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_benchmark.main": [[192, 210], ["infer.use_auto_tune", "infer_benchmark.PredictorBenchmark", "infer_benchmark.PredictorBenchmark.run", "os.path.exists", "os.makedirs", "infer.use_auto_tune", "os.path.exists", "os.remove", "infer.auto_tune", "numpy.random.rand().astype", "infer.auto_tune", "numpy.random.rand"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.auto_tune"], ["", "", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "save_dir", ")", "\n", "\n", "", "if", "use_auto_tune", "(", "args", ")", ":", "\n", "        ", "if", "args", ".", "resize_width", "==", "0", "and", "args", ".", "resize_height", "==", "0", ":", "\n", "            ", "auto_tune", "(", "args", ",", "args", ".", "image_path", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "img", "=", "np", ".", "random", ".", "rand", "(", "1", ",", "3", ",", "args", ".", "resize_height", ",", "\n", "args", ".", "resize_width", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "auto_tune", "(", "args", ",", "img", ",", "1", ")", "\n", "\n", "", "", "predictor", "=", "PredictorBenchmark", "(", "args", ")", "\n", "predictor", ".", "run", "(", "args", ".", "image_path", ")", "\n", "\n", "if", "use_auto_tune", "(", "args", ")", "and", "os", ".", "path", ".", "exists", "(", "args", ".", "auto_tuned_shape_file", ")", ":", "\n", "        ", "os", ".", "remove", "(", "args", ".", "auto_tuned_shape_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.DatasetPredictor.__init__": [[221, 223], ["infer.Predictor.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.DatasetPredictor.run_dataset": [[224, 284], ["infer_dataset.get_dataset", "infer_dataset.DatasetPredictor.predictor.get_input_names", "infer_dataset.DatasetPredictor.predictor.get_input_handle", "infer_dataset.DatasetPredictor.predictor.get_output_names", "infer_dataset.DatasetPredictor.predictor.get_output_handle", "paddleseg.utils.progbar.Progbar", "enumerate", "paddleseg.utils.metrics.mean_iou", "paddleseg.utils.metrics.accuracy", "paddleseg.utils.metrics.kappa", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "numpy.array", "infer_dataset.DatasetPredictor.reshape", "infer_dataset.DatasetPredictor.copy_from_cpu", "time.time", "infer_dataset.DatasetPredictor.predictor.run", "time.time", "infer_dataset.DatasetPredictor.copy_to_cpu", "infer_dataset.DatasetPredictor._postprocess", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddleseg.utils.metrics.calculate_area", "paddleseg.utils.progbar.Progbar.update", "len", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.interpolate", "paddle.interpolate", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "len", "str", "str", "numpy.round", "numpy.round", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.get_dataset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.mean_iou", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.accuracy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.kappa", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.Predictor._postprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.metric.calculate_area", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], ["", "def", "run_dataset", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Read the data from dataset and calculate the accurary of the inference model.\n        \"\"\"", "\n", "dataset", "=", "get_dataset", "(", "self", ".", "args", ")", "\n", "\n", "input_names", "=", "self", ".", "predictor", ".", "get_input_names", "(", ")", "\n", "input_handle", "=", "self", ".", "predictor", ".", "get_input_handle", "(", "input_names", "[", "0", "]", ")", "\n", "output_names", "=", "self", ".", "predictor", ".", "get_output_names", "(", ")", "\n", "output_handle", "=", "self", ".", "predictor", ".", "get_output_handle", "(", "output_names", "[", "0", "]", ")", "\n", "\n", "intersect_area_all", "=", "0", "\n", "pred_area_all", "=", "0", "\n", "label_area_all", "=", "0", "\n", "total_time", "=", "0", "\n", "progbar_val", "=", "progbar", ".", "Progbar", "(", "target", "=", "len", "(", "dataset", ")", ",", "verbose", "=", "1", ")", "\n", "\n", "for", "idx", ",", "(", "img", ",", "label", ")", "in", "enumerate", "(", "dataset", ")", ":", "\n", "            ", "data", "=", "np", ".", "array", "(", "[", "img", "]", ")", "\n", "input_handle", ".", "reshape", "(", "data", ".", "shape", ")", "\n", "input_handle", ".", "copy_from_cpu", "(", "data", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "predictor", ".", "run", "(", ")", "\n", "end_time", "=", "time", ".", "time", "(", ")", "\n", "total_time", "+=", "(", "end_time", "-", "start_time", ")", "\n", "\n", "pred", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "pred", "=", "self", ".", "_postprocess", "(", "pred", ")", "\n", "pred", "=", "paddle", ".", "to_tensor", "(", "pred", ",", "dtype", "=", "'int64'", ")", "\n", "label", "=", "paddle", ".", "to_tensor", "(", "label", ",", "dtype", "=", "\"int32\"", ")", "\n", "if", "pred", ".", "shape", "!=", "label", ".", "shape", ":", "\n", "                ", "label", "=", "paddle", ".", "unsqueeze", "(", "label", ",", "0", ")", "\n", "label", "=", "F", ".", "interpolate", "(", "label", ",", "pred", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "label", "=", "paddle", ".", "squeeze", "(", "label", ",", "0", ")", "\n", "\n", "", "intersect_area", ",", "pred_area", ",", "label_area", "=", "metrics", ".", "calculate_area", "(", "\n", "pred", ",", "\n", "label", ",", "\n", "dataset", ".", "num_classes", ",", "\n", "ignore_index", "=", "dataset", ".", "ignore_index", ")", "\n", "\n", "intersect_area_all", "=", "intersect_area_all", "+", "intersect_area", "\n", "pred_area_all", "=", "pred_area_all", "+", "pred_area", "\n", "label_area_all", "=", "label_area_all", "+", "label_area", "\n", "\n", "progbar_val", ".", "update", "(", "idx", "+", "1", ")", "\n", "\n", "", "class_iou", ",", "miou", "=", "metrics", ".", "mean_iou", "(", "intersect_area_all", ",", "pred_area_all", ",", "\n", "label_area_all", ")", "\n", "class_acc", ",", "acc", "=", "metrics", ".", "accuracy", "(", "intersect_area_all", ",", "pred_area_all", ")", "\n", "kappa", "=", "metrics", ".", "kappa", "(", "intersect_area_all", ",", "pred_area_all", ",", "label_area_all", ")", "\n", "\n", "logger", ".", "info", "(", "\n", "\"[EVAL] #Images: {} mIoU: {:.4f} Acc: {:.4f} Kappa: {:.4f} \"", ".", "format", "(", "\n", "len", "(", "dataset", ")", ",", "miou", ",", "acc", ",", "kappa", ")", ")", "\n", "logger", ".", "info", "(", "\"[EVAL] Class IoU: \\n\"", "+", "str", "(", "np", ".", "round", "(", "class_iou", ",", "4", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"[EVAL] Class Acc: \\n\"", "+", "str", "(", "np", ".", "round", "(", "class_acc", ",", "4", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"[EVAL] Average time: %.3f ms/img\"", "%", "\n", "(", "total_time", "/", "len", "(", "dataset", ")", ")", "*", "1000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.parse_args": [[38, 138], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model Infer'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--dataset_type'", ",", "\n", "help", "=", "'The name of dataset, such as Cityscapes, PascalVOC and ADE20K.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--dataset_path'", ",", "\n", "help", "=", "'The directory of the dataset to be predicted. If set dataset_path, '", "\n", "'it use the test and label images to calculate the mIoU.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--dataset_mode'", ",", "\n", "help", "=", "'The dataset mode, such as train, val.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"val\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resize_width'", ",", "\n", "help", "=", "'Set the resize width to acclerate the test. In default, it is 0, '", "\n", "'which means use the origin width.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resize_height'", ",", "\n", "help", "=", "'Set the resize height to acclerate the test. In default, it is 0, '", "\n", "'which means use the origin height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "choices", "=", "[", "'cpu'", ",", "'gpu'", "]", ",", "\n", "default", "=", "\"gpu\"", ",", "\n", "help", "=", "\"Select which device to inference, defaults to gpu.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_trt'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to use Nvidia TensorRT to accelerate prediction.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", ",", "\"int8\"", "]", ",", "\n", "help", "=", "'The tensorrt precision.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_auto_tune'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to enable tuned dynamic shape. We uses some images to collect '", "\n", "'the dynamic shape for trt sub graph, which avoids setting dynamic shape manually.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--auto_tuned_shape_file'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"auto_tune_tmp.pbtxt\"", ",", "\n", "help", "=", "'The temp file to save tuned dynamic shape.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--cpu_threads'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Number of threads to predict when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_mkldnn'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Enable to use mkldnn to speed up when using cpu.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--with_argmax'", ",", "\n", "help", "=", "'Perform argmax operation on the predict result.'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--print_detail'", ",", "\n", "help", "=", "'Print GLOG information of Paddle Inference.'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.get_dataset": [[140, 168], ["infer.DeployConfig", "RuntimeError", "transforms_dic.insert", "codecs.open", "yaml.load", "infer.DeployConfig.load_transforms"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.DeployConfig.load_transforms"], ["", "def", "get_dataset", "(", "args", ")", ":", "\n", "    ", "comp", "=", "manager", ".", "DATASETS", "\n", "if", "args", ".", "dataset_type", "not", "in", "comp", ".", "components_dict", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"The dataset is not supported.\"", ")", "\n", "\n", "", "cfg", "=", "DeployConfig", "(", "args", ".", "cfg", ")", "\n", "\n", "if", "args", ".", "resize_width", "==", "0", "and", "args", ".", "resize_height", "==", "0", ":", "\n", "        ", "transforms", "=", "cfg", ".", "transforms", ".", "transforms", "\n", "", "else", ":", "\n", "# load and add resize to transforms", "\n", "        ", "assert", "args", ".", "resize_width", ">", "0", "and", "args", ".", "resize_height", ">", "0", "\n", "with", "codecs", ".", "open", "(", "args", ".", "cfg", ",", "'r'", ",", "'utf-8'", ")", "as", "file", ":", "\n", "            ", "dic", "=", "yaml", ".", "load", "(", "file", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "transforms_dic", "=", "dic", "[", "'Deploy'", "]", "[", "'transforms'", "]", "\n", "transforms_dic", ".", "insert", "(", "0", ",", "{", "\n", "\"type\"", ":", "\"Resize\"", ",", "\n", "'target_size'", ":", "[", "args", ".", "resize_width", ",", "args", ".", "resize_height", "]", "\n", "}", ")", "\n", "transforms", "=", "DeployConfig", ".", "load_transforms", "(", "transforms_dic", ")", ".", "transforms", "\n", "\n", "", "kwargs", "=", "{", "\n", "'transforms'", ":", "transforms", ",", "\n", "'dataset_root'", ":", "args", ".", "dataset_path", ",", "\n", "'mode'", ":", "args", ".", "dataset_mode", "\n", "}", "\n", "dataset", "=", "comp", "[", "args", ".", "dataset_type", "]", "(", "**", "kwargs", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.auto_tune": [[170, 218], ["paddleseg.utils.logger.info", "infer.use_auto_tune", "min", "infer.DeployConfig", "paddle.inference.Config", "paddle.inference.Config.enable_use_gpu", "paddle.inference.Config.collect_shape_range_info", "paddle.inference.create_predictor", "paddle.inference.create_predictor.get_input_names", "paddle.inference.create_predictor.get_input_handle", "enumerate", "paddleseg.utils.logger.info", "len", "paddle.inference.Config.disable_glog_info", "numpy.array", "predictor.get_input_handle.reshape", "predictor.get_input_handle.copy_from_cpu", "paddle.inference.create_predictor.run", "paddleseg.utils.logger.info", "os.path.exists", "os.remove"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove"], ["", "def", "auto_tune", "(", "args", ",", "dataset", ",", "img_nums", ")", ":", "\n", "    ", "\"\"\"\n    Use images to auto tune the dynamic shape for trt sub graph.\n    The tuned shape saved in args.auto_tuned_shape_file.\n\n    Args:\n        args(dict): input args.\n        dataset(dataset): an dataset.\n        img_nums(int): the nums of images used for auto tune.\n    Returns:\n        None\n    \"\"\"", "\n", "logger", ".", "info", "(", "\"Auto tune the dynamic shape for GPU TRT.\"", ")", "\n", "\n", "assert", "use_auto_tune", "(", "args", ")", "\n", "\n", "num", "=", "min", "(", "len", "(", "dataset", ")", ",", "img_nums", ")", "\n", "\n", "cfg", "=", "DeployConfig", "(", "args", ".", "cfg", ")", "\n", "pred_cfg", "=", "PredictConfig", "(", "cfg", ".", "model", ",", "cfg", ".", "params", ")", "\n", "pred_cfg", ".", "enable_use_gpu", "(", "100", ",", "0", ")", "\n", "if", "not", "args", ".", "print_detail", ":", "\n", "        ", "pred_cfg", ".", "disable_glog_info", "(", ")", "\n", "", "pred_cfg", ".", "collect_shape_range_info", "(", "args", ".", "auto_tuned_shape_file", ")", "\n", "\n", "predictor", "=", "create_predictor", "(", "pred_cfg", ")", "\n", "input_names", "=", "predictor", ".", "get_input_names", "(", ")", "\n", "input_handle", "=", "predictor", ".", "get_input_handle", "(", "input_names", "[", "0", "]", ")", "\n", "\n", "for", "idx", ",", "(", "img", ",", "_", ")", "in", "enumerate", "(", "dataset", ")", ":", "\n", "        ", "data", "=", "np", ".", "array", "(", "[", "img", "]", ")", "\n", "input_handle", ".", "reshape", "(", "data", ".", "shape", ")", "\n", "input_handle", ".", "copy_from_cpu", "(", "data", ")", "\n", "try", ":", "\n", "            ", "predictor", ".", "run", "(", ")", "\n", "", "except", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Auto tune fail. Usually, the error is out of GPU memory, \"", "\n", "\"because the model and image is too large. \\n\"", ")", "\n", "del", "predictor", "\n", "if", "os", ".", "path", ".", "exists", "(", "args", ".", "auto_tuned_shape_file", ")", ":", "\n", "                ", "os", ".", "remove", "(", "args", ".", "auto_tuned_shape_file", ")", "\n", "", "return", "\n", "\n", "", "if", "idx", "+", "1", ">=", "num", ":", "\n", "            ", "break", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Auto tune success.\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.main": [[286, 298], ["infer.use_auto_tune", "infer_dataset.DatasetPredictor", "infer_dataset.DatasetPredictor.run_dataset", "infer_dataset.get_dataset", "infer_dataset.auto_tune", "infer.use_auto_tune", "os.path.exists", "os.remove"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.DatasetPredictor.run_dataset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.get_dataset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_dataset.auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer.use_auto_tune", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove"], ["", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "if", "use_auto_tune", "(", "args", ")", ":", "\n", "        ", "dataset", "=", "get_dataset", "(", "args", ")", "\n", "tune_img_nums", "=", "10", "\n", "auto_tune", "(", "args", ",", "dataset", ",", "tune_img_nums", ")", "\n", "\n", "", "predictor", "=", "DatasetPredictor", "(", "args", ")", "\n", "predictor", ".", "run_dataset", "(", ")", "\n", "\n", "if", "use_auto_tune", "(", "args", ")", "and", "os", ".", "path", ".", "exists", "(", "args", ".", "auto_tuned_shape_file", ")", ":", "\n", "        ", "os", ".", "remove", "(", "args", ".", "auto_tuned_shape_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.HostDeviceMem.__init__": [[98, 101], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "host_mem", ",", "device_mem", ")", ":", "\n", "        ", "self", ".", "host", "=", "host_mem", "\n", "self", ".", "device", "=", "device_mem", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.HostDeviceMem.__str__": [[102, 104], ["str", "str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"Host:\\n\"", "+", "str", "(", "self", ".", "host", ")", "+", "\"\\nDevice:\\n\"", "+", "str", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.HostDeviceMem.__repr__": [[105, 107], ["infer_onnx_trt.HostDeviceMem.__str__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.__str__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__str__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.allocate_buffers": [[111, 132], ["pycuda.Stream", "pycuda.Stream", "tensorrt.nptype", "pycuda.pagelocked_empty", "pycuda.pagelocked_empty", "pycuda.mem_alloc", "pycuda.mem_alloc", "bindings.append", "engine.binding_is_input", "tensorrt.volume", "engine.get_binding_dtype", "int", "inputs.append", "outputs.append", "engine.get_binding_shape", "infer_onnx_trt.HostDeviceMem", "infer_onnx_trt.HostDeviceMem"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "@", "staticmethod", "\n", "def", "allocate_buffers", "(", "engine", ")", ":", "\n", "        ", "inputs", "=", "[", "]", "\n", "outputs", "=", "[", "]", "\n", "bindings", "=", "[", "]", "\n", "stream", "=", "cuda", ".", "Stream", "(", ")", "\n", "for", "binding", "in", "engine", ":", "\n", "            ", "size", "=", "trt", ".", "volume", "(", "engine", ".", "get_binding_shape", "(", "\n", "binding", ")", ")", "*", "engine", ".", "max_batch_size", "\n", "dtype", "=", "trt", ".", "nptype", "(", "engine", ".", "get_binding_dtype", "(", "binding", ")", ")", "\n", "# Allocate host and device buffers", "\n", "host_mem", "=", "cuda", ".", "pagelocked_empty", "(", "size", ",", "dtype", ")", "\n", "device_mem", "=", "cuda", ".", "mem_alloc", "(", "host_mem", ".", "nbytes", ")", "\n", "# Append the device buffer to device bindings.", "\n", "bindings", ".", "append", "(", "int", "(", "device_mem", ")", ")", "\n", "# Append to the appropriate list.", "\n", "if", "engine", ".", "binding_is_input", "(", "binding", ")", ":", "\n", "                ", "inputs", ".", "append", "(", "HostDeviceMem", "(", "host_mem", ",", "device_mem", ")", ")", "\n", "", "else", ":", "\n", "                ", "outputs", ".", "append", "(", "HostDeviceMem", "(", "host_mem", ",", "device_mem", ")", ")", "\n", "", "", "return", "inputs", ",", "outputs", ",", "bindings", ",", "stream", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt7_do_inference": [[135, 158], ["context.execute_async", "stream.synchronize", "pycuda.memcpy_htod_async", "pycuda.memcpy_htod_async", "pycuda.memcpy_dtoh_async", "pycuda.memcpy_dtoh_async"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "trt7_do_inference", "(", "context", ",", "\n", "bindings", ",", "\n", "inputs", ",", "\n", "outputs", ",", "\n", "stream", ",", "\n", "batch_size", "=", "1", ")", ":", "\n", "# Transfer input data to the GPU.", "\n", "        ", "[", "cuda", ".", "memcpy_htod_async", "(", "inp", ".", "device", ",", "inp", ".", "host", ",", "stream", ")", "for", "inp", "in", "inputs", "]", "\n", "# Run inference.", "\n", "context", ".", "execute_async", "(", "\n", "batch_size", "=", "batch_size", ",", "\n", "bindings", "=", "bindings", ",", "\n", "stream_handle", "=", "stream", ".", "handle", ")", "\n", "# Transfer predictions back from the GPU.", "\n", "[", "\n", "cuda", ".", "memcpy_dtoh_async", "(", "out", ".", "host", ",", "out", ".", "device", ",", "stream", ")", "\n", "for", "out", "in", "outputs", "\n", "]", "\n", "# Synchronize the stream", "\n", "stream", ".", "synchronize", "(", ")", "\n", "# Return only the host outputs.", "\n", "return", "[", "out", ".", "host", "for", "out", "in", "outputs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt7_do_inference_v2": [[161, 186], ["range", "time.time", "range", "stream.synchronize", "pycuda.memcpy_htod_async", "pycuda.memcpy_htod_async", "context.execute_async_v2", "context.execute_async_v2", "time.time", "pycuda.memcpy_dtoh_async", "pycuda.memcpy_dtoh_async"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "trt7_do_inference_v2", "(", "args", ",", "context", ",", "bindings", ",", "inputs", ",", "outputs", ",", "stream", ")", ":", "\n", "# Transfer input data to the GPU.", "\n", "        ", "[", "cuda", ".", "memcpy_htod_async", "(", "inp", ".", "device", ",", "inp", ".", "host", ",", "stream", ")", "for", "inp", "in", "inputs", "]", "\n", "# warmup", "\n", "for", "_", "in", "range", "(", "args", ".", "warmup", ")", ":", "\n", "            ", "context", ".", "execute_async_v2", "(", "\n", "bindings", "=", "bindings", ",", "stream_handle", "=", "stream", ".", "handle", ")", "\n", "# Run inference.", "\n", "", "t_start", "=", "time", ".", "time", "(", ")", "\n", "for", "_", "in", "range", "(", "args", ".", "repeats", ")", ":", "\n", "            ", "context", ".", "execute_async_v2", "(", "\n", "bindings", "=", "bindings", ",", "stream_handle", "=", "stream", ".", "handle", ")", "\n", "", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "t_start", "\n", "latency", "=", "elapsed_time", "/", "args", ".", "repeats", "*", "1000", "\n", "\n", "# Transfer predictions back from the GPU.", "\n", "[", "\n", "cuda", ".", "memcpy_dtoh_async", "(", "out", ".", "host", ",", "out", ".", "device", ",", "stream", ")", "\n", "for", "out", "in", "outputs", "\n", "]", "\n", "# Synchronize the stream", "\n", "stream", ".", "synchronize", "(", ")", "\n", "# Return only the host outputs.", "\n", "return", "[", "out", ".", "host", "for", "out", "in", "outputs", "]", ",", "latency", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt7_get_engine": [[187, 240], ["tensorrt.Logger", "os.path.exists", "int", "print", "infer_onnx_trt.TRTPredictorV2.trt7_get_engine.build_engine"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "trt7_get_engine", "(", "onnx_file_path", ",", "input_shape", ",", "engine_file_path", "=", "\"\"", ")", ":", "\n", "        ", "TRT_LOGGER", "=", "trt", ".", "Logger", "(", ")", "\n", "EXPLICIT_BATCH", "=", "1", "<<", "(", "\n", "int", ")", "(", "trt", ".", "NetworkDefinitionCreationFlag", ".", "EXPLICIT_BATCH", ")", "\n", "\"\"\"Attempts to load a serialized engine if available, otherwise builds a new TensorRT engine and saves it.\"\"\"", "\n", "\n", "def", "build_engine", "(", ")", ":", "\n", "            ", "\"\"\"Takes an ONNX file and creates a TensorRT engine to run inference with\"\"\"", "\n", "with", "trt", ".", "Builder", "(", "TRT_LOGGER", ")", "as", "builder", ",", "builder", ".", "create_network", "(", "EXPLICIT_BATCH", ")", "as", "network", ",", "trt", ".", "OnnxParser", "(", "network", ",", "TRT_LOGGER", ")", "as", "parser", ":", "\n", "                ", "builder", ".", "max_workspace_size", "=", "1", "<<", "30", "\n", "builder", ".", "max_batch_size", "=", "1", "\n", "# Parse model file", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "onnx_file_path", ")", ":", "\n", "                    ", "print", "(", "\n", "'ONNX file {} not found, please run yolov3_to_onnx.py first to generate it.'", "\n", ".", "format", "(", "onnx_file_path", ")", ")", "\n", "exit", "(", "0", ")", "\n", "", "print", "(", "'Loading ONNX file from path {}...'", ".", "format", "(", "\n", "onnx_file_path", ")", ")", "\n", "with", "open", "(", "onnx_file_path", ",", "'rb'", ")", "as", "model", ":", "\n", "                    ", "print", "(", "'Beginning ONNX file parsing'", ")", "\n", "if", "not", "parser", ".", "parse", "(", "model", ".", "read", "(", ")", ")", ":", "\n", "                        ", "print", "(", "'ERROR: Failed to parse the ONNX file.'", ")", "\n", "for", "error", "in", "range", "(", "parser", ".", "num_errors", ")", ":", "\n", "                            ", "print", "(", "parser", ".", "get_error", "(", "error", ")", ")", "\n", "", "return", "None", "\n", "\n", "", "", "network", ".", "get_input", "(", "0", ")", ".", "shape", "=", "input_shape", "\n", "#network.get_output(0).shape = [1, 19, 512, 1024]", "\n", "print", "(", "'Completed parsing of ONNX file'", ")", "\n", "print", "(", "\n", "'Building an engine from file {}; this may take a while...'", ".", "\n", "format", "(", "onnx_file_path", ")", ")", "\n", "engine", "=", "builder", ".", "build_cuda_engine", "(", "network", ")", "\n", "print", "(", "\"Completed creating Engine\"", ")", "\n", "\n", "if", "engine_file_path", "!=", "\"\"", ":", "\n", "                    ", "with", "open", "(", "engine_file_path", ",", "\"wb\"", ")", "as", "f", ":", "\n", "                        ", "f", ".", "write", "(", "engine", ".", "serialize", "(", ")", ")", "\n", "", "print", "(", "\"Save trt model in {}\"", ".", "format", "(", "engine_file_path", ")", ")", "\n", "", "return", "engine", "\n", "\n", "", "", "if", "os", ".", "path", ".", "exists", "(", "engine_file_path", ")", ":", "\n", "# If a serialized engine exists, use it instead of building an engine.", "\n", "            ", "print", "(", "\"Reading engine from file {}\"", ".", "format", "(", "engine_file_path", ")", ")", "\n", "with", "open", "(", "engine_file_path", ",", "\n", "\"rb\"", ")", "as", "f", ",", "trt", ".", "Runtime", "(", "TRT_LOGGER", ")", "as", "runtime", ":", "\n", "                ", "return", "runtime", ".", "deserialize_cuda_engine", "(", "f", ".", "read", "(", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "build_engine", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt7_run": [[241, 263], ["infer_onnx_trt.TRTPredictorV2.trt7_get_engine", "engine.create_execution_context", "infer_onnx_trt.TRTPredictorV2.allocate_buffers", "infer_onnx_trt.TRTPredictorV2.trt7_do_inference_v2", "tensorrt.Profiler"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt7_get_engine", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.allocate_buffers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt7_do_inference_v2"], ["", "", "@", "staticmethod", "\n", "def", "trt7_run", "(", "args", ",", "onnx_file_path", ",", "input_data", ")", ":", "\n", "        ", "engine_file_path", "=", "onnx_file_path", "[", "0", ":", "-", "5", "]", "+", "\".trt\"", "\n", "input_shape", "=", "input_data", ".", "shape", "\n", "with", "TRTPredictorV2", ".", "trt7_get_engine", "(", "onnx_file_path", ",", "input_shape", ")", "as", "engine", ",", "engine", ".", "create_execution_context", "(", ")", "as", "context", ":", "\n", "            ", "inputs", ",", "outputs", ",", "bindings", ",", "stream", "=", "TRTPredictorV2", ".", "allocate_buffers", "(", "\n", "engine", ")", "\n", "if", "args", ".", "enable_profile", ":", "\n", "                ", "context", ".", "profiler", "=", "trt", ".", "Profiler", "(", ")", "\n", "\n", "# Do inference", "\n", "# Set host input to the image. The common.do_inference function will copy the input to the GPU before executing.", "\n", "", "inputs", "[", "0", "]", ".", "host", "=", "input_data", "\n", "trt_outputs", ",", "latency", "=", "TRTPredictorV2", ".", "trt7_do_inference_v2", "(", "\n", "args", ",", "\n", "context", ",", "\n", "bindings", "=", "bindings", ",", "\n", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "stream", "=", "stream", ")", "\n", "return", "trt_outputs", "[", "0", "]", ",", "latency", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt5_get_engine": [[264, 308], ["tensorrt.Logger", "os.path.exists", "print", "infer_onnx_trt.TRTPredictorV2.trt7_get_engine.build_engine"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "trt5_get_engine", "(", "onnx_file_path", ",", "engine_file_path", "=", "\"\"", ")", ":", "\n", "        ", "\"\"\"Attempts to load a serialized engine if available, otherwise builds a new TensorRT engine and saves it.\"\"\"", "\n", "TRT_LOGGER", "=", "trt", ".", "Logger", "(", ")", "\n", "\n", "def", "build_engine", "(", ")", ":", "\n", "            ", "\"\"\"Takes an ONNX file and creates a TensorRT engine to run inference with\"\"\"", "\n", "with", "trt", ".", "Builder", "(", "TRT_LOGGER", ")", "as", "builder", ",", "builder", ".", "create_network", "(", ")", "as", "network", ",", "trt", ".", "OnnxParser", "(", "network", ",", "TRT_LOGGER", ")", "as", "parser", ":", "\n", "                ", "builder", ".", "max_workspace_size", "=", "1", "<<", "30", "# 1GB", "\n", "builder", ".", "max_batch_size", "=", "1", "\n", "# Parse model file", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "onnx_file_path", ")", ":", "\n", "                    ", "print", "(", "'ONNX file {} not found.'", ".", "format", "(", "onnx_file_path", ")", ")", "\n", "exit", "(", "0", ")", "\n", "", "print", "(", "'Loading ONNX file from path {}...'", ".", "format", "(", "\n", "onnx_file_path", ")", ")", "\n", "with", "open", "(", "onnx_file_path", ",", "'rb'", ")", "as", "model", ":", "\n", "                    ", "print", "(", "'Beginning ONNX file parsing'", ")", "\n", "parser", ".", "parse", "(", "model", ".", "read", "(", ")", ")", "\n", "", "print", "(", "'Completed parsing of ONNX file'", ")", "\n", "\n", "print", "(", "\n", "'Building an engine from file {}; this may take a while...'", ".", "\n", "format", "(", "onnx_file_path", ")", ")", "\n", "engine", "=", "builder", ".", "build_cuda_engine", "(", "network", ")", "\n", "print", "(", "\"Completed creating Engine\"", ")", "\n", "\n", "if", "engine_file_path", "!=", "\"\"", ":", "\n", "                    ", "with", "open", "(", "engine_file_path", ",", "\"wb\"", ")", "as", "f", ":", "\n", "                        ", "f", ".", "write", "(", "engine", ".", "serialize", "(", ")", ")", "\n", "print", "(", "\"Save trt model in {}\"", ".", "format", "(", "engine_file_path", ")", ")", "\n", "\n", "", "", "return", "engine", "\n", "\n", "", "", "if", "os", ".", "path", ".", "exists", "(", "engine_file_path", ")", ":", "\n", "# If a serialized engine exists, use it instead of building an engine.", "\n", "            ", "print", "(", "\"Reading engine from file {}\"", ".", "format", "(", "engine_file_path", ")", ")", "\n", "with", "open", "(", "engine_file_path", ",", "\n", "\"rb\"", ")", "as", "f", ",", "trt", ".", "Runtime", "(", "TRT_LOGGER", ")", "as", "runtime", ":", "\n", "                ", "return", "runtime", ".", "deserialize_cuda_engine", "(", "f", ".", "read", "(", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "build_engine", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt5_do_inference": [[311, 346], ["range", "time.time", "range", "stream.synchronize", "pycuda.memcpy_htod_async", "pycuda.memcpy_htod_async", "context.execute_async", "context.execute_async", "time.time", "pycuda.memcpy_dtoh_async", "pycuda.memcpy_dtoh_async"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "trt5_do_inference", "(", "args", ",", "\n", "context", ",", "\n", "bindings", ",", "\n", "inputs", ",", "\n", "outputs", ",", "\n", "stream", ",", "\n", "batch_size", "=", "1", ")", ":", "\n", "# Transfer input data to the GPU.", "\n", "        ", "[", "cuda", ".", "memcpy_htod_async", "(", "inp", ".", "device", ",", "inp", ".", "host", ",", "stream", ")", "for", "inp", "in", "inputs", "]", "\n", "# warmup", "\n", "for", "_", "in", "range", "(", "args", ".", "warmup", ")", ":", "\n", "            ", "context", ".", "execute_async", "(", "\n", "batch_size", "=", "batch_size", ",", "\n", "bindings", "=", "bindings", ",", "\n", "stream_handle", "=", "stream", ".", "handle", ")", "\n", "# Run inference.", "\n", "", "t_start", "=", "time", ".", "time", "(", ")", "\n", "for", "_", "in", "range", "(", "args", ".", "repeats", ")", ":", "\n", "            ", "context", ".", "execute_async", "(", "\n", "batch_size", "=", "batch_size", ",", "\n", "bindings", "=", "bindings", ",", "\n", "stream_handle", "=", "stream", ".", "handle", ")", "\n", "", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "t_start", "\n", "latency", "=", "elapsed_time", "/", "args", ".", "repeats", "*", "1000", "\n", "\n", "# Transfer predictions back from the GPU.", "\n", "[", "\n", "cuda", ".", "memcpy_dtoh_async", "(", "out", ".", "host", ",", "out", ".", "device", ",", "stream", ")", "\n", "for", "out", "in", "outputs", "\n", "]", "\n", "# Synchronize the stream", "\n", "stream", ".", "synchronize", "(", ")", "\n", "# Return only the host outputs.", "\n", "return", "[", "out", ".", "host", "for", "out", "in", "outputs", "]", ",", "latency", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt5_run": [[347, 370], ["infer_onnx_trt.TRTPredictorV2.trt5_get_engine", "engine.create_execution_context", "infer_onnx_trt.TRTPredictorV2.allocate_buffers", "infer_onnx_trt.TRTPredictorV2.trt5_do_inference", "tensorrt.Profiler"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt5_get_engine", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.allocate_buffers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt5_do_inference"], ["", "@", "staticmethod", "\n", "def", "trt5_run", "(", "args", ",", "onnx_file_path", ",", "input_data", ")", ":", "\n", "        ", "engine_file_path", "=", "onnx_file_path", "[", "0", ":", "-", "5", "]", "+", "\".trt\"", "\n", "input_shape", "=", "input_data", ".", "shape", "\n", "with", "TRTPredictorV2", ".", "trt5_get_engine", "(", "onnx_file_path", ")", "as", "engine", ",", "engine", ".", "create_execution_context", "(", ")", "as", "context", ":", "\n", "            ", "inputs", ",", "outputs", ",", "bindings", ",", "stream", "=", "TRTPredictorV2", ".", "allocate_buffers", "(", "\n", "engine", ")", "\n", "if", "args", ".", "enable_profile", ":", "\n", "                ", "context", ".", "profiler", "=", "trt", ".", "Profiler", "(", ")", "\n", "\n", "# Do inference", "\n", "# Set host input to the image. The common.do_inference function will", "\n", "# copy the input to the GPU before executing.", "\n", "", "inputs", "[", "0", "]", ".", "host", "=", "input_data", "\n", "trt_outputs", ",", "latency", "=", "TRTPredictorV2", ".", "trt5_do_inference", "(", "\n", "args", ",", "\n", "context", ",", "\n", "bindings", "=", "bindings", ",", "\n", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "stream", "=", "stream", ")", "\n", "return", "trt_outputs", "[", "0", "]", ",", "latency", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.parse_args": [[64, 94], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Test'", ")", "\n", "parser", ".", "add_argument", "(", "\"--config\"", ",", "help", "=", "\"The config file.\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--model_path\"", ",", "help", "=", "\"The pretrained weights file.\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--onnx_model_path\"", ",", "\n", "help", "=", "\"If set onnx_model_path, it loads the onnx \"", "\n", "\"model and infer it by TRT\"", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "help", "=", "'The directory for saving the predict result.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/tmp'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--trt_version'", ",", "\n", "help", "=", "'The version of TRT that is 5 or 7'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "7", ")", "\n", "parser", ".", "add_argument", "(", "'--width'", ",", "help", "=", "'width'", ",", "type", "=", "int", ",", "default", "=", "1024", ")", "\n", "parser", ".", "add_argument", "(", "'--height'", ",", "help", "=", "'height'", ",", "type", "=", "int", ",", "default", "=", "512", ")", "\n", "parser", ".", "add_argument", "(", "'--warmup'", ",", "default", "=", "500", ",", "type", "=", "int", ",", "help", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--repeats'", ",", "default", "=", "2000", ",", "type", "=", "int", ",", "help", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_profile'", ",", "action", "=", "'store_true'", ",", "help", "=", "'enable trt profile'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--print_model'", ",", "action", "=", "'store_true'", ",", "help", "=", "'print model to log'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.run_paddle": [[372, 379], ["paddle_model.eval", "paddle_model", "paddle_outs[].numpy", "paddle.to_tensor"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "", "", "def", "run_paddle", "(", "paddle_model", ",", "input_data", ")", ":", "\n", "    ", "paddle_model", ".", "eval", "(", ")", "\n", "paddle_outs", "=", "paddle_model", "(", "paddle", ".", "to_tensor", "(", "input_data", ")", ")", "\n", "out", "=", "paddle_outs", "[", "0", "]", ".", "numpy", "(", ")", "\n", "if", "out", ".", "ndim", "==", "3", ":", "\n", "        ", "out", "=", "out", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.check_and_run_onnx": [[381, 392], ["onnx.load", "onnx.checker.check_model", "print", "onnxruntime.InferenceSession", "onnxruntime.InferenceSession.run", "print", "onnxruntime.InferenceSession.get_inputs"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run"], ["", "def", "check_and_run_onnx", "(", "onnx_model_path", ",", "input_data", ")", ":", "\n", "    ", "onnx_model", "=", "onnx", ".", "load", "(", "onnx_model_path", ")", "\n", "onnx", ".", "checker", ".", "check_model", "(", "onnx_model", ")", "\n", "print", "(", "'The onnx model has been checked.'", ")", "\n", "\n", "ort_sess", "=", "onnxruntime", ".", "InferenceSession", "(", "onnx_model_path", ")", "\n", "ort_inputs", "=", "{", "ort_sess", ".", "get_inputs", "(", ")", "[", "0", "]", ".", "name", ":", "input_data", "}", "\n", "ort_outs", "=", "ort_sess", ".", "run", "(", "None", ",", "ort_inputs", ")", "\n", "print", "(", "\"The onnx model has been predicted by ONNXRuntime.\"", ")", "\n", "\n", "return", "ort_outs", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.export_load_infer": [[394, 458], ["model.eval", "print", "numpy.random.random().astype", "infer_onnx_trt.run_paddle", "print", "print", "paddle.static.InputSpec", "os.path.join", "paddle.onnx.export", "print", "infer_onnx_trt.check_and_run_onnx", "numpy.testing.assert_allclose", "print", "print", "trt_out.reshape.reshape", "numpy.testing.assert_allclose", "print", "paddleseg.cvlibs.Config", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "print", "os.path.basename().split", "infer_onnx_trt.TRTPredictorV2.trt5_run", "numpy.random.random", "infer_onnx_trt.TRTPredictorV2.trt7_run", "os.path.basename", "infer_onnx_trt.TRTPredictorV2", "infer_onnx_trt.TRTPredictorV2"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.run_paddle", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.check_and_run_onnx", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt5_run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt7_run"], ["", "def", "export_load_infer", "(", "args", ",", "model", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Export the ONNX model from PaddlePaddle, infer it by TRT.\n    It checks the accuracy and tests the infer time.\n\n    Args:\n        args (dict): The input args.\n        model (nn.Layer, optional): The paddle model to be exported and tested.\n            If model is None, it creates a model with config file in args.\n    \"\"\"", "\n", "\n", "# 1. prepare", "\n", "if", "model", "is", "None", ":", "\n", "        ", "cfg", "=", "Config", "(", "args", ".", "config", ")", "\n", "model", "=", "cfg", ".", "model", "\n", "", "if", "args", ".", "model_path", "is", "not", "None", ":", "\n", "        ", "utils", ".", "load_entire_model", "(", "model", ",", "args", ".", "model_path", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully'", ")", "\n", "\n", "#model = SavedSegmentationNet(model)  # add argmax to the last layer", "\n", "", "model", ".", "eval", "(", ")", "\n", "if", "args", ".", "print_model", ":", "\n", "        ", "print", "(", "model", ")", "\n", "\n", "", "input_shape", "=", "[", "1", ",", "3", ",", "args", ".", "height", ",", "args", ".", "width", "]", "\n", "print", "(", "\"input shape:\"", ",", "input_shape", ")", "\n", "input_data", "=", "np", ".", "random", ".", "random", "(", "input_shape", ")", ".", "astype", "(", "'float32'", ")", "\n", "model_name", "=", "os", ".", "path", ".", "basename", "(", "args", ".", "config", ")", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "\n", "# 2. run paddle", "\n", "paddle_out", "=", "run_paddle", "(", "model", ",", "input_data", ")", "\n", "print", "(", "\"out shape:\"", ",", "paddle_out", ".", "shape", ")", "\n", "print", "(", "\"The paddle model has been predicted by PaddlePaddle.\\n\"", ")", "\n", "\n", "# 3. export onnx", "\n", "input_spec", "=", "paddle", ".", "static", ".", "InputSpec", "(", "input_shape", ",", "'float32'", ",", "'x'", ")", "\n", "onnx_model_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "model_name", "+", "\"_model\"", ")", "\n", "paddle", ".", "onnx", ".", "export", "(", "\n", "model", ",", "onnx_model_path", ",", "input_spec", "=", "[", "input_spec", "]", ",", "opset_version", "=", "11", ")", "\n", "print", "(", "\"Completed export onnx model.\\n\"", ")", "\n", "\n", "# 4. run and check onnx", "\n", "onnx_model_path", "=", "onnx_model_path", "+", "\".onnx\"", "\n", "onnx_out", "=", "check_and_run_onnx", "(", "onnx_model_path", ",", "input_data", ")", "\n", "assert", "onnx_out", ".", "shape", "==", "paddle_out", ".", "shape", "\n", "np", ".", "testing", ".", "assert_allclose", "(", "onnx_out", ",", "paddle_out", ",", "rtol", "=", "0", ",", "atol", "=", "1e-03", ")", "\n", "print", "(", "\"The paddle and onnx models have the same outputs.\\n\"", ")", "\n", "\n", "# 5. run and check trt", "\n", "assert", "args", ".", "trt_version", "in", "(", "5", ",", "7", ")", ",", "\"trt_version should be 5 or 7\"", "\n", "if", "args", ".", "trt_version", "==", "5", ":", "\n", "        ", "trt_out", ",", "latency", "=", "TRTPredictorV2", "(", ")", ".", "trt5_run", "(", "args", ",", "onnx_model_path", ",", "\n", "input_data", ")", "\n", "", "elif", "args", ".", "trt_version", "==", "7", ":", "\n", "        ", "trt_out", ",", "latency", "=", "TRTPredictorV2", "(", ")", ".", "trt7_run", "(", "args", ",", "onnx_model_path", ",", "\n", "input_data", ")", "\n", "", "print", "(", "\"trt avg latency: {:.3f} ms\"", ".", "format", "(", "latency", ")", ")", "\n", "\n", "assert", "trt_out", ".", "size", "==", "paddle_out", ".", "size", "\n", "trt_out", "=", "trt_out", ".", "reshape", "(", "paddle_out", ".", "shape", ")", "\n", "np", ".", "testing", ".", "assert_allclose", "(", "trt_out", ",", "paddle_out", ",", "rtol", "=", "0", ",", "atol", "=", "1e-03", ")", "\n", "print", "(", "\"The paddle and trt models have the same outputs.\\n\"", ")", "\n", "\n", "return", "latency", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.load_infer": [[460, 485], ["print", "numpy.random.random().astype", "infer_onnx_trt.check_and_run_onnx", "print", "print", "trt_out.reshape.reshape", "numpy.testing.assert_allclose", "print", "infer_onnx_trt.TRTPredictorV2.trt5_run", "numpy.random.random", "infer_onnx_trt.TRTPredictorV2.trt7_run", "infer_onnx_trt.TRTPredictorV2", "infer_onnx_trt.TRTPredictorV2"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.check_and_run_onnx", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt5_run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.python.infer_onnx_trt.TRTPredictorV2.trt7_run"], ["", "def", "load_infer", "(", "args", ")", ":", "\n", "# Load the ONNX model and infer it by TRT", "\n", "\n", "    ", "input_shape", "=", "[", "1", ",", "3", ",", "args", ".", "height", ",", "args", ".", "width", "]", "\n", "print", "(", "\"input shape:\"", ",", "input_shape", ")", "\n", "input_data", "=", "np", ".", "random", ".", "random", "(", "input_shape", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "# 1. check and run onnx", "\n", "onnx_model_path", "=", "args", ".", "onnx_model_path", "\n", "onnx_out", "=", "check_and_run_onnx", "(", "onnx_model_path", ",", "input_data", ")", "\n", "print", "(", "\"output shape:\"", ",", "onnx_out", ".", "shape", ",", "\"\\n\"", ")", "\n", "\n", "# 2. run and check trt", "\n", "assert", "args", ".", "trt_version", "in", "(", "5", ",", "7", ")", ",", "\"trt_version should be 5 or 7\"", "\n", "if", "args", ".", "trt_version", "==", "5", ":", "\n", "        ", "trt_out", ",", "latency", "=", "TRTPredictorV2", "(", ")", ".", "trt5_run", "(", "args", ",", "onnx_model_path", ",", "\n", "input_data", ")", "\n", "", "elif", "args", ".", "trt_version", "==", "7", ":", "\n", "        ", "trt_out", ",", "latency", "=", "TRTPredictorV2", "(", ")", ".", "trt7_run", "(", "args", ",", "onnx_model_path", ",", "\n", "input_data", ")", "\n", "", "print", "(", "\"trt avg latency: {:.3f} ms\"", ".", "format", "(", "latency", ")", ")", "\n", "\n", "trt_out", "=", "trt_out", ".", "reshape", "(", "onnx_out", ".", "shape", ")", "\n", "np", ".", "testing", ".", "assert_allclose", "(", "trt_out", ",", "onnx_out", ",", "rtol", "=", "0", ",", "atol", "=", "1e-03", ")", "\n", "print", "(", "\"The onnx and trt models have the same outputs.\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env.sys_env._find_cuda_home": [[28, 55], ["os.environ.get", "os.environ.get", "subprocess.check_output().decode().rstrip", "os.path.dirname", "os.path.dirname", "subprocess.check_output().decode", "glob.glob", "os.path.exists", "len", "subprocess.check_output"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["def", "_find_cuda_home", "(", ")", ":", "\n", "    ", "'''Finds the CUDA install path. It refers to the implementation of\n    pytorch <https://github.com/pytorch/pytorch/blob/master/torch/utils/cpp_extension.py>.\n    '''", "\n", "# Guess #1", "\n", "cuda_home", "=", "os", ".", "environ", ".", "get", "(", "'CUDA_HOME'", ")", "or", "os", ".", "environ", ".", "get", "(", "'CUDA_PATH'", ")", "\n", "if", "cuda_home", "is", "None", ":", "\n", "# Guess #2", "\n", "        ", "try", ":", "\n", "            ", "which", "=", "'where'", "if", "IS_WINDOWS", "else", "'which'", "\n", "nvcc", "=", "subprocess", ".", "check_output", "(", "[", "which", ",", "\n", "'nvcc'", "]", ")", ".", "decode", "(", ")", ".", "rstrip", "(", "'\\r\\n'", ")", "\n", "cuda_home", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "dirname", "(", "nvcc", ")", ")", "\n", "", "except", "Exception", ":", "\n", "# Guess #3", "\n", "            ", "if", "IS_WINDOWS", ":", "\n", "                ", "cuda_homes", "=", "glob", ".", "glob", "(", "\n", "'C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v*.*'", ")", "\n", "if", "len", "(", "cuda_homes", ")", "==", "0", ":", "\n", "                    ", "cuda_home", "=", "''", "\n", "", "else", ":", "\n", "                    ", "cuda_home", "=", "cuda_homes", "[", "0", "]", "\n", "", "", "else", ":", "\n", "                ", "cuda_home", "=", "'/usr/local/cuda'", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "cuda_home", ")", ":", "\n", "                ", "cuda_home", "=", "None", "\n", "", "", "", "return", "cuda_home", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env.sys_env._get_nvcc_info": [[57, 69], ["os.path.isdir", "os.path.join", "subprocess.check_output().decode", "subprocess.check_output().decode.strip().split", "subprocess.check_output", "subprocess.check_output().decode.strip"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["", "def", "_get_nvcc_info", "(", "cuda_home", ")", ":", "\n", "    ", "if", "cuda_home", "is", "not", "None", "and", "os", ".", "path", ".", "isdir", "(", "cuda_home", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "nvcc", "=", "os", ".", "path", ".", "join", "(", "cuda_home", ",", "'bin/nvcc'", ")", "\n", "nvcc", "=", "subprocess", ".", "check_output", "(", "\n", "\"{} -V\"", ".", "format", "(", "nvcc", ")", ",", "shell", "=", "True", ")", ".", "decode", "(", ")", "\n", "nvcc", "=", "nvcc", ".", "strip", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "-", "1", "]", "\n", "", "except", "subprocess", ".", "SubprocessError", ":", "\n", "            ", "nvcc", "=", "\"Not Available\"", "\n", "", "", "else", ":", "\n", "        ", "nvcc", "=", "\"Not Available\"", "\n", "", "return", "nvcc", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env.sys_env._get_gpu_info": [[71, 81], ["subprocess.check_output().decode().strip", "gpu_info.split.split", "range", "len", "subprocess.check_output().decode", "gpu_info[].split", "subprocess.check_output"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["", "def", "_get_gpu_info", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "gpu_info", "=", "subprocess", ".", "check_output", "(", "[", "'nvidia-smi'", ",", "\n", "'-L'", "]", ")", ".", "decode", "(", ")", ".", "strip", "(", ")", "\n", "gpu_info", "=", "gpu_info", ".", "split", "(", "'\\n'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "gpu_info", ")", ")", ":", "\n", "            ", "gpu_info", "[", "i", "]", "=", "' '", ".", "join", "(", "gpu_info", "[", "i", "]", ".", "split", "(", "' '", ")", "[", ":", "4", "]", ")", "\n", "", "", "except", ":", "\n", "        ", "gpu_info", "=", "' Can not get GPU information. Please make sure CUDA have been installed successfully.'", "\n", "", "return", "gpu_info", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env.sys_env.get_sys_env": [[83, 125], ["platform.platform", "sys.version.replace", "paddle.is_compiled_with_cuda", "sys_env._find_cuda_home", "sys_env._get_nvcc_info", "paddle.get_cudnn_version", "os.environ.get", "sys_env._get_gpu_info", "subprocess.check_output().decode", "str", "paddle.get_device", "subprocess.check_output().decode.strip().split", "str", "paddle.distributed.ParallelEnv", "subprocess.check_output", "subprocess.check_output().decode.strip"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env._find_cuda_home", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env._get_nvcc_info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env._get_gpu_info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["", "def", "get_sys_env", "(", ")", ":", "\n", "    ", "\"\"\"collect environment information\"\"\"", "\n", "env_info", "=", "{", "}", "\n", "env_info", "[", "'platform'", "]", "=", "platform", ".", "platform", "(", ")", "\n", "\n", "env_info", "[", "'Python'", "]", "=", "sys", ".", "version", ".", "replace", "(", "'\\n'", ",", "''", ")", "\n", "\n", "# TODO is_compiled_with_cuda() has not been moved", "\n", "compiled_with_cuda", "=", "paddle", ".", "is_compiled_with_cuda", "(", ")", "\n", "env_info", "[", "'Paddle compiled with cuda'", "]", "=", "compiled_with_cuda", "\n", "\n", "if", "compiled_with_cuda", ":", "\n", "        ", "cuda_home", "=", "_find_cuda_home", "(", ")", "\n", "env_info", "[", "'NVCC'", "]", "=", "_get_nvcc_info", "(", "cuda_home", ")", "\n", "# refer to https://github.com/PaddlePaddle/Paddle/blob/release/2.0-rc/paddle/fluid/platform/device_context.cc#L327", "\n", "v", "=", "paddle", ".", "get_cudnn_version", "(", ")", "\n", "v", "=", "str", "(", "v", "//", "1000", ")", "+", "'.'", "+", "str", "(", "v", "%", "1000", "//", "100", ")", "\n", "env_info", "[", "'cudnn'", "]", "=", "v", "\n", "if", "'gpu'", "in", "paddle", ".", "get_device", "(", ")", ":", "\n", "            ", "gpu_nums", "=", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "nranks", "\n", "", "else", ":", "\n", "            ", "gpu_nums", "=", "0", "\n", "", "env_info", "[", "'GPUs used'", "]", "=", "gpu_nums", "\n", "\n", "env_info", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "os", ".", "environ", ".", "get", "(", "\n", "'CUDA_VISIBLE_DEVICES'", ")", "\n", "if", "gpu_nums", "==", "0", ":", "\n", "            ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "''", "\n", "", "env_info", "[", "'GPU'", "]", "=", "_get_gpu_info", "(", ")", "\n", "\n", "", "try", ":", "\n", "        ", "gcc", "=", "subprocess", ".", "check_output", "(", "[", "'gcc'", ",", "'--version'", "]", ")", ".", "decode", "(", ")", "\n", "gcc", "=", "gcc", ".", "strip", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "0", "]", "\n", "env_info", "[", "'GCC'", "]", "=", "gcc", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "\n", "", "env_info", "[", "'PaddleSeg'", "]", "=", "paddleseg", ".", "__version__", "\n", "env_info", "[", "'PaddlePaddle'", "]", "=", "paddle", ".", "__version__", "\n", "env_info", "[", "'OpenCV'", "]", "=", "cv2", ".", "__version__", "\n", "\n", "return", "env_info", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env.seg_env._get_user_home": [[28, 30], ["os.path.expanduser"], "function", ["None"], ["def", "_get_user_home", "(", ")", ":", "\n", "    ", "return", "os", ".", "path", ".", "expanduser", "(", "'~'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env.seg_env._get_seg_home": [[32, 43], ["os.path.join", "os.path.exists", "seg_env._get_user_home", "os.path.isdir", "paddleseg.utils.logger.warning"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.seg_env._get_user_home", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning"], ["", "def", "_get_seg_home", "(", ")", ":", "\n", "    ", "if", "'SEG_HOME'", "in", "os", ".", "environ", ":", "\n", "        ", "home_path", "=", "os", ".", "environ", "[", "'SEG_HOME'", "]", "\n", "if", "os", ".", "path", ".", "exists", "(", "home_path", ")", ":", "\n", "            ", "if", "os", ".", "path", ".", "isdir", "(", "home_path", ")", ":", "\n", "                ", "return", "home_path", "\n", "", "else", ":", "\n", "                ", "logger", ".", "warning", "(", "'SEG_HOME {} is a file!'", ".", "format", "(", "home_path", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "home_path", "\n", "", "", "return", "os", ".", "path", ".", "join", "(", "_get_user_home", "(", ")", ",", "'.paddleseg'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env.seg_env._get_sub_home": [[45, 50], ["os.path.join", "seg_env._get_seg_home", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.seg_env._get_seg_home"], ["", "def", "_get_sub_home", "(", "directory", ")", ":", "\n", "    ", "home", "=", "os", ".", "path", ".", "join", "(", "_get_seg_home", "(", ")", ",", "directory", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "home", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "home", ",", "exist_ok", "=", "True", ")", "\n", "", "return", "home", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.chase_db1.CHASEDB1.__init__": [[43, 99], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "ValueError", "ValueError", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "open", "os.path.exists", "os.path.normpath", "chase_db1.CHASEDB1.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "line.strip().split", "chase_db1.CHASEDB1.file_list.append", "len", "os.path.join", "os.path.join", "os.path.join", "line.strip", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "edge", "=", "False", ",", "\n", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "edge", "=", "edge", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "# labels only have 1/0, thus ignore_index is not necessary", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'train_list.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'val_list.txt'", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "mode", "==", "'train'", "or", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "Exception", "(", "\n", "\"File list format incorrect! It should be\"", "\n", "\" image_name label_name\\\\n\"", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "1", "]", ")", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "grt_path", "]", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.mini_deep_globe_road_extraction.MiniDeepGlobeRoadExtraction.__init__": [[41, 96], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "ValueError", "ValueError", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "os.path.join", "open", "os.path.exists", "os.path.normpath", "mini_deep_globe_road_extraction.MiniDeepGlobeRoadExtraction.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "line.strip().split", "mini_deep_globe_road_extraction.MiniDeepGlobeRoadExtraction.file_list.append", "len", "os.path.join", "os.path.join", "os.path.join", "line.strip", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be 'train' or 'val', but got {}.\"", ".", "format", "(", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'train.txt'", ")", "\n", "", "else", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'val.txt'", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'|'", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "mode", "==", "'train'", "or", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "Exception", "(", "\n", "\"File list format incorrect! It should be\"", "\n", "\" image_name|label_name\\\\n\"", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "1", "]", ")", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "grt_path", "]", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.ade.ADE20K.__init__": [[43, 90], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "os.listdir", "range", "ValueError", "ValueError", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "os.path.join", "i.replace", "len", "os.path.join", "os.path.join", "ade.ADE20K.file_list.append", "os.path.exists", "os.path.normpath", "ade.ADE20K.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress"], ["def", "__init__", "(", "self", ",", "transforms", ",", "dataset_root", "=", "None", ",", "mode", "=", "'train'", ",", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be one of ('train', 'val') in ADE20K dataset, but got {}.\"", "\n", ".", "format", "(", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extraname", "=", "'ADEChallengeData2016'", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'images/training'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'annotations/training'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'images/validation'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\n", "'annotations/validation'", ")", "\n", "", "img_files", "=", "os", ".", "listdir", "(", "img_dir", ")", "\n", "label_files", "=", "[", "i", ".", "replace", "(", "'.jpg'", ",", "'.png'", ")", "for", "i", "in", "img_files", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "img_files", ")", ")", ":", "\n", "            ", "img_path", "=", "os", ".", "path", ".", "join", "(", "img_dir", ",", "img_files", "[", "i", "]", ")", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "label_dir", ",", "label_files", "[", "i", "]", ")", "\n", "self", ".", "file_list", ".", "append", "(", "[", "img_path", ",", "label_path", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.ade.ADE20K.__getitem__": [[91, 112], ["ade.ADE20K.transforms", "numpy.asarray", "ade.ADE20K.transforms", "PIL.Image.open", "paddleseg.mask_to_binary_edge"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.mask_to_binary_edge"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "if", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "label", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "label_path", ")", ")", "\n", "# The class 0 is ignored. And it will equal to 255 after", "\n", "# subtracted 1, because the dtype of label is uint8.", "\n", "label", "=", "label", "-", "1", "\n", "label", "=", "label", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "return", "im", ",", "label", "\n", "", "else", ":", "\n", "            ", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "label", "=", "label", "-", "1", "\n", "# Recover the ignore pixels adding by transform", "\n", "label", "[", "label", "==", "254", "]", "=", "255", "\n", "if", "self", ".", "edge", ":", "\n", "                ", "edge_mask", "=", "F", ".", "mask_to_binary_edge", "(", "\n", "label", ",", "radius", "=", "2", ",", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "return", "im", ",", "label", ",", "edge_mask", "\n", "", "else", ":", "\n", "                ", "return", "im", ",", "label", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cocostuff.CocoStuff.__init__": [[48, 83], ["paddleseg.transforms.Compose", "list", "mode.lower.lower.lower", "os.path.join", "os.path.join", "sorted", "sorted", "ValueError", "ValueError", "ValueError", "glob.glob", "glob.glob", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "zip"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ",", "dataset_root", ",", "mode", "=", "'train'", ",", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"mode should be 'train', 'val', but got {}.\"", ".", "format", "(", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'images'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'annotations'", ")", "\n", "if", "self", ".", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "self", ".", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "img_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "label_dir", ",", "mode", "+", "'2017'", ",", "'*.png'", ")", ")", ")", "\n", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "mode", "+", "'2017'", ",", "'*.jpg'", ")", ")", ")", "\n", "\n", "self", ".", "file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.pp_humanseg14k.PPHumanSeg14K.__init__": [[40, 83], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "ValueError", "ValueError", "os.path.join", "open", "os.path.join", "os.path.join", "line.strip().split", "pp_humanseg14k.PPHumanSeg14K.file_list.append", "len", "os.path.join", "os.path.join", "os.path.join", "line.strip", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'train.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'val.txt'", ")", "\n", "", "else", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'test.txt'", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "mode", "==", "'train'", "or", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "Exception", "(", "\n", "\"File list format incorrect! It should be\"", "\n", "\" image_name label_name\\\\n\"", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "1", "]", ")", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "grt_path", "]", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.drive.DRIVE.__init__": [[41, 97], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "ValueError", "ValueError", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "open", "os.path.exists", "os.path.normpath", "drive.DRIVE.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "line.strip().split", "drive.DRIVE.file_list.append", "len", "os.path.join", "os.path.join", "os.path.join", "line.strip", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "edge", "=", "False", ",", "\n", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "edge", "=", "edge", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "# labels only have 1/0, thus ignore_index is not necessary", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'train_list.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'val_list.txt'", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "mode", "==", "'train'", "or", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "Exception", "(", "\n", "\"File list format incorrect! It should be\"", "\n", "\" image_name label_name\\\\n\"", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "1", "]", ")", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "grt_path", "]", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.supervisely.SUPERVISELY.__init__": [[46, 98], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "paddleseg.transforms.Compose", "paddleseg.transforms.Compose", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "os.path.join", "open", "f.readlines", "os.path.join().strip", "os.path.join().strip", "os.path.exists", "os.path.normpath", "supervisely.SUPERVISELY.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "zip", "file.split", "os.path.join", "os.path.join", "file.replace"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress"], ["def", "__init__", "(", "self", ",", "\n", "common_transforms", ",", "\n", "transforms1", ",", "\n", "transforms2", ",", "\n", "dataset_root", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "common_transforms", "=", "Compose", "(", "common_transforms", ")", "\n", "self", ".", "transforms", "=", "self", ".", "common_transforms", "\n", "if", "transforms1", "is", "not", "None", ":", "\n", "            ", "self", ".", "transforms1", "=", "Compose", "(", "transforms1", ",", "to_rgb", "=", "False", ")", "\n", "", "if", "transforms2", "is", "not", "None", ":", "\n", "            ", "self", ".", "transforms2", "=", "Compose", "(", "transforms2", ",", "to_rgb", "=", "False", ")", "\n", "", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "input_width", "=", "224", "\n", "self", ".", "input_height", "=", "224", "\n", "\n", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "path", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'supervisely_face_train_easy.txt'", ")", "\n", "", "else", ":", "\n", "            ", "path", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'supervisely_face_test_easy.txt'", ")", "\n", "", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "files", "=", "f", ".", "readlines", "(", ")", "\n", "", "files", "=", "[", "\"/\"", ".", "join", "(", "file", ".", "split", "(", "'/'", ")", "[", "1", ":", "]", ")", "for", "file", "in", "files", "]", "\n", "img_files", "=", "[", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "file", ")", ".", "strip", "(", ")", "for", "file", "in", "files", "]", "\n", "label_files", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "file", ".", "replace", "(", "'/img/'", ",", "'/ann/'", ")", ")", ".", "strip", "(", ")", "\n", "for", "file", "in", "files", "\n", "]", "\n", "\n", "self", ".", "file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.supervisely.SUPERVISELY.__getitem__": [[100, 137], ["cv2.imread", "cv2.imread", "cv2.resize", "numpy.uint8", "paddleseg.mask_to_binary_edge", "numpy.transpose().squeeze", "numpy.concatenate", "supervisely.SUPERVISELY.common_transforms", "numpy.float32", "copy.deepcopy", "supervisely.SUPERVISELY.common_transforms", "numpy.transpose", "supervisely.SUPERVISELY.transforms1", "supervisely.SUPERVISELY.transforms2", "numpy.float32", "numpy.float32", "numpy.uint8", "cv2.blur", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.mask_to_binary_edge"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "item", "]", "\n", "im", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "label", "=", "cv2", ".", "imread", "(", "label_path", ",", "0", ")", "\n", "label", "[", "label", ">", "0", "]", "=", "1", "\n", "\n", "if", "self", ".", "mode", "==", "\"val\"", ":", "\n", "            ", "common_im", ",", "label", "=", "self", ".", "common_transforms", "(", "im", "=", "im", ",", "label", "=", "label", ")", "\n", "im", "=", "np", ".", "float32", "(", "common_im", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", ")", "# RGB => BGR", "\n", "im_aug", "=", "copy", ".", "deepcopy", "(", "im", ")", "\n", "", "else", ":", "\n", "            ", "common_im", ",", "label", "=", "self", ".", "common_transforms", "(", "im", "=", "im", ",", "label", "=", "label", ")", "\n", "common_im", "=", "np", ".", "transpose", "(", "common_im", ",", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "# add augmentation", "\n", "im", ",", "_", "=", "self", ".", "transforms1", "(", "common_im", ")", "\n", "im_aug", ",", "_", "=", "self", ".", "transforms2", "(", "common_im", ")", "\n", "\n", "im", "=", "np", ".", "float32", "(", "im", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", ")", "# RGB => BGR", "\n", "im_aug", "=", "np", ".", "float32", "(", "im_aug", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", ")", "# RGB => BGR", "\n", "\n", "", "label", "=", "cv2", ".", "resize", "(", "\n", "np", ".", "uint8", "(", "label", ")", ",", "(", "self", ".", "input_width", ",", "self", ".", "input_height", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "\n", "# add mask blur", "\n", "label", "=", "np", ".", "uint8", "(", "cv2", ".", "blur", "(", "label", ",", "(", "5", ",", "5", ")", ")", ")", "\n", "label", "[", "label", ">=", "0.5", "]", "=", "1", "\n", "label", "[", "label", "<", "0.5", "]", "=", "0", "\n", "\n", "edge_mask", "=", "F", ".", "mask_to_binary_edge", "(", "\n", "label", ",", "radius", "=", "4", ",", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "edge_mask", "=", "np", ".", "transpose", "(", "edge_mask", ",", "[", "1", ",", "2", ",", "0", "]", ")", ".", "squeeze", "(", "axis", "=", "-", "1", ")", "\n", "im", "=", "np", ".", "concatenate", "(", "[", "im_aug", ",", "im", "]", ")", "\n", "if", "self", ".", "mode", "==", "\"train\"", ":", "\n", "            ", "return", "im", ",", "label", ",", "edge_mask", "\n", "", "else", ":", "\n", "            ", "return", "im", ",", "label", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes.Cityscapes.__init__": [[51, 88], ["paddleseg.transforms.Compose", "list", "mode.lower.lower.lower", "os.path.join", "os.path.join", "sorted", "sorted", "ValueError", "ValueError", "ValueError", "glob.glob", "glob.glob", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "zip"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ",", "dataset_root", ",", "mode", "=", "'train'", ",", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"mode should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'leftImg8bit'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'gtFine'", ")", "\n", "if", "self", ".", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "self", ".", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "img_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "label_dir", ",", "mode", ",", "'*'", ",", "\n", "'*_gtFine_labelTrainIds.png'", ")", ")", ")", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "mode", ",", "'*'", ",", "'*_leftImg8bit.png'", ")", ")", ")", "\n", "\n", "self", ".", "file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.dataset.Dataset.__init__": [[64, 140], ["paddleseg.transforms.Compose", "list", "mode.lower", "ValueError", "ValueError", "os.path.exists", "FileNotFoundError", "open", "ValueError", "line.strip().split", "dataset.Dataset.file_list.append", "os.path.exists", "FileNotFoundError", "ValueError", "ValueError", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.exists", "FileNotFoundError", "os.path.exists", "FileNotFoundError", "line.strip", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "transforms", ",", "\n", "dataset_root", ",", "\n", "num_classes", ",", "\n", "mode", "=", "'train'", ",", "\n", "train_path", "=", "None", ",", "\n", "val_path", "=", "None", ",", "\n", "test_path", "=", "None", ",", "\n", "separator", "=", "' '", ",", "\n", "ignore_index", "=", "255", ",", "\n", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "self", ".", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"mode should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "self", ".", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "'there is not `dataset_root`: {}.'", ".", "format", "(", "\n", "self", ".", "dataset_root", ")", ")", "\n", "\n", "", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "if", "train_path", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'When `mode` is \"train\", `train_path` is necessary, but it is None.'", "\n", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "train_path", ")", ":", "\n", "                ", "raise", "FileNotFoundError", "(", "'`train_path` is not found: {}'", ".", "format", "(", "\n", "train_path", ")", ")", "\n", "", "else", ":", "\n", "                ", "file_path", "=", "train_path", "\n", "", "", "elif", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "if", "val_path", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'When `mode` is \"val\", `val_path` is necessary, but it is None.'", "\n", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "val_path", ")", ":", "\n", "                ", "raise", "FileNotFoundError", "(", "'`val_path` is not found: {}'", ".", "format", "(", "\n", "val_path", ")", ")", "\n", "", "else", ":", "\n", "                ", "file_path", "=", "val_path", "\n", "", "", "else", ":", "\n", "            ", "if", "test_path", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'When `mode` is \"test\", `test_path` is necessary, but it is None.'", "\n", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "test_path", ")", ":", "\n", "                ", "raise", "FileNotFoundError", "(", "'`test_path` is not found: {}'", ".", "format", "(", "\n", "test_path", ")", ")", "\n", "", "else", ":", "\n", "                ", "file_path", "=", "test_path", "\n", "\n", "", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "separator", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "self", ".", "mode", "==", "'train'", "or", "self", ".", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "ValueError", "(", "\n", "\"File list format incorrect! In training or evaluation task it should be\"", "\n", "\" image_name{}label_name\\\\n\"", ".", "format", "(", "separator", ")", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "label_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "1", "]", ")", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "label_path", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.dataset.Dataset.__getitem__": [[141, 160], ["dataset.Dataset.transforms", "dataset.Dataset.transforms", "numpy.asarray", "dataset.Dataset.transforms", "PIL.Image.open", "paddleseg.mask_to_binary_edge"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.mask_to_binary_edge"], ["", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "            ", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "im", "=", "im", "[", "np", ".", "newaxis", ",", "...", "]", "\n", "return", "im", ",", "image_path", "\n", "", "elif", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "label", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "label_path", ")", ")", "\n", "label", "=", "label", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "return", "im", ",", "label", "\n", "", "else", ":", "\n", "            ", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "if", "self", ".", "edge", ":", "\n", "                ", "edge_mask", "=", "F", ".", "mask_to_binary_edge", "(", "\n", "label", ",", "radius", "=", "2", ",", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "return", "im", ",", "label", ",", "edge_mask", "\n", "", "else", ":", "\n", "                ", "return", "im", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.dataset.Dataset.__len__": [[161, 163], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "file_list", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.optic_disc_seg.OpticDiscSeg.__init__": [[40, 98], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "ValueError", "ValueError", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "open", "os.path.exists", "os.path.normpath", "optic_disc_seg.OpticDiscSeg.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "os.path.join", "line.strip().split", "optic_disc_seg.OpticDiscSeg.file_list.append", "len", "os.path.join", "os.path.join", "os.path.join", "line.strip", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'train_list.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'val_list.txt'", ")", "\n", "", "else", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'test_list.txt'", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "mode", "==", "'train'", "or", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "Exception", "(", "\n", "\"File list format incorrect! It should be\"", "\n", "\" image_name label_name\\\\n\"", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "1", "]", ")", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "grt_path", "]", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.pascal_context.PascalContext.__init__": [[38, 87], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "os.path.join", "os.path.join", "os.path.join", "ValueError", "ValueError", "ValueError", "os.path.join", "os.path.exists", "RuntimeError", "open", "os.path.join", "line.strip.strip.strip", "os.path.join", "os.path.join", "pascal_context.PascalContext.file_list.append", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "transforms", "=", "None", ",", "\n", "dataset_root", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'trainval'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be one of ('train', 'trainval', 'val') in PascalContext dataset, but got {}.\"", "\n", ".", "format", "(", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "image_set_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'ImageSets'", ",", "\n", "'Segmentation'", ")", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "image_set_dir", ",", "'train_context.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "image_set_dir", ",", "'val_context.txt'", ")", "\n", "", "elif", "mode", "==", "'trainval'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "image_set_dir", ",", "'trainval_context.txt'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "file_path", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"PASCAL-Context annotations are not ready, \"", "\n", "\"Please make sure voc_context.py has been properly run.\"", ")", "\n", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'JPEGImages'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'Context'", ")", "\n", "\n", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "img_dir", ",", "''", ".", "join", "(", "[", "line", ",", "'.jpg'", "]", ")", ")", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "label_dir", ",", "''", ".", "join", "(", "[", "line", ",", "'.png'", "]", ")", ")", "\n", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "label_path", "]", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.hrf.HRF.__init__": [[40, 96], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "ValueError", "ValueError", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "open", "os.path.exists", "os.path.normpath", "hrf.HRF.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "line.strip().split", "hrf.HRF.file_list.append", "len", "os.path.join", "os.path.join", "os.path.join", "line.strip", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "edge", "=", "False", ",", "\n", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "edge", "=", "edge", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'train_list.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'val_list.txt'", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "mode", "==", "'train'", "or", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "Exception", "(", "\n", "\"File list format incorrect! It should be\"", "\n", "\" image_name label_name\\\\n\"", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "1", "]", ")", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "grt_path", "]", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.stare.STARE.__init__": [[40, 96], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "ValueError", "ValueError", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "open", "os.path.exists", "os.path.normpath", "stare.STARE.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "line.strip().split", "stare.STARE.file_list.append", "len", "os.path.join", "os.path.join", "os.path.join", "line.strip", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "edge", "=", "False", ",", "\n", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "edge", "=", "edge", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "# data  STARE", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'train_list.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'val_list.txt'", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "mode", "==", "'train'", "or", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "Exception", "(", "\n", "\"File list format incorrect! It should be\"", "\n", "\" image_name label_name\\\\n\"", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "1", "]", ")", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "grt_path", "]", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.eg1800.EG1800.__init__": [[46, 100], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "paddleseg.transforms.Compose", "paddleseg.transforms.Compose", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "os.path.join", "open", "f.readlines", "os.path.join().strip", "os.path.join().strip", "os.path.exists", "os.path.normpath", "eg1800.EG1800.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "zip", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress"], ["def", "__init__", "(", "self", ",", "\n", "common_transforms", ",", "\n", "transforms1", ",", "\n", "transforms2", ",", "\n", "dataset_root", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "common_transforms", "=", "Compose", "(", "common_transforms", ")", "\n", "self", ".", "transforms", "=", "self", ".", "common_transforms", "\n", "if", "transforms1", "is", "not", "None", ":", "\n", "            ", "self", ".", "transforms1", "=", "Compose", "(", "transforms1", ",", "to_rgb", "=", "False", ")", "\n", "", "if", "transforms2", "is", "not", "None", ":", "\n", "            ", "self", ".", "transforms2", "=", "Compose", "(", "transforms2", ",", "to_rgb", "=", "False", ")", "\n", "", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "input_width", "=", "224", "\n", "self", ".", "input_height", "=", "224", "\n", "\n", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "path", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'eg1800_train.txt'", ")", "\n", "", "else", ":", "\n", "            ", "path", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'eg1800_test.txt'", ")", "\n", "", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "files", "=", "f", ".", "readlines", "(", ")", "\n", "", "img_files", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'Images'", ",", "file", ")", ".", "strip", "(", ")", "for", "file", "in", "files", "\n", "]", "\n", "label_files", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'Labels'", ",", "file", ")", ".", "strip", "(", ")", "for", "file", "in", "files", "\n", "]", "\n", "\n", "self", ".", "file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.eg1800.EG1800.__getitem__": [[101, 138], ["cv2.imread", "cv2.imread", "cv2.resize", "numpy.uint8", "paddleseg.mask_to_binary_edge", "numpy.transpose().squeeze", "numpy.concatenate", "eg1800.EG1800.common_transforms", "numpy.float32", "copy.deepcopy", "eg1800.EG1800.common_transforms", "numpy.transpose", "eg1800.EG1800.transforms1", "eg1800.EG1800.transforms2", "numpy.float32", "numpy.float32", "numpy.uint8", "cv2.blur", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.mask_to_binary_edge"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "item", "]", "\n", "im", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "label", "=", "cv2", ".", "imread", "(", "label_path", ",", "0", ")", "\n", "label", "[", "label", ">", "1", "]", "=", "0", "\n", "\n", "if", "self", ".", "mode", "==", "\"val\"", ":", "\n", "            ", "common_im", ",", "label", "=", "self", ".", "common_transforms", "(", "im", "=", "im", ",", "label", "=", "label", ")", "\n", "im", "=", "np", ".", "float32", "(", "common_im", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", ")", "# RGB => BGR", "\n", "im_aug", "=", "copy", ".", "deepcopy", "(", "im", ")", "\n", "", "else", ":", "\n", "            ", "common_im", ",", "label", "=", "self", ".", "common_transforms", "(", "im", "=", "im", ",", "label", "=", "label", ")", "\n", "common_im", "=", "np", ".", "transpose", "(", "common_im", ",", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "# add augmentation", "\n", "im", ",", "_", "=", "self", ".", "transforms1", "(", "common_im", ")", "\n", "im_aug", ",", "_", "=", "self", ".", "transforms2", "(", "common_im", ")", "\n", "\n", "im", "=", "np", ".", "float32", "(", "im", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", ")", "# RGB => BGR", "\n", "im_aug", "=", "np", ".", "float32", "(", "im_aug", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", ")", "# RGB => BGR", "\n", "\n", "", "label", "=", "cv2", ".", "resize", "(", "\n", "np", ".", "uint8", "(", "label", ")", ",", "(", "self", ".", "input_width", ",", "self", ".", "input_height", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "\n", "# add mask blur", "\n", "label", "=", "np", ".", "uint8", "(", "cv2", ".", "blur", "(", "label", ",", "(", "5", ",", "5", ")", ")", ")", "\n", "label", "[", "label", ">=", "0.5", "]", "=", "1", "\n", "label", "[", "label", "<", "0.5", "]", "=", "0", "\n", "\n", "edge_mask", "=", "F", ".", "mask_to_binary_edge", "(", "\n", "label", ",", "radius", "=", "4", ",", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "edge_mask", "=", "np", ".", "transpose", "(", "edge_mask", ",", "[", "1", ",", "2", ",", "0", "]", ")", ".", "squeeze", "(", "axis", "=", "-", "1", ")", "\n", "im", "=", "np", ".", "concatenate", "(", "[", "im_aug", ",", "im", "]", ")", "\n", "if", "self", ".", "mode", "==", "\"train\"", ":", "\n", "            ", "return", "im", ",", "label", ",", "edge_mask", "\n", "", "else", ":", "\n", "            ", "return", "im", ",", "label", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.voc.PascalVOC.__init__": [[41, 113], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "ValueError", "ValueError", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "open", "os.path.exists", "os.path.normpath", "voc.PascalVOC.dataset_root.rsplit", "paddleseg.utils.download.download_file_and_uncompress", "os.path.join", "line.strip.strip.strip", "os.path.join", "os.path.join", "voc.PascalVOC.file_list.append", "open", "os.path.join", "line.strip.strip.strip", "os.path.join", "os.path.join", "voc.PascalVOC.file_list.append", "os.path.join", "os.path.join", "os.path.exists", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "transforms", ",", "dataset_root", "=", "None", ",", "mode", "=", "'train'", ",", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'trainval'", ",", "'trainaug'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be one of ('train', 'trainval', 'trainaug', 'val') in PascalVOC dataset, but got {}.\"", "\n", ".", "format", "(", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extrapath", "=", "seg_env", ".", "DATA_HOME", ",", "\n", "extraname", "=", "'VOCdevkit'", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "normpath", "(", "self", ".", "dataset_root", ")", "\n", "savepath", ",", "extraname", "=", "self", ".", "dataset_root", ".", "rsplit", "(", "\n", "sep", "=", "os", ".", "path", ".", "sep", ",", "maxsplit", "=", "1", ")", "\n", "self", ".", "dataset_root", "=", "download_file_and_uncompress", "(", "\n", "url", "=", "URL", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "savepath", ",", "\n", "extraname", "=", "extraname", ")", "\n", "\n", "", "image_set_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'VOC2012'", ",", "'ImageSets'", ",", "\n", "'Segmentation'", ")", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "image_set_dir", ",", "'train.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "image_set_dir", ",", "'val.txt'", ")", "\n", "", "elif", "mode", "==", "'trainval'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "image_set_dir", ",", "'trainval.txt'", ")", "\n", "", "elif", "mode", "==", "'trainaug'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "image_set_dir", ",", "'train.txt'", ")", "\n", "file_path_aug", "=", "os", ".", "path", ".", "join", "(", "image_set_dir", ",", "'aug.txt'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "file_path_aug", ")", ":", "\n", "                ", "raise", "RuntimeError", "(", "\n", "\"When `mode` is 'trainaug', Pascal Voc dataset should be augmented, \"", "\n", "\"Please make sure voc_augment.py has been properly run when using this mode.\"", "\n", ")", "\n", "\n", "", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'VOC2012'", ",", "'JPEGImages'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'VOC2012'", ",", "\n", "'SegmentationClass'", ")", "\n", "label_dir_aug", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'VOC2012'", ",", "\n", "'SegmentationClassAug'", ")", "\n", "\n", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "img_dir", ",", "''", ".", "join", "(", "[", "line", ",", "'.jpg'", "]", ")", ")", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "label_dir", ",", "''", ".", "join", "(", "[", "line", ",", "'.png'", "]", ")", ")", "\n", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "label_path", "]", ")", "\n", "", "", "if", "mode", "==", "'trainaug'", ":", "\n", "            ", "with", "open", "(", "file_path_aug", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "for", "line", "in", "f", ":", "\n", "                    ", "line", "=", "line", ".", "strip", "(", ")", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "img_dir", ",", "''", ".", "join", "(", "[", "line", ",", "'.jpg'", "]", ")", ")", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "label_dir_aug", ",", "\n", "''", ".", "join", "(", "[", "line", ",", "'.png'", "]", ")", ")", "\n", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "label_path", "]", ")", "\n", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.humanseg.HumanSeg.__init__": [[36, 79], ["paddleseg.transforms.Compose", "mode.lower.lower.lower", "list", "ValueError", "ValueError", "os.path.join", "open", "os.path.join", "os.path.join", "line.strip().split", "humanseg.HumanSeg.file_list.append", "len", "os.path.join", "os.path.join", "os.path.join", "line.strip", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "2", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'train.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'val.txt'", ")", "\n", "", "else", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'test.txt'", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "mode", "==", "'train'", "or", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "Exception", "(", "\n", "\"File list format incorrect! It should be\"", "\n", "\" image_name label_name\\\\n\"", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "grt_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "1", "]", ")", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "grt_path", "]", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.auto_nue.AutoNue.__init__": [[58, 127], ["paddleseg.transforms.Compose", "list", "mode.lower.lower.lower", "os.path.join", "os.path.join", "sorted", "sorted", "len", "ValueError", "ValueError", "ValueError", "glob.glob", "glob.glob", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "zip", "sorted", "sorted", "auto_nue.AutoNue.file_list.extend", "range", "print", "len", "glob.glob", "glob.glob", "len", "print", "len", "os.path.join", "os.path.join", "zip"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "transforms", ",", "\n", "dataset_root", ",", "\n", "mode", "=", "'train'", ",", "\n", "coarse_multiple", "=", "1", ",", "\n", "add_val", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "num_classes", "=", "26", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "coarse_multiple", "=", "coarse_multiple", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"mode should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'leftImg8bit'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'gtFine'", ")", "\n", "if", "self", ".", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "self", ".", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "img_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "label_dir", ",", "mode", ",", "'*'", ",", "\n", "'*_gtFine_labellevel3Ids.png'", ")", ")", ")", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "mode", ",", "'*'", ",", "'*_leftImg8bit.*'", ")", ")", ")", "\n", "\n", "self", ".", "file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "# for ii in range(len(self.file_list)):", "\n", "#     print(self.file_list[ii])", "\n", "# print(len(self.file_list))", "\n", "self", ".", "num_files", "=", "len", "(", "self", ".", "file_list", ")", "\n", "self", ".", "total_num_files", "=", "self", ".", "num_files", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "# whether to add val set in training", "\n", "            ", "if", "add_val", ":", "\n", "                ", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "label_dir", ",", "'val'", ",", "'*'", ",", "\n", "'*_gtFine_labellevel3Ids.png'", ")", ")", ")", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "img_dir", ",", "'val'", ",", "'*'", ",", "'*_leftImg8bit.*'", ")", ")", ")", "\n", "val_file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "self", ".", "file_list", ".", "extend", "(", "val_file_list", ")", "\n", "for", "ii", "in", "range", "(", "len", "(", "self", ".", "file_list", ")", ")", ":", "\n", "                    ", "print", "(", "self", ".", "file_list", "[", "ii", "]", ")", "\n", "", "print", "(", "len", "(", "self", ".", "file_list", ")", ")", "\n", "self", ".", "num_files", "=", "len", "(", "self", ".", "file_list", ")", "\n", "self", ".", "total_num_files", "=", "self", ".", "num_files", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.auto_nue.AutoNue.__getitem__": [[155, 177], ["auto_nue.AutoNue.transforms", "auto_nue.AutoNue.transforms", "numpy.asarray", "auto_nue.AutoNue.transforms", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms"], ["", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "            ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "im", "=", "im", "[", "np", ".", "newaxis", ",", "...", "]", "\n", "return", "im", ",", "image_path", "\n", "", "elif", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "label", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "label_path", ")", ")", "\n", "#             label = cv2.resize(label, (1280, 720), interpolation=cv2.INTER_NEAREST)", "\n", "label", "=", "label", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "return", "im", ",", "label", "\n", "", "else", ":", "\n", "            ", "if", "idx", ">=", "self", ".", "num_files", ":", "\n", "                ", "image_path", ",", "label_path", "=", "self", ".", "coarse_file_list", "[", "idx", "-", "\n", "self", ".", "num_files", "]", "\n", "", "else", ":", "\n", "                ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "\n", "", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "return", "im", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.auto_nue.AutoNue.__len__": [[178, 180], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total_num_files", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.auto_nue_crop.AutoNueCrop.__init__": [[58, 127], ["paddleseg.transforms.Compose", "list", "mode.lower.lower.lower", "os.path.join", "os.path.join", "sorted", "sorted", "len", "ValueError", "ValueError", "ValueError", "glob.glob", "glob.glob", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "zip", "sorted", "sorted", "auto_nue_crop.AutoNueCrop.file_list.extend", "range", "print", "len", "glob.glob", "glob.glob", "len", "print", "len", "os.path.join", "os.path.join", "zip"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "transforms", ",", "\n", "dataset_root", ",", "\n", "mode", "=", "'train'", ",", "\n", "coarse_multiple", "=", "1", ",", "\n", "add_val", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "num_classes", "=", "26", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "coarse_multiple", "=", "coarse_multiple", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"mode should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'leftImg8bit'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'gtFine'", ")", "\n", "if", "self", ".", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "self", ".", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "img_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "label_dir", ",", "mode", ",", "'*'", ",", "\n", "'*_gtFine_labellevel3Ids.png'", ")", ")", ")", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "mode", ",", "'*'", ",", "'*_leftImg8bit.*'", ")", ")", ")", "\n", "\n", "self", ".", "file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "# for ii in range(len(self.file_list)):", "\n", "#     print(self.file_list[ii])", "\n", "# print(len(self.file_list))", "\n", "self", ".", "num_files", "=", "len", "(", "self", ".", "file_list", ")", "\n", "self", ".", "total_num_files", "=", "self", ".", "num_files", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "# whether to add val set in training", "\n", "            ", "if", "add_val", ":", "\n", "                ", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "label_dir", ",", "'val'", ",", "'*'", ",", "\n", "'*_gtFine_labellevel3Ids.png'", ")", ")", ")", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "img_dir", ",", "'val'", ",", "'*'", ",", "'*_leftImg8bit.*'", ")", ")", ")", "\n", "val_file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "self", ".", "file_list", ".", "extend", "(", "val_file_list", ")", "\n", "for", "ii", "in", "range", "(", "len", "(", "self", ".", "file_list", ")", ")", ":", "\n", "                    ", "print", "(", "self", ".", "file_list", "[", "ii", "]", ")", "\n", "", "print", "(", "len", "(", "self", ".", "file_list", ")", ")", "\n", "self", ".", "num_files", "=", "len", "(", "self", ".", "file_list", ")", "\n", "self", ".", "total_num_files", "=", "self", ".", "num_files", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.auto_nue_crop.AutoNueCrop.__getitem__": [[128, 162], ["auto_nue_crop.AutoNueCrop.transforms", "auto_nue_crop.AutoNueCrop.transforms", "auto_nue_crop.AutoNueCrop.transforms", "numpy.linspace().tolist", "numpy.random.shuffle", "int", "numpy.linspace"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle"], ["", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "            ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "(", "h", ",", "w", ")", "=", "im", ".", "shape", "[", "1", ":", "]", "\n", "im1", "=", "im", "[", ":", ",", "540", ":", "540", "+", "720", ",", "320", ":", "320", "+", "1280", "]", "\n", "im2", "=", "im", "[", ":", ",", "540", ":", "540", "+", "720", ",", "960", ":", "960", "+", "1280", "]", "\n", "im3", "=", "im", "[", ":", ",", "540", ":", "540", "+", "720", ",", "1600", ":", "1600", "+", "1280", "]", "\n", "return", "im1", ",", "im2", ",", "im3", ",", "image_path", "\n", "", "elif", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "(", "h", ",", "w", ")", "=", "im", ".", "shape", "[", "1", ":", "]", "\n", "im1", "=", "im", "[", ":", ",", "540", ":", "540", "+", "720", ",", "320", ":", "320", "+", "1280", "]", "\n", "im2", "=", "im", "[", ":", ",", "540", ":", "540", "+", "720", ",", "960", ":", "960", "+", "1280", "]", "\n", "im3", "=", "im", "[", ":", ",", "540", ":", "540", "+", "720", ",", "1600", ":", "1600", "+", "1280", "]", "\n", "label", "=", "label", "[", "540", ":", "540", "+", "720", ",", "320", ":", "1600", "+", "1280", "]", "\n", "return", "im1", ",", "im2", ",", "im3", ",", "label", "\n", "", "else", ":", "\n", "            ", "if", "idx", ">=", "self", ".", "num_files", ":", "\n", "                ", "image_path", ",", "label_path", "=", "self", ".", "coarse_file_list", "[", "idx", "-", "\n", "self", ".", "num_files", "]", "\n", "", "else", ":", "\n", "                ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "\n", "", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "(", "h", ",", "w", ")", "=", "im", ".", "shape", "[", "1", ":", "]", "\n", "\n", "start_w", "=", "np", ".", "linspace", "(", "320", ",", "1600", ",", "5", ")", ".", "tolist", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "start_w", ")", "\n", "start", "=", "int", "(", "start_w", "[", "0", "]", ")", "\n", "crop_im", "=", "im", "[", ":", ",", "540", ":", "540", "+", "720", ",", "start", ":", "(", "start", "+", "1280", ")", "]", "\n", "crop_label", "=", "label", "[", "540", ":", "540", "+", "720", ",", "start", ":", "(", "start", "+", "1280", ")", "]", "\n", "return", "crop_im", ",", "crop_label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.auto_nue_crop.AutoNueCrop.__len__": [[163, 165], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total_num_files", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.auto_nue_autolabel.AutoNueAutolabel.__init__": [[58, 157], ["paddleseg.transforms.Compose", "list", "mode.lower.lower.lower", "os.path.join", "os.path.join", "sorted", "sorted", "len", "ValueError", "ValueError", "ValueError", "glob.glob", "glob.glob", "os.path.join", "os.path.join", "sorted", "sorted", "random.shuffle", "len", "print", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "zip", "sorted", "sorted", "auto_nue_autolabel.AutoNueAutolabel.file_list.extend", "range", "print", "len", "ValueError", "glob.glob", "glob.glob", "len", "len", "ValueError", "glob.glob", "glob.glob", "len", "print", "len", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "zip", "os.path.join", "os.path.join", "zip", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle"], ["def", "__init__", "(", "self", ",", "\n", "transforms", ",", "\n", "dataset_root", ",", "\n", "mode", "=", "'train'", ",", "\n", "coarse_multiple", "=", "1", ",", "\n", "add_val", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "num_classes", "=", "26", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "coarse_multiple", "=", "coarse_multiple", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"mode should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'leftImg8bit'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'gtFine'", ")", "\n", "if", "self", ".", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "self", ".", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "img_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "label_dir", ",", "mode", ",", "'*'", ",", "\n", "'*_gtFine_labellevel3Ids.png'", ")", ")", ")", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "mode", ",", "'*'", ",", "'*_leftImg8bit.*'", ")", ")", ")", "\n", "\n", "self", ".", "file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "# for ii in range(len(self.file_list)):", "\n", "#     print(self.file_list[ii])", "\n", "# print(len(self.file_list))", "\n", "self", ".", "num_files", "=", "len", "(", "self", ".", "file_list", ")", "\n", "self", ".", "total_num_files", "=", "self", ".", "num_files", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "# whether to add val set in training", "\n", "            ", "if", "add_val", ":", "\n", "                ", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "label_dir", ",", "'val'", ",", "'*'", ",", "\n", "'*_gtFine_labellevel3Ids.png'", ")", ")", ")", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "img_dir", ",", "'val'", ",", "'*'", ",", "'*_leftImg8bit.*'", ")", ")", ")", "\n", "val_file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "self", ".", "file_list", ".", "extend", "(", "val_file_list", ")", "\n", "for", "ii", "in", "range", "(", "len", "(", "self", ".", "file_list", ")", ")", ":", "\n", "                    ", "print", "(", "self", ".", "file_list", "[", "ii", "]", ")", "\n", "", "print", "(", "len", "(", "self", ".", "file_list", ")", ")", "\n", "self", ".", "num_files", "=", "len", "(", "self", ".", "file_list", ")", "\n", "self", ".", "total_num_files", "=", "self", ".", "num_files", "\n", "\n", "# use coarse dataset only in training", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "'data/IDD_Detection/JPEGImages'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "'data/IDD_Detection/pred_refine'", ")", "\n", "\n", "if", "self", ".", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "self", ".", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "img_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"The coarse dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "coarse_label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "label_dir", ",", "'*'", ",", "'*'", ")", ")", ")", "\n", "coarse_img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "'*'", ",", "'*'", ")", ")", ")", "\n", "if", "len", "(", "coarse_img_files", ")", "!=", "len", "(", "coarse_label_files", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"The number of images = {} is not equal to the number of labels = {} in Cityscapes Autolabeling dataset.\"", "\n", ".", "format", "(", "len", "(", "coarse_img_files", ")", ",", "len", "(", "coarse_label_files", ")", ")", ")", "\n", "\n", "", "self", ".", "coarse_file_list", "=", "[", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "\n", "coarse_img_files", ",", "coarse_label_files", ")", "]", "\n", "random", ".", "shuffle", "(", "self", ".", "coarse_file_list", ")", "\n", "\n", "self", ".", "file_list", "=", "self", ".", "coarse_file_list", "\n", "self", ".", "num_files", "=", "len", "(", "self", ".", "file_list", ")", "\n", "self", ".", "total_num_files", "=", "self", ".", "num_files", "\n", "print", "(", "self", ".", "num_files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.auto_nue_autolabel.AutoNueAutolabel.__getitem__": [[160, 181], ["auto_nue_autolabel.AutoNueAutolabel.transforms", "auto_nue_autolabel.AutoNueAutolabel.transforms", "numpy.asarray", "auto_nue_autolabel.AutoNueAutolabel.transforms", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "            ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "im", "=", "im", "[", "np", ".", "newaxis", ",", "...", "]", "\n", "return", "im", ",", "image_path", "\n", "", "elif", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "label", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "label_path", ")", ")", "\n", "label", "=", "label", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "return", "im", ",", "label", "\n", "", "else", ":", "\n", "# if idx >= self.num_files:", "\n", "#     image_path, label_path = self.coarse_file_list[idx -", "\n", "#                                                    self.num_files]", "\n", "# else:", "\n", "            ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "\n", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "return", "im", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.auto_nue_autolabel.AutoNueAutolabel.__len__": [[182, 184], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total_num_files", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.tusimple.Tusimple.__init__": [[70, 121], ["paddleseg.transforms.transforms.Compose", "mode.lower.lower.lower", "list", "os.path.join", "ValueError", "ValueError", "ValueError", "os.path.join", "open", "os.path.join", "os.path.join", "line.strip().split", "tusimple.Tusimple.file_list.append", "len", "os.path.join", "line.strip", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "transforms", "=", "None", ",", "\n", "dataset_root", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "cut_height", "=", "0", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ",", "to_rgb", "=", "False", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "num_classes", "=", "self", ".", "NUM_CLASSES", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "cut_height", "=", "cut_height", "\n", "self", ".", "test_gt_json", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\n", "'test_set/test_label.json'", ")", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"`mode` should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "self", ".", "dataset_root", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`dataset_root` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\n", "'train_set/train_list.txt'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\n", "'test_set/test_list.txt'", ")", "\n", "", "else", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\n", "'test_set/test_list.txt'", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "len", "(", "items", ")", "!=", "2", ":", "\n", "                    ", "if", "mode", "==", "'train'", "or", "mode", "==", "'val'", ":", "\n", "                        ", "raise", "Exception", "(", "\n", "\"File list format incorrect! It should be\"", "\n", "\" image_name label_name\\\\n\"", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "items", "[", "0", "]", ")", "\n", "label_path", "=", "None", "\n", "", "else", ":", "\n", "                    ", "image_path", "=", "self", ".", "dataset_root", "+", "items", "[", "0", "]", "\n", "label_path", "=", "self", ".", "dataset_root", "+", "items", "[", "1", "]", "\n", "", "self", ".", "file_list", ".", "append", "(", "[", "image_path", ",", "label_path", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.tusimple.Tusimple.__getitem__": [[122, 136], ["tusimple.Tusimple.transforms", "tusimple.Tusimple.transforms", "tusimple.Tusimple.transforms"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms"], ["", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "\n", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "            ", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "im", "=", "im", "[", "np", ".", "newaxis", ",", "...", "]", "\n", "return", "im", ",", "image_path", "\n", "\n", "", "elif", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "return", "im", ",", "label", ",", "image_path", "\n", "", "else", ":", "\n", "            ", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "return", "im", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.tusimple.Tusimple.__len__": [[137, 139], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "file_list", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_panoptic.CityscapesPanoptic.__init__": [[64, 140], ["paddleseg.transforms.Compose", "list", "mode.lower.lower.lower", "os.path.join", "os.path.join", "os.path.join", "json.load", "transforms.PanopticTargetGenerator", "transforms.SemanticTargetGenerator", "transforms.InstanceTargetGenerator", "transforms.RawPanopticTargetGenerator", "ValueError", "ValueError", "ValueError", "open", "img_files.append", "label_files.append", "cityscapes_panoptic.CityscapesPanoptic.ins_list.append", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "zip", "img_file_name.replace", "img_file_name.split"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "transforms", ",", "\n", "dataset_root", ",", "\n", "mode", "=", "'train'", ",", "\n", "ignore_stuff_in_offset", "=", "False", ",", "\n", "small_instance_area", "=", "0", ",", "\n", "small_instance_weight", "=", "1", ",", "\n", "stuff_area", "=", "2048", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "ins_list", "=", "[", "]", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "num_classes", "=", "19", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "thing_list", "=", "[", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", "]", "\n", "self", ".", "label_divisor", "=", "1000", "\n", "self", ".", "stuff_area", "=", "stuff_area", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"mode should be 'train' or 'val' , but got {}.\"", ".", "format", "(", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'leftImg8bit'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'gtFine'", ")", "\n", "if", "self", ".", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "self", ".", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "img_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "", "json_filename", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dataset_root", ",", "'gtFine'", ",", "\n", "'cityscapes_panoptic_{}_trainId.json'", ".", "format", "(", "mode", ")", ")", "\n", "dataset", "=", "json", ".", "load", "(", "open", "(", "json_filename", ")", ")", "\n", "img_files", "=", "[", "]", "\n", "label_files", "=", "[", "]", "\n", "for", "img", "in", "dataset", "[", "'images'", "]", ":", "\n", "            ", "img_file_name", "=", "img", "[", "'file_name'", "]", "\n", "img_files", ".", "append", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'leftImg8bit'", ",", "mode", ",", "\n", "img_file_name", ".", "split", "(", "'_'", ")", "[", "0", "]", ",", "\n", "img_file_name", ".", "replace", "(", "'_gtFine'", ",", "''", ")", ")", ")", "\n", "", "for", "ann", "in", "dataset", "[", "'annotations'", "]", ":", "\n", "            ", "ann_file_name", "=", "ann", "[", "'file_name'", "]", "\n", "label_files", ".", "append", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'gtFine'", ",", "\n", "'cityscapes_panoptic_{}_trainId'", ".", "format", "(", "\n", "mode", ")", ",", "ann_file_name", ")", ")", "\n", "self", ".", "ins_list", ".", "append", "(", "ann", "[", "'segments_info'", "]", ")", "\n", "\n", "", "self", ".", "file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "\n", "self", ".", "target_transform", "=", "PanopticTargetGenerator", "(", "\n", "self", ".", "ignore_index", ",", "\n", "self", ".", "rgb2id", ",", "\n", "self", ".", "thing_list", ",", "\n", "sigma", "=", "8", ",", "\n", "ignore_stuff_in_offset", "=", "ignore_stuff_in_offset", ",", "\n", "small_instance_area", "=", "small_instance_area", ",", "\n", "small_instance_weight", "=", "small_instance_weight", ")", "\n", "\n", "self", ".", "raw_semantic_generator", "=", "SemanticTargetGenerator", "(", "\n", "ignore_index", "=", "self", ".", "ignore_index", ",", "rgb2id", "=", "self", ".", "rgb2id", ")", "\n", "self", ".", "raw_instance_generator", "=", "InstanceTargetGenerator", "(", "self", ".", "rgb2id", ")", "\n", "self", ".", "raw_panoptic_generator", "=", "RawPanopticTargetGenerator", "(", "\n", "ignore_index", "=", "self", ".", "ignore_index", ",", "\n", "rgb2id", "=", "self", ".", "rgb2id", ",", "\n", "label_divisor", "=", "self", ".", "label_divisor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_panoptic.CityscapesPanoptic.rgb2id": [[141, 158], ["int", "isinstance", "len", "color.astype.astype.astype"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "rgb2id", "(", "color", ")", ":", "\n", "        ", "\"\"\"Converts the color to panoptic label.\n        Color is created by `color = [segmentId % 256, segmentId // 256, segmentId // 256 // 256]`.\n\n        Args:\n            color: Ndarray or a tuple, color encoded image.\n\n        Returns:\n            Panoptic label.\n        \"\"\"", "\n", "if", "isinstance", "(", "color", ",", "np", ".", "ndarray", ")", "and", "len", "(", "color", ".", "shape", ")", "==", "3", ":", "\n", "            ", "if", "color", ".", "dtype", "==", "np", ".", "uint8", ":", "\n", "                ", "color", "=", "color", ".", "astype", "(", "np", ".", "int32", ")", "\n", "", "return", "color", "[", ":", ",", ":", ",", "0", "]", "+", "256", "*", "color", "[", ":", ",", ":", ",", "\n", "1", "]", "+", "256", "*", "256", "*", "color", "[", ":", ",", ":", ",", "2", "]", "\n", "", "return", "int", "(", "color", "[", "0", "]", "+", "256", "*", "color", "[", "1", "]", "+", "256", "*", "256", "*", "color", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_panoptic.CityscapesPanoptic.__getitem__": [[159, 195], ["cityscapes_panoptic.CityscapesPanoptic.transforms", "cityscapes_panoptic.CityscapesPanoptic.target_transform", "cityscapes_panoptic.CityscapesPanoptic.keys", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.asarray", "PIL.open", "cityscapes_panoptic.CityscapesPanoptic.raw_semantic_generator", "cityscapes_panoptic.CityscapesPanoptic.raw_instance_generator", "cityscapes_panoptic.CityscapesPanoptic.raw_panoptic_generator", "numpy.array", "numpy.array", "numpy.array", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "dataset_dict", "=", "{", "}", "\n", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "label_dict", "=", "self", ".", "target_transform", "(", "label", ",", "self", ".", "ins_list", "[", "idx", "]", ")", "\n", "for", "key", "in", "label_dict", ".", "keys", "(", ")", ":", "\n", "            ", "dataset_dict", "[", "key", "]", "=", "label_dict", "[", "key", "]", "\n", "", "dataset_dict", "[", "'image'", "]", "=", "im", "\n", "if", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "raw_label", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "label_path", ")", ")", "\n", "dataset_dict", "[", "'raw_semantic_label'", "]", "=", "self", ".", "raw_semantic_generator", "(", "\n", "raw_label", ",", "self", ".", "ins_list", "[", "idx", "]", ")", "[", "'semantic'", "]", "\n", "dataset_dict", "[", "'raw_instance_label'", "]", "=", "self", ".", "raw_instance_generator", "(", "\n", "raw_label", ")", "[", "'instance'", "]", "\n", "dataset_dict", "[", "'raw_panoptic_label'", "]", "=", "self", ".", "raw_panoptic_generator", "(", "\n", "raw_label", ",", "self", ".", "ins_list", "[", "idx", "]", ")", "[", "'panoptic'", "]", "\n", "\n", "", "image", "=", "np", ".", "array", "(", "dataset_dict", "[", "'image'", "]", ")", "\n", "semantic", "=", "np", ".", "array", "(", "dataset_dict", "[", "'semantic'", "]", ")", "\n", "semantic_weights", "=", "np", ".", "array", "(", "dataset_dict", "[", "'semantic_weights'", "]", ")", "\n", "center", "=", "np", ".", "array", "(", "dataset_dict", "[", "'center'", "]", ")", "\n", "center_weights", "=", "np", ".", "array", "(", "dataset_dict", "[", "'center_weights'", "]", ")", "\n", "offset", "=", "np", ".", "array", "(", "dataset_dict", "[", "'offset'", "]", ")", "\n", "offset_weights", "=", "np", ".", "array", "(", "dataset_dict", "[", "'offset_weights'", "]", ")", "\n", "foreground", "=", "np", ".", "array", "(", "dataset_dict", "[", "'foreground'", "]", ")", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "return", "image", ",", "semantic", ",", "semantic_weights", ",", "center", ",", "center_weights", ",", "offset", ",", "offset_weights", ",", "foreground", "\n", "", "elif", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "raw_semantic_label", "=", "np", ".", "array", "(", "dataset_dict", "[", "'raw_semantic_label'", "]", ")", "\n", "raw_instance_label", "=", "np", ".", "array", "(", "dataset_dict", "[", "'raw_instance_label'", "]", ")", "\n", "raw_panoptic_label", "=", "np", ".", "array", "(", "dataset_dict", "[", "'raw_panoptic_label'", "]", ")", "\n", "return", "image", ",", "raw_semantic_label", ",", "raw_instance_label", ",", "raw_panoptic_label", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'{} is not surpported, please set it one of (\"train\", \"val\")'", ".", "\n", "format", "(", "self", ".", "mode", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_panoptic.CityscapesPanoptic.__len__": [[196, 198], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "file_list", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.__init__": [[75, 165], ["paddleseg.transforms.Compose", "list", "mode.lower.lower.lower", "os.path.join", "os.path.join", "sorted", "sorted", "len", "ValueError", "ValueError", "ValueError", "glob.glob", "glob.glob", "os.path.join", "os.path.join", "sorted", "sorted", "random.shuffle", "int", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "zip", "sorted", "sorted", "cityscapes_autolabeling.CityscapesAutolabeling.file_list.extend", "len", "ValueError", "glob.glob", "glob.glob", "len", "len", "ValueError", "glob.glob", "glob.glob", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "zip", "os.path.join", "os.path.join", "zip", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle"], ["def", "__init__", "(", "self", ",", "\n", "transforms", ",", "\n", "dataset_root", ",", "\n", "mode", "=", "'train'", ",", "\n", "coarse_multiple", "=", "1", ",", "\n", "add_val", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "num_classes", "=", "19", "\n", "self", ".", "ignore_index", "=", "255", "\n", "self", ".", "coarse_multiple", "=", "coarse_multiple", "\n", "\n", "if", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"mode should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'leftImg8bit'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'gtFine'", ")", "\n", "if", "self", ".", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "self", ".", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "img_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "label_dir", ",", "mode", ",", "'*'", ",", "\n", "'*_gtFine_labelTrainIds.png'", ")", ")", ")", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "mode", ",", "'*'", ",", "'*_leftImg8bit.png'", ")", ")", ")", "\n", "\n", "self", ".", "file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "self", ".", "num_files", "=", "len", "(", "self", ".", "file_list", ")", "\n", "self", ".", "total_num_files", "=", "self", ".", "num_files", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "# whether to add val set in training", "\n", "            ", "if", "add_val", ":", "\n", "                ", "label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "label_dir", ",", "'val'", ",", "'*'", ",", "\n", "'*_gtFine_labelTrainIds.png'", ")", ")", ")", "\n", "img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "img_dir", ",", "'val'", ",", "'*'", ",", "'*_leftImg8bit.png'", ")", ")", ")", "\n", "val_file_list", "=", "[", "\n", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "img_files", ",", "label_files", ")", "\n", "]", "\n", "self", ".", "file_list", ".", "extend", "(", "val_file_list", ")", "\n", "self", ".", "num_files", "=", "len", "(", "self", ".", "file_list", ")", "\n", "\n", "# use coarse dataset only in training", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'leftImg8bit_trainextra'", ",", "\n", "'leftImg8bit'", ",", "'train_extra'", ")", "\n", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'convert_autolabelled'", ")", "\n", "\n", "if", "self", ".", "dataset_root", "is", "None", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "self", ".", "dataset_root", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "\n", "img_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "label_dir", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"The coarse dataset is not Found or the folder structure is nonconfoumance.\"", "\n", ")", "\n", "\n", "", "coarse_label_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "label_dir", ",", "'*'", ",", "'*_leftImg8bit.png'", ")", ")", ")", "\n", "coarse_img_files", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "'*'", ",", "'*_leftImg8bit.png'", ")", ")", ")", "\n", "if", "len", "(", "coarse_img_files", ")", "!=", "len", "(", "coarse_label_files", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"The number of images = {} is not equal to the number of labels = {} in Cityscapes Autolabeling dataset.\"", "\n", ".", "format", "(", "len", "(", "coarse_img_files", ")", ",", "len", "(", "coarse_label_files", ")", ")", ")", "\n", "\n", "", "self", ".", "coarse_file_list", "=", "[", "[", "img_path", ",", "label_path", "]", "\n", "for", "img_path", ",", "label_path", "in", "zip", "(", "\n", "coarse_img_files", ",", "coarse_label_files", ")", "]", "\n", "random", ".", "shuffle", "(", "self", ".", "coarse_file_list", ")", "\n", "\n", "self", ".", "total_num_files", "=", "int", "(", "self", ".", "num_files", "*", "(", "1", "+", "coarse_multiple", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.__getitem__": [[166, 187], ["cityscapes_autolabeling.CityscapesAutolabeling.transforms", "cityscapes_autolabeling.CityscapesAutolabeling.transforms", "numpy.asarray", "cityscapes_autolabeling.CityscapesAutolabeling.transforms", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "            ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "im", "=", "im", "[", "np", ".", "newaxis", ",", "...", "]", "\n", "return", "im", ",", "image_path", "\n", "", "elif", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "im", ",", "_", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ")", "\n", "label", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "label_path", ")", ")", "\n", "label", "=", "label", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "return", "im", ",", "label", "\n", "", "else", ":", "\n", "            ", "if", "idx", ">=", "self", ".", "num_files", ":", "\n", "                ", "image_path", ",", "label_path", "=", "self", ".", "coarse_file_list", "[", "idx", "-", "\n", "self", ".", "num_files", "]", "\n", "", "else", ":", "\n", "                ", "image_path", ",", "label_path", "=", "self", ".", "file_list", "[", "idx", "]", "\n", "\n", "", "im", ",", "label", "=", "self", ".", "transforms", "(", "im", "=", "image_path", ",", "label", "=", "label_path", ")", "\n", "return", "im", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle": [[188, 190], ["random.shuffle"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle"], ["", "", "def", "shuffle", "(", "self", ")", ":", "\n", "        ", "random", ".", "shuffle", "(", "self", ".", "coarse_file_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.__len__": [[191, 193], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total_num_files", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.lung_coronavirus.LungCoronavirus.__init__": [[53, 70], ["medicalseg.datasets.MedicalDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "result_dir", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "num_classes", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "ignore_index", "=", "255", ",", "\n", "dataset_json_path", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", "LungCoronavirus", ",", "self", ")", ".", "__init__", "(", "\n", "dataset_root", ",", "\n", "result_dir", ",", "\n", "transforms", ",", "\n", "num_classes", ",", "\n", "mode", ",", "\n", "ignore_index", ",", "\n", "data_URL", "=", "URL", ",", "\n", "dataset_json_path", "=", "dataset_json_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.dataset.MedicalDataset.__init__": [[60, 112], ["medicalseg.transforms.Compose", "list", "mode.lower", "medicalseg.utils.download.download_file_and_uncompress", "os.path.join", "open", "os.path.exists", "ValueError", "os.path.join", "line.strip().split", "dataset.MedicalDataset.file_list.append", "os.path.join", "ValueError", "len", "Exception", "os.path.join", "os.path.join", "line.strip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["\n", "\n", "def", "__init__", "(", "self", ",", "\n", "transforms", ",", "\n", "dataset_root", ",", "\n", "num_classes", ",", "\n", "mode", "=", "'train'", ",", "\n", "train_path", "=", "None", ",", "\n", "val_path", "=", "None", ",", "\n", "test_path", "=", "None", ",", "\n", "separator", "=", "' '", ",", "\n", "ignore_index", "=", "255", ",", "\n", "edge", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "self", ".", "file_list", "=", "list", "(", ")", "\n", "self", ".", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "if", "self", ".", "mode", "not", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"mode should be 'train', 'val' or 'test', but got {}.\"", ".", "format", "(", "\n", "self", ".", "mode", ")", ")", "\n", "\n", "", "if", "self", ".", "transforms", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"`transforms` is necessary, but it is None.\"", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dataset_root", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "'there is not `dataset_root`: {}.'", ".", "format", "(", "\n", "self", ".", "dataset_root", ")", ")", "\n", "\n", "", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "if", "train_path", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'When `mode` is \"train\", `train_path` is necessary, but it is None.'", "\n", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "train_path", ")", ":", "\n", "                ", "raise", "FileNotFoundError", "(", "'`train_path` is not found: {}'", ".", "format", "(", "\n", "train_path", ")", ")", "\n", "", "else", ":", "\n", "                ", "file_path", "=", "train_path", "\n", "", "", "elif", "self", ".", "mode", "==", "'val'", ":", "\n", "            ", "if", "val_path", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'When `mode` is \"val\", `val_path` is necessary, but it is None.'", "\n", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "val_path", ")", ":", "\n", "                ", "raise", "FileNotFoundError", "(", "'`val_path` is not found: {}'", ".", "format", "(", "\n", "val_path", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.dataset.MedicalDataset.__getitem__": [[113, 119], ["dataset.MedicalDataset.transforms"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms"], ["", "else", ":", "\n", "                ", "file_path", "=", "val_path", "\n", "", "", "else", ":", "\n", "            ", "if", "test_path", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'When `mode` is \"test\", `test_path` is necessary, but it is None.'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.dataset.MedicalDataset.save_transformed": [[120, 123], ["None"], "methods", ["None"], ["", "elif", "not", "os", ".", "path", ".", "exists", "(", "test_path", ")", ":", "\n", "                ", "raise", "FileNotFoundError", "(", "'`test_path` is not found: {}'", ".", "format", "(", "\n", "test_path", ")", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.dataset.MedicalDataset.__len__": [[124, 126], ["len"], "methods", ["None"], ["                ", "file_path", "=", "test_path", "\n", "\n", "", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "f", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.mri_spine_seg.MRISpineSeg.__init__": [[53, 70], ["medicalseg.datasets.MedicalDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "dataset_root", "=", "None", ",", "\n", "result_dir", "=", "None", ",", "\n", "transforms", "=", "None", ",", "\n", "num_classes", "=", "None", ",", "\n", "mode", "=", "'train'", ",", "\n", "ignore_index", "=", "255", ",", "\n", "dataset_json_path", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", "MRISpineSeg", ",", "self", ")", ".", "__init__", "(", "\n", "dataset_root", ",", "\n", "result_dir", ",", "\n", "transforms", ",", "\n", "num_classes", ",", "\n", "mode", ",", "\n", "ignore_index", ",", "\n", "data_URL", "=", "URL", ",", "\n", "dataset_json_path", "=", "dataset_json_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.synthia.SYNTHIADataset.__init__": [[31, 97], ["datasets.cityscapes_noconfig.to_tuple", "datasets.cityscapes_noconfig.to_tuple", "os.path.join", "os.path.join", "os.path.join", "print", "os.path.exists", "Warning", "id.strip", "open", "enumerate", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.to_tuple", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.to_tuple"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "root", "=", "'./datasets/SYNTHIA'", ",", "\n", "list_path", "=", "'./datasets/SYNTHIA/list'", ",", "\n", "split", "=", "'train'", ",", "\n", "base_size", "=", "769", ",", "\n", "crop_size", "=", "769", ",", "\n", "training", "=", "True", ",", "\n", "class_16", "=", "False", ",", "\n", "random_mirror", "=", "False", ",", "\n", "random_crop", "=", "False", ",", "\n", "resize", "=", "False", ",", "\n", "gaussian_blur", "=", "False", ",", ")", ":", "\n", "\n", "# Args", "\n", "        ", "self", ".", "data_path", "=", "root", "\n", "self", ".", "list_path", "=", "list_path", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "base_size", "=", "to_tuple", "(", "base_size", ")", "\n", "self", ".", "crop_size", "=", "to_tuple", "(", "crop_size", ")", "\n", "self", ".", "training", "=", "training", "\n", "\n", "# Augmentations", "\n", "self", ".", "random_mirror", "=", "random_mirror", "\n", "self", ".", "random_crop", "=", "random_crop", "\n", "self", ".", "resize", "=", "resize", "\n", "self", ".", "gaussian_blur", "=", "gaussian_blur", "\n", "\n", "# Files", "\n", "item_list_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "list_path", ",", "self", ".", "split", "+", "\".txt\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "item_list_filepath", ")", ":", "\n", "            ", "raise", "Warning", "(", "\"split must be train/val/trainavl/test\"", ")", "\n", "", "self", ".", "image_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "\"RGB\"", ")", "\n", "self", ".", "gt_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "\"GT/LABELS\"", ")", "\n", "self", ".", "items", "=", "[", "id", ".", "strip", "(", ")", "for", "id", "in", "open", "(", "item_list_filepath", ")", "]", "\n", "\n", "# Label map", "\n", "self", ".", "id_to_trainid", "=", "{", "\n", "1", ":", "10", ",", "\n", "2", ":", "2", ",", "\n", "3", ":", "0", ",", "\n", "4", ":", "1", ",", "\n", "5", ":", "4", ",", "\n", "6", ":", "8", ",", "\n", "7", ":", "5", ",", "\n", "8", ":", "13", ",", "\n", "9", ":", "7", ",", "\n", "10", ":", "11", ",", "\n", "11", ":", "18", ",", "\n", "12", ":", "17", ",", "\n", "15", ":", "6", ",", "\n", "16", ":", "9", ",", "\n", "17", ":", "12", ",", "\n", "18", ":", "14", ",", "\n", "19", ":", "15", ",", "\n", "20", ":", "16", ",", "\n", "21", ":", "3", "\n", "}", "\n", "\n", "# Only consider 16 shared classes", "\n", "self", ".", "class_16", "=", "class_16", "\n", "self", ".", "trainid_to_16id", "=", "{", "id", ":", "i", "for", "i", ",", "id", "in", "enumerate", "(", "synthia_set_16", ")", "}", "\n", "self", ".", "class_13", "=", "False", "\n", "\n", "print", "(", "\"{} num images in SYNTHIA {} set have been loaded.\"", ".", "format", "(", "\n", "len", "(", "self", ".", "items", ")", ",", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.synthia.SYNTHIADataset.__getitem__": [[98, 116], ["int", "os.path.join", "os.path.join", "PIL.Image.open().convert", "PIL.Image.fromarray", "imageio.imread", "numpy.uint8", "synthia.SYNTHIADataset._train_sync_transform", "synthia.SYNTHIADataset._val_sync_transform", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._train_sync_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._val_sync_transform"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "id", "=", "int", "(", "self", ".", "items", "[", "item", "]", ")", "\n", "name", "=", "f\"{id:0>7d}.png\"", "\n", "\n", "# Open image and label", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_filepath", ",", "name", ")", "\n", "gt_image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "gt_filepath", ",", "name", ")", "\n", "image", "=", "Image", ".", "open", "(", "image_path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "gt_image", "=", "imageio", ".", "imread", "(", "gt_image_path", ",", "format", "=", "'PNG-FI'", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "gt_image", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "gt_image", ")", ")", "\n", "\n", "# Augmentations", "\n", "if", "(", "self", ".", "split", "==", "\"train\"", "or", "self", ".", "split", "==", "\"trainval\"", "or", "\n", "self", ".", "split", "==", "\"all\"", ")", "and", "self", ".", "training", ":", "\n", "            ", "image", ",", "gt_image", "=", "self", ".", "_train_sync_transform", "(", "image", ",", "gt_image", ")", "\n", "", "else", ":", "\n", "            ", "image", ",", "gt_image", "=", "self", ".", "_val_sync_transform", "(", "image", ",", "gt_image", ")", "\n", "", "return", "image", ",", "gt_image", ",", "item", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset.__init__": [[107, 160], ["cityscapes_noconfig.to_tuple", "cityscapes_noconfig.to_tuple", "os.path.join", "os.path.join", "os.path.join", "print", "os.path.exists", "Warning", "id.strip", "open", "enumerate", "enumerate", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.to_tuple", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.to_tuple"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "list_path", ",", "\n", "split", "=", "'train'", ",", "\n", "base_size", "=", "769", ",", "\n", "crop_size", "=", "769", ",", "\n", "training", "=", "True", ",", "\n", "random_mirror", "=", "False", ",", "\n", "random_crop", "=", "False", ",", "\n", "resize", "=", "False", ",", "\n", "gaussian_blur", "=", "False", ",", "\n", "class_16", "=", "False", ",", "\n", "class_13", "=", "False", ",", "\n", "edge", "=", "True", ",", "\n", "logger", "=", "None", ")", ":", "\n", "        ", "self", ".", "data_path", "=", "root", "\n", "self", ".", "list_path", "=", "list_path", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "base_size", "=", "to_tuple", "(", "base_size", ")", "\n", "self", ".", "crop_size", "=", "to_tuple", "(", "crop_size", ")", "\n", "self", ".", "training", "=", "training", "\n", "self", ".", "logger", "=", "logger", "\n", "\n", "# Augmentations", "\n", "self", ".", "random_mirror", "=", "random_mirror", "\n", "self", ".", "random_crop", "=", "random_crop", "\n", "self", ".", "resize", "=", "resize", "\n", "self", ".", "gaussian_blur", "=", "gaussian_blur", "\n", "self", ".", "NUM_CLASSES", "=", "19", "\n", "self", ".", "ignore_label", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "# Files", "\n", "item_list_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "list_path", ",", "self", ".", "split", "+", "\".txt\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "item_list_filepath", ")", ":", "\n", "            ", "raise", "Warning", "(", "\"split must be train/val/trainval\"", ")", "\n", "", "self", ".", "image_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "\"leftImg8bit\"", ")", "\n", "self", ".", "gt_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "\"gtFine\"", ")", "\n", "self", ".", "items", "=", "[", "id", ".", "strip", "(", ")", "for", "id", "in", "open", "(", "item_list_filepath", ")", "]", "\n", "self", ".", "id_to_trainid", "=", "cityscapes_id_to_trainid", "\n", "\n", "# In SYNTHIA-to-Cityscapes case, only consider 16 shared classes", "\n", "self", ".", "class_16", "=", "class_16", "\n", "synthia_set_16", "=", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "10", ",", "11", ",", "12", ",", "13", ",", "15", ",", "17", ",", "18", "]", "\n", "self", ".", "trainid_to_16id", "=", "{", "id", ":", "i", "for", "i", ",", "id", "in", "enumerate", "(", "synthia_set_16", ")", "}", "\n", "\n", "# In Cityscapes-to-NTHU case, only consider 13 shared classes", "\n", "self", ".", "class_13", "=", "class_13", "\n", "synthia_set_13", "=", "[", "0", ",", "1", ",", "2", ",", "6", ",", "7", ",", "8", ",", "10", ",", "11", ",", "12", ",", "13", ",", "15", ",", "17", ",", "18", "]", "\n", "self", ".", "trainid_to_13id", "=", "{", "id", ":", "i", "for", "i", ",", "id", "in", "enumerate", "(", "synthia_set_13", ")", "}", "\n", "\n", "print", "(", "\"{} num images in Cityscapes {} set have been loaded.\"", ".", "format", "(", "\n", "len", "(", "self", ".", "items", ")", ",", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset.id2trainId": [[161, 178], ["cityscapes_noconfig.CityDataset.id_to_trainid.items", "numpy.ones", "cityscapes_noconfig.CityDataset.trainid_to_16id.items", "cityscapes_noconfig.CityDataset.trainid_to_13id.items", "numpy.ones", "numpy.ones"], "methods", ["None"], ["", "def", "id2trainId", "(", "self", ",", "label", ",", "reverse", "=", "False", ",", "ignore_label", "=", "255", ")", ":", "\n", "        ", "label_copy", "=", "ignore_label", "*", "np", ".", "ones", "(", "label", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "k", ",", "v", "in", "self", ".", "id_to_trainid", ".", "items", "(", ")", ":", "\n", "            ", "label_copy", "[", "label", "==", "k", "]", "=", "v", "\n", "", "if", "self", ".", "class_16", ":", "\n", "            ", "label_copy_16", "=", "ignore_label", "*", "np", ".", "ones", "(", "label", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "k", ",", "v", "in", "self", ".", "trainid_to_16id", ".", "items", "(", ")", ":", "\n", "                ", "label_copy_16", "[", "label_copy", "==", "k", "]", "=", "v", "\n", "", "label_copy", "=", "label_copy_16", "\n", "", "if", "self", ".", "class_13", ":", "\n", "            ", "label_copy_13", "=", "ignore_label", "*", "np", ".", "ones", "(", "label", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "k", ",", "v", "in", "self", ".", "trainid_to_13id", ".", "items", "(", ")", ":", "\n", "                ", "label_copy_13", "[", "label_copy", "==", "k", "]", "=", "v", "\n", "", "label_copy", "=", "label_copy_13", "\n", "", "return", "label_copy", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset.__getitem__": [[179, 203], ["os.path.join", "os.path.join", "PIL.Image.open().convert", "os.path.join", "os.path.join", "PIL.Image.open", "[].split", "cityscapes_noconfig.CityDataset._train_sync_transform", "cityscapes_noconfig.CityDataset._val_sync_transform", "id.split", "id.split", "PIL.Image.open", "id.split", "id.split", "[].split", "id.split"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._train_sync_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._val_sync_transform"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "id", "=", "self", ".", "items", "[", "item", "]", "\n", "filename", "=", "id", ".", "split", "(", "\"train_\"", ")", "[", "-", "1", "]", ".", "split", "(", "\"val_\"", ")", "[", "-", "1", "]", ".", "split", "(", "\"test_\"", ")", "[", "-", "1", "]", "\n", "image_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_filepath", ",", "\n", "id", ".", "split", "(", "\"_\"", ")", "[", "0", "]", ",", "id", ".", "split", "(", "\"_\"", ")", "[", "1", "]", ")", "\n", "image_filename", "=", "filename", "+", "\"_leftImg8bit.png\"", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "image_filepath", ",", "image_filename", ")", "\n", "image", "=", "Image", ".", "open", "(", "image_path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "gt_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "gt_filepath", ",", "\n", "id", ".", "split", "(", "\"_\"", ")", "[", "0", "]", ",", "id", ".", "split", "(", "\"_\"", ")", "[", "1", "]", ")", "\n", "gt_filename", "=", "filename", "+", "\"_gtFine_labelIds.png\"", "\n", "gt_image_path", "=", "os", ".", "path", ".", "join", "(", "gt_filepath", ",", "gt_filename", ")", "\n", "gt_image", "=", "Image", ".", "open", "(", "gt_image_path", ")", "\n", "\n", "if", "(", "self", ".", "split", "==", "\"train\"", "or", "\n", "self", ".", "split", "==", "\"trainval\"", ")", "and", "self", ".", "training", ":", "\n", "            ", "image", ",", "gt_image", ",", "edge_mask", "=", "self", ".", "_train_sync_transform", "(", "image", ",", "\n", "gt_image", ")", "\n", "return", "image", ",", "gt_image", ",", "edge_mask", "\n", "", "else", ":", "\n", "            ", "image", ",", "gt_image", ",", "edge_mask", "=", "self", ".", "_val_sync_transform", "(", "image", ",", "\n", "gt_image", ")", "\n", "return", "image", ",", "gt_image", ",", "edge_mask", ",", "id", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._train_sync_transform": [[204, 275], ["random.random", "img.filter.filter.resize", "random.randint", "random.randint", "img.filter.filter.crop", "random.random", "random.random", "cityscapes_noconfig.CityDataset._img_transform", "cityscapes_noconfig.CityDataset._mask_transform", "cityscapes_noconfig.CityDataset._img_transform", "img.filter.filter.transpose", "random.randint", "int", "random.randint", "int", "mask.resize.resize.resize", "PIL.ImageOps.expand", "mask.resize.resize.crop", "img.filter.filter.resize", "img.filter.filter.filter", "mask.resize.resize.transpose", "int", "int", "int", "int", "PIL.ImageOps.expand", "mask.resize.resize.resize", "PIL.ImageFilter.GaussianBlur"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._img_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._mask_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._img_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "", "def", "_train_sync_transform", "(", "self", ",", "img", ",", "mask", ")", ":", "\n", "        ", "'''\n        :param image:  PIL input image\n        :param gt_image: PIL input gt_image\n        :return:\n        '''", "\n", "if", "self", ".", "random_mirror", ":", "\n", "# random mirror", "\n", "            ", "a", "=", "random", ".", "random", "(", ")", "\n", "if", "a", "<", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "if", "mask", ":", "\n", "                    ", "mask", "=", "mask", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "", "crop_w", ",", "crop_h", "=", "self", ".", "crop_size", "\n", "\n", "", "if", "self", ".", "random_crop", ":", "\n", "# random scale", "\n", "            ", "base_w", ",", "base_h", "=", "self", ".", "base_size", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "assert", "w", ">=", "h", "\n", "if", "(", "base_w", "/", "w", ")", ">", "(", "base_h", "/", "h", ")", ":", "\n", "                ", "base_size", "=", "base_w", "\n", "short_size", "=", "random", ".", "randint", "(", "\n", "int", "(", "base_size", "*", "0.5", ")", ",", "int", "(", "base_size", "*", "2.0", ")", ")", "\n", "ow", "=", "short_size", "\n", "oh", "=", "int", "(", "1.0", "*", "h", "*", "ow", "/", "w", ")", "\n", "", "else", ":", "\n", "                ", "base_size", "=", "base_h", "\n", "short_size", "=", "random", ".", "randint", "(", "\n", "int", "(", "base_size", "*", "0.5", ")", ",", "int", "(", "base_size", "*", "2.0", ")", ")", "\n", "oh", "=", "short_size", "\n", "ow", "=", "int", "(", "1.0", "*", "w", "*", "oh", "/", "h", ")", "\n", "\n", "", "img", "=", "img", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "if", "mask", ":", "\n", "                ", "mask", "=", "mask", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "Image", ".", "NEAREST", ")", "\n", "# pad crop", "\n", "", "if", "ow", "<", "crop_w", "or", "oh", "<", "crop_h", ":", "\n", "                ", "padh", "=", "crop_h", "-", "oh", "if", "oh", "<", "crop_h", "else", "0", "\n", "padw", "=", "crop_w", "-", "ow", "if", "ow", "<", "crop_w", "else", "0", "\n", "img", "=", "ImageOps", ".", "expand", "(", "img", ",", "border", "=", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "fill", "=", "0", ")", "\n", "if", "mask", ":", "\n", "                    ", "mask", "=", "ImageOps", ".", "expand", "(", "\n", "mask", ",", "border", "=", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "fill", "=", "0", ")", "\n", "# random crop crop_size", "\n", "", "", "w", ",", "h", "=", "img", ".", "size", "\n", "x1", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "crop_w", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "crop_h", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "crop_w", ",", "y1", "+", "crop_h", ")", ")", "\n", "if", "mask", ":", "\n", "                ", "mask", "=", "mask", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "crop_w", ",", "y1", "+", "crop_h", ")", ")", "\n", "", "", "elif", "self", ".", "resize", ":", "\n", "            ", "img", "=", "img", ".", "resize", "(", "self", ".", "crop_size", ",", "Image", ".", "BICUBIC", ")", "\n", "if", "mask", ":", "\n", "                ", "mask", "=", "mask", ".", "resize", "(", "self", ".", "crop_size", ",", "Image", ".", "NEAREST", ")", "\n", "\n", "", "", "if", "self", ".", "gaussian_blur", ":", "\n", "# gaussian blur as in PSP", "\n", "            ", "b", "=", "random", ".", "random", "(", ")", "\n", "c", "=", "random", ".", "random", "(", ")", "\n", "# print(a,b,c)", "\n", "if", "b", "<", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "filter", "(", "ImageFilter", ".", "GaussianBlur", "(", "radius", "=", "c", ")", ")", "\n", "# final transform", "\n", "", "", "if", "mask", ":", "\n", "            ", "img", "=", "self", ".", "_img_transform", "(", "img", ")", "\n", "mask", ",", "edge_mask", "=", "self", ".", "_mask_transform", "(", "mask", ")", "\n", "return", "img", ",", "mask", ",", "edge_mask", "\n", "", "else", ":", "\n", "            ", "img", "=", "self", ".", "_img_transform", "(", "img", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._val_sync_transform": [[276, 302], ["cityscapes_noconfig.CityDataset._img_transform", "cityscapes_noconfig.CityDataset._mask_transform", "img.resize.resize.resize", "mask.resize.resize.resize", "int", "int", "img.resize.resize.crop", "mask.resize.resize.crop", "int", "int", "round", "round", "img.resize.resize.resize", "mask.resize.resize.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._img_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._mask_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "", "def", "_val_sync_transform", "(", "self", ",", "img", ",", "mask", ")", ":", "\n", "        ", "if", "self", ".", "random_crop", ":", "\n", "            ", "crop_w", ",", "crop_h", "=", "self", ".", "crop_size", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "crop_w", "/", "w", "<", "crop_h", "/", "h", ":", "\n", "                ", "oh", "=", "crop_h", "\n", "ow", "=", "int", "(", "1.0", "*", "w", "*", "oh", "/", "h", ")", "\n", "", "else", ":", "\n", "                ", "ow", "=", "crop_w", "\n", "oh", "=", "int", "(", "1.0", "*", "h", "*", "ow", "/", "w", ")", "\n", "", "img", "=", "img", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "mask", "=", "mask", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "Image", ".", "NEAREST", ")", "\n", "# center crop", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "x1", "=", "int", "(", "round", "(", "(", "w", "-", "crop_w", ")", "/", "2.", ")", ")", "\n", "y1", "=", "int", "(", "round", "(", "(", "h", "-", "crop_h", ")", "/", "2.", ")", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "crop_w", ",", "y1", "+", "crop_h", ")", ")", "\n", "mask", "=", "mask", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "crop_w", ",", "y1", "+", "crop_h", ")", ")", "\n", "", "elif", "self", ".", "resize", ":", "\n", "            ", "img", "=", "img", ".", "resize", "(", "self", ".", "crop_size", ",", "Image", ".", "BICUBIC", ")", "\n", "mask", "=", "mask", ".", "resize", "(", "self", ".", "crop_size", ",", "Image", ".", "NEAREST", ")", "\n", "\n", "# final transform", "\n", "", "img", "=", "self", ".", "_img_transform", "(", "img", ")", "\n", "mask", ",", "edge_mask", "=", "self", ".", "_mask_transform", "(", "mask", ")", "\n", "return", "img", ",", "mask", ",", "edge_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._img_transform": [[303, 312], ["numpy.asarray", "image.transpose().copy.transpose().copy.transpose().copy", "paddle.to_tensor", "image.transpose().copy.transpose().copy.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "def", "_img_transform", "(", "self", ",", "image", ")", ":", "\n", "        ", "image", "=", "np", ".", "asarray", "(", "image", ",", "np", ".", "float32", ")", "\n", "image", "=", "image", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# change to BGR", "\n", "image", "-=", "IMG_MEAN", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ".", "copy", "(", ")", "# (C x H x W)", "\n", "\n", "new_image", "=", "paddle", ".", "to_tensor", "(", "image", ")", "\n", "\n", "return", "new_image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._mask_transform": [[313, 324], ["numpy.asarray", "cityscapes_noconfig.CityDataset.id2trainId().copy", "paddle.to_tensor", "paddleseg.mask_to_binary_edge", "cityscapes_noconfig.CityDataset.id2trainId"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.mask_to_binary_edge", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset.id2trainId"], ["", "def", "_mask_transform", "(", "self", ",", "gt_image", ")", ":", "\n", "        ", "target", "=", "np", ".", "asarray", "(", "gt_image", ",", "np", ".", "float32", ")", "\n", "target", "=", "self", ".", "id2trainId", "(", "target", ")", ".", "copy", "(", ")", "\n", "edge_mask", "=", "None", "\n", "if", "self", ".", "edge", ":", "\n", "            ", "edge_mask", "=", "F", ".", "mask_to_binary_edge", "(", "\n", "target", ",", "radius", "=", "1", ",", "num_classes", "=", "self", ".", "NUM_CLASSES", ")", "\n", "\n", "", "target", "=", "paddle", ".", "to_tensor", "(", "target", ")", "\n", "\n", "return", "target", ",", "edge_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset.__len__": [[325, 327], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "items", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.to_tuple": [[102, 104], ["isinstance"], "function", ["None"], ["def", "to_tuple", "(", "x", ")", ":", "\n", "    ", "return", "x", "if", "isinstance", "(", "x", ",", "abc", ".", "Iterable", ")", "else", "(", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.gta5_noconfig.GTA5Dataset.__init__": [[29, 98], ["datasets.cityscapes_noconfig.to_tuple", "datasets.cityscapes_noconfig.to_tuple", "os.path.join", "os.path.join", "os.path.join", "print", "os.path.exists", "print", "Warning", "id.strip", "open", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.to_tuple", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.to_tuple"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", "=", "'./datasets/GTA5'", ",", "\n", "list_path", "=", "'./datasets/GTA5/list'", ",", "\n", "split", "=", "'train'", ",", "\n", "base_size", "=", "769", ",", "\n", "crop_size", "=", "769", ",", "\n", "training", "=", "True", ",", "\n", "random_mirror", "=", "False", ",", "\n", "random_crop", "=", "False", ",", "\n", "resize", "=", "False", ",", "\n", "gaussian_blur", "=", "False", ",", "\n", "class_16", "=", "False", ",", "\n", "edge", "=", "True", ")", ":", "\n", "\n", "# Args", "\n", "        ", "self", ".", "data_path", "=", "root", "\n", "self", ".", "list_path", "=", "list_path", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "base_size", "=", "to_tuple", "(", "base_size", ")", "\n", "self", ".", "crop_size", "=", "to_tuple", "(", "crop_size", ")", "\n", "self", ".", "training", "=", "training", "\n", "self", ".", "class_16", "=", "False", "\n", "self", ".", "class_13", "=", "False", "\n", "self", ".", "NUM_CLASSES", "=", "19", "\n", "self", ".", "ignore_label", "=", "255", "\n", "self", ".", "edge", "=", "edge", "\n", "\n", "assert", "class_16", "==", "False", "\n", "\n", "# Augmentation", "\n", "self", ".", "random_mirror", "=", "random_mirror", "\n", "self", ".", "random_crop", "=", "random_crop", "\n", "self", ".", "resize", "=", "resize", "\n", "self", ".", "gaussian_blur", "=", "gaussian_blur", "\n", "\n", "# Files", "\n", "item_list_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "list_path", ",", "self", ".", "split", "+", "\".txt\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "item_list_filepath", ")", ":", "\n", "            ", "print", "(", "item_list_filepath", ")", "\n", "raise", "Warning", "(", "\"split must be train/val/trainval/test/all\"", ")", "\n", "", "self", ".", "image_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "\"images\"", ")", "\n", "self", ".", "gt_filepath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "\"labels\"", ")", "\n", "self", ".", "items", "=", "[", "id", ".", "strip", "(", ")", "for", "id", "in", "open", "(", "item_list_filepath", ")", "]", "\n", "\n", "# Label map", "\n", "self", ".", "id_to_trainid", "=", "{", "\n", "7", ":", "0", ",", "\n", "8", ":", "1", ",", "\n", "11", ":", "2", ",", "\n", "12", ":", "3", ",", "\n", "13", ":", "4", ",", "\n", "17", ":", "5", ",", "\n", "19", ":", "6", ",", "\n", "20", ":", "7", ",", "\n", "21", ":", "8", ",", "\n", "22", ":", "9", ",", "\n", "23", ":", "10", ",", "\n", "24", ":", "11", ",", "\n", "25", ":", "12", ",", "\n", "26", ":", "13", ",", "\n", "27", ":", "14", ",", "\n", "28", ":", "15", ",", "\n", "31", ":", "16", ",", "\n", "32", ":", "17", ",", "\n", "33", ":", "18", "\n", "}", "\n", "\n", "print", "(", "\"{} num images in GTA5 {} set have been loaded.\"", ".", "format", "(", "\n", "len", "(", "self", ".", "items", ")", ",", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.gta5_noconfig.GTA5Dataset.__getitem__": [[99, 119], ["int", "os.path.join", "os.path.join", "PIL.Image.open().convert", "PIL.Image.open", "gta5_noconfig.GTA5Dataset._train_sync_transform", "gta5_noconfig.GTA5Dataset._val_sync_transform", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._train_sync_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_noconfig.CityDataset._val_sync_transform"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "idx", "=", "int", "(", "self", ".", "items", "[", "item", "]", ")", "\n", "name", "=", "f\"{idx:0>5d}.png\"", "\n", "\n", "# Open image and label", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_filepath", ",", "name", ")", "\n", "gt_image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "gt_filepath", ",", "name", ")", "\n", "image", "=", "Image", ".", "open", "(", "image_path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "gt_image", "=", "Image", ".", "open", "(", "gt_image_path", ")", "\n", "\n", "# Augmentation", "\n", "if", "(", "self", ".", "split", "==", "\"train\"", "or", "self", ".", "split", "==", "\"trainval\"", "or", "\n", "self", ".", "split", "==", "\"all\"", ")", "and", "self", ".", "training", ":", "\n", "            ", "image", ",", "gt_image", ",", "edge_mask", "=", "self", ".", "_train_sync_transform", "(", "image", ",", "\n", "gt_image", ")", "\n", "", "else", ":", "\n", "            ", "image", ",", "gt_image", ",", "edge_mask", "=", "self", ".", "_val_sync_transform", "(", "image", ",", "\n", "gt_image", ")", "\n", "\n", "", "return", "image", ",", "gt_image", ",", "edge_mask", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.__init__": [[68, 89], ["config.Config.update", "ValueError", "os.path.exists", "FileNotFoundError", "path.endswith", "path.endswith", "config.Config._parse_from_yaml", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._parse_from_yaml"], ["\n", "def", "__init__", "(", "self", ",", "\n", "path", ":", "str", ",", "\n", "learning_rate", ":", "float", "=", "None", ",", "\n", "batch_size", ":", "int", "=", "None", ",", "\n", "iters", ":", "int", "=", "None", ")", ":", "\n", "        ", "if", "not", "path", ":", "\n", "            ", "raise", "ValueError", "(", "'Please specify the configuration file path.'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "'File {} does not exist'", ".", "format", "(", "path", ")", ")", "\n", "\n", "", "self", ".", "_model", "=", "None", "\n", "self", ".", "_losses", "=", "None", "\n", "if", "path", ".", "endswith", "(", "'yml'", ")", "or", "path", ".", "endswith", "(", "'yaml'", ")", ":", "\n", "            ", "self", ".", "dic", "=", "self", ".", "_parse_from_yaml", "(", "path", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Config file should in yaml format!'", ")", "\n", "\n", "", "self", ".", "update", "(", "\n", "learning_rate", "=", "learning_rate", ",", "batch_size", "=", "batch_size", ",", "iters", "=", "iters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._update_dic": [[90, 108], ["base_dic.copy.copy.copy", "dic.copy.copy.copy", "dic.copy.copy.items", "dic.copy.copy.get", "dic.copy.copy.pop", "isinstance", "config.Config._update_dic"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._update_dic"], ["", "def", "_update_dic", "(", "self", ",", "dic", ",", "base_dic", ")", ":", "\n", "        ", "\"\"\"\n        Update config from dic based base_dic\n        \"\"\"", "\n", "base_dic", "=", "base_dic", ".", "copy", "(", ")", "\n", "dic", "=", "dic", ".", "copy", "(", ")", "\n", "\n", "if", "dic", ".", "get", "(", "'_inherited_'", ",", "True", ")", "==", "False", ":", "\n", "            ", "dic", ".", "pop", "(", "'_inherited_'", ")", "\n", "return", "dic", "\n", "\n", "", "for", "key", ",", "val", "in", "dic", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "val", ",", "dict", ")", "and", "key", "in", "base_dic", ":", "\n", "                ", "base_dic", "[", "key", "]", "=", "self", ".", "_update_dic", "(", "val", ",", "base_dic", "[", "key", "]", ")", "\n", "", "else", ":", "\n", "                ", "base_dic", "[", "key", "]", "=", "val", "\n", "", "", "dic", "=", "base_dic", "\n", "return", "dic", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._parse_from_yaml": [[109, 121], ["codecs.open", "yaml.load", "os.path.dirname", "config.Config.pop", "os.path.join", "config.Config._parse_from_yaml", "config.Config._update_dic"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._parse_from_yaml", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._update_dic"], ["", "def", "_parse_from_yaml", "(", "self", ",", "path", ":", "str", ")", ":", "\n", "        ", "'''Parse a yaml file and build config'''", "\n", "with", "codecs", ".", "open", "(", "path", ",", "'r'", ",", "'utf-8'", ")", "as", "file", ":", "\n", "            ", "dic", "=", "yaml", ".", "load", "(", "file", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "\n", "", "if", "'_base_'", "in", "dic", ":", "\n", "            ", "cfg_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "base_path", "=", "dic", ".", "pop", "(", "'_base_'", ")", "\n", "base_path", "=", "os", ".", "path", ".", "join", "(", "cfg_dir", ",", "base_path", ")", "\n", "base_dic", "=", "self", ".", "_parse_from_yaml", "(", "base_path", ")", "\n", "dic", "=", "self", ".", "_update_dic", "(", "dic", ",", "base_dic", ")", "\n", "", "return", "dic", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.update": [[122, 138], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "\n", "learning_rate", ":", "float", "=", "None", ",", "\n", "batch_size", ":", "int", "=", "None", ",", "\n", "iters", ":", "int", "=", "None", ")", ":", "\n", "        ", "'''Update config'''", "\n", "if", "learning_rate", ":", "\n", "            ", "if", "'lr_scheduler'", "in", "self", ".", "dic", ":", "\n", "                ", "self", ".", "dic", "[", "'lr_scheduler'", "]", "[", "'learning_rate'", "]", "=", "learning_rate", "\n", "", "else", ":", "\n", "                ", "self", ".", "dic", "[", "'learning_rate'", "]", "[", "'value'", "]", "=", "learning_rate", "\n", "\n", "", "", "if", "batch_size", ":", "\n", "            ", "self", ".", "dic", "[", "'batch_size'", "]", "=", "batch_size", "\n", "\n", "", "if", "iters", ":", "\n", "            ", "self", ".", "dic", "[", "'iters'", "]", "=", "iters", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.batch_size": [[139, 142], ["config.Config.dic.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "@", "property", "\n", "def", "batch_size", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "self", ".", "dic", ".", "get", "(", "'batch_size'", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.iters": [[143, 149], ["config.Config.dic.get", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "@", "property", "\n", "def", "iters", "(", "self", ")", "->", "int", ":", "\n", "        ", "iters", "=", "self", ".", "dic", ".", "get", "(", "'iters'", ")", "\n", "if", "not", "iters", ":", "\n", "            ", "raise", "RuntimeError", "(", "'No iters specified in the configuration file.'", ")", "\n", "", "return", "iters", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.lr_scheduler": [[150, 165], ["config.Config.dic.get", "config.Config.pop", "RuntimeError", "config.Config.setdefault", "config.Config.setdefault", "config.Config.setdefault", "getattr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "@", "property", "\n", "def", "lr_scheduler", "(", "self", ")", "->", "paddle", ".", "optimizer", ".", "lr", ".", "LRScheduler", ":", "\n", "        ", "if", "'lr_scheduler'", "not", "in", "self", ".", "dic", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "'No `lr_scheduler` specified in the configuration file.'", ")", "\n", "", "params", "=", "self", ".", "dic", ".", "get", "(", "'lr_scheduler'", ")", "\n", "\n", "use_warmup", "=", "False", "\n", "if", "'warmup_iters'", "in", "params", ":", "\n", "            ", "use_warmup", "=", "True", "\n", "warmup_iters", "=", "params", ".", "pop", "(", "'warmup_iters'", ")", "\n", "warmup_start_lr", "=", "params", ".", "pop", "(", "'warmup_start_lr'", ")", "\n", "end_lr", "=", "params", "[", "'learning_rate'", "]", "\n", "\n", "", "lr_type", "=", "params", ".", "pop", "(", "'type'", ")", "\n", "if", "lr_type", "==", "'PolynomialDecay'", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.learning_rate": [[166, 192], ["paddleseg.utils.logger.warning", "config.Config.dic.get().get", "args.pop", "RuntimeError", "paddle.optimizer.lr.PolynomialDecay", "config.Config.dic.get", "paddle.optimizer.lr.PiecewiseDecay", "paddle.optimizer.lr.StepDecay", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["            ", "params", ".", "setdefault", "(", "'decay_steps'", ",", "self", ".", "iters", ")", "\n", "params", ".", "setdefault", "(", "'end_lr'", ",", "0", ")", "\n", "params", ".", "setdefault", "(", "'power'", ",", "0.9", ")", "\n", "", "lr_sche", "=", "getattr", "(", "paddle", ".", "optimizer", ".", "lr", ",", "lr_type", ")", "(", "**", "params", ")", "\n", "\n", "if", "use_warmup", ":", "\n", "            ", "lr_sche", "=", "paddle", ".", "optimizer", ".", "lr", ".", "LinearWarmup", "(", "\n", "learning_rate", "=", "lr_sche", ",", "\n", "warmup_steps", "=", "warmup_iters", ",", "\n", "start_lr", "=", "warmup_start_lr", ",", "\n", "end_lr", "=", "end_lr", ")", "\n", "\n", "", "return", "lr_sche", "\n", "\n", "", "@", "property", "\n", "def", "learning_rate", "(", "self", ")", "->", "paddle", ".", "optimizer", ".", "lr", ".", "LRScheduler", ":", "\n", "        ", "logger", ".", "warning", "(", "\n", "'''`learning_rate` in configuration file will be deprecated, please use `lr_scheduler` instead. E.g\n            lr_scheduler:\n                type: PolynomialDecay\n                learning_rate: 0.01'''", ")", "\n", "\n", "_learning_rate", "=", "self", ".", "dic", ".", "get", "(", "'learning_rate'", ",", "{", "}", ")", "\n", "if", "isinstance", "(", "_learning_rate", ",", "float", ")", ":", "\n", "            ", "return", "_learning_rate", "\n", "\n", "", "_learning_rate", "=", "self", ".", "dic", ".", "get", "(", "'learning_rate'", ",", "{", "}", ")", ".", "get", "(", "'value'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.optimizer": [[193, 214], ["args.pop", "RuntimeError", "paddle.optimizer.Momentum", "paddle.optimizer.Adam", "config.Config.model.parameters", "config.Config.model.parameters", "getattr", "config.Config.model.parameters"], "methods", ["None"], ["if", "not", "_learning_rate", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "'No learning rate specified in the configuration file.'", ")", "\n", "\n", "", "args", "=", "self", ".", "decay_args", "\n", "decay_type", "=", "args", ".", "pop", "(", "'type'", ")", "\n", "\n", "if", "decay_type", "==", "'poly'", ":", "\n", "            ", "lr", "=", "_learning_rate", "\n", "return", "paddle", ".", "optimizer", ".", "lr", ".", "PolynomialDecay", "(", "lr", ",", "**", "args", ")", "\n", "", "elif", "decay_type", "==", "'piecewise'", ":", "\n", "            ", "values", "=", "_learning_rate", "\n", "return", "paddle", ".", "optimizer", ".", "lr", ".", "PiecewiseDecay", "(", "values", "=", "values", ",", "**", "args", ")", "\n", "", "elif", "decay_type", "==", "'stepdecay'", ":", "\n", "            ", "lr", "=", "_learning_rate", "\n", "return", "paddle", ".", "optimizer", ".", "lr", ".", "StepDecay", "(", "lr", ",", "**", "args", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Only poly and piecewise decay support.'", ")", "\n", "\n", "", "", "@", "property", "\n", "def", "optimizer", "(", "self", ")", "->", "paddle", ".", "optimizer", ".", "Optimizer", ":", "\n", "        ", "if", "'lr_scheduler'", "in", "self", ".", "dic", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.optimizer_args": [[215, 222], ["config.Config.dic.get().copy", "config.Config.setdefault", "config.Config.dic.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["            ", "lr", "=", "self", ".", "lr_scheduler", "\n", "", "else", ":", "\n", "            ", "lr", "=", "self", ".", "learning_rate", "\n", "", "args", "=", "self", ".", "optimizer_args", "\n", "optimizer_type", "=", "args", ".", "pop", "(", "'type'", ")", "\n", "\n", "if", "optimizer_type", "==", "'sgd'", ":", "\n", "            ", "return", "paddle", ".", "optimizer", ".", "Momentum", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.decay_args": [[223, 234], ["config.Config.dic.get().get().copy", "config.Config.setdefault", "config.Config.setdefault", "config.Config.dic.get().get", "config.Config.dic.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["lr", ",", "parameters", "=", "self", ".", "model", ".", "parameters", "(", ")", ",", "**", "args", ")", "\n", "", "elif", "optimizer_type", "==", "'adam'", ":", "\n", "            ", "return", "paddle", ".", "optimizer", ".", "Adam", "(", "\n", "lr", ",", "parameters", "=", "self", ".", "model", ".", "parameters", "(", ")", ",", "**", "args", ")", "\n", "", "elif", "optimizer_type", "in", "paddle", ".", "optimizer", ".", "__all__", ":", "\n", "            ", "return", "getattr", "(", "paddle", ".", "optimizer", ",", "\n", "optimizer_type", ")", "(", "lr", ",", "\n", "parameters", "=", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "**", "args", ")", "\n", "\n", "", "raise", "RuntimeError", "(", "'Unknown optimizer type {}.'", ".", "format", "(", "optimizer_type", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.loss": [[235, 240], ["config.Config._prepare_loss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._prepare_loss"], ["", "@", "property", "\n", "def", "optimizer_args", "(", "self", ")", "->", "dict", ":", "\n", "        ", "args", "=", "self", ".", "dic", ".", "get", "(", "'optimizer'", ",", "{", "}", ")", ".", "copy", "(", ")", "\n", "if", "args", "[", "'type'", "]", "==", "'sgd'", ":", "\n", "            ", "args", ".", "setdefault", "(", "'momentum'", ",", "0.9", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.distill_loss": [[241, 246], ["hasattr", "config.Config._prepare_loss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._prepare_loss"], ["", "return", "args", "\n", "\n", "", "@", "property", "\n", "def", "decay_args", "(", "self", ")", "->", "dict", ":", "\n", "        ", "args", "=", "self", ".", "dic", ".", "get", "(", "'learning_rate'", ",", "{", "}", ")", ".", "get", "(", "\n", "'decay'", ",", "{", "'type'", ":", "'poly'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._prepare_loss": [[247, 292], ["config.Config.dic.get().copy", "dict", "config.Config.items", "len", "len", "ValueError", "len", "len", "RuntimeError", "config.Config.dic.get", "ValueError", "losses[].append", "len", "len", "config.Config._load_object"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_object"], ["'power'", ":", "0.9", "}", ")", ".", "copy", "(", ")", "\n", "\n", "if", "args", "[", "'type'", "]", "==", "'poly'", ":", "\n", "            ", "args", ".", "setdefault", "(", "'decay_steps'", ",", "self", ".", "iters", ")", "\n", "args", ".", "setdefault", "(", "'end_lr'", ",", "0", ")", "\n", "\n", "", "return", "args", "\n", "\n", "", "@", "property", "\n", "def", "loss", "(", "self", ")", "->", "dict", ":", "\n", "        ", "if", "self", ".", "_losses", "is", "None", ":", "\n", "            ", "self", ".", "_losses", "=", "self", ".", "_prepare_loss", "(", "'loss'", ")", "\n", "", "return", "self", ".", "_losses", "\n", "\n", "", "@", "property", "\n", "def", "distill_loss", "(", "self", ")", "->", "dict", ":", "\n", "        ", "if", "not", "hasattr", "(", "self", ",", "'_distill_losses'", ")", ":", "\n", "            ", "self", ".", "_distill_losses", "=", "self", ".", "_prepare_loss", "(", "'distill_loss'", ")", "\n", "", "return", "self", ".", "_distill_losses", "\n", "\n", "", "def", "_prepare_loss", "(", "self", ",", "loss_name", ")", ":", "\n", "        ", "\"\"\"\n        Parse the loss parameters and load the loss layers.\n\n        Args:\n            loss_name (str): The root name of loss in the yaml file.\n        Returns:\n            dict: A dict including the loss parameters and layers.\n        \"\"\"", "\n", "args", "=", "self", ".", "dic", ".", "get", "(", "loss_name", ",", "{", "}", ")", ".", "copy", "(", ")", "\n", "if", "'types'", "in", "args", "and", "'coef'", "in", "args", ":", "\n", "            ", "len_types", "=", "len", "(", "args", "[", "'types'", "]", ")", "\n", "len_coef", "=", "len", "(", "args", "[", "'coef'", "]", ")", "\n", "if", "len_types", "!=", "len_coef", ":", "\n", "                ", "if", "len_types", "==", "1", ":", "\n", "                    ", "args", "[", "'types'", "]", "=", "args", "[", "'types'", "]", "*", "len_coef", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\n", "'The length of types should equal to coef or equal to 1 in loss config, but they are {} and {}.'", "\n", ".", "format", "(", "len_types", ",", "len_coef", ")", ")", "\n", "", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Loss config should contain keys of \"types\" and \"coef\"'", ")", "\n", "\n", "", "losses", "=", "dict", "(", ")", "\n", "for", "key", ",", "val", "in", "args", ".", "items", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.model": [[293, 302], ["config.Config.dic.get().copy", "RuntimeError", "config.Config._load_object", "config.Config.dic.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_object", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["            ", "if", "key", "==", "'types'", ":", "\n", "                ", "losses", "[", "'types'", "]", "=", "[", "]", "\n", "for", "item", "in", "args", "[", "'types'", "]", ":", "\n", "                    ", "if", "item", "[", "'type'", "]", "!=", "'MixedLoss'", ":", "\n", "                        ", "if", "'ignore_index'", "in", "item", ":", "\n", "                            ", "assert", "item", "[", "'ignore_index'", "]", "==", "self", ".", "train_dataset", ".", "ignore_index", ",", "'If ignore_index of loss is set, '", "'the ignore_index of loss and train_dataset must be the same. \\nCurrently, loss ignore_index = {}, '", "'train_dataset ignore_index = {}. \\nIt is recommended not to set loss ignore_index, so it is consistent with '", "'train_dataset by default.'", ".", "format", "(", "item", "[", "'ignore_index'", "]", ",", "self", ".", "train_dataset", ".", "ignore_index", ")", "\n", "", "item", "[", "'ignore_index'", "]", "="]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.train_dataset_config": [[327, 336], ["config.Config.dic.get().copy", "os.path.join", "os.path.join", "config.Config.get", "config.Config.get", "config.Config.dic.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["                    ", "if", "hasattr", "(", "self", ".", "val_dataset_class", ",", "'NUM_CLASSES'", ")", ":", "\n", "                        ", "num_classes", "=", "self", ".", "val_dataset_class", ".", "NUM_CLASSES", "\n", "", "elif", "hasattr", "(", "self", ".", "val_dataset", ",", "'num_classes'", ")", ":", "\n", "                        ", "num_classes", "=", "self", ".", "val_dataset", ".", "num_classes", "\n", "", "", "", "except", "FileNotFoundError", ":", "\n", "                ", "warnings", ".", "warn", "(", "\"`dataset_root` is not found. Is it correct?\"", ")", "\n", "\n", "", "if", "num_classes", "is", "not", "None", ":", "\n", "                ", "model_cfg", "[", "'num_classes'", "]", "=", "num_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.val_dataset_config": [[337, 346], ["config.Config.dic.get().copy", "os.path.join", "os.path.join", "config.Config.get", "config.Config.get", "config.Config.dic.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "if", "not", "self", ".", "_model", ":", "\n", "            ", "self", ".", "_model", "=", "self", ".", "_load_object", "(", "model_cfg", ")", "\n", "", "return", "self", ".", "_model", "\n", "\n", "", "@", "property", "\n", "def", "train_dataset_config", "(", "self", ")", "->", "Dict", ":", "\n", "        ", "return", "self", ".", "dic", ".", "get", "(", "'train_dataset'", ",", "{", "}", ")", ".", "copy", "(", ")", "\n", "\n", "", "@", "property", "\n", "def", "val_dataset_config", "(", "self", ")", "->", "Dict", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.train_dataset_class": [[347, 351], ["config.Config._load_component"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_component"], ["        ", "return", "self", ".", "dic", ".", "get", "(", "'val_dataset'", ",", "{", "}", ")", ".", "copy", "(", ")", "\n", "\n", "", "@", "property", "\n", "def", "train_dataset_class", "(", "self", ")", "->", "Generic", ":", "\n", "        ", "dataset_type", "=", "self", ".", "train_dataset_config", "[", "'type'", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.val_dataset_class": [[352, 356], ["config.Config._load_component"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_component"], ["return", "self", ".", "_load_component", "(", "dataset_type", ")", "\n", "\n", "", "@", "property", "\n", "def", "val_dataset_class", "(", "self", ")", "->", "Generic", ":", "\n", "        ", "dataset_type", "=", "self", ".", "val_dataset_config", "[", "'type'", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.train_dataset": [[357, 363], ["config.Config._load_object"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_object"], ["return", "self", ".", "_load_component", "(", "dataset_type", ")", "\n", "\n", "", "@", "property", "\n", "def", "train_dataset", "(", "self", ")", "->", "paddle", ".", "io", ".", "Dataset", ":", "\n", "        ", "_train_dataset", "=", "self", ".", "train_dataset_config", "\n", "if", "not", "_train_dataset", ":", "\n", "            ", "return", "None", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.val_dataset": [[364, 370], ["config.Config._load_object"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_object"], ["", "return", "self", ".", "_load_object", "(", "_train_dataset", ")", "\n", "\n", "", "@", "property", "\n", "def", "val_dataset", "(", "self", ")", "->", "paddle", ".", "io", ".", "Dataset", ":", "\n", "        ", "_val_dataset", "=", "self", ".", "val_dataset_config", "\n", "if", "not", "_val_dataset", ":", "\n", "            ", "return", "None", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_component": [[303, 315], ["RuntimeError"], "methods", ["None"], ["self", ".", "train_dataset", ".", "ignore_index", "\n", "", "losses", "[", "'types'", "]", ".", "append", "(", "self", ".", "_load_object", "(", "item", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "losses", "[", "key", "]", "=", "val", "\n", "", "", "if", "len", "(", "losses", "[", "'coef'", "]", ")", "!=", "len", "(", "losses", "[", "'types'", "]", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "'The length of coef should equal to types in loss config: {} != {}.'", "\n", ".", "format", "(", "len", "(", "losses", "[", "'coef'", "]", ")", ",", "len", "(", "losses", "[", "'types'", "]", ")", ")", ")", "\n", "", "return", "losses", "\n", "\n", "", "@", "property", "\n", "def", "model", "(", "self", ")", "->", "paddle", ".", "nn", ".", "Layer", ":", "\n", "        ", "model_cfg", "=", "self", ".", "dic", ".", "get", "(", "'model'", ")", ".", "copy", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_object": [[316, 336], ["cfg.copy.copy.copy", "config.Config._load_component", "cfg.copy.copy.items", "config.Config.", "RuntimeError", "cfg.copy.copy.pop", "config.Config._is_meta_type", "config.Config._load_object", "isinstance", "config.Config._is_meta_type", "config.Config._load_object"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_component", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._is_meta_type", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_object", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._is_meta_type", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_object"], ["if", "not", "model_cfg", ":", "\n", "            ", "raise", "RuntimeError", "(", "'No model specified in the configuration file.'", ")", "\n", "", "if", "not", "'num_classes'", "in", "model_cfg", ":", "\n", "            ", "num_classes", "=", "None", "\n", "try", ":", "\n", "                ", "if", "self", ".", "train_dataset_config", ":", "\n", "                    ", "if", "hasattr", "(", "self", ".", "train_dataset_class", ",", "'NUM_CLASSES'", ")", ":", "\n", "                        ", "num_classes", "=", "self", ".", "train_dataset_class", ".", "NUM_CLASSES", "\n", "", "elif", "hasattr", "(", "self", ".", "train_dataset", ",", "'num_classes'", ")", ":", "\n", "                        ", "num_classes", "=", "self", ".", "train_dataset", ".", "num_classes", "\n", "", "", "elif", "self", ".", "val_dataset_config", ":", "\n", "                    ", "if", "hasattr", "(", "self", ".", "val_dataset_class", ",", "'NUM_CLASSES'", ")", ":", "\n", "                        ", "num_classes", "=", "self", ".", "val_dataset_class", ".", "NUM_CLASSES", "\n", "", "elif", "hasattr", "(", "self", ".", "val_dataset", ",", "'num_classes'", ")", ":", "\n", "                        ", "num_classes", "=", "self", ".", "val_dataset", ".", "num_classes", "\n", "", "", "", "except", "FileNotFoundError", ":", "\n", "                ", "warnings", ".", "warn", "(", "\"`dataset_root` is not found. Is it correct?\"", ")", "\n", "\n", "", "if", "num_classes", "is", "not", "None", ":", "\n", "                ", "model_cfg", "[", "'num_classes'", "]", "=", "num_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.test_config": [[337, 340], ["config.Config.dic.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "if", "not", "self", ".", "_model", ":", "\n", "            ", "self", ".", "_model", "=", "self", ".", "_load_object", "(", "model_cfg", ")", "\n", "", "return", "self", ".", "_model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.export_config": [[341, 344], ["config.Config.dic.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "@", "property", "\n", "def", "train_dataset_config", "(", "self", ")", "->", "Dict", ":", "\n", "        ", "return", "self", ".", "dic", ".", "get", "(", "'train_dataset'", ",", "{", "}", ")", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.to_static_training": [[409, 413], ["config.Config.dic.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["        ", "return", "self", ".", "dic", ".", "get", "(", "'test_config'", ",", "{", "}", ")", "\n", "\n", "", "@", "property", "\n", "def", "export_config", "(", "self", ")", "->", "Dict", ":", "\n", "        ", "return", "self", ".", "dic", ".", "get", "(", "'export'", ",", "{", "}", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._is_meta_type": [[345, 347], ["isinstance"], "methods", ["None"], ["", "@", "property", "\n", "def", "val_dataset_config", "(", "self", ")", "->", "Dict", ":", "\n", "        ", "return", "self", ".", "dic", ".", "get", "(", "'val_dataset'", ",", "{", "}", ")", ".", "copy", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.__str__": [[348, 350], ["yaml.dump"], "methods", ["None"], ["\n", "", "@", "property", "\n", "def", "train_dataset_class", "(", "self", ")", "->", "Generic", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.val_transforms": [[426, 437], ["_val_dataset.get", "transforms.append", "config.Config._load_object"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config._load_object"], ["", "@", "property", "\n", "def", "val_transforms", "(", "self", ")", "->", "list", ":", "\n", "        ", "\"\"\"Get val_transform from val_dataset\"\"\"", "\n", "_val_dataset", "=", "self", ".", "val_dataset_config", "\n", "if", "not", "_val_dataset", ":", "\n", "            ", "return", "[", "]", "\n", "", "_transforms", "=", "_val_dataset", ".", "get", "(", "'transforms'", ",", "[", "]", ")", "\n", "transforms", "=", "[", "]", "\n", "for", "i", "in", "_transforms", ":", "\n", "            ", "transforms", ".", "append", "(", "self", ".", "_load_object", "(", "i", ")", ")", "\n", "", "return", "transforms", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init": [[18, 38], ["paddle.initializer.Constant", "nn.initializer.Constant."], "function", ["None"], ["def", "constant_init", "(", "param", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    Initialize the `param` with constants.\n\n    Args:\n        param (Tensor): Tensor that needs to be initialized.\n\n    Examples:\n\n        from paddleseg.cvlibs import param_init\n        import paddle.nn as nn\n\n        linear = nn.Linear(2, 4)\n        param_init.constant_init(linear.weight, value=2.0)\n        print(linear.weight.numpy())\n        # result is [[2. 2. 2. 2.], [2. 2. 2. 2.]]\n\n    \"\"\"", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "**", "kwargs", ")", "\n", "initializer", "(", "param", ",", "param", ".", "block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init": [[40, 58], ["paddle.initializer.Normal", "nn.initializer.Normal."], "function", ["None"], ["", "def", "normal_init", "(", "param", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    Initialize the `param` with a Normal distribution.\n\n    Args:\n        param (Tensor): Tensor that needs to be initialized.\n\n    Examples:\n\n        from paddleseg.cvlibs import param_init\n        import paddle.nn as nn\n\n        linear = nn.Linear(2, 4)\n        param_init.normal_init(linear.weight, loc=0.0, scale=1.0)\n\n    \"\"\"", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", "**", "kwargs", ")", "\n", "initializer", "(", "param", ",", "param", ".", "block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_normal_init": [[60, 92], ["paddle.initializer.KaimingNormal", "nn.initializer.KaimingNormal."], "function", ["None"], ["", "def", "kaiming_normal_init", "(", "param", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"\n    Initialize the input tensor with Kaiming Normal initialization.\n\n    This function implements the `param` initialization from the paper\n    `Delving Deep into Rectifiers: Surpassing Human-Level Performance on\n    ImageNet Classification <https://arxiv.org/abs/1502.01852>`\n    by Kaiming He, Xiangyu Zhang, Shaoqing Ren and Jian Sun. This is a\n    robust initialization method that particularly considers the rectifier\n    nonlinearities. In case of Uniform distribution, the range is [-x, x], where\n    .. math::\n        x = \\sqrt{\\\\frac{6.0}{fan\\_in}}\n    In case of Normal distribution, the mean is 0 and the standard deviation\n    is\n    .. math::\n        \\sqrt{\\\\frac{2.0}{fan\\_in}}\n\n    Args:\n        param (Tensor): Tensor that needs to be initialized.\n\n    Examples:\n\n        from paddleseg.cvlibs import param_init\n        import paddle.nn as nn\n\n        linear = nn.Linear(2, 4)\n        # uniform is used to decide whether to use uniform or normal distribution\n        param_init.kaiming_normal_init(linear.weight)\n\n    \"\"\"", "\n", "initializer", "=", "nn", ".", "initializer", ".", "KaimingNormal", "(", "**", "kwargs", ")", "\n", "initializer", "(", "param", ",", "param", ".", "block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_uniform": [[94, 121], ["paddle.initializer.KaimingUniform", "nn.initializer.KaimingUniform."], "function", ["None"], ["", "def", "kaiming_uniform", "(", "param", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"Implements the Kaiming Uniform initializer\n    This class implements the weight initialization from the paper\n    `Delving Deep into Rectifiers: Surpassing Human-Level Performance on\n    ImageNet Classification <https://arxiv.org/abs/1502.01852>`_\n    by Kaiming He, Xiangyu Zhang, Shaoqing Ren and Jian Sun. This is a\n    robust initialization method that particularly considers the rectifier\n    nonlinearities.\n\n    In case of Uniform distribution, the range is [-x, x], where\n    .. math::\n        x = \\sqrt{\\\\frac{6.0}{fan\\_in}}\n\n    Args:\n        param (Tensor): Tensor that needs to be initialized.\n\n    Examples:\n\n        from paddleseg.cvlibs import param_init\n        import paddle.nn as nn\n\n        linear = nn.Linear(2, 4)\n        param_init.kaiming_uniform(linear.weight)\n    \"\"\"", "\n", "\n", "initializer", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", "**", "kwargs", ")", "\n", "initializer", "(", "param", ",", "param", ".", "block", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.manager.ComponentManager.__init__": [[68, 71], ["dict"], "methods", ["None"], ["self", ".", "_name", "=", "name", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_components_dict", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.manager.ComponentManager.__len__": [[72, 74], ["len"], "methods", ["None"], ["\n", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "name_str", "=", "self", ".", "_name", "if", "self", ".", "_name", "else", "self", ".", "__class__", ".", "__name__", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.manager.ComponentManager.__repr__": [[75, 78], ["list", "manager.ComponentManager._components_dict.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["return", "\"{}:{}\"", ".", "format", "(", "name_str", ",", "list", "(", "self", ".", "_components_dict", ".", "keys", "(", ")", ")", ")", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "not", "in", "self", ".", "_components_dict", ".", "keys", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.manager.ComponentManager.__getitem__": [[79, 84], ["manager.ComponentManager._components_dict.keys", "KeyError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["            ", "raise", "KeyError", "(", "\"{} does not exist in availabel {}\"", ".", "format", "(", "item", ",", "\n", "self", ")", ")", "\n", "", "return", "self", ".", "_components_dict", "[", "item", "]", "\n", "\n", "", "@", "property", "\n", "def", "components_dict", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.manager.ComponentManager.components_dict": [[85, 88], ["None"], "methods", ["None"], ["        ", "return", "self", ".", "_components_dict", "\n", "\n", "", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.manager.ComponentManager.name": [[89, 92], ["None"], "methods", ["None"], ["        ", "return", "self", ".", "_name", "\n", "\n", "", "def", "_add_single_component", "(", "self", ",", "component", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.manager.ComponentManager._add_single_component": [[93, 122], ["TypeError", "manager.ComponentManager._components_dict.keys", "warnings.warn", "inspect.isclass", "inspect.isfunction", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn"], ["\n", "\n", "# Currently only support class or function type", "\n", "if", "not", "(", "inspect", ".", "isclass", "(", "component", ")", "or", "inspect", ".", "isfunction", "(", "component", ")", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\"Expect class/function type, but received {}\"", ".", "\n", "format", "(", "type", "(", "component", ")", ")", ")", "\n", "\n", "# Obtain the internal name of the component", "\n", "", "component_name", "=", "component", ".", "__name__", "\n", "\n", "# Check whether the component was added already", "\n", "if", "component_name", "in", "self", ".", "_components_dict", ".", "keys", "(", ")", ":", "\n", "            ", "warnings", ".", "warn", "(", "\"{} exists already! It is now updated to {} !!!\"", ".", "\n", "format", "(", "component_name", ",", "component", ")", ")", "\n", "self", ".", "_components_dict", "[", "component_name", "]", "=", "component", "\n", "\n", "", "else", ":", "\n", "# Take the internal name of the component as its key", "\n", "            ", "self", ".", "_components_dict", "[", "component_name", "]", "=", "component", "\n", "\n", "", "", "def", "add_component", "(", "self", ",", "components", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.manager.ComponentManager.add_component": [[123, 143], ["isinstance", "manager.ComponentManager._add_single_component", "manager.ComponentManager._add_single_component"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager._add_single_component", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager._add_single_component"], ["\n", "\n", "# Check whether the type is a sequence", "\n", "if", "isinstance", "(", "components", ",", "Sequence", ")", ":", "\n", "            ", "for", "component", "in", "components", ":", "\n", "                ", "self", ".", "_add_single_component", "(", "component", ")", "\n", "", "", "else", ":", "\n", "            ", "component", "=", "components", "\n", "self", ".", "_add_single_component", "(", "component", ")", "\n", "\n", "", "return", "components", "\n", "\n", "\n", "", "", "MODELS", "=", "ComponentManager", "(", "\"models\"", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.__init__": [[34, 37], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "callbacks", "=", "None", ")", ":", "\n", "        ", "callbacks", "=", "callbacks", "or", "[", "]", "\n", "self", ".", "callbacks", "=", "[", "c", "for", "c", "in", "callbacks", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.append": [[38, 40], ["callbacks.CallbackList.callbacks.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "append", "(", "self", ",", "callback", ")", ":", "\n", "        ", "self", ".", "callbacks", ".", "append", "(", "callback", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.set_params": [[41, 44], ["callback.set_params"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.set_params"], ["", "def", "set_params", "(", "self", ",", "params", ")", ":", "\n", "        ", "for", "callback", "in", "self", ".", "callbacks", ":", "\n", "            ", "callback", ".", "set_params", "(", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.set_model": [[45, 48], ["callback.set_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.set_model"], ["", "", "def", "set_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "for", "callback", "in", "self", ".", "callbacks", ":", "\n", "            ", "callback", ".", "set_model", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.set_optimizer": [[49, 52], ["callback.set_optimizer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.set_optimizer"], ["", "", "def", "set_optimizer", "(", "self", ",", "optimizer", ")", ":", "\n", "        ", "for", "callback", "in", "self", ".", "callbacks", ":", "\n", "            ", "callback", ".", "set_optimizer", "(", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.on_iter_begin": [[53, 60], ["time.time", "callback.on_iter_begin"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.ProgbarLogger.on_iter_begin"], ["", "", "def", "on_iter_begin", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "        ", "\"\"\"Called right before processing a batch.\n        \"\"\"", "\n", "logs", "=", "logs", "or", "{", "}", "\n", "for", "callback", "in", "self", ".", "callbacks", ":", "\n", "            ", "callback", ".", "on_iter_begin", "(", "iter", ",", "logs", ")", "\n", "", "self", ".", "_t_enter_iter", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.on_iter_end": [[61, 68], ["time.time", "callback.on_iter_end"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.VisualDL.on_iter_end"], ["", "def", "on_iter_end", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "        ", "\"\"\"Called at the end of a batch.\n        \"\"\"", "\n", "logs", "=", "logs", "or", "{", "}", "\n", "for", "callback", "in", "self", ".", "callbacks", ":", "\n", "            ", "callback", ".", "on_iter_end", "(", "iter", ",", "logs", ")", "\n", "", "self", ".", "_t_exit_iter", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.on_train_begin": [[69, 75], ["callback.on_train_begin"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.VisualDL.on_train_begin"], ["", "def", "on_train_begin", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "\"\"\"Called at the beginning of training.\n        \"\"\"", "\n", "logs", "=", "logs", "or", "{", "}", "\n", "for", "callback", "in", "self", ".", "callbacks", ":", "\n", "            ", "callback", ".", "on_train_begin", "(", "logs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.on_train_end": [[76, 82], ["callback.on_train_end"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.VisualDL.on_train_end"], ["", "", "def", "on_train_end", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "\"\"\"Called at the end of training.\n        \"\"\"", "\n", "logs", "=", "logs", "or", "{", "}", "\n", "for", "callback", "in", "self", ".", "callbacks", ":", "\n", "            ", "callback", ".", "on_train_end", "(", "logs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.CallbackList.__iter__": [[83, 85], ["iter"], "methods", ["None"], ["", "", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "self", ".", "callbacks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.__init__": [[91, 93], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "validation_data", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.set_params": [[94, 96], ["None"], "methods", ["None"], ["", "def", "set_params", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "params", "=", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.set_model": [[97, 99], ["None"], "methods", ["None"], ["", "def", "set_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.set_optimizer": [[100, 102], ["None"], "methods", ["None"], ["", "def", "set_optimizer", "(", "self", ",", "optimizer", ")", ":", "\n", "        ", "self", ".", "optimizer", "=", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.on_iter_begin": [[103, 105], ["None"], "methods", ["None"], ["", "def", "on_iter_begin", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.on_iter_end": [[106, 108], ["None"], "methods", ["None"], ["", "def", "on_iter_end", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.on_train_begin": [[109, 111], ["None"], "methods", ["None"], ["", "def", "on_train_begin", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.Callback.on_train_end": [[112, 114], ["None"], "methods", ["None"], ["", "def", "on_train_end", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.BaseLogger.__init__": [[117, 120], ["callbacks.Callback.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "period", "=", "10", ")", ":", "\n", "        ", "super", "(", "BaseLogger", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "period", "=", "period", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.BaseLogger._reset": [[121, 123], ["None"], "methods", ["None"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "totals", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.BaseLogger.on_train_begin": [[124, 126], ["None"], "methods", ["None"], ["", "def", "on_train_begin", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "self", ".", "totals", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.BaseLogger.on_iter_end": [[127, 141], ["logs.items", "callbacks.BaseLogger._reset", "callbacks.BaseLogger.totals.keys", "paddle.distributed.parallel.ParallelEnv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.BaseLogger._reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "on_iter_end", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "        ", "logs", "=", "logs", "or", "{", "}", "\n", "#(iter - 1) // iters_per_epoch + 1", "\n", "for", "k", ",", "v", "in", "logs", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "self", ".", "totals", ".", "keys", "(", ")", ":", "\n", "                ", "self", ".", "totals", "[", "k", "]", "+=", "v", "\n", "", "else", ":", "\n", "                ", "self", ".", "totals", "[", "k", "]", "=", "v", "\n", "\n", "", "", "if", "iter", "%", "self", ".", "period", "==", "0", "and", "ParallelEnv", "(", ")", ".", "local_rank", "==", "0", ":", "\n", "\n", "            ", "for", "k", "in", "self", ".", "totals", ":", "\n", "                ", "logs", "[", "k", "]", "=", "self", ".", "totals", "[", "k", "]", "/", "self", ".", "period", "\n", "", "self", ".", "_reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.TrainLogger.__init__": [[144, 146], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "log_freq", "=", "10", ")", ":", "\n", "        ", "self", ".", "log_freq", "=", "log_freq", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.TrainLogger._calculate_eta": [[147, 157], ["int", "range", "result.format", "arr.append", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "_calculate_eta", "(", "self", ",", "remaining_iters", ",", "speed", ")", ":", "\n", "        ", "if", "remaining_iters", "<", "0", ":", "\n", "            ", "remaining_iters", "=", "0", "\n", "", "remaining_time", "=", "int", "(", "remaining_iters", "*", "speed", ")", "\n", "result", "=", "\"{:0>2}:{:0>2}:{:0>2}\"", "\n", "arr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "            ", "arr", ".", "append", "(", "int", "(", "remaining_time", "/", "60", "**", "i", ")", ")", "\n", "remaining_time", "%=", "60", "**", "i", "\n", "", "return", "result", ".", "format", "(", "*", "arr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.TrainLogger.on_iter_end": [[158, 175], ["callbacks.TrainLogger._calculate_eta", "callbacks.TrainLogger.optimizer.get_lr", "paddleseg.info", "paddle.distributed.parallel.ParallelEnv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.TrainLogger._calculate_eta", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["", "def", "on_iter_end", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "\n", "        ", "if", "iter", "%", "self", ".", "log_freq", "==", "0", "and", "ParallelEnv", "(", ")", ".", "local_rank", "==", "0", ":", "\n", "            ", "total_iters", "=", "self", ".", "params", "[", "\"total_iters\"", "]", "\n", "iters_per_epoch", "=", "self", ".", "params", "[", "\"iters_per_epoch\"", "]", "\n", "remaining_iters", "=", "total_iters", "-", "iter", "\n", "eta", "=", "self", ".", "_calculate_eta", "(", "remaining_iters", ",", "logs", "[", "\"batch_cost\"", "]", ")", "\n", "current_epoch", "=", "(", "iter", "-", "1", ")", "//", "self", ".", "params", "[", "\"iters_per_epoch\"", "]", "+", "1", "\n", "loss", "=", "logs", "[", "\"loss\"", "]", "\n", "lr", "=", "self", ".", "optimizer", ".", "get_lr", "(", ")", "\n", "batch_cost", "=", "logs", "[", "\"batch_cost\"", "]", "\n", "reader_cost", "=", "logs", "[", "\"reader_cost\"", "]", "\n", "\n", "logger", ".", "info", "(", "\n", "\"[TRAIN] epoch={}, iter={}/{}, loss={:.4f}, lr={:.6f}, batch_cost={:.4f}, reader_cost={:.4f} | ETA {}\"", "\n", ".", "format", "(", "current_epoch", ",", "iter", ",", "total_iters", ",", "loss", ",", "lr", ",", "batch_cost", ",", "\n", "reader_cost", ",", "eta", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.ProgbarLogger.__init__": [[178, 180], ["callbacks.Callback.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ProgbarLogger", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.ProgbarLogger.on_train_begin": [[181, 188], ["paddleseg.utils.progbar.Progbar"], "methods", ["None"], ["", "def", "on_train_begin", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "self", ".", "verbose", "=", "self", ".", "params", "[", "\"verbose\"", "]", "\n", "self", ".", "total_iters", "=", "self", ".", "params", "[", "\"total_iters\"", "]", "\n", "self", ".", "target", "=", "self", ".", "params", "[", "\"total_iters\"", "]", "\n", "self", ".", "progbar", "=", "Progbar", "(", "target", "=", "self", ".", "target", ",", "verbose", "=", "self", ".", "verbose", ")", "\n", "self", ".", "seen", "=", "0", "\n", "self", ".", "log_values", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.ProgbarLogger.on_iter_begin": [[189, 193], ["None"], "methods", ["None"], ["", "def", "on_iter_begin", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "#self.seen = 0", "\n", "        ", "if", "self", ".", "seen", "<", "self", ".", "target", ":", "\n", "            ", "self", ".", "log_values", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.ProgbarLogger.on_iter_end": [[194, 205], ["callbacks.ProgbarLogger.progbar.update", "callbacks.ProgbarLogger.log_values.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "on_iter_end", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "        ", "logs", "=", "logs", "or", "{", "}", "\n", "self", ".", "seen", "+=", "1", "\n", "for", "k", "in", "self", ".", "params", "[", "'metrics'", "]", ":", "\n", "            ", "if", "k", "in", "logs", ":", "\n", "                ", "self", ".", "log_values", ".", "append", "(", "(", "k", ",", "logs", "[", "k", "]", ")", ")", "\n", "\n", "#if self.verbose and self.seen < self.target and ParallelEnv.local_rank == 0:", "\n", "#print(self.log_values)", "\n", "", "", "if", "self", ".", "seen", "<", "self", ".", "target", ":", "\n", "            ", "self", ".", "progbar", ".", "update", "(", "self", ".", "seen", ",", "self", ".", "log_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.ModelCheckpoint.__init__": [[208, 232], ["callbacks.Callback.__init__", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "save_dir", ",", "\n", "monitor", "=", "\"miou\"", ",", "\n", "save_best_only", "=", "False", ",", "\n", "save_params_only", "=", "True", ",", "\n", "mode", "=", "\"max\"", ",", "\n", "period", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "ModelCheckpoint", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "monitor", "=", "monitor", "\n", "self", ".", "save_dir", "=", "save_dir", "\n", "self", ".", "save_best_only", "=", "save_best_only", "\n", "self", ".", "save_params_only", "=", "save_params_only", "\n", "self", ".", "period", "=", "period", "\n", "self", ".", "iters_since_last_save", "=", "0", "\n", "\n", "if", "mode", "==", "\"min\"", ":", "\n", "            ", "self", ".", "monitor_op", "=", "np", ".", "less", "\n", "self", ".", "best", "=", "np", ".", "Inf", "\n", "", "elif", "mode", "==", "\"max\"", ":", "\n", "            ", "self", ".", "monitor_op", "=", "np", ".", "greater", "\n", "self", ".", "best", "=", "-", "np", ".", "Inf", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"`mode` is neither \\\"min\\\" nor \\\"max\\\"!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.ModelCheckpoint.on_train_begin": [[233, 240], ["os.path.isdir", "os.path.exists", "os.makedirs", "os.remove"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove"], ["", "", "def", "on_train_begin", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "self", ".", "verbose", "=", "self", ".", "params", "[", "\"verbose\"", "]", "\n", "save_dir", "=", "self", ".", "save_dir", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "save_dir", ")", ":", "\n", "            ", "if", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "                ", "os", ".", "remove", "(", "save_dir", ")", "\n", "", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.ModelCheckpoint.on_iter_end": [[241, 259], ["os.path.join", "os.path.abspath", "paddle.save", "print", "callbacks.ModelCheckpoint.model.state_dict", "os.path.join", "paddle.save", "paddle.distributed.parallel.ParallelEnv", "callbacks.ModelCheckpoint.optimizer.state_dict", "os.path.join"], "methods", ["None"], ["", "", "def", "on_iter_end", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "        ", "logs", "=", "logs", "or", "{", "}", "\n", "self", ".", "iters_since_last_save", "+=", "1", "\n", "current_save_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "\"iter_{}\"", ".", "format", "(", "iter", ")", ")", "\n", "current_save_dir", "=", "os", ".", "path", ".", "abspath", "(", "current_save_dir", ")", "\n", "#if self.iters_since_last_save % self.period and ParallelEnv().local_rank == 0:", "\n", "#self.iters_since_last_save = 0", "\n", "if", "iter", "%", "self", ".", "period", "==", "0", "and", "ParallelEnv", "(", ")", ".", "local_rank", "==", "0", ":", "\n", "            ", "if", "self", ".", "verbose", ">", "0", ":", "\n", "                ", "print", "(", "\"iter {iter_num}: saving model to {path}\"", ".", "format", "(", "\n", "iter_num", "=", "iter", ",", "path", "=", "current_save_dir", ")", ")", "\n", "\n", "", "paddle", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "current_save_dir", ",", "'model.pdparams'", ")", ")", "\n", "\n", "if", "not", "self", ".", "save_params_only", ":", "\n", "                ", "paddle", ".", "save", "(", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "current_save_dir", ",", "'model.pdopt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.VisualDL.__init__": [[262, 266], ["callbacks.Callback.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "log_dir", "=", "\"./log\"", ",", "freq", "=", "1", ")", ":", "\n", "        ", "super", "(", "VisualDL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "log_dir", "=", "log_dir", "\n", "self", ".", "freq", "=", "freq", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.VisualDL.on_train_begin": [[267, 269], ["visualdl.LogWriter"], "methods", ["None"], ["", "def", "on_train_begin", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "self", ".", "writer", "=", "LogWriter", "(", "self", ".", "log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.VisualDL.on_iter_end": [[270, 277], ["callbacks.VisualDL.writer.flush", "logs.items", "callbacks.VisualDL.writer.add_scalar", "paddle.distributed.parallel.ParallelEnv"], "methods", ["None"], ["", "def", "on_iter_end", "(", "self", ",", "iter", ",", "logs", "=", "None", ")", ":", "\n", "        ", "logs", "=", "logs", "or", "{", "}", "\n", "if", "iter", "%", "self", ".", "freq", "==", "0", "and", "ParallelEnv", "(", ")", ".", "local_rank", "==", "0", ":", "\n", "            ", "for", "k", ",", "v", "in", "logs", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "writer", ".", "add_scalar", "(", "\"Train/{}\"", ".", "format", "(", "k", ")", ",", "v", ",", "iter", ")", "\n", "\n", "", "", "self", ".", "writer", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.callbacks.VisualDL.on_train_end": [[278, 280], ["callbacks.VisualDL.writer.close"], "methods", ["None"], ["", "def", "on_train_end", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "self", ".", "writer", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.data_root_path_warning": [[420, 430], ["os.path.join", "RuntimeError", "os.getcwd", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn"], ["", "def", "_is_meta_type", "(", "self", ",", "item", ":", "Any", ")", "->", "bool", ":", "\n", "        ", "return", "isinstance", "(", "item", ",", "dict", ")", "and", "'type'", "in", "item", "\n", "\n", "", "def", "__str__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "yaml", ".", "dump", "(", "self", ".", "dic", ")", "\n", "\n", "", "@", "property", "\n", "def", "val_transforms", "(", "self", ")", "->", "list", ":", "\n", "        ", "\"\"\"Get val_transform from val_dataset\"\"\"", "\n", "_val_dataset", "=", "self", ".", "val_dataset_config", "\n", "if", "not", "_val_dataset", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.ESPNetV1.__init__": [[41, 91], ["paddle.Layer.__init__", "espnetv1.ESPNetEncoder", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddleseg.models.layers.SyncBatchNorm", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNPReLU", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "espnetv1.BNPReLU", "espnetv1.DilatedResidualBlock", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "espnetv1.BNPReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_channels", "=", "3", ",", "\n", "level2_depth", "=", "2", ",", "\n", "level3_depth", "=", "3", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "ESPNetEncoder", "(", "num_classes", ",", "in_channels", ",", "level2_depth", ",", "\n", "level3_depth", ")", "\n", "\n", "self", ".", "level3_up", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "num_classes", ",", "\n", "num_classes", ",", "\n", "2", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "output_padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "br3", "=", "layers", ".", "SyncBatchNorm", "(", "num_classes", ")", "\n", "self", ".", "level2_proj", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "+", "128", ",", "num_classes", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "combine_l2_l3", "=", "nn", ".", "Sequential", "(", "\n", "BNPReLU", "(", "2", "*", "num_classes", ")", ",", "\n", "DilatedResidualBlock", "(", "\n", "2", "*", "num_classes", ",", "num_classes", ",", "residual", "=", "False", ")", ",", ")", "\n", "self", ".", "level2_up", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2DTranspose", "(", "\n", "num_classes", ",", "\n", "num_classes", ",", "\n", "2", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "output_padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "BNPReLU", "(", "num_classes", ")", ",", ")", "\n", "self", ".", "out_proj", "=", "layers", ".", "ConvBNPReLU", "(", "\n", "16", "+", "in_channels", "+", "num_classes", ",", "\n", "num_classes", ",", "\n", "3", ",", "\n", "padding", "=", "'same'", ",", "\n", "stride", "=", "1", ")", "\n", "self", ".", "out_up", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "num_classes", ",", "\n", "num_classes", ",", "\n", "2", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "output_padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.ESPNetV1.init_weight": [[92, 95], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.ESPNetV1.forward": [[96, 106], ["espnetv1.ESPNetV1.encoder", "espnetv1.ESPNetV1.level3_up", "espnetv1.ESPNetV1.combine_l2_l3", "espnetv1.ESPNetV1.level2_up", "espnetv1.ESPNetV1.out_proj", "espnetv1.ESPNetV1.out_up", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "p1", ",", "p2", ",", "p3", "=", "self", ".", "encoder", "(", "x", ")", "\n", "up_p3", "=", "self", ".", "level3_up", "(", "p3", ")", "\n", "\n", "combine", "=", "self", ".", "combine_l2_l3", "(", "paddle", ".", "concat", "(", "[", "up_p3", ",", "p2", "]", ",", "axis", "=", "1", ")", ")", "\n", "up_p2", "=", "self", ".", "level2_up", "(", "combine", ")", "\n", "\n", "combine", "=", "self", ".", "out_proj", "(", "paddle", ".", "concat", "(", "[", "up_p2", ",", "p1", "]", ",", "axis", "=", "1", ")", ")", "\n", "out", "=", "self", ".", "out_up", "(", "combine", ")", "\n", "return", "[", "out", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.BNPReLU.__init__": [[109, 113], ["paddle.Layer.__init__", "paddleseg.models.layers.SyncBatchNorm", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "layers", ".", "SyncBatchNorm", "(", "channels", ")", "\n", "self", ".", "act", "=", "nn", ".", "PReLU", "(", "channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.BNPReLU.forward": [[114, 118], ["espnetv1.BNPReLU.bn", "espnetv1.BNPReLU.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.DownSampler.__init__": [[128, 171], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "branch_channels", "=", "out_channels", "//", "5", "\n", "remain_channels", "=", "out_channels", "-", "branch_channels", "*", "4", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "branch_channels", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv1", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "remain_channels", ",", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv2", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "\n", "branch_channels", ",", "\n", "3", ",", "\n", "padding", "=", "2", ",", "\n", "dilation", "=", "2", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv4", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "\n", "branch_channels", ",", "\n", "3", ",", "\n", "padding", "=", "4", ",", "\n", "dilation", "=", "4", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv8", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "\n", "branch_channels", ",", "\n", "3", ",", "\n", "padding", "=", "8", ",", "\n", "dilation", "=", "8", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv16", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "\n", "branch_channels", ",", "\n", "3", ",", "\n", "padding", "=", "16", ",", "\n", "dilation", "=", "16", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn", "=", "layers", ".", "SyncBatchNorm", "(", "out_channels", ")", "\n", "self", ".", "act", "=", "nn", ".", "PReLU", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.DownSampler.forward": [[172, 189], ["espnetv1.DownSampler.conv1", "espnetv1.DownSampler.d_conv1", "espnetv1.DownSampler.d_conv2", "espnetv1.DownSampler.d_conv4", "espnetv1.DownSampler.d_conv8", "espnetv1.DownSampler.d_conv16", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "espnetv1.DownSampler.bn", "espnetv1.DownSampler.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "d1", "=", "self", ".", "d_conv1", "(", "x", ")", "\n", "d2", "=", "self", ".", "d_conv2", "(", "x", ")", "\n", "d4", "=", "self", ".", "d_conv4", "(", "x", ")", "\n", "d8", "=", "self", ".", "d_conv8", "(", "x", ")", "\n", "d16", "=", "self", ".", "d_conv16", "(", "x", ")", "\n", "\n", "feat1", "=", "d2", "\n", "feat2", "=", "feat1", "+", "d4", "\n", "feat3", "=", "feat2", "+", "d8", "\n", "feat4", "=", "feat3", "+", "d16", "\n", "\n", "feat", "=", "paddle", ".", "concat", "(", "[", "d1", ",", "feat1", ",", "feat2", ",", "feat3", ",", "feat4", "]", ",", "axis", "=", "1", ")", "\n", "out", "=", "self", ".", "bn", "(", "feat", ")", "\n", "out", "=", "self", ".", "act", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.DilatedResidualBlock.__init__": [[200, 238], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "espnetv1.BNPReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "residual", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "branch_channels", "=", "out_channels", "//", "5", "\n", "remain_channels", "=", "out_channels", "-", "branch_channels", "*", "4", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "branch_channels", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv1", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "remain_channels", ",", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv2", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "\n", "branch_channels", ",", "\n", "3", ",", "\n", "padding", "=", "2", ",", "\n", "dilation", "=", "2", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv4", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "\n", "branch_channels", ",", "\n", "3", ",", "\n", "padding", "=", "4", ",", "\n", "dilation", "=", "4", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv8", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "\n", "branch_channels", ",", "\n", "3", ",", "\n", "padding", "=", "8", ",", "\n", "dilation", "=", "8", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "d_conv16", "=", "nn", ".", "Conv2D", "(", "\n", "branch_channels", ",", "\n", "branch_channels", ",", "\n", "3", ",", "\n", "padding", "=", "16", ",", "\n", "dilation", "=", "16", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "bn", "=", "BNPReLU", "(", "out_channels", ")", "\n", "self", ".", "residual", "=", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.DilatedResidualBlock.forward": [[239, 258], ["espnetv1.DilatedResidualBlock.conv1", "espnetv1.DilatedResidualBlock.d_conv1", "espnetv1.DilatedResidualBlock.d_conv2", "espnetv1.DilatedResidualBlock.d_conv4", "espnetv1.DilatedResidualBlock.d_conv8", "espnetv1.DilatedResidualBlock.d_conv16", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "espnetv1.DilatedResidualBlock.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_proj", "=", "self", ".", "conv1", "(", "x", ")", "\n", "d1", "=", "self", ".", "d_conv1", "(", "x_proj", ")", "\n", "d2", "=", "self", ".", "d_conv2", "(", "x_proj", ")", "\n", "d4", "=", "self", ".", "d_conv4", "(", "x_proj", ")", "\n", "d8", "=", "self", ".", "d_conv8", "(", "x_proj", ")", "\n", "d16", "=", "self", ".", "d_conv16", "(", "x_proj", ")", "\n", "\n", "feat1", "=", "d2", "\n", "feat2", "=", "feat1", "+", "d4", "\n", "feat3", "=", "feat2", "+", "d8", "\n", "feat4", "=", "feat3", "+", "d16", "\n", "\n", "feat", "=", "paddle", ".", "concat", "(", "[", "d1", ",", "feat1", ",", "feat2", ",", "feat3", ",", "feat4", "]", ",", "axis", "=", "1", ")", "\n", "\n", "if", "self", ".", "residual", ":", "\n", "            ", "feat", "=", "feat", "+", "x", "\n", "", "out", "=", "self", ".", "bn", "(", "feat", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.ESPNetEncoder.__init__": [[270, 292], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNPReLU", "espnetv1.BNPReLU", "paddleseg.models.layers.ConvBNPReLU", "espnetv1.DownSampler", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "espnetv1.BNPReLU", "paddleseg.models.layers.ConvBNPReLU", "espnetv1.DownSampler", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "espnetv1.BNPReLU", "paddleseg.models.layers.ConvBNPReLU", "espnetv1.DilatedResidualBlock", "espnetv1.DilatedResidualBlock", "range", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_channels", "=", "3", ",", "\n", "level2_depth", "=", "5", ",", "\n", "level3_depth", "=", "3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "level1", "=", "layers", ".", "ConvBNPReLU", "(", "\n", "in_channels", ",", "16", ",", "3", ",", "padding", "=", "'same'", ",", "stride", "=", "2", ")", "\n", "self", ".", "br1", "=", "BNPReLU", "(", "in_channels", "+", "16", ")", "\n", "self", ".", "proj1", "=", "layers", ".", "ConvBNPReLU", "(", "in_channels", "+", "16", ",", "num_classes", ",", "1", ")", "\n", "\n", "self", ".", "level2_0", "=", "DownSampler", "(", "in_channels", "+", "16", ",", "64", ")", "\n", "self", ".", "level2", "=", "nn", ".", "Sequential", "(", "\n", "*", "[", "DilatedResidualBlock", "(", "64", ",", "64", ")", "for", "i", "in", "range", "(", "level2_depth", ")", "]", ")", "\n", "self", ".", "br2", "=", "BNPReLU", "(", "in_channels", "+", "128", ")", "\n", "self", ".", "proj2", "=", "layers", ".", "ConvBNPReLU", "(", "in_channels", "+", "128", ",", "num_classes", ",", "1", ")", "\n", "\n", "self", ".", "level3_0", "=", "DownSampler", "(", "in_channels", "+", "128", ",", "128", ")", "\n", "self", ".", "level3", "=", "nn", ".", "Sequential", "(", "\n", "*", "[", "DilatedResidualBlock", "(", "128", ",", "128", ")", "for", "i", "in", "range", "(", "level3_depth", ")", "]", ")", "\n", "self", ".", "br3", "=", "BNPReLU", "(", "256", ")", "\n", "self", ".", "proj3", "=", "layers", ".", "ConvBNPReLU", "(", "256", ",", "num_classes", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnetv1.ESPNetEncoder.forward": [[293, 314], ["espnetv1.ESPNetEncoder.level1", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "espnetv1.ESPNetEncoder.br1", "espnetv1.ESPNetEncoder.proj1", "espnetv1.ESPNetEncoder.level2_0", "espnetv1.ESPNetEncoder.level2", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "espnetv1.ESPNetEncoder.br2", "espnetv1.ESPNetEncoder.proj2", "espnetv1.ESPNetEncoder.level3_0", "espnetv1.ESPNetEncoder.level3", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "espnetv1.ESPNetEncoder.br3", "espnetv1.ESPNetEncoder.proj3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "f1", "=", "self", ".", "level1", "(", "x", ")", "\n", "down2", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "output_size", "=", "f1", ".", "shape", "[", "2", ":", "]", ")", "\n", "feat1", "=", "paddle", ".", "concat", "(", "[", "f1", ",", "down2", "]", ",", "axis", "=", "1", ")", "\n", "feat1", "=", "self", ".", "br1", "(", "feat1", ")", "\n", "p1", "=", "self", ".", "proj1", "(", "feat1", ")", "\n", "\n", "f2_res", "=", "self", ".", "level2_0", "(", "feat1", ")", "\n", "f2", "=", "self", ".", "level2", "(", "f2_res", ")", "\n", "down4", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "output_size", "=", "f2", ".", "shape", "[", "2", ":", "]", ")", "\n", "feat2", "=", "paddle", ".", "concat", "(", "[", "f2", ",", "f2_res", ",", "down4", "]", ",", "axis", "=", "1", ")", "\n", "feat2", "=", "self", ".", "br2", "(", "feat2", ")", "\n", "p2", "=", "self", ".", "proj2", "(", "feat2", ")", "\n", "\n", "f3_res", "=", "self", ".", "level3_0", "(", "feat2", ")", "\n", "f3", "=", "self", ".", "level3", "(", "f3_res", ")", "\n", "feat3", "=", "paddle", ".", "concat", "(", "[", "f3", ",", "f3_res", "]", ",", "axis", "=", "1", ")", "\n", "feat3", "=", "self", ".", "br3", "(", "feat3", ")", "\n", "p3", "=", "self", ".", "proj3", "(", "feat3", ")", "\n", "\n", "return", "p1", ",", "p2", ",", "p3", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.HarDNet.__init__": [[44, 97], ["paddle.Layer.__init__", "len", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "hardnet.Encoder", "hardnet.HarDNet.encoder.get_skip_channels", "hardnet.HarDNet.encoder.get_out_channels", "hardnet.Decoder", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "hardnet.HarDNet.init_weight", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "hardnet.HarDNet.decoder.get_out_channels"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Encoder.get_skip_channels", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Decoder.get_out_channels", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Decoder.get_out_channels"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "stem_channels", "=", "(", "16", ",", "24", ",", "32", ",", "48", ")", ",", "\n", "ch_list", "=", "(", "64", ",", "96", ",", "160", ",", "224", ",", "320", ")", ",", "\n", "grmul", "=", "1.7", ",", "\n", "gr", "=", "(", "10", ",", "16", ",", "18", ",", "24", ",", "32", ")", ",", "\n", "n_layers", "=", "(", "4", ",", "4", ",", "8", ",", "8", ",", "8", ")", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "encoder_blks_num", "=", "len", "(", "n_layers", ")", "\n", "decoder_blks_num", "=", "encoder_blks_num", "-", "1", "\n", "encoder_in_channels", "=", "stem_channels", "[", "3", "]", "\n", "\n", "self", ".", "stem", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "3", ",", "stem_channels", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "stem_channels", "[", "0", "]", ",", "\n", "stem_channels", "[", "1", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "stem_channels", "[", "1", "]", ",", "\n", "stem_channels", "[", "2", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "stem_channels", "[", "2", "]", ",", "\n", "stem_channels", "[", "3", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n", "self", ".", "encoder", "=", "Encoder", "(", "encoder_blks_num", ",", "encoder_in_channels", ",", "ch_list", ",", "\n", "gr", ",", "grmul", ",", "n_layers", ")", "\n", "\n", "skip_connection_channels", "=", "self", ".", "encoder", ".", "get_skip_channels", "(", ")", "\n", "decoder_in_channels", "=", "self", ".", "encoder", ".", "get_out_channels", "(", ")", "\n", "\n", "self", ".", "decoder", "=", "Decoder", "(", "decoder_blks_num", ",", "decoder_in_channels", ",", "\n", "skip_connection_channels", ",", "gr", ",", "grmul", ",", "n_layers", ",", "\n", "align_corners", ")", "\n", "\n", "self", ".", "cls_head", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "self", ".", "decoder", ".", "get_out_channels", "(", ")", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.HarDNet.forward": [[98, 110], ["hardnet.HarDNet.stem", "hardnet.HarDNet.encoder", "hardnet.HarDNet.decoder", "hardnet.HarDNet.cls_head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "input_shape", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", "\n", "x", "=", "self", ".", "stem", "(", "x", ")", "\n", "x", ",", "skip_connections", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", "=", "self", ".", "decoder", "(", "x", ",", "skip_connections", ")", "\n", "logit", "=", "self", ".", "cls_head", "(", "x", ")", "\n", "logit", "=", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "size", "=", "input_shape", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "return", "[", "logit", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.HarDNet.init_weight": [[111, 114], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Encoder.__init__": [[128, 149], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "hardnet.HarDBlock", "hardnet.HarDBlock.get_out_ch", "hardnet.Encoder.skip_connection_channels.append", "hardnet.Encoder.blks.append", "hardnet.Encoder.blks.append", "hardnet.Encoder.shortcut_layers.append", "paddleseg.models.layers.ConvBNReLU", "hardnet.Encoder.blks.append", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.HarDBlock.get_out_ch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "n_blocks", ",", "in_channels", ",", "ch_list", ",", "gr", ",", "grmul", ",", "n_layers", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "skip_connection_channels", "=", "[", "]", "\n", "self", ".", "shortcut_layers", "=", "[", "]", "\n", "self", ".", "blks", "=", "nn", ".", "LayerList", "(", ")", "\n", "ch", "=", "in_channels", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "blk", "=", "HarDBlock", "(", "ch", ",", "gr", "[", "i", "]", ",", "grmul", ",", "n_layers", "[", "i", "]", ")", "\n", "ch", "=", "blk", ".", "get_out_ch", "(", ")", "\n", "self", ".", "skip_connection_channels", ".", "append", "(", "ch", ")", "\n", "self", ".", "blks", ".", "append", "(", "blk", ")", "\n", "if", "i", "<", "n_blocks", "-", "1", ":", "\n", "                ", "self", ".", "shortcut_layers", ".", "append", "(", "len", "(", "self", ".", "blks", ")", "-", "1", ")", "\n", "", "self", ".", "blks", ".", "append", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "ch", ",", "ch_list", "[", "i", "]", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n", "ch", "=", "ch_list", "[", "i", "]", "\n", "if", "i", "<", "n_blocks", "-", "1", ":", "\n", "                ", "self", ".", "blks", ".", "append", "(", "nn", ".", "AvgPool2D", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "", "", "self", ".", "out_channels", "=", "ch", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Encoder.forward": [[150, 157], ["range", "len", "skip_connections.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "skip_connections", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "blks", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "blks", "[", "i", "]", "(", "x", ")", "\n", "if", "i", "in", "self", ".", "shortcut_layers", ":", "\n", "                ", "skip_connections", ".", "append", "(", "x", ")", "\n", "", "", "return", "x", ",", "skip_connections", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Encoder.get_skip_channels": [[158, 160], ["None"], "methods", ["None"], ["", "def", "get_skip_channels", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "skip_connection_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Encoder.get_out_channels": [[161, 163], ["None"], "methods", ["None"], ["", "def", "get_out_channels", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "out_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Decoder.__init__": [[177, 212], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "paddleseg.models.layers.ConvBNReLU", "hardnet.HarDBlock", "hardnet.Decoder.conv1x1_up.append", "hardnet.Decoder.dense_blocks_up.append", "hardnet.HarDBlock.get_out_ch"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.HarDBlock.get_out_ch"], ["def", "__init__", "(", "self", ",", "\n", "n_blocks", ",", "\n", "in_channels", ",", "\n", "skip_connection_channels", ",", "\n", "gr", ",", "\n", "grmul", ",", "\n", "n_layers", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "prev_block_channels", "=", "in_channels", "\n", "self", ".", "n_blocks", "=", "n_blocks", "\n", "self", ".", "dense_blocks_up", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "conv1x1_up", "=", "nn", ".", "LayerList", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_blocks", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "            ", "cur_channels_count", "=", "prev_block_channels", "+", "skip_connection_channels", "[", "\n", "i", "]", "\n", "conv1x1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "cur_channels_count", ",", "\n", "cur_channels_count", "//", "2", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "blk", "=", "HarDBlock", "(", "\n", "base_channels", "=", "cur_channels_count", "//", "2", ",", "\n", "growth_rate", "=", "gr", "[", "i", "]", ",", "\n", "grmul", "=", "grmul", ",", "\n", "n_layers", "=", "n_layers", "[", "i", "]", ")", "\n", "\n", "self", ".", "conv1x1_up", ".", "append", "(", "conv1x1", ")", "\n", "self", ".", "dense_blocks_up", ".", "append", "(", "blk", ")", "\n", "\n", "prev_block_channels", "=", "blk", ".", "get_out_ch", "(", ")", "\n", "\n", "", "self", ".", "out_channels", "=", "prev_block_channels", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Decoder.forward": [[213, 225], ["range", "skip_connections.pop", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ",", "skip_connections", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "n_blocks", ")", ":", "\n", "            ", "skip", "=", "skip_connections", ".", "pop", "(", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "size", "=", "paddle", ".", "shape", "(", "skip", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "x", ",", "skip", "]", ",", "axis", "=", "1", ")", "\n", "x", "=", "self", ".", "conv1x1_up", "[", "i", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "dense_blocks_up", "[", "i", "]", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.Decoder.get_out_channels": [[226, 228], ["None"], "methods", ["None"], ["", "def", "get_out_channels", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "out_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.HarDBlock.__init__": [[241, 263], ["paddle.Layer.__init__", "range", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "hardnet.get_link", "hardnet.HarDBlock.links.append", "layers_.append", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.get_link", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "base_channels", ",", "\n", "growth_rate", ",", "\n", "grmul", ",", "\n", "n_layers", ",", "\n", "keepBase", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "keepBase", "=", "keepBase", "\n", "self", ".", "links", "=", "[", "]", "\n", "layers_", "=", "[", "]", "\n", "self", ".", "out_channels", "=", "0", "\n", "for", "i", "in", "range", "(", "n_layers", ")", ":", "\n", "            ", "outch", ",", "inch", ",", "link", "=", "get_link", "(", "i", "+", "1", ",", "base_channels", ",", "growth_rate", ",", "\n", "grmul", ")", "\n", "\n", "self", ".", "links", ".", "append", "(", "link", ")", "\n", "layers_", ".", "append", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "inch", ",", "outch", ",", "kernel_size", "=", "3", ",", "bias_attr", "=", "False", ")", ")", "\n", "if", "(", "i", "%", "2", "==", "0", ")", "or", "(", "i", "==", "n_layers", "-", "1", ")", ":", "\n", "                ", "self", ".", "out_channels", "+=", "outch", "\n", "", "", "self", ".", "layers", "=", "nn", ".", "LayerList", "(", "layers_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.HarDBlock.forward": [[264, 287], ["range", "len", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "len", "layers_.append", "tin.append", "len", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "out_.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layers_", "=", "[", "x", "]", "\n", "for", "layer", "in", "range", "(", "len", "(", "self", ".", "layers", ")", ")", ":", "\n", "            ", "link", "=", "self", ".", "links", "[", "layer", "]", "\n", "tin", "=", "[", "]", "\n", "for", "i", "in", "link", ":", "\n", "                ", "tin", ".", "append", "(", "layers_", "[", "i", "]", ")", "\n", "", "if", "len", "(", "tin", ")", ">", "1", ":", "\n", "                ", "x", "=", "paddle", ".", "concat", "(", "tin", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tin", "[", "0", "]", "\n", "", "out", "=", "self", ".", "layers", "[", "layer", "]", "(", "x", ")", "\n", "layers_", ".", "append", "(", "out", ")", "\n", "\n", "", "t", "=", "len", "(", "layers_", ")", "\n", "out_", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "t", ")", ":", "\n", "            ", "if", "(", "i", "==", "0", "and", "self", ".", "keepBase", ")", "or", "(", "i", "==", "t", "-", "1", ")", "or", "(", "i", "%", "2", "==", "1", ")", ":", "\n", "                ", "out_", ".", "append", "(", "layers_", "[", "i", "]", ")", "\n", "", "", "out", "=", "paddle", ".", "concat", "(", "out_", ",", "1", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.HarDBlock.get_out_ch": [[288, 290], ["None"], "methods", ["None"], ["", "def", "get_out_ch", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "out_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.get_link": [[292, 310], ["range", "int", "hardnet.get_link", "link.insert", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hardnet.get_link"], ["", "", "def", "get_link", "(", "layer", ",", "base_ch", ",", "growth_rate", ",", "grmul", ")", ":", "\n", "    ", "if", "layer", "==", "0", ":", "\n", "        ", "return", "base_ch", ",", "0", ",", "[", "]", "\n", "", "out_channels", "=", "growth_rate", "\n", "link", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "dv", "=", "2", "**", "i", "\n", "if", "layer", "%", "dv", "==", "0", ":", "\n", "            ", "k", "=", "layer", "-", "dv", "\n", "link", ".", "insert", "(", "0", ",", "k", ")", "\n", "if", "i", ">", "0", ":", "\n", "                ", "out_channels", "*=", "grmul", "\n", "", "", "", "out_channels", "=", "int", "(", "int", "(", "out_channels", "+", "1", ")", "/", "2", ")", "*", "2", "\n", "in_channels", "=", "0", "\n", "for", "i", "in", "link", ":", "\n", "        ", "ch", ",", "_", ",", "_", "=", "get_link", "(", "i", ",", "base_ch", ",", "growth_rate", ",", "grmul", ")", "\n", "in_channels", "+=", "ch", "\n", "", "return", "out_channels", ",", "in_channels", ",", "link", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gcnet.GCNet.__init__": [[45, 66], ["paddle.Layer.__init__", "gcnet.GCNetHead", "gcnet.GCNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "2", ",", "3", ")", ",", "\n", "gc_channels", "=", "512", ",", "\n", "ratio", "=", "0.25", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "head", "=", "GCNetHead", "(", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "gc_channels", ",", "ratio", ",", "enable_auxiliary_loss", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gcnet.GCNet.forward": [[67, 76], ["gcnet.GCNet.backbone", "gcnet.GCNet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gcnet.GCNet.init_weight": [[78, 81], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gcnet.GCNetHead.__init__": [[98, 143], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "gcnet.GlobalContextBlock", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.AuxLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone_indices", ",", "\n", "backbone_channels", ",", "\n", "gc_channels", ",", "\n", "ratio", ",", "\n", "enable_auxiliary_loss", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "in_channels", "=", "backbone_channels", "[", "1", "]", "\n", "self", ".", "conv_bn_relu1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "gc_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "gc_block", "=", "GlobalContextBlock", "(", "\n", "gc_channels", "=", "gc_channels", ",", "in_channels", "=", "gc_channels", ",", "ratio", "=", "ratio", ")", "\n", "\n", "self", ".", "conv_bn_relu2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "gc_channels", ",", "\n", "out_channels", "=", "gc_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv_bn_relu3", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "+", "gc_channels", ",", "\n", "out_channels", "=", "gc_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.1", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "gc_channels", ",", "out_channels", "=", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", "\n", "if", "enable_auxiliary_loss", ":", "\n", "            ", "self", ".", "auxlayer", "=", "layers", ".", "AuxLayer", "(", "\n", "in_channels", "=", "backbone_channels", "[", "0", "]", ",", "\n", "inter_channels", "=", "backbone_channels", "[", "0", "]", "//", "4", ",", "\n", "out_channels", "=", "num_classes", ")", "\n", "\n", "", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gcnet.GCNetHead.forward": [[144, 165], ["gcnet.GCNetHead.conv_bn_relu1", "gcnet.GCNetHead.gc_block", "gcnet.GCNetHead.conv_bn_relu2", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "gcnet.GCNetHead.conv_bn_relu3", "gcnet.GCNetHead.dropout", "gcnet.GCNetHead.conv", "logit_list.append", "gcnet.GCNetHead.auxlayer", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "1", "]", "]", "\n", "\n", "output", "=", "self", ".", "conv_bn_relu1", "(", "x", ")", "\n", "output", "=", "self", ".", "gc_block", "(", "output", ")", "\n", "output", "=", "self", ".", "conv_bn_relu2", "(", "output", ")", "\n", "\n", "output", "=", "paddle", ".", "concat", "(", "[", "x", ",", "output", "]", ",", "axis", "=", "1", ")", "\n", "output", "=", "self", ".", "conv_bn_relu3", "(", "output", ")", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "output", ")", "\n", "logit", "=", "self", ".", "conv", "(", "output", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "low_level_feat", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "auxiliary_logit", "=", "self", ".", "auxlayer", "(", "low_level_feat", ")", "\n", "logit_list", ".", "append", "(", "auxiliary_logit", ")", "\n", "\n", "", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gcnet.GlobalContextBlock.__init__": [[176, 197], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Softmax", "paddle.Softmax", "paddle.Softmax", "int", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "gc_channels", ",", "in_channels", ",", "ratio", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gc_channels", "=", "gc_channels", "\n", "\n", "self", ".", "conv_mask", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "1", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "axis", "=", "2", ")", "\n", "\n", "inter_channels", "=", "int", "(", "in_channels", "*", "ratio", ")", "\n", "self", ".", "channel_add_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "LayerNorm", "(", "normalized_shape", "=", "[", "inter_channels", ",", "1", ",", "1", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "in_channels", ",", "\n", "kernel_size", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gcnet.GlobalContextBlock.global_context_block": [[198, 218], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "gcnet.GlobalContextBlock.conv_mask", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "gcnet.GlobalContextBlock.softmax", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "global_context_block", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "\n", "# [N, C, H * W]", "\n", "input_x", "=", "paddle", ".", "reshape", "(", "x", ",", "shape", "=", "[", "0", ",", "self", ".", "gc_channels", ",", "-", "1", "]", ")", "\n", "# [N, 1, C, H * W]", "\n", "input_x", "=", "paddle", ".", "unsqueeze", "(", "input_x", ",", "axis", "=", "1", ")", "\n", "# [N, 1, H, W]", "\n", "context_mask", "=", "self", ".", "conv_mask", "(", "x", ")", "\n", "# [N, 1, H * W]", "\n", "context_mask", "=", "paddle", ".", "reshape", "(", "context_mask", ",", "shape", "=", "[", "0", ",", "1", ",", "-", "1", "]", ")", "\n", "context_mask", "=", "self", ".", "softmax", "(", "context_mask", ")", "\n", "# [N, 1, H * W, 1]", "\n", "context_mask", "=", "paddle", ".", "unsqueeze", "(", "context_mask", ",", "axis", "=", "-", "1", ")", "\n", "# [N, 1, C, 1]", "\n", "context", "=", "paddle", ".", "matmul", "(", "input_x", ",", "context_mask", ")", "\n", "# [N, C, 1, 1]", "\n", "context", "=", "paddle", ".", "reshape", "(", "context", ",", "shape", "=", "[", "0", ",", "self", ".", "gc_channels", ",", "1", ",", "1", "]", ")", "\n", "\n", "return", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gcnet.GlobalContextBlock.forward": [[219, 224], ["gcnet.GlobalContextBlock.global_context_block", "gcnet.GlobalContextBlock.channel_add_conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gcnet.GlobalContextBlock.global_context_block"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "context", "=", "self", ".", "global_context_block", "(", "x", ")", "\n", "channel_add_term", "=", "self", ".", "channel_add_conv", "(", "context", ")", "\n", "out", "=", "x", "+", "channel_add_term", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pspnet.PSPNet.__init__": [[45, 67], ["paddle.Layer.__init__", "pspnet.PSPNetHead", "pspnet.PSPNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "2", ",", "3", ")", ",", "\n", "pp_out_channels", "=", "1024", ",", "\n", "bin_sizes", "=", "(", "1", ",", "2", ",", "3", ",", "6", ")", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "head", "=", "PSPNetHead", "(", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "pp_out_channels", ",", "bin_sizes", ",", "\n", "enable_auxiliary_loss", ",", "align_corners", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pspnet.PSPNet.forward": [[68, 77], ["pspnet.PSPNet.backbone", "pspnet.PSPNet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pspnet.PSPNet.init_weight": [[79, 82], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pspnet.PSPNetHead.__init__": [[104, 133], ["paddle.Layer.__init__", "paddleseg.models.layers.PPModule", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.AuxLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "pp_out_channels", ",", "bin_sizes", ",", "enable_auxiliary_loss", ",", "\n", "align_corners", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "\n", "self", ".", "psp_module", "=", "layers", ".", "PPModule", "(", "\n", "in_channels", "=", "backbone_channels", "[", "1", "]", ",", "\n", "out_channels", "=", "pp_out_channels", ",", "\n", "bin_sizes", "=", "bin_sizes", ",", "\n", "dim_reduction", "=", "True", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.1", ")", "# dropout_prob", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "pp_out_channels", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "kernel_size", "=", "1", ")", "\n", "\n", "if", "enable_auxiliary_loss", ":", "\n", "            ", "self", ".", "auxlayer", "=", "layers", ".", "AuxLayer", "(", "\n", "in_channels", "=", "backbone_channels", "[", "0", "]", ",", "\n", "inter_channels", "=", "backbone_channels", "[", "0", "]", "//", "4", ",", "\n", "out_channels", "=", "num_classes", ")", "\n", "\n", "", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pspnet.PSPNetHead.forward": [[134, 148], ["pspnet.PSPNetHead.psp_module", "pspnet.PSPNetHead.dropout", "pspnet.PSPNetHead.conv", "logit_list.append", "pspnet.PSPNetHead.auxlayer", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "1", "]", "]", "\n", "x", "=", "self", ".", "psp_module", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "logit", "=", "self", ".", "conv", "(", "x", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "auxiliary_feat", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "auxiliary_logit", "=", "self", ".", "auxlayer", "(", "auxiliary_feat", ")", "\n", "logit_list", ".", "append", "(", "auxiliary_logit", ")", "\n", "\n", "", "return", "logit_list", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.ESPNetV2.__init__": [[43, 91], ["paddle.Layer.__init__", "espnet.EESPNetBackbone", "paddleseg.models.layers.ConvBNPReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "espnet.BNPReLU", "paddleseg.models.layers.ConvBNPReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "espnet.ESPNetV2.init_weight", "espnet.EESP", "espnet.PSPModule", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_channels", "=", "3", ",", "\n", "scale", "=", "1.0", ",", "\n", "drop_prob", "=", "0.1", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "EESPNetBackbone", "(", "in_channels", ",", "drop_prob", ",", "scale", ")", "\n", "self", ".", "in_channels", "=", "self", ".", "backbone", ".", "out_channels", "\n", "self", ".", "proj_l4_c", "=", "layers", ".", "ConvBNPReLU", "(", "\n", "self", ".", "in_channels", "[", "3", "]", ",", "\n", "self", ".", "in_channels", "[", "2", "]", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "psp_size", "=", "2", "*", "self", ".", "in_channels", "[", "2", "]", "\n", "self", ".", "eesp_psp", "=", "nn", ".", "Sequential", "(", "\n", "EESP", "(", "\n", "psp_size", ",", "\n", "psp_size", "//", "2", ",", "\n", "stride", "=", "1", ",", "\n", "branches", "=", "4", ",", "\n", "kernel_size_maximum", "=", "7", ")", ",", "\n", "PSPModule", "(", "psp_size", "//", "2", ",", "psp_size", "//", "2", ")", ",", ")", "\n", "\n", "self", ".", "project_l3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout2D", "(", "p", "=", "drop_prob", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "psp_size", "//", "2", ",", "num_classes", ",", "1", ",", "1", ",", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "act_l3", "=", "BNPReLU", "(", "num_classes", ")", "\n", "self", ".", "project_l2", "=", "layers", ".", "ConvBNPReLU", "(", "\n", "self", ".", "in_channels", "[", "1", "]", "+", "num_classes", ",", "\n", "num_classes", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "project_l1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout2D", "(", "p", "=", "drop_prob", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "self", ".", "in_channels", "[", "0", "]", "+", "num_classes", ",", "\n", "num_classes", ",", "\n", "1", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.ESPNetV2.init_weight": [[92, 95], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.ESPNetV2.hierarchical_upsample": [[96, 101], ["range", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "", "def", "hierarchical_upsample", "(", "self", ",", "x", ",", "factor", "=", "3", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "factor", ")", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.ESPNetV2.forward": [[102, 136], ["espnet.ESPNetV2.backbone", "espnet.ESPNetV2.proj_l4_c", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "espnet.ESPNetV2.eesp_psp", "espnet.ESPNetV2.project_l3", "espnet.ESPNetV2.act_l3", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "espnet.ESPNetV2.project_l2", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "espnet.ESPNetV2.project_l1", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "espnet.ESPNetV2.hierarchical_upsample", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.ESPNetV2.hierarchical_upsample"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_l1", ",", "out_l2", ",", "out_l3", ",", "out_l4", "=", "self", ".", "backbone", "(", "x", ")", "\n", "\n", "out_l4_proj", "=", "self", ".", "proj_l4_c", "(", "out_l4", ")", "\n", "l4_to_l3", "=", "F", ".", "interpolate", "(", "\n", "out_l4_proj", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "merged_l3", "=", "self", ".", "eesp_psp", "(", "paddle", ".", "concat", "(", "[", "out_l3", ",", "l4_to_l3", "]", ",", "axis", "=", "1", ")", ")", "\n", "proj_merge_l3", "=", "self", ".", "project_l3", "(", "merged_l3", ")", "\n", "proj_merge_l3", "=", "self", ".", "act_l3", "(", "proj_merge_l3", ")", "\n", "\n", "l3_to_l2", "=", "F", ".", "interpolate", "(", "\n", "proj_merge_l3", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "merged_l2", "=", "self", ".", "project_l2", "(", "paddle", ".", "concat", "(", "[", "out_l2", ",", "l3_to_l2", "]", ",", "axis", "=", "1", ")", ")", "\n", "\n", "l2_to_l1", "=", "F", ".", "interpolate", "(", "\n", "merged_l2", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "merged_l1", "=", "self", ".", "project_l1", "(", "paddle", ".", "concat", "(", "[", "out_l1", ",", "l2_to_l1", "]", ",", "axis", "=", "1", ")", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "merged_l1", ",", "\n", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", ",", "\n", "self", ".", "hierarchical_upsample", "(", "proj_merge_l3", ")", ",", "\n", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "merged_l1", ",", "\n", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.BNPReLU.__init__": [[140, 149], ["paddle.Layer.__init__", "paddleseg.models.layers.SyncBatchNorm", "paddleseg.models.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "out_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "'data_format'", "in", "kwargs", ":", "\n", "            ", "data_format", "=", "kwargs", "[", "'data_format'", "]", "\n", "", "else", ":", "\n", "            ", "data_format", "=", "'NCHW'", "\n", "", "self", ".", "_batch_norm", "=", "layers", ".", "SyncBatchNorm", "(", "\n", "out_channels", ",", "data_format", "=", "data_format", ")", "\n", "self", ".", "_prelu", "=", "layers", ".", "Activation", "(", "\"prelu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.BNPReLU.forward": [[150, 154], ["espnet.BNPReLU._batch_norm", "espnet.BNPReLU._prelu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "x", "=", "self", ".", "_prelu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.EESP.__init__": [[169, 237], ["paddle.Layer.__init__", "int", "paddleseg.models.layers.ConvBNPReLU", "range", "espnet.EESP.kernel_sizes.sort", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "paddleseg.models.layers.ConvBN", "espnet.BNPReLU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "RuntimeError", "espnet.EESP.kernel_sizes.append", "espnet.EESP.spp_modules.append", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "stride", "=", "1", ",", "\n", "branches", "=", "4", ",", "\n", "kernel_size_maximum", "=", "7", ",", "\n", "down_method", "=", "'esp'", ")", ":", "\n", "        ", "super", "(", "EESP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "out_channels", "%", "branches", "!=", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"The out_channes for EESP should be factorized by branches, but out_channels={} cann't be factorized by branches={}\"", "\n", ".", "format", "(", "out_channels", ",", "branches", ")", ")", "\n", "", "assert", "down_method", "in", "[", "\n", "'avg'", ",", "'esp'", "\n", "]", ",", "\"The down_method for EESP only support 'avg' or 'esp', but got down_method={}\"", ".", "format", "(", "\n", "down_method", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "in_branch_channels", "=", "int", "(", "out_channels", "/", "branches", ")", "\n", "self", ".", "group_conv_in", "=", "layers", ".", "ConvBNPReLU", "(", "\n", "in_channels", ",", "\n", "in_branch_channels", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "groups", "=", "branches", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "map_ksize_dilation", "=", "{", "\n", "3", ":", "1", ",", "\n", "5", ":", "2", ",", "\n", "7", ":", "3", ",", "\n", "9", ":", "4", ",", "\n", "11", ":", "5", ",", "\n", "13", ":", "6", ",", "\n", "15", ":", "7", ",", "\n", "17", ":", "8", "\n", "}", "\n", "self", ".", "kernel_sizes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "branches", ")", ":", "\n", "            ", "kernel_size", "=", "3", "+", "2", "*", "i", "\n", "kernel_size", "=", "kernel_size", "if", "kernel_size", "<=", "kernel_size_maximum", "else", "3", "\n", "self", ".", "kernel_sizes", ".", "append", "(", "kernel_size", ")", "\n", "", "self", ".", "kernel_sizes", ".", "sort", "(", ")", "\n", "\n", "self", ".", "spp_modules", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "i", "in", "range", "(", "branches", ")", ":", "\n", "            ", "dilation", "=", "map_ksize_dilation", "[", "self", ".", "kernel_sizes", "[", "i", "]", "]", "\n", "self", ".", "spp_modules", ".", "append", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_branch_channels", ",", "\n", "in_branch_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "'same'", ",", "\n", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "in_branch_channels", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "self", ".", "group_conv_out", "=", "layers", ".", "ConvBN", "(", "\n", "out_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "groups", "=", "branches", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn_act", "=", "BNPReLU", "(", "out_channels", ")", "\n", "self", ".", "_act", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "down_method", "=", "True", "if", "down_method", "==", "'avg'", "else", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.EESP.convert_group_x": [[238, 244], ["None"], "methods", ["None"], ["", "@", "paddle", ".", "jit", ".", "not_to_static", "\n", "def", "convert_group_x", "(", "self", ",", "group_merge", ",", "x", ")", ":", "\n", "        ", "if", "x", ".", "shape", "==", "group_merge", ".", "shape", ":", "\n", "            ", "group_merge", "+=", "x", "\n", "\n", "", "return", "group_merge", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.EESP.forward": [[245, 264], ["espnet.EESP.group_conv_in", "range", "espnet.EESP.group_conv_out", "espnet.EESP.convert_group_x", "espnet.EESP._act", "len", "output.append", "espnet.EESP.bn_act", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.EESP.convert_group_x", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "group_out", "=", "self", ".", "group_conv_in", "(", "x", ")", "\n", "output", "=", "[", "self", ".", "spp_modules", "[", "0", "]", "(", "group_out", ")", "]", "\n", "\n", "for", "k", "in", "range", "(", "1", ",", "len", "(", "self", ".", "spp_modules", ")", ")", ":", "\n", "            ", "output_k", "=", "self", ".", "spp_modules", "[", "k", "]", "(", "group_out", ")", "\n", "output_k", "=", "output_k", "+", "output", "[", "k", "-", "1", "]", "\n", "output", ".", "append", "(", "output_k", ")", "\n", "\n", "", "group_merge", "=", "self", ".", "group_conv_out", "(", "\n", "self", ".", "bn_act", "(", "paddle", ".", "concat", "(", "\n", "output", ",", "axis", "=", "1", ")", ")", ")", "\n", "\n", "if", "self", ".", "stride", "==", "2", "and", "self", ".", "down_method", ":", "\n", "            ", "return", "group_merge", "\n", "\n", "", "group_merge", "=", "self", ".", "convert_group_x", "(", "group_merge", ",", "x", ")", "\n", "out", "=", "self", ".", "_act", "(", "group_merge", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.PSPModule.__init__": [[267, 285], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBNPReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "sizes", "=", "4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stages", "=", "nn", ".", "LayerList", "(", "[", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "in_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "groups", "=", "in_channels", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "for", "_", "in", "range", "(", "sizes", ")", "\n", "]", ")", "\n", "self", ".", "project", "=", "layers", ".", "ConvBNPReLU", "(", "\n", "in_channels", "*", "(", "sizes", "+", "1", ")", ",", "\n", "out_channels", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.PSPModule.forward": [[286, 295], ["espnet.PSPModule.project", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "out.append", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "stage"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "        ", "h", ",", "w", "=", "paddle", ".", "shape", "(", "feats", ")", "[", "2", ":", "4", "]", "\n", "out", "=", "[", "feats", "]", "\n", "for", "stage", "in", "self", ".", "stages", ":", "\n", "            ", "feats", "=", "F", ".", "avg_pool2d", "(", "feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "'same'", ")", "\n", "upsampled", "=", "F", ".", "interpolate", "(", "\n", "stage", "(", "feats", ")", ",", "size", "=", "[", "h", ",", "w", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "out", ".", "append", "(", "upsampled", ")", "\n", "", "return", "self", ".", "project", "(", "paddle", ".", "concat", "(", "out", ",", "axis", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.DownSampler.__init__": [[308, 334], ["paddle.Layer.__init__", "espnet.EESP", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "RuntimeError", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNPReLU", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "branches", "=", "4", ",", "\n", "kernel_size_maximum", "=", "9", ",", "\n", "shortcut", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "out_channels", "<", "in_channels", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"The out_channes for DownSampler should be bigger than in_channels, but got in_channles={}, out_channels={}\"", "\n", ".", "format", "(", "in_channels", ",", "out_channels", ")", ")", "\n", "", "self", ".", "eesp", "=", "EESP", "(", "\n", "in_channels", ",", "\n", "out_channels", "-", "in_channels", ",", "\n", "stride", "=", "2", ",", "\n", "branches", "=", "branches", ",", "\n", "kernel_size_maximum", "=", "kernel_size_maximum", ",", "\n", "down_method", "=", "'avg'", ")", "\n", "self", ".", "avg", "=", "nn", ".", "AvgPool2D", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "if", "shortcut", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNPReLU", "(", "\n", "3", ",", "3", ",", "3", ",", "stride", "=", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "3", ",", "out_channels", ",", "1", ",", "stride", "=", "1", ",", "bias_attr", "=", "False", ")", ",", ")", "\n", "", "self", ".", "_act", "=", "nn", ".", "PReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.DownSampler.forward": [[335, 352], ["espnet.DownSampler.avg", "espnet.DownSampler.eesp", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "espnet.DownSampler._act", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "espnet.DownSampler.shortcut_layer", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ",", "inputs", "=", "None", ")", ":", "\n", "        ", "avg_out", "=", "self", ".", "avg", "(", "x", ")", "\n", "eesp_out", "=", "self", ".", "eesp", "(", "x", ")", "\n", "output", "=", "paddle", ".", "concat", "(", "[", "avg_out", ",", "eesp_out", "]", ",", "axis", "=", "1", ")", "\n", "\n", "if", "inputs", "is", "not", "None", ":", "\n", "            ", "w1", "=", "paddle", ".", "shape", "(", "avg_out", ")", "[", "2", "]", "\n", "w2", "=", "paddle", ".", "shape", "(", "inputs", ")", "[", "2", "]", "\n", "\n", "while", "w2", "!=", "w1", ":", "\n", "                ", "inputs", "=", "F", ".", "avg_pool2d", "(", "\n", "inputs", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "w2", "=", "paddle", ".", "shape", "(", "inputs", ")", "[", "2", "]", "\n", "# import pdb", "\n", "# pdb.set_trace()", "\n", "", "output", "=", "output", "+", "self", ".", "shortcut_layer", "(", "inputs", ")", "\n", "", "return", "self", ".", "_act", "(", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.EESPNetBackbone.__init__": [[368, 434], ["paddle.Layer.__init__", "range", "paddleseg.models.layers.ConvBNPReLU", "espnet.DownSampler", "espnet.DownSampler", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "espnet.DownSampler", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "espnet.EESPNetBackbone.init_params", "len", "espnet.EESPNetBackbone.level3.append", "espnet.EESPNetBackbone.level4.append", "int", "espnet.EESP", "espnet.EESP", "math.ceil", "pow"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.EESPNetBackbone.init_params", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "drop_prob", "=", "0.1", ",", "scale", "=", "1.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "reps", "=", "[", "0", ",", "3", ",", "7", ",", "3", "]", "\n", "\n", "num_level", "=", "4", "# 1/2, 1/4, 1/8, 1/16", "\n", "kernel_size_limitations", "=", "[", "13", ",", "11", ",", "9", ",", "7", "]", "# kernel size limitation", "\n", "branch_list", "=", "[", "4", "]", "*", "len", "(", "\n", "kernel_size_limitations", ")", "# branches at different levels", "\n", "\n", "base_channels", "=", "32", "# first conv output channels", "\n", "channels_config", "=", "[", "base_channels", "]", "*", "num_level", "\n", "\n", "for", "i", "in", "range", "(", "num_level", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "channels", "=", "int", "(", "base_channels", "*", "scale", ")", "\n", "channels", "=", "math", ".", "ceil", "(", "channels", "/", "branch_list", "[", "0", "]", ")", "*", "branch_list", "[", "0", "]", "\n", "channels_config", "[", "\n", "i", "]", "=", "base_channels", "if", "channels", ">", "base_channels", "else", "channels", "\n", "", "else", ":", "\n", "                ", "channels_config", "[", "i", "]", "=", "channels", "*", "pow", "(", "2", ",", "i", ")", "\n", "\n", "", "", "self", ".", "level1", "=", "layers", ".", "ConvBNPReLU", "(", "\n", "in_channels", ",", "channels_config", "[", "0", "]", ",", "3", ",", "stride", "=", "2", ",", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "level2", "=", "DownSampler", "(", "\n", "channels_config", "[", "0", "]", ",", "\n", "channels_config", "[", "1", "]", ",", "\n", "branches", "=", "branch_list", "[", "0", "]", ",", "\n", "kernel_size_maximum", "=", "kernel_size_limitations", "[", "0", "]", ",", "\n", "shortcut", "=", "True", ")", "\n", "\n", "self", ".", "level3_0", "=", "DownSampler", "(", "\n", "channels_config", "[", "1", "]", ",", "\n", "channels_config", "[", "2", "]", ",", "\n", "branches", "=", "branch_list", "[", "1", "]", ",", "\n", "kernel_size_maximum", "=", "kernel_size_limitations", "[", "1", "]", ",", "\n", "shortcut", "=", "True", ")", "\n", "self", ".", "level3", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "i", "in", "range", "(", "reps", "[", "1", "]", ")", ":", "\n", "            ", "self", ".", "level3", ".", "append", "(", "\n", "EESP", "(", "\n", "channels_config", "[", "2", "]", ",", "\n", "channels_config", "[", "2", "]", ",", "\n", "stride", "=", "1", ",", "\n", "branches", "=", "branch_list", "[", "2", "]", ",", "\n", "kernel_size_maximum", "=", "kernel_size_limitations", "[", "2", "]", ")", ")", "\n", "\n", "", "self", ".", "level4_0", "=", "DownSampler", "(", "\n", "channels_config", "[", "2", "]", ",", "\n", "channels_config", "[", "3", "]", ",", "\n", "branches", "=", "branch_list", "[", "2", "]", ",", "\n", "kernel_size_maximum", "=", "kernel_size_limitations", "[", "2", "]", ",", "\n", "shortcut", "=", "True", ")", "\n", "self", ".", "level4", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "i", "in", "range", "(", "reps", "[", "2", "]", ")", ":", "\n", "            ", "self", ".", "level4", ".", "append", "(", "\n", "EESP", "(", "\n", "channels_config", "[", "3", "]", ",", "\n", "channels_config", "[", "3", "]", ",", "\n", "stride", "=", "1", ",", "\n", "branches", "=", "branch_list", "[", "3", "]", ",", "\n", "kernel_size_maximum", "=", "kernel_size_limitations", "[", "3", "]", ")", ")", "\n", "\n", "", "self", ".", "out_channels", "=", "channels_config", "\n", "\n", "self", ".", "init_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.EESPNetBackbone.init_params": [[435, 448], ["espnet.EESPNetBackbone.sublayers", "isinstance", "paddleseg.cvlibs.param_init.kaiming_normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init", "isinstance", "paddleseg.cvlibs.param_init.normal_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_params", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "kaiming_normal_init", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "param_init", ".", "constant_init", "(", "m", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2D", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "m", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "m", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "param_init", ".", "normal_init", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "param_init", ".", "constant_init", "(", "m", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.espnet.EESPNetBackbone.forward": [[449, 459], ["espnet.EESPNetBackbone.level1", "espnet.EESPNetBackbone.level2", "espnet.EESPNetBackbone.level3_0", "enumerate", "espnet.EESPNetBackbone.level4_0", "enumerate", "layer", "layer"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_l1", "=", "self", ".", "level1", "(", "x", ")", "\n", "out_l2", "=", "self", ".", "level2", "(", "out_l1", ",", "x", ")", "\n", "out_l3", "=", "self", ".", "level3_0", "(", "out_l2", ",", "x", ")", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "level3", ")", ":", "\n", "            ", "out_l3", "=", "layer", "(", "out_l3", ")", "\n", "", "out_l4", "=", "self", ".", "level4_0", "(", "out_l3", ",", "x", ")", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "level4", ")", ":", "\n", "            ", "out_l4", "=", "layer", "(", "out_l4", ")", "\n", "", "return", "out_l1", ",", "out_l2", ",", "out_l3", ",", "out_l4", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3P.__init__": [[51, 80], ["paddle.Layer.__init__", "deeplab.DeepLabV3PHead", "deeplab.DeepLabV3P.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "0", ",", "3", ")", ",", "\n", "aspp_ratios", "=", "(", "1", ",", "6", ",", "12", ",", "18", ")", ",", "\n", "aspp_out_channels", "=", "256", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ",", "\n", "data_format", "=", "\"NCHW\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "head", "=", "DeepLabV3PHead", "(", "\n", "num_classes", ",", "\n", "backbone_indices", ",", "\n", "backbone_channels", ",", "\n", "aspp_ratios", ",", "\n", "aspp_out_channels", ",", "\n", "align_corners", ",", "\n", "data_format", "=", "data_format", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "data_format", "=", "data_format", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3P.forward": [[81, 95], ["deeplab.DeepLabV3P.backbone", "deeplab.DeepLabV3P.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "if", "self", ".", "data_format", "==", "'NCHW'", ":", "\n", "            ", "ori_shape", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", "\n", "", "else", ":", "\n", "            ", "ori_shape", "=", "paddle", ".", "shape", "(", "x", ")", "[", "1", ":", "3", "]", "\n", "", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "ori_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "data_format", "=", "self", ".", "data_format", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3P.init_weight": [[97, 100], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3PHead.__init__": [[123, 147], ["paddle.Layer.__init__", "paddleseg.models.layers.ASPPModule", "deeplab.Decoder"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone_indices", ",", "\n", "backbone_channels", ",", "\n", "aspp_ratios", ",", "\n", "aspp_out_channels", ",", "\n", "align_corners", ",", "\n", "data_format", "=", "'NCHW'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "aspp", "=", "layers", ".", "ASPPModule", "(", "\n", "aspp_ratios", ",", "\n", "backbone_channels", "[", "1", "]", ",", "\n", "aspp_out_channels", ",", "\n", "align_corners", ",", "\n", "use_sep_conv", "=", "True", ",", "\n", "image_pooling", "=", "True", ",", "\n", "data_format", "=", "data_format", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", "\n", "num_classes", ",", "\n", "backbone_channels", "[", "0", "]", ",", "\n", "align_corners", ",", "\n", "data_format", "=", "data_format", ")", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3PHead.forward": [[148, 157], ["deeplab.DeepLabV3PHead.aspp", "deeplab.DeepLabV3PHead.decoder", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "low_level_feat", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "1", "]", "]", "\n", "x", "=", "self", ".", "aspp", "(", "x", ")", "\n", "logit", "=", "self", ".", "decoder", "(", "x", ",", "low_level_feat", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3.__init__": [[172, 193], ["paddle.Layer.__init__", "deeplab.DeepLabV3Head", "deeplab.DeepLabV3.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "3", ",", ")", ",", "\n", "aspp_ratios", "=", "(", "1", ",", "6", ",", "12", ",", "18", ")", ",", "\n", "aspp_out_channels", "=", "256", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "head", "=", "DeepLabV3Head", "(", "num_classes", ",", "backbone_indices", ",", "\n", "backbone_channels", ",", "aspp_ratios", ",", "\n", "aspp_out_channels", ",", "align_corners", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3.forward": [[194, 203], ["deeplab.DeepLabV3.backbone", "deeplab.DeepLabV3.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3.init_weight": [[205, 208], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3Head.__init__": [[218, 236], ["paddle.Layer.__init__", "paddleseg.models.layers.ASPPModule", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "aspp_ratios", ",", "aspp_out_channels", ",", "align_corners", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "aspp", "=", "layers", ".", "ASPPModule", "(", "\n", "aspp_ratios", ",", "\n", "backbone_channels", "[", "0", "]", ",", "\n", "aspp_out_channels", ",", "\n", "align_corners", ",", "\n", "use_sep_conv", "=", "False", ",", "\n", "image_pooling", "=", "True", ")", "\n", "\n", "self", ".", "cls", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "aspp_out_channels", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.DeepLabV3Head.forward": [[237, 245], ["deeplab.DeepLabV3Head.aspp", "deeplab.DeepLabV3Head.cls", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "x", "=", "self", ".", "aspp", "(", "x", ")", "\n", "logit", "=", "self", ".", "cls", "(", "x", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.Decoder.__init__": [[256, 289], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.SeparableConvBNReLU", "paddleseg.models.layers.SeparableConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_channels", ",", "\n", "align_corners", ",", "\n", "data_format", "=", "'NCHW'", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "data_format", "=", "data_format", "\n", "self", ".", "conv_bn_relu1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "48", ",", "\n", "kernel_size", "=", "1", ",", "\n", "data_format", "=", "data_format", ")", "\n", "\n", "self", ".", "conv_bn_relu2", "=", "layers", ".", "SeparableConvBNReLU", "(", "\n", "in_channels", "=", "304", ",", "\n", "out_channels", "=", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "data_format", "=", "data_format", ")", "\n", "self", ".", "conv_bn_relu3", "=", "layers", ".", "SeparableConvBNReLU", "(", "\n", "in_channels", "=", "256", ",", "\n", "out_channels", "=", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "data_format", "=", "data_format", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "256", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "data_format", "=", "data_format", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplab.Decoder.forward": [[290, 309], ["deeplab.Decoder.conv_bn_relu1", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "deeplab.Decoder.conv_bn_relu2", "deeplab.Decoder.conv_bn_relu3", "deeplab.Decoder.conv", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ",", "low_level_feat", ")", ":", "\n", "        ", "low_level_feat", "=", "self", ".", "conv_bn_relu1", "(", "low_level_feat", ")", "\n", "if", "self", ".", "data_format", "==", "'NCHW'", ":", "\n", "            ", "low_level_shape", "=", "paddle", ".", "shape", "(", "low_level_feat", ")", "[", "-", "2", ":", "]", "\n", "axis", "=", "1", "\n", "", "else", ":", "\n", "            ", "low_level_shape", "=", "paddle", ".", "shape", "(", "low_level_feat", ")", "[", "1", ":", "3", "]", "\n", "axis", "=", "-", "1", "\n", "", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "low_level_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "data_format", "=", "self", ".", "data_format", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "x", ",", "low_level_feat", "]", ",", "axis", "=", "axis", ")", "\n", "x", "=", "self", ".", "conv_bn_relu2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_bn_relu3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.LinearSegmenter.__init__": [[41, 47], ["paddle.Layer.__init__", "segmenter.SegmenterLinearHead", "segmenter.LinearSegmenter.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "backbone", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "head", "=", "SegmenterLinearHead", "(", "num_classes", ",", "backbone", ".", "embed_dim", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.LinearSegmenter.init_weight": [[48, 51], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.LinearSegmenter.forward": [[52, 64], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "segmenter.LinearSegmenter.backbone", "segmenter.LinearSegmenter.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "\n", "feats", ",", "shape", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logits", "=", "self", ".", "head", "(", "feats", "[", "-", "1", "]", ",", "shape", "[", "2", ":", "]", ")", "\n", "\n", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "x_shape", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "for", "logit", "in", "logits", "\n", "]", "\n", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.MaskSegmenter.__init__": [[88, 108], ["paddle.Layer.__init__", "segmenter.SegmenterMaskHead", "segmenter.MaskSegmenter.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "h_embed_dim", ",", "\n", "h_depth", ",", "\n", "h_num_heads", ",", "\n", "h_mlp_ratio", "=", "4", ",", "\n", "h_drop_rate", "=", "0.0", ",", "\n", "h_drop_path_rate", "=", "0.0", ",", "\n", "h_attn_drop_rate", "=", "0.0", ",", "\n", "h_qkv_bias", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "head", "=", "SegmenterMaskHead", "(", "\n", "num_classes", ",", "backbone", ".", "embed_dim", ",", "h_embed_dim", ",", "h_depth", ",", "h_num_heads", ",", "\n", "h_mlp_ratio", ",", "h_drop_rate", ",", "h_drop_path_rate", ",", "h_attn_drop_rate", ",", "\n", "h_qkv_bias", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.MaskSegmenter.init_weight": [[109, 112], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.MaskSegmenter.forward": [[113, 125], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "segmenter.MaskSegmenter.backbone", "segmenter.MaskSegmenter.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "\n", "feats", ",", "shape", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logits", "=", "self", ".", "head", "(", "feats", "[", "-", "1", "]", ",", "shape", "[", "2", ":", "]", ")", "\n", "\n", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "x_shape", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "for", "logit", "in", "logits", "\n", "]", "\n", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.SegmenterLinearHead.__init__": [[135, 139], ["paddle.Layer.__init__", "paddle.Linear", "paddle.Linear", "paddle.Linear", "segmenter.SegmenterLinearHead.apply"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.apply"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "in_dim", ",", "num_classes", ")", "\n", "self", ".", "apply", "(", "transformer_utils", ".", "init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.SegmenterLinearHead.forward": [[140, 156], ["segmenter.SegmenterLinearHead.head", "masks.transpose.transpose.reshape", "masks.transpose.transpose.transpose", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ",", "patch_embed_size", ")", ":", "\n", "        ", "\"\"\" Forward function.\n        Args:\n            x (Tensor): Input tensor of decoder.\n            patch_embed_size (Tensor): The height and width of the patch embed tensor.\n        Returns:\n            list[Tensor]: Segmentation results.\n        \"\"\"", "\n", "masks", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "#[b, (h w), c] -> [b, c, h, w]", "\n", "h", ",", "w", "=", "patch_embed_size", "[", "0", "]", ",", "patch_embed_size", "[", "1", "]", "\n", "masks", "=", "masks", ".", "reshape", "(", "(", "0", ",", "h", ",", "w", ",", "paddle", ".", "shape", "(", "masks", ")", "[", "-", "1", "]", ")", ")", "\n", "masks", "=", "masks", ".", "transpose", "(", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "return", "[", "masks", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.SegmenterMaskHead.__init__": [[174, 222], ["paddle.Layer.__init__", "paddle.Linear", "paddle.Linear", "paddle.Linear", "segmenter.SegmenterMaskHead.create_parameter", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "segmenter.SegmenterMaskHead.apply", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "numpy.linspace", "paddleseg.models.backbones.vision_transformer.Block", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.apply"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_dim", ",", "\n", "embed_dim", ",", "\n", "depth", ",", "\n", "num_heads", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "drop_rate", "=", "0.0", ",", "\n", "drop_path_rate", "=", "0.0", ",", "\n", "attn_drop_rate", "=", "0.0", ",", "\n", "qkv_bias", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "proj_input", "=", "nn", ".", "Linear", "(", "in_dim", ",", "embed_dim", ")", "\n", "\n", "self", ".", "cls_token", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "1", ",", "num_classes", ",", "embed_dim", ")", ",", "\n", "default_initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "TruncatedNormal", "(", "std", "=", "0.02", ")", ")", "\n", "\n", "dpr", "=", "[", "x", "for", "x", "in", "np", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "depth", ")", "]", "\n", "self", ".", "blocks", "=", "nn", ".", "LayerList", "(", "[", "\n", "vision_transformer", ".", "Block", "(", "\n", "dim", "=", "embed_dim", ",", "\n", "num_heads", "=", "num_heads", ",", "\n", "mlp_ratio", "=", "mlp_ratio", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "i", "]", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "qkv_bias", "=", "qkv_bias", ")", "for", "i", "in", "range", "(", "depth", ")", "\n", "]", ")", "\n", "\n", "initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "TruncatedNormal", "(", "std", "=", "0.02", ")", "\n", "self", ".", "proj_patch", "=", "nn", ".", "Linear", "(", "\n", "embed_dim", ",", "\n", "embed_dim", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "initializer", "=", "initializer", ")", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "proj_class", "=", "nn", ".", "Linear", "(", "\n", "embed_dim", ",", "\n", "embed_dim", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "initializer", "=", "initializer", ")", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "decoder_norm", "=", "nn", ".", "LayerNorm", "(", "embed_dim", ")", "\n", "self", ".", "mask_norm", "=", "nn", ".", "LayerNorm", "(", "num_classes", ")", "\n", "\n", "self", ".", "apply", "(", "transformer_utils", ".", "init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segmenter.SegmenterMaskHead.forward": [[223, 257], ["segmenter.SegmenterMaskHead.proj_input", "segmenter.SegmenterMaskHead.cls_token.expand", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "segmenter.SegmenterMaskHead.decoder_norm", "segmenter.SegmenterMaskHead.proj_patch", "segmenter.SegmenterMaskHead.proj_class", "masks.transpose.transpose.reshape", "segmenter.SegmenterMaskHead.mask_norm", "masks.transpose.transpose.reshape", "masks.transpose.transpose.transpose", "block", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "masks.transpose.transpose.transpose", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ",", "patch_embed_size", ")", ":", "\n", "        ", "\"\"\" Forward function.\n        Args:\n            x (Tensor): Input tensor of decoder.\n            patch_embed_size (Tensor): The height and width of the patch embed tensor.\n        Returns:\n            list[Tensor]: Segmentation results.\n        \"\"\"", "\n", "x", "=", "self", ".", "proj_input", "(", "x", ")", "\n", "\n", "cls_token", "=", "self", ".", "cls_token", ".", "expand", "(", "(", "paddle", ".", "shape", "(", "x", ")", "[", "0", "]", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "x", ",", "cls_token", "]", ",", "axis", "=", "1", ")", "\n", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "", "x", "=", "self", ".", "decoder_norm", "(", "x", ")", "\n", "\n", "patches", ",", "masks", "=", "x", "[", ":", ",", ":", "-", "self", ".", "num_classes", "]", ",", "x", "[", ":", ",", "-", "self", ".", "num_classes", ":", "]", "\n", "patches", "=", "self", ".", "proj_patch", "(", "patches", ")", "\n", "masks", "=", "self", ".", "proj_class", "(", "masks", ")", "\n", "patches", "=", "patches", "/", "paddle", ".", "norm", "(", "patches", ",", "axis", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "masks", "=", "masks", "/", "paddle", ".", "norm", "(", "masks", ",", "axis", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "masks", "=", "patches", "@", "masks", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "masks", "=", "masks", ".", "reshape", "(", "(", "0", ",", "0", ",", "\n", "self", ".", "num_classes", ")", ")", "# For export inference model", "\n", "masks", "=", "self", ".", "mask_norm", "(", "masks", ")", "\n", "\n", "#[b, (h w), c] -> [b, c, h, w]", "\n", "h", ",", "w", "=", "patch_embed_size", "[", "0", "]", ",", "patch_embed_size", "[", "1", "]", "\n", "masks", "=", "masks", ".", "reshape", "(", "(", "0", ",", "h", ",", "w", ",", "paddle", ".", "shape", "(", "masks", ")", "[", "-", "1", "]", ")", ")", "\n", "masks", "=", "masks", ".", "transpose", "(", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "return", "[", "masks", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dmnet.DMNet.__init__": [[41, 69], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "dmnet.DMNet.init_weight", "dmnet.DMNet.dcm_modules.append", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "dmnet.DCM", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "mid_channels", "=", "512", ",", "\n", "filter_sizes", "=", "[", "1", ",", "3", ",", "5", ",", "7", "]", ",", "\n", "fusion", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "dcm_modules", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "filter_size", "in", "filter_sizes", ":", "\n", "            ", "self", ".", "dcm_modules", ".", "append", "(", "\n", "DCM", "(", "filter_size", ",", "fusion", ",", "self", ".", "backbone", ".", "feat_channels", "[", "-", "1", "]", ",", "\n", "mid_channels", ")", ",", ")", "\n", "", "self", ".", "bottleneck", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "backbone", ".", "feat_channels", "[", "-", "1", "]", "+", "len", "(", "filter_sizes", ")", "*", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", ")", "\n", "self", ".", "cls", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "num_classes", ",", "1", ")", "\n", "\n", "self", ".", "fcn_head", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "backbone", ".", "feat_channels", "[", "2", "]", ",", "mid_channels", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "mid_channels", ",", "num_classes", ",", "1", ")", ",", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dmnet.DMNet.init_weight": [[70, 73], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dmnet.DMNet.forward": [[74, 93], ["dmnet.DMNet.backbone", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "dmnet.DMNet.bottleneck", "dmnet.DMNet.cls", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat.append", "paddle.concat.append", "paddle.concat.append", "dmnet.DMNet.fcn_head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "output.append", "dcm_module"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "x", "=", "feats", "[", "-", "1", "]", "\n", "dcm_outs", "=", "[", "x", "]", "\n", "for", "dcm_module", "in", "self", ".", "dcm_modules", ":", "\n", "            ", "dcm_outs", ".", "append", "(", "dcm_module", "(", "x", ")", ")", "\n", "", "dcm_outs", "=", "paddle", ".", "concat", "(", "dcm_outs", ",", "axis", "=", "1", ")", "\n", "x", "=", "self", ".", "bottleneck", "(", "dcm_outs", ")", "\n", "x", "=", "self", ".", "cls", "(", "x", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "output", "=", "[", "x", "]", "\n", "if", "self", ".", "training", ":", "\n", "            ", "fcn_out", "=", "self", ".", "fcn_head", "(", "feats", "[", "2", "]", ")", "\n", "fcn_out", "=", "F", ".", "interpolate", "(", "\n", "fcn_out", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "output", ".", "append", "(", "fcn_out", ")", "\n", "return", "output", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dmnet.DCM.__init__": [[106, 127], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "filter_size", ",", "fusion", ",", "in_channels", ",", "channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "filter_size", "=", "filter_size", "\n", "self", ".", "fusion", "=", "fusion", "\n", "self", ".", "channels", "=", "channels", "\n", "\n", "pad", "=", "(", "self", ".", "filter_size", "-", "1", ")", "//", "2", "\n", "if", "(", "self", ".", "filter_size", "-", "1", ")", "%", "2", "==", "0", ":", "\n", "            ", "self", ".", "pad", "=", "(", "pad", ",", "pad", ",", "pad", ",", "pad", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "pad", "=", "(", "pad", "+", "1", ",", "pad", ",", "pad", "+", "1", ",", "pad", ")", "\n", "\n", "", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "filter_size", ")", "\n", "self", ".", "filter_gen_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "channels", ",", "1", ")", "\n", "self", ".", "input_redu_conv", "=", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "channels", ",", "1", ")", "\n", "\n", "self", ".", "norm", "=", "layers", ".", "SyncBatchNorm", "(", "channels", ")", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "if", "self", ".", "fusion", ":", "\n", "            ", "self", ".", "fusion_conv", "=", "layers", ".", "ConvBNReLU", "(", "channels", ",", "channels", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dmnet.DCM.forward": [[128, 144], ["dmnet.DCM.filter_gen_conv", "dmnet.DCM.input_redu_conv", "paddle.pad.reshape", "generated_filter.reshape.reshape.reshape", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "dmnet.DCM.reshape", "dmnet.DCM.norm", "dmnet.DCM.act", "dmnet.DCM.avg_pool", "dmnet.DCM.fusion_conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "generated_filter", "=", "self", ".", "filter_gen_conv", "(", "self", ".", "avg_pool", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "input_redu_conv", "(", "x", ")", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "reshape", "(", "[", "1", ",", "b", "*", "c", ",", "h", ",", "w", "]", ")", "\n", "generated_filter", "=", "generated_filter", ".", "reshape", "(", "\n", "[", "b", "*", "c", ",", "1", ",", "self", ".", "filter_size", ",", "self", ".", "filter_size", "]", ")", "\n", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "self", ".", "pad", ",", "mode", "=", "'constant'", ",", "value", "=", "0", ")", "\n", "output", "=", "F", ".", "conv2d", "(", "x", ",", "weight", "=", "generated_filter", ",", "groups", "=", "b", "*", "c", ")", "\n", "output", "=", "output", ".", "reshape", "(", "[", "b", ",", "self", ".", "channels", ",", "h", ",", "w", "]", ")", "\n", "output", "=", "self", ".", "norm", "(", "output", ")", "\n", "output", "=", "self", ".", "act", "(", "output", ")", "\n", "if", "self", ".", "fusion", ":", "\n", "            ", "output", "=", "self", ".", "fusion_conv", "(", "output", ")", "\n", "", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dnlnet.DNLNet.__init__": [[48, 70], ["paddle.Layer.__init__", "dnlnet.DNLHead", "dnlnet.DNLNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "2", ",", "3", ")", ",", "\n", "reduction", "=", "2", ",", "\n", "use_scale", "=", "True", ",", "\n", "mode", "=", "'embedded_gaussian'", ",", "\n", "temperature", "=", "0.05", ",", "\n", "concat_input", "=", "True", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "in_channels", "=", "[", "self", ".", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "]", "\n", "self", ".", "head", "=", "DNLHead", "(", "num_classes", ",", "in_channels", ",", "reduction", ",", "use_scale", ",", "\n", "mode", ",", "temperature", ",", "concat_input", ",", "\n", "enable_auxiliary_loss", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dnlnet.DNLNet.forward": [[71, 84], ["dnlnet.DNLNet.backbone", "dnlnet.DNLNet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "logit_list", "=", "self", ".", "head", "(", "feats", ")", "\n", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "align_mode", "=", "1", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dnlnet.DNLNet.init_weight": [[85, 88], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dnlnet.DNLHead.__init__": [[107, 155], ["paddle.Layer.__init__", "dnlnet.DisentangledNonLocal2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_channels", ",", "\n", "reduction", ",", "\n", "use_scale", ",", "\n", "mode", ",", "\n", "temperature", ",", "\n", "concat_input", "=", "True", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DNLHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "[", "-", "1", "]", "\n", "self", ".", "concat_input", "=", "concat_input", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "inter_channels", "=", "self", ".", "in_channels", "//", "4", "\n", "\n", "self", ".", "dnl_block", "=", "DisentangledNonLocal2D", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "reduction", "=", "reduction", ",", "\n", "use_scale", "=", "use_scale", ",", "\n", "temperature", "=", "temperature", ",", "\n", "mode", "=", "mode", ")", "\n", "self", ".", "conv0", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "self", ".", "in_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "cls", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout2D", "(", "p", "=", "0.1", ")", ",", "nn", ".", "Conv2D", "(", "inter_channels", ",", "num_classes", ",", "1", ")", ")", "\n", "self", ".", "aux", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "1024", ",", "\n", "out_channels", "=", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Dropout2D", "(", "p", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "256", ",", "num_classes", ",", "1", ")", ")", "\n", "if", "self", ".", "concat_input", ":", "\n", "            ", "self", ".", "conv_cat", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", "+", "inter_channels", ",", "\n", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dnlnet.DNLHead.forward": [[156, 169], ["dnlnet.DNLHead.conv0", "dnlnet.DNLHead.dnl_block", "dnlnet.DNLHead.conv1", "dnlnet.DNLHead.cls", "dnlnet.DNLHead.conv_cat", "dnlnet.DNLHead.aux", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "C3", ",", "C4", "=", "feat_list", "\n", "output", "=", "self", ".", "conv0", "(", "C4", ")", "\n", "output", "=", "self", ".", "dnl_block", "(", "output", ")", "\n", "output", "=", "self", ".", "conv1", "(", "output", ")", "\n", "if", "self", ".", "concat_input", ":", "\n", "            ", "output", "=", "self", ".", "conv_cat", "(", "paddle", ".", "concat", "(", "[", "C4", ",", "output", "]", ",", "axis", "=", "1", ")", ")", "\n", "", "output", "=", "self", ".", "cls", "(", "output", ")", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "auxout", "=", "self", ".", "aux", "(", "C3", ")", "\n", "return", "[", "output", ",", "auxout", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "output", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dnlnet.DisentangledNonLocal2D.__init__": [[178, 182], ["paddleseg.models.layers.NonLocal2D.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "*", "arg", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "arg", ",", "**", "kwargs", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "conv_mask", "=", "nn", ".", "Conv2D", "(", "self", ".", "in_channels", ",", "1", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dnlnet.DisentangledNonLocal2D.embedded_gaussian": [[183, 190], ["paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.softmax", "paddle.softmax", "paddle.softmax"], "methods", ["None"], ["", "def", "embedded_gaussian", "(", "self", ",", "theta_x", ",", "phi_x", ")", ":", "\n", "        ", "pairwise_weight", "=", "paddle", ".", "matmul", "(", "theta_x", ",", "phi_x", ")", "\n", "if", "self", ".", "use_scale", ":", "\n", "            ", "pairwise_weight", "/=", "theta_x", ".", "shape", "[", "-", "1", "]", "**", "0.5", "\n", "", "pairwise_weight", "/=", "self", ".", "temperature", "\n", "pairwise_weight", "=", "F", ".", "softmax", "(", "pairwise_weight", ",", "-", "1", ")", "\n", "return", "pairwise_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.dnlnet.DisentangledNonLocal2D.forward": [[191, 228], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "dnlnet.DisentangledNonLocal2D.g().reshape().transpose", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "getattr", "getattr.", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.matmul().transpose().reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "dnlnet.DisentangledNonLocal2D.conv_out", "dnlnet.DisentangledNonLocal2D.g().reshape", "x.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "dnlnet.DisentangledNonLocal2D.theta().reshape().transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "dnlnet.DisentangledNonLocal2D.conv_mask", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "paddle.matmul().transpose", "dnlnet.DisentangledNonLocal2D.phi", "dnlnet.DisentangledNonLocal2D.theta", "dnlnet.DisentangledNonLocal2D.phi", "dnlnet.DisentangledNonLocal2D.phi", "dnlnet.DisentangledNonLocal2D.g", "dnlnet.DisentangledNonLocal2D.theta().reshape", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "dnlnet.DisentangledNonLocal2D.theta"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "g_x", "=", "self", ".", "g", "(", "x", ")", ".", "reshape", "(", "[", "0", ",", "self", ".", "inter_channels", ",", "\n", "-", "1", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "\n", "if", "self", ".", "mode", "==", "\"gaussian\"", ":", "\n", "            ", "theta_x", "=", "paddle", ".", "transpose", "(", "\n", "x", ".", "reshape", "(", "[", "0", ",", "self", ".", "in_channels", ",", "-", "1", "]", ")", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "if", "self", ".", "sub_sample", ":", "\n", "                ", "phi_x", "=", "paddle", ".", "transpose", "(", "self", ".", "phi", "(", "x", ")", ",", "[", "0", ",", "self", ".", "in_channels", ",", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "phi_x", "=", "paddle", ".", "transpose", "(", "x", ",", "[", "0", ",", "self", ".", "in_channels", ",", "-", "1", "]", ")", "\n", "\n", "", "", "elif", "self", ".", "mode", "==", "\"concatenation\"", ":", "\n", "            ", "theta_x", "=", "paddle", ".", "reshape", "(", "\n", "self", ".", "theta", "(", "x", ")", ",", "[", "0", ",", "self", ".", "inter_channels", ",", "-", "1", ",", "1", "]", ")", "\n", "phi_x", "=", "paddle", ".", "reshape", "(", "self", ".", "phi", "(", "x", ")", ",", "[", "0", ",", "self", ".", "inter_channels", ",", "1", ",", "-", "1", "]", ")", "\n", "\n", "", "else", ":", "\n", "            ", "theta_x", "=", "self", ".", "theta", "(", "x", ")", ".", "reshape", "(", "[", "0", ",", "self", ".", "inter_channels", ",", "\n", "-", "1", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "phi_x", "=", "paddle", ".", "reshape", "(", "self", ".", "phi", "(", "x", ")", ",", "[", "0", ",", "self", ".", "inter_channels", ",", "-", "1", "]", ")", "\n", "\n", "", "theta_x", "-=", "paddle", ".", "mean", "(", "theta_x", ",", "axis", "=", "-", "2", ",", "keepdim", "=", "True", ")", "\n", "phi_x", "-=", "paddle", ".", "mean", "(", "phi_x", ",", "axis", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "pairwise_func", "=", "getattr", "(", "self", ",", "self", ".", "mode", ")", "\n", "pairwise_weight", "=", "pairwise_func", "(", "theta_x", ",", "phi_x", ")", "\n", "\n", "y", "=", "paddle", ".", "matmul", "(", "pairwise_weight", ",", "g_x", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "self", ".", "inter_channels", ",", "x_shape", "[", "2", "]", ",", "x_shape", "[", "3", "]", "]", ")", "\n", "unary_mask", "=", "F", ".", "softmax", "(", "\n", "paddle", ".", "reshape", "(", "self", ".", "conv_mask", "(", "x", ")", ",", "[", "0", ",", "1", ",", "-", "1", "]", ")", ",", "-", "1", ")", "\n", "unary_x", "=", "paddle", ".", "matmul", "(", "unary_mask", ",", "g_x", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "self", ".", "inter_channels", ",", "1", ",", "1", "]", ")", "\n", "output", "=", "x", "+", "self", ".", "conv_out", "(", "y", "+", "unary_x", ")", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.UNet.__init__": [[42, 60], ["paddle.Layer.__init__", "unet.Encoder", "unet.Decoder", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "unet.UNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "align_corners", "=", "False", ",", "\n", "use_deconv", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encode", "=", "Encoder", "(", ")", "\n", "self", ".", "decode", "=", "Decoder", "(", "align_corners", ",", "use_deconv", "=", "use_deconv", ")", "\n", "self", ".", "cls", "=", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.UNet.forward": [[61, 68], ["unet.UNet.encode", "unet.UNet.decode", "unet.UNet.cls", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.encode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "x", ",", "short_cuts", "=", "self", ".", "encode", "(", "x", ")", "\n", "x", "=", "self", ".", "decode", "(", "x", ",", "short_cuts", ")", "\n", "logit", "=", "self", ".", "cls", "(", "x", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.UNet.init_weight": [[69, 72], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.Encoder.__init__": [[75, 84], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "unet.Encoder.down_sampling"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.Encoder.down_sampling"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "double_conv", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "3", ",", "64", ",", "3", ")", ",", "layers", ".", "ConvBNReLU", "(", "64", ",", "64", ",", "3", ")", ")", "\n", "down_channels", "=", "[", "[", "64", ",", "128", "]", ",", "[", "128", ",", "256", "]", ",", "[", "256", ",", "512", "]", ",", "[", "512", ",", "512", "]", "]", "\n", "self", ".", "down_sample_list", "=", "nn", ".", "LayerList", "(", "[", "\n", "self", ".", "down_sampling", "(", "channel", "[", "0", "]", ",", "channel", "[", "1", "]", ")", "\n", "for", "channel", "in", "down_channels", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.Encoder.down_sampling": [[86, 92], ["modules.append", "modules.append", "modules.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "down_sampling", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "modules", "=", "[", "]", "\n", "modules", ".", "append", "(", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "modules", ".", "append", "(", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "out_channels", ",", "3", ")", ")", "\n", "modules", ".", "append", "(", "layers", ".", "ConvBNReLU", "(", "out_channels", ",", "out_channels", ",", "3", ")", ")", "\n", "return", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.Encoder.forward": [[93, 100], ["unet.Encoder.double_conv", "short_cuts.append", "down_sample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "short_cuts", "=", "[", "]", "\n", "x", "=", "self", ".", "double_conv", "(", "x", ")", "\n", "for", "down_sample", "in", "self", ".", "down_sample_list", ":", "\n", "            ", "short_cuts", ".", "append", "(", "x", ")", "\n", "x", "=", "down_sample", "(", "x", ")", "\n", "", "return", "x", ",", "short_cuts", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.Decoder.__init__": [[103, 110], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "unet.UpSampling"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "align_corners", ",", "use_deconv", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "up_channels", "=", "[", "[", "512", ",", "256", "]", ",", "[", "256", ",", "128", "]", ",", "[", "128", ",", "64", "]", ",", "[", "64", ",", "64", "]", "]", "\n", "self", ".", "up_sample_list", "=", "nn", ".", "LayerList", "(", "[", "\n", "UpSampling", "(", "channel", "[", "0", "]", ",", "channel", "[", "1", "]", ",", "align_corners", ",", "use_deconv", ")", "\n", "for", "channel", "in", "up_channels", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.Decoder.forward": [[112, 116], ["range", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "short_cuts", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "short_cuts", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "up_sample_list", "[", "i", "]", "(", "x", ",", "short_cuts", "[", "-", "(", "i", "+", "1", ")", "]", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.UpSampling.__init__": [[119, 143], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "align_corners", ",", "\n", "use_deconv", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "use_deconv", "=", "use_deconv", "\n", "if", "self", ".", "use_deconv", ":", "\n", "            ", "self", ".", "deconv", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "in_channels", ",", "\n", "out_channels", "//", "2", ",", "\n", "kernel_size", "=", "2", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ")", "\n", "in_channels", "=", "in_channels", "+", "out_channels", "//", "2", "\n", "", "else", ":", "\n", "            ", "in_channels", "*=", "2", "\n", "\n", "", "self", ".", "double_conv", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "out_channels", ",", "3", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "out_channels", ",", "out_channels", ",", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet.UpSampling.forward": [[144, 156], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "unet.UpSampling.double_conv", "unet.UpSampling.deconv", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ",", "short_cut", ")", ":", "\n", "        ", "if", "self", ".", "use_deconv", ":", "\n", "            ", "x", "=", "self", ".", "deconv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "paddle", ".", "shape", "(", "short_cut", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "", "x", "=", "paddle", ".", "concat", "(", "[", "x", ",", "short_cut", "]", ",", "axis", "=", "1", ")", "\n", "x", "=", "self", ".", "double_conv", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GINet.__init__": [[43, 69], ["paddle.Layer.__init__", "ginet.GIHead", "ginet.GINet.init_weight", "paddleseg.models.layers.JPU", "paddleseg.models.layers.AuxLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "align_corners", "=", "True", ",", "\n", "jpu", "=", "True", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nclass", "=", "num_classes", "\n", "self", ".", "aux", "=", "enable_auxiliary_loss", "\n", "self", ".", "jpu", "=", "jpu", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "jpu", "=", "layers", ".", "JPU", "(", "[", "512", ",", "1024", ",", "2048", "]", ",", "width", "=", "512", ")", "if", "jpu", "else", "None", "\n", "self", ".", "head", "=", "GIHead", "(", "in_channels", "=", "2048", ",", "nclass", "=", "num_classes", ")", "\n", "\n", "if", "self", ".", "aux", ":", "\n", "            ", "self", ".", "auxlayer", "=", "layers", ".", "AuxLayer", "(", "\n", "1024", ",", "1024", "//", "4", ",", "num_classes", ",", "bias_attr", "=", "False", ")", "\n", "\n", "", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GINet.base_forward": [[70, 79], ["ginet.GINet.backbone", "ginet.GINet.jpu"], "methods", ["None"], ["", "def", "base_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "\n", "c1", ",", "c2", ",", "c3", ",", "c4", "=", "[", "feat_list", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "\n", "if", "self", ".", "jpu", ":", "\n", "            ", "return", "self", ".", "jpu", "(", "c1", ",", "c2", ",", "c3", ",", "c4", ")", "\n", "", "else", ":", "\n", "            ", "return", "c1", ",", "c2", ",", "c3", ",", "c4", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GINet.forward": [[80, 98], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "ginet.GINet.base_forward", "ginet.GINet.head", "logit_list.append", "ginet.GINet.auxlayer", "logit_list.append", "paddle.nn.functional.interpolate", "paddle.nn.functional.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GINet.base_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "_", ",", "_", ",", "h", ",", "w", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "_", ",", "_", ",", "c3", ",", "c4", "=", "self", ".", "base_forward", "(", "x", ")", "\n", "\n", "logit_list", "=", "[", "]", "\n", "x", ",", "_", "=", "self", ".", "head", "(", "c4", ")", "\n", "logit_list", ".", "append", "(", "x", ")", "\n", "\n", "if", "self", ".", "aux", ":", "\n", "            ", "auxout", "=", "self", ".", "auxlayer", "(", "c3", ")", "\n", "\n", "logit_list", ".", "append", "(", "auxout", ")", "\n", "\n", "", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "[", "h", ",", "w", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GINet.init_weight": [[100, 103], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GIHead.__init__": [[108, 138], ["paddle.Layer.__init__", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "ginet.GlobalReasonUnit", "paddle.Sequential", "paddle.Sequential", "paddle.Linear", "paddle.Linear", "paddle.BatchNorm1D", "paddle.BatchNorm1D", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.BatchNorm1D", "paddle.BatchNorm1D", "paddle.ReLU", "paddle.ReLU", "paddle.Dropout", "paddle.Dropout", "paddle.Conv2D", "paddle.Conv2D", "str", "paddle.nn.initializer.Assign", "paddle.nn.initializer.Assign", "paddle.nn.initializer.Assign", "paddle.nn.initializer.Assign", "ginet.GIHead.inp.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "nclass", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nclass", "=", "nclass", "\n", "inter_channels", "=", "in_channels", "//", "4", "\n", "self", ".", "inp", "=", "paddle", ".", "zeros", "(", "shape", "=", "(", "nclass", ",", "300", ")", ",", "dtype", "=", "'float32'", ")", "\n", "self", ".", "inp", "=", "paddle", ".", "create_parameter", "(", "\n", "shape", "=", "self", ".", "inp", ".", "shape", ",", "\n", "dtype", "=", "str", "(", "self", ".", "inp", ".", "numpy", "(", ")", ".", "dtype", ")", ",", "\n", "default_initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "Assign", "(", "self", ".", "inp", ")", ")", "\n", "self", ".", "inp", ".", "stop_gradient", "=", "True", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "300", ",", "128", ")", ",", "nn", ".", "BatchNorm1D", "(", "128", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "256", ")", ",", "nn", ".", "BatchNorm1D", "(", "256", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv5", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "\n", "inter_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "stride", "=", "1", ")", "\n", "\n", "self", ".", "gloru", "=", "GlobalReasonUnit", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "num_state", "=", "256", ",", "\n", "num_node", "=", "84", ",", "\n", "nclass", "=", "nclass", ")", "\n", "self", ".", "conv6", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", "0.1", ")", ",", "nn", ".", "Conv2D", "(", "inter_channels", ",", "nclass", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GIHead.forward": [[139, 153], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "ginet.GIHead.fc1", "ginet.GIHead.fc2().unsqueeze().transpose().expand", "ginet.GIHead.conv5", "ginet.GIHead.gloru", "ginet.GIHead.conv6", "ginet.GIHead.fc2().unsqueeze().transpose", "ginet.GIHead.fc2().unsqueeze", "ginet.GIHead.fc2"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "inp", "=", "self", ".", "inp", "\n", "\n", "inp", "=", "self", ".", "fc1", "(", "inp", ")", "\n", "inp", "=", "self", ".", "fc2", "(", "inp", ")", ".", "unsqueeze", "(", "axis", "=", "0", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", ".", "expand", "(", "(", "B", ",", "256", ",", "self", ".", "nclass", ")", ")", "\n", "\n", "out", "=", "self", ".", "conv5", "(", "x", ")", "\n", "\n", "out", ",", "se_out", "=", "self", ".", "gloru", "(", "out", ",", "inp", ")", "\n", "out", "=", "self", ".", "conv6", "(", "out", ")", "\n", "return", "out", ",", "se_out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GlobalReasonUnit.__init__": [[161, 173], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "ginet.GraphLayer", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "num_state", "=", "256", ",", "num_node", "=", "84", ",", "nclass", "=", "59", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_state", "=", "num_state", "\n", "self", ".", "conv_theta", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "num_node", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv_phi", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "num_state", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "graph", "=", "GraphLayer", "(", "num_state", ",", "num_node", ",", "nclass", ")", "\n", "self", ".", "extend_dim", "=", "nn", ".", "Conv2D", "(", "\n", "num_state", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "bn", "=", "layers", ".", "SyncBatchNorm", "(", "in_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GlobalReasonUnit.forward": [[174, 197], ["ginet.GlobalReasonUnit.conv_theta", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "ginet.GlobalReasonUnit.conv_phi", "paddle.flatten().transpose", "paddle.flatten().transpose", "paddle.flatten().transpose", "paddle.flatten().transpose", "paddle.bmm().transpose", "paddle.bmm().transpose", "paddle.bmm().transpose", "paddle.bmm().transpose", "paddle.divide", "paddle.divide", "paddle.divide", "paddle.divide", "ginet.GlobalReasonUnit.graph", "paddle.flatten.transpose", "paddle.flatten.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "ginet.GlobalReasonUnit.transpose().reshape", "ginet.GlobalReasonUnit.extend_dim", "ginet.GlobalReasonUnit.bn", "new_V.transpose", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "ginet.GlobalReasonUnit.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "def", "forward", "(", "self", ",", "x", ",", "inp", ")", ":", "\n", "        ", "B", "=", "self", ".", "conv_theta", "(", "x", ")", "\n", "sizeB", "=", "paddle", ".", "shape", "(", "B", ")", "\n", "B", "=", "paddle", ".", "flatten", "(", "B", ",", "2", ",", "3", ")", "\n", "\n", "sizex", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "x_reduce", "=", "self", ".", "conv_phi", "(", "x", ")", "\n", "\n", "x_reduce", "=", "paddle", ".", "flatten", "(", "x_reduce", ",", "2", ",", "3", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "V", "=", "paddle", ".", "bmm", "(", "B", ",", "x_reduce", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "V", "=", "paddle", ".", "divide", "(", "V", ",", "(", "sizex", "[", "2", "]", "*", "sizex", "[", "3", "]", ")", ".", "astype", "(", "'float32'", ")", ")", "\n", "\n", "class_node", ",", "new_V", "=", "self", ".", "graph", "(", "inp", ",", "V", ")", "\n", "D", "=", "B", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Y", "=", "paddle", ".", "bmm", "(", "D", ",", "new_V", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", ")", "\n", "Y", "=", "Y", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", ".", "reshape", "(", "(", "sizex", "[", "0", "]", ",", "self", ".", "num_state", ",", "sizex", "[", "2", "]", ",", "-", "1", ")", ")", "\n", "Y", "=", "self", ".", "extend_dim", "(", "Y", ")", "\n", "Y", "=", "self", ".", "bn", "(", "Y", ")", "\n", "out", "=", "Y", "+", "x", "\n", "\n", "return", "out", ",", "class_node", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GraphLayer.__init__": [[200, 215], ["paddle.Layer.__init__", "ginet.GCN", "ginet.GCN", "ginet.GraphTransfer", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "str", "paddle.nn.initializer.Assign", "paddle.nn.initializer.Assign", "paddle.nn.initializer.Assign", "paddle.nn.initializer.Assign", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "str", "paddle.nn.initializer.Assign", "paddle.nn.initializer.Assign", "paddle.nn.initializer.Assign", "paddle.nn.initializer.Assign", "ginet.GraphLayer.gamma_vis.numpy", "ginet.GraphLayer.gamma_word.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["    ", "def", "__init__", "(", "self", ",", "num_state", ",", "num_node", ",", "num_class", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vis_gcn", "=", "GCN", "(", "num_state", ",", "num_node", ")", "\n", "self", ".", "word_gcn", "=", "GCN", "(", "num_state", ",", "num_class", ")", "\n", "self", ".", "transfer", "=", "GraphTransfer", "(", "num_state", ")", "\n", "self", ".", "gamma_vis", "=", "paddle", ".", "zeros", "(", "[", "num_node", "]", ")", "\n", "self", ".", "gamma_word", "=", "paddle", ".", "zeros", "(", "[", "num_class", "]", ")", "\n", "self", ".", "gamma_vis", "=", "paddle", ".", "create_parameter", "(", "\n", "shape", "=", "paddle", ".", "shape", "(", "self", ".", "gamma_vis", ")", ",", "\n", "dtype", "=", "str", "(", "self", ".", "gamma_vis", ".", "numpy", "(", ")", ".", "dtype", ")", ",", "\n", "default_initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "Assign", "(", "self", ".", "gamma_vis", ")", ")", "\n", "self", ".", "gamma_word", "=", "paddle", ".", "create_parameter", "(", "\n", "shape", "=", "paddle", ".", "shape", "(", "self", ".", "gamma_word", ")", ",", "\n", "dtype", "=", "str", "(", "self", ".", "gamma_word", ".", "numpy", "(", ")", ".", "dtype", ")", ",", "\n", "default_initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "Assign", "(", "self", ".", "gamma_word", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GraphLayer.forward": [[216, 224], ["ginet.GraphLayer.word_gcn", "ginet.GraphLayer.vis_gcn", "ginet.GraphLayer.transfer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ",", "vis_node", ")", ":", "\n", "        ", "inp", "=", "self", ".", "word_gcn", "(", "inp", ")", "\n", "new_V", "=", "self", ".", "vis_gcn", "(", "vis_node", ")", "\n", "class_node", ",", "vis_node", "=", "self", ".", "transfer", "(", "inp", ",", "new_V", ")", "\n", "\n", "class_node", "=", "self", ".", "gamma_word", "*", "inp", "+", "class_node", "\n", "new_V", "=", "self", ".", "gamma_vis", "*", "vis_node", "+", "new_V", "\n", "return", "class_node", ",", "new_V", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GCN.__init__": [[227, 245], ["paddle.Layer.__init__", "paddle.Conv1D", "paddle.Conv1D", "paddle.ReLU", "paddle.ReLU", "paddle.Conv1D", "paddle.Conv1D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_state", "=", "128", ",", "num_node", "=", "64", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv1D", "(", "\n", "num_node", ",", "\n", "num_node", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "stride", "=", "1", ",", "\n", "groups", "=", "1", ",", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv1D", "(", "\n", "num_state", ",", "\n", "num_state", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "stride", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GCN.forward": [[246, 252], ["ginet.GCN.conv1().transpose", "ginet.GCN.relu", "ginet.GCN.conv2", "ginet.GCN.conv1", "x.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "conv1", "(", "x", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "h", "=", "h", "+", "x", "\n", "h", "=", "self", ".", "relu", "(", "h", ")", "\n", "h", "=", "self", ".", "conv2", "(", "h", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GraphTransfer.__init__": [[257, 270], ["paddle.Layer.__init__", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D", "paddle.Softmax", "paddle.Softmax", "paddle.Softmax", "paddle.Softmax"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channle_in", "=", "in_dim", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv1D", "(", "\n", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "2", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv1D", "(", "\n", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "2", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "value_conv_vis", "=", "nn", ".", "Conv1D", "(", "\n", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "value_conv_word", "=", "nn", ".", "Conv1D", "(", "\n", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "softmax_vis", "=", "nn", ".", "Softmax", "(", "axis", "=", "-", "1", ")", "\n", "self", ".", "softmax_word", "=", "nn", ".", "Softmax", "(", "axis", "=", "-", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ginet.GraphTransfer.forward": [[271, 291], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "ginet.GraphTransfer.query_conv().reshape().transpose", "ginet.GraphTransfer.key_conv().reshape", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "ginet.GraphTransfer.softmax_vis().transpose", "ginet.GraphTransfer.softmax_word", "ginet.GraphTransfer.value_conv_vis().reshape", "ginet.GraphTransfer.value_conv_word().reshape", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "ginet.GraphTransfer.query_conv().reshape", "ginet.GraphTransfer.key_conv", "ginet.GraphTransfer.softmax_vis", "ginet.GraphTransfer.value_conv_vis", "ginet.GraphTransfer.value_conv_word", "ginet.GraphTransfer.query_conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "word", ",", "vis_node", ")", ":", "\n", "        ", "m_batchsize", ",", "C", ",", "Nc", "=", "paddle", ".", "shape", "(", "word", ")", "\n", "m_batchsize", ",", "C", ",", "Nn", "=", "paddle", ".", "shape", "(", "vis_node", ")", "\n", "\n", "proj_query", "=", "self", ".", "query_conv", "(", "word", ")", ".", "reshape", "(", "(", "m_batchsize", ",", "-", "1", ",", "Nc", ")", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "proj_key", "=", "self", ".", "key_conv", "(", "vis_node", ")", ".", "reshape", "(", "(", "m_batchsize", ",", "-", "1", ",", "Nn", ")", ")", "\n", "\n", "energy", "=", "paddle", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "attention_vis", "=", "self", ".", "softmax_vis", "(", "energy", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "attention_word", "=", "self", ".", "softmax_word", "(", "energy", ")", "\n", "\n", "proj_value_vis", "=", "self", ".", "value_conv_vis", "(", "vis_node", ")", ".", "reshape", "(", "(", "m_batchsize", ",", "-", "1", ",", "\n", "Nn", ")", ")", "\n", "proj_value_word", "=", "self", ".", "value_conv_word", "(", "word", ")", ".", "reshape", "(", "(", "m_batchsize", ",", "-", "1", ",", "\n", "Nc", ")", ")", "\n", "\n", "class_out", "=", "paddle", ".", "bmm", "(", "proj_value_vis", ",", "attention_vis", ")", "\n", "node_out", "=", "paddle", ".", "bmm", "(", "proj_value_word", ",", "attention_word", ")", "\n", "return", "class_out", ",", "node_out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.U2Net.__init__": [[42, 80], ["paddle.Layer.__init__", "u2net.RSU7", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU6", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU5", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU4", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU4F", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU4F", "u2net.RSU4F", "u2net.RSU4", "u2net.RSU5", "u2net.RSU6", "u2net.RSU7", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "u2net.U2Net.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "in_ch", "=", "3", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "U2Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stage1", "=", "RSU7", "(", "in_ch", ",", "32", ",", "64", ")", "\n", "self", ".", "pool12", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage2", "=", "RSU6", "(", "64", ",", "32", ",", "128", ")", "\n", "self", ".", "pool23", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage3", "=", "RSU5", "(", "128", ",", "64", ",", "256", ")", "\n", "self", ".", "pool34", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage4", "=", "RSU4", "(", "256", ",", "128", ",", "512", ")", "\n", "self", ".", "pool45", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage5", "=", "RSU4F", "(", "512", ",", "256", ",", "512", ")", "\n", "self", ".", "pool56", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage6", "=", "RSU4F", "(", "512", ",", "256", ",", "512", ")", "\n", "\n", "# decoder", "\n", "self", ".", "stage5d", "=", "RSU4F", "(", "1024", ",", "256", ",", "512", ")", "\n", "self", ".", "stage4d", "=", "RSU4", "(", "1024", ",", "128", ",", "256", ")", "\n", "self", ".", "stage3d", "=", "RSU5", "(", "512", ",", "64", ",", "128", ")", "\n", "self", ".", "stage2d", "=", "RSU6", "(", "256", ",", "32", ",", "64", ")", "\n", "self", ".", "stage1d", "=", "RSU7", "(", "128", ",", "16", ",", "64", ")", "\n", "\n", "self", ".", "side1", "=", "nn", ".", "Conv2D", "(", "64", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side2", "=", "nn", ".", "Conv2D", "(", "64", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side3", "=", "nn", ".", "Conv2D", "(", "128", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side4", "=", "nn", ".", "Conv2D", "(", "256", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side5", "=", "nn", ".", "Conv2D", "(", "512", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side6", "=", "nn", ".", "Conv2D", "(", "512", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "outconv", "=", "nn", ".", "Conv2D", "(", "6", "*", "num_classes", ",", "num_classes", ",", "1", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.U2Net.forward": [[81, 145], ["u2net.U2Net.stage1", "u2net.U2Net.pool12", "u2net.U2Net.stage2", "u2net.U2Net.pool23", "u2net.U2Net.stage3", "u2net.U2Net.pool34", "u2net.U2Net.stage4", "u2net.U2Net.pool45", "u2net.U2Net.stage5", "u2net.U2Net.pool56", "u2net.U2Net.stage6", "u2net._upsample_like", "u2net.U2Net.stage5d", "u2net._upsample_like", "u2net.U2Net.stage4d", "u2net._upsample_like", "u2net.U2Net.stage3d", "u2net._upsample_like", "u2net.U2Net.stage2d", "u2net._upsample_like", "u2net.U2Net.stage1d", "u2net.U2Net.side1", "u2net.U2Net.side2", "u2net._upsample_like", "u2net.U2Net.side3", "u2net._upsample_like", "u2net.U2Net.side4", "u2net._upsample_like", "u2net.U2Net.side5", "u2net._upsample_like", "u2net.U2Net.side6", "u2net._upsample_like", "u2net.U2Net.outconv", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "hx", "=", "x", "\n", "\n", "#stage 1", "\n", "hx1", "=", "self", ".", "stage1", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool12", "(", "hx1", ")", "\n", "\n", "#stage 2", "\n", "hx2", "=", "self", ".", "stage2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool23", "(", "hx2", ")", "\n", "\n", "#stage 3", "\n", "hx3", "=", "self", ".", "stage3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool34", "(", "hx3", ")", "\n", "\n", "#stage 4", "\n", "hx4", "=", "self", ".", "stage4", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool45", "(", "hx4", ")", "\n", "\n", "#stage 5", "\n", "hx5", "=", "self", ".", "stage5", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool56", "(", "hx5", ")", "\n", "\n", "#stage 6", "\n", "hx6", "=", "self", ".", "stage6", "(", "hx", ")", "\n", "hx6up", "=", "_upsample_like", "(", "hx6", ",", "hx5", ")", "\n", "\n", "#-------------------- decoder --------------------", "\n", "hx5d", "=", "self", ".", "stage5d", "(", "paddle", ".", "concat", "(", "(", "hx6up", ",", "hx5", ")", ",", "1", ")", ")", "\n", "hx5dup", "=", "_upsample_like", "(", "hx5d", ",", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "stage4d", "(", "paddle", ".", "concat", "(", "(", "hx5dup", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "stage3d", "(", "paddle", ".", "concat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "stage2d", "(", "paddle", ".", "concat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "stage1d", "(", "paddle", ".", "concat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "#side output", "\n", "d1", "=", "self", ".", "side1", "(", "hx1d", ")", "\n", "\n", "d2", "=", "self", ".", "side2", "(", "hx2d", ")", "\n", "d2", "=", "_upsample_like", "(", "d2", ",", "d1", ")", "\n", "\n", "d3", "=", "self", ".", "side3", "(", "hx3d", ")", "\n", "d3", "=", "_upsample_like", "(", "d3", ",", "d1", ")", "\n", "\n", "d4", "=", "self", ".", "side4", "(", "hx4d", ")", "\n", "d4", "=", "_upsample_like", "(", "d4", ",", "d1", ")", "\n", "\n", "d5", "=", "self", ".", "side5", "(", "hx5d", ")", "\n", "d5", "=", "_upsample_like", "(", "d5", ",", "d1", ")", "\n", "\n", "d6", "=", "self", ".", "side6", "(", "hx6", ")", "\n", "d6", "=", "_upsample_like", "(", "d6", ",", "d1", ")", "\n", "\n", "d0", "=", "self", ".", "outconv", "(", "paddle", ".", "concat", "(", "(", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", ")", ",", "1", ")", ")", "\n", "\n", "return", "[", "d0", ",", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.U2Net.init_weight": [[146, 149], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.U2Netp.__init__": [[156, 194], ["paddle.Layer.__init__", "u2net.RSU7", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU6", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU5", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU4", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU4F", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.RSU4F", "u2net.RSU4F", "u2net.RSU4", "u2net.RSU5", "u2net.RSU6", "u2net.RSU7", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "u2net.U2Netp.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "in_ch", "=", "3", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "U2Netp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stage1", "=", "RSU7", "(", "in_ch", ",", "16", ",", "64", ")", "\n", "self", ".", "pool12", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage2", "=", "RSU6", "(", "64", ",", "16", ",", "64", ")", "\n", "self", ".", "pool23", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage3", "=", "RSU5", "(", "64", ",", "16", ",", "64", ")", "\n", "self", ".", "pool34", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage4", "=", "RSU4", "(", "64", ",", "16", ",", "64", ")", "\n", "self", ".", "pool45", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage5", "=", "RSU4F", "(", "64", ",", "16", ",", "64", ")", "\n", "self", ".", "pool56", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage6", "=", "RSU4F", "(", "64", ",", "16", ",", "64", ")", "\n", "\n", "# decoder", "\n", "self", ".", "stage5d", "=", "RSU4F", "(", "128", ",", "16", ",", "64", ")", "\n", "self", ".", "stage4d", "=", "RSU4", "(", "128", ",", "16", ",", "64", ")", "\n", "self", ".", "stage3d", "=", "RSU5", "(", "128", ",", "16", ",", "64", ")", "\n", "self", ".", "stage2d", "=", "RSU6", "(", "128", ",", "16", ",", "64", ")", "\n", "self", ".", "stage1d", "=", "RSU7", "(", "128", ",", "16", ",", "64", ")", "\n", "\n", "self", ".", "side1", "=", "nn", ".", "Conv2D", "(", "64", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side2", "=", "nn", ".", "Conv2D", "(", "64", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side3", "=", "nn", ".", "Conv2D", "(", "64", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side4", "=", "nn", ".", "Conv2D", "(", "64", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side5", "=", "nn", ".", "Conv2D", "(", "64", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side6", "=", "nn", ".", "Conv2D", "(", "64", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "outconv", "=", "nn", ".", "Conv2D", "(", "6", "*", "num_classes", ",", "num_classes", ",", "1", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.U2Netp.forward": [[195, 259], ["u2net.U2Netp.stage1", "u2net.U2Netp.pool12", "u2net.U2Netp.stage2", "u2net.U2Netp.pool23", "u2net.U2Netp.stage3", "u2net.U2Netp.pool34", "u2net.U2Netp.stage4", "u2net.U2Netp.pool45", "u2net.U2Netp.stage5", "u2net.U2Netp.pool56", "u2net.U2Netp.stage6", "u2net._upsample_like", "u2net.U2Netp.stage5d", "u2net._upsample_like", "u2net.U2Netp.stage4d", "u2net._upsample_like", "u2net.U2Netp.stage3d", "u2net._upsample_like", "u2net.U2Netp.stage2d", "u2net._upsample_like", "u2net.U2Netp.stage1d", "u2net.U2Netp.side1", "u2net.U2Netp.side2", "u2net._upsample_like", "u2net.U2Netp.side3", "u2net._upsample_like", "u2net.U2Netp.side4", "u2net._upsample_like", "u2net.U2Netp.side5", "u2net._upsample_like", "u2net.U2Netp.side6", "u2net._upsample_like", "u2net.U2Netp.outconv", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "hx", "=", "x", "\n", "\n", "#stage 1", "\n", "hx1", "=", "self", ".", "stage1", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool12", "(", "hx1", ")", "\n", "\n", "#stage 2", "\n", "hx2", "=", "self", ".", "stage2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool23", "(", "hx2", ")", "\n", "\n", "#stage 3", "\n", "hx3", "=", "self", ".", "stage3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool34", "(", "hx3", ")", "\n", "\n", "#stage 4", "\n", "hx4", "=", "self", ".", "stage4", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool45", "(", "hx4", ")", "\n", "\n", "#stage 5", "\n", "hx5", "=", "self", ".", "stage5", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool56", "(", "hx5", ")", "\n", "\n", "#stage 6", "\n", "hx6", "=", "self", ".", "stage6", "(", "hx", ")", "\n", "hx6up", "=", "_upsample_like", "(", "hx6", ",", "hx5", ")", "\n", "\n", "#decoder", "\n", "hx5d", "=", "self", ".", "stage5d", "(", "paddle", ".", "concat", "(", "(", "hx6up", ",", "hx5", ")", ",", "1", ")", ")", "\n", "hx5dup", "=", "_upsample_like", "(", "hx5d", ",", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "stage4d", "(", "paddle", ".", "concat", "(", "(", "hx5dup", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "stage3d", "(", "paddle", ".", "concat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "stage2d", "(", "paddle", ".", "concat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "stage1d", "(", "paddle", ".", "concat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "#side output", "\n", "d1", "=", "self", ".", "side1", "(", "hx1d", ")", "\n", "\n", "d2", "=", "self", ".", "side2", "(", "hx2d", ")", "\n", "d2", "=", "_upsample_like", "(", "d2", ",", "d1", ")", "\n", "\n", "d3", "=", "self", ".", "side3", "(", "hx3d", ")", "\n", "d3", "=", "_upsample_like", "(", "d3", ",", "d1", ")", "\n", "\n", "d4", "=", "self", ".", "side4", "(", "hx4d", ")", "\n", "d4", "=", "_upsample_like", "(", "d4", ",", "d1", ")", "\n", "\n", "d5", "=", "self", ".", "side5", "(", "hx5d", ")", "\n", "d5", "=", "_upsample_like", "(", "d5", ",", "d1", ")", "\n", "\n", "d6", "=", "self", ".", "side6", "(", "hx6", ")", "\n", "d6", "=", "_upsample_like", "(", "d6", ",", "d1", ")", "\n", "\n", "d0", "=", "self", ".", "outconv", "(", "paddle", ".", "concat", "(", "(", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", ")", ",", "1", ")", ")", "\n", "\n", "return", "[", "d0", ",", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.U2Netp.init_weight": [[260, 263], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.REBNCONV.__init__": [[266, 273], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "out_ch", "=", "3", ",", "dirate", "=", "1", ")", ":", "\n", "        ", "super", "(", "REBNCONV", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_s1", "=", "nn", ".", "Conv2D", "(", "\n", "in_ch", ",", "out_ch", ",", "3", ",", "padding", "=", "1", "*", "dirate", ",", "dilation", "=", "1", "*", "dirate", ")", "\n", "self", ".", "bn_s1", "=", "nn", ".", "BatchNorm2D", "(", "out_ch", ")", "\n", "self", ".", "relu_s1", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.REBNCONV.forward": [[274, 280], ["u2net.REBNCONV.relu_s1", "u2net.REBNCONV.bn_s1", "u2net.REBNCONV.conv_s1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "hx", "=", "x", "\n", "xout", "=", "self", ".", "relu_s1", "(", "self", ".", "bn_s1", "(", "self", ".", "conv_s1", "(", "hx", ")", ")", ")", "\n", "\n", "return", "xout", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU7.__init__": [[292, 322], ["paddle.Layer.__init__", "u2net.REBNCONV", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU7", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool4", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv5", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool5", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv6", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv7", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "\n", "self", ".", "rebnconv6d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv5d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv4d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU7.forward": [[323, 365], ["u2net.RSU7.rebnconvin", "u2net.RSU7.rebnconv1", "u2net.RSU7.pool1", "u2net.RSU7.rebnconv2", "u2net.RSU7.pool2", "u2net.RSU7.rebnconv3", "u2net.RSU7.pool3", "u2net.RSU7.rebnconv4", "u2net.RSU7.pool4", "u2net.RSU7.rebnconv5", "u2net.RSU7.pool5", "u2net.RSU7.rebnconv6", "u2net.RSU7.rebnconv7", "u2net.RSU7.rebnconv6d", "u2net._upsample_like", "u2net.RSU7.rebnconv5d", "u2net._upsample_like", "u2net.RSU7.rebnconv4d", "u2net._upsample_like", "u2net.RSU7.rebnconv3d", "u2net._upsample_like", "u2net.RSU7.rebnconv2d", "u2net._upsample_like", "u2net.RSU7.rebnconv1d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "hx", "=", "x", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx", "=", "self", ".", "pool1", "(", "hx1", ")", "\n", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool2", "(", "hx2", ")", "\n", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool3", "(", "hx3", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool4", "(", "hx4", ")", "\n", "\n", "hx5", "=", "self", ".", "rebnconv5", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool5", "(", "hx5", ")", "\n", "\n", "hx6", "=", "self", ".", "rebnconv6", "(", "hx", ")", "\n", "\n", "hx7", "=", "self", ".", "rebnconv7", "(", "hx6", ")", "\n", "\n", "hx6d", "=", "self", ".", "rebnconv6d", "(", "paddle", ".", "concat", "(", "(", "hx7", ",", "hx6", ")", ",", "1", ")", ")", "\n", "hx6dup", "=", "_upsample_like", "(", "hx6d", ",", "hx5", ")", "\n", "\n", "hx5d", "=", "self", ".", "rebnconv5d", "(", "paddle", ".", "concat", "(", "(", "hx6dup", ",", "hx5", ")", ",", "1", ")", ")", "\n", "hx5dup", "=", "_upsample_like", "(", "hx5d", ",", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "rebnconv4d", "(", "paddle", ".", "concat", "(", "(", "hx5dup", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "paddle", ".", "concat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "paddle", ".", "concat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "paddle", ".", "concat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU6.__init__": [[369, 395], ["paddle.Layer.__init__", "u2net.REBNCONV", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU6", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool4", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv5", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv6", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "\n", "self", ".", "rebnconv5d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv4d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU6.forward": [[396, 433], ["u2net.RSU6.rebnconvin", "u2net.RSU6.rebnconv1", "u2net.RSU6.pool1", "u2net.RSU6.rebnconv2", "u2net.RSU6.pool2", "u2net.RSU6.rebnconv3", "u2net.RSU6.pool3", "u2net.RSU6.rebnconv4", "u2net.RSU6.pool4", "u2net.RSU6.rebnconv5", "u2net.RSU6.rebnconv6", "u2net.RSU6.rebnconv5d", "u2net._upsample_like", "u2net.RSU6.rebnconv4d", "u2net._upsample_like", "u2net.RSU6.rebnconv3d", "u2net._upsample_like", "u2net.RSU6.rebnconv2d", "u2net._upsample_like", "u2net.RSU6.rebnconv1d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "hx", "=", "x", "\n", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx", "=", "self", ".", "pool1", "(", "hx1", ")", "\n", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool2", "(", "hx2", ")", "\n", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool3", "(", "hx3", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool4", "(", "hx4", ")", "\n", "\n", "hx5", "=", "self", ".", "rebnconv5", "(", "hx", ")", "\n", "\n", "hx6", "=", "self", ".", "rebnconv6", "(", "hx5", ")", "\n", "\n", "hx5d", "=", "self", ".", "rebnconv5d", "(", "paddle", ".", "concat", "(", "(", "hx6", ",", "hx5", ")", ",", "1", ")", ")", "\n", "hx5dup", "=", "_upsample_like", "(", "hx5d", ",", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "rebnconv4d", "(", "paddle", ".", "concat", "(", "(", "hx5dup", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "paddle", ".", "concat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "paddle", ".", "concat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "paddle", ".", "concat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU5.__init__": [[437, 459], ["paddle.Layer.__init__", "u2net.REBNCONV", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv5", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "\n", "self", ".", "rebnconv4d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU5.forward": [[460, 491], ["u2net.RSU5.rebnconvin", "u2net.RSU5.rebnconv1", "u2net.RSU5.pool1", "u2net.RSU5.rebnconv2", "u2net.RSU5.pool2", "u2net.RSU5.rebnconv3", "u2net.RSU5.pool3", "u2net.RSU5.rebnconv4", "u2net.RSU5.rebnconv5", "u2net.RSU5.rebnconv4d", "u2net._upsample_like", "u2net.RSU5.rebnconv3d", "u2net._upsample_like", "u2net.RSU5.rebnconv2d", "u2net._upsample_like", "u2net.RSU5.rebnconv1d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "hx", "=", "x", "\n", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx", "=", "self", ".", "pool1", "(", "hx1", ")", "\n", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool2", "(", "hx2", ")", "\n", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool3", "(", "hx3", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx", ")", "\n", "\n", "hx5", "=", "self", ".", "rebnconv5", "(", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "rebnconv4d", "(", "paddle", ".", "concat", "(", "(", "hx5", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "paddle", ".", "concat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "paddle", ".", "concat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "paddle", ".", "concat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU4.__init__": [[495, 513], ["paddle.Layer.__init__", "u2net.REBNCONV", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU4", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU4.forward": [[514, 539], ["u2net.RSU4.rebnconvin", "u2net.RSU4.rebnconv1", "u2net.RSU4.pool1", "u2net.RSU4.rebnconv2", "u2net.RSU4.pool2", "u2net.RSU4.rebnconv3", "u2net.RSU4.rebnconv4", "u2net.RSU4.rebnconv3d", "u2net._upsample_like", "u2net.RSU4.rebnconv2d", "u2net._upsample_like", "u2net.RSU4.rebnconv1d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "hx", "=", "x", "\n", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx", "=", "self", ".", "pool1", "(", "hx1", ")", "\n", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool2", "(", "hx2", ")", "\n", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "paddle", ".", "concat", "(", "(", "hx4", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "paddle", ".", "concat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "paddle", ".", "concat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU4F.__init__": [[543, 557], ["paddle.Layer.__init__", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV", "u2net.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU4F", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "4", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "8", ")", "\n", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "4", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net.RSU4F.forward": [[558, 575], ["u2net.RSU4F.rebnconvin", "u2net.RSU4F.rebnconv1", "u2net.RSU4F.rebnconv2", "u2net.RSU4F.rebnconv3", "u2net.RSU4F.rebnconv4", "u2net.RSU4F.rebnconv3d", "u2net.RSU4F.rebnconv2d", "u2net.RSU4F.rebnconv1d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "hx", "=", "x", "\n", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx1", ")", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx2", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "paddle", ".", "concat", "(", "(", "hx4", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "paddle", ".", "concat", "(", "(", "hx3d", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "paddle", ".", "concat", "(", "(", "hx2d", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.u2net._upsample_like": [[283, 288], ["paddle.upsample", "paddle.shape", "paddle.shape", "paddle.shape"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "_upsample_like", "(", "src", ",", "tar", ")", ":", "\n", "\n", "    ", "src", "=", "F", ".", "upsample", "(", "src", ",", "size", "=", "paddle", ".", "shape", "(", "tar", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "return", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.emanet.EMANet.__init__": [[49, 73], ["paddle.Layer.__init__", "emanet.EMAHead", "emanet.EMANet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "2", ",", "3", ")", ",", "\n", "ema_channels", "=", "512", ",", "\n", "gc_channels", "=", "256", ",", "\n", "num_bases", "=", "64", ",", "\n", "stage_num", "=", "3", ",", "\n", "momentum", "=", "0.1", ",", "\n", "concat_input", "=", "True", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "in_channels", "=", "[", "self", ".", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "]", "\n", "self", ".", "head", "=", "EMAHead", "(", "num_classes", ",", "in_channels", ",", "ema_channels", ",", "gc_channels", ",", "\n", "num_bases", ",", "stage_num", ",", "momentum", ",", "concat_input", ",", "\n", "enable_auxiliary_loss", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.emanet.EMANet.forward": [[74, 87], ["emanet.EMANet.backbone", "emanet.EMANet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "logit_list", "=", "self", ".", "head", "(", "feats", ")", "\n", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.emanet.EMANet.init_weight": [[88, 91], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.emanet.EMAHead.__init__": [[109, 145], ["paddle.Layer.__init__", "emanet.EMAU", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_channels", ",", "\n", "ema_channels", ",", "\n", "gc_channels", ",", "\n", "num_bases", ",", "\n", "stage_num", ",", "\n", "momentum", ",", "\n", "concat_input", "=", "True", ",", "\n", "enable_auxiliary_loss", "=", "True", ")", ":", "\n", "        ", "super", "(", "EMAHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "[", "-", "1", "]", "\n", "self", ".", "concat_input", "=", "concat_input", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "\n", "self", ".", "emau", "=", "EMAU", "(", "ema_channels", ",", "num_bases", ",", "stage_num", ",", "momentum", "=", "momentum", ")", "\n", "self", ".", "ema_in_conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "self", ".", "in_channels", ",", "\n", "out_channels", "=", "ema_channels", ",", "\n", "kernel_size", "=", "3", ")", "\n", "self", ".", "ema_mid_conv", "=", "nn", ".", "Conv2D", "(", "ema_channels", ",", "ema_channels", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "ema_out_conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "ema_channels", ",", "out_channels", "=", "ema_channels", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "bottleneck", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "ema_channels", ",", "out_channels", "=", "gc_channels", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "cls", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout2D", "(", "p", "=", "0.1", ")", ",", "nn", ".", "Conv2D", "(", "gc_channels", ",", "num_classes", ",", "1", ")", ")", "\n", "self", ".", "aux", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "1024", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "Dropout2D", "(", "p", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "256", ",", "num_classes", ",", "1", ")", ")", "\n", "if", "self", ".", "concat_input", ":", "\n", "            ", "self", ".", "conv_cat", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", "+", "gc_channels", ",", "gc_channels", ",", "kernel_size", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.emanet.EMAHead.forward": [[146, 164], ["emanet.EMAHead.ema_in_conv", "emanet.EMAHead.ema_mid_conv", "emanet.EMAHead.emau", "paddle.relu", "paddle.relu", "paddle.relu", "emanet.EMAHead.ema_out_conv", "paddle.relu", "paddle.relu", "paddle.relu", "emanet.EMAHead.bottleneck", "emanet.EMAHead.cls", "emanet.EMAHead.conv_cat", "emanet.EMAHead.aux", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "C3", ",", "C4", "=", "feat_list", "\n", "feats", "=", "self", ".", "ema_in_conv", "(", "C4", ")", "\n", "identity", "=", "feats", "\n", "feats", "=", "self", ".", "ema_mid_conv", "(", "feats", ")", "\n", "recon", "=", "self", ".", "emau", "(", "feats", ")", "\n", "recon", "=", "F", ".", "relu", "(", "recon", ")", "\n", "recon", "=", "self", ".", "ema_out_conv", "(", "recon", ")", "\n", "output", "=", "F", ".", "relu", "(", "identity", "+", "recon", ")", "\n", "output", "=", "self", ".", "bottleneck", "(", "output", ")", "\n", "if", "self", ".", "concat_input", ":", "\n", "            ", "output", "=", "self", ".", "conv_cat", "(", "paddle", ".", "concat", "(", "[", "C4", ",", "output", "]", ",", "axis", "=", "1", ")", ")", "\n", "", "output", "=", "self", ".", "cls", "(", "output", ")", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "auxout", "=", "self", ".", "aux", "(", "C3", ")", "\n", "return", "[", "output", ",", "auxout", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "output", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.emanet.EMAU.__init__": [[176, 188], ["paddle.Layer.__init__", "emanet.EMAU.create_parameter", "paddle.normalize", "paddle.normalize", "paddle.normalize", "emanet.EMAU.register_buffer", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.nn.initializer.KaimingNormal", "paddle.nn.initializer.KaimingNormal", "paddle.nn.initializer.KaimingNormal", "paddle.nn.initializer.KaimingNormal", "paddle.nn.initializer.KaimingNormal", "paddle.nn.initializer.KaimingNormal", "paddle.nn.initializer.KaimingNormal", "paddle.nn.initializer.KaimingNormal", "paddle.nn.initializer.KaimingNormal"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["def", "__init__", "(", "self", ",", "c", ",", "k", ",", "stage_num", "=", "3", ",", "momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "EMAU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "stage_num", ">=", "1", "\n", "self", ".", "stage_num", "=", "stage_num", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "c", "=", "c", "\n", "\n", "tmp_mu", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "[", "1", ",", "c", ",", "k", "]", ",", "\n", "default_initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "KaimingNormal", "(", "k", ")", ")", "\n", "mu", "=", "F", ".", "normalize", "(", "paddle", ".", "to_tensor", "(", "tmp_mu", ")", ",", "axis", "=", "1", ",", "p", "=", "2", ")", "\n", "self", ".", "register_buffer", "(", "'mu'", ",", "mu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.emanet.EMAU.forward": [[189, 217], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.reshape.flatten", "paddle.reshape.flatten", "paddle.reshape.flatten", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "range", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.all_reduce", "paddle.distributed.all_reduce", "paddle.distributed.all_reduce", "paddle.distributed.all_reduce", "paddle.distributed.all_reduce", "paddle.distributed.all_reduce", "paddle.distributed.all_reduce", "paddle.distributed.all_reduce", "paddle.distributed.all_reduce", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", "\n", "mu", "=", "paddle", ".", "tile", "(", "self", ".", "mu", ",", "[", "x_shape", "[", "0", "]", ",", "1", ",", "1", "]", ")", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "stage_num", ")", ":", "\n", "                ", "x_t", "=", "paddle", ".", "transpose", "(", "x", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "z", "=", "paddle", ".", "bmm", "(", "x_t", ",", "mu", ")", "\n", "z", "=", "F", ".", "softmax", "(", "z", ",", "axis", "=", "2", ")", "\n", "z_", "=", "F", ".", "normalize", "(", "z", ",", "axis", "=", "1", ",", "p", "=", "1", ")", "\n", "mu", "=", "paddle", ".", "bmm", "(", "x", ",", "z_", ")", "\n", "mu", "=", "F", ".", "normalize", "(", "mu", ",", "axis", "=", "1", ",", "p", "=", "2", ")", "\n", "\n", "", "", "z_t", "=", "paddle", ".", "transpose", "(", "z", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "x", "=", "paddle", ".", "matmul", "(", "mu", ",", "z_t", ")", "\n", "x", "=", "paddle", ".", "reshape", "(", "x", ",", "[", "0", ",", "self", ".", "c", ",", "x_shape", "[", "2", "]", ",", "x_shape", "[", "3", "]", "]", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "mu", "=", "paddle", ".", "mean", "(", "mu", ",", "0", ",", "keepdim", "=", "True", ")", "\n", "mu", "=", "F", ".", "normalize", "(", "mu", ",", "axis", "=", "1", ",", "p", "=", "2", ")", "\n", "mu", "=", "self", ".", "mu", "*", "(", "1", "-", "self", ".", "momentum", ")", "+", "mu", "*", "self", ".", "momentum", "\n", "if", "paddle", ".", "distributed", ".", "get_world_size", "(", ")", ">", "1", ":", "\n", "                ", "mu", "=", "paddle", ".", "distributed", ".", "all_reduce", "(", "mu", ")", "\n", "mu", "/=", "paddle", ".", "distributed", ".", "get_world_size", "(", ")", "\n", "", "self", ".", "mu", "=", "mu", "\n", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.isanet.ISANet.__init__": [[44, 63], ["paddle.Layer.__init__", "isanet.ISAHead", "isanet.ISANet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "2", ",", "3", ")", ",", "\n", "isa_channels", "=", "256", ",", "\n", "down_factor", "=", "(", "8", ",", "8", ")", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "in_channels", "=", "[", "self", ".", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "]", "\n", "self", ".", "head", "=", "ISAHead", "(", "num_classes", ",", "in_channels", ",", "isa_channels", ",", "down_factor", ",", "\n", "enable_auxiliary_loss", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.isanet.ISANet.forward": [[64, 78], ["isanet.ISANet.backbone", "isanet.ISANet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "logit_list", "=", "self", ".", "head", "(", "feats", ")", "\n", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "align_mode", "=", "1", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.isanet.ISANet.init_weight": [[79, 82], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.isanet.ISAHead.__init__": [[96, 120], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "isanet.SelfAttentionBlock", "isanet.SelfAttentionBlock", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "in_channels", ",", "isa_channels", ",", "down_factor", ",", "\n", "enable_auxiliary_loss", ")", ":", "\n", "        ", "super", "(", "ISAHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "[", "-", "1", "]", "\n", "inter_channels", "=", "self", ".", "in_channels", "//", "4", "\n", "self", ".", "inter_channels", "=", "inter_channels", "\n", "self", ".", "down_factor", "=", "down_factor", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "self", ".", "in_conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", ",", "inter_channels", ",", "3", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "global_relation", "=", "SelfAttentionBlock", "(", "inter_channels", ",", "isa_channels", ")", "\n", "self", ".", "local_relation", "=", "SelfAttentionBlock", "(", "inter_channels", ",", "isa_channels", ")", "\n", "self", ".", "out_conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "inter_channels", "*", "2", ",", "inter_channels", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "cls", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout2D", "(", "p", "=", "0.1", ")", ",", "nn", ".", "Conv2D", "(", "inter_channels", ",", "num_classes", ",", "1", ")", ")", "\n", "self", ".", "aux", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "1024", ",", "\n", "out_channels", "=", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Dropout2D", "(", "p", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "256", ",", "num_classes", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.isanet.ISAHead.forward": [[121, 169], ["isanet.ISAHead.in_conv", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.slice.reshape", "paddle.slice.reshape", "paddle.slice.reshape", "paddle.slice.transpose().reshape", "paddle.slice.transpose().reshape", "paddle.slice.transpose().reshape", "isanet.ISAHead.global_relation", "paddle.slice.reshape", "paddle.slice.reshape", "paddle.slice.reshape", "paddle.slice.transpose().reshape", "paddle.slice.transpose().reshape", "paddle.slice.transpose().reshape", "isanet.ISAHead.local_relation", "paddle.slice.reshape", "paddle.slice.reshape", "paddle.slice.reshape", "paddle.slice.transpose().reshape", "paddle.slice.transpose().reshape", "paddle.slice.transpose().reshape", "isanet.ISAHead.out_conv", "isanet.ISAHead.cls", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.ceil().astype", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.slice", "paddle.slice", "paddle.slice", "paddle.slice", "paddle.slice", "paddle.slice", "paddle.slice", "paddle.slice", "paddle.slice", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "isanet.ISAHead.aux", "paddle.slice.transpose", "paddle.slice.transpose", "paddle.slice.transpose", "paddle.slice.transpose", "paddle.slice.transpose", "paddle.slice.transpose", "paddle.slice.transpose", "paddle.slice.transpose", "paddle.slice.transpose", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil", "paddle.ceil"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "C3", ",", "C4", "=", "feat_list", "\n", "x", "=", "self", ".", "in_conv", "(", "C4", ")", "\n", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "P_h", ",", "P_w", "=", "self", ".", "down_factor", "\n", "Q_h", ",", "Q_w", "=", "paddle", ".", "ceil", "(", "x_shape", "[", "2", "]", "/", "P_h", ")", ".", "astype", "(", "'int32'", ")", ",", "paddle", ".", "ceil", "(", "\n", "x_shape", "[", "3", "]", "/", "P_w", ")", ".", "astype", "(", "'int32'", ")", "\n", "pad_h", ",", "pad_w", "=", "(", "Q_h", "*", "P_h", "-", "x_shape", "[", "2", "]", ")", ".", "astype", "(", "'int32'", ")", ",", "(", "\n", "Q_w", "*", "P_w", "-", "x_shape", "[", "3", "]", ")", ".", "astype", "(", "'int32'", ")", "\n", "if", "pad_h", ">", "0", "or", "pad_w", ">", "0", ":", "\n", "            ", "padding", "=", "paddle", ".", "concat", "(", "\n", "[", "\n", "pad_w", "//", "2", ",", "pad_w", "-", "pad_w", "//", "2", ",", "pad_h", "//", "2", ",", "\n", "pad_h", "-", "pad_h", "//", "2", "\n", "]", ",", "\n", "axis", "=", "0", ")", "\n", "feat", "=", "F", ".", "pad", "(", "x", ",", "padding", ")", "\n", "", "else", ":", "\n", "            ", "feat", "=", "x", "\n", "\n", "", "feat", "=", "feat", ".", "reshape", "(", "[", "0", ",", "x_shape", "[", "1", "]", ",", "Q_h", ",", "P_h", ",", "Q_w", ",", "P_w", "]", ")", "\n", "feat", "=", "feat", ".", "transpose", "(", "[", "0", ",", "3", ",", "5", ",", "1", ",", "2", ",", "\n", "4", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "self", ".", "inter_channels", ",", "Q_h", ",", "Q_w", "]", ")", "\n", "feat", "=", "self", ".", "global_relation", "(", "feat", ")", "\n", "\n", "feat", "=", "feat", ".", "reshape", "(", "[", "x_shape", "[", "0", "]", ",", "P_h", ",", "P_w", ",", "x_shape", "[", "1", "]", ",", "Q_h", ",", "Q_w", "]", ")", "\n", "feat", "=", "feat", ".", "transpose", "(", "[", "0", ",", "4", ",", "5", ",", "3", ",", "1", ",", "\n", "2", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "self", ".", "inter_channels", ",", "P_h", ",", "P_w", "]", ")", "\n", "feat", "=", "self", ".", "local_relation", "(", "feat", ")", "\n", "\n", "feat", "=", "feat", ".", "reshape", "(", "[", "x_shape", "[", "0", "]", ",", "Q_h", ",", "Q_w", ",", "x_shape", "[", "1", "]", ",", "P_h", ",", "P_w", "]", ")", "\n", "feat", "=", "feat", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "4", ",", "2", ",", "5", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "self", ".", "inter_channels", ",", "P_h", "*", "Q_h", ",", "P_w", "*", "Q_w", "]", ")", "\n", "if", "pad_h", ">", "0", "or", "pad_w", ">", "0", ":", "\n", "            ", "feat", "=", "paddle", ".", "slice", "(", "\n", "feat", ",", "\n", "axes", "=", "[", "2", ",", "3", "]", ",", "\n", "starts", "=", "[", "pad_h", "//", "2", ",", "pad_w", "//", "2", "]", ",", "\n", "ends", "=", "[", "pad_h", "//", "2", "+", "x_shape", "[", "2", "]", ",", "pad_w", "//", "2", "+", "x_shape", "[", "3", "]", "]", ")", "\n", "\n", "", "feat", "=", "self", ".", "out_conv", "(", "paddle", ".", "concat", "(", "[", "feat", ",", "x", "]", ",", "axis", "=", "1", ")", ")", "\n", "output", "=", "self", ".", "cls", "(", "feat", ")", "\n", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "auxout", "=", "self", ".", "aux", "(", "C3", ")", "\n", "return", "[", "output", ",", "auxout", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "output", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.isanet.SelfAttentionBlock.__init__": [[179, 197], ["paddleseg.models.layers.AttentionBlock.__init__", "isanet.SelfAttentionBlock.build_project"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.AttentionBlock.build_project"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "channels", ")", ":", "\n", "        ", "super", "(", "SelfAttentionBlock", ",", "self", ")", ".", "__init__", "(", "\n", "key_in_channels", "=", "in_channels", ",", "\n", "query_in_channels", "=", "in_channels", ",", "\n", "channels", "=", "channels", ",", "\n", "out_channels", "=", "in_channels", ",", "\n", "share_key_query", "=", "False", ",", "\n", "query_downsample", "=", "None", ",", "\n", "key_downsample", "=", "None", ",", "\n", "key_query_num_convs", "=", "2", ",", "\n", "key_query_norm", "=", "True", ",", "\n", "value_out_num_convs", "=", "1", ",", "\n", "value_out_norm", "=", "False", ",", "\n", "matmul_norm", "=", "True", ",", "\n", "with_out", "=", "False", ")", "\n", "\n", "self", ".", "output_project", "=", "self", ".", "build_project", "(", "\n", "in_channels", ",", "in_channels", ",", "num_convs", "=", "1", ",", "use_conv_module", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.isanet.SelfAttentionBlock.forward": [[198, 201], ["super().forward", "isanet.SelfAttentionBlock.output_project"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.ScaleLayer.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "context", "=", "super", "(", "SelfAttentionBlock", ",", "self", ")", ".", "forward", "(", "x", ",", "x", ")", "\n", "return", "self", ".", "output_project", "(", "context", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.ENet.__init__": [[44, 142], ["paddle.Layer.__init__", "enet.InitialBlock", "enet.DownsamplingBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.DownsamplingBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.UpsamplingBottleneck", "enet.RegularBottleneck", "enet.RegularBottleneck", "enet.UpsamplingBottleneck", "enet.RegularBottleneck", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "enet.ENet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "pretrained", "=", "None", ",", "\n", "encoder_relu", "=", "False", ",", "\n", "decoder_relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "ENet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "numclasses", "=", "num_classes", "\n", "self", ".", "initial_block", "=", "InitialBlock", "(", "3", ",", "16", ",", "relu", "=", "encoder_relu", ")", "\n", "\n", "self", ".", "downsample1_0", "=", "DownsamplingBottleneck", "(", "\n", "16", ",", "64", ",", "return_indices", "=", "True", ",", "dropout_prob", "=", "0.01", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "regular1_1", "=", "RegularBottleneck", "(", "\n", "64", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.01", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "regular1_2", "=", "RegularBottleneck", "(", "\n", "64", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.01", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "regular1_3", "=", "RegularBottleneck", "(", "\n", "64", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.01", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "regular1_4", "=", "RegularBottleneck", "(", "\n", "64", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.01", ",", "relu", "=", "encoder_relu", ")", "\n", "\n", "self", ".", "downsample2_0", "=", "DownsamplingBottleneck", "(", "\n", "64", ",", "128", ",", "return_indices", "=", "True", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "regular2_1", "=", "RegularBottleneck", "(", "\n", "128", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "dilated2_2", "=", "RegularBottleneck", "(", "\n", "128", ",", "dilation", "=", "2", ",", "padding", "=", "2", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "asymmetric2_3", "=", "RegularBottleneck", "(", "\n", "128", ",", "\n", "kernel_size", "=", "5", ",", "\n", "padding", "=", "2", ",", "\n", "asymmetric", "=", "True", ",", "\n", "dropout_prob", "=", "0.1", ",", "\n", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "dilated2_4", "=", "RegularBottleneck", "(", "\n", "128", ",", "dilation", "=", "4", ",", "padding", "=", "4", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "regular2_5", "=", "RegularBottleneck", "(", "\n", "128", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "dilated2_6", "=", "RegularBottleneck", "(", "\n", "128", ",", "dilation", "=", "8", ",", "padding", "=", "8", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "asymmetric2_7", "=", "RegularBottleneck", "(", "\n", "128", ",", "\n", "kernel_size", "=", "5", ",", "\n", "asymmetric", "=", "True", ",", "\n", "padding", "=", "2", ",", "\n", "dropout_prob", "=", "0.1", ",", "\n", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "dilated2_8", "=", "RegularBottleneck", "(", "\n", "128", ",", "dilation", "=", "16", ",", "padding", "=", "16", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "\n", "self", ".", "regular3_0", "=", "RegularBottleneck", "(", "\n", "128", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "dilated3_1", "=", "RegularBottleneck", "(", "\n", "128", ",", "dilation", "=", "2", ",", "padding", "=", "2", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "asymmetric3_2", "=", "RegularBottleneck", "(", "\n", "128", ",", "\n", "kernel_size", "=", "5", ",", "\n", "padding", "=", "2", ",", "\n", "asymmetric", "=", "True", ",", "\n", "dropout_prob", "=", "0.1", ",", "\n", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "dilated3_3", "=", "RegularBottleneck", "(", "\n", "128", ",", "dilation", "=", "4", ",", "padding", "=", "4", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "regular3_4", "=", "RegularBottleneck", "(", "\n", "128", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "dilated3_5", "=", "RegularBottleneck", "(", "\n", "128", ",", "dilation", "=", "8", ",", "padding", "=", "8", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "asymmetric3_6", "=", "RegularBottleneck", "(", "\n", "128", ",", "\n", "kernel_size", "=", "5", ",", "\n", "asymmetric", "=", "True", ",", "\n", "padding", "=", "2", ",", "\n", "dropout_prob", "=", "0.1", ",", "\n", "relu", "=", "encoder_relu", ")", "\n", "self", ".", "dilated3_7", "=", "RegularBottleneck", "(", "\n", "128", ",", "dilation", "=", "16", ",", "padding", "=", "16", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "encoder_relu", ")", "\n", "\n", "self", ".", "upsample4_0", "=", "UpsamplingBottleneck", "(", "\n", "128", ",", "64", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "decoder_relu", ")", "\n", "self", ".", "regular4_1", "=", "RegularBottleneck", "(", "\n", "64", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "decoder_relu", ")", "\n", "self", ".", "regular4_2", "=", "RegularBottleneck", "(", "\n", "64", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "decoder_relu", ")", "\n", "\n", "self", ".", "upsample5_0", "=", "UpsamplingBottleneck", "(", "\n", "64", ",", "16", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "decoder_relu", ")", "\n", "self", ".", "regular5_1", "=", "RegularBottleneck", "(", "\n", "16", ",", "padding", "=", "1", ",", "dropout_prob", "=", "0.1", ",", "relu", "=", "decoder_relu", ")", "\n", "self", ".", "transposed_conv", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "16", ",", "\n", "num_classes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.ENet.forward": [[143, 183], ["enet.ENet.initial_block", "enet.ENet.downsample1_0", "enet.ENet.regular1_1", "enet.ENet.regular1_2", "enet.ENet.regular1_3", "enet.ENet.regular1_4", "enet.ENet.downsample2_0", "enet.ENet.regular2_1", "enet.ENet.dilated2_2", "enet.ENet.asymmetric2_3", "enet.ENet.dilated2_4", "enet.ENet.regular2_5", "enet.ENet.dilated2_6", "enet.ENet.asymmetric2_7", "enet.ENet.dilated2_8", "enet.ENet.regular3_0", "enet.ENet.dilated3_1", "enet.ENet.asymmetric3_2", "enet.ENet.dilated3_3", "enet.ENet.regular3_4", "enet.ENet.dilated3_5", "enet.ENet.asymmetric3_6", "enet.ENet.dilated3_7", "enet.ENet.upsample4_0", "enet.ENet.regular4_1", "enet.ENet.regular4_2", "enet.ENet.upsample5_0", "enet.ENet.regular5_1", "enet.ENet.transposed_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "input_size", "=", "x", ".", "shape", "\n", "x", "=", "self", ".", "initial_block", "(", "x", ")", "\n", "\n", "stage1_input_size", "=", "x", ".", "shape", "\n", "x", ",", "max_indices1_0", "=", "self", ".", "downsample1_0", "(", "x", ")", "\n", "x", "=", "self", ".", "regular1_1", "(", "x", ")", "\n", "x", "=", "self", ".", "regular1_2", "(", "x", ")", "\n", "x", "=", "self", ".", "regular1_3", "(", "x", ")", "\n", "x", "=", "self", ".", "regular1_4", "(", "x", ")", "\n", "\n", "stage2_input_size", "=", "x", ".", "shape", "\n", "x", ",", "max_indices2_0", "=", "self", ".", "downsample2_0", "(", "x", ")", "\n", "x", "=", "self", ".", "regular2_1", "(", "x", ")", "\n", "x", "=", "self", ".", "dilated2_2", "(", "x", ")", "\n", "x", "=", "self", ".", "asymmetric2_3", "(", "x", ")", "\n", "x", "=", "self", ".", "dilated2_4", "(", "x", ")", "\n", "x", "=", "self", ".", "regular2_5", "(", "x", ")", "\n", "x", "=", "self", ".", "dilated2_6", "(", "x", ")", "\n", "x", "=", "self", ".", "asymmetric2_7", "(", "x", ")", "\n", "x", "=", "self", ".", "dilated2_8", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "regular3_0", "(", "x", ")", "\n", "x", "=", "self", ".", "dilated3_1", "(", "x", ")", "\n", "x", "=", "self", ".", "asymmetric3_2", "(", "x", ")", "\n", "x", "=", "self", ".", "dilated3_3", "(", "x", ")", "\n", "x", "=", "self", ".", "regular3_4", "(", "x", ")", "\n", "x", "=", "self", ".", "dilated3_5", "(", "x", ")", "\n", "x", "=", "self", ".", "asymmetric3_6", "(", "x", ")", "\n", "x", "=", "self", ".", "dilated3_7", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "upsample4_0", "(", "x", ",", "max_indices2_0", ",", "output_size", "=", "stage2_input_size", ")", "\n", "x", "=", "self", ".", "regular4_1", "(", "x", ")", "\n", "x", "=", "self", ".", "regular4_2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "upsample5_0", "(", "x", ",", "max_indices1_0", ",", "output_size", "=", "stage1_input_size", ")", "\n", "x", "=", "self", ".", "regular5_1", "(", "x", ")", "\n", "x", "=", "self", ".", "transposed_conv", "(", "x", ",", "output_size", "=", "input_size", "[", "2", ":", "]", ")", "\n", "return", "[", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.ENet.init_weight": [[184, 187], ["paddleseg.utils.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.InitialBlock.__init__": [[212, 233], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddleseg.models.layers.SyncBatchNorm", "activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "bias", "=", "False", ",", "relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "InitialBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "relu", ":", "\n", "            ", "activation", "=", "nn", ".", "ReLU", "\n", "", "else", ":", "\n", "            ", "activation", "=", "nn", ".", "PReLU", "\n", "\n", "", "self", ".", "main_branch", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "out_channels", "-", "3", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "bias", ")", "\n", "\n", "self", ".", "ext_branch", "=", "nn", ".", "MaxPool2D", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "batch_norm", "=", "layers", ".", "SyncBatchNorm", "(", "out_channels", ")", "\n", "\n", "self", ".", "out_activation", "=", "activation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.InitialBlock.forward": [[234, 243], ["enet.InitialBlock.main_branch", "enet.InitialBlock.ext_branch", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "enet.InitialBlock.batch_norm", "enet.InitialBlock.out_activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "main", "=", "self", ".", "main_branch", "(", "x", ")", "\n", "ext", "=", "self", ".", "ext_branch", "(", "x", ")", "\n", "\n", "out", "=", "paddle", ".", "concat", "(", "(", "main", ",", "ext", ")", ",", "1", ")", "\n", "\n", "out", "=", "self", ".", "batch_norm", "(", "out", ")", "\n", "\n", "return", "self", ".", "out_activation", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.RegularBottleneck.__init__": [[282, 364], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "activation", "RuntimeError", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "activation", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "activation", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "activation", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "activation", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "channels", ",", "\n", "internal_ratio", "=", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "0", ",", "\n", "dilation", "=", "1", ",", "\n", "asymmetric", "=", "False", ",", "\n", "dropout_prob", "=", "0", ",", "\n", "bias", "=", "False", ",", "\n", "relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "RegularBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "internal_ratio", "<=", "1", "or", "internal_ratio", ">", "channels", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Value out of range. Expected value in the \"", "\n", "\"interval [1, {0}], got internal_scale={1}.\"", ".", "\n", "format", "(", "channels", ",", "internal_ratio", ")", ")", "\n", "\n", "", "internal_channels", "=", "channels", "//", "internal_ratio", "\n", "\n", "if", "relu", ":", "\n", "            ", "activation", "=", "nn", ".", "ReLU", "\n", "", "else", ":", "\n", "            ", "activation", "=", "nn", ".", "PReLU", "\n", "\n", "", "self", ".", "ext_conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "channels", ",", "\n", "internal_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "internal_channels", ")", ",", "\n", "activation", "(", ")", ")", "\n", "\n", "if", "asymmetric", ":", "\n", "            ", "self", ".", "ext_conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "internal_channels", ",", "\n", "internal_channels", ",", "\n", "kernel_size", "=", "(", "kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "(", "padding", ",", "0", ")", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "internal_channels", ")", ",", "\n", "activation", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "internal_channels", ",", "\n", "internal_channels", ",", "\n", "kernel_size", "=", "(", "1", ",", "kernel_size", ")", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "(", "0", ",", "padding", ")", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "internal_channels", ")", ",", "\n", "activation", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "ext_conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "internal_channels", ",", "\n", "internal_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "internal_channels", ")", ",", "\n", "activation", "(", ")", ")", "\n", "\n", "", "self", ".", "ext_conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "internal_channels", ",", "\n", "channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "channels", ")", ",", "\n", "activation", "(", ")", ")", "\n", "\n", "self", ".", "ext_regul", "=", "nn", ".", "Dropout2D", "(", "p", "=", "dropout_prob", ")", "\n", "\n", "self", ".", "out_activation", "=", "activation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.RegularBottleneck.forward": [[365, 376], ["enet.RegularBottleneck.ext_conv1", "enet.RegularBottleneck.ext_conv2", "enet.RegularBottleneck.ext_conv3", "enet.RegularBottleneck.ext_regul", "enet.RegularBottleneck.out_activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "main", "=", "x", "\n", "\n", "ext", "=", "self", ".", "ext_conv1", "(", "x", ")", "\n", "ext", "=", "self", ".", "ext_conv2", "(", "ext", ")", "\n", "ext", "=", "self", ".", "ext_conv3", "(", "ext", ")", "\n", "ext", "=", "self", ".", "ext_regul", "(", "ext", ")", "\n", "\n", "out", "=", "main", "+", "ext", "\n", "\n", "return", "self", ".", "out_activation", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.DownsamplingBottleneck.__init__": [[409, 469], ["paddle.Layer.__init__", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "activation", "RuntimeError", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "activation", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "activation", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "internal_ratio", "=", "4", ",", "\n", "return_indices", "=", "False", ",", "\n", "dropout_prob", "=", "0", ",", "\n", "bias", "=", "False", ",", "\n", "relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "DownsamplingBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "return_indices", "=", "return_indices", "\n", "\n", "if", "internal_ratio", "<=", "1", "or", "internal_ratio", ">", "in_channels", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Value out of range. Expected value in the \"", "\n", "\"interval [1, {0}], got internal_scale={1}. \"", ".", "\n", "format", "(", "in_channels", ",", "internal_ratio", ")", ")", "\n", "\n", "", "internal_channels", "=", "in_channels", "//", "internal_ratio", "\n", "\n", "if", "relu", ":", "\n", "            ", "activation", "=", "nn", ".", "ReLU", "\n", "", "else", ":", "\n", "            ", "activation", "=", "nn", ".", "PReLU", "\n", "\n", "", "self", ".", "main_max1", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "stride", "=", "2", ",", "return_mask", "=", "return_indices", ")", "\n", "\n", "self", ".", "ext_conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "internal_channels", ",", "\n", "kernel_size", "=", "2", ",", "\n", "stride", "=", "2", ",", "\n", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "internal_channels", ")", ",", "\n", "activation", "(", ")", ")", "\n", "\n", "self", ".", "ext_conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "internal_channels", ",", "\n", "internal_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "internal_channels", ")", ",", "\n", "activation", "(", ")", ")", "\n", "\n", "self", ".", "ext_conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "internal_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "out_channels", ")", ",", "\n", "activation", "(", ")", ")", "\n", "\n", "self", ".", "ext_regul", "=", "nn", ".", "Dropout2D", "(", "p", "=", "dropout_prob", ")", "\n", "\n", "self", ".", "out_activation", "=", "activation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.DownsamplingBottleneck.forward": [[470, 490], ["enet.DownsamplingBottleneck.ext_conv1", "enet.DownsamplingBottleneck.ext_conv2", "enet.DownsamplingBottleneck.ext_conv3", "enet.DownsamplingBottleneck.ext_regul", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "enet.DownsamplingBottleneck.main_max1", "enet.DownsamplingBottleneck.main_max1", "enet.DownsamplingBottleneck.out_activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "return_indices", ":", "\n", "            ", "main", ",", "max_indices", "=", "self", ".", "main_max1", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "main", "=", "self", ".", "main_max1", "(", "x", ")", "\n", "\n", "", "ext", "=", "self", ".", "ext_conv1", "(", "x", ")", "\n", "ext", "=", "self", ".", "ext_conv2", "(", "ext", ")", "\n", "ext", "=", "self", ".", "ext_conv3", "(", "ext", ")", "\n", "ext", "=", "self", ".", "ext_regul", "(", "ext", ")", "\n", "\n", "n", ",", "ch_ext", ",", "h", ",", "w", "=", "ext", ".", "shape", "\n", "ch_main", "=", "main", ".", "shape", "[", "1", "]", "\n", "padding", "=", "paddle", ".", "zeros", "(", "(", "n", ",", "ch_ext", "-", "ch_main", ",", "h", ",", "w", ")", ")", "\n", "\n", "main", "=", "paddle", ".", "concat", "(", "(", "main", ",", "padding", ")", ",", "1", ")", "\n", "\n", "out", "=", "main", "+", "ext", "\n", "\n", "return", "self", ".", "out_activation", "(", "out", ")", ",", "max_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.UpsamplingBottleneck.__init__": [[524, 573], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddleseg.models.layers.SyncBatchNorm", "activation", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "activation", "RuntimeError", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "activation", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "internal_ratio", "=", "4", ",", "\n", "dropout_prob", "=", "0", ",", "\n", "bias", "=", "False", ",", "\n", "relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "UpsamplingBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "internal_ratio", "<=", "1", "or", "internal_ratio", ">", "in_channels", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Value out of range. Expected value in the \"", "\n", "\"interval [1, {0}], got internal_scale={1}. \"", ".", "\n", "format", "(", "in_channels", ",", "internal_ratio", ")", ")", "\n", "\n", "", "internal_channels", "=", "in_channels", "//", "internal_ratio", "\n", "\n", "if", "relu", ":", "\n", "            ", "activation", "=", "nn", ".", "ReLU", "\n", "", "else", ":", "\n", "            ", "activation", "=", "nn", ".", "PReLU", "\n", "\n", "", "self", ".", "main_conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "out_channels", ")", ")", "\n", "\n", "self", ".", "ext_conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "internal_channels", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "internal_channels", ")", ",", "\n", "activation", "(", ")", ")", "\n", "\n", "self", ".", "ext_tconv1", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "internal_channels", ",", "\n", "internal_channels", ",", "\n", "kernel_size", "=", "2", ",", "\n", "stride", "=", "2", ",", "\n", "bias_attr", "=", "bias", ")", "\n", "self", ".", "ext_tconv1_bnorm", "=", "layers", ".", "SyncBatchNorm", "(", "internal_channels", ")", "\n", "self", ".", "ext_tconv1_activation", "=", "activation", "(", ")", "\n", "\n", "self", ".", "ext_conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "internal_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "bias", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "out_channels", ")", ")", "\n", "\n", "self", ".", "ext_regul", "=", "nn", ".", "Dropout2D", "(", "p", "=", "dropout_prob", ")", "\n", "\n", "self", ".", "out_activation", "=", "activation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.enet.UpsamplingBottleneck.forward": [[574, 589], ["enet.UpsamplingBottleneck.main_conv1", "paddle.max_unpool2d", "paddle.max_unpool2d", "paddle.max_unpool2d", "enet.UpsamplingBottleneck.ext_conv1", "enet.UpsamplingBottleneck.ext_tconv1", "enet.UpsamplingBottleneck.ext_tconv1_bnorm", "enet.UpsamplingBottleneck.ext_tconv1_activation", "enet.UpsamplingBottleneck.ext_conv2", "enet.UpsamplingBottleneck.ext_regul", "enet.UpsamplingBottleneck.out_activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "max_indices", ",", "output_size", ")", ":", "\n", "        ", "main", "=", "self", ".", "main_conv1", "(", "x", ")", "\n", "main", "=", "F", ".", "max_unpool2d", "(", "\n", "main", ",", "max_indices", ",", "kernel_size", "=", "2", ",", "output_size", "=", "output_size", ")", "\n", "\n", "ext", "=", "self", ".", "ext_conv1", "(", "x", ")", "\n", "ext", "=", "self", ".", "ext_tconv1", "(", "ext", ",", "output_size", "=", "output_size", "[", "2", ":", "]", ")", "\n", "ext", "=", "self", ".", "ext_tconv1_bnorm", "(", "ext", ")", "\n", "ext", "=", "self", ".", "ext_tconv1_activation", "(", "ext", ")", "\n", "ext", "=", "self", ".", "ext_conv2", "(", "ext", ")", "\n", "ext", "=", "self", ".", "ext_regul", "(", "ext", ")", "\n", "\n", "out", "=", "main", "+", "ext", "\n", "\n", "return", "self", ".", "out_activation", "(", "out", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.UNet3Plus.__init__": [[42, 78], ["paddle.Layer.__init__", "unet_3plus.Encoder", "unet_3plus.Decoder", "unet_3plus.UNet3Plus.sublayers", "unet_3plus.DeepSup", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "isinstance", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.cvlibs.param_init.kaiming_normal_init", "isinstance", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.AdaptiveMaxPool2D", "paddle.AdaptiveMaxPool2D", "paddle.AdaptiveMaxPool2D", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid", "paddleseg.cvlibs.param_init.kaiming_normal_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_normal_init"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", "=", "3", ",", "\n", "num_classes", "=", "2", ",", "\n", "is_batchnorm", "=", "True", ",", "\n", "is_deepsup", "=", "False", ",", "\n", "is_CGM", "=", "False", ")", ":", "\n", "        ", "super", "(", "UNet3Plus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# parameters", "\n", "self", ".", "is_deepsup", "=", "True", "if", "is_CGM", "else", "is_deepsup", "\n", "self", ".", "is_CGM", "=", "is_CGM", "\n", "# internal definition", "\n", "self", ".", "filters", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "1024", "]", "\n", "self", ".", "cat_channels", "=", "self", ".", "filters", "[", "0", "]", "\n", "self", ".", "cat_blocks", "=", "5", "\n", "self", ".", "up_channels", "=", "self", ".", "cat_channels", "*", "self", ".", "cat_blocks", "\n", "# layers", "\n", "self", ".", "encoder", "=", "Encoder", "(", "in_channels", ",", "self", ".", "filters", ",", "is_batchnorm", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", "self", ".", "filters", ",", "self", ".", "cat_channels", ",", "\n", "self", ".", "up_channels", ")", "\n", "if", "self", ".", "is_deepsup", ":", "\n", "            ", "self", ".", "deepsup", "=", "DeepSup", "(", "self", ".", "up_channels", ",", "self", ".", "filters", ",", "num_classes", ")", "\n", "if", "self", ".", "is_CGM", ":", "\n", "                ", "self", ".", "cls", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", ",", "\n", "nn", ".", "Conv2D", "(", "self", ".", "filters", "[", "4", "]", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "AdaptiveMaxPool2D", "(", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "outconv1", "=", "nn", ".", "Conv2D", "(", "\n", "self", ".", "up_channels", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "# initialise weights", "\n", "", "for", "sublayer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "sublayer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "kaiming_normal_init", "(", "sublayer", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "sublayer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                ", "kaiming_normal_init", "(", "sublayer", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.UNet3Plus.dotProduct": [[79, 87], ["seg.reshape.reshape.reshape", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "final.reshape.reshape.reshape"], "methods", ["None"], ["", "", "", "def", "dotProduct", "(", "self", ",", "seg", ",", "cls", ")", ":", "\n", "        ", "B", ",", "N", ",", "H", ",", "W", "=", "seg", ".", "shape", "\n", "seg", "=", "seg", ".", "reshape", "(", "(", "B", ",", "N", ",", "H", "*", "W", ")", ")", "\n", "clssp", "=", "paddle", ".", "ones", "(", "[", "1", ",", "N", "]", ")", "\n", "ecls", "=", "(", "cls", "*", "clssp", ")", ".", "reshape", "(", "[", "B", ",", "N", ",", "1", "]", ")", "\n", "final", "=", "seg", "*", "ecls", "\n", "final", "=", "final", ".", "reshape", "(", "(", "B", ",", "N", ",", "H", ",", "W", ")", ")", "\n", "return", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.UNet3Plus.forward": [[88, 103], ["unet_3plus.UNet3Plus.encoder", "unet_3plus.UNet3Plus.decoder", "unet_3plus.UNet3Plus.deepsup", "unet_3plus.UNet3Plus.cls().squeeze().squeeze", "unet_3plus.UNet3Plus.argmax", "cls_branch_max.reshape().astype.reshape().astype.reshape().astype", "unet_3plus.UNet3Plus.outconv1", "unet_3plus.UNet3Plus.dotProduct", "unet_3plus.UNet3Plus.cls().squeeze", "cls_branch_max.reshape().astype.reshape().astype.reshape", "unet_3plus.UNet3Plus.cls"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.UNet3Plus.dotProduct"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "hs", "=", "self", ".", "encoder", "(", "inputs", ")", "\n", "hds", "=", "self", ".", "decoder", "(", "hs", ")", "\n", "if", "self", ".", "is_deepsup", ":", "\n", "            ", "out", "=", "self", ".", "deepsup", "(", "hds", ")", "\n", "if", "self", ".", "is_CGM", ":", "\n", "# classification-guided module", "\n", "                ", "cls_branch", "=", "self", ".", "cls", "(", "hds", "[", "-", "1", "]", ")", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "\n", "2", ")", "# (B,N,1,1)->(B,N)", "\n", "cls_branch_max", "=", "cls_branch", ".", "argmax", "(", "axis", "=", "1", ")", "\n", "cls_branch_max", "=", "cls_branch_max", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", ".", "astype", "(", "'float'", ")", "\n", "out", "=", "[", "self", ".", "dotProduct", "(", "d", ",", "cls_branch_max", ")", "for", "d", "in", "out", "]", "\n", "", "", "else", ":", "\n", "            ", "out", "=", "[", "self", ".", "outconv1", "(", "hds", "[", "0", "]", ")", "]", "# d1->320*320*num_classes", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.Encoder.__init__": [[106, 113], ["paddle.Layer.__init__", "unet_3plus.UnetConv2D", "unet_3plus.MaxPoolConv2D", "unet_3plus.MaxPoolConv2D", "unet_3plus.MaxPoolConv2D", "unet_3plus.MaxPoolConv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "filters", ",", "is_batchnorm", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "UnetConv2D", "(", "in_channels", ",", "filters", "[", "0", "]", ",", "is_batchnorm", ")", "\n", "self", ".", "poolconv2", "=", "MaxPoolConv2D", "(", "filters", "[", "0", "]", ",", "filters", "[", "1", "]", ",", "is_batchnorm", ")", "\n", "self", ".", "poolconv3", "=", "MaxPoolConv2D", "(", "filters", "[", "1", "]", ",", "filters", "[", "2", "]", ",", "is_batchnorm", ")", "\n", "self", ".", "poolconv4", "=", "MaxPoolConv2D", "(", "filters", "[", "2", "]", ",", "filters", "[", "3", "]", ",", "is_batchnorm", ")", "\n", "self", ".", "poolconv5", "=", "MaxPoolConv2D", "(", "filters", "[", "3", "]", ",", "filters", "[", "4", "]", ",", "is_batchnorm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.Encoder.forward": [[114, 121], ["unet_3plus.Encoder.conv1", "unet_3plus.Encoder.poolconv2", "unet_3plus.Encoder.poolconv3", "unet_3plus.Encoder.poolconv4", "unet_3plus.Encoder.poolconv5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "h1", "=", "self", ".", "conv1", "(", "inputs", ")", "# h1->320*320*64", "\n", "h2", "=", "self", ".", "poolconv2", "(", "h1", ")", "# h2->160*160*128", "\n", "h3", "=", "self", ".", "poolconv3", "(", "h2", ")", "# h3->80*80*256", "\n", "h4", "=", "self", ".", "poolconv4", "(", "h3", ")", "# h4->40*40*512", "\n", "hd5", "=", "self", ".", "poolconv5", "(", "h4", ")", "# h5->20*20*1024", "\n", "return", "[", "h1", ",", "h2", ",", "h3", ",", "h4", ",", "hd5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.Decoder.__init__": [[124, 194], ["paddle.Layer.__init__", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "unet_3plus.ConvBnReLU2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "unet_3plus.ConvBnReLU2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "unet_3plus.ConvBnReLU2D", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "unet_3plus.ConvBnReLU2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "unet_3plus.ConvBnReLU2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "unet_3plus.ConvBnReLU2D", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "unet_3plus.ConvBnReLU2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "unet_3plus.ConvBnReLU2D", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "unet_3plus.ConvBnReLU2D", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "unet_3plus.ConvBnReLU2D", "unet_3plus.ConvBnReLU2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "filters", ",", "cat_channels", ",", "up_channels", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "'''stage 4d'''", "\n", "# h1->320*320, hd4->40*40, Pooling 8 times", "\n", "self", ".", "h1_PT_hd4", "=", "nn", ".", "MaxPool2D", "(", "8", ",", "8", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "h1_PT_hd4_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "0", "]", ",", "cat_channels", ")", "\n", "# h2->160*160, hd4->40*40, Pooling 4 times", "\n", "self", ".", "h2_PT_hd4", "=", "nn", ".", "MaxPool2D", "(", "4", ",", "4", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "h2_PT_hd4_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "1", "]", ",", "cat_channels", ")", "\n", "# h3->80*80, hd4->40*40, Pooling 2 times", "\n", "self", ".", "h3_PT_hd4", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "2", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "h3_PT_hd4_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "2", "]", ",", "cat_channels", ")", "\n", "# h4->40*40, hd4->40*40, Concatenation", "\n", "self", ".", "h4_Cat_hd4_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "3", "]", ",", "cat_channels", ")", "\n", "# hd5->20*20, hd4->40*40, Upsample 2 times", "\n", "self", ".", "hd5_UT_hd4", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd5_UT_hd4_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "4", "]", ",", "cat_channels", ")", "\n", "# fusion(h1_PT_hd4, h2_PT_hd4, h3_PT_hd4, h4_Cat_hd4, hd5_UT_hd4)", "\n", "self", ".", "cbr4d_1", "=", "ConvBnReLU2D", "(", "up_channels", ",", "up_channels", ")", "# 16", "\n", "'''stage 3d'''", "\n", "# h1->320*320, hd3->80*80, Pooling 4 times", "\n", "self", ".", "h1_PT_hd3", "=", "nn", ".", "MaxPool2D", "(", "4", ",", "4", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "h1_PT_hd3_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "0", "]", ",", "cat_channels", ")", "\n", "# h2->160*160, hd3->80*80, Pooling 2 times", "\n", "self", ".", "h2_PT_hd3", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "2", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "h2_PT_hd3_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "1", "]", ",", "cat_channels", ")", "\n", "# h3->80*80, hd3->80*80, Concatenation", "\n", "self", ".", "h3_Cat_hd3_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "2", "]", ",", "cat_channels", ")", "\n", "# hd4->40*40, hd4->80*80, Upsample 2 times", "\n", "self", ".", "hd4_UT_hd3", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd4_UT_hd3_cbr", "=", "ConvBnReLU2D", "(", "up_channels", ",", "cat_channels", ")", "\n", "# hd5->20*20, hd4->80*80, Upsample 4 times", "\n", "self", ".", "hd5_UT_hd3", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd5_UT_hd3_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "4", "]", ",", "cat_channels", ")", "\n", "# fusion(h1_PT_hd3, h2_PT_hd3, h3_Cat_hd3, hd4_UT_hd3, hd5_UT_hd3)", "\n", "self", ".", "cbr3d_1", "=", "ConvBnReLU2D", "(", "up_channels", ",", "up_channels", ")", "# 16", "\n", "'''stage 2d '''", "\n", "# h1->320*320, hd2->160*160, Pooling 2 times", "\n", "self", ".", "h1_PT_hd2", "=", "nn", ".", "MaxPool2D", "(", "2", ",", "2", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "h1_PT_hd2_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "0", "]", ",", "cat_channels", ")", "\n", "# h2->160*160, hd2->160*160, Concatenation", "\n", "self", ".", "h2_Cat_hd2_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "1", "]", ",", "cat_channels", ")", "\n", "# hd3->80*80, hd2->160*160, Upsample 2 times", "\n", "self", ".", "hd3_UT_hd2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd3_UT_hd2_cbr", "=", "ConvBnReLU2D", "(", "up_channels", ",", "cat_channels", ")", "\n", "# hd4->40*40, hd2->160*160, Upsample 4 times", "\n", "self", ".", "hd4_UT_hd2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd4_UT_hd2_cbr", "=", "ConvBnReLU2D", "(", "up_channels", ",", "cat_channels", ")", "\n", "# hd5->20*20, hd2->160*160, Upsample 8 times", "\n", "self", ".", "hd5_UT_hd2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "8", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd5_UT_hd2_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "4", "]", ",", "cat_channels", ")", "\n", "# fusion(h1_PT_hd2, h2_Cat_hd2, hd3_UT_hd2, hd4_UT_hd2, hd5_UT_hd2)", "\n", "self", ".", "cbr2d_1", "=", "ConvBnReLU2D", "(", "up_channels", ",", "up_channels", ")", "# 16", "\n", "'''stage 1d'''", "\n", "# h1->320*320, hd1->320*320, Concatenation", "\n", "self", ".", "h1_Cat_hd1_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "0", "]", ",", "cat_channels", ")", "\n", "# hd2->160*160, hd1->320*320, Upsample 2 times", "\n", "self", ".", "hd2_UT_hd1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd2_UT_hd1_cbr", "=", "ConvBnReLU2D", "(", "up_channels", ",", "cat_channels", ")", "\n", "# hd3->80*80, hd1->320*320, Upsample 4 times", "\n", "self", ".", "hd3_UT_hd1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd3_UT_hd1_cbr", "=", "ConvBnReLU2D", "(", "up_channels", ",", "cat_channels", ")", "\n", "# hd4->40*40, hd1->320*320, Upsample 8 times", "\n", "self", ".", "hd4_UT_hd1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "8", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd4_UT_hd1_cbr", "=", "ConvBnReLU2D", "(", "up_channels", ",", "cat_channels", ")", "\n", "# hd5->20*20, hd1->320*320, Upsample 16 times", "\n", "self", ".", "hd5_UT_hd1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "16", ",", "mode", "=", "'bilinear'", ")", "# 14*14", "\n", "self", ".", "hd5_UT_hd1_cbr", "=", "ConvBnReLU2D", "(", "filters", "[", "4", "]", ",", "cat_channels", ")", "\n", "# fusion(h1_Cat_hd1, hd2_UT_hd1, hd3_UT_hd1, hd4_UT_hd1, hd5_UT_hd1)", "\n", "self", ".", "cbr1d_1", "=", "ConvBnReLU2D", "(", "up_channels", ",", "up_channels", ")", "# 16", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.Decoder.forward": [[195, 235], ["unet_3plus.Decoder.h1_PT_hd4_cbr", "unet_3plus.Decoder.h2_PT_hd4_cbr", "unet_3plus.Decoder.h3_PT_hd4_cbr", "unet_3plus.Decoder.h4_Cat_hd4_cbr", "unet_3plus.Decoder.hd5_UT_hd4_cbr", "unet_3plus.Decoder.cbr4d_1", "unet_3plus.Decoder.h1_PT_hd3_cbr", "unet_3plus.Decoder.h2_PT_hd3_cbr", "unet_3plus.Decoder.h3_Cat_hd3_cbr", "unet_3plus.Decoder.hd4_UT_hd3_cbr", "unet_3plus.Decoder.hd5_UT_hd3_cbr", "unet_3plus.Decoder.cbr3d_1", "unet_3plus.Decoder.h1_PT_hd2_cbr", "unet_3plus.Decoder.h2_Cat_hd2_cbr", "unet_3plus.Decoder.hd3_UT_hd2_cbr", "unet_3plus.Decoder.hd4_UT_hd2_cbr", "unet_3plus.Decoder.hd5_UT_hd2_cbr", "unet_3plus.Decoder.cbr2d_1", "unet_3plus.Decoder.h1_Cat_hd1_cbr", "unet_3plus.Decoder.hd2_UT_hd1_cbr", "unet_3plus.Decoder.hd3_UT_hd1_cbr", "unet_3plus.Decoder.hd4_UT_hd1_cbr", "unet_3plus.Decoder.hd5_UT_hd1_cbr", "unet_3plus.Decoder.cbr1d_1", "unet_3plus.Decoder.h1_PT_hd4", "unet_3plus.Decoder.h2_PT_hd4", "unet_3plus.Decoder.h3_PT_hd4", "unet_3plus.Decoder.hd5_UT_hd4", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "unet_3plus.Decoder.h1_PT_hd3", "unet_3plus.Decoder.h2_PT_hd3", "unet_3plus.Decoder.hd4_UT_hd3", "unet_3plus.Decoder.hd5_UT_hd3", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "unet_3plus.Decoder.h1_PT_hd2", "unet_3plus.Decoder.hd3_UT_hd2", "unet_3plus.Decoder.hd4_UT_hd2", "unet_3plus.Decoder.hd5_UT_hd2", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "unet_3plus.Decoder.hd2_UT_hd1", "unet_3plus.Decoder.hd3_UT_hd1", "unet_3plus.Decoder.hd4_UT_hd1", "unet_3plus.Decoder.hd5_UT_hd1", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "h1", ",", "h2", ",", "h3", ",", "h4", ",", "hd5", "=", "inputs", "\n", "h1_PT_hd4", "=", "self", ".", "h1_PT_hd4_cbr", "(", "self", ".", "h1_PT_hd4", "(", "h1", ")", ")", "\n", "h2_PT_hd4", "=", "self", ".", "h2_PT_hd4_cbr", "(", "self", ".", "h2_PT_hd4", "(", "h2", ")", ")", "\n", "h3_PT_hd4", "=", "self", ".", "h3_PT_hd4_cbr", "(", "self", ".", "h3_PT_hd4", "(", "h3", ")", ")", "\n", "h4_Cat_hd4", "=", "self", ".", "h4_Cat_hd4_cbr", "(", "h4", ")", "\n", "hd5_UT_hd4", "=", "self", ".", "hd5_UT_hd4_cbr", "(", "self", ".", "hd5_UT_hd4", "(", "hd5", ")", ")", "\n", "# hd4->40*40*up_channels", "\n", "hd4", "=", "self", ".", "cbr4d_1", "(", "\n", "paddle", ".", "concat", "(", "\n", "[", "h1_PT_hd4", ",", "h2_PT_hd4", ",", "h3_PT_hd4", ",", "h4_Cat_hd4", ",", "hd5_UT_hd4", "]", ",", "1", ")", ")", "\n", "h1_PT_hd3", "=", "self", ".", "h1_PT_hd3_cbr", "(", "self", ".", "h1_PT_hd3", "(", "h1", ")", ")", "\n", "h2_PT_hd3", "=", "self", ".", "h2_PT_hd3_cbr", "(", "self", ".", "h2_PT_hd3", "(", "h2", ")", ")", "\n", "h3_Cat_hd3", "=", "self", ".", "h3_Cat_hd3_cbr", "(", "h3", ")", "\n", "hd4_UT_hd3", "=", "self", ".", "hd4_UT_hd3_cbr", "(", "self", ".", "hd4_UT_hd3", "(", "hd4", ")", ")", "\n", "hd5_UT_hd3", "=", "self", ".", "hd5_UT_hd3_cbr", "(", "self", ".", "hd5_UT_hd3", "(", "hd5", ")", ")", "\n", "# hd3->80*80*up_channels", "\n", "hd3", "=", "self", ".", "cbr3d_1", "(", "\n", "paddle", ".", "concat", "(", "\n", "[", "h1_PT_hd3", ",", "h2_PT_hd3", ",", "h3_Cat_hd3", ",", "hd4_UT_hd3", ",", "hd5_UT_hd3", "]", ",", "1", ")", ")", "\n", "h1_PT_hd2", "=", "self", ".", "h1_PT_hd2_cbr", "(", "self", ".", "h1_PT_hd2", "(", "h1", ")", ")", "\n", "h2_Cat_hd2", "=", "self", ".", "h2_Cat_hd2_cbr", "(", "h2", ")", "\n", "hd3_UT_hd2", "=", "self", ".", "hd3_UT_hd2_cbr", "(", "self", ".", "hd3_UT_hd2", "(", "hd3", ")", ")", "\n", "hd4_UT_hd2", "=", "self", ".", "hd4_UT_hd2_cbr", "(", "self", ".", "hd4_UT_hd2", "(", "hd4", ")", ")", "\n", "hd5_UT_hd2", "=", "self", ".", "hd5_UT_hd2_cbr", "(", "self", ".", "hd5_UT_hd2", "(", "hd5", ")", ")", "\n", "# hd2->160*160*up_channels", "\n", "hd2", "=", "self", ".", "cbr2d_1", "(", "\n", "paddle", ".", "concat", "(", "\n", "[", "h1_PT_hd2", ",", "h2_Cat_hd2", ",", "hd3_UT_hd2", ",", "hd4_UT_hd2", ",", "hd5_UT_hd2", "]", ",", "1", ")", ")", "\n", "h1_Cat_hd1", "=", "self", ".", "h1_Cat_hd1_cbr", "(", "h1", ")", "\n", "hd2_UT_hd1", "=", "self", ".", "hd2_UT_hd1_cbr", "(", "self", ".", "hd2_UT_hd1", "(", "hd2", ")", ")", "\n", "hd3_UT_hd1", "=", "self", ".", "hd3_UT_hd1_cbr", "(", "self", ".", "hd3_UT_hd1", "(", "hd3", ")", ")", "\n", "hd4_UT_hd1", "=", "self", ".", "hd4_UT_hd1_cbr", "(", "self", ".", "hd4_UT_hd1", "(", "hd4", ")", ")", "\n", "hd5_UT_hd1", "=", "self", ".", "hd5_UT_hd1_cbr", "(", "self", ".", "hd5_UT_hd1", "(", "hd5", ")", ")", "\n", "# hd1->320*320*up_channels", "\n", "hd1", "=", "self", ".", "cbr1d_1", "(", "\n", "paddle", ".", "concat", "(", "[", "\n", "h1_Cat_hd1", ",", "hd2_UT_hd1", ",", "hd3_UT_hd1", ",", "hd4_UT_hd1", ",", "hd5_UT_hd1", "\n", "]", ",", "1", ")", ")", "\n", "return", "[", "hd1", ",", "hd2", ",", "hd3", ",", "hd4", ",", "hd5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.DeepSup.__init__": [[238, 245], ["paddle.Layer.__init__", "unet_3plus.ConvUp2D", "unet_3plus.ConvUp2D", "unet_3plus.ConvUp2D", "unet_3plus.ConvUp2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "up_channels", ",", "filters", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "DeepSup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "convup5", "=", "ConvUp2D", "(", "filters", "[", "4", "]", ",", "num_classes", ",", "16", ")", "\n", "self", ".", "convup4", "=", "ConvUp2D", "(", "up_channels", ",", "num_classes", ",", "8", ")", "\n", "self", ".", "convup3", "=", "ConvUp2D", "(", "up_channels", ",", "num_classes", ",", "4", ")", "\n", "self", ".", "convup2", "=", "ConvUp2D", "(", "up_channels", ",", "num_classes", ",", "2", ")", "\n", "self", ".", "outconv1", "=", "nn", ".", "Conv2D", "(", "up_channels", ",", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.DeepSup.forward": [[246, 254], ["unet_3plus.DeepSup.convup5", "unet_3plus.DeepSup.convup4", "unet_3plus.DeepSup.convup3", "unet_3plus.DeepSup.convup2", "unet_3plus.DeepSup.outconv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "hd1", ",", "hd2", ",", "hd3", ",", "hd4", ",", "hd5", "=", "inputs", "\n", "d5", "=", "self", ".", "convup5", "(", "hd5", ")", "# 16->256", "\n", "d4", "=", "self", ".", "convup4", "(", "hd4", ")", "# 32->256", "\n", "d3", "=", "self", ".", "convup3", "(", "hd3", ")", "# 64->256", "\n", "d2", "=", "self", ".", "convup2", "(", "hd2", ")", "# 128->256", "\n", "d1", "=", "self", ".", "outconv1", "(", "hd1", ")", "# 256", "\n", "return", "[", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.ConvBnReLU2D.__init__": [[257, 263], ["paddle.Sequential.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "ConvBnReLU2D", ",", "self", ")", ".", "__init__", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.ConvUp2D.__init__": [[266, 272], ["paddle.Sequential.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "scale_factor", ")", ":", "\n", "        ", "super", "(", "ConvUp2D", ",", "self", ")", ".", "__init__", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "scale_factor", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.MaxPoolConv2D.__init__": [[275, 279], ["paddle.Sequential.__init__", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "unet_3plus.UnetConv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "is_batchnorm", ")", ":", "\n", "        ", "super", "(", "MaxPoolConv2D", ",", "self", ")", ".", "__init__", "(", "\n", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "2", ")", ",", "\n", "UnetConv2D", "(", "in_channels", ",", "out_channels", ",", "is_batchnorm", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.UnetConv2D.__init__": [[282, 307], ["paddle.Layer.__init__", "range", "unet_3plus.UnetConv2D.children", "setattr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "is_batchnorm", ",", "\n", "num_conv", "=", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", ":", "\n", "        ", "super", "(", "UnetConv2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_conv", "=", "num_conv", "\n", "for", "i", "in", "range", "(", "num_conv", ")", ":", "\n", "            ", "conv", "=", "(", "nn", ".", "Sequential", "(", "nn", ".", "Conv2D", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", ",", "\n", "nn", ".", "BatchNorm", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "if", "is_batchnorm", "else", "nn", ".", "Sequential", "(", "nn", ".", "Conv2D", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", ")", "\n", "setattr", "(", "self", ",", "'conv%d'", "%", "(", "i", "+", "1", ")", ",", "conv", ")", "\n", "in_channels", "=", "out_channels", "\n", "# initialise the blocks", "\n", "", "for", "children", "in", "self", ".", "children", "(", ")", ":", "\n", "            ", "children", ".", "weight_attr", "=", "paddle", ".", "framework", ".", "ParamAttr", "(", "\n", "initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "KaimingNormal", ")", "\n", "children", ".", "bias_attr", "=", "paddle", ".", "framework", ".", "ParamAttr", "(", "\n", "initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "KaimingNormal", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_3plus.UnetConv2D.forward": [[308, 314], ["range", "getattr", "getattr."], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "inputs", "\n", "for", "i", "in", "range", "(", "self", ".", "num_conv", ")", ":", "\n", "            ", "conv", "=", "getattr", "(", "self", ",", "'conv%d'", "%", "(", "i", "+", "1", ")", ")", "\n", "x", "=", "conv", "(", "x", ")", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mla_transformer.MLAHeads.__init__": [[25, 79], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mlahead_channels", "=", "128", ")", ":", "\n", "        ", "super", "(", "MLAHeads", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "head2", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "mlahead_channels", "*", "2", ",", "\n", "mlahead_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "mlahead_channels", ",", "\n", "mlahead_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "head3", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "mlahead_channels", "*", "2", ",", "\n", "mlahead_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "mlahead_channels", ",", "\n", "mlahead_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "head4", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "mlahead_channels", "*", "2", ",", "\n", "mlahead_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "mlahead_channels", ",", "\n", "mlahead_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "head5", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "mlahead_channels", "*", "2", ",", "\n", "mlahead_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "mlahead_channels", ",", "\n", "mlahead_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mla_transformer.MLAHeads.forward": [[80, 103], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "mla_transformer.MLAHeads.head2", "mla_transformer.MLAHeads.head3", "mla_transformer.MLAHeads.head4", "mla_transformer.MLAHeads.head5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "mla_p2", ",", "mla_p3", ",", "mla_p4", ",", "mla_p5", ")", ":", "\n", "        ", "head2", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "head2", "(", "mla_p2", ")", ",", "\n", "size", "=", "(", "4", "*", "mla_p2", ".", "shape", "[", "3", "]", ",", "4", "*", "mla_p2", ".", "shape", "[", "3", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "head3", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "head3", "(", "mla_p3", ")", ",", "\n", "size", "=", "(", "4", "*", "mla_p3", ".", "shape", "[", "3", "]", ",", "4", "*", "mla_p3", ".", "shape", "[", "3", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "head4", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "head4", "(", "mla_p4", ")", ",", "\n", "size", "=", "(", "4", "*", "mla_p4", ".", "shape", "[", "3", "]", ",", "4", "*", "mla_p4", ".", "shape", "[", "3", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "head5", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "head5", "(", "mla_p5", ")", ",", "\n", "size", "=", "(", "4", "*", "mla_p5", ".", "shape", "[", "3", "]", ",", "4", "*", "mla_p5", ".", "shape", "[", "3", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "\n", "return", "paddle", ".", "concat", "(", "[", "head2", ",", "head3", ",", "head4", ",", "head5", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mla_transformer.MLATransformer.__init__": [[107, 185], ["paddle.Layer.__init__", "mla_transformer.MLAHeads", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "mla_transformer.MLATransformer.init_weight", "paddleseg.models.layers.ConvBN", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_channels", ",", "\n", "backbone", ",", "\n", "mlahead_channels", "=", "128", ",", "\n", "aux_channels", "=", "256", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2D", ",", "\n", "pretrained", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "MLATransformer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "BatchNorm", "=", "norm_layer", "\n", "self", ".", "mlahead_channels", "=", "mlahead_channels", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "backbone", "=", "backbone", "\n", "\n", "self", ".", "mlahead", "=", "MLAHeads", "(", "mlahead_channels", "=", "self", ".", "mlahead_channels", ")", "\n", "self", ".", "cls", "=", "nn", ".", "Conv2D", "(", "\n", "4", "*", "self", ".", "mlahead_channels", ",", "self", ".", "num_classes", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv0", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", "[", "0", "]", ",", "\n", "self", ".", "in_channels", "[", "0", "]", "*", "2", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", "[", "1", "]", ",", "\n", "self", ".", "in_channels", "[", "1", "]", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv21", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", "[", "2", "]", ",", "\n", "self", ".", "in_channels", "[", "2", "]", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv22", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", "[", "2", "]", ",", "\n", "self", ".", "in_channels", "[", "2", "]", "//", "2", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv31", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", "[", "3", "]", ",", "\n", "self", ".", "in_channels", "[", "3", "]", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv32", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", "[", "3", "]", ",", "\n", "self", ".", "in_channels", "[", "3", "]", "//", "2", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv33", "=", "layers", ".", "ConvBNReLU", "(", "\n", "self", ".", "in_channels", "[", "3", "]", "//", "2", ",", "\n", "self", ".", "in_channels", "[", "3", "]", "//", "4", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "aux_head", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "self", ".", "in_channels", "[", "2", "]", ",", "\n", "out_channels", "=", "aux_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "aux_channels", ",", "\n", "out_channels", "=", "self", ".", "num_classes", ",", "\n", "kernel_size", "=", "1", ",", ")", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mla_transformer.MLATransformer.init_weight": [[186, 189], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mla_transformer.MLATransformer.forward": [[190, 241], ["mla_transformer.MLATransformer.backbone", "mla_transformer.MLATransformer.conv0", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "mla_transformer.MLATransformer.mlahead", "mla_transformer.MLATransformer.cls", "mla_transformer.MLATransformer.conv1", "mla_transformer.MLATransformer.conv21", "mla_transformer.MLATransformer.conv22", "mla_transformer.MLATransformer.conv31", "mla_transformer.MLATransformer.conv32", "mla_transformer.MLATransformer.conv33", "logit_list.append", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "mla_transformer.MLATransformer.aux_head", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "backbone", "(", "x", ")", "\n", "\n", "inputs0", "=", "self", ".", "conv0", "(", "inputs", "[", "0", "]", ")", "\n", "inputs1", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "conv1", "(", "inputs", "[", "1", "]", ")", ",", "\n", "size", "=", "inputs", "[", "0", "]", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "inputs2", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "conv21", "(", "inputs", "[", "2", "]", ")", ",", "\n", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "inputs2", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "conv22", "(", "inputs2", ")", ",", "\n", "size", "=", "inputs", "[", "0", "]", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "inputs3", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "conv31", "(", "inputs", "[", "3", "]", ")", ",", "\n", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "inputs3", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "conv32", "(", "inputs3", ")", ",", "\n", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "inputs3", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "conv33", "(", "inputs3", ")", ",", "\n", "size", "=", "inputs", "[", "0", "]", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "inputs2", "=", "inputs2", "+", "inputs3", "\n", "inputs1", "=", "inputs1", "+", "inputs2", "\n", "inputs0", "=", "inputs0", "+", "inputs1", "\n", "\n", "feats", "=", "self", ".", "mlahead", "(", "inputs0", ",", "inputs1", ",", "inputs2", ",", "inputs3", ")", "\n", "logit", "=", "self", ".", "cls", "(", "feats", ")", "\n", "logit_list", "=", "[", "logit", "]", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "logit_list", ".", "append", "(", "self", ".", "aux_head", "(", "inputs", "[", "2", "]", ")", ")", "\n", "\n", "", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "for", "logit", "in", "logit_list", "\n", "]", "\n", "return", "logit_list", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.SegmentationTransformer.__init__": [[46, 86], ["paddle.Layer.__init__", "setr.SegmentationTransformer.init_weight", "head.lower", "setr.NaiveHead", "head.lower", "setr.PUPHead", "head.lower", "setr.MLAHead", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "9", ",", "14", ",", "19", ",", "23", ")", ",", "\n", "head", "=", "'naive'", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ",", "\n", "**", "head_config", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "if", "head", ".", "lower", "(", ")", "==", "'naive'", ":", "\n", "            ", "self", ".", "head", "=", "NaiveHead", "(", "\n", "num_classes", "=", "self", ".", "num_classes", ",", "\n", "backbone_indices", "=", "backbone_indices", ",", "\n", "in_channels", "=", "self", ".", "backbone", ".", "embed_dim", ",", "\n", "**", "head_config", ")", "\n", "", "elif", "head", ".", "lower", "(", ")", "==", "'pup'", ":", "\n", "            ", "self", ".", "head", "=", "PUPHead", "(", "\n", "num_classes", "=", "self", ".", "num_classes", ",", "\n", "backbone_indices", "=", "backbone_indices", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "in_channels", "=", "self", ".", "backbone", ".", "embed_dim", ",", "\n", "**", "head_config", ")", "\n", "", "elif", "head", ".", "lower", "(", ")", "==", "'mla'", ":", "\n", "            ", "self", ".", "head", "=", "MLAHead", "(", "\n", "num_classes", "=", "self", ".", "num_classes", ",", "\n", "backbone_indices", "=", "backbone_indices", ",", "\n", "in_channels", "=", "self", ".", "backbone", ".", "embed_dim", ",", "\n", "**", "head_config", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "'Unsupported segmentation head type {}. Only naive/pup/mla is valid.'", "\n", ".", "format", "(", "head", ")", ")", "\n", "\n", "", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.SegmentationTransformer.init_weight": [[87, 90], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.SegmentationTransformer.forward": [[91, 101], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "setr.SegmentationTransformer.backbone", "setr.SegmentationTransformer.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "feats", ",", "_shape", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logits", "=", "self", ".", "head", "(", "feats", ",", "_shape", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "_logit", ",", "\n", "x_shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "_logit", "in", "logits", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.NaiveHead.__init__": [[118, 149], ["paddle.Layer.__init__", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "setr.NaiveHead.init_weight", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "len", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone_indices", ",", "\n", "in_channels", ",", "\n", "lr_multiple", "=", "10", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cls_head_norm", "=", "nn", ".", "LayerNorm", "(", "\n", "normalized_shape", "=", "in_channels", ",", "epsilon", "=", "1e-6", ")", "\n", "self", ".", "cls_head", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "256", ",", "out_channels", "=", "num_classes", ",", "kernel_size", "=", "1", ")", ")", "\n", "\n", "aux_head_nums", "=", "len", "(", "backbone_indices", ")", "-", "1", "\n", "self", ".", "aux_head_norms", "=", "nn", ".", "LayerList", "(", "\n", "[", "nn", ".", "LayerNorm", "(", "\n", "normalized_shape", "=", "in_channels", ",", "epsilon", "=", "1e-6", ")", "]", "*", "aux_head_nums", ")", "\n", "self", ".", "aux_heads", "=", "nn", ".", "LayerList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "256", ",", "out_channels", "=", "num_classes", ",", "kernel_size", "=", "1", ")", ")", "\n", "]", "*", "aux_head_nums", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "lr_multiple", "=", "lr_multiple", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.NaiveHead.init_weight": [[150, 158], ["setr.NaiveHead.parameters", "setr.NaiveHead.sublayers", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "_param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "_param", ".", "optimize_attr", "[", "'learning_rate'", "]", "=", "self", ".", "lr_multiple", "\n", "\n", "", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "layer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "layer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.NaiveHead.forward": [[159, 176], ["setr.NaiveHead.cls_head_norm().transpose().reshape", "logits.append", "setr.NaiveHead.cls_head", "enumerate", "setr.NaiveHead.cls_head_norm().transpose", "logits.append", "_head", "setr.NaiveHead.cls_head_norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "_shape", ")", ":", "\n", "        ", "logits", "=", "[", "]", "\n", "feat", "=", "x", "[", "self", ".", "backbone_indices", "[", "-", "1", "]", "]", "\n", "feat", "=", "self", ".", "cls_head_norm", "(", "feat", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "self", ".", "in_channels", ",", "_shape", "[", "2", "]", ",", "_shape", "[", "3", "]", "]", ")", "\n", "\n", "logits", ".", "append", "(", "self", ".", "cls_head", "(", "feat", ")", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "for", "idx", ",", "_head", "in", "enumerate", "(", "self", ".", "aux_heads", ")", ":", "\n", "                ", "feat", "=", "x", "[", "self", ".", "backbone_indices", "[", "idx", "]", "]", "\n", "feat", "=", "self", ".", "aux_head_norms", "[", "idx", "]", "(", "feat", ")", ".", "transpose", "(", "\n", "[", "0", ",", "2", ",", "\n", "1", "]", ")", ".", "reshape", "(", "[", "0", ",", "self", ".", "in_channels", ",", "_shape", "[", "2", "]", ",", "_shape", "[", "3", "]", "]", ")", "\n", "logits", ".", "append", "(", "_head", "(", "feat", ")", ")", "\n", "\n", "", "", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.PUPHead.__init__": [[194, 261], ["paddle.Layer.__init__", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "len", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "setr.PUPHead.init_weight", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone_indices", ",", "\n", "in_channels", ",", "\n", "align_corners", "=", "False", ",", "\n", "lr_multiple", "=", "10", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "inter_channels", "=", "256", "\n", "\n", "self", ".", "cls_head_norm", "=", "nn", ".", "LayerNorm", "(", "\n", "normalized_shape", "=", "in_channels", ",", "epsilon", "=", "1e-6", ")", "\n", "self", ".", "cls_head", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "kernel_size", "=", "1", ")", ")", "\n", "\n", "aux_head_nums", "=", "len", "(", "backbone_indices", ")", "\n", "self", ".", "aux_head_norms", "=", "nn", ".", "LayerList", "(", "\n", "[", "nn", ".", "LayerNorm", "(", "\n", "normalized_shape", "=", "in_channels", ",", "epsilon", "=", "1e-6", ")", "]", "*", "aux_head_nums", ")", "\n", "self", ".", "aux_heads", "=", "nn", ".", "LayerList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "kernel_size", "=", "1", ")", ")", "\n", "]", "*", "aux_head_nums", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "lr_multiple", "=", "lr_multiple", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.PUPHead.init_weight": [[262, 270], ["setr.PUPHead.parameters", "setr.PUPHead.sublayers", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "_param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "_param", ".", "optimize_attr", "[", "'learning_rate'", "]", "=", "self", ".", "lr_multiple", "\n", "\n", "", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "layer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "layer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.PUPHead.forward": [[271, 288], ["setr.PUPHead.cls_head_norm().transpose().reshape", "logits.append", "setr.PUPHead.cls_head", "enumerate", "setr.PUPHead.cls_head_norm().transpose", "logits.append", "_head", "setr.PUPHead.cls_head_norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "_shape", ")", ":", "\n", "        ", "logits", "=", "[", "]", "\n", "feat", "=", "x", "[", "self", ".", "backbone_indices", "[", "-", "1", "]", "]", "\n", "feat", "=", "self", ".", "cls_head_norm", "(", "feat", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "self", ".", "in_channels", ",", "_shape", "[", "2", "]", ",", "_shape", "[", "3", "]", "]", ")", "\n", "\n", "logits", ".", "append", "(", "self", ".", "cls_head", "(", "feat", ")", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "for", "idx", ",", "_head", "in", "enumerate", "(", "self", ".", "aux_heads", ")", ":", "\n", "                ", "feat", "=", "x", "[", "self", ".", "backbone_indices", "[", "idx", "]", "]", "\n", "feat", "=", "self", ".", "aux_head_norms", "[", "idx", "]", "(", "feat", ")", ".", "transpose", "(", "\n", "[", "0", ",", "2", ",", "\n", "1", "]", ")", ".", "reshape", "(", "[", "0", ",", "self", ".", "in_channels", ",", "_shape", "[", "2", "]", ",", "_shape", "[", "3", "]", "]", ")", "\n", "logits", ".", "append", "(", "_head", "(", "feat", ")", ")", "\n", "\n", "", "", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.ConvMLA.__init__": [[291, 329], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "mla_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mla_p2_1x1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "mla_channels", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "mla_p3_1x1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "mla_channels", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "mla_p4_1x1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "mla_channels", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "mla_p5_1x1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "mla_channels", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "mla_p2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "mla_channels", ",", "\n", "out_channels", "=", "mla_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "mla_p3", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "mla_channels", ",", "\n", "out_channels", "=", "mla_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "mla_p4", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "mla_channels", ",", "\n", "out_channels", "=", "mla_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "mla_p5", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "mla_channels", ",", "\n", "out_channels", "=", "mla_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.ConvMLA.forward": [[330, 348], ["setr.ConvMLA.mla_p5_1x1", "setr.ConvMLA.mla_p4_1x1", "setr.ConvMLA.mla_p3_1x1", "setr.ConvMLA.mla_p2_1x1", "setr.ConvMLA.mla_p5", "setr.ConvMLA.mla_p4", "setr.ConvMLA.mla_p3", "setr.ConvMLA.mla_p2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res2", ",", "res3", ",", "res4", ",", "res5", "=", "x", "\n", "\n", "mla_p5_1x1", "=", "self", ".", "mla_p5_1x1", "(", "res5", ")", "\n", "mla_p4_1x1", "=", "self", ".", "mla_p4_1x1", "(", "res4", ")", "\n", "mla_p3_1x1", "=", "self", ".", "mla_p3_1x1", "(", "res3", ")", "\n", "mla_p2_1x1", "=", "self", ".", "mla_p2_1x1", "(", "res2", ")", "\n", "\n", "mla_p4_plus", "=", "mla_p5_1x1", "+", "mla_p4_1x1", "\n", "mla_p3_plus", "=", "mla_p4_plus", "+", "mla_p3_1x1", "\n", "mla_p2_plus", "=", "mla_p3_plus", "+", "mla_p2_1x1", "\n", "\n", "mla_p5", "=", "self", ".", "mla_p5", "(", "mla_p5_1x1", ")", "\n", "mla_p4", "=", "self", ".", "mla_p4", "(", "mla_p4_plus", ")", "\n", "mla_p3", "=", "self", ".", "mla_p3", "(", "mla_p3_plus", ")", "\n", "mla_p2", "=", "self", ".", "mla_p2", "(", "mla_p2_plus", ")", "\n", "\n", "return", "[", "mla_p2", ",", "mla_p3", ",", "mla_p4", ",", "mla_p5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.MLAHead.__init__": [[366, 417], ["paddle.Layer.__init__", "len", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "setr.ConvMLA", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "len", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone_indices", ",", "\n", "in_channels", ",", "\n", "mla_channels", "=", "256", ",", "\n", "mlahead_channels", "=", "128", ",", "\n", "lr_multiple", "=", "10", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "len", "(", "backbone_indices", ")", "!=", "4", ":", "\n", "            ", "raise", "RuntimeError", "\n", "\n", "", "self", ".", "mla_feat_nums", "=", "len", "(", "backbone_indices", ")", "\n", "self", ".", "norms", "=", "nn", ".", "LayerList", "(", "\n", "[", "nn", ".", "LayerNorm", "(", "\n", "normalized_shape", "=", "in_channels", ",", "\n", "epsilon", "=", "1e-6", ")", "]", "*", "self", ".", "mla_feat_nums", ")", "\n", "\n", "self", ".", "mla", "=", "ConvMLA", "(", "in_channels", ",", "mla_channels", ")", "\n", "\n", "self", ".", "aux_heads", "=", "nn", ".", "LayerList", "(", "[", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "mla_channels", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "kernel_size", "=", "1", ")", "\n", "]", "*", "self", ".", "mla_feat_nums", ")", "\n", "\n", "self", ".", "feat_convs", "=", "nn", ".", "LayerList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "mla_channels", ",", "\n", "out_channels", "=", "mlahead_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "mlahead_channels", ",", "\n", "out_channels", "=", "mlahead_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", "\n", "]", "*", "self", ".", "mla_feat_nums", ")", "\n", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "cls_head", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "4", "*", "mlahead_channels", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.MLAHead.init_weight": [[418, 429], ["setr.MLAHead.named_parameters", "setr.MLAHead.sublayers", "isinstance", "name.startswith", "name.startswith", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "name", ",", "_param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "name", ".", "startswith", "(", "'norms.'", ")", "or", "name", ".", "startswith", "(", "'mla.'", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "_param", ".", "optimize_attr", "[", "'learning_rate'", "]", "=", "self", ".", "lr_multiple", "\n", "\n", "", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "layer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "layer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.setr.MLAHead.forward": [[430, 451], ["range", "setr.MLAHead.mla", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "logits.insert", "range", "setr.MLAHead.cls_head", "logits.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "_shape", ")", ":", "\n", "        ", "logits", "=", "[", "]", "\n", "\n", "feats", "=", "[", "x", "[", "_idx", "]", "for", "_idx", "in", "self", ".", "backbone_indices", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "mla_feat_nums", ")", ":", "\n", "            ", "feats", "[", "i", "]", "=", "self", ".", "norms", "[", "i", "]", "(", "feats", "[", "i", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "self", ".", "in_channels", ",", "_shape", "[", "2", "]", ",", "_shape", "[", "3", "]", "]", ")", "\n", "\n", "", "feats", "=", "self", ".", "mla", "(", "feats", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "mla_feat_nums", ")", ":", "\n", "                ", "logits", ".", "append", "(", "self", ".", "aux_heads", "[", "i", "]", "(", "feats", "[", "i", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "self", ".", "mla_feat_nums", ")", ":", "\n", "            ", "feats", "[", "i", "]", "=", "self", ".", "feat_convs", "[", "i", "]", "(", "feats", "[", "i", "]", ")", "\n", "\n", "", "feat_mix", "=", "paddle", ".", "concat", "(", "feats", ",", "axis", "=", "1", ")", "\n", "logits", ".", "insert", "(", "0", ",", "self", ".", "cls_head", "(", "feat_mix", ")", ")", "\n", "\n", "return", "logits", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gscnn.GSCNN.__init__": [[50, 66], ["paddle.Layer.__init__", "gscnn.GSCNNHead", "gscnn.GSCNN.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "0", ",", "1", ",", "2", ",", "3", ")", ",", "\n", "aspp_ratios", "=", "(", "1", ",", "6", ",", "12", ",", "18", ")", ",", "\n", "aspp_out_channels", "=", "256", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "self", ".", "backbone", ".", "feat_channels", "\n", "self", ".", "head", "=", "GSCNNHead", "(", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "aspp_ratios", ",", "aspp_out_channels", ",", "align_corners", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gscnn.GSCNN.forward": [[67, 78], ["gscnn.GSCNN.backbone", "gscnn.GSCNN.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "x", ",", "feat_list", ",", "self", ".", "backbone", ".", "conv1_logit", ")", "\n", "seg_logit", ",", "edge_logit", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "x", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "return", "[", "seg_logit", ",", "(", "seg_logit", ",", "edge_logit", ")", ",", "edge_logit", ",", "seg_logit", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gscnn.GSCNN.init_weight": [[79, 82], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gscnn.GSCNNHead.__init__": [[48, 85], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.backbones.resnet_vd.BasicBlock", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "gscnn.GatedSpatailConv2d", "paddleseg.models.backbones.resnet_vd.BasicBlock", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "gscnn.GatedSpatailConv2d", "paddleseg.models.backbones.resnet_vd.BasicBlock", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "gscnn.GatedSpatailConv2d", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "gscnn.ASPPModule", "paddleseg.models.deeplab.Decoder"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["\n", "\n", "def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "0", ",", "1", ",", "2", ",", "3", ")", ",", "\n", "aspp_ratios", "=", "(", "1", ",", "6", ",", "12", ",", "18", ")", ",", "\n", "aspp_out_channels", "=", "256", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "self", ".", "backbone", ".", "feat_channels", "\n", "self", ".", "head", "=", "GSCNNHead", "(", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "aspp_ratios", ",", "aspp_out_channels", ",", "align_corners", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "x", ",", "feat_list", ",", "self", ".", "backbone", ".", "conv1_logit", ")", "\n", "seg_logit", ",", "edge_logit", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "x", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "return", "[", "seg_logit", ",", "(", "seg_logit", ",", "edge_logit", ")", ",", "edge_logit", ",", "seg_logit", "]", "\n", "\n", "", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n", "\n", "", "", "", "class", "GSCNNHead", "(", "nn", ".", "Layer", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gscnn.GSCNNHead.forward": [[86, 160], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "x.numpy().transpose", "numpy.zeros", "range", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "gscnn.GSCNNHead.res1", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "gscnn.GSCNNHead.d1", "gscnn.GSCNNHead.gate1", "gscnn.GSCNNHead.res2", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "gscnn.GSCNNHead.d2", "gscnn.GSCNNHead.gate2", "gscnn.GSCNNHead.res3", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "gscnn.GSCNNHead.d3", "gscnn.GSCNNHead.gate3", "gscnn.GSCNNHead.fuse", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "gscnn.GSCNNHead.dsn1", "gscnn.GSCNNHead.dsn2", "gscnn.GSCNNHead.dsn3", "cv2.Canny", "range", "x.numpy", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_SpAtten_S.fuse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["\n", "\n", "def", "__init__", "(", "self", ",", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "aspp_ratios", ",", "aspp_out_channels", ",", "align_corners", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "dsn1", "=", "nn", ".", "Conv2D", "(", "\n", "backbone_channels", "[", "backbone_indices", "[", "1", "]", "]", ",", "1", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "dsn2", "=", "nn", ".", "Conv2D", "(", "\n", "backbone_channels", "[", "backbone_indices", "[", "2", "]", "]", ",", "1", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "dsn3", "=", "nn", ".", "Conv2D", "(", "\n", "backbone_channels", "[", "backbone_indices", "[", "3", "]", "]", ",", "1", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "res1", "=", "resnet_vd", ".", "BasicBlock", "(", "64", ",", "64", ",", "stride", "=", "1", ")", "\n", "self", ".", "d1", "=", "nn", ".", "Conv2D", "(", "64", ",", "32", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gate1", "=", "GatedSpatailConv2d", "(", "32", ",", "32", ")", "\n", "self", ".", "res2", "=", "resnet_vd", ".", "BasicBlock", "(", "32", ",", "32", ",", "stride", "=", "1", ")", "\n", "self", ".", "d2", "=", "nn", ".", "Conv2D", "(", "32", ",", "16", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gate2", "=", "GatedSpatailConv2d", "(", "16", ",", "16", ")", "\n", "self", ".", "res3", "=", "resnet_vd", ".", "BasicBlock", "(", "16", ",", "16", ",", "stride", "=", "1", ")", "\n", "self", ".", "d3", "=", "nn", ".", "Conv2D", "(", "16", ",", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gate3", "=", "GatedSpatailConv2d", "(", "8", ",", "8", ")", "\n", "self", ".", "fuse", "=", "nn", ".", "Conv2D", "(", "8", ",", "1", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "cw", "=", "nn", ".", "Conv2D", "(", "2", ",", "1", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "aspp", "=", "ASPPModule", "(", "\n", "aspp_ratios", "=", "aspp_ratios", ",", "\n", "in_channels", "=", "backbone_channels", "[", "-", "1", "]", ",", "\n", "out_channels", "=", "aspp_out_channels", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "image_pooling", "=", "True", ")", "\n", "\n", "self", ".", "decoder", "=", "deeplab", ".", "Decoder", "(", "\n", "num_classes", "=", "num_classes", ",", "\n", "in_channels", "=", "backbone_channels", "[", "0", "]", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "feat_list", ",", "s_input", ")", ":", "\n", "        ", "input_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "m1f", "=", "F", ".", "interpolate", "(", "\n", "s_input", ",", "\n", "input_shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "l1", ",", "l2", ",", "l3", "=", "[", "\n", "feat_list", "[", "self", ".", "backbone_indices", "[", "i", "]", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "self", ".", "backbone_indices", ")", ")", "\n", "]", "\n", "s1", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "dsn1", "(", "l1", ")", ",", "\n", "input_shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "s2", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "dsn2", "(", "l2", ")", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gscnn.GatedSpatailConv2d.__init__": [[163, 191], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["align_corners", "=", "self", ".", "align_corners", ")", "\n", "s3", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "dsn3", "(", "l3", ")", ",", "\n", "input_shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "# Get image gradient", "\n", "im_arr", "=", "x", ".", "numpy", "(", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "im_arr", "=", "(", "(", "im_arr", "*", "0.5", "+", "0.5", ")", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "canny", "=", "np", ".", "zeros", "(", "(", "input_shape", "[", "0", "]", ",", "1", ",", "input_shape", "[", "2", "]", ",", "input_shape", "[", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "input_shape", "[", "0", "]", ")", ":", "\n", "            ", "canny", "[", "i", "]", "=", "cv2", ".", "Canny", "(", "im_arr", "[", "i", "]", ",", "10", ",", "100", ")", "\n", "", "canny", "=", "canny", "/", "255", "\n", "canny", "=", "paddle", ".", "to_tensor", "(", "canny", ")", ".", "astype", "(", "'float32'", ")", "\n", "canny", ".", "stop_gradient", "=", "True", "\n", "\n", "cs", "=", "self", ".", "res1", "(", "m1f", ")", "\n", "cs", "=", "F", ".", "interpolate", "(", "\n", "cs", ",", "\n", "input_shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "cs", "=", "self", ".", "d1", "(", "cs", ")", "\n", "cs", "=", "self", ".", "gate1", "(", "cs", ",", "s1", ")", "\n", "\n", "cs", "=", "self", ".", "res2", "(", "cs", ")", "\n", "cs", "=", "F", ".", "interpolate", "(", "\n", "cs", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gscnn.GatedSpatailConv2d.forward": [[192, 198], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "gscnn.GatedSpatailConv2d._gate_conv", "gscnn.GatedSpatailConv2d.conv"], "methods", ["None"], ["input_shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "cs", "=", "self", ".", "d2", "(", "cs", ")", "\n", "cs", "=", "self", ".", "gate2", "(", "cs", ",", "s2", ")", "\n", "\n", "cs", "=", "self", ".", "res3", "(", "cs", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gscnn.ASPPModule.__init__": [[213, 259], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "len", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "conv_func", "gscnn.ASPPModule.aspp_blocks.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["edge_out", "=", "F", ".", "sigmoid", "(", "cs", ")", "# Ouput of shape stream", "\n", "\n", "cat", "=", "paddle", ".", "concat", "(", "[", "edge_out", ",", "canny", "]", ",", "axis", "=", "1", ")", "\n", "acts", "=", "self", ".", "cw", "(", "cat", ")", "\n", "acts", "=", "F", ".", "sigmoid", "(", "acts", ")", "# Input of fusion module", "\n", "\n", "x", "=", "self", ".", "aspp", "(", "l3", ",", "acts", ")", "\n", "\n", "low_level_feat", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "logit", "=", "self", ".", "decoder", "(", "x", ",", "low_level_feat", ")", "\n", "logit_list", "=", "[", "logit", ",", "edge_out", "]", "\n", "return", "logit_list", "\n", "\n", "\n", "", "", "class", "GatedSpatailConv2d", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_gate_conv", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "SyncBatchNorm", "(", "in_channels", "+", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "+", "1", ",", "in_channels", "+", "1", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "+", "1", ",", "1", ",", "kernel_size", "=", "1", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input_features", ",", "gating_features", ")", ":", "\n", "        ", "cat", "=", "paddle", ".", "concat", "(", "[", "input_features", ",", "gating_features", "]", ",", "axis", "=", "1", ")", "\n", "alphas", "=", "self", ".", "_gate_conv", "(", "cat", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.gscnn.ASPPModule.forward": [[260, 293], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "gscnn.ASPPModule.edge_conv", "outputs.append", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "gscnn.ASPPModule.conv_bn_relu", "gscnn.ASPPModule.dropout", "block", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "outputs.append", "gscnn.ASPPModule.global_avg_pool", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "outputs.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["x", "=", "input_features", "*", "(", "alphas", "+", "1", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n", "\n", "", "", "class", "ASPPModule", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "\"\"\"\n    Atrous Spatial Pyramid Pooling.\n    Args:\n        aspp_ratios (tuple): The dilation rate using in ASSP module.\n        in_channels (int): The number of input channels.\n        out_channels (int): The number of output channels.\n        align_corners (bool): An argument of F.interpolate. It should be set to False when the output size of feature\n            is even, e.g. 1024x512, otherwise it is True, e.g. 769x769.\n        use_sep_conv (bool, optional): If using separable conv in ASPP module. Default: False.\n        image_pooling (bool, optional): If augmented with image-level features. Default: False\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "aspp_ratios", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "align_corners", ",", "\n", "use_sep_conv", "=", "False", ",", "\n", "image_pooling", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "aspp_blocks", "=", "nn", ".", "LayerList", "(", ")", "\n", "\n", "for", "ratio", "in", "aspp_ratios", ":", "\n", "            ", "if", "use_sep_conv", "and", "ratio", ">", "1", ":", "\n", "                ", "conv_func", "=", "layers", ".", "SeparableConvBNReLU", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.BiseNetV1.__init__": [[39, 79], ["paddle.Layer.__init__", "bisenetv1.SpatialPath", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "bisenetv1.FeatureFusion", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddleseg.models.layers.ConvBNReLU", "bisenetv1.AttentionRefinement", "bisenetv1.AttentionRefinement", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "bisenetv1.BiSeNetHead", "bisenetv1.BiSeNetHead", "bisenetv1.BiSeNetHead"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "backbone", ",", "conv_channel", "=", "128", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "spatial_path", "=", "SpatialPath", "(", "3", ",", "128", ")", "\n", "self", ".", "global_context", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "conv_channel", ",", "1", ",", "bias_attr", "=", "False", ")", ",", ")", "\n", "\n", "self", ".", "arms", "=", "nn", ".", "LayerList", "(", "[", "\n", "AttentionRefinement", "(", "512", ",", "conv_channel", ")", ",", "\n", "AttentionRefinement", "(", "256", ",", "conv_channel", ")", ",", "\n", "]", ")", "\n", "self", ".", "refines", "=", "nn", ".", "LayerList", "(", "[", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "conv_channel", ",", "\n", "conv_channel", ",", "\n", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "conv_channel", ",", "\n", "conv_channel", ",", "\n", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "]", ")", "\n", "\n", "self", ".", "heads", "=", "nn", ".", "LayerList", "(", "[", "\n", "BiSeNetHead", "(", "conv_channel", ",", "num_classes", ",", "8", ",", "True", ")", ",", "\n", "BiSeNetHead", "(", "conv_channel", ",", "num_classes", ",", "8", ",", "True", ")", ",", "\n", "BiSeNetHead", "(", "conv_channel", "*", "2", ",", "num_classes", ",", "8", ",", "False", ")", ",", "\n", "]", ")", "\n", "\n", "self", ".", "ffm", "=", "FeatureFusion", "(", "conv_channel", "*", "2", ",", "conv_channel", "*", "2", ",", "1", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.BiseNetV1.init_weight": [[80, 83], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.BiseNetV1.forward": [[84, 124], ["bisenetv1.BiseNetV1.spatial_path", "bisenetv1.BiseNetV1.backbone", "bisenetv1.BiseNetV1.reverse", "bisenetv1.BiseNetV1.global_context", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "enumerate", "bisenetv1.BiseNetV1.ffm", "pred_out.append", "zip", "arm", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "refine", "pred_out.append", "enumerate", "output.append", "head", "output.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "spatial_out", "=", "self", ".", "spatial_path", "(", "x", ")", "\n", "context_blocks", "=", "self", ".", "backbone", "(", "x", ")", "\n", "context_blocks", ".", "reverse", "(", ")", "\n", "\n", "global_context", "=", "self", ".", "global_context", "(", "context_blocks", "[", "0", "]", ")", "\n", "global_context", "=", "F", ".", "interpolate", "(", "\n", "global_context", ",", "\n", "size", "=", "paddle", ".", "shape", "(", "context_blocks", "[", "0", "]", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "last_fm", "=", "global_context", "\n", "pred_out", "=", "[", "]", "\n", "\n", "for", "i", ",", "(", "\n", "fm", ",", "arm", ",", "refine", "\n", ")", "in", "enumerate", "(", "zip", "(", "context_blocks", "[", ":", "2", "]", ",", "self", ".", "arms", ",", "self", ".", "refines", ")", ")", ":", "\n", "            ", "fm", "=", "arm", "(", "fm", ")", "\n", "fm", "+=", "last_fm", "\n", "last_fm", "=", "F", ".", "interpolate", "(", "\n", "fm", ",", "\n", "size", "=", "paddle", ".", "shape", "(", "context_blocks", "[", "i", "+", "1", "]", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "last_fm", "=", "refine", "(", "last_fm", ")", "\n", "pred_out", ".", "append", "(", "last_fm", ")", "\n", "", "context_out", "=", "last_fm", "\n", "\n", "concate_fm", "=", "self", ".", "ffm", "(", "spatial_out", ",", "context_out", ")", "\n", "pred_out", ".", "append", "(", "concate_fm", ")", "\n", "\n", "output", "=", "[", "]", "\n", "if", "self", ".", "training", ":", "\n", "            ", "for", "i", ",", "head", "in", "enumerate", "(", "self", ".", "heads", ")", ":", "\n", "                ", "out", "=", "head", "(", "pred_out", "[", "i", "]", ")", "\n", "output", ".", "append", "(", "out", ")", "\n", "", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "heads", "[", "-", "1", "]", "(", "pred_out", "[", "-", "1", "]", ")", "\n", "output", ".", "append", "(", "out", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.SpatialPath.__init__": [[135, 155], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "inner_channel", "=", "64", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_7x7", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "inner_channel", ",", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_3x3_1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "inner_channel", ",", "\n", "inner_channel", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_3x3_2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "inner_channel", ",", "\n", "inner_channel", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_1x1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "inner_channel", ",", "out_channels", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.SpatialPath.forward": [[156, 162], ["bisenetv1.SpatialPath.conv_7x7", "bisenetv1.SpatialPath.conv_3x3_1", "bisenetv1.SpatialPath.conv_3x3_2", "bisenetv1.SpatialPath.conv_1x1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_7x7", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_3x3_1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_3x3_2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_1x1", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.BiSeNetHead.__init__": [[174, 181], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "scale", ",", "is_aux", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "inner_channel", "=", "128", "if", "is_aux", "else", "64", "\n", "self", ".", "conv_3x3", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "inner_channel", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_1x1", "=", "nn", ".", "Conv2D", "(", "inner_channel", ",", "out_channels", ",", "1", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.BiSeNetHead.forward": [[182, 189], ["bisenetv1.BiSeNetHead.conv_3x3", "bisenetv1.BiSeNetHead.conv_1x1", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_3x3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_1x1", "(", "x", ")", "\n", "if", "self", ".", "scale", ">", "1", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "scale_factor", "=", "self", ".", "scale", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.AttentionRefinement.__init__": [[200, 209], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_3x3", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "out_channels", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "channel_attention", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "out_channels", ",", "out_channels", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.AttentionRefinement.forward": [[210, 215], ["bisenetv1.AttentionRefinement.conv_3x3", "bisenetv1.AttentionRefinement.channel_attention"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_3x3", "(", "x", ")", "\n", "se", "=", "self", ".", "channel_attention", "(", "x", ")", "\n", "x", "=", "x", "*", "se", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.FeatureFusion.__init__": [[227, 238], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "reduction", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_1x1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "out_channels", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "channel_attention", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "out_channels", ",", "out_channels", "//", "reduction", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "out_channels", "//", "reduction", ",", "out_channels", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenetv1.FeatureFusion.forward": [[239, 245], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "bisenetv1.FeatureFusion.conv_1x1", "bisenetv1.FeatureFusion.channel_attention"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "fm", "=", "paddle", ".", "concat", "(", "[", "x1", ",", "x2", "]", ",", "axis", "=", "1", ")", "\n", "fm", "=", "self", ".", "conv_1x1", "(", "fm", ")", "\n", "fm_se", "=", "self", ".", "channel_attention", "(", "fm", ")", "\n", "output", "=", "fm", "+", "fm", "*", "fm_se", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fcn.FCN.__init__": [[45, 74], ["paddle.Layer.__init__", "fcn.FCNHead", "fcn.FCN.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "-", "1", ",", ")", ",", "\n", "channels", "=", "None", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ",", "\n", "bias", "=", "True", ",", "\n", "data_format", "=", "\"NCHW\"", ")", ":", "\n", "        ", "super", "(", "FCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "data_format", "!=", "'NCHW'", ":", "\n", "            ", "raise", "(", "'fcn only support NCHW data format'", ")", "\n", "", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "head", "=", "FCNHead", "(", "\n", "num_classes", ",", "\n", "backbone_indices", ",", "\n", "backbone_channels", ",", "\n", "channels", ",", "\n", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "data_format", "=", "data_format", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fcn.FCN.forward": [[75, 84], ["fcn.FCN.backbone", "fcn.FCN.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fcn.FCN.init_weight": [[86, 89], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fcn.FCNHead.__init__": [[104, 130], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "fcn.FCNHead.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone_indices", "=", "(", "-", "1", ",", ")", ",", "\n", "backbone_channels", "=", "(", "270", ",", ")", ",", "\n", "channels", "=", "None", ",", "\n", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "FCNHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "if", "channels", "is", "None", ":", "\n", "            ", "channels", "=", "backbone_channels", "[", "0", "]", "\n", "\n", "", "self", ".", "conv_1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "backbone_channels", "[", "0", "]", ",", "\n", "out_channels", "=", "channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "bias", ")", "\n", "self", ".", "cls", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "channels", ",", "\n", "out_channels", "=", "self", ".", "num_classes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "bias", ")", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fcn.FCNHead.forward": [[131, 138], ["fcn.FCNHead.conv_1", "fcn.FCNHead.cls", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "x", "=", "self", ".", "conv_1", "(", "x", ")", "\n", "logit", "=", "self", ".", "cls", "(", "x", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fcn.FCNHead.init_weight": [[139, 146], ["fcn.FCNHead.sublayers", "isinstance", "paddleseg.cvlibs.param_init.normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "normal_init", "(", "layer", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "layer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "layer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "layer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointRend.__init__": [[71, 141], ["paddle.Layer.__init__", "pointrend.FPNNeck", "pointrend.PointHead", "pointrend.FPNHead", "pointrend.PointRend.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "\n", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", ",", "\n", "fpn_inplanes", "=", "[", "256", ",", "512", ",", "1024", ",", "2048", "]", ",", "\n", "fpn_outplanes", "=", "256", ",", "\n", "point_in_channels", "=", "[", "256", "]", ",", "\n", "point_out_channels", "=", "256", ",", "\n", "point_in_index", "=", "[", "0", "]", ",", "\n", "point_num_fcs", "=", "3", ",", "\n", "point_num_points", "=", "2048", ",", "\n", "point_oversample_ratio", "=", "3", ",", "\n", "point_importance_sample_ratio", "=", "0.75", ",", "\n", "point_scale_factor", "=", "2", ",", "\n", "point_subdivision_steps", "=", "2", ",", "\n", "point_subdivision_num_points", "=", "8196", ",", "\n", "point_dropout_ratio", "=", "0", ",", "\n", "point_coarse_pred_each_layer", "=", "True", ",", "\n", "point_input_transform", "=", "'multiple_select'", ",", "# resize_concat", "\n", "point_conv_cfg", "=", "'Conv1D'", ",", "\n", "PFN_feature_strides", "=", "[", "4", ",", "8", ",", "16", ",", "32", "]", ",", "\n", "PFN_in_channels", "=", "[", "256", ",", "256", ",", "256", ",", "256", "]", ",", "\n", "PFN_channels", "=", "128", ",", "\n", "PFN_in_index", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "\n", "PFN_dropout_ratio", "=", "0", ",", "\n", "PFN_conv_cfg", "=", "'Conv2D'", ",", "\n", "PFN_input_transform", "=", "'multiple_select'", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "PointRend", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "in_channels", "=", "[", "\n", "self", ".", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "neck", "=", "FPNNeck", "(", "\n", "fpn_inplanes", "=", "fpn_inplanes", ",", "fpn_outplanes", "=", "fpn_outplanes", ")", "\n", "self", ".", "pointhead", "=", "PointHead", "(", "\n", "in_channels", "=", "point_in_channels", ",", "\n", "out_channels", "=", "point_out_channels", ",", "\n", "num_classes", "=", "num_classes", ",", "\n", "in_index", "=", "point_in_index", ",", "\n", "num_fcs", "=", "point_num_fcs", ",", "\n", "num_points", "=", "point_num_points", ",", "\n", "oversample_ratio", "=", "point_oversample_ratio", ",", "\n", "importance_sample_ratio", "=", "point_importance_sample_ratio", ",", "\n", "scale_factor", "=", "point_scale_factor", ",", "\n", "subdivision_steps", "=", "point_subdivision_steps", ",", "\n", "subdivision_num_points", "=", "point_subdivision_num_points", ",", "\n", "dropout_ratio", "=", "point_dropout_ratio", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "coarse_pred_each_layer", "=", "point_coarse_pred_each_layer", ",", "\n", "input_transform", "=", "point_input_transform", ",", "# resize_concat", "\n", "conv_cfg", "=", "point_conv_cfg", ")", "\n", "self", ".", "fpnhead", "=", "FPNHead", "(", "\n", "feature_strides", "=", "PFN_feature_strides", ",", "\n", "in_channels", "=", "PFN_in_channels", ",", "\n", "channels", "=", "PFN_channels", ",", "\n", "num_class", "=", "num_classes", ",", "\n", "in_index", "=", "PFN_in_index", ",", "\n", "dropout_ratio", "=", "PFN_dropout_ratio", ",", "\n", "conv_cfg", "=", "PFN_conv_cfg", ",", "\n", "input_transform", "=", "PFN_input_transform", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointRend.forward": [[142, 169], ["pointrend.PointRend.backbone", "pointrend.PointRend.neck", "pointrend.PointRend.fpnhead", "pointrend.PointRend.pointhead", "logit_list.append", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "fpn_feats", "=", "self", ".", "neck", "(", "feats", ")", "# [n,256,64,128]*3 & [n,256,128,256]", "\n", "pfn_logits", "=", "self", ".", "fpnhead", "(", "\n", "fpn_feats", ")", "# segmainoutput decode_head[0] 512*1024->[n, 19, 64, 128]", "\n", "point_logits", "=", "self", ".", "pointhead", "(", "\n", "fpn_feats", ",", "pfn_logits", ")", "# segpointoutput decode_head[1]", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "pfn_logits", "\n", "]", "\n", "logit_list", ".", "append", "(", "point_logits", ")", "\n", "", "else", ":", "\n", "            ", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "point_logits", "\n", "]", "\n", "", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointRend.init_weight": [[170, 173], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.__init__": [[210, 272], ["paddle.Layer.__init__", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D", "sum", "pointrend.ConvModule", "pointrend.PointHead.fcs.append", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "\n", "self", ",", "\n", "num_classes", "=", "19", ",", "\n", "num_fcs", "=", "3", ",", "\n", "in_channels", "=", "[", "256", "]", ",", "\n", "out_channels", "=", "256", ",", "\n", "in_index", "=", "[", "0", "]", ",", "\n", "num_points", "=", "2048", ",", "\n", "oversample_ratio", "=", "3", ",", "\n", "importance_sample_ratio", "=", "0.75", ",", "\n", "scale_factor", "=", "2", ",", "\n", "subdivision_steps", "=", "2", ",", "\n", "subdivision_num_points", "=", "8196", ",", "\n", "dropout_ratio", "=", "0.1", ",", "\n", "coarse_pred_each_layer", "=", "True", ",", "\n", "conv_cfg", "=", "'Conv1D'", ",", "\n", "input_transform", "=", "'multiple_select'", ",", "# resize_concat", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "PointHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "channels", "=", "out_channels", "\n", "self", ".", "in_index", "=", "in_index", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_fcs", "=", "num_fcs", "\n", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "oversample_ratio", "=", "oversample_ratio", "\n", "self", ".", "importance_sample_ratio", "=", "importance_sample_ratio", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "self", ".", "subdivision_steps", "=", "subdivision_steps", "\n", "self", ".", "subdivision_num_points", "=", "paddle", ".", "to_tensor", "(", "\n", "subdivision_num_points", ",", "dtype", "=", "\"int32\"", ")", "\n", "self", ".", "dropout_ratio", "=", "dropout_ratio", "\n", "self", ".", "coarse_pred_each_layer", "=", "coarse_pred_each_layer", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "input_transform", "=", "input_transform", "\n", "\n", "fc_in_channels", "=", "sum", "(", "self", ".", "in_channels", ")", "+", "self", ".", "num_classes", "\n", "fc_channels", "=", "self", ".", "channels", "\n", "self", ".", "fcs", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "k", "in", "range", "(", "num_fcs", ")", ":", "\n", "            ", "fc", "=", "ConvModule", "(", "\n", "fc_in_channels", ",", "\n", "fc_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "conv_cfg", "=", "conv_cfg", ",", ")", "\n", "self", ".", "fcs", ".", "append", "(", "fc", ")", "\n", "fc_in_channels", "=", "fc_channels", "\n", "fc_in_channels", "+=", "self", ".", "num_classes", "if", "self", ".", "coarse_pred_each_layer", "else", "0", "\n", "", "self", ".", "fc_seg", "=", "nn", ".", "Conv1D", "(", "\n", "fc_in_channels", ",", "\n", "self", ".", "num_classes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "\n", "if", "self", ".", "dropout_ratio", ">", "0", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "self", ".", "dropout_ratio", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.cls_seg": [[273, 279], ["pointrend.PointHead.fc_seg", "pointrend.PointHead.dropout"], "methods", ["None"], ["", "", "def", "cls_seg", "(", "self", ",", "feat", ")", ":", "\n", "        ", "\"\"\"Classify each pixel with fc.\"\"\"", "\n", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "feat", "=", "self", ".", "dropout", "(", "feat", ")", "\n", "", "output", "=", "self", ".", "fc_seg", "(", "feat", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead._get_fine_grained_point_feats": [[280, 302], ["pointrend.point_sample", "len", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.point_cross_entropy_loss.point_sample"], ["", "def", "_get_fine_grained_point_feats", "(", "self", ",", "x", ",", "points", ")", ":", "\n", "        ", "\"\"\"\n        Sample from fine grained features.\n\n        Args:\n            x (list[Tensor]): Feature pyramid from by neck or backbone.\n            points (Tensor): Point coordinates, shape (batch_size,\n                num_points, 2).\n        Returns:\n            fine_grained_feats (Tensor): Sampled fine grained feature,\n                shape (batch_size, sum(channels of x), num_points).\n        \"\"\"", "\n", "\n", "fine_grained_feats_list", "=", "[", "\n", "point_sample", "(", "\n", "_", ",", "points", ",", "align_corners", "=", "self", ".", "align_corners", ")", "for", "_", "in", "x", "\n", "]", "\n", "if", "len", "(", "fine_grained_feats_list", ")", ">", "1", ":", "\n", "            ", "fine_grained_feats", "=", "paddle", ".", "concat", "(", "fine_grained_feats_list", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "fine_grained_feats", "=", "fine_grained_feats_list", "[", "0", "]", "\n", "", "return", "fine_grained_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead._get_coarse_point_feats": [[303, 319], ["pointrend.point_sample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.point_cross_entropy_loss.point_sample"], ["", "def", "_get_coarse_point_feats", "(", "self", ",", "prev_output", ",", "points", ")", ":", "\n", "        ", "\"\"\"\n        Sample from fine grained features.\n\n        Args:\n            prev_output (list[Tensor]): Prediction of previous decode head.\n            points (Tensor): Point coordinates, shape (batch_size,\n                num_points, 2).\n        Returns:\n            coarse_feats (Tensor): Sampled coarse feature, shape (batch_size,\n                num_classes, num_points).\n        \"\"\"", "\n", "\n", "coarse_feats", "=", "point_sample", "(", "\n", "prev_output", ",", "points", ",", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "return", "coarse_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead._transform_inputs": [[320, 345], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "_transform_inputs", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Transform inputs for decoder.\n\n        Args:\n            inputs (list[Tensor]): List of multi-level img features.\n        Returns:\n            Tensor: The transformed inputs\n        \"\"\"", "\n", "\n", "if", "self", ".", "input_transform", "==", "'resize_concat'", ":", "\n", "            ", "inputs", "=", "[", "inputs", "[", "i", "]", "for", "i", "in", "self", ".", "in_index", "]", "\n", "upsampled_inputs", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "size", "=", "paddle", ".", "shape", "(", "inputs", "[", "0", "]", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "x", "in", "inputs", "\n", "]", "\n", "inputs", "=", "paddle", ".", "concat", "(", "upsampled_inputs", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "input_transform", "==", "'multiple_select'", ":", "\n", "            ", "inputs", "=", "[", "inputs", "[", "i", "]", "for", "i", "in", "self", ".", "in_index", "]", "\n", "", "else", ":", "\n", "            ", "inputs", "=", "inputs", "[", "self", ".", "in_index", "[", "0", "]", "]", "\n", "", "return", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.get_points_train": [[346, 400], ["int", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "pointrend.point_sample", "uncertainty_func", "int", "shift.unsqueeze", "idx.reshape.reshape.reshape", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.point_cross_entropy_loss.point_sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "get_points_train", "(", "self", ",", "seg_logits", ",", "uncertainty_func", ")", ":", "# finish", "\n", "        ", "\"\"\"\n        Sample points for training.\n        Sample points in [0, 1] x [0, 1] coordinate space based on their\n        uncertainty. The uncertainties are calculated for each point using\n        'uncertainty_func' function that takes point's logit prediction as\n        input.\n\n        Args:\n            seg_logits (Tensor): Semantic segmentation logits, shape (\n                batch_size, num_classes, height, width).\n            uncertainty_func (func): uncertainty calculation function.\n            cfg (dict): Training config of point head.\n        Returns:\n            point_coords (Tensor): A tensor of shape (batch_size, num_points,\n                2) that contains the coordinates of ``num_points`` sampled\n                points.\n        \"\"\"", "\n", "\n", "num_points", "=", "self", ".", "num_points", "\n", "oversample_ratio", "=", "self", ".", "oversample_ratio", "\n", "importance_sample_ratio", "=", "self", ".", "importance_sample_ratio", "\n", "assert", "oversample_ratio", ">=", "1", "\n", "assert", "0", "<=", "importance_sample_ratio", "<=", "1", "\n", "batch_size", "=", "paddle", ".", "shape", "(", "seg_logits", ")", "[", "0", "]", "\n", "num_sampled", "=", "int", "(", "num_points", "*", "oversample_ratio", ")", "\n", "point_coords", "=", "paddle", ".", "rand", "(", "[", "batch_size", ",", "num_sampled", ",", "2", "]", ")", "\n", "point_logits", "=", "point_sample", "(", "seg_logits", ",", "point_coords", ")", "\n", "# It is crucial to calculate uncertainty based on the sampled", "\n", "# prediction value for the points. Calculating uncertainties of the", "\n", "# coarse predictions first and sampling them for points leads to", "\n", "# incorrect results.  To illustrate this: assume uncertainty func(", "\n", "# logits)=-abs(logits), a sampled point between two coarse", "\n", "# predictions with -1 and 1 logits has 0 logits, and therefore 0", "\n", "# uncertainty value. However, if we calculate uncertainties for the", "\n", "# coarse predictions first, both will have -1 uncertainty,", "\n", "# and sampled point will get -1 uncertainty.", "\n", "point_uncertainties", "=", "uncertainty_func", "(", "point_logits", ")", "\n", "num_uncertain_points", "=", "int", "(", "importance_sample_ratio", "*", "num_points", ")", "\n", "num_random_points", "=", "num_points", "-", "num_uncertain_points", "\n", "idx", "=", "paddle", ".", "topk", "(", "\n", "point_uncertainties", "[", ":", ",", "0", ",", ":", "]", ",", "k", "=", "num_uncertain_points", ",", "axis", "=", "1", ")", "[", "1", "]", "\n", "shift", "=", "num_sampled", "*", "paddle", ".", "arange", "(", "batch_size", ",", "dtype", "=", "'int64'", ")", "\n", "idx", "+=", "shift", ".", "unsqueeze", "(", "[", "-", "1", "]", ")", "\n", "idx", "=", "idx", ".", "reshape", "(", "[", "-", "1", "]", ")", "\n", "point_coords", "=", "paddle", ".", "index_select", "(", "\n", "point_coords", ".", "reshape", "(", "[", "-", "1", ",", "2", "]", ")", ",", "idx", ",", "axis", "=", "0", ")", "\n", "point_coords", "=", "point_coords", ".", "reshape", "(", "\n", "[", "batch_size", ",", "num_uncertain_points", ",", "2", "]", ")", "\n", "if", "num_random_points", ">", "0", ":", "\n", "            ", "rand_point_coords", "=", "paddle", ".", "rand", "(", "[", "batch_size", ",", "num_random_points", ",", "2", "]", ")", "\n", "point_coords", "=", "paddle", ".", "concat", "(", "\n", "(", "point_coords", ",", "rand_point_coords", ")", ",", "axis", "=", "1", ")", "\n", "", "return", "point_coords", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.get_points_test": [[401, 438], ["uncertainty_func", "uncertainty_map.reshape.reshape.reshape", "paddle.min", "paddle.min", "paddle.min", "paddle.min", "paddle.min", "paddle.min", "paddle.min", "paddle.min", "paddle.min", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "get_points_test", "(", "self", ",", "seg_logits", ",", "uncertainty_func", ")", ":", "# finish", "\n", "        ", "\"\"\"\n        Sample points for testing.\n        Find ``num_points`` most uncertain points from ``uncertainty_map``.\n\n        Args:\n            seg_logits (Tensor): A tensor of shape (batch_size, num_classes,\n                height, width) for class-specific or class-agnostic prediction.\n            uncertainty_func (func): uncertainty calculation function.\n            cfg (dict): Testing config of point head.\n        Returns:\n            point_indices (Tensor): A tensor of shape (batch_size, num_points)\n                that contains indices from [0, height x width) of the most\n                uncertain points.\n            point_coords (Tensor): A tensor of shape (batch_size, num_points,\n                2) that contains [0, 1] x [0, 1] normalized coordinates of the\n                most uncertain points from the ``height x width`` grid .\n        \"\"\"", "\n", "\n", "num_points", "=", "self", ".", "subdivision_num_points", "\n", "uncertainty_map", "=", "uncertainty_func", "(", "seg_logits", ")", "\n", "batch_size", "=", "paddle", ".", "shape", "(", "uncertainty_map", ")", "[", "0", "]", "\n", "height", "=", "paddle", ".", "shape", "(", "uncertainty_map", ")", "[", "2", "]", "\n", "width", "=", "paddle", ".", "shape", "(", "uncertainty_map", ")", "[", "3", "]", "\n", "h_step", "=", "1.0", "/", "height", "\n", "w_step", "=", "1.0", "/", "width", "\n", "\n", "uncertainty_map", "=", "uncertainty_map", ".", "reshape", "(", "[", "batch_size", ",", "height", "*", "width", "]", ")", "\n", "num_points", "=", "paddle", ".", "min", "(", "paddle", ".", "concat", "(", "[", "height", "*", "width", ",", "num_points", "]", ")", ")", "\n", "point_indices", "=", "paddle", ".", "topk", "(", "uncertainty_map", ",", "num_points", ",", "axis", "=", "1", ")", "[", "1", "]", "\n", "point_coords", "=", "paddle", ".", "zeros", "(", "\n", "[", "batch_size", ",", "num_points", ",", "2", "]", ",", "dtype", "=", "'float32'", ")", "\n", "point_coords", "[", ":", ",", ":", ",", "0", "]", "=", "w_step", "/", "2.0", "+", "(", "point_indices", "%", "width", "\n", ")", ".", "astype", "(", "'float32'", ")", "*", "w_step", "\n", "point_coords", "[", ":", ",", ":", ",", "1", "]", "=", "h_step", "/", "2.0", "+", "(", "point_indices", "//", "width", "\n", ")", ".", "astype", "(", "'float32'", ")", "*", "h_step", "\n", "return", "point_indices", ",", "point_coords", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.scatter_paddle": [[439, 466], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.scatter.flatten", "paddle.scatter.flatten", "paddle.scatter.flatten", "point_indices.flatten.flatten.flatten", "point_logits.flatten.flatten.flatten", "paddle.scatter", "paddle.scatter", "paddle.scatter", "paddle.scatter", "paddle.scatter", "paddle.scatter", "paddle.scatter", "paddle.scatter", "paddle.scatter", "paddle.scatter.reshape", "paddle.scatter.reshape", "paddle.scatter.reshape", "paddle.scatter.flatten", "paddle.scatter.flatten", "paddle.scatter.flatten", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "scatter_paddle", "(", "self", ",", "refined_seg_logits", ",", "point_indices", ",", "point_logits", ")", ":", "\n", "        ", "\"\"\"\n        paddle version scatter : equal to pytorch version scatter(-1,point_indices,point_logits).\n\n        Args:\n            refined_seg_logits(Tensor): shape=[batch_size, channels, height * width]\n            point_indices(Tensor): shape=[batch_size, channels, height * width]\n            point_logits(Tensor): shape[batch_size, channels, height * width]\n        Returns:\n            scattered refined_seg_logits(Tensor).\n        \"\"\"", "\n", "\n", "original_shape", "=", "paddle", ".", "shape", "(", "\n", "refined_seg_logits", ")", "# [batch_size, channels, height * width]", "\n", "new_refined_seg_logits", "=", "refined_seg_logits", ".", "flatten", "(", "0", ",", "1", ")", "# [N*C,H*W]", "\n", "offsets", "=", "(", "\n", "paddle", ".", "arange", "(", "paddle", ".", "shape", "(", "new_refined_seg_logits", ")", "[", "0", "]", ")", "*", "\n", "paddle", ".", "shape", "(", "new_refined_seg_logits", ")", "[", "1", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", "# [N*C,1]", "\n", "point_indices", "=", "point_indices", ".", "flatten", "(", "0", ",", "1", ")", "# [N*C,H*W]", "\n", "new_point_indices", "=", "(", "point_indices", "+", "offsets", ")", ".", "flatten", "(", ")", "\n", "point_logits", "=", "point_logits", ".", "flatten", "(", ")", "# [N*C*H*W]", "\n", "refined_seg_logits", "=", "paddle", ".", "scatter", "(", "\n", "refined_seg_logits", ".", "flatten", "(", ")", ",", "\n", "new_point_indices", ",", "\n", "point_logits", ",", "\n", "overwrite", "=", "True", ")", "\n", "return", "refined_seg_logits", ".", "reshape", "(", "shape", "=", "original_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.forward_train": [[467, 485], ["pointrend.PointHead._get_fine_grained_point_feats", "pointrend.PointHead._get_coarse_point_feats", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "pointrend.PointHead.cls_seg", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "pointrend.PointHead.get_points_train", "fc", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead._get_fine_grained_point_feats", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead._get_coarse_point_feats", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNHead.cls_seg", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.get_points_train"], ["", "def", "forward_train", "(", "self", ",", "x", ",", "prev_output", ")", ":", "\n", "        ", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "points", "=", "self", ".", "get_points_train", "(", "prev_output", ",", "calculate_uncertainty", ")", "\n", "\n", "", "fine_grained_point_feats", "=", "self", ".", "_get_fine_grained_point_feats", "(", "\n", "x", ",", "points", ")", "# [2, 256, 2048]", "\n", "coarse_point_feats", "=", "self", ".", "_get_coarse_point_feats", "(", "\n", "prev_output", ",", "points", ")", "# [2, 19, 2048]", "\n", "# forward for train", "\n", "fusion_point_feats", "=", "paddle", ".", "concat", "(", "\n", "[", "fine_grained_point_feats", ",", "coarse_point_feats", "]", ",", "axis", "=", "1", ")", "\n", "for", "fc", "in", "self", ".", "fcs", ":", "\n", "            ", "fusion_point_feats", "=", "fc", "(", "fusion_point_feats", ")", "\n", "if", "self", ".", "coarse_pred_each_layer", ":", "\n", "                ", "fusion_point_feats", "=", "paddle", ".", "concat", "(", "\n", "(", "fusion_point_feats", ",", "coarse_point_feats", ")", ",", "axis", "=", "1", ")", "\n", "", "", "point_logits", "=", "self", ".", "cls_seg", "(", "fusion_point_feats", ")", "\n", "return", "[", "point_logits", ",", "points", "]", "# for points loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.forward": [[486, 537], ["pointrend.PointHead._transform_inputs", "pointrend.PointHead.forward_train", "prev_output.clone", "range", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "pointrend.PointHead.get_points_test", "pointrend.PointHead._get_fine_grained_point_feats", "pointrend.PointHead._get_coarse_point_feats", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "pointrend.PointHead.cls_seg", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.expand", "paddle.expand", "paddle.expand", "paddle.expand", "paddle.expand", "paddle.expand", "paddle.expand", "paddle.expand", "paddle.expand", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "pointrend.PointHead.scatter_paddle", "refined_seg_logits.reshape.reshape.reshape", "fc", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.FPNHead._transform_inputs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.forward_train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.get_points_test", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead._get_fine_grained_point_feats", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead._get_coarse_point_feats", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNHead.cls_seg", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.PointHead.scatter_paddle"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "prev_output", ")", ":", "\n", "        ", "\"\"\"\n        Forward function.\n\n        Args:\n            inputs (list[Tensor]): List of multi-level img features.\n            prev_output (Tensor): The output of previous decode head.\n        Returns:\n            [point_logits,points]: For points loss when in training.\n            [refined_seg_logits]: Output refined seg logits when in inference.\n        \"\"\"", "\n", "\n", "prev_output", "=", "prev_output", "[", "0", "]", "\n", "x", "=", "self", ".", "_transform_inputs", "(", "inputs", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "self", ".", "forward_train", "(", "x", ",", "prev_output", ")", "\n", "", "else", ":", "\n", "            ", "refined_seg_logits", "=", "prev_output", ".", "clone", "(", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "subdivision_steps", ")", ":", "\n", "                ", "refined_seg_logits", "=", "F", ".", "interpolate", "(", "\n", "refined_seg_logits", ",", "\n", "scale_factor", "=", "self", ".", "scale_factor", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "save_shape", "=", "paddle", ".", "shape", "(", "refined_seg_logits", ")", "\n", "point_indices", ",", "points", "=", "self", ".", "get_points_test", "(", "\n", "refined_seg_logits", ",", "calculate_uncertainty", ")", "\n", "fine_grained_point_feats", "=", "self", ".", "_get_fine_grained_point_feats", "(", "\n", "x", ",", "points", ")", "\n", "coarse_point_feats", "=", "self", ".", "_get_coarse_point_feats", "(", "prev_output", ",", "\n", "points", ")", "\n", "# forward for inference", "\n", "fusion_point_feats", "=", "paddle", ".", "concat", "(", "\n", "[", "fine_grained_point_feats", ",", "coarse_point_feats", "]", ",", "axis", "=", "1", ")", "\n", "for", "fc", "in", "self", ".", "fcs", ":", "\n", "                    ", "fusion_point_feats", "=", "fc", "(", "fusion_point_feats", ")", "\n", "if", "self", ".", "coarse_pred_each_layer", ":", "\n", "                        ", "fusion_point_feats", "=", "paddle", ".", "concat", "(", "\n", "(", "fusion_point_feats", ",", "coarse_point_feats", ")", ",", "axis", "=", "1", ")", "\n", "", "", "point_logits", "=", "self", ".", "cls_seg", "(", "fusion_point_feats", ")", "\n", "point_indices", "=", "paddle", ".", "unsqueeze", "(", "point_indices", ",", "axis", "=", "1", ")", "\n", "point_indices", "=", "paddle", ".", "expand", "(", "point_indices", ",", "\n", "[", "-", "1", ",", "save_shape", "[", "1", "]", ",", "-", "1", "]", ")", "\n", "\n", "refined_seg_logits", "=", "paddle", ".", "flatten", "(", "refined_seg_logits", ",", "2", ")", "\n", "refined_seg_logits", "=", "self", ".", "scatter_paddle", "(", "\n", "refined_seg_logits", ",", "point_indices", ",", "\n", "point_logits", ")", "# 2->height * width dim", "\n", "refined_seg_logits", "=", "refined_seg_logits", ".", "reshape", "(", "save_shape", ")", "\n", "", "return", "[", "refined_seg_logits", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.FPNHead.__init__": [[561, 613], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "len", "len", "min", "len", "max", "range", "pointrend.FPNHead.scale_heads.append", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "int", "scale_head.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "pointrend.ConvModule", "scale_head.append", "numpy.log2", "numpy.log2", "pointrend.Upsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "\n", "self", ",", "\n", "num_class", "=", "19", ",", "\n", "feature_strides", "=", "[", "4", ",", "8", ",", "16", ",", "32", "]", ",", "\n", "in_channels", "=", "[", "256", ",", "256", ",", "256", ",", "256", "]", ",", "\n", "channels", "=", "128", ",", "\n", "in_index", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "\n", "dropout_ratio", "=", "0.1", ",", "\n", "conv_cfg", "=", "'Conv2D'", ",", "\n", "input_transform", "=", "'multiple_select'", ",", "\n", "align_corners", "=", "False", ",", ")", ":", "\n", "        ", "super", "(", "FPNHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "len", "(", "feature_strides", ")", "==", "len", "(", "in_channels", ")", "\n", "assert", "min", "(", "feature_strides", ")", "==", "feature_strides", "[", "0", "]", "\n", "self", ".", "feature_strides", "=", "feature_strides", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "in_index", "=", "in_index", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "conv_cfg", "=", "conv_cfg", "\n", "self", ".", "dropout_ratio", "=", "dropout_ratio", "\n", "self", ".", "input_transform", "=", "input_transform", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "scale_heads", "=", "nn", ".", "LayerList", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "feature_strides", ")", ")", ":", "\n", "            ", "head_length", "=", "max", "(", "\n", "1", ",", "\n", "int", "(", "np", ".", "log2", "(", "feature_strides", "[", "i", "]", ")", "-", "np", ".", "log2", "(", "feature_strides", "[", "0", "]", ")", ")", ")", "\n", "scale_head", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "head_length", ")", ":", "\n", "                ", "scale_head", ".", "append", "(", "\n", "ConvModule", "(", "\n", "self", ".", "in_channels", "[", "i", "]", "if", "k", "==", "0", "else", "self", ".", "channels", ",", "\n", "self", ".", "channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "conv_cfg", "=", "self", ".", "conv_cfg", ")", ")", "\n", "if", "feature_strides", "[", "i", "]", "!=", "feature_strides", "[", "0", "]", ":", "\n", "                    ", "scale_head", ".", "append", "(", "\n", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", ")", "\n", "", "", "self", ".", "scale_heads", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "scale_head", ")", ")", "\n", "\n", "", "self", ".", "conv_seg", "=", "nn", ".", "Conv2D", "(", "self", ".", "channels", ",", "self", ".", "num_class", ",", "kernel_size", "=", "1", ")", "\n", "\n", "if", "self", ".", "dropout_ratio", "is", "not", "None", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout2D", "(", "self", ".", "dropout_ratio", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.FPNHead.cls_seg": [[614, 619], ["pointrend.FPNHead.conv_seg", "pointrend.FPNHead.dropout"], "methods", ["None"], ["", "", "def", "cls_seg", "(", "self", ",", "feat", ")", ":", "\n", "        ", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "feat", "=", "self", ".", "dropout", "(", "feat", ")", "\n", "", "output", "=", "self", ".", "conv_seg", "(", "feat", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.FPNHead._transform_inputs": [[620, 646], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "_transform_inputs", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Transform inputs for decoder.\n\n        Args:\n            inputs (list[Tensor]): List of multi-level img features.\n        Returns:\n            Tensor: The transformed inputs\n        \"\"\"", "\n", "\n", "if", "self", ".", "input_transform", "==", "'resize_concat'", ":", "\n", "            ", "inputs", "=", "[", "inputs", "[", "i", "]", "for", "i", "in", "self", ".", "in_index", "]", "\n", "upsampled_inputs", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "size", "=", "paddle", ".", "shape", "(", "inputs", "[", "0", "]", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "x", "in", "inputs", "\n", "]", "\n", "inputs", "=", "paddle", ".", "concat", "(", "upsampled_inputs", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "input_transform", "==", "'multiple_select'", ":", "\n", "            ", "inputs", "=", "[", "inputs", "[", "i", "]", "for", "i", "in", "self", ".", "in_index", "]", "\n", "", "else", ":", "\n", "            ", "inputs", "=", "inputs", "[", "self", ".", "in_index", "[", "0", "]", "]", "\n", "\n", "", "return", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.FPNHead.forward": [[647, 658], ["pointrend.FPNHead._transform_inputs", "range", "pointrend.FPNHead.cls_seg", "len", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.FPNHead._transform_inputs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNHead.cls_seg", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "self", ".", "_transform_inputs", "(", "inputs", ")", "\n", "output", "=", "self", ".", "scale_heads", "[", "0", "]", "(", "x", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "self", ".", "feature_strides", ")", ")", ":", "\n", "            ", "output", "=", "output", "+", "F", ".", "interpolate", "(", "\n", "self", ".", "scale_heads", "[", "i", "]", "(", "x", "[", "i", "]", ")", ",", "\n", "size", "=", "paddle", ".", "shape", "(", "output", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "", "output", "=", "self", ".", "cls_seg", "(", "output", ")", "\n", "return", "[", "output", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.FPNNeck.__init__": [[669, 690], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "pointrend.FPNNeck.lateral_convs.append", "pointrend.FPNNeck.fpn_out.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "\n", "self", ",", "\n", "fpn_inplanes", "=", "[", "256", ",", "512", ",", "1024", ",", "2048", "]", ",", "\n", "fpn_outplanes", "=", "256", ",", ")", ":", "\n", "        ", "super", "(", "FPNNeck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lateral_convs", "=", "[", "]", "\n", "self", ".", "fpn_out", "=", "[", "]", "\n", "\n", "# FPN head", "\n", "for", "fpn_inplane", "in", "fpn_inplanes", ":", "\n", "            ", "self", ".", "lateral_convs", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "fpn_inplane", ",", "fpn_outplanes", ",", "1", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "fpn_outplanes", ")", ",", "nn", ".", "ReLU", "(", ")", ")", ")", "\n", "self", ".", "fpn_out", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "fpn_outplanes", ",", "fpn_outplanes", ",", "3", ",", "bias_attr", "=", "False", ")", ")", ")", "\n", "\n", "", "self", ".", "lateral_convs", "=", "nn", ".", "LayerList", "(", "self", ".", "lateral_convs", ")", "\n", "self", ".", "fpn_out", "=", "nn", ".", "LayerList", "(", "self", ".", "fpn_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.FPNNeck.forward": [[691, 703], ["reversed", "range", "fpn_feature_list.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "conv_out", ")", ":", "\n", "        ", "last_out", "=", "self", ".", "lateral_convs", "[", "-", "1", "]", "(", "conv_out", "[", "-", "1", "]", ")", "\n", "f", "=", "last_out", "\n", "fpn_feature_list", "=", "[", "last_out", "]", "\n", "for", "i", "in", "reversed", "(", "range", "(", "len", "(", "conv_out", ")", "-", "1", ")", ")", ":", "\n", "            ", "conv_x", "=", "conv_out", "[", "i", "]", "\n", "conv_x", "=", "self", ".", "lateral_convs", "[", "i", "]", "(", "conv_x", ")", "\n", "prev_shape", "=", "paddle", ".", "shape", "(", "conv_x", ")", "[", "2", ":", "]", "\n", "f", "=", "conv_x", "+", "F", ".", "interpolate", "(", "\n", "f", ",", "prev_shape", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "fpn_feature_list", ".", "append", "(", "self", ".", "fpn_out", "[", "i", "]", "(", "f", ")", ")", "\n", "", "return", "fpn_feature_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.ConvModule.__init__": [[710, 745], ["paddle.Layer.__init__", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "0", ",", "\n", "stride", "=", "1", ",", "\n", "conv_cfg", "=", "'Conv1D'", ",", "\n", "norm_cfg", "=", "'None'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "(", "conv_cfg", "==", "'Conv1D'", ")", ":", "\n", "            ", "self", ".", "_conv", "=", "nn", ".", "Conv1D", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "**", "kwargs", ")", "\n", "", "if", "(", "conv_cfg", "==", "'Conv2D'", ")", ":", "\n", "            ", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "**", "kwargs", ")", "\n", "", "if", "'data_format'", "in", "kwargs", ":", "\n", "            ", "data_format", "=", "kwargs", "[", "'data_format'", "]", "\n", "", "else", ":", "\n", "            ", "data_format", "=", "'NCHW'", "\n", "", "if", "(", "norm_cfg", "!=", "'None'", ")", ":", "\n", "            ", "self", ".", "_batch_norm", "=", "layers", ".", "SyncBatchNorm", "(", "\n", "out_channels", ",", "data_format", "=", "data_format", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_batch_norm", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.ConvModule.forward": [[746, 752], ["pointrend.ConvModule._conv", "paddle.relu", "paddle.relu", "paddle.relu", "pointrend.ConvModule._batch_norm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "if", "(", "self", ".", "_batch_norm", "!=", "None", ")", ":", "\n", "            ", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.Upsample.__init__": [[759, 772], ["paddle.Layer.__init__", "isinstance", "tuple", "float", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "size", "=", "None", ",", "\n", "scale_factor", "=", "None", ",", "\n", "mode", "=", "'nearest'", ",", "\n", "align_corners", "=", "None", ")", ":", "\n", "        ", "super", "(", "Upsample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "size", "=", "size", "\n", "if", "isinstance", "(", "scale_factor", ",", "tuple", ")", ":", "\n", "            ", "self", ".", "scale_factor", "=", "tuple", "(", "float", "(", "factor", ")", "for", "factor", "in", "scale_factor", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "scale_factor", "=", "float", "(", "scale_factor", ")", "if", "scale_factor", "else", "None", "\n", "", "self", ".", "mode", "=", "mode", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.Upsample.forward": [[773, 780], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "self", ".", "size", ":", "\n", "            ", "return", "F", ".", "interpolate", "(", "x", ",", "None", ",", "self", ".", "scale_factor", ",", "self", ".", "mode", ",", "\n", "self", ".", "align_corners", ")", "\n", "", "else", ":", "\n", "            ", "return", "F", ".", "interpolate", "(", "x", ",", "self", ".", "size", ",", "None", ",", "self", ".", "mode", ",", "\n", "self", ".", "align_corners", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.point_sample": [[782, 816], ["paddle.grid_sample", "paddle.unsqueeze.dim", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "pointrend.point_sample.denormalize"], "function", ["None"], ["", "", "", "def", "point_sample", "(", "input", ",", "points", ",", "align_corners", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    A wrapper around :func:`grid_sample` to support 3D point_coords tensors\n    Unlike :func:`torch.nn.functional.grid_sample` it assumes point_coords to\n    lie inside ``[0, 1] x [0, 1]`` square.\n\n    Args:\n        input (Tensor): Feature map, shape (N, C, H, W).\n        points (Tensor): Image based absolute point coordinates (normalized),\n            range [0, 1] x [0, 1], shape (N, P, 2) or (N, Hgrid, Wgrid, 2).\n        align_corners (bool): Whether align_corners. Default: False\n    Returns:\n        Tensor: Features of `point` on `input`, shape (N, C, P) or\n            (N, C, Hgrid, Wgrid).\n    \"\"\"", "\n", "\n", "def", "denormalize", "(", "grid", ")", ":", "\n", "        ", "\"\"\"Denormalize input grid from range [0, 1] to [-1, 1]\n        Args:\n            grid (Tensor): The grid to be denormalize, range [0, 1].\n        Returns:\n            Tensor: Denormalized grid, range [-1, 1].\n        \"\"\"", "\n", "return", "grid", "*", "2.0", "-", "1.0", "\n", "\n", "", "add_dim", "=", "False", "\n", "if", "points", ".", "dim", "(", ")", "==", "3", ":", "\n", "        ", "add_dim", "=", "True", "\n", "points", "=", "paddle", ".", "unsqueeze", "(", "points", ",", "axis", "=", "2", ")", "\n", "", "output", "=", "F", ".", "grid_sample", "(", "\n", "input", ",", "denormalize", "(", "points", ")", ",", "align_corners", "=", "align_corners", ",", "**", "kwargs", ")", "\n", "if", "add_dim", ":", "\n", "        ", "output", "=", "paddle", ".", "squeeze", "(", "output", ",", "axis", "=", "3", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pointrend.calculate_uncertainty": [[818, 836], ["paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.topk", "paddle.topk", "paddle.topk"], "function", ["None"], ["", "def", "calculate_uncertainty", "(", "seg_logits", ")", ":", "\n", "    ", "\"\"\"\n    Estimate uncertainty based on seg logits.\n    For each location of the prediction ``seg_logits`` we estimate\n    uncertainty as the difference between top first and top second\n    predicted logits.\n\n    Args:\n        seg_logits (Tensor): Semantic segmentation logits,\n            shape (batch_size, num_classes, height, width).\n    Returns:\n        scores (Tensor): T uncertainty scores with the most uncertain\n            locations having the highest uncertainty score, shape (\n            batch_size, 1, height, width)\n    \"\"\"", "\n", "\n", "top2_scores", "=", "paddle", ".", "topk", "(", "seg_logits", ",", "k", "=", "2", ",", "axis", "=", "1", ")", "[", "0", "]", "\n", "return", "paddle", ".", "unsqueeze", "(", "top2_scores", "[", ":", ",", "1", "]", "-", "top2_scores", "[", ":", ",", "0", "]", ",", "axis", "=", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.danet.DANet.__init__": [[43, 60], ["paddle.Layer.__init__", "danet.DAHead", "danet.DANet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "in_channels", "=", "[", "self", ".", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "]", "\n", "\n", "self", ".", "head", "=", "DAHead", "(", "num_classes", "=", "num_classes", ",", "in_channels", "=", "in_channels", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.danet.DANet.forward": [[61, 77], ["danet.DANet.backbone", "danet.DANet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "logit_list", "=", "self", ".", "head", "(", "feats", ")", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "logit_list", "=", "[", "logit_list", "[", "0", "]", "]", "\n", "\n", "", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "align_mode", "=", "1", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.danet.DANet.init_weight": [[78, 81], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.danet.DAHead.__init__": [[92, 115], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "danet.PAM", "danet.CAM", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "in_channels", "=", "in_channels", "[", "-", "1", "]", "\n", "inter_channels", "=", "in_channels", "//", "4", "\n", "\n", "self", ".", "channel_conv", "=", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "3", ")", "\n", "self", ".", "position_conv", "=", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "3", ")", "\n", "self", ".", "pam", "=", "PAM", "(", "inter_channels", ")", "\n", "self", ".", "cam", "=", "CAM", "(", "inter_channels", ")", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "inter_channels", ",", "inter_channels", ",", "3", ")", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBNReLU", "(", "inter_channels", ",", "inter_channels", ",", "3", ")", "\n", "\n", "self", ".", "aux_head", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout2D", "(", "0.1", ")", ",", "nn", ".", "Conv2D", "(", "in_channels", ",", "num_classes", ",", "1", ")", ")", "\n", "\n", "self", ".", "aux_head_pam", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout2D", "(", "0.1", ")", ",", "nn", ".", "Conv2D", "(", "inter_channels", ",", "num_classes", ",", "1", ")", ")", "\n", "\n", "self", ".", "aux_head_cam", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout2D", "(", "0.1", ")", ",", "nn", ".", "Conv2D", "(", "inter_channels", ",", "num_classes", ",", "1", ")", ")", "\n", "\n", "self", ".", "cls_head", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout2D", "(", "0.1", ")", ",", "nn", ".", "Conv2D", "(", "inter_channels", ",", "num_classes", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.danet.DAHead.forward": [[116, 136], ["danet.DAHead.channel_conv", "danet.DAHead.cam", "danet.DAHead.conv1", "danet.DAHead.position_conv", "danet.DAHead.pam", "danet.DAHead.conv2", "danet.DAHead.cls_head", "danet.DAHead.aux_head_cam", "danet.DAHead.aux_head_cam", "danet.DAHead.aux_head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "feats", "=", "feat_list", "[", "-", "1", "]", "\n", "channel_feats", "=", "self", ".", "channel_conv", "(", "feats", ")", "\n", "channel_feats", "=", "self", ".", "cam", "(", "channel_feats", ")", "\n", "channel_feats", "=", "self", ".", "conv1", "(", "channel_feats", ")", "\n", "\n", "position_feats", "=", "self", ".", "position_conv", "(", "feats", ")", "\n", "position_feats", "=", "self", ".", "pam", "(", "position_feats", ")", "\n", "position_feats", "=", "self", ".", "conv2", "(", "position_feats", ")", "\n", "\n", "feats_sum", "=", "position_feats", "+", "channel_feats", "\n", "logit", "=", "self", ".", "cls_head", "(", "feats_sum", ")", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "return", "[", "logit", "]", "\n", "\n", "", "cam_logit", "=", "self", ".", "aux_head_cam", "(", "channel_feats", ")", "\n", "pam_logit", "=", "self", ".", "aux_head_cam", "(", "position_feats", ")", "\n", "aux_logit", "=", "self", ".", "aux_head", "(", "feats", ")", "\n", "return", "[", "logit", ",", "cam_logit", ",", "pam_logit", ",", "aux_logit", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.danet.PAM.__init__": [[141, 155], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "danet.PAM.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "mid_channels", "=", "in_channels", "//", "8", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "mid_channels", ",", "1", ",", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "mid_channels", ",", "1", ",", "1", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "in_channels", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "gamma", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "[", "1", "]", ",", "\n", "dtype", "=", "'float32'", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.danet.PAM.forward": [[156, 183], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "danet.PAM.query_conv", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "danet.PAM.key_conv", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.softmax", "paddle.softmax", "paddle.softmax", "danet.PAM.value_conv", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "\n", "# query: n, h * w, c1", "\n", "query", "=", "self", ".", "query_conv", "(", "x", ")", "\n", "query", "=", "paddle", ".", "reshape", "(", "query", ",", "(", "0", ",", "self", ".", "mid_channels", ",", "-", "1", ")", ")", "\n", "query", "=", "paddle", ".", "transpose", "(", "query", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# key: n, c1, h * w", "\n", "key", "=", "self", ".", "key_conv", "(", "x", ")", "\n", "key", "=", "paddle", ".", "reshape", "(", "key", ",", "(", "0", ",", "self", ".", "mid_channels", ",", "-", "1", ")", ")", "\n", "\n", "# sim: n, h * w, h * w", "\n", "sim", "=", "paddle", ".", "bmm", "(", "query", ",", "key", ")", "\n", "sim", "=", "F", ".", "softmax", "(", "sim", ",", "axis", "=", "-", "1", ")", "\n", "\n", "value", "=", "self", ".", "value_conv", "(", "x", ")", "\n", "value", "=", "paddle", ".", "reshape", "(", "value", ",", "(", "0", ",", "self", ".", "in_channels", ",", "-", "1", ")", ")", "\n", "sim", "=", "paddle", ".", "transpose", "(", "sim", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# feat: from (n, c2, h * w) -> (n, c2, h, w)", "\n", "feat", "=", "paddle", ".", "bmm", "(", "value", ",", "sim", ")", "\n", "feat", "=", "paddle", ".", "reshape", "(", "feat", ",", "\n", "(", "0", ",", "self", ".", "in_channels", ",", "x_shape", "[", "2", "]", ",", "x_shape", "[", "3", "]", ")", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "feat", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.danet.CAM.__init__": [[188, 196], ["paddle.Layer.__init__", "danet.CAM.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "gamma", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "[", "1", "]", ",", "\n", "dtype", "=", "'float32'", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.danet.CAM.forward": [[197, 219], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "# query: n, c, h * w", "\n", "query", "=", "paddle", ".", "reshape", "(", "x", ",", "(", "0", ",", "self", ".", "channels", ",", "-", "1", ")", ")", "\n", "# key: n, h * w, c", "\n", "key", "=", "paddle", ".", "reshape", "(", "x", ",", "(", "0", ",", "self", ".", "channels", ",", "-", "1", ")", ")", "\n", "key", "=", "paddle", ".", "transpose", "(", "key", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# sim: n, c, c", "\n", "sim", "=", "paddle", ".", "bmm", "(", "query", ",", "key", ")", "\n", "# The danet author claims that this can avoid gradient divergence", "\n", "sim", "=", "paddle", ".", "max", "(", "sim", ",", "axis", "=", "-", "1", ",", "keepdim", "=", "True", ")", ".", "tile", "(", "\n", "[", "1", ",", "1", ",", "self", ".", "channels", "]", ")", "-", "sim", "\n", "sim", "=", "F", ".", "softmax", "(", "sim", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# feat: from (n, c, h * w) to (n, c, h, w)", "\n", "value", "=", "paddle", ".", "reshape", "(", "x", ",", "(", "0", ",", "self", ".", "channels", ",", "-", "1", ")", ")", "\n", "feat", "=", "paddle", ".", "bmm", "(", "sim", ",", "value", ")", "\n", "feat", "=", "paddle", ".", "reshape", "(", "feat", ",", "(", "0", ",", "self", ".", "channels", ",", "x_shape", "[", "2", "]", ",", "x_shape", "[", "3", "]", ")", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "feat", "+", "x", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.PPLiteSeg.__init__": [[53, 103], ["paddle.Layer.__init__", "hasattr", "pp_liteseg.PPLiteSegHead", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "zip", "pp_liteseg.PPLiteSeg.init_weight", "len", "len", "len", "max", "len", "len", "len", "len", "len", "len", "len", "pp_liteseg.PPLiteSeg.seg_heads.append", "len", "len", "max", "len", "len", "len", "pp_liteseg.SegHead"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "[", "2", ",", "3", ",", "4", "]", ",", "\n", "arm_type", "=", "'UAFM_SpAtten'", ",", "\n", "cm_bin_sizes", "=", "[", "1", ",", "2", ",", "4", "]", ",", "\n", "cm_out_ch", "=", "128", ",", "\n", "arm_out_chs", "=", "[", "64", ",", "96", ",", "128", "]", ",", "\n", "seg_head_inter_chs", "=", "[", "64", ",", "64", ",", "64", "]", ",", "\n", "resize_mode", "=", "'bilinear'", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# backbone", "\n", "assert", "hasattr", "(", "backbone", ",", "'feat_channels'", ")", ",", "\"The backbone should has feat_channels.\"", "\n", "assert", "len", "(", "backbone", ".", "feat_channels", ")", ">=", "len", "(", "backbone_indices", ")", ",", "f\"The length of input backbone_indices ({len(backbone_indices)}) should not be\"", "f\"greater than the length of feat_channels ({len(backbone.feat_channels)}).\"", "\n", "assert", "len", "(", "backbone", ".", "feat_channels", ")", ">", "max", "(", "backbone_indices", ")", ",", "f\"The max value ({max(backbone_indices)}) of backbone_indices should be \"", "f\"less than the length of feat_channels ({len(backbone.feat_channels)}).\"", "\n", "self", ".", "backbone", "=", "backbone", "\n", "\n", "assert", "len", "(", "backbone_indices", ")", ">", "1", ",", "\"The lenght of backbone_indices \"", "\"should be greater than 1\"", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "# [..., x16_id, x32_id]", "\n", "backbone_out_chs", "=", "[", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "]", "\n", "\n", "# head", "\n", "if", "len", "(", "arm_out_chs", ")", "==", "1", ":", "\n", "            ", "arm_out_chs", "=", "arm_out_chs", "*", "len", "(", "backbone_indices", ")", "\n", "", "assert", "len", "(", "arm_out_chs", ")", "==", "len", "(", "backbone_indices", ")", ",", "\"The length of \"", "\"arm_out_chs and backbone_indices should be equal\"", "\n", "\n", "self", ".", "ppseg_head", "=", "PPLiteSegHead", "(", "backbone_out_chs", ",", "arm_out_chs", ",", "\n", "cm_bin_sizes", ",", "cm_out_ch", ",", "arm_type", ",", "\n", "resize_mode", ")", "\n", "\n", "if", "len", "(", "seg_head_inter_chs", ")", "==", "1", ":", "\n", "            ", "seg_head_inter_chs", "=", "seg_head_inter_chs", "*", "len", "(", "backbone_indices", ")", "\n", "", "assert", "len", "(", "seg_head_inter_chs", ")", "==", "len", "(", "backbone_indices", ")", ",", "\"The length of \"", "\"seg_head_inter_chs and backbone_indices should be equal\"", "\n", "self", ".", "seg_heads", "=", "nn", ".", "LayerList", "(", ")", "# [..., head_16, head32]", "\n", "for", "in_ch", ",", "mid_ch", "in", "zip", "(", "arm_out_chs", ",", "seg_head_inter_chs", ")", ":", "\n", "            ", "self", ".", "seg_heads", ".", "append", "(", "SegHead", "(", "in_ch", ",", "mid_ch", ",", "num_classes", ")", ")", "\n", "\n", "# pretrained", "\n", "", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.PPLiteSeg.forward": [[104, 134], ["pp_liteseg.PPLiteSeg.backbone", "pp_liteseg.PPLiteSeg.ppseg_head", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "len", "len", "zip", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "len", "len", "seg_head", "logit_list.append", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_hw", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", "\n", "\n", "feats_backbone", "=", "self", ".", "backbone", "(", "x", ")", "# [x2, x4, x8, x16, x32]", "\n", "assert", "len", "(", "feats_backbone", ")", ">=", "len", "(", "self", ".", "backbone_indices", ")", ",", "f\"The nums of backbone feats ({len(feats_backbone)}) should be greater or \"", "f\"equal than the nums of backbone_indices ({len(self.backbone_indices)})\"", "\n", "\n", "feats_selected", "=", "[", "feats_backbone", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "\n", "feats_head", "=", "self", ".", "ppseg_head", "(", "feats_selected", ")", "# [..., x8, x16, x32]", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "logit_list", "=", "[", "]", "\n", "\n", "for", "x", ",", "seg_head", "in", "zip", "(", "feats_head", ",", "self", ".", "seg_heads", ")", ":", "\n", "                ", "x", "=", "seg_head", "(", "x", ")", "\n", "logit_list", ".", "append", "(", "x", ")", "\n", "\n", "", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "x", ",", "x_hw", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "for", "x", "in", "logit_list", "\n", "]", "\n", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "seg_heads", "[", "0", "]", "(", "feats_head", "[", "0", "]", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "x_hw", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "logit_list", "=", "[", "x", "]", "\n", "\n", "", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.PPLiteSeg.init_weight": [[135, 138], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.PPLiteSegHead.__init__": [[153, 173], ["paddle.Layer.__init__", "pp_liteseg.PPContextModule", "hasattr", "eval", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "len", "eval.", "pp_liteseg.PPLiteSegHead.arm_list.append", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "backbone_out_chs", ",", "arm_out_chs", ",", "cm_bin_sizes", ",", "cm_out_ch", ",", "\n", "arm_type", ",", "resize_mode", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cm", "=", "PPContextModule", "(", "backbone_out_chs", "[", "-", "1", "]", ",", "cm_out_ch", ",", "cm_out_ch", ",", "\n", "cm_bin_sizes", ")", "\n", "\n", "assert", "hasattr", "(", "layers", ",", "arm_type", ")", ",", "\"Not support arm_type ({})\"", ".", "format", "(", "arm_type", ")", "\n", "arm_class", "=", "eval", "(", "\"layers.\"", "+", "arm_type", ")", "\n", "\n", "self", ".", "arm_list", "=", "nn", ".", "LayerList", "(", ")", "# [..., arm8, arm16, arm32]", "\n", "for", "i", "in", "range", "(", "len", "(", "backbone_out_chs", ")", ")", ":", "\n", "            ", "low_chs", "=", "backbone_out_chs", "[", "i", "]", "\n", "high_ch", "=", "cm_out_ch", "if", "i", "==", "len", "(", "\n", "backbone_out_chs", ")", "-", "1", "else", "arm_out_chs", "[", "i", "+", "1", "]", "\n", "out_ch", "=", "arm_out_chs", "[", "i", "]", "\n", "arm", "=", "arm_class", "(", "\n", "low_chs", ",", "high_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "resize_mode", "=", "resize_mode", ")", "\n", "self", ".", "arm_list", ".", "append", "(", "arm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.PPLiteSegHead.forward": [[174, 195], ["pp_liteseg.PPLiteSegHead.cm", "reversed", "range", "arm", "out_feat_list.insert", "len"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "in_feat_list", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            in_feat_list (List(Tensor)): Such as [x2, x4, x8, x16, x32].\n                x2, x4 and x8 are optional.\n        Returns:\n            out_feat_list (List(Tensor)): Such as [x2, x4, x8, x16, x32].\n                x2, x4 and x8 are optional.\n                The length of in_feat_list and out_feat_list are the same.\n        \"\"\"", "\n", "\n", "high_feat", "=", "self", ".", "cm", "(", "in_feat_list", "[", "-", "1", "]", ")", "\n", "out_feat_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "reversed", "(", "range", "(", "len", "(", "in_feat_list", ")", ")", ")", ":", "\n", "            ", "low_feat", "=", "in_feat_list", "[", "i", "]", "\n", "arm", "=", "self", ".", "arm_list", "[", "i", "]", "\n", "high_feat", "=", "arm", "(", "low_feat", ",", "high_feat", ")", "\n", "out_feat_list", ".", "insert", "(", "0", ",", "high_feat", ")", "\n", "\n", "", "return", "out_feat_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.PPContextModule.__init__": [[210, 230], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBNReLU", "pp_liteseg.PPContextModule._make_stage"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.pyramid_pool.PPModule._make_stage"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "inter_channels", ",", "\n", "out_channels", ",", "\n", "bin_sizes", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stages", "=", "nn", ".", "LayerList", "(", "[", "\n", "self", ".", "_make_stage", "(", "in_channels", ",", "inter_channels", ",", "size", ")", "\n", "for", "size", "in", "bin_sizes", "\n", "]", ")", "\n", "\n", "self", ".", "conv_out", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.PPContextModule._make_stage": [[231, 236], ["paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential"], "methods", ["None"], ["", "def", "_make_stage", "(", "self", ",", "in_channels", ",", "out_channels", ",", "size", ")", ":", "\n", "        ", "prior", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "output_size", "=", "size", ")", "\n", "conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "1", ")", "\n", "return", "nn", ".", "Sequential", "(", "prior", ",", "conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.PPContextModule.forward": [[237, 255], ["pp_liteseg.PPContextModule.conv_out", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "stage", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "None", "\n", "input_shape", "=", "paddle", ".", "shape", "(", "input", ")", "[", "2", ":", "]", "\n", "\n", "for", "stage", "in", "self", ".", "stages", ":", "\n", "            ", "x", "=", "stage", "(", "input", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "input_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "if", "out", "is", "None", ":", "\n", "                ", "out", "=", "x", "\n", "", "else", ":", "\n", "                ", "out", "+=", "x", "\n", "\n", "", "", "out", "=", "self", ".", "conv_out", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.SegHead.__init__": [[258, 269], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_chan", ",", "mid_chan", ",", "n_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_chan", ",", "\n", "mid_chan", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_out", "=", "nn", ".", "Conv2D", "(", "\n", "mid_chan", ",", "n_classes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pp_liteseg.SegHead.forward": [[270, 274], ["pp_liteseg.SegHead.conv", "pp_liteseg.SegHead.conv_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_out", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.PortraitNet.__init__": [[38, 51], ["paddle.Layer.__init__", "portraitnet.PortraitNetHead", "portraitnet.PortraitNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "min_channel", "=", "16", ",", "\n", "channel_ratio", "=", "1.0", ",", "\n", "add_edge", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "PortraitNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "head", "=", "PortraitNetHead", "(", "num_classes", ",", "min_channel", ",", "channel_ratio", ",", "\n", "add_edge", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.PortraitNet.forward": [[52, 65], ["portraitnet.PortraitNet.backbone", "portraitnet.PortraitNet.head", "portraitnet.PortraitNet.backbone", "portraitnet.PortraitNet.head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "img", "=", "x", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", "\n", "img_ori", "=", "x", "[", ":", ",", "3", ":", ",", ":", ",", ":", "]", "\n", "\n", "feat_list", "=", "self", ".", "backbone", "(", "img", ")", "\n", "logits_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "\n", "feat_list", "=", "self", ".", "backbone", "(", "img_ori", ")", "\n", "logits_ori_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "\n", "return", "[", "\n", "logits_list", "[", "0", "]", ",", "logits_ori_list", "[", "0", "]", ",", "logits_list", "[", "1", "]", ",", "\n", "logits_ori_list", "[", "1", "]", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.PortraitNet.init_weight": [[67, 70], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.PortraitNetHead.__init__": [[73, 134], ["paddle.Layer.__init__", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "portraitnet.ResidualBlock", "portraitnet.ResidualBlock", "portraitnet.ResidualBlock", "portraitnet.ResidualBlock", "portraitnet.ResidualBlock", "paddle.Conv2D", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "portraitnet.PortraitNetHead.depth", "paddle.Conv2D", "portraitnet.PortraitNetHead.depth"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "min_channel", "=", "16", ",", "\n", "channel_ratio", "=", "1.0", ",", "\n", "add_edge", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "min_channel", "=", "min_channel", "\n", "self", ".", "channel_ratio", "=", "channel_ratio", "\n", "self", ".", "add_edge", "=", "add_edge", "\n", "self", ".", "deconv1", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "self", ".", "depth", "(", "96", ")", ",", "\n", "self", ".", "depth", "(", "96", ")", ",", "\n", "groups", "=", "1", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "deconv2", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "self", ".", "depth", "(", "32", ")", ",", "\n", "self", ".", "depth", "(", "32", ")", ",", "\n", "groups", "=", "1", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "self", ".", "depth", "(", "24", ")", ",", "\n", "self", ".", "depth", "(", "24", ")", ",", "\n", "groups", "=", "1", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "deconv4", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "self", ".", "depth", "(", "16", ")", ",", "\n", "self", ".", "depth", "(", "16", ")", ",", "\n", "groups", "=", "1", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "deconv5", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "self", ".", "depth", "(", "8", ")", ",", "\n", "self", ".", "depth", "(", "8", ")", ",", "\n", "groups", "=", "1", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "transit1", "=", "ResidualBlock", "(", "self", ".", "depth", "(", "320", ")", ",", "self", ".", "depth", "(", "96", ")", ")", "\n", "self", ".", "transit2", "=", "ResidualBlock", "(", "self", ".", "depth", "(", "96", ")", ",", "self", ".", "depth", "(", "32", ")", ")", "\n", "self", ".", "transit3", "=", "ResidualBlock", "(", "self", ".", "depth", "(", "32", ")", ",", "self", ".", "depth", "(", "24", ")", ")", "\n", "self", ".", "transit4", "=", "ResidualBlock", "(", "self", ".", "depth", "(", "24", ")", ",", "self", ".", "depth", "(", "16", ")", ")", "\n", "self", ".", "transit5", "=", "ResidualBlock", "(", "self", ".", "depth", "(", "16", ")", ",", "self", ".", "depth", "(", "8", ")", ")", "\n", "\n", "self", ".", "pred", "=", "nn", ".", "Conv2D", "(", "\n", "self", ".", "depth", "(", "8", ")", ",", "num_classes", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "if", "self", ".", "add_edge", ":", "\n", "            ", "self", ".", "edge", "=", "nn", ".", "Conv2D", "(", "\n", "self", ".", "depth", "(", "8", ")", ",", "num_classes", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.PortraitNetHead.depth": [[135, 138], ["min", "max", "int"], "methods", ["None"], ["", "", "def", "depth", "(", "self", ",", "channels", ")", ":", "\n", "        ", "min_channel", "=", "min", "(", "channels", ",", "self", ".", "min_channel", ")", "\n", "return", "max", "(", "min_channel", ",", "int", "(", "channels", "*", "self", ".", "channel_ratio", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.PortraitNetHead.forward": [[139, 153], ["portraitnet.PortraitNetHead.deconv1", "portraitnet.PortraitNetHead.deconv2", "portraitnet.PortraitNetHead.deconv3", "portraitnet.PortraitNetHead.deconv4", "portraitnet.PortraitNetHead.deconv5", "portraitnet.PortraitNetHead.pred", "portraitnet.PortraitNetHead.transit1", "portraitnet.PortraitNetHead.transit2", "portraitnet.PortraitNetHead.transit3", "portraitnet.PortraitNetHead.transit4", "portraitnet.PortraitNetHead.transit5", "portraitnet.PortraitNetHead.edge"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "feature_1_4", ",", "feature_1_8", ",", "feature_1_16", ",", "feature_1_32", "=", "feat_list", "\n", "up_1_16", "=", "self", ".", "deconv1", "(", "self", ".", "transit1", "(", "feature_1_32", ")", ")", "\n", "up_1_8", "=", "self", ".", "deconv2", "(", "self", ".", "transit2", "(", "feature_1_16", "+", "up_1_16", ")", ")", "\n", "up_1_4", "=", "self", ".", "deconv3", "(", "self", ".", "transit3", "(", "feature_1_8", "+", "up_1_8", ")", ")", "\n", "up_1_2", "=", "self", ".", "deconv4", "(", "self", ".", "transit4", "(", "feature_1_4", "+", "up_1_4", ")", ")", "\n", "up_1_1", "=", "self", ".", "deconv5", "(", "self", ".", "transit5", "(", "up_1_2", ")", ")", "\n", "\n", "pred", "=", "self", ".", "pred", "(", "up_1_1", ")", "\n", "if", "self", ".", "add_edge", ":", "\n", "            ", "edge", "=", "self", ".", "edge", "(", "up_1_1", ")", "\n", "return", "pred", ",", "edge", "\n", "", "else", ":", "\n", "            ", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.ConvDw.__init__": [[156, 174], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "kernel", ",", "stride", ")", ":", "\n", "        ", "super", "(", "ConvDw", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "inp", ",", "\n", "inp", ",", "\n", "kernel", ",", "\n", "stride", ",", "(", "kernel", "-", "1", ")", "//", "2", ",", "\n", "groups", "=", "inp", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "num_features", "=", "inp", ",", "epsilon", "=", "1e-05", ",", "momentum", "=", "0.1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "inp", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "num_features", "=", "oup", ",", "epsilon", "=", "1e-05", ",", "momentum", "=", "0.1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.ConvDw.forward": [[175, 177], ["portraitnet.ConvDw.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.ResidualBlock.__init__": [[180, 220], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.ReLU", "portraitnet.ConvDw", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Sequential", "paddle.Conv2D", "paddle.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "ConvDw", "(", "\n", "inp", ",", "oup", ",", "3", ",", "stride", "=", "stride", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "oup", ",", "\n", "out_channels", "=", "oup", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "oup", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "num_features", "=", "oup", ",", "epsilon", "=", "1e-05", ",", "momentum", "=", "0.1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "oup", ",", "\n", "out_channels", "=", "oup", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "num_features", "=", "oup", ",", "epsilon", "=", "1e-05", ",", "momentum", "=", "0.1", ")", ",", ")", "\n", "if", "inp", "==", "oup", ":", "\n", "            ", "self", ".", "residual", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "residual", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "inp", ",", "\n", "out_channels", "=", "oup", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "num_features", "=", "oup", ",", "epsilon", "=", "1e-05", ",", "momentum", "=", "0.1", ")", ",", ")", "\n", "", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.portraitnet.ResidualBlock.forward": [[221, 231], ["portraitnet.ResidualBlock.block", "portraitnet.ResidualBlock.relu", "portraitnet.ResidualBlock.residual"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "block", "(", "x", ")", "\n", "if", "self", ".", "residual", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "residual", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.decoupled_segnet.DecoupledSegNet.__init__": [[52, 69], ["paddle.Layer.__init__", "decoupled_segnet.DecoupledSegNetHead", "decoupled_segnet.DecoupledSegNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "0", ",", "3", ")", ",", "\n", "aspp_ratios", "=", "(", "1", ",", "6", ",", "12", ",", "18", ")", ",", "\n", "aspp_out_channels", "=", "256", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "self", ".", "backbone", ".", "feat_channels", "\n", "self", ".", "head", "=", "DecoupledSegNetHead", "(", "num_classes", ",", "backbone_indices", ",", "\n", "backbone_channels", ",", "aspp_ratios", ",", "\n", "aspp_out_channels", ",", "align_corners", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.decoupled_segnet.DecoupledSegNet.forward": [[70, 85], ["decoupled_segnet.DecoupledSegNet.backbone", "decoupled_segnet.DecoupledSegNet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "\n", "seg_logit", ",", "body_logit", ",", "edge_logit", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "[", "seg_logit", ",", "body_logit", ",", "edge_logit", ",", "(", "seg_logit", ",", "edge_logit", ")", "]", "\n", "", "return", "[", "seg_logit", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.decoupled_segnet.DecoupledSegNet.init_weight": [[86, 89], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.decoupled_segnet.DecoupledSegNetHead.__init__": [[107, 156], ["paddle.Layer.__init__", "paddleseg.models.layers.ASPPModule", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "decoupled_segnet.SqueezeBodyEdge", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "aspp_ratios", ",", "aspp_out_channels", ",", "align_corners", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "aspp", "=", "layers", ".", "ASPPModule", "(", "\n", "aspp_ratios", "=", "aspp_ratios", ",", "\n", "in_channels", "=", "backbone_channels", "[", "backbone_indices", "[", "1", "]", "]", ",", "\n", "out_channels", "=", "aspp_out_channels", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "image_pooling", "=", "True", ")", "\n", "\n", "self", ".", "bot_fine", "=", "nn", ".", "Conv2D", "(", "\n", "backbone_channels", "[", "backbone_indices", "[", "0", "]", "]", ",", "48", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "# decoupled", "\n", "self", ".", "squeeze_body_edge", "=", "SqueezeBodyEdge", "(", "\n", "256", ",", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "self", ".", "edge_fusion", "=", "nn", ".", "Conv2D", "(", "256", "+", "48", ",", "256", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "sigmoid_edge", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "edge_out", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "256", ",", "\n", "out_channels", "=", "48", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "48", ",", "1", ",", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "dsn_seg_body", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "256", ",", "\n", "out_channels", "=", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "256", ",", "num_classes", ",", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n", "self", ".", "final_seg", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "512", ",", "\n", "out_channels", "=", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "256", ",", "\n", "out_channels", "=", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "256", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.decoupled_segnet.DecoupledSegNetHead.forward": [[157, 192], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "decoupled_segnet.DecoupledSegNetHead.aspp", "decoupled_segnet.DecoupledSegNetHead.squeeze_body_edge", "decoupled_segnet.DecoupledSegNetHead.bot_fine", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "decoupled_segnet.DecoupledSegNetHead.edge_fusion", "decoupled_segnet.DecoupledSegNetHead.edge_out", "decoupled_segnet.DecoupledSegNetHead.sigmoid_edge", "decoupled_segnet.DecoupledSegNetHead.dsn_seg_body", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "decoupled_segnet.DecoupledSegNetHead.final_seg", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "fine_fea", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "fine_size", "=", "paddle", ".", "shape", "(", "fine_fea", ")", "\n", "x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "1", "]", "]", "\n", "aspp", "=", "self", ".", "aspp", "(", "x", ")", "\n", "\n", "# decoupled", "\n", "seg_body", ",", "seg_edge", "=", "self", ".", "squeeze_body_edge", "(", "aspp", ")", "\n", "# Edge presevation and edge out", "\n", "fine_fea", "=", "self", ".", "bot_fine", "(", "fine_fea", ")", "\n", "seg_edge", "=", "F", ".", "interpolate", "(", "\n", "seg_edge", ",", "\n", "fine_size", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "seg_edge", "=", "self", ".", "edge_fusion", "(", "paddle", ".", "concat", "(", "[", "seg_edge", ",", "fine_fea", "]", ",", "axis", "=", "1", ")", ")", "\n", "seg_edge_out", "=", "self", ".", "edge_out", "(", "seg_edge", ")", "\n", "seg_edge_out", "=", "self", ".", "sigmoid_edge", "(", "seg_edge_out", ")", "# seg_edge output", "\n", "seg_body_out", "=", "self", ".", "dsn_seg_body", "(", "seg_body", ")", "# body out", "\n", "\n", "# seg_final out", "\n", "seg_out", "=", "seg_edge", "+", "F", ".", "interpolate", "(", "\n", "seg_body", ",", "\n", "fine_size", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "aspp", "=", "F", ".", "interpolate", "(", "\n", "aspp", ",", "\n", "fine_size", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "seg_out", "=", "paddle", ".", "concat", "(", "[", "aspp", ",", "seg_out", "]", ",", "axis", "=", "1", ")", "\n", "seg_final_out", "=", "self", ".", "final_seg", "(", "seg_out", ")", "\n", "\n", "return", "[", "seg_final_out", ",", "seg_body_out", ",", "seg_edge_out", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.decoupled_segnet.SqueezeBodyEdge.__init__": [[195, 205], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplane", ",", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "down", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "inplane", ",", "inplane", ",", "kernel_size", "=", "3", ",", "groups", "=", "inplane", ",", "stride", "=", "2", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "inplane", ",", "inplane", ",", "kernel_size", "=", "3", ",", "groups", "=", "inplane", ",", "stride", "=", "2", ")", ")", "\n", "self", ".", "flow_make", "=", "nn", ".", "Conv2D", "(", "\n", "inplane", "*", "2", ",", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "'same'", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.decoupled_segnet.SqueezeBodyEdge.forward": [[206, 218], ["decoupled_segnet.SqueezeBodyEdge.down", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "decoupled_segnet.SqueezeBodyEdge.flow_make", "decoupled_segnet.SqueezeBodyEdge.flow_warp", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.AlignedModule.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", "\n", "seg_down", "=", "self", ".", "down", "(", "x", ")", "\n", "seg_down", "=", "F", ".", "interpolate", "(", "\n", "seg_down", ",", "\n", "size", "=", "size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "flow", "=", "self", ".", "flow_make", "(", "paddle", ".", "concat", "(", "[", "x", ",", "seg_down", "]", ",", "axis", "=", "1", ")", ")", "\n", "seg_flow_warp", "=", "self", ".", "flow_warp", "(", "x", ",", "flow", ",", "size", ")", "\n", "seg_edge", "=", "x", "-", "seg_flow_warp", "\n", "return", "seg_flow_warp", ",", "seg_edge", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.decoupled_segnet.SqueezeBodyEdge.flow_warp": [[219, 233], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "size[].reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "h_grid.tile.tile.tile", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "w_grid.tile().transpose.tile().transpose.tile().transpose", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat.unsqueeze().tile", "paddle.concat.unsqueeze().tile", "paddle.concat.unsqueeze().tile", "paddle.grid_sample", "paddle.grid_sample", "paddle.grid_sample", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "w_grid.tile().transpose.tile().transpose.tile", "w_grid.tile().transpose.tile().transpose.unsqueeze", "h_grid.tile.tile.unsqueeze", "paddle.concat.unsqueeze", "paddle.concat.unsqueeze", "paddle.concat.unsqueeze", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "flow_warp", "(", "self", ",", "input", ",", "flow", ",", "size", ")", ":", "\n", "        ", "input_shape", "=", "paddle", ".", "shape", "(", "input", ")", "\n", "norm", "=", "size", "[", ":", ":", "-", "1", "]", ".", "reshape", "(", "[", "1", ",", "1", ",", "1", ",", "-", "1", "]", ")", "\n", "norm", ".", "stop_gradient", "=", "True", "\n", "h_grid", "=", "paddle", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "size", "[", "0", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "h_grid", "=", "h_grid", ".", "tile", "(", "[", "size", "[", "1", "]", "]", ")", "\n", "w_grid", "=", "paddle", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "size", "[", "1", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "w_grid", "=", "w_grid", ".", "tile", "(", "[", "size", "[", "0", "]", "]", ")", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "grid", "=", "paddle", ".", "concat", "(", "[", "w_grid", ".", "unsqueeze", "(", "2", ")", ",", "h_grid", ".", "unsqueeze", "(", "2", ")", "]", ",", "axis", "=", "2", ")", "\n", "grid", ".", "unsqueeze", "(", "0", ")", ".", "tile", "(", "[", "input_shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "grid", "=", "grid", "+", "paddle", ".", "transpose", "(", "flow", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "/", "norm", "\n", "\n", "output", "=", "F", ".", "grid_sample", "(", "input", ",", "grid", ")", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNNet.__init__": [[45, 73], ["paddle.Layer.__init__", "pfpnnet.PFPNHead", "pfpnnet.PFPNNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", ",", "\n", "channels", ",", "\n", "enable_auxiliary_loss", "=", "False", ",", "\n", "align_corners", "=", "False", ",", "\n", "dropout_ratio", "=", "0.1", ",", "\n", "fpn_inplanes", "=", "[", "256", ",", "512", ",", "1024", ",", "2048", "]", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "PFPNNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "in_channels", "=", "[", "\n", "self", ".", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "\n", "self", ".", "head", "=", "PFPNHead", "(", "\n", "num_class", "=", "num_classes", ",", "\n", "fpn_inplanes", "=", "fpn_inplanes", ",", "\n", "dropout_ratio", "=", "dropout_ratio", ",", "\n", "channels", "=", "channels", ",", "\n", "fpn_dim", "=", "channels", ",", "\n", "enable_auxiliary_loss", "=", "self", ".", "enable_auxiliary_loss", ")", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNNet.forward": [[74, 84], ["pfpnnet.PFPNNet.backbone", "pfpnnet.PFPNNet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "logit_list", "=", "self", ".", "head", "(", "feats", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNNet.init_weight": [[86, 89], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNHead.__init__": [[103, 172], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "pfpnnet.PFPNHead.lateral_convs.append", "pfpnnet.PFPNHead.fpn_out.append", "len", "max", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "pfpnnet.PFPNHead.scale_heads.append", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "int", "paddle.LayerList.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.LayerList.append", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "len", "numpy.log2", "numpy.log2", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "num_class", ",", "\n", "fpn_inplanes", ",", "\n", "channels", ",", "\n", "dropout_ratio", "=", "0.1", ",", "\n", "fpn_dim", "=", "256", ",", "\n", "enable_auxiliary_loss", "=", "False", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "PFPNHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "lateral_convs", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "fpn_out", "=", "nn", ".", "LayerList", "(", ")", "\n", "\n", "for", "fpn_inplane", "in", "fpn_inplanes", ":", "\n", "            ", "self", ".", "lateral_convs", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "fpn_inplane", ",", "fpn_dim", ",", "1", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "fpn_dim", ")", ",", "nn", ".", "ReLU", "(", ")", ")", ")", "\n", "self", ".", "fpn_out", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "fpn_dim", ",", "fpn_dim", ",", "3", ",", "bias_attr", "=", "False", ")", ")", ")", "\n", "\n", "", "self", ".", "scale_heads", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "index", "in", "range", "(", "len", "(", "fpn_inplanes", ")", ")", ":", "\n", "            ", "head_length", "=", "max", "(", "\n", "1", ",", "\n", "int", "(", "np", ".", "log2", "(", "fpn_inplanes", "[", "index", "]", ")", "-", "np", ".", "log2", "(", "fpn_inplanes", "[", "0", "]", ")", ")", ")", "\n", "scale_head", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "head_index", "in", "range", "(", "head_length", ")", ":", "\n", "                ", "scale_head", ".", "append", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "fpn_dim", ",", "\n", "channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", ")", ")", "\n", "if", "fpn_inplanes", "[", "index", "]", "!=", "fpn_inplanes", "[", "0", "]", ":", "\n", "                    ", "scale_head", ".", "append", "(", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "align_corners", ")", ")", "\n", "", "", "self", ".", "scale_heads", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "scale_head", ")", ")", "\n", "\n", "", "if", "dropout_ratio", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout2D", "(", "dropout_ratio", ")", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "                ", "self", ".", "dsn", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "fpn_inplanes", "[", "2", "]", ",", "fpn_inplanes", "[", "2", "]", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Dropout2D", "(", "dropout_ratio", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "fpn_inplanes", "[", "2", "]", ",", "num_class", ",", "kernel_size", "=", "1", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "None", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "                ", "self", ".", "dsn", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "fpn_inplanes", "[", "2", "]", ",", "fpn_inplanes", "[", "2", "]", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "fpn_inplanes", "[", "2", "]", ",", "num_class", ",", "kernel_size", "=", "1", ")", ")", "\n", "\n", "", "", "self", ".", "conv_last", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "len", "(", "fpn_inplanes", ")", "*", "fpn_dim", ",", "fpn_dim", ",", "3", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "fpn_dim", ",", "num_class", ",", "kernel_size", "=", "1", ")", ")", "\n", "self", ".", "conv_seg", "=", "nn", ".", "Conv2D", "(", "channels", ",", "num_class", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNHead.cls_seg": [[173, 178], ["pfpnnet.PFPNHead.conv_seg", "pfpnnet.PFPNHead.dropout"], "methods", ["None"], ["", "def", "cls_seg", "(", "self", ",", "feat", ")", ":", "\n", "        ", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "feat", "=", "self", ".", "dropout", "(", "feat", ")", "\n", "", "output", "=", "self", ".", "conv_seg", "(", "feat", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNHead.forward": [[179, 206], ["reversed", "range", "pfpnnet.PFPNHead.cls_seg", "range", "fpn_feature_list.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "pfpnnet.PFPNHead.dsn", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "len", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNHead.cls_seg", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "conv_out", ")", ":", "\n", "        ", "last_out", "=", "self", ".", "lateral_convs", "[", "-", "1", "]", "(", "conv_out", "[", "-", "1", "]", ")", "\n", "f", "=", "last_out", "\n", "fpn_feature_list", "=", "[", "last_out", "]", "\n", "for", "i", "in", "reversed", "(", "range", "(", "len", "(", "conv_out", ")", "-", "1", ")", ")", ":", "\n", "            ", "conv_x", "=", "conv_out", "[", "i", "]", "\n", "conv_x", "=", "self", ".", "lateral_convs", "[", "i", "]", "(", "conv_x", ")", "\n", "prev_shape", "=", "paddle", ".", "shape", "(", "conv_x", ")", "[", "2", ":", "]", "\n", "f", "=", "conv_x", "+", "F", ".", "interpolate", "(", "\n", "f", ",", "prev_shape", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "fpn_feature_list", ".", "append", "(", "self", ".", "fpn_out", "[", "i", "]", "(", "f", ")", ")", "\n", "\n", "", "output_size", "=", "paddle", ".", "shape", "(", "fpn_feature_list", "[", "-", "1", "]", ")", "[", "2", ":", "]", "\n", "\n", "x", "=", "self", ".", "scale_heads", "[", "0", "]", "(", "fpn_feature_list", "[", "-", "1", "]", ")", "\n", "for", "index", "in", "range", "(", "len", "(", "self", ".", "scale_heads", ")", "-", "2", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "x", "=", "x", "+", "F", ".", "interpolate", "(", "\n", "self", ".", "scale_heads", "[", "index", "]", "(", "fpn_feature_list", "[", "index", "]", ")", ",", "\n", "size", "=", "output_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "", "x", "=", "self", ".", "cls_seg", "(", "x", ")", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "dsn", "=", "self", ".", "dsn", "(", "conv_out", "[", "2", "]", ")", "\n", "return", "[", "x", ",", "dsn", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "x", "]", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_plusplus.UNetPlusPlus.__init__": [[44, 133], ["paddle.Layer.__init__", "paddle.MaxPool2D", "paddle.MaxPool2D", "unet_plusplus.DoubleConv", "unet_plusplus.DoubleConv", "unet_plusplus.DoubleConv", "unet_plusplus.DoubleConv", "unet_plusplus.DoubleConv", "unet_plusplus.UpSampling", "unet_plusplus.UpSampling", "unet_plusplus.UpSampling", "unet_plusplus.UpSampling", "unet_plusplus.UpSampling", "unet_plusplus.UpSampling", "unet_plusplus.UpSampling", "unet_plusplus.UpSampling", "unet_plusplus.UpSampling", "unet_plusplus.UpSampling", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "unet_plusplus.UNetPlusPlus.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "num_classes", ",", "\n", "use_deconv", "=", "False", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ",", "\n", "is_ds", "=", "True", ")", ":", "\n", "        ", "super", "(", "UNetPlusPlus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "is_ds", "=", "is_ds", "\n", "channels", "=", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "conv0_0", "=", "DoubleConv", "(", "in_channels", ",", "channels", "[", "0", "]", ")", "\n", "self", ".", "conv1_0", "=", "DoubleConv", "(", "channels", "[", "0", "]", ",", "channels", "[", "1", "]", ")", "\n", "self", ".", "conv2_0", "=", "DoubleConv", "(", "channels", "[", "1", "]", ",", "channels", "[", "2", "]", ")", "\n", "self", ".", "conv3_0", "=", "DoubleConv", "(", "channels", "[", "2", "]", ",", "channels", "[", "3", "]", ")", "\n", "self", ".", "conv4_0", "=", "DoubleConv", "(", "channels", "[", "3", "]", ",", "channels", "[", "4", "]", ")", "\n", "\n", "self", ".", "up_cat0_1", "=", "UpSampling", "(", "\n", "channels", "[", "1", "]", ",", "\n", "channels", "[", "0", "]", ",", "\n", "n_cat", "=", "2", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "self", ".", "up_cat1_1", "=", "UpSampling", "(", "\n", "channels", "[", "2", "]", ",", "\n", "channels", "[", "1", "]", ",", "\n", "n_cat", "=", "2", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "self", ".", "up_cat2_1", "=", "UpSampling", "(", "\n", "channels", "[", "3", "]", ",", "\n", "channels", "[", "2", "]", ",", "\n", "n_cat", "=", "2", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "self", ".", "up_cat3_1", "=", "UpSampling", "(", "\n", "channels", "[", "4", "]", ",", "\n", "channels", "[", "3", "]", ",", "\n", "n_cat", "=", "2", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "up_cat0_2", "=", "UpSampling", "(", "\n", "channels", "[", "1", "]", ",", "\n", "channels", "[", "0", "]", ",", "\n", "n_cat", "=", "3", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "self", ".", "up_cat1_2", "=", "UpSampling", "(", "\n", "channels", "[", "2", "]", ",", "\n", "channels", "[", "1", "]", ",", "\n", "n_cat", "=", "3", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "self", ".", "up_cat2_2", "=", "UpSampling", "(", "\n", "channels", "[", "3", "]", ",", "\n", "channels", "[", "2", "]", ",", "\n", "n_cat", "=", "3", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "up_cat0_3", "=", "UpSampling", "(", "\n", "channels", "[", "1", "]", ",", "\n", "channels", "[", "0", "]", ",", "\n", "n_cat", "=", "4", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "self", ".", "up_cat1_3", "=", "UpSampling", "(", "\n", "channels", "[", "2", "]", ",", "\n", "channels", "[", "1", "]", ",", "\n", "n_cat", "=", "4", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "up_cat0_4", "=", "UpSampling", "(", "\n", "channels", "[", "1", "]", ",", "\n", "channels", "[", "0", "]", ",", "\n", "n_cat", "=", "5", ",", "\n", "use_deconv", "=", "use_deconv", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "out_1", "=", "nn", ".", "Conv2D", "(", "channels", "[", "0", "]", ",", "num_classes", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "out_2", "=", "nn", ".", "Conv2D", "(", "channels", "[", "0", "]", ",", "num_classes", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "out_3", "=", "nn", ".", "Conv2D", "(", "channels", "[", "0", "]", ",", "num_classes", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "out_4", "=", "nn", ".", "Conv2D", "(", "channels", "[", "0", "]", ",", "num_classes", ",", "1", ",", "1", ",", "0", ")", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_plusplus.UNetPlusPlus.init_weight": [[134, 143], ["paddleseg.utils.load_entire_model", "unet_plusplus.UNetPlusPlus.sublayers", "isinstance", "paddleseg.cvlibs.param_init.kaiming_normal_init", "isinstance", "paddleseg.cvlibs.param_init.kaiming_normal_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_normal_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "", "else", ":", "\n", "            ", "for", "sublayer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "sublayer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                    ", "kaiming_normal_init", "(", "sublayer", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "sublayer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                    ", "kaiming_normal_init", "(", "sublayer", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_plusplus.UNetPlusPlus.forward": [[144, 186], ["unet_plusplus.UNetPlusPlus.conv0_0", "unet_plusplus.UNetPlusPlus.pool", "unet_plusplus.UNetPlusPlus.conv1_0", "unet_plusplus.UNetPlusPlus.pool", "unet_plusplus.UNetPlusPlus.conv2_0", "unet_plusplus.UNetPlusPlus.pool", "unet_plusplus.UNetPlusPlus.conv3_0", "unet_plusplus.UNetPlusPlus.pool", "unet_plusplus.UNetPlusPlus.conv4_0", "unet_plusplus.UNetPlusPlus.up_cat0_1", "unet_plusplus.UNetPlusPlus.up_cat1_1", "unet_plusplus.UNetPlusPlus.up_cat2_1", "unet_plusplus.UNetPlusPlus.up_cat3_1", "unet_plusplus.UNetPlusPlus.up_cat0_2", "unet_plusplus.UNetPlusPlus.up_cat1_2", "unet_plusplus.UNetPlusPlus.up_cat2_2", "unet_plusplus.UNetPlusPlus.up_cat0_3", "unet_plusplus.UNetPlusPlus.up_cat1_3", "unet_plusplus.UNetPlusPlus.up_cat0_4", "unet_plusplus.UNetPlusPlus.out_1", "unet_plusplus.UNetPlusPlus.out_2", "unet_plusplus.UNetPlusPlus.out_3", "unet_plusplus.UNetPlusPlus.out_4"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "# 0 down", "\n", "        ", "X0_0", "=", "self", ".", "conv0_0", "(", "inputs", ")", "# n,32,h,w", "\n", "pool_0", "=", "self", ".", "pool", "(", "X0_0", ")", "# n,32,h/2,w/2", "\n", "X1_0", "=", "self", ".", "conv1_0", "(", "pool_0", ")", "# n,64,h/2,w/2", "\n", "pool_1", "=", "self", ".", "pool", "(", "X1_0", ")", "# n,64,h/4,w/4", "\n", "X2_0", "=", "self", ".", "conv2_0", "(", "pool_1", ")", "# n,128,h/4,w/4", "\n", "pool_2", "=", "self", ".", "pool", "(", "X2_0", ")", "# n,128,h/8,n/8", "\n", "X3_0", "=", "self", ".", "conv3_0", "(", "pool_2", ")", "# n,256,h/8,w/8", "\n", "pool_3", "=", "self", ".", "pool", "(", "X3_0", ")", "# n,256,h/16,w/16", "\n", "X4_0", "=", "self", ".", "conv4_0", "(", "pool_3", ")", "# n,512,h/16,w/16", "\n", "\n", "# 1 up+concat", "\n", "X0_1", "=", "self", ".", "up_cat0_1", "(", "X1_0", ",", "X0_0", ")", "# n,32,h,w", "\n", "X1_1", "=", "self", ".", "up_cat1_1", "(", "X2_0", ",", "X1_0", ")", "# n,64,h/2,w/2", "\n", "X2_1", "=", "self", ".", "up_cat2_1", "(", "X3_0", ",", "X2_0", ")", "# n,128,h/4,w/4", "\n", "X3_1", "=", "self", ".", "up_cat3_1", "(", "X4_0", ",", "X3_0", ")", "# n,256,h/8,w/8", "\n", "\n", "# 2 up+concat", "\n", "X0_2", "=", "self", ".", "up_cat0_2", "(", "X1_1", ",", "X0_0", ",", "X0_1", ")", "# n,32,h,w", "\n", "X1_2", "=", "self", ".", "up_cat1_2", "(", "X2_1", ",", "X1_0", ",", "X1_1", ")", "# n,64,h/2,w/2", "\n", "X2_2", "=", "self", ".", "up_cat2_2", "(", "X3_1", ",", "X2_0", ",", "X2_1", ")", "# n,128,h/4,w/4", "\n", "\n", "# 3 up+concat", "\n", "X0_3", "=", "self", ".", "up_cat0_3", "(", "X1_2", ",", "X0_0", ",", "X0_1", ",", "X0_2", ")", "# n,32,h,w", "\n", "X1_3", "=", "self", ".", "up_cat1_3", "(", "X2_2", ",", "X1_0", ",", "X1_1", ",", "X1_2", ")", "# n,64,h/2,w/2", "\n", "\n", "# 4 up+concat", "\n", "X0_4", "=", "self", ".", "up_cat0_4", "(", "X1_3", ",", "X0_0", ",", "X0_1", ",", "X0_2", ",", "X0_3", ")", "# n,32,h,w", "\n", "\n", "# out conv1*1", "\n", "out_1", "=", "self", ".", "out_1", "(", "X0_1", ")", "# n,num_classes,h,w", "\n", "out_2", "=", "self", ".", "out_2", "(", "X0_2", ")", "# n,num_classes,h,w", "\n", "out_3", "=", "self", ".", "out_3", "(", "X0_3", ")", "# n,num_classes,h,w", "\n", "out_4", "=", "self", ".", "out_4", "(", "X0_4", ")", "# n,num_classes,h,w", "\n", "\n", "output", "=", "(", "out_1", "+", "out_2", "+", "out_3", "+", "out_4", ")", "/", "4", "\n", "\n", "if", "self", ".", "is_ds", ":", "\n", "            ", "return", "[", "output", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "out_4", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_plusplus.DoubleConv.__init__": [[189, 202], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.layer_libs.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.layer_libs.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "filter_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", ":", "\n", "        ", "super", "(", "DoubleConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", ",", "out_channels", ",", "filter_size", ",", "stride", ",", "padding", ")", ",", "\n", "SyncBatchNorm", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "out_channels", ",", "filter_size", ",", "stride", ",", "padding", ")", ",", "\n", "SyncBatchNorm", "(", "out_channels", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_plusplus.DoubleConv.forward": [[203, 207], ["unet_plusplus.DoubleConv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "conv", "=", "self", ".", "conv", "(", "inputs", ")", "\n", "\n", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_plusplus.UpSampling.__init__": [[210, 229], ["paddle.Layer.__init__", "unet_plusplus.DoubleConv", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Sequential", "paddle.Sequential", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "n_cat", ",", "\n", "use_deconv", "=", "False", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "UpSampling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "use_deconv", ":", "\n", "            ", "self", ".", "up", "=", "nn", ".", "Conv2DTranspose", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "align_corners", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", ",", "out_channels", ",", "1", ",", "1", ",", "0", ")", ")", "\n", "\n", "", "self", ".", "conv", "=", "DoubleConv", "(", "n_cat", "*", "out_channels", ",", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.unet_plusplus.UpSampling.forward": [[230, 238], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "unet_plusplus.UpSampling.conv", "unet_plusplus.UpSampling.up", "features.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "high_feature", ",", "*", "low_features", ")", ":", "\n", "        ", "features", "=", "[", "self", ".", "up", "(", "high_feature", ")", "]", "\n", "for", "feature", "in", "low_features", ":", "\n", "            ", "features", ".", "append", "(", "feature", ")", "\n", "", "cat_features", "=", "paddle", ".", "concat", "(", "features", ",", "axis", "=", "1", ")", "\n", "out", "=", "self", ".", "conv", "(", "cat_features", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hrnet_contrast.HRNetW48Contrast.__init__": [[44, 74], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "hrnet_contrast.ProjectionHead", "hrnet_contrast.HRNetW48Contrast.init_weight", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "drop_prob", ",", "\n", "proj_dim", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "proj_dim", "=", "proj_dim", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "cls_head", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Dropout2D", "(", "drop_prob", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "num_classes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "proj_head", "=", "ProjectionHead", "(", "\n", "dim_in", "=", "in_channels", ",", "proj_dim", "=", "self", ".", "proj_dim", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hrnet_contrast.HRNetW48Contrast.init_weight": [[75, 78], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hrnet_contrast.HRNetW48Contrast.forward": [[79, 100], ["hrnet_contrast.HRNetW48Contrast.cls_head", "hrnet_contrast.HRNetW48Contrast.backbone", "hrnet_contrast.HRNetW48Contrast.proj_head", "logit_list.append", "logit_list.append", "logit_list.append", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "[", "0", "]", "\n", "out", "=", "self", ".", "cls_head", "(", "feats", ")", "\n", "logit_list", "=", "[", "]", "\n", "if", "self", ".", "training", ":", "\n", "            ", "emb", "=", "self", ".", "proj_head", "(", "feats", ")", "\n", "logit_list", ".", "append", "(", "\n", "F", ".", "interpolate", "(", "\n", "out", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", ")", "\n", "logit_list", ".", "append", "(", "{", "'seg'", ":", "out", ",", "'embed'", ":", "emb", "}", ")", "\n", "", "else", ":", "\n", "            ", "logit_list", ".", "append", "(", "\n", "F", ".", "interpolate", "(", "\n", "out", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", ")", "\n", "", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hrnet_contrast.ProjectionHead.__init__": [[111, 125], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "ValueError", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "proj_dim", "=", "256", ",", "proj", "=", "'convmlp'", ")", ":", "\n", "        ", "super", "(", "ProjectionHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "proj", "==", "'linear'", ":", "\n", "            ", "self", ".", "proj", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "proj_dim", ",", "kernel_size", "=", "1", ")", "\n", "", "elif", "proj", "==", "'convmlp'", ":", "\n", "            ", "self", ".", "proj", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "dim_in", ",", "dim_in", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "dim_in", ",", "proj_dim", ",", "kernel_size", "=", "1", ")", ",", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The type of project head only support 'linear' and 'convmlp', but got {}.\"", "\n", ".", "format", "(", "proj", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.hrnet_contrast.ProjectionHead.forward": [[126, 128], ["paddle.normalize", "paddle.normalize", "paddle.normalize", "hrnet_contrast.ProjectionHead.proj"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "normalize", "(", "self", ".", "proj", "(", "x", ")", ",", "p", "=", "2", ",", "axis", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.BiSeNetV2.__init__": [[41, 67], ["paddle.Layer.__init__", "bisenet.DetailBranch", "bisenet.SemanticBranch", "bisenet.BGA", "bisenet.SegHead", "bisenet.SegHead", "bisenet.SegHead", "bisenet.SegHead", "bisenet.SegHead", "bisenet.BiSeNetV2.init_weight", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "lambd", "=", "0.25", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "C1", ",", "C2", ",", "C3", "=", "64", ",", "64", ",", "128", "\n", "db_channels", "=", "(", "C1", ",", "C2", ",", "C3", ")", "\n", "C1", ",", "C3", ",", "C4", ",", "C5", "=", "int", "(", "C1", "*", "lambd", ")", ",", "int", "(", "C3", "*", "lambd", ")", ",", "64", ",", "128", "\n", "sb_channels", "=", "(", "C1", ",", "C3", ",", "C4", ",", "C5", ")", "\n", "mid_channels", "=", "128", "\n", "\n", "self", ".", "db", "=", "DetailBranch", "(", "db_channels", ")", "\n", "self", ".", "sb", "=", "SemanticBranch", "(", "sb_channels", ")", "\n", "\n", "self", ".", "bga", "=", "BGA", "(", "mid_channels", ",", "align_corners", ")", "\n", "self", ".", "aux_head1", "=", "SegHead", "(", "C1", ",", "C1", ",", "num_classes", ")", "\n", "self", ".", "aux_head2", "=", "SegHead", "(", "C3", ",", "C3", ",", "num_classes", ")", "\n", "self", ".", "aux_head3", "=", "SegHead", "(", "C4", ",", "C4", ",", "num_classes", ")", "\n", "self", ".", "aux_head4", "=", "SegHead", "(", "C5", ",", "C5", ",", "num_classes", ")", "\n", "self", ".", "head", "=", "SegHead", "(", "mid_channels", ",", "mid_channels", ",", "num_classes", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.BiSeNetV2.forward": [[68, 91], ["bisenet.BiSeNetV2.db", "bisenet.BiSeNetV2.sb", "bisenet.BiSeNetV2.head", "bisenet.BiSeNetV2.bga", "bisenet.BiSeNetV2.aux_head1", "bisenet.BiSeNetV2.aux_head2", "bisenet.BiSeNetV2.aux_head3", "bisenet.BiSeNetV2.aux_head4", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "dfm", "=", "self", ".", "db", "(", "x", ")", "\n", "feat1", ",", "feat2", ",", "feat3", ",", "feat4", ",", "sfm", "=", "self", ".", "sb", "(", "x", ")", "\n", "logit", "=", "self", ".", "head", "(", "self", ".", "bga", "(", "dfm", ",", "sfm", ")", ")", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "logit_list", "=", "[", "logit", "]", "\n", "", "else", ":", "\n", "            ", "logit1", "=", "self", ".", "aux_head1", "(", "feat1", ")", "\n", "logit2", "=", "self", ".", "aux_head2", "(", "feat2", ")", "\n", "logit3", "=", "self", ".", "aux_head3", "(", "feat3", ")", "\n", "logit4", "=", "self", ".", "aux_head4", "(", "feat4", ")", "\n", "logit_list", "=", "[", "logit", ",", "logit1", ",", "logit2", ",", "logit3", ",", "logit4", "]", "\n", "\n", "", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.BiSeNetV2.init_weight": [[92, 102], ["paddleseg.utils.load_entire_model", "bisenet.BiSeNetV2.sublayers", "isinstance", "paddleseg.cvlibs.param_init.kaiming_normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "", "else", ":", "\n", "            ", "for", "sublayer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "sublayer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                    ", "param_init", ".", "kaiming_normal_init", "(", "sublayer", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "sublayer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                    ", "param_init", ".", "constant_init", "(", "sublayer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "sublayer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.StemBlock.__init__": [[105, 118], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ")", ":", "\n", "        ", "super", "(", "StemBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "layers", ".", "ConvBNReLU", "(", "in_dim", ",", "out_dim", ",", "3", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "left", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "out_dim", ",", "out_dim", "//", "2", ",", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "out_dim", "//", "2", ",", "out_dim", ",", "3", ",", "stride", "=", "2", ")", ")", "\n", "\n", "self", ".", "right", "=", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "fuse", "=", "layers", ".", "ConvBNReLU", "(", "out_dim", "*", "2", ",", "out_dim", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.StemBlock.forward": [[119, 125], ["bisenet.StemBlock.conv", "bisenet.StemBlock.left", "bisenet.StemBlock.right", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "bisenet.StemBlock.fuse"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_SpAtten_S.fuse"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "left", "=", "self", ".", "left", "(", "x", ")", "\n", "right", "=", "self", ".", "right", "(", "x", ")", "\n", "concat", "=", "paddle", ".", "concat", "(", "[", "left", ",", "right", "]", ",", "axis", "=", "1", ")", "\n", "return", "self", ".", "fuse", "(", "concat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.ContextEmbeddingBlock.__init__": [[128, 137], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddleseg.models.layers.SyncBatchNorm", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.Add", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ")", ":", "\n", "        ", "super", "(", "ContextEmbeddingBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "gap", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "self", ".", "bn", "=", "layers", ".", "SyncBatchNorm", "(", "in_dim", ")", "\n", "\n", "self", ".", "conv_1x1", "=", "layers", ".", "ConvBNReLU", "(", "in_dim", ",", "out_dim", ",", "1", ")", "\n", "self", ".", "add", "=", "layers", ".", "Add", "(", ")", "\n", "self", ".", "conv_3x3", "=", "nn", ".", "Conv2D", "(", "out_dim", ",", "out_dim", ",", "3", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.ContextEmbeddingBlock.forward": [[138, 143], ["bisenet.ContextEmbeddingBlock.gap", "bisenet.ContextEmbeddingBlock.bn", "bisenet.ContextEmbeddingBlock.add", "bisenet.ContextEmbeddingBlock.conv_3x3", "bisenet.ContextEmbeddingBlock.conv_1x1"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "gap", "=", "self", ".", "gap", "(", "x", ")", "\n", "bn", "=", "self", ".", "bn", "(", "gap", ")", "\n", "conv1", "=", "self", ".", "add", "(", "self", ".", "conv_1x1", "(", "bn", ")", ",", "x", ")", "\n", "return", "self", ".", "conv_3x3", "(", "conv1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.GatherAndExpansionLayer1.__init__": [[148, 158], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.Activation", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.DepthwiseConvBN", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ",", "expand", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "expand_dim", "=", "expand", "*", "in_dim", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "in_dim", ",", "in_dim", ",", "3", ")", ",", "\n", "layers", ".", "DepthwiseConvBN", "(", "in_dim", ",", "expand_dim", ",", "3", ")", ",", "\n", "layers", ".", "ConvBN", "(", "expand_dim", ",", "out_dim", ",", "1", ")", ")", "\n", "self", ".", "relu", "=", "layers", ".", "Activation", "(", "\"relu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.GatherAndExpansionLayer1.forward": [[159, 161], ["bisenet.GatherAndExpansionLayer1.relu", "bisenet.GatherAndExpansionLayer1.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "relu", "(", "self", ".", "conv", "(", "x", ")", "+", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.GatherAndExpansionLayer2.__init__": [[166, 184], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.Activation", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.DepthwiseConvBN", "paddleseg.models.layers.DepthwiseConvBN", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.DepthwiseConvBN", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ",", "expand", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "expand_dim", "=", "expand", "*", "in_dim", "\n", "\n", "self", ".", "branch_1", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "in_dim", ",", "in_dim", ",", "3", ")", ",", "\n", "layers", ".", "DepthwiseConvBN", "(", "\n", "in_dim", ",", "expand_dim", ",", "3", ",", "stride", "=", "2", ")", ",", "\n", "layers", ".", "DepthwiseConvBN", "(", "expand_dim", ",", "expand_dim", ",", "3", ")", ",", "\n", "layers", ".", "ConvBN", "(", "expand_dim", ",", "out_dim", ",", "1", ")", ")", "\n", "\n", "self", ".", "branch_2", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "DepthwiseConvBN", "(", "\n", "in_dim", ",", "in_dim", ",", "3", ",", "stride", "=", "2", ")", ",", "\n", "layers", ".", "ConvBN", "(", "in_dim", ",", "out_dim", ",", "1", ")", ")", "\n", "\n", "self", ".", "relu", "=", "layers", ".", "Activation", "(", "\"relu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.GatherAndExpansionLayer2.forward": [[185, 187], ["bisenet.GatherAndExpansionLayer2.relu", "bisenet.GatherAndExpansionLayer2.branch_1", "bisenet.GatherAndExpansionLayer2.branch_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "relu", "(", "self", ".", "branch_1", "(", "x", ")", "+", "self", ".", "branch_2", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.DetailBranch.__init__": [[192, 212], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "C1", ",", "C2", ",", "C3", "=", "in_channels", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "# stage 1", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "3", ",", "C1", ",", "3", ",", "stride", "=", "2", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "C1", ",", "C1", ",", "3", ")", ",", "\n", "# stage 2", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "C1", ",", "C2", ",", "3", ",", "stride", "=", "2", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "C2", ",", "C2", ",", "3", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "C2", ",", "C2", ",", "3", ")", ",", "\n", "# stage 3", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "C2", ",", "C3", ",", "3", ",", "stride", "=", "2", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "C3", ",", "C3", ",", "3", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "C3", ",", "C3", ",", "3", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.DetailBranch.forward": [[213, 215], ["bisenet.DetailBranch.convs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "convs", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.SemanticBranch.__init__": [[220, 241], ["paddle.Layer.__init__", "bisenet.StemBlock", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "bisenet.ContextEmbeddingBlock", "bisenet.GatherAndExpansionLayer2", "bisenet.GatherAndExpansionLayer1", "bisenet.GatherAndExpansionLayer2", "bisenet.GatherAndExpansionLayer1", "bisenet.GatherAndExpansionLayer2", "bisenet.GatherAndExpansionLayer1", "bisenet.GatherAndExpansionLayer1", "bisenet.GatherAndExpansionLayer1"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "C1", ",", "C3", ",", "C4", ",", "C5", "=", "in_channels", "\n", "\n", "self", ".", "stem", "=", "StemBlock", "(", "3", ",", "C1", ")", "\n", "\n", "self", ".", "stage3", "=", "nn", ".", "Sequential", "(", "\n", "GatherAndExpansionLayer2", "(", "C1", ",", "C3", ",", "6", ")", ",", "\n", "GatherAndExpansionLayer1", "(", "C3", ",", "C3", ",", "6", ")", ")", "\n", "\n", "self", ".", "stage4", "=", "nn", ".", "Sequential", "(", "\n", "GatherAndExpansionLayer2", "(", "C3", ",", "C4", ",", "6", ")", ",", "\n", "GatherAndExpansionLayer1", "(", "C4", ",", "C4", ",", "6", ")", ")", "\n", "\n", "self", ".", "stage5_4", "=", "nn", ".", "Sequential", "(", "\n", "GatherAndExpansionLayer2", "(", "C4", ",", "C5", ",", "6", ")", ",", "\n", "GatherAndExpansionLayer1", "(", "C5", ",", "C5", ",", "6", ")", ",", "\n", "GatherAndExpansionLayer1", "(", "C5", ",", "C5", ",", "6", ")", ",", "\n", "GatherAndExpansionLayer1", "(", "C5", ",", "C5", ",", "6", ")", ")", "\n", "\n", "self", ".", "ce", "=", "ContextEmbeddingBlock", "(", "C5", ",", "C5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.SemanticBranch.forward": [[242, 249], ["bisenet.SemanticBranch.stem", "bisenet.SemanticBranch.stage3", "bisenet.SemanticBranch.stage4", "bisenet.SemanticBranch.stage5_4", "bisenet.SemanticBranch.ce"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "stage2", "=", "self", ".", "stem", "(", "x", ")", "\n", "stage3", "=", "self", ".", "stage3", "(", "stage2", ")", "\n", "stage4", "=", "self", ".", "stage4", "(", "stage3", ")", "\n", "stage5_4", "=", "self", ".", "stage5_4", "(", "stage4", ")", "\n", "fm", "=", "self", ".", "ce", "(", "stage5_4", ")", "\n", "return", "stage2", ",", "stage3", ",", "stage4", ",", "stage5_4", ",", "fm", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.BGA.__init__": [[254, 277], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.DepthwiseConvBN", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBN", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddleseg.models.layers.DepthwiseConvBN", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "out_dim", ",", "align_corners", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "db_branch_keep", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "DepthwiseConvBN", "(", "out_dim", ",", "out_dim", ",", "3", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_dim", ",", "out_dim", ",", "1", ")", ")", "\n", "\n", "self", ".", "db_branch_down", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBN", "(", "\n", "out_dim", ",", "out_dim", ",", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "AvgPool2D", "(", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "sb_branch_keep", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "DepthwiseConvBN", "(", "out_dim", ",", "out_dim", ",", "3", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_dim", ",", "out_dim", ",", "1", ")", ",", "\n", "layers", ".", "Activation", "(", "act", "=", "'sigmoid'", ")", ")", "\n", "\n", "self", ".", "sb_branch_up", "=", "layers", ".", "ConvBN", "(", "out_dim", ",", "out_dim", ",", "3", ")", "\n", "\n", "self", ".", "conv", "=", "layers", ".", "ConvBN", "(", "out_dim", ",", "out_dim", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.BGA.forward": [[278, 301], ["bisenet.BGA.db_branch_keep", "bisenet.BGA.db_branch_down", "bisenet.BGA.sb_branch_keep", "bisenet.BGA.sb_branch_up", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "bisenet.BGA.conv", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "dfm", ",", "sfm", ")", ":", "\n", "        ", "db_feat_keep", "=", "self", ".", "db_branch_keep", "(", "dfm", ")", "\n", "db_feat_down", "=", "self", ".", "db_branch_down", "(", "dfm", ")", "\n", "sb_feat_keep", "=", "self", ".", "sb_branch_keep", "(", "sfm", ")", "\n", "\n", "sb_feat_up", "=", "self", ".", "sb_branch_up", "(", "sfm", ")", "\n", "sb_feat_up", "=", "F", ".", "interpolate", "(", "\n", "sb_feat_up", ",", "\n", "paddle", ".", "shape", "(", "db_feat_keep", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "sb_feat_up", "=", "F", ".", "sigmoid", "(", "sb_feat_up", ")", "\n", "db_feat", "=", "db_feat_keep", "*", "sb_feat_up", "\n", "\n", "sb_feat", "=", "db_feat_down", "*", "sb_feat_keep", "\n", "sb_feat", "=", "F", ".", "interpolate", "(", "\n", "sb_feat", ",", "\n", "paddle", ".", "shape", "(", "db_feat", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "return", "self", ".", "conv", "(", "db_feat", "+", "sb_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.SegHead.__init__": [[304, 311], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "mid_dim", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_3x3", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "in_dim", ",", "mid_dim", ",", "3", ")", ",", "nn", ".", "Dropout", "(", "0.1", ")", ")", "\n", "\n", "self", ".", "conv_1x1", "=", "nn", ".", "Conv2D", "(", "mid_dim", ",", "num_classes", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.bisenet.SegHead.forward": [[312, 316], ["bisenet.SegHead.conv_3x3", "bisenet.SegHead.conv_1x1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv1", "=", "self", ".", "conv_3x3", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv_1x1", "(", "conv1", ")", "\n", "return", "conv2", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.SFNet.__init__": [[43, 75], ["paddle.Layer.__init__", "sfnet.SFNetHead", "sfnet.SFNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", ",", "\n", "enable_auxiliary_loss", "=", "False", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "SFNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "in_channels", "=", "[", "\n", "self", ".", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "if", "self", ".", "backbone", ".", "layers", "==", "18", ":", "\n", "            ", "fpn_dim", "=", "128", "\n", "inplane_head", "=", "512", "\n", "fpn_inplanes", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "", "else", ":", "\n", "            ", "fpn_dim", "=", "256", "\n", "inplane_head", "=", "2048", "\n", "fpn_inplanes", "=", "[", "256", ",", "512", ",", "1024", ",", "2048", "]", "\n", "\n", "", "self", ".", "head", "=", "SFNetHead", "(", "\n", "inplane", "=", "inplane_head", ",", "\n", "num_class", "=", "num_classes", ",", "\n", "fpn_inplanes", "=", "fpn_inplanes", ",", "\n", "fpn_dim", "=", "fpn_dim", ",", "\n", "enable_auxiliary_loss", "=", "self", ".", "enable_auxiliary_loss", ")", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.SFNet.forward": [[76, 88], ["sfnet.SFNet.backbone", "sfnet.SFNet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "logit_list", "=", "self", ".", "head", "(", "feats", ")", "\n", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.SFNet.init_weight": [[89, 92], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.SFNetHead.__init__": [[106, 156], ["paddle.Layer.__init__", "paddleseg.models.layers.PPModule", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "sfnet.SFNetHead.fpn_in.append", "sfnet.SFNetHead.fpn_out.append", "sfnet.SFNetHead.fpn_out_align.append", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "len", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "sfnet.AlignedModule", "sfnet.SFNetHead.dsn.append", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "len", "paddleseg.models.layers.AuxLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "inplane", ",", "\n", "num_class", ",", "\n", "fpn_inplanes", ",", "\n", "fpn_dim", "=", "256", ",", "\n", "enable_auxiliary_loss", "=", "False", ")", ":", "\n", "        ", "super", "(", "SFNetHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ppm", "=", "layers", ".", "PPModule", "(", "\n", "in_channels", "=", "inplane", ",", "\n", "out_channels", "=", "fpn_dim", ",", "\n", "bin_sizes", "=", "(", "1", ",", "2", ",", "3", ",", "6", ")", ",", "\n", "dim_reduction", "=", "True", ",", "\n", "align_corners", "=", "True", ")", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "self", ".", "fpn_in", "=", "[", "]", "\n", "\n", "for", "fpn_inplane", "in", "fpn_inplanes", "[", ":", "-", "1", "]", ":", "\n", "            ", "self", ".", "fpn_in", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "fpn_inplane", ",", "fpn_dim", ",", "1", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "fpn_dim", ")", ",", "nn", ".", "ReLU", "(", ")", ")", ")", "\n", "\n", "", "self", ".", "fpn_in", "=", "nn", ".", "LayerList", "(", "self", ".", "fpn_in", ")", "\n", "self", ".", "fpn_out", "=", "[", "]", "\n", "self", ".", "fpn_out_align", "=", "[", "]", "\n", "self", ".", "dsn", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "fpn_inplanes", ")", "-", "1", ")", ":", "\n", "            ", "self", ".", "fpn_out", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "fpn_dim", ",", "fpn_dim", ",", "3", ",", "bias_attr", "=", "False", ")", ")", ")", "\n", "self", ".", "fpn_out_align", ".", "append", "(", "\n", "AlignedModule", "(", "\n", "inplane", "=", "fpn_dim", ",", "outplane", "=", "fpn_dim", "//", "2", ")", ")", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "                ", "self", ".", "dsn", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "layers", ".", "AuxLayer", "(", "fpn_dim", ",", "fpn_dim", ",", "num_class", ")", ")", ")", "\n", "\n", "", "", "self", ".", "fpn_out", "=", "nn", ".", "LayerList", "(", "self", ".", "fpn_out", ")", "\n", "self", ".", "fpn_out_align", "=", "nn", ".", "LayerList", "(", "self", ".", "fpn_out_align", ")", "\n", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "self", ".", "dsn", "=", "nn", ".", "LayerList", "(", "self", ".", "dsn", ")", "\n", "\n", "", "self", ".", "conv_last", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "len", "(", "fpn_inplanes", ")", "*", "fpn_dim", ",", "fpn_dim", ",", "3", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "fpn_dim", ",", "num_class", ",", "kernel_size", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.SFNetHead.forward": [[157, 189], ["sfnet.SFNetHead.ppm", "reversed", "fpn_feature_list.reverse", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "sfnet.SFNetHead.conv_last", "range", "fpn_feature_list.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "len", "fusion_list.append", "out.append", "out.append", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "conv_out", ")", ":", "\n", "        ", "psp_out", "=", "self", ".", "ppm", "(", "conv_out", "[", "-", "1", "]", ")", "\n", "f", "=", "psp_out", "\n", "fpn_feature_list", "=", "[", "psp_out", "]", "\n", "out", "=", "[", "]", "\n", "for", "i", "in", "reversed", "(", "range", "(", "len", "(", "conv_out", ")", "-", "1", ")", ")", ":", "\n", "            ", "conv_x", "=", "conv_out", "[", "i", "]", "\n", "conv_x", "=", "self", ".", "fpn_in", "[", "i", "]", "(", "conv_x", ")", "\n", "f", "=", "self", ".", "fpn_out_align", "[", "i", "]", "(", "[", "conv_x", ",", "f", "]", ")", "\n", "f", "=", "conv_x", "+", "f", "\n", "fpn_feature_list", ".", "append", "(", "self", ".", "fpn_out", "[", "i", "]", "(", "f", ")", ")", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "                ", "out", ".", "append", "(", "self", ".", "dsn", "[", "i", "]", "(", "f", ")", ")", "\n", "\n", "", "", "fpn_feature_list", ".", "reverse", "(", ")", "\n", "output_size", "=", "paddle", ".", "shape", "(", "fpn_feature_list", "[", "0", "]", ")", "[", "2", ":", "]", "\n", "fusion_list", "=", "[", "fpn_feature_list", "[", "0", "]", "]", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "fpn_feature_list", ")", ")", ":", "\n", "            ", "fusion_list", ".", "append", "(", "\n", "F", ".", "interpolate", "(", "\n", "fpn_feature_list", "[", "i", "]", ",", "\n", "output_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", ")", "\n", "", "fusion_out", "=", "paddle", ".", "concat", "(", "fusion_list", ",", "1", ")", "\n", "x", "=", "self", ".", "conv_last", "(", "fusion_out", ")", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "out", ".", "append", "(", "x", ")", "\n", "return", "out", "\n", "", "else", ":", "\n", "            ", "return", "[", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.AlignedModule.__init__": [[201, 211], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "inplane", ",", "outplane", ",", "kernel_size", "=", "3", ")", ":", "\n", "        ", "super", "(", "AlignedModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down_h", "=", "nn", ".", "Conv2D", "(", "inplane", ",", "outplane", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "down_l", "=", "nn", ".", "Conv2D", "(", "inplane", ",", "outplane", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "flow_make", "=", "nn", ".", "Conv2D", "(", "\n", "outplane", "*", "2", ",", "\n", "2", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.AlignedModule.flow_warp": [[212, 226], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "size[].reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "h_grid.tile.tile.tile", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "paddle.linspace().reshape", "w_grid.tile().transpose.tile().transpose.tile().transpose", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat.unsqueeze().tile", "paddle.concat.unsqueeze().tile", "paddle.concat.unsqueeze().tile", "paddle.grid_sample", "paddle.grid_sample", "paddle.grid_sample", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "w_grid.tile().transpose.tile().transpose.tile", "w_grid.tile().transpose.tile().transpose.unsqueeze", "h_grid.tile.tile.unsqueeze", "paddle.concat.unsqueeze", "paddle.concat.unsqueeze", "paddle.concat.unsqueeze", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "flow_warp", "(", "self", ",", "input", ",", "flow", ",", "size", ")", ":", "\n", "        ", "input_shape", "=", "paddle", ".", "shape", "(", "input", ")", "\n", "norm", "=", "size", "[", ":", ":", "-", "1", "]", ".", "reshape", "(", "[", "1", ",", "1", ",", "1", ",", "-", "1", "]", ")", "\n", "norm", ".", "stop_gradient", "=", "True", "\n", "h_grid", "=", "paddle", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "size", "[", "0", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "h_grid", "=", "h_grid", ".", "tile", "(", "[", "size", "[", "1", "]", "]", ")", "\n", "w_grid", "=", "paddle", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "size", "[", "1", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "w_grid", "=", "w_grid", ".", "tile", "(", "[", "size", "[", "0", "]", "]", ")", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "grid", "=", "paddle", ".", "concat", "(", "[", "w_grid", ".", "unsqueeze", "(", "2", ")", ",", "h_grid", ".", "unsqueeze", "(", "2", ")", "]", ",", "axis", "=", "2", ")", "\n", "grid", ".", "unsqueeze", "(", "0", ")", ".", "tile", "(", "[", "input_shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "grid", "=", "grid", "+", "paddle", ".", "transpose", "(", "flow", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "/", "norm", "\n", "\n", "output", "=", "F", ".", "grid_sample", "(", "input", ",", "grid", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.AlignedModule.forward": [[227, 238], ["sfnet.AlignedModule.down_l", "sfnet.AlignedModule.down_h", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "sfnet.AlignedModule.flow_make", "sfnet.AlignedModule.flow_warp", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.sfnet.AlignedModule.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "low_feature", ",", "h_feature", "=", "x", "\n", "h_feature_orign", "=", "h_feature", "\n", "size", "=", "paddle", ".", "shape", "(", "low_feature", ")", "[", "2", ":", "]", "\n", "low_feature", "=", "self", ".", "down_l", "(", "low_feature", ")", "\n", "h_feature", "=", "self", ".", "down_h", "(", "h_feature", ")", "\n", "h_feature", "=", "F", ".", "interpolate", "(", "\n", "h_feature", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "flow", "=", "self", ".", "flow_make", "(", "paddle", ".", "concat", "(", "[", "h_feature", ",", "low_feature", "]", ",", "1", ")", ")", "\n", "h_feature", "=", "self", ".", "flow_warp", "(", "h_feature_orign", ",", "flow", ",", "size", "=", "size", ")", "\n", "return", "h_feature", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.MLP.__init__": [[20, 23], ["paddle.Layer.__init__", "paddle.Linear", "paddle.Linear", "paddle.Linear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "input_dim", "=", "2048", ",", "embed_dim", "=", "768", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "input_dim", ",", "embed_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.MLP.forward": [[24, 28], ["segformer.MLP.flatten().transpose", "segformer.MLP.proj", "segformer.MLP.flatten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.SegFormer.__init__": [[47, 77], ["paddle.Layer.__init__", "segformer.MLP", "segformer.MLP", "segformer.MLP", "segformer.MLP", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "segformer.SegFormer.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "embedding_dim", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "SegFormer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "c1_in_channels", ",", "c2_in_channels", ",", "c3_in_channels", ",", "c4_in_channels", "=", "self", ".", "backbone", ".", "feat_channels", "\n", "\n", "self", ".", "linear_c4", "=", "MLP", "(", "input_dim", "=", "c4_in_channels", ",", "embed_dim", "=", "embedding_dim", ")", "\n", "self", ".", "linear_c3", "=", "MLP", "(", "input_dim", "=", "c3_in_channels", ",", "embed_dim", "=", "embedding_dim", ")", "\n", "self", ".", "linear_c2", "=", "MLP", "(", "input_dim", "=", "c2_in_channels", ",", "embed_dim", "=", "embedding_dim", ")", "\n", "self", ".", "linear_c1", "=", "MLP", "(", "input_dim", "=", "c1_in_channels", ",", "embed_dim", "=", "embedding_dim", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout2D", "(", "0.1", ")", "\n", "self", ".", "linear_fuse", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "embedding_dim", "*", "4", ",", "\n", "out_channels", "=", "embedding_dim", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "linear_pred", "=", "nn", ".", "Conv2D", "(", "\n", "embedding_dim", ",", "self", ".", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.SegFormer.init_weight": [[78, 81], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.SegFormer.forward": [[82, 129], ["segformer.SegFormer.backbone", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "segformer.SegFormer.linear_c4().transpose().reshape", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "segformer.SegFormer.linear_c3().transpose().reshape", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "segformer.SegFormer.linear_c2().transpose().reshape", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "segformer.SegFormer.linear_c1().transpose().reshape", "segformer.SegFormer.linear_fuse", "segformer.SegFormer.dropout", "segformer.SegFormer.linear_pred", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "segformer.SegFormer.linear_c4().transpose", "segformer.SegFormer.linear_c3().transpose", "segformer.SegFormer.linear_c2().transpose", "segformer.SegFormer.linear_c1().transpose", "segformer.SegFormer.linear_c4", "segformer.SegFormer.linear_c3", "segformer.SegFormer.linear_c2", "segformer.SegFormer.linear_c1", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "c1", ",", "c2", ",", "c3", ",", "c4", "=", "feats", "\n", "\n", "############## MLP decoder on C1-C4 ###########", "\n", "c1_shape", "=", "paddle", ".", "shape", "(", "c1", ")", "\n", "c2_shape", "=", "paddle", ".", "shape", "(", "c2", ")", "\n", "c3_shape", "=", "paddle", ".", "shape", "(", "c3", ")", "\n", "c4_shape", "=", "paddle", ".", "shape", "(", "c4", ")", "\n", "\n", "_c4", "=", "self", ".", "linear_c4", "(", "c4", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "0", ",", "c4_shape", "[", "2", "]", ",", "c4_shape", "[", "3", "]", "]", ")", "\n", "_c4", "=", "F", ".", "interpolate", "(", "\n", "_c4", ",", "\n", "size", "=", "c1_shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "_c3", "=", "self", ".", "linear_c3", "(", "c3", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "0", ",", "c3_shape", "[", "2", "]", ",", "c3_shape", "[", "3", "]", "]", ")", "\n", "_c3", "=", "F", ".", "interpolate", "(", "\n", "_c3", ",", "\n", "size", "=", "c1_shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "_c2", "=", "self", ".", "linear_c2", "(", "c2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "0", ",", "c2_shape", "[", "2", "]", ",", "c2_shape", "[", "3", "]", "]", ")", "\n", "_c2", "=", "F", ".", "interpolate", "(", "\n", "_c2", ",", "\n", "size", "=", "c1_shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "_c1", "=", "self", ".", "linear_c1", "(", "c1", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "\n", "[", "0", ",", "0", ",", "c1_shape", "[", "2", "]", ",", "c1_shape", "[", "3", "]", "]", ")", "\n", "\n", "_c", "=", "self", ".", "linear_fuse", "(", "paddle", ".", "concat", "(", "[", "_c4", ",", "_c3", ",", "_c2", ",", "_c1", "]", ",", "axis", "=", "1", ")", ")", "\n", "\n", "logit", "=", "self", ".", "dropout", "(", "_c", ")", "\n", "logit", "=", "self", ".", "linear_pred", "(", "logit", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "size", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.SegFormer_B0": [[132, 138], ["segformer.SegFormer"], "function", ["None"], ["", "", "@", "manager", ".", "MODELS", ".", "add_component", "\n", "def", "SegFormer_B0", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "SegFormer", "(", "\n", "backbone", "=", "manager", ".", "BACKBONES", "[", "'MixVisionTransformer_B0'", "]", "(", ")", ",", "\n", "embedding_dim", "=", "256", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.SegFormer_B1": [[140, 146], ["segformer.SegFormer"], "function", ["None"], ["", "@", "manager", ".", "MODELS", ".", "add_component", "\n", "def", "SegFormer_B1", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "SegFormer", "(", "\n", "backbone", "=", "manager", ".", "BACKBONES", "[", "'MixVisionTransformer_B1'", "]", "(", ")", ",", "\n", "embedding_dim", "=", "256", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.SegFormer_B2": [[148, 154], ["segformer.SegFormer"], "function", ["None"], ["", "@", "manager", ".", "MODELS", ".", "add_component", "\n", "def", "SegFormer_B2", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "SegFormer", "(", "\n", "backbone", "=", "manager", ".", "BACKBONES", "[", "'MixVisionTransformer_B2'", "]", "(", ")", ",", "\n", "embedding_dim", "=", "768", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.SegFormer_B3": [[156, 162], ["segformer.SegFormer"], "function", ["None"], ["", "@", "manager", ".", "MODELS", ".", "add_component", "\n", "def", "SegFormer_B3", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "SegFormer", "(", "\n", "backbone", "=", "manager", ".", "BACKBONES", "[", "'MixVisionTransformer_B3'", "]", "(", ")", ",", "\n", "embedding_dim", "=", "768", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.SegFormer_B4": [[164, 170], ["segformer.SegFormer"], "function", ["None"], ["", "@", "manager", ".", "MODELS", ".", "add_component", "\n", "def", "SegFormer_B4", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "SegFormer", "(", "\n", "backbone", "=", "manager", ".", "BACKBONES", "[", "'MixVisionTransformer_B4'", "]", "(", ")", ",", "\n", "embedding_dim", "=", "768", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segformer.SegFormer_B5": [[172, 178], ["segformer.SegFormer"], "function", ["None"], ["", "@", "manager", ".", "MODELS", ".", "add_component", "\n", "def", "SegFormer_B5", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "SegFormer", "(", "\n", "backbone", "=", "manager", ".", "BACKBONES", "[", "'MixVisionTransformer_B5'", "]", "(", ")", ",", "\n", "embedding_dim", "=", "768", ",", "\n", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.FastSCNN.__init__": [[44, 70], ["paddle.Layer.__init__", "fast_scnn.LearningToDownsample", "fast_scnn.GlobalFeatureExtractor", "fast_scnn.FeatureFusionModule", "fast_scnn.Classifier", "fast_scnn.FastSCNN.init_weight", "paddleseg.models.layers.AuxLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "learning_to_downsample", "=", "LearningToDownsample", "(", "32", ",", "48", ",", "64", ")", "\n", "self", ".", "global_feature_extractor", "=", "GlobalFeatureExtractor", "(", "\n", "in_channels", "=", "64", ",", "\n", "block_channels", "=", "[", "64", ",", "96", ",", "128", "]", ",", "\n", "out_channels", "=", "128", ",", "\n", "expansion", "=", "6", ",", "\n", "num_blocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "\n", "align_corners", "=", "True", ")", "\n", "self", ".", "feature_fusion", "=", "FeatureFusionModule", "(", "64", ",", "128", ",", "128", ",", "align_corners", ")", "\n", "self", ".", "classifier", "=", "Classifier", "(", "128", ",", "num_classes", ")", "\n", "\n", "if", "enable_auxiliary_loss", ":", "\n", "            ", "self", ".", "auxlayer", "=", "layers", ".", "AuxLayer", "(", "64", ",", "32", ",", "num_classes", ")", "\n", "\n", "", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.FastSCNN.forward": [[71, 95], ["fast_scnn.FastSCNN.learning_to_downsample", "fast_scnn.FastSCNN.global_feature_extractor", "fast_scnn.FastSCNN.feature_fusion", "fast_scnn.FastSCNN.classifier", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "logit_list.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "fast_scnn.FastSCNN.auxlayer", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "input_size", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", "\n", "higher_res_features", "=", "self", ".", "learning_to_downsample", "(", "x", ")", "\n", "x", "=", "self", ".", "global_feature_extractor", "(", "higher_res_features", ")", "\n", "x", "=", "self", ".", "feature_fusion", "(", "higher_res_features", ",", "x", ")", "\n", "logit", "=", "self", ".", "classifier", "(", "x", ")", "\n", "logit", "=", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "input_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "auxiliary_logit", "=", "self", ".", "auxlayer", "(", "higher_res_features", ")", "\n", "auxiliary_logit", "=", "F", ".", "interpolate", "(", "\n", "auxiliary_logit", ",", "\n", "input_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "logit_list", ".", "append", "(", "auxiliary_logit", ")", "\n", "\n", "", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.FastSCNN.init_weight": [[96, 99], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.LearningToDownsample.__init__": [[111, 128], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.SeparableConvBNReLU", "paddleseg.models.layers.SeparableConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "dw_channels1", "=", "32", ",", "dw_channels2", "=", "48", ",", "out_channels", "=", "64", ")", ":", "\n", "        ", "super", "(", "LearningToDownsample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_bn_relu", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "3", ",", "out_channels", "=", "dw_channels1", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "dsconv_bn_relu1", "=", "layers", ".", "SeparableConvBNReLU", "(", "\n", "in_channels", "=", "dw_channels1", ",", "\n", "out_channels", "=", "dw_channels2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "dsconv_bn_relu2", "=", "layers", ".", "SeparableConvBNReLU", "(", "\n", "in_channels", "=", "dw_channels2", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.LearningToDownsample.forward": [[129, 134], ["fast_scnn.LearningToDownsample.conv_bn_relu", "fast_scnn.LearningToDownsample.dsconv_bn_relu1", "fast_scnn.LearningToDownsample.dsconv_bn_relu2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_bn_relu", "(", "x", ")", "\n", "x", "=", "self", ".", "dsconv_bn_relu1", "(", "x", ")", "\n", "x", "=", "self", ".", "dsconv_bn_relu2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.GlobalFeatureExtractor.__init__": [[151, 171], ["paddle.Layer.__init__", "fast_scnn.GlobalFeatureExtractor._make_layer", "fast_scnn.GlobalFeatureExtractor._make_layer", "fast_scnn.GlobalFeatureExtractor._make_layer", "paddleseg.models.layers.PPModule"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_layer"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "block_channels", ",", "out_channels", ",", "expansion", ",", "\n", "num_blocks", ",", "align_corners", ")", ":", "\n", "        ", "super", "(", "GlobalFeatureExtractor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bottleneck1", "=", "self", ".", "_make_layer", "(", "InvertedBottleneck", ",", "in_channels", ",", "\n", "block_channels", "[", "0", "]", ",", "num_blocks", "[", "0", "]", ",", "\n", "expansion", ",", "2", ")", "\n", "self", ".", "bottleneck2", "=", "self", ".", "_make_layer", "(", "\n", "InvertedBottleneck", ",", "block_channels", "[", "0", "]", ",", "block_channels", "[", "1", "]", ",", "\n", "num_blocks", "[", "1", "]", ",", "expansion", ",", "2", ")", "\n", "self", ".", "bottleneck3", "=", "self", ".", "_make_layer", "(", "\n", "InvertedBottleneck", ",", "block_channels", "[", "1", "]", ",", "block_channels", "[", "2", "]", ",", "\n", "num_blocks", "[", "2", "]", ",", "expansion", ",", "1", ")", "\n", "\n", "self", ".", "ppm", "=", "layers", ".", "PPModule", "(", "\n", "block_channels", "[", "2", "]", ",", "\n", "out_channels", ",", "\n", "bin_sizes", "=", "(", "1", ",", "2", ",", "3", ",", "6", ")", ",", "\n", "dim_reduction", "=", "True", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.GlobalFeatureExtractor._make_layer": [[172, 184], ["paddleseg.models.layers.append", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "block", "paddleseg.models.layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "_make_layer", "(", "self", ",", "\n", "block", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "blocks", ",", "\n", "expansion", "=", "6", ",", "\n", "stride", "=", "1", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "in_channels", ",", "out_channels", ",", "expansion", ",", "stride", ")", ")", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "out_channels", ",", "out_channels", ",", "expansion", ",", "1", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.GlobalFeatureExtractor.forward": [[185, 191], ["fast_scnn.GlobalFeatureExtractor.bottleneck1", "fast_scnn.GlobalFeatureExtractor.bottleneck2", "fast_scnn.GlobalFeatureExtractor.bottleneck3", "fast_scnn.GlobalFeatureExtractor.ppm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "bottleneck1", "(", "x", ")", "\n", "x", "=", "self", ".", "bottleneck2", "(", "x", ")", "\n", "x", "=", "self", ".", "bottleneck3", "(", "x", ")", "\n", "x", "=", "self", ".", "ppm", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.InvertedBottleneck.__init__": [[203, 231], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "expansion", "=", "6", ",", "stride", "=", "2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "use_shortcut", "=", "stride", "==", "1", "and", "in_channels", "==", "out_channels", "\n", "\n", "expand_channels", "=", "in_channels", "*", "expansion", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "expand_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "# dw", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "expand_channels", ",", "\n", "out_channels", "=", "expand_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "expand_channels", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "# pw-linear", "\n", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "expand_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.InvertedBottleneck.forward": [[232, 237], ["fast_scnn.InvertedBottleneck.block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "block", "(", "x", ")", "\n", "if", "self", ".", "use_shortcut", ":", "\n", "            ", "out", "=", "x", "+", "out", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.FeatureFusionModule.__init__": [[251, 267], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "high_in_channels", ",", "low_in_channels", ",", "out_channels", ",", "\n", "align_corners", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# Only depth-wise conv", "\n", "self", ".", "dwconv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "low_in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "128", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv_low_res", "=", "layers", ".", "ConvBN", "(", "out_channels", ",", "out_channels", ",", "1", ")", "\n", "self", ".", "conv_high_res", "=", "layers", ".", "ConvBN", "(", "high_in_channels", ",", "out_channels", ",", "1", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.FeatureFusionModule.forward": [[268, 280], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "fast_scnn.FeatureFusionModule.dwconv", "fast_scnn.FeatureFusionModule.conv_low_res", "fast_scnn.FeatureFusionModule.conv_high_res", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "high_res_input", ",", "low_res_input", ")", ":", "\n", "        ", "low_res_input", "=", "F", ".", "interpolate", "(", "\n", "low_res_input", ",", "\n", "paddle", ".", "shape", "(", "high_res_input", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "low_res_input", "=", "self", ".", "dwconv", "(", "low_res_input", ")", "\n", "low_res_input", "=", "self", ".", "conv_low_res", "(", "low_res_input", ")", "\n", "high_res_input", "=", "self", ".", "conv_high_res", "(", "high_res_input", ")", "\n", "x", "=", "high_res_input", "+", "low_res_input", "\n", "\n", "return", "F", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.Classifier.__init__": [[291, 310], ["paddle.Layer.__init__", "paddleseg.models.layers.SeparableConvBNReLU", "paddleseg.models.layers.SeparableConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "input_channels", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dsconv1", "=", "layers", ".", "SeparableConvBNReLU", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "input_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "dsconv2", "=", "layers", ".", "SeparableConvBNReLU", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "input_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "input_channels", ",", "out_channels", "=", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.1", ")", "# dropout_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fast_scnn.Classifier.forward": [[311, 317], ["fast_scnn.Classifier.dsconv1", "fast_scnn.Classifier.dsconv2", "fast_scnn.Classifier.dropout", "fast_scnn.Classifier.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "dsconv1", "(", "x", ")", "\n", "x", "=", "self", ".", "dsconv2", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ccnet.CCNet.__init__": [[45, 78], ["paddle.Layer.__init__", "ccnet.RCCAModule", "paddleseg.models.layers.AuxLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "2", ",", "3", ")", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "dropout_prob", "=", "0.0", ",", "\n", "recurrence", "=", "1", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "self", ".", "recurrence", "=", "recurrence", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "if", "enable_auxiliary_loss", ":", "\n", "            ", "self", ".", "aux_head", "=", "layers", ".", "AuxLayer", "(", "\n", "backbone_channels", "[", "0", "]", ",", "\n", "512", ",", "\n", "num_classes", ",", "\n", "dropout_prob", "=", "dropout_prob", ")", "\n", "", "self", ".", "head", "=", "RCCAModule", "(", "\n", "backbone_channels", "[", "1", "]", ",", "\n", "512", ",", "\n", "num_classes", ",", "\n", "dropout_prob", "=", "dropout_prob", ",", "\n", "recurrence", "=", "recurrence", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ccnet.CCNet.init_weight": [[79, 82], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ccnet.CCNet.forward": [[83, 97], ["ccnet.CCNet.backbone", "ccnet.CCNet.head", "logit_list.append", "ccnet.CCNet.aux_head", "logit_list.append", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "[", "]", "\n", "output", "=", "self", ".", "head", "(", "feat_list", "[", "self", ".", "backbone_indices", "[", "-", "1", "]", "]", ")", "\n", "logit_list", ".", "append", "(", "output", ")", "\n", "if", "self", ".", "training", "and", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "aux_out", "=", "self", ".", "aux_head", "(", "feat_list", "[", "self", ".", "backbone_indices", "[", "-", "2", "]", "]", ")", "\n", "logit_list", ".", "append", "(", "aux_out", ")", "\n", "", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ccnet.RCCAModule.__init__": [[101, 120], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNLeakyReLU", "ccnet.CrissCrossAttention", "paddleseg.models.layers.ConvBNLeakyReLU", "paddleseg.models.layers.AuxLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "num_classes", ",", "\n", "dropout_prob", "=", "0.1", ",", "\n", "recurrence", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "inter_channels", "=", "in_channels", "//", "4", "\n", "self", ".", "recurrence", "=", "recurrence", "\n", "self", ".", "conva", "=", "layers", ".", "ConvBNLeakyReLU", "(", "\n", "in_channels", ",", "inter_channels", ",", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "cca", "=", "CrissCrossAttention", "(", "inter_channels", ")", "\n", "self", ".", "convb", "=", "layers", ".", "ConvBNLeakyReLU", "(", "\n", "inter_channels", ",", "inter_channels", ",", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "out", "=", "layers", ".", "AuxLayer", "(", "\n", "in_channels", "+", "inter_channels", ",", "\n", "out_channels", ",", "\n", "num_classes", ",", "\n", "dropout_prob", "=", "dropout_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ccnet.RCCAModule.forward": [[121, 128], ["ccnet.RCCAModule.conva", "range", "ccnet.RCCAModule.convb", "ccnet.RCCAModule.out", "ccnet.RCCAModule.cca", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat", "=", "self", ".", "conva", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "recurrence", ")", ":", "\n", "            ", "feat", "=", "self", ".", "cca", "(", "feat", ")", "\n", "", "feat", "=", "self", ".", "convb", "(", "feat", ")", "\n", "output", "=", "self", ".", "out", "(", "paddle", ".", "concat", "(", "[", "x", ",", "feat", "]", ",", "axis", "=", "1", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ccnet.CrissCrossAttention.__init__": [[131, 140], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Softmax", "paddle.Softmax", "paddle.Softmax", "ccnet.CrissCrossAttention.create_parameter", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "q_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "in_channels", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "k_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "in_channels", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "v_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "axis", "=", "3", ")", "\n", "self", ".", "gamma", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "1", ",", ")", ",", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0", ")", ")", "\n", "self", ".", "inf_tensor", "=", "paddle", ".", "full", "(", "shape", "=", "(", "1", ",", ")", ",", "fill_value", "=", "float", "(", "'inf'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ccnet.CrissCrossAttention.forward": [[141, 170], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "ccnet.CrissCrossAttention.q_conv", "ccnet.CrissCrossAttention.transpose().reshape().transpose", "ccnet.CrissCrossAttention.transpose().reshape().transpose", "ccnet.CrissCrossAttention.k_conv", "ccnet.CrissCrossAttention.transpose().reshape", "ccnet.CrissCrossAttention.transpose().reshape", "ccnet.CrissCrossAttention.v_conv", "ccnet.CrissCrossAttention.transpose().reshape", "ccnet.CrissCrossAttention.transpose().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "ccnet.CrissCrossAttention.softmax", "concate[].transpose().reshape", "concate[].reshape", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.bmm().reshape().transpose", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "ccnet.CrissCrossAttention.transpose().reshape", "ccnet.CrissCrossAttention.transpose().reshape", "ccnet.CrissCrossAttention.transpose", "ccnet.CrissCrossAttention.transpose", "ccnet.CrissCrossAttention.transpose", "ccnet.CrissCrossAttention.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "concate[].transpose", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "paddle.bmm().reshape", "ccnet.CrissCrossAttention.transpose", "ccnet.CrissCrossAttention.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "ccnet.CrissCrossAttention.Inf", "concate[].transpose().reshape.transpose", "concate[].reshape.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ccnet.CrissCrossAttention.Inf"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "proj_q", "=", "self", ".", "q_conv", "(", "x", ")", "\n", "proj_q_h", "=", "proj_q", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", ".", "reshape", "(", "\n", "[", "b", "*", "w", ",", "-", "1", ",", "h", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "proj_q_w", "=", "proj_q", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", ".", "reshape", "(", "\n", "[", "b", "*", "h", ",", "-", "1", ",", "w", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "\n", "proj_k", "=", "self", ".", "k_conv", "(", "x", ")", "\n", "proj_k_h", "=", "proj_k", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", ".", "reshape", "(", "[", "b", "*", "w", ",", "-", "1", ",", "h", "]", ")", "\n", "proj_k_w", "=", "proj_k", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", ".", "reshape", "(", "[", "b", "*", "h", ",", "-", "1", ",", "w", "]", ")", "\n", "\n", "proj_v", "=", "self", ".", "v_conv", "(", "x", ")", "\n", "proj_v_h", "=", "proj_v", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", ".", "reshape", "(", "[", "b", "*", "w", ",", "-", "1", ",", "h", "]", ")", "\n", "proj_v_w", "=", "proj_v", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", ".", "reshape", "(", "[", "b", "*", "h", ",", "-", "1", ",", "w", "]", ")", "\n", "\n", "energy_h", "=", "(", "paddle", ".", "bmm", "(", "proj_q_h", ",", "proj_k_h", ")", "+", "self", ".", "Inf", "(", "b", ",", "h", ",", "w", ")", ")", ".", "reshape", "(", "\n", "[", "b", ",", "w", ",", "h", ",", "h", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "energy_w", "=", "paddle", ".", "bmm", "(", "proj_q_w", ",", "proj_k_w", ")", ".", "reshape", "(", "[", "b", ",", "h", ",", "w", ",", "w", "]", ")", "\n", "concate", "=", "self", ".", "softmax", "(", "paddle", ".", "concat", "(", "[", "energy_h", ",", "energy_w", "]", ",", "axis", "=", "3", ")", ")", "\n", "\n", "attn_h", "=", "concate", "[", ":", ",", ":", ",", ":", ",", "0", ":", "h", "]", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", ".", "reshape", "(", "\n", "[", "b", "*", "w", ",", "h", ",", "h", "]", ")", "\n", "attn_w", "=", "concate", "[", ":", ",", ":", ",", ":", ",", "h", ":", "h", "+", "w", "]", ".", "reshape", "(", "[", "b", "*", "h", ",", "w", ",", "w", "]", ")", "\n", "out_h", "=", "paddle", ".", "bmm", "(", "proj_v_h", ",", "attn_h", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ")", ".", "reshape", "(", "\n", "[", "b", ",", "w", ",", "-", "1", ",", "h", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "out_w", "=", "paddle", ".", "bmm", "(", "proj_v_w", ",", "attn_w", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ")", ".", "reshape", "(", "\n", "[", "b", ",", "h", ",", "-", "1", ",", "w", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "return", "self", ".", "gamma", "*", "(", "out_h", "+", "out_w", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ccnet.CrissCrossAttention.Inf": [[171, 175], ["paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.diag().unsqueeze", "paddle.diag().unsqueeze", "paddle.diag().unsqueeze", "paddle.diag().unsqueeze", "paddle.diag().unsqueeze", "paddle.diag().unsqueeze", "paddle.diag().unsqueeze", "paddle.diag().unsqueeze", "paddle.diag().unsqueeze", "paddle.diag", "paddle.diag", "paddle.diag", "paddle.diag", "paddle.diag", "paddle.diag", "paddle.diag", "paddle.diag", "paddle.diag", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile"], "methods", ["None"], ["", "def", "Inf", "(", "self", ",", "B", ",", "H", ",", "W", ")", ":", "\n", "        ", "return", "-", "paddle", ".", "tile", "(", "\n", "paddle", ".", "diag", "(", "paddle", ".", "tile", "(", "self", ".", "inf_tensor", ",", "[", "H", "]", ")", ",", "0", ")", ".", "unsqueeze", "(", "0", ")", ",", "\n", "[", "B", "*", "W", ",", "1", ",", "1", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.OCRNet.__init__": [[46, 69], ["paddle.Layer.__init__", "ocrnet.OCRHead", "ocrnet.OCRNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", ",", "\n", "ocr_mid_channels", "=", "512", ",", "\n", "ocr_key_channels", "=", "256", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "in_channels", "=", "[", "self", ".", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "]", "\n", "\n", "self", ".", "head", "=", "OCRHead", "(", "\n", "num_classes", "=", "num_classes", ",", "\n", "in_channels", "=", "in_channels", ",", "\n", "ocr_mid_channels", "=", "ocr_mid_channels", ",", "\n", "ocr_key_channels", "=", "ocr_key_channels", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.OCRNet.forward": [[70, 85], ["ocrnet.OCRNet.backbone", "ocrnet.OCRNet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "logit_list", "=", "self", ".", "head", "(", "feats", ")", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "logit_list", "=", "[", "logit_list", "[", "0", "]", "]", "\n", "\n", "", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.OCRNet.init_weight": [[86, 89], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.OCRHead.__init__": [[102, 125], ["paddle.Layer.__init__", "ocrnet.SpatialGatherBlock", "ocrnet.SpatialOCRModule", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "ocrnet.OCRHead.init_weight", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_channels", ",", "\n", "ocr_mid_channels", "=", "512", ",", "\n", "ocr_key_channels", "=", "256", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "spatial_gather", "=", "SpatialGatherBlock", "(", "ocr_mid_channels", ",", "num_classes", ")", "\n", "self", ".", "spatial_ocr", "=", "SpatialOCRModule", "(", "ocr_mid_channels", ",", "ocr_key_channels", ",", "\n", "ocr_mid_channels", ")", "\n", "\n", "self", ".", "indices", "=", "[", "-", "2", ",", "-", "1", "]", "if", "len", "(", "in_channels", ")", ">", "1", "else", "[", "-", "1", ",", "-", "1", "]", "\n", "\n", "self", ".", "conv3x3_ocr", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "[", "self", ".", "indices", "[", "1", "]", "]", ",", "ocr_mid_channels", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "cls_head", "=", "nn", ".", "Conv2D", "(", "ocr_mid_channels", ",", "self", ".", "num_classes", ",", "1", ")", "\n", "self", ".", "aux_head", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "in_channels", "[", "self", ".", "indices", "[", "0", "]", "]", ",", "\n", "in_channels", "[", "self", ".", "indices", "[", "0", "]", "]", ",", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", "[", "self", ".", "indices", "[", "0", "]", "]", ",", "self", ".", "num_classes", ",", "1", ")", ")", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.OCRHead.forward": [[126, 138], ["ocrnet.OCRHead.aux_head", "ocrnet.OCRHead.conv3x3_ocr", "ocrnet.OCRHead.spatial_gather", "ocrnet.OCRHead.spatial_ocr", "ocrnet.OCRHead.cls_head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "feat_shallow", ",", "feat_deep", "=", "feat_list", "[", "self", ".", "indices", "[", "0", "]", "]", ",", "feat_list", "[", "\n", "self", ".", "indices", "[", "1", "]", "]", "\n", "\n", "soft_regions", "=", "self", ".", "aux_head", "(", "feat_shallow", ")", "\n", "pixels", "=", "self", ".", "conv3x3_ocr", "(", "feat_deep", ")", "\n", "\n", "object_regions", "=", "self", ".", "spatial_gather", "(", "pixels", ",", "soft_regions", ")", "\n", "ocr", "=", "self", ".", "spatial_ocr", "(", "pixels", ",", "object_regions", ")", "\n", "\n", "logit", "=", "self", ".", "cls_head", "(", "ocr", ")", "\n", "return", "[", "logit", ",", "soft_regions", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.OCRHead.init_weight": [[139, 147], ["ocrnet.OCRHead.sublayers", "isinstance", "paddleseg.cvlibs.param_init.normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initialize the parameters of model parts.\"\"\"", "\n", "for", "sublayer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "sublayer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "normal_init", "(", "sublayer", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "sublayer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "sublayer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "sublayer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.SpatialGatherBlock.__init__": [[152, 156], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "pixels_channels", ",", "regions_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pixels_channels", "=", "pixels_channels", "\n", "self", ".", "regions_channels", "=", "regions_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.SpatialGatherBlock.forward": [[157, 172], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pixels", ",", "regions", ")", ":", "\n", "# pixels: from (n, c, h, w) to (n, h*w, c)", "\n", "        ", "pixels", "=", "paddle", ".", "reshape", "(", "pixels", ",", "(", "0", ",", "self", ".", "pixels_channels", ",", "-", "1", ")", ")", "\n", "pixels", "=", "paddle", ".", "transpose", "(", "pixels", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# regions: from (n, k, h, w) to (n, k, h*w)", "\n", "regions", "=", "paddle", ".", "reshape", "(", "regions", ",", "(", "0", ",", "self", ".", "regions_channels", ",", "-", "1", ")", ")", "\n", "regions", "=", "F", ".", "softmax", "(", "regions", ",", "axis", "=", "2", ")", "\n", "\n", "# feats: from (n, k, c) to (n, c, k, 1)", "\n", "feats", "=", "paddle", ".", "bmm", "(", "regions", ",", "pixels", ")", "\n", "feats", "=", "paddle", ".", "transpose", "(", "feats", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "feats", "=", "paddle", ".", "unsqueeze", "(", "feats", ",", "axis", "=", "-", "1", ")", "\n", "\n", "return", "feats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.SpatialOCRModule.__init__": [[177, 188], ["paddle.Layer.__init__", "ocrnet.ObjectAttentionBlock", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "key_channels", ",", "\n", "out_channels", ",", "\n", "dropout_rate", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "attention_block", "=", "ObjectAttentionBlock", "(", "in_channels", ",", "key_channels", ")", "\n", "self", ".", "conv1x1", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "2", "*", "in_channels", ",", "out_channels", ",", "1", ")", ",", "\n", "nn", ".", "Dropout2D", "(", "dropout_rate", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.SpatialOCRModule.forward": [[189, 195], ["ocrnet.SpatialOCRModule.attention_block", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "ocrnet.SpatialOCRModule.conv1x1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pixels", ",", "regions", ")", ":", "\n", "        ", "context", "=", "self", ".", "attention_block", "(", "pixels", ",", "regions", ")", "\n", "feats", "=", "paddle", ".", "concat", "(", "[", "context", ",", "pixels", "]", ",", "axis", "=", "1", ")", "\n", "feats", "=", "self", ".", "conv1x1", "(", "feats", ")", "\n", "\n", "return", "feats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.ObjectAttentionBlock.__init__": [[200, 217], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "key_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "key_channels", "=", "key_channels", "\n", "\n", "self", ".", "f_pixel", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "key_channels", ",", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "key_channels", ",", "key_channels", ",", "1", ")", ")", "\n", "\n", "self", ".", "f_object", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "key_channels", ",", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "key_channels", ",", "key_channels", ",", "1", ")", ")", "\n", "\n", "self", ".", "f_down", "=", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "key_channels", ",", "1", ")", "\n", "\n", "self", ".", "f_up", "=", "layers", ".", "ConvBNReLU", "(", "key_channels", ",", "in_channels", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet.ObjectAttentionBlock.forward": [[218, 247], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "ocrnet.ObjectAttentionBlock.f_pixel", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "ocrnet.ObjectAttentionBlock.f_object", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "ocrnet.ObjectAttentionBlock.f_down", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "ocrnet.ObjectAttentionBlock.f_up"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ",", "proxy", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "# query : from (n, c1, h1, w1) to (n, h1*w1, key_channels)", "\n", "query", "=", "self", ".", "f_pixel", "(", "x", ")", "\n", "query", "=", "paddle", ".", "reshape", "(", "query", ",", "(", "0", ",", "self", ".", "key_channels", ",", "-", "1", ")", ")", "\n", "query", "=", "paddle", ".", "transpose", "(", "query", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# key : from (n, c2, h2, w2) to (n, key_channels, h2*w2)", "\n", "key", "=", "self", ".", "f_object", "(", "proxy", ")", "\n", "key", "=", "paddle", ".", "reshape", "(", "key", ",", "(", "0", ",", "self", ".", "key_channels", ",", "-", "1", ")", ")", "\n", "\n", "# value : from (n, c2, h2, w2) to (n, h2*w2, key_channels)", "\n", "value", "=", "self", ".", "f_down", "(", "proxy", ")", "\n", "value", "=", "paddle", ".", "reshape", "(", "value", ",", "(", "0", ",", "self", ".", "key_channels", ",", "-", "1", ")", ")", "\n", "value", "=", "paddle", ".", "transpose", "(", "value", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# sim_map (n, h1*w1, h2*w2)", "\n", "sim_map", "=", "paddle", ".", "bmm", "(", "query", ",", "key", ")", "\n", "sim_map", "=", "(", "self", ".", "key_channels", "**", "-", ".5", ")", "*", "sim_map", "\n", "sim_map", "=", "F", ".", "softmax", "(", "sim_map", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# context from (n, h1*w1, key_channels) to (n , out_channels, h1, w1)", "\n", "context", "=", "paddle", ".", "bmm", "(", "sim_map", ",", "value", ")", "\n", "context", "=", "paddle", ".", "transpose", "(", "context", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "context", "=", "paddle", ".", "reshape", "(", "context", ",", "\n", "(", "0", ",", "self", ".", "key_channels", ",", "x_shape", "[", "2", "]", ",", "x_shape", "[", "3", "]", ")", ")", "\n", "context", "=", "self", ".", "f_up", "(", "context", ")", "\n", "\n", "return", "context", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segnet.SegNet.__init__": [[35, 119], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "segnet.SegNet.init_weight", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# Encoder Module", "\n", "\n", "self", ".", "enco1", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "3", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "enco2", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "enco3", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "enco4", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "enco5", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "# Decoder Module", "\n", "\n", "self", ".", "deco1", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "deco2", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "512", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "deco3", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "256", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "deco4", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "self", ".", "deco5", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "64", ",", "num_classes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segnet.SegNet.init_weight": [[120, 123], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.segnet.SegNet.forward": [[124, 169], ["segnet.SegNet.enco1", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "segnet.SegNet.enco2", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "segnet.SegNet.enco3", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "segnet.SegNet.enco4", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "segnet.SegNet.enco5", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_unpool2d", "paddle.max_unpool2d", "paddle.max_unpool2d", "segnet.SegNet.deco1", "paddle.max_unpool2d", "paddle.max_unpool2d", "paddle.max_unpool2d", "segnet.SegNet.deco2", "paddle.max_unpool2d", "paddle.max_unpool2d", "paddle.max_unpool2d", "segnet.SegNet.deco3", "paddle.max_unpool2d", "paddle.max_unpool2d", "paddle.max_unpool2d", "segnet.SegNet.deco4", "paddle.max_unpool2d", "paddle.max_unpool2d", "paddle.max_unpool2d", "segnet.SegNet.deco5", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "\n", "x", "=", "self", ".", "enco1", "(", "x", ")", "\n", "x", ",", "ind1", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "return_mask", "=", "True", ")", "\n", "size1", "=", "x", ".", "shape", "\n", "\n", "x", "=", "self", ".", "enco2", "(", "x", ")", "\n", "x", ",", "ind2", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "return_mask", "=", "True", ")", "\n", "size2", "=", "x", ".", "shape", "\n", "\n", "x", "=", "self", ".", "enco3", "(", "x", ")", "\n", "x", ",", "ind3", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "return_mask", "=", "True", ")", "\n", "size3", "=", "x", ".", "shape", "\n", "\n", "x", "=", "self", ".", "enco4", "(", "x", ")", "\n", "x", ",", "ind4", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "return_mask", "=", "True", ")", "\n", "size4", "=", "x", ".", "shape", "\n", "\n", "x", "=", "self", ".", "enco5", "(", "x", ")", "\n", "x", ",", "ind5", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "return_mask", "=", "True", ")", "\n", "size5", "=", "x", ".", "shape", "\n", "\n", "x", "=", "F", ".", "max_unpool2d", "(", "\n", "x", ",", "indices", "=", "ind5", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "output_size", "=", "size4", ")", "\n", "x", "=", "self", ".", "deco1", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "max_unpool2d", "(", "\n", "x", ",", "indices", "=", "ind4", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "output_size", "=", "size3", ")", "\n", "x", "=", "self", ".", "deco2", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "max_unpool2d", "(", "\n", "x", ",", "indices", "=", "ind3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "output_size", "=", "size2", ")", "\n", "x", "=", "self", ".", "deco3", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "max_unpool2d", "(", "\n", "x", ",", "indices", "=", "ind2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "output_size", "=", "size1", ")", "\n", "x", "=", "self", ".", "deco4", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "max_unpool2d", "(", "x", ",", "indices", "=", "ind1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "x", "=", "self", ".", "deco5", "(", "x", ")", "\n", "\n", "logit_list", ".", "append", "(", "x", ")", "\n", "\n", "return", "logit_list", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.glore.GloRe.__init__": [[46, 69], ["paddle.Layer.__init__", "glore.GloReHead", "glore.GloRe.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "2", ",", "3", ")", ",", "\n", "gru_channels", "=", "512", ",", "\n", "gru_num_state", "=", "128", ",", "\n", "gru_num_node", "=", "64", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "head", "=", "GloReHead", "(", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "gru_channels", ",", "gru_num_state", ",", "gru_num_node", ",", "\n", "enable_auxiliary_loss", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.glore.GloRe.forward": [[70, 79], ["glore.GloRe.backbone", "glore.GloRe.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "x", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.glore.GloRe.init_weight": [[81, 84], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.glore.GloReHead.__init__": [[88, 115], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "glore.GruModule", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.AuxLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone_indices", ",", "\n", "backbone_channels", ",", "\n", "gru_channels", "=", "512", ",", "\n", "gru_num_state", "=", "128", ",", "\n", "gru_num_node", "=", "64", ",", "\n", "enable_auxiliary_loss", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "in_channels", "=", "backbone_channels", "[", "1", "]", "\n", "self", ".", "conv_bn_relu", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "gru_channels", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "gru_module", "=", "GruModule", "(", "\n", "num_input", "=", "gru_channels", ",", "\n", "num_state", "=", "gru_num_state", ",", "\n", "num_node", "=", "gru_num_node", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.1", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Conv2D", "(", "512", ",", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "auxlayer", "=", "layers", ".", "AuxLayer", "(", "\n", "in_channels", "=", "backbone_channels", "[", "0", "]", ",", "\n", "inter_channels", "=", "backbone_channels", "[", "0", "]", "//", "4", ",", "\n", "out_channels", "=", "num_classes", ")", "\n", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.glore.GloReHead.forward": [[116, 133], ["glore.GloReHead.conv_bn_relu", "glore.GloReHead.gru_module", "glore.GloReHead.dropout", "glore.GloReHead.classifier", "logit_list.append", "glore.GloReHead.auxlayer", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "\n", "        ", "logit_list", "=", "[", "]", "\n", "x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "1", "]", "]", "\n", "\n", "feature", "=", "self", ".", "conv_bn_relu", "(", "x", ")", "\n", "gru_output", "=", "self", ".", "gru_module", "(", "feature", ")", "\n", "output", "=", "self", ".", "dropout", "(", "gru_output", ")", "\n", "logit", "=", "self", ".", "classifier", "(", "output", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "low_level_feat", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "auxiliary_logit", "=", "self", ".", "auxlayer", "(", "low_level_feat", ")", "\n", "logit_list", ".", "append", "(", "auxiliary_logit", ")", "\n", "\n", "", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.glore.GCN.__init__": [[136, 142], ["paddle.Layer.__init__", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv1D", "paddle.Conv1D", "paddle.Conv1D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_state", ",", "num_node", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv1D", "(", "num_node", ",", "num_node", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv1D", "(", "\n", "num_state", ",", "num_state", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.glore.GCN.forward": [[143, 149], ["glore.GCN.conv1", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "glore.GCN.relu", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "glore.GCN.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "conv1", "(", "paddle", ".", "transpose", "(", "x", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ")", ")", ")", "\n", "h", "=", "paddle", ".", "transpose", "(", "h", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "h", "=", "h", "+", "x", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "h", ")", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.glore.GruModule.__init__": [[152, 167], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "glore.GCN", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.SyncBatchNorm", "paddle.SyncBatchNorm", "paddle.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_input", "=", "512", ",", "\n", "num_state", "=", "128", ",", "\n", "num_node", "=", "64", ",", "\n", "normalize", "=", "False", ")", ":", "\n", "        ", "super", "(", "GruModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "normalize", "=", "normalize", "\n", "self", ".", "num_state", "=", "num_state", "\n", "self", ".", "num_node", "=", "num_node", "\n", "self", ".", "reduction_dim", "=", "nn", ".", "Conv2D", "(", "num_input", ",", "num_state", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "projection_mat", "=", "nn", ".", "Conv2D", "(", "num_input", ",", "num_node", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gcn", "=", "GCN", "(", "num_state", "=", "self", ".", "num_state", ",", "num_node", "=", "self", ".", "num_node", ")", "\n", "self", ".", "extend_dim", "=", "nn", ".", "Conv2D", "(", "\n", "self", ".", "num_state", ",", "num_input", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "extend_bn", "=", "nn", ".", "SyncBatchNorm", "(", "num_input", ",", "epsilon", "=", "1e-4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.glore.GruModule.forward": [[168, 200], ["glore.GruModule.reduction_dim", "glore.GruModule.projection_mat", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "glore.GruModule.gcn", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "glore.GruModule.extend_dim", "glore.GruModule.extend_bn", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "input", ".", "shape", "\n", "# B, C, H, W", "\n", "reduction_dim", "=", "self", ".", "reduction_dim", "(", "input", ")", "\n", "# B, N, H, W", "\n", "mat_B", "=", "self", ".", "projection_mat", "(", "input", ")", "\n", "# B, C, H*W", "\n", "reshaped_reduction", "=", "paddle", ".", "reshape", "(", "\n", "reduction_dim", ",", "shape", "=", "[", "n", ",", "self", ".", "num_state", ",", "h", "*", "w", "]", ")", "\n", "# B, N, H*W", "\n", "reshaped_B", "=", "paddle", ".", "reshape", "(", "mat_B", ",", "shape", "=", "[", "n", ",", "self", ".", "num_node", ",", "h", "*", "w", "]", ")", "\n", "# B, N, H*W", "\n", "reproject", "=", "reshaped_B", "\n", "# B, C, N", "\n", "node_state_V", "=", "paddle", ".", "matmul", "(", "\n", "reshaped_reduction", ",", "paddle", ".", "transpose", "(", "\n", "reshaped_B", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", ")", "\n", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "node_state_V", "=", "node_state_V", "*", "(", "1.", "/", "reshaped_reduction", ".", "shape", "[", "2", "]", ")", "\n", "\n", "# B, C, N", "\n", "", "gcn_out", "=", "self", ".", "gcn", "(", "node_state_V", ")", "\n", "# B, C, H*W", "\n", "Y", "=", "paddle", ".", "matmul", "(", "gcn_out", ",", "reproject", ")", "\n", "# B, C, H, W", "\n", "Y", "=", "paddle", ".", "reshape", "(", "Y", ",", "shape", "=", "[", "n", ",", "self", ".", "num_state", ",", "h", ",", "w", "]", ")", "\n", "Y_extend", "=", "self", ".", "extend_dim", "(", "Y", ")", "\n", "Y_extend", "=", "self", ".", "extend_bn", "(", "Y_extend", ")", "\n", "\n", "out", "=", "input", "+", "Y_extend", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.DualResNet.__init__": [[43, 115], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "ddrnet.DualResNet._make_layers", "ddrnet.DualResNet._make_layers", "ddrnet.DualResNet._make_layers", "ddrnet.DualResNet._make_layers", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.ConvBN", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "ddrnet.DualResNet._make_layers", "ddrnet.DualResNet._make_layers", "ddrnet.DualResNet._make_layers", "ddrnet.DualResNet._make_layers", "ddrnet.DAPPM", "ddrnet.DDRNetHead", "ddrnet.DualResNet.init_weight", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN", "ddrnet.DDRNetHead"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "in_channels", "=", "3", ",", "\n", "block_layers", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "planes", "=", "64", ",", "\n", "spp_planes", "=", "128", ",", "\n", "head_planes", "=", "128", ",", "\n", "enable_auxiliary_loss", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "highres_planes", "=", "planes", "*", "2", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layers", "(", "BasicBlock", ",", "planes", ",", "planes", ",", "\n", "block_layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layers", "(", "\n", "BasicBlock", ",", "planes", ",", "planes", "*", "2", ",", "block_layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layers", "(", "\n", "BasicBlock", ",", "planes", "*", "2", ",", "planes", "*", "4", ",", "block_layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layers", "(", "\n", "BasicBlock", ",", "planes", "*", "4", ",", "planes", "*", "8", ",", "block_layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "compression3", "=", "layers", ".", "ConvBN", "(", "\n", "planes", "*", "4", ",", "highres_planes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "compression4", "=", "layers", ".", "ConvBN", "(", "\n", "planes", "*", "8", ",", "highres_planes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "down3", "=", "layers", ".", "ConvBN", "(", "\n", "highres_planes", ",", "\n", "planes", "*", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "down4", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "highres_planes", ",", "\n", "planes", "*", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "planes", "*", "4", ",", "\n", "planes", "*", "8", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n", "self", ".", "layer3_", "=", "self", ".", "_make_layers", "(", "BasicBlock", ",", "planes", "*", "2", ",", "highres_planes", ",", "\n", "2", ")", "\n", "self", ".", "layer4_", "=", "self", ".", "_make_layers", "(", "BasicBlock", ",", "highres_planes", ",", "\n", "highres_planes", ",", "2", ")", "\n", "self", ".", "layer5_", "=", "self", ".", "_make_layers", "(", "Bottleneck", ",", "highres_planes", ",", "\n", "highres_planes", ",", "1", ")", "\n", "self", ".", "layer5", "=", "self", ".", "_make_layers", "(", "\n", "Bottleneck", ",", "planes", "*", "8", ",", "planes", "*", "8", ",", "1", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "spp", "=", "DAPPM", "(", "planes", "*", "16", ",", "spp_planes", ",", "planes", "*", "4", ")", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "self", ".", "aux_head", "=", "DDRNetHead", "(", "highres_planes", ",", "head_planes", ",", "num_classes", ")", "\n", "", "self", ".", "head", "=", "DDRNetHead", "(", "planes", "*", "4", ",", "head_planes", ",", "num_classes", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.DualResNet.init_weight": [[116, 126], ["paddleseg.utils.utils.load_entire_model", "ddrnet.DualResNet.sublayers", "isinstance", "paddleseg.cvlibs.param_init.kaiming_normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.kaiming_normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "", "else", ":", "\n", "            ", "for", "m", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                    ", "param_init", ".", "kaiming_normal_init", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2D", ")", ":", "\n", "                    ", "param_init", ".", "constant_init", "(", "m", ".", "weight", ",", "value", "=", "1", ")", "\n", "param_init", ".", "constant_init", "(", "m", ".", "bias", ",", "value", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.DualResNet._make_layers": [[127, 147], ["paddleseg.models.layers.append", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "block", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddleseg.models.layers.append", "paddleseg.models.layers.append", "block", "block"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "", "def", "_make_layers", "(", "self", ",", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "inplanes", ",", "\n", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "planes", "*", "block", ".", "expansion", ")", ",", ")", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "if", "i", "==", "(", "blocks", "-", "1", ")", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "no_relu", "=", "True", ")", ")", "\n", "", "else", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "no_relu", "=", "False", ")", ")", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.DualResNet.forward": [[148, 189], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "ddrnet.DualResNet.conv1", "ddrnet.DualResNet.layer1", "ddrnet.DualResNet.layer2", "ddrnet.DualResNet.layer3", "ddrnet.DualResNet.layer3_", "ddrnet.DualResNet.layer4", "ddrnet.DualResNet.layer4_", "ddrnet.DualResNet.layer5_", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "ddrnet.DualResNet.head", "logit_list.append", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.down3", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.down4", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.spp", "ddrnet.DualResNet.aux_head", "logit_list.append", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.compression3", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.compression4", "ddrnet.DualResNet.layer5", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.relu", "ddrnet.DualResNet.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "width_output", "=", "w", "//", "8", "\n", "height_output", "=", "h", "//", "8", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "stage1_out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "stage2_out", "=", "self", ".", "layer2", "(", "self", ".", "relu", "(", "stage1_out", ")", ")", "\n", "stage3_out", "=", "self", ".", "layer3", "(", "self", ".", "relu", "(", "stage2_out", ")", ")", "\n", "stage3_out_dual", "=", "self", ".", "layer3_", "(", "self", ".", "relu", "(", "stage2_out", ")", ")", "\n", "x", "=", "stage3_out", "+", "self", ".", "down3", "(", "self", ".", "relu", "(", "stage3_out_dual", ")", ")", "\n", "stage3_merge", "=", "stage3_out_dual", "+", "F", ".", "interpolate", "(", "\n", "self", ".", "compression3", "(", "self", ".", "relu", "(", "stage3_out", ")", ")", ",", "\n", "size", "=", "[", "height_output", ",", "width_output", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "\n", "stage4_out", "=", "self", ".", "layer4", "(", "self", ".", "relu", "(", "x", ")", ")", "\n", "stage4_out_dual", "=", "self", ".", "layer4_", "(", "self", ".", "relu", "(", "stage3_merge", ")", ")", "\n", "\n", "x", "=", "stage4_out", "+", "self", ".", "down4", "(", "self", ".", "relu", "(", "stage4_out_dual", ")", ")", "\n", "stage4_merge", "=", "stage4_out_dual", "+", "F", ".", "interpolate", "(", "\n", "self", ".", "compression4", "(", "self", ".", "relu", "(", "stage4_out", ")", ")", ",", "\n", "size", "=", "[", "height_output", ",", "width_output", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "\n", "stage5_out_dual", "=", "self", ".", "layer5_", "(", "self", ".", "relu", "(", "stage4_merge", ")", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "spp", "(", "self", ".", "layer5", "(", "self", ".", "relu", "(", "x", ")", ")", ")", ",", "\n", "size", "=", "[", "height_output", ",", "width_output", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "\n", "output", "=", "self", ".", "head", "(", "x", "+", "stage5_out_dual", ")", "\n", "logit_list", "=", "[", "]", "\n", "logit_list", ".", "append", "(", "output", ")", "\n", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "aux_out", "=", "self", ".", "aux_head", "(", "stage3_merge", ")", "\n", "logit_list", ".", "append", "(", "aux_out", ")", "\n", "", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "[", "h", ",", "w", "]", ",", "mode", "=", "'bilinear'", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.BasicBlock.__init__": [[195, 215], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "None", ",", "\n", "no_relu", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_bn_relu", "=", "layers", ".", "ConvBNReLU", "(", "\n", "inplanes", ",", "\n", "planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "conv_bn", "=", "layers", ".", "ConvBN", "(", "\n", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "no_relu", "=", "no_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.BasicBlock.forward": [[216, 227], ["ddrnet.BasicBlock.conv_bn_relu", "ddrnet.BasicBlock.conv_bn", "ddrnet.BasicBlock.downsample", "ddrnet.BasicBlock.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.conv_bn"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "conv_bn_relu", "(", "x", ")", "\n", "out", "=", "self", ".", "conv_bn", "(", "out", ")", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "out", "+=", "residual", "\n", "if", "self", ".", "no_relu", ":", "\n", "            ", "return", "out", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "relu", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.Bottleneck.__init__": [[232, 254], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "None", ",", "\n", "no_relu", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_bn_relu1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_bn_relu2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "planes", ",", "\n", "planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_bn", "=", "layers", ".", "ConvBN", "(", "\n", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "no_relu", "=", "no_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.Bottleneck.forward": [[255, 267], ["ddrnet.Bottleneck.conv_bn_relu1", "ddrnet.Bottleneck.conv_bn_relu2", "ddrnet.Bottleneck.conv_bn", "ddrnet.Bottleneck.downsample", "ddrnet.Bottleneck.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.conv_bn"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "conv_bn_relu1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv_bn_relu2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_bn", "(", "out", ")", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "out", "+=", "residual", "\n", "if", "self", ".", "no_relu", ":", "\n", "            ", "return", "out", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "relu", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.DAPPM.__init__": [[270, 350], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "branch_planes", ",", "outplanes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2D", "(", "\n", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "inplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "scale2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2D", "(", "\n", "kernel_size", "=", "9", ",", "stride", "=", "4", ",", "padding", "=", "4", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "inplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "scale3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2D", "(", "\n", "kernel_size", "=", "17", ",", "stride", "=", "8", ",", "padding", "=", "8", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "inplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "scale4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2D", "(", "(", "1", ",", "1", ")", ")", ",", "\n", "layers", ".", "SyncBatchNorm", "(", "inplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "scale0", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "SyncBatchNorm", "(", "inplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "process1", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "SyncBatchNorm", "(", "branch_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "branch_planes", ",", "\n", "branch_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "process2", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "SyncBatchNorm", "(", "branch_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "branch_planes", ",", "\n", "branch_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "process3", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "SyncBatchNorm", "(", "branch_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "branch_planes", ",", "\n", "branch_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "process4", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "SyncBatchNorm", "(", "branch_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "branch_planes", ",", "\n", "branch_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", ")", "\n", "self", ".", "compression", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "SyncBatchNorm", "(", "branch_planes", "*", "5", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "branch_planes", "*", "5", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "SyncBatchNorm", "(", "inplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "inplanes", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.DAPPM.forward": [[351, 370], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "ddrnet.DAPPM.scale0", "ddrnet.DAPPM.process1", "ddrnet.DAPPM.process2", "ddrnet.DAPPM.process3", "ddrnet.DAPPM.process4", "ddrnet.DAPPM.compression", "ddrnet.DAPPM.shortcut", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "ddrnet.DAPPM.scale1", "ddrnet.DAPPM.scale2", "ddrnet.DAPPM.scale3", "ddrnet.DAPPM.scale4"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "x0", "=", "self", ".", "scale0", "(", "x", ")", "\n", "x1", "=", "self", ".", "process1", "(", "\n", "F", ".", "interpolate", "(", "\n", "self", ".", "scale1", "(", "x", ")", ",", "size", "=", "[", "h", ",", "w", "]", ",", "mode", "=", "'bilinear'", ")", "+", "x0", ")", "\n", "x2", "=", "self", ".", "process2", "(", "\n", "F", ".", "interpolate", "(", "\n", "self", ".", "scale2", "(", "x", ")", ",", "size", "=", "[", "h", ",", "w", "]", ",", "mode", "=", "'bilinear'", ")", "+", "x1", ")", "\n", "x3", "=", "self", ".", "process3", "(", "\n", "F", ".", "interpolate", "(", "\n", "self", ".", "scale3", "(", "x", ")", ",", "size", "=", "[", "h", ",", "w", "]", ",", "mode", "=", "'bilinear'", ")", "+", "x2", ")", "\n", "x4", "=", "self", ".", "process4", "(", "\n", "F", ".", "interpolate", "(", "\n", "self", ".", "scale4", "(", "x", ")", ",", "size", "=", "[", "h", ",", "w", "]", ",", "mode", "=", "'bilinear'", ")", "+", "x3", ")", "\n", "\n", "out", "=", "self", ".", "compression", "(", "paddle", ".", "concat", "(", "[", "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", "]", ",", "\n", "1", ")", ")", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.DDRNetHead.__init__": [[373, 383], ["paddle.Layer.__init__", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "interplanes", ",", "outplanes", ",", "scale_factor", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2D", "(", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "conv_bn_relu", "=", "layers", ".", "ConvBNReLU", "(", "\n", "inplanes", ",", "interplanes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "interplanes", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias_attr", "=", "True", ")", "\n", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.DDRNetHead.forward": [[384, 394], ["ddrnet.DDRNetHead.bn1", "ddrnet.DDRNetHead.relu", "ddrnet.DDRNetHead.conv_bn_relu", "ddrnet.DDRNetHead.conv", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_bn_relu", "(", "x", ")", "\n", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "if", "self", ".", "scale_factor", "is", "not", "None", ":", "\n", "            ", "out", "=", "F", ".", "interpolate", "(", "\n", "out", ",", "scale_factor", "=", "self", ".", "scale_factor", ",", "mode", "=", "'bilinear'", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ddrnet.DDRNet_23": [[396, 404], ["ddrnet.DualResNet"], "function", ["None"], ["", "", "@", "manager", ".", "MODELS", ".", "add_component", "\n", "def", "DDRNet_23", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "DualResNet", "(", "\n", "block_layers", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "planes", "=", "64", ",", "\n", "spp_planes", "=", "128", ",", "\n", "head_planes", "=", "128", ",", "\n", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.STDCSeg.__init__": [[43, 69], ["paddle.Layer.__init__", "stdcseg.ContextPath", "stdcseg.FeatureFusionModule", "stdcseg.SegHead", "stdcseg.SegHead", "stdcseg.SegHead", "stdcseg.SegHead", "stdcseg.SegHead", "stdcseg.SegHead", "stdcseg.SegHead", "stdcseg.STDCSeg.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "use_boundary_2", "=", "False", ",", "\n", "use_boundary_4", "=", "False", ",", "\n", "use_boundary_8", "=", "True", ",", "\n", "use_boundary_16", "=", "False", ",", "\n", "use_conv_last", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "STDCSeg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "use_boundary_2", "=", "use_boundary_2", "\n", "self", ".", "use_boundary_4", "=", "use_boundary_4", "\n", "self", ".", "use_boundary_8", "=", "use_boundary_8", "\n", "self", ".", "use_boundary_16", "=", "use_boundary_16", "\n", "self", ".", "cp", "=", "ContextPath", "(", "backbone", ",", "use_conv_last", "=", "use_conv_last", ")", "\n", "self", ".", "ffm", "=", "FeatureFusionModule", "(", "384", ",", "256", ")", "\n", "self", ".", "conv_out", "=", "SegHead", "(", "256", ",", "256", ",", "num_classes", ")", "\n", "self", ".", "conv_out8", "=", "SegHead", "(", "128", ",", "64", ",", "num_classes", ")", "\n", "self", ".", "conv_out16", "=", "SegHead", "(", "128", ",", "64", ",", "num_classes", ")", "\n", "self", ".", "conv_out_sp16", "=", "SegHead", "(", "512", ",", "64", ",", "1", ")", "\n", "self", ".", "conv_out_sp8", "=", "SegHead", "(", "256", ",", "64", ",", "1", ")", "\n", "self", ".", "conv_out_sp4", "=", "SegHead", "(", "64", ",", "64", ",", "1", ")", "\n", "self", ".", "conv_out_sp2", "=", "SegHead", "(", "32", ",", "64", ",", "1", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.STDCSeg.forward": [[70, 105], ["stdcseg.STDCSeg.cp", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "stdcseg.STDCSeg.ffm", "stdcseg.STDCSeg.conv_out", "stdcseg.STDCSeg.conv_out8", "stdcseg.STDCSeg.conv_out16", "stdcseg.STDCSeg.ffm", "stdcseg.STDCSeg.conv_out", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "stdcseg.STDCSeg.conv_out_sp2", "logit_list.append", "stdcseg.STDCSeg.conv_out_sp4", "logit_list.append", "stdcseg.STDCSeg.conv_out_sp8", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_hw", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", "\n", "feat_res2", ",", "feat_res4", ",", "feat_res8", ",", "_", ",", "feat_cp8", ",", "feat_cp16", "=", "self", ".", "cp", "(", "x", ")", "\n", "\n", "logit_list", "=", "[", "]", "\n", "if", "self", ".", "training", ":", "\n", "            ", "feat_fuse", "=", "self", ".", "ffm", "(", "feat_res8", ",", "feat_cp8", ")", "\n", "feat_out", "=", "self", ".", "conv_out", "(", "feat_fuse", ")", "\n", "feat_out8", "=", "self", ".", "conv_out8", "(", "feat_cp8", ")", "\n", "feat_out16", "=", "self", ".", "conv_out16", "(", "feat_cp16", ")", "\n", "\n", "logit_list", "=", "[", "feat_out", ",", "feat_out8", ",", "feat_out16", "]", "\n", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "x", ",", "x_hw", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "for", "x", "in", "logit_list", "\n", "]", "\n", "\n", "if", "self", ".", "use_boundary_2", ":", "\n", "                ", "feat_out_sp2", "=", "self", ".", "conv_out_sp2", "(", "feat_res2", ")", "\n", "logit_list", ".", "append", "(", "feat_out_sp2", ")", "\n", "", "if", "self", ".", "use_boundary_4", ":", "\n", "                ", "feat_out_sp4", "=", "self", ".", "conv_out_sp4", "(", "feat_res4", ")", "\n", "logit_list", ".", "append", "(", "feat_out_sp4", ")", "\n", "", "if", "self", ".", "use_boundary_8", ":", "\n", "                ", "feat_out_sp8", "=", "self", ".", "conv_out_sp8", "(", "feat_res8", ")", "\n", "logit_list", ".", "append", "(", "feat_out_sp8", ")", "\n", "", "", "else", ":", "\n", "            ", "feat_fuse", "=", "self", ".", "ffm", "(", "feat_res8", ",", "feat_cp8", ")", "\n", "feat_out", "=", "self", ".", "conv_out", "(", "feat_fuse", ")", "\n", "feat_out", "=", "F", ".", "interpolate", "(", "\n", "feat_out", ",", "x_hw", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "logit_list", "=", "[", "feat_out", "]", "\n", "\n", "", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.STDCSeg.init_weight": [[106, 109], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.SegHead.__init__": [[112, 118], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_chan", ",", "mid_chan", ",", "n_classes", ")", ":", "\n", "        ", "super", "(", "SegHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_chan", ",", "mid_chan", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_out", "=", "nn", ".", "Conv2D", "(", "\n", "mid_chan", ",", "n_classes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.SegHead.forward": [[119, 123], ["stdcseg.SegHead.conv", "stdcseg.SegHead.conv_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_out", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.AttentionRefinementModule.__init__": [[126, 134], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_chan", ",", "out_chan", ")", ":", "\n", "        ", "super", "(", "AttentionRefinementModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_chan", ",", "out_chan", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_atten", "=", "nn", ".", "Conv2D", "(", "\n", "out_chan", ",", "out_chan", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "None", ")", "\n", "self", ".", "bn_atten", "=", "nn", ".", "BatchNorm2D", "(", "out_chan", ")", "\n", "self", ".", "sigmoid_atten", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.AttentionRefinementModule.forward": [[135, 143], ["stdcseg.AttentionRefinementModule.conv", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "stdcseg.AttentionRefinementModule.conv_atten", "stdcseg.AttentionRefinementModule.bn_atten", "stdcseg.AttentionRefinementModule.sigmoid_atten", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat", "=", "self", ".", "conv", "(", "x", ")", "\n", "atten", "=", "F", ".", "adaptive_avg_pool2d", "(", "feat", ",", "1", ")", "\n", "atten", "=", "self", ".", "conv_atten", "(", "atten", ")", "\n", "atten", "=", "self", ".", "bn_atten", "(", "atten", ")", "\n", "atten", "=", "self", ".", "sigmoid_atten", "(", "atten", ")", "\n", "out", "=", "paddle", ".", "multiply", "(", "feat", ",", "atten", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.ContextPath.__init__": [[146, 160], ["paddle.Layer.__init__", "stdcseg.AttentionRefinementModule", "stdcseg.AttentionRefinementModule", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "use_conv_last", "=", "False", ")", ":", "\n", "        ", "super", "(", "ContextPath", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "arm16", "=", "AttentionRefinementModule", "(", "512", ",", "128", ")", "\n", "inplanes", "=", "1024", "\n", "if", "use_conv_last", ":", "\n", "            ", "inplanes", "=", "1024", "\n", "", "self", ".", "arm32", "=", "AttentionRefinementModule", "(", "inplanes", ",", "128", ")", "\n", "self", ".", "conv_head32", "=", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_head16", "=", "layers", ".", "ConvBNReLU", "(", "\n", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_avg", "=", "layers", ".", "ConvBNReLU", "(", "\n", "inplanes", ",", "128", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.ContextPath.forward": [[161, 183], ["stdcseg.ContextPath.backbone", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "stdcseg.ContextPath.conv_avg", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "stdcseg.ContextPath.arm32", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "stdcseg.ContextPath.conv_head32", "stdcseg.ContextPath.arm16", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "stdcseg.ContextPath.conv_head16", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat2", ",", "feat4", ",", "feat8", ",", "feat16", ",", "feat32", "=", "self", ".", "backbone", "(", "x", ")", "\n", "\n", "feat8_hw", "=", "paddle", ".", "shape", "(", "feat8", ")", "[", "2", ":", "]", "\n", "feat16_hw", "=", "paddle", ".", "shape", "(", "feat16", ")", "[", "2", ":", "]", "\n", "feat32_hw", "=", "paddle", ".", "shape", "(", "feat32", ")", "[", "2", ":", "]", "\n", "\n", "avg", "=", "F", ".", "adaptive_avg_pool2d", "(", "feat32", ",", "1", ")", "\n", "avg", "=", "self", ".", "conv_avg", "(", "avg", ")", "\n", "avg_up", "=", "F", ".", "interpolate", "(", "avg", ",", "feat32_hw", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "feat32_arm", "=", "self", ".", "arm32", "(", "feat32", ")", "\n", "feat32_sum", "=", "feat32_arm", "+", "avg_up", "\n", "feat32_up", "=", "F", ".", "interpolate", "(", "feat32_sum", ",", "feat16_hw", ",", "mode", "=", "'nearest'", ")", "\n", "feat32_up", "=", "self", ".", "conv_head32", "(", "feat32_up", ")", "\n", "\n", "feat16_arm", "=", "self", ".", "arm16", "(", "feat16", ")", "\n", "feat16_sum", "=", "feat16_arm", "+", "feat32_up", "\n", "feat16_up", "=", "F", ".", "interpolate", "(", "feat16_sum", ",", "feat8_hw", ",", "mode", "=", "'nearest'", ")", "\n", "feat16_up", "=", "self", ".", "conv_head16", "(", "feat16_up", ")", "\n", "\n", "return", "feat2", ",", "feat4", ",", "feat8", ",", "feat16", ",", "feat16_up", ",", "feat32_up", "# x8, x16", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.FeatureFusionModule.__init__": [[186, 206], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_chan", ",", "out_chan", ")", ":", "\n", "        ", "super", "(", "FeatureFusionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "convblk", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_chan", ",", "out_chan", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "\n", "out_chan", ",", "\n", "out_chan", "//", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "None", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "\n", "out_chan", "//", "4", ",", "\n", "out_chan", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "None", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.stdcseg.FeatureFusionModule.forward": [[207, 218], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "stdcseg.FeatureFusionModule.convblk", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "stdcseg.FeatureFusionModule.conv1", "stdcseg.FeatureFusionModule.relu", "stdcseg.FeatureFusionModule.conv2", "stdcseg.FeatureFusionModule.sigmoid", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "fsp", ",", "fcp", ")", ":", "\n", "        ", "fcat", "=", "paddle", ".", "concat", "(", "[", "fsp", ",", "fcp", "]", ",", "axis", "=", "1", ")", "\n", "feat", "=", "self", ".", "convblk", "(", "fcat", ")", "\n", "atten", "=", "F", ".", "adaptive_avg_pool2d", "(", "feat", ",", "1", ")", "\n", "atten", "=", "self", ".", "conv1", "(", "atten", ")", "\n", "atten", "=", "self", ".", "relu", "(", "atten", ")", "\n", "atten", "=", "self", ".", "conv2", "(", "atten", ")", "\n", "atten", "=", "self", ".", "sigmoid", "(", "atten", ")", "\n", "feat_atten", "=", "paddle", ".", "multiply", "(", "feat", ",", "atten", ")", "\n", "feat_out", "=", "feat_atten", "+", "feat", "\n", "return", "feat_out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fastfcn.FastFCN.__init__": [[46, 108], ["paddle.Layer.__init__", "fastfcn.EncModule", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "fastfcn.FastFCN.init_weight", "paddleseg.models.layers.JPU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.AuxLayer", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "num_codes", "=", "32", ",", "\n", "mid_channels", "=", "512", ",", "\n", "use_jpu", "=", "True", ",", "\n", "aux_loss", "=", "True", ",", "\n", "use_se_loss", "=", "True", ",", "\n", "add_lateral", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_lateral", "=", "add_lateral", "\n", "self", ".", "num_codes", "=", "num_codes", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "use_jpu", "=", "use_jpu", "\n", "in_channels", "=", "self", ".", "backbone", ".", "feat_channels", "\n", "\n", "if", "use_jpu", ":", "\n", "            ", "self", ".", "jpu_layer", "=", "layers", ".", "JPU", "(", "in_channels", ",", "mid_channels", ")", "\n", "in_channels", "[", "-", "1", "]", "=", "mid_channels", "*", "4", "\n", "self", ".", "bottleneck", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "[", "-", "1", "]", ",", "\n", "mid_channels", ",", "\n", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ",", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bottleneck", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "[", "-", "1", "]", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", ")", "\n", "", "if", "self", ".", "add_lateral", ":", "\n", "            ", "self", ".", "lateral_convs", "=", "nn", ".", "LayerList", "(", "[", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "[", "0", "]", ",", "mid_channels", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "[", "1", "]", ",", "mid_channels", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "]", ")", "\n", "\n", "self", ".", "fusion", "=", "layers", ".", "ConvBNReLU", "(", "\n", "3", "*", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", ")", "\n", "\n", "", "self", ".", "enc_module", "=", "EncModule", "(", "mid_channels", ",", "num_codes", ")", "\n", "self", ".", "cls_seg", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "num_classes", ",", "1", ")", "\n", "\n", "self", ".", "aux_loss", "=", "aux_loss", "\n", "if", "self", ".", "aux_loss", ":", "\n", "            ", "self", ".", "fcn_head", "=", "layers", ".", "AuxLayer", "(", "in_channels", "[", "-", "2", "]", ",", "mid_channels", ",", "\n", "num_classes", ")", "\n", "\n", "", "self", ".", "use_se_loss", "=", "use_se_loss", "\n", "if", "use_se_loss", ":", "\n", "            ", "self", ".", "se_layer", "=", "nn", ".", "Linear", "(", "mid_channels", ",", "num_classes", ")", "\n", "\n", "", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fastfcn.FastFCN.init_weight": [[109, 112], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fastfcn.FastFCN.forward": [[113, 148], ["fastfcn.FastFCN.backbone", "fastfcn.FastFCN.bottleneck", "fastfcn.FastFCN.enc_module", "fastfcn.FastFCN.cls_seg", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "fastfcn.FastFCN.jpu_layer", "enumerate", "fastfcn.FastFCN.fusion", "fastfcn.FastFCN.fcn_head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "output.append", "laterals.append", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "fastfcn.FastFCN.se_layer", "output.append", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "lateral_conv", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pfpnnet.PFPNHead.cls_seg", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.fusion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "imsize", "=", "paddle", ".", "shape", "(", "inputs", ")", "[", "2", ":", "]", "\n", "feats", "=", "self", ".", "backbone", "(", "inputs", ")", "\n", "if", "self", ".", "use_jpu", ":", "\n", "            ", "feats", "=", "self", ".", "jpu_layer", "(", "*", "feats", ")", "\n", "\n", "", "fcn_feat", "=", "feats", "[", "2", "]", "\n", "\n", "feat", "=", "self", ".", "bottleneck", "(", "feats", "[", "-", "1", "]", ")", "\n", "if", "self", ".", "add_lateral", ":", "\n", "            ", "laterals", "=", "[", "]", "\n", "for", "i", ",", "lateral_conv", "in", "enumerate", "(", "self", ".", "lateral_convs", ")", ":", "\n", "                ", "laterals", ".", "append", "(", "\n", "F", ".", "interpolate", "(", "\n", "lateral_conv", "(", "feats", "[", "i", "]", ")", ",", "\n", "size", "=", "paddle", ".", "shape", "(", "feat", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", ")", "\n", "", "feat", "=", "self", ".", "fusion", "(", "paddle", ".", "concat", "(", "[", "feat", ",", "*", "laterals", "]", ",", "1", ")", ")", "\n", "", "encode_feat", ",", "feat", "=", "self", ".", "enc_module", "(", "feat", ")", "\n", "out", "=", "self", ".", "cls_seg", "(", "feat", ")", "\n", "out", "=", "F", ".", "interpolate", "(", "\n", "out", ",", "size", "=", "imsize", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "output", "=", "[", "out", "]", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "fcn_out", "=", "self", ".", "fcn_head", "(", "fcn_feat", ")", "\n", "fcn_out", "=", "F", ".", "interpolate", "(", "\n", "fcn_out", ",", "size", "=", "imsize", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "output", ".", "append", "(", "fcn_out", ")", "\n", "if", "self", ".", "use_se_loss", ":", "\n", "                ", "se_out", "=", "self", ".", "se_layer", "(", "encode_feat", ")", "\n", "output", ".", "append", "(", "se_out", ")", "\n", "", "return", "output", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fastfcn.Encoding.__init__": [[151, 162], ["paddle.Layer.__init__", "fastfcn.Encoding.create_parameter", "fastfcn.Encoding.create_parameter", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "num_codes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channels", ",", "self", ".", "num_codes", "=", "channels", ",", "num_codes", "\n", "\n", "std", "=", "1", "/", "(", "(", "channels", "*", "num_codes", ")", "**", "0.5", ")", "\n", "self", ".", "codewords", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "num_codes", ",", "channels", ")", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "std", ",", "std", ")", ",", ")", "\n", "self", ".", "scale", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "num_codes", ",", ")", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "1", ",", "0", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fastfcn.Encoding.scaled_l2": [[163, 172], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "scale.reshape", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "codewords.reshape", "x.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "scaled_l2", "(", "self", ",", "x", ",", "codewords", ",", "scale", ")", ":", "\n", "        ", "num_codes", ",", "channels", "=", "paddle", ".", "shape", "(", "codewords", ")", "\n", "reshaped_scale", "=", "scale", ".", "reshape", "(", "[", "1", ",", "1", ",", "num_codes", "]", ")", "\n", "expanded_x", "=", "paddle", ".", "tile", "(", "x", ".", "unsqueeze", "(", "2", ")", ",", "[", "1", ",", "1", ",", "num_codes", ",", "1", "]", ")", "\n", "reshaped_codewords", "=", "codewords", ".", "reshape", "(", "[", "1", ",", "1", ",", "num_codes", ",", "channels", "]", ")", "\n", "\n", "scaled_l2_norm", "=", "reshaped_scale", "*", "(", "\n", "expanded_x", "-", "reshaped_codewords", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "axis", "=", "3", ")", "\n", "return", "scaled_l2_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fastfcn.Encoding.aggregate": [[173, 182], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "codewords.reshape", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "x.unsqueeze", "assignment_weights.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "aggregate", "(", "self", ",", "assignment_weights", ",", "x", ",", "codewords", ")", ":", "\n", "        ", "num_codes", ",", "channels", "=", "paddle", ".", "shape", "(", "codewords", ")", "\n", "reshaped_codewords", "=", "codewords", ".", "reshape", "(", "[", "1", ",", "1", ",", "num_codes", ",", "channels", "]", ")", "\n", "expanded_x", "=", "paddle", ".", "tile", "(", "\n", "x", ".", "unsqueeze", "(", "2", ")", ",", "\n", "[", "1", ",", "1", ",", "num_codes", ",", "1", "]", ",", ")", "\n", "encoded_feat", "=", "(", "assignment_weights", ".", "unsqueeze", "(", "3", ")", "*", "\n", "(", "expanded_x", "-", "reshaped_codewords", ")", ")", ".", "sum", "(", "axis", "=", "1", ")", "\n", "return", "encoded_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fastfcn.Encoding.forward": [[183, 199], ["x.reshape().transpose.reshape().transpose.reshape().transpose", "paddle.softmax", "paddle.softmax", "paddle.softmax", "fastfcn.Encoding.aggregate", "encoded_feat.reshape.reshape.reshape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "fastfcn.Encoding.scaled_l2", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "x.reshape().transpose.reshape().transpose.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.Encoding.aggregate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.Encoding.scaled_l2", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_dims", "=", "x", ".", "ndim", "\n", "assert", "x_dims", "==", "4", ",", "\"The dimension of input tensor must equal 4, but got {}.\"", ".", "format", "(", "\n", "x_dims", ")", "\n", "assert", "paddle", ".", "shape", "(", "\n", "x", "\n", ")", "[", "1", "]", "==", "self", ".", "channels", ",", "\"Encoding channels error, excepted {} but got {}.\"", ".", "format", "(", "\n", "self", ".", "channels", ",", "paddle", ".", "shape", "(", "x", ")", "[", "1", "]", ")", "\n", "batch_size", "=", "paddle", ".", "shape", "(", "x", ")", "[", "0", "]", "\n", "x", "=", "x", ".", "reshape", "(", "[", "batch_size", ",", "self", ".", "channels", ",", "-", "1", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "assignment_weights", "=", "F", ".", "softmax", "(", "\n", "self", ".", "scaled_l2", "(", "x", ",", "self", ".", "codewords", ",", "self", ".", "scale", ")", ",", "axis", "=", "2", ")", "\n", "\n", "encoded_feat", "=", "self", ".", "aggregate", "(", "assignment_weights", ",", "x", ",", "self", ".", "codewords", ")", "\n", "encoded_feat", "=", "encoded_feat", ".", "reshape", "(", "[", "batch_size", ",", "self", ".", "num_codes", ",", "-", "1", "]", ")", "\n", "return", "encoded_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fastfcn.EncModule.__init__": [[202, 216], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "fastfcn.Encoding", "paddle.BatchNorm1D", "paddle.BatchNorm1D", "paddle.BatchNorm1D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "num_codes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoding_project", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "\n", "in_channels", ",", "\n", "1", ",", ")", "\n", "self", ".", "encoding", "=", "nn", ".", "Sequential", "(", "\n", "Encoding", "(", "\n", "channels", "=", "in_channels", ",", "num_codes", "=", "num_codes", ")", ",", "\n", "nn", ".", "BatchNorm1D", "(", "num_codes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_channels", ",", "in_channels", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.fastfcn.EncModule.forward": [[217, 225], ["fastfcn.EncModule.encoding_project", "fastfcn.EncModule.encoding().mean", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "fastfcn.EncModule.fc", "fastfcn.EncModule.reshape", "paddle.relu", "paddle.relu", "paddle.relu", "fastfcn.EncModule.encoding"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "encoding_projection", "=", "self", ".", "encoding_project", "(", "x", ")", "\n", "encoding_feat", "=", "self", ".", "encoding", "(", "encoding_projection", ")", ".", "mean", "(", "axis", "=", "1", ")", "\n", "batch_size", ",", "channels", ",", "_", ",", "_", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "gamma", "=", "self", ".", "fc", "(", "encoding_feat", ")", "\n", "y", "=", "gamma", ".", "reshape", "(", "[", "batch_size", ",", "channels", ",", "1", ",", "1", "]", ")", "\n", "output", "=", "F", ".", "relu", "(", "x", "+", "x", "*", "y", ")", "\n", "return", "encoding_feat", ",", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.AttentionUNet.__init__": [[41, 70], ["paddle.Layer.__init__", "attention_unet.Encoder", "numpy.array", "attention_unet.UpConv", "attention_unet.AttentionBlock", "attention_unet.ConvBlock", "attention_unet.UpConv", "attention_unet.AttentionBlock", "attention_unet.ConvBlock", "attention_unet.UpConv", "attention_unet.AttentionBlock", "attention_unet.ConvBlock", "attention_unet.UpConv", "attention_unet.AttentionBlock", "attention_unet.ConvBlock", "paddle.Conv2D", "paddle.Conv2D", "attention_unet.AttentionUNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "n_channels", "=", "3", "\n", "self", ".", "encoder", "=", "Encoder", "(", "n_channels", ",", "[", "64", ",", "128", ",", "256", ",", "512", "]", ")", "\n", "filters", "=", "np", ".", "array", "(", "[", "64", ",", "128", ",", "256", ",", "512", ",", "1024", "]", ")", "\n", "self", ".", "up5", "=", "UpConv", "(", "ch_in", "=", "filters", "[", "4", "]", ",", "ch_out", "=", "filters", "[", "3", "]", ")", "\n", "self", ".", "att5", "=", "AttentionBlock", "(", "\n", "F_g", "=", "filters", "[", "3", "]", ",", "F_l", "=", "filters", "[", "3", "]", ",", "F_out", "=", "filters", "[", "2", "]", ")", "\n", "self", ".", "up_conv5", "=", "ConvBlock", "(", "ch_in", "=", "filters", "[", "4", "]", ",", "ch_out", "=", "filters", "[", "3", "]", ")", "\n", "\n", "self", ".", "up4", "=", "UpConv", "(", "ch_in", "=", "filters", "[", "3", "]", ",", "ch_out", "=", "filters", "[", "2", "]", ")", "\n", "self", ".", "att4", "=", "AttentionBlock", "(", "\n", "F_g", "=", "filters", "[", "2", "]", ",", "F_l", "=", "filters", "[", "2", "]", ",", "F_out", "=", "filters", "[", "1", "]", ")", "\n", "self", ".", "up_conv4", "=", "ConvBlock", "(", "ch_in", "=", "filters", "[", "3", "]", ",", "ch_out", "=", "filters", "[", "2", "]", ")", "\n", "\n", "self", ".", "up3", "=", "UpConv", "(", "ch_in", "=", "filters", "[", "2", "]", ",", "ch_out", "=", "filters", "[", "1", "]", ")", "\n", "self", ".", "att3", "=", "AttentionBlock", "(", "\n", "F_g", "=", "filters", "[", "1", "]", ",", "F_l", "=", "filters", "[", "1", "]", ",", "F_out", "=", "filters", "[", "0", "]", ")", "\n", "self", ".", "up_conv3", "=", "ConvBlock", "(", "ch_in", "=", "filters", "[", "2", "]", ",", "ch_out", "=", "filters", "[", "1", "]", ")", "\n", "\n", "self", ".", "up2", "=", "UpConv", "(", "ch_in", "=", "filters", "[", "1", "]", ",", "ch_out", "=", "filters", "[", "0", "]", ")", "\n", "self", ".", "att2", "=", "AttentionBlock", "(", "\n", "F_g", "=", "filters", "[", "0", "]", ",", "F_l", "=", "filters", "[", "0", "]", ",", "F_out", "=", "filters", "[", "0", "]", "//", "2", ")", "\n", "self", ".", "up_conv2", "=", "ConvBlock", "(", "ch_in", "=", "filters", "[", "1", "]", ",", "ch_out", "=", "filters", "[", "0", "]", ")", "\n", "\n", "self", ".", "conv_1x1", "=", "nn", ".", "Conv2D", "(", "\n", "filters", "[", "0", "]", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.AttentionUNet.forward": [[71, 96], ["attention_unet.AttentionUNet.encoder", "attention_unet.AttentionUNet.up5", "attention_unet.AttentionUNet.att5", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "attention_unet.AttentionUNet.up_conv5", "attention_unet.AttentionUNet.up4", "attention_unet.AttentionUNet.att4", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "attention_unet.AttentionUNet.up_conv4", "attention_unet.AttentionUNet.up3", "attention_unet.AttentionUNet.att3", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "attention_unet.AttentionUNet.up_conv3", "attention_unet.AttentionUNet.up2", "attention_unet.AttentionUNet.att2", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "attention_unet.AttentionUNet.up_conv2", "attention_unet.AttentionUNet.conv_1x1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x5", ",", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ")", "=", "self", ".", "encoder", "(", "x", ")", "\n", "d5", "=", "self", ".", "up5", "(", "x5", ")", "\n", "x4", "=", "self", ".", "att5", "(", "g", "=", "d5", ",", "x", "=", "x4", ")", "\n", "d5", "=", "paddle", ".", "concat", "(", "[", "x4", ",", "d5", "]", ",", "axis", "=", "1", ")", "\n", "d5", "=", "self", ".", "up_conv5", "(", "d5", ")", "\n", "\n", "d4", "=", "self", ".", "up4", "(", "d5", ")", "\n", "x3", "=", "self", ".", "att4", "(", "g", "=", "d4", ",", "x", "=", "x3", ")", "\n", "d4", "=", "paddle", ".", "concat", "(", "(", "x3", ",", "d4", ")", ",", "axis", "=", "1", ")", "\n", "d4", "=", "self", ".", "up_conv4", "(", "d4", ")", "\n", "\n", "d3", "=", "self", ".", "up3", "(", "d4", ")", "\n", "x2", "=", "self", ".", "att3", "(", "g", "=", "d3", ",", "x", "=", "x2", ")", "\n", "d3", "=", "paddle", ".", "concat", "(", "(", "x2", ",", "d3", ")", ",", "axis", "=", "1", ")", "\n", "d3", "=", "self", ".", "up_conv3", "(", "d3", ")", "\n", "\n", "d2", "=", "self", ".", "up2", "(", "d3", ")", "\n", "x1", "=", "self", ".", "att2", "(", "g", "=", "d2", ",", "x", "=", "x1", ")", "\n", "d2", "=", "paddle", ".", "concat", "(", "(", "x1", ",", "d2", ")", ",", "axis", "=", "1", ")", "\n", "d2", "=", "self", ".", "up_conv2", "(", "d2", ")", "\n", "\n", "logit", "=", "self", ".", "conv_1x1", "(", "d2", ")", "\n", "logit_list", "=", "[", "logit", "]", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.AttentionUNet.init_weight": [[97, 100], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.AttentionBlock.__init__": [[103, 122], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "F_g", ",", "F_l", ",", "F_out", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "W_g", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "F_g", ",", "F_out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "F_out", ")", ")", "\n", "\n", "self", ".", "W_x", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "F_l", ",", "F_out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "F_out", ")", ")", "\n", "\n", "self", ".", "psi", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "F_out", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.AttentionBlock.forward": [[123, 130], ["attention_unet.AttentionBlock.W_g", "attention_unet.AttentionBlock.W_x", "attention_unet.AttentionBlock.relu", "attention_unet.AttentionBlock.psi"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g", ",", "x", ")", ":", "\n", "        ", "g1", "=", "self", ".", "W_g", "(", "g", ")", "\n", "x1", "=", "self", ".", "W_x", "(", "x", ")", "\n", "psi", "=", "self", ".", "relu", "(", "g1", "+", "x1", ")", "\n", "psi", "=", "self", ".", "psi", "(", "psi", ")", "\n", "res", "=", "x", "*", "psi", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.UpConv.__init__": [[133, 142], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ",", "ch_out", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Upsample", "(", "\n", "scale_factor", "=", "2", ",", "mode", "=", "\"bilinear\"", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "ch_in", ",", "ch_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "ch_out", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.UpConv.forward": [[143, 145], ["attention_unet.UpConv.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "up", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.Encoder.__init__": [[148, 157], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "attention_unet.Encoder.down_sampling"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.Encoder.down_sampling"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "filters", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "double_conv", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "input_channels", ",", "64", ",", "3", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "64", ",", "64", ",", "3", ")", ")", "\n", "down_channels", "=", "filters", "\n", "self", ".", "down_sample_list", "=", "nn", ".", "LayerList", "(", "[", "\n", "self", ".", "down_sampling", "(", "channel", ",", "channel", "*", "2", ")", "\n", "for", "channel", "in", "down_channels", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.Encoder.down_sampling": [[159, 165], ["modules.append", "modules.append", "modules.append", "paddle.Sequential", "paddle.Sequential", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "down_sampling", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "modules", "=", "[", "]", "\n", "modules", ".", "append", "(", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "modules", ".", "append", "(", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "out_channels", ",", "3", ")", ")", "\n", "modules", ".", "append", "(", "layers", ".", "ConvBNReLU", "(", "out_channels", ",", "out_channels", ",", "3", ")", ")", "\n", "return", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.Encoder.forward": [[166, 173], ["attention_unet.Encoder.double_conv", "short_cuts.append", "down_sample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "short_cuts", "=", "[", "]", "\n", "x", "=", "self", ".", "double_conv", "(", "x", ")", "\n", "for", "down_sample", "in", "self", ".", "down_sample_list", ":", "\n", "            ", "short_cuts", ".", "append", "(", "x", ")", "\n", "x", "=", "down_sample", "(", "x", ")", "\n", "", "return", "x", ",", "short_cuts", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.ConvBlock.__init__": [[176, 187], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ",", "ch_out", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "ch_in", ",", "ch_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "ch_out", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "ch_out", ",", "ch_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "ch_out", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.attention_unet.ConvBlock.forward": [[188, 190], ["attention_unet.ConvBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.ENCNet.__init__": [[44, 93], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "encnet.EncModule", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.AuxLayer", "encnet.ENCNet.init_weight", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBNReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "encnet.ENCNet.lateral_convs.append", "paddleseg.models.layers.ConvBNReLU", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "[", "1", ",", "2", ",", "3", "]", ",", "\n", "num_codes", "=", "32", ",", "\n", "mid_channels", "=", "512", ",", "\n", "use_se_loss", "=", "True", ",", "\n", "add_lateral", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_lateral", "=", "add_lateral", "\n", "self", ".", "num_codes", "=", "num_codes", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "in_channels", "=", "[", "\n", "self", ".", "backbone", ".", "feat_channels", "[", "index", "]", "for", "index", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "bottleneck", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "[", "-", "1", "]", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", ")", "\n", "if", "self", ".", "add_lateral", ":", "\n", "            ", "self", ".", "lateral_convs", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "in_ch", "in", "in_channels", "[", ":", "-", "1", "]", ":", "\n", "                ", "self", ".", "lateral_convs", ".", "append", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_ch", ",", "\n", "mid_channels", ",", "\n", "1", ",", ")", ")", "\n", "", "self", ".", "fusion", "=", "layers", ".", "ConvBNReLU", "(", "\n", "len", "(", "in_channels", ")", "*", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", ")", "\n", "\n", "", "self", ".", "enc_module", "=", "EncModule", "(", "mid_channels", ",", "num_codes", ")", "\n", "self", ".", "head", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "num_classes", ",", "1", ")", "\n", "\n", "self", ".", "fcn_head", "=", "layers", ".", "AuxLayer", "(", "self", ".", "backbone", ".", "feat_channels", "[", "2", "]", ",", "\n", "mid_channels", ",", "num_classes", ")", "\n", "\n", "self", ".", "use_se_loss", "=", "use_se_loss", "\n", "if", "use_se_loss", ":", "\n", "            ", "self", ".", "se_layer", "=", "nn", ".", "Linear", "(", "mid_channels", ",", "num_classes", ")", "\n", "\n", "", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.ENCNet.init_weight": [[94, 97], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.ENCNet.forward": [[98, 131], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "encnet.ENCNet.backbone", "encnet.ENCNet.bottleneck", "encnet.ENCNet.enc_module", "encnet.ENCNet.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "enumerate", "encnet.ENCNet.fusion", "encnet.ENCNet.fcn_head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "output.append", "laterals.append", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "encnet.ENCNet.se_layer", "output.append", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "lateral_conv", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.fusion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "paddle", ".", "shape", "(", "inputs", ")", "\n", "feats", "=", "self", ".", "backbone", "(", "inputs", ")", "\n", "fcn_feat", "=", "feats", "[", "2", "]", "\n", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "feat", "=", "self", ".", "bottleneck", "(", "feats", "[", "-", "1", "]", ")", "\n", "\n", "if", "self", ".", "add_lateral", ":", "\n", "            ", "laterals", "=", "[", "]", "\n", "for", "j", ",", "lateral_conv", "in", "enumerate", "(", "self", ".", "lateral_convs", ")", ":", "\n", "                ", "laterals", ".", "append", "(", "\n", "F", ".", "interpolate", "(", "\n", "lateral_conv", "(", "feats", "[", "j", "]", ")", ",", "\n", "size", "=", "paddle", ".", "shape", "(", "feat", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", ")", "\n", "", "feat", "=", "self", ".", "fusion", "(", "paddle", ".", "concat", "(", "[", "feat", ",", "*", "laterals", "]", ",", "1", ")", ")", "\n", "", "encode_feat", ",", "feat", "=", "self", ".", "enc_module", "(", "feat", ")", "\n", "out", "=", "self", ".", "head", "(", "feat", ")", "\n", "out", "=", "F", ".", "interpolate", "(", "\n", "out", ",", "size", "=", "[", "H", ",", "W", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "output", "=", "[", "out", "]", "\n", "if", "self", ".", "training", ":", "\n", "            ", "fcn_out", "=", "self", ".", "fcn_head", "(", "fcn_feat", ")", "\n", "fcn_out", "=", "F", ".", "interpolate", "(", "\n", "fcn_out", ",", "size", "=", "[", "H", ",", "W", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "output", ".", "append", "(", "fcn_out", ")", "\n", "if", "self", ".", "use_se_loss", ":", "\n", "                ", "se_out", "=", "self", ".", "se_layer", "(", "encode_feat", ")", "\n", "output", ".", "append", "(", "se_out", ")", "\n", "", "return", "output", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.Encoding.__init__": [[134, 146], ["paddle.Layer.__init__", "encnet.Encoding.create_parameter", "encnet.Encoding.create_parameter", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "num_codes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channels", ",", "self", ".", "num_codes", "=", "channels", ",", "num_codes", "\n", "\n", "std", "=", "1", "/", "(", "(", "channels", "*", "num_codes", ")", "**", "0.5", ")", "\n", "self", ".", "codewords", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "num_codes", ",", "channels", ")", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "std", ",", "std", ")", ",", ")", "\n", "self", ".", "scale", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "num_codes", ",", ")", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "1", ",", "0", ")", ",", ")", "\n", "self", ".", "channels", "=", "channels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.Encoding.scaled_l2": [[147, 157], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "scale.reshape", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "codewords.reshape", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "x.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "scaled_l2", "(", "self", ",", "x", ",", "codewords", ",", "scale", ")", ":", "\n", "        ", "num_codes", ",", "channels", "=", "paddle", ".", "shape", "(", "codewords", ")", "\n", "reshaped_scale", "=", "scale", ".", "reshape", "(", "[", "1", ",", "1", ",", "num_codes", "]", ")", "\n", "expanded_x", "=", "paddle", ".", "tile", "(", "x", ".", "unsqueeze", "(", "2", ")", ",", "[", "1", ",", "1", ",", "num_codes", ",", "1", "]", ")", "\n", "reshaped_codewords", "=", "codewords", ".", "reshape", "(", "[", "1", ",", "1", ",", "num_codes", ",", "channels", "]", ")", "\n", "\n", "scaled_l2_norm", "=", "paddle", ".", "multiply", "(", "\n", "reshaped_scale", ",", "\n", "(", "expanded_x", "-", "reshaped_codewords", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "axis", "=", "3", ")", ")", "\n", "return", "scaled_l2_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.Encoding.aggregate": [[158, 169], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "codewords.reshape", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.multiply().sum", "paddle.multiply().sum", "paddle.multiply().sum", "paddle.multiply().sum", "paddle.multiply().sum", "paddle.multiply().sum", "paddle.multiply().sum", "paddle.multiply().sum", "paddle.multiply().sum", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "x.unsqueeze", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "assignment_weights.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "aggregate", "(", "self", ",", "assignment_weights", ",", "x", ",", "codewords", ")", ":", "\n", "        ", "num_codes", ",", "channels", "=", "paddle", ".", "shape", "(", "codewords", ")", "\n", "reshaped_codewords", "=", "codewords", ".", "reshape", "(", "[", "1", ",", "1", ",", "num_codes", ",", "channels", "]", ")", "\n", "expanded_x", "=", "paddle", ".", "tile", "(", "x", ".", "unsqueeze", "(", "2", ")", ",", "[", "1", ",", "1", ",", "num_codes", ",", "1", "]", ")", "\n", "\n", "encoded_feat", "=", "paddle", ".", "multiply", "(", "\n", "assignment_weights", ".", "unsqueeze", "(", "3", ")", ",", "\n", "(", "expanded_x", "-", "reshaped_codewords", ")", ")", ".", "sum", "(", "axis", "=", "1", ")", "\n", "encoded_feat", "=", "paddle", ".", "reshape", "(", "encoded_feat", ",", "\n", "[", "-", "1", ",", "self", ".", "num_codes", ",", "self", ".", "channels", "]", ")", "\n", "return", "encoded_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.Encoding.forward": [[170, 184], ["x.reshape().transpose.reshape().transpose.reshape().transpose", "paddle.softmax", "paddle.softmax", "paddle.softmax", "encnet.Encoding.aggregate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "encnet.Encoding.scaled_l2", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "x.reshape().transpose.reshape().transpose.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.Encoding.aggregate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.Encoding.scaled_l2", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_dims", "=", "x", ".", "ndim", "\n", "assert", "x_dims", "==", "4", ",", "\"The dimension of input tensor must equal 4, but got {}.\"", ".", "format", "(", "\n", "x_dims", ")", "\n", "assert", "paddle", ".", "shape", "(", "\n", "x", "\n", ")", "[", "1", "]", "==", "self", ".", "channels", ",", "\"Encoding channels error, excepted {} but got {}.\"", ".", "format", "(", "\n", "self", ".", "channels", ",", "paddle", ".", "shape", "(", "x", ")", "[", "1", "]", ")", "\n", "batch_size", "=", "paddle", ".", "shape", "(", "x", ")", "[", "0", "]", "\n", "x", "=", "x", ".", "reshape", "(", "[", "batch_size", ",", "self", ".", "channels", ",", "-", "1", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "assignment_weights", "=", "F", ".", "softmax", "(", "\n", "self", ".", "scaled_l2", "(", "x", ",", "self", ".", "codewords", ",", "self", ".", "scale", ")", ",", "axis", "=", "2", ")", "\n", "encoded_feat", "=", "self", ".", "aggregate", "(", "assignment_weights", ",", "x", ",", "self", ".", "codewords", ")", "\n", "return", "encoded_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.EncModule.__init__": [[187, 202], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "encnet.Encoding", "paddle.BatchNorm1D", "paddle.BatchNorm1D", "paddle.BatchNorm1D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "num_codes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoding_project", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "\n", "in_channels", ",", "\n", "1", ",", ")", "\n", "self", ".", "encoding", "=", "nn", ".", "Sequential", "(", "\n", "Encoding", "(", "\n", "channels", "=", "in_channels", ",", "num_codes", "=", "num_codes", ")", ",", "\n", "nn", ".", "BatchNorm1D", "(", "num_codes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_channels", ",", "in_channels", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.encnet.EncModule.forward": [[203, 214], ["encnet.EncModule.encoding_project", "encnet.EncModule.encoding", "encoding_feat.mean.mean.mean", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "encnet.EncModule.fc", "encnet.EncModule.reshape", "paddle.relu", "paddle.relu", "paddle.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "encoding_projection", "=", "self", ".", "encoding_project", "(", "x", ")", "\n", "encoding_feat", "=", "self", ".", "encoding", "(", "encoding_projection", ")", "\n", "\n", "encoding_feat", "=", "encoding_feat", ".", "mean", "(", "axis", "=", "1", ")", "\n", "batch_size", ",", "_", ",", "_", ",", "_", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "\n", "gamma", "=", "self", ".", "fc", "(", "encoding_feat", ")", "\n", "y", "=", "gamma", ".", "reshape", "(", "[", "batch_size", ",", "self", ".", "in_channels", ",", "1", ",", "1", "]", ")", "\n", "output", "=", "F", ".", "relu", "(", "x", "+", "x", "*", "y", ")", "\n", "return", "encoding_feat", ",", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite.PPHumanSegLite.__init__": [[30, 73], ["paddle.Layer.__init__", "pphumanseg_lite._ConvBNReLU", "pphumanseg_lite._ConvBNReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "pphumanseg_lite._SeparableConvBNReLU", "pphumanseg_lite._SeparableConvBNReLU", "pphumanseg_lite._SeparableConvBNReLU", "pphumanseg_lite.PPHumanSegLite.init_weight", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual", "pphumanseg_lite.InvertedResidual"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "pretrained", "=", "None", ",", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "conv_bn0", "=", "_ConvBNReLU", "(", "3", ",", "36", ",", "3", ",", "2", ",", "1", ")", "\n", "self", ".", "conv_bn1", "=", "_ConvBNReLU", "(", "36", ",", "18", ",", "1", ",", "1", ",", "0", ")", "\n", "\n", "self", ".", "block1", "=", "nn", ".", "Sequential", "(", "\n", "InvertedResidual", "(", "\n", "36", ",", "stride", "=", "2", ",", "out_channels", "=", "72", ")", ",", "\n", "InvertedResidual", "(", "\n", "72", ",", "stride", "=", "1", ")", ",", "\n", "InvertedResidual", "(", "\n", "72", ",", "stride", "=", "1", ")", ",", "\n", "InvertedResidual", "(", "\n", "72", ",", "stride", "=", "1", ")", ")", "\n", "\n", "self", ".", "block2", "=", "nn", ".", "Sequential", "(", "\n", "InvertedResidual", "(", "\n", "72", ",", "stride", "=", "2", ")", ",", "\n", "InvertedResidual", "(", "\n", "144", ",", "stride", "=", "1", ")", ",", "\n", "InvertedResidual", "(", "\n", "144", ",", "stride", "=", "1", ")", ",", "\n", "InvertedResidual", "(", "\n", "144", ",", "stride", "=", "1", ")", ",", "\n", "InvertedResidual", "(", "\n", "144", ",", "stride", "=", "1", ")", ",", "\n", "InvertedResidual", "(", "\n", "144", ",", "stride", "=", "1", ")", ",", "\n", "InvertedResidual", "(", "\n", "144", ",", "stride", "=", "1", ")", ",", "\n", "InvertedResidual", "(", "\n", "144", ",", "stride", "=", "1", ")", ")", "\n", "\n", "self", ".", "depthwise_separable0", "=", "_SeparableConvBNReLU", "(", "144", ",", "64", ",", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "depthwise_separable1", "=", "_SeparableConvBNReLU", "(", "82", ",", "64", ",", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "depthwise_separable2", "=", "_SeparableConvBNReLU", "(", "\n", "64", ",", "self", ".", "num_classes", ",", "3", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite.PPHumanSegLite.forward": [[74, 103], ["pphumanseg_lite.PPHumanSegLite.conv_bn0", "pphumanseg_lite.PPHumanSegLite.conv_bn1", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "pphumanseg_lite.PPHumanSegLite.block1", "pphumanseg_lite.PPHumanSegLite.block2", "pphumanseg_lite.PPHumanSegLite.depthwise_separable0", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "pphumanseg_lite.PPHumanSegLite.depthwise_separable1", "pphumanseg_lite.PPHumanSegLite.depthwise_separable2", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# Encoder", "\n", "        ", "input_shape", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", "\n", "\n", "x", "=", "self", ".", "conv_bn0", "(", "x", ")", "# 1/2", "\n", "shortcut", "=", "self", ".", "conv_bn1", "(", "x", ")", "# shortcut", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "# 1/4", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "# 1/8", "\n", "x", "=", "self", ".", "block2", "(", "x", ")", "# 1/16", "\n", "\n", "# Decoder", "\n", "x", "=", "self", ".", "depthwise_separable0", "(", "x", ")", "\n", "shortcut_shape", "=", "paddle", ".", "shape", "(", "shortcut", ")", "[", "2", ":", "]", "\n", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "shortcut_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "x", "=", "[", "shortcut", ",", "x", "]", ",", "axis", "=", "1", ")", "\n", "x", "=", "self", ".", "depthwise_separable1", "(", "x", ")", "\n", "\n", "logit", "=", "self", ".", "depthwise_separable2", "(", "x", ")", "\n", "logit", "=", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "input_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "return", "[", "logit", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite.PPHumanSegLite.init_weight": [[104, 113], ["pphumanseg_lite.PPHumanSegLite.sublayers", "isinstance", "paddleseg.utils.utils.load_pretrained_model", "paddleseg.cvlibs.param_init.normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "normal_init", "(", "layer", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "layer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "layer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "layer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "", "", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite._ConvBNReLU.__init__": [[116, 139], ["paddle.Layer.__init__", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "groups", "=", "1", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "learning_rate", "=", "1", ",", "initializer", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ")", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "stride", "=", "stride", ",", "\n", "groups", "=", "groups", ",", "\n", "weight_attr", "=", "weight_attr", ",", "\n", "bias_attr", "=", "False", ",", "\n", "**", "kwargs", ")", "\n", "\n", "self", ".", "_batch_norm", "=", "layers", ".", "SyncBatchNorm", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite._ConvBNReLU.forward": [[140, 145], ["pphumanseg_lite._ConvBNReLU._conv", "pphumanseg_lite._ConvBNReLU._batch_norm", "paddle.relu", "paddle.relu", "paddle.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite._ConvBN.__init__": [[148, 171], ["paddle.Layer.__init__", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "groups", "=", "1", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "learning_rate", "=", "1", ",", "initializer", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ")", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "stride", "=", "stride", ",", "\n", "groups", "=", "groups", ",", "\n", "weight_attr", "=", "weight_attr", ",", "\n", "bias_attr", "=", "False", ",", "\n", "**", "kwargs", ")", "\n", "\n", "self", ".", "_batch_norm", "=", "layers", ".", "SyncBatchNorm", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite._ConvBN.forward": [[172, 176], ["pphumanseg_lite._ConvBN._conv", "pphumanseg_lite._ConvBN._batch_norm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite._SeparableConvBNReLU.__init__": [[179, 195], ["paddle.Layer.__init__", "pphumanseg_lite._ConvBN", "pphumanseg_lite._ConvBNReLU", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "depthwise_conv", "=", "_ConvBN", "(", "\n", "in_channels", ",", "\n", "out_channels", "=", "in_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "int", "(", "kernel_size", "/", "2", ")", ",", "\n", "groups", "=", "in_channels", ",", "\n", "**", "kwargs", ")", "\n", "self", ".", "piontwise_conv", "=", "_ConvBNReLU", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite._SeparableConvBNReLU.forward": [[196, 200], ["pphumanseg_lite._SeparableConvBNReLU.depthwise_conv", "pphumanseg_lite._SeparableConvBNReLU.piontwise_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "depthwise_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "piontwise_conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite.InvertedResidual.__init__": [[203, 223], ["paddle.Layer.__init__", "pphumanseg_lite._SeparableConvBNReLU", "pphumanseg_lite._ConvBNReLU", "pphumanseg_lite._SeparableConvBNReLU", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "stride", ",", "out_channels", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "stride", "==", "1", ":", "\n", "            ", "branch_channel", "=", "int", "(", "input_channels", "/", "2", ")", "\n", "", "else", ":", "\n", "            ", "branch_channel", "=", "input_channels", "\n", "\n", "", "if", "out_channels", "is", "None", ":", "\n", "            ", "self", ".", "in_channels", "=", "int", "(", "branch_channel", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "in_channels", "=", "int", "(", "out_channels", "/", "2", ")", "\n", "\n", "", "self", ".", "_depthwise_separable_0", "=", "_SeparableConvBNReLU", "(", "\n", "input_channels", ",", "self", ".", "in_channels", ",", "3", ",", "stride", "=", "stride", ")", "\n", "self", ".", "_conv", "=", "_ConvBNReLU", "(", "\n", "branch_channel", ",", "self", ".", "in_channels", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "_depthwise_separable_1", "=", "_SeparableConvBNReLU", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "in_channels", ",", "3", ",", "stride", "=", "stride", ")", "\n", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.pphumanseg_lite.InvertedResidual.forward": [[224, 243], ["pphumanseg_lite.InvertedResidual._conv", "pphumanseg_lite.InvertedResidual._depthwise_separable_1", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.split", "paddle.split", "paddle.split", "paddle.split", "paddle.split", "paddle.split", "paddle.split", "paddle.split", "paddle.split", "pphumanseg_lite.InvertedResidual._depthwise_separable_0"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "if", "self", ".", "stride", "==", "1", ":", "\n", "            ", "shortcut", ",", "branch", "=", "paddle", ".", "split", "(", "x", "=", "input", ",", "num_or_sections", "=", "2", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "branch", "=", "input", "\n", "shortcut", "=", "self", ".", "_depthwise_separable_0", "(", "input", ")", "\n", "\n", "", "branch_1x1", "=", "self", ".", "_conv", "(", "branch", ")", "\n", "branch_dw1x1", "=", "self", ".", "_depthwise_separable_1", "(", "branch_1x1", ")", "\n", "output", "=", "paddle", ".", "concat", "(", "x", "=", "[", "shortcut", ",", "branch_dw1x1", "]", ",", "axis", "=", "1", ")", "\n", "\n", "# channel shuffle", "\n", "out_shape", "=", "paddle", ".", "shape", "(", "output", ")", "\n", "h", ",", "w", "=", "out_shape", "[", "2", "]", ",", "out_shape", "[", "3", "]", "\n", "output", "=", "paddle", ".", "reshape", "(", "x", "=", "output", ",", "shape", "=", "[", "0", ",", "2", ",", "self", ".", "in_channels", ",", "h", ",", "w", "]", ")", "\n", "output", "=", "paddle", ".", "transpose", "(", "x", "=", "output", ",", "perm", "=", "[", "0", ",", "2", ",", "1", ",", "3", ",", "4", "]", ")", "\n", "output", "=", "paddle", ".", "reshape", "(", "x", "=", "output", ",", "shape", "=", "[", "0", ",", "2", "*", "self", ".", "in_channels", ",", "h", ",", "w", "]", ")", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.ANN.__init__": [[47, 70], ["paddle.Layer.__init__", "ann.ANNHead", "ann.ANN.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "2", ",", "3", ")", ",", "\n", "key_value_channels", "=", "256", ",", "\n", "inter_channels", "=", "512", ",", "\n", "psp_size", "=", "(", "1", ",", "3", ",", "6", ",", "8", ")", ",", "\n", "enable_auxiliary_loss", "=", "True", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "head", "=", "ANNHead", "(", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "key_value_channels", ",", "inter_channels", ",", "psp_size", ",", "\n", "enable_auxiliary_loss", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.ANN.forward": [[71, 80], ["ann.ANN.backbone", "ann.ANN.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.ANN.init_weight": [[82, 85], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.ANNHead.__init__": [[107, 155], ["paddle.Layer.__init__", "ann.AFNB", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.AuxLayer", "paddleseg.models.layers.ConvBNReLU", "ann.APNB"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone_indices", ",", "\n", "backbone_channels", ",", "\n", "key_value_channels", ",", "\n", "inter_channels", ",", "\n", "psp_size", ",", "\n", "enable_auxiliary_loss", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "low_in_channels", "=", "backbone_channels", "[", "0", "]", "\n", "high_in_channels", "=", "backbone_channels", "[", "1", "]", "\n", "\n", "self", ".", "fusion", "=", "AFNB", "(", "\n", "low_in_channels", "=", "low_in_channels", ",", "\n", "high_in_channels", "=", "high_in_channels", ",", "\n", "out_channels", "=", "high_in_channels", ",", "\n", "key_channels", "=", "key_value_channels", ",", "\n", "value_channels", "=", "key_value_channels", ",", "\n", "dropout_prob", "=", "0.05", ",", "\n", "repeat_sizes", "=", "(", "[", "1", "]", ")", ",", "\n", "psp_size", "=", "psp_size", ")", "\n", "\n", "self", ".", "context", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "high_in_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "APNB", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "key_channels", "=", "key_value_channels", ",", "\n", "value_channels", "=", "key_value_channels", ",", "\n", "dropout_prob", "=", "0.05", ",", "\n", "repeat_sizes", "=", "(", "[", "1", "]", ")", ",", "\n", "psp_size", "=", "psp_size", ")", ")", "\n", "\n", "self", ".", "cls", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "inter_channels", ",", "out_channels", "=", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "auxlayer", "=", "layers", ".", "AuxLayer", "(", "\n", "in_channels", "=", "low_in_channels", ",", "\n", "inter_channels", "=", "low_in_channels", "//", "2", ",", "\n", "out_channels", "=", "num_classes", ",", "\n", "dropout_prob", "=", "0.05", ")", "\n", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "enable_auxiliary_loss", "=", "enable_auxiliary_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.ANNHead.forward": [[156, 170], ["ann.ANNHead.fusion", "ann.ANNHead.context", "ann.ANNHead.cls", "logit_list.append", "ann.ANNHead.auxlayer", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.fusion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "low_level_x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "high_level_x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "1", "]", "]", "\n", "x", "=", "self", ".", "fusion", "(", "low_level_x", ",", "high_level_x", ")", "\n", "x", "=", "self", ".", "context", "(", "x", ")", "\n", "logit", "=", "self", ".", "cls", "(", "x", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "\n", "if", "self", ".", "enable_auxiliary_loss", ":", "\n", "            ", "auxiliary_logit", "=", "self", ".", "auxlayer", "(", "low_level_x", ")", "\n", "logit_list", ".", "append", "(", "auxiliary_logit", ")", "\n", "\n", "", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.AFNB.__init__": [[187, 209], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBN", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "ann.SelfAttentionBlock_AFNB"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "low_in_channels", ",", "\n", "high_in_channels", ",", "\n", "out_channels", ",", "\n", "key_channels", ",", "\n", "value_channels", ",", "\n", "dropout_prob", ",", "\n", "repeat_sizes", "=", "(", "[", "1", "]", ")", ",", "\n", "psp_size", "=", "(", "1", ",", "3", ",", "6", ",", "8", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "psp_size", "=", "psp_size", "\n", "self", ".", "stages", "=", "nn", ".", "LayerList", "(", "[", "\n", "SelfAttentionBlock_AFNB", "(", "low_in_channels", ",", "high_in_channels", ",", "\n", "key_channels", ",", "value_channels", ",", "out_channels", ",", "\n", "size", ")", "for", "size", "in", "repeat_sizes", "\n", "]", ")", "\n", "self", ".", "conv_bn", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "out_channels", "+", "high_in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.AFNB.forward": [[210, 220], ["range", "ann.AFNB.conv_bn", "ann.AFNB.dropout", "stage", "len", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.conv_bn"], ["", "def", "forward", "(", "self", ",", "low_feats", ",", "high_feats", ")", ":", "\n", "        ", "priors", "=", "[", "stage", "(", "low_feats", ",", "high_feats", ")", "for", "stage", "in", "self", ".", "stages", "]", "\n", "context", "=", "priors", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "priors", ")", ")", ":", "\n", "            ", "context", "+=", "priors", "[", "i", "]", "\n", "\n", "", "output", "=", "self", ".", "conv_bn", "(", "paddle", ".", "concat", "(", "[", "context", ",", "high_feats", "]", ",", "axis", "=", "1", ")", ")", "\n", "output", "=", "self", ".", "dropout", "(", "output", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.APNB.__init__": [[236, 257], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "ann.SelfAttentionBlock_APNB"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "key_channels", ",", "\n", "value_channels", ",", "\n", "dropout_prob", ",", "\n", "repeat_sizes", "=", "(", "[", "1", "]", ")", ",", "\n", "psp_size", "=", "(", "1", ",", "3", ",", "6", ",", "8", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "psp_size", "=", "psp_size", "\n", "self", ".", "stages", "=", "nn", ".", "LayerList", "(", "[", "\n", "SelfAttentionBlock_APNB", "(", "in_channels", ",", "out_channels", ",", "\n", "key_channels", ",", "value_channels", ",", "size", ")", "\n", "for", "size", "in", "repeat_sizes", "\n", "]", ")", "\n", "self", ".", "conv_bn", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "*", "2", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.APNB.forward": [[258, 268], ["range", "ann.APNB.conv_bn", "ann.APNB.dropout", "stage", "len", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.conv_bn"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "priors", "=", "[", "stage", "(", "x", ")", "for", "stage", "in", "self", ".", "stages", "]", "\n", "context", "=", "priors", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "priors", ")", ")", ":", "\n", "            ", "context", "+=", "priors", "[", "i", "]", "\n", "\n", "", "output", "=", "self", ".", "conv_bn", "(", "paddle", ".", "concat", "(", "[", "context", ",", "x", "]", ",", "axis", "=", "1", ")", ")", "\n", "output", "=", "self", ".", "dropout", "(", "output", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.SelfAttentionBlock_AFNB.__init__": [[295, 332], ["paddle.Layer.__init__", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "low_in_channels", ",", "\n", "high_in_channels", ",", "\n", "key_channels", ",", "\n", "value_channels", ",", "\n", "out_channels", "=", "None", ",", "\n", "scale", "=", "1", ",", "\n", "psp_size", "=", "(", "1", ",", "3", ",", "6", ",", "8", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "in_channels", "=", "low_in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "key_channels", "=", "key_channels", "\n", "self", ".", "value_channels", "=", "value_channels", "\n", "if", "out_channels", "==", "None", ":", "\n", "            ", "self", ".", "out_channels", "=", "high_in_channels", "\n", "", "self", ".", "pool", "=", "nn", ".", "MaxPool2D", "(", "scale", ")", "\n", "self", ".", "f_key", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "low_in_channels", ",", "\n", "out_channels", "=", "key_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "f_query", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "high_in_channels", ",", "\n", "out_channels", "=", "key_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "f_value", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "low_in_channels", ",", "\n", "out_channels", "=", "value_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "W", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "value_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "psp_size", "=", "psp_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.SelfAttentionBlock_AFNB.forward": [[333, 360], ["ann.SelfAttentionBlock_AFNB.f_value", "ann._pp_module", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "ann.SelfAttentionBlock_AFNB.f_query", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "ann.SelfAttentionBlock_AFNB.f_key", "ann._pp_module", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "ann.SelfAttentionBlock_AFNB.W"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann._pp_module", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann._pp_module", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "low_feats", ",", "high_feats", ")", ":", "\n", "        ", "batch_size", ",", "_", ",", "h", ",", "w", "=", "high_feats", ".", "shape", "\n", "\n", "value", "=", "self", ".", "f_value", "(", "low_feats", ")", "\n", "value", "=", "_pp_module", "(", "value", ",", "self", ".", "psp_size", ")", "\n", "value", "=", "paddle", ".", "transpose", "(", "value", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "query", "=", "self", ".", "f_query", "(", "high_feats", ")", "\n", "query", "=", "paddle", ".", "reshape", "(", "query", ",", "shape", "=", "(", "0", ",", "self", ".", "key_channels", ",", "-", "1", ")", ")", "\n", "query", "=", "paddle", ".", "transpose", "(", "query", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "key", "=", "self", ".", "f_key", "(", "low_feats", ")", "\n", "key", "=", "_pp_module", "(", "key", ",", "self", ".", "psp_size", ")", "\n", "\n", "sim_map", "=", "paddle", ".", "matmul", "(", "query", ",", "key", ")", "\n", "sim_map", "=", "(", "self", ".", "key_channels", "**", "-", ".5", ")", "*", "sim_map", "\n", "sim_map", "=", "F", ".", "softmax", "(", "sim_map", ",", "axis", "=", "-", "1", ")", "\n", "\n", "context", "=", "paddle", ".", "matmul", "(", "sim_map", ",", "value", ")", "\n", "context", "=", "paddle", ".", "transpose", "(", "context", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "hf_shape", "=", "paddle", ".", "shape", "(", "high_feats", ")", "\n", "context", "=", "paddle", ".", "reshape", "(", "\n", "context", ",", "shape", "=", "[", "0", ",", "self", ".", "value_channels", ",", "hf_shape", "[", "2", "]", ",", "hf_shape", "[", "3", "]", "]", ")", "\n", "\n", "context", "=", "self", ".", "W", "(", "context", ")", "\n", "\n", "return", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.SelfAttentionBlock_APNB.__init__": [[375, 405], ["paddle.Layer.__init__", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "key_channels", ",", "\n", "value_channels", ",", "\n", "scale", "=", "1", ",", "\n", "psp_size", "=", "(", "1", ",", "3", ",", "6", ",", "8", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "key_channels", "=", "key_channels", "\n", "self", ".", "value_channels", "=", "value_channels", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2D", "(", "scale", ")", "\n", "self", ".", "f_key", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "self", ".", "in_channels", ",", "\n", "out_channels", "=", "self", ".", "key_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "f_query", "=", "self", ".", "f_key", "\n", "self", ".", "f_value", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "self", ".", "in_channels", ",", "\n", "out_channels", "=", "self", ".", "value_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "W", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "self", ".", "value_channels", ",", "\n", "out_channels", "=", "self", ".", "out_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "psp_size", "=", "psp_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann.SelfAttentionBlock_APNB.forward": [[406, 435], ["ann.SelfAttentionBlock_APNB.f_value", "ann._pp_module", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "ann.SelfAttentionBlock_APNB.f_query", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "ann.SelfAttentionBlock_APNB.f_key", "ann._pp_module", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "ann.SelfAttentionBlock_APNB.W", "ann.SelfAttentionBlock_APNB.pool"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann._pp_module", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann._pp_module", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", ",", "_", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "if", "self", ".", "scale", ">", "1", ":", "\n", "            ", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "\n", "", "value", "=", "self", ".", "f_value", "(", "x", ")", "\n", "value", "=", "_pp_module", "(", "value", ",", "self", ".", "psp_size", ")", "\n", "value", "=", "paddle", ".", "transpose", "(", "value", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "query", "=", "self", ".", "f_query", "(", "x", ")", "\n", "query", "=", "paddle", ".", "reshape", "(", "query", ",", "shape", "=", "(", "0", ",", "self", ".", "key_channels", ",", "-", "1", ")", ")", "\n", "query", "=", "paddle", ".", "transpose", "(", "query", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "key", "=", "self", ".", "f_key", "(", "x", ")", "\n", "key", "=", "_pp_module", "(", "key", ",", "self", ".", "psp_size", ")", "\n", "\n", "sim_map", "=", "paddle", ".", "matmul", "(", "query", ",", "key", ")", "\n", "sim_map", "=", "(", "self", ".", "key_channels", "**", "-", ".5", ")", "*", "sim_map", "\n", "sim_map", "=", "F", ".", "softmax", "(", "sim_map", ",", "axis", "=", "-", "1", ")", "\n", "\n", "context", "=", "paddle", ".", "matmul", "(", "sim_map", ",", "value", ")", "\n", "context", "=", "paddle", ".", "transpose", "(", "context", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "context", "=", "paddle", ".", "reshape", "(", "\n", "context", ",", "shape", "=", "[", "0", ",", "self", ".", "value_channels", ",", "x_shape", "[", "2", "]", ",", "x_shape", "[", "3", "]", "]", ")", "\n", "context", "=", "self", ".", "W", "(", "context", ")", "\n", "\n", "return", "context", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ann._pp_module": [[270, 279], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.adaptive_avg_pool2d", "paddle.reshape", "paddle.reshape", "paddle.reshape", "priors.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "_pp_module", "(", "x", ",", "psp_size", ")", ":", "\n", "    ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "priors", "=", "[", "]", "\n", "for", "size", "in", "psp_size", ":", "\n", "        ", "feat", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "size", ")", "\n", "feat", "=", "paddle", ".", "reshape", "(", "feat", ",", "shape", "=", "(", "0", ",", "c", ",", "-", "1", ")", ")", "\n", "priors", ".", "append", "(", "feat", ")", "\n", "", "center", "=", "paddle", ".", "concat", "(", "priors", ",", "axis", "=", "-", "1", ")", "\n", "return", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.OCRNetNV.__init__": [[56, 82], ["paddle.Layer.__init__", "ocrnet_nv.OCRHead", "ocrnet_nv.OCRNetNV.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["backbone", ",", "\n", "backbone_indices", ",", "\n", "ocr_mid_channels", "=", "512", ",", "\n", "ocr_key_channels", "=", "256", ",", "\n", "align_corners", "=", "False", ",", "\n", "ms_attention", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "in_channels", "=", "[", "self", ".", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "]", "\n", "\n", "self", ".", "head", "=", "OCRHead", "(", "\n", "num_classes", "=", "num_classes", ",", "\n", "in_channels", "=", "in_channels", ",", "\n", "ocr_mid_channels", "=", "ocr_mid_channels", ",", "\n", "ocr_key_channels", "=", "ocr_key_channels", ",", "\n", "ms_attention", "=", "ms_attention", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "ms_attention", "=", "ms_attention", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "backbone", "(", "x", ")", "\n", "feats", "=", "[", "feats", "[", "i", "]", "for", "i", "in", "self", ".", "backbone_indices", "]", "\n", "logit_list", "=", "self", ".", "head", "(", "feats", ")", "\n", "if", "not", "self", ".", "ms_attention", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.OCRNetNV.forward": [[83, 96], ["ocrnet_nv.OCRNetNV.backbone", "ocrnet_nv.OCRNetNV.head", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["            ", "logit_list", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "x", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "", "return", "logit_list", "\n", "\n", "\n", "", "", "class", "OCRHead", "(", "nn", ".", "Layer", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.OCRHead.__init__": [[113, 141], ["paddle.Layer.__init__", "ocrnet_nv.SpatialGatherBlock", "ocrnet_nv.SpatialOCRModule", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "ocrnet_nv.OCRHead.init_weight", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["self", ".", "ms_attention", "=", "ms_attention", "\n", "self", ".", "spatial_gather", "=", "SpatialGatherBlock", "(", ")", "\n", "self", ".", "spatial_ocr", "=", "SpatialOCRModule", "(", "\n", "ocr_mid_channels", ",", "\n", "ocr_key_channels", ",", "\n", "ocr_mid_channels", ",", "\n", "dropout_rate", "=", "0.05", ")", "\n", "\n", "self", ".", "indices", "=", "[", "-", "2", ",", "-", "1", "]", "if", "len", "(", "in_channels", ")", ">", "1", "else", "[", "-", "1", ",", "-", "1", "]", "\n", "\n", "self", ".", "conv3x3_ocr", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "[", "self", ".", "indices", "[", "1", "]", "]", ",", "ocr_mid_channels", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "cls_head", "=", "nn", ".", "Conv2D", "(", "ocr_mid_channels", ",", "self", ".", "num_classes", ",", "1", ")", "\n", "self", ".", "aux_head", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "in_channels", "[", "self", ".", "indices", "[", "0", "]", "]", ",", "\n", "in_channels", "[", "self", ".", "indices", "[", "0", "]", "]", ",", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", "[", "self", ".", "indices", "[", "0", "]", "]", ",", "self", ".", "num_classes", ",", "1", ")", ")", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "feat_shallow", ",", "feat_deep", "=", "feat_list", "[", "self", ".", "indices", "[", "0", "]", "]", ",", "feat_list", "[", "\n", "self", ".", "indices", "[", "1", "]", "]", "\n", "\n", "soft_regions", "=", "self", ".", "aux_head", "(", "feat_shallow", ")", "\n", "pixels", "=", "self", ".", "conv3x3_ocr", "(", "feat_deep", ")", "\n", "\n", "object_regions", "=", "self", ".", "spatial_gather", "(", "pixels", ",", "soft_regions", ")", "\n", "ocr", "=", "self", ".", "spatial_ocr", "(", "pixels", ",", "object_regions", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.OCRHead.forward": [[142, 156], ["ocrnet_nv.OCRHead.aux_head", "ocrnet_nv.OCRHead.conv3x3_ocr", "ocrnet_nv.OCRHead.spatial_gather", "ocrnet_nv.OCRHead.spatial_ocr", "ocrnet_nv.OCRHead.cls_head"], "methods", ["None"], ["\n", "logit", "=", "self", ".", "cls_head", "(", "ocr", ")", "\n", "if", "self", ".", "ms_attention", ":", "\n", "            ", "return", "[", "logit", ",", "soft_regions", ",", "ocr", "]", "\n", "", "return", "[", "logit", ",", "soft_regions", "]", "\n", "\n", "", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initialize the parameters of model parts.\"\"\"", "\n", "for", "sublayer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "sublayer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "normal_init", "(", "sublayer", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "sublayer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "sublayer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "sublayer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.OCRHead.init_weight": [[157, 165], ["ocrnet_nv.OCRHead.sublayers", "isinstance", "paddleseg.cvlibs.param_init.normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["\n", "", "", "", "", "class", "SpatialGatherBlock", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "\"\"\"Aggregation layer to compute the pixel-region representation.\"\"\"", "\n", "\n", "def", "forward", "(", "self", ",", "pixels", ",", "regions", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "pixels", ".", "shape", "\n", "_", ",", "k", ",", "_", ",", "_", "=", "regions", ".", "shape", "\n", "\n", "# pixels: from (n, c, h, w) to (n, h*w, c)", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.SpatialGatherBlock.forward": [[170, 188], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze"], "methods", ["None"], ["regions", "=", "paddle", ".", "reshape", "(", "regions", ",", "(", "n", ",", "k", ",", "h", "*", "w", ")", ")", "\n", "regions", "=", "F", ".", "softmax", "(", "regions", ",", "axis", "=", "2", ")", "\n", "\n", "# feats: from (n, k, c) to (n, c, k, 1)", "\n", "feats", "=", "paddle", ".", "bmm", "(", "regions", ",", "pixels", ")", "\n", "feats", "=", "paddle", ".", "transpose", "(", "feats", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "feats", "=", "paddle", ".", "unsqueeze", "(", "feats", ",", "axis", "=", "-", "1", ")", "\n", "\n", "return", "feats", "\n", "\n", "\n", "", "", "class", "SpatialOCRModule", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "\"\"\"Aggregate the global object representation to update the representation for each pixel.\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "key_channels", ",", "\n", "out_channels", ",", "\n", "dropout_rate", "=", "0.1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.SpatialOCRModule.__init__": [[193, 205], ["paddle.Layer.__init__", "ocrnet_nv.ObjectAttentionBlock", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout2D", "paddle.Dropout2D", "paddle.Dropout2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["layers", ".", "ConvBNReLU", "(", "\n", "2", "*", "in_channels", ",", "out_channels", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Dropout2D", "(", "dropout_rate", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "pixels", ",", "regions", ")", ":", "\n", "        ", "context", "=", "self", ".", "attention_block", "(", "pixels", ",", "regions", ")", "\n", "feats", "=", "paddle", ".", "concat", "(", "[", "context", ",", "pixels", "]", ",", "axis", "=", "1", ")", "\n", "feats", "=", "self", ".", "conv1x1", "(", "feats", ")", "\n", "\n", "return", "feats", "\n", "\n", "\n", "", "", "class", "ObjectAttentionBlock", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.SpatialOCRModule.forward": [[206, 212], ["ocrnet_nv.SpatialOCRModule.attention_block", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "ocrnet_nv.SpatialOCRModule.conv1x1"], "methods", ["None"], ["    ", "\"\"\"A self-attention module.\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "in_channels", ",", "key_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "key_channels", "=", "key_channels", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.ObjectAttentionBlock.__init__": [[217, 240], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["layers", ".", "ConvBNReLU", "(", "\n", "key_channels", ",", "key_channels", ",", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n", "self", ".", "f_object", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "key_channels", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "key_channels", ",", "key_channels", ",", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n", "self", ".", "f_down", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "key_channels", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "f_up", "=", "layers", ".", "ConvBNReLU", "(", "\n", "key_channels", ",", "in_channels", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "proxy", ")", ":", "\n", "        ", "n", ",", "_", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "# query : from (n, c1, h1, w1) to (n, h1*w1, key_channels)", "\n", "query", "=", "self", ".", "f_pixel", "(", "x", ")", "\n", "query", "=", "paddle", ".", "reshape", "(", "query", ",", "(", "n", ",", "self", ".", "key_channels", ",", "-", "1", ")", ")", "\n", "query", "=", "paddle", ".", "transpose", "(", "query", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# key : from (n, c2, h2, w2) to (n, key_channels, h2*w2)", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.ObjectAttentionBlock.forward": [[241, 270], ["ocrnet_nv.ObjectAttentionBlock.f_pixel", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "ocrnet_nv.ObjectAttentionBlock.f_object", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "ocrnet_nv.ObjectAttentionBlock.f_down", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "ocrnet_nv.ObjectAttentionBlock.f_up"], "methods", ["None"], ["key", "=", "self", ".", "f_object", "(", "proxy", ")", "\n", "key", "=", "paddle", ".", "reshape", "(", "key", ",", "(", "n", ",", "self", ".", "key_channels", ",", "-", "1", ")", ")", "\n", "\n", "# value : from (n, c2, h2, w2) to (n, h2*w2, key_channels)", "\n", "value", "=", "self", ".", "f_down", "(", "proxy", ")", "\n", "value", "=", "paddle", ".", "reshape", "(", "value", ",", "(", "n", ",", "self", ".", "key_channels", ",", "-", "1", ")", ")", "\n", "value", "=", "paddle", ".", "transpose", "(", "value", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# sim_map (n, h1*w1, h2*w2)", "\n", "sim_map", "=", "paddle", ".", "bmm", "(", "query", ",", "key", ")", "\n", "sim_map", "=", "(", "self", ".", "key_channels", "**", "-", ".5", ")", "*", "sim_map", "\n", "sim_map", "=", "F", ".", "softmax", "(", "sim_map", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# context from (n, h1*w1, key_channels) to (n , out_channels, h1, w1)", "\n", "context", "=", "paddle", ".", "bmm", "(", "sim_map", ",", "value", ")", "\n", "context", "=", "paddle", ".", "transpose", "(", "context", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "context", "=", "paddle", ".", "reshape", "(", "context", ",", "(", "n", ",", "self", ".", "key_channels", ",", "h", ",", "w", ")", ")", "\n", "context", "=", "self", ".", "f_up", "(", "context", ")", "\n", "\n", "return", "context", "\n", "\n", "\n", "", "", "class", "ProjectionHead", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "proj_dim", "=", "256", ",", "proj", "=", "'convmlp'", ")", ":", "\n", "        ", "super", "(", "ProjectionHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "proj", "==", "'linear'", ":", "\n", "            ", "self", ".", "proj", "=", "nn", ".", "Conv2d", "(", "dim_in", ",", "proj_dim", ",", "kernel_size", "=", "1", ")", "\n", "", "elif", "proj", "==", "'convmlp'", ":", "\n", "            ", "self", ".", "proj", "=", "nn", ".", "Sequential", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.ProjectionHead.__init__": [[264, 277], ["paddle.Layer.__init__", "paddle.Conv2d", "paddle.Conv2d", "paddle.Conv2d", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2d", "paddle.Conv2d", "paddle.Conv2d", "paddle.SyncBatchNorm", "paddle.SyncBatchNorm", "paddle.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2d", "paddle.Conv2d", "paddle.Conv2d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "proj_dim", "=", "256", ",", "proj", "=", "'convmlp'", ")", ":", "\n", "        ", "super", "(", "ProjectionHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "proj", "==", "'linear'", ":", "\n", "            ", "self", ".", "proj", "=", "nn", ".", "Conv2d", "(", "dim_in", ",", "proj_dim", ",", "kernel_size", "=", "1", ")", "\n", "", "elif", "proj", "==", "'convmlp'", ":", "\n", "            ", "self", ".", "proj", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "dim_in", ",", "dim_in", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "SyncBatchNorm", "(", "dim_in", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "dim_in", ",", "proj_dim", ",", "kernel_size", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.ProjectionHead.forward": [[278, 280], ["paddle.normalize", "paddle.normalize", "paddle.normalize", "ocrnet_nv.ProjectionHead.proj"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "normalize", "(", "self", ".", "proj", "(", "x", ")", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.__init__": [[13, 39], ["paddle.Layer.__init__", "ocrnet_nv.OCRNetNV", "mscale_ocrnet.AttenHead", "paddleseg.utils.utils.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", ",", "\n", "n_scales", "=", "[", "0.5", ",", "1.0", ",", "2.0", "]", ",", "\n", "ocr_mid_channels", "=", "512", ",", "\n", "ocr_key_channels", "=", "256", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ocrnet", "=", "OCRNetNV", "(", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", ",", "\n", "ocr_mid_channels", "=", "ocr_mid_channels", ",", "\n", "ocr_key_channels", "=", "ocr_key_channels", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "ms_attention", "=", "True", ")", "\n", "self", ".", "scale_attn", "=", "AttenHead", "(", "in_ch", "=", "ocr_mid_channels", ",", "out_ch", "=", "1", ")", "\n", "\n", "self", ".", "n_scales", "=", "n_scales", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "# backbone.init_weight()", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.forward": [[40, 45], ["mscale_ocrnet.MscaleOCRNet.two_scale_forward", "mscale_ocrnet.MscaleOCRNet.nscale_forward"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.two_scale_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.nscale_forward"], ["\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "return", "self", ".", "one_scale_forward", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "nscale_forward", "(", "x", ",", "self", ".", "n_scales", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.one_scale_forward": [[47, 66], ["mscale_ocrnet.MscaleOCRNet.ocrnet", "paddle.functional.interpolate", "paddle.functional.interpolate", "paddle.functional.interpolate", "paddle.functional.interpolate", "output.extend"], "methods", ["None"], ["", "", "def", "one_scale_forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x_size", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "cls_out", ",", "aux_out", ",", "_", "=", "self", ".", "ocrnet", "(", "x", ")", "\n", "\n", "cls_out", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "cls_out", ",", "\n", "size", "=", "x_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "aux_out", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "aux_out", ",", "\n", "size", "=", "x_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "output", "=", "[", "cls_out", ",", "aux_out", "]", "\n", "output", ".", "extend", "(", "output", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.one_scale_val": [[67, 80], ["mscale_ocrnet.MscaleOCRNet.ocrnet", "paddle.functional.interpolate", "paddle.functional.interpolate"], "methods", ["None"], ["", "def", "one_scale_val", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x_size", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "cls_out", ",", "aux_out", ",", "_", "=", "self", ".", "ocrnet", "(", "x", ")", "\n", "\n", "cls_out", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "cls_out", ",", "\n", "size", "=", "x_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "output", "=", "[", "cls_out", "]", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.two_scale_forward": [[46, 91], ["paddle.functional.interpolate", "paddle.functional.interpolate", "mscale_ocrnet.MscaleOCRNet.single_scale_forward", "mscale_ocrnet.MscaleOCRNet.single_scale_forward", "mscale_ocrnet.scale_as", "mscale_ocrnet.scale_as", "mscale_ocrnet.scale_as", "mscale_ocrnet.scale_as", "output.extend", "output.extend"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.single_scale_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.single_scale_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as"], ["\n", "", "", "def", "one_scale_forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x_size", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "cls_out", ",", "aux_out", ",", "_", "=", "self", ".", "ocrnet", "(", "x", ")", "\n", "\n", "cls_out", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "cls_out", ",", "\n", "size", "=", "x_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "aux_out", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "aux_out", ",", "\n", "size", "=", "x_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "output", "=", "[", "cls_out", ",", "aux_out", "]", "\n", "output", ".", "extend", "(", "output", ")", "\n", "return", "output", "\n", "\n", "", "def", "one_scale_val", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x_size", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "cls_out", ",", "aux_out", ",", "_", "=", "self", ".", "ocrnet", "(", "x", ")", "\n", "\n", "cls_out", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "cls_out", ",", "\n", "size", "=", "x_size", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "\n", "output", "=", "[", "cls_out", "]", "\n", "return", "output", "\n", "\n", "", "def", "two_scale_forward", "(", "self", ",", "x_1x", ")", ":", "\n", "        ", "\"\"\"\n        Do we supervised both aux outputs, lo and high scale?\n        Should attention be used to combine the aux output?\n        Normally we only supervise the combined 1x output\n\n        If we use attention to combine the aux outputs, then\n        we can use normal weighting for aux vs. cls outputs\n        \"\"\"", "\n", "x_lo", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "x_1x", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.two_scale_forward_high": [[127, 169], ["paddle.functional.interpolate", "paddle.functional.interpolate", "mscale_ocrnet.MscaleOCRNet.single_scale_forward", "mscale_ocrnet.MscaleOCRNet.single_scale_forward", "mscale_ocrnet.scale_as", "mscale_ocrnet.scale_as", "mscale_ocrnet.scale_as", "output.extend"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.single_scale_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.single_scale_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as"], ["", "def", "two_scale_forward_high", "(", "self", ",", "x_1x", ")", ":", "\n", "        ", "\"\"\"\n        Do we supervised both aux outputs, lo and high scale?\n        Should attention be used to combine the aux output?\n        Normally we only supervise the combined 1x output\n\n        If we use attention to combine the aux outputs, then\n        we can use normal weighting for aux vs. cls outputs\n        \"\"\"", "\n", "x_hi", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "x_1x", ",", "\n", "scale_factor", "=", "1.5", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "\n", "lo_outs", "=", "self", ".", "single_scale_forward", "(", "x_1x", ")", "\n", "pred_10x", "=", "lo_outs", "[", "'cls_out'", "]", "\n", "p_lo", "=", "pred_10x", "\n", "aux_lo", "=", "lo_outs", "[", "'aux_out'", "]", "\n", "logit_attn", "=", "lo_outs", "[", "'logit_attn'", "]", "\n", "\n", "hi_outs", "=", "self", ".", "single_scale_forward", "(", "x_hi", ")", "\n", "pred_15x", "=", "hi_outs", "[", "'cls_out'", "]", "\n", "p_hi", "=", "pred_15x", "\n", "aux_hi", "=", "hi_outs", "[", "'aux_out'", "]", "\n", "\n", "p_lo", "=", "p_lo", "*", "logit_attn", "\n", "aux_lo", "=", "aux_lo", "*", "logit_attn", "\n", "p_hi", "=", "scale_as", "(", "p_hi", ",", "p_lo", ")", "\n", "aux_hi", "=", "scale_as", "(", "aux_hi", ",", "aux_lo", ")", "\n", "\n", "# combine lo and hi predictions with attention", "\n", "joint_pred", "=", "p_lo", "+", "p_hi", "*", "(", "1", "-", "logit_attn", ")", "\n", "joint_aux", "=", "aux_lo", "+", "aux_hi", "*", "(", "1", "-", "logit_attn", ")", "\n", "\n", "output", "=", "[", "joint_pred", ",", "joint_aux", "]", "\n", "\n", "# Optionally, apply supervision to the multi-scale predictions", "\n", "# directly.", "\n", "scaled_pred_15x", "=", "scale_as", "(", "pred_15x", ",", "p_lo", ")", "\n", "output", ".", "extend", "(", "output", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.nscale_forward": [[92, 152], ["sorted", "paddle.functional.interpolate", "paddle.functional.interpolate", "mscale_ocrnet.MscaleOCRNet.single_scale_forward", "mscale_ocrnet.scale_as", "mscale_ocrnet.scale_as", "mscale_ocrnet.scale_as"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.single_scale_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as"], ["scale_factor", "=", "0.5", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "lo_outs", "=", "self", ".", "single_scale_forward", "(", "x_lo", ")", "\n", "\n", "pred_05x", "=", "lo_outs", "[", "'cls_out'", "]", "\n", "p_lo", "=", "pred_05x", "\n", "aux_lo", "=", "lo_outs", "[", "'aux_out'", "]", "\n", "logit_attn", "=", "lo_outs", "[", "'logit_attn'", "]", "\n", "\n", "hi_outs", "=", "self", ".", "single_scale_forward", "(", "x_1x", ")", "\n", "pred_10x", "=", "hi_outs", "[", "'cls_out'", "]", "\n", "p_1x", "=", "pred_10x", "\n", "aux_1x", "=", "hi_outs", "[", "'aux_out'", "]", "\n", "\n", "p_lo", "=", "p_lo", "*", "logit_attn", "\n", "aux_lo", "=", "aux_lo", "*", "logit_attn", "\n", "p_lo", "=", "scale_as", "(", "p_lo", ",", "p_1x", ")", "\n", "aux_lo", "=", "scale_as", "(", "aux_lo", ",", "p_1x", ")", "\n", "\n", "logit_attn", "=", "scale_as", "(", "logit_attn", ",", "p_1x", ")", "\n", "\n", "# combine lo and hi predictions with attention", "\n", "joint_pred", "=", "p_lo", "+", "p_1x", "*", "(", "1", "-", "logit_attn", ")", "\n", "joint_aux", "=", "aux_lo", "+", "aux_1x", "*", "(", "1", "-", "logit_attn", ")", "\n", "\n", "output", "=", "[", "joint_pred", ",", "joint_aux", "]", "\n", "\n", "# Optionally, apply supervision to the multi-scale predictions", "\n", "# directly.", "\n", "scaled_pred_05x", "=", "scale_as", "(", "pred_05x", ",", "p_1x", ")", "\n", "output", ".", "extend", "(", "[", "scaled_pred_05x", ",", "pred_10x", "]", ")", "\n", "output", ".", "extend", "(", "output", ")", "\n", "return", "output", "\n", "\n", "", "def", "two_scale_forward_high", "(", "self", ",", "x_1x", ")", ":", "\n", "        ", "\"\"\"\n        Do we supervised both aux outputs, lo and high scale?\n        Should attention be used to combine the aux output?\n        Normally we only supervise the combined 1x output\n\n        If we use attention to combine the aux outputs, then\n        we can use normal weighting for aux vs. cls outputs\n        \"\"\"", "\n", "x_hi", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "x_1x", ",", "\n", "scale_factor", "=", "1.5", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "\n", "lo_outs", "=", "self", ".", "single_scale_forward", "(", "x_1x", ")", "\n", "pred_10x", "=", "lo_outs", "[", "'cls_out'", "]", "\n", "p_lo", "=", "pred_10x", "\n", "aux_lo", "=", "lo_outs", "[", "'aux_out'", "]", "\n", "logit_attn", "=", "lo_outs", "[", "'logit_attn'", "]", "\n", "\n", "hi_outs", "=", "self", ".", "single_scale_forward", "(", "x_hi", ")", "\n", "pred_15x", "=", "hi_outs", "[", "'cls_out'", "]", "\n", "p_hi", "=", "pred_15x", "\n", "aux_hi", "=", "hi_outs", "[", "'aux_out'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.MscaleOCRNet.single_scale_forward": [[153, 175], ["mscale_ocrnet.MscaleOCRNet.ocrnet", "mscale_ocrnet.MscaleOCRNet.scale_attn", "paddle.functional.interpolate", "paddle.functional.interpolate", "paddle.functional.interpolate", "paddle.functional.interpolate", "paddle.functional.interpolate", "paddle.functional.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["p_lo", "=", "p_lo", "*", "logit_attn", "\n", "aux_lo", "=", "aux_lo", "*", "logit_attn", "\n", "p_hi", "=", "scale_as", "(", "p_hi", ",", "p_lo", ")", "\n", "aux_hi", "=", "scale_as", "(", "aux_hi", ",", "aux_lo", ")", "\n", "\n", "# combine lo and hi predictions with attention", "\n", "joint_pred", "=", "p_lo", "+", "p_hi", "*", "(", "1", "-", "logit_attn", ")", "\n", "joint_aux", "=", "aux_lo", "+", "aux_hi", "*", "(", "1", "-", "logit_attn", ")", "\n", "\n", "output", "=", "[", "joint_pred", ",", "joint_aux", "]", "\n", "\n", "# Optionally, apply supervision to the multi-scale predictions", "\n", "# directly.", "\n", "scaled_pred_15x", "=", "scale_as", "(", "pred_15x", ",", "p_lo", ")", "\n", "output", ".", "extend", "(", "output", ")", "\n", "return", "output", "\n", "\n", "", "def", "nscale_forward", "(", "self", ",", "x_1x", ",", "scales", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.AttenHead.__init__": [[178, 191], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.AttenHead.forward": [[192, 194], ["mscale_ocrnet.AttenHead.atten_head"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.mscale_ocrnet.scale_as": [[196, 204], ["paddle.shape", "paddle.shape", "paddle.functional.interpolate"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["assert", "1.0", "in", "scales", ",", "'expected 1.0 to be the target scale'", "\n", "# Lower resolution provides attention for higher rez predictions,", "\n", "# so we evaluate in order: high to low", "\n", "scales", "=", "sorted", "(", "scales", ",", "reverse", "=", "True", ")", "\n", "\n", "pred", "=", "None", "\n", "\n", "for", "s", "in", "scales", ":", "\n", "            ", "x", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.PanopticDeepLab.__init__": [[54, 80], ["paddle.Layer.__init__", "panoptic_deeplab.PanopticDeepLabHead", "panoptic_deeplab.PanopticDeepLab.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "2", ",", "1", ",", "0", ",", "3", ")", ",", "\n", "aspp_ratios", "=", "(", "1", ",", "6", ",", "12", ",", "18", ")", ",", "\n", "aspp_out_channels", "=", "256", ",", "\n", "decoder_channels", "=", "256", ",", "\n", "low_level_channels_projects", "=", "None", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "head", "=", "PanopticDeepLabHead", "(", "\n", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "aspp_ratios", ",", "\n", "aspp_out_channels", ",", "decoder_channels", ",", "align_corners", ",", "\n", "low_level_channels_projects", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.PanopticDeepLab._upsample_predictions": [[81, 107], ["collections.OrderedDict", "pred.keys", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "_upsample_predictions", "(", "self", ",", "pred", ",", "input_shape", ")", ":", "\n", "        ", "\"\"\"Upsamples final prediction, with special handling to offset.\n\n            Args:\n                pred (dict): stores all output of the segmentation model.\n                input_shape (tuple): spatial resolution of the desired shape.\n\n            Returns:\n                result (OrderedDict): upsampled dictionary.\n            \"\"\"", "\n", "# Override upsample method to correctly handle `offset`", "\n", "result", "=", "OrderedDict", "(", ")", "\n", "for", "key", "in", "pred", ".", "keys", "(", ")", ":", "\n", "            ", "out", "=", "F", ".", "interpolate", "(", "\n", "pred", "[", "key", "]", ",", "\n", "size", "=", "input_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "if", "'offset'", "in", "key", ":", "\n", "                ", "if", "input_shape", "[", "0", "]", "%", "2", "==", "0", ":", "\n", "                    ", "scale", "=", "input_shape", "[", "0", "]", "//", "pred", "[", "key", "]", ".", "shape", "[", "2", "]", "\n", "", "else", ":", "\n", "                    ", "scale", "=", "(", "input_shape", "[", "0", "]", "-", "1", ")", "//", "(", "pred", "[", "key", "]", ".", "shape", "[", "2", "]", "-", "1", ")", "\n", "", "out", "*=", "scale", "\n", "", "result", "[", "key", "]", "=", "out", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.PanopticDeepLab.forward": [[108, 116], ["panoptic_deeplab.PanopticDeepLab.backbone", "panoptic_deeplab.PanopticDeepLab.head", "panoptic_deeplab.PanopticDeepLab._upsample_predictions"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.PanopticDeepLab._upsample_predictions"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_dict", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "results", "=", "self", ".", "_upsample_predictions", "(", "logit_dict", ",", "x", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "\n", "# return results", "\n", "logit_list", "=", "[", "results", "[", "'semantic'", "]", ",", "results", "[", "'center'", "]", ",", "results", "[", "'offset'", "]", "]", "\n", "return", "logit_list", "\n", "# return [results['semantic']]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.PanopticDeepLab.init_weight": [[118, 121], ["paddleseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.PanopticDeepLabHead.__init__": [[145, 176], ["paddle.Layer.__init__", "panoptic_deeplab.SinglePanopticDeepLabDecoder", "panoptic_deeplab.SinglePanopticDeepLabHead", "panoptic_deeplab.SinglePanopticDeepLabDecoder", "panoptic_deeplab.SinglePanopticDeepLabHead"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "aspp_ratios", ",", "aspp_out_channels", ",", "decoder_channels", ",", "\n", "align_corners", ",", "low_level_channels_projects", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "semantic_decoder", "=", "SinglePanopticDeepLabDecoder", "(", "\n", "backbone_indices", "=", "backbone_indices", ",", "\n", "backbone_channels", "=", "backbone_channels", ",", "\n", "aspp_ratios", "=", "aspp_ratios", ",", "\n", "aspp_out_channels", "=", "aspp_out_channels", ",", "\n", "decoder_channels", "=", "decoder_channels", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "low_level_channels_projects", "=", "low_level_channels_projects", ")", "\n", "self", ".", "semantic_head", "=", "SinglePanopticDeepLabHead", "(", "\n", "num_classes", "=", "[", "num_classes", "]", ",", "\n", "decoder_channels", "=", "decoder_channels", ",", "\n", "head_channels", "=", "decoder_channels", ",", "\n", "class_key", "=", "[", "'semantic'", "]", ")", "\n", "self", ".", "instance_decoder", "=", "SinglePanopticDeepLabDecoder", "(", "\n", "backbone_indices", "=", "backbone_indices", ",", "\n", "backbone_channels", "=", "backbone_channels", ",", "\n", "aspp_ratios", "=", "aspp_ratios", ",", "\n", "aspp_out_channels", "=", "kwargs", "[", "'instance_aspp_out_channels'", "]", ",", "\n", "decoder_channels", "=", "kwargs", "[", "'instance_decoder_channels'", "]", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "low_level_channels_projects", "=", "kwargs", "[", "\n", "'instance_low_level_channels_projects'", "]", ")", "\n", "self", ".", "instance_head", "=", "SinglePanopticDeepLabHead", "(", "\n", "num_classes", "=", "kwargs", "[", "'instance_num_classes'", "]", ",", "\n", "decoder_channels", "=", "kwargs", "[", "'instance_decoder_channels'", "]", ",", "\n", "head_channels", "=", "kwargs", "[", "'instance_head_channels'", "]", ",", "\n", "class_key", "=", "kwargs", "[", "'instance_class_key'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.PanopticDeepLabHead.forward": [[177, 194], ["panoptic_deeplab.PanopticDeepLabHead.semantic_decoder", "panoptic_deeplab.PanopticDeepLabHead.semantic_head", "panoptic_deeplab.PanopticDeepLabHead.keys", "panoptic_deeplab.PanopticDeepLabHead.instance_decoder", "panoptic_deeplab.PanopticDeepLabHead.instance_head", "panoptic_deeplab.PanopticDeepLabHead.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "# pred = OrdereDict()", "\n", "        ", "pred", "=", "{", "}", "\n", "\n", "# Semantic branch", "\n", "semantic", "=", "self", ".", "semantic_decoder", "(", "features", ")", "\n", "semantic", "=", "self", ".", "semantic_head", "(", "semantic", ")", "\n", "for", "key", "in", "semantic", ".", "keys", "(", ")", ":", "\n", "            ", "pred", "[", "key", "]", "=", "semantic", "[", "key", "]", "\n", "\n", "# Instance branch", "\n", "", "instance", "=", "self", ".", "instance_decoder", "(", "features", ")", "\n", "instance", "=", "self", ".", "instance_head", "(", "instance", ")", "\n", "for", "key", "in", "instance", ".", "keys", "(", ")", ":", "\n", "            ", "pred", "[", "key", "]", "=", "instance", "[", "key", "]", "\n", "\n", "", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.SeparableConvBNReLU.__init__": [[197, 213], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "depthwise_conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "\n", "out_channels", "=", "in_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "in_channels", ",", "\n", "**", "kwargs", ")", "\n", "self", ".", "piontwise_conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "groups", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.SeparableConvBNReLU.forward": [[214, 218], ["panoptic_deeplab.SeparableConvBNReLU.depthwise_conv", "panoptic_deeplab.SeparableConvBNReLU.piontwise_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "depthwise_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "piontwise_conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.ASPPModule.__init__": [[235, 280], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "len", "paddleseg.models.layers.ConvBNReLU", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "conv_func", "panoptic_deeplab.ASPPModule.aspp_blocks.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "aspp_ratios", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "align_corners", ",", "\n", "use_sep_conv", "=", "False", ",", "\n", "image_pooling", "=", "False", ",", "\n", "drop_rate", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "aspp_blocks", "=", "nn", ".", "LayerList", "(", ")", "\n", "\n", "for", "ratio", "in", "aspp_ratios", ":", "\n", "            ", "if", "use_sep_conv", "and", "ratio", ">", "1", ":", "\n", "                ", "conv_func", "=", "SeparableConvBNReLU", "\n", "", "else", ":", "\n", "                ", "conv_func", "=", "layers", ".", "ConvBNReLU", "\n", "\n", "", "block", "=", "conv_func", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", "if", "ratio", "==", "1", "else", "3", ",", "\n", "dilation", "=", "ratio", ",", "\n", "padding", "=", "0", "if", "ratio", "==", "1", "else", "ratio", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "aspp_blocks", ".", "append", "(", "block", ")", "\n", "\n", "", "out_size", "=", "len", "(", "self", ".", "aspp_blocks", ")", "\n", "\n", "if", "image_pooling", ":", "\n", "            ", "self", ".", "global_avg_pool", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2D", "(", "output_size", "=", "(", "1", ",", "1", ")", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "out_size", "+=", "1", "\n", "", "self", ".", "image_pooling", "=", "image_pooling", "\n", "\n", "self", ".", "conv_bn_relu", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "out_channels", "*", "out_size", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_rate", ")", "# drop rate", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.ASPPModule.forward": [[281, 307], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "panoptic_deeplab.ASPPModule.conv_bn_relu", "panoptic_deeplab.ASPPModule.dropout", "block", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "outputs.append", "panoptic_deeplab.ASPPModule.global_avg_pool", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "outputs.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outputs", "=", "[", "]", "\n", "for", "block", "in", "self", ".", "aspp_blocks", ":", "\n", "            ", "y", "=", "block", "(", "x", ")", "\n", "interpolate_shape", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "y", "=", "F", ".", "interpolate", "(", "\n", "y", ",", "\n", "interpolate_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "outputs", ".", "append", "(", "y", ")", "\n", "\n", "", "if", "self", ".", "image_pooling", ":", "\n", "            ", "img_avg", "=", "self", ".", "global_avg_pool", "(", "x", ")", "\n", "img_avg", "=", "F", ".", "interpolate", "(", "\n", "img_avg", ",", "\n", "interpolate_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "outputs", ".", "append", "(", "img_avg", ")", "\n", "\n", "", "x", "=", "paddle", ".", "concat", "(", "outputs", ",", "axis", "=", "1", ")", "\n", "x", "=", "self", ".", "conv_bn_relu", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.SinglePanopticDeepLabDecoder.__init__": [[330, 377], ["paddle.Layer.__init__", "panoptic_deeplab.ASPPModule", "len", "range", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "ValueError", "project.append", "fuse.append", "len", "paddleseg.models.layers.ConvBNReLU", "panoptic_deeplab.SeparableConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "backbone_indices", ",", "backbone_channels", ",", "aspp_ratios", ",", "\n", "aspp_out_channels", ",", "decoder_channels", ",", "align_corners", ",", "\n", "low_level_channels_projects", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "aspp", "=", "ASPPModule", "(", "\n", "aspp_ratios", ",", "\n", "backbone_channels", "[", "-", "1", "]", ",", "\n", "aspp_out_channels", ",", "\n", "align_corners", ",", "\n", "use_sep_conv", "=", "False", ",", "\n", "image_pooling", "=", "True", ",", "\n", "drop_rate", "=", "0.5", ")", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "self", ".", "decoder_stage", "=", "len", "(", "low_level_channels_projects", ")", "\n", "if", "self", ".", "decoder_stage", "!=", "len", "(", "self", ".", "backbone_indices", ")", "-", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"len(low_level_channels_projects) != len(backbone_indices) - 1, they are {} and {}\"", "\n", ".", "format", "(", "low_level_channels_projects", ",", "backbone_indices", ")", ")", "\n", "", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "# Transform low-level feature", "\n", "project", "=", "[", "]", "\n", "# Fuse", "\n", "fuse", "=", "[", "]", "\n", "# Top-down direction, i.e. starting from largest stride", "\n", "for", "i", "in", "range", "(", "self", ".", "decoder_stage", ")", ":", "\n", "            ", "project", ".", "append", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "backbone_channels", "[", "i", "]", ",", "\n", "low_level_channels_projects", "[", "i", "]", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "fuse_in_channels", "=", "aspp_out_channels", "+", "low_level_channels_projects", "[", "\n", "i", "]", "\n", "", "else", ":", "\n", "                ", "fuse_in_channels", "=", "decoder_channels", "+", "low_level_channels_projects", "[", "\n", "i", "]", "\n", "", "fuse", ".", "append", "(", "\n", "SeparableConvBNReLU", "(", "\n", "fuse_in_channels", ",", "\n", "decoder_channels", ",", "\n", "5", ",", "\n", "padding", "=", "2", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "self", ".", "project", "=", "nn", ".", "LayerList", "(", "project", ")", "\n", "self", ".", "fuse", "=", "nn", ".", "LayerList", "(", "fuse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.SinglePanopticDeepLabDecoder.forward": [[378, 394], ["panoptic_deeplab.SinglePanopticDeepLabDecoder.aspp", "range", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "-", "1", "]", "]", "\n", "x", "=", "self", ".", "aspp", "(", "x", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "decoder_stage", ")", ":", "\n", "            ", "l", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "i", "]", "]", "\n", "l", "=", "self", ".", "project", "[", "i", "]", "(", "l", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "size", "=", "l", ".", "shape", "[", "-", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "x", ",", "l", "]", ",", "axis", "=", "1", ")", "\n", "x", "=", "self", ".", "fuse", "[", "i", "]", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.SinglePanopticDeepLabHead.__init__": [[407, 429], ["paddle.Layer.__init__", "len", "range", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "len", "ValueError", "classifier.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "panoptic_deeplab.SeparableConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "decoder_channels", ",", "head_channels", ",", "class_key", ")", ":", "\n", "        ", "super", "(", "SinglePanopticDeepLabHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_head", "=", "len", "(", "num_classes", ")", "\n", "if", "self", ".", "num_head", "!=", "len", "(", "class_key", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"len(num_classes) != len(class_key), they are {} and {}\"", ".", "format", "(", "\n", "num_classes", ",", "class_key", ")", ")", "\n", "\n", "", "classifier", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_head", ")", ":", "\n", "            ", "classifier", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "SeparableConvBNReLU", "(", "\n", "decoder_channels", ",", "\n", "head_channels", ",", "\n", "5", ",", "\n", "padding", "=", "2", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "head_channels", ",", "num_classes", "[", "i", "]", ",", "1", ")", ")", ")", "\n", "\n", "", "self", ".", "classifier", "=", "nn", ".", "LayerList", "(", "classifier", ")", "\n", "self", ".", "class_key", "=", "class_key", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.panoptic_deeplab.SinglePanopticDeepLabHead.forward": [[430, 437], ["collections.OrderedDict", "enumerate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "pred", "=", "OrderedDict", "(", ")", "\n", "# build classifier", "\n", "for", "i", ",", "key", "in", "enumerate", "(", "self", ".", "class_key", ")", ":", "\n", "            ", "pred", "[", "key", "]", "=", "self", ".", "classifier", "[", "i", "]", "(", "x", ")", "\n", "\n", "", "return", "pred", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ocrnet_nv.OCRNetNV.init_weight": [[97, 100], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.LUConv.__init__": [[33, 39], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nchan", ",", "elu", ")", ":", "\n", "        ", "super", "(", "LUConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "nchan", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3D", "(", "nchan", ",", "nchan", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "nchan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.LUConv.forward": [[40, 44], ["vnet_deepsup.LUConv.relu1", "vnet_deepsup.LUConv.bn1", "vnet_deepsup.LUConv.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.InputTransition.__init__": [[62, 73], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "elu", ")", ":", "\n", "        ", "super", "(", "InputTransition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "16", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3D", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "num_features", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "self", ".", "num_features", ")", "\n", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "self", ".", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.InputTransition.forward": [[74, 80], ["vnet_deepsup.InputTransition.conv1", "int", "vnet_deepsup.InputTransition.bn1", "x.tile", "vnet_deepsup.InputTransition.relu1", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "repeat_rate", "=", "int", "(", "self", ".", "num_features", "/", "self", ".", "in_channels", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "x_tile", "=", "x", ".", "tile", "(", "[", "1", ",", "repeat_rate", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "return", "self", ".", "relu1", "(", "paddle", ".", "add", "(", "out", ",", "x_tile", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.DownTransition.__init__": [[83, 105], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "vnet_deepsup._make_nConv", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet._make_nConv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "inChans", ",", "\n", "nConvs", ",", "\n", "elu", ",", "\n", "dropout", "=", "False", ",", "\n", "downsample_stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "\n", "kernel", "=", "(", "2", ",", "2", ",", "2", ")", ")", ":", "\n", "        ", "\"\"\"\n        1. double the output channel and downsample the input using down_conv(the kernel size can be changed)\n        2. add dropout by option\n        3. add nConvs layer to add linearity and add with original downsample one\n        \"\"\"", "\n", "super", "(", "DownTransition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "outChans", "=", "2", "*", "inChans", "\n", "self", ".", "if_dropout", "=", "dropout", "\n", "self", ".", "down_conv", "=", "nn", ".", "Conv3D", "(", "\n", "inChans", ",", "outChans", ",", "kernel_size", "=", "kernel", ",", "stride", "=", "downsample_stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "outChans", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "outChans", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "outChans", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout3D", "(", ")", "\n", "self", ".", "ops", "=", "_make_nConv", "(", "outChans", ",", "nConvs", ",", "elu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.DownTransition.forward": [[106, 114], ["vnet_deepsup.DownTransition.relu1", "vnet_deepsup.DownTransition.ops", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "vnet_deepsup.DownTransition.relu2", "vnet_deepsup.DownTransition.bn1", "vnet_deepsup.DownTransition.dropout", "vnet_deepsup.DownTransition.down_conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "down", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "self", ".", "down_conv", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "dropout", "(", "down", ")", "if", "self", ".", "if_dropout", "else", "down", "\n", "out", "=", "self", ".", "ops", "(", "out", ")", "\n", "out", "=", "paddle", ".", "add", "(", "out", ",", "down", ")", "\n", "out", "=", "self", ".", "relu2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.UpTransition.__init__": [[117, 147], ["paddle.Layer.__init__", "paddle.Conv3DTranspose", "paddle.Conv3DTranspose", "paddle.Conv3DTranspose", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "vnet_deepsup._make_nConv", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet._make_nConv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "inChans", ",", "\n", "outChans", ",", "\n", "nConvs", ",", "\n", "elu", ",", "\n", "dropout", "=", "False", ",", "\n", "dropout2", "=", "False", ",", "\n", "upsample_stride_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "\n", "kernel", "=", "(", "2", ",", "2", ",", "2", ")", ")", ":", "\n", "        ", "super", "(", "UpTransition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\"\"\"\n        1. Add dropout to input and skip input optionally (generalization)\n        2. Use Conv3DTranspose to upsample (upsample)\n        3. concate the upsampled and skipx (multi-leval feature fusion)\n        4. Add nConvs convs and residually add with result of step(residual + nonlinearity)\n        \"\"\"", "\n", "self", ".", "up_conv", "=", "nn", ".", "Conv3DTranspose", "(", "\n", "inChans", ",", "\n", "outChans", "//", "2", ",", "\n", "kernel_size", "=", "kernel", ",", "\n", "stride", "=", "upsample_stride_size", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "outChans", "//", "2", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "outChans", "//", "2", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "outChans", ")", "\n", "self", ".", "if_dropout", "=", "dropout", "\n", "self", ".", "if_dropout2", "=", "dropout2", "\n", "self", ".", "dropout1", "=", "nn", ".", "Dropout3D", "(", ")", "\n", "self", ".", "dropout2", "=", "nn", ".", "Dropout3D", "(", ")", "\n", "self", ".", "ops", "=", "_make_nConv", "(", "outChans", ",", "nConvs", ",", "elu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.UpTransition.forward": [[148, 157], ["vnet_deepsup.UpTransition.relu1", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "vnet_deepsup.UpTransition.ops", "vnet_deepsup.UpTransition.relu2", "vnet_deepsup.UpTransition.dropout1", "vnet_deepsup.UpTransition.dropout2", "vnet_deepsup.UpTransition.bn1", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "vnet_deepsup.UpTransition.up_conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ",", "skipx", ")", ":", "\n", "        ", "out", "=", "self", ".", "dropout1", "(", "x", ")", "if", "self", ".", "if_dropout", "else", "x", "\n", "skipx", "=", "self", ".", "dropout2", "(", "skipx", ")", "if", "self", ".", "if_dropout2", "else", "skipx", "\n", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "self", ".", "up_conv", "(", "out", ")", ")", ")", "\n", "xcat", "=", "paddle", ".", "concat", "(", "(", "out", ",", "skipx", ")", ",", "1", ")", "\n", "out", "=", "self", ".", "ops", "(", "xcat", ")", "\n", "out", "=", "self", ".", "relu2", "(", "paddle", ".", "add", "(", "out", ",", "xcat", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.OutputTransition.__init__": [[160, 171], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "num_classes", ",", "elu", ")", ":", "\n", "        ", "\"\"\"\n        conv the output down to channels as the desired classesv\n        \"\"\"", "\n", "super", "(", "OutputTransition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3D", "(", "\n", "in_channels", ",", "num_classes", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "num_classes", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv3D", "(", "num_classes", ",", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.OutputTransition.forward": [[172, 176], ["vnet_deepsup.OutputTransition.relu1", "vnet_deepsup.OutputTransition.conv2", "vnet_deepsup.OutputTransition.bn1", "vnet_deepsup.OutputTransition.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.VNetDeepSup.__init__": [[184, 255], ["paddle.Layer.__init__", "vnet_deepsup.InputTransition", "vnet_deepsup.DownTransition", "vnet_deepsup.DownTransition", "vnet_deepsup.DownTransition", "vnet_deepsup.DownTransition", "vnet_deepsup.UpTransition", "vnet_deepsup.UpTransition", "vnet_deepsup.UpTransition", "vnet_deepsup.UpTransition", "vnet_deepsup.OutputTransition", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "vnet_deepsup.OutputTransition", "vnet_deepsup.VNetDeepSup.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "elu", "=", "False", ",", "\n", "in_channels", "=", "1", ",", "\n", "num_classes", "=", "4", ",", "\n", "pretrained", "=", "None", ",", "\n", "kernel_size", "=", "(", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ")", ",", "\n", "stride_size", "=", "(", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "best_loss", "=", "1000000", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "in_tr", "=", "InputTransition", "(", "in_channels", ",", "elu", "=", "elu", ")", "\n", "self", ".", "down_tr32", "=", "DownTransition", "(", "\n", "16", ",", "1", ",", "elu", ",", "downsample_stride", "=", "stride_size", "[", "0", "]", ",", "kernel", "=", "kernel_size", "[", "0", "]", ")", "\n", "self", ".", "down_tr64", "=", "DownTransition", "(", "\n", "32", ",", "2", ",", "elu", ",", "downsample_stride", "=", "stride_size", "[", "1", "]", ",", "kernel", "=", "kernel_size", "[", "1", "]", ")", "\n", "self", ".", "down_tr128", "=", "DownTransition", "(", "\n", "64", ",", "\n", "3", ",", "\n", "elu", ",", "\n", "dropout", "=", "True", ",", "\n", "downsample_stride", "=", "stride_size", "[", "2", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "2", "]", ")", "\n", "self", ".", "down_tr256", "=", "DownTransition", "(", "\n", "128", ",", "\n", "2", ",", "\n", "elu", ",", "\n", "dropout", "=", "True", ",", "\n", "downsample_stride", "=", "stride_size", "[", "3", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "3", "]", ")", "\n", "self", ".", "up_tr256", "=", "UpTransition", "(", "\n", "256", ",", "\n", "256", ",", "\n", "2", ",", "\n", "elu", ",", "\n", "dropout", "=", "True", ",", "\n", "dropout2", "=", "True", ",", "\n", "upsample_stride_size", "=", "stride_size", "[", "3", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "3", "]", ")", "\n", "self", ".", "up_tr128", "=", "UpTransition", "(", "\n", "256", ",", "\n", "128", ",", "\n", "2", ",", "\n", "elu", ",", "\n", "dropout", "=", "True", ",", "\n", "dropout2", "=", "True", ",", "\n", "upsample_stride_size", "=", "stride_size", "[", "2", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "2", "]", ")", "\n", "self", ".", "up_tr64", "=", "UpTransition", "(", "\n", "128", ",", "\n", "64", ",", "\n", "1", ",", "\n", "elu", ",", "\n", "upsample_stride_size", "=", "stride_size", "[", "1", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "1", "]", ")", "\n", "self", ".", "up_tr32", "=", "UpTransition", "(", "\n", "64", ",", "\n", "32", ",", "\n", "1", ",", "\n", "elu", ",", "\n", "upsample_stride_size", "=", "stride_size", "[", "0", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "0", "]", ")", "\n", "self", ".", "out_tr32", "=", "OutputTransition", "(", "32", ",", "num_classes", ",", "elu", ")", "\n", "self", ".", "out_tr64", "=", "nn", ".", "Conv3D", "(", "64", ",", "num_classes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "out_tr128", "=", "nn", ".", "Conv3D", "(", "128", ",", "num_classes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "out_tr256", "=", "nn", ".", "Conv3D", "(", "256", ",", "num_classes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "out_tr_all", "=", "OutputTransition", "(", "4", "*", "num_classes", ",", "num_classes", ",", "elu", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.VNetDeepSup.init_weight": [[256, 259], ["medicalseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.VNetDeepSup.forward": [[260, 282], ["vnet_deepsup.VNetDeepSup.in_tr", "vnet_deepsup.VNetDeepSup.down_tr32", "vnet_deepsup.VNetDeepSup.down_tr64", "vnet_deepsup.VNetDeepSup.down_tr128", "vnet_deepsup.VNetDeepSup.down_tr256", "vnet_deepsup.VNetDeepSup.up_tr256", "vnet_deepsup.VNetDeepSup.out_tr256", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "vnet_deepsup.VNetDeepSup.up_tr128", "vnet_deepsup.VNetDeepSup.out_tr128", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "vnet_deepsup.VNetDeepSup.up_tr64", "vnet_deepsup.VNetDeepSup.out_tr64", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "vnet_deepsup.VNetDeepSup.up_tr32", "vnet_deepsup.VNetDeepSup.out_tr32", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out16", "=", "self", ".", "in_tr", "(", "x", ")", "# dropout cause a lot align problem", "\n", "out32", "=", "self", ".", "down_tr32", "(", "out16", ")", "# [4, 32, 256, 256, 9]", "\n", "out64", "=", "self", ".", "down_tr64", "(", "out32", ")", "# [4, 64, 128, 128, 8]", "\n", "out128", "=", "self", ".", "down_tr128", "(", "out64", ")", "# [4, 128, 64, 64, 4]", "\n", "out256", "=", "self", ".", "down_tr256", "(", "out128", ")", "# [4, 256, 32, 32, 2]", "\n", "out", "=", "self", ".", "up_tr256", "(", "out256", ",", "out128", ")", "# [4, 256, 64, 64, 4]", "\n", "d1", "=", "self", ".", "out_tr256", "(", "out", ")", "\n", "d1", "=", "F", ".", "interpolate", "(", "\n", "d1", ",", "size", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "data_format", "=", "'NCDHW'", ",", "mode", "=", "'trilinear'", ")", "\n", "out", "=", "self", ".", "up_tr128", "(", "out", ",", "out64", ")", "# [4, 128, 128, 128, 8]", "\n", "d2", "=", "self", ".", "out_tr128", "(", "out", ")", "\n", "d2", "=", "F", ".", "interpolate", "(", "\n", "d2", ",", "size", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "data_format", "=", "'NCDHW'", ",", "mode", "=", "'trilinear'", ")", "\n", "out", "=", "self", ".", "up_tr64", "(", "out", ",", "out32", ")", "# [4, 64, 256, 256, 9]", "\n", "d3", "=", "self", ".", "out_tr64", "(", "out", ")", "\n", "d3", "=", "F", ".", "interpolate", "(", "\n", "d3", ",", "size", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "data_format", "=", "'NCDHW'", ",", "mode", "=", "'trilinear'", ")", "\n", "out", "=", "self", ".", "up_tr32", "(", "out", ",", "out16", ")", "# [4, 32, 512, 512, 12]", "\n", "out", "=", "self", ".", "out_tr32", "(", "out", ")", "\n", "\n", "return", "[", "out", ",", "d1", ",", "d2", ",", "d3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup.VNetDeepSup.test": [[283, 297], ["np.random.seed", "np.random.rand", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "print", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "print", "vnet_deepsup.VNetDeepSup.forward", "out.mean", "paddle.to_tensor.mean", "paddle.to_tensor.mean", "paddle.to_tensor.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.ScaleLayer.forward"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "import", "numpy", "as", "np", "\n", "np", ".", "random", ".", "seed", "(", "1", ")", "\n", "a", "=", "np", ".", "random", ".", "rand", "(", "1", ",", "self", ".", "in_channels", ",", "32", ",", "32", ",", "32", ")", "\n", "input_tensor", "=", "paddle", ".", "to_tensor", "(", "a", ",", "dtype", "=", "'float32'", ")", "\n", "\n", "ideal_out", "=", "paddle", ".", "rand", "(", "(", "1", ",", "self", ".", "num_classes", ",", "32", ",", "32", ",", "32", ")", ")", "\n", "out", "=", "self", ".", "forward", "(", "input_tensor", ")", "[", "0", "]", "\n", "print", "(", "\"out\"", ",", "out", ".", "mean", "(", ")", ",", "input_tensor", ".", "mean", "(", ")", ")", "\n", "\n", "assert", "ideal_out", ".", "shape", "==", "out", ".", "shape", "\n", "paddle", ".", "summary", "(", "self", ",", "(", "1", ",", "self", ".", "in_channels", ",", "32", ",", "32", ",", "32", ")", ")", "\n", "\n", "print", "(", "\"Vnet test is complete\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet_deepsup._make_nConv": [[46, 55], ["range", "paddle.Sequential", "layers.append", "vnet_deepsup.LUConv"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "_make_nConv", "(", "nchan", ",", "depth", ",", "elu", ")", ":", "\n", "    ", "\"\"\"\n    Make depth number of layer(convbnrelu) and don't change the channel\n    Add Nonlinearity into the network\n    \"\"\"", "\n", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "depth", ")", ":", "\n", "        ", "layers", ".", "append", "(", "LUConv", "(", "nchan", ",", "elu", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.LUConv.__init__": [[33, 39], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nchan", ",", "elu", ")", ":", "\n", "        ", "super", "(", "LUConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "nchan", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3D", "(", "nchan", ",", "nchan", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "nchan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.LUConv.forward": [[40, 44], ["vnet.LUConv.relu1", "vnet.LUConv.bn1", "vnet.LUConv.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.InputTransition.__init__": [[62, 73], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "elu", ")", ":", "\n", "        ", "super", "(", "InputTransition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "16", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3D", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "num_features", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "self", ".", "num_features", ")", "\n", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "self", ".", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.InputTransition.forward": [[74, 80], ["vnet.InputTransition.conv1", "int", "vnet.InputTransition.bn1", "x.tile", "vnet.InputTransition.relu1", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "repeat_rate", "=", "int", "(", "self", ".", "num_features", "/", "self", ".", "in_channels", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "x_tile", "=", "x", ".", "tile", "(", "[", "1", ",", "repeat_rate", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "return", "self", ".", "relu1", "(", "paddle", ".", "add", "(", "out", ",", "x_tile", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.DownTransition.__init__": [[83, 105], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "vnet._make_nConv", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet._make_nConv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "inChans", ",", "\n", "nConvs", ",", "\n", "elu", ",", "\n", "dropout", "=", "False", ",", "\n", "downsample_stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "\n", "kernel", "=", "(", "2", ",", "2", ",", "2", ")", ")", ":", "\n", "        ", "\"\"\"\n        1. double the output channel and downsample the input using down_conv(the kernel size can be changed)\n        2. add dropout by option\n        3. add nConvs layer to add linearity and add with original downsample one\n        \"\"\"", "\n", "super", "(", "DownTransition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "outChans", "=", "2", "*", "inChans", "\n", "self", ".", "if_dropout", "=", "dropout", "\n", "self", ".", "down_conv", "=", "nn", ".", "Conv3D", "(", "\n", "inChans", ",", "outChans", ",", "kernel_size", "=", "kernel", ",", "stride", "=", "downsample_stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "outChans", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "outChans", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "outChans", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout3D", "(", ")", "\n", "self", ".", "ops", "=", "_make_nConv", "(", "outChans", ",", "nConvs", ",", "elu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.DownTransition.forward": [[106, 114], ["vnet.DownTransition.relu1", "vnet.DownTransition.ops", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "vnet.DownTransition.relu2", "vnet.DownTransition.bn1", "vnet.DownTransition.dropout", "vnet.DownTransition.down_conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "down", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "self", ".", "down_conv", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "dropout", "(", "down", ")", "if", "self", ".", "if_dropout", "else", "down", "\n", "out", "=", "self", ".", "ops", "(", "out", ")", "\n", "out", "=", "paddle", ".", "add", "(", "out", ",", "down", ")", "\n", "out", "=", "self", ".", "relu2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.UpTransition.__init__": [[117, 147], ["paddle.Layer.__init__", "paddle.Conv3DTranspose", "paddle.Conv3DTranspose", "paddle.Conv3DTranspose", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "paddle.Dropout3D", "vnet._make_nConv", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet._make_nConv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "inChans", ",", "\n", "outChans", ",", "\n", "nConvs", ",", "\n", "elu", ",", "\n", "dropout", "=", "False", ",", "\n", "dropout2", "=", "False", ",", "\n", "upsample_stride_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "\n", "kernel", "=", "(", "2", ",", "2", ",", "2", ")", ")", ":", "\n", "        ", "super", "(", "UpTransition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\"\"\"\n        1. Add dropout to input and skip input optionally (generalization)\n        2. Use Conv3DTranspose to upsample (upsample)\n        3. concate the upsampled and skipx (multi-leval feature fusion)\n        4. Add nConvs convs and residually add with result of step(residual + nonlinearity)\n        \"\"\"", "\n", "self", ".", "up_conv", "=", "nn", ".", "Conv3DTranspose", "(", "\n", "inChans", ",", "\n", "outChans", "//", "2", ",", "\n", "kernel_size", "=", "kernel", ",", "\n", "stride", "=", "upsample_stride_size", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "outChans", "//", "2", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "outChans", "//", "2", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "outChans", ")", "\n", "self", ".", "if_dropout", "=", "dropout", "\n", "self", ".", "if_dropout2", "=", "dropout2", "\n", "self", ".", "dropout1", "=", "nn", ".", "Dropout3D", "(", ")", "\n", "self", ".", "dropout2", "=", "nn", ".", "Dropout3D", "(", ")", "\n", "self", ".", "ops", "=", "_make_nConv", "(", "outChans", ",", "nConvs", ",", "elu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.UpTransition.forward": [[148, 157], ["vnet.UpTransition.relu1", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "vnet.UpTransition.ops", "vnet.UpTransition.relu2", "vnet.UpTransition.dropout1", "vnet.UpTransition.dropout2", "vnet.UpTransition.bn1", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "vnet.UpTransition.up_conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ",", "skipx", ")", ":", "\n", "        ", "out", "=", "self", ".", "dropout1", "(", "x", ")", "if", "self", ".", "if_dropout", "else", "x", "\n", "skipx", "=", "self", ".", "dropout2", "(", "skipx", ")", "if", "self", ".", "if_dropout2", "else", "skipx", "\n", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "self", ".", "up_conv", "(", "out", ")", ")", ")", "\n", "xcat", "=", "paddle", ".", "concat", "(", "(", "out", ",", "skipx", ")", ",", "1", ")", "\n", "out", "=", "self", ".", "ops", "(", "xcat", ")", "\n", "out", "=", "self", ".", "relu2", "(", "paddle", ".", "add", "(", "out", ",", "xcat", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.OutputTransition.__init__": [[160, 171], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.BatchNorm3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.ELU", "paddle.ELU", "paddle.ELU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "num_classes", ",", "elu", ")", ":", "\n", "        ", "\"\"\"\n        conv the output down to channels as the desired classesv\n        \"\"\"", "\n", "super", "(", "OutputTransition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3D", "(", "\n", "in_channels", ",", "num_classes", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3D", "(", "num_classes", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv3D", "(", "num_classes", ",", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ELU", "(", ")", "if", "elu", "else", "nn", ".", "PReLU", "(", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.OutputTransition.forward": [[172, 176], ["vnet.OutputTransition.relu1", "vnet.OutputTransition.conv2", "vnet.OutputTransition.bn1", "vnet.OutputTransition.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.VNet.__init__": [[184, 251], ["paddle.Layer.__init__", "vnet.InputTransition", "vnet.DownTransition", "vnet.DownTransition", "vnet.DownTransition", "vnet.DownTransition", "vnet.UpTransition", "vnet.UpTransition", "vnet.UpTransition", "vnet.UpTransition", "vnet.OutputTransition", "vnet.VNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "elu", "=", "False", ",", "\n", "in_channels", "=", "1", ",", "\n", "num_classes", "=", "4", ",", "\n", "pretrained", "=", "None", ",", "\n", "kernel_size", "=", "(", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ")", ",", "\n", "stride_size", "=", "(", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ",", "(", "2", ",", "2", ",", "2", ")", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "best_loss", "=", "1000000", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "in_tr", "=", "InputTransition", "(", "in_channels", ",", "elu", "=", "elu", ")", "\n", "self", ".", "down_tr32", "=", "DownTransition", "(", "\n", "16", ",", "1", ",", "elu", ",", "downsample_stride", "=", "stride_size", "[", "0", "]", ",", "kernel", "=", "kernel_size", "[", "0", "]", ")", "\n", "self", ".", "down_tr64", "=", "DownTransition", "(", "\n", "32", ",", "2", ",", "elu", ",", "downsample_stride", "=", "stride_size", "[", "1", "]", ",", "kernel", "=", "kernel_size", "[", "1", "]", ")", "\n", "self", ".", "down_tr128", "=", "DownTransition", "(", "\n", "64", ",", "\n", "3", ",", "\n", "elu", ",", "\n", "dropout", "=", "True", ",", "\n", "downsample_stride", "=", "stride_size", "[", "2", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "2", "]", ")", "\n", "self", ".", "down_tr256", "=", "DownTransition", "(", "\n", "128", ",", "\n", "2", ",", "\n", "elu", ",", "\n", "dropout", "=", "True", ",", "\n", "downsample_stride", "=", "stride_size", "[", "3", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "3", "]", ")", "\n", "self", ".", "up_tr256", "=", "UpTransition", "(", "\n", "256", ",", "\n", "256", ",", "\n", "2", ",", "\n", "elu", ",", "\n", "dropout", "=", "True", ",", "\n", "dropout2", "=", "True", ",", "\n", "upsample_stride_size", "=", "stride_size", "[", "3", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "3", "]", ")", "\n", "self", ".", "up_tr128", "=", "UpTransition", "(", "\n", "256", ",", "\n", "128", ",", "\n", "2", ",", "\n", "elu", ",", "\n", "dropout", "=", "True", ",", "\n", "dropout2", "=", "True", ",", "\n", "upsample_stride_size", "=", "stride_size", "[", "2", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "2", "]", ")", "\n", "self", ".", "up_tr64", "=", "UpTransition", "(", "\n", "128", ",", "\n", "64", ",", "\n", "1", ",", "\n", "elu", ",", "\n", "upsample_stride_size", "=", "stride_size", "[", "1", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "1", "]", ")", "\n", "self", ".", "up_tr32", "=", "UpTransition", "(", "\n", "64", ",", "\n", "32", ",", "\n", "1", ",", "\n", "elu", ",", "\n", "upsample_stride_size", "=", "stride_size", "[", "0", "]", ",", "\n", "kernel", "=", "kernel_size", "[", "0", "]", ")", "\n", "self", ".", "out_tr", "=", "OutputTransition", "(", "32", ",", "num_classes", ",", "elu", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.VNet.init_weight": [[252, 255], ["medicalseg.utils.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.VNet.forward": [[256, 268], ["vnet.VNet.in_tr", "vnet.VNet.down_tr32", "vnet.VNet.down_tr64", "vnet.VNet.down_tr128", "vnet.VNet.down_tr256", "vnet.VNet.up_tr256", "vnet.VNet.up_tr128", "vnet.VNet.up_tr64", "vnet.VNet.up_tr32", "vnet.VNet.out_tr"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out16", "=", "self", ".", "in_tr", "(", "x", ")", "# dropout cause a lot align problem", "\n", "out32", "=", "self", ".", "down_tr32", "(", "out16", ")", "# [4, 32, 256, 256, 9]", "\n", "out64", "=", "self", ".", "down_tr64", "(", "out32", ")", "# [4, 64, 128, 128, 8]", "\n", "out128", "=", "self", ".", "down_tr128", "(", "out64", ")", "# [4, 128, 64, 64, 4]", "\n", "out256", "=", "self", ".", "down_tr256", "(", "out128", ")", "# [4, 256, 32, 32, 2]", "\n", "out", "=", "self", ".", "up_tr256", "(", "out256", ",", "out128", ")", "# [4, 256, 64, 64, 4]", "\n", "out", "=", "self", ".", "up_tr128", "(", "out", ",", "out64", ")", "# [4, 128, 128, 128, 8]", "\n", "out", "=", "self", ".", "up_tr64", "(", "out", ",", "out32", ")", "# [4, 64, 256, 256, 9]", "\n", "out", "=", "self", ".", "up_tr32", "(", "out", ",", "out16", ")", "# [4, 32, 512, 512, 12]", "\n", "out", "=", "self", ".", "out_tr", "(", "out", ")", "\n", "return", "[", "out", ",", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet.VNet.test": [[269, 283], ["np.random.seed", "np.random.rand", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "print", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "paddle.summary", "print", "vnet.VNet.forward", "out.mean", "paddle.to_tensor.mean", "paddle.to_tensor.mean", "paddle.to_tensor.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.ScaleLayer.forward"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "import", "numpy", "as", "np", "\n", "np", ".", "random", ".", "seed", "(", "1", ")", "\n", "a", "=", "np", ".", "random", ".", "rand", "(", "1", ",", "self", ".", "in_channels", ",", "32", ",", "32", ",", "32", ")", "\n", "input_tensor", "=", "paddle", ".", "to_tensor", "(", "a", ",", "dtype", "=", "'float32'", ")", "\n", "\n", "ideal_out", "=", "paddle", ".", "rand", "(", "(", "1", ",", "self", ".", "num_classes", ",", "32", ",", "32", ",", "32", ")", ")", "\n", "out", "=", "self", ".", "forward", "(", "input_tensor", ")", "[", "0", "]", "\n", "print", "(", "\"out\"", ",", "out", ".", "mean", "(", ")", ",", "input_tensor", ".", "mean", "(", ")", ")", "\n", "\n", "assert", "ideal_out", ".", "shape", "==", "out", ".", "shape", "\n", "paddle", ".", "summary", "(", "self", ",", "(", "1", ",", "self", ".", "in_channels", ",", "32", ",", "32", ",", "32", ")", ")", "\n", "\n", "print", "(", "\"Vnet test is complete\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.vnet._make_nConv": [[46, 55], ["range", "paddle.Sequential", "layers.append", "vnet.LUConv"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "_make_nConv", "(", "nchan", ",", "depth", ",", "elu", ")", ":", "\n", "    ", "\"\"\"\n    Make depth number of layer(convbnrelu) and don't change the channel\n    Add Nonlinearity into the network\n    \"\"\"", "\n", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "depth", ")", ":", "\n", "        ", "layers", ".", "append", "(", "LUConv", "(", "nchan", ",", "elu", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplabv2.DeepLabV2.__init__": [[48, 68], ["paddle.Layer.__init__", "deeplabv2.edge_branch", "backbones.resnet.ClassifierModule", "deeplabv2.DeepLabV2.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "backbone", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ",", "\n", "shape_stream", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "shape_stream", "=", "shape_stream", "\n", "self", ".", "head", "=", "edge_branch", "(", "\n", "inplanes", "=", "(", "64", ",", "2048", ")", ",", "\n", "out_channels", "=", "1024", ",", "\n", "dilation_series", "=", "[", "6", ",", "12", ",", "18", ",", "24", "]", ",", "\n", "padding_series", "=", "[", "6", ",", "12", ",", "18", ",", "24", "]", ",", "\n", "num_classes", "=", "2", ")", "\n", "\n", "self", ".", "fusion", "=", "ClassifierModule", "(", "21", ",", "[", "6", ",", "18", ",", "30", ",", "42", "]", ",", "[", "6", ",", "18", ",", "30", ",", "42", "]", ",", "19", ")", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplabv2.DeepLabV2.forward": [[69, 91], ["deeplabv2.DeepLabV2.backbone", "deeplabv2.DeepLabV2.head", "deeplabv2.DeepLabV2.extend", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "\n", "if", "self", ".", "shape_stream", ":", "\n", "            ", "logit_list", "=", "self", ".", "head", "(", "self", ".", "backbone", ".", "conv1_logit", ",", "feat_list", "[", "-", "1", "]", ")", "\n", "logit_list", ".", "extend", "(", "feat_list", "[", ":", "2", "]", ")", "\n", "edge_logit", ",", "seg_logit", ",", "aug_logit", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "x", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n", "return", "[", "seg_logit", ",", "aug_logit", ",", "edge_logit", "]", "\n", "", "else", ":", "\n", "            ", "logit_list", "=", "feat_list", "[", ":", "2", "]", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "x", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "# x6, x_aug", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplabv2.DeepLabV2.init_weight": [[93, 119], ["paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "deeplabv2.DeepLabV2.backbone.state_dict", "deeplabv2.DeepLabV2.keys", "deeplabv2.DeepLabV2.backbone.set_dict", "paddleseg.utils.logger.info", "k.split", "paddleseg.utils.logger.warning", "len", "paddleseg.utils.logger.warning", "list", "list", "paddleseg.utils.logger.warning"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning"], ["", "", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "para_state_dict", "=", "paddle", ".", "load", "(", "self", ".", "pretrained", ")", "\n", "model_state_dict", "=", "self", ".", "backbone", ".", "state_dict", "(", ")", "\n", "keys", "=", "model_state_dict", ".", "keys", "(", ")", "\n", "num_params_loaded", "=", "0", "\n", "for", "k", "in", "keys", ":", "\n", "                ", "k_parts", "=", "k", ".", "split", "(", "'.'", ")", "\n", "torchkey", "=", "'backbone.'", "+", "k", "\n", "if", "k_parts", "[", "1", "]", "==", "'layer5'", ":", "\n", "                    ", "logger", ".", "warning", "(", "\"{} should not be loaded\"", ".", "format", "(", "k", ")", ")", "\n", "", "elif", "torchkey", "not", "in", "para_state_dict", ":", "\n", "                    ", "logger", ".", "warning", "(", "\"{} is not in pretrained model\"", ".", "format", "(", "k", ")", ")", "\n", "", "elif", "list", "(", "para_state_dict", "[", "torchkey", "]", ".", "shape", ")", "!=", "list", "(", "\n", "model_state_dict", "[", "k", "]", ".", "shape", ")", ":", "\n", "                    ", "logger", ".", "warning", "(", "\n", "\"[SKIP] Shape of pretrained params {} doesn't match.(Pretrained: {}, Actual: {})\"", "\n", ".", "format", "(", "k", ",", "para_state_dict", "[", "torchkey", "]", ".", "shape", ",", "\n", "model_state_dict", "[", "k", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "                    ", "model_state_dict", "[", "k", "]", "=", "para_state_dict", "[", "torchkey", "]", "\n", "num_params_loaded", "+=", "1", "\n", "", "", "self", ".", "backbone", ".", "set_dict", "(", "model_state_dict", ")", "\n", "logger", ".", "info", "(", "\"There are {}/{} variables loaded into {}.\"", ".", "format", "(", "\n", "num_params_loaded", ",", "\n", "len", "(", "model_state_dict", ")", ",", "self", ".", "backbone", ".", "__class__", ".", "__name__", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplabv2.edge_branch.__init__": [[122, 161], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.backbones.resnet_vd.ConvBNLayer", "paddleseg.models.backbones.resnet_vd.ConvBNLayer", "paddleseg.models.layers.Add", "paddleseg.models.layers.Activation", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "zip", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "deeplabv2.edge_branch.conv2d_list.append", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "out_channels", ",", "dilation_series", ",", "padding_series", ",", "\n", "num_classes", ")", ":", "\n", "        ", "super", "(", "edge_branch", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_x1", "=", "nn", ".", "Conv2D", "(", "inplanes", "[", "0", "]", ",", "512", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "conv_x4", "=", "nn", ".", "Conv2D", "(", "inplanes", "[", "1", "]", ",", "512", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "conv0", "=", "resnet_vd", ".", "ConvBNLayer", "(", "\n", "in_channels", "=", "512", "*", "2", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "act", "=", "'relu'", ")", "\n", "self", ".", "conv1", "=", "resnet_vd", ".", "ConvBNLayer", "(", "\n", "in_channels", "=", "out_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "act", "=", "None", ")", "\n", "\n", "self", ".", "add", "=", "layers", ".", "Add", "(", ")", "\n", "self", ".", "relu", "=", "layers", ".", "Activation", "(", "act", "=", "\"relu\"", ")", "\n", "\n", "self", ".", "conv2d_list", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "dilation", ",", "padding", "in", "zip", "(", "dilation_series", ",", "padding_series", ")", ":", "\n", "            ", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", "std", "=", "0.01", ")", ",", "learning_rate", "=", "10.0", ")", "\n", "bias_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "value", "=", "0.0", ")", ",", "\n", "learning_rate", "=", "10.0", ")", "\n", "self", ".", "conv2d_list", ".", "append", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "out_channels", ",", "\n", "num_classes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "weight_attr", "=", "weight_attr", ",", "\n", "bias_attr", "=", "bias_attr", ")", ")", "\n", "", "self", ".", "classifier", "=", "nn", ".", "Conv2D", "(", "\n", "out_channels", ",", "num_classes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.deeplabv2.edge_branch.forward": [[162, 183], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "deeplabv2.edge_branch.conv_x1", "deeplabv2.edge_branch.conv_x4", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "deeplabv2.edge_branch.conv0", "deeplabv2.edge_branch.conv1", "deeplabv2.edge_branch.add", "deeplabv2.edge_branch.relu", "range", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "conv1_logit", ",", "x4", ")", ":", "\n", "        ", "H", "=", "paddle", ".", "shape", "(", "x4", ")", "[", "2", "]", "\n", "W", "=", "paddle", ".", "shape", "(", "x4", ")", "[", "3", "]", "\n", "conv1_logit", "=", "F", ".", "interpolate", "(", "\n", "conv1_logit", ",", "size", "=", "[", "H", ",", "W", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "conv1_logit", "=", "self", ".", "conv_x1", "(", "conv1_logit", ")", "\n", "x4", "=", "self", ".", "conv_x4", "(", "x4", ")", "# 1, 512, 81,161", "\n", "\n", "feats", "=", "paddle", ".", "concat", "(", "[", "conv1_logit", ",", "x4", "]", ",", "axis", "=", "1", ")", "\n", "y", "=", "self", ".", "conv0", "(", "feats", ")", "\n", "y", "=", "self", ".", "conv1", "(", "y", ")", "\n", "\n", "y", "=", "self", ".", "add", "(", "feats", ",", "y", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "\n", "out", "=", "self", ".", "conv2d_list", "[", "0", "]", "(", "y", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "conv2d_list", ")", "-", "1", ")", ":", "\n", "            ", "out", "+=", "self", ".", "conv2d_list", "[", "i", "+", "1", "]", "(", "y", ")", "\n", "\n", "", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.__init__": [[21, 30], ["ema.EMA.get_model_state", "ema.EMA.model.named_parameters", "ema.EMA.model.named_buffers"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.get_model_state"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.update_params": [[31, 38], ["ema.EMA.model.state_dict", "state[].detach().clone", "state[].detach"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.update_buffer": [[39, 44], ["ema.EMA.model.state_dict", "state[].detach().clone", "state[].detach"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.apply_shadow": [[45, 48], ["ema.EMA.get_model_state", "ema.EMA.model.set_dict"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.get_model_state"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.restore": [[49, 51], ["ema.EMA.model.load_dict"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.get_model_state": [[52, 57], ["v.clone().detach", "ema.EMA.model.state_dict().items", "v.clone", "ema.EMA.model.state_dict"], "methods", ["None"], ["\n", "\n", "def", "__init__", "(", "self", ",", "model", ",", "decay", "=", "0.99", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.nonlocal2d.NonLocal2D.__init__": [[35, 90], ["paddle.Layer.__init__", "max", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "ValueError", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.ConvBNReLU", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "reduction", "=", "2", ",", "\n", "use_scale", "=", "True", ",", "\n", "sub_sample", "=", "False", ",", "\n", "mode", "=", "'embedded_gaussian'", ")", ":", "\n", "        ", "super", "(", "NonLocal2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "reduction", "=", "reduction", "\n", "self", ".", "use_scale", "=", "use_scale", "\n", "self", ".", "sub_sample", "=", "sub_sample", "\n", "self", ".", "mode", "=", "mode", "\n", "if", "mode", "not", "in", "[", "\n", "'gaussian'", ",", "'embedded_gaussian'", ",", "'dot_product'", ",", "'concatenation'", "\n", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Mode should be in 'gaussian', 'concatenation','embedded_gaussian' or 'dot_product'.\"", "\n", ")", "\n", "\n", "", "self", ".", "inter_channels", "=", "max", "(", "in_channels", "//", "reduction", ",", "1", ")", "\n", "\n", "self", ".", "g", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "self", ".", "in_channels", ",", "\n", "out_channels", "=", "self", ".", "inter_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "conv_out", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "self", ".", "inter_channels", ",", "\n", "out_channels", "=", "self", ".", "in_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "if", "self", ".", "mode", "!=", "\"gaussian\"", ":", "\n", "            ", "self", ".", "theta", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "self", ".", "in_channels", ",", "\n", "out_channels", "=", "self", ".", "inter_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "phi", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "self", ".", "in_channels", ",", "\n", "out_channels", "=", "self", ".", "inter_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "\n", "", "if", "self", ".", "mode", "==", "\"concatenation\"", ":", "\n", "            ", "self", ".", "concat_project", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "self", ".", "inter_channels", "*", "2", ",", "\n", "out_channels", "=", "1", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "sub_sample", ":", "\n", "            ", "max_pool_layer", "=", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "(", "2", ",", "2", ")", ")", "\n", "self", ".", "g", "=", "nn", ".", "Sequential", "(", "self", ".", "g", ",", "max_pool_layer", ")", "\n", "if", "self", ".", "mode", "!=", "'gaussian'", ":", "\n", "                ", "self", ".", "phi", "=", "nn", ".", "Sequential", "(", "self", ".", "phi", ",", "max_pool_layer", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "phi", "=", "max_pool_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.nonlocal2d.NonLocal2D.gaussian": [[91, 95], ["paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.softmax", "paddle.softmax", "paddle.softmax"], "methods", ["None"], ["", "", "", "def", "gaussian", "(", "self", ",", "theta_x", ",", "phi_x", ")", ":", "\n", "        ", "pairwise_weight", "=", "paddle", ".", "matmul", "(", "theta_x", ",", "phi_x", ")", "\n", "pairwise_weight", "=", "F", ".", "softmax", "(", "pairwise_weight", ",", "axis", "=", "-", "1", ")", "\n", "return", "pairwise_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.nonlocal2d.NonLocal2D.embedded_gaussian": [[96, 102], ["paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.softmax", "paddle.softmax", "paddle.softmax"], "methods", ["None"], ["", "def", "embedded_gaussian", "(", "self", ",", "theta_x", ",", "phi_x", ")", ":", "\n", "        ", "pairwise_weight", "=", "paddle", ".", "matmul", "(", "theta_x", ",", "phi_x", ")", "\n", "if", "self", ".", "use_scale", ":", "\n", "            ", "pairwise_weight", "/=", "theta_x", ".", "shape", "[", "-", "1", "]", "**", "0.5", "\n", "", "pairwise_weight", "=", "F", ".", "softmax", "(", "pairwise_weight", ",", "-", "1", ")", "\n", "return", "pairwise_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.nonlocal2d.NonLocal2D.dot_product": [[103, 107], ["paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul"], "methods", ["None"], ["", "def", "dot_product", "(", "self", ",", "theta_x", ",", "phi_x", ")", ":", "\n", "        ", "pairwise_weight", "=", "paddle", ".", "matmul", "(", "theta_x", ",", "phi_x", ")", "\n", "pairwise_weight", "/=", "pairwise_weight", ".", "shape", "[", "-", "1", "]", "\n", "return", "pairwise_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.nonlocal2d.NonLocal2D.concatenation": [[108, 120], ["paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "nonlocal2d.NonLocal2D.concat_project", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["None"], ["", "def", "concatenation", "(", "self", ",", "theta_x", ",", "phi_x", ")", ":", "\n", "        ", "h", "=", "theta_x", ".", "shape", "[", "2", "]", "\n", "w", "=", "phi_x", ".", "shape", "[", "3", "]", "\n", "theta_x", "=", "paddle", ".", "tile", "(", "theta_x", ",", "[", "1", ",", "1", ",", "1", ",", "w", "]", ")", "\n", "phi_x", "=", "paddle", ".", "tile", "(", "phi_x", ",", "[", "1", ",", "1", ",", "h", ",", "1", "]", ")", "\n", "\n", "concat_feature", "=", "paddle", ".", "concat", "(", "[", "theta_x", ",", "phi_x", "]", ",", "axis", "=", "1", ")", "\n", "pairwise_weight", "=", "self", ".", "concat_project", "(", "concat_feature", ")", "\n", "n", ",", "_", ",", "h", ",", "w", "=", "pairwise_weight", ".", "shape", "\n", "pairwise_weight", "=", "paddle", ".", "reshape", "(", "pairwise_weight", ",", "[", "n", ",", "h", ",", "w", "]", ")", "\n", "pairwise_weight", "/=", "pairwise_weight", ".", "shape", "[", "-", "1", "]", "\n", "return", "pairwise_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.nonlocal2d.NonLocal2D.forward": [[121, 155], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "getattr", "getattr.", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "nonlocal2d.NonLocal2D.g", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "nonlocal2d.NonLocal2D.conv_out", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "nonlocal2d.NonLocal2D.phi", "nonlocal2d.NonLocal2D.theta", "nonlocal2d.NonLocal2D.phi", "nonlocal2d.NonLocal2D.theta", "nonlocal2d.NonLocal2D.phi"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "g_x", "=", "paddle", ".", "reshape", "(", "self", ".", "g", "(", "x", ")", ",", "[", "n", ",", "self", ".", "inter_channels", ",", "-", "1", "]", ")", "\n", "g_x", "=", "paddle", ".", "transpose", "(", "g_x", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'gaussian'", ":", "\n", "            ", "theta_x", "=", "paddle", ".", "reshape", "(", "x", ",", "[", "n", ",", "self", ".", "inter_channels", ",", "-", "1", "]", ")", "\n", "theta_x", "=", "paddle", ".", "transpose", "(", "theta_x", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "if", "self", ".", "sub_sample", ":", "\n", "                ", "phi_x", "=", "paddle", ".", "reshape", "(", "\n", "self", ".", "phi", "(", "x", ")", ",", "[", "n", ",", "self", ".", "inter_channels", ",", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "phi_x", "=", "paddle", ".", "reshape", "(", "x", ",", "[", "n", ",", "self", ".", "in_channels", ",", "-", "1", "]", ")", "\n", "\n", "", "", "elif", "self", ".", "mode", "==", "'concatenation'", ":", "\n", "            ", "theta_x", "=", "paddle", ".", "reshape", "(", "\n", "self", ".", "theta", "(", "x", ")", ",", "[", "n", ",", "self", ".", "inter_channels", ",", "-", "1", ",", "1", "]", ")", "\n", "phi_x", "=", "paddle", ".", "reshape", "(", "self", ".", "phi", "(", "x", ")", ",", "[", "n", ",", "self", ".", "inter_channels", ",", "1", ",", "-", "1", "]", ")", "\n", "\n", "", "else", ":", "\n", "            ", "theta_x", "=", "paddle", ".", "reshape", "(", "\n", "self", ".", "theta", "(", "x", ")", ",", "[", "n", ",", "self", ".", "inter_channels", ",", "-", "1", "]", ")", "\n", "theta_x", "=", "paddle", ".", "transpose", "(", "theta_x", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "phi_x", "=", "paddle", ".", "reshape", "(", "self", ".", "phi", "(", "x", ")", ",", "[", "n", ",", "self", ".", "inter_channels", ",", "-", "1", "]", ")", "\n", "\n", "", "pairwise_func", "=", "getattr", "(", "self", ",", "self", ".", "mode", ")", "\n", "pairwise_weight", "=", "pairwise_func", "(", "theta_x", ",", "phi_x", ")", "\n", "y", "=", "paddle", ".", "matmul", "(", "pairwise_weight", ",", "g_x", ")", "\n", "y", "=", "paddle", ".", "transpose", "(", "y", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "y", "=", "paddle", ".", "reshape", "(", "y", ",", "[", "n", ",", "self", ".", "inter_channels", ",", "h", ",", "w", "]", ")", "\n", "\n", "output", "=", "x", "+", "self", ".", "conv_out", "(", "y", ")", "\n", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.pyramid_pool.ASPPModule.__init__": [[36, 87], ["paddle.nn.Layer.__init__", "paddle.nn.LayerList", "paddle.nn.LayerList", "len", "paddleseg.models.layers.ConvBNReLU", "paddle.nn.Dropout", "paddle.nn.Dropout", "conv_func", "pyramid_pool.ASPPModule.aspp_blocks.append", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.AdaptiveAvgPool2D", "paddle.nn.AdaptiveAvgPool2D", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "aspp_ratios", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "align_corners", ",", "\n", "use_sep_conv", "=", "False", ",", "\n", "image_pooling", "=", "False", ",", "\n", "data_format", "=", "'NCHW'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "data_format", "=", "data_format", "\n", "self", ".", "aspp_blocks", "=", "nn", ".", "LayerList", "(", ")", "\n", "\n", "for", "ratio", "in", "aspp_ratios", ":", "\n", "            ", "if", "use_sep_conv", "and", "ratio", ">", "1", ":", "\n", "                ", "conv_func", "=", "layers", ".", "SeparableConvBNReLU", "\n", "", "else", ":", "\n", "                ", "conv_func", "=", "layers", ".", "ConvBNReLU", "\n", "\n", "", "block", "=", "conv_func", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", "if", "ratio", "==", "1", "else", "3", ",", "\n", "dilation", "=", "ratio", ",", "\n", "padding", "=", "0", "if", "ratio", "==", "1", "else", "ratio", ",", "\n", "data_format", "=", "data_format", ")", "\n", "self", ".", "aspp_blocks", ".", "append", "(", "block", ")", "\n", "\n", "", "out_size", "=", "len", "(", "self", ".", "aspp_blocks", ")", "\n", "\n", "if", "image_pooling", ":", "\n", "            ", "self", ".", "global_avg_pool", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2D", "(", "\n", "output_size", "=", "(", "1", ",", "1", ")", ",", "data_format", "=", "data_format", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "data_format", "=", "data_format", ")", ")", "\n", "out_size", "+=", "1", "\n", "", "self", ".", "image_pooling", "=", "image_pooling", "\n", "\n", "self", ".", "conv_bn_relu", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "out_channels", "*", "out_size", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "data_format", "=", "data_format", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.1", ")", "# drop rate", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.pyramid_pool.ASPPModule.forward": [[88, 115], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "pyramid_pool.ASPPModule.conv_bn_relu", "pyramid_pool.ASPPModule.dropout", "block", "outputs.append", "pyramid_pool.ASPPModule.global_avg_pool", "paddle.interpolate", "paddle.interpolate", "outputs.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outputs", "=", "[", "]", "\n", "if", "self", ".", "data_format", "==", "'NCHW'", ":", "\n", "            ", "interpolate_shape", "=", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", "\n", "axis", "=", "1", "\n", "", "else", ":", "\n", "            ", "interpolate_shape", "=", "paddle", ".", "shape", "(", "x", ")", "[", "1", ":", "3", "]", "\n", "axis", "=", "-", "1", "\n", "", "for", "block", "in", "self", ".", "aspp_blocks", ":", "\n", "            ", "y", "=", "block", "(", "x", ")", "\n", "outputs", ".", "append", "(", "y", ")", "\n", "\n", "", "if", "self", ".", "image_pooling", ":", "\n", "            ", "img_avg", "=", "self", ".", "global_avg_pool", "(", "x", ")", "\n", "img_avg", "=", "F", ".", "interpolate", "(", "\n", "img_avg", ",", "\n", "interpolate_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", "data_format", "=", "self", ".", "data_format", ")", "\n", "outputs", ".", "append", "(", "img_avg", ")", "\n", "\n", "", "x", "=", "paddle", ".", "concat", "(", "outputs", ",", "axis", "=", "axis", ")", "\n", "x", "=", "self", ".", "conv_bn_relu", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.pyramid_pool.PPModule.__init__": [[130, 153], ["paddle.nn.Layer.__init__", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddleseg.models.layers.ConvBNReLU", "len", "pyramid_pool.PPModule._make_stage", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.pyramid_pool.PPModule._make_stage"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "bin_sizes", ",", "dim_reduction", ",", "\n", "align_corners", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bin_sizes", "=", "bin_sizes", "\n", "\n", "inter_channels", "=", "in_channels", "\n", "if", "dim_reduction", ":", "\n", "            ", "inter_channels", "=", "in_channels", "//", "len", "(", "bin_sizes", ")", "\n", "\n", "# we use dimension reduction after pooling mentioned in original implementation.", "\n", "", "self", ".", "stages", "=", "nn", ".", "LayerList", "(", "[", "\n", "self", ".", "_make_stage", "(", "in_channels", ",", "inter_channels", ",", "size", ")", "\n", "for", "size", "in", "bin_sizes", "\n", "]", ")", "\n", "\n", "self", ".", "conv_bn_relu2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "+", "inter_channels", "*", "len", "(", "bin_sizes", ")", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.pyramid_pool.PPModule._make_stage": [[154, 177], ["paddle.nn.AdaptiveAvgPool2D", "paddle.nn.AdaptiveAvgPool2D", "paddleseg.models.layers.ConvBNReLU", "paddle.nn.Sequential", "paddle.nn.Sequential"], "methods", ["None"], ["", "def", "_make_stage", "(", "self", ",", "in_channels", ",", "out_channels", ",", "size", ")", ":", "\n", "        ", "\"\"\"\n        Create one pooling layer.\n\n        In our implementation, we adopt the same dimension reduction as the original paper that might be\n        slightly different with other implementations.\n\n        After pooling, the channels are reduced to 1/len(bin_sizes) immediately, while some other implementations\n        keep the channels to be same.\n\n        Args:\n            in_channels (int): The number of intput channels to pyramid pooling module.\n            size (int): The out size of the pooled layer.\n\n        Returns:\n            conv (Tensor): A tensor after Pyramid Pooling Module.\n        \"\"\"", "\n", "\n", "prior", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "output_size", "=", "(", "size", ",", "size", ")", ")", "\n", "conv", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "1", ")", "\n", "\n", "return", "nn", ".", "Sequential", "(", "prior", ",", "conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.pyramid_pool.PPModule.forward": [[178, 193], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "pyramid_pool.PPModule.conv_bn_relu2", "stage", "paddle.interpolate", "paddle.interpolate", "cat_layers.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "cat_layers", "=", "[", "]", "\n", "for", "stage", "in", "self", ".", "stages", ":", "\n", "            ", "x", "=", "stage", "(", "input", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "\n", "x", ",", "\n", "paddle", ".", "shape", "(", "input", ")", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "cat_layers", ".", "append", "(", "x", ")", "\n", "", "cat_layers", "=", "[", "input", "]", "+", "cat_layers", "[", ":", ":", "-", "1", "]", "\n", "cat", "=", "paddle", ".", "concat", "(", "cat_layers", ",", "axis", "=", "1", ")", "\n", "out", "=", "self", ".", "conv_bn_relu2", "(", "cat", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.activation.Activation.__init__": [[52, 68], ["paddle.Layer.__init__", "paddle.layer.activation.__dict__.keys", "dict", "act.lower", "zip", "dict.keys", "eval", "KeyError", "dict.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["def", "__init__", "(", "self", ",", "act", "=", "None", ")", ":", "\n", "        ", "super", "(", "Activation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_act", "=", "act", "\n", "upper_act_names", "=", "nn", ".", "layer", ".", "activation", ".", "__dict__", ".", "keys", "(", ")", "\n", "lower_act_names", "=", "[", "act", ".", "lower", "(", ")", "for", "act", "in", "upper_act_names", "]", "\n", "act_dict", "=", "dict", "(", "zip", "(", "lower_act_names", ",", "upper_act_names", ")", ")", "\n", "\n", "if", "act", "is", "not", "None", ":", "\n", "            ", "if", "act", "in", "act_dict", ".", "keys", "(", ")", ":", "\n", "                ", "act_name", "=", "act_dict", "[", "act", "]", "\n", "self", ".", "act_func", "=", "eval", "(", "\"nn.layer.activation.{}()\"", ".", "format", "(", "\n", "act_name", ")", ")", "\n", "", "else", ":", "\n", "                ", "raise", "KeyError", "(", "\"{} does not exist in the current {}\"", ".", "format", "(", "\n", "act", ",", "act_dict", ".", "keys", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.activation.Activation.forward": [[69, 74], ["activation.Activation.act_func"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "_act", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "act_func", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Add.__init__": [[23, 25], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Add.forward": [[26, 28], ["paddle.add", "paddle.add", "paddle.add", "paddle.add"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "paddle", ".", "add", "(", "x", ",", "y", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Subtract.__init__": [[31, 33], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Subtract.forward": [[34, 36], ["paddle.subtract", "paddle.subtract", "paddle.subtract", "paddle.subtract"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "paddle", ".", "subtract", "(", "x", ",", "y", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Multiply.__init__": [[39, 41], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Multiply.forward": [[42, 44], ["paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "paddle", ".", "multiply", "(", "x", ",", "y", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Divide.__init__": [[47, 49], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Divide.forward": [[50, 52], ["paddle.divide", "paddle.divide", "paddle.divide", "paddle.divide"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "paddle", ".", "divide", "(", "x", ",", "y", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Reshape.__init__": [[55, 57], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Reshape.forward": [[58, 60], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "shape", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "paddle", ".", "reshape", "(", "x", ",", "shape", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Transpose.__init__": [[63, 65], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Transpose.forward": [[66, 68], ["paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "perm", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "paddle", ".", "transpose", "(", "x", ",", "perm", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Concat.__init__": [[71, 73], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Concat.forward": [[74, 76], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "axis", "=", "0", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "paddle", ".", "concat", "(", "x", ",", "axis", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Flatten.__init__": [[79, 81], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.wrap_functions.Flatten.forward": [[82, 84], ["paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "def", "forward", "(", "self", ",", "x", ",", "start_axis", "=", "0", ",", "stop_axis", "=", "-", "1", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "paddle", ".", "flatten", "(", "x", ",", "start_axis", ",", "stop_axis", ",", "name", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.__init__": [[34, 42], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "x_ch", ",", "y_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "resize_mode", "=", "'bilinear'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_x", "=", "layers", ".", "ConvBNReLU", "(", "\n", "x_ch", ",", "y_ch", ",", "kernel_size", "=", "ksize", ",", "padding", "=", "ksize", "//", "2", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_out", "=", "layers", ".", "ConvBNReLU", "(", "\n", "y_ch", ",", "out_ch", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "resize_mode", "=", "resize_mode", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.check": [[43, 48], ["None"], "methods", ["None"], ["", "def", "check", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "assert", "x", ".", "ndim", "==", "4", "and", "y", ".", "ndim", "==", "4", "\n", "x_h", ",", "x_w", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "y_h", ",", "y_w", "=", "y", ".", "shape", "[", "2", ":", "]", "\n", "assert", "x_h", ">=", "y_h", "and", "x_w", ">=", "y_w", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.prepare": [[49, 53], ["tensor_fusion.UAFM.prepare_x", "tensor_fusion.UAFM.prepare_y"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.prepare_x", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.prepare_y"], ["", "def", "prepare", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "self", ".", "prepare_x", "(", "x", ",", "y", ")", "\n", "y", "=", "self", ".", "prepare_y", "(", "x", ",", "y", ")", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.prepare_x": [[54, 57], ["tensor_fusion.UAFM.conv_x"], "methods", ["None"], ["", "def", "prepare_x", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_x", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.prepare_y": [[58, 61], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "prepare_y", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "y_up", "=", "F", ".", "interpolate", "(", "y", ",", "paddle", ".", "shape", "(", "x", ")", "[", "2", ":", "]", ",", "mode", "=", "self", ".", "resize_mode", ")", "\n", "return", "y_up", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.fuse": [[62, 66], ["tensor_fusion.UAFM.conv_out"], "methods", ["None"], ["", "def", "fuse", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "out", "=", "x", "+", "y", "\n", "out", "=", "self", ".", "conv_out", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.forward": [[67, 77], ["tensor_fusion.UAFM.check", "tensor_fusion.UAFM.prepare", "tensor_fusion.UAFM.fuse"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM.prepare", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_SpAtten_S.fuse"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x (Tensor): The low level feature.\n            y (Tensor): The high level feature.\n        \"\"\"", "\n", "self", ".", "check", "(", "x", ",", "y", ")", "\n", "x", ",", "y", "=", "self", ".", "prepare", "(", "x", ",", "y", ")", "\n", "out", "=", "self", ".", "fuse", "(", "x", ",", "y", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_ChAtten.__init__": [[90, 102], ["tensor_fusion.UAFM.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNAct", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "x_ch", ",", "y_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "resize_mode", "=", "'bilinear'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "x_ch", ",", "y_ch", ",", "out_ch", ",", "ksize", ",", "resize_mode", ")", "\n", "\n", "self", ".", "conv_xy_atten", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNAct", "(", "\n", "4", "*", "y_ch", ",", "\n", "y_ch", "//", "2", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "act_type", "=", "\"leakyrelu\"", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "y_ch", "//", "2", ",", "y_ch", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_ChAtten.fuse": [[103, 115], ["paddleseg.models.layers.tensor_fusion_helper.avg_max_reduce_hw", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "tensor_fusion.UAFM_ChAtten.conv_out", "tensor_fusion.UAFM_ChAtten.conv_xy_atten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_hw"], ["", "def", "fuse", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x (Tensor): The low level feature.\n            y (Tensor): The high level feature.\n        \"\"\"", "\n", "atten", "=", "helper", ".", "avg_max_reduce_hw", "(", "[", "x", ",", "y", "]", ",", "self", ".", "training", ")", "\n", "atten", "=", "F", ".", "sigmoid", "(", "self", ".", "conv_xy_atten", "(", "atten", ")", ")", "\n", "\n", "out", "=", "x", "*", "atten", "+", "y", "*", "(", "1", "-", "atten", ")", "\n", "out", "=", "self", ".", "conv_out", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_ChAtten_S.__init__": [[128, 140], ["tensor_fusion.UAFM.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNAct", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "x_ch", ",", "y_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "resize_mode", "=", "'bilinear'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "x_ch", ",", "y_ch", ",", "out_ch", ",", "ksize", ",", "resize_mode", ")", "\n", "\n", "self", ".", "conv_xy_atten", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNAct", "(", "\n", "2", "*", "y_ch", ",", "\n", "y_ch", "//", "2", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "act_type", "=", "\"leakyrelu\"", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "y_ch", "//", "2", ",", "y_ch", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_ChAtten_S.fuse": [[141, 153], ["paddleseg.models.layers.tensor_fusion_helper.avg_reduce_hw", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "tensor_fusion.UAFM_ChAtten_S.conv_out", "tensor_fusion.UAFM_ChAtten_S.conv_xy_atten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_reduce_hw"], ["", "def", "fuse", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x (Tensor): The low level feature.\n            y (Tensor): The high level feature.\n        \"\"\"", "\n", "atten", "=", "helper", ".", "avg_reduce_hw", "(", "[", "x", ",", "y", "]", ")", "\n", "atten", "=", "F", ".", "sigmoid", "(", "self", ".", "conv_xy_atten", "(", "atten", ")", ")", "\n", "\n", "out", "=", "x", "*", "atten", "+", "y", "*", "(", "1", "-", "atten", ")", "\n", "out", "=", "self", ".", "conv_out", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_SpAtten.__init__": [[166, 174], ["tensor_fusion.UAFM.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "x_ch", ",", "y_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "resize_mode", "=", "'bilinear'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "x_ch", ",", "y_ch", ",", "out_ch", ",", "ksize", ",", "resize_mode", ")", "\n", "\n", "self", ".", "conv_xy_atten", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "4", ",", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "2", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_SpAtten.fuse": [[175, 187], ["paddleseg.models.layers.tensor_fusion_helper.avg_max_reduce_channel", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "tensor_fusion.UAFM_SpAtten.conv_out", "tensor_fusion.UAFM_SpAtten.conv_xy_atten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_channel"], ["", "def", "fuse", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x (Tensor): The low level feature.\n            y (Tensor): The high level feature.\n        \"\"\"", "\n", "atten", "=", "helper", ".", "avg_max_reduce_channel", "(", "[", "x", ",", "y", "]", ")", "\n", "atten", "=", "F", ".", "sigmoid", "(", "self", ".", "conv_xy_atten", "(", "atten", ")", ")", "\n", "\n", "out", "=", "x", "*", "atten", "+", "y", "*", "(", "1", "-", "atten", ")", "\n", "out", "=", "self", ".", "conv_out", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_SpAtten_S.__init__": [[200, 208], ["tensor_fusion.UAFM.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "x_ch", ",", "y_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "resize_mode", "=", "'bilinear'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "x_ch", ",", "y_ch", ",", "out_ch", ",", "ksize", ",", "resize_mode", ")", "\n", "\n", "self", ".", "conv_xy_atten", "=", "nn", ".", "Sequential", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "2", ",", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "2", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion.UAFM_SpAtten_S.fuse": [[209, 221], ["paddleseg.models.layers.tensor_fusion_helper.avg_reduce_channel", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "tensor_fusion.UAFM_SpAtten_S.conv_out", "tensor_fusion.UAFM_SpAtten_S.conv_xy_atten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_reduce_channel"], ["", "def", "fuse", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x (Tensor): The low level feature.\n            y (Tensor): The high level feature.\n        \"\"\"", "\n", "atten", "=", "helper", ".", "avg_reduce_channel", "(", "[", "x", ",", "y", "]", ")", "\n", "atten", "=", "F", ".", "sigmoid", "(", "self", ".", "conv_xy_atten", "(", "atten", ")", ")", "\n", "\n", "out", "=", "x", "*", "atten", "+", "y", "*", "(", "1", "-", "atten", ")", "\n", "out", "=", "self", ".", "conv_out", "(", "out", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.AttentionBlock.__init__": [[44, 89], ["paddle.Layer.__init__", "attention.AttentionBlock.build_project", "attention.AttentionBlock.build_project", "attention.AttentionBlock.build_project", "attention.AttentionBlock.build_project"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.AttentionBlock.build_project", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.AttentionBlock.build_project", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.AttentionBlock.build_project", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.AttentionBlock.build_project"], ["def", "__init__", "(", "self", ",", "key_in_channels", ",", "query_in_channels", ",", "channels", ",", "\n", "out_channels", ",", "share_key_query", ",", "query_downsample", ",", "\n", "key_downsample", ",", "key_query_num_convs", ",", "value_out_num_convs", ",", "\n", "key_query_norm", ",", "value_out_norm", ",", "matmul_norm", ",", "with_out", ")", ":", "\n", "        ", "super", "(", "AttentionBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "share_key_query", ":", "\n", "            ", "assert", "key_in_channels", "==", "query_in_channels", "\n", "", "self", ".", "with_out", "=", "with_out", "\n", "self", ".", "key_in_channels", "=", "key_in_channels", "\n", "self", ".", "query_in_channels", "=", "query_in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "share_key_query", "=", "share_key_query", "\n", "self", ".", "key_project", "=", "self", ".", "build_project", "(", "\n", "key_in_channels", ",", "\n", "channels", ",", "\n", "num_convs", "=", "key_query_num_convs", ",", "\n", "use_conv_module", "=", "key_query_norm", ")", "\n", "if", "share_key_query", ":", "\n", "            ", "self", ".", "query_project", "=", "self", ".", "key_project", "\n", "", "else", ":", "\n", "            ", "self", ".", "query_project", "=", "self", ".", "build_project", "(", "\n", "query_in_channels", ",", "\n", "channels", ",", "\n", "num_convs", "=", "key_query_num_convs", ",", "\n", "use_conv_module", "=", "key_query_norm", ")", "\n", "\n", "", "self", ".", "value_project", "=", "self", ".", "build_project", "(", "\n", "key_in_channels", ",", "\n", "channels", "if", "self", ".", "with_out", "else", "out_channels", ",", "\n", "num_convs", "=", "value_out_num_convs", ",", "\n", "use_conv_module", "=", "value_out_norm", ")", "\n", "\n", "if", "self", ".", "with_out", ":", "\n", "            ", "self", ".", "out_project", "=", "self", ".", "build_project", "(", "\n", "channels", ",", "\n", "out_channels", ",", "\n", "num_convs", "=", "value_out_num_convs", ",", "\n", "use_conv_module", "=", "value_out_norm", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "out_project", "=", "None", "\n", "\n", "", "self", ".", "query_downsample", "=", "query_downsample", "\n", "self", ".", "key_downsample", "=", "key_downsample", "\n", "self", ".", "matmul_norm", "=", "matmul_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.AttentionBlock.build_project": [[90, 116], ["range", "range", "len", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddleseg.models.layers.ConvBNReLU", "paddle.Sequential.append", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential.append", "paddleseg.models.layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "build_project", "(", "self", ",", "in_channels", ",", "channels", ",", "num_convs", ",", "use_conv_module", ")", ":", "\n", "        ", "if", "use_conv_module", ":", "\n", "            ", "convs", "=", "[", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "]", "\n", "for", "_", "in", "range", "(", "num_convs", "-", "1", ")", ":", "\n", "                ", "convs", ".", "append", "(", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "channels", ",", "\n", "out_channels", "=", "channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "convs", "=", "[", "nn", ".", "Conv2D", "(", "in_channels", ",", "channels", ",", "1", ")", "]", "\n", "for", "_", "in", "range", "(", "num_convs", "-", "1", ")", ":", "\n", "                ", "convs", ".", "append", "(", "nn", ".", "Conv2D", "(", "channels", ",", "channels", ",", "1", ")", ")", "\n", "\n", "", "", "if", "len", "(", "convs", ")", ">", "1", ":", "\n", "            ", "convs", "=", "nn", ".", "Sequential", "(", "*", "convs", ")", "\n", "", "else", ":", "\n", "            ", "convs", "=", "convs", "[", "0", "]", "\n", "", "return", "convs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.AttentionBlock.forward": [[117, 147], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "attention.AttentionBlock.query_project", "attention.AttentionBlock.flatten().transpose", "attention.AttentionBlock.key_project", "attention.AttentionBlock.value_project", "attention.AttentionBlock.flatten", "attention.AttentionBlock.flatten().transpose", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "attention.AttentionBlock.query_downsample", "attention.AttentionBlock.key_downsample", "attention.AttentionBlock.key_downsample", "attention.AttentionBlock.out_project", "attention.AttentionBlock.flatten", "attention.AttentionBlock.flatten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "def", "forward", "(", "self", ",", "query_feats", ",", "key_feats", ")", ":", "\n", "        ", "query_shape", "=", "paddle", ".", "shape", "(", "query_feats", ")", "\n", "query", "=", "self", ".", "query_project", "(", "query_feats", ")", "\n", "if", "self", ".", "query_downsample", "is", "not", "None", ":", "\n", "            ", "query", "=", "self", ".", "query_downsample", "(", "query", ")", "\n", "", "query", "=", "query", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "\n", "key", "=", "self", ".", "key_project", "(", "key_feats", ")", "\n", "value", "=", "self", ".", "value_project", "(", "key_feats", ")", "\n", "\n", "if", "self", ".", "key_downsample", "is", "not", "None", ":", "\n", "            ", "key", "=", "self", ".", "key_downsample", "(", "key", ")", "\n", "value", "=", "self", ".", "key_downsample", "(", "value", ")", "\n", "\n", "", "key", "=", "key", ".", "flatten", "(", "2", ")", "\n", "value", "=", "value", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "sim_map", "=", "paddle", ".", "matmul", "(", "query", ",", "key", ")", "\n", "if", "self", ".", "matmul_norm", ":", "\n", "            ", "sim_map", "=", "(", "self", ".", "channels", "**", "-", "0.5", ")", "*", "sim_map", "\n", "", "sim_map", "=", "F", ".", "softmax", "(", "sim_map", ",", "axis", "=", "-", "1", ")", "\n", "\n", "context", "=", "paddle", ".", "matmul", "(", "sim_map", ",", "value", ")", "\n", "context", "=", "paddle", ".", "transpose", "(", "context", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "\n", "context", "=", "paddle", ".", "reshape", "(", "\n", "context", ",", "[", "0", ",", "self", ".", "out_channels", ",", "query_shape", "[", "2", "]", ",", "query_shape", "[", "3", "]", "]", ")", "\n", "\n", "if", "self", ".", "out_project", "is", "not", "None", ":", "\n", "            ", "context", "=", "self", ".", "out_project", "(", "context", ")", "\n", "", "return", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.DualAttentionModule.__init__": [[158, 169], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "attention.PAM", "attention.CAM", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "inter_channels", "=", "in_channels", "//", "4", "\n", "\n", "self", ".", "channel_conv", "=", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ")", "\n", "self", ".", "position_conv", "=", "layers", ".", "ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ")", "\n", "self", ".", "pam", "=", "PAM", "(", "inter_channels", ")", "\n", "self", ".", "cam", "=", "CAM", "(", "inter_channels", ")", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "inter_channels", ",", "inter_channels", ",", "3", ")", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBNReLU", "(", "inter_channels", ",", "inter_channels", ",", "3", ")", "\n", "self", ".", "conv3", "=", "layers", ".", "ConvBNReLU", "(", "inter_channels", ",", "out_channels", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.DualAttentionModule.forward": [[170, 182], ["attention.DualAttentionModule.channel_conv", "attention.DualAttentionModule.cam", "attention.DualAttentionModule.conv1", "attention.DualAttentionModule.position_conv", "attention.DualAttentionModule.pam", "attention.DualAttentionModule.conv2", "attention.DualAttentionModule.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "        ", "channel_feats", "=", "self", ".", "channel_conv", "(", "feats", ")", "\n", "channel_feats", "=", "self", ".", "cam", "(", "channel_feats", ")", "\n", "channel_feats", "=", "self", ".", "conv1", "(", "channel_feats", ")", "\n", "\n", "position_feats", "=", "self", ".", "position_conv", "(", "feats", ")", "\n", "position_feats", "=", "self", ".", "pam", "(", "position_feats", ")", "\n", "position_feats", "=", "self", ".", "conv2", "(", "position_feats", ")", "\n", "\n", "feats_sum", "=", "position_feats", "+", "channel_feats", "\n", "out", "=", "self", ".", "conv3", "(", "feats_sum", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.PAM.__init__": [[191, 205], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "attention.PAM.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "mid_channels", "=", "in_channels", "//", "8", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "mid_channels", ",", "1", ",", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "mid_channels", ",", "1", ",", "1", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "in_channels", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "gamma", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "[", "1", "]", ",", "\n", "dtype", "=", "'float32'", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.PAM.forward": [[206, 233], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "attention.PAM.query_conv", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "attention.PAM.key_conv", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.softmax", "paddle.softmax", "paddle.softmax", "attention.PAM.value_conv", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "\n", "# query: n, h * w, c1", "\n", "query", "=", "self", ".", "query_conv", "(", "x", ")", "\n", "query", "=", "paddle", ".", "reshape", "(", "query", ",", "(", "0", ",", "self", ".", "mid_channels", ",", "-", "1", ")", ")", "\n", "query", "=", "paddle", ".", "transpose", "(", "query", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# key: n, c1, h * w", "\n", "key", "=", "self", ".", "key_conv", "(", "x", ")", "\n", "key", "=", "paddle", ".", "reshape", "(", "key", ",", "(", "0", ",", "self", ".", "mid_channels", ",", "-", "1", ")", ")", "\n", "\n", "# sim: n, h * w, h * w", "\n", "sim", "=", "paddle", ".", "bmm", "(", "query", ",", "key", ")", "\n", "sim", "=", "F", ".", "softmax", "(", "sim", ",", "axis", "=", "-", "1", ")", "\n", "\n", "value", "=", "self", ".", "value_conv", "(", "x", ")", "\n", "value", "=", "paddle", ".", "reshape", "(", "value", ",", "(", "0", ",", "self", ".", "in_channels", ",", "-", "1", ")", ")", "\n", "sim", "=", "paddle", ".", "transpose", "(", "sim", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# feat: from (n, c2, h * w) -> (n, c2, h, w)", "\n", "feat", "=", "paddle", ".", "bmm", "(", "value", ",", "sim", ")", "\n", "feat", "=", "paddle", ".", "reshape", "(", "feat", ",", "\n", "(", "0", ",", "self", ".", "in_channels", ",", "x_shape", "[", "2", "]", ",", "x_shape", "[", "3", "]", ")", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "feat", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.CAM.__init__": [[242, 250], ["paddle.Layer.__init__", "attention.CAM.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "gamma", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "[", "1", "]", ",", "\n", "dtype", "=", "'float32'", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.attention.CAM.forward": [[251, 273], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max().tile", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "# query: n, c, h * w", "\n", "query", "=", "paddle", ".", "reshape", "(", "x", ",", "(", "0", ",", "self", ".", "channels", ",", "-", "1", ")", ")", "\n", "# key: n, h * w, c", "\n", "key", "=", "paddle", ".", "reshape", "(", "x", ",", "(", "0", ",", "self", ".", "channels", ",", "-", "1", ")", ")", "\n", "key", "=", "paddle", ".", "transpose", "(", "key", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# sim: n, c, c", "\n", "sim", "=", "paddle", ".", "bmm", "(", "query", ",", "key", ")", "\n", "# The danet author claims that this can avoid gradient divergence", "\n", "sim", "=", "paddle", ".", "max", "(", "sim", ",", "axis", "=", "-", "1", ",", "keepdim", "=", "True", ")", ".", "tile", "(", "\n", "[", "1", ",", "1", ",", "self", ".", "channels", "]", ")", "-", "sim", "\n", "sim", "=", "F", ".", "softmax", "(", "sim", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# feat: from (n, c, h * w) to (n, c, h, w)", "\n", "value", "=", "paddle", ".", "reshape", "(", "x", ",", "(", "0", ",", "self", ".", "channels", ",", "-", "1", ")", ")", "\n", "feat", "=", "paddle", ".", "bmm", "(", "sim", ",", "value", ")", "\n", "feat", "=", "paddle", ".", "reshape", "(", "feat", ",", "(", "0", ",", "self", ".", "channels", ",", "x_shape", "[", "2", "]", ",", "x_shape", "[", "3", "]", ")", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "feat", "+", "x", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_reduce_hw": [[20, 32], ["isinstance", "paddle.adaptive_avg_pool2d", "len", "paddle.adaptive_avg_pool2d", "paddle.concat", "paddle.concat", "paddle.concat", "res.append", "paddle.adaptive_avg_pool2d"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "avg_reduce_hw", "(", "x", ")", ":", "\n", "# Reduce hw by avg", "\n", "# Return cat([avg_pool_0, avg_pool_1, ...])", "\n", "    ", "if", "not", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "return", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "1", ")", "\n", "", "elif", "len", "(", "x", ")", "==", "1", ":", "\n", "        ", "return", "F", ".", "adaptive_avg_pool2d", "(", "x", "[", "0", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "res", "=", "[", "]", "\n", "for", "xi", "in", "x", ":", "\n", "            ", "res", ".", "append", "(", "F", ".", "adaptive_avg_pool2d", "(", "xi", ",", "1", ")", ")", "\n", "", "return", "paddle", ".", "concat", "(", "res", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_hw_helper": [[34, 48], ["paddle.adaptive_avg_pool2d", "isinstance", "paddle.adaptive_max_pool2d", "paddle.max", "paddle.max", "paddle.max", "paddle.concat", "paddle.concat", "paddle.concat"], "function", ["None"], ["", "", "def", "avg_max_reduce_hw_helper", "(", "x", ",", "is_training", ",", "use_concat", "=", "True", ")", ":", "\n", "    ", "assert", "not", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", "\n", "avg_pool", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "1", ")", "\n", "# TODO(pjc): when axis=[2, 3], the paddle.max api has bug for training.", "\n", "if", "is_training", ":", "\n", "        ", "max_pool", "=", "F", ".", "adaptive_max_pool2d", "(", "x", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "max_pool", "=", "paddle", ".", "max", "(", "x", ",", "axis", "=", "[", "2", ",", "3", "]", ",", "keepdim", "=", "True", ")", "\n", "\n", "", "if", "use_concat", ":", "\n", "        ", "res", "=", "paddle", ".", "concat", "(", "[", "avg_pool", ",", "max_pool", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "res", "=", "[", "avg_pool", ",", "max_pool", "]", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_hw": [[50, 66], ["isinstance", "tensor_fusion_helper.avg_max_reduce_hw_helper", "len", "tensor_fusion_helper.avg_max_reduce_hw_helper", "paddle.concat", "paddle.concat", "paddle.concat", "tensor_fusion_helper.avg_max_reduce_hw_helper", "res_avg.append", "res_max.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_hw_helper", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_hw_helper", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_hw_helper", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "avg_max_reduce_hw", "(", "x", ",", "is_training", ")", ":", "\n", "# Reduce hw by avg and max", "\n", "# Return cat([avg_pool_0, avg_pool_1, ..., max_pool_0, max_pool_1, ...])", "\n", "    ", "if", "not", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "return", "avg_max_reduce_hw_helper", "(", "x", ",", "is_training", ")", "\n", "", "elif", "len", "(", "x", ")", "==", "1", ":", "\n", "        ", "return", "avg_max_reduce_hw_helper", "(", "x", "[", "0", "]", ",", "is_training", ")", "\n", "", "else", ":", "\n", "        ", "res_avg", "=", "[", "]", "\n", "res_max", "=", "[", "]", "\n", "for", "xi", "in", "x", ":", "\n", "            ", "avg", ",", "max", "=", "avg_max_reduce_hw_helper", "(", "xi", ",", "is_training", ",", "False", ")", "\n", "res_avg", ".", "append", "(", "avg", ")", "\n", "res_max", ".", "append", "(", "max", ")", "\n", "", "res", "=", "res_avg", "+", "res_max", "\n", "return", "paddle", ".", "concat", "(", "res", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_reduce_channel": [[68, 80], ["isinstance", "paddle.mean", "paddle.mean", "paddle.mean", "len", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.concat", "paddle.concat", "paddle.concat", "res.append", "paddle.mean", "paddle.mean", "paddle.mean"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "avg_reduce_channel", "(", "x", ")", ":", "\n", "# Reduce channel by avg", "\n", "# Return cat([avg_ch_0, avg_ch_1, ...])", "\n", "    ", "if", "not", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "return", "paddle", ".", "mean", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "elif", "len", "(", "x", ")", "==", "1", ":", "\n", "        ", "return", "paddle", ".", "mean", "(", "x", "[", "0", "]", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "res", "=", "[", "]", "\n", "for", "xi", "in", "x", ":", "\n", "            ", "res", ".", "append", "(", "paddle", ".", "mean", "(", "xi", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "", "return", "paddle", ".", "concat", "(", "res", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.max_reduce_channel": [[82, 94], ["isinstance", "paddle.max", "paddle.max", "paddle.max", "len", "paddle.max", "paddle.max", "paddle.max", "paddle.concat", "paddle.concat", "paddle.concat", "res.append", "paddle.max", "paddle.max", "paddle.max"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "max_reduce_channel", "(", "x", ")", ":", "\n", "# Reduce channel by max", "\n", "# Return cat([max_ch_0, max_ch_1, ...])", "\n", "    ", "if", "not", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "return", "paddle", ".", "max", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "elif", "len", "(", "x", ")", "==", "1", ":", "\n", "        ", "return", "paddle", ".", "max", "(", "x", "[", "0", "]", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "res", "=", "[", "]", "\n", "for", "xi", "in", "x", ":", "\n", "            ", "res", ".", "append", "(", "paddle", ".", "max", "(", "xi", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "", "return", "paddle", ".", "concat", "(", "res", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_channel_helper": [[96, 107], ["paddle.mean", "paddle.mean", "paddle.mean", "paddle.max", "paddle.max", "paddle.max", "isinstance", "paddle.concat", "paddle.concat", "paddle.concat"], "function", ["None"], ["", "", "def", "avg_max_reduce_channel_helper", "(", "x", ",", "use_concat", "=", "True", ")", ":", "\n", "# Reduce hw by avg and max, only support single input", "\n", "    ", "assert", "not", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", "\n", "mean_value", "=", "paddle", ".", "mean", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "max_value", "=", "paddle", ".", "max", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "if", "use_concat", ":", "\n", "        ", "res", "=", "paddle", ".", "concat", "(", "[", "mean_value", ",", "max_value", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "res", "=", "[", "mean_value", ",", "max_value", "]", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_channel": [[109, 121], ["isinstance", "tensor_fusion_helper.avg_max_reduce_channel_helper", "len", "tensor_fusion_helper.avg_max_reduce_channel_helper", "paddle.concat", "paddle.concat", "paddle.concat", "res.extend", "tensor_fusion_helper.avg_max_reduce_channel_helper"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_channel_helper", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_channel_helper", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.avg_max_reduce_channel_helper"], ["", "def", "avg_max_reduce_channel", "(", "x", ")", ":", "\n", "# Reduce hw by avg and max", "\n", "# Return cat([avg_ch_0, max_ch_0, avg_ch_1, max_ch_1, ...])", "\n", "    ", "if", "not", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "return", "avg_max_reduce_channel_helper", "(", "x", ")", "\n", "", "elif", "len", "(", "x", ")", "==", "1", ":", "\n", "        ", "return", "avg_max_reduce_channel_helper", "(", "x", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "res", "=", "[", "]", "\n", "for", "xi", "in", "x", ":", "\n", "            ", "res", ".", "extend", "(", "avg_max_reduce_channel_helper", "(", "xi", ",", "False", ")", ")", "\n", "", "return", "paddle", ".", "concat", "(", "res", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.tensor_fusion_helper.cat_avg_max_reduce_channel": [[123, 134], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.max", "paddle.max", "paddle.max", "paddle.concat", "paddle.concat", "paddle.concat", "isinstance", "len"], "function", ["None"], ["", "", "def", "cat_avg_max_reduce_channel", "(", "x", ")", ":", "\n", "# Reduce hw by cat+avg+max", "\n", "    ", "assert", "isinstance", "(", "x", ",", "(", "list", ",", "tuple", ")", ")", "and", "len", "(", "x", ")", ">", "1", "\n", "\n", "x", "=", "paddle", ".", "concat", "(", "x", ",", "axis", "=", "1", ")", "\n", "\n", "mean_value", "=", "paddle", ".", "mean", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "max_value", "=", "paddle", ".", "max", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "res", "=", "paddle", ".", "concat", "(", "[", "mean_value", ",", "max_value", "]", ",", "axis", "=", "1", ")", "\n", "\n", "return", "res", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBNReLU.__init__": [[34, 51], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "layer_libs.SyncBatchNorm", "paddleseg.models.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ",", "**", "kwargs", ")", "\n", "\n", "if", "'data_format'", "in", "kwargs", ":", "\n", "            ", "data_format", "=", "kwargs", "[", "'data_format'", "]", "\n", "", "else", ":", "\n", "            ", "data_format", "=", "'NCHW'", "\n", "", "self", ".", "_batch_norm", "=", "SyncBatchNorm", "(", "out_channels", ",", "data_format", "=", "data_format", ")", "\n", "self", ".", "_relu", "=", "layers", ".", "Activation", "(", "\"relu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBNReLU.forward": [[52, 57], ["layer_libs.ConvBNReLU._conv", "layer_libs.ConvBNReLU._batch_norm", "layer_libs.ConvBNReLU._relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "x", "=", "self", ".", "_relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBNAct.__init__": [[60, 81], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "layer_libs.SyncBatchNorm", "paddleseg.models.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "act_type", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ",", "**", "kwargs", ")", "\n", "\n", "if", "'data_format'", "in", "kwargs", ":", "\n", "            ", "data_format", "=", "kwargs", "[", "'data_format'", "]", "\n", "", "else", ":", "\n", "            ", "data_format", "=", "'NCHW'", "\n", "", "self", ".", "_batch_norm", "=", "SyncBatchNorm", "(", "out_channels", ",", "data_format", "=", "data_format", ")", "\n", "\n", "self", ".", "_act_type", "=", "act_type", "\n", "if", "act_type", "is", "not", "None", ":", "\n", "            ", "self", ".", "_act", "=", "layers", ".", "Activation", "(", "act_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBNAct.forward": [[82, 88], ["layer_libs.ConvBNAct._conv", "layer_libs.ConvBNAct._batch_norm", "layer_libs.ConvBNAct._act"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "if", "self", ".", "_act_type", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "_act", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBN.__init__": [[91, 105], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "layer_libs.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ",", "**", "kwargs", ")", "\n", "if", "'data_format'", "in", "kwargs", ":", "\n", "            ", "data_format", "=", "kwargs", "[", "'data_format'", "]", "\n", "", "else", ":", "\n", "            ", "data_format", "=", "'NCHW'", "\n", "", "self", ".", "_batch_norm", "=", "SyncBatchNorm", "(", "out_channels", ",", "data_format", "=", "data_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBN.forward": [[106, 110], ["layer_libs.ConvBN._conv", "layer_libs.ConvBN._batch_norm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvReLUPool.__init__": [[113, 124], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.Activation", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "dilation", "=", "1", ")", "\n", "self", ".", "_relu", "=", "layers", ".", "Activation", "(", "\"relu\"", ")", "\n", "self", ".", "_max_pool", "=", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvReLUPool.forward": [[125, 130], ["layer_libs.ConvReLUPool.conv", "layer_libs.ConvReLUPool._relu", "layer_libs.ConvReLUPool._max_pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_relu", "(", "x", ")", "\n", "x", "=", "self", ".", "_max_pool", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SeparableConvBNReLU.__init__": [[133, 159], ["paddle.Layer.__init__", "layer_libs.ConvBN", "layer_libs.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "pointwise_bias", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "depthwise_conv", "=", "ConvBN", "(", "\n", "in_channels", ",", "\n", "out_channels", "=", "in_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "in_channels", ",", "\n", "**", "kwargs", ")", "\n", "if", "'data_format'", "in", "kwargs", ":", "\n", "            ", "data_format", "=", "kwargs", "[", "'data_format'", "]", "\n", "", "else", ":", "\n", "            ", "data_format", "=", "'NCHW'", "\n", "", "self", ".", "piontwise_conv", "=", "ConvBNReLU", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "data_format", "=", "data_format", ",", "\n", "bias_attr", "=", "pointwise_bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SeparableConvBNReLU.forward": [[160, 164], ["layer_libs.SeparableConvBNReLU.depthwise_conv", "layer_libs.SeparableConvBNReLU.piontwise_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "depthwise_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "piontwise_conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.DepthwiseConvBN.__init__": [[167, 181], ["paddle.Layer.__init__", "layer_libs.ConvBN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "depthwise_conv", "=", "ConvBN", "(", "\n", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "in_channels", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.DepthwiseConvBN.forward": [[182, 185], ["layer_libs.DepthwiseConvBN.depthwise_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "depthwise_conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.AuxLayer.__init__": [[198, 219], ["paddle.Layer.__init__", "layer_libs.ConvBNReLU", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "inter_channels", ",", "\n", "out_channels", ",", "\n", "dropout_prob", "=", "0.1", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_bn_relu", "=", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "inter_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "**", "kwargs", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout_prob", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "inter_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.AuxLayer.forward": [[220, 225], ["layer_libs.AuxLayer.conv_bn_relu", "layer_libs.AuxLayer.dropout", "layer_libs.AuxLayer.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_bn_relu", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.JPU.__init__": [[234, 280], ["paddle.Layer.__init__", "layer_libs.ConvBNReLU", "layer_libs.ConvBNReLU", "layer_libs.ConvBNReLU", "layer_libs.SeparableConvBNReLU", "layer_libs.SeparableConvBNReLU", "layer_libs.SeparableConvBNReLU", "layer_libs.SeparableConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "width", "=", "512", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv5", "=", "ConvBNReLU", "(", "\n", "in_channels", "[", "-", "1", "]", ",", "width", ",", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv4", "=", "ConvBNReLU", "(", "\n", "in_channels", "[", "-", "2", "]", ",", "width", ",", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv3", "=", "ConvBNReLU", "(", "\n", "in_channels", "[", "-", "3", "]", ",", "width", ",", "3", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "dilation1", "=", "SeparableConvBNReLU", "(", "\n", "3", "*", "width", ",", "\n", "width", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "pointwise_bias", "=", "False", ",", "\n", "dilation", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "stride", "=", "1", ",", ")", "\n", "self", ".", "dilation2", "=", "SeparableConvBNReLU", "(", "\n", "3", "*", "width", ",", "\n", "width", ",", "\n", "3", ",", "\n", "padding", "=", "2", ",", "\n", "pointwise_bias", "=", "False", ",", "\n", "dilation", "=", "2", ",", "\n", "bias_attr", "=", "False", ",", "\n", "stride", "=", "1", ")", "\n", "self", ".", "dilation3", "=", "SeparableConvBNReLU", "(", "\n", "3", "*", "width", ",", "\n", "width", ",", "\n", "3", ",", "\n", "padding", "=", "4", ",", "\n", "pointwise_bias", "=", "False", ",", "\n", "dilation", "=", "4", ",", "\n", "bias_attr", "=", "False", ",", "\n", "stride", "=", "1", ")", "\n", "self", ".", "dilation4", "=", "SeparableConvBNReLU", "(", "\n", "3", "*", "width", ",", "\n", "width", ",", "\n", "3", ",", "\n", "padding", "=", "8", ",", "\n", "pointwise_bias", "=", "False", ",", "\n", "dilation", "=", "8", ",", "\n", "bias_attr", "=", "False", ",", "\n", "stride", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.JPU.forward": [[281, 301], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "layer_libs.JPU.conv5", "layer_libs.JPU.conv4", "layer_libs.JPU.conv3", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "layer_libs.JPU.dilation1", "layer_libs.JPU.dilation2", "layer_libs.JPU.dilation3", "layer_libs.JPU.dilation4"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "feats", "=", "[", "\n", "self", ".", "conv5", "(", "inputs", "[", "-", "1", "]", ")", ",", "self", ".", "conv4", "(", "inputs", "[", "-", "2", "]", ")", ",", "\n", "self", ".", "conv3", "(", "inputs", "[", "-", "3", "]", ")", "\n", "]", "\n", "size", "=", "paddle", ".", "shape", "(", "feats", "[", "-", "1", "]", ")", "[", "2", ":", "]", "\n", "feats", "[", "-", "2", "]", "=", "F", ".", "interpolate", "(", "\n", "feats", "[", "-", "2", "]", ",", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "feats", "[", "-", "3", "]", "=", "F", ".", "interpolate", "(", "\n", "feats", "[", "-", "3", "]", ",", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "feat", "=", "paddle", ".", "concat", "(", "feats", ",", "axis", "=", "1", ")", "\n", "feat", "=", "paddle", ".", "concat", "(", "\n", "[", "\n", "self", ".", "dilation1", "(", "feat", ")", ",", "self", ".", "dilation2", "(", "feat", ")", ",", "\n", "self", ".", "dilation3", "(", "feat", ")", ",", "self", ".", "dilation4", "(", "feat", ")", "\n", "]", ",", "\n", "axis", "=", "1", ")", "\n", "\n", "return", "inputs", "[", "0", "]", ",", "inputs", "[", "1", "]", ",", "inputs", "[", "2", "]", ",", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBNPReLU.__init__": [[304, 321], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "layer_libs.SyncBatchNorm", "paddleseg.models.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ",", "**", "kwargs", ")", "\n", "\n", "if", "'data_format'", "in", "kwargs", ":", "\n", "            ", "data_format", "=", "kwargs", "[", "'data_format'", "]", "\n", "", "else", ":", "\n", "            ", "data_format", "=", "'NCHW'", "\n", "", "self", ".", "_batch_norm", "=", "SyncBatchNorm", "(", "out_channels", ",", "data_format", "=", "data_format", ")", "\n", "self", ".", "_prelu", "=", "layers", ".", "Activation", "(", "\"prelu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBNPReLU.forward": [[322, 327], ["layer_libs.ConvBNPReLU._conv", "layer_libs.ConvBNPReLU._batch_norm", "layer_libs.ConvBNPReLU._prelu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "x", "=", "self", ".", "_prelu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBNLeakyReLU.__init__": [[330, 347], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "layer_libs.SyncBatchNorm", "paddleseg.models.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ",", "**", "kwargs", ")", "\n", "\n", "if", "'data_format'", "in", "kwargs", ":", "\n", "            ", "data_format", "=", "kwargs", "[", "'data_format'", "]", "\n", "", "else", ":", "\n", "            ", "data_format", "=", "'NCHW'", "\n", "", "self", ".", "_batch_norm", "=", "SyncBatchNorm", "(", "out_channels", ",", "data_format", "=", "data_format", ")", "\n", "self", ".", "_relu", "=", "layers", ".", "Activation", "(", "\"leakyrelu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.ConvBNLeakyReLU.forward": [[348, 353], ["layer_libs.ConvBNLeakyReLU._conv", "layer_libs.ConvBNLeakyReLU._batch_norm", "layer_libs.ConvBNLeakyReLU._relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "x", "=", "self", ".", "_relu", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm": [[23, 31], ["os.environ.get", "paddle.BatchNorm2D", "paddle.get_device", "paddle.get_device", "paddle.get_device", "paddle.BatchNorm2D", "paddle.SyncBatchNorm", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["def", "SyncBatchNorm", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"In cpu environment nn.SyncBatchNorm does not have kernel so use nn.BatchNorm2D instead\"\"\"", "\n", "if", "paddle", ".", "get_device", "(", ")", "==", "'cpu'", "or", "os", ".", "environ", ".", "get", "(", "'PADDLESEG_EXPORT_STAGE'", ")", ":", "\n", "        ", "return", "nn", ".", "BatchNorm2D", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "elif", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "nranks", "==", "1", ":", "\n", "        ", "return", "nn", ".", "BatchNorm2D", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "        ", "return", "nn", ".", "SyncBatchNorm", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet.__init__": [[43, 60], ["paddle.Layer.__init__", "stdcnet.STDCNet._make_layers", "stdcnet.STDCNet.init_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "base", "=", "64", ",", "\n", "layers", "=", "[", "4", ",", "5", ",", "3", "]", ",", "\n", "block_num", "=", "4", ",", "\n", "type", "=", "\"cat\"", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "STDCNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "type", "==", "\"cat\"", ":", "\n", "            ", "block", "=", "CatBottleneck", "\n", "", "elif", "type", "==", "\"add\"", ":", "\n", "            ", "block", "=", "AddBottleneck", "\n", "", "self", ".", "layers", "=", "layers", "\n", "self", ".", "feat_channels", "=", "[", "base", "//", "2", ",", "base", ",", "base", "*", "4", ",", "base", "*", "8", ",", "base", "*", "16", "]", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "base", ",", "layers", ",", "block_num", ",", "block", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet.forward": [[61, 81], ["out_feats.append", "out_feats.append", "range", "out_feats.append", "sum", "sum", "sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        forward function for feature extract.\n        \"\"\"", "\n", "out_feats", "=", "[", "]", "\n", "\n", "x", "=", "self", ".", "features", "[", "0", "]", "(", "x", ")", "\n", "out_feats", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "1", "]", "(", "x", ")", "\n", "out_feats", ".", "append", "(", "x", ")", "\n", "\n", "idx", "=", "[", "[", "2", ",", "2", "+", "self", ".", "layers", "[", "0", "]", "]", ",", "\n", "[", "2", "+", "self", ".", "layers", "[", "0", "]", ",", "2", "+", "sum", "(", "self", ".", "layers", "[", "0", ":", "2", "]", ")", "]", ",", "\n", "[", "2", "+", "sum", "(", "self", ".", "layers", "[", "0", ":", "2", "]", ")", ",", "2", "+", "sum", "(", "self", ".", "layers", ")", "]", "]", "\n", "for", "start_idx", ",", "end_idx", "in", "idx", ":", "\n", "            ", "for", "i", "in", "range", "(", "start_idx", ",", "end_idx", ")", ":", "\n", "                ", "x", "=", "self", ".", "features", "[", "i", "]", "(", "x", ")", "\n", "", "out_feats", ".", "append", "(", "x", ")", "\n", "\n", "", "return", "out_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet._make_layers": [[82, 101], ["enumerate", "paddle.Sequential", "paddle.Sequential", "stdcnet.ConvBNRelu", "stdcnet.ConvBNRelu", "range", "features.append", "block", "features.append", "features.append", "block", "block", "int", "int", "int", "int", "math.pow", "math.pow", "math.pow", "math.pow"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "_make_layers", "(", "self", ",", "base", ",", "layers", ",", "block_num", ",", "block", ")", ":", "\n", "        ", "features", "=", "[", "]", "\n", "features", "+=", "[", "ConvBNRelu", "(", "3", ",", "base", "//", "2", ",", "3", ",", "2", ")", "]", "\n", "features", "+=", "[", "ConvBNRelu", "(", "base", "//", "2", ",", "base", ",", "3", ",", "2", ")", "]", "\n", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "layers", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "layer", ")", ":", "\n", "                ", "if", "i", "==", "0", "and", "j", "==", "0", ":", "\n", "                    ", "features", ".", "append", "(", "block", "(", "base", ",", "base", "*", "4", ",", "block_num", ",", "2", ")", ")", "\n", "", "elif", "j", "==", "0", ":", "\n", "                    ", "features", ".", "append", "(", "\n", "block", "(", "base", "*", "int", "(", "math", ".", "pow", "(", "2", ",", "i", "+", "1", ")", ")", ",", "base", "*", "int", "(", "\n", "math", ".", "pow", "(", "2", ",", "i", "+", "2", ")", ")", ",", "block_num", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "                    ", "features", ".", "append", "(", "\n", "block", "(", "base", "*", "int", "(", "math", ".", "pow", "(", "2", ",", "i", "+", "2", ")", ")", ",", "base", "*", "int", "(", "\n", "math", ".", "pow", "(", "2", ",", "i", "+", "2", ")", ")", ",", "block_num", ",", "1", ")", ")", "\n", "\n", "", "", "", "return", "nn", ".", "Sequential", "(", "*", "features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDCNet.init_weight": [[102, 111], ["stdcnet.STDCNet.sublayers", "isinstance", "paddleseg.utils.utils.load_pretrained_model", "paddleseg.cvlibs.param_init.normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "normal_init", "(", "layer", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "layer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "layer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "layer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "", "", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.ConvBNRelu.__init__": [[114, 125], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.layer_libs.SyncBatchNorm", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "ConvBNRelu", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "kernel", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "kernel", "//", "2", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn", "=", "SyncBatchNorm", "(", "out_planes", ",", "data_format", "=", "'NCHW'", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.ConvBNRelu.forward": [[126, 129], ["stdcnet.ConvBNRelu.relu", "stdcnet.ConvBNRelu.bn", "stdcnet.ConvBNRelu.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.AddBottleneck.__init__": [[132, 184], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "stdcnet.AddBottleneck.conv_list.append", "stdcnet.ConvBNRelu", "stdcnet.AddBottleneck.conv_list.append", "stdcnet.ConvBNRelu", "stdcnet.AddBottleneck.conv_list.append", "stdcnet.ConvBNRelu", "stdcnet.AddBottleneck.conv_list.append", "stdcnet.AddBottleneck.conv_list.append", "stdcnet.ConvBNRelu", "stdcnet.ConvBNRelu", "int", "int", "int", "int", "math.pow", "math.pow", "math.pow", "math.pow"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "block_num", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "AddBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "block_num", ">", "1", ",", "\"block number should be larger than 1.\"", "\n", "self", ".", "conv_list", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "if", "stride", "==", "2", ":", "\n", "            ", "self", ".", "avd_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "out_planes", "//", "2", ",", "\n", "out_planes", "//", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "out_planes", "//", "2", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "out_planes", "//", "2", ")", ",", ")", "\n", "self", ".", "skip", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_planes", ",", "\n", "in_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "in_planes", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "in_planes", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "out_planes", ")", ",", ")", "\n", "stride", "=", "1", "\n", "\n", "", "for", "idx", "in", "range", "(", "block_num", ")", ":", "\n", "            ", "if", "idx", "==", "0", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "\n", "in_planes", ",", "out_planes", "//", "2", ",", "kernel", "=", "1", ")", ")", "\n", "", "elif", "idx", "==", "1", "and", "block_num", "==", "2", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "\n", "out_planes", "//", "2", ",", "out_planes", "//", "2", ",", "stride", "=", "stride", ")", ")", "\n", "", "elif", "idx", "==", "1", "and", "block_num", ">", "2", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "\n", "out_planes", "//", "2", ",", "out_planes", "//", "4", ",", "stride", "=", "stride", ")", ")", "\n", "", "elif", "idx", "<", "block_num", "-", "1", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "out_planes", "//", "int", "(", "math", ".", "pow", "(", "2", ",", "idx", ")", ")", ",", "out_planes", "\n", "//", "int", "(", "math", ".", "pow", "(", "2", ",", "idx", "+", "1", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "out_planes", "//", "int", "(", "math", ".", "pow", "(", "2", ",", "idx", ")", ")", ",", "out_planes", "\n", "//", "int", "(", "math", ".", "pow", "(", "2", ",", "idx", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.AddBottleneck.forward": [[185, 197], ["enumerate", "out_list.append", "stdcnet.AddBottleneck.skip", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "stdcnet.AddBottleneck.avd_layer", "conv", "conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_list", "=", "[", "]", "\n", "out", "=", "x", "\n", "for", "idx", ",", "conv", "in", "enumerate", "(", "self", ".", "conv_list", ")", ":", "\n", "            ", "if", "idx", "==", "0", "and", "self", ".", "stride", "==", "2", ":", "\n", "                ", "out", "=", "self", ".", "avd_layer", "(", "conv", "(", "out", ")", ")", "\n", "", "else", ":", "\n", "                ", "out", "=", "conv", "(", "out", ")", "\n", "", "out_list", ".", "append", "(", "out", ")", "\n", "", "if", "self", ".", "stride", "==", "2", ":", "\n", "            ", "x", "=", "self", ".", "skip", "(", "x", ")", "\n", "", "return", "paddle", ".", "concat", "(", "out_list", ",", "axis", "=", "1", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.CatBottleneck.__init__": [[200, 240], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "range", "paddle.Sequential", "paddle.Sequential", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "stdcnet.CatBottleneck.conv_list.append", "stdcnet.ConvBNRelu", "stdcnet.CatBottleneck.conv_list.append", "stdcnet.ConvBNRelu", "stdcnet.CatBottleneck.conv_list.append", "stdcnet.ConvBNRelu", "stdcnet.CatBottleneck.conv_list.append", "stdcnet.CatBottleneck.conv_list.append", "stdcnet.ConvBNRelu", "stdcnet.ConvBNRelu", "int", "int", "int", "int", "math.pow", "math.pow", "math.pow", "math.pow"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "block_num", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "CatBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "block_num", ">", "1", ",", "\"block number should be larger than 1.\"", "\n", "self", ".", "conv_list", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "if", "stride", "==", "2", ":", "\n", "            ", "self", ".", "avd_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "out_planes", "//", "2", ",", "\n", "out_planes", "//", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "out_planes", "//", "2", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "out_planes", "//", "2", ")", ",", ")", "\n", "self", ".", "skip", "=", "nn", ".", "AvgPool2D", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "stride", "=", "1", "\n", "\n", "", "for", "idx", "in", "range", "(", "block_num", ")", ":", "\n", "            ", "if", "idx", "==", "0", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "\n", "in_planes", ",", "out_planes", "//", "2", ",", "kernel", "=", "1", ")", ")", "\n", "", "elif", "idx", "==", "1", "and", "block_num", "==", "2", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "\n", "out_planes", "//", "2", ",", "out_planes", "//", "2", ",", "stride", "=", "stride", ")", ")", "\n", "", "elif", "idx", "==", "1", "and", "block_num", ">", "2", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "\n", "out_planes", "//", "2", ",", "out_planes", "//", "4", ",", "stride", "=", "stride", ")", ")", "\n", "", "elif", "idx", "<", "block_num", "-", "1", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "out_planes", "//", "int", "(", "math", ".", "pow", "(", "2", ",", "idx", ")", ")", ",", "out_planes", "\n", "//", "int", "(", "math", ".", "pow", "(", "2", ",", "idx", "+", "1", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv_list", ".", "append", "(", "\n", "ConvBNRelu", "(", "out_planes", "//", "int", "(", "math", ".", "pow", "(", "2", ",", "idx", ")", ")", ",", "out_planes", "\n", "//", "int", "(", "math", ".", "pow", "(", "2", ",", "idx", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.CatBottleneck.forward": [[241, 259], ["enumerate", "out_list.insert", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "out_list.append", "stdcnet.CatBottleneck.skip", "conv", "conv", "conv", "stdcnet.CatBottleneck.avd_layer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_list", "=", "[", "]", "\n", "out1", "=", "self", ".", "conv_list", "[", "0", "]", "(", "x", ")", "\n", "for", "idx", ",", "conv", "in", "enumerate", "(", "self", ".", "conv_list", "[", "1", ":", "]", ")", ":", "\n", "            ", "if", "idx", "==", "0", ":", "\n", "                ", "if", "self", ".", "stride", "==", "2", ":", "\n", "                    ", "out", "=", "conv", "(", "self", ".", "avd_layer", "(", "out1", ")", ")", "\n", "", "else", ":", "\n", "                    ", "out", "=", "conv", "(", "out1", ")", "\n", "", "", "else", ":", "\n", "                ", "out", "=", "conv", "(", "out", ")", "\n", "", "out_list", ".", "append", "(", "out", ")", "\n", "\n", "", "if", "self", ".", "stride", "==", "2", ":", "\n", "            ", "out1", "=", "self", ".", "skip", "(", "out1", ")", "\n", "", "out_list", ".", "insert", "(", "0", ",", "out1", ")", "\n", "out", "=", "paddle", ".", "concat", "(", "out_list", ",", "axis", "=", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDC2": [[261, 265], ["stdcnet.STDCNet"], "function", ["None"], ["", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "STDC2", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "STDCNet", "(", "base", "=", "64", ",", "layers", "=", "[", "4", ",", "5", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.stdcnet.STDC1": [[267, 271], ["stdcnet.STDCNet"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "STDC1", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "STDCNet", "(", "base", "=", "64", ",", "layers", "=", "[", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.ConvBNLayer.__init__": [[75, 96], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddleseg.models.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_channels", ",", "\n", "output_channels", ",", "\n", "filter_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "act", "=", "None", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "ConvBNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "output_channels", ",", "\n", "kernel_size", "=", "filter_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "_bn", "=", "layers", ".", "SyncBatchNorm", "(", "\n", "num_features", "=", "output_channels", ",", "epsilon", "=", "1e-3", ",", "momentum", "=", "0.99", ")", "\n", "\n", "self", ".", "_act_op", "=", "layers", ".", "Activation", "(", "act", "=", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.ConvBNLayer.forward": [[97, 99], ["xception_deeplab.ConvBNLayer._act_op", "xception_deeplab.ConvBNLayer._bn", "xception_deeplab.ConvBNLayer._conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "self", ".", "_act_op", "(", "self", ".", "_bn", "(", "self", ".", "_conv", "(", "inputs", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.Seperate_Conv.__init__": [[102, 138], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddleseg.models.layers.Activation", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddleseg.models.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_channels", ",", "\n", "output_channels", ",", "\n", "stride", ",", "\n", "filter", ",", "\n", "dilation", "=", "1", ",", "\n", "act", "=", "None", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Seperate_Conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_conv1", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "input_channels", ",", "\n", "kernel_size", "=", "filter", ",", "\n", "stride", "=", "stride", ",", "\n", "groups", "=", "input_channels", ",", "\n", "padding", "=", "(", "filter", ")", "//", "2", "*", "dilation", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "_bn1", "=", "layers", ".", "SyncBatchNorm", "(", "\n", "input_channels", ",", "epsilon", "=", "1e-3", ",", "momentum", "=", "0.99", ")", "\n", "\n", "self", ".", "_act_op1", "=", "layers", ".", "Activation", "(", "act", "=", "act", ")", "\n", "\n", "self", ".", "_conv2", "=", "nn", ".", "Conv2D", "(", "\n", "input_channels", ",", "\n", "output_channels", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "_bn2", "=", "layers", ".", "SyncBatchNorm", "(", "\n", "output_channels", ",", "epsilon", "=", "1e-3", ",", "momentum", "=", "0.99", ")", "\n", "\n", "self", ".", "_act_op2", "=", "layers", ".", "Activation", "(", "act", "=", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.Seperate_Conv.forward": [[139, 147], ["xception_deeplab.Seperate_Conv._conv1", "xception_deeplab.Seperate_Conv._bn1", "xception_deeplab.Seperate_Conv._act_op1", "xception_deeplab.Seperate_Conv._conv2", "xception_deeplab.Seperate_Conv._bn2", "xception_deeplab.Seperate_Conv._act_op2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv1", "(", "inputs", ")", "\n", "x", "=", "self", ".", "_bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "_act_op1", "(", "x", ")", "\n", "x", "=", "self", ".", "_conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "_bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "_act_op2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.Xception_Block.__init__": [[150, 226], ["paddle.Layer.__init__", "xception_deeplab.check_data", "xception_deeplab.check_data", "xception_deeplab.check_data", "xception_deeplab.Seperate_Conv", "xception_deeplab.Seperate_Conv", "xception_deeplab.Seperate_Conv", "xception_deeplab.Seperate_Conv", "xception_deeplab.Seperate_Conv", "xception_deeplab.Seperate_Conv", "xception_deeplab.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_channels", ",", "\n", "output_channels", ",", "\n", "strides", "=", "1", ",", "\n", "filter_size", "=", "3", ",", "\n", "dilation", "=", "1", ",", "\n", "skip_conv", "=", "True", ",", "\n", "has_skip", "=", "True", ",", "\n", "activation_fn_in_separable_conv", "=", "False", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Xception_Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "repeat_number", "=", "3", "\n", "output_channels", "=", "check_data", "(", "output_channels", ",", "repeat_number", ")", "\n", "filter_size", "=", "check_data", "(", "filter_size", ",", "repeat_number", ")", "\n", "strides", "=", "check_data", "(", "strides", ",", "repeat_number", ")", "\n", "\n", "self", ".", "has_skip", "=", "has_skip", "\n", "self", ".", "skip_conv", "=", "skip_conv", "\n", "self", ".", "activation_fn_in_separable_conv", "=", "activation_fn_in_separable_conv", "\n", "if", "not", "activation_fn_in_separable_conv", ":", "\n", "            ", "self", ".", "_conv1", "=", "Seperate_Conv", "(", "\n", "input_channels", ",", "\n", "output_channels", "[", "0", "]", ",", "\n", "stride", "=", "strides", "[", "0", "]", ",", "\n", "filter", "=", "filter_size", "[", "0", "]", ",", "\n", "dilation", "=", "dilation", ",", "\n", "name", "=", "name", "+", "\"/separable_conv1\"", ")", "\n", "self", ".", "_conv2", "=", "Seperate_Conv", "(", "\n", "output_channels", "[", "0", "]", ",", "\n", "output_channels", "[", "1", "]", ",", "\n", "stride", "=", "strides", "[", "1", "]", ",", "\n", "filter", "=", "filter_size", "[", "1", "]", ",", "\n", "dilation", "=", "dilation", ",", "\n", "name", "=", "name", "+", "\"/separable_conv2\"", ")", "\n", "self", ".", "_conv3", "=", "Seperate_Conv", "(", "\n", "output_channels", "[", "1", "]", ",", "\n", "output_channels", "[", "2", "]", ",", "\n", "stride", "=", "strides", "[", "2", "]", ",", "\n", "filter", "=", "filter_size", "[", "2", "]", ",", "\n", "dilation", "=", "dilation", ",", "\n", "name", "=", "name", "+", "\"/separable_conv3\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_conv1", "=", "Seperate_Conv", "(", "\n", "input_channels", ",", "\n", "output_channels", "[", "0", "]", ",", "\n", "stride", "=", "strides", "[", "0", "]", ",", "\n", "filter", "=", "filter_size", "[", "0", "]", ",", "\n", "act", "=", "\"relu\"", ",", "\n", "dilation", "=", "dilation", ",", "\n", "name", "=", "name", "+", "\"/separable_conv1\"", ")", "\n", "self", ".", "_conv2", "=", "Seperate_Conv", "(", "\n", "output_channels", "[", "0", "]", ",", "\n", "output_channels", "[", "1", "]", ",", "\n", "stride", "=", "strides", "[", "1", "]", ",", "\n", "filter", "=", "filter_size", "[", "1", "]", ",", "\n", "act", "=", "\"relu\"", ",", "\n", "dilation", "=", "dilation", ",", "\n", "name", "=", "name", "+", "\"/separable_conv2\"", ")", "\n", "self", ".", "_conv3", "=", "Seperate_Conv", "(", "\n", "output_channels", "[", "1", "]", ",", "\n", "output_channels", "[", "2", "]", ",", "\n", "stride", "=", "strides", "[", "2", "]", ",", "\n", "filter", "=", "filter_size", "[", "2", "]", ",", "\n", "act", "=", "\"relu\"", ",", "\n", "dilation", "=", "dilation", ",", "\n", "name", "=", "name", "+", "\"/separable_conv3\"", ")", "\n", "\n", "", "if", "has_skip", "and", "skip_conv", ":", "\n", "            ", "self", ".", "_short", "=", "ConvBNLayer", "(", "\n", "input_channels", ",", "\n", "output_channels", "[", "-", "1", "]", ",", "\n", "1", ",", "\n", "stride", "=", "strides", "[", "-", "1", "]", ",", "\n", "padding", "=", "0", ",", "\n", "name", "=", "name", "+", "\"/shortcut\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.Xception_Block.forward": [[227, 246], ["paddle.relu", "paddle.relu", "xception_deeplab.Xception_Block._conv1", "paddle.relu", "paddle.relu", "xception_deeplab.Xception_Block._conv2", "paddle.relu", "paddle.relu", "xception_deeplab.Xception_Block._conv3", "xception_deeplab.Xception_Block._conv1", "xception_deeplab.Xception_Block._conv2", "xception_deeplab.Xception_Block._conv3", "xception_deeplab.Xception_Block._short"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "not", "self", ".", "activation_fn_in_separable_conv", ":", "\n", "            ", "x", "=", "F", ".", "relu", "(", "inputs", ")", "\n", "x", "=", "self", ".", "_conv1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "_conv2", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "_conv3", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "_conv1", "(", "inputs", ")", "\n", "x", "=", "self", ".", "_conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "_conv3", "(", "x", ")", "\n", "", "if", "self", ".", "has_skip", "is", "False", ":", "\n", "            ", "return", "x", "\n", "", "if", "self", ".", "skip_conv", ":", "\n", "            ", "skip", "=", "self", ".", "_short", "(", "inputs", ")", "\n", "", "else", ":", "\n", "            ", "skip", "=", "inputs", "\n", "", "return", "x", "+", "skip", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.XceptionDeeplab.__init__": [[263, 378], ["paddle.Layer.__init__", "xception_deeplab.gen_bottleneck_params", "xception_deeplab.ConvBNLayer", "xception_deeplab.ConvBNLayer", "xception_deeplab.check_data", "xception_deeplab.check_data", "range", "xception_deeplab.check_data", "xception_deeplab.check_data", "range", "xception_deeplab.check_data", "xception_deeplab.check_data", "xception_deeplab.Xception_Block", "xception_deeplab.Xception_Block", "xception_deeplab.XceptionDeeplab.init_weight", "xception_deeplab.XceptionDeeplab.add_sublayer", "xception_deeplab.XceptionDeeplab.entry_flow.append", "xception_deeplab.XceptionDeeplab.add_sublayer", "xception_deeplab.XceptionDeeplab.middle_flow.append", "xception_deeplab.check_stride", "xception_deeplab.check_stride", "xception_deeplab.check_stride", "xception_deeplab.Xception_Block", "xception_deeplab.check_stride", "xception_deeplab.Xception_Block", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.gen_bottleneck_params", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_stride", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_stride", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_stride", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_stride"], ["def", "__init__", "(", "self", ",", "backbone", ",", "pretrained", "=", "None", ",", "output_stride", "=", "16", ")", ":", "\n", "\n", "        ", "super", "(", "XceptionDeeplab", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "bottleneck_params", "=", "gen_bottleneck_params", "(", "backbone", ")", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "feat_channels", "=", "[", "128", ",", "2048", "]", "\n", "\n", "self", ".", "_conv1", "=", "ConvBNLayer", "(", "\n", "3", ",", "\n", "32", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "act", "=", "\"relu\"", ",", "\n", "name", "=", "self", ".", "backbone", "+", "\"/entry_flow/conv1\"", ")", "\n", "self", ".", "_conv2", "=", "ConvBNLayer", "(", "\n", "32", ",", "\n", "64", ",", "\n", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act", "=", "\"relu\"", ",", "\n", "name", "=", "self", ".", "backbone", "+", "\"/entry_flow/conv2\"", ")", "\n", "\"\"\"\n            bottleneck_params = {\n            \"entry_flow\": (3, [2, 2, 2], [128, 256, 728]),\n            \"middle_flow\": (16, 1, 728),\n            \"exit_flow\": (2, [2, 1], [[728, 1024, 1024], [1536, 1536, 2048]])\n        }\n\n        if output_stride == 16:\n            entry_block3_stride = 2\n            middle_block_dilation = 1\n            exit_block_dilations = (1, 2)\n        elif output_stride == 8:\n            entry_block3_stride = 1\n            middle_block_dilation = 2\n            exit_block_dilations = (2, 4)\n\n        \"\"\"", "\n", "self", ".", "block_num", "=", "bottleneck_params", "[", "\"entry_flow\"", "]", "[", "0", "]", "\n", "self", ".", "strides", "=", "bottleneck_params", "[", "\"entry_flow\"", "]", "[", "1", "]", "\n", "self", ".", "chns", "=", "bottleneck_params", "[", "\"entry_flow\"", "]", "[", "2", "]", "\n", "self", ".", "strides", "=", "check_data", "(", "self", ".", "strides", ",", "self", ".", "block_num", ")", "\n", "self", ".", "chns", "=", "check_data", "(", "self", ".", "chns", ",", "self", ".", "block_num", ")", "\n", "\n", "self", ".", "entry_flow", "=", "[", "]", "\n", "self", ".", "middle_flow", "=", "[", "]", "\n", "\n", "self", ".", "stride", "=", "2", "\n", "self", ".", "output_stride", "=", "output_stride", "\n", "s", "=", "self", ".", "stride", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "block_num", ")", ":", "\n", "            ", "stride", "=", "self", ".", "strides", "[", "i", "]", "if", "check_stride", "(", "s", "*", "self", ".", "strides", "[", "i", "]", ",", "\n", "self", ".", "output_stride", ")", "else", "1", "\n", "xception_block", "=", "self", ".", "add_sublayer", "(", "\n", "self", ".", "backbone", "+", "\"/entry_flow/block\"", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "Xception_Block", "(", "\n", "input_channels", "=", "64", "if", "i", "==", "0", "else", "self", ".", "chns", "[", "i", "-", "1", "]", ",", "\n", "output_channels", "=", "self", ".", "chns", "[", "i", "]", ",", "\n", "strides", "=", "[", "1", ",", "1", ",", "self", ".", "stride", "]", ",", "\n", "name", "=", "self", ".", "backbone", "+", "\"/entry_flow/block\"", "+", "str", "(", "i", "+", "1", ")", ")", ")", "\n", "self", ".", "entry_flow", ".", "append", "(", "xception_block", ")", "\n", "s", "=", "s", "*", "stride", "\n", "", "self", ".", "stride", "=", "s", "\n", "\n", "self", ".", "block_num", "=", "bottleneck_params", "[", "\"middle_flow\"", "]", "[", "0", "]", "\n", "self", ".", "strides", "=", "bottleneck_params", "[", "\"middle_flow\"", "]", "[", "1", "]", "\n", "self", ".", "chns", "=", "bottleneck_params", "[", "\"middle_flow\"", "]", "[", "2", "]", "\n", "self", ".", "strides", "=", "check_data", "(", "self", ".", "strides", ",", "self", ".", "block_num", ")", "\n", "self", ".", "chns", "=", "check_data", "(", "self", ".", "chns", ",", "self", ".", "block_num", ")", "\n", "s", "=", "self", ".", "stride", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "block_num", ")", ":", "\n", "            ", "stride", "=", "self", ".", "strides", "[", "i", "]", "if", "check_stride", "(", "s", "*", "self", ".", "strides", "[", "i", "]", ",", "\n", "self", ".", "output_stride", ")", "else", "1", "\n", "xception_block", "=", "self", ".", "add_sublayer", "(", "\n", "self", ".", "backbone", "+", "\"/middle_flow/block\"", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "Xception_Block", "(", "\n", "input_channels", "=", "728", ",", "\n", "output_channels", "=", "728", ",", "\n", "strides", "=", "[", "1", ",", "1", ",", "self", ".", "strides", "[", "i", "]", "]", ",", "\n", "skip_conv", "=", "False", ",", "\n", "name", "=", "self", ".", "backbone", "+", "\"/middle_flow/block\"", "+", "str", "(", "i", "+", "1", ")", ")", ")", "\n", "self", ".", "middle_flow", ".", "append", "(", "xception_block", ")", "\n", "s", "=", "s", "*", "stride", "\n", "", "self", ".", "stride", "=", "s", "\n", "\n", "self", ".", "block_num", "=", "bottleneck_params", "[", "\"exit_flow\"", "]", "[", "0", "]", "\n", "self", ".", "strides", "=", "bottleneck_params", "[", "\"exit_flow\"", "]", "[", "1", "]", "\n", "self", ".", "chns", "=", "bottleneck_params", "[", "\"exit_flow\"", "]", "[", "2", "]", "\n", "self", ".", "strides", "=", "check_data", "(", "self", ".", "strides", ",", "self", ".", "block_num", ")", "\n", "self", ".", "chns", "=", "check_data", "(", "self", ".", "chns", ",", "self", ".", "block_num", ")", "\n", "s", "=", "self", ".", "stride", "\n", "stride", "=", "self", ".", "strides", "[", "0", "]", "if", "check_stride", "(", "s", "*", "self", ".", "strides", "[", "0", "]", ",", "\n", "self", ".", "output_stride", ")", "else", "1", "\n", "self", ".", "_exit_flow_1", "=", "Xception_Block", "(", "\n", "728", ",", "\n", "self", ".", "chns", "[", "0", "]", ",", "[", "1", ",", "1", ",", "stride", "]", ",", "\n", "name", "=", "self", ".", "backbone", "+", "\"/exit_flow/block1\"", ")", "\n", "s", "=", "s", "*", "stride", "\n", "stride", "=", "self", ".", "strides", "[", "1", "]", "if", "check_stride", "(", "s", "*", "self", ".", "strides", "[", "1", "]", ",", "\n", "self", ".", "output_stride", ")", "else", "1", "\n", "self", ".", "_exit_flow_2", "=", "Xception_Block", "(", "\n", "self", ".", "chns", "[", "0", "]", "[", "-", "1", "]", ",", "\n", "self", ".", "chns", "[", "1", "]", ",", "[", "1", ",", "1", ",", "stride", "]", ",", "\n", "dilation", "=", "2", ",", "\n", "has_skip", "=", "False", ",", "\n", "activation_fn_in_separable_conv", "=", "True", ",", "\n", "name", "=", "self", ".", "backbone", "+", "\"/exit_flow/block2\"", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.XceptionDeeplab.forward": [[379, 393], ["xception_deeplab.XceptionDeeplab._conv1", "xception_deeplab.XceptionDeeplab._conv2", "enumerate", "xception_deeplab.XceptionDeeplab._exit_flow_1", "xception_deeplab.XceptionDeeplab._exit_flow_2", "feat_list.append", "ef", "mf", "feat_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv1", "(", "inputs", ")", "\n", "x", "=", "self", ".", "_conv2", "(", "x", ")", "\n", "feat_list", "=", "[", "]", "\n", "for", "i", ",", "ef", "in", "enumerate", "(", "self", ".", "entry_flow", ")", ":", "\n", "            ", "x", "=", "ef", "(", "x", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "feat_list", ".", "append", "(", "x", ")", "\n", "", "", "for", "mf", "in", "self", ".", "middle_flow", ":", "\n", "            ", "x", "=", "mf", "(", "x", ")", "\n", "", "x", "=", "self", ".", "_exit_flow_1", "(", "x", ")", "\n", "x", "=", "self", ".", "_exit_flow_2", "(", "x", ")", "\n", "feat_list", ".", "append", "(", "x", ")", "\n", "return", "feat_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.XceptionDeeplab.init_weight": [[394, 397], ["paddleseg.utils.utils.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_data": [[25, 30], ["type", "len"], "function", ["None"], ["def", "check_data", "(", "data", ",", "number", ")", ":", "\n", "    ", "if", "type", "(", "data", ")", "==", "int", ":", "\n", "        ", "return", "[", "data", "]", "*", "number", "\n", "", "assert", "len", "(", "data", ")", "==", "number", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_stride": [[32, 37], ["None"], "function", ["None"], ["", "def", "check_stride", "(", "s", ",", "os", ")", ":", "\n", "    ", "if", "s", "<=", "os", ":", "\n", "        ", "return", "True", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.check_points": [[39, 47], ["isinstance"], "function", ["None"], ["", "", "def", "check_points", "(", "count", ",", "points", ")", ":", "\n", "    ", "if", "points", "is", "None", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "if", "isinstance", "(", "points", ",", "list", ")", ":", "\n", "            ", "return", "(", "True", "if", "count", "in", "points", "else", "False", ")", "\n", "", "else", ":", "\n", "            ", "return", "(", "True", "if", "count", "==", "points", "else", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.gen_bottleneck_params": [[49, 72], ["ValueError"], "function", ["None"], ["", "", "", "def", "gen_bottleneck_params", "(", "backbone", "=", "'xception_65'", ")", ":", "\n", "    ", "if", "backbone", "==", "'xception_65'", ":", "\n", "        ", "bottleneck_params", "=", "{", "\n", "\"entry_flow\"", ":", "(", "3", ",", "[", "2", ",", "2", ",", "2", "]", ",", "[", "128", ",", "256", ",", "728", "]", ")", ",", "\n", "\"middle_flow\"", ":", "(", "16", ",", "1", ",", "728", ")", ",", "\n", "\"exit_flow\"", ":", "(", "2", ",", "[", "2", ",", "1", "]", ",", "[", "[", "728", ",", "1024", ",", "1024", "]", ",", "[", "1536", ",", "1536", ",", "2048", "]", "]", ")", "\n", "}", "\n", "", "elif", "backbone", "==", "'xception_41'", ":", "\n", "        ", "bottleneck_params", "=", "{", "\n", "\"entry_flow\"", ":", "(", "3", ",", "[", "2", ",", "2", ",", "2", "]", ",", "[", "128", ",", "256", ",", "728", "]", ")", ",", "\n", "\"middle_flow\"", ":", "(", "8", ",", "1", ",", "728", ")", ",", "\n", "\"exit_flow\"", ":", "(", "2", ",", "[", "2", ",", "1", "]", ",", "[", "[", "728", ",", "1024", ",", "1024", "]", ",", "[", "1536", ",", "1536", ",", "2048", "]", "]", ")", "\n", "}", "\n", "", "elif", "backbone", "==", "'xception_71'", ":", "\n", "        ", "bottleneck_params", "=", "{", "\n", "\"entry_flow\"", ":", "(", "5", ",", "[", "2", ",", "1", ",", "2", ",", "1", ",", "2", "]", ",", "[", "128", ",", "256", ",", "256", ",", "728", ",", "728", "]", ")", ",", "\n", "\"middle_flow\"", ":", "(", "16", ",", "1", ",", "728", ")", ",", "\n", "\"exit_flow\"", ":", "(", "2", ",", "[", "2", ",", "1", "]", ",", "[", "[", "728", ",", "1024", ",", "1024", "]", ",", "[", "1536", ",", "1536", ",", "2048", "]", "]", ")", "\n", "}", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Xception backbont only support xception_41/xception_65/xception_71\"", ")", "\n", "", "return", "bottleneck_params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.Xception41_deeplab": [[399, 403], ["xception_deeplab.XceptionDeeplab"], "function", ["None"], ["", "", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "Xception41_deeplab", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "XceptionDeeplab", "(", "'xception_41'", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.Xception65_deeplab": [[405, 409], ["xception_deeplab.XceptionDeeplab"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "Xception65_deeplab", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "XceptionDeeplab", "(", "\"xception_65\"", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.xception_deeplab.Xception71_deeplab": [[411, 415], ["xception_deeplab.XceptionDeeplab"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "Xception71_deeplab", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "XceptionDeeplab", "(", "\"xception_71\"", ",", "**", "args", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ConvBNLayer.__init__": [[29, 66], ["paddle.Layer.__init__", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddleseg.models.layers.Activation", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "is_vd_mode", "=", "False", ",", "\n", "act", "=", "None", ",", ")", ":", "\n", "        ", "super", "(", "ConvBNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "is_vd_mode", "=", "is_vd_mode", "\n", "self", ".", "_pool2d_avg", "=", "nn", ".", "AvgPool2D", "(", "\n", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", "if", "dilation", "==", "1", "else", "0", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "_batch_norm", "=", "layers", ".", "SyncBatchNorm", "(", "out_channels", ")", "\n", "self", ".", "_act_op", "=", "layers", ".", "Activation", "(", "act", "=", "act", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "self", ".", "is_vd_mode", ":", "\n", "            ", "inputs", "=", "self", ".", "_pool2d_avg", "(", "inputs", ")", "\n", "", "y", "=", "self", ".", "_conv", "(", "inputs", ")", "\n", "y", "=", "self", ".", "_batch_norm", "(", "y", ")", "\n", "y", "=", "self", ".", "_act_op", "(", "y", ")", "\n", "\n", "return", "y", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ConvBNLayer.forward": [[67, 75], ["resnet_vd.ConvBNLayer._conv", "resnet_vd.ConvBNLayer._batch_norm", "resnet_vd.ConvBNLayer._act_op", "resnet_vd.ConvBNLayer._pool2d_avg"], "methods", ["None"], ["", "", "class", "BottleneckBlock", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "stride", ",", "\n", "shortcut", "=", "True", ",", "\n", "if_first", "=", "False", ",", "\n", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BottleneckBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.BottleneckBlock.__init__": [[78, 126], ["paddle.Layer.__init__", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "paddleseg.models.layers.Add", "paddleseg.models.layers.Activation", "resnet_vd.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "act", "=", "'relu'", ")", "\n", "\n", "self", ".", "dilation", "=", "dilation", "\n", "\n", "self", ".", "conv1", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "out_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "act", "=", "'relu'", ",", "\n", "dilation", "=", "dilation", ")", "\n", "self", ".", "conv2", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "out_channels", ",", "\n", "out_channels", "=", "out_channels", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "act", "=", "None", ")", "\n", "\n", "if", "not", "shortcut", ":", "\n", "            ", "self", ".", "short", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "is_vd_mode", "=", "False", "if", "if_first", "or", "stride", "==", "1", "else", "True", ")", "\n", "\n", "", "self", ".", "shortcut", "=", "shortcut", "\n", "\n", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "y", "=", "self", ".", "conv0", "(", "inputs", ")", "\n", "\n", "####################################################################", "\n", "# If given dilation rate > 1, using corresponding padding.", "\n", "# The performance drops down without the follow padding.", "\n", "if", "self", ".", "dilation", ">", "1", ":", "\n", "            ", "padding", "=", "self", ".", "dilation", "\n", "y", "=", "F", ".", "pad", "(", "y", ",", "[", "padding", ",", "padding", ",", "padding", ",", "padding", "]", ")", "\n", "#####################################################################", "\n", "\n", "", "conv1", "=", "self", ".", "conv1", "(", "y", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "\n", "if", "self", ".", "shortcut", ":", "\n", "            ", "short", "=", "inputs", "\n", "", "else", ":", "\n", "            ", "short", "=", "self", ".", "short", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.BottleneckBlock.forward": [[127, 140], ["resnet_vd.BottleneckBlock.conv0", "resnet_vd.BottleneckBlock.conv1", "resnet_vd.BottleneckBlock.conv2", "resnet_vd.BottleneckBlock.add", "resnet_vd.BottleneckBlock.relu", "resnet_vd.BottleneckBlock.short"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "y", "=", "paddle", ".", "add", "(", "x", "=", "short", ",", "y", "=", "conv2", ")", "\n", "y", "=", "F", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n", "\n", "", "", "class", "BasicBlock", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "stride", ",", "\n", "shortcut", "=", "True", ",", "\n", "if_first", "=", "False", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.BasicBlock.__init__": [[143, 182], ["paddle.Layer.__init__", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "paddleseg.models.layers.Add", "paddleseg.models.layers.Activation", "resnet_vd.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "act", "=", "'relu'", ")", "\n", "self", ".", "conv1", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "out_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "act", "=", "None", ")", "\n", "\n", "if", "not", "shortcut", ":", "\n", "            ", "self", ".", "short", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "is_vd_mode", "=", "False", "if", "if_first", "or", "stride", "==", "1", "else", "True", ")", "\n", "\n", "", "self", ".", "shortcut", "=", "shortcut", "\n", "\n", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "y", "=", "self", ".", "conv0", "(", "inputs", ")", "\n", "conv1", "=", "self", ".", "conv1", "(", "y", ")", "\n", "\n", "if", "self", ".", "shortcut", ":", "\n", "            ", "short", "=", "inputs", "\n", "", "else", ":", "\n", "            ", "short", "=", "self", ".", "short", "(", "inputs", ")", "\n", "", "y", "=", "paddle", ".", "add", "(", "x", "=", "short", ",", "y", "=", "conv1", ")", "\n", "y", "=", "F", ".", "relu", "(", "y", ")", "\n", "\n", "return", "y", "\n", "\n", "\n", "", "", "class", "ResNet_vd", "(", "nn", ".", "Layer", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.BasicBlock.forward": [[183, 195], ["resnet_vd.BasicBlock.conv0", "resnet_vd.BasicBlock.conv1", "resnet_vd.BasicBlock.add", "resnet_vd.BasicBlock.relu", "resnet_vd.BasicBlock.short"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["\n", "\n", "def", "__init__", "(", "self", ",", "\n", "input_channels", "=", "3", ",", "\n", "layers", "=", "50", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ResNet_vd.__init__": [[213, 347], ["paddle.Layer.__init__", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "resnet_vd.ConvBNLayer", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "resnet_vd.ResNet_vd.init_weight", "range", "range", "len", "range", "resnet_vd.ResNet_vd.stage_list.append", "len", "range", "resnet_vd.ResNet_vd.stage_list.append", "resnet_vd.ResNet_vd.add_sublayer", "block_list.append", "resnet_vd.ResNet_vd.add_sublayer", "block_list.append", "resnet_vd.BottleneckBlock", "resnet_vd.BasicBlock", "chr", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["            ", "depth", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", "\n", "", "elif", "layers", "==", "152", ":", "\n", "            ", "depth", "=", "[", "3", ",", "8", ",", "36", ",", "3", "]", "\n", "", "elif", "layers", "==", "200", ":", "\n", "            ", "depth", "=", "[", "3", ",", "12", ",", "48", ",", "3", "]", "\n", "", "num_channels", "=", "[", "64", ",", "256", ",", "512", ",", "\n", "1024", "]", "if", "layers", ">=", "50", "else", "[", "64", ",", "64", ",", "128", ",", "256", "]", "\n", "num_filters", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "\n", "# for channels of four returned stages", "\n", "self", ".", "feat_channels", "=", "[", "c", "*", "4", "for", "c", "in", "num_filters", "\n", "]", "if", "layers", ">=", "50", "else", "num_filters", "\n", "self", ".", "feat_channels", "=", "[", "64", "]", "+", "self", ".", "feat_channels", "\n", "\n", "dilation_dict", "=", "None", "\n", "if", "output_stride", "==", "8", ":", "\n", "            ", "dilation_dict", "=", "{", "2", ":", "2", ",", "3", ":", "4", "}", "\n", "", "elif", "output_stride", "==", "16", ":", "\n", "            ", "dilation_dict", "=", "{", "3", ":", "2", "}", "\n", "\n", "", "self", ".", "conv1_1", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "act", "=", "'relu'", ")", "\n", "self", ".", "conv1_2", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "act", "=", "'relu'", ")", "\n", "self", ".", "conv1_3", "=", "ConvBNLayer", "(", "\n", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "act", "=", "'relu'", ")", "\n", "self", ".", "pool2d_max", "=", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "# self.block_list = []", "\n", "self", ".", "stage_list", "=", "[", "]", "\n", "if", "layers", ">=", "50", ":", "\n", "            ", "for", "block", "in", "range", "(", "len", "(", "depth", ")", ")", ":", "\n", "                ", "shortcut", "=", "False", "\n", "block_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "depth", "[", "block", "]", ")", ":", "\n", "                    ", "if", "layers", "in", "[", "101", ",", "152", "]", "and", "block", "==", "2", ":", "\n", "                        ", "if", "i", "==", "0", ":", "\n", "                            ", "conv_name", "=", "\"res\"", "+", "str", "(", "block", "+", "2", ")", "+", "\"a\"", "\n", "", "else", ":", "\n", "                            ", "conv_name", "=", "\"res\"", "+", "str", "(", "block", "+", "2", ")", "+", "\"b\"", "+", "str", "(", "i", ")", "\n", "", "", "else", ":", "\n", "                        ", "conv_name", "=", "\"res\"", "+", "str", "(", "block", "+", "2", ")", "+", "chr", "(", "97", "+", "i", ")", "\n", "\n", "###############################################################################", "\n", "# Add dilation rate for some segmentation tasks, if dilation_dict is not None.", "\n", "", "dilation_rate", "=", "dilation_dict", "[", "\n", "block", "]", "if", "dilation_dict", "and", "block", "in", "dilation_dict", "else", "1", "\n", "\n", "# Actually block here is 'stage', and i is 'block' in 'stage'", "\n", "# At the stage 4, expand the the dilation_rate if given multi_grid", "\n", "if", "block", "==", "3", ":", "\n", "                        ", "dilation_rate", "=", "dilation_rate", "*", "multi_grid", "[", "i", "]", "\n", "###############################################################################", "\n", "\n", "", "bottleneck_block", "=", "self", ".", "add_sublayer", "(", "\n", "'bb_%d_%d'", "%", "(", "block", ",", "i", ")", ",", "\n", "BottleneckBlock", "(", "\n", "in_channels", "=", "num_channels", "[", "block", "]", "\n", "if", "i", "==", "0", "else", "num_filters", "[", "block", "]", "*", "4", ",", "\n", "out_channels", "=", "num_filters", "[", "block", "]", ",", "\n", "stride", "=", "2", "if", "i", "==", "0", "and", "block", "!=", "0", "and", "\n", "dilation_rate", "==", "1", "else", "1", ",", "\n", "shortcut", "=", "shortcut", ",", "\n", "if_first", "=", "block", "==", "i", "==", "0", ",", "\n", "dilation", "=", "dilation_rate", ")", ")", "\n", "\n", "block_list", ".", "append", "(", "bottleneck_block", ")", "\n", "shortcut", "=", "True", "\n", "", "self", ".", "stage_list", ".", "append", "(", "block_list", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "block", "in", "range", "(", "len", "(", "depth", ")", ")", ":", "\n", "                ", "shortcut", "=", "False", "\n", "block_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "depth", "[", "block", "]", ")", ":", "\n", "                    ", "conv_name", "=", "\"res\"", "+", "str", "(", "block", "+", "2", ")", "+", "chr", "(", "97", "+", "i", ")", "\n", "basic_block", "=", "self", ".", "add_sublayer", "(", "\n", "'bb_%d_%d'", "%", "(", "block", ",", "i", ")", ",", "\n", "BasicBlock", "(", "\n", "in_channels", "=", "num_channels", "[", "block", "]", "\n", "if", "i", "==", "0", "else", "num_filters", "[", "block", "]", ",", "\n", "out_channels", "=", "num_filters", "[", "block", "]", ",", "\n", "stride", "=", "2", "if", "i", "==", "0", "and", "block", "!=", "0", "else", "1", ",", "\n", "shortcut", "=", "shortcut", ",", "\n", "if_first", "=", "block", "==", "i", "==", "0", ")", ")", "\n", "block_list", ".", "append", "(", "basic_block", ")", "\n", "shortcut", "=", "True", "\n", "", "self", ".", "stage_list", ".", "append", "(", "block_list", ")", "\n", "\n", "", "", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "feat_list", "=", "[", "]", "\n", "y", "=", "self", ".", "conv1_1", "(", "inputs", ")", "\n", "y", "=", "self", ".", "conv1_2", "(", "y", ")", "\n", "y", "=", "self", ".", "conv1_3", "(", "y", ")", "\n", "feat_list", ".", "append", "(", "y", ")", "\n", "\n", "y", "=", "self", ".", "pool2d_max", "(", "y", ")", "\n", "\n", "# A feature list saves the output feature map of each stage.", "\n", "for", "stage", "in", "self", ".", "stage_list", ":", "\n", "            ", "for", "block", "in", "stage", ":", "\n", "                ", "y", "=", "block", "(", "y", ")", "\n", "", "feat_list", ".", "append", "(", "y", ")", "\n", "\n", "", "return", "feat_list", "\n", "\n", "", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n", "\n", "", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ResNet18_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "18", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ResNet34_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "34", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ResNet_vd.forward": [[348, 363], ["resnet_vd.ResNet_vd.conv1_1", "resnet_vd.ResNet_vd.conv1_2", "resnet_vd.ResNet_vd.conv1_3", "block.clone", "resnet_vd.ResNet_vd.pool2d_max", "feat_list.append", "block"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ResNet50_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "50", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ResNet101_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "101", ",", "**", "args", ")", "\n", "return", "model", "\n", "\n", "\n", "", "def", "ResNet152_vd", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNet_vd", "(", "layers", "=", "152", ",", "**", "args", ")", "\n", "return", "model", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ResNet_vd.init_weight": [[364, 366], ["paddleseg.utils.utils.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model"], ["\n", "\n", "", "def", "ResNet200_vd", "(", "**", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ResNet18_vd": [[368, 372], ["resnet_vd.ResNet_vd"], "function", ["None"], ["return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ResNet34_vd": [[374, 377], ["resnet_vd.ResNet_vd"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ResNet50_vd": [[379, 383], ["resnet_vd.ResNet_vd"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ResNet101_vd": [[385, 389], ["resnet_vd.ResNet_vd"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ResNet152_vd": [[391, 394], ["resnet_vd.ResNet_vd"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet_vd.ResNet200_vd": [[396, 399], ["resnet_vd.ResNet_vd"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.__init__": [[37, 75], ["paddle.Layer.__init__", "mobilenetv2.conv_bn", "mobilenetv2.InvertedResidual", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "mobilenetv2.InvertedResidual", "mobilenetv2.MobileNetV2.init_weight", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.InvertedResidual", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth", "mobilenetv2.MobileNetV2.depth"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.conv_bn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth"], ["def", "__init__", "(", "self", ",", "channel_ratio", "=", "1.0", ",", "min_channel", "=", "16", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channel_ratio", "=", "channel_ratio", "\n", "self", ".", "min_channel", "=", "min_channel", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "\n", "self", ".", "stage0", "=", "conv_bn", "(", "3", ",", "self", ".", "depth", "(", "32", ")", ",", "3", ",", "2", ")", "\n", "\n", "self", ".", "stage1", "=", "InvertedResidual", "(", "self", ".", "depth", "(", "32", ")", ",", "self", ".", "depth", "(", "16", ")", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "stage2", "=", "nn", ".", "Sequential", "(", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "16", ")", ",", "self", ".", "depth", "(", "24", ")", ",", "2", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "24", ")", ",", "self", ".", "depth", "(", "24", ")", ",", "1", ",", "6", ")", ",", ")", "\n", "\n", "self", ".", "stage3", "=", "nn", ".", "Sequential", "(", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "24", ")", ",", "self", ".", "depth", "(", "32", ")", ",", "2", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "32", ")", ",", "self", ".", "depth", "(", "32", ")", ",", "1", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "32", ")", ",", "self", ".", "depth", "(", "32", ")", ",", "1", ",", "6", ")", ",", ")", "\n", "\n", "self", ".", "stage4", "=", "nn", ".", "Sequential", "(", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "32", ")", ",", "self", ".", "depth", "(", "64", ")", ",", "2", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "64", ")", ",", "self", ".", "depth", "(", "64", ")", ",", "1", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "64", ")", ",", "self", ".", "depth", "(", "64", ")", ",", "1", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "64", ")", ",", "self", ".", "depth", "(", "64", ")", ",", "1", ",", "6", ")", ",", ")", "\n", "\n", "self", ".", "stage5", "=", "nn", ".", "Sequential", "(", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "64", ")", ",", "self", ".", "depth", "(", "96", ")", ",", "1", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "96", ")", ",", "self", ".", "depth", "(", "96", ")", ",", "1", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "96", ")", ",", "self", ".", "depth", "(", "96", ")", ",", "1", ",", "6", ")", ",", ")", "\n", "\n", "self", ".", "stage6", "=", "nn", ".", "Sequential", "(", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "96", ")", ",", "self", ".", "depth", "(", "160", ")", ",", "2", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "160", ")", ",", "self", ".", "depth", "(", "160", ")", ",", "1", ",", "6", ")", ",", "\n", "InvertedResidual", "(", "self", ".", "depth", "(", "160", ")", ",", "self", ".", "depth", "(", "160", ")", ",", "1", ",", "6", ")", ",", ")", "\n", "\n", "self", ".", "stage7", "=", "InvertedResidual", "(", "self", ".", "depth", "(", "160", ")", ",", "self", ".", "depth", "(", "320", ")", ",", "1", ",", "6", ")", "\n", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.depth": [[76, 79], ["min", "max", "int"], "methods", ["None"], ["", "def", "depth", "(", "self", ",", "channels", ")", ":", "\n", "        ", "min_channel", "=", "min", "(", "channels", ",", "self", ".", "min_channel", ")", "\n", "return", "max", "(", "min_channel", ",", "int", "(", "channels", "*", "self", ".", "channel_ratio", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.forward": [[80, 96], ["mobilenetv2.MobileNetV2.stage0", "mobilenetv2.MobileNetV2.stage1", "mobilenetv2.MobileNetV2.stage2", "mobilenetv2.MobileNetV2.stage3", "mobilenetv2.MobileNetV2.stage4", "mobilenetv2.MobileNetV2.stage5", "mobilenetv2.MobileNetV2.stage6", "mobilenetv2.MobileNetV2.stage7", "feat_list.append", "feat_list.append", "feat_list.append", "feat_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "[", "]", "\n", "\n", "feature_1_2", "=", "self", ".", "stage0", "(", "x", ")", "\n", "feature_1_2", "=", "self", ".", "stage1", "(", "feature_1_2", ")", "\n", "feature_1_4", "=", "self", ".", "stage2", "(", "feature_1_2", ")", "\n", "feature_1_8", "=", "self", ".", "stage3", "(", "feature_1_4", ")", "\n", "feature_1_16", "=", "self", ".", "stage4", "(", "feature_1_8", ")", "\n", "feature_1_16", "=", "self", ".", "stage5", "(", "feature_1_16", ")", "\n", "feature_1_32", "=", "self", ".", "stage6", "(", "feature_1_16", ")", "\n", "feature_1_32", "=", "self", ".", "stage7", "(", "feature_1_32", ")", "\n", "feat_list", ".", "append", "(", "feature_1_4", ")", "\n", "feat_list", ".", "append", "(", "feature_1_8", ")", "\n", "feat_list", ".", "append", "(", "feature_1_16", ")", "\n", "feat_list", ".", "append", "(", "feature_1_32", ")", "\n", "return", "feat_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.MobileNetV2.init_weight": [[97, 100], ["paddleseg.utils.load_entire_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_entire_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.InvertedResidual.__init__": [[117, 159], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.Conv2D", "paddle.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", ",", "expand_ratio", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "InvertedResidual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "assert", "stride", "in", "[", "1", ",", "2", "]", "\n", "self", ".", "use_res_connect", "=", "self", ".", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "inp", ",", "\n", "inp", "*", "expand_ratio", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "num_features", "=", "inp", "*", "expand_ratio", ",", "epsilon", "=", "1e-05", ",", "momentum", "=", "0.1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "inp", "*", "expand_ratio", ",", "\n", "inp", "*", "expand_ratio", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "inp", "*", "expand_ratio", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "num_features", "=", "inp", "*", "expand_ratio", ",", "epsilon", "=", "1e-05", ",", "momentum", "=", "0.1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "\n", "inp", "*", "expand_ratio", ",", "\n", "oup", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "num_features", "=", "oup", ",", "epsilon", "=", "1e-05", ",", "momentum", "=", "0.1", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.InvertedResidual.forward": [[160, 165], ["mobilenetv2.InvertedResidual.conv", "mobilenetv2.InvertedResidual.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "use_res_connect", ":", "\n", "            ", "return", "x", "+", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv2.conv_bn": [[102, 114], ["paddle.Sequential", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.ReLU"], "function", ["None"], ["", "", "", "def", "conv_bn", "(", "inp", ",", "oup", ",", "kernel", ",", "stride", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "inp", ",", "\n", "out_channels", "=", "oup", ",", "\n", "kernel_size", "=", "kernel", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "kernel", "-", "1", ")", "//", "2", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "num_features", "=", "oup", ",", "epsilon", "=", "1e-05", ",", "momentum", "=", "0.1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet.__init__": [[58, 164], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "hrnet.Layer1", "hrnet.TransitionLayer", "hrnet.Stage", "hrnet.TransitionLayer", "hrnet.Stage", "hrnet.TransitionLayer", "hrnet.Stage", "hrnet.HRNet.init_weight", "sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "input_channels", "=", "3", ",", "\n", "pretrained", "=", "None", ",", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "(", "4", ",", ")", ",", "\n", "stage1_num_channels", "=", "(", "64", ",", ")", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "(", "4", ",", "4", ")", ",", "\n", "stage2_num_channels", "=", "(", "18", ",", "36", ")", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "(", "4", ",", "4", ",", "4", ")", ",", "\n", "stage3_num_channels", "=", "(", "18", ",", "36", ",", "72", ")", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "(", "4", ",", "4", ",", "4", ",", "4", ")", ",", "\n", "stage4_num_channels", "=", "(", "18", ",", "36", ",", "72", ",", "144", ")", ",", "\n", "has_se", "=", "False", ",", "\n", "align_corners", "=", "False", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "HRNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "stage1_num_modules", "=", "stage1_num_modules", "\n", "self", ".", "stage1_num_blocks", "=", "stage1_num_blocks", "\n", "self", ".", "stage1_num_channels", "=", "stage1_num_channels", "\n", "self", ".", "stage2_num_modules", "=", "stage2_num_modules", "\n", "self", ".", "stage2_num_blocks", "=", "stage2_num_blocks", "\n", "self", ".", "stage2_num_channels", "=", "stage2_num_channels", "\n", "self", ".", "stage3_num_modules", "=", "stage3_num_modules", "\n", "self", ".", "stage3_num_blocks", "=", "stage3_num_blocks", "\n", "self", ".", "stage3_num_channels", "=", "stage3_num_channels", "\n", "self", ".", "stage4_num_modules", "=", "stage4_num_modules", "\n", "self", ".", "stage4_num_blocks", "=", "stage4_num_blocks", "\n", "self", ".", "stage4_num_channels", "=", "stage4_num_channels", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "feat_channels", "=", "[", "i", "for", "i", "in", "stage4_num_channels", "]", "\n", "self", ".", "feat_channels", "=", "[", "64", "]", "+", "self", ".", "feat_channels", "\n", "\n", "self", ".", "conv_layer1_1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv_layer1_2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "la1", "=", "Layer1", "(", "\n", "num_channels", "=", "64", ",", "\n", "num_blocks", "=", "self", ".", "stage1_num_blocks", "[", "0", "]", ",", "\n", "num_filters", "=", "self", ".", "stage1_num_channels", "[", "0", "]", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "\"layer2\"", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "tr1", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "[", "self", ".", "stage1_num_channels", "[", "0", "]", "*", "4", "]", ",", "\n", "out_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "name", "=", "\"tr1\"", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "st2", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage2_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage2_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage2_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st2\"", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "tr2", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "out_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "name", "=", "\"tr2\"", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "self", ".", "st3", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage3_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage3_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage3_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st3\"", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "tr3", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "out_channels", "=", "self", ".", "stage4_num_channels", ",", "\n", "name", "=", "\"tr3\"", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "self", ".", "st4", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage4_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage4_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage4_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage4_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st4\"", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet.forward": [[165, 190], ["hrnet.HRNet.conv_layer1_1", "hrnet.HRNet.conv_layer1_2", "hrnet.HRNet.la1", "hrnet.HRNet.tr1", "hrnet.HRNet.st2", "hrnet.HRNet.tr2", "hrnet.HRNet.st3", "hrnet.HRNet.tr3", "hrnet.HRNet.st4", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["\n", "self", ".", "init_weight", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "[", "]", "\n", "conv1", "=", "self", ".", "conv_layer1_1", "(", "x", ")", "\n", "feat_list", ".", "append", "(", "conv1", ")", "\n", "conv2", "=", "self", ".", "conv_layer1_2", "(", "conv1", ")", "\n", "\n", "la1", "=", "self", ".", "la1", "(", "conv2", ")", "\n", "\n", "tr1", "=", "self", ".", "tr1", "(", "[", "la1", "]", ")", "\n", "st2", "=", "self", ".", "st2", "(", "tr1", ")", "\n", "\n", "tr2", "=", "self", ".", "tr2", "(", "st2", ")", "\n", "st3", "=", "self", ".", "st3", "(", "tr2", ")", "\n", "\n", "tr3", "=", "self", ".", "tr3", "(", "st3", ")", "\n", "st4", "=", "self", ".", "st4", "(", "tr3", ")", "\n", "\n", "feat_list", "=", "feat_list", "+", "st4", "\n", "\n", "return", "feat_list", "\n", "\n", "", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet.init_weight": [[191, 200], ["hrnet.HRNet.sublayers", "isinstance", "paddleseg.utils.utils.load_pretrained_model", "paddleseg.cvlibs.param_init.normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "normal_init", "(", "layer", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "layer", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "                ", "param_init", ".", "constant_init", "(", "layer", ".", "weight", ",", "value", "=", "1.0", ")", "\n", "param_init", ".", "constant_init", "(", "layer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "", "", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n", "\n", "", "", "", "class", "Layer1", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.Layer1.__init__": [[203, 226], ["paddle.Layer.__init__", "range", "hrnet.Layer1.add_sublayer", "hrnet.Layer1.bottleneck_block_list.append", "hrnet.BottleneckBlock", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["num_filters", ",", "\n", "num_blocks", ",", "\n", "has_se", "=", "False", ",", "\n", "name", "=", "None", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "Layer1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bottleneck_block_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "bottleneck_block", "=", "self", ".", "add_sublayer", "(", "\n", "\"bb_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "BottleneckBlock", "(", "\n", "num_channels", "=", "num_channels", "if", "i", "==", "0", "else", "num_filters", "*", "4", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "True", "if", "i", "==", "0", "else", "False", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "padding_same", "=", "padding_same", ")", ")", "\n", "self", ".", "bottleneck_block_list", ".", "append", "(", "bottleneck_block", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv", "=", "x", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.Layer1.forward": [[227, 232], ["block_func"], "methods", ["None"], ["for", "block_func", "in", "self", ".", "bottleneck_block_list", ":", "\n", "            ", "conv", "=", "block_func", "(", "conv", ")", "\n", "", "return", "conv", "\n", "\n", "\n", "", "", "class", "TransitionLayer", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.TransitionLayer.__init__": [[235, 264], ["paddle.Layer.__init__", "len", "len", "range", "hrnet.TransitionLayer.conv_bn_func_list.append", "hrnet.TransitionLayer.add_sublayer", "hrnet.TransitionLayer.add_sublayer", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["\n", "num_in", "=", "len", "(", "in_channels", ")", "\n", "num_out", "=", "len", "(", "out_channels", ")", "\n", "self", ".", "conv_bn_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_out", ")", ":", "\n", "            ", "residual", "=", "None", "\n", "if", "i", "<", "num_in", ":", "\n", "                ", "if", "in_channels", "[", "i", "]", "!=", "out_channels", "[", "i", "]", ":", "\n", "                    ", "residual", "=", "self", ".", "add_sublayer", "(", "\n", "\"transition_{}_layer_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "[", "i", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "residual", "=", "self", ".", "add_sublayer", "(", "\n", "\"transition_{}_layer_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "[", "-", "1", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "self", ".", "conv_bn_func_list", ".", "append", "(", "residual", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.TransitionLayer.forward": [[265, 276], ["enumerate", "outs.append", "len", "outs.append", "outs.append", "conv_bn_func", "conv_bn_func"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["for", "idx", ",", "conv_bn_func", "in", "enumerate", "(", "self", ".", "conv_bn_func_list", ")", ":", "\n", "            ", "if", "conv_bn_func", "is", "None", ":", "\n", "                ", "outs", ".", "append", "(", "x", "[", "idx", "]", ")", "\n", "", "else", ":", "\n", "                ", "if", "idx", "<", "len", "(", "x", ")", ":", "\n", "                    ", "outs", ".", "append", "(", "conv_bn_func", "(", "x", "[", "idx", "]", ")", ")", "\n", "", "else", ":", "\n", "                    ", "outs", ".", "append", "(", "conv_bn_func", "(", "x", "[", "-", "1", "]", ")", ")", "\n", "", "", "", "return", "outs", "\n", "\n", "\n", "", "", "class", "Branches", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.Branches.__init__": [[279, 304], ["paddle.Layer.__init__", "range", "len", "hrnet.Branches.basic_block_list.append", "range", "hrnet.Branches.add_sublayer", "hrnet.Branches.basic_block_list[].append", "hrnet.BasicBlock", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["in_channels", ",", "\n", "out_channels", ",", "\n", "has_se", "=", "False", ",", "\n", "name", "=", "None", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "Branches", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "basic_block_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "out_channels", ")", ")", ":", "\n", "            ", "self", ".", "basic_block_list", ".", "append", "(", "[", "]", ")", "\n", "for", "j", "in", "range", "(", "num_blocks", "[", "i", "]", ")", ":", "\n", "                ", "in_ch", "=", "in_channels", "[", "i", "]", "if", "j", "==", "0", "else", "out_channels", "[", "i", "]", "\n", "basic_block_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"bb_{}_branch_layer_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ",", "j", "+", "1", ")", ",", "\n", "BasicBlock", "(", "\n", "num_channels", "=", "in_ch", ",", "\n", "num_filters", "=", "out_channels", "[", "i", "]", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", "+", "'_branch_layer_'", "+", "str", "(", "i", "+", "1", ")", "+", "'_'", "+", "\n", "str", "(", "j", "+", "1", ")", ",", "\n", "padding_same", "=", "padding_same", ")", ")", "\n", "self", ".", "basic_block_list", "[", "i", "]", ".", "append", "(", "basic_block_func", ")", "\n", "\n", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.Branches.forward": [[305, 313], ["enumerate", "outs.append", "basic_block_func"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["for", "idx", ",", "input", "in", "enumerate", "(", "x", ")", ":", "\n", "            ", "conv", "=", "input", "\n", "for", "basic_block_func", "in", "self", ".", "basic_block_list", "[", "idx", "]", ":", "\n", "                ", "conv", "=", "basic_block_func", "(", "conv", ")", "\n", "", "outs", ".", "append", "(", "conv", ")", "\n", "", "return", "outs", "\n", "\n", "\n", "", "", "class", "BottleneckBlock", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.BottleneckBlock.__init__": [[316, 365], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.Add", "paddleseg.models.layers.Activation", "paddleseg.models.layers.ConvBN", "hrnet.SELayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["num_filters", ",", "\n", "has_se", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "False", ",", "\n", "name", "=", "None", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "BottleneckBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv3", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "conv_down", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "self", ".", "se", "=", "SELayer", "(", "\n", "num_channels", "=", "num_filters", "*", "4", ",", "\n", "num_filters", "=", "num_filters", "*", "4", ",", "\n", "reduction_ratio", "=", "16", ",", "\n", "name", "=", "name", "+", "'_fc'", ")", "\n", "\n", "", "self", ".", "add", "=", "layers", ".", "Add", "(", ")", "\n", "self", ".", "relu", "=", "layers", ".", "Activation", "(", "\"relu\"", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.BottleneckBlock.forward": [[366, 381], ["hrnet.BottleneckBlock.conv1", "hrnet.BottleneckBlock.conv2", "hrnet.BottleneckBlock.conv3", "hrnet.BottleneckBlock.add", "hrnet.BottleneckBlock.relu", "hrnet.BottleneckBlock.conv_down", "hrnet.BottleneckBlock.se"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "conv3", "=", "self", ".", "conv3", "(", "conv2", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "residual", "=", "self", ".", "conv_down", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "conv3", "=", "self", ".", "se", "(", "conv3", ")", "\n", "\n", "", "y", "=", "self", ".", "add", "(", "conv3", ",", "residual", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n", "\n", "", "", "class", "BasicBlock", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.BasicBlock.__init__": [[384, 427], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.Add", "paddleseg.models.layers.Activation", "paddleseg.models.layers.ConvBNReLU", "hrnet.SELayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["num_filters", ",", "\n", "stride", "=", "1", ",", "\n", "has_se", "=", "False", ",", "\n", "downsample", "=", "False", ",", "\n", "name", "=", "None", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "conv_down", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "self", ".", "se", "=", "SELayer", "(", "\n", "num_channels", "=", "num_filters", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "reduction_ratio", "=", "16", ",", "\n", "name", "=", "name", "+", "'_fc'", ")", "\n", "\n", "", "self", ".", "add", "=", "layers", ".", "Add", "(", ")", "\n", "self", ".", "relu", "=", "layers", ".", "Activation", "(", "\"relu\"", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.BasicBlock.forward": [[428, 442], ["hrnet.BasicBlock.conv1", "hrnet.BasicBlock.conv2", "hrnet.BasicBlock.add", "hrnet.BasicBlock.relu", "hrnet.BasicBlock.conv_down", "hrnet.BasicBlock.se"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "residual", "=", "self", ".", "conv_down", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "conv2", "=", "self", ".", "se", "(", "conv2", ")", "\n", "\n", "", "y", "=", "self", ".", "add", "(", "conv2", ",", "residual", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n", "\n", "", "", "class", "SELayer", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.SELayer.__init__": [[445, 466], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "int", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "math.sqrt", "math.sqrt", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["\n", "self", ".", "pool2d_gap", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "\n", "self", ".", "_num_channels", "=", "num_channels", "\n", "\n", "med_ch", "=", "int", "(", "num_channels", "/", "reduction_ratio", ")", "\n", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "num_channels", "*", "1.0", ")", "\n", "self", ".", "squeeze", "=", "nn", ".", "Linear", "(", "\n", "num_channels", ",", "\n", "med_ch", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "stdv", ",", "stdv", ")", ")", ")", "\n", "\n", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "med_ch", "*", "1.0", ")", "\n", "self", ".", "excitation", "=", "nn", ".", "Linear", "(", "\n", "med_ch", ",", "\n", "num_filters", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "stdv", ",", "stdv", ")", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "pool", "=", "self", ".", "pool2d_gap", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.SELayer.forward": [[467, 478], ["hrnet.SELayer.pool2d_gap", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "hrnet.SELayer.squeeze", "paddle.relu", "paddle.relu", "paddle.relu", "hrnet.SELayer.excitation", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["None"], ["pool", "=", "paddle", ".", "reshape", "(", "pool", ",", "shape", "=", "[", "-", "1", ",", "self", ".", "_num_channels", "]", ")", "\n", "squeeze", "=", "self", ".", "squeeze", "(", "pool", ")", "\n", "squeeze", "=", "F", ".", "relu", "(", "squeeze", ")", "\n", "excitation", "=", "self", ".", "excitation", "(", "squeeze", ")", "\n", "excitation", "=", "F", ".", "sigmoid", "(", "excitation", ")", "\n", "excitation", "=", "paddle", ".", "reshape", "(", "\n", "excitation", ",", "shape", "=", "[", "-", "1", ",", "self", ".", "_num_channels", ",", "1", ",", "1", "]", ")", "\n", "out", "=", "x", "*", "excitation", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "Stage", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.Stage.__init__": [[481, 522], ["paddle.Layer.__init__", "range", "hrnet.Stage.stage_func_list.append", "hrnet.Stage.add_sublayer", "hrnet.Stage.add_sublayer", "hrnet.HighResolutionModule", "hrnet.HighResolutionModule", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["num_modules", ",", "\n", "num_blocks", ",", "\n", "num_filters", ",", "\n", "has_se", "=", "False", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "Stage", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_num_modules", "=", "num_modules", "\n", "\n", "self", ".", "stage_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_modules", ")", ":", "\n", "            ", "if", "i", "==", "num_modules", "-", "1", "and", "not", "multi_scale_output", ":", "\n", "                ", "stage_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"stage_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "HighResolutionModule", "(", "\n", "num_channels", "=", "num_channels", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "multi_scale_output", "=", "False", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", ")", "\n", "", "else", ":", "\n", "                ", "stage_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"stage_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "HighResolutionModule", "(", "\n", "num_channels", "=", "num_channels", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", ")", "\n", "\n", "", "self", ".", "stage_func_list", ".", "append", "(", "stage_func", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.Stage.forward": [[523, 528], ["range"], "methods", ["None"], ["for", "idx", "in", "range", "(", "self", ".", "_num_modules", ")", ":", "\n", "            ", "out", "=", "self", ".", "stage_func_list", "[", "idx", "]", "(", "out", ")", "\n", "", "return", "out", "\n", "\n", "\n", "", "", "class", "HighResolutionModule", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HighResolutionModule.__init__": [[531, 557], ["paddle.Layer.__init__", "hrnet.Branches", "hrnet.FuseLayers"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["num_blocks", ",", "\n", "num_filters", ",", "\n", "has_se", "=", "False", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "HighResolutionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "branches_func", "=", "Branches", "(", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "self", ".", "fuse_func", "=", "FuseLayers", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "multi_scale_output", "=", "multi_scale_output", ",", "\n", "name", "=", "name", ",", "\n", "align_corners", "=", "align_corners", ",", "\n", "padding_same", "=", "padding_same", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "branches_func", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HighResolutionModule.forward": [[558, 562], ["hrnet.HighResolutionModule.branches_func", "hrnet.HighResolutionModule.fuse_func"], "methods", ["None"], ["out", "=", "self", ".", "fuse_func", "(", "out", ")", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "FuseLayers", "(", "nn", ".", "Layer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.FuseLayers.__init__": [[565, 618], ["paddle.Layer.__init__", "range", "len", "range", "len", "hrnet.FuseLayers.add_sublayer", "hrnet.FuseLayers.residual_func_list.append", "paddleseg.models.layers.ConvBN", "range", "hrnet.FuseLayers.residual_func_list.append", "hrnet.FuseLayers.add_sublayer", "hrnet.FuseLayers.add_sublayer", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["out_channels", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ",", "\n", "padding_same", "=", "True", ")", ":", "\n", "        ", "super", "(", "FuseLayers", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_actual_ch", "=", "len", "(", "in_channels", ")", "if", "multi_scale_output", "else", "1", "\n", "self", ".", "_in_channels", "=", "in_channels", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "residual_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_actual_ch", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "in_channels", ")", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ",", "j", "+", "1", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "in_channels", "[", "j", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "residual_func_list", ".", "append", "(", "residual_func", ")", "\n", "", "elif", "j", "<", "i", ":", "\n", "                    ", "pre_num_filters", "=", "in_channels", "[", "j", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "if", "k", "==", "i", "-", "j", "-", "1", ":", "\n", "                            ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}_{}\"", ".", "format", "(", "\n", "name", ",", "i", "+", "1", ",", "j", "+", "1", ",", "k", "+", "1", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "pre_num_filters", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "pre_num_filters", "=", "out_channels", "[", "i", "]", "\n", "", "else", ":", "\n", "                            ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}_{}\"", ".", "format", "(", "\n", "name", ",", "i", "+", "1", ",", "j", "+", "1", ",", "k", "+", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "pre_num_filters", ",", "\n", "out_channels", "=", "out_channels", "[", "j", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "if", "not", "padding_same", "else", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "pre_num_filters", "=", "out_channels", "[", "j", "]", "\n", "", "self", ".", "residual_func_list", ".", "append", "(", "residual_func", ")", "\n", "\n", "", "", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.FuseLayers.forward": [[619, 648], ["range", "range", "paddle.relu", "paddle.relu", "paddle.relu", "outs.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "len", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["residual_func_idx", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "_actual_ch", ")", ":", "\n", "            ", "residual", "=", "x", "[", "i", "]", "\n", "residual_shape", "=", "paddle", ".", "shape", "(", "residual", ")", "[", "-", "2", ":", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "self", ".", "_in_channels", ")", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "y", "=", "self", ".", "residual_func_list", "[", "residual_func_idx", "]", "(", "x", "[", "j", "]", ")", "\n", "residual_func_idx", "+=", "1", "\n", "\n", "y", "=", "F", ".", "interpolate", "(", "\n", "y", ",", "\n", "residual_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "residual", "=", "residual", "+", "y", "\n", "", "elif", "j", "<", "i", ":", "\n", "                    ", "y", "=", "x", "[", "j", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "y", "=", "self", ".", "residual_func_list", "[", "residual_func_idx", "]", "(", "y", ")", "\n", "residual_func_idx", "+=", "1", "\n", "\n", "", "residual", "=", "residual", "+", "y", "\n", "\n", "", "", "residual", "=", "F", ".", "relu", "(", "residual", ")", "\n", "outs", ".", "append", "(", "residual", ")", "\n", "\n", "", "return", "outs", "\n", "\n", "\n", "", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W18_Small_V1": [[650, 667], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "1", "]", ",", "\n", "stage1_num_channels", "=", "[", "32", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "2", ",", "2", "]", ",", "\n", "stage2_num_channels", "=", "[", "16", ",", "32", "]", ",", "\n", "stage3_num_modules", "=", "1", ",", "\n", "stage3_num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "\n", "stage3_num_channels", "=", "[", "16", ",", "32", ",", "64", "]", ",", "\n", "stage4_num_modules", "=", "1", ",", "\n", "stage4_num_blocks", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "stage4_num_channels", "=", "[", "16", ",", "32", ",", "64", ",", "128", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W18_Small_V2": [[669, 686], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "2", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "2", ",", "2", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "3", ",", "\n", "stage3_num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n", "stage4_num_modules", "=", "2", ",", "\n", "stage4_num_blocks", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W18": [[688, 705], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W30": [[707, 724], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "30", ",", "60", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "30", ",", "60", ",", "120", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "30", ",", "60", ",", "120", ",", "240", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W32": [[726, 743], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "32", ",", "64", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "32", ",", "64", ",", "128", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "32", ",", "64", ",", "128", ",", "256", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W40": [[745, 762], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "40", ",", "80", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "40", ",", "80", ",", "160", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "40", ",", "80", ",", "160", ",", "320", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W44": [[764, 781], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "44", ",", "88", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "44", ",", "88", ",", "176", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "44", ",", "88", ",", "176", ",", "352", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W48": [[783, 800], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "48", ",", "96", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "48", ",", "96", ",", "192", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "48", ",", "96", ",", "192", ",", "384", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W60": [[802, 819], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "60", ",", "120", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "60", ",", "120", ",", "240", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "60", ",", "120", ",", "240", ",", "480", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet.HRNet_W64": [[821, 838], ["hrnet.HRNet"], "function", ["None"], ["    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "64", ",", "128", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "64", ",", "128", ",", "256", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3.__init__": [[57, 160], ["paddle.Layer.__init__", "mobilenetv3.MobileNetV3.modify_bottle_params", "mobilenetv3.ConvBNLayer", "mobilenetv3.make_divisible", "enumerate", "mobilenetv3.MobileNetV3.init_weight", "len", "mobilenetv3.MobileNetV3.block_list.append", "mobilenetv3.MobileNetV3.add_sublayer", "mobilenetv3.make_divisible", "mobilenetv3.make_divisible", "NotImplementedError", "mobilenetv3.make_divisible", "mobilenetv3.ResidualUnit", "mobilenetv3.make_divisible", "mobilenetv3.make_divisible", "mobilenetv3.make_divisible", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3.modify_bottle_params", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.make_divisible", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.make_divisible", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.make_divisible", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.make_divisible", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.make_divisible", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.make_divisible", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.make_divisible"], ["def", "__init__", "(", "self", ",", "\n", "pretrained", "=", "None", ",", "\n", "scale", "=", "1.0", ",", "\n", "model_name", "=", "\"small\"", ",", "\n", "output_stride", "=", "None", ")", ":", "\n", "        ", "super", "(", "MobileNetV3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inplanes", "=", "16", "\n", "if", "model_name", "==", "\"large\"", ":", "\n", "            ", "self", ".", "cfg", "=", "[", "\n", "# k, exp, c,  se,     nl,  s,", "\n", "[", "3", ",", "16", ",", "16", ",", "False", ",", "\"relu\"", ",", "1", "]", ",", "\n", "[", "3", ",", "64", ",", "24", ",", "False", ",", "\"relu\"", ",", "2", "]", ",", "\n", "[", "3", ",", "72", ",", "24", ",", "False", ",", "\"relu\"", ",", "1", "]", ",", "# output 1 -> out_index=2", "\n", "[", "5", ",", "72", ",", "40", ",", "True", ",", "\"relu\"", ",", "2", "]", ",", "\n", "[", "5", ",", "120", ",", "40", ",", "True", ",", "\"relu\"", ",", "1", "]", ",", "\n", "[", "5", ",", "120", ",", "40", ",", "True", ",", "\"relu\"", ",", "1", "]", ",", "# output 2 -> out_index=5", "\n", "[", "3", ",", "240", ",", "80", ",", "False", ",", "\"hard_swish\"", ",", "2", "]", ",", "\n", "[", "3", ",", "200", ",", "80", ",", "False", ",", "\"hard_swish\"", ",", "1", "]", ",", "\n", "[", "3", ",", "184", ",", "80", ",", "False", ",", "\"hard_swish\"", ",", "1", "]", ",", "\n", "[", "3", ",", "184", ",", "80", ",", "False", ",", "\"hard_swish\"", ",", "1", "]", ",", "\n", "[", "3", ",", "480", ",", "112", ",", "True", ",", "\"hard_swish\"", ",", "1", "]", ",", "\n", "[", "3", ",", "672", ",", "112", ",", "True", ",", "\"hard_swish\"", ",", "\n", "1", "]", ",", "# output 3 -> out_index=11", "\n", "[", "5", ",", "672", ",", "160", ",", "True", ",", "\"hard_swish\"", ",", "2", "]", ",", "\n", "[", "5", ",", "960", ",", "160", ",", "True", ",", "\"hard_swish\"", ",", "1", "]", ",", "\n", "[", "5", ",", "960", ",", "160", ",", "True", ",", "\"hard_swish\"", ",", "\n", "1", "]", ",", "# output 3 -> out_index=14", "\n", "]", "\n", "self", ".", "out_indices", "=", "[", "2", ",", "5", ",", "11", ",", "14", "]", "\n", "self", ".", "feat_channels", "=", "[", "\n", "make_divisible", "(", "i", "*", "scale", ")", "for", "i", "in", "[", "24", ",", "40", ",", "112", ",", "160", "]", "\n", "]", "\n", "\n", "self", ".", "cls_ch_squeeze", "=", "960", "\n", "self", ".", "cls_ch_expand", "=", "1280", "\n", "", "elif", "model_name", "==", "\"small\"", ":", "\n", "            ", "self", ".", "cfg", "=", "[", "\n", "# k, exp, c,  se,     nl,  s,", "\n", "[", "3", ",", "16", ",", "16", ",", "True", ",", "\"relu\"", ",", "2", "]", ",", "# output 1 -> out_index=0", "\n", "[", "3", ",", "72", ",", "24", ",", "False", ",", "\"relu\"", ",", "2", "]", ",", "\n", "[", "3", ",", "88", ",", "24", ",", "False", ",", "\"relu\"", ",", "1", "]", ",", "# output 2 -> out_index=3", "\n", "[", "5", ",", "96", ",", "40", ",", "True", ",", "\"hard_swish\"", ",", "2", "]", ",", "\n", "[", "5", ",", "240", ",", "40", ",", "True", ",", "\"hard_swish\"", ",", "1", "]", ",", "\n", "[", "5", ",", "240", ",", "40", ",", "True", ",", "\"hard_swish\"", ",", "1", "]", ",", "\n", "[", "5", ",", "120", ",", "48", ",", "True", ",", "\"hard_swish\"", ",", "1", "]", ",", "\n", "[", "5", ",", "144", ",", "48", ",", "True", ",", "\"hard_swish\"", ",", "1", "]", ",", "# output 3 -> out_index=7", "\n", "[", "5", ",", "288", ",", "96", ",", "True", ",", "\"hard_swish\"", ",", "2", "]", ",", "\n", "[", "5", ",", "576", ",", "96", ",", "True", ",", "\"hard_swish\"", ",", "1", "]", ",", "\n", "[", "5", ",", "576", ",", "96", ",", "True", ",", "\"hard_swish\"", ",", "1", "]", ",", "# output 4 -> out_index=10", "\n", "]", "\n", "self", ".", "out_indices", "=", "[", "0", ",", "3", ",", "7", ",", "10", "]", "\n", "self", ".", "feat_channels", "=", "[", "\n", "make_divisible", "(", "i", "*", "scale", ")", "for", "i", "in", "[", "16", ",", "24", ",", "48", ",", "96", "]", "\n", "]", "\n", "\n", "self", ".", "cls_ch_squeeze", "=", "576", "\n", "self", ".", "cls_ch_expand", "=", "1280", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\n", "\"mode[{}_model] is not implemented!\"", ".", "format", "(", "model_name", ")", ")", "\n", "\n", "###################################################", "\n", "# modify stride and dilation based on output_stride", "\n", "", "self", ".", "dilation_cfg", "=", "[", "1", "]", "*", "len", "(", "self", ".", "cfg", ")", "\n", "self", ".", "modify_bottle_params", "(", "output_stride", "=", "output_stride", ")", "\n", "###################################################", "\n", "\n", "self", ".", "conv1", "=", "ConvBNLayer", "(", "\n", "in_c", "=", "3", ",", "\n", "out_c", "=", "make_divisible", "(", "inplanes", "*", "scale", ")", ",", "\n", "filter_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "num_groups", "=", "1", ",", "\n", "if_act", "=", "True", ",", "\n", "act", "=", "\"hard_swish\"", ")", "\n", "\n", "self", ".", "block_list", "=", "[", "]", "\n", "\n", "inplanes", "=", "make_divisible", "(", "inplanes", "*", "scale", ")", "\n", "for", "i", ",", "(", "k", ",", "exp", ",", "c", ",", "se", ",", "nl", ",", "s", ")", "in", "enumerate", "(", "self", ".", "cfg", ")", ":", "\n", "######################################", "\n", "# add dilation rate", "\n", "            ", "dilation_rate", "=", "self", ".", "dilation_cfg", "[", "i", "]", "\n", "######################################", "\n", "self", ".", "block_list", ".", "append", "(", "\n", "ResidualUnit", "(", "\n", "in_c", "=", "inplanes", ",", "\n", "mid_c", "=", "make_divisible", "(", "scale", "*", "exp", ")", ",", "\n", "out_c", "=", "make_divisible", "(", "scale", "*", "c", ")", ",", "\n", "filter_size", "=", "k", ",", "\n", "stride", "=", "s", ",", "\n", "dilation", "=", "dilation_rate", ",", "\n", "use_se", "=", "se", ",", "\n", "act", "=", "nl", ",", "\n", "name", "=", "\"conv\"", "+", "str", "(", "i", "+", "2", ")", ")", ")", "\n", "self", ".", "add_sublayer", "(", "\n", "sublayer", "=", "self", ".", "block_list", "[", "-", "1", "]", ",", "name", "=", "\"conv\"", "+", "str", "(", "i", "+", "2", ")", ")", "\n", "inplanes", "=", "make_divisible", "(", "scale", "*", "c", ")", "\n", "\n", "", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3.modify_bottle_params": [[161, 175], ["ValueError", "enumerate"], "methods", ["None"], ["", "def", "modify_bottle_params", "(", "self", ",", "output_stride", "=", "None", ")", ":", "\n", "\n", "        ", "if", "output_stride", "is", "not", "None", "and", "output_stride", "%", "2", "!=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"output stride must to be even number\"", ")", "\n", "", "if", "output_stride", "is", "not", "None", ":", "\n", "            ", "stride", "=", "2", "\n", "rate", "=", "1", "\n", "for", "i", ",", "_cfg", "in", "enumerate", "(", "self", ".", "cfg", ")", ":", "\n", "                ", "stride", "=", "stride", "*", "_cfg", "[", "-", "1", "]", "\n", "if", "stride", ">", "output_stride", ":", "\n", "                    ", "rate", "=", "rate", "*", "_cfg", "[", "-", "1", "]", "\n", "self", ".", "cfg", "[", "i", "]", "[", "-", "1", "]", "=", "1", "\n", "\n", "", "self", ".", "dilation_cfg", "[", "i", "]", "=", "rate", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3.forward": [[176, 186], ["mobilenetv3.MobileNetV3.conv1", "enumerate", "block", "feat_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "def", "forward", "(", "self", ",", "inputs", ",", "label", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "inputs", ")", "\n", "# A feature list saves each downsampling feature.", "\n", "feat_list", "=", "[", "]", "\n", "for", "i", ",", "block", "in", "enumerate", "(", "self", ".", "block_list", ")", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "if", "i", "in", "self", ".", "out_indices", ":", "\n", "                ", "feat_list", ".", "append", "(", "x", ")", "\n", "\n", "", "", "return", "feat_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3.init_weight": [[187, 190], ["paddleseg.utils.utils.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.ConvBNLayer.__init__": [[193, 223], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddleseg.models.layers.SyncBatchNorm", "paddleseg.models.layers.Activation", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay", "paddle.regularizer.L2Decay"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.layers.layer_libs.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_c", ",", "\n", "out_c", ",", "\n", "filter_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "dilation", "=", "1", ",", "\n", "num_groups", "=", "1", ",", "\n", "if_act", "=", "True", ",", "\n", "act", "=", "None", ")", ":", "\n", "        ", "super", "(", "ConvBNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "if_act", "=", "if_act", "\n", "self", ".", "act", "=", "act", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "in_c", ",", "\n", "out_channels", "=", "out_c", ",", "\n", "kernel_size", "=", "filter_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "num_groups", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn", "=", "layers", ".", "SyncBatchNorm", "(", "\n", "num_features", "=", "out_c", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "regularizer", "=", "paddle", ".", "regularizer", ".", "L2Decay", "(", "0.0", ")", ")", ",", "\n", "bias_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "regularizer", "=", "paddle", ".", "regularizer", ".", "L2Decay", "(", "0.0", ")", ")", ")", "\n", "self", ".", "_act_op", "=", "layers", ".", "Activation", "(", "act", "=", "'hardswish'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.ConvBNLayer.forward": [[224, 230], ["mobilenetv3.ConvBNLayer.conv", "mobilenetv3.ConvBNLayer.bn", "mobilenetv3.ConvBNLayer._act_op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "if", "self", ".", "if_act", ":", "\n", "            ", "x", "=", "self", ".", "_act_op", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.ResidualUnit.__init__": [[233, 277], ["paddle.Layer.__init__", "mobilenetv3.ConvBNLayer", "mobilenetv3.ConvBNLayer", "mobilenetv3.ConvBNLayer", "mobilenetv3.SEModule"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_c", ",", "\n", "mid_c", ",", "\n", "out_c", ",", "\n", "filter_size", ",", "\n", "stride", ",", "\n", "use_se", ",", "\n", "dilation", "=", "1", ",", "\n", "act", "=", "None", ",", "\n", "name", "=", "''", ")", ":", "\n", "        ", "super", "(", "ResidualUnit", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "if_shortcut", "=", "stride", "==", "1", "and", "in_c", "==", "out_c", "\n", "self", ".", "if_se", "=", "use_se", "\n", "\n", "self", ".", "expand_conv", "=", "ConvBNLayer", "(", "\n", "in_c", "=", "in_c", ",", "\n", "out_c", "=", "mid_c", ",", "\n", "filter_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "if_act", "=", "True", ",", "\n", "act", "=", "act", ")", "\n", "\n", "self", ".", "bottleneck_conv", "=", "ConvBNLayer", "(", "\n", "in_c", "=", "mid_c", ",", "\n", "out_c", "=", "mid_c", ",", "\n", "filter_size", "=", "filter_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "'same'", ",", "\n", "dilation", "=", "dilation", ",", "\n", "num_groups", "=", "mid_c", ",", "\n", "if_act", "=", "True", ",", "\n", "act", "=", "act", ")", "\n", "if", "self", ".", "if_se", ":", "\n", "            ", "self", ".", "mid_se", "=", "SEModule", "(", "mid_c", ",", "name", "=", "name", "+", "\"_se\"", ")", "\n", "", "self", ".", "linear_conv", "=", "ConvBNLayer", "(", "\n", "in_c", "=", "mid_c", ",", "\n", "out_c", "=", "out_c", ",", "\n", "filter_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "if_act", "=", "False", ",", "\n", "act", "=", "None", ")", "\n", "self", ".", "dilation", "=", "dilation", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.ResidualUnit.forward": [[278, 287], ["mobilenetv3.ResidualUnit.expand_conv", "mobilenetv3.ResidualUnit.bottleneck_conv", "mobilenetv3.ResidualUnit.linear_conv", "mobilenetv3.ResidualUnit.mid_se"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "self", ".", "expand_conv", "(", "inputs", ")", "\n", "x", "=", "self", ".", "bottleneck_conv", "(", "x", ")", "\n", "if", "self", ".", "if_se", ":", "\n", "            ", "x", "=", "self", ".", "mid_se", "(", "x", ")", "\n", "", "x", "=", "self", ".", "linear_conv", "(", "x", ")", "\n", "if", "self", ".", "if_shortcut", ":", "\n", "            ", "x", "=", "inputs", "+", "x", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.SEModule.__init__": [[290, 305], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "4", ",", "name", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "channel", ",", "\n", "out_channels", "=", "channel", "//", "reduction", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "channel", "//", "reduction", ",", "\n", "out_channels", "=", "channel", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.SEModule.forward": [[306, 313], ["mobilenetv3.SEModule.avg_pool", "mobilenetv3.SEModule.conv1", "paddle.relu", "paddle.relu", "paddle.relu", "mobilenetv3.SEModule.conv2", "paddle.hardsigmoid", "paddle.hardsigmoid", "paddle.hardsigmoid", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply", "paddle.multiply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "outputs", "=", "self", ".", "avg_pool", "(", "inputs", ")", "\n", "outputs", "=", "self", ".", "conv1", "(", "outputs", ")", "\n", "outputs", "=", "F", ".", "relu", "(", "outputs", ")", "\n", "outputs", "=", "self", ".", "conv2", "(", "outputs", ")", "\n", "outputs", "=", "F", ".", "hardsigmoid", "(", "outputs", ")", "\n", "return", "paddle", ".", "multiply", "(", "x", "=", "inputs", ",", "y", "=", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.make_divisible": [[32, 39], ["max", "int"], "function", ["None"], ["def", "make_divisible", "(", "v", ",", "divisor", "=", "8", ",", "min_value", "=", "None", ")", ":", "\n", "    ", "if", "min_value", "is", "None", ":", "\n", "        ", "min_value", "=", "divisor", "\n", "", "new_v", "=", "max", "(", "min_value", ",", "int", "(", "v", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "if", "new_v", "<", "0.9", "*", "v", ":", "\n", "        ", "new_v", "+=", "divisor", "\n", "", "return", "new_v", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_small_x0_35": [[315, 318], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "", "def", "MobileNetV3_small_x0_35", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"small\"", ",", "scale", "=", "0.35", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_small_x0_5": [[320, 323], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "def", "MobileNetV3_small_x0_5", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"small\"", ",", "scale", "=", "0.5", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_small_x0_75": [[325, 328], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "def", "MobileNetV3_small_x0_75", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"small\"", ",", "scale", "=", "0.75", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_small_x1_0": [[330, 334], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "MobileNetV3_small_x1_0", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"small\"", ",", "scale", "=", "1.0", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_small_x1_25": [[336, 339], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "def", "MobileNetV3_small_x1_25", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"small\"", ",", "scale", "=", "1.25", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_large_x0_35": [[341, 344], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "def", "MobileNetV3_large_x0_35", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"large\"", ",", "scale", "=", "0.35", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_large_x0_5": [[346, 349], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "def", "MobileNetV3_large_x0_5", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"large\"", ",", "scale", "=", "0.5", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_large_x0_75": [[351, 354], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "def", "MobileNetV3_large_x0_75", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"large\"", ",", "scale", "=", "0.75", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_large_x1_0": [[356, 360], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "MobileNetV3_large_x1_0", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"large\"", ",", "scale", "=", "1.0", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mobilenetv3.MobileNetV3_large_x1_25": [[362, 365], ["mobilenetv3.MobileNetV3"], "function", ["None"], ["", "def", "MobileNetV3_large_x1_25", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "model_name", "=", "\"large\"", ",", "scale", "=", "1.25", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.DropPath.__init__": [[48, 51], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "drop_prob", "=", "None", ")", ":", "\n", "        ", "super", "(", "DropPath", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "drop_prob", "=", "drop_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.DropPath.forward": [[52, 54], ["transformer_utils.drop_path"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.drop_path"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "drop_path", "(", "x", ",", "self", ".", "drop_prob", ",", "self", ".", "training", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.Identity.__init__": [[57, 59], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.Identity.forward": [[60, 62], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.to_2tuple": [[25, 27], ["tuple"], "function", ["None"], ["def", "to_2tuple", "(", "x", ")", ":", "\n", "    ", "return", "tuple", "(", "[", "x", "]", "*", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.drop_path": [[29, 42], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.floor", "paddle.floor", "paddle.floor", "paddle.rand", "paddle.rand", "paddle.rand", "x.divide", "paddle.shape", "paddle.shape", "paddle.shape"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "drop_path", "(", "x", ",", "drop_prob", "=", "0.", ",", "training", "=", "False", ")", ":", "\n", "    ", "\"\"\"Drop paths (Stochastic Depth) per sample (when applied in main path of residual blocks).\n    the original name is misleading as 'Drop Connect' is a different form of dropout in a separate paper...\n    See discussion: https://github.com/tensorflow/tpu/issues/494#issuecomment-532968956 ...\n    \"\"\"", "\n", "if", "drop_prob", "==", "0.", "or", "not", "training", ":", "\n", "        ", "return", "x", "\n", "", "keep_prob", "=", "paddle", ".", "to_tensor", "(", "1", "-", "drop_prob", ")", "\n", "shape", "=", "(", "paddle", ".", "shape", "(", "x", ")", "[", "0", "]", ",", ")", "+", "(", "1", ",", ")", "*", "(", "x", ".", "ndim", "-", "1", ")", "\n", "random_tensor", "=", "keep_prob", "+", "paddle", ".", "rand", "(", "shape", ",", "dtype", "=", "x", ".", "dtype", ")", "\n", "random_tensor", "=", "paddle", ".", "floor", "(", "random_tensor", ")", "# binarize", "\n", "output", "=", "x", ".", "divide", "(", "keep_prob", ")", "*", "random_tensor", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.init_weights": [[69, 84], ["isinstance", "trunc_normal_", "isinstance", "zeros_", "zeros_", "ones_"], "function", ["None"], ["def", "init_weights", "(", "layer", ")", ":", "\n", "    ", "\"\"\"\n    Init the weights of transformer.\n    Args:\n        layer(nn.Layer): The layer to init weights.\n    Returns:\n        None\n    \"\"\"", "\n", "if", "isinstance", "(", "layer", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "trunc_normal_", "(", "layer", ".", "weight", ")", "\n", "if", "layer", ".", "bias", "is", "not", "None", ":", "\n", "            ", "zeros_", "(", "layer", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "layer", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "zeros_", "(", "layer", ".", "bias", ")", "\n", "ones_", "(", "layer", ".", "weight", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.Mlp.__init__": [[28, 41], ["paddle.Layer.__init__", "paddle.Linear", "paddle.Linear", "paddle.Linear", "act_layer", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "hidden_features", "=", "None", ",", "\n", "out_features", "=", "None", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.Mlp.forward": [[42, 49], ["swin_transformer.Mlp.fc1", "swin_transformer.Mlp.act", "swin_transformer.Mlp.drop", "swin_transformer.Mlp.fc2", "swin_transformer.Mlp.drop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.WindowAttention.__init__": [[101, 151], ["paddle.Layer.__init__", "swin_transformer.WindowAttention.create_parameter", "swin_transformer.WindowAttention.add_parameter", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten.unsqueeze", "paddle.flatten.unsqueeze", "paddle.flatten.unsqueeze", "paddle.flatten.unsqueeze", "paddle.flatten.unsqueeze", "paddle.flatten.unsqueeze", "relative_coords.transpose.transpose.transpose", "relative_coords.transpose.transpose.sum", "swin_transformer.WindowAttention.register_buffer", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "trunc_normal_", "paddle.Softmax", "paddle.Softmax", "paddle.Softmax", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "window_size", ",", "\n", "num_heads", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "qk_scale", "=", "None", ",", "\n", "attn_drop", "=", "0.", ",", "\n", "proj_drop", "=", "0.", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "window_size", "=", "window_size", "# Wh, Ww", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "# define a parameter table of relative position bias", "\n", "self", ".", "relative_position_bias_table", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "(", "2", "*", "window_size", "[", "0", "]", "-", "1", ")", "*", "(", "2", "*", "window_size", "[", "1", "]", "-", "1", ")", ",", "\n", "num_heads", ")", ",", "\n", "default_initializer", "=", "zeros_", ")", "\n", "self", ".", "add_parameter", "(", "\"relative_position_bias_table\"", ",", "\n", "self", ".", "relative_position_bias_table", ")", "\n", "\n", "# get pair-wise relative position index for each token inside the window", "\n", "coords_h", "=", "paddle", ".", "arange", "(", "self", ".", "window_size", "[", "0", "]", ")", "\n", "coords_w", "=", "paddle", ".", "arange", "(", "self", ".", "window_size", "[", "1", "]", ")", "\n", "coords", "=", "paddle", ".", "stack", "(", "paddle", ".", "meshgrid", "(", "[", "coords_h", ",", "\n", "coords_w", "]", ")", ")", "# 2, Wh, Ww", "\n", "coords_flatten", "=", "paddle", ".", "flatten", "(", "coords", ",", "1", ")", "# 2, Wh*Ww", "\n", "coords_flatten_1", "=", "coords_flatten", ".", "unsqueeze", "(", "axis", "=", "2", ")", "\n", "coords_flatten_2", "=", "coords_flatten", ".", "unsqueeze", "(", "axis", "=", "1", ")", "\n", "relative_coords", "=", "coords_flatten_1", "-", "coords_flatten_2", "\n", "\n", "relative_coords", "=", "relative_coords", ".", "transpose", "(", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "+=", "self", ".", "window_size", "[", "\n", "0", "]", "-", "1", "# shift to start from 0", "\n", "relative_coords", "[", ":", ",", ":", ",", "1", "]", "+=", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "*=", "2", "*", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_position_index", "=", "relative_coords", ".", "sum", "(", "-", "1", ")", "# Wh*Ww, Wh*Ww", "\n", "self", ".", "register_buffer", "(", "\"relative_position_index\"", ",", "relative_position_index", ")", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias_attr", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n", "trunc_normal_", "(", "self", ".", "relative_position_bias_table", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.WindowAttention.forward": [[152, 194], ["swin_transformer.WindowAttention.qkv().reshape().transpose", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "swin_transformer.WindowAttention.relative_position_index.reshape", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "relative_position_bias.transpose.transpose.reshape", "relative_position_bias.transpose.transpose.transpose", "swin_transformer.WindowAttention.attn_drop", "paddle.mm().transpose().reshape", "paddle.mm().transpose().reshape", "paddle.mm().transpose().reshape", "paddle.mm().transpose().reshape", "paddle.mm().transpose().reshape", "paddle.mm().transpose().reshape", "paddle.mm().transpose().reshape", "paddle.mm().transpose().reshape", "paddle.mm().transpose().reshape", "swin_transformer.WindowAttention.proj", "swin_transformer.WindowAttention.proj_drop", "k.transpose", "relative_position_bias.transpose.transpose.unsqueeze", "swin_transformer.WindowAttention.reshape", "swin_transformer.WindowAttention.softmax", "swin_transformer.WindowAttention.softmax", "swin_transformer.WindowAttention.qkv().reshape", "swin_transformer.WindowAttention.reshape", "mask.unsqueeze().unsqueeze", "paddle.mm().transpose", "paddle.mm().transpose", "paddle.mm().transpose", "paddle.mm().transpose", "paddle.mm().transpose", "paddle.mm().transpose", "paddle.mm().transpose", "paddle.mm().transpose", "paddle.mm().transpose", "swin_transformer.WindowAttention.qkv", "mask.unsqueeze", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm", "paddle.mm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x: input features with shape of (num_windows*B, N, C)\n            mask: (0/-inf) mask with shape of (num_windows, Wh*Ww, Wh*Ww) or None\n        \"\"\"", "\n", "B_", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "\n", "[", "B_", ",", "N", ",", "3", ",", "self", ".", "num_heads", ",", "\n", "C", "//", "self", ".", "num_heads", "]", ")", ".", "transpose", "(", "[", "2", ",", "0", ",", "3", ",", "1", ",", "4", "]", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "\n", "\n", "q", "=", "q", "*", "self", ".", "scale", "\n", "attn", "=", "paddle", ".", "mm", "(", "q", ",", "k", ".", "transpose", "(", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", ")", "\n", "\n", "index", "=", "self", ".", "relative_position_index", ".", "reshape", "(", "[", "-", "1", "]", ")", "\n", "relative_position_bias", "=", "paddle", ".", "index_select", "(", "\n", "self", ".", "relative_position_bias_table", ",", "index", ")", "\n", "\n", "relative_position_bias", "=", "relative_position_bias", ".", "reshape", "(", "[", "\n", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "\n", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "-", "1", "\n", "]", ")", "# Wh*Ww,Wh*Ww,nH", "\n", "relative_position_bias", "=", "relative_position_bias", ".", "transpose", "(", "\n", "[", "2", ",", "0", ",", "1", "]", ")", "# nH, Wh*Ww, Wh*Ww", "\n", "attn", "=", "attn", "+", "relative_position_bias", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "nW", "=", "mask", ".", "shape", "[", "0", "]", "\n", "attn", "=", "attn", ".", "reshape", "(", "[", "B_", "//", "nW", ",", "nW", ",", "self", ".", "num_heads", ",", "N", ",", "N", "\n", "]", ")", "+", "mask", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "attn", "=", "attn", ".", "reshape", "(", "[", "-", "1", ",", "self", ".", "num_heads", ",", "N", ",", "N", "]", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "", "else", ":", "\n", "            ", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "\n", "", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "paddle", ".", "mm", "(", "attn", ",", "v", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", ".", "reshape", "(", "[", "B_", ",", "N", ",", "C", "]", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformerBlock.__init__": [[215, 256], ["paddle.Layer.__init__", "norm_layer", "swin_transformer.WindowAttention", "norm_layer", "int", "swin_transformer.Mlp", "DropPath", "Identity", "to_2tuple"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.to_2tuple"], ["def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "num_heads", ",", "\n", "window_size", "=", "7", ",", "\n", "shift_size", "=", "0", ",", "\n", "mlp_ratio", "=", "4.", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop", "=", "0.", ",", "\n", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "shift_size", "=", "shift_size", "\n", "self", ".", "mlp_ratio", "=", "mlp_ratio", "\n", "assert", "0", "<=", "self", ".", "shift_size", "<", "self", ".", "window_size", ",", "\"shift_size must in 0-window_size\"", "\n", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "WindowAttention", "(", "\n", "dim", ",", "\n", "window_size", "=", "to_2tuple", "(", "self", ".", "window_size", ")", ",", "\n", "num_heads", "=", "num_heads", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "attn_drop", "=", "attn_drop", ",", "\n", "proj_drop", "=", "drop", ")", "\n", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp", "(", "in_features", "=", "dim", ",", "\n", "hidden_features", "=", "mlp_hidden_dim", ",", "\n", "act_layer", "=", "act_layer", ",", "\n", "drop", "=", "drop", ")", "\n", "\n", "self", ".", "H", "=", "None", "\n", "self", ".", "W", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformerBlock.forward": [[257, 327], ["swin_transformer.SwinTransformerBlock.norm1", "paddle.roll.reshape", "paddle.roll.reshape", "paddle.roll.reshape", "paddle.roll.transpose", "paddle.roll.transpose", "paddle.roll.transpose", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.roll.transpose", "paddle.roll.transpose", "paddle.roll.transpose", "swin_transformer.window_partition", "x_windows.reshape.reshape.reshape", "swin_transformer.SwinTransformerBlock.attn", "attn_windows.reshape.reshape.reshape", "swin_transformer.window_reverse", "paddle.roll.reshape", "paddle.roll.reshape", "paddle.roll.reshape", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "paddle.roll", "swin_transformer.SwinTransformerBlock.drop_path", "swin_transformer.SwinTransformerBlock.drop_path", "swin_transformer.SwinTransformerBlock.mlp", "swin_transformer.SwinTransformerBlock.norm2"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.window_partition", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.window_reverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.drop_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.drop_path"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask_matrix", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x: Input feature, tensor size (B, H*W, C).\n            H, W: Spatial resolution of the input feature.\n            mask_matrix: Attention mask for cyclic shift.\n        \"\"\"", "\n", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "H", ",", "W", "=", "self", ".", "H", ",", "self", ".", "W", "\n", "assert", "L", "==", "H", "*", "W", ",", "\"input feature has wrong size\"", "\n", "\n", "shortcut", "=", "x", "\n", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "[", "B", ",", "H", ",", "W", ",", "C", "]", ")", "\n", "\n", "# pad feature maps to multiples of window size", "\n", "pad_l", "=", "pad_t", "=", "0", "\n", "pad_r", "=", "(", "self", ".", "window_size", "-", "W", "%", "self", ".", "window_size", ")", "%", "self", ".", "window_size", "\n", "pad_b", "=", "(", "self", ".", "window_size", "-", "H", "%", "self", ".", "window_size", ")", "%", "self", ".", "window_size", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "pad_l", ",", "pad_r", ",", "pad_t", ",", "pad_b", "]", ")", "\n", "x", "=", "x", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "_", ",", "Hp", ",", "Wp", ",", "_", "=", "x", ".", "shape", "\n", "\n", "# cyclic shift", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "shifted_x", "=", "paddle", ".", "roll", "(", "\n", "x", ",", "shifts", "=", "(", "-", "self", ".", "shift_size", ",", "-", "self", ".", "shift_size", ")", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "attn_mask", "=", "mask_matrix", "\n", "", "else", ":", "\n", "            ", "shifted_x", "=", "x", "\n", "attn_mask", "=", "None", "\n", "\n", "# partition windows", "\n", "", "x_windows", "=", "window_partition", "(", "\n", "shifted_x", ",", "self", ".", "window_size", ")", "# nW*B, window_size, window_size, C", "\n", "x_windows", "=", "x_windows", ".", "reshape", "(", "\n", "[", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", ",", "\n", "C", "]", ")", "# nW*B, window_size*window_size, C", "\n", "\n", "# W-MSA/SW-MSA", "\n", "attn_windows", "=", "self", ".", "attn", "(", "\n", "x_windows", ",", "mask", "=", "attn_mask", ")", "# nW*B, window_size*window_size, C", "\n", "\n", "# merge windows", "\n", "attn_windows", "=", "attn_windows", ".", "reshape", "(", "\n", "[", "-", "1", ",", "self", ".", "window_size", ",", "self", ".", "window_size", ",", "C", "]", ")", "\n", "shifted_x", "=", "window_reverse", "(", "attn_windows", ",", "self", ".", "window_size", ",", "Hp", ",", "\n", "Wp", ")", "# B H' W' C", "\n", "\n", "# reverse cyclic shift", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "x", "=", "paddle", ".", "roll", "(", "\n", "shifted_x", ",", "\n", "shifts", "=", "(", "self", ".", "shift_size", ",", "self", ".", "shift_size", ")", ",", "\n", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "shifted_x", "\n", "\n", "", "if", "pad_r", ">", "0", "or", "pad_b", ">", "0", ":", "\n", "            ", "x", "=", "x", "[", ":", ",", ":", "H", ",", ":", "W", ",", ":", "]", "\n", "\n", "", "x", "=", "x", ".", "reshape", "(", "[", "B", ",", "H", "*", "W", ",", "C", "]", ")", "\n", "\n", "# FFN", "\n", "x", "=", "shortcut", "+", "self", ".", "drop_path", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.PatchMerging.__init__": [[338, 343], ["paddle.Layer.__init__", "paddle.Linear", "paddle.Linear", "paddle.Linear", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "reduction", "=", "nn", ".", "Linear", "(", "4", "*", "dim", ",", "2", "*", "dim", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "norm", "=", "norm_layer", "(", "4", "*", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.PatchMerging.forward": [[344, 373], ["x.transpose.transpose.reshape", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "x.transpose.transpose.reshape", "swin_transformer.PatchMerging.norm", "swin_transformer.PatchMerging.reduction", "x.transpose.transpose.transpose", "paddle.pad", "paddle.pad", "paddle.pad", "x.transpose.transpose.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x: Input feature, tensor size (B, H*W, C).\n            H, W: Spatial resolution of the input feature.\n        \"\"\"", "\n", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "assert", "L", "==", "H", "*", "W", ",", "\"input feature has wrong size\"", "\n", "\n", "x", "=", "x", ".", "reshape", "(", "[", "B", ",", "H", ",", "W", ",", "C", "]", ")", "\n", "\n", "# padding", "\n", "pad_input", "=", "(", "H", "%", "2", "==", "1", ")", "or", "(", "W", "%", "2", "==", "1", ")", "\n", "if", "pad_input", ":", "\n", "            ", "x", "=", "x", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "0", ",", "W", "%", "2", ",", "0", ",", "H", "%", "2", "]", ")", "\n", "x", "=", "x", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "\n", "", "x0", "=", "x", "[", ":", ",", "0", ":", ":", "2", ",", "0", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x1", "=", "x", "[", ":", ",", "1", ":", ":", "2", ",", "0", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x2", "=", "x", "[", ":", ",", "0", ":", ":", "2", ",", "1", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x3", "=", "x", "[", ":", ",", "1", ":", ":", "2", ",", "1", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "x0", ",", "x1", ",", "x2", ",", "x3", "]", ",", "-", "1", ")", "# B H/2 W/2 4*C", "\n", "x", "=", "x", ".", "reshape", "(", "[", "B", ",", "-", "1", ",", "4", "*", "C", "]", ")", "# B H/2*W/2 4*C", "\n", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "reduction", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.BasicLayer.__init__": [[394, 434], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "downsample", "swin_transformer.SwinTransformerBlock", "range", "isinstance"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "depth", ",", "\n", "num_heads", ",", "\n", "window_size", "=", "7", ",", "\n", "mlp_ratio", "=", "4.", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop", "=", "0.", ",", "\n", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "shift_size", "=", "window_size", "//", "2", "\n", "self", ".", "depth", "=", "depth", "\n", "\n", "# build blocks", "\n", "self", ".", "blocks", "=", "nn", ".", "LayerList", "(", "[", "\n", "SwinTransformerBlock", "(", "\n", "dim", "=", "dim", ",", "\n", "num_heads", "=", "num_heads", ",", "\n", "window_size", "=", "window_size", ",", "\n", "shift_size", "=", "0", "if", "(", "i", "%", "2", "==", "0", ")", "else", "window_size", "//", "2", ",", "\n", "mlp_ratio", "=", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop", ",", "\n", "attn_drop", "=", "attn_drop", ",", "\n", "drop_path", "=", "drop_path", "[", "i", "]", "\n", "if", "isinstance", "(", "drop_path", ",", "list", ")", "else", "drop_path", ",", "\n", "norm_layer", "=", "norm_layer", ")", "for", "i", "in", "range", "(", "depth", ")", "\n", "]", ")", "\n", "\n", "# patch merging layer", "\n", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "self", ".", "downsample", "=", "downsample", "(", "dim", "=", "dim", ",", "norm_layer", "=", "norm_layer", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "downsample", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.BasicLayer.forward": [[435, 475], ["paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "swin_transformer.window_partition", "mask_windows.reshape.reshape.reshape", "int", "int", "slice", "slice", "slice", "slice", "slice", "slice", "mask_windows.reshape.reshape.unsqueeze", "mask_windows.reshape.reshape.unsqueeze", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "blk", "swin_transformer.BasicLayer.downsample", "numpy.ceil", "numpy.ceil"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.window_partition"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x: Input feature, tensor size (B, H*W, C).\n            H, W: Spatial resolution of the input feature.\n        \"\"\"", "\n", "# calculate attention mask for SW-MSA", "\n", "Hp", "=", "int", "(", "np", ".", "ceil", "(", "H", "/", "self", ".", "window_size", ")", ")", "*", "self", ".", "window_size", "\n", "Wp", "=", "int", "(", "np", ".", "ceil", "(", "W", "/", "self", ".", "window_size", ")", ")", "*", "self", ".", "window_size", "\n", "img_mask", "=", "paddle", ".", "zeros", "(", "(", "1", ",", "Hp", ",", "Wp", ",", "1", ")", ")", "# 1 Hp Wp 1", "\n", "h_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "w_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "cnt", "=", "0", "\n", "for", "h", "in", "h_slices", ":", "\n", "            ", "for", "w", "in", "w_slices", ":", "\n", "                ", "img_mask", "[", ":", ",", "h", ",", "w", ",", ":", "]", "=", "cnt", "\n", "cnt", "+=", "1", "\n", "\n", "", "", "mask_windows", "=", "window_partition", "(", "\n", "img_mask", ",", "self", ".", "window_size", ")", "# nW, window_size, window_size, 1", "\n", "mask_windows", "=", "mask_windows", ".", "reshape", "(", "\n", "[", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", "]", ")", "\n", "attn_mask", "=", "mask_windows", ".", "unsqueeze", "(", "1", ")", "-", "mask_windows", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "huns", "=", "-", "100.0", "*", "paddle", ".", "ones_like", "(", "attn_mask", ")", "\n", "attn_mask", "=", "huns", "*", "(", "attn_mask", "!=", "0", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "\n", "for", "blk", "in", "self", ".", "blocks", ":", "\n", "            ", "blk", ".", "H", ",", "blk", ".", "W", "=", "H", ",", "W", "\n", "x", "=", "blk", "(", "x", ",", "attn_mask", ")", "\n", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "x_down", "=", "self", ".", "downsample", "(", "x", ",", "H", ",", "W", ")", "\n", "Wh", ",", "Ww", "=", "(", "H", "+", "1", ")", "//", "2", ",", "(", "W", "+", "1", ")", "//", "2", "\n", "return", "x", ",", "H", ",", "W", ",", "x_down", ",", "Wh", ",", "Ww", "\n", "", "else", ":", "\n", "            ", "return", "x", ",", "H", ",", "W", ",", "x", ",", "H", ",", "W", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.PatchEmbed.__init__": [[488, 502], ["paddle.Layer.__init__", "to_2tuple", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.to_2tuple"], ["def", "__init__", "(", "self", ",", "patch_size", "=", "4", ",", "in_chans", "=", "3", ",", "embed_dim", "=", "96", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "\n", "self", ".", "in_chans", "=", "in_chans", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "\n", "self", ".", "proj", "=", "nn", ".", "Conv2D", "(", "\n", "in_chans", ",", "embed_dim", ",", "kernel_size", "=", "patch_size", ",", "stride", "=", "patch_size", ")", "\n", "if", "norm_layer", "is", "not", "None", ":", "\n", "            ", "self", ".", "norm", "=", "norm_layer", "(", "embed_dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.PatchEmbed.forward": [[503, 520], ["swin_transformer.PatchEmbed.proj", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "x.transpose().reshape.transpose().reshape.flatten().transpose", "swin_transformer.PatchEmbed.norm", "x.transpose().reshape.transpose().reshape.transpose().reshape", "x.transpose().reshape.transpose().reshape.flatten", "x.transpose().reshape.transpose().reshape.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function.\"\"\"", "\n", "# padding", "\n", "_", ",", "_", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "if", "W", "%", "self", ".", "patch_size", "[", "1", "]", "!=", "0", ":", "\n", "            ", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "0", ",", "self", ".", "patch_size", "[", "1", "]", "-", "W", "%", "self", ".", "patch_size", "[", "1", "]", ",", "0", ",", "0", "]", ")", "\n", "", "if", "H", "%", "self", ".", "patch_size", "[", "0", "]", "!=", "0", ":", "\n", "            ", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "0", ",", "0", ",", "0", ",", "self", ".", "patch_size", "[", "0", "]", "-", "H", "%", "self", ".", "patch_size", "[", "0", "]", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "proj", "(", "x", ")", "# B C Wh Ww", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "_", ",", "_", ",", "Wh", ",", "Ww", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "self", ".", "embed_dim", ",", "Wh", ",", "Ww", "]", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer.__init__": [[553, 643], ["paddle.Layer.__init__", "len", "swin_transformer.PatchEmbed", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "numpy.linspace().tolist", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "swin_transformer.SwinTransformer._freeze_stages", "swin_transformer.SwinTransformer.init_weights", "to_2tuple", "to_2tuple", "swin_transformer.SwinTransformer.create_parameter", "swin_transformer.SwinTransformer.add_parameter", "trunc_normal_", "swin_transformer.BasicLayer", "swin_transformer.SwinTransformer.layers.append", "int", "norm_layer", "swin_transformer.SwinTransformer.add_sublayer", "numpy.linspace", "range", "sum", "int", "sum", "sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer._freeze_stages", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.to_2tuple", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.to_2tuple", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "\n", "pretrain_img_size", "=", "224", ",", "\n", "patch_size", "=", "4", ",", "\n", "in_chans", "=", "3", ",", "\n", "embed_dim", "=", "96", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "6", ",", "2", "]", ",", "\n", "num_heads", "=", "[", "3", ",", "6", ",", "12", ",", "24", "]", ",", "\n", "window_size", "=", "7", ",", "\n", "mlp_ratio", "=", "4.", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop_rate", "=", "0.", ",", "\n", "attn_drop_rate", "=", "0.", ",", "\n", "drop_path_rate", "=", "0.2", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "ape", "=", "False", ",", "\n", "patch_norm", "=", "True", ",", "\n", "out_indices", "=", "(", "0", ",", "1", ",", "2", ",", "3", ")", ",", "\n", "frozen_stages", "=", "-", "1", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "pretrain_img_size", "=", "pretrain_img_size", "\n", "self", ".", "num_layers", "=", "len", "(", "depths", ")", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "self", ".", "ape", "=", "ape", "\n", "self", ".", "patch_norm", "=", "patch_norm", "\n", "self", ".", "out_indices", "=", "out_indices", "\n", "self", ".", "frozen_stages", "=", "frozen_stages", "\n", "\n", "# split image into non-overlapping patches", "\n", "self", ".", "patch_embed", "=", "PatchEmbed", "(", "\n", "patch_size", "=", "patch_size", ",", "\n", "in_chans", "=", "in_chans", ",", "\n", "embed_dim", "=", "embed_dim", ",", "\n", "norm_layer", "=", "norm_layer", "if", "self", ".", "patch_norm", "else", "None", ")", "\n", "\n", "# absolute position embedding", "\n", "if", "self", ".", "ape", ":", "\n", "            ", "pretrain_img_size", "=", "to_2tuple", "(", "pretrain_img_size", ")", "\n", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "patches_resolution", "=", "[", "\n", "pretrain_img_size", "[", "0", "]", "//", "patch_size", "[", "0", "]", ",", "\n", "pretrain_img_size", "[", "1", "]", "//", "patch_size", "[", "1", "]", "\n", "]", "\n", "\n", "self", ".", "absolute_pos_embed", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "1", ",", "embed_dim", ",", "patches_resolution", "[", "0", "]", ",", "\n", "patches_resolution", "[", "1", "]", ")", ",", "\n", "default_initializer", "=", "zeros_", ")", "\n", "self", ".", "add_parameter", "(", "\"absolute_pos_embed\"", ",", "self", ".", "absolute_pos_embed", ")", "\n", "trunc_normal_", "(", "self", ".", "absolute_pos_embed", ")", "\n", "\n", "", "self", ".", "pos_drop", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_rate", ")", "\n", "\n", "# stochastic depth", "\n", "dpr", "=", "np", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "sum", "(", "depths", ")", ")", ".", "tolist", "(", ")", "\n", "\n", "# build layers", "\n", "self", ".", "layers", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "i_layer", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "layer", "=", "BasicLayer", "(", "\n", "dim", "=", "int", "(", "embed_dim", "*", "2", "**", "i_layer", ")", ",", "\n", "depth", "=", "depths", "[", "i_layer", "]", ",", "\n", "num_heads", "=", "num_heads", "[", "i_layer", "]", ",", "\n", "window_size", "=", "window_size", ",", "\n", "mlp_ratio", "=", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "sum", "(", "depths", "[", ":", "i_layer", "]", ")", ":", "sum", "(", "depths", "[", ":", "i_layer", "+", "1", "]", ")", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "downsample", "=", "PatchMerging", "\n", "if", "(", "i_layer", "<", "self", ".", "num_layers", "-", "1", ")", "else", "None", ")", "\n", "self", ".", "layers", ".", "append", "(", "layer", ")", "\n", "\n", "", "feat_channels", "=", "[", "int", "(", "embed_dim", "*", "2", "**", "i", ")", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", "]", "\n", "self", ".", "feat_channels", "=", "feat_channels", "\n", "\n", "# add a norm layer for each output", "\n", "for", "i_layer", "in", "out_indices", ":", "\n", "            ", "layer", "=", "norm_layer", "(", "feat_channels", "[", "i_layer", "]", ")", "\n", "layer_name", "=", "f'norm{i_layer}'", "\n", "self", ".", "add_sublayer", "(", "layer_name", ",", "layer", ")", "\n", "\n", "", "self", ".", "_freeze_stages", "(", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weights", "(", "self", ".", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer._freeze_stages": [[644, 660], ["swin_transformer.SwinTransformer.patch_embed.eval", "swin_transformer.SwinTransformer.patch_embed.parameters", "swin_transformer.SwinTransformer.pos_drop.eval", "range", "layer.eval", "layer.parameters"], "methods", ["None"], ["", "def", "_freeze_stages", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "frozen_stages", ">=", "0", ":", "\n", "            ", "self", ".", "patch_embed", ".", "eval", "(", ")", "\n", "for", "param", "in", "self", ".", "patch_embed", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "if", "self", ".", "frozen_stages", ">=", "1", "and", "self", ".", "ape", ":", "\n", "            ", "self", ".", "absolute_pos_embed", ".", "requires_grad", "=", "False", "\n", "\n", "", "if", "self", ".", "frozen_stages", ">=", "2", ":", "\n", "            ", "self", ".", "pos_drop", ".", "eval", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "frozen_stages", "-", "1", ")", ":", "\n", "                ", "layer", "=", "self", ".", "layers", "[", "i", "]", "\n", "layer", ".", "eval", "(", ")", "\n", "for", "param", "in", "layer", ".", "parameters", "(", ")", ":", "\n", "                    ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer.init_weights": [[661, 680], ["paddleseg.utils.utils.load_pretrained_model", "swin_transformer.SwinTransformer.sublayers", "isinstance", "trunc_normal_", "isinstance", "isinstance", "zeros_", "zeros_", "ones_"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model"], ["", "", "", "", "def", "init_weights", "(", "self", ",", "pretrained", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the weights in backbone.\n\n        Args:\n            pretrained (str, optional): Path to pre-trained weights.\n                Defaults to None.\n        \"\"\"", "\n", "if", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "", "else", ":", "\n", "            ", "for", "sublayer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "sublayer", ",", "nn", ".", "Linear", ")", ":", "\n", "                    ", "trunc_normal_", "(", "sublayer", ".", "weight", ")", "\n", "if", "isinstance", "(", "sublayer", ",", "\n", "nn", ".", "Linear", ")", "and", "sublayer", ".", "bias", "is", "not", "None", ":", "\n", "                        ", "zeros_", "(", "sublayer", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "sublayer", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "                    ", "zeros_", "(", "sublayer", ".", "bias", ")", "\n", "ones_", "(", "sublayer", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer.forward": [[681, 709], ["swin_transformer.SwinTransformer.patch_embed", "swin_transformer.SwinTransformer.pos_drop", "range", "tuple", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "x.flatten().transpose.flatten().transpose.flatten().transpose", "layer", "getattr", "getattr.", "getattr.reshape().transpose", "outs.append", "x.flatten().transpose.flatten().transpose.flatten", "getattr.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function.\"\"\"", "\n", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "\n", "_", ",", "_", ",", "Wh", ",", "Ww", "=", "x", ".", "shape", "\n", "if", "self", ".", "ape", ":", "\n", "# interpolate the position embedding to the corresponding size", "\n", "            ", "absolute_pos_embed", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "absolute_pos_embed", ",", "size", "=", "(", "Wh", ",", "Ww", ")", ",", "mode", "=", "'bicubic'", ")", "\n", "x", "=", "(", "x", "+", "absolute_pos_embed", ")", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "# B Wh*Ww C", "\n", "", "else", ":", "\n", "            ", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "", "x", "=", "self", ".", "pos_drop", "(", "x", ")", "\n", "\n", "outs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "layer", "=", "self", ".", "layers", "[", "i", "]", "\n", "x_out", ",", "H", ",", "W", ",", "x", ",", "Wh", ",", "Ww", "=", "layer", "(", "x", ",", "Wh", ",", "Ww", ")", "\n", "\n", "if", "i", "in", "self", ".", "out_indices", ":", "\n", "                ", "norm_layer", "=", "getattr", "(", "self", ",", "f'norm{i}'", ")", "\n", "x_out", "=", "norm_layer", "(", "x_out", ")", "\n", "\n", "out", "=", "x_out", ".", "reshape", "(", "\n", "[", "-", "1", ",", "H", ",", "W", ",", "self", ".", "feat_channels", "[", "i", "]", "]", ")", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "outs", ".", "append", "(", "out", ")", "\n", "\n", "", "", "return", "tuple", "(", "outs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer.train": [[710, 714], ["super().train", "swin_transformer.SwinTransformer._freeze_stages"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer._freeze_stages"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "\"\"\"Convert the model into training mode while keep layers freezed.\"\"\"", "\n", "super", "(", "SwinTransformer", ",", "self", ")", ".", "train", "(", ")", "\n", "self", ".", "_freeze_stages", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.window_partition": [[51, 66], ["x.reshape.reshape", "x.reshape.transpose().reshape", "x.reshape.transpose"], "function", ["None"], ["", "", "def", "window_partition", "(", "x", ",", "window_size", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        x: (B, H, W, C)\n        window_size (int): window size\n\n    Returns:\n        windows: (num_windows*B, window_size, window_size, C)\n    \"\"\"", "\n", "B", ",", "H", ",", "W", ",", "C", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "reshape", "(", "\n", "[", "B", ",", "H", "//", "window_size", ",", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "C", "]", ")", "\n", "windows", "=", "x", ".", "transpose", "(", "[", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "\n", "5", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "window_size", ",", "window_size", ",", "C", "]", ")", "\n", "return", "windows", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.window_reverse": [[68, 84], ["int", "windows.reshape", "x.transpose().reshape.transpose().reshape", "x.transpose().reshape.transpose"], "function", ["None"], ["", "def", "window_reverse", "(", "windows", ",", "window_size", ",", "H", ",", "W", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        windows: (num_windows*B, window_size, window_size, C)\n        window_size (int): Window size\n        H (int): Height of image\n        W (int): Width of image\n\n    Returns:\n        x: (B, H, W, C)\n    \"\"\"", "\n", "B", "=", "int", "(", "windows", ".", "shape", "[", "0", "]", "/", "(", "H", "*", "W", "/", "window_size", "/", "window_size", ")", ")", "\n", "x", "=", "windows", ".", "reshape", "(", "\n", "[", "B", ",", "H", "//", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "window_size", ",", "-", "1", "]", ")", "\n", "x", "=", "x", ".", "transpose", "(", "[", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "5", "]", ")", ".", "reshape", "(", "[", "B", ",", "H", ",", "W", ",", "-", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer_tiny_patch4_window7_224": [[716, 727], ["swin_transformer.SwinTransformer"], "function", ["None"], ["", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "SwinTransformer_tiny_patch4_window7_224", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "SwinTransformer", "(", "\n", "pretrain_img_size", "=", "224", ",", "\n", "embed_dim", "=", "96", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "6", ",", "2", "]", ",", "\n", "num_heads", "=", "[", "3", ",", "6", ",", "12", ",", "24", "]", ",", "\n", "window_size", "=", "7", ",", "\n", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer_small_patch4_window7_224": [[729, 740], ["swin_transformer.SwinTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "SwinTransformer_small_patch4_window7_224", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "SwinTransformer", "(", "\n", "pretrain_img_size", "=", "224", ",", "\n", "embed_dim", "=", "96", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "18", ",", "2", "]", ",", "\n", "num_heads", "=", "[", "3", ",", "6", ",", "12", ",", "24", "]", ",", "\n", "window_size", "=", "7", ",", "\n", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer_base_patch4_window7_224": [[742, 753], ["swin_transformer.SwinTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "SwinTransformer_base_patch4_window7_224", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "SwinTransformer", "(", "\n", "pretrain_img_size", "=", "224", ",", "\n", "embed_dim", "=", "128", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "18", ",", "2", "]", ",", "\n", "num_heads", "=", "[", "4", ",", "8", ",", "16", ",", "32", "]", ",", "\n", "window_size", "=", "7", ",", "\n", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer_base_patch4_window12_384": [[755, 766], ["swin_transformer.SwinTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "SwinTransformer_base_patch4_window12_384", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "SwinTransformer", "(", "\n", "pretrain_img_size", "=", "384", ",", "\n", "embed_dim", "=", "128", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "18", ",", "2", "]", ",", "\n", "num_heads", "=", "[", "4", ",", "8", ",", "16", ",", "32", "]", ",", "\n", "window_size", "=", "12", ",", "\n", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer_large_patch4_window7_224": [[768, 779], ["swin_transformer.SwinTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "SwinTransformer_large_patch4_window7_224", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "SwinTransformer", "(", "\n", "pretrain_img_size", "=", "224", ",", "\n", "embed_dim", "=", "192", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "18", ",", "2", "]", ",", "\n", "num_heads", "=", "[", "6", ",", "12", ",", "24", ",", "48", "]", ",", "\n", "window_size", "=", "7", ",", "\n", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.swin_transformer.SwinTransformer_large_patch4_window12_384": [[781, 792], ["swin_transformer.SwinTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "SwinTransformer_large_patch4_window12_384", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "SwinTransformer", "(", "\n", "pretrain_img_size", "=", "384", ",", "\n", "embed_dim", "=", "192", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "18", ",", "2", "]", ",", "\n", "num_heads", "=", "[", "6", ",", "12", ",", "24", ",", "48", "]", ",", "\n", "window_size", "=", "12", ",", "\n", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.Mlp.__init__": [[29, 45], ["paddle.Layer.__init__", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "mix_transformer.DWConv", "act_layer", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "mix_transformer.Mlp.apply"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.apply"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "hidden_features", "=", "None", ",", "\n", "out_features", "=", "None", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "dwconv", "=", "DWConv", "(", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.Mlp._init_weights": [[46, 60], ["isinstance", "trunc_normal_", "isinstance", "isinstance", "zeros_", "zeros_", "ones_", "isinstance", "paddle.Normal", "paddle.Normal", "paddle.Normal", "paddle.Normal", "zeros_", "math.sqrt"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "zeros_", "(", "m", ".", "bias", ")", "\n", "ones_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2D", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "_kernel_size", "[", "0", "]", "*", "m", ".", "_kernel_size", "[", "1", "]", "*", "m", ".", "_out_channels", "\n", "fan_out", "//=", "m", ".", "_groups", "\n", "paddle_init", ".", "Normal", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.Mlp.forward": [[61, 69], ["mix_transformer.Mlp.fc1", "mix_transformer.Mlp.dwconv", "mix_transformer.Mlp.act", "mix_transformer.Mlp.drop", "mix_transformer.Mlp.fc2", "mix_transformer.Mlp.drop"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "dwconv", "(", "x", ",", "H", ",", "W", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.Attention.__init__": [[72, 101], ["paddle.Layer.__init__", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "mix_transformer.Attention.apply", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.apply"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "num_heads", "=", "8", ",", "\n", "qkv_bias", "=", "False", ",", "\n", "qk_scale", "=", "None", ",", "\n", "attn_drop", "=", "0.", ",", "\n", "proj_drop", "=", "0.", ",", "\n", "sr_ratio", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "dim", "%", "num_heads", "==", "0", ",", "f\"dim {dim} should be divided by num_heads {num_heads}.\"", "\n", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "self", ".", "dim", "=", "dim", "\n", "\n", "self", ".", "q", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias_attr", "=", "qkv_bias", ")", "\n", "self", ".", "kv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "2", ",", "bias_attr", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n", "self", ".", "sr_ratio", "=", "sr_ratio", "\n", "if", "sr_ratio", ">", "1", ":", "\n", "            ", "self", ".", "sr", "=", "nn", ".", "Conv2D", "(", "dim", ",", "dim", ",", "kernel_size", "=", "sr_ratio", ",", "stride", "=", "sr_ratio", ")", "\n", "self", ".", "norm", "=", "nn", ".", "LayerNorm", "(", "dim", ")", "\n", "\n", "", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.Attention._init_weights": [[102, 116], ["isinstance", "trunc_normal_", "isinstance", "isinstance", "zeros_", "zeros_", "ones_", "isinstance", "paddle.Normal", "paddle.Normal", "paddle.Normal", "paddle.Normal", "zeros_", "math.sqrt"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "zeros_", "(", "m", ".", "bias", ")", "\n", "ones_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2D", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "_kernel_size", "[", "0", "]", "*", "m", ".", "_kernel_size", "[", "1", "]", "*", "m", ".", "_out_channels", "\n", "fan_out", "//=", "m", ".", "_groups", "\n", "paddle_init", ".", "Normal", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.Attention.forward": [[117, 147], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "mix_transformer.Attention.q().reshape().transpose", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.softmax", "mix_transformer.Attention.attn_drop", "mix_transformer.Attention.proj", "mix_transformer.Attention.proj_drop", "mix_transformer.Attention.transpose().reshape", "mix_transformer.Attention.sr().reshape().transpose", "mix_transformer.Attention.norm", "mix_transformer.Attention.kv().reshape().transpose", "mix_transformer.Attention.kv().reshape().transpose", "mix_transformer.Attention.q().reshape", "k.transpose", "mix_transformer.Attention.transpose", "mix_transformer.Attention.sr().reshape", "mix_transformer.Attention.kv().reshape", "mix_transformer.Attention.kv().reshape", "mix_transformer.Attention.q", "mix_transformer.Attention.sr", "mix_transformer.Attention.kv", "mix_transformer.Attention.kv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "B", ",", "N", "=", "x_shape", "[", "0", "]", ",", "x_shape", "[", "1", "]", "\n", "C", "=", "self", ".", "dim", "\n", "\n", "q", "=", "self", ".", "q", "(", "x", ")", ".", "reshape", "(", "[", "B", ",", "N", ",", "self", ".", "num_heads", ",", "\n", "C", "//", "self", ".", "num_heads", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "\n", "if", "self", ".", "sr_ratio", ">", "1", ":", "\n", "            ", "x_", "=", "x", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "[", "B", ",", "C", ",", "H", ",", "W", "]", ")", "\n", "x_", "=", "self", ".", "sr", "(", "x_", ")", ".", "reshape", "(", "[", "B", ",", "C", ",", "-", "1", "]", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "x_", "=", "self", ".", "norm", "(", "x_", ")", "\n", "kv", "=", "self", ".", "kv", "(", "x_", ")", ".", "reshape", "(", "\n", "[", "B", ",", "-", "1", ",", "2", ",", "self", ".", "num_heads", ",", "\n", "C", "//", "self", ".", "num_heads", "]", ")", ".", "transpose", "(", "[", "2", ",", "0", ",", "3", ",", "1", ",", "4", "]", ")", "\n", "", "else", ":", "\n", "            ", "kv", "=", "self", ".", "kv", "(", "x", ")", ".", "reshape", "(", "\n", "[", "B", ",", "-", "1", ",", "2", ",", "self", ".", "num_heads", ",", "\n", "C", "//", "self", ".", "num_heads", "]", ")", ".", "transpose", "(", "[", "2", ",", "0", ",", "3", ",", "1", ",", "4", "]", ")", "\n", "", "k", ",", "v", "=", "kv", "[", "0", "]", ",", "kv", "[", "1", "]", "\n", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", ")", "*", "self", ".", "scale", "\n", "attn", "=", "F", ".", "softmax", "(", "attn", ",", "axis", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", ".", "reshape", "(", "[", "B", ",", "N", ",", "C", "]", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.Block.__init__": [[150, 182], ["paddle.Layer.__init__", "norm_layer", "mix_transformer.Attention", "norm_layer", "int", "mix_transformer.Mlp", "mix_transformer.Block.apply", "DropPath", "Identity"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.apply"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "num_heads", ",", "\n", "mlp_ratio", "=", "4.", ",", "\n", "qkv_bias", "=", "False", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop", "=", "0.", ",", "\n", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "sr_ratio", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention", "(", "\n", "dim", ",", "\n", "num_heads", "=", "num_heads", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "attn_drop", "=", "attn_drop", ",", "\n", "proj_drop", "=", "drop", ",", "\n", "sr_ratio", "=", "sr_ratio", ")", "\n", "# NOTE: drop path for stochastic depth, we shall see if this is better than dropout here", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp", "(", "in_features", "=", "dim", ",", "\n", "hidden_features", "=", "mlp_hidden_dim", ",", "\n", "act_layer", "=", "act_layer", ",", "\n", "drop", "=", "drop", ")", "\n", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.Block._init_weights": [[183, 197], ["isinstance", "trunc_normal_", "isinstance", "isinstance", "zeros_", "zeros_", "ones_", "isinstance", "paddle.Normal", "paddle.Normal", "paddle.Normal", "paddle.Normal", "zeros_", "math.sqrt"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "zeros_", "(", "m", ".", "bias", ")", "\n", "ones_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2D", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "_kernel_size", "[", "0", "]", "*", "m", ".", "_kernel_size", "[", "1", "]", "*", "m", ".", "_out_channels", "\n", "fan_out", "//=", "m", ".", "_groups", "\n", "paddle_init", ".", "Normal", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.Block.forward": [[198, 203], ["mix_transformer.Block.drop_path", "mix_transformer.Block.drop_path", "mix_transformer.Block.attn", "mix_transformer.Block.mlp", "mix_transformer.Block.norm1", "mix_transformer.Block.norm2"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.drop_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.drop_path"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ",", "H", ",", "W", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ",", "H", ",", "W", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.OverlapPatchEmbed.__init__": [[209, 233], ["paddle.Layer.__init__", "to_2tuple", "to_2tuple", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "paddle.LayerNorm", "mix_transformer.OverlapPatchEmbed.apply"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.to_2tuple", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.to_2tuple", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.apply"], ["def", "__init__", "(", "self", ",", "\n", "img_size", "=", "224", ",", "\n", "patch_size", "=", "7", ",", "\n", "stride", "=", "4", ",", "\n", "in_chans", "=", "3", ",", "\n", "embed_dim", "=", "768", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "img_size", "=", "to_2tuple", "(", "img_size", ")", "\n", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "H", ",", "self", ".", "W", "=", "img_size", "[", "0", "]", "//", "patch_size", "[", "0", "]", ",", "img_size", "[", "\n", "1", "]", "//", "patch_size", "[", "1", "]", "\n", "self", ".", "num_patches", "=", "self", ".", "H", "*", "self", ".", "W", "\n", "self", ".", "proj", "=", "nn", ".", "Conv2D", "(", "\n", "in_chans", ",", "\n", "embed_dim", ",", "\n", "kernel_size", "=", "patch_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "patch_size", "[", "0", "]", "//", "2", ",", "patch_size", "[", "1", "]", "//", "2", ")", ")", "\n", "self", ".", "norm", "=", "nn", ".", "LayerNorm", "(", "embed_dim", ")", "\n", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.OverlapPatchEmbed._init_weights": [[234, 248], ["isinstance", "trunc_normal_", "isinstance", "isinstance", "zeros_", "zeros_", "ones_", "isinstance", "paddle.Normal", "paddle.Normal", "paddle.Normal", "paddle.Normal", "zeros_", "math.sqrt"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "zeros_", "(", "m", ".", "bias", ")", "\n", "ones_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2D", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "_kernel_size", "[", "0", "]", "*", "m", ".", "_kernel_size", "[", "1", "]", "*", "m", ".", "_out_channels", "\n", "fan_out", "//=", "m", ".", "_groups", "\n", "paddle_init", ".", "Normal", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.OverlapPatchEmbed.forward": [[249, 257], ["mix_transformer.OverlapPatchEmbed.proj", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "mix_transformer.OverlapPatchEmbed.flatten().transpose", "mix_transformer.OverlapPatchEmbed.norm", "mix_transformer.OverlapPatchEmbed.flatten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "H", ",", "W", "=", "x_shape", "[", "2", "]", ",", "x_shape", "[", "3", "]", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "\n", "return", "x", ",", "H", ",", "W", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer.__init__": [[260, 378], ["paddle.Layer.__init__", "mix_transformer.OverlapPatchEmbed", "mix_transformer.OverlapPatchEmbed", "mix_transformer.OverlapPatchEmbed", "mix_transformer.OverlapPatchEmbed", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "norm_layer", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "norm_layer", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "norm_layer", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "norm_layer", "mix_transformer.MixVisionTransformer.init_weight", "x.numpy", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "mix_transformer.Block", "mix_transformer.Block", "mix_transformer.Block", "mix_transformer.Block", "sum", "range", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["    ", "def", "__init__", "(", "self", ",", "\n", "img_size", "=", "224", ",", "\n", "patch_size", "=", "16", ",", "\n", "in_chans", "=", "3", ",", "\n", "num_classes", "=", "1000", ",", "\n", "embed_dims", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "num_heads", "=", "[", "1", ",", "2", ",", "4", ",", "8", "]", ",", "\n", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "False", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop_rate", "=", "0.", ",", "\n", "attn_drop_rate", "=", "0.", ",", "\n", "drop_path_rate", "=", "0.", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "depths", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "depths", "=", "depths", "\n", "self", ".", "feat_channels", "=", "embed_dims", "[", ":", "]", "\n", "\n", "# patch_embed", "\n", "self", ".", "patch_embed1", "=", "OverlapPatchEmbed", "(", "\n", "img_size", "=", "img_size", ",", "\n", "patch_size", "=", "7", ",", "\n", "stride", "=", "4", ",", "\n", "in_chans", "=", "in_chans", ",", "\n", "embed_dim", "=", "embed_dims", "[", "0", "]", ")", "\n", "self", ".", "patch_embed2", "=", "OverlapPatchEmbed", "(", "\n", "img_size", "=", "img_size", "//", "4", ",", "\n", "patch_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "in_chans", "=", "embed_dims", "[", "0", "]", ",", "\n", "embed_dim", "=", "embed_dims", "[", "1", "]", ")", "\n", "self", ".", "patch_embed3", "=", "OverlapPatchEmbed", "(", "\n", "img_size", "=", "img_size", "//", "8", ",", "\n", "patch_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "in_chans", "=", "embed_dims", "[", "1", "]", ",", "\n", "embed_dim", "=", "embed_dims", "[", "2", "]", ")", "\n", "self", ".", "patch_embed4", "=", "OverlapPatchEmbed", "(", "\n", "img_size", "=", "img_size", "//", "16", ",", "\n", "patch_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "in_chans", "=", "embed_dims", "[", "2", "]", ",", "\n", "embed_dim", "=", "embed_dims", "[", "3", "]", ")", "\n", "\n", "# transformer encoder", "\n", "dpr", "=", "[", "\n", "x", ".", "numpy", "(", ")", "for", "x", "in", "paddle", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "sum", "(", "depths", ")", ")", "\n", "]", "# stochastic depth decay rule", "\n", "cur", "=", "0", "\n", "self", ".", "block1", "=", "nn", ".", "LayerList", "(", "[", "\n", "Block", "(", "\n", "dim", "=", "embed_dims", "[", "0", "]", ",", "\n", "num_heads", "=", "num_heads", "[", "0", "]", ",", "\n", "mlp_ratio", "=", "mlp_ratios", "[", "0", "]", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "cur", "+", "i", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "sr_ratio", "=", "sr_ratios", "[", "0", "]", ")", "for", "i", "in", "range", "(", "depths", "[", "0", "]", ")", "\n", "]", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "embed_dims", "[", "0", "]", ")", "\n", "\n", "cur", "+=", "depths", "[", "0", "]", "\n", "self", ".", "block2", "=", "nn", ".", "LayerList", "(", "[", "\n", "Block", "(", "\n", "dim", "=", "embed_dims", "[", "1", "]", ",", "\n", "num_heads", "=", "num_heads", "[", "1", "]", ",", "\n", "mlp_ratio", "=", "mlp_ratios", "[", "1", "]", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "cur", "+", "i", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "sr_ratio", "=", "sr_ratios", "[", "1", "]", ")", "for", "i", "in", "range", "(", "depths", "[", "1", "]", ")", "\n", "]", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "embed_dims", "[", "1", "]", ")", "\n", "\n", "cur", "+=", "depths", "[", "1", "]", "\n", "self", ".", "block3", "=", "nn", ".", "LayerList", "(", "[", "\n", "Block", "(", "\n", "dim", "=", "embed_dims", "[", "2", "]", ",", "\n", "num_heads", "=", "num_heads", "[", "2", "]", ",", "\n", "mlp_ratio", "=", "mlp_ratios", "[", "2", "]", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "cur", "+", "i", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "sr_ratio", "=", "sr_ratios", "[", "2", "]", ")", "for", "i", "in", "range", "(", "depths", "[", "2", "]", ")", "\n", "]", ")", "\n", "self", ".", "norm3", "=", "norm_layer", "(", "embed_dims", "[", "2", "]", ")", "\n", "\n", "cur", "+=", "depths", "[", "2", "]", "\n", "self", ".", "block4", "=", "nn", ".", "LayerList", "(", "[", "\n", "Block", "(", "\n", "dim", "=", "embed_dims", "[", "3", "]", ",", "\n", "num_heads", "=", "num_heads", "[", "3", "]", ",", "\n", "mlp_ratio", "=", "mlp_ratios", "[", "3", "]", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "cur", "+", "i", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "sr_ratio", "=", "sr_ratios", "[", "3", "]", ")", "for", "i", "in", "range", "(", "depths", "[", "3", "]", ")", "\n", "]", ")", "\n", "self", ".", "norm4", "=", "norm_layer", "(", "embed_dims", "[", "3", "]", ")", "\n", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer.init_weight": [[379, 384], ["paddleseg.utils.utils.load_pretrained_model", "mix_transformer.MixVisionTransformer.apply"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.apply"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer._init_weights": [[385, 399], ["isinstance", "trunc_normal_", "isinstance", "isinstance", "zeros_", "zeros_", "ones_", "isinstance", "paddle.Normal", "paddle.Normal", "paddle.Normal", "paddle.Normal", "zeros_", "math.sqrt"], "methods", ["None"], ["", "", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "zeros_", "(", "m", ".", "bias", ")", "\n", "ones_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2D", ")", ":", "\n", "            ", "fan_out", "=", "m", ".", "_kernel_size", "[", "0", "]", "*", "m", ".", "_kernel_size", "[", "1", "]", "*", "m", ".", "_out_channels", "\n", "fan_out", "//=", "m", ".", "_groups", "\n", "paddle_init", ".", "Normal", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "fan_out", ")", ")", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer.reset_drop_path": [[400, 420], ["range", "range", "range", "range", "x.item", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "paddle.linspace", "sum"], "methods", ["None"], ["", "", "", "def", "reset_drop_path", "(", "self", ",", "drop_path_rate", ")", ":", "\n", "        ", "dpr", "=", "[", "\n", "x", ".", "item", "(", ")", "\n", "for", "x", "in", "paddle", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "sum", "(", "self", ".", "depths", ")", ")", "\n", "]", "\n", "cur", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "depths", "[", "0", "]", ")", ":", "\n", "            ", "self", ".", "block1", "[", "i", "]", ".", "drop_path", ".", "drop_prob", "=", "dpr", "[", "cur", "+", "i", "]", "\n", "\n", "", "cur", "+=", "self", ".", "depths", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "depths", "[", "1", "]", ")", ":", "\n", "            ", "self", ".", "block2", "[", "i", "]", ".", "drop_path", ".", "drop_prob", "=", "dpr", "[", "cur", "+", "i", "]", "\n", "\n", "", "cur", "+=", "self", ".", "depths", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "depths", "[", "2", "]", ")", ":", "\n", "            ", "self", ".", "block3", "[", "i", "]", ".", "drop_path", ".", "drop_prob", "=", "dpr", "[", "cur", "+", "i", "]", "\n", "\n", "", "cur", "+=", "self", ".", "depths", "[", "2", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "depths", "[", "3", "]", ")", ":", "\n", "            ", "self", ".", "block4", "[", "i", "]", ".", "drop_path", ".", "drop_prob", "=", "dpr", "[", "cur", "+", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer.freeze_patch_emb": [[421, 423], ["None"], "methods", ["None"], ["", "", "def", "freeze_patch_emb", "(", "self", ")", ":", "\n", "        ", "self", ".", "patch_embed1", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer.get_classifier": [[424, 426], ["None"], "methods", ["None"], ["", "def", "get_classifier", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "head", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer.reset_classifier": [[427, 431], ["paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Identity", "paddle.Identity", "paddle.Identity", "paddle.Identity"], "methods", ["None"], ["", "def", "reset_classifier", "(", "self", ",", "num_classes", ",", "global_pool", "=", "''", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "\n", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer.forward_features": [[432, 470], ["mix_transformer.MixVisionTransformer.patch_embed1", "enumerate", "mix_transformer.MixVisionTransformer.norm1", "blk.reshape().transpose", "outs.append", "mix_transformer.MixVisionTransformer.patch_embed2", "enumerate", "mix_transformer.MixVisionTransformer.norm2", "blk.reshape().transpose", "outs.append", "mix_transformer.MixVisionTransformer.patch_embed3", "enumerate", "mix_transformer.MixVisionTransformer.norm3", "blk.reshape().transpose", "outs.append", "mix_transformer.MixVisionTransformer.patch_embed4", "enumerate", "mix_transformer.MixVisionTransformer.norm4", "blk.reshape().transpose", "outs.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "blk", "blk", "blk", "blk", "blk.reshape", "blk.reshape", "blk.reshape", "blk.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward_features", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", "=", "paddle", ".", "shape", "(", "x", ")", "[", "0", "]", "\n", "outs", "=", "[", "]", "\n", "\n", "# stage 1", "\n", "x", ",", "H", ",", "W", "=", "self", ".", "patch_embed1", "(", "x", ")", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "block1", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ",", "H", ",", "W", ")", "\n", "\n", "", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "[", "B", ",", "H", ",", "W", ",", "self", ".", "feat_channels", "[", "0", "]", "]", ")", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "# stage 2", "\n", "x", ",", "H", ",", "W", "=", "self", ".", "patch_embed2", "(", "x", ")", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "block2", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ",", "H", ",", "W", ")", "\n", "", "x", "=", "self", ".", "norm2", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "[", "B", ",", "H", ",", "W", ",", "self", ".", "feat_channels", "[", "1", "]", "]", ")", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "# stage 3", "\n", "x", ",", "H", ",", "W", "=", "self", ".", "patch_embed3", "(", "x", ")", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "block3", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ",", "H", ",", "W", ")", "\n", "", "x", "=", "self", ".", "norm3", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "[", "B", ",", "H", ",", "W", ",", "self", ".", "feat_channels", "[", "2", "]", "]", ")", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "# stage 4", "\n", "x", ",", "H", ",", "W", "=", "self", ".", "patch_embed4", "(", "x", ")", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "block4", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ",", "H", ",", "W", ")", "\n", "", "x", "=", "self", ".", "norm4", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "[", "B", ",", "H", ",", "W", ",", "self", ".", "feat_channels", "[", "3", "]", "]", ")", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer.forward": [[471, 476], ["mix_transformer.MixVisionTransformer.forward_features"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer.forward_features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "forward_features", "(", "x", ")", "\n", "# x = self.head(x)", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.DWConv.__init__": [[479, 483], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", "=", "768", ")", ":", "\n", "        ", "super", "(", "DWConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "dwconv", "=", "nn", ".", "Conv2D", "(", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "True", ",", "groups", "=", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.DWConv.forward": [[484, 492], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "x.flatten().transpose.flatten().transpose.transpose().reshape", "mix_transformer.DWConv.dwconv", "x.flatten().transpose.flatten().transpose.flatten().transpose", "x.flatten().transpose.flatten().transpose.transpose", "x.flatten().transpose.flatten().transpose.flatten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "B", ",", "N", "=", "x_shape", "[", "0", "]", ",", "x_shape", "[", "1", "]", "\n", "x", "=", "x", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", ".", "reshape", "(", "[", "B", ",", "self", ".", "dim", ",", "H", ",", "W", "]", ")", "\n", "x", "=", "self", ".", "dwconv", "(", "x", ")", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer_B0": [[494, 509], ["mix_transformer.MixVisionTransformer", "functools.partial"], "function", ["None"], ["", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "MixVisionTransformer_B0", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "MixVisionTransformer", "(", "\n", "patch_size", "=", "4", ",", "\n", "embed_dims", "=", "[", "32", ",", "64", ",", "160", ",", "256", "]", ",", "\n", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "\n", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "\n", "nn", ".", "LayerNorm", ",", "epsilon", "=", "1e-6", ")", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "\n", "drop_path_rate", "=", "0.1", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer_B1": [[511, 526], ["mix_transformer.MixVisionTransformer", "functools.partial"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "MixVisionTransformer_B1", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "MixVisionTransformer", "(", "\n", "patch_size", "=", "4", ",", "\n", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "\n", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "\n", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "\n", "nn", ".", "LayerNorm", ",", "epsilon", "=", "1e-6", ")", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "\n", "drop_path_rate", "=", "0.1", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer_B2": [[528, 543], ["mix_transformer.MixVisionTransformer", "functools.partial"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "MixVisionTransformer_B2", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "MixVisionTransformer", "(", "\n", "patch_size", "=", "4", ",", "\n", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "\n", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "\n", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "\n", "nn", ".", "LayerNorm", ",", "epsilon", "=", "1e-6", ")", ",", "\n", "depths", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "\n", "drop_path_rate", "=", "0.1", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer_B3": [[545, 560], ["mix_transformer.MixVisionTransformer", "functools.partial"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "MixVisionTransformer_B3", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "MixVisionTransformer", "(", "\n", "patch_size", "=", "4", ",", "\n", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "\n", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "\n", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "\n", "nn", ".", "LayerNorm", ",", "epsilon", "=", "1e-6", ")", ",", "\n", "depths", "=", "[", "3", ",", "4", ",", "18", ",", "3", "]", ",", "\n", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "\n", "drop_path_rate", "=", "0.1", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer_B4": [[562, 577], ["mix_transformer.MixVisionTransformer", "functools.partial"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "MixVisionTransformer_B4", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "MixVisionTransformer", "(", "\n", "patch_size", "=", "4", ",", "\n", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "\n", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "\n", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "\n", "nn", ".", "LayerNorm", ",", "epsilon", "=", "1e-6", ")", ",", "\n", "depths", "=", "[", "3", ",", "8", ",", "27", ",", "3", "]", ",", "\n", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "\n", "drop_path_rate", "=", "0.1", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.mix_transformer.MixVisionTransformer_B5": [[579, 594], ["mix_transformer.MixVisionTransformer", "functools.partial"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "MixVisionTransformer_B5", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "MixVisionTransformer", "(", "\n", "patch_size", "=", "4", ",", "\n", "embed_dims", "=", "[", "64", ",", "128", ",", "320", ",", "512", "]", ",", "\n", "num_heads", "=", "[", "1", ",", "2", ",", "5", ",", "8", "]", ",", "\n", "mlp_ratios", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "\n", "nn", ".", "LayerNorm", ",", "epsilon", "=", "1e-6", ")", ",", "\n", "depths", "=", "[", "3", ",", "6", ",", "40", ",", "3", "]", ",", "\n", "sr_ratios", "=", "[", "8", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "drop_rate", "=", "0.0", ",", "\n", "drop_path_rate", "=", "0.1", ",", "\n", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.Mlp.__init__": [[29, 42], ["paddle.Layer.__init__", "paddle.Linear", "paddle.Linear", "paddle.Linear", "act_layer", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "hidden_features", "=", "None", ",", "\n", "out_features", "=", "None", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.Mlp.forward": [[43, 50], ["vision_transformer.Mlp.fc1", "vision_transformer.Mlp.act", "vision_transformer.Mlp.drop", "vision_transformer.Mlp.fc2", "vision_transformer.Mlp.drop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.Attention.__init__": [[53, 69], ["paddle.Layer.__init__", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "num_heads", "=", "8", ",", "\n", "qkv_bias", "=", "False", ",", "\n", "qk_scale", "=", "None", ",", "\n", "attn_drop", "=", "0.", ",", "\n", "proj_drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias_attr", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.Attention.forward": [[70, 85], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "vision_transformer.Attention.qkv().reshape().transpose", "paddle.functional.softmax", "paddle.functional.softmax", "paddle.functional.softmax", "vision_transformer.Attention.attn_drop", "vision_transformer.Attention.matmul().transpose().reshape", "vision_transformer.Attention.proj", "vision_transformer.Attention.proj_drop", "q.matmul", "vision_transformer.Attention.qkv().reshape", "k.transpose", "vision_transformer.Attention.matmul().transpose", "vision_transformer.Attention.qkv", "vision_transformer.Attention.matmul"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "\n", "N", ",", "C", "=", "x_shape", "[", "1", "]", ",", "x_shape", "[", "2", "]", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "(", "-", "1", ",", "N", ",", "3", ",", "self", ".", "num_heads", ",", "C", "//", "\n", "self", ".", "num_heads", ")", ")", ".", "transpose", "(", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "\n", "\n", "attn", "=", "(", "q", ".", "matmul", "(", "k", ".", "transpose", "(", "(", "0", ",", "1", ",", "3", ",", "2", ")", ")", ")", ")", "*", "self", ".", "scale", "\n", "attn", "=", "nn", ".", "functional", ".", "softmax", "(", "attn", ",", "axis", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", ".", "matmul", "(", "v", ")", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "N", ",", "C", ")", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.Block.__init__": [[88, 117], ["paddle.Layer.__init__", "vision_transformer.Attention", "int", "vision_transformer.Mlp", "eval", "paddleseg.models.backbones.transformer_utils.DropPath", "paddleseg.models.backbones.transformer_utils.Identity", "eval"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "num_heads", ",", "\n", "mlp_ratio", "=", "4.", ",", "\n", "qkv_bias", "=", "False", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop", "=", "0.", ",", "\n", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "norm_layer", "=", "'nn.LayerNorm'", ",", "\n", "epsilon", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "eval", "(", "norm_layer", ")", "(", "dim", ",", "epsilon", "=", "epsilon", ")", "\n", "self", ".", "attn", "=", "Attention", "(", "\n", "dim", ",", "\n", "num_heads", "=", "num_heads", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "attn_drop", "=", "attn_drop", ",", "\n", "proj_drop", "=", "drop", ")", "\n", "# NOTE: drop path for stochastic depth, we shall see if this is better than dropout here", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "eval", "(", "norm_layer", ")", "(", "dim", ",", "epsilon", "=", "epsilon", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp", "(", "in_features", "=", "dim", ",", "\n", "hidden_features", "=", "mlp_hidden_dim", ",", "\n", "act_layer", "=", "act_layer", ",", "\n", "drop", "=", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.Block.forward": [[118, 122], ["vision_transformer.Block.drop_path", "vision_transformer.Block.drop_path", "vision_transformer.Block.attn", "vision_transformer.Block.mlp", "vision_transformer.Block.norm1", "vision_transformer.Block.norm2"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.drop_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.drop_path"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.PatchEmbed.__init__": [[128, 135], ["paddle.Layer.__init__", "paddleseg.models.backbones.transformer_utils.to_2tuple", "paddleseg.models.backbones.transformer_utils.to_2tuple", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.to_2tuple", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.transformer_utils.to_2tuple"], ["def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "in_chans", "=", "3", ",", "embed_dim", "=", "768", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "img_size", "=", "to_2tuple", "(", "img_size", ")", "\n", "self", ".", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "\n", "self", ".", "proj", "=", "nn", ".", "Conv2D", "(", "\n", "in_chans", ",", "embed_dim", ",", "kernel_size", "=", "patch_size", ",", "stride", "=", "patch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.PatchEmbed.num_patches_in_h": [[136, 139], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_patches_in_h", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "img_size", "[", "1", "]", "//", "self", ".", "patch_size", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.PatchEmbed.num_patches_in_w": [[140, 143], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_patches_in_w", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "img_size", "[", "0", "]", "//", "self", ".", "patch_size", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.PatchEmbed.forward": [[144, 147], ["vision_transformer.PatchEmbed.proj"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.VisionTransformer.__init__": [[154, 213], ["paddle.Layer.__init__", "vision_transformer.PatchEmbed", "vision_transformer.VisionTransformer.create_parameter", "vision_transformer.VisionTransformer.create_parameter", "paddle.Dropout", "paddle.Dropout", "paddle.Dropout", "numpy.linspace", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "vision_transformer.VisionTransformer.init_weight", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.TruncatedNormal", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "vision_transformer.Block", "eval", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "img_size", "=", "224", ",", "\n", "patch_size", "=", "16", ",", "\n", "in_chans", "=", "3", ",", "\n", "embed_dim", "=", "768", ",", "\n", "depth", "=", "12", ",", "\n", "num_heads", "=", "12", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "qkv_bias", "=", "False", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop_rate", "=", "0.", ",", "\n", "attn_drop_rate", "=", "0.", ",", "\n", "drop_path_rate", "=", "0.", ",", "\n", "norm_layer", "=", "'nn.LayerNorm'", ",", "\n", "epsilon", "=", "1e-5", ",", "\n", "final_norm", "=", "False", ",", "\n", "pretrained", "=", "None", ",", "\n", "**", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "\n", "self", ".", "patch_embed", "=", "PatchEmbed", "(", "\n", "img_size", "=", "img_size", ",", "\n", "patch_size", "=", "patch_size", ",", "\n", "in_chans", "=", "in_chans", ",", "\n", "embed_dim", "=", "embed_dim", ")", "\n", "self", ".", "pos_w", "=", "self", ".", "patch_embed", ".", "num_patches_in_w", "\n", "self", ".", "pos_h", "=", "self", ".", "patch_embed", ".", "num_patches_in_h", "\n", "\n", "self", ".", "pos_embed", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "1", ",", "self", ".", "pos_w", "*", "self", ".", "pos_h", "+", "1", ",", "embed_dim", ")", ",", "\n", "default_initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "TruncatedNormal", "(", "std", "=", ".02", ")", ")", "\n", "self", ".", "cls_token", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "(", "1", ",", "1", ",", "embed_dim", ")", ",", "\n", "default_initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "Constant", "(", "value", "=", "0.", ")", ")", "\n", "self", ".", "pos_drop", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_rate", ")", "\n", "\n", "dpr", "=", "np", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "depth", ")", "\n", "\n", "self", ".", "blocks", "=", "nn", ".", "LayerList", "(", "[", "\n", "Block", "(", "\n", "dim", "=", "embed_dim", ",", "\n", "num_heads", "=", "num_heads", ",", "\n", "mlp_ratio", "=", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "i", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "epsilon", "=", "epsilon", ")", "for", "i", "in", "range", "(", "depth", ")", "\n", "]", ")", "\n", "\n", "self", ".", "final_norm", "=", "final_norm", "\n", "if", "self", ".", "final_norm", ":", "\n", "            ", "self", ".", "norm", "=", "eval", "(", "norm_layer", ")", "(", "embed_dim", ",", "epsilon", "=", "epsilon", ")", "\n", "", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.VisionTransformer.init_weight": [[214, 236], ["paddleseg.utils.utils.load_pretrained_model", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "vision_transformer.VisionTransformer.state_dict", "os.path.exists", "paddleseg.utils.utils.download_pretrained_model", "paddle.load.keys", "paddle.load.keys", "paddle.load.keys", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "int", "vision_transformer.VisionTransformer.resize_pos_embed", "vision_transformer.VisionTransformer.set_dict", "paddleseg.utils.logger.info", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.download_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.VisionTransformer.resize_pos_embed", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n", "# load and resize pos_embed", "\n", "model_path", "=", "self", ".", "pretrained", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_path", ")", ":", "\n", "            ", "model_path", "=", "utils", ".", "download_pretrained_model", "(", "model_path", ")", "\n", "\n", "", "load_state_dict", "=", "paddle", ".", "load", "(", "model_path", ")", "\n", "model_state_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "pos_embed_name", "=", "\"pos_embed\"", "\n", "if", "pos_embed_name", "in", "load_state_dict", ".", "keys", "(", ")", ":", "\n", "            ", "load_pos_embed", "=", "paddle", ".", "to_tensor", "(", "\n", "load_state_dict", "[", "pos_embed_name", "]", ",", "dtype", "=", "\"float32\"", ")", "\n", "if", "self", ".", "pos_embed", ".", "shape", "!=", "load_pos_embed", ".", "shape", ":", "\n", "                ", "pos_size", "=", "int", "(", "math", ".", "sqrt", "(", "load_pos_embed", ".", "shape", "[", "1", "]", "-", "1", ")", ")", "\n", "model_state_dict", "[", "pos_embed_name", "]", "=", "self", ".", "resize_pos_embed", "(", "\n", "load_pos_embed", ",", "(", "pos_size", ",", "pos_size", ")", ",", "\n", "(", "self", ".", "pos_h", ",", "self", ".", "pos_w", ")", ")", "\n", "self", ".", "set_dict", "(", "model_state_dict", ")", "\n", "logger", ".", "info", "(", "\"Load pos_embed and resize it from {} to {} .\"", ".", "\n", "format", "(", "load_pos_embed", ".", "shape", ",", "self", ".", "pos_embed", ".", "shape", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.VisionTransformer.resize_pos_embed": [[237, 258], ["paddle.concat.transpose", "paddle.concat.transpose", "paddle.concat.transpose", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat.flatten().transpose", "paddle.concat.flatten().transpose", "paddle.concat.flatten().transpose", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat.flatten", "paddle.concat.flatten", "paddle.concat.flatten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "", "", "def", "resize_pos_embed", "(", "self", ",", "pos_embed", ",", "old_hw", ",", "new_hw", ")", ":", "\n", "        ", "\"\"\"\n        Resize pos_embed weight.\n        Args:\n            pos_embed (Tensor): the pos_embed weight\n            old_hw (list[int]): the height and width of old pos_embed\n            new_hw (list[int]): the height and width of new pos_embed\n        Returns:\n            Tensor: the resized pos_embed weight\n        \"\"\"", "\n", "cls_pos_embed", "=", "pos_embed", "[", ":", ",", ":", "1", ",", ":", "]", "\n", "pos_embed", "=", "pos_embed", "[", ":", ",", "1", ":", ",", ":", "]", "\n", "\n", "pos_embed", "=", "pos_embed", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "pos_embed", "=", "pos_embed", ".", "reshape", "(", "[", "1", ",", "-", "1", ",", "old_hw", "[", "0", "]", ",", "old_hw", "[", "1", "]", "]", ")", "\n", "pos_embed", "=", "F", ".", "interpolate", "(", "\n", "pos_embed", ",", "new_hw", ",", "mode", "=", "'bicubic'", ",", "align_corners", "=", "False", ")", "\n", "pos_embed", "=", "pos_embed", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "pos_embed", "=", "paddle", ".", "concat", "(", "[", "cls_pos_embed", ",", "pos_embed", "]", ",", "axis", "=", "1", ")", "\n", "\n", "return", "pos_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.VisionTransformer.forward": [[259, 282], ["vision_transformer.VisionTransformer.patch_embed", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "vision_transformer.VisionTransformer.cls_token.expand", "vision_transformer.VisionTransformer.flatten().transpose", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "vision_transformer.VisionTransformer.pos_drop", "enumerate", "blk", "res.append", "vision_transformer.VisionTransformer.flatten", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "vision_transformer.VisionTransformer.resize_pos_embed", "vision_transformer.VisionTransformer.norm", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.VisionTransformer.resize_pos_embed"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "x_shape", "=", "paddle", ".", "shape", "(", "x", ")", "# b * c * h * w", "\n", "\n", "cls_tokens", "=", "self", ".", "cls_token", ".", "expand", "(", "(", "x_shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "# b * hw * c", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "cls_tokens", ",", "x", "]", ",", "axis", "=", "1", ")", "\n", "\n", "if", "paddle", ".", "shape", "(", "x", ")", "[", "1", "]", "==", "self", ".", "pos_embed", ".", "shape", "[", "1", "]", ":", "\n", "            ", "x", "=", "x", "+", "self", ".", "pos_embed", "\n", "", "else", ":", "\n", "            ", "x", "=", "x", "+", "self", ".", "resize_pos_embed", "(", "self", ".", "pos_embed", ",", "\n", "(", "self", ".", "pos_h", ",", "self", ".", "pos_w", ")", ",", "x_shape", "[", "2", ":", "]", ")", "\n", "", "x", "=", "self", ".", "pos_drop", "(", "x", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "idx", ",", "blk", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ")", "\n", "if", "self", ".", "final_norm", "and", "idx", "==", "len", "(", "self", ".", "blocks", ")", "-", "1", ":", "\n", "                ", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "", "res", ".", "append", "(", "x", "[", ":", ",", "1", ":", ",", ":", "]", ")", "\n", "\n", "", "return", "res", ",", "x_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.ViT_small_patch16_224": [[284, 295], ["vision_transformer.VisionTransformer"], "function", ["None"], ["", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ViT_small_patch16_224", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "768", ",", "\n", "depth", "=", "8", ",", "\n", "num_heads", "=", "8", ",", "\n", "mlp_ratio", "=", "3", ",", "\n", "qk_scale", "=", "768", "**", "-", "0.5", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.ViT_base_patch16_224": [[297, 309], ["vision_transformer.VisionTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ViT_base_patch16_224", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "768", ",", "\n", "depth", "=", "12", ",", "\n", "num_heads", "=", "12", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "epsilon", "=", "1e-6", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.ViT_base_patch16_384": [[311, 324], ["vision_transformer.VisionTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ViT_base_patch16_384", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "img_size", "=", "384", ",", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "768", ",", "\n", "depth", "=", "12", ",", "\n", "num_heads", "=", "12", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "epsilon", "=", "1e-6", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.ViT_base_patch32_384": [[326, 339], ["vision_transformer.VisionTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ViT_base_patch32_384", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "img_size", "=", "384", ",", "\n", "patch_size", "=", "32", ",", "\n", "embed_dim", "=", "768", ",", "\n", "depth", "=", "12", ",", "\n", "num_heads", "=", "12", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "epsilon", "=", "1e-6", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.ViT_large_patch16_224": [[341, 353], ["vision_transformer.VisionTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ViT_large_patch16_224", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "1024", ",", "\n", "depth", "=", "24", ",", "\n", "num_heads", "=", "16", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "epsilon", "=", "1e-6", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.ViT_large_patch16_384": [[355, 368], ["vision_transformer.VisionTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ViT_large_patch16_384", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "img_size", "=", "384", ",", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "1024", ",", "\n", "depth", "=", "24", ",", "\n", "num_heads", "=", "16", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "epsilon", "=", "1e-6", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.ViT_large_patch32_384": [[370, 383], ["vision_transformer.VisionTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ViT_large_patch32_384", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "img_size", "=", "384", ",", "\n", "patch_size", "=", "32", ",", "\n", "embed_dim", "=", "1024", ",", "\n", "depth", "=", "24", ",", "\n", "num_heads", "=", "16", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "epsilon", "=", "1e-6", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.ViT_huge_patch16_224": [[385, 395], ["vision_transformer.VisionTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ViT_huge_patch16_224", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "1280", ",", "\n", "depth", "=", "32", ",", "\n", "num_heads", "=", "16", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.vision_transformer.ViT_huge_patch32_384": [[397, 408], ["vision_transformer.VisionTransformer"], "function", ["None"], ["", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ViT_huge_patch32_384", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "img_size", "=", "384", ",", "\n", "patch_size", "=", "32", ",", "\n", "embed_dim", "=", "1280", ",", "\n", "depth", "=", "32", ",", "\n", "num_heads", "=", "16", ",", "\n", "mlp_ratio", "=", "4", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.__init__": [[61, 158], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "hrnet_nv.Layer1", "hrnet_nv.TransitionLayer", "hrnet_nv.Stage", "hrnet_nv.TransitionLayer", "hrnet_nv.Stage", "hrnet_nv.TransitionLayer", "hrnet_nv.Stage", "hrnet_nv.HRNetNV.init_weight", "sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight"], ["def", "__init__", "(", "self", ",", "\n", "pretrained", "=", "None", ",", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "has_se", "=", "False", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "HRNetNV", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "stage1_num_modules", "=", "stage1_num_modules", "\n", "self", ".", "stage1_num_blocks", "=", "stage1_num_blocks", "\n", "self", ".", "stage1_num_channels", "=", "stage1_num_channels", "\n", "self", ".", "stage2_num_modules", "=", "stage2_num_modules", "\n", "self", ".", "stage2_num_blocks", "=", "stage2_num_blocks", "\n", "self", ".", "stage2_num_channels", "=", "stage2_num_channels", "\n", "self", ".", "stage3_num_modules", "=", "stage3_num_modules", "\n", "self", ".", "stage3_num_blocks", "=", "stage3_num_blocks", "\n", "self", ".", "stage3_num_channels", "=", "stage3_num_channels", "\n", "self", ".", "stage4_num_modules", "=", "stage4_num_modules", "\n", "self", ".", "stage4_num_blocks", "=", "stage4_num_blocks", "\n", "self", ".", "stage4_num_channels", "=", "stage4_num_channels", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "feat_channels", "=", "[", "sum", "(", "stage4_num_channels", ")", "]", "\n", "\n", "self", ".", "conv_layer1_1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "3", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv_layer1_2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "la1", "=", "Layer1", "(", "\n", "num_channels", "=", "64", ",", "\n", "num_blocks", "=", "self", ".", "stage1_num_blocks", "[", "0", "]", ",", "\n", "num_filters", "=", "self", ".", "stage1_num_channels", "[", "0", "]", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "\"layer2\"", ")", "\n", "\n", "self", ".", "tr1", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "[", "self", ".", "stage1_num_channels", "[", "0", "]", "*", "4", "]", ",", "\n", "out_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "name", "=", "\"tr1\"", ")", "\n", "\n", "self", ".", "st2", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage2_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage2_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage2_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st2\"", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "tr2", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "out_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "name", "=", "\"tr2\"", ")", "\n", "self", ".", "st3", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage3_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage3_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage3_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st3\"", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "tr3", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "out_channels", "=", "self", ".", "stage4_num_channels", ",", "\n", "name", "=", "\"tr3\"", ")", "\n", "self", ".", "st4", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage4_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage4_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage4_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage4_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st4\"", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "self", ".", "init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.forward": [[159, 184], ["hrnet_nv.HRNetNV.conv_layer1_1", "hrnet_nv.HRNetNV.conv_layer1_2", "hrnet_nv.HRNetNV.la1", "hrnet_nv.HRNetNV.tr1", "hrnet_nv.HRNetNV.st2", "hrnet_nv.HRNetNV.tr2", "hrnet_nv.HRNetNV.st3", "hrnet_nv.HRNetNV.tr3", "hrnet_nv.HRNetNV.st4", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv1", "=", "self", ".", "conv_layer1_1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv_layer1_2", "(", "conv1", ")", "\n", "\n", "la1", "=", "self", ".", "la1", "(", "conv2", ")", "\n", "\n", "tr1", "=", "self", ".", "tr1", "(", "[", "la1", "]", ")", "\n", "st2", "=", "self", ".", "st2", "(", "tr1", ")", "\n", "\n", "tr2", "=", "self", ".", "tr2", "(", "st2", ")", "\n", "st3", "=", "self", ".", "st3", "(", "tr2", ")", "\n", "\n", "tr3", "=", "self", ".", "tr3", "(", "st3", ")", "\n", "st4", "=", "self", ".", "st4", "(", "tr3", ")", "\n", "\n", "x0_h", ",", "x0_w", "=", "st4", "[", "0", "]", ".", "shape", "[", "2", ":", "]", "\n", "x1", "=", "F", ".", "interpolate", "(", "\n", "st4", "[", "1", "]", ",", "(", "x0_h", ",", "x0_w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x2", "=", "F", ".", "interpolate", "(", "\n", "st4", "[", "2", "]", ",", "(", "x0_h", ",", "x0_w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x3", "=", "F", ".", "interpolate", "(", "\n", "st4", "[", "3", "]", ",", "(", "x0_h", ",", "x0_w", ")", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNetNV.init_weight": [[185, 194], ["hrnet_nv.HRNetNV.sublayers", "isinstance", "paddleseg.utils.utils.load_pretrained_model", "paddleseg.cvlibs.param_init.normal_init", "isinstance", "paddleseg.cvlibs.param_init.constant_init", "paddleseg.cvlibs.param_init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_pretrained_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.normal_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.param_init.constant_init"], ["mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "st4", "[", "0", "]", ",", "x1", ",", "x2", ",", "x3", "]", ",", "axis", "=", "1", ")", "\n", "\n", "return", "[", "x", "]", "\n", "\n", "", "def", "init_weight", "(", "self", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "sublayers", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "layer", ",", "nn", ".", "Conv2D", ")", ":", "\n", "                ", "param_init", ".", "normal_init", "(", "layer", ".", "weight", ",", "std", "=", "0.001", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.Layer1.__init__": [[197, 218], ["paddle.Layer.__init__", "range", "hrnet_nv.Layer1.add_sublayer", "hrnet_nv.Layer1.bottleneck_block_list.append", "hrnet_nv.BottleneckBlock", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["param_init", ".", "constant_init", "(", "layer", ".", "bias", ",", "value", "=", "0.0", ")", "\n", "", "", "if", "self", ".", "pretrained", "is", "not", "None", ":", "\n", "            ", "utils", ".", "load_pretrained_model", "(", "self", ",", "self", ".", "pretrained", ")", "\n", "\n", "\n", "", "", "", "class", "Layer1", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "num_blocks", ",", "\n", "has_se", "=", "False", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Layer1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bottleneck_block_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "bottleneck_block", "=", "self", ".", "add_sublayer", "(", "\n", "\"bb_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "BottleneckBlock", "(", "\n", "num_channels", "=", "num_channels", "if", "i", "==", "0", "else", "num_filters", "*", "4", ",", "\n", "num_filters", "=", "num_filters", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.Layer1.forward": [[219, 224], ["block_func"], "methods", ["None"], ["has_se", "=", "has_se", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "True", "if", "i", "==", "0", "else", "False", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ")", ")", "\n", "self", ".", "bottleneck_block_list", ".", "append", "(", "bottleneck_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.TransitionLayer.__init__": [[227, 256], ["paddle.Layer.__init__", "len", "len", "range", "hrnet_nv.TransitionLayer.conv_bn_func_list.append", "hrnet_nv.TransitionLayer.add_sublayer", "hrnet_nv.TransitionLayer.add_sublayer", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["for", "block_func", "in", "self", ".", "bottleneck_block_list", ":", "\n", "            ", "conv", "=", "block_func", "(", "conv", ")", "\n", "", "return", "conv", "\n", "\n", "\n", "", "", "class", "TransitionLayer", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "TransitionLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_in", "=", "len", "(", "in_channels", ")", "\n", "num_out", "=", "len", "(", "out_channels", ")", "\n", "self", ".", "conv_bn_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_out", ")", ":", "\n", "            ", "residual", "=", "None", "\n", "if", "i", "<", "num_in", ":", "\n", "                ", "if", "in_channels", "[", "i", "]", "!=", "out_channels", "[", "i", "]", ":", "\n", "                    ", "residual", "=", "self", ".", "add_sublayer", "(", "\n", "\"transition_{}_layer_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "[", "i", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "residual", "=", "self", ".", "add_sublayer", "(", "\n", "\"transition_{}_layer_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "[", "-", "1", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.TransitionLayer.forward": [[257, 268], ["enumerate", "outs.append", "len", "outs.append", "outs.append", "conv_bn_func", "conv_bn_func"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "self", ".", "conv_bn_func_list", ".", "append", "(", "residual", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "for", "idx", ",", "conv_bn_func", "in", "enumerate", "(", "self", ".", "conv_bn_func_list", ")", ":", "\n", "            ", "if", "conv_bn_func", "is", "None", ":", "\n", "                ", "outs", ".", "append", "(", "x", "[", "idx", "]", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.Branches.__init__": [[271, 294], ["paddle.Layer.__init__", "range", "len", "hrnet_nv.Branches.basic_block_list.append", "range", "hrnet_nv.Branches.add_sublayer", "hrnet_nv.Branches.basic_block_list[].append", "hrnet_nv.BasicBlock", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "else", ":", "\n", "                    ", "outs", ".", "append", "(", "conv_bn_func", "(", "x", "[", "-", "1", "]", ")", ")", "\n", "", "", "", "return", "outs", "\n", "\n", "\n", "", "", "class", "Branches", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "num_blocks", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "has_se", "=", "False", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Branches", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "basic_block_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "out_channels", ")", ")", ":", "\n", "            ", "self", ".", "basic_block_list", ".", "append", "(", "[", "]", ")", "\n", "for", "j", "in", "range", "(", "num_blocks", "[", "i", "]", ")", ":", "\n", "                ", "in_ch", "=", "in_channels", "[", "i", "]", "if", "j", "==", "0", "else", "out_channels", "[", "i", "]", "\n", "basic_block_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"bb_{}_branch_layer_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ",", "j", "+", "1", ")", ",", "\n", "BasicBlock", "(", "\n", "num_channels", "=", "in_ch", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.Branches.forward": [[295, 303], ["enumerate", "outs.append", "basic_block_func"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["num_filters", "=", "out_channels", "[", "i", "]", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", "+", "'_branch_layer_'", "+", "str", "(", "i", "+", "1", ")", "+", "'_'", "+", "\n", "str", "(", "j", "+", "1", ")", ")", ")", "\n", "self", ".", "basic_block_list", "[", "i", "]", ".", "append", "(", "basic_block_func", ")", "\n", "\n", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "for", "idx", ",", "input", "in", "enumerate", "(", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.BottleneckBlock.__init__": [[306, 353], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.ConvBN", "hrnet_nv.SELayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["                ", "conv", "=", "basic_block_func", "(", "conv", ")", "\n", "", "outs", ".", "append", "(", "conv", ")", "\n", "", "return", "outs", "\n", "\n", "\n", "", "", "class", "BottleneckBlock", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "has_se", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "False", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "BottleneckBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv3", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "conv_down", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.BottleneckBlock.forward": [[354, 369], ["hrnet_nv.BottleneckBlock.conv1", "hrnet_nv.BottleneckBlock.conv2", "hrnet_nv.BottleneckBlock.conv3", "paddle.relu", "paddle.relu", "paddle.relu", "hrnet_nv.BottleneckBlock.conv_down", "hrnet_nv.BottleneckBlock.se"], "methods", ["None"], ["            ", "self", ".", "se", "=", "SELayer", "(", "\n", "num_channels", "=", "num_filters", "*", "4", ",", "\n", "num_filters", "=", "num_filters", "*", "4", ",", "\n", "reduction_ratio", "=", "16", ",", "\n", "name", "=", "name", "+", "'_fc'", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "conv3", "=", "self", ".", "conv3", "(", "conv2", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "residual", "=", "self", ".", "conv_down", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.BasicBlock.__init__": [[372, 412], ["paddle.Layer.__init__", "paddleseg.models.layers.ConvBNReLU", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.ConvBNReLU", "hrnet_nv.SELayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["", "y", "=", "conv3", "+", "residual", "\n", "y", "=", "F", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n", "\n", "", "", "class", "BasicBlock", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "stride", "=", "1", ",", "\n", "has_se", "=", "False", ",", "\n", "downsample", "=", "False", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "conv1", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv2", "=", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "conv_down", "=", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.BasicBlock.forward": [[413, 427], ["hrnet_nv.BasicBlock.conv1", "hrnet_nv.BasicBlock.conv2", "paddle.relu", "paddle.relu", "paddle.relu", "hrnet_nv.BasicBlock.conv_down", "hrnet_nv.BasicBlock.se"], "methods", ["None"], ["            ", "self", ".", "se", "=", "SELayer", "(", "\n", "num_channels", "=", "num_filters", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "reduction_ratio", "=", "16", ",", "\n", "name", "=", "name", "+", "'_fc'", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "residual", "=", "self", ".", "conv_down", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.SELayer.__init__": [[430, 451], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "int", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "math.sqrt", "math.sqrt", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["", "y", "=", "conv2", "+", "residual", "\n", "y", "=", "F", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n", "\n", "", "", "class", "SELayer", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "num_filters", ",", "reduction_ratio", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "pool2d_gap", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "\n", "self", ".", "_num_channels", "=", "num_channels", "\n", "\n", "med_ch", "=", "int", "(", "num_channels", "/", "reduction_ratio", ")", "\n", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "num_channels", "*", "1.0", ")", "\n", "self", ".", "squeeze", "=", "nn", ".", "Linear", "(", "\n", "num_channels", ",", "\n", "med_ch", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "stdv", ",", "stdv", ")", ")", ")", "\n", "\n", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "med_ch", "*", "1.0", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.SELayer.forward": [[452, 463], ["hrnet_nv.SELayer.pool2d_gap", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "hrnet_nv.SELayer.squeeze", "paddle.relu", "paddle.relu", "paddle.relu", "hrnet_nv.SELayer.excitation", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["None"], ["self", ".", "excitation", "=", "nn", ".", "Linear", "(", "\n", "med_ch", ",", "\n", "num_filters", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "stdv", ",", "stdv", ")", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "pool", "=", "self", ".", "pool2d_gap", "(", "x", ")", "\n", "pool", "=", "paddle", ".", "reshape", "(", "pool", ",", "shape", "=", "[", "-", "1", ",", "self", ".", "_num_channels", "]", ")", "\n", "squeeze", "=", "self", ".", "squeeze", "(", "pool", ")", "\n", "squeeze", "=", "F", ".", "relu", "(", "squeeze", ")", "\n", "excitation", "=", "self", ".", "excitation", "(", "squeeze", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.Stage.__init__": [[466, 504], ["paddle.Layer.__init__", "range", "hrnet_nv.Stage.stage_func_list.append", "hrnet_nv.Stage.add_sublayer", "hrnet_nv.Stage.add_sublayer", "hrnet_nv.HighResolutionModule", "hrnet_nv.HighResolutionModule", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["excitation", ",", "shape", "=", "[", "-", "1", ",", "self", ".", "_num_channels", ",", "1", ",", "1", "]", ")", "\n", "out", "=", "x", "*", "excitation", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "Stage", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_modules", ",", "\n", "num_blocks", ",", "\n", "num_filters", ",", "\n", "has_se", "=", "False", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "Stage", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_num_modules", "=", "num_modules", "\n", "\n", "self", ".", "stage_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_modules", ")", ":", "\n", "            ", "if", "i", "==", "num_modules", "-", "1", "and", "not", "multi_scale_output", ":", "\n", "                ", "stage_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"stage_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "HighResolutionModule", "(", "\n", "num_channels", "=", "num_channels", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "multi_scale_output", "=", "False", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "align_corners", "=", "align_corners", ")", ")", "\n", "", "else", ":", "\n", "                ", "stage_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"stage_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "HighResolutionModule", "(", "\n", "num_channels", "=", "num_channels", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "num_filters", "=", "num_filters", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.Stage.forward": [[505, 510], ["range"], "methods", ["None"], ["has_se", "=", "has_se", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "align_corners", "=", "align_corners", ")", ")", "\n", "\n", "", "self", ".", "stage_func_list", ".", "append", "(", "stage_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HighResolutionModule.__init__": [[513, 536], ["paddle.Layer.__init__", "hrnet_nv.Branches", "hrnet_nv.FuseLayers"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["for", "idx", "in", "range", "(", "self", ".", "_num_modules", ")", ":", "\n", "            ", "out", "=", "self", ".", "stage_func_list", "[", "idx", "]", "(", "out", ")", "\n", "", "return", "out", "\n", "\n", "\n", "", "", "class", "HighResolutionModule", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_blocks", ",", "\n", "num_filters", ",", "\n", "has_se", "=", "False", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "HighResolutionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "branches_func", "=", "Branches", "(", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", ")", "\n", "\n", "self", ".", "fuse_func", "=", "FuseLayers", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HighResolutionModule.forward": [[537, 541], ["hrnet_nv.HighResolutionModule.branches_func", "hrnet_nv.HighResolutionModule.fuse_func"], "methods", ["None"], ["in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "multi_scale_output", "=", "multi_scale_output", ",", "\n", "name", "=", "name", ",", "\n", "align_corners", "=", "align_corners", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.FuseLayers.__init__": [[544, 597], ["paddle.Layer.__init__", "range", "len", "range", "len", "hrnet_nv.FuseLayers.add_sublayer", "hrnet_nv.FuseLayers.residual_func_list.append", "paddleseg.models.layers.ConvBN", "range", "hrnet_nv.FuseLayers.residual_func_list.append", "hrnet_nv.FuseLayers.add_sublayer", "hrnet_nv.FuseLayers.add_sublayer", "paddleseg.models.layers.ConvBN", "paddleseg.models.layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["        ", "out", "=", "self", ".", "branches_func", "(", "x", ")", "\n", "out", "=", "self", ".", "fuse_func", "(", "out", ")", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "FuseLayers", "(", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "FuseLayers", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_actual_ch", "=", "len", "(", "in_channels", ")", "if", "multi_scale_output", "else", "1", "\n", "self", ".", "_in_channels", "=", "in_channels", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "residual_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_actual_ch", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "in_channels", ")", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ",", "j", "+", "1", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "in_channels", "[", "j", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "residual_func_list", ".", "append", "(", "residual_func", ")", "\n", "", "elif", "j", "<", "i", ":", "\n", "                    ", "pre_num_filters", "=", "in_channels", "[", "j", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "if", "k", "==", "i", "-", "j", "-", "1", ":", "\n", "                            ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}_{}\"", ".", "format", "(", "\n", "name", ",", "i", "+", "1", ",", "j", "+", "1", ",", "k", "+", "1", ")", ",", "\n", "layers", ".", "ConvBN", "(", "\n", "in_channels", "=", "pre_num_filters", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "pre_num_filters", "=", "out_channels", "[", "i", "]", "\n", "", "else", ":", "\n", "                            ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}_{}\"", ".", "format", "(", "\n", "name", ",", "i", "+", "1", ",", "j", "+", "1", ",", "k", "+", "1", ")", ",", "\n", "layers", ".", "ConvBNReLU", "(", "\n", "in_channels", "=", "pre_num_filters", ",", "\n", "out_channels", "=", "out_channels", "[", "j", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.FuseLayers.forward": [[598, 627], ["range", "range", "paddle.relu", "paddle.relu", "paddle.relu", "outs.append", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "len", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "pre_num_filters", "=", "out_channels", "[", "j", "]", "\n", "", "self", ".", "residual_func_list", ".", "append", "(", "residual_func", ")", "\n", "\n", "", "", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "residual_func_idx", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "_actual_ch", ")", ":", "\n", "            ", "residual", "=", "x", "[", "i", "]", "\n", "residual_shape", "=", "residual", ".", "shape", "[", "-", "2", ":", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "self", ".", "_in_channels", ")", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "y", "=", "self", ".", "residual_func_list", "[", "residual_func_idx", "]", "(", "x", "[", "j", "]", ")", "\n", "residual_func_idx", "+=", "1", "\n", "\n", "y", "=", "F", ".", "interpolate", "(", "\n", "y", ",", "\n", "residual_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "residual", "=", "residual", "+", "y", "\n", "", "elif", "j", "<", "i", ":", "\n", "                    ", "y", "=", "x", "[", "j", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "y", "=", "self", ".", "residual_func_list", "[", "residual_func_idx", "]", "(", "y", ")", "\n", "residual_func_idx", "+=", "1", "\n", "\n", "", "residual", "=", "residual", "+", "y", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W18_NV_Small_V1": [[629, 646], ["hrnet_nv.HRNetNV"], "function", ["None"], ["", "", "residual", "=", "F", ".", "relu", "(", "residual", ")", "\n", "outs", ".", "append", "(", "residual", ")", "\n", "\n", "", "return", "outs", "\n", "\n", "\n", "", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W18_NV_Small_V1", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "1", "]", ",", "\n", "stage1_num_channels", "=", "[", "32", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "2", ",", "2", "]", ",", "\n", "stage2_num_channels", "=", "[", "16", ",", "32", "]", ",", "\n", "stage3_num_modules", "=", "1", ",", "\n", "stage3_num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "\n", "stage3_num_channels", "=", "[", "16", ",", "32", ",", "64", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W18_NV_Small_V2": [[648, 665], ["hrnet_nv.HRNetNV"], "function", ["None"], ["stage4_num_blocks", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "stage4_num_channels", "=", "[", "16", ",", "32", ",", "64", ",", "128", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W18_NV_Small_V2", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "2", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "2", ",", "2", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "3", ",", "\n", "stage3_num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W18_NV": [[667, 684], ["hrnet_nv.HRNetNV"], "function", ["None"], ["stage4_num_blocks", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W18_NV", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W30_NV": [[686, 703], ["hrnet_nv.HRNetNV"], "function", ["None"], ["stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W30_NV", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "30", ",", "60", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "30", ",", "60", ",", "120", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W32_NV": [[705, 722], ["hrnet_nv.HRNetNV"], "function", ["None"], ["stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "30", ",", "60", ",", "120", ",", "240", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W32_NV", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "32", ",", "64", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "32", ",", "64", ",", "128", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W40_NV": [[724, 741], ["hrnet_nv.HRNetNV"], "function", ["None"], ["stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "32", ",", "64", ",", "128", ",", "256", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W40_NV", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "40", ",", "80", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "40", ",", "80", ",", "160", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W44_NV": [[743, 760], ["hrnet_nv.HRNetNV"], "function", ["None"], ["stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "40", ",", "80", ",", "160", ",", "320", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W44_NV", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "44", ",", "88", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "44", ",", "88", ",", "176", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W48_NV": [[762, 779], ["hrnet_nv.HRNetNV"], "function", ["None"], ["stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "44", ",", "88", ",", "176", ",", "352", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W48_NV", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "48", ",", "96", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "48", ",", "96", ",", "192", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W60_NV": [[781, 798], ["hrnet_nv.HRNetNV"], "function", ["None"], ["stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "48", ",", "96", ",", "192", ",", "384", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W60_NV", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "60", ",", "120", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "60", ",", "120", ",", "240", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.hrnet_nv.HRNet_W64_NV": [[800, 817], ["hrnet_nv.HRNetNV"], "function", ["None"], ["stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "60", ",", "120", ",", "240", ",", "480", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n", "\n", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "HRNet_W64_NV", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNetNV", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "64", ",", "128", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "64", ",", "128", ",", "256", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.Bottleneck.__init__": [[29, 60], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "downsample", "=", "None", ",", "\n", "bn_momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "padding", "=", "dilation", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "\n", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2D", "(", "planes", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "\n", "planes", ",", "\n", "planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", "bias_attr", "=", "False", ",", "\n", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2D", "(", "planes", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2D", "(", "\n", "planes", ",", "planes", "*", "4", ",", "bias_attr", "=", "False", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2D", "(", "planes", "*", "4", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.Bottleneck.forward": [[61, 82], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ClassifierModule.__init__": [[85, 104], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "zip", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "resnet.ClassifierModule.conv2d_list.append", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "dilation_series", ",", "padding_series", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "ClassifierModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv2d_list", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "dilation", ",", "padding", "in", "zip", "(", "dilation_series", ",", "padding_series", ")", ":", "\n", "            ", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", "std", "=", "0.01", ")", ",", "learning_rate", "=", "10.0", ")", "\n", "bias_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "value", "=", "0.0", ")", ",", "\n", "learning_rate", "=", "10.0", ")", "\n", "self", ".", "conv2d_list", ".", "append", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "inplanes", ",", "\n", "num_classes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "weight_attr", "=", "weight_attr", ",", "\n", "bias_attr", "=", "bias_attr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ClassifierModule.forward": [[105, 110], ["range", "len"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv2d_list", "[", "0", "]", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "conv2d_list", ")", "-", "1", ")", ":", "\n", "            ", "out", "+=", "self", ".", "conv2d_list", "[", "i", "+", "1", "]", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti.__init__": [[113, 152], ["paddle.Layer.__init__", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "resnet.ResNetMulti._make_layer", "resnet.ResNetMulti._make_layer", "resnet.ResNetMulti._make_layer", "resnet.ResNetMulti._make_layer", "resnet.ResNetMulti._make_pred_layer", "resnet.ResNetMulti._make_pred_layer", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Normal", "paddle.nn.initializer.Normal", "paddle.nn.initializer.Normal", "paddle.nn.initializer.Normal", "paddle.nn.initializer.Normal", "paddle.nn.initializer.Normal", "paddle.nn.initializer.Normal", "paddle.nn.initializer.Normal", "paddle.nn.initializer.Normal"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_pred_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_pred_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_layers", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "ResNetMulti", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "Constant", "(", "value", "=", "1", ")", ",", "\n", "learning_rate", "=", "0.1", ")", "\n", "self", ".", "bias_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "Constant", "(", "value", "=", "0", ")", ")", "\n", "self", ".", "weight_attr_conv", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "Normal", "(", "std", "=", "0.01", ")", ")", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "\n", "3", ",", "\n", "64", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "3", ",", "\n", "bias_attr", "=", "False", ",", "\n", "weight_attr", "=", "self", ".", "weight_attr_conv", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2D", "(", "\n", "64", ",", "bias_attr", "=", "self", ".", "bias_attr", ",", "weight_attr", "=", "self", ".", "weight_attr", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2D", "(", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "256", ",", "num_layers", "[", "2", "]", ",", "stride", "=", "1", ",", "dilation", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "512", ",", "num_layers", "[", "3", "]", ",", "stride", "=", "1", ",", "dilation", "=", "4", ")", "\n", "self", ".", "layer5", "=", "self", ".", "_make_pred_layer", "(", "ClassifierModule", ",", "1024", ",", "\n", "[", "6", ",", "12", ",", "18", ",", "24", "]", ",", "[", "6", ",", "12", ",", "18", ",", "24", "]", ",", "\n", "num_classes", ")", "\n", "self", ".", "layer6", "=", "self", ".", "_make_pred_layer", "(", "ClassifierModule", ",", "2048", ",", "\n", "[", "6", ",", "12", ",", "18", ",", "24", "]", ",", "[", "6", ",", "12", ",", "18", ",", "24", "]", ",", "\n", "num_classes", ")", "\n", "\n", "# for channels of four returned stages", "\n", "num_filters", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "self", ".", "feat_channels", "=", "[", "c", "*", "4", "for", "c", "in", "num_filters", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_layer": [[153, 182], ["paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList.append", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "block", "paddle.LayerList.append", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "block"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", "or", "dilation", "==", "2", "or", "dilation", "==", "4", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias_attr", "=", "False", ",", "\n", "weight_attr", "=", "self", ".", "weight_attr_conv", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "\n", "planes", "*", "block", ".", "expansion", ",", "\n", "bias_attr", "=", "self", ".", "bias_attr", ",", "\n", "weight_attr", "=", "self", ".", "weight_attr", ")", ")", "\n", "", "nnlayers", "=", "nn", ".", "LayerList", "(", ")", "\n", "nnlayers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", ",", "\n", "stride", ",", "\n", "dilation", "=", "dilation", ",", "\n", "downsample", "=", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "nnlayers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "nnlayers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti._make_pred_layer": [[183, 186], ["block"], "methods", ["None"], ["", "def", "_make_pred_layer", "(", "self", ",", "block", ",", "inplanes", ",", "dilation_series", ",", "padding_series", ",", "\n", "num_classes", ")", ":", "\n", "        ", "return", "block", "(", "inplanes", ",", "dilation_series", ",", "padding_series", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti.forward": [[187, 210], ["resnet.ResNetMulti.conv1", "resnet.ResNetMulti.bn1", "resnet.ResNetMulti.relu", "resnet.ResNetMulti.clone", "resnet.ResNetMulti.maxpool", "resnet.ResNetMulti.layer1", "resnet.ResNetMulti.layer2", "resnet.ResNetMulti.layer3", "resnet.ResNetMulti.layer5", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "resnet.ResNetMulti.layer4", "resnet.ResNetMulti.layer6", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "input_size", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "self", ".", "conv1_logit", "=", "x", ".", "clone", "(", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "\n", "\n", "# Resolution 1", "\n", "x_aug", "=", "self", ".", "layer5", "(", "x3", ")", "\n", "x_aug", "=", "F", ".", "interpolate", "(", "\n", "x_aug", ",", "size", "=", "input_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "# Resolution 2", "\n", "x4", "=", "self", ".", "layer4", "(", "x3", ")", "\n", "x6", "=", "self", ".", "layer6", "(", "x4", ")", "\n", "x6", "=", "F", ".", "interpolate", "(", "\n", "x6", ",", "size", "=", "input_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "[", "x6", ",", "x_aug", ",", "x1", ",", "x2", ",", "x3", ",", "x4", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti.get_1x_lr_params_NOscale": [[211, 234], ["b.append", "b.append", "b.append", "b.append", "b.append", "b.append", "range", "len", "b[].modules", "j.parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "get_1x_lr_params_NOscale", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        This generator returns all the parameters of the net except for\n        the last classification layer. Note that for each batchnorm layer,\n        requires_grad is set to False in deeplab_resnet.py, therefore this function does not return\n        any batchnorm parameter\n        \"\"\"", "\n", "b", "=", "[", "]", "\n", "\n", "b", ".", "append", "(", "self", ".", "conv1", ")", "\n", "b", ".", "append", "(", "self", ".", "bn1", ")", "\n", "b", ".", "append", "(", "self", ".", "layer1", ")", "\n", "b", ".", "append", "(", "self", ".", "layer2", ")", "\n", "b", ".", "append", "(", "self", ".", "layer3", ")", "\n", "b", ".", "append", "(", "self", ".", "layer4", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "b", ")", ")", ":", "\n", "            ", "for", "j", "in", "b", "[", "i", "]", ".", "modules", "(", ")", ":", "\n", "                ", "jj", "=", "0", "\n", "for", "k", "in", "j", ".", "parameters", "(", ")", ":", "\n", "                    ", "jj", "+=", "1", "\n", "if", "not", "k", ".", "stop_gradient", ":", "\n", "                        ", "yield", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti.get_10x_lr_params": [[235, 247], ["b.append", "b.append", "range", "resnet.ResNetMulti.layer5.parameters", "resnet.ResNetMulti.layer6.parameters", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "", "", "def", "get_10x_lr_params", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        This generator returns all the parameters for the last layer of the net,\n        which does the classification of pixel into classes\n        \"\"\"", "\n", "b", "=", "[", "]", "\n", "b", ".", "append", "(", "self", ".", "layer5", ".", "parameters", "(", ")", ")", "\n", "b", ".", "append", "(", "self", ".", "layer6", ".", "parameters", "(", ")", ")", "\n", "\n", "for", "j", "in", "range", "(", "len", "(", "b", ")", ")", ":", "\n", "            ", "for", "i", "in", "b", "[", "j", "]", ":", "\n", "                ", "yield", "i", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti.optim_parameters": [[248, 255], ["resnet.ResNetMulti.get_1x_lr_params_NOscale", "resnet.ResNetMulti.get_10x_lr_params"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti.get_1x_lr_params_NOscale", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNetMulti.get_10x_lr_params"], ["", "", "", "def", "optim_parameters", "(", "self", ",", "lr", ")", ":", "\n", "        ", "return", "[", "{", "\n", "'params'", ":", "self", ".", "get_1x_lr_params_NOscale", "(", ")", ",", "\n", "'lr'", ":", "lr", "\n", "}", ",", "{", "\n", "'params'", ":", "self", ".", "get_10x_lr_params", "(", ")", ",", "\n", "'lr'", ":", "10", "*", "lr", "\n", "}", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.backbones.resnet.ResNet101": [[258, 263], ["resnet.ResNetMulti"], "function", ["None"], ["", "", "@", "manager", ".", "BACKBONES", ".", "add_component", "\n", "def", "ResNet101", "(", "**", "args", ")", ":", "\n", "    ", "model", "=", "ResNetMulti", "(", "\n", "Bottleneck", ",", "num_layers", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "args", ")", "# add pretrain", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.gscnn_dual_task_loss.DualTaskLoss.__init__": [[30, 34], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "ignore_index", "=", "255", ",", "tau", "=", "0.5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "tau", "=", "tau", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.gscnn_dual_task_loss.DualTaskLoss._gumbel_softmax_sample": [[35, 47], ["paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "def", "_gumbel_softmax_sample", "(", "self", ",", "logit", ",", "tau", "=", "1", ",", "eps", "=", "1e-10", ")", ":", "\n", "        ", "\"\"\"\n        Draw a sample from the Gumbel-Softmax distribution\n\n        based on\n        https://github.com/ericjang/gumbel-softmax/blob/3c8584924603869e90ca74ac20a6a03d99a91ef9/Categorical%20VAE.ipynb\n        (MIT license)\n        \"\"\"", "\n", "gumbel_noise", "=", "paddle", ".", "rand", "(", "logit", ".", "shape", ")", "\n", "gumbel_noise", "=", "-", "paddle", ".", "log", "(", "eps", "-", "paddle", ".", "log", "(", "gumbel_noise", "+", "eps", ")", ")", "\n", "logit", "=", "logit", "+", "gumbel_noise", "\n", "return", "F", ".", "softmax", "(", "logit", "/", "tau", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.gscnn_dual_task_loss.DualTaskLoss.compute_grad_mag": [[48, 68], ["gscnn_dual_task_loss.DualTaskLoss.conv_tri", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "ValueError", "paddle.sqrt.max", "paddle.sqrt.max", "paddle.sqrt.max", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor().astype.unsqueeze", "paddle.to_tensor().astype.unsqueeze", "paddle.to_tensor().astype.unsqueeze", "paddle.to_tensor().astype.t().unsqueeze", "paddle.to_tensor().astype.t().unsqueeze", "paddle.to_tensor().astype.t().unsqueeze", "paddle.to_tensor().astype.t", "paddle.to_tensor().astype.t", "paddle.to_tensor().astype.t"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.gscnn_dual_task_loss.DualTaskLoss.conv_tri", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "def", "compute_grad_mag", "(", "self", ",", "x", ")", ":", "\n", "        ", "eps", "=", "1e-6", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "if", "h", "<=", "1", "or", "w", "<=", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The width and height of tensor to compute grad must be greater than 1, but the shape is {}.'", "\n", ".", "format", "(", "x", ".", "shape", ")", ")", "\n", "\n", "", "x", "=", "self", ".", "conv_tri", "(", "x", ",", "r", "=", "4", ")", "\n", "kernel", "=", "[", "[", "-", "1", ",", "0", ",", "1", "]", "]", "\n", "kernel", "=", "paddle", ".", "to_tensor", "(", "kernel", ")", ".", "astype", "(", "'float32'", ")", "\n", "kernel", "=", "0.5", "*", "kernel", "\n", "\n", "kernel_x", "=", "paddle", ".", "concat", "(", "[", "kernel", ".", "unsqueeze", "(", "(", "0", ",", "1", ")", ")", "]", "*", "c", ",", "axis", "=", "0", ")", "\n", "grad_x", "=", "F", ".", "conv2d", "(", "x", ",", "kernel_x", ",", "padding", "=", "'same'", ",", "groups", "=", "c", ")", "\n", "kernel_y", "=", "paddle", ".", "concat", "(", "[", "kernel", ".", "t", "(", ")", ".", "unsqueeze", "(", "(", "0", ",", "1", ")", ")", "]", "*", "c", ",", "axis", "=", "0", ")", "\n", "grad_y", "=", "F", ".", "conv2d", "(", "x", ",", "kernel_y", ",", "padding", "=", "'same'", ",", "groups", "=", "c", ")", "\n", "mag", "=", "paddle", ".", "sqrt", "(", "grad_x", "*", "grad_x", "+", "grad_y", "*", "grad_y", "+", "eps", ")", "\n", "\n", "return", "mag", "/", "mag", ".", "max", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.gscnn_dual_task_loss.DualTaskLoss.conv_tri": [[69, 100], ["paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat.clone", "paddle.concat.clone", "paddle.concat.clone", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "ValueError", "list", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "list", "reversed", "paddle.to_tensor().astype.unsqueeze", "paddle.to_tensor().astype.unsqueeze", "paddle.to_tensor().astype.unsqueeze", "paddle.to_tensor().astype.t().unsqueeze", "paddle.to_tensor().astype.t().unsqueeze", "paddle.to_tensor().astype.t().unsqueeze", "range", "range", "paddle.to_tensor().astype.t", "paddle.to_tensor().astype.t", "paddle.to_tensor().astype.t"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "def", "conv_tri", "(", "self", ",", "input", ",", "r", ")", ":", "\n", "        ", "\"\"\"\n        Convolves an image by a 2D triangle filter (the 1D triangle filter f is\n        [1:r r+1 r:-1:1]/(r+1)^2, the 2D version is simply conv2(f,f'))\n        \"\"\"", "\n", "if", "r", "<=", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'`r` should be greater than 1, but it is {}.'", ".", "format", "(", "r", ")", ")", "\n", "\n", "", "kernel", "=", "[", "\n", "list", "(", "range", "(", "1", ",", "r", "+", "1", ")", ")", "+", "[", "r", "+", "1", "]", "+", "list", "(", "reversed", "(", "range", "(", "1", ",", "r", "+", "1", ")", ")", ")", "\n", "]", "\n", "kernel", "=", "paddle", ".", "to_tensor", "(", "kernel", ")", ".", "astype", "(", "'float32'", ")", "\n", "kernel", "=", "kernel", "/", "(", "r", "+", "1", ")", "**", "2", "\n", "input_", "=", "F", ".", "pad", "(", "input", ",", "[", "1", ",", "1", ",", "0", ",", "0", "]", ",", "mode", "=", "'replicate'", ")", "\n", "input_", "=", "F", ".", "pad", "(", "input_", ",", "[", "r", ",", "r", ",", "0", ",", "0", "]", ",", "mode", "=", "'reflect'", ")", "\n", "input_", "=", "[", "input_", "[", ":", ",", ":", ",", ":", ",", ":", "r", "]", ",", "input", ",", "input_", "[", ":", ",", ":", ",", ":", ",", "-", "r", ":", "]", "]", "\n", "input_", "=", "paddle", ".", "concat", "(", "input_", ",", "axis", "=", "3", ")", "\n", "tem", "=", "input_", ".", "clone", "(", ")", "\n", "\n", "input_", "=", "F", ".", "pad", "(", "input_", ",", "[", "0", ",", "0", ",", "1", ",", "1", "]", ",", "mode", "=", "'replicate'", ")", "\n", "input_", "=", "F", ".", "pad", "(", "input_", ",", "[", "0", ",", "0", ",", "r", ",", "r", "]", ",", "mode", "=", "'reflect'", ")", "\n", "input_", "=", "[", "input_", "[", ":", ",", ":", ",", ":", "r", ",", ":", "]", ",", "tem", ",", "input_", "[", ":", ",", ":", ",", "-", "r", ":", ",", ":", "]", "]", "\n", "input_", "=", "paddle", ".", "concat", "(", "input_", ",", "axis", "=", "2", ")", "\n", "\n", "c", "=", "input", ".", "shape", "[", "1", "]", "\n", "kernel_x", "=", "paddle", ".", "concat", "(", "[", "kernel", ".", "unsqueeze", "(", "(", "0", ",", "1", ")", ")", "]", "*", "c", ",", "axis", "=", "0", ")", "\n", "output", "=", "F", ".", "conv2d", "(", "input_", ",", "kernel_x", ",", "padding", "=", "0", ",", "groups", "=", "c", ")", "\n", "kernel_y", "=", "paddle", ".", "concat", "(", "[", "kernel", ".", "t", "(", ")", ".", "unsqueeze", "(", "(", "0", ",", "1", ")", ")", "]", "*", "c", ",", "axis", "=", "0", ")", "\n", "output", "=", "F", ".", "conv2d", "(", "output", ",", "kernel_y", ",", "padding", "=", "0", ",", "groups", "=", "c", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.gscnn_dual_task_loss.DualTaskLoss.forward": [[101, 142], ["paddle.one_hot().transpose", "paddle.one_hot().transpose", "paddle.one_hot().transpose", "gscnn_dual_task_loss.DualTaskLoss._gumbel_softmax_sample", "gscnn_dual_task_loss.DualTaskLoss.compute_grad_mag", "gscnn_dual_task_loss.DualTaskLoss.compute_grad_mag", "paddle.l1_loss", "paddle.l1_loss", "paddle.l1_loss", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "len", "labels.squeeze.squeeze.unsqueeze", "len", "labels.squeeze.squeeze.squeeze", "paddle.one_hot", "paddle.one_hot", "paddle.one_hot"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.gscnn_dual_task_loss.DualTaskLoss._gumbel_softmax_sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.gscnn_dual_task_loss.DualTaskLoss.compute_grad_mag", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.gscnn_dual_task_loss.DualTaskLoss.compute_grad_mag"], ["", "def", "forward", "(", "self", ",", "logit", ",", "labels", ")", ":", "\n", "# import pdb; pdb.set_trace()", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "logit", ".", "shape", "\n", "th", "=", "1e-8", "\n", "eps", "=", "1e-10", "\n", "if", "len", "(", "labels", ".", "shape", ")", "==", "3", ":", "\n", "            ", "labels", "=", "labels", ".", "unsqueeze", "(", "1", ")", "\n", "", "mask", "=", "(", "labels", "!=", "self", ".", "ignore_index", ")", "\n", "mask", ".", "stop_gradient", "=", "True", "\n", "logit", "=", "logit", "*", "mask", "\n", "\n", "labels", "=", "labels", "*", "mask", "\n", "if", "len", "(", "labels", ".", "shape", ")", "==", "4", ":", "\n", "            ", "labels", "=", "labels", ".", "squeeze", "(", "1", ")", "\n", "", "labels", ".", "stop_gradient", "=", "True", "\n", "labels", "=", "F", ".", "one_hot", "(", "labels", ",", "logit", ".", "shape", "[", "1", "]", ")", ".", "transpose", "(", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "labels", ".", "stop_gradient", "=", "True", "\n", "\n", "g", "=", "self", ".", "_gumbel_softmax_sample", "(", "logit", ",", "tau", "=", "self", ".", "tau", ")", "\n", "g", "=", "self", ".", "compute_grad_mag", "(", "g", ")", "\n", "g_hat", "=", "self", ".", "compute_grad_mag", "(", "labels", ")", "\n", "loss", "=", "F", ".", "l1_loss", "(", "g", ",", "g_hat", ",", "reduction", "=", "'none'", ")", "\n", "loss", "=", "loss", "*", "mask", "\n", "\n", "g_mask", "=", "(", "g", ">", "th", ")", ".", "astype", "(", "'float32'", ")", "\n", "g_mask", ".", "stop_gradient", "=", "True", "\n", "g_mask_sum", "=", "paddle", ".", "sum", "(", "g_mask", ")", "\n", "loss_g", "=", "paddle", ".", "sum", "(", "loss", "*", "g_mask", ")", "\n", "if", "g_mask_sum", ">", "eps", ":", "\n", "            ", "loss_g", "=", "loss_g", "/", "g_mask_sum", "\n", "\n", "", "g_hat_mask", "=", "(", "g_hat", ">", "th", ")", ".", "astype", "(", "'float32'", ")", "\n", "g_hat_mask", ".", "stop_gradient", "=", "True", "\n", "g_hat_mask_sum", "=", "paddle", ".", "sum", "(", "g_hat_mask", ")", "\n", "loss_g_hat", "=", "paddle", ".", "sum", "(", "loss", "*", "g_hat_mask", ")", "\n", "if", "g_hat_mask_sum", ">", "eps", ":", "\n", "            ", "loss_g_hat", "=", "loss_g_hat", "/", "g_hat_mask_sum", "\n", "\n", "", "total_loss", "=", "0.5", "*", "loss_g", "+", "0.5", "*", "loss_g_hat", "\n", "\n", "return", "total_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.mixed_loss.MixedLoss.__init__": [[36, 51], ["paddle.nn.Layer.__init__", "len", "len", "isinstance", "TypeError", "isinstance", "TypeError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "losses", ",", "coef", ")", ":", "\n", "        ", "super", "(", "MixedLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "not", "isinstance", "(", "losses", ",", "list", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'`losses` must be a list!'", ")", "\n", "", "if", "not", "isinstance", "(", "coef", ",", "list", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'`coef` must be a list!'", ")", "\n", "", "len_losses", "=", "len", "(", "losses", ")", "\n", "len_coef", "=", "len", "(", "coef", ")", "\n", "if", "len_losses", "!=", "len_coef", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The length of `losses` should equal to `coef`, but they are {} and {}.'", "\n", ".", "format", "(", "len_losses", ",", "len_coef", ")", ")", "\n", "\n", "", "self", ".", "losses", "=", "losses", "\n", "self", ".", "coef", "=", "coef", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.mixed_loss.MixedLoss.forward": [[52, 58], ["enumerate", "loss", "loss_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "loss_list", "=", "[", "]", "\n", "for", "i", ",", "loss", "in", "enumerate", "(", "self", ".", "losses", ")", ":", "\n", "            ", "output", "=", "loss", "(", "logits", ",", "labels", ")", "\n", "loss_list", ".", "append", "(", "output", "*", "self", ".", "coef", "[", "i", "]", ")", "\n", "", "return", "loss_list", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.__init__": [[37, 48], ["paddle.nn.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "border", "=", "1", ",", "\n", "calculate_weights", "=", "False", ",", "\n", "upper_bound", "=", "1.0", ",", "\n", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", "RelaxBoundaryLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "border", "=", "border", "\n", "self", ".", "calculate_weights", "=", "calculate_weights", "\n", "self", ".", "upper_bound", "=", "upper_bound", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "EPS", "=", "1e-5", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.relax_onehot": [[49, 71], ["paddle.pad", "paddle.pad", "label.unsqueeze.unsqueeze.squeeze", "range", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "len", "label.unsqueeze.unsqueeze.unsqueeze", "range", "paddle.one_hot", "paddle.one_hot"], "methods", ["None"], ["", "def", "relax_onehot", "(", "self", ",", "label", ",", "num_classes", ")", ":", "\n", "# pad label, and let ignore_index as num_classes", "\n", "        ", "if", "len", "(", "label", ".", "shape", ")", "==", "3", ":", "\n", "            ", "label", "=", "label", ".", "unsqueeze", "(", "1", ")", "\n", "", "h", ",", "w", "=", "label", ".", "shape", "[", "-", "2", "]", ",", "label", ".", "shape", "[", "-", "1", "]", "\n", "label", "=", "F", ".", "pad", "(", "label", ",", "[", "self", ".", "border", "]", "*", "4", ",", "value", "=", "num_classes", ")", "\n", "label", "=", "label", ".", "squeeze", "(", "1", ")", "\n", "ignore_mask", "=", "(", "label", "==", "self", ".", "ignore_index", ")", ".", "astype", "(", "'int64'", ")", "\n", "label", "=", "label", "*", "(", "1", "-", "ignore_mask", ")", "+", "num_classes", "*", "ignore_mask", "\n", "\n", "onehot", "=", "0", "\n", "for", "i", "in", "range", "(", "-", "self", ".", "border", ",", "self", ".", "border", "+", "1", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "-", "self", ".", "border", ",", "self", ".", "border", "+", "1", ")", ":", "\n", "                ", "h_start", ",", "h_end", "=", "1", "+", "i", ",", "h", "+", "1", "+", "i", "\n", "w_start", ",", "w_end", "=", "1", "+", "j", ",", "w", "+", "1", "+", "j", "\n", "label_", "=", "label", "[", ":", ",", "h_start", ":", "h_end", ",", "w_start", ":", "w_end", "]", "\n", "onehot_", "=", "F", ".", "one_hot", "(", "label_", ",", "num_classes", "+", "1", ")", "\n", "onehot", "+=", "onehot_", "\n", "", "", "onehot", "=", "(", "onehot", ">", "0", ")", ".", "astype", "(", "'int64'", ")", "\n", "onehot", "=", "paddle", ".", "transpose", "(", "onehot", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "return", "onehot", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.calculate_weights": [[72, 75], ["label.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum"], "methods", ["None"], ["", "def", "calculate_weights", "(", "self", ",", "label", ")", ":", "\n", "        ", "hist", "=", "paddle", ".", "sum", "(", "label", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "*", "1.0", "/", "label", ".", "sum", "(", ")", "\n", "hist", "=", "(", "(", "hist", "!=", "0", ")", "*", "self", ".", "upper_bound", "*", "(", "1", "-", "hist", ")", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.custom_nll": [[76, 97], ["paddle.softmax", "paddle.softmax", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "class_weights.unsqueeze.sum", "label[].astype", "class_weights.unsqueeze", "class_weights.unsqueeze.sum", "ignore_mask.sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "def", "custom_nll", "(", "self", ",", "\n", "logit", ",", "\n", "label", ",", "\n", "class_weights", "=", "None", ",", "\n", "border_weights", "=", "None", ",", "\n", "ignore_mask", "=", "None", ")", ":", "\n", "        ", "soft", "=", "F", ".", "softmax", "(", "logit", ",", "axis", "=", "1", ")", "\n", "# calculate the valid soft where label is 1.", "\n", "soft_label", "=", "(", "(", "soft", "*", "label", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", "]", ")", ".", "sum", "(", "\n", "1", ",", "keepdim", "=", "True", ")", ")", "*", "(", "label", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", "]", ".", "astype", "(", "'float32'", ")", ")", "\n", "soft", "=", "soft", "*", "(", "1", "-", "label", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", "]", ")", "+", "soft_label", "\n", "logsoft", "=", "paddle", ".", "log", "(", "soft", ")", "\n", "if", "class_weights", "is", "not", "None", ":", "\n", "            ", "logsoft", "=", "class_weights", ".", "unsqueeze", "(", "(", "0", ",", "2", ",", "3", ")", ")", "\n", "", "logsoft", "=", "label", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", "]", "*", "logsoft", "\n", "logsoft", "=", "logsoft", ".", "sum", "(", "1", ")", "\n", "# border loss is divided equally", "\n", "logsoft", "=", "-", "1", "/", "border_weights", "*", "logsoft", "*", "(", "1.", "-", "ignore_mask", ")", "\n", "n", ",", "_", ",", "h", ",", "w", "=", "label", ".", "shape", "\n", "logsoft", "=", "logsoft", ".", "sum", "(", ")", "/", "(", "n", "*", "h", "*", "w", "-", "ignore_mask", ".", "sum", "(", ")", "+", "1", ")", "\n", "return", "logsoft", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.forward": [[98, 130], ["decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.relax_onehot", "label[].sum().astype", "range", "label[].sum", "decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.calculate_weights", "decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.custom_nll", "logit[].unsqueeze", "label[].unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.relax_onehot", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.calculate_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.decoupledsegnet_relax_boundary_loss.RelaxBoundaryLoss.custom_nll"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logit (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (N, C), where C is number of classes, and if shape is more than 2D, this\n                is (N, C, D1, D2,..., Dk), k >= 1.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N), where each\n                value is 0 <= label[i] <= C-1, and if shape is more than 2D, this is\n                (N, D1, D2,..., Dk), k >= 1.\n        \"\"\"", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "logit", ".", "shape", "\n", "label", ".", "stop_gradient", "=", "True", "\n", "label", "=", "self", ".", "relax_onehot", "(", "label", ",", "c", ")", "\n", "weights", "=", "label", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", "]", ".", "sum", "(", "1", ")", ".", "astype", "(", "'float32'", ")", "\n", "ignore_mask", "=", "(", "weights", "==", "0", ")", ".", "astype", "(", "'float32'", ")", "\n", "# border is greater than 1, other is 1", "\n", "border_weights", "=", "weights", "+", "ignore_mask", "\n", "\n", "loss", "=", "0", "\n", "class_weights", "=", "None", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "            ", "if", "self", ".", "calculate_weights", ":", "\n", "                ", "class_weights", "=", "self", ".", "calculate_weights", "(", "label", "[", "i", "]", ")", "\n", "", "loss", "=", "loss", "+", "self", ".", "custom_nll", "(", "\n", "logit", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "\n", "label", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "\n", "class_weights", "=", "class_weights", ",", "\n", "border_weights", "=", "border_weights", ",", "\n", "ignore_mask", "=", "ignore_mask", "[", "i", "]", ")", "\n", "", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.ohem_edge_attention_loss.OhemEdgeAttentionLoss.__init__": [[36, 47], ["paddle.nn.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "edge_threshold", "=", "0.8", ",", "\n", "thresh", "=", "0.7", ",", "\n", "min_kept", "=", "5000", ",", "\n", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "edge_threshold", "=", "edge_threshold", "\n", "self", ".", "thresh", "=", "thresh", "\n", "self", ".", "min_kept", "=", "min_kept", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "EPS", "=", "1e-10", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.ohem_edge_attention_loss.OhemEdgeAttentionLoss.forward": [[48, 115], ["paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.unsqueeze.reshape", "paddle.unsqueeze.reshape", "valid_mask.reshape().astype.reshape().astype.sum", "paddle.softmax", "paddle.softmax", "paddle.sum.transpose().reshape", "paddle.sum.transpose().reshape", "paddle.unsqueeze.reshape", "paddle.unsqueeze.reshape", "valid_mask.reshape().astype.reshape().astype.reshape().astype", "paddle.softmax_with_cross_entropy", "paddle.softmax_with_cross_entropy", "len", "len", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "ValueError", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.one_hot", "paddle.one_hot", "label_onehot.transpose.transpose.transpose", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.sum.transpose", "paddle.sum.transpose", "paddle.sum.argsort", "paddle.sum.argsort", "int", "valid_mask.reshape().astype.reshape().astype.reshape", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "int.numpy", "min", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logits", ",", "label", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logits (tuple|list): (seg_logit, edge_logit) Tensor, the data type is float32, float64. Shape is\n                (N, C), where C is number of classes, and if shape is more than 2D, this\n                is (N, C, D1, D2,..., Dk), k >= 1. C =1 of edge_logit .\n            label (Tensor): Label tensor, the data type is int64. Shape is (N, C), where each\n                value is 0 <= label[i] <= C-1, and if shape is more than 2D, this is\n                (N, C, D1, D2,..., Dk), k >= 1.\n        \"\"\"", "\n", "seg_logit", ",", "edge_logit", "=", "logits", "[", "0", "]", ",", "logits", "[", "1", "]", "\n", "if", "len", "(", "label", ".", "shape", ")", "!=", "len", "(", "seg_logit", ".", "shape", ")", ":", "\n", "            ", "label", "=", "paddle", ".", "unsqueeze", "(", "label", ",", "1", ")", "\n", "", "if", "edge_logit", ".", "shape", "!=", "label", ".", "shape", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of edge_logit should equal to the label, but they are {} != {}'", "\n", ".", "format", "(", "edge_logit", ".", "shape", ",", "label", ".", "shape", ")", ")", "\n", "\n", "# Filter out edge", "\n", "", "filler", "=", "paddle", ".", "ones_like", "(", "label", ")", "*", "self", ".", "ignore_index", "\n", "label", "=", "paddle", ".", "where", "(", "edge_logit", ">", "self", ".", "edge_threshold", ",", "label", ",", "filler", ")", "\n", "\n", "# ohem", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "seg_logit", ".", "shape", "\n", "label", "=", "label", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "valid_mask", "=", "(", "label", "!=", "self", ".", "ignore_index", ")", ".", "astype", "(", "'int64'", ")", "\n", "num_valid", "=", "valid_mask", ".", "sum", "(", ")", "\n", "label", "=", "label", "*", "valid_mask", "\n", "\n", "prob", "=", "F", ".", "softmax", "(", "seg_logit", ",", "axis", "=", "1", ")", "\n", "prob", "=", "prob", ".", "transpose", "(", "(", "1", ",", "0", ",", "2", ",", "3", ")", ")", ".", "reshape", "(", "(", "c", ",", "-", "1", ")", ")", "\n", "\n", "if", "self", ".", "min_kept", "<", "num_valid", "and", "num_valid", ">", "0", ":", "\n", "# let the value which ignored greater than 1", "\n", "            ", "prob", "=", "prob", "+", "(", "1", "-", "valid_mask", ")", "\n", "\n", "# get the prob of relevant label", "\n", "label_onehot", "=", "F", ".", "one_hot", "(", "label", ",", "c", ")", "\n", "label_onehot", "=", "label_onehot", ".", "transpose", "(", "(", "1", ",", "0", ")", ")", "\n", "prob", "=", "prob", "*", "label_onehot", "\n", "prob", "=", "paddle", ".", "sum", "(", "prob", ",", "axis", "=", "0", ")", "\n", "\n", "threshold", "=", "self", ".", "thresh", "\n", "if", "self", ".", "min_kept", ">", "0", ":", "\n", "                ", "index", "=", "prob", ".", "argsort", "(", ")", "\n", "threshold_index", "=", "index", "[", "min", "(", "len", "(", "index", ")", ",", "self", ".", "min_kept", ")", "-", "1", "]", "\n", "threshold_index", "=", "int", "(", "threshold_index", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "if", "prob", "[", "threshold_index", "]", ">", "self", ".", "thresh", ":", "\n", "                    ", "threshold", "=", "prob", "[", "threshold_index", "]", "\n", "", "kept_mask", "=", "(", "prob", "<", "threshold", ")", ".", "astype", "(", "'int64'", ")", "\n", "label", "=", "label", "*", "kept_mask", "\n", "valid_mask", "=", "valid_mask", "*", "kept_mask", "\n", "# make the invalid region as ignore", "\n", "", "", "label", "=", "label", "+", "(", "1", "-", "valid_mask", ")", "*", "self", ".", "ignore_index", "\n", "label", "=", "label", ".", "reshape", "(", "(", "n", ",", "1", ",", "h", ",", "w", ")", ")", "\n", "valid_mask", "=", "valid_mask", ".", "reshape", "(", "(", "n", ",", "1", ",", "h", ",", "w", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "loss", "=", "F", ".", "softmax_with_cross_entropy", "(", "\n", "seg_logit", ",", "label", ",", "ignore_index", "=", "self", ".", "ignore_index", ",", "axis", "=", "1", ")", "\n", "loss", "=", "loss", "*", "valid_mask", "\n", "avg_loss", "=", "paddle", ".", "mean", "(", "loss", ")", "/", "(", "paddle", ".", "mean", "(", "valid_mask", ")", "+", "self", ".", "EPS", ")", "\n", "\n", "label", ".", "stop_gradient", "=", "True", "\n", "valid_mask", ".", "stop_gradient", "=", "True", "\n", "return", "avg_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.mean_square_error_loss.MSELoss.__init__": [[64, 66], ["paddle.nn.MSELoss.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "reduction", "=", "'mean'", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "reduction", "=", "reduction", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.bootstrapped_cross_entropy.BootstrappedCrossEntropyLoss.__init__": [[36, 44], ["paddle.nn.Layer.__init__", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["def", "__init__", "(", "self", ",", "min_K", ",", "loss_th", ",", "weight", "=", "None", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "K", "=", "min_K", "\n", "self", ".", "threshold", "=", "loss_th", "\n", "if", "weight", "is", "not", "None", ":", "\n", "            ", "weight", "=", "paddle", ".", "to_tensor", "(", "weight", ",", "dtype", "=", "'float32'", ")", "\n", "", "self", ".", "weight", "=", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.bootstrapped_cross_entropy.BootstrappedCrossEntropyLoss.forward": [[45, 74], ["range", "len", "len", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.cross_entropy", "paddle.cross_entropy", "paddle.sort", "paddle.sort", "paddle.sort", "paddle.sort", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "float", "paddle.nonzero", "paddle.nonzero", "paddle.nonzero", "paddle.nonzero", "paddle.gather", "paddle.gather", "paddle.gather", "paddle.gather"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ")", ":", "\n", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "logit", ".", "shape", "\n", "total_loss", "=", "0.0", "\n", "if", "len", "(", "label", ".", "shape", ")", "!=", "len", "(", "logit", ".", "shape", ")", ":", "\n", "            ", "label", "=", "paddle", ".", "unsqueeze", "(", "label", ",", "1", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "            ", "x", "=", "paddle", ".", "unsqueeze", "(", "logit", "[", "i", "]", ",", "0", ")", "\n", "y", "=", "paddle", ".", "unsqueeze", "(", "label", "[", "i", "]", ",", "0", ")", "\n", "x", "=", "paddle", ".", "transpose", "(", "x", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "y", "=", "paddle", ".", "transpose", "(", "y", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "x", "=", "paddle", ".", "reshape", "(", "x", ",", "shape", "=", "(", "-", "1", ",", "c", ")", ")", "\n", "y", "=", "paddle", ".", "reshape", "(", "y", ",", "shape", "=", "(", "-", "1", ",", ")", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "\n", "x", ",", "\n", "y", ",", "\n", "weight", "=", "self", ".", "weight", ",", "\n", "ignore_index", "=", "self", ".", "ignore_index", ",", "\n", "reduction", "=", "\"none\"", ")", "\n", "sorted_loss", "=", "paddle", ".", "sort", "(", "loss", ",", "descending", "=", "True", ")", "\n", "if", "sorted_loss", "[", "self", ".", "K", "]", ">", "self", ".", "threshold", ":", "\n", "                ", "new_indices", "=", "paddle", ".", "nonzero", "(", "sorted_loss", ">", "self", ".", "threshold", ")", "\n", "loss", "=", "paddle", ".", "gather", "(", "sorted_loss", ",", "new_indices", ")", "\n", "", "else", ":", "\n", "                ", "loss", "=", "sorted_loss", "[", ":", "self", ".", "K", "]", "\n", "\n", "", "total_loss", "+=", "paddle", ".", "mean", "(", "loss", ")", "\n", "", "return", "total_loss", "/", "float", "(", "n", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.edge_attention_loss.EdgeAttentionLoss.__init__": [[34, 40], ["paddle.nn.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "edge_threshold", "=", "0.8", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "edge_threshold", "=", "edge_threshold", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "EPS", "=", "1e-10", "\n", "self", ".", "mean_mask", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.edge_attention_loss.EdgeAttentionLoss.forward": [[41, 79], ["paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.softmax_with_cross_entropy", "paddle.softmax_with_cross_entropy", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "len", "len", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "ValueError", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logits", ",", "label", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logits (tuple|list): (seg_logit, edge_logit) Tensor, the data type is float32, float64. Shape is\n                (N, C), where C is number of classes, and if shape is more than 2D, this\n                is (N, C, D1, D2,..., Dk), k >= 1. C =1 of edge_logit .\n            label (Tensor): Label tensor, the data type is int64. Shape is (N, C), where each\n                value is 0 <= label[i] <= C-1, and if shape is more than 2D, this is\n                (N, C, D1, D2,..., Dk), k >= 1.\n        \"\"\"", "\n", "seg_logit", ",", "edge_logit", "=", "logits", "[", "0", "]", ",", "logits", "[", "1", "]", "\n", "if", "len", "(", "label", ".", "shape", ")", "!=", "len", "(", "seg_logit", ".", "shape", ")", ":", "\n", "            ", "label", "=", "paddle", ".", "unsqueeze", "(", "label", ",", "1", ")", "\n", "", "if", "edge_logit", ".", "shape", "!=", "label", ".", "shape", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of edge_logit should equal to the label, but they are {} != {}'", "\n", ".", "format", "(", "edge_logit", ".", "shape", ",", "label", ".", "shape", ")", ")", "\n", "\n", "", "filler", "=", "paddle", ".", "ones_like", "(", "label", ")", "*", "self", ".", "ignore_index", "\n", "label", "=", "paddle", ".", "where", "(", "edge_logit", ">", "self", ".", "edge_threshold", ",", "label", ",", "filler", ")", "\n", "\n", "seg_logit", "=", "paddle", ".", "transpose", "(", "seg_logit", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "label", "=", "paddle", ".", "transpose", "(", "label", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "loss", "=", "F", ".", "softmax_with_cross_entropy", "(", "\n", "seg_logit", ",", "label", ",", "ignore_index", "=", "self", ".", "ignore_index", ",", "axis", "=", "-", "1", ")", "\n", "\n", "mask", "=", "label", "!=", "self", ".", "ignore_index", "\n", "mask", "=", "paddle", ".", "cast", "(", "mask", ",", "'float32'", ")", "\n", "loss", "=", "loss", "*", "mask", "\n", "avg_loss", "=", "paddle", ".", "mean", "(", "loss", ")", "/", "(", "paddle", ".", "mean", "(", "mask", ")", "+", "self", ".", "EPS", ")", "\n", "if", "paddle", ".", "mean", "(", "mask", ")", "<", "self", ".", "mean_mask", ":", "\n", "            ", "self", ".", "mean_mask", "=", "paddle", ".", "mean", "(", "mask", ")", "\n", "\n", "", "label", ".", "stop_gradient", "=", "True", "\n", "mask", ".", "stop_gradient", "=", "True", "\n", "return", "avg_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.binary_cross_entropy_loss.BCELoss.__init__": [[84, 120], ["paddle.Layer.__init__", "isinstance", "isinstance", "isinstance", "isinstance", "ValueError", "TypeError", "ValueError", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "TypeError", "type", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["def", "__init__", "(", "self", ",", "\n", "weight", "=", "None", ",", "\n", "pos_weight", "=", "None", ",", "\n", "ignore_index", "=", "255", ",", "\n", "edge_label", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "weight", "\n", "self", ".", "pos_weight", "=", "pos_weight", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "edge_label", "=", "edge_label", "\n", "self", ".", "EPS", "=", "1e-10", "\n", "\n", "if", "self", ".", "weight", "is", "not", "None", ":", "\n", "            ", "if", "isinstance", "(", "self", ".", "weight", ",", "str", ")", ":", "\n", "                ", "if", "self", ".", "weight", "!=", "'dynamic'", ":", "\n", "                    ", "raise", "ValueError", "(", "\n", "\"if type of `weight` is str, it should equal to 'dynamic', but it is {}\"", "\n", ".", "format", "(", "self", ".", "weight", ")", ")", "\n", "", "", "elif", "not", "isinstance", "(", "self", ".", "weight", ",", "paddle", ".", "Tensor", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "'The type of `weight` is wrong, it should be Tensor or str, but it is {}'", "\n", ".", "format", "(", "type", "(", "self", ".", "weight", ")", ")", ")", "\n", "\n", "", "", "if", "self", ".", "pos_weight", "is", "not", "None", ":", "\n", "            ", "if", "isinstance", "(", "self", ".", "pos_weight", ",", "str", ")", ":", "\n", "                ", "if", "self", ".", "pos_weight", "!=", "'dynamic'", ":", "\n", "                    ", "raise", "ValueError", "(", "\n", "\"if type of `pos_weight` is str, it should equal to 'dynamic', but it is {}\"", "\n", ".", "format", "(", "self", ".", "pos_weight", ")", ")", "\n", "", "", "elif", "isinstance", "(", "self", ".", "pos_weight", ",", "float", ")", ":", "\n", "                ", "self", ".", "pos_weight", "=", "paddle", ".", "to_tensor", "(", "\n", "self", ".", "pos_weight", ",", "dtype", "=", "'float32'", ")", "\n", "", "else", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "'The type of `pos_weight` is wrong, it should be float or str, but it is {}'", "\n", ".", "format", "(", "type", "(", "self", ".", "pos_weight", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.binary_cross_entropy_loss.BCELoss.forward": [[121, 175], ["paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "isinstance", "isinstance", "label.transpose.transpose.astype", "paddle.nn.functional.binary_cross_entropy_with_logits", "paddle.nn.functional.binary_cross_entropy_with_logits", "paddle.nn.functional.binary_cross_entropy_with_logits", "paddle.nn.functional.binary_cross_entropy_with_logits", "paddle.nn.functional.binary_cross_entropy_with_logits", "paddle.nn.functional.binary_cross_entropy_with_logits", "paddle.nn.functional.binary_cross_entropy_with_logits", "paddle.nn.functional.binary_cross_entropy_with_logits", "paddle.nn.functional.binary_cross_entropy_with_logits", "len", "len", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "label.transpose.transpose.squeeze", "paddle.one_hot", "paddle.one_hot", "paddle.one_hot", "label.transpose.transpose.transpose", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "pos_index.astype", "neg_index.astype", "pos_index.astype", "neg_index.astype", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "logit", ",", "label", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logit (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (N, C), where C is number of classes, and if shape is more than 2D, this\n                is (N, C, D1, D2,..., Dk), k >= 1.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N, C), where each\n                value is 0 or 1, and if shape is more than 2D, this is\n                (N, C, D1, D2,..., Dk), k >= 1.\n        \"\"\"", "\n", "if", "len", "(", "label", ".", "shape", ")", "!=", "len", "(", "logit", ".", "shape", ")", ":", "\n", "            ", "label", "=", "paddle", ".", "unsqueeze", "(", "label", ",", "1", ")", "\n", "", "mask", "=", "(", "label", "!=", "self", ".", "ignore_index", ")", "\n", "mask", "=", "paddle", ".", "cast", "(", "mask", ",", "'float32'", ")", "\n", "# label.shape should equal to the logit.shape", "\n", "if", "label", ".", "shape", "[", "1", "]", "!=", "logit", ".", "shape", "[", "1", "]", ":", "\n", "            ", "label", "=", "label", ".", "squeeze", "(", "1", ")", "\n", "label", "=", "F", ".", "one_hot", "(", "label", ",", "logit", ".", "shape", "[", "1", "]", ")", "\n", "label", "=", "label", ".", "transpose", "(", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "", "if", "isinstance", "(", "self", ".", "weight", ",", "str", ")", ":", "\n", "            ", "pos_index", "=", "(", "label", "==", "1", ")", "\n", "neg_index", "=", "(", "label", "==", "0", ")", "\n", "pos_num", "=", "paddle", ".", "sum", "(", "pos_index", ".", "astype", "(", "'float32'", ")", ")", "\n", "neg_num", "=", "paddle", ".", "sum", "(", "neg_index", ".", "astype", "(", "'float32'", ")", ")", "\n", "sum_num", "=", "pos_num", "+", "neg_num", "\n", "weight_pos", "=", "2", "*", "neg_num", "/", "(", "sum_num", "+", "self", ".", "EPS", ")", "\n", "weight_neg", "=", "2", "*", "pos_num", "/", "(", "sum_num", "+", "self", ".", "EPS", ")", "\n", "weight", "=", "weight_pos", "*", "label", "+", "weight_neg", "*", "(", "1", "-", "label", ")", "\n", "", "else", ":", "\n", "            ", "weight", "=", "self", ".", "weight", "\n", "", "if", "isinstance", "(", "self", ".", "pos_weight", ",", "str", ")", ":", "\n", "            ", "pos_index", "=", "(", "label", "==", "1", ")", "\n", "neg_index", "=", "(", "label", "==", "0", ")", "\n", "pos_num", "=", "paddle", ".", "sum", "(", "pos_index", ".", "astype", "(", "'float32'", ")", ")", "\n", "neg_num", "=", "paddle", ".", "sum", "(", "neg_index", ".", "astype", "(", "'float32'", ")", ")", "\n", "sum_num", "=", "pos_num", "+", "neg_num", "\n", "pos_weight", "=", "2", "*", "neg_num", "/", "(", "sum_num", "+", "self", ".", "EPS", ")", "\n", "", "else", ":", "\n", "            ", "pos_weight", "=", "self", ".", "pos_weight", "\n", "", "label", "=", "label", ".", "astype", "(", "'float32'", ")", "\n", "loss", "=", "paddle", ".", "nn", ".", "functional", ".", "binary_cross_entropy_with_logits", "(", "\n", "logit", ",", "\n", "label", ",", "\n", "weight", "=", "weight", ",", "\n", "reduction", "=", "'none'", ",", "\n", "pos_weight", "=", "pos_weight", ")", "\n", "loss", "=", "loss", "*", "mask", "\n", "loss", "=", "paddle", ".", "mean", "(", "loss", ")", "/", "(", "paddle", ".", "mean", "(", "mask", ")", "+", "self", ".", "EPS", ")", "\n", "label", ".", "stop_gradient", "=", "True", "\n", "mask", ".", "stop_gradient", "=", "True", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss.__init__": [[40, 52], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "temperature", "=", "0.1", ",", "\n", "base_temperature", "=", "0.07", ",", "\n", "ignore_index", "=", "255", ",", "\n", "max_samples", "=", "1024", ",", "\n", "max_views", "=", "100", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "base_temperature", "=", "base_temperature", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "max_samples", "=", "max_samples", "\n", "self", ".", "max_views", "=", "max_views", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss._hard_anchor_sampling": [[53, 133], ["range", "min", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.unique", "paddle.unique", "paddle.unique", "paddle.unique", "paddle.unique", "paddle.unique", "paddle.unique", "paddle.unique", "paddle.unique", "classes.append", "len", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.logical_and().nonzero", "paddle.stack.append", "paddle.stack.append", "paddle.stack.append", "float", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "hard_indices[].reshape", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "paddle.randperm", "easy_indices[].reshape", "UserWarning", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.index_select", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.logical_and", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat.squeeze", "paddle.concat.squeeze", "paddle.concat.squeeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "_hard_anchor_sampling", "(", "self", ",", "X", ",", "y_hat", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            X (Tensor): reshaped feats, shape = [N, H * W, feat_channels]\n            y_hat (Tensor): reshaped label, shape = [N, H * W]\n            y (Tensor): reshaped predict, shape = [N, H * W]\n        \"\"\"", "\n", "batch_size", ",", "feat_dim", "=", "paddle", ".", "shape", "(", "X", ")", "[", "0", "]", ",", "paddle", ".", "shape", "(", "X", ")", "[", "-", "1", "]", "\n", "classes", "=", "[", "]", "\n", "total_classes", "=", "0", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "current_y", "=", "y_hat", "[", "i", "]", "\n", "current_classes", "=", "paddle", ".", "unique", "(", "current_y", ")", "\n", "current_classes", "=", "[", "\n", "x", "for", "x", "in", "current_classes", "if", "x", "!=", "self", ".", "ignore_index", "\n", "]", "\n", "current_classes", "=", "[", "\n", "x", "for", "x", "in", "current_classes", "\n", "if", "(", "current_y", "==", "x", ")", ".", "nonzero", "(", ")", ".", "shape", "[", "0", "]", ">", "self", ".", "max_views", "\n", "]", "\n", "\n", "classes", ".", "append", "(", "current_classes", ")", "\n", "total_classes", "+=", "len", "(", "current_classes", ")", "\n", "\n", "", "n_view", "=", "self", ".", "max_samples", "//", "total_classes", "\n", "n_view", "=", "min", "(", "n_view", ",", "self", ".", "max_views", ")", "\n", "\n", "X_", "=", "[", "]", "\n", "y_", "=", "paddle", ".", "zeros", "(", "[", "total_classes", "]", ",", "dtype", "=", "'float32'", ")", "\n", "\n", "X_ptr", "=", "0", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "this_y_hat", "=", "y_hat", "[", "i", "]", "\n", "current_y", "=", "y", "[", "i", "]", "\n", "current_classes", "=", "classes", "[", "i", "]", "\n", "\n", "for", "cls_id", "in", "current_classes", ":", "\n", "                ", "hard_indices", "=", "paddle", ".", "logical_and", "(", "\n", "(", "this_y_hat", "==", "cls_id", ")", ",", "(", "current_y", "!=", "cls_id", ")", ")", ".", "nonzero", "(", ")", "\n", "easy_indices", "=", "paddle", ".", "logical_and", "(", "\n", "(", "this_y_hat", "==", "cls_id", ")", ",", "(", "current_y", "==", "cls_id", ")", ")", ".", "nonzero", "(", ")", "\n", "\n", "num_hard", "=", "hard_indices", ".", "shape", "[", "0", "]", "\n", "num_easy", "=", "easy_indices", ".", "shape", "[", "0", "]", "\n", "\n", "if", "num_hard", ">=", "n_view", "/", "2", "and", "num_easy", ">=", "n_view", "/", "2", ":", "\n", "                    ", "num_hard_keep", "=", "n_view", "//", "2", "\n", "num_easy_keep", "=", "n_view", "-", "num_hard_keep", "\n", "", "elif", "num_hard", ">=", "n_view", "/", "2", ":", "\n", "                    ", "num_easy_keep", "=", "num_easy", "\n", "num_hard_keep", "=", "n_view", "-", "num_easy_keep", "\n", "", "elif", "num_easy", ">=", "n_view", "/", "2", ":", "\n", "                    ", "num_hard_keep", "=", "num_hard", "\n", "num_easy_keep", "=", "n_view", "-", "num_hard_keep", "\n", "", "else", ":", "\n", "                    ", "num_hard_keep", "=", "num_hard", "\n", "num_easy_keep", "=", "num_easy", "\n", "\n", "", "indices", "=", "None", "\n", "if", "num_hard", ">", "0", ":", "\n", "                    ", "perm", "=", "paddle", ".", "randperm", "(", "num_hard", ")", "\n", "hard_indices", "=", "hard_indices", "[", "perm", "[", ":", "num_hard_keep", "]", "]", ".", "reshape", "(", "\n", "(", "-", "1", ",", "hard_indices", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "indices", "=", "hard_indices", "\n", "", "if", "num_easy", ">", "0", ":", "\n", "                    ", "perm", "=", "paddle", ".", "randperm", "(", "num_easy", ")", "\n", "easy_indices", "=", "easy_indices", "[", "perm", "[", ":", "num_easy_keep", "]", "]", ".", "reshape", "(", "\n", "(", "-", "1", ",", "easy_indices", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "if", "indices", "is", "None", ":", "\n", "                        ", "indices", "=", "easy_indices", "\n", "", "else", ":", "\n", "                        ", "indices", "=", "paddle", ".", "concat", "(", "(", "indices", ",", "easy_indices", ")", ",", "axis", "=", "0", ")", "\n", "", "", "if", "indices", "is", "None", ":", "\n", "                    ", "raise", "UserWarning", "(", "'hard sampling indice error'", ")", "\n", "\n", "", "X_", ".", "append", "(", "paddle", ".", "index_select", "(", "X", "[", "i", ",", ":", ",", ":", "]", ",", "indices", ".", "squeeze", "(", "1", ")", ")", ")", "\n", "y_", "[", "X_ptr", "]", "=", "float", "(", "cls_id", ")", "\n", "X_ptr", "+=", "1", "\n", "", "", "X_", "=", "paddle", ".", "stack", "(", "X_", ",", "axis", "=", "0", ")", "\n", "return", "X_", ",", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss._contrastive": [[134, 177], ["labels_.reshape.reshape.reshape", "paddle.equal().astype", "paddle.equal().astype", "paddle.equal().astype", "paddle.equal().astype", "paddle.equal().astype", "paddle.equal().astype", "paddle.equal().astype", "paddle.equal().astype", "paddle.equal().astype", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "neg_logits.sum.sum.sum", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "loss.mean.mean.mean", "paddle.unbind", "paddle.unbind", "paddle.unbind", "paddle.unbind", "paddle.unbind", "paddle.unbind", "paddle.unbind", "paddle.unbind", "paddle.unbind", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.eye().astype", "paddle.eye().astype", "paddle.eye().astype", "paddle.eye().astype", "paddle.eye().astype", "paddle.eye().astype", "paddle.eye().astype", "paddle.eye().astype", "paddle.eye().astype", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.tile.sum", "paddle.tile.sum", "paddle.tile.sum", "paddle.equal", "paddle.equal", "paddle.equal", "paddle.equal", "paddle.equal", "paddle.equal", "paddle.equal", "paddle.equal", "paddle.equal", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "def", "_contrastive", "(", "self", ",", "feats_", ",", "labels_", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            feats_ (Tensor): sampled pixel, shape = [total_classes, n_view, feat_dim], total_classes = batch_size * single image classes\n            labels_ (Tensor): label, shape = [total_classes]\n        \"\"\"", "\n", "anchor_num", ",", "n_view", "=", "feats_", ".", "shape", "[", "0", "]", ",", "feats_", ".", "shape", "[", "1", "]", "\n", "\n", "labels_", "=", "labels_", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "mask", "=", "paddle", ".", "equal", "(", "labels_", ",", "paddle", ".", "transpose", "(", "labels_", ",", "\n", "[", "1", ",", "0", "]", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "contrast_count", "=", "n_view", "\n", "contrast_feature", "=", "paddle", ".", "concat", "(", "paddle", ".", "unbind", "(", "feats_", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "\n", "anchor_feature", "=", "contrast_feature", "\n", "anchor_count", "=", "contrast_count", "\n", "\n", "anchor_dot_contrast", "=", "paddle", ".", "matmul", "(", "\n", "anchor_feature", ",", "paddle", ".", "transpose", "(", "contrast_feature", ",", "\n", "[", "1", ",", "0", "]", ")", ")", "/", "self", ".", "temperature", "\n", "logits_max", "=", "paddle", ".", "max", "(", "anchor_dot_contrast", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "logits", "=", "anchor_dot_contrast", "-", "logits_max", "\n", "\n", "mask", "=", "paddle", ".", "tile", "(", "mask", ",", "[", "anchor_count", ",", "contrast_count", "]", ")", "\n", "neg_mask", "=", "1", "-", "mask", "\n", "\n", "logits_mask", "=", "1", "-", "paddle", ".", "eye", "(", "mask", ".", "shape", "[", "0", "]", ")", ".", "astype", "(", "'float32'", ")", "\n", "mask", "=", "mask", "*", "logits_mask", "\n", "\n", "neg_logits", "=", "paddle", ".", "exp", "(", "logits", ")", "*", "neg_mask", "\n", "neg_logits", "=", "neg_logits", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "exp_logits", "=", "paddle", ".", "exp", "(", "logits", ")", "\n", "\n", "log_prob", "=", "logits", "-", "paddle", ".", "log", "(", "exp_logits", "+", "neg_logits", ")", "\n", "\n", "mean_log_prob_pos", "=", "(", "mask", "*", "log_prob", ")", ".", "sum", "(", "1", ")", "/", "mask", ".", "sum", "(", "1", ")", "\n", "\n", "loss", "=", "-", "(", "self", ".", "temperature", "/", "self", ".", "base_temperature", ")", "*", "mean_log_prob_pos", "\n", "loss", "=", "loss", ".", "mean", "(", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss.contrast_criterion": [[178, 193], ["labels.reshape.reshape.unsqueeze", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "labels.reshape.reshape.squeeze", "labels.reshape.reshape.reshape", "predict.reshape.reshape.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "feats.reshape.reshape.reshape", "pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss._hard_anchor_sampling", "pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss._contrastive"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss._hard_anchor_sampling", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss._contrastive"], ["", "def", "contrast_criterion", "(", "self", ",", "feats", ",", "labels", "=", "None", ",", "predict", "=", "None", ")", ":", "\n", "        ", "labels", "=", "labels", ".", "unsqueeze", "(", "1", ")", "\n", "labels", "=", "F", ".", "interpolate", "(", "labels", ",", "feats", ".", "shape", "[", "2", ":", "]", ",", "mode", "=", "'nearest'", ")", "\n", "labels", "=", "labels", ".", "squeeze", "(", "1", ")", "\n", "\n", "batch_size", "=", "feats", ".", "shape", "[", "0", "]", "\n", "labels", "=", "labels", ".", "reshape", "(", "(", "batch_size", ",", "-", "1", ")", ")", "\n", "predict", "=", "predict", ".", "reshape", "(", "(", "batch_size", ",", "-", "1", ")", ")", "\n", "feats", "=", "paddle", ".", "transpose", "(", "feats", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "feats", "=", "feats", ".", "reshape", "(", "(", "feats", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "feats", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "\n", "feats_", ",", "labels_", "=", "self", ".", "_hard_anchor_sampling", "(", "feats", ",", "labels", ",", "predict", ")", "\n", "\n", "loss", "=", "self", ".", "_contrastive", "(", "feats_", ",", "labels_", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss.forward": [[194, 204], ["paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss.contrast_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.pixel_contrast_cross_entropy_loss.PixelContrastCrossEntropyLoss.contrast_criterion"], ["", "def", "forward", "(", "self", ",", "preds", ",", "label", ")", ":", "\n", "        ", "assert", "\"seg\"", "in", "preds", ",", "\"The input of PixelContrastCrossEntropyLoss should include 'seg' output, but not found.\"", "\n", "assert", "\"embed\"", "in", "preds", ",", "\"The input of PixelContrastCrossEntropyLoss should include 'embed' output, but not found.\"", "\n", "\n", "seg", "=", "preds", "[", "'seg'", "]", "\n", "embedding", "=", "preds", "[", "'embed'", "]", "\n", "\n", "predict", "=", "paddle", ".", "argmax", "(", "seg", ",", "axis", "=", "1", ")", "\n", "loss", "=", "self", ".", "contrast_criterion", "(", "embedding", ",", "label", ",", "predict", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.ohem_cross_entropy_loss.OhemCrossEntropyLoss.__init__": [[34, 40], ["paddle.nn.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "thresh", "=", "0.7", ",", "min_kept", "=", "10000", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", "OhemCrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "thresh", "=", "thresh", "\n", "self", ".", "min_kept", "=", "min_kept", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "EPS", "=", "1e-5", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.ohem_cross_entropy_loss.OhemCrossEntropyLoss.forward": [[41, 100], ["paddle.unsqueeze.reshape", "paddle.unsqueeze.reshape", "valid_mask.reshape().astype.reshape().astype.sum", "paddle.softmax", "paddle.softmax", "paddle.sum.transpose().reshape", "paddle.sum.transpose().reshape", "paddle.unsqueeze.reshape", "paddle.unsqueeze.reshape", "valid_mask.reshape().astype.reshape().astype.reshape().astype", "paddle.softmax_with_cross_entropy", "paddle.softmax_with_cross_entropy", "len", "len", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.one_hot", "paddle.one_hot", "label_onehot.transpose.transpose.transpose", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.sum.transpose", "paddle.sum.transpose", "paddle.sum.argsort", "paddle.sum.argsort", "int", "valid_mask.reshape().astype.reshape().astype.reshape", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "int.numpy", "min", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logit (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (N, C), where C is number of classes, and if shape is more than 2D, this\n                is (N, C, D1, D2,..., Dk), k >= 1.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N), where each\n                value is 0 <= label[i] <= C-1, and if shape is more than 2D, this is\n                (N, D1, D2,..., Dk), k >= 1.\n        \"\"\"", "\n", "if", "len", "(", "label", ".", "shape", ")", "!=", "len", "(", "logit", ".", "shape", ")", ":", "\n", "            ", "label", "=", "paddle", ".", "unsqueeze", "(", "label", ",", "1", ")", "\n", "\n", "# get the label after ohem", "\n", "", "n", ",", "c", ",", "h", ",", "w", "=", "logit", ".", "shape", "\n", "label", "=", "label", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "valid_mask", "=", "(", "label", "!=", "self", ".", "ignore_index", ")", ".", "astype", "(", "'int64'", ")", "\n", "num_valid", "=", "valid_mask", ".", "sum", "(", ")", "\n", "label", "=", "label", "*", "valid_mask", "\n", "\n", "prob", "=", "F", ".", "softmax", "(", "logit", ",", "axis", "=", "1", ")", "\n", "prob", "=", "prob", ".", "transpose", "(", "(", "1", ",", "0", ",", "2", ",", "3", ")", ")", ".", "reshape", "(", "(", "c", ",", "-", "1", ")", ")", "\n", "\n", "if", "self", ".", "min_kept", "<", "num_valid", "and", "num_valid", ">", "0", ":", "\n", "# let the value which ignored greater than 1", "\n", "            ", "prob", "=", "prob", "+", "(", "1", "-", "valid_mask", ")", "\n", "\n", "# get the prob of relevant label", "\n", "label_onehot", "=", "F", ".", "one_hot", "(", "label", ",", "c", ")", "\n", "label_onehot", "=", "label_onehot", ".", "transpose", "(", "(", "1", ",", "0", ")", ")", "\n", "prob", "=", "prob", "*", "label_onehot", "\n", "prob", "=", "paddle", ".", "sum", "(", "prob", ",", "axis", "=", "0", ")", "\n", "\n", "threshold", "=", "self", ".", "thresh", "\n", "if", "self", ".", "min_kept", ">", "0", ":", "\n", "                ", "index", "=", "prob", ".", "argsort", "(", ")", "\n", "threshold_index", "=", "index", "[", "min", "(", "len", "(", "index", ")", ",", "self", ".", "min_kept", ")", "-", "1", "]", "\n", "threshold_index", "=", "int", "(", "threshold_index", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "if", "prob", "[", "threshold_index", "]", ">", "self", ".", "thresh", ":", "\n", "                    ", "threshold", "=", "prob", "[", "threshold_index", "]", "\n", "", "kept_mask", "=", "(", "prob", "<", "threshold", ")", ".", "astype", "(", "'int64'", ")", "\n", "label", "=", "label", "*", "kept_mask", "\n", "valid_mask", "=", "valid_mask", "*", "kept_mask", "\n", "\n", "# make the invalid region as ignore", "\n", "", "", "label", "=", "label", "+", "(", "1", "-", "valid_mask", ")", "*", "self", ".", "ignore_index", "\n", "\n", "label", "=", "label", ".", "reshape", "(", "(", "n", ",", "1", ",", "h", ",", "w", ")", ")", "\n", "valid_mask", "=", "valid_mask", ".", "reshape", "(", "(", "n", ",", "1", ",", "h", ",", "w", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "loss", "=", "F", ".", "softmax_with_cross_entropy", "(", "\n", "logit", ",", "label", ",", "ignore_index", "=", "self", ".", "ignore_index", ",", "axis", "=", "1", ")", "\n", "loss", "=", "loss", "*", "valid_mask", "\n", "avg_loss", "=", "paddle", ".", "mean", "(", "loss", ")", "/", "(", "paddle", ".", "mean", "(", "valid_mask", ")", "+", "self", ".", "EPS", ")", "\n", "\n", "label", ".", "stop_gradient", "=", "True", "\n", "valid_mask", ".", "stop_gradient", "=", "True", "\n", "return", "avg_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.kl_loss.KLLoss.__init__": [[34, 41], ["paddle.Layer.__init__", "paddle.KLDivLoss", "paddle.KLDivLoss", "paddle.KLDivLoss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "ignore_index", "=", "255", ",", "temperature", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "temperature", "=", "temperature", "\n", "\n", "self", ".", "kl_loss", "=", "nn", ".", "KLDivLoss", "(", "reduction", "=", "\"none\"", ")", "\n", "self", ".", "EPS", "=", "1e-8", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.kl_loss.KLLoss.forward": [[42, 81], ["paddle.log_softmax", "paddle.log_softmax", "paddle.log_softmax", "paddle.softmax", "paddle.softmax", "paddle.softmax", "kl_loss.KLLoss.kl_loss", "ValueError", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logit_1", ",", "logit_2", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Calculate the KL loss. If the label is not None, it considers the\n        ignore_index in label and calculates the masked loss.\n\n        Args:\n            logit_1 (Tensor): Logit tensor, the data type is float32 or float64.\n                The shape is (N, C), where C is number of classes, and if shape is\n                more than 2D, this is (N, C, D1, D2,..., Dk), k >= 1.\n            logit_2 (Tensor): Logit tensor, the data type is float32 or float64.\n                The shape of logit_2 and logit_1 are the same.\n            label (Tensor, optional): Label tensor, the data type is int64.\n                The shape is (N), where each value is 0 <= label[i] <= C-1, and\n                if shape is more than 2D, this is (N, D1, D2,..., Dk), k >= 1.\n        Returns:\n            (Tensor): The average loss.\n        \"\"\"", "\n", "if", "logit_1", ".", "shape", "!=", "logit_2", ".", "shape", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of logit_1 = {} must be the same as the shape of logit_2 = {}.'", "\n", ".", "format", "(", "logit_1", ".", "shape", ",", "logit_2", ".", "shape", ")", ")", "\n", "\n", "", "logit_1", "=", "F", ".", "log_softmax", "(", "logit_1", "/", "self", ".", "temperature", ",", "axis", "=", "1", ")", "\n", "logit_2", "=", "F", ".", "softmax", "(", "logit_2", "/", "self", ".", "temperature", ",", "axis", "=", "1", ")", "\n", "loss", "=", "self", ".", "kl_loss", "(", "logit_1", ",", "logit_2", ")", "\n", "loss", "=", "loss", "*", "self", ".", "temperature", "*", "self", ".", "temperature", "\n", "\n", "if", "label", "is", "None", ":", "\n", "            ", "avg_loss", "=", "paddle", ".", "mean", "(", "loss", ")", "\n", "", "else", ":", "\n", "            ", "mask", "=", "label", "!=", "self", ".", "ignore_index", "\n", "mask", "=", "paddle", ".", "cast", "(", "mask", ",", "'float32'", ")", "\n", "mask", "=", "paddle", ".", "unsqueeze", "(", "mask", ",", "axis", "=", "1", ")", "\n", "label", ".", "stop_gradient", "=", "True", "\n", "mask", ".", "stop_gradient", "=", "True", "\n", "\n", "loss", "=", "loss", "*", "mask", "\n", "avg_loss", "=", "paddle", ".", "mean", "(", "loss", ")", "/", "(", "paddle", ".", "mean", "(", "mask", ")", "+", "self", ".", "EPS", ")", "\n", "", "return", "avg_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.__init__": [[48, 71], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", "=", "19", ",", "\n", "rmi_radius", "=", "3", ",", "\n", "rmi_pool_way", "=", "0", ",", "\n", "rmi_pool_size", "=", "3", ",", "\n", "rmi_pool_stride", "=", "3", ",", "\n", "loss_weight_lambda", "=", "0.5", ",", "\n", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", "RMILoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "assert", "rmi_radius", "in", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", "\n", "self", ".", "rmi_radius", "=", "rmi_radius", "\n", "assert", "rmi_pool_way", "in", "[", "0", ",", "1", ",", "2", ",", "3", "]", "\n", "self", ".", "rmi_pool_way", "=", "rmi_pool_way", "\n", "assert", "rmi_pool_size", "==", "rmi_pool_stride", "\n", "self", ".", "rmi_pool_size", "=", "rmi_pool_size", "\n", "self", ".", "rmi_pool_stride", "=", "rmi_pool_stride", "\n", "self", ".", "weight_lambda", "=", "loss_weight_lambda", "\n", "self", ".", "half_d", "=", "self", ".", "rmi_radius", "*", "self", ".", "rmi_radius", "\n", "self", ".", "d", "=", "2", "*", "self", ".", "half_d", "\n", "self", ".", "kernel_padding", "=", "self", ".", "rmi_pool_size", "//", "2", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.forward": [[72, 84], ["paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "rmi_loss.RMILoss.forward_sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.forward_sigmoid"], ["", "def", "forward", "(", "self", ",", "logits_4D", ",", "labels_4D", ",", "do_rmi", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n        Args:\n            logits (Tensor): Shape is [N, C, H, W], logits at each prediction (between -\\infty and +\\infty).\n            labels (Tensor): Shape is [N, H, W], ground truth labels (between 0 and C - 1).\n        \"\"\"", "\n", "logits_4D", "=", "paddle", ".", "cast", "(", "logits_4D", ",", "dtype", "=", "'float32'", ")", "\n", "labels_4D", "=", "paddle", ".", "cast", "(", "labels_4D", ",", "dtype", "=", "'float32'", ")", "\n", "\n", "loss", "=", "self", ".", "forward_sigmoid", "(", "logits_4D", ",", "labels_4D", ",", "do_rmi", "=", "do_rmi", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.forward_sigmoid": [[85, 116], ["paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "rmi_loss.RMILoss.RMILoss.rmi_lower_bound", "paddle.one_hot", "paddle.one_hot", "paddle.one_hot", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.rmi_lower_bound"], ["", "def", "forward_sigmoid", "(", "self", ",", "logits_4D", ",", "labels_4D", ",", "do_rmi", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Using the sigmiod operation both.\n        Args:\n                logits_4D   :   [N, C, H, W], dtype=float32\n                labels_4D   :   [N, H, W], dtype=long\n                do_rmi          :       bool\n        \"\"\"", "\n", "label_mask_3D", "=", "labels_4D", "!=", "self", ".", "ignore_index", "\n", "valid_onehot_labels_4D", "=", "paddle", ".", "cast", "(", "\n", "F", ".", "one_hot", "(", "\n", "paddle", ".", "cast", "(", "\n", "labels_4D", ",", "dtype", "=", "'int64'", ")", "*", "paddle", ".", "cast", "(", "\n", "label_mask_3D", ",", "dtype", "=", "'int64'", ")", ",", "\n", "num_classes", "=", "self", ".", "num_classes", ")", ",", "\n", "dtype", "=", "'float32'", ")", "\n", "# label_mask_flat = paddle.cast(", "\n", "#     paddle.reshape(label_mask_3D, [-1]), dtype='float32')", "\n", "\n", "valid_onehot_labels_4D", "=", "valid_onehot_labels_4D", "*", "paddle", ".", "unsqueeze", "(", "\n", "label_mask_3D", ",", "axis", "=", "3", ")", "\n", "valid_onehot_labels_4D", ".", "stop_gradient", "=", "True", "\n", "probs_4D", "=", "F", ".", "sigmoid", "(", "logits_4D", ")", "*", "paddle", ".", "unsqueeze", "(", "\n", "label_mask_3D", ",", "axis", "=", "1", ")", "+", "_CLIP_MIN", "\n", "\n", "valid_onehot_labels_4D", "=", "paddle", ".", "transpose", "(", "valid_onehot_labels_4D", ",", "\n", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "valid_onehot_labels_4D", ".", "stop_gradient", "=", "True", "\n", "rmi_loss", "=", "self", ".", "rmi_lower_bound", "(", "valid_onehot_labels_4D", ",", "probs_4D", ")", "\n", "\n", "return", "rmi_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse": [[117, 119], ["paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse"], ["", "def", "inverse", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "paddle", ".", "inverse", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.rmi_lower_bound": [[120, 215], ["print", "rmi_loss.RMILoss.map_get_pairs", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "rmi_loss.RMILoss.inverse", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.divide", "paddle.divide", "paddle.divide", "paddle.divide", "paddle.divide", "paddle.divide", "paddle.divide", "paddle.divide", "paddle.divide", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "rmi_loss.RMILoss.log_det_by_cholesky", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "float", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "NotImplementedError", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.map_get_pairs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.inverse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.log_det_by_cholesky", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "def", "rmi_lower_bound", "(", "self", ",", "labels_4D", ",", "probs_4D", ")", ":", "\n", "        ", "\"\"\"\n        calculate the lower bound of the region mutual information.\n        Args:\n                labels_4D   :   [N, C, H, W], dtype=float32\n                probs_4D    :   [N, C, H, W], dtype=float32\n        \"\"\"", "\n", "assert", "labels_4D", ".", "shape", "==", "probs_4D", ".", "shape", ",", "print", "(", "\n", "'shapes'", ",", "labels_4D", ".", "shape", ",", "probs_4D", ".", "shape", ")", "\n", "\n", "p", ",", "s", "=", "self", ".", "rmi_pool_size", ",", "self", ".", "rmi_pool_stride", "\n", "if", "self", ".", "rmi_pool_stride", ">", "1", ":", "\n", "            ", "if", "self", ".", "rmi_pool_way", "==", "0", ":", "\n", "                ", "labels_4D", "=", "F", ".", "max_pool2d", "(", "\n", "labels_4D", ",", "\n", "kernel_size", "=", "p", ",", "\n", "stride", "=", "s", ",", "\n", "padding", "=", "self", ".", "kernel_padding", ")", "\n", "probs_4D", "=", "F", ".", "max_pool2d", "(", "\n", "probs_4D", ",", "\n", "kernel_size", "=", "p", ",", "\n", "stride", "=", "s", ",", "\n", "padding", "=", "self", ".", "kernel_padding", ")", "\n", "", "elif", "self", ".", "rmi_pool_way", "==", "1", ":", "\n", "                ", "labels_4D", "=", "F", ".", "avg_pool2d", "(", "\n", "labels_4D", ",", "\n", "kernel_size", "=", "p", ",", "\n", "stride", "=", "s", ",", "\n", "padding", "=", "self", ".", "kernel_padding", ")", "\n", "probs_4D", "=", "F", ".", "avg_pool2d", "(", "\n", "probs_4D", ",", "\n", "kernel_size", "=", "p", ",", "\n", "stride", "=", "s", ",", "\n", "padding", "=", "self", ".", "kernel_padding", ")", "\n", "", "elif", "self", ".", "rmi_pool_way", "==", "2", ":", "\n", "                ", "shape", "=", "labels_4D", ".", "shape", "\n", "new_h", ",", "new_w", "=", "shape", "[", "2", "]", "//", "s", ",", "shape", "[", "3", "]", "//", "s", "\n", "labels_4D", "=", "F", ".", "interpolate", "(", "\n", "labels_4D", ",", "size", "=", "(", "new_h", ",", "new_w", ")", ",", "mode", "=", "'nearest'", ")", "\n", "probs_4D", "=", "F", ".", "interpolate", "(", "\n", "probs_4D", ",", "\n", "size", "=", "(", "new_h", ",", "new_w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", "\"Pool way of RMI is not defined!\"", ")", "\n", "\n", "", "", "label_shape", "=", "labels_4D", ".", "shape", "\n", "n", ",", "c", "=", "label_shape", "[", "0", "]", ",", "label_shape", "[", "1", "]", "\n", "\n", "la_vectors", ",", "pr_vectors", "=", "self", ".", "map_get_pairs", "(", "\n", "labels_4D", ",", "probs_4D", ",", "radius", "=", "self", ".", "rmi_radius", ",", "is_combine", "=", "0", ")", "\n", "\n", "la_vectors", "=", "paddle", ".", "reshape", "(", "la_vectors", ",", "[", "n", ",", "c", ",", "self", ".", "half_d", ",", "-", "1", "]", ")", "\n", "la_vectors", "=", "paddle", ".", "cast", "(", "la_vectors", ",", "dtype", "=", "'float64'", ")", "\n", "la_vectors", ".", "stop_gradient", "=", "True", "\n", "\n", "pr_vectors", "=", "paddle", ".", "reshape", "(", "pr_vectors", ",", "[", "n", ",", "c", ",", "self", ".", "half_d", ",", "-", "1", "]", ")", "\n", "pr_vectors", "=", "paddle", ".", "cast", "(", "pr_vectors", ",", "dtype", "=", "'float64'", ")", "\n", "\n", "diag_matrix", "=", "paddle", ".", "unsqueeze", "(", "\n", "paddle", ".", "unsqueeze", "(", "\n", "paddle", ".", "eye", "(", "self", ".", "half_d", ")", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "la_vectors", "=", "la_vectors", "-", "paddle", ".", "mean", "(", "la_vectors", ",", "axis", "=", "3", ",", "keepdim", "=", "True", ")", "\n", "\n", "la_cov", "=", "paddle", ".", "matmul", "(", "la_vectors", ",", "\n", "paddle", ".", "transpose", "(", "la_vectors", ",", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", ")", "\n", "pr_vectors", "=", "pr_vectors", "-", "paddle", ".", "mean", "(", "pr_vectors", ",", "axis", "=", "3", ",", "keepdim", "=", "True", ")", "\n", "pr_cov", "=", "paddle", ".", "matmul", "(", "pr_vectors", ",", "\n", "paddle", ".", "transpose", "(", "pr_vectors", ",", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", ")", "\n", "\n", "pr_cov_inv", "=", "self", ".", "inverse", "(", "pr_cov", "+", "paddle", ".", "cast", "(", "\n", "diag_matrix", ",", "dtype", "=", "'float64'", ")", "*", "_POS_ALPHA", ")", "\n", "\n", "la_pr_cov", "=", "paddle", ".", "matmul", "(", "la_vectors", ",", "\n", "paddle", ".", "transpose", "(", "pr_vectors", ",", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", ")", "\n", "\n", "appro_var", "=", "la_cov", "-", "paddle", ".", "matmul", "(", "\n", "paddle", ".", "matmul", "(", "la_pr_cov", ",", "pr_cov_inv", ")", ",", "\n", "paddle", ".", "transpose", "(", "la_pr_cov", ",", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", ")", "\n", "\n", "rmi_now", "=", "0.5", "*", "self", ".", "log_det_by_cholesky", "(", "appro_var", "+", "paddle", ".", "cast", "(", "\n", "diag_matrix", ",", "dtype", "=", "'float64'", ")", "*", "_POS_ALPHA", ")", "\n", "\n", "rmi_per_class", "=", "paddle", ".", "cast", "(", "\n", "paddle", ".", "mean", "(", "\n", "paddle", ".", "reshape", "(", "rmi_now", ",", "[", "-", "1", ",", "self", ".", "num_classes", "]", ")", ",", "axis", "=", "0", ")", ",", "\n", "dtype", "=", "'float32'", ")", "\n", "rmi_per_class", "=", "paddle", ".", "divide", "(", "rmi_per_class", ",", "\n", "paddle", ".", "to_tensor", "(", "float", "(", "self", ".", "half_d", ")", ")", ")", "\n", "\n", "rmi_loss", "=", "paddle", ".", "sum", "(", "rmi_per_class", ")", "if", "_IS_SUM", "else", "paddle", ".", "mean", "(", "\n", "rmi_per_class", ")", "\n", "\n", "return", "rmi_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.log_det_by_cholesky": [[216, 228], ["paddle.cholesky", "paddle.cholesky", "paddle.cholesky", "paddle.cholesky", "paddle.cholesky", "paddle.cholesky", "paddle.cholesky", "paddle.cholesky", "paddle.cholesky", "paddle.diagonal", "paddle.diagonal", "paddle.diagonal", "paddle.diagonal", "paddle.diagonal", "paddle.diagonal", "paddle.diagonal", "paddle.diagonal", "paddle.diagonal", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "def", "log_det_by_cholesky", "(", "self", ",", "matrix", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            matrix: matrix must be a positive define matrix.\n                    shape [N, C, D, D].\n        \"\"\"", "\n", "\n", "chol", "=", "paddle", ".", "cholesky", "(", "matrix", ")", "\n", "diag", "=", "paddle", ".", "diagonal", "(", "chol", ",", "offset", "=", "0", ",", "axis1", "=", "-", "2", ",", "axis2", "=", "-", "1", ")", "\n", "chol", "=", "paddle", ".", "log", "(", "diag", "+", "1e-8", ")", "\n", "\n", "return", "2.0", "*", "paddle", ".", "sum", "(", "chol", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.rmi_loss.RMILoss.map_get_pairs": [[229, 259], ["range", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "la_ns.append", "pr_ns.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "map_get_pairs", "(", "self", ",", "labels_4D", ",", "probs_4D", ",", "radius", "=", "3", ",", "is_combine", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            labels_4D   :   labels, shape [N, C, H, W]\n            probs_4D    :   probabilities, shape [N, C, H, W]\n            radius      :   the square radius\n        Return:\n            tensor with shape [N, C, radius * radius, H - (radius - 1), W - (radius - 1)]\n        \"\"\"", "\n", "\n", "label_shape", "=", "labels_4D", ".", "shape", "\n", "h", ",", "w", "=", "label_shape", "[", "2", "]", ",", "label_shape", "[", "3", "]", "\n", "new_h", ",", "new_w", "=", "h", "-", "(", "radius", "-", "1", ")", ",", "w", "-", "(", "radius", "-", "1", ")", "\n", "la_ns", "=", "[", "]", "\n", "pr_ns", "=", "[", "]", "\n", "for", "y", "in", "range", "(", "0", ",", "radius", ",", "1", ")", ":", "\n", "            ", "for", "x", "in", "range", "(", "0", ",", "radius", ",", "1", ")", ":", "\n", "                ", "la_now", "=", "labels_4D", "[", ":", ",", ":", ",", "y", ":", "y", "+", "new_h", ",", "x", ":", "x", "+", "new_w", "]", "\n", "pr_now", "=", "probs_4D", "[", ":", ",", ":", ",", "y", ":", "y", "+", "new_h", ",", "x", ":", "x", "+", "new_w", "]", "\n", "la_ns", ".", "append", "(", "la_now", ")", "\n", "pr_ns", ".", "append", "(", "pr_now", ")", "\n", "\n", "", "", "if", "is_combine", ":", "\n", "            ", "pair_ns", "=", "la_ns", "+", "pr_ns", "\n", "p_vectors", "=", "paddle", ".", "stack", "(", "pair_ns", ",", "axis", "=", "2", ")", "\n", "return", "p_vectors", "\n", "", "else", ":", "\n", "            ", "la_vectors", "=", "paddle", ".", "stack", "(", "la_ns", ",", "axis", "=", "2", ")", "\n", "pr_vectors", "=", "paddle", ".", "stack", "(", "pr_ns", ",", "axis", "=", "2", ")", "\n", "return", "la_vectors", ",", "pr_vectors", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.LovaszSoftmaxLoss.__init__": [[38, 42], ["paddle.nn.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "ignore_index", "=", "255", ",", "classes", "=", "'present'", ")", ":", "\n", "        ", "super", "(", "LovaszSoftmaxLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "classes", "=", "classes", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.LovaszSoftmaxLoss.forward": [[43, 55], ["paddle.softmax", "paddle.softmax", "lovasz_loss.flatten_probas", "lovasz_loss.lovasz_softmax_flat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.flatten_probas", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.lovasz_softmax_flat"], ["", "def", "forward", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "r\"\"\"\n        Forward computation.\n\n        Args:\n            logits (Tensor): Shape is [N, C, H, W], logits at each prediction (between -\\infty and +\\infty).\n            labels (Tensor): Shape is [N, 1, H, W] or [N, H, W], ground truth labels (between 0 and C - 1).\n        \"\"\"", "\n", "probas", "=", "F", ".", "softmax", "(", "logits", ",", "axis", "=", "1", ")", "\n", "vprobas", ",", "vlabels", "=", "flatten_probas", "(", "probas", ",", "labels", ",", "self", ".", "ignore_index", ")", "\n", "loss", "=", "lovasz_softmax_flat", "(", "vprobas", ",", "vlabels", ",", "classes", "=", "self", ".", "classes", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.LovaszHingeLoss.__init__": [[66, 69], ["paddle.nn.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", "LovaszHingeLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.LovaszHingeLoss.forward": [[70, 83], ["lovasz_loss.lovasz_hinge_flat", "lovasz_loss.binary_channel_to_unary", "lovasz_loss.flatten_binary_scores"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.lovasz_hinge_flat", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.binary_channel_to_unary", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.flatten_binary_scores"], ["", "def", "forward", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "r\"\"\"\n        Forward computation.\n\n        Args:\n            logits (Tensor): Shape is [N, 1, H, W] or [N, 2, H, W], logits at each pixel (between -\\infty and +\\infty).\n            labels (Tensor): Shape is [N, 1, H, W] or [N, H, W], binary ground truth masks (0 or 1).\n        \"\"\"", "\n", "if", "logits", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "            ", "logits", "=", "binary_channel_to_unary", "(", "logits", ")", "\n", "", "loss", "=", "lovasz_hinge_flat", "(", "\n", "*", "flatten_binary_scores", "(", "logits", ",", "labels", ",", "self", ".", "ignore_index", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.lovasz_grad": [[85, 100], ["paddle.sum", "paddle.sum", "len", "paddle.cumsum", "paddle.cumsum", "paddle.cumsum", "paddle.cumsum", "intersection.cast", "union.cast"], "function", ["None"], ["", "", "def", "lovasz_grad", "(", "gt_sorted", ")", ":", "\n", "    ", "\"\"\"\n    Computes gradient of the Lovasz extension w.r.t sorted errors.\n    See Alg. 1 in paper.\n    \"\"\"", "\n", "gts", "=", "paddle", ".", "sum", "(", "gt_sorted", ")", "\n", "p", "=", "len", "(", "gt_sorted", ")", "\n", "\n", "intersection", "=", "gts", "-", "paddle", ".", "cumsum", "(", "gt_sorted", ",", "axis", "=", "0", ")", "\n", "union", "=", "gts", "+", "paddle", ".", "cumsum", "(", "1", "-", "gt_sorted", ",", "axis", "=", "0", ")", "\n", "jaccard", "=", "1.0", "-", "intersection", ".", "cast", "(", "'float32'", ")", "/", "union", ".", "cast", "(", "'float32'", ")", "\n", "\n", "if", "p", ">", "1", ":", "# cover 1-pixel case", "\n", "        ", "jaccard", "[", "1", ":", "p", "]", "=", "jaccard", "[", "1", ":", "p", "]", "-", "jaccard", "[", "0", ":", "-", "1", "]", "\n", "", "return", "jaccard", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.binary_channel_to_unary": [[102, 111], ["paddle.softmax", "paddle.log", "paddle.log", "logits.unsqueeze.unsqueeze"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.log"], ["", "def", "binary_channel_to_unary", "(", "logits", ",", "eps", "=", "1e-9", ")", ":", "\n", "    ", "\"\"\"\n    Converts binary channel logits to unary channel logits for lovasz hinge loss.\n    \"\"\"", "\n", "probas", "=", "F", ".", "softmax", "(", "logits", ",", "axis", "=", "1", ")", "\n", "probas", "=", "probas", "[", ":", ",", "1", ",", ":", ",", ":", "]", "\n", "logits", "=", "paddle", ".", "log", "(", "probas", "+", "eps", "/", "(", "1", "-", "probas", "+", "eps", ")", ")", "\n", "logits", "=", "logits", ".", "unsqueeze", "(", "1", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.lovasz_hinge_flat": [[113, 135], ["paddle.fluid.core.ops.argsort", "paddle.fluid.core.ops.argsort", "paddle.gather", "paddle.gather", "lovasz_loss.lovasz_grad", "paddle.sum", "paddle.sum", "len", "logits.sum", "paddle.relu"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.lovasz_grad"], ["", "def", "lovasz_hinge_flat", "(", "logits", ",", "labels", ")", ":", "\n", "    ", "r\"\"\"\n    Binary Lovasz hinge loss.\n\n    Args:\n        logits (Tensor): Shape is [P], logits at each prediction (between -\\infty and +\\infty).\n        labels (Tensor): Shape is [P], binary ground truth labels (0 or 1).\n    \"\"\"", "\n", "if", "len", "(", "labels", ")", "==", "0", ":", "\n", "# only void pixels, the gradients should be 0", "\n", "        ", "return", "logits", ".", "sum", "(", ")", "*", "0.", "\n", "", "signs", "=", "2.", "*", "labels", "-", "1.", "\n", "signs", ".", "stop_gradient", "=", "True", "\n", "errors", "=", "1.", "-", "logits", "*", "signs", "\n", "errors_sorted", ",", "perm", "=", "paddle", ".", "fluid", ".", "core", ".", "ops", ".", "argsort", "(", "errors", ",", "'axis'", ",", "0", ",", "\n", "'descending'", ",", "True", ")", "\n", "errors_sorted", ".", "stop_gradient", "=", "False", "\n", "gt_sorted", "=", "paddle", ".", "gather", "(", "labels", ",", "perm", ")", "\n", "grad", "=", "lovasz_grad", "(", "gt_sorted", ")", "\n", "grad", ".", "stop_gradient", "=", "True", "\n", "loss", "=", "paddle", ".", "sum", "(", "F", ".", "relu", "(", "errors_sorted", ")", "*", "grad", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.flatten_binary_scores": [[137, 154], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.nonzero", "paddle.nonzero", "paddle.gather", "paddle.gather", "paddle.gather", "paddle.gather"], "function", ["None"], ["", "def", "flatten_binary_scores", "(", "scores", ",", "labels", ",", "ignore", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Flattens predictions in the batch (binary case).\n    Remove labels according to 'ignore'.\n    \"\"\"", "\n", "scores", "=", "paddle", ".", "reshape", "(", "scores", ",", "[", "-", "1", "]", ")", "\n", "labels", "=", "paddle", ".", "reshape", "(", "labels", ",", "[", "-", "1", "]", ")", "\n", "labels", ".", "stop_gradient", "=", "True", "\n", "if", "ignore", "is", "None", ":", "\n", "        ", "return", "scores", ",", "labels", "\n", "", "valid", "=", "labels", "!=", "ignore", "\n", "valid_mask", "=", "paddle", ".", "reshape", "(", "valid", ",", "(", "-", "1", ",", "1", ")", ")", "\n", "indexs", "=", "paddle", ".", "nonzero", "(", "valid_mask", ")", "\n", "indexs", ".", "stop_gradient", "=", "True", "\n", "vscores", "=", "paddle", ".", "gather", "(", "scores", ",", "indexs", "[", ":", ",", "0", "]", ")", "\n", "vlabels", "=", "paddle", ".", "gather", "(", "labels", ",", "indexs", "[", ":", ",", "0", "]", ")", "\n", "return", "vscores", ",", "vlabels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.lovasz_softmax_flat": [[156, 202], ["paddle.stack", "paddle.stack", "paddle.mean", "paddle.mean", "probas.numel", "list", "paddle.cast", "paddle.cast", "paddle.abs", "paddle.abs", "paddle.fluid.core.ops.argsort", "paddle.fluid.core.ops.argsort", "paddle.gather", "paddle.gather", "lovasz_loss.lovasz_grad", "paddle.sum", "paddle.sum", "losses.append", "len", "range", "paddle.cast.sum", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.lovasz_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "lovasz_softmax_flat", "(", "probas", ",", "labels", ",", "classes", "=", "'present'", ")", ":", "\n", "    ", "\"\"\"\n    Multi-class Lovasz-Softmax loss.\n\n    Args:\n        probas (Tensor): Shape is [P, C], class probabilities at each prediction (between 0 and 1).\n        labels (Tensor): Shape is [P], ground truth labels (between 0 and C - 1).\n        classes (str|list): 'all' for all, 'present' for classes present in labels, or a list of classes to average.\n    \"\"\"", "\n", "if", "probas", ".", "numel", "(", ")", "==", "0", ":", "\n", "# only void pixels, the gradients should be 0", "\n", "        ", "return", "probas", "*", "0.", "\n", "", "C", "=", "probas", ".", "shape", "[", "1", "]", "\n", "losses", "=", "[", "]", "\n", "classes_to_sum", "=", "list", "(", "range", "(", "C", ")", ")", "if", "classes", "in", "[", "'all'", ",", "'present'", "\n", "]", "else", "classes", "\n", "for", "c", "in", "classes_to_sum", ":", "\n", "        ", "fg", "=", "paddle", ".", "cast", "(", "labels", "==", "c", ",", "probas", ".", "dtype", ")", "# foreground for class c", "\n", "if", "classes", "==", "'present'", "and", "fg", ".", "sum", "(", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "fg", ".", "stop_gradient", "=", "True", "\n", "if", "C", "==", "1", ":", "\n", "            ", "if", "len", "(", "classes_to_sum", ")", ">", "1", ":", "\n", "                ", "raise", "ValueError", "(", "'Sigmoid output possible only with 1 class'", ")", "\n", "", "class_pred", "=", "probas", "[", ":", ",", "0", "]", "\n", "", "else", ":", "\n", "            ", "class_pred", "=", "probas", "[", ":", ",", "c", "]", "\n", "", "errors", "=", "paddle", ".", "abs", "(", "fg", "-", "class_pred", ")", "\n", "errors_sorted", ",", "perm", "=", "paddle", ".", "fluid", ".", "core", ".", "ops", ".", "argsort", "(", "errors", ",", "'axis'", ",", "0", ",", "\n", "'descending'", ",", "True", ")", "\n", "errors_sorted", ".", "stop_gradient", "=", "False", "\n", "\n", "fg_sorted", "=", "paddle", ".", "gather", "(", "fg", ",", "perm", ")", "\n", "fg_sorted", ".", "stop_gradient", "=", "True", "\n", "\n", "grad", "=", "lovasz_grad", "(", "fg_sorted", ")", "\n", "grad", ".", "stop_gradient", "=", "True", "\n", "loss", "=", "paddle", ".", "sum", "(", "errors_sorted", "*", "grad", ")", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "\n", "", "if", "len", "(", "classes_to_sum", ")", "==", "1", ":", "\n", "        ", "return", "losses", "[", "0", "]", "\n", "\n", "", "losses_tensor", "=", "paddle", ".", "stack", "(", "losses", ")", "\n", "mean_loss", "=", "paddle", ".", "mean", "(", "losses_tensor", ")", "\n", "return", "mean_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lovasz_loss.flatten_probas": [[204, 223], ["paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.nonzero", "paddle.nonzero", "paddle.gather", "paddle.gather", "paddle.gather", "paddle.gather", "len", "paddle.unsqueeze", "paddle.unsqueeze"], "function", ["None"], ["", "def", "flatten_probas", "(", "probas", ",", "labels", ",", "ignore", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Flattens predictions in the batch.\n    \"\"\"", "\n", "if", "len", "(", "probas", ".", "shape", ")", "==", "3", ":", "\n", "        ", "probas", "=", "paddle", ".", "unsqueeze", "(", "probas", ",", "axis", "=", "1", ")", "\n", "", "C", "=", "probas", ".", "shape", "[", "1", "]", "\n", "probas", "=", "paddle", ".", "transpose", "(", "probas", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "probas", "=", "paddle", ".", "reshape", "(", "probas", ",", "[", "-", "1", ",", "C", "]", ")", "\n", "labels", "=", "paddle", ".", "reshape", "(", "labels", ",", "[", "-", "1", "]", ")", "\n", "if", "ignore", "is", "None", ":", "\n", "        ", "return", "probas", ",", "labels", "\n", "", "valid", "=", "labels", "!=", "ignore", "\n", "valid_mask", "=", "paddle", ".", "reshape", "(", "valid", ",", "[", "-", "1", ",", "1", "]", ")", "\n", "indexs", "=", "paddle", ".", "nonzero", "(", "valid_mask", ")", "\n", "indexs", ".", "stop_gradient", "=", "True", "\n", "vprobas", "=", "paddle", ".", "gather", "(", "probas", ",", "indexs", "[", ":", ",", "0", "]", ")", "\n", "vlabels", "=", "paddle", ".", "gather", "(", "labels", ",", "indexs", "[", ":", ",", "0", "]", ")", "\n", "return", "vprobas", ",", "vlabels", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.l1_loss.L1Loss.__init__": [[75, 77], ["paddle.nn.L1Loss.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "reduction", "=", "'mean'", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "reduction", "=", "reduction", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.semantic_connectivity_loss.SemanticConnectivityLoss.__init__": [[41, 58], ["paddle.nn.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "ignore_index", "=", "255", ",", "max_pred_num_conn", "=", "10", ",", "use_argmax", "=", "True", ")", ":", "\n", "        ", "'''\n        Args:\n            ignore_index (int): Specify a pixel value to be ignored in the annotated image and does not contribute to\n                the input gradient.When there are pixels that cannot be marked (or difficult to be marked) in the marked\n                image, they can be marked as a specific gray value. When calculating the loss value, the pixel corresponding\n                to the original image will not be used as the independent variable of the loss function. *Default:``255``*\n            max_pred_num_conn (int): Maximum number of predicted connected components. At the beginning of training,\n                there will be a large number of connected components, and the calculation is very time-consuming.\n                Therefore, it is necessary to limit the maximum number of predicted connected components,\n                and the rest will not participate in the calculation.\n            use_argmax (bool): Whether to use argmax for logits.\n        '''", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "max_pred_num_conn", "=", "max_pred_num_conn", "\n", "self", ".", "use_argmax", "=", "use_argmax", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.semantic_connectivity_loss.SemanticConnectivityLoss.forward": [[59, 124], ["paddle.to_tensor.astype().numpy", "paddle.to_tensor.astype().numpy", "labels.astype().numpy", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "range", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "numpy.unique", "paddle.to_tensor.astype", "paddle.to_tensor.astype", "labels.astype", "cv2.connectedComponents", "cv2.connectedComponents", "preds_np_class.astype", "labels_np_class.astype", "min", "semantic_connectivity_loss.compute_class_connectiveity", "paddle.bitwise_not", "paddle.bitwise_not", "paddle.bitwise_not", "paddle.bitwise_not", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.sum().astype", "paddle.sum().astype", "paddle.sum().astype", "paddle.sum().astype", "int", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "missed_detect.numel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.semantic_connectivity_loss.compute_class_connectiveity", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "def", "forward", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "'''\n        Args:\n            logits (Tensor): [N, C, H, W]\n            lables (Tensor): [N, H, W]\n        '''", "\n", "preds", "=", "paddle", ".", "argmax", "(", "logits", ",", "axis", "=", "1", ")", "if", "self", ".", "use_argmax", "else", "logits", "\n", "preds_np", "=", "preds", ".", "astype", "(", "'uint8'", ")", ".", "numpy", "(", ")", "\n", "labels_np", "=", "labels", ".", "astype", "(", "'uint8'", ")", ".", "numpy", "(", ")", "\n", "preds", "=", "paddle", ".", "to_tensor", "(", "preds", ",", "'float32'", ",", "stop_gradient", "=", "False", ")", "\n", "multi_class_sc_loss", "=", "paddle", ".", "zeros", "(", "[", "preds", ".", "shape", "[", "0", "]", "]", ")", "\n", "zero", "=", "paddle", ".", "to_tensor", "(", "[", "0.", "]", ")", "# for accelerating", "\n", "\n", "# Traverse each image", "\n", "for", "i", "in", "range", "(", "preds", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "sc_loss", "=", "0", "\n", "class_num", "=", "0", "\n", "\n", "pred_i", "=", "preds", "[", "i", "]", "\n", "preds_np_i", "=", "preds_np", "[", "i", "]", "\n", "labels_np_i", "=", "labels_np", "[", "i", "]", "\n", "\n", "# Traverse each class", "\n", "for", "class_", "in", "np", ".", "unique", "(", "labels_np_i", ")", ":", "\n", "                ", "if", "class_", "==", "self", ".", "ignore_index", ":", "\n", "                    ", "continue", "\n", "", "class_num", "+=", "1", "\n", "\n", "# Connected Components Calculation", "\n", "preds_np_class", "=", "preds_np_i", "==", "class_", "\n", "labels_np_class", "=", "labels_np_i", "==", "class_", "\n", "pred_num_conn", ",", "pred_conn", "=", "cv2", ".", "connectedComponents", "(", "\n", "preds_np_class", ".", "astype", "(", "np", ".", "uint8", ")", ")", "# pred_conn.shape = [H,W]", "\n", "label_num_conn", ",", "label_conn", "=", "cv2", ".", "connectedComponents", "(", "\n", "labels_np_class", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "origin_pred_num_conn", "=", "pred_num_conn", "\n", "if", "pred_num_conn", ">", "2", "*", "label_num_conn", ":", "\n", "                    ", "pred_num_conn", "=", "min", "(", "pred_num_conn", ",", "self", ".", "max_pred_num_conn", ")", "\n", "", "real_pred_num", "=", "pred_num_conn", "-", "1", "\n", "real_label_num", "=", "label_num_conn", "-", "1", "\n", "\n", "# Connected Components Matching and SC Loss Calculation", "\n", "if", "real_label_num", ">", "0", "and", "real_pred_num", ">", "0", ":", "\n", "                    ", "img_connectivity", "=", "compute_class_connectiveity", "(", "\n", "pred_conn", ",", "label_conn", ",", "pred_num_conn", ",", "\n", "origin_pred_num_conn", ",", "label_num_conn", ",", "pred_i", ",", "\n", "real_label_num", ",", "real_pred_num", ",", "zero", ")", "\n", "sc_loss", "+=", "1", "-", "img_connectivity", "\n", "", "elif", "real_label_num", "==", "0", "and", "real_pred_num", "==", "0", ":", "\n", "# if no connected component, SC Loss = 0, so pass", "\n", "                    ", "pass", "\n", "", "else", ":", "\n", "                    ", "preds_class", "=", "pred_i", "==", "int", "(", "class_", ")", "\n", "not_preds_class", "=", "paddle", ".", "bitwise_not", "(", "preds_class", ")", "\n", "labels_class", "=", "paddle", ".", "to_tensor", "(", "labels_np_class", ")", "\n", "missed_detect", "=", "labels_class", "*", "not_preds_class", "\n", "missed_detect_area", "=", "paddle", ".", "sum", "(", "missed_detect", ")", ".", "astype", "(", "\n", "'float32'", ")", "\n", "sc_loss", "+=", "missed_detect_area", "/", "missed_detect", ".", "numel", "(", ")", "+", "1", "\n", "\n", "", "", "multi_class_sc_loss", "[", "\n", "i", "]", "=", "sc_loss", "/", "class_num", "if", "class_num", "!=", "0", "else", "0", "\n", "", "multi_class_sc_loss", "=", "paddle", ".", "mean", "(", "multi_class_sc_loss", ")", "\n", "return", "multi_class_sc_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.semantic_connectivity_loss.compute_class_connectiveity": [[126, 164], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.one_hot", "paddle.one_hot", "paddle.zeros", "paddle.zeros", "paddle.to_tensor", "paddle.to_tensor", "range", "paddle.sum", "paddle.sum", "range", "paddle.to_tensor", "paddle.to_tensor", "range", "semantic_connectivity_loss.compute_iou"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.semantic_connectivity_loss.compute_iou"], ["", "", "def", "compute_class_connectiveity", "(", "pred_conn", ",", "label_conn", ",", "pred_num_conn", ",", "\n", "origin_pred_num_conn", ",", "label_num_conn", ",", "pred", ",", "\n", "real_label_num", ",", "real_pred_num", ",", "zero", ")", ":", "\n", "\n", "    ", "pred_conn", "=", "paddle", ".", "to_tensor", "(", "pred_conn", ")", "\n", "label_conn", "=", "paddle", ".", "to_tensor", "(", "label_conn", ")", "\n", "pred_conn", "=", "F", ".", "one_hot", "(", "pred_conn", ",", "origin_pred_num_conn", ")", "\n", "label_conn", "=", "F", ".", "one_hot", "(", "label_conn", ",", "label_num_conn", ")", "\n", "\n", "ious", "=", "paddle", ".", "zeros", "(", "(", "real_label_num", ",", "real_pred_num", ")", ")", "\n", "pair_conn_sum", "=", "paddle", ".", "to_tensor", "(", "[", "0.", "]", ",", "stop_gradient", "=", "False", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "label_num_conn", ")", ":", "\n", "        ", "label_i", "=", "label_conn", "[", ":", ",", ":", ",", "i", "]", "\n", "\n", "pair_conn", "=", "paddle", ".", "to_tensor", "(", "[", "0.", "]", ",", "stop_gradient", "=", "False", ")", "\n", "pair_conn_num", "=", "0", "\n", "\n", "for", "j", "in", "range", "(", "1", ",", "pred_num_conn", ")", ":", "\n", "            ", "pred_j_mask", "=", "pred_conn", "[", ":", ",", ":", ",", "j", "]", "\n", "pred_j", "=", "pred_j_mask", "*", "pred", "\n", "\n", "iou", "=", "compute_iou", "(", "pred_j", ",", "label_i", ",", "zero", ")", "\n", "ious", "[", "i", "-", "1", ",", "j", "-", "1", "]", "=", "iou", "\n", "if", "iou", "!=", "0", ":", "\n", "                ", "pair_conn", "+=", "iou", "\n", "pair_conn_num", "+=", "1", "\n", "\n", "", "", "if", "pair_conn_num", "!=", "0", ":", "\n", "            ", "pair_conn_sum", "+=", "pair_conn", "/", "pair_conn_num", "\n", "", "", "lone_pred_num", "=", "0", "\n", "\n", "pred_sum", "=", "paddle", ".", "sum", "(", "ious", ",", "axis", "=", "0", ")", "\n", "for", "m", "in", "range", "(", "0", ",", "real_pred_num", ")", ":", "\n", "        ", "if", "pred_sum", "[", "m", "]", "==", "0", ":", "\n", "            ", "lone_pred_num", "+=", "1", "\n", "", "", "img_connectivity", "=", "pair_conn_sum", "/", "(", "real_label_num", "+", "lone_pred_num", ")", "\n", "return", "img_connectivity", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.semantic_connectivity_loss.compute_iou": [[166, 178], ["paddle.sum", "paddle.sum", "paddle.equal", "paddle.equal", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.equal", "paddle.equal"], "function", ["None"], ["", "def", "compute_iou", "(", "pred_i", ",", "label_i", ",", "zero", ")", ":", "\n", "    ", "intersect_area_i", "=", "paddle", ".", "sum", "(", "pred_i", "*", "label_i", ")", "\n", "if", "paddle", ".", "equal", "(", "intersect_area_i", ",", "zero", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "pred_area_i", "=", "paddle", ".", "sum", "(", "pred_i", ")", "\n", "label_area_i", "=", "paddle", ".", "sum", "(", "label_i", ")", "\n", "union_area_i", "=", "pred_area_i", "+", "label_area_i", "-", "intersect_area_i", "\n", "if", "paddle", ".", "equal", "(", "union_area_i", ",", "zero", ")", ":", "\n", "        ", "return", "1", "\n", "", "else", ":", "\n", "        ", "return", "intersect_area_i", "/", "union_area_i", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.focal_loss.FocalLoss.__init__": [[38, 44], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "alpha", "=", "0.25", ",", "gamma", "=", "2.0", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "EPS", "=", "1e-10", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.focal_loss.FocalLoss.forward": [[45, 83], ["paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.one_hot", "paddle.one_hot", "paddle.one_hot", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.sigmoid_focal_loss", "paddle.sigmoid_focal_loss", "paddle.sigmoid_focal_loss", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logit (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (N, C, H, W), where C is number of classes.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N, W, W),\n                where each value is 0 <= label[i] <= C-1.\n        Returns:\n            (Tensor): The average loss.\n        \"\"\"", "\n", "assert", "logit", ".", "ndim", "==", "4", ",", "\"The ndim of logit should be 4.\"", "\n", "assert", "logit", ".", "shape", "[", "1", "]", "==", "2", ",", "\"The channel of logit should be 2.\"", "\n", "assert", "label", ".", "ndim", "==", "3", ",", "\"The ndim of label should be 3.\"", "\n", "\n", "class_num", "=", "logit", ".", "shape", "[", "1", "]", "# class num is 2", "\n", "logit", "=", "paddle", ".", "transpose", "(", "logit", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "# N,C,H,W => N,H,W,C", "\n", "\n", "mask", "=", "label", "!=", "self", ".", "ignore_index", "# N,H,W", "\n", "mask", "=", "paddle", ".", "unsqueeze", "(", "mask", ",", "3", ")", "\n", "mask", "=", "paddle", ".", "cast", "(", "mask", ",", "'float32'", ")", "\n", "mask", ".", "stop_gradient", "=", "True", "\n", "\n", "label", "=", "F", ".", "one_hot", "(", "label", ",", "class_num", ")", "# N,H,W,C", "\n", "label", "=", "paddle", ".", "cast", "(", "label", ",", "logit", ".", "dtype", ")", "\n", "label", ".", "stop_gradient", "=", "True", "\n", "\n", "loss", "=", "F", ".", "sigmoid_focal_loss", "(", "\n", "logit", "=", "logit", ",", "\n", "label", "=", "label", ",", "\n", "alpha", "=", "self", ".", "alpha", ",", "\n", "gamma", "=", "self", ".", "gamma", ",", "\n", "reduction", "=", "'none'", ")", "\n", "loss", "=", "loss", "*", "mask", "\n", "avg_loss", "=", "paddle", ".", "sum", "(", "loss", ")", "/", "(", "\n", "paddle", ".", "sum", "(", "paddle", ".", "cast", "(", "mask", "!=", "0.", ",", "'int32'", ")", ")", "*", "class_num", "+", "self", ".", "EPS", ")", "\n", "return", "avg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.focal_loss.MultiClassFocalLoss.__init__": [[98, 105], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_class", ",", "alpha", "=", "1.0", ",", "gamma", "=", "2.0", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "EPS", "=", "1e-10", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.focal_loss.MultiClassFocalLoss.forward": [[106, 133], ["paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "label.astype.astype.astype", "paddle.cross_entropy", "paddle.cross_entropy", "paddle.cross_entropy", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logit (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (N, C, H, W), where C is number of classes.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N, W, W),\n                where each value is 0 <= label[i] <= C-1.\n        Returns:\n            (Tensor): The average loss.\n        \"\"\"", "\n", "assert", "logit", ".", "ndim", "==", "4", ",", "\"The ndim of logit should be 4.\"", "\n", "assert", "label", ".", "ndim", "==", "3", ",", "\"The ndim of label should be 3.\"", "\n", "\n", "logit", "=", "paddle", ".", "transpose", "(", "logit", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "label", "=", "label", ".", "astype", "(", "'int64'", ")", "\n", "ce_loss", "=", "F", ".", "cross_entropy", "(", "\n", "logit", ",", "label", ",", "ignore_index", "=", "self", ".", "ignore_index", ",", "reduction", "=", "'none'", ")", "\n", "\n", "pt", "=", "paddle", ".", "exp", "(", "-", "ce_loss", ")", "\n", "focal_loss", "=", "self", ".", "alpha", "*", "(", "(", "1", "-", "pt", ")", "**", "self", ".", "gamma", ")", "*", "ce_loss", "\n", "\n", "mask", "=", "paddle", ".", "cast", "(", "label", "!=", "self", ".", "ignore_index", ",", "'float32'", ")", "\n", "focal_loss", "*=", "mask", "\n", "avg_loss", "=", "paddle", ".", "mean", "(", "focal_loss", ")", "/", "(", "paddle", ".", "mean", "(", "mask", ")", "+", "self", ".", "EPS", ")", "\n", "return", "avg_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.point_cross_entropy_loss.PointCrossEntropyLoss.__init__": [[42, 57], ["paddle.nn.Layer.__init__", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["def", "__init__", "(", "self", ",", "\n", "weight", "=", "None", ",", "\n", "ignore_index", "=", "255", ",", "\n", "top_k_percent_pixels", "=", "1.0", ",", "\n", "data_format", "=", "'NCHW'", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "PointCrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "weight", "is", "not", "None", ":", "\n", "            ", "weight", "=", "paddle", ".", "to_tensor", "(", "weight", ",", "dtype", "=", "'float32'", ")", "\n", "", "self", ".", "weight", "=", "weight", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "top_k_percent_pixels", "=", "top_k_percent_pixels", "\n", "self", ".", "EPS", "=", "1e-8", "\n", "self", ".", "data_format", "=", "data_format", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.point_cross_entropy_loss.PointCrossEntropyLoss.forward": [[58, 126], ["paddle.squeeze().astype.unsqueeze", "paddle.squeeze().astype.unsqueeze", "point_cross_entropy_loss.point_sample", "paddle.squeeze().astype", "paddle.squeeze().astype", "paddle.squeeze().astype", "paddle.squeeze().astype", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.cross_entropy", "paddle.cross_entropy", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "loss.reshape.reshape.reshape", "int", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.ones_like.reshape", "paddle.ones_like.reshape", "paddle.gather", "paddle.gather", "paddle.gather", "paddle.gather", "paddle.squeeze().astype.astype", "paddle.squeeze().astype.astype", "ValueError", "paddle.one_hot", "paddle.one_hot", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "loss.reshape.reshape.mean", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "len", "_one_hot_weight.argmax", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "loss.reshape.reshape.numel", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "len", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.point_cross_entropy_loss.point_sample"], ["", "def", "forward", "(", "self", ",", "logits", ",", "label", ",", "semantic_weights", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logits (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (logit,points). logit'shape: [N, C, point_num]. logit'shape:[N, point_num, 2], where C is number of classes.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N), where each\n                value is 0 <= label[i] <= C-1, and if shape is more than 2D, this is\n                (N, D1, D2,..., Dk), k >= 1.\n            semantic_weights (Tensor, optional): Weights about loss for each pixels, shape is the same as label. Default: None.\n        \"\"\"", "\n", "# for loss", "\n", "logit", ",", "points", "=", "logits", "# [N, C, point_num],[N, point_num, 2]", "\n", "label", "=", "label", ".", "unsqueeze", "(", "1", ")", "# [N,1,H,W]", "\n", "label", "=", "point_sample", "(", "\n", "label", ".", "astype", "(", "'float32'", ")", ",", "\n", "points", ",", "\n", "mode", "=", "'nearest'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "# [N, 1, point_num]", "\n", "label", "=", "paddle", ".", "squeeze", "(", "label", ",", "axis", "=", "1", ")", ".", "astype", "(", "'int64'", ")", "# [N, xx]", "\n", "\n", "channel_axis", "=", "1", "if", "self", ".", "data_format", "==", "'NCHW'", "else", "-", "1", "\n", "if", "self", ".", "weight", "is", "not", "None", "and", "logit", ".", "shape", "[", "channel_axis", "]", "!=", "len", "(", "\n", "self", ".", "weight", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The number of weights = {} must be the same as the number of classes = {}.'", "\n", ".", "format", "(", "len", "(", "self", ".", "weight", ")", ",", "logit", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "", "logit", "=", "paddle", ".", "transpose", "(", "logit", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "no_ignore_label", "=", "label", "\n", "#no_ignore_label[label==self.ignore_index] = 0", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "\n", "logit", ",", "\n", "no_ignore_label", ",", "\n", "ignore_index", "=", "self", ".", "ignore_index", ",", "\n", "reduction", "=", "'none'", ")", "\n", "\n", "mask", "=", "label", "!=", "self", ".", "ignore_index", "\n", "mask", "=", "paddle", ".", "cast", "(", "mask", ",", "'float32'", ")", "\n", "\n", "loss", "=", "loss", "*", "mask", "\n", "if", "semantic_weights", "is", "not", "None", ":", "\n", "            ", "loss", "=", "loss", "*", "semantic_weights", "\n", "\n", "", "if", "self", ".", "weight", "is", "not", "None", ":", "\n", "            ", "_one_hot", "=", "F", ".", "one_hot", "(", "label", ",", "logit", ".", "shape", "[", "-", "1", "]", ")", "\n", "_one_hot_weight", "=", "_one_hot", "*", "self", ".", "weight", "\n", "loss", "=", "loss", "*", "_one_hot_weight", ".", "argmax", "(", "-", "1", ")", "\n", "coef", "=", "paddle", ".", "sum", "(", "_one_hot_weight", ",", "axis", "=", "-", "1", ")", "\n", "#coef = paddle.ones_like(label)", "\n", "", "else", ":", "\n", "            ", "coef", "=", "paddle", ".", "ones_like", "(", "label", ")", "\n", "\n", "", "label", ".", "stop_gradient", "=", "True", "\n", "mask", ".", "stop_gradient", "=", "True", "\n", "if", "self", ".", "top_k_percent_pixels", "==", "1.0", ":", "\n", "            ", "avg_loss", "=", "paddle", ".", "mean", "(", "loss", ")", "/", "(", "paddle", ".", "mean", "(", "mask", "*", "coef", ")", "+", "self", ".", "EPS", ")", "\n", "return", "avg_loss", "\n", "\n", "", "loss", "=", "loss", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "top_k_pixels", "=", "int", "(", "self", ".", "top_k_percent_pixels", "*", "loss", ".", "numel", "(", ")", ")", "\n", "loss", ",", "indices", "=", "paddle", ".", "topk", "(", "loss", ",", "top_k_pixels", ")", "\n", "coef", "=", "coef", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "coef", "=", "paddle", ".", "gather", "(", "coef", ",", "indices", ")", "\n", "coef", ".", "stop_gradient", "=", "True", "\n", "\n", "return", "loss", ".", "mean", "(", ")", "/", "(", "paddle", ".", "mean", "(", "coef", ")", "+", "self", ".", "EPS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.point_cross_entropy_loss.point_sample": [[128, 161], ["paddle.grid_sample", "paddle.unsqueeze.dim", "paddle.unsqueeze", "paddle.unsqueeze", "point_cross_entropy_loss.point_sample.denormalize"], "function", ["None"], ["", "", "def", "point_sample", "(", "input", ",", "points", ",", "align_corners", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"A wrapper around :func:`grid_sample` to support 3D point_coords tensors\n    Unlike :func:`torch.nn.functional.grid_sample` it assumes point_coords to\n    lie inside ``[0, 1] x [0, 1]`` square.\n    Args:\n        input (Tensor): Feature map, shape (N, C, H, W).\n        points (Tensor): Image based absolute point coordinates (normalized),\n            range [0, 1] x [0, 1], shape (N, P, 2) or (N, Hgrid, Wgrid, 2).\n        align_corners (bool): Whether align_corners. Default: False\n    Returns:\n        Tensor: Features of `point` on `input`, shape (N, C, P) or\n            (N, C, Hgrid, Wgrid).\n    \"\"\"", "\n", "\n", "def", "denormalize", "(", "grid", ")", ":", "\n", "        ", "\"\"\"Denormalize input grid from range [0, 1] to [-1, 1]\n        Args:\n            grid (Tensor): The grid to be denormalize, range [0, 1].\n        Returns:\n            Tensor: Denormalized grid, range [-1, 1].\n        \"\"\"", "\n", "\n", "return", "grid", "*", "2.0", "-", "1.0", "\n", "\n", "", "add_dim", "=", "False", "\n", "if", "points", ".", "dim", "(", ")", "==", "3", ":", "\n", "        ", "add_dim", "=", "True", "\n", "points", "=", "paddle", ".", "unsqueeze", "(", "points", ",", "axis", "=", "2", ")", "# [2, 2048, 1, 2]", "\n", "", "output", "=", "F", ".", "grid_sample", "(", "\n", "input", ",", "denormalize", "(", "points", ")", ",", "align_corners", "=", "align_corners", ",", "**", "kwargs", ")", "\n", "if", "add_dim", ":", "\n", "        ", "output", "=", "paddle", ".", "squeeze", "(", "output", ",", "axis", "=", "3", ")", "\n", "", "return", "output", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.dice_loss.DiceLoss.__init__": [[36, 44], ["paddle.nn.Layer.__init__", "paddle.nn.Sigmoid", "paddle.nn.Sigmoid", "paddle.nn.Softmax", "paddle.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["self", ".", "smooth", "=", "smooth", "\n", "self", ".", "eps", "=", "1e-8", "\n", "\n", "", "def", "forward", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "num_class", "=", "logits", ".", "shape", "[", "1", "]", "\n", "if", "self", ".", "weight", "is", "not", "None", ":", "\n", "            ", "assert", "num_class", "==", "len", "(", "self", ".", "weight", ")", ",", "\"The lenght of weight should be euqal to the num class\"", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.dice_loss.DiceLoss.forward": [[76, 103], ["print", "paddle.one_hot", "paddle.one_hot", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "dice_loss.DiceLoss.norm", "dice_loss.DiceLoss.compute_per_channel_dice", "per_channel_dice.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "str", "len", "logits.unsqueeze.unsqueeze.unsqueeze", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "type", "per_channel_dice.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "per_channel_dice.detach().cpu().numpy.detach().cpu().numpy.detach"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.dice_loss.DiceLoss.compute_per_channel_dice"], ["return", "dice_loss", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.dice_loss.dice_loss_helper": [[64, 77], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "dice_loss.mean.mean"], "function", ["None"], ["", "", "def", "dice_loss_helper", "(", "logit", ",", "label", ",", "mask", ",", "smooth", ",", "eps", ")", ":", "\n", "    ", "assert", "logit", ".", "shape", "==", "label", ".", "shape", ",", "\"The shape of logit and label should be the same\"", "\n", "logit", "=", "paddle", ".", "reshape", "(", "logit", ",", "[", "0", ",", "-", "1", "]", ")", "\n", "label", "=", "paddle", ".", "reshape", "(", "label", ",", "[", "0", ",", "-", "1", "]", ")", "\n", "mask", "=", "paddle", ".", "reshape", "(", "mask", ",", "[", "0", ",", "-", "1", "]", ")", "\n", "logit", "*=", "mask", "\n", "label", "*=", "mask", "\n", "intersection", "=", "paddle", ".", "sum", "(", "logit", "*", "label", ",", "axis", "=", "1", ")", "\n", "cardinality", "=", "paddle", ".", "sum", "(", "logit", "+", "label", ",", "axis", "=", "1", ")", "\n", "dice_loss", "=", "1", "-", "(", "2", "*", "intersection", "+", "smooth", ")", "/", "(", "cardinality", "+", "smooth", "+", "eps", ")", "\n", "dice_loss", "=", "dice_loss", ".", "mean", "(", ")", "\n", "return", "dice_loss", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.detail_aggregate_loss.DetailAggregateLoss.__init__": [[37, 45], ["paddle.Layer.__init__", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["def", "__init__", "(", "self", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", "DetailAggregateLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "laplacian_kernel", "=", "paddle", ".", "to_tensor", "(", "\n", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", ",", "8", ",", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ",", "dtype", "=", "'float32'", ")", ".", "reshape", "(", "\n", "(", "1", ",", "1", ",", "3", ",", "3", ")", ")", "\n", "self", ".", "fuse_kernel", "=", "paddle", ".", "create_parameter", "(", "\n", "[", "1", ",", "3", ",", "1", ",", "1", "]", ",", "dtype", "=", "'float32'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.detail_aggregate_loss.DetailAggregateLoss.forward": [[46, 132], ["paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "boundary_targets.astype.astype.astype", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "boundary_targets_x2_up.astype.astype.astype", "boundary_targets_x4_up.astype.astype.astype", "boundary_targets_x8_up.astype.astype.astype", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "boudary_targets_pyramid.astype.astype.astype", "paddle.binary_cross_entropy_with_logits", "paddle.binary_cross_entropy_with_logits", "paddle.binary_cross_entropy_with_logits", "detail_aggregate_loss.DetailAggregateLoss.fixed_dice_loss_func", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.unsqueeze().astype", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.detail_aggregate_loss.DetailAggregateLoss.fixed_dice_loss_func"], ["", "def", "forward", "(", "self", ",", "logits", ",", "label", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            logits (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (N, C), where C is number of classes, and if shape is more than 2D, this\n                is (N, C, D1, D2,..., Dk), k >= 1.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N), where each\n                value is 0 <= label[i] <= C-1, and if shape is more than 2D, this is\n                (N, D1, D2,..., Dk), k >= 1.\n        Returns: loss\n        \"\"\"", "\n", "boundary_targets", "=", "F", ".", "conv2d", "(", "\n", "paddle", ".", "unsqueeze", "(", "\n", "label", ",", "axis", "=", "1", ")", ".", "astype", "(", "'float32'", ")", ",", "\n", "self", ".", "laplacian_kernel", ",", "\n", "padding", "=", "1", ")", "\n", "boundary_targets", "=", "paddle", ".", "clip", "(", "boundary_targets", ",", "min", "=", "0", ")", "\n", "boundary_targets", "=", "boundary_targets", ">", "0.1", "\n", "boundary_targets", "=", "boundary_targets", ".", "astype", "(", "'float32'", ")", "\n", "\n", "boundary_targets_x2", "=", "F", ".", "conv2d", "(", "\n", "paddle", ".", "unsqueeze", "(", "\n", "label", ",", "axis", "=", "1", ")", ".", "astype", "(", "'float32'", ")", ",", "\n", "self", ".", "laplacian_kernel", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "boundary_targets_x2", "=", "paddle", ".", "clip", "(", "boundary_targets_x2", ",", "min", "=", "0", ")", "\n", "boundary_targets_x4", "=", "F", ".", "conv2d", "(", "\n", "paddle", ".", "unsqueeze", "(", "\n", "label", ",", "axis", "=", "1", ")", ".", "astype", "(", "'float32'", ")", ",", "\n", "self", ".", "laplacian_kernel", ",", "\n", "stride", "=", "4", ",", "\n", "padding", "=", "1", ")", "\n", "boundary_targets_x4", "=", "paddle", ".", "clip", "(", "boundary_targets_x4", ",", "min", "=", "0", ")", "\n", "\n", "boundary_targets_x8", "=", "F", ".", "conv2d", "(", "\n", "paddle", ".", "unsqueeze", "(", "\n", "label", ",", "axis", "=", "1", ")", ".", "astype", "(", "'float32'", ")", ",", "\n", "self", ".", "laplacian_kernel", ",", "\n", "stride", "=", "8", ",", "\n", "padding", "=", "1", ")", "\n", "boundary_targets_x8", "=", "paddle", ".", "clip", "(", "boundary_targets_x8", ",", "min", "=", "0", ")", "\n", "\n", "boundary_targets_x8_up", "=", "F", ".", "interpolate", "(", "\n", "boundary_targets_x8", ",", "boundary_targets", ".", "shape", "[", "2", ":", "]", ",", "mode", "=", "'nearest'", ")", "\n", "boundary_targets_x4_up", "=", "F", ".", "interpolate", "(", "\n", "boundary_targets_x4", ",", "boundary_targets", ".", "shape", "[", "2", ":", "]", ",", "mode", "=", "'nearest'", ")", "\n", "boundary_targets_x2_up", "=", "F", ".", "interpolate", "(", "\n", "boundary_targets_x2", ",", "boundary_targets", ".", "shape", "[", "2", ":", "]", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "boundary_targets_x2_up", "=", "boundary_targets_x2_up", ">", "0.1", "\n", "boundary_targets_x2_up", "=", "boundary_targets_x2_up", ".", "astype", "(", "'float32'", ")", "\n", "\n", "boundary_targets_x4_up", "=", "boundary_targets_x4_up", ">", "0.1", "\n", "boundary_targets_x4_up", "=", "boundary_targets_x4_up", ".", "astype", "(", "'float32'", ")", "\n", "\n", "boundary_targets_x8_up", "=", "boundary_targets_x8_up", ">", "0.1", "\n", "boundary_targets_x8_up", "=", "boundary_targets_x8_up", ".", "astype", "(", "'float32'", ")", "\n", "\n", "boudary_targets_pyramids", "=", "paddle", ".", "stack", "(", "\n", "(", "boundary_targets", ",", "boundary_targets_x2_up", ",", "boundary_targets_x4_up", ")", ",", "\n", "axis", "=", "1", ")", "\n", "\n", "boudary_targets_pyramids", "=", "paddle", ".", "squeeze", "(", "\n", "boudary_targets_pyramids", ",", "axis", "=", "2", ")", "\n", "boudary_targets_pyramid", "=", "F", ".", "conv2d", "(", "boudary_targets_pyramids", ",", "\n", "self", ".", "fuse_kernel", ")", "\n", "\n", "boudary_targets_pyramid", "=", "boudary_targets_pyramid", ">", "0.1", "\n", "boudary_targets_pyramid", "=", "boudary_targets_pyramid", ".", "astype", "(", "'float32'", ")", "\n", "\n", "if", "logits", ".", "shape", "[", "-", "1", "]", "!=", "boundary_targets", ".", "shape", "[", "-", "1", "]", ":", "\n", "            ", "logits", "=", "F", ".", "interpolate", "(", "\n", "logits", ",", "\n", "boundary_targets", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "\n", "", "bce_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "logits", ",", "\n", "boudary_targets_pyramid", ")", "\n", "dice_loss", "=", "self", ".", "fixed_dice_loss_func", "(", "\n", "F", ".", "sigmoid", "(", "logits", ")", ",", "boudary_targets_pyramid", ")", "\n", "detail_loss", "=", "bce_loss", "+", "dice_loss", "\n", "\n", "label", ".", "stop_gradient", "=", "True", "\n", "return", "detail_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.detail_aggregate_loss.DetailAggregateLoss.fixed_dice_loss_func": [[133, 146], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum"], "methods", ["None"], ["", "def", "fixed_dice_loss_func", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "\"\"\"\n            simplified diceloss for DetailAggregateLoss.\n        \"\"\"", "\n", "smooth", "=", "1.", "\n", "n", "=", "input", ".", "shape", "[", "0", "]", "\n", "iflat", "=", "paddle", ".", "reshape", "(", "input", ",", "[", "n", ",", "-", "1", "]", ")", "\n", "tflat", "=", "paddle", ".", "reshape", "(", "target", ",", "[", "n", ",", "-", "1", "]", ")", "\n", "intersection", "=", "paddle", ".", "sum", "(", "(", "iflat", "*", "tflat", ")", ",", "axis", "=", "1", ")", "\n", "loss", "=", "1", "-", "(", "\n", "(", "2.", "*", "intersection", "+", "smooth", ")", "/", "\n", "(", "paddle", ".", "sum", "(", "iflat", ",", "axis", "=", "1", ")", "+", "paddle", ".", "sum", "(", "tflat", ",", "axis", "=", "1", ")", "+", "smooth", ")", ")", "\n", "return", "paddle", ".", "mean", "(", "loss", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.semantic_encode_cross_entropy_loss.SECrossEntropyLoss.__init__": [[29, 31], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SECrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.semantic_encode_cross_entropy_loss.SECrossEntropyLoss.forward": [[32, 47], ["paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "range", "paddle.binary_cross_entropy_with_logits", "paddle.binary_cross_entropy_with_logits", "paddle.binary_cross_entropy_with_logits", "logit.squeeze().squeeze.squeeze().squeeze.squeeze().squeeze", "paddle.histogram", "paddle.histogram", "paddle.histogram", "paddle.histogram", "paddle.histogram", "paddle.histogram", "paddle.histogram", "paddle.histogram", "paddle.histogram", "paddle.histogram.astype", "paddle.histogram.astype", "paddle.histogram.astype", "paddle.histogram.sum().astype", "paddle.histogram.sum().astype", "paddle.histogram.sum().astype", "logit.squeeze().squeeze.squeeze().squeeze.squeeze", "paddle.histogram.sum", "paddle.histogram.sum", "paddle.histogram.sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ")", ":", "\n", "        ", "if", "logit", ".", "ndim", "==", "4", ":", "\n", "            ", "logit", "=", "logit", ".", "squeeze", "(", "2", ")", ".", "squeeze", "(", "3", ")", "\n", "", "assert", "logit", ".", "ndim", "==", "2", ",", "\"The shape of logit should be [N, C, 1, 1] or [N, C], but the logit dim is  {}.\"", ".", "format", "(", "\n", "logit", ".", "ndim", ")", "\n", "\n", "batch_size", ",", "num_classes", "=", "paddle", ".", "shape", "(", "logit", ")", "\n", "se_label", "=", "paddle", ".", "zeros", "(", "[", "batch_size", ",", "num_classes", "]", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "hist", "=", "paddle", ".", "histogram", "(", "\n", "label", "[", "i", "]", ",", "bins", "=", "num_classes", ",", "min", "=", "0", ",", "max", "=", "num_classes", "-", "1", ")", "\n", "hist", "=", "hist", ".", "astype", "(", "'float32'", ")", "/", "hist", ".", "sum", "(", ")", ".", "astype", "(", "'float32'", ")", "\n", "se_label", "[", "i", "]", "=", "(", "hist", ">", "0", ")", ".", "astype", "(", "'float32'", ")", "\n", "", "loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "logit", ",", "se_label", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.cross_entropy_loss.CrossEntropyLoss.__init__": [[37, 46], ["paddle.nn.Layer.__init__", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["\n", "\n", "def", "__init__", "(", "self", ",", "\n", "weight", "=", "None", ",", "\n", "ignore_index", "=", "255", ",", "\n", "top_k_percent_pixels", "=", "1.0", ",", "\n", "data_format", "=", "'NCHW'", ")", ":", "\n", "        ", "super", "(", "CrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "top_k_percent_pixels", "=", "top_k_percent_pixels", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.cross_entropy_loss.CrossEntropyLoss.forward": [[47, 88], ["label.astype.astype.astype", "cross_entropy_loss.CrossEntropyLoss.data_format.index", "paddle.cross_entropy", "paddle.cross_entropy", "len", "paddle.transpose.unsqueeze", "paddle.transpose.unsqueeze", "medicalseg.models.losses.class_weights", "ValueError", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.class_weights"], ["self", ".", "EPS", "=", "1e-8", "\n", "self", ".", "data_format", "=", "data_format", "\n", "if", "weight", "is", "not", "None", ":", "\n", "            ", "self", ".", "weight", "=", "paddle", ".", "to_tensor", "(", "weight", ",", "dtype", "=", "'float32'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "weight", "=", "None", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "logit", ",", "label", ",", "semantic_weights", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            logit (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (N, C), where C is number of classes, and if shape is more than 2D, this\n                is (N, C, D1, D2,..., Dk), k >= 1.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N), where each\n                value is 0 <= label[i] <= C-1, and if shape is more than 2D, this is\n                (N, D1, D2,..., Dk), k >= 1.\n            semantic_weights (Tensor, optional): Weights about loss for each pixels,\n                shape is the same as label. Default: None.\n        Returns:\n            (Tensor): The average loss.\n        \"\"\"", "\n", "channel_axis", "=", "1", "if", "self", ".", "data_format", "==", "'NCHW'", "else", "-", "1", "\n", "if", "self", ".", "weight", "is", "not", "None", "and", "logit", ".", "shape", "[", "channel_axis", "]", "!=", "len", "(", "\n", "self", ".", "weight", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The number of weights = {} must be the same as the number of classes = {}.'", "\n", ".", "format", "(", "len", "(", "self", ".", "weight", ")", ",", "logit", ".", "shape", "[", "channel_axis", "]", ")", ")", "\n", "\n", "", "if", "channel_axis", "==", "1", ":", "\n", "            ", "logit", "=", "paddle", ".", "transpose", "(", "logit", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "", "label", "=", "label", ".", "astype", "(", "'int64'", ")", "\n", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "\n", "logit", ",", "\n", "label", ",", "\n", "ignore_index", "=", "self", ".", "ignore_index", ",", "\n", "reduction", "=", "'none'", ",", "\n", "weight", "=", "self", ".", "weight", ")", "\n", "\n", "return", "self", ".", "_post_process_loss", "(", "logit", ",", "label", ",", "semantic_weights", ",", "loss", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.cross_entropy_loss.CrossEntropyLoss._post_process_loss": [[90, 140], ["paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.one_hot", "paddle.one_hot", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "paddle.ones_like", "loss.reshape.reshape.reshape", "int", "paddle.topk", "paddle.topk", "paddle.topk", "paddle.topk", "coef.astype.astype.reshape", "paddle.gather", "paddle.gather", "paddle.gather", "paddle.gather", "coef.astype.astype.astype", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "loss.reshape.reshape.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "loss.reshape.reshape.numel", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean"], "methods", ["None"], ["", "def", "_post_process_loss", "(", "self", ",", "logit", ",", "label", ",", "semantic_weights", ",", "loss", ")", ":", "\n", "        ", "\"\"\"\n        Consider mask and top_k to calculate the final loss.\n\n        Args:\n            logit (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (N, C), where C is number of classes, and if shape is more than 2D, this\n                is (N, C, D1, D2,..., Dk), k >= 1.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N), where each\n                value is 0 <= label[i] <= C-1, and if shape is more than 2D, this is\n                (N, D1, D2,..., Dk), k >= 1.\n            semantic_weights (Tensor, optional): Weights about loss for each pixels,\n                shape is the same as label.\n            loss (Tensor): Loss tensor which is the output of cross_entropy. If soft_label\n                is False in cross_entropy, the shape of loss should be the same as the label.\n                If soft_label is True in cross_entropy, the shape of loss should be\n                (N, D1, D2,..., Dk, 1).\n        Returns:\n            (Tensor): The average loss.\n        \"\"\"", "\n", "mask", "=", "label", "!=", "self", ".", "ignore_index", "\n", "mask", "=", "paddle", ".", "cast", "(", "mask", ",", "'float32'", ")", "\n", "label", ".", "stop_gradient", "=", "True", "\n", "mask", ".", "stop_gradient", "=", "True", "\n", "\n", "if", "loss", ".", "ndim", ">", "mask", ".", "ndim", ":", "\n", "            ", "loss", "=", "paddle", ".", "squeeze", "(", "loss", ",", "axis", "=", "-", "1", ")", "\n", "", "loss", "=", "loss", "*", "mask", "\n", "if", "semantic_weights", "is", "not", "None", ":", "\n", "            ", "loss", "=", "loss", "*", "semantic_weights", "\n", "\n", "", "if", "self", ".", "weight", "is", "not", "None", ":", "\n", "            ", "_one_hot", "=", "F", ".", "one_hot", "(", "label", ",", "logit", ".", "shape", "[", "-", "1", "]", ")", "\n", "coef", "=", "paddle", ".", "sum", "(", "_one_hot", "*", "self", ".", "weight", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "coef", "=", "paddle", ".", "ones_like", "(", "label", ")", "\n", "\n", "", "if", "self", ".", "top_k_percent_pixels", "==", "1.0", ":", "\n", "            ", "avg_loss", "=", "paddle", ".", "mean", "(", "loss", ")", "/", "(", "paddle", ".", "mean", "(", "mask", "*", "coef", ")", "+", "self", ".", "EPS", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "loss", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "top_k_pixels", "=", "int", "(", "self", ".", "top_k_percent_pixels", "*", "loss", ".", "numel", "(", ")", ")", "\n", "loss", ",", "indices", "=", "paddle", ".", "topk", "(", "loss", ",", "top_k_pixels", ")", "\n", "coef", "=", "coef", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "coef", "=", "paddle", ".", "gather", "(", "coef", ",", "indices", ")", "\n", "coef", ".", "stop_gradient", "=", "True", "\n", "coef", "=", "coef", ".", "astype", "(", "'float32'", ")", "\n", "avg_loss", "=", "loss", ".", "mean", "(", ")", "/", "(", "paddle", ".", "mean", "(", "coef", ")", "+", "self", ".", "EPS", ")", "\n", "\n", "", "return", "avg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.cross_entropy_loss.DistillCrossEntropyLoss.__init__": [[161, 168], ["cross_entropy_loss.CrossEntropyLoss.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "\n", "weight", "=", "None", ",", "\n", "ignore_index", "=", "255", ",", "\n", "top_k_percent_pixels", "=", "1.0", ",", "\n", "data_format", "=", "'NCHW'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "weight", ",", "ignore_index", ",", "top_k_percent_pixels", ",", "\n", "data_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.cross_entropy_loss.DistillCrossEntropyLoss.forward": [[169, 217], ["paddle.softmax", "paddle.softmax", "paddle.cross_entropy", "paddle.cross_entropy", "cross_entropy_loss.DistillCrossEntropyLoss._post_process_loss", "ValueError", "ValueError", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.cross_entropy_loss.CrossEntropyLoss._post_process_loss"], ["", "def", "forward", "(", "self", ",", "\n", "student_logit", ",", "\n", "teacher_logit", ",", "\n", "label", ",", "\n", "semantic_weights", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Forward computation.\n\n        Args:\n            student_logit (Tensor): Logit tensor, the data type is float32, float64. Shape is\n                (N, C), where C is number of classes, and if shape is more than 2D, this\n                is (N, C, D1, D2,..., Dk), k >= 1.\n            teacher_logit (Tensor): Logit tensor, the data type is float32, float64. The shape\n                is the same as the student_logit.\n            label (Tensor): Label tensor, the data type is int64. Shape is (N), where each\n                value is 0 <= label[i] <= C-1, and if shape is more than 2D, this is\n                (N, D1, D2,..., Dk), k >= 1.\n            semantic_weights (Tensor, optional): Weights about loss for each pixels,\n                shape is the same as label. Default: None.\n        \"\"\"", "\n", "\n", "if", "student_logit", ".", "shape", "!=", "teacher_logit", ".", "shape", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The shape of student_logit = {} must be the same as the shape of teacher_logit = {}.'", "\n", ".", "format", "(", "student_logit", ".", "shape", ",", "teacher_logit", ".", "shape", ")", ")", "\n", "\n", "", "channel_axis", "=", "1", "if", "self", ".", "data_format", "==", "'NCHW'", "else", "-", "1", "\n", "if", "self", ".", "weight", "is", "not", "None", "and", "student_logit", ".", "shape", "[", "channel_axis", "]", "!=", "len", "(", "\n", "self", ".", "weight", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The number of weights = {} must be the same as the number of classes = {}.'", "\n", ".", "format", "(", "len", "(", "self", ".", "weight", ")", ",", "student_logit", ".", "shape", "[", "channel_axis", "]", ")", ")", "\n", "\n", "", "if", "channel_axis", "==", "1", ":", "\n", "            ", "student_logit", "=", "paddle", ".", "transpose", "(", "student_logit", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "teacher_logit", "=", "paddle", ".", "transpose", "(", "teacher_logit", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "\n", "", "teacher_logit", "=", "F", ".", "softmax", "(", "teacher_logit", ")", "\n", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "\n", "student_logit", ",", "\n", "teacher_logit", ",", "\n", "weight", "=", "self", ".", "weight", ",", "\n", "reduction", "=", "'none'", ",", "\n", "soft_label", "=", "True", ")", "\n", "\n", "return", "self", ".", "_post_process_loss", "(", "student_logit", ",", "label", ",", "semantic_weights", ",", "\n", "loss", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lane_cross_entropy_loss.LaneCrossEntropyLoss.__init__": [[24, 28], ["paddle.nn.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ignore_index", "=", "255", ",", "weights", "=", "None", ",", "data_format", "=", "'NCHW'", ")", ":", "\n", "        ", "super", "(", "LaneCrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "weights", "=", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.lane_cross_entropy_loss.LaneCrossEntropyLoss.forward": [[29, 36], ["paddle.log_softmax", "paddle.log_softmax", "paddle.nn.NLLLoss", "paddle.nn.NLLLoss", "paddle.nn.NLLLoss.", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "def", "forward", "(", "self", ",", "logit", ",", "label", ",", "semantic_weights", "=", "None", ")", ":", "\n", "        ", "temp", "=", "F", ".", "log_softmax", "(", "logit", ",", "axis", "=", "1", ")", "\n", "loss_func", "=", "nn", ".", "NLLLoss", "(", "\n", "ignore_index", "=", "self", ".", "ignore_index", ",", "\n", "weight", "=", "paddle", ".", "to_tensor", "(", "self", ".", "weights", ")", ")", "\n", "loss", "=", "loss_func", "(", "temp", ",", "label", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten": [[18, 29], ["paddle.transpose", "paddle.flatten", "tuple", "range", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["len_losses", "=", "len", "(", "losses", "[", "'types'", "]", ")", "\n", "if", "len_logits", "!=", "len_losses", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The length of logits_list should equal to the types of loss config: {} != {}.'", "\n", ".", "format", "(", "len_logits", ",", "len_losses", ")", ")", "\n", "\n", "\n", "", "", "def", "loss_computation", "(", "logits_list", ",", "labels", ",", "losses", ",", "edges", "=", "None", ")", ":", "\n", "    ", "check_logits_losses", "(", "logits_list", ",", "losses", ")", "\n", "loss_list", "=", "[", "]", "\n", "per_channel_dice", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.class_weights": [[31, 41], ["paddle.nn.functional.softmax", "loss_utils.flatten", "flatten.sum"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["        ", "logits", "=", "logits_list", "[", "i", "]", "\n", "loss_i", "=", "losses", "[", "'types'", "]", "[", "i", "]", "\n", "coef_i", "=", "losses", "[", "'coef'", "]", "[", "i", "]", "\n", "\n", "if", "loss_i", ".", "__class__", ".", "__name__", "in", "(", "'BCELoss'", ",", "'FocalLoss'", "\n", ")", "and", "loss_i", ".", "edge_label", ":", "\n", "# If use edges as labels According to loss type.", "\n", "            ", "loss_list", ".", "append", "(", "coef_i", "*", "loss_i", "(", "logits", ",", "edges", ")", ")", "\n", "", "elif", "loss_i", ".", "__class__", ".", "__name__", "==", "'MixedLoss'", ":", "\n", "            ", "mixed_loss_list", ",", "per_channel_dice", "=", "loss_i", "(", "logits", ",", "labels", ")", "\n", "for", "mixed_loss", "in", "mixed_loss_list", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.dice_loss.DiceLoss.compute_per_channel_dice": [[45, 75], ["medicalseg.models.losses.flatten", "medicalseg.models.losses.flatten", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "logits", "=", "F", ".", "softmax", "(", "logits", ",", "axis", "=", "1", ")", "\n", "labels_one_hot", "=", "F", ".", "one_hot", "(", "labels", ",", "num_class", ")", "\n", "labels_one_hot", "=", "paddle", ".", "transpose", "(", "labels_one_hot", ",", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "\n", "mask", "=", "labels", "!=", "self", ".", "ignore_index", "\n", "mask", "=", "paddle", ".", "cast", "(", "paddle", ".", "unsqueeze", "(", "mask", ",", "1", ")", ",", "'float32'", ")", "\n", "\n", "dice_loss", "=", "0.0", "\n", "for", "i", "in", "range", "(", "num_class", ")", ":", "\n", "            ", "dice_loss_i", "=", "dice_loss_helper", "(", "logits", "[", ":", ",", "i", "]", ",", "labels_one_hot", "[", ":", ",", "i", "]", ",", "\n", "mask", ",", "self", ".", "smooth", ",", "self", ".", "eps", ")", "\n", "if", "self", ".", "weight", "is", "not", "None", ":", "\n", "                ", "dice_loss_i", "*=", "self", ".", "weight", "[", "i", "]", "\n", "", "dice_loss", "+=", "dice_loss_i", "\n", "", "dice_loss", "=", "dice_loss", "/", "num_class", "\n", "\n", "return", "dice_loss", "\n", "\n", "\n", "", "", "def", "dice_loss_helper", "(", "logit", ",", "label", ",", "mask", ",", "smooth", ",", "eps", ")", ":", "\n", "    ", "assert", "logit", ".", "shape", "==", "label", ".", "shape", ",", "\"The shape of logit and label should be the same\"", "\n", "logit", "=", "paddle", ".", "reshape", "(", "logit", ",", "[", "0", ",", "-", "1", "]", ")", "\n", "label", "=", "paddle", ".", "reshape", "(", "label", ",", "[", "0", ",", "-", "1", "]", ")", "\n", "mask", "=", "paddle", ".", "reshape", "(", "mask", ",", "[", "0", ",", "-", "1", "]", ")", "\n", "logit", "*=", "mask", "\n", "label", "*=", "mask", "\n", "intersection", "=", "paddle", ".", "sum", "(", "logit", "*", "label", ",", "axis", "=", "1", ")", "\n", "cardinality", "=", "paddle", ".", "sum", "(", "logit", "+", "label", ",", "axis", "=", "1", ")", "\n", "dice_loss", "=", "1", "-", "(", "2", "*", "intersection", "+", "smooth", ")", "/", "(", "cardinality", "+", "smooth", "+", "eps", ")", "\n", "dice_loss", "=", "dice_loss", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.mixes_losses.MixedLoss.__init__": [[36, 51], ["paddle.nn.Layer.__init__", "len", "len", "isinstance", "TypeError", "isinstance", "TypeError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "losses", ",", "coef", ")", ":", "\n", "        ", "super", "(", "MixedLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "not", "isinstance", "(", "losses", ",", "list", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'`losses` must be a list!'", ")", "\n", "", "if", "not", "isinstance", "(", "coef", ",", "list", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'`coef` must be a list!'", ")", "\n", "", "len_losses", "=", "len", "(", "losses", ")", "\n", "len_coef", "=", "len", "(", "coef", ")", "\n", "if", "len_losses", "!=", "len_coef", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The length of `losses` should equal to `coef`, but they are {} and {}.'", "\n", ".", "format", "(", "len_losses", ",", "len_coef", ")", ")", "\n", "\n", "", "self", ".", "losses", "=", "losses", "\n", "self", ".", "coef", "=", "coef", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.mixes_losses.MixedLoss.forward": [[52, 61], ["enumerate", "loss", "loss_list.append", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.cvlibs.config.Config.loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "loss_list", "=", "[", "]", "\n", "per_channel_dice", "=", "None", "\n", "for", "i", ",", "loss", "in", "enumerate", "(", "self", ".", "losses", ")", ":", "\n", "            ", "output", "=", "loss", "(", "logits", ",", "labels", ")", "\n", "if", "type", "(", "loss", ")", ".", "__name__", "==", "\"DiceLoss\"", ":", "\n", "                ", "output", ",", "per_channel_dice", "=", "output", "\n", "", "loss_list", ".", "append", "(", "output", "*", "self", ".", "coef", "[", "i", "]", ")", "\n", "", "return", "loss_list", ",", "per_channel_dice", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.Compose.__init__": [[41, 46], ["isinstance", "TypeError"], "methods", ["None"], ["        "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.Compose.__call__": [[47, 72], ["isinstance", "isinstance", "numpy.transpose", "cv2.imread().astype", "numpy.asarray", "ValueError", "cv2.cvtColor", "op", "PIL.Image.open", "len", "cv2.imread"], "methods", ["None"], ["\n", "if", "'trans_info'", "not", "in", "data", ":", "\n", "            ", "data", "[", "'trans_info'", "]", "=", "[", "]", "\n", "", "for", "op", "in", "self", ".", "transforms", ":", "\n", "            ", "data", "=", "op", "(", "data", ")", "\n", "if", "data", "is", "None", ":", "\n", "                ", "return", "None", "\n", "\n", "", "", "data", "[", "'img'", "]", "=", "np", ".", "transpose", "(", "data", "[", "'img'", "]", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "len", "(", "data", "[", "key", "]", ".", "shape", ")", "==", "2", ":", "\n", "                ", "continue", "\n", "", "data", "[", "key", "]", "=", "np", ".", "transpose", "(", "data", "[", "key", "]", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "", "return", "data", "\n", "\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "LoadImages", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "to_rgb", "=", "True", ")", ":", "\n", "        ", "self", ".", "to_rgb", "=", "to_rgb", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "isinstance", "(", "data", "[", "'img'", "]", ",", "str", ")", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "cv2", ".", "imread", "(", "data", "[", "'img'", "]", ")", "\n", "", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomHorizontalFlip.__init__": [[83, 85], ["None"], "methods", ["None"], ["                ", "if", "len", "(", "data", "[", "key", "]", ".", "shape", ")", "==", "2", ":", "\n", "                    ", "continue", "\n", "", "data", "[", "key", "]", "=", "cv2", ".", "cvtColor", "(", "data", "[", "key", "]", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomHorizontalFlip.__call__": [[86, 95], ["random.random", "paddleseg.transforms.functional.horizontal_flip", "paddleseg.transforms.functional.horizontal_flip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.horizontal_flip", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.horizontal_flip"], ["\n", "", "", "return", "data", "\n", "\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "Resize", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "target_size", "=", "(", "512", ",", "512", ")", ",", "random_interp", "=", "False", ")", ":", "\n", "        ", "if", "isinstance", "(", "target_size", ",", "list", ")", "or", "isinstance", "(", "target_size", ",", "tuple", ")", ":", "\n", "            ", "if", "len", "(", "target_size", ")", "!=", "2", ":", "\n", "                ", "raise", "ValueError", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomVerticalFlip.__init__": [[106, 108], ["None"], "methods", ["None"], ["\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "random_interp", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomVerticalFlip.__call__": [[109, 118], ["random.random", "paddleseg.transforms.functional.vertical_flip", "paddleseg.transforms.functional.vertical_flip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.vertical_flip", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.vertical_flip"], ["            ", "interp", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "interps", ")", "\n", "", "else", ":", "\n", "            ", "interp", "=", "cv2", ".", "INTER_LINEAR", "\n", "", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "resize", "(", "data", "[", "'img'", "]", ",", "self", ".", "target_size", ",", "interp", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "self", ".", "target_size", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.Resize.__init__": [[146, 162], ["ValueError", "isinstance", "isinstance", "TypeError", "len", "ValueError", "transforms.Resize.interp_dict.keys", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["            ", "if", "isinstance", "(", "scale", ",", "list", ")", "or", "isinstance", "(", "scale", ",", "tuple", ")", ":", "\n", "                ", "if", "len", "(", "scale", ")", "!=", "2", ":", "\n", "                    ", "raise", "ValueError", "(", "\n", "'`scale` should include 2 elements, but it is {}'", ".", "\n", "format", "(", "scale", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"Type of `scale` is invalid. It should be list or tuple, but it is {}\"", "\n", ".", "format", "(", "type", "(", "scale", ")", ")", ")", "\n", "", "", "self", ".", "size", "=", "size", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "h", ",", "w", "=", "data", "[", "'img'", "]", ".", "shape", "[", ":", "2", "]", "\n", "if", "self", ".", "scale", "is", "not", "None", ":", "\n", "            ", "scale", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "scale", "[", "0", "]", ",", "self", ".", "scale", "[", "1", "]", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.Resize.__call__": [[163, 194], ["paddleseg.transforms.functional.resize", "isinstance", "TypeError", "len", "ValueError", "random.choice", "paddleseg.transforms.functional.resize", "list", "transforms.Resize.interp_dict.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["            ", "scale", "=", "1.", "\n", "", "if", "self", ".", "size", "is", "not", "None", ":", "\n", "            ", "scale_factor", "=", "max", "(", "self", ".", "size", "[", "0", "]", "/", "w", ",", "self", ".", "size", "[", "1", "]", "/", "h", ")", "\n", "", "else", ":", "\n", "            ", "scale_factor", "=", "1", "\n", "", "scale", "=", "scale", "*", "scale_factor", "\n", "\n", "w", "=", "int", "(", "round", "(", "w", "*", "scale", ")", ")", "\n", "h", "=", "int", "(", "round", "(", "h", "*", "scale", ")", ")", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "resize", "(", "data", "[", "'img'", "]", ",", "(", "w", ",", "h", ")", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "(", "w", ",", "h", ")", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "(", "w", ",", "h", ")", ")", "\n", "", "", "return", "data", "\n", "\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "ResizeByLong", ":", "\n", "    ", "\"\"\"\n    Resize the long side of an image to given size, and then scale the other side proportionally.\n\n    Args:\n        long_size (int): The target size of long side.\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "long_size", ")", ":", "\n", "        ", "self", ".", "long_size", "=", "long_size", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ResizeByLong.__init__": [[205, 207], ["None"], "methods", ["None"], ["\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "ResizeByShort", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ResizeByLong.__call__": [[208, 227], ["paddleseg.transforms.functional.resize_long", "paddleseg.transforms.functional.resize_long"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long"], ["    ", "\"\"\"\n    Resize the short side of an image to given size, and then scale the other side proportionally.\n\n    Args:\n        short_size (int): The target size of short side.\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "short_size", ")", ":", "\n", "        ", "self", ".", "short_size", "=", "short_size", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "resize_short", "(", "data", "[", "'img'", "]", ",", "self", ".", "short_size", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize_short", "(", "data", "[", "key", "]", ",", "self", ".", "short_size", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize_short", "(", "data", "[", "key", "]", ",", "self", ".", "short_size", ")", "\n", "", "", "return", "data", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ResizeByShort.__init__": [[238, 240], ["None"], "methods", ["None"], ["\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ResizeByShort.__call__": [[241, 260], ["paddleseg.transforms.functional.resize_short", "paddleseg.transforms.functional.resize_short"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_short", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_short"], ["\n", "h", ",", "w", "=", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "rw", "=", "w", "-", "w", "%", "self", ".", "mult_int", "\n", "rh", "=", "h", "-", "h", "%", "self", ".", "mult_int", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "resize", "(", "data", "[", "'img'", "]", ",", "(", "rw", ",", "rh", ")", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "(", "rw", ",", "rh", ")", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "resize", "(", "data", "[", "key", "]", ",", "(", "rw", ",", "rh", ")", ")", "\n", "\n", "", "", "return", "data", "\n", "\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "Normalize", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.LimitLong.__init__": [[280, 298], ["isinstance", "TypeError", "isinstance", "TypeError", "ValueError", "type", "type"], "methods", ["None"], ["            ", "raise", "ValueError", "(", "'{}: std is invalid!'", ".", "format", "(", "self", ")", ")", "\n", "\n", "", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "mean", "=", "np", ".", "array", "(", "self", ".", "mean", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", ":", "]", "\n", "std", "=", "np", ".", "array", "(", "self", ".", "std", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", ":", "]", "\n", "data", "[", "'img'", "]", "=", "functional", ".", "normalize", "(", "data", "[", "'img'", "]", ",", "mean", ",", "std", ")", "\n", "if", "'fg'", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "data", "[", "'fg'", "]", "=", "functional", ".", "normalize", "(", "data", "[", "'fg'", "]", ",", "mean", ",", "std", ")", "\n", "", "if", "'bg'", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "data", "[", "'bg'", "]", "=", "functional", ".", "normalize", "(", "data", "[", "'bg'", "]", ",", "mean", ",", "std", ")", "\n", "\n", "", "return", "data", "\n", "\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "RandomCropByAlpha", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.LimitLong.__call__": [[299, 325], ["max", "paddleseg.transforms.functional.resize_long", "paddleseg.transforms.functional.resize_long"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long"], ["\n", "\n", "def", "__init__", "(", "self", ",", "crop_size", "=", "(", "(", "320", ",", "320", ")", ",", "(", "480", ",", "480", ")", ",", "(", "640", ",", "640", ")", ")", ",", "\n", "prob", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "prob", "=", "prob", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "idex", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "len", "(", "self", ".", "crop_size", ")", ")", "\n", "crop_w", ",", "crop_h", "=", "self", ".", "crop_size", "[", "idex", "]", "\n", "\n", "img_h", "=", "data", "[", "'img'", "]", ".", "shape", "[", "0", "]", "\n", "img_w", "=", "data", "[", "'img'", "]", ".", "shape", "[", "1", "]", "\n", "if", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "prob", ":", "\n", "            ", "crop_center", "=", "np", ".", "where", "(", "(", "data", "[", "'alpha'", "]", ">", "0", ")", "&", "(", "data", "[", "'alpha'", "]", "<", "255", ")", ")", "\n", "center_h_array", ",", "center_w_array", "=", "crop_center", "\n", "if", "len", "(", "center_h_array", ")", "==", "0", ":", "\n", "                ", "return", "data", "\n", "", "rand_ind", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "center_h_array", ")", ")", "\n", "center_h", "=", "center_h_array", "[", "rand_ind", "]", "\n", "center_w", "=", "center_w_array", "[", "rand_ind", "]", "\n", "delta_h", "=", "crop_h", "//", "2", "\n", "delta_w", "=", "crop_w", "//", "2", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ResizeRangeScaling.__init__": [[337, 344], ["ValueError"], "methods", ["None"], ["end_w", "=", "min", "(", "img_w", ",", "start_w", "+", "crop_w", ")", "\n", "\n", "data", "[", "'img'", "]", "=", "data", "[", "'img'", "]", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "data", "[", "key", "]", "=", "data", "[", "key", "]", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ResizeRangeScaling.__call__": [[345, 369], ["paddleseg.transforms.functional.resize_long", "int", "paddleseg.transforms.functional.resize_long", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long"], ["\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "RandomCrop", ":", "\n", "    ", "\"\"\"\n    Randomly crop\n\n    Args:\n    crop_size (tuple|list): The size you want to crop from image.\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "crop_size", "=", "(", "(", "320", ",", "320", ")", ",", "(", "480", ",", "480", ")", ",", "(", "640", ",", "640", ")", ")", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "crop_size", "[", "0", "]", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "crop_size", "=", "[", "crop_size", "]", "\n", "", "self", ".", "crop_size", "=", "crop_size", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "idex", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "len", "(", "self", ".", "crop_size", ")", ")", "\n", "crop_w", ",", "crop_h", "=", "self", ".", "crop_size", "[", "idex", "]", "\n", "img_h", ",", "img_w", "=", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "\n", "start_h", "=", "0", "\n", "start_w", "=", "0", "\n", "if", "img_h", ">", "crop_h", ":", "\n", "            ", "start_h", "=", "np", ".", "random", ".", "randint", "(", "img_h", "-", "crop_h", "+", "1", ")", "\n", "", "if", "img_w", ">", "crop_w", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ResizeStepScaling.__init__": [[385, 397], ["ValueError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ResizeStepScaling.__call__": [[398, 434], ["int", "int", "paddleseg.transforms.functional.resize", "round", "round", "paddleseg.transforms.functional.resize", "numpy.random.uniform", "int", "numpy.linspace().tolist", "numpy.random.shuffle", "numpy.linspace"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle"], ["\n", "\n", "def", "__init__", "(", "self", ",", "max_long", "=", "None", ",", "min_long", "=", "None", ")", ":", "\n", "        ", "if", "max_long", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "max_long", ",", "int", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"Type of `max_long` is invalid. It should be int, but it is {}\"", "\n", ".", "format", "(", "type", "(", "max_long", ")", ")", ")", "\n", "", "", "if", "min_long", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "min_long", ",", "int", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"Type of `min_long` is invalid. It should be int, but it is {}\"", "\n", ".", "format", "(", "type", "(", "min_long", ")", ")", ")", "\n", "", "", "if", "(", "max_long", "is", "not", "None", ")", "and", "(", "min_long", "is", "not", "None", ")", ":", "\n", "            ", "if", "min_long", ">", "max_long", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'`max_long should not smaller than min_long, but they are {} and {}'", "\n", ".", "format", "(", "max_long", ",", "min_long", ")", ")", "\n", "", "", "self", ".", "max_long", "=", "max_long", "\n", "self", ".", "min_long", "=", "min_long", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "h", ",", "w", "=", "data", "[", "'img'", "]", ".", "shape", "[", ":", "2", "]", "\n", "long_edge", "=", "max", "(", "h", ",", "w", ")", "\n", "target", "=", "long_edge", "\n", "if", "(", "self", ".", "max_long", "is", "not", "None", ")", "and", "(", "long_edge", ">", "self", ".", "max_long", ")", ":", "\n", "            ", "target", "=", "self", ".", "max_long", "\n", "", "elif", "(", "self", ".", "min_long", "is", "not", "None", ")", "and", "(", "long_edge", "<", "self", ".", "min_long", ")", ":", "\n", "            ", "target", "=", "self", ".", "min_long", "\n", "\n", "", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'resize'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "if", "target", "!=", "long_edge", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "functional", ".", "resize_long", "(", "data", "[", "'img'", "]", ",", "target", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "                ", "if", "key", "==", "'trimap'", ":", "\n", "                    ", "data", "[", "key", "]", "=", "functional", ".", "resize_long", "(", "data", "[", "key", "]", ",", "target", ",", "\n", "cv2", ".", "INTER_NEAREST", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.Normalize.__init__": [[449, 461], ["ValueError", "reduce", "ValueError", "isinstance", "isinstance"], "methods", ["None"], ["\n", "\n", "def", "__init__", "(", "self", ",", "max_short", "=", "None", ",", "min_short", "=", "None", ")", ":", "\n", "        ", "if", "max_short", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "max_short", ",", "int", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.Normalize.__call__": [[462, 480], ["paddleseg.transforms.functional.normalize", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize"], ["                ", "raise", "TypeError", "(", "\n", "\"Type of `max_short` is invalid. It should be int, but it is {}\"", "\n", ".", "format", "(", "type", "(", "max_short", ")", ")", ")", "\n", "", "", "if", "min_short", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "min_short", ",", "int", ")", ":", "\n", "                ", "raise", "TypeError", "(", "\n", "\"Type of `min_short` is invalid. It should be int, but it is {}\"", "\n", ".", "format", "(", "type", "(", "min_short", ")", ")", ")", "\n", "", "", "if", "(", "max_short", "is", "not", "None", ")", "and", "(", "min_short", "is", "not", "None", ")", ":", "\n", "            ", "if", "min_short", ">", "max_short", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'`max_short should not smaller than min_short, but they are {} and {}'", "\n", ".", "format", "(", "max_short", ",", "min_short", ")", ")", "\n", "", "", "self", ".", "max_short", "=", "max_short", "\n", "self", ".", "min_short", "=", "min_short", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "h", ",", "w", "=", "data", "[", "'img'", "]", ".", "shape", "[", ":", "2", "]", "\n", "short_edge", "=", "min", "(", "h", ",", "w", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.Padding.__init__": [[498, 514], ["isinstance", "isinstance", "TypeError", "len", "ValueError", "type"], "methods", ["None"], ["\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "RandomHorizontalFlip", ":", "\n", "    ", "\"\"\"\n    Flip an image horizontally with a certain probability.\n\n    Args:\n        prob (float, optional): A probability of horizontally flipping. Default: 0.5.\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "prob", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "prob", "=", "prob", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "functional", ".", "horizontal_flip", "(", "data", "[", "'img'", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.Padding.__call__": [[515, 560], ["isinstance", "ValueError", "cv2.copyMakeBorder", "cv2.copyMakeBorder"], "methods", ["None"], ["for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "                ", "data", "[", "key", "]", "=", "functional", ".", "horizontal_flip", "(", "data", "[", "key", "]", ")", "\n", "\n", "", "", "return", "data", "\n", "\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "RandomBlur", ":", "\n", "    ", "\"\"\"\n    Blurring an image by a Gaussian function with a certain probability.\n\n    Args:\n        prob (float, optional): A probability of blurring an image. Default: 0.1.\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "prob", "=", "0.1", ")", ":", "\n", "        ", "self", ".", "prob", "=", "prob", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "prob", "<=", "0", ":", "\n", "            ", "n", "=", "0", "\n", "", "elif", "self", ".", "prob", ">=", "1", ":", "\n", "            ", "n", "=", "1", "\n", "", "else", ":", "\n", "            ", "n", "=", "int", "(", "1.0", "/", "self", ".", "prob", ")", "\n", "", "if", "n", ">", "0", ":", "\n", "            ", "if", "np", ".", "random", ".", "randint", "(", "0", ",", "n", ")", "==", "0", ":", "\n", "                ", "radius", "=", "np", ".", "random", ".", "randint", "(", "3", ",", "10", ")", "\n", "if", "radius", "%", "2", "!=", "1", ":", "\n", "                    ", "radius", "=", "radius", "+", "1", "\n", "", "if", "radius", ">", "9", ":", "\n", "                    ", "radius", "=", "9", "\n", "", "data", "[", "'img'", "]", "=", "cv2", ".", "GaussianBlur", "(", "data", "[", "'img'", "]", ",", "(", "radius", ",", "radius", ")", ",", "0", ",", "\n", "0", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "                    ", "if", "key", "==", "'trimap'", ":", "\n", "                        ", "continue", "\n", "", "data", "[", "key", "]", "=", "cv2", ".", "GaussianBlur", "(", "data", "[", "key", "]", ",", "(", "radius", ",", "radius", ")", ",", "0", ",", "\n", "0", ")", "\n", "", "", "", "return", "data", "\n", "\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "RandomDistort", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.PaddingByAspectRatio.__init__": [[570, 577], ["None"], "methods", ["None"], ["\n", "\n", "def", "__init__", "(", "self", ",", "\n", "brightness_range", "=", "0.5", ",", "\n", "brightness_prob", "=", "0.5", ",", "\n", "contrast_range", "=", "0.5", ",", "\n", "contrast_prob", "=", "0.5", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.PaddingByAspectRatio.__call__": [[578, 605], ["transforms.Padding", "Padding.", "int", "int"], "methods", ["None"], ["saturation_range", "=", "0.5", ",", "\n", "saturation_prob", "=", "0.5", ",", "\n", "hue_range", "=", "18", ",", "\n", "hue_prob", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "brightness_range", "=", "brightness_range", "\n", "self", ".", "brightness_prob", "=", "brightness_prob", "\n", "self", ".", "contrast_range", "=", "contrast_range", "\n", "self", ".", "contrast_prob", "=", "contrast_prob", "\n", "self", ".", "saturation_range", "=", "saturation_range", "\n", "self", ".", "saturation_prob", "=", "saturation_prob", "\n", "self", ".", "hue_range", "=", "hue_range", "\n", "self", ".", "hue_prob", "=", "hue_prob", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "brightness_lower", "=", "1", "-", "self", ".", "brightness_range", "\n", "brightness_upper", "=", "1", "+", "self", ".", "brightness_range", "\n", "contrast_lower", "=", "1", "-", "self", ".", "contrast_range", "\n", "contrast_upper", "=", "1", "+", "self", ".", "contrast_range", "\n", "saturation_lower", "=", "1", "-", "self", ".", "saturation_range", "\n", "saturation_upper", "=", "1", "+", "self", ".", "saturation_range", "\n", "hue_lower", "=", "-", "self", ".", "hue_range", "\n", "hue_upper", "=", "self", ".", "hue_range", "\n", "ops", "=", "[", "\n", "functional", ".", "brightness", ",", "functional", ".", "contrast", ",", "functional", ".", "saturation", ",", "\n", "functional", ".", "hue", "\n", "]", "\n", "random", ".", "shuffle", "(", "ops", ")", "\n", "params_dict", "=", "{", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomPaddingCrop.__init__": [[624, 640], ["isinstance", "isinstance", "TypeError", "len", "ValueError", "type"], "methods", ["None"], ["'brightness'", ":", "self", ".", "brightness_prob", ",", "\n", "'contrast'", ":", "self", ".", "contrast_prob", ",", "\n", "'saturation'", ":", "self", ".", "saturation_prob", ",", "\n", "'hue'", ":", "self", ".", "hue_prob", "\n", "}", "\n", "\n", "im", "=", "data", "[", "'img'", "]", ".", "astype", "(", "'uint8'", ")", "\n", "im", "=", "Image", ".", "fromarray", "(", "im", ")", "\n", "for", "id", "in", "range", "(", "len", "(", "ops", ")", ")", ":", "\n", "            ", "params", "=", "params_dict", "[", "ops", "[", "id", "]", ".", "__name__", "]", "\n", "params", "[", "'im'", "]", "=", "im", "\n", "prob", "=", "prob_dict", "[", "ops", "[", "id", "]", ".", "__name__", "]", "\n", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<", "prob", ":", "\n", "                ", "im", "=", "ops", "[", "id", "]", "(", "**", "params", ")", "\n", "", "", "data", "[", "'img'", "]", "=", "np", ".", "asarray", "(", "im", ")", "\n", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomPaddingCrop.__call__": [[641, 703], ["isinstance", "max", "max", "cv2.copyMakeBorder", "numpy.random.randint", "numpy.random.randint", "cv2.copyMakeBorder"], "methods", ["None"], ["            ", "if", "key", "in", "[", "'alpha'", ",", "'trimap'", "]", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "im", "=", "data", "[", "key", "]", ".", "astype", "(", "'uint8'", ")", "\n", "im", "=", "Image", ".", "fromarray", "(", "im", ")", "\n", "for", "id", "in", "range", "(", "len", "(", "ops", ")", ")", ":", "\n", "                    ", "params", "=", "params_dict", "[", "ops", "[", "id", "]", ".", "__name__", "]", "\n", "params", "[", "'im'", "]", "=", "im", "\n", "prob", "=", "prob_dict", "[", "ops", "[", "id", "]", ".", "__name__", "]", "\n", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<", "prob", ":", "\n", "                        ", "im", "=", "ops", "[", "id", "]", "(", "**", "params", ")", "\n", "", "", "data", "[", "key", "]", "=", "np", ".", "asarray", "(", "im", ")", "\n", "", "", "return", "data", "\n", "\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "Padding", ":", "\n", "    ", "\"\"\"\n    Add bottom-right padding to a raw image or annotation image.\n\n    Args:\n        target_size (list|tuple): The target size after padding.\n        im_padding_value (list, optional): The padding value of raw image.\n            Default: [127.5, 127.5, 127.5].\n        label_padding_value (int, optional): The padding value of annotation image. Default: 255.\n\n    Raises:\n        TypeError: When target_size is neither list nor tuple.\n        ValueError: When the length of target_size is not 2.\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "target_size", ",", "im_padding_value", "=", "(", "127.5", ",", "127.5", ",", "127.5", ")", ")", ":", "\n", "        ", "if", "isinstance", "(", "target_size", ",", "list", ")", "or", "isinstance", "(", "target_size", ",", "tuple", ")", ":", "\n", "            ", "if", "len", "(", "target_size", ")", "!=", "2", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'`target_size` should include 2 elements, but it is {}'", ".", "\n", "format", "(", "target_size", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "\"Type of target_size is invalid. It should be list or tuple, now is {}\"", "\n", ".", "format", "(", "type", "(", "target_size", ")", ")", ")", "\n", "\n", "", "self", ".", "target_size", "=", "target_size", "\n", "self", ".", "im_padding_value", "=", "im_padding_value", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "im_height", ",", "im_width", "=", "data", "[", "'img'", "]", ".", "shape", "[", "0", "]", ",", "data", "[", "'img'", "]", ".", "shape", "[", "1", "]", "\n", "target_height", "=", "self", ".", "target_size", "[", "1", "]", "\n", "target_width", "=", "self", ".", "target_size", "[", "0", "]", "\n", "pad_height", "=", "max", "(", "0", ",", "target_height", "-", "im_height", ")", "\n", "pad_width", "=", "max", "(", "0", ",", "target_width", "-", "im_width", ")", "\n", "data", "[", "'trans_info'", "]", ".", "append", "(", "(", "'padding'", ",", "data", "[", "'img'", "]", ".", "shape", "[", "0", ":", "2", "]", ")", ")", "\n", "if", "(", "pad_height", "==", "0", ")", "and", "(", "pad_width", "==", "0", ")", ":", "\n", "            ", "return", "data", "\n", "", "else", ":", "\n", "            ", "data", "[", "'img'", "]", "=", "cv2", ".", "copyMakeBorder", "(", "\n", "data", "[", "'img'", "]", ",", "\n", "0", ",", "\n", "pad_height", ",", "\n", "0", ",", "\n", "pad_width", ",", "\n", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "value", "=", "self", ".", "im_padding_value", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomCenterCrop.__init__": [[718, 734], ["isinstance", "isinstance", "TypeError", "len", "ValueError", "ValueError", "type"], "methods", ["None"], ["\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "RandomSharpen", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "prob", "=", "0.1", ")", ":", "\n", "        ", "if", "prob", "<", "0", ":", "\n", "            ", "self", ".", "prob", "=", "0", "\n", "", "elif", "prob", ">", "1", ":", "\n", "            ", "self", ".", "prob", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "prob", "=", "prob", "\n", "\n", "", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "self", ".", "prob", ":", "\n", "            ", "return", "data", "\n", "\n", "", "radius", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "3", ",", "5", ",", "7", ",", "9", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomCenterCrop.__call__": [[735, 768], ["numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint"], "methods", ["None"], ["w", "=", "np", ".", "random", ".", "uniform", "(", "0.1", ",", "0.5", ")", "\n", "blur_img", "=", "cv2", ".", "GaussianBlur", "(", "data", "[", "'img'", "]", ",", "(", "radius", ",", "radius", ")", ",", "5", ")", "\n", "data", "[", "'img'", "]", "=", "cv2", ".", "addWeighted", "(", "data", "[", "'img'", "]", ",", "1", "+", "w", ",", "blur_img", ",", "-", "w", ",", "0", ")", "\n", "for", "key", "in", "data", ".", "get", "(", "'gt_fields'", ",", "[", "]", ")", ":", "\n", "            ", "if", "key", "==", "'trimap'", "or", "key", "==", "'alpha'", ":", "\n", "                ", "continue", "\n", "", "blur_img", "=", "cv2", ".", "GaussianBlur", "(", "data", "[", "key", "]", ",", "(", "0", ",", "0", ")", ",", "5", ")", "\n", "data", "[", "key", "]", "=", "cv2", ".", "addWeighted", "(", "data", "[", "key", "]", ",", "1.5", ",", "blur_img", ",", "-", "0.5", ",", "0", ")", "\n", "\n", "", "return", "data", "\n", "\n", "\n", "", "", "@", "manager", ".", "TRANSFORMS", ".", "add_component", "\n", "class", "RandomNoise", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "prob", "=", "0.1", ")", ":", "\n", "        ", "if", "prob", "<", "0", ":", "\n", "            ", "self", ".", "prob", "=", "0", "\n", "", "elif", "prob", ">", "1", ":", "\n", "            ", "self", ".", "prob", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "prob", "=", "prob", "\n", "\n", "", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "self", ".", "prob", ":", "\n", "            ", "return", "data", "\n", "", "mean", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "0.04", ")", "\n", "var", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "0.001", ")", "\n", "noise", "=", "np", ".", "random", ".", "normal", "(", "mean", ",", "var", "**", "0.5", ",", "data", "[", "'img'", "]", ".", "shape", ")", "*", "255", "\n", "data", "[", "'img'", "]", "=", "data", "[", "'img'", "]", "+", "noise", "\n", "data", "[", "'img'", "]", "=", "np", ".", "clip", "(", "data", "[", "'img'", "]", ",", "0", ",", "255", ")", "\n", "\n", "return", "data", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ScalePadding.__init__": [[787, 804], ["isinstance", "isinstance", "TypeError", "len", "ValueError", "type"], "methods", ["None"], ["tmp_name", "=", "os", ".", "path", ".", "join", "(", "seg_env", ".", "TMP_HOME", ",", "tmp_name", ")", "\n", "cv2", ".", "imwrite", "(", "tmp_name", ",", "img", ",", "[", "int", "(", "cv2", ".", "IMWRITE_JPEG_QUALITY", ")", ",", "q", "]", ")", "\n", "data", "[", "'img'", "]", "=", "cv2", ".", "imread", "(", "tmp_name", ")", "\n", "\n", "return", "data", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.ScalePadding.__call__": [[805, 844], ["numpy.uint8", "paddleseg.transforms.functional.resize", "numpy.zeros", "int", "int", "numpy.uint8", "paddleseg.transforms.functional.resize", "numpy.zeros", "max", "max", "max", "max"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomNoise.__init__": [[857, 860], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomNoise.__call__": [[861, 882], ["random.random", "numpy.array", "numpy.random.normal", "random.random"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomBlur.__init__": [[899, 902], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomBlur.__call__": [[903, 948], ["numpy.array", "int", "numpy.random.randint", "numpy.random.randint", "numpy.array", "cv2.GaussianBlur", "cv2.medianBlur", "cv2.blur", "random.random", "cv2.GaussianBlur", "cv2.GaussianBlur", "cv2.medianBlur", "cv2.blur"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomRotation.__init__": [[962, 969], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomRotation.__call__": [[970, 1016], ["numpy.random.uniform", "cv2.getRotationMatrix2D", "numpy.abs", "numpy.abs", "int", "int", "cv2.warpAffine", "cv2.warpAffine"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomScaleAspect.__init__": [[1029, 1032], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomScaleAspect.__call__": [[1033, 1077], ["range", "numpy.random.uniform", "int", "int", "numpy.random.uniform", "numpy.sqrt", "numpy.sqrt", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "cv2.resize", "cv2.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomDistort.__init__": [[1097, 1118], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomDistort.__call__": [[1119, 1186], ["random.shuffle", "numpy.asarray().astype.astype", "PIL.Image.fromarray", "range", "numpy.asarray().astype", "len", "numpy.random.uniform", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomAffine.__init__": [[1203, 1218], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transforms.RandomAffine.__call__": [[1219, 1272], ["numpy.array", "numpy.mean", "numpy.array", "cv2.warpAffine", "math.cos", "math.sin", "numpy.array.dot", "numpy.uint8", "tuple", "cv2.warpAffine", "random.random", "numpy.uint8", "tuple", "random.random", "random.random", "random.random", "float", "float"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.normalize": [[21, 26], ["im.astype"], "function", ["None"], ["def", "normalize", "(", "im", ",", "mean", ",", "std", ")", ":", "\n", "    ", "im", "=", "im", ".", "astype", "(", "np", ".", "float32", ",", "copy", "=", "False", ")", "/", "255.0", "\n", "im", "-=", "mean", "\n", "im", "/=", "std", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize": [[28, 37], ["cv2.resize", "isinstance", "isinstance"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "def", "resize", "(", "im", ",", "target_size", "=", "608", ",", "interp", "=", "cv2", ".", "INTER_LINEAR", ")", ":", "\n", "    ", "if", "isinstance", "(", "target_size", ",", "list", ")", "or", "isinstance", "(", "target_size", ",", "tuple", ")", ":", "\n", "        ", "w", "=", "target_size", "[", "0", "]", "\n", "h", "=", "target_size", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "w", "=", "target_size", "\n", "h", "=", "target_size", "\n", "", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "w", ",", "h", ")", ",", "interpolation", "=", "interp", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_long": [[39, 48], ["max", "int", "int", "cv2.resize", "float", "float", "round", "round"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "def", "resize_long", "(", "im", ",", "long_size", "=", "224", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", ":", "\n", "    ", "value", "=", "max", "(", "im", ".", "shape", "[", "0", "]", ",", "im", ".", "shape", "[", "1", "]", ")", "\n", "scale", "=", "float", "(", "long_size", ")", "/", "float", "(", "value", ")", "\n", "resized_width", "=", "int", "(", "round", "(", "im", ".", "shape", "[", "1", "]", "*", "scale", ")", ")", "\n", "resized_height", "=", "int", "(", "round", "(", "im", ".", "shape", "[", "0", "]", "*", "scale", ")", ")", "\n", "\n", "im", "=", "cv2", ".", "resize", "(", "\n", "im", ",", "(", "resized_width", ",", "resized_height", ")", ",", "interpolation", "=", "interpolation", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_short": [[50, 59], ["min", "int", "int", "cv2.resize", "float", "float", "round", "round"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "def", "resize_short", "(", "im", ",", "short_size", "=", "224", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", ":", "\n", "    ", "value", "=", "min", "(", "im", ".", "shape", "[", "0", "]", ",", "im", ".", "shape", "[", "1", "]", ")", "\n", "scale", "=", "float", "(", "short_size", ")", "/", "float", "(", "value", ")", "\n", "resized_width", "=", "int", "(", "round", "(", "im", ".", "shape", "[", "1", "]", "*", "scale", ")", ")", "\n", "resized_height", "=", "int", "(", "round", "(", "im", ".", "shape", "[", "0", "]", "*", "scale", ")", ")", "\n", "\n", "im", "=", "cv2", ".", "resize", "(", "\n", "im", ",", "(", "resized_width", ",", "resized_height", ")", ",", "interpolation", "=", "interpolation", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.horizontal_flip": [[61, 67], ["len", "len"], "function", ["None"], ["", "def", "horizontal_flip", "(", "im", ")", ":", "\n", "    ", "if", "len", "(", "im", ".", "shape", ")", "==", "3", ":", "\n", "        ", "im", "=", "im", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "elif", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "        ", "im", "=", "im", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.vertical_flip": [[69, 75], ["len", "len"], "function", ["None"], ["", "def", "vertical_flip", "(", "im", ")", ":", "\n", "    ", "if", "len", "(", "im", ".", "shape", ")", "==", "3", ":", "\n", "        ", "im", "=", "im", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "", "elif", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "        ", "im", "=", "im", "[", ":", ":", "-", "1", ",", ":", "]", "\n", "", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.brightness": [[77, 81], ["numpy.random.uniform", "PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness"], "function", ["None"], ["", "def", "brightness", "(", "im", ",", "brightness_lower", ",", "brightness_upper", ")", ":", "\n", "    ", "brightness_delta", "=", "np", ".", "random", ".", "uniform", "(", "brightness_lower", ",", "brightness_upper", ")", "\n", "im", "=", "ImageEnhance", ".", "Brightness", "(", "im", ")", ".", "enhance", "(", "brightness_delta", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.contrast": [[83, 87], ["numpy.random.uniform", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast"], "function", ["None"], ["", "def", "contrast", "(", "im", ",", "contrast_lower", ",", "contrast_upper", ")", ":", "\n", "    ", "contrast_delta", "=", "np", ".", "random", ".", "uniform", "(", "contrast_lower", ",", "contrast_upper", ")", "\n", "im", "=", "ImageEnhance", ".", "Contrast", "(", "im", ")", ".", "enhance", "(", "contrast_delta", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.saturation": [[89, 93], ["numpy.random.uniform", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color"], "function", ["None"], ["", "def", "saturation", "(", "im", ",", "saturation_lower", ",", "saturation_upper", ")", ":", "\n", "    ", "saturation_delta", "=", "np", ".", "random", ".", "uniform", "(", "saturation_lower", ",", "saturation_upper", ")", "\n", "im", "=", "ImageEnhance", ".", "Color", "(", "im", ")", ".", "enhance", "(", "saturation_delta", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.hue": [[95, 101], ["numpy.random.uniform", "numpy.array", "PIL.Image.fromarray().convert", "Image.fromarray().convert.convert", "PIL.Image.fromarray"], "function", ["None"], ["", "def", "hue", "(", "im", ",", "hue_lower", ",", "hue_upper", ")", ":", "\n", "    ", "hue_delta", "=", "np", ".", "random", ".", "uniform", "(", "hue_lower", ",", "hue_upper", ")", "\n", "im", "=", "np", ".", "array", "(", "im", ".", "convert", "(", "'HSV'", ")", ")", "\n", "im", "[", ":", ",", ":", ",", "0", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "+", "hue_delta", "\n", "im", "=", "Image", ".", "fromarray", "(", "im", ",", "mode", "=", "'HSV'", ")", ".", "convert", "(", "'RGB'", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.sharpness": [[103, 107], ["numpy.random.uniform", "PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness"], "function", ["None"], ["", "def", "sharpness", "(", "im", ",", "sharpness_lower", ",", "sharpness_upper", ")", ":", "\n", "    ", "sharpness_delta", "=", "np", ".", "random", ".", "uniform", "(", "sharpness_lower", ",", "sharpness_upper", ")", "\n", "im", "=", "ImageEnhance", ".", "Sharpness", "(", "im", ")", ".", "enhance", "(", "sharpness_delta", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.rotate": [[109, 113], ["numpy.random.uniform", "im.rotate.rotate", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.rotate"], ["", "def", "rotate", "(", "im", ",", "rotate_lower", ",", "rotate_upper", ")", ":", "\n", "    ", "rotate_delta", "=", "np", ".", "random", ".", "uniform", "(", "rotate_lower", ",", "rotate_upper", ")", "\n", "im", "=", "im", ".", "rotate", "(", "int", "(", "rotate_delta", ")", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.mask_to_onehot": [[115, 129], ["numpy.array().astype", "range", "numpy.array"], "function", ["None"], ["", "def", "mask_to_onehot", "(", "mask", ",", "num_classes", ")", ":", "\n", "    ", "\"\"\"\n    Convert a mask (H, W) to onehot (K, H, W).\n\n    Args:\n        mask (np.ndarray): Label mask with shape (H, W)\n        num_classes (int): Number of classes.\n\n    Returns:\n        np.ndarray: Onehot mask with shape(K, H, W).\n    \"\"\"", "\n", "_mask", "=", "[", "mask", "==", "i", "for", "i", "in", "range", "(", "num_classes", ")", "]", "\n", "_mask", "=", "np", ".", "array", "(", "_mask", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.onehot_to_binary_edge": [[131, 161], ["numpy.zeros", "numpy.pad", "range", "numpy.expand_dims", "ValueError", "scipy.ndimage.morphology.distance_transform_edt", "scipy.ndimage.morphology.distance_transform_edt"], "function", ["None"], ["", "def", "onehot_to_binary_edge", "(", "mask", ",", "radius", ")", ":", "\n", "    ", "\"\"\"\n    Convert a onehot mask (K, H, W) to a edge mask.\n\n    Args:\n        mask (np.ndarray): Onehot mask with shape (K, H, W)\n        radius (int|float): Radius of edge.\n\n    Returns:\n        np.ndarray: Edge mask with shape(H, W).\n    \"\"\"", "\n", "if", "radius", "<", "1", ":", "\n", "        ", "raise", "ValueError", "(", "'`radius` should be greater than or equal to 1'", ")", "\n", "", "num_classes", "=", "mask", ".", "shape", "[", "0", "]", "\n", "\n", "edge", "=", "np", ".", "zeros", "(", "mask", ".", "shape", "[", "1", ":", "]", ")", "\n", "# pad borders", "\n", "mask", "=", "np", ".", "pad", "(", "mask", ",", "(", "(", "0", ",", "0", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ",", "\n", "mode", "=", "'constant'", ",", "\n", "constant_values", "=", "0", ")", "\n", "for", "i", "in", "range", "(", "num_classes", ")", ":", "\n", "        ", "dist", "=", "distance_transform_edt", "(", "mask", "[", "i", ",", ":", "]", ")", "+", "distance_transform_edt", "(", "\n", "1.0", "-", "mask", "[", "i", ",", ":", "]", ")", "\n", "dist", "=", "dist", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "dist", "[", "dist", ">", "radius", "]", "=", "0", "\n", "edge", "+=", "dist", "\n", "\n", "", "edge", "=", "np", ".", "expand_dims", "(", "edge", ",", "axis", "=", "0", ")", "\n", "edge", "=", "(", "edge", ">", "0", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "edge", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.mask_to_binary_edge": [[163, 179], ["mask.squeeze.squeeze", "functional.mask_to_onehot", "functional.onehot_to_binary_edge"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.mask_to_onehot", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.onehot_to_binary_edge"], ["", "def", "mask_to_binary_edge", "(", "mask", ",", "radius", ",", "num_classes", ")", ":", "\n", "    ", "\"\"\"\n    Convert a segmentic segmentation mask (H, W) to a binary edge mask(H, W).\n\n    Args:\n        mask (np.ndarray): Label mask with shape (H, W)\n        radius (int|float): Radius of edge.\n        num_classes (int): Number of classes.\n\n    Returns:\n        np.ndarray: Edge mask with shape(H, W).\n    \"\"\"", "\n", "mask", "=", "mask", ".", "squeeze", "(", ")", "\n", "onehot", "=", "mask_to_onehot", "(", "mask", ",", "num_classes", ")", "\n", "edge", "=", "onehot_to_binary_edge", "(", "onehot", ",", "radius", ")", "\n", "return", "edge", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.lane_transforms.LaneRandomRotation.__init__": [[34, 43], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "max_rotation", "=", "15", ",", "\n", "keeping_size", "=", "False", ",", "\n", "im_padding_value", "=", "(", "127.5", ",", "127.5", ",", "127.5", ")", ",", "\n", "label_padding_value", "=", "255", ")", ":", "\n", "        ", "self", ".", "max_rotation", "=", "max_rotation", "\n", "self", ".", "keeping_size", "=", "keeping_size", "\n", "self", ".", "im_padding_value", "=", "im_padding_value", "\n", "self", ".", "label_padding_value", "=", "label_padding_value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.lane_transforms.LaneRandomRotation.__call__": [[44, 92], ["numpy.random.uniform", "cv2.getRotationMatrix2D", "cv2.warpAffine", "numpy.abs", "numpy.abs", "int", "int", "cv2.warpAffine"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "im", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            im (np.ndarray): The Image data.\n            label (np.ndarray, optional): The label data. Default: None.\n\n        Returns:\n            (tuple). When label is None, it returns (im, ), otherwise it returns (im, label).\n        \"\"\"", "\n", "\n", "if", "self", ".", "max_rotation", ">", "0", ":", "\n", "            ", "(", "h", ",", "w", ")", "=", "im", ".", "shape", "[", ":", "2", "]", "\n", "do_rotation", "=", "np", ".", "random", ".", "uniform", "(", "-", "self", ".", "max_rotation", ",", "\n", "self", ".", "max_rotation", ")", "\n", "pc", "=", "(", "w", "//", "2", ",", "h", "//", "2", ")", "\n", "r", "=", "cv2", ".", "getRotationMatrix2D", "(", "pc", ",", "do_rotation", ",", "1.0", ")", "\n", "if", "self", ".", "keeping_size", ":", "\n", "                ", "dsize", "=", "(", "w", ",", "h", ")", "\n", "", "else", ":", "\n", "                ", "cos", "=", "np", ".", "abs", "(", "r", "[", "0", ",", "0", "]", ")", "\n", "sin", "=", "np", ".", "abs", "(", "r", "[", "0", ",", "1", "]", ")", "\n", "\n", "nw", "=", "int", "(", "(", "h", "*", "sin", ")", "+", "(", "w", "*", "cos", ")", ")", "\n", "nh", "=", "int", "(", "(", "h", "*", "cos", ")", "+", "(", "w", "*", "sin", ")", ")", "\n", "(", "cx", ",", "cy", ")", "=", "pc", "\n", "r", "[", "0", ",", "2", "]", "+=", "(", "nw", "/", "2", ")", "-", "cx", "\n", "r", "[", "1", ",", "2", "]", "+=", "(", "nh", "/", "2", ")", "-", "cy", "\n", "dsize", "=", "(", "nw", ",", "nh", ")", "\n", "", "im", "=", "cv2", ".", "warpAffine", "(", "\n", "im", ",", "\n", "r", ",", "\n", "dsize", "=", "dsize", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "borderValue", "=", "self", ".", "im_padding_value", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "                ", "label", "=", "cv2", ".", "warpAffine", "(", "\n", "label", ",", "\n", "r", ",", "\n", "dsize", "=", "dsize", ",", "\n", "flags", "=", "cv2", ".", "INTER_NEAREST", ",", "\n", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "borderValue", "=", "self", ".", "label_padding_value", ")", "\n", "\n", "", "", "if", "label", "is", "None", ":", "\n", "            ", "return", "(", "im", ",", ")", "\n", "", "else", ":", "\n", "            ", "return", "(", "im", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.lane_transforms.SubImgCrop.__init__": [[106, 115], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "offset_top", "=", "0", ",", "\n", "offset_bottom", "=", "0", ",", "\n", "offset_left", "=", "0", ",", "\n", "offset_right", "=", "0", ")", ":", "\n", "        ", "self", ".", "offset_top", "=", "offset_top", "\n", "self", ".", "offset_bottom", "=", "offset_bottom", "\n", "self", ".", "offset_left", "=", "offset_left", "\n", "self", ".", "offset_right", "=", "offset_right", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.lane_transforms.SubImgCrop.__call__": [[116, 146], ["Exception"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "im", ",", "label", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "offset_top", "<", "0", "or", "self", ".", "offset_bottom", "<", "0", "or", "self", ".", "offset_left", "<", "0", "or", "self", ".", "offset_right", "<", "0", ":", "\n", "            ", "raise", "Exception", "(", "\n", "\"offset_top, offset_bottom, offset_left,  offset_right must equal or greater zero\"", "\n", ")", "\n", "\n", "", "if", "self", ".", "offset_top", ">", "0", "and", "self", ".", "offset_top", "<", "im", ".", "shape", "[", "0", "]", ":", "\n", "            ", "im", "=", "im", "[", "self", ".", "offset_top", ":", ",", ":", ",", ":", "]", "\n", "if", "label", "is", "not", "None", ":", "\n", "                ", "label", "=", "label", "[", "self", ".", "offset_top", ":", ",", ":", "]", "\n", "\n", "", "", "if", "self", ".", "offset_bottom", ">", "0", "and", "self", ".", "offset_bottom", "<", "im", ".", "shape", "[", "0", "]", ":", "\n", "            ", "im", "=", "im", "[", ":", "-", "self", ".", "offset_bottom", ",", ":", ",", ":", "]", "\n", "if", "label", "is", "not", "None", ":", "\n", "                ", "label", "=", "label", "[", ":", "-", "self", ".", "offset_bottom", ",", ":", "]", "\n", "\n", "", "", "if", "self", ".", "offset_left", ">", "0", "and", "self", ".", "offset_left", "<", "im", ".", "shape", "[", "1", "]", ":", "\n", "            ", "im", "=", "im", "[", ":", ",", "self", ".", "offset_left", ":", ",", ":", "]", "\n", "if", "label", "is", "not", "None", ":", "\n", "                ", "label", "=", "label", "[", ":", ",", "self", ".", "left_w_off", ":", "]", "\n", "\n", "", "", "if", "self", ".", "offset_right", ">", "0", "and", "self", ".", "offset_right", "<", "im", ".", "shape", "[", "1", "]", ":", "\n", "            ", "im", "=", "im", "[", ":", ",", ":", "-", "self", ".", "offset_right", ",", ":", "]", "\n", "if", "label", "is", "not", "None", ":", "\n", "                ", "label", "=", "label", "[", ":", ",", ":", "-", "self", ".", "offset_right", "]", "\n", "\n", "", "", "if", "label", "is", "None", ":", "\n", "            ", "return", "(", "im", ",", ")", "\n", "", "else", ":", "\n", "            ", "return", "(", "im", ",", "label", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.target_transforms.PanopticTargetGenerator.__init__": [[36, 59], ["numpy.arange", "numpy.exp"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "ignore_index", ",", "\n", "rgb2id", ",", "\n", "thing_list", ",", "\n", "sigma", "=", "8", ",", "\n", "ignore_stuff_in_offset", "=", "False", ",", "\n", "small_instance_area", "=", "0", ",", "\n", "small_instance_weight", "=", "1", ",", "\n", "ignore_crowd_in_semantic", "=", "False", ")", ":", "\n", "        ", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "rgb2id", "=", "rgb2id", "\n", "self", ".", "thing_list", "=", "thing_list", "\n", "self", ".", "ignore_stuff_in_offset", "=", "ignore_stuff_in_offset", "\n", "self", ".", "small_instance_area", "=", "small_instance_area", "\n", "self", ".", "small_instance_weight", "=", "small_instance_weight", "\n", "self", ".", "ignore_crowd_in_semantic", "=", "ignore_crowd_in_semantic", "\n", "\n", "self", ".", "sigma", "=", "sigma", "\n", "size", "=", "6", "*", "sigma", "+", "3", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "size", ",", "1", ",", "float", ")", "\n", "y", "=", "x", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "x0", ",", "y0", "=", "3", "*", "sigma", "+", "1", ",", "3", "*", "sigma", "+", "1", "\n", "self", ".", "g", "=", "np", ".", "exp", "(", "-", "(", "(", "x", "-", "x0", ")", "**", "2", "+", "(", "y", "-", "y0", ")", "**", "2", ")", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.target_transforms.PanopticTargetGenerator.__call__": [[60, 182], ["target_transforms.PanopticTargetGenerator.rgb2id", "numpy.zeros_like", "numpy.zeros", "numpy.zeros", "numpy.ones_like", "numpy.ones_like", "numpy.ones_like", "numpy.zeros_like", "numpy.zeros_like", "dict", "numpy.zeros_like", "numpy.cumsum", "numpy.cumsum", "numpy.where", "len", "center_pts.append", "numpy.maximum", "semantic.astype", "numpy.zeros_like.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.ones_like.astype", "numpy.zeros_like.astype", "numpy.zeros_like.astype", "len", "numpy.mean", "numpy.mean", "int", "int", "int", "int", "int", "int", "max", "max", "max", "min", "max", "min", "numpy.zeros_like", "numpy.ones_like", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "min", "min"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_panoptic.CityscapesPanoptic.rgb2id", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "__call__", "(", "self", ",", "panoptic", ",", "segments", ")", ":", "\n", "        ", "\"\"\"Generates the training target.\n        reference: https://github.com/mcordts/cityscapesScripts/blob/master/cityscapesscripts/preparation/createPanopticImgs.py\n        reference: https://github.com/facebookresearch/detectron2/blob/master/datasets/prepare_panoptic_fpn.py#L18\n\n        Args:\n            panoptic (np.ndarray): Colored image encoding panoptic label.\n            segments (list): A list of dictionary containing information of every segment, it has fields:\n                - id: panoptic id, after decoding `panoptic`.\n                - category_id: semantic class id.\n                - area: segment area.\n                - bbox: segment bounding box.\n                - iscrowd: crowd region.\n\n        Returns:\n            A dictionary with fields:\n                - semantic: Tensor, semantic label, shape=(H, W).\n                - foreground: Tensor, foreground mask label, shape=(H, W).\n                - center: Tensor, center heatmap, shape=(1, H, W).\n                - center_points: List, center coordinates, with tuple (y-coord, x-coord).\n                - offset: Tensor, offset, shape=(2, H, W), first dim is (offset_y, offset_x).\n                - semantic_weights: Tensor, loss weight for semantic prediction, shape=(H, W).\n                - center_weights: Tensor, ignore region of center prediction, shape=(H, W), used as weights for center\n                    regression 0 is ignore, 1 is has instance. Multiply this mask to loss.\n                - offset_weights: Tensor, ignore region of offset prediction, shape=(H, W), used as weights for offset\n                    regression 0 is ignore, 1 is has instance. Multiply this mask to loss.\n        \"\"\"", "\n", "panoptic", "=", "self", ".", "rgb2id", "(", "panoptic", ")", "\n", "height", ",", "width", "=", "panoptic", ".", "shape", "[", "0", "]", ",", "panoptic", ".", "shape", "[", "1", "]", "\n", "semantic", "=", "np", ".", "zeros_like", "(", "panoptic", ",", "dtype", "=", "np", ".", "uint8", ")", "+", "self", ".", "ignore_index", "\n", "foreground", "=", "np", ".", "zeros_like", "(", "panoptic", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "center", "=", "np", ".", "zeros", "(", "(", "1", ",", "height", ",", "width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "center_pts", "=", "[", "]", "\n", "offset", "=", "np", ".", "zeros", "(", "(", "2", ",", "height", ",", "width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "y_coord", "=", "np", ".", "ones_like", "(", "panoptic", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "x_coord", "=", "np", ".", "ones_like", "(", "panoptic", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "y_coord", "=", "np", ".", "cumsum", "(", "y_coord", ",", "axis", "=", "0", ")", "-", "1", "\n", "x_coord", "=", "np", ".", "cumsum", "(", "x_coord", ",", "axis", "=", "1", ")", "-", "1", "\n", "# Generate pixel-wise loss weights", "\n", "semantic_weights", "=", "np", ".", "ones_like", "(", "panoptic", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "# 0: ignore, 1: has instance", "\n", "# three conditions for a region to be ignored for instance branches:", "\n", "# (1) It is labeled as `ignore_index`", "\n", "# (2) It is crowd region (iscrowd=1)", "\n", "# (3) (Optional) It is stuff region (for offset branch)", "\n", "center_weights", "=", "np", ".", "zeros_like", "(", "panoptic", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "offset_weights", "=", "np", ".", "zeros_like", "(", "panoptic", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "seg", "in", "segments", ":", "\n", "            ", "cat_id", "=", "seg", "[", "\"category_id\"", "]", "\n", "if", "self", ".", "ignore_crowd_in_semantic", ":", "\n", "                ", "if", "not", "seg", "[", "'iscrowd'", "]", ":", "\n", "                    ", "semantic", "[", "panoptic", "==", "seg", "[", "\"id\"", "]", "]", "=", "cat_id", "\n", "", "", "else", ":", "\n", "                ", "semantic", "[", "panoptic", "==", "seg", "[", "\"id\"", "]", "]", "=", "cat_id", "\n", "", "if", "cat_id", "in", "self", ".", "thing_list", ":", "\n", "                ", "foreground", "[", "panoptic", "==", "seg", "[", "\"id\"", "]", "]", "=", "1", "\n", "", "if", "not", "seg", "[", "'iscrowd'", "]", ":", "\n", "# Ignored regions are not in `segments`.", "\n", "# Handle crowd region.", "\n", "                ", "center_weights", "[", "panoptic", "==", "seg", "[", "\"id\"", "]", "]", "=", "1", "\n", "if", "self", ".", "ignore_stuff_in_offset", ":", "\n", "# Handle stuff region.", "\n", "                    ", "if", "cat_id", "in", "self", ".", "thing_list", ":", "\n", "                        ", "offset_weights", "[", "panoptic", "==", "seg", "[", "\"id\"", "]", "]", "=", "1", "\n", "", "", "else", ":", "\n", "                    ", "offset_weights", "[", "panoptic", "==", "seg", "[", "\"id\"", "]", "]", "=", "1", "\n", "", "", "if", "cat_id", "in", "self", ".", "thing_list", ":", "\n", "# find instance center", "\n", "                ", "mask_index", "=", "np", ".", "where", "(", "panoptic", "==", "seg", "[", "\"id\"", "]", ")", "\n", "if", "len", "(", "mask_index", "[", "0", "]", ")", "==", "0", ":", "\n", "# the instance is completely cropped", "\n", "                    ", "continue", "\n", "\n", "# Find instance area", "\n", "", "ins_area", "=", "len", "(", "mask_index", "[", "0", "]", ")", "\n", "if", "ins_area", "<", "self", ".", "small_instance_area", ":", "\n", "                    ", "semantic_weights", "[", "panoptic", "==", "\n", "seg", "[", "\"id\"", "]", "]", "=", "self", ".", "small_instance_weight", "\n", "\n", "", "center_y", ",", "center_x", "=", "np", ".", "mean", "(", "mask_index", "[", "0", "]", ")", ",", "np", ".", "mean", "(", "mask_index", "[", "\n", "1", "]", ")", "\n", "center_pts", ".", "append", "(", "[", "center_y", ",", "center_x", "]", ")", "\n", "\n", "# generate center heatmap", "\n", "y", ",", "x", "=", "int", "(", "center_y", ")", ",", "int", "(", "center_x", ")", "\n", "# outside image boundary", "\n", "if", "x", "<", "0", "or", "y", "<", "0", "or", "x", ">=", "width", "or", "y", ">=", "height", ":", "\n", "                    ", "continue", "\n", "", "sigma", "=", "self", ".", "sigma", "\n", "# upper left", "\n", "ul", "=", "int", "(", "np", ".", "round", "(", "x", "-", "3", "*", "sigma", "-", "1", ")", ")", ",", "int", "(", "\n", "np", ".", "round", "(", "y", "-", "3", "*", "sigma", "-", "1", ")", ")", "\n", "# bottom right", "\n", "br", "=", "int", "(", "np", ".", "round", "(", "x", "+", "3", "*", "sigma", "+", "2", ")", ")", ",", "int", "(", "\n", "np", ".", "round", "(", "y", "+", "3", "*", "sigma", "+", "2", ")", ")", "\n", "\n", "c", ",", "d", "=", "max", "(", "0", ",", "-", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "width", ")", "-", "ul", "[", "0", "]", "\n", "a", ",", "b", "=", "max", "(", "0", ",", "-", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "height", ")", "-", "ul", "[", "1", "]", "\n", "\n", "cc", ",", "dd", "=", "max", "(", "0", ",", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "width", ")", "\n", "aa", ",", "bb", "=", "max", "(", "0", ",", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "height", ")", "\n", "center", "[", "0", ",", "aa", ":", "bb", ",", "cc", ":", "dd", "]", "=", "np", ".", "maximum", "(", "center", "[", "0", ",", "aa", ":", "bb", ",", "cc", ":", "dd", "]", ",", "\n", "self", ".", "g", "[", "a", ":", "b", ",", "c", ":", "d", "]", ")", "\n", "\n", "# generate offset (2, h, w) -> (y-dir, x-dir)", "\n", "offset_y_index", "=", "(", "np", ".", "zeros_like", "(", "mask_index", "[", "0", "]", ")", ",", "mask_index", "[", "0", "]", ",", "\n", "mask_index", "[", "1", "]", ")", "\n", "offset_x_index", "=", "(", "np", ".", "ones_like", "(", "mask_index", "[", "0", "]", ")", ",", "mask_index", "[", "0", "]", ",", "\n", "mask_index", "[", "1", "]", ")", "\n", "offset", "[", "offset_y_index", "]", "=", "center_y", "-", "y_coord", "[", "mask_index", "]", "\n", "offset", "[", "offset_x_index", "]", "=", "center_x", "-", "x_coord", "[", "mask_index", "]", "\n", "\n", "", "", "return", "dict", "(", "\n", "semantic", "=", "semantic", ".", "astype", "(", "'long'", ")", ",", "\n", "foreground", "=", "foreground", ".", "astype", "(", "'long'", ")", ",", "\n", "center", "=", "center", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "center_points", "=", "center_pts", ",", "\n", "offset", "=", "offset", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "semantic_weights", "=", "semantic_weights", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "center_weights", "=", "center_weights", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "offset_weights", "=", "offset_weights", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.target_transforms.SemanticTargetGenerator.__init__": [[195, 198], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "ignore_index", ",", "rgb2id", ")", ":", "\n", "        ", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "rgb2id", "=", "rgb2id", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.target_transforms.SemanticTargetGenerator.__call__": [[199, 224], ["target_transforms.SemanticTargetGenerator.rgb2id", "dict", "numpy.zeros_like", "semantic.astype"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_panoptic.CityscapesPanoptic.rgb2id"], ["", "def", "__call__", "(", "self", ",", "panoptic", ",", "segments", ")", ":", "\n", "        ", "\"\"\"Generates the training target.\n        reference: https://github.com/mcordts/cityscapesScripts/blob/master/cityscapesscripts/preparation/createPanopticImgs.py\n        reference: https://github.com/facebookresearch/detectron2/blob/master/datasets/prepare_panoptic_fpn.py#L18\n\n        Args:\n            panoptic (np.ndarray): Colored image encoding panoptic label.\n            segments (list): A list of dictionary containing information of every segment, it has fields:\n                - id: panoptic id, after decoding `panoptic`.\n                - category_id: semantic class id.\n                - area: segment area.\n                - bbox: segment bounding box.\n                - iscrowd: crowd region.\n\n        Returns:\n            A dictionary with fields:\n                - semantic: Tensor, semantic label, shape=(H, W).\n        \"\"\"", "\n", "panoptic", "=", "self", ".", "rgb2id", "(", "panoptic", ")", "\n", "semantic", "=", "np", ".", "zeros_like", "(", "panoptic", ",", "dtype", "=", "np", ".", "uint8", ")", "+", "self", ".", "ignore_index", "\n", "for", "seg", "in", "segments", ":", "\n", "            ", "cat_id", "=", "seg", "[", "\"category_id\"", "]", "\n", "semantic", "[", "panoptic", "==", "seg", "[", "\"id\"", "]", "]", "=", "cat_id", "\n", "\n", "", "return", "dict", "(", "semantic", "=", "semantic", ".", "astype", "(", "'long'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.target_transforms.InstanceTargetGenerator.__init__": [[236, 238], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "rgb2id", ")", ":", "\n", "        ", "self", ".", "rgb2id", "=", "rgb2id", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.target_transforms.InstanceTargetGenerator.__call__": [[239, 259], ["target_transforms.InstanceTargetGenerator.rgb2id", "numpy.zeros_like", "numpy.unique", "enumerate", "dict"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_panoptic.CityscapesPanoptic.rgb2id"], ["", "def", "__call__", "(", "self", ",", "panoptic", ")", ":", "\n", "        ", "\"\"\"Generates the instance target.\n\n        Args:\n            panoptic (np.ndarray): Colored image encoding panoptic label.\n\n        Returns:\n            A dictionary with fields:\n                - instance: Tensor, shape=(H, W). 0 is background. 1, 2, 3 ... is instance, so it is class agnostic.\n        \"\"\"", "\n", "panoptic", "=", "self", ".", "rgb2id", "(", "panoptic", ")", "\n", "instance", "=", "np", ".", "zeros_like", "(", "panoptic", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "ids", "=", "np", ".", "unique", "(", "panoptic", ")", "\n", "ins_id", "=", "1", "\n", "for", "i", ",", "id", "in", "enumerate", "(", "ids", ")", ":", "\n", "            ", "if", "id", ">", "1000", ":", "\n", "                ", "instance", "[", "panoptic", "==", "id", "]", "=", "ins_id", "\n", "ins_id", "+=", "1", "\n", "\n", "", "", "return", "dict", "(", "instance", "=", "instance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.target_transforms.RawPanopticTargetGenerator.__init__": [[273, 277], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "ignore_index", ",", "rgb2id", ",", "label_divisor", "=", "1000", ")", ":", "\n", "        ", "self", ".", "ingore_index", "=", "ignore_index", "\n", "self", ".", "rgb2id", "=", "rgb2id", "\n", "self", ".", "label_divisor", "=", "label_divisor", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.target_transforms.RawPanopticTargetGenerator.__call__": [[278, 308], ["target_transforms.RawPanopticTargetGenerator.rgb2id", "dict", "numpy.zeros_like", "raw_panoptic.astype"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_panoptic.CityscapesPanoptic.rgb2id"], ["", "def", "__call__", "(", "self", ",", "panoptic", ",", "segments", ")", ":", "\n", "        ", "\"\"\"\n        Generates the raw panoptic target\n\n        Args:\n            panoptic (numpy.array): colored image encoding panoptic label.\n            segments (list): A list of dictionary containing information of every segment, it has fields:\n                - id: panoptic id, after decoding `panoptic`.\n                - category_id: semantic class id.\n                - area: segment area.\n                - bbox: segment bounding box.\n                - iscrowd: crowd region.\n\n        Returns:\n            A dictionary with fields:\n                - panoptic: Tensor, panoptic label, shape=(H, W).\n        \"\"\"", "\n", "panoptic", "=", "self", ".", "rgb2id", "(", "panoptic", ")", "\n", "raw_panoptic", "=", "np", ".", "zeros_like", "(", "panoptic", ")", "+", "self", ".", "ingore_index", "\n", "for", "seg", "in", "segments", ":", "\n", "            ", "cat_id", "=", "seg", "[", "'category_id'", "]", "\n", "# if seg['iscrowd'] == 1:", "\n", "#     continue", "\n", "if", "seg", "[", "'id'", "]", "<", "1000", ":", "\n", "                ", "raw_panoptic", "[", "panoptic", "==", "seg", "[", "'id'", "]", "]", "=", "cat_id", "\n", "", "else", ":", "\n", "                ", "ins_id", "=", "seg", "[", "'id'", "]", "%", "self", ".", "label_divisor", "\n", "raw_panoptic", "[", "panoptic", "==", "\n", "seg", "[", "'id'", "]", "]", "=", "cat_id", "*", "self", ".", "label_divisor", "+", "ins_id", "\n", "", "", "return", "dict", "(", "panoptic", "=", "raw_panoptic", ".", "astype", "(", "'long'", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.Compose.__init__": [[41, 45], ["isinstance", "TypeError"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "transforms", ",", "list", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'The transforms must be a list!'", ")", "\n", "", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.Compose.__call__": [[46, 72], ["isinstance", "isinstance", "numpy.expand_dims", "numpy.load", "numpy.load", "ValueError", "op", "numpy.load.max", "len", "numpy.load.max"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "im", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            im (str|np.ndarray): It is either image path or image object.\n            label (str|np.ndarray): It is either label path or label ndarray.\n\n        Returns:\n            (tuple). A tuple including image, image info, and label after transformation.\n        \"\"\"", "\n", "if", "isinstance", "(", "im", ",", "str", ")", ":", "\n", "            ", "im", "=", "np", ".", "load", "(", "im", ")", "\n", "", "if", "isinstance", "(", "label", ",", "str", ")", ":", "\n", "            ", "label", "=", "np", ".", "load", "(", "label", ")", "\n", "", "if", "im", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "'Can\\'t read The image file {}!'", ".", "format", "(", "im", ")", ")", "\n", "\n", "", "for", "op", "in", "self", ".", "transforms", ":", "\n", "            ", "outputs", "=", "op", "(", "im", ",", "label", ")", "\n", "im", "=", "outputs", "[", "0", "]", "\n", "if", "len", "(", "outputs", ")", "==", "2", ":", "\n", "                ", "label", "=", "outputs", "[", "1", "]", "\n", "", "", "im", "=", "np", ".", "expand_dims", "(", "im", ",", "axis", "=", "0", ")", "\n", "if", "im", ".", "max", "(", ")", ">", "0", ":", "\n", "            ", "im", "=", "im", "/", "im", ".", "max", "(", ")", "\n", "\n", "", "return", "(", "im", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.Resize3D.__init__": [[82, 96], ["isinstance", "super().__init__", "isinstance", "ValueError", "len", "type", "tuple"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "size", ",", "order", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        resize\n        \"\"\"", "\n", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "elif", "isinstance", "(", "size", ",", "collections", ".", "abc", ".", "Iterable", ")", "and", "len", "(", "size", ")", "==", "3", ":", "\n", "            ", "if", "type", "(", "size", ")", "==", "list", ":", "\n", "                ", "size", "=", "tuple", "(", "size", ")", "\n", "", "self", ".", "size", "=", "size", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown inputs for size: {}'", ".", "format", "(", "size", ")", ")", "\n", "", "self", ".", "order", "=", "order", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.Resize3D.__call__": [[97, 110], ["medicalseg.transforms.functional.resize_3d", "medicalseg.transforms.functional.resize_3d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_3d", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_3d"], ["", "def", "__call__", "(", "self", ",", "img", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (numpy ndarray): Image to be scaled.\n            label (numpy ndarray) : Label to be scaled\n        Returns:\n            numpy ndarray: Rescaled image.\n            numpy ndarray: Rescaled label.\n        \"\"\"", "\n", "img", "=", "F", ".", "resize_3d", "(", "img", ",", "self", ".", "size", ",", "self", ".", "order", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "            ", "label", "=", "F", ".", "resize_3d", "(", "label", ",", "self", ".", "size", ",", "0", ")", "\n", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomRotation3D.__init__": [[124, 142], ["isinstance", "super().__init__", "ValueError", "len", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "degrees", ",", "rotate_planes", "=", "[", "[", "0", ",", "1", "]", ",", "[", "0", ",", "2", "]", ",", "[", "1", ",", "2", "]", "]", ")", ":", "\n", "        ", "\"\"\"\n        init\n        \"\"\"", "\n", "if", "isinstance", "(", "degrees", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "if", "degrees", "<", "0", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"If degrees is a single number, it must be positive.\"", ")", "\n", "", "self", ".", "degrees", "=", "(", "-", "degrees", ",", "degrees", ")", "\n", "", "else", ":", "\n", "            ", "if", "len", "(", "degrees", ")", "!=", "2", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"If degrees is a sequence, it must be of len 2.\"", ")", "\n", "", "self", ".", "degrees", "=", "degrees", "\n", "\n", "", "self", ".", "rotate_planes", "=", "rotate_planes", "\n", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomRotation3D.get_params": [[143, 153], ["random.uniform", "random.randint", "len"], "methods", ["None"], ["", "def", "get_params", "(", "self", ",", "degrees", ")", ":", "\n", "        ", "\"\"\"Get parameters for ``rotate`` for a random rotation.\n        Returns:\n            sequence: params to be passed to ``rotate`` for random rotation.\n        \"\"\"", "\n", "angle", "=", "random", ".", "uniform", "(", "degrees", "[", "0", "]", ",", "degrees", "[", "1", "]", ")", "\n", "r_plane", "=", "self", ".", "rotate_planes", "[", "random", ".", "randint", "(", "\n", "0", ",", "len", "(", "self", ".", "rotate_planes", ")", "-", "1", ")", "]", "\n", "\n", "return", "angle", ",", "r_plane", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomRotation3D.__call__": [[154, 167], ["transform.RandomRotation3D.get_params", "medicalseg.transforms.functional.rotate_3d", "medicalseg.transforms.functional.rotate_3d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomResizedCrop3D.get_params", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.rotate_3d", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.rotate_3d"], ["", "def", "__call__", "(", "self", ",", "img", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (numpy ndarray): 3D Image to be flipped.\n            label (numpy ndarray): 3D Label to be flipped.\n        Returns:\n            (np.array). Image after transformation.\n        \"\"\"", "\n", "angle", ",", "r_plane", "=", "self", ".", "get_params", "(", "self", ".", "degrees", ")", "\n", "img", "=", "F", ".", "rotate_3d", "(", "img", ",", "r_plane", ",", "angle", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "            ", "label", "=", "F", ".", "rotate_3d", "(", "label", ",", "r_plane", ",", "angle", ")", "\n", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomFlip3D.__init__": [[176, 184], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "prob", "=", "0.5", ",", "flip_axis", "=", "[", "0", ",", "1", ",", "2", "]", ")", ":", "\n", "        ", "\"\"\"\n        init\n        \"\"\"", "\n", "self", ".", "prob", "=", "prob", "\n", "self", ".", "flip_axis", "=", "flip_axis", "\n", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomFlip3D.__call__": [[185, 204], ["isinstance", "random.random", "medicalseg.transforms.functional.flip_3d", "medicalseg.transforms.functional.flip_3d", "random.randint", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.flip_3d", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.flip_3d"], ["", "def", "__call__", "(", "self", ",", "img", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (numpy ndarray): 3D Image to be flipped.\n            label (numpy ndarray): 3D Label to be flipped.\n        Returns:\n            (np.array). Image after transformation.\n        \"\"\"", "\n", "if", "isinstance", "(", "self", ".", "flip_axis", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "            ", "flip_axis", "=", "self", ".", "flip_axis", "[", "random", ".", "randint", "(", "0", ",", "\n", "len", "(", "self", ".", "flip_axis", ")", "-", "1", ")", "]", "\n", "", "else", ":", "\n", "            ", "flip_axis", "=", "self", ".", "flip_axis", "\n", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob", ":", "\n", "            ", "img", "=", "F", ".", "flip_3d", "(", "img", ",", "axis", "=", "flip_axis", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "                ", "label", "=", "F", ".", "flip_3d", "(", "label", ",", "axis", "=", "flip_axis", ")", "\n", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomResizedCrop3D.__init__": [[220, 241], ["isinstance", "super().__init__", "isinstance", "len", "len", "print", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "size", ",", "scale", "=", "(", "0.8", ",", "1.2", ")", ",", "ratio", "=", "(", "3.", "/", "4.", ",", "4.", "/", "3.", ")", ",", "interpolation", "=", "1", ",", "pre_crop", "=", "False", ",", "nonzero_mask", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        init\n        \"\"\"", "\n", "if", "isinstance", "(", "size", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "            ", "assert", "len", "(", "size", ")", "==", "3", ",", "\"Size must contain THREE number when it is a tuple or list, got {}.\"", ".", "format", "(", "len", "(", "size", ")", ")", "\n", "self", ".", "size", "=", "size", "\n", "", "elif", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "size", ",", "size", ",", "size", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Size must be a list or tuple, got {}.\"", ".", "format", "(", "type", "(", "size", ")", ")", ")", "\n", "\n", "", "self", ".", "interpolation", "=", "interpolation", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "ratio", "=", "ratio", "\n", "self", ".", "pre_crop", "=", "pre_crop", "\n", "self", ".", "nonzero_mask", "=", "nonzero_mask", "\n", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomResizedCrop3D.get_params": [[242, 278], ["collections.namedtuple", "range", "min", "collections.namedtuple.", "random.uniform", "int", "int", "random.uniform", "round", "round", "random.random", "random.sample", "random.randint", "random.randint", "random.randint", "collections.namedtuple."], "methods", ["None"], ["", "def", "get_params", "(", "self", ",", "img", ",", "scale", ",", "ratio", ")", ":", "\n", "        ", "\"\"\"Get parameters for ``crop`` for a random sized crop.\n        Args:\n            img (numpy ndarray): Image to be cropped. d, h, w\n            scale (tuple): range of size of the origin size cropped\n            ratio (tuple): range of aspect ratio of the origin aspect ratio cropped\n        Returns:\n            tuple: params (i, j, h, w) to be passed to ``crop`` for a random\n                sized crop.\n        \"\"\"", "\n", "params_ret", "=", "collections", ".", "namedtuple", "(", "'params_ret'", ",", "\n", "[", "'i'", ",", "'j'", ",", "'k'", ",", "'d'", ",", "'h'", ",", "'w'", "]", ")", "\n", "for", "attempt", "in", "range", "(", "10", ")", ":", "\n", "            ", "volume", "=", "img", ".", "shape", "[", "0", "]", "*", "img", ".", "shape", "[", "1", "]", "*", "img", ".", "shape", "[", "2", "]", "\n", "target_volume", "=", "random", ".", "uniform", "(", "*", "scale", ")", "*", "volume", "\n", "aspect_ratio", "=", "random", ".", "uniform", "(", "*", "ratio", ")", "\n", "\n", "d", "=", "int", "(", "round", "(", "(", "target_volume", "*", "aspect_ratio", ")", "**", "(", "1", "/", "3", ")", ")", ")", "\n", "h", "=", "int", "(", "round", "(", "(", "target_volume", "/", "aspect_ratio", ")", "**", "(", "1", "/", "3", ")", ")", ")", "\n", "w", "=", "img", ".", "shape", "[", "2", "]", "\n", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "                ", "d", ",", "h", ",", "w", "=", "random", ".", "sample", "(", "[", "d", ",", "h", ",", "w", "]", ",", "k", "=", "3", ")", "\n", "\n", "", "if", "w", "<=", "img", ".", "shape", "[", "2", "]", "and", "h", "<=", "img", ".", "shape", "[", "1", "]", "and", "d", "<=", "img", ".", "shape", "[", "0", "]", ":", "\n", "                ", "i", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "0", "]", "-", "d", ")", "\n", "j", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "1", "]", "-", "h", ")", "\n", "k", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "2", "]", "-", "w", ")", "\n", "return", "params_ret", "(", "i", ",", "j", ",", "k", ",", "d", ",", "h", ",", "w", ")", "\n", "\n", "# Fallback", "\n", "", "", "w", "=", "min", "(", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "2", "]", ")", "\n", "i", "=", "(", "img", ".", "shape", "[", "0", "]", "-", "w", ")", "//", "2", "\n", "j", "=", "(", "img", ".", "shape", "[", "1", "]", "-", "w", ")", "//", "2", "\n", "k", "=", "(", "img", ".", "shape", "[", "2", "]", "-", "w", ")", "//", "2", "\n", "return", "params_ret", "(", "i", ",", "j", ",", "k", ",", "w", ",", "w", ",", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomResizedCrop3D.pre_crop_util": [[279, 324], ["numpy.where", "int", "int", "int", "numpy.array", "numpy.minimum", "numpy.minimum", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.min", "int", "numpy.min", "int", "numpy.min", "int", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.max", "numpy.max", "numpy.max", "numpy.random.uniform"], "methods", ["None"], ["", "def", "pre_crop_util", "(", "self", ",", "img", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        pre crop\u903b\u8f91\n        \"\"\"", "\n", "if", "self", ".", "pre_crop", ":", "\n", "            ", "crop_size", "=", "(", "np", ".", "random", ".", "uniform", "(", "low", "=", "self", ".", "scale", "[", "0", "]", ",", "high", "=", "self", ".", "scale", "[", "1", "]", ",", "size", "=", "3", ")", "*", "self", ".", "size", ")", ".", "round", "(", ")", ".", "astype", "(", "\"int\"", ")", "\n", "\n", "if", "self", ".", "nonzero_mask", ":", "\n", "                ", "mask_voxel_coords", "=", "np", ".", "where", "(", "label", "!=", "0", ")", "\n", "minzidx", "=", "int", "(", "np", ".", "min", "(", "mask_voxel_coords", "[", "0", "]", ")", ")", "\n", "maxzidx", "=", "int", "(", "np", ".", "max", "(", "mask_voxel_coords", "[", "0", "]", ")", ")", "+", "1", "\n", "minyidx", "=", "int", "(", "np", ".", "min", "(", "mask_voxel_coords", "[", "1", "]", ")", ")", "\n", "maxyidx", "=", "int", "(", "np", ".", "max", "(", "mask_voxel_coords", "[", "1", "]", ")", ")", "+", "1", "\n", "minxidx", "=", "int", "(", "np", ".", "min", "(", "mask_voxel_coords", "[", "2", "]", ")", ")", "\n", "maxxidx", "=", "int", "(", "np", ".", "max", "(", "mask_voxel_coords", "[", "2", "]", ")", ")", "+", "1", "\n", "\n", "masked_shape", "=", "np", ".", "array", "(", "\n", "[", "maxzidx", "-", "minzidx", ",", "maxyidx", "-", "minyidx", ",", "maxxidx", "-", "minxidx", "]", ")", "\n", "crop_z", ",", "crop_y", ",", "crop_x", "=", "np", ".", "minimum", "(", "masked_shape", ",", "crop_size", ")", "\n", "z_start", "=", "np", ".", "random", ".", "randint", "(", "masked_shape", "[", "0", "]", "-", "crop_z", "+", "\n", "1", ")", "+", "minzidx", "\n", "y_start", "=", "np", ".", "random", ".", "randint", "(", "masked_shape", "[", "1", "]", "-", "crop_y", "+", "\n", "1", ")", "+", "minyidx", "\n", "x_start", "=", "np", ".", "random", ".", "randint", "(", "masked_shape", "[", "2", "]", "-", "crop_x", "+", "\n", "1", ")", "+", "minxidx", "\n", "\n", "z_end", "=", "z_start", "+", "crop_z", "\n", "y_end", "=", "y_start", "+", "crop_y", "\n", "x_end", "=", "x_start", "+", "crop_x", "\n", "", "else", ":", "\n", "                ", "crop_z", ",", "crop_y", ",", "crop_x", "=", "np", ".", "minimum", "(", "img", ".", "shape", "[", ":", "3", "]", ",", "crop_size", ")", "\n", "z_start", "=", "np", ".", "random", ".", "randint", "(", "img", ".", "shape", "[", "0", "]", "-", "crop_z", "+", "1", ")", "\n", "y_start", "=", "np", ".", "random", ".", "randint", "(", "img", ".", "shape", "[", "1", "]", "-", "crop_y", "+", "1", ")", "\n", "x_start", "=", "np", ".", "random", ".", "randint", "(", "img", ".", "shape", "[", "2", "]", "-", "crop_x", "+", "1", ")", "\n", "\n", "z_end", "=", "z_start", "+", "crop_z", "\n", "y_end", "=", "y_start", "+", "crop_y", "\n", "x_end", "=", "x_start", "+", "crop_x", "\n", "\n", "", "img", "=", "img", "[", "z_start", ":", "z_end", ",", "y_start", ":", "y_end", ",", "x_start", ":", "x_end", "]", "\n", "if", "label", "is", "not", "None", ":", "\n", "                ", "label", "=", "label", "[", "z_start", ":", "z_end", ",", "y_start", ":", "y_end", ",", "x_start", ":", "x_end", "]", "\n", "\n", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomResizedCrop3D.__call__": [[325, 340], ["transform.RandomResizedCrop3D.pre_crop_util", "transform.RandomResizedCrop3D.get_params", "medicalseg.transforms.functional.resized_crop_3d", "medicalseg.transforms.functional.resized_crop_3d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomResizedCrop3D.pre_crop_util", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.RandomResizedCrop3D.get_params", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resized_crop_3d", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resized_crop_3d"], ["", "def", "__call__", "(", "self", ",", "img", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (numpy ndarray): Image to be cropped and resized.\n        Returns:\n            numpy ndarray: Randomly cropped and resized image.\n        \"\"\"", "\n", "img", ",", "label", "=", "self", ".", "pre_crop_util", "(", "img", ",", "label", ")", "\n", "i", ",", "j", ",", "k", ",", "d", ",", "h", ",", "w", "=", "self", ".", "get_params", "(", "img", ",", "self", ".", "scale", ",", "self", ".", "ratio", ")", "\n", "img", "=", "F", ".", "resized_crop_3d", "(", "img", ",", "i", ",", "j", ",", "k", ",", "d", ",", "h", ",", "w", ",", "self", ".", "size", ",", "\n", "self", ".", "interpolation", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "            ", "label", "=", "F", ".", "resized_crop_3d", "(", "label", ",", "i", ",", "j", ",", "k", ",", "d", ",", "h", ",", "w", ",", "self", ".", "size", ",", "0", ")", "\n", "\n", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.BinaryMaskToConnectComponent.__init__": [[349, 355], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "minimum_volume", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n        resize\n        \"\"\"", "\n", "self", ".", "minimum_volume", "=", "minimum_volume", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.BinaryMaskToConnectComponent.__call__": [[356, 369], ["medicalseg.transforms.functional.extract_connect_compoent", "medicalseg.transforms.functional.extract_connect_compoent"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.extract_connect_compoent", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.extract_connect_compoent"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (numpy ndarray): Image to be scaled.\n            label (numpy ndarray) : Label to be scaled\n        Returns:\n            numpy ndarray: Rescaled image.\n            numpy ndarray: Rescaled label.\n        \"\"\"", "\n", "pred", "=", "F", ".", "extract_connect_compoent", "(", "pred", ",", "self", ".", "minimum_volume", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "            ", "label", "=", "F", ".", "extract_connect_compoent", "(", "label", ",", "self", ".", "minimum_volume", ")", "\n", "", "return", "pred", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.TopkLargestConnectComponent.__init__": [[378, 384], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "k", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        resize\n        \"\"\"", "\n", "self", ".", "k", "=", "k", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.transform.TopkLargestConnectComponent.__call__": [[385, 397], ["medicalseg.transforms.functional.extract_connect_compoent"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.extract_connect_compoent"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "label", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (numpy ndarray): Image to be scaled.\n            label (numpy ndarray) : Label to be scaled\n        Returns:\n            numpy ndarray: Rescaled image.\n            numpy ndarray: Rescaled label.\n        \"\"\"", "\n", "pred", "=", "F", ".", "extract_connect_compoent", "(", "pred", ")", "\n", "pred", "[", "pred", ">", "self", ".", "k", "]", "=", "0", "\n", "return", "pred", ",", "label", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_3d": [[25, 59], ["isinstance", "functional._is_numpy_image", "TypeError", "TypeError", "int", "int", "int", "scipy.ndimage.zoom", "scipy.ndimage.zoom", "isinstance", "min", "numpy.array", "scipy.ndimage.zoom", "scipy.ndimage.zoom", "type", "isinstance", "min", "min", "min", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional._is_numpy_image"], ["return", "im", "\n", "\n", "\n", "", "def", "resize", "(", "im", ",", "target_size", "=", "608", ",", "interp", "=", "cv2", ".", "INTER_LINEAR", ")", ":", "\n", "    ", "if", "isinstance", "(", "target_size", ",", "list", ")", "or", "isinstance", "(", "target_size", ",", "tuple", ")", ":", "\n", "        ", "w", "=", "target_size", "[", "0", "]", "\n", "h", "=", "target_size", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "w", "=", "target_size", "\n", "h", "=", "target_size", "\n", "", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "w", ",", "h", ")", ",", "interpolation", "=", "interp", ")", "\n", "return", "im", "\n", "\n", "\n", "", "def", "resize_long", "(", "im", ",", "long_size", "=", "224", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", ":", "\n", "    ", "value", "=", "max", "(", "im", ".", "shape", "[", "0", "]", ",", "im", ".", "shape", "[", "1", "]", ")", "\n", "scale", "=", "float", "(", "long_size", ")", "/", "float", "(", "value", ")", "\n", "resized_width", "=", "int", "(", "round", "(", "im", ".", "shape", "[", "1", "]", "*", "scale", ")", ")", "\n", "resized_height", "=", "int", "(", "round", "(", "im", ".", "shape", "[", "0", "]", "*", "scale", ")", ")", "\n", "\n", "im", "=", "cv2", ".", "resize", "(", "\n", "im", ",", "(", "resized_width", ",", "resized_height", ")", ",", "interpolation", "=", "interpolation", ")", "\n", "return", "im", "\n", "\n", "\n", "", "def", "resize_short", "(", "im", ",", "short_size", "=", "224", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", ":", "\n", "    ", "value", "=", "min", "(", "im", ".", "shape", "[", "0", "]", ",", "im", ".", "shape", "[", "1", "]", ")", "\n", "scale", "=", "float", "(", "short_size", ")", "/", "float", "(", "value", ")", "\n", "resized_width", "=", "int", "(", "round", "(", "im", ".", "shape", "[", "1", "]", "*", "scale", ")", ")", "\n", "resized_height", "=", "int", "(", "round", "(", "im", ".", "shape", "[", "0", "]", "*", "scale", ")", ")", "\n", "\n", "im", "=", "cv2", ".", "resize", "(", "\n", "im", ",", "(", "resized_width", ",", "resized_height", ")", ",", "interpolation", "=", "interpolation", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.crop_3d": [[61, 78], ["functional._is_numpy_image", "TypeError", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional._is_numpy_image"], ["", "def", "horizontal_flip", "(", "im", ")", ":", "\n", "    ", "if", "len", "(", "im", ".", "shape", ")", "==", "3", ":", "\n", "        ", "im", "=", "im", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "", "elif", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "        ", "im", "=", "im", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "", "return", "im", "\n", "\n", "\n", "", "def", "vertical_flip", "(", "im", ")", ":", "\n", "    ", "if", "len", "(", "im", ".", "shape", ")", "==", "3", ":", "\n", "        ", "im", "=", "im", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "", "elif", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "        ", "im", "=", "im", "[", ":", ":", "-", "1", ",", ":", "]", "\n", "", "return", "im", "\n", "\n", "\n", "", "def", "brightness", "(", "im", ",", "brightness_lower", ",", "brightness_upper", ")", ":", "\n", "    ", "brightness_delta", "=", "np", ".", "random", ".", "uniform", "(", "brightness_lower", ",", "brightness_upper", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.flip_3d": [[80, 89], ["numpy.flip"], "function", ["None"], ["return", "im", "\n", "\n", "\n", "", "def", "contrast", "(", "im", ",", "contrast_lower", ",", "contrast_upper", ")", ":", "\n", "    ", "contrast_delta", "=", "np", ".", "random", ".", "uniform", "(", "contrast_lower", ",", "contrast_upper", ")", "\n", "im", "=", "ImageEnhance", ".", "Contrast", "(", "im", ")", ".", "enhance", "(", "contrast_delta", ")", "\n", "return", "im", "\n", "\n", "\n", "", "def", "saturation", "(", "im", ",", "saturation_lower", ",", "saturation_upper", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.rotate_3d": [[91, 101], ["scipy.ndimage.rotate", "scipy.ndimage.rotate"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.rotate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.rotate"], ["im", "=", "ImageEnhance", ".", "Color", "(", "im", ")", ".", "enhance", "(", "saturation_delta", ")", "\n", "return", "im", "\n", "\n", "\n", "", "def", "hue", "(", "im", ",", "hue_lower", ",", "hue_upper", ")", ":", "\n", "    ", "hue_delta", "=", "np", ".", "random", ".", "uniform", "(", "hue_lower", ",", "hue_upper", ")", "\n", "im", "=", "np", ".", "array", "(", "im", ".", "convert", "(", "'HSV'", ")", ")", "\n", "im", "[", ":", ",", ":", ",", "0", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "+", "hue_delta", "\n", "im", "=", "Image", ".", "fromarray", "(", "im", ",", "mode", "=", "'HSV'", ")", ".", "convert", "(", "'RGB'", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resized_crop_3d": [[103, 111], ["functional._is_numpy_image", "functional.crop_3d", "functional.resize_3d"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional._is_numpy_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.crop_3d", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize_3d"], ["", "def", "sharpness", "(", "im", ",", "sharpness_lower", ",", "sharpness_upper", ")", ":", "\n", "    ", "sharpness_delta", "=", "np", ".", "random", ".", "uniform", "(", "sharpness_lower", ",", "sharpness_upper", ")", "\n", "im", "=", "ImageEnhance", ".", "Sharpness", "(", "im", ")", ".", "enhance", "(", "sharpness_delta", ")", "\n", "return", "im", "\n", "\n", "\n", "", "def", "rotate", "(", "im", ",", "rotate_lower", ",", "rotate_upper", ")", ":", "\n", "    ", "rotate_delta", "=", "np", ".", "random", ".", "uniform", "(", "rotate_lower", ",", "rotate_upper", ")", "\n", "im", "=", "im", ".", "rotate", "(", "int", "(", "rotate_delta", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional._is_numpy_image": [[113, 115], ["isinstance"], "function", ["None"], ["\n", "\n", "", "def", "mask_to_onehot", "(", "mask", ",", "num_classes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.extract_connect_compoent": [[117, 132], ["SimpleITK.GetArrayFromImage", "len", "numpy.unique().tolist", "SimpleITK.RelabelComponent", "numpy.unique", "SimpleITK.ConnectedComponent", "numpy.unique", "SimpleITK.GetImageFromArray"], "function", ["None"], ["\n", "_mask", "=", "[", "mask", "==", "i", "for", "i", "in", "range", "(", "num_classes", ")", "]", "\n", "_mask", "=", "np", ".", "array", "(", "_mask", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "_mask", "\n", "\n", "\n", "", "def", "onehot_to_binary_edge", "(", "mask", ",", "radius", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.limit_longest_side.LimitLongestSide.__init__": [[24, 26], ["zoom_in.ZoomIn.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "max_size", "=", "800", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "target_size", "=", "max_size", ",", "skip_clicks", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.limit_longest_side.LimitLongestSide.transform": [[27, 43], ["max", "zoom_in.get_roi_image_nd", "limit_longest_side.LimitLongestSide._transform_clicks", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.get_roi_image_nd", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn._transform_clicks"], ["", "def", "transform", "(", "self", ",", "image_nd", ",", "clicks_lists", ")", ":", "\n", "        ", "assert", "image_nd", ".", "shape", "[", "0", "]", "==", "1", "and", "len", "(", "clicks_lists", ")", "==", "1", "\n", "image_max_size", "=", "max", "(", "image_nd", ".", "shape", "[", "2", ":", "4", "]", ")", "\n", "self", ".", "image_changed", "=", "False", "\n", "\n", "if", "image_max_size", "<=", "self", ".", "target_size", ":", "\n", "            ", "return", "image_nd", ",", "clicks_lists", "\n", "", "self", ".", "_input_image", "=", "image_nd", "\n", "\n", "self", ".", "_object_roi", "=", "(", "0", ",", "image_nd", ".", "shape", "[", "2", "]", "-", "1", ",", "0", ",", "image_nd", ".", "shape", "[", "3", "]", "-", "1", ")", "\n", "self", ".", "_roi_image", "=", "get_roi_image_nd", "(", "image_nd", ",", "self", ".", "_object_roi", ",", "\n", "self", ".", "target_size", ")", "\n", "self", ".", "image_changed", "=", "True", "\n", "\n", "tclicks_lists", "=", "[", "self", ".", "_transform_clicks", "(", "clicks_lists", "[", "0", "]", ")", "]", "\n", "return", "self", ".", "_roi_image", ",", "tclicks_lists", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.BaseTransform.__init__": [[5, 7], ["None"], "methods", ["None"], ["# You may obtain a copy of the License at", "\n", "#", "\n", "#     http://www.apache.org/licenses/LICENSE-2.0", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.BaseTransform.transform": [[8, 10], ["None"], "methods", ["None"], ["#", "\n", "# Unless required by applicable law or agreed to in writing, software", "\n", "# distributed under the License is distributed on an \"AS IS\" BASIS,", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.BaseTransform.inv_transform": [[11, 13], ["None"], "methods", ["None"], ["# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "\n", "# See the License for the specific language governing permissions and", "\n", "# limitations under the License.", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.BaseTransform.reset": [[14, 16], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.BaseTransform.get_state": [[17, 19], ["None"], "methods", ["None"], ["\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.BaseTransform.set_state": [[20, 22], ["None"], "methods", ["None"], ["import", "paddle", "\n", "import", "paddle", ".", "nn", ".", "functional", "as", "F", "\n", "import", "numpy", "as", "np", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.SigmoidForPred.transform": [[25, 27], ["None"], "methods", ["None"], ["from", ".", "ops", "import", "DistMaps", ",", "ScaleLayer", ",", "BatchImageNormalize", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.SigmoidForPred.inv_transform": [[28, 30], ["paddle.sigmoid"], "methods", ["None"], ["class", "BasePredictor", "(", "object", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "\n", "model", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.SigmoidForPred.reset": [[31, 33], ["None"], "methods", ["None"], ["net_clicks_limit", "=", "None", ",", "\n", "with_flip", "=", "False", ",", "\n", "zoom_in", "=", "None", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.SigmoidForPred.get_state": [[34, 36], ["None"], "methods", ["None"], ["max_size", "=", "None", ",", "\n", "with_mask", "=", "True", ",", "\n", "**", "kwargs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.base.SigmoidForPred.set_state": [[37, 39], ["None"], "methods", ["None"], ["\n", "        ", "self", ".", "with_flip", "=", "with_flip", "\n", "self", ".", "net_clicks_limit", "=", "net_clicks_limit", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.crops.Crops.__init__": [[30, 38], ["base.BaseTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "crop_size", "=", "(", "320", ",", "480", ")", ",", "min_overlap", "=", "0.2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "crop_height", ",", "self", ".", "crop_width", "=", "crop_size", "\n", "self", ".", "min_overlap", "=", "min_overlap", "\n", "\n", "self", ".", "x_offsets", "=", "None", "\n", "self", ".", "y_offsets", "=", "None", "\n", "self", ".", "_counts", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.crops.Crops.transform": [[39, 75], ["crops.get_offsets", "crops.get_offsets", "numpy.zeros", "paddle.concat", "paddle.to_tensor", "len", "paddle.concat.append", "clicks_lists.append", "x.copy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.crops.get_offsets", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.crops.get_offsets", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["", "def", "transform", "(", "self", ",", "image_nd", ",", "clicks_lists", ")", ":", "\n", "        ", "assert", "image_nd", ".", "shape", "[", "0", "]", "==", "1", "and", "len", "(", "clicks_lists", ")", "==", "1", "\n", "image_height", ",", "image_width", "=", "image_nd", ".", "shape", "[", "2", ":", "4", "]", "\n", "self", ".", "_counts", "=", "None", "\n", "\n", "if", "image_height", "<", "self", ".", "crop_height", "or", "image_width", "<", "self", ".", "crop_width", ":", "\n", "            ", "return", "image_nd", ",", "clicks_lists", "\n", "\n", "", "self", ".", "x_offsets", "=", "get_offsets", "(", "image_width", ",", "self", ".", "crop_width", ",", "\n", "self", ".", "min_overlap", ")", "\n", "self", ".", "y_offsets", "=", "get_offsets", "(", "image_height", ",", "self", ".", "crop_height", ",", "\n", "self", ".", "min_overlap", ")", "\n", "self", ".", "_counts", "=", "np", ".", "zeros", "(", "(", "image_height", ",", "image_width", ")", ")", "\n", "\n", "image_crops", "=", "[", "]", "\n", "for", "dy", "in", "self", ".", "y_offsets", ":", "\n", "            ", "for", "dx", "in", "self", ".", "x_offsets", ":", "\n", "                ", "self", ".", "_counts", "[", "dy", ":", "dy", "+", "self", ".", "crop_height", ",", "dx", ":", "dx", "+", "\n", "self", ".", "crop_width", "]", "+=", "1", "\n", "image_crop", "=", "image_nd", "[", ":", ",", ":", ",", "dy", ":", "dy", "+", "self", ".", "crop_height", ",", "dx", ":", "dx", "+", "\n", "self", ".", "crop_width", "]", "\n", "image_crops", ".", "append", "(", "image_crop", ")", "\n", "", "", "image_crops", "=", "paddle", ".", "concat", "(", "image_crops", ",", "axis", "=", "0", ")", "\n", "self", ".", "_counts", "=", "paddle", ".", "to_tensor", "(", "self", ".", "_counts", ",", "dtype", "=", "\"float32\"", ")", "\n", "\n", "clicks_list", "=", "clicks_lists", "[", "0", "]", "\n", "clicks_lists", "=", "[", "]", "\n", "for", "dy", "in", "self", ".", "y_offsets", ":", "\n", "            ", "for", "dx", "in", "self", ".", "x_offsets", ":", "\n", "                ", "crop_clicks", "=", "[", "\n", "x", ".", "copy", "(", "coords", "=", "(", "x", ".", "coords", "[", "0", "]", "-", "dy", ",", "x", ".", "coords", "[", "1", "]", "-", "dx", ")", ")", "\n", "for", "x", "in", "clicks_list", "\n", "]", "\n", "clicks_lists", ".", "append", "(", "crop_clicks", ")", "\n", "\n", "", "", "return", "image_crops", ",", "clicks_lists", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.crops.Crops.inv_transform": [[76, 92], ["paddle.zeros", "paddle.divide"], "methods", ["None"], ["", "def", "inv_transform", "(", "self", ",", "prob_map", ")", ":", "\n", "        ", "if", "self", ".", "_counts", "is", "None", ":", "\n", "            ", "return", "prob_map", "\n", "\n", "", "new_prob_map", "=", "paddle", ".", "zeros", "(", "\n", "(", "1", ",", "1", ",", "*", "self", ".", "_counts", ".", "shape", ")", ",", "dtype", "=", "prob_map", ".", "dtype", ")", "\n", "\n", "crop_indx", "=", "0", "\n", "for", "dy", "in", "self", ".", "y_offsets", ":", "\n", "            ", "for", "dx", "in", "self", ".", "x_offsets", ":", "\n", "                ", "new_prob_map", "[", "0", ",", "0", ",", "dy", ":", "dy", "+", "self", ".", "crop_height", ",", "dx", ":", "dx", "+", "\n", "self", ".", "crop_width", "]", "+=", "prob_map", "[", "crop_indx", ",", "0", "]", "\n", "crop_indx", "+=", "1", "\n", "", "", "new_prob_map", "=", "paddle", ".", "divide", "(", "new_prob_map", ",", "self", ".", "_counts", ")", "\n", "\n", "return", "new_prob_map", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.crops.Crops.get_state": [[93, 95], ["None"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "x_offsets", ",", "self", ".", "y_offsets", ",", "self", ".", "_counts", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.crops.Crops.set_state": [[96, 98], ["None"], "methods", ["None"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "x_offsets", ",", "self", ".", "y_offsets", ",", "self", ".", "_counts", "=", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.crops.Crops.reset": [[99, 103], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "x_offsets", "=", "None", "\n", "self", ".", "y_offsets", "=", "None", "\n", "self", ".", "_counts", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.crops.get_offsets": [[105, 124], ["math.ceil", "int", "range", "offsets.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "get_offsets", "(", "length", ",", "crop_size", ",", "min_overlap_ratio", "=", "0.2", ")", ":", "\n", "    ", "if", "length", "==", "crop_size", ":", "\n", "        ", "return", "[", "0", "]", "\n", "\n", "", "N", "=", "(", "length", "/", "crop_size", "-", "min_overlap_ratio", ")", "/", "(", "1", "-", "min_overlap_ratio", ")", "\n", "N", "=", "math", ".", "ceil", "(", "N", ")", "\n", "\n", "overlap_ratio", "=", "(", "N", "-", "length", "/", "crop_size", ")", "/", "(", "N", "-", "1", ")", "\n", "overlap_width", "=", "int", "(", "crop_size", "*", "overlap_ratio", ")", "\n", "\n", "offsets", "=", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "N", ")", ":", "\n", "        ", "new_offset", "=", "offsets", "[", "-", "1", "]", "+", "crop_size", "-", "overlap_width", "\n", "if", "new_offset", "+", "crop_size", ">", "length", ":", "\n", "            ", "new_offset", "=", "length", "-", "crop_size", "\n", "\n", "", "offsets", ".", "append", "(", "new_offset", ")", "\n", "\n", "", "return", "offsets", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.flip.AddHorizontalFlip.transform": [[27, 45], ["paddle.concat", "len", "clicks_lists_flipped.append", "paddle.flip", "click.copy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["    ", "def", "transform", "(", "self", ",", "image_nd", ",", "clicks_lists", ")", ":", "\n", "        ", "assert", "len", "(", "image_nd", ".", "shape", ")", "==", "4", "\n", "image_nd", "=", "paddle", ".", "concat", "(", "\n", "[", "image_nd", ",", "paddle", ".", "flip", "(", "\n", "image_nd", ",", "axis", "=", "[", "3", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "\n", "image_width", "=", "image_nd", ".", "shape", "[", "3", "]", "\n", "clicks_lists_flipped", "=", "[", "]", "\n", "for", "clicks_list", "in", "clicks_lists", ":", "\n", "            ", "clicks_list_flipped", "=", "[", "\n", "click", ".", "copy", "(", "coords", "=", "(", "click", ".", "coords", "[", "0", "]", ",", "\n", "image_width", "-", "click", ".", "coords", "[", "1", "]", "-", "1", ")", ")", "\n", "for", "click", "in", "clicks_list", "\n", "]", "\n", "clicks_lists_flipped", ".", "append", "(", "clicks_list_flipped", ")", "\n", "", "clicks_lists", "=", "clicks_lists", "+", "clicks_lists_flipped", "\n", "\n", "return", "image_nd", ",", "clicks_lists", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.flip.AddHorizontalFlip.inv_transform": [[46, 52], ["len", "paddle.flip"], "methods", ["None"], ["", "def", "inv_transform", "(", "self", ",", "prob_map", ")", ":", "\n", "        ", "assert", "len", "(", "prob_map", ".", "shape", ")", "==", "4", "and", "prob_map", ".", "shape", "[", "0", "]", "%", "2", "==", "0", "\n", "num_maps", "=", "prob_map", ".", "shape", "[", "0", "]", "//", "2", "\n", "prob_map", ",", "prob_map_flipped", "=", "prob_map", "[", ":", "num_maps", "]", ",", "prob_map", "[", "num_maps", ":", "]", "\n", "\n", "return", "0.5", "*", "(", "prob_map", "+", "paddle", ".", "flip", "(", "prob_map_flipped", ",", "axis", "=", "[", "3", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.flip.AddHorizontalFlip.get_state": [[53, 55], ["None"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.flip.AddHorizontalFlip.set_state": [[56, 58], ["None"], "methods", ["None"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.flip.AddHorizontalFlip.reset": [[59, 61], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.__init__": [[28, 48], ["base.BaseTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "target_size", "=", "700", ",", "\n", "skip_clicks", "=", "1", ",", "\n", "expansion_ratio", "=", "1.4", ",", "\n", "min_crop_size", "=", "480", ",", "\n", "recompute_thresh_iou", "=", "0.5", ",", "\n", "prob_thresh", "=", "0.50", ",", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "target_size", "=", "target_size", "\n", "self", ".", "min_crop_size", "=", "min_crop_size", "\n", "self", ".", "skip_clicks", "=", "skip_clicks", "\n", "self", ".", "expansion_ratio", "=", "expansion_ratio", "\n", "self", ".", "recompute_thresh_iou", "=", "recompute_thresh_iou", "\n", "self", ".", "prob_thresh", "=", "prob_thresh", "\n", "\n", "self", ".", "_input_image_shape", "=", "None", "\n", "self", ".", "_prev_probs", "=", "None", "\n", "self", ".", "_object_roi", "=", "None", "\n", "self", ".", "_roi_image", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.transform": [[49, 93], ["zoom_in.get_roi_image_nd", "len", "zoom_in.ZoomIn._transform_clicks", "len", "current_pred_mask.sum", "zoom_in.get_object_roi", "zoom_in.check_object_roi", "util.misc.get_bbox_iou"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.get_roi_image_nd", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn._transform_clicks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.get_object_roi", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.check_object_roi", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_bbox_iou"], ["", "def", "transform", "(", "self", ",", "image_nd", ",", "clicks_lists", ")", ":", "\n", "        ", "assert", "image_nd", ".", "shape", "[", "0", "]", "==", "1", "and", "len", "(", "clicks_lists", ")", "==", "1", "\n", "self", ".", "image_changed", "=", "False", "\n", "\n", "clicks_list", "=", "clicks_lists", "[", "0", "]", "\n", "if", "len", "(", "clicks_list", ")", "<=", "self", ".", "skip_clicks", ":", "\n", "            ", "return", "image_nd", ",", "clicks_lists", "\n", "\n", "", "self", ".", "_input_image_shape", "=", "image_nd", ".", "shape", "\n", "\n", "current_object_roi", "=", "None", "\n", "if", "self", ".", "_prev_probs", "is", "not", "None", ":", "\n", "            ", "current_pred_mask", "=", "(", "self", ".", "_prev_probs", ">", "self", ".", "prob_thresh", ")", "[", "0", ",", "0", "]", "\n", "if", "current_pred_mask", ".", "sum", "(", ")", ">", "0", ":", "\n", "                ", "current_object_roi", "=", "get_object_roi", "(", "\n", "current_pred_mask", ",", "\n", "clicks_list", ",", "\n", "self", ".", "expansion_ratio", ",", "\n", "self", ".", "min_crop_size", ",", ")", "\n", "\n", "", "", "if", "current_object_roi", "is", "None", ":", "\n", "            ", "if", "self", ".", "skip_clicks", ">=", "0", ":", "\n", "                ", "return", "image_nd", ",", "clicks_lists", "\n", "", "else", ":", "\n", "                ", "current_object_roi", "=", "0", ",", "image_nd", ".", "shape", "[", "\n", "2", "]", "-", "1", ",", "0", ",", "image_nd", ".", "shape", "[", "3", "]", "-", "1", "\n", "\n", "", "", "update_object_roi", "=", "False", "\n", "if", "self", ".", "_object_roi", "is", "None", ":", "\n", "            ", "update_object_roi", "=", "True", "\n", "", "elif", "not", "check_object_roi", "(", "self", ".", "_object_roi", ",", "clicks_list", ")", ":", "\n", "            ", "update_object_roi", "=", "True", "\n", "", "elif", "(", "get_bbox_iou", "(", "current_object_roi", ",", "self", ".", "_object_roi", ")", "<", "\n", "self", ".", "recompute_thresh_iou", ")", ":", "\n", "            ", "update_object_roi", "=", "True", "\n", "\n", "", "if", "update_object_roi", ":", "\n", "            ", "self", ".", "_object_roi", "=", "current_object_roi", "\n", "self", ".", "image_changed", "=", "True", "\n", "", "self", ".", "_roi_image", "=", "get_roi_image_nd", "(", "image_nd", ",", "self", ".", "_object_roi", ",", "\n", "self", ".", "target_size", ")", "\n", "\n", "tclicks_lists", "=", "[", "self", ".", "_transform_clicks", "(", "clicks_list", ")", "]", "\n", "return", "self", ".", "_roi_image", ",", "tclicks_lists", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.inv_transform": [[94, 117], ["paddle.nn.functional.interpolate", "paddle.zeros.numpy", "paddle.nn.functional.interpolate.numpy", "paddle.zeros"], "methods", ["None"], ["", "def", "inv_transform", "(", "self", ",", "prob_map", ")", ":", "\n", "        ", "if", "self", ".", "_object_roi", "is", "None", ":", "\n", "            ", "self", ".", "_prev_probs", "=", "prob_map", ".", "numpy", "(", ")", "\n", "return", "prob_map", "\n", "\n", "", "assert", "prob_map", ".", "shape", "[", "0", "]", "==", "1", "\n", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "self", ".", "_object_roi", "\n", "prob_map", "=", "paddle", ".", "nn", ".", "functional", ".", "interpolate", "(", "\n", "prob_map", ",", "\n", "size", "=", "(", "rmax", "-", "rmin", "+", "1", ",", "cmax", "-", "cmin", "+", "1", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", ")", "\n", "\n", "if", "self", ".", "_prev_probs", "is", "not", "None", ":", "\n", "            ", "new_prob_map", "=", "paddle", ".", "zeros", "(", "\n", "shape", "=", "self", ".", "_prev_probs", ".", "shape", ",", "dtype", "=", "prob_map", ".", "dtype", ")", "\n", "new_prob_map", "[", ":", ",", ":", ",", "rmin", ":", "rmax", "+", "1", ",", "cmin", ":", "cmax", "+", "1", "]", "=", "prob_map", "\n", "", "else", ":", "\n", "            ", "new_prob_map", "=", "prob_map", "\n", "\n", "", "self", ".", "_prev_probs", "=", "new_prob_map", ".", "numpy", "(", ")", "\n", "\n", "return", "new_prob_map", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.check_possible_recalculation": [[118, 135], ["pred_mask.sum", "zoom_in.get_object_roi", "util.misc.get_bbox_iou"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.get_object_roi", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_bbox_iou"], ["", "def", "check_possible_recalculation", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "_prev_probs", "is", "None", "or", "self", ".", "_object_roi", "is", "not", "None", "or", "\n", "self", ".", "skip_clicks", ">", "0", ")", ":", "\n", "            ", "return", "False", "\n", "\n", "", "pred_mask", "=", "(", "self", ".", "_prev_probs", ">", "self", ".", "prob_thresh", ")", "[", "0", ",", "0", "]", "\n", "if", "pred_mask", ".", "sum", "(", ")", ">", "0", ":", "\n", "            ", "possible_object_roi", "=", "get_object_roi", "(", "\n", "pred_mask", ",", "[", "]", ",", "self", ".", "expansion_ratio", ",", "self", ".", "min_crop_size", ")", "\n", "image_roi", "=", "(", "\n", "0", ",", "\n", "self", ".", "_input_image_shape", "[", "2", "]", "-", "1", ",", "\n", "0", ",", "\n", "self", ".", "_input_image_shape", "[", "3", "]", "-", "1", ",", ")", "\n", "if", "get_bbox_iou", "(", "possible_object_roi", ",", "image_roi", ")", "<", "0.50", ":", "\n", "                ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.get_state": [[136, 144], ["None"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "roi_image", "=", "self", ".", "_roi_image", "if", "self", ".", "_roi_image", "is", "not", "None", "else", "None", "\n", "return", "(", "\n", "self", ".", "_input_image_shape", ",", "\n", "self", ".", "_object_roi", ",", "\n", "self", ".", "_prev_probs", ",", "\n", "roi_image", ",", "\n", "self", ".", "image_changed", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.set_state": [[145, 152], ["None"], "methods", ["None"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "(", "\n", "self", ".", "_input_image_shape", ",", "\n", "self", ".", "_object_roi", ",", "\n", "self", ".", "_prev_probs", ",", "\n", "self", ".", "_roi_image", ",", "\n", "self", ".", "image_changed", ",", ")", "=", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.reset": [[153, 159], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_input_image_shape", "=", "None", "\n", "self", ".", "_object_roi", "=", "None", "\n", "self", ".", "_prev_probs", "=", "None", "\n", "self", ".", "_roi_image", "=", "None", "\n", "self", ".", "image_changed", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn._transform_clicks": [[160, 173], ["transformed_clicks.append", "click.copy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["", "def", "_transform_clicks", "(", "self", ",", "clicks_list", ")", ":", "\n", "        ", "if", "self", ".", "_object_roi", "is", "None", ":", "\n", "            ", "return", "clicks_list", "\n", "\n", "", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "self", ".", "_object_roi", "\n", "crop_height", ",", "crop_width", "=", "self", ".", "_roi_image", ".", "shape", "[", "2", ":", "]", "\n", "\n", "transformed_clicks", "=", "[", "]", "\n", "for", "click", "in", "clicks_list", ":", "\n", "            ", "new_r", "=", "crop_height", "*", "(", "click", ".", "coords", "[", "0", "]", "-", "rmin", ")", "/", "(", "rmax", "-", "rmin", "+", "1", ")", "\n", "new_c", "=", "crop_width", "*", "(", "click", ".", "coords", "[", "1", "]", "-", "cmin", ")", "/", "(", "cmax", "-", "cmin", "+", "1", ")", "\n", "transformed_clicks", ".", "append", "(", "click", ".", "copy", "(", "coords", "=", "(", "new_r", ",", "new_c", ")", ")", ")", "\n", "", "return", "transformed_clicks", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.get_object_roi": [[175, 188], ["pred_mask.copy.copy", "util.misc.get_bbox_from_mask", "util.misc.expand_bbox", "util.misc.clamp_bbox", "int", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_bbox_from_mask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.expand_bbox", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.clamp_bbox"], ["", "", "def", "get_object_roi", "(", "pred_mask", ",", "clicks_list", ",", "expansion_ratio", ",", "min_crop_size", ")", ":", "\n", "    ", "pred_mask", "=", "pred_mask", ".", "copy", "(", ")", "\n", "\n", "for", "click", "in", "clicks_list", ":", "\n", "        ", "if", "click", ".", "is_positive", ":", "\n", "            ", "pred_mask", "[", "int", "(", "click", ".", "coords", "[", "0", "]", ")", ",", "int", "(", "click", ".", "coords", "[", "1", "]", ")", "]", "=", "1", "\n", "\n", "", "", "bbox", "=", "get_bbox_from_mask", "(", "pred_mask", ")", "\n", "bbox", "=", "expand_bbox", "(", "bbox", ",", "expansion_ratio", ",", "min_crop_size", ")", "\n", "h", ",", "w", "=", "pred_mask", ".", "shape", "[", "0", "]", ",", "pred_mask", ".", "shape", "[", "1", "]", "\n", "bbox", "=", "clamp_bbox", "(", "bbox", ",", "0", ",", "h", "-", "1", ",", "0", ",", "w", "-", "1", ")", "\n", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.get_roi_image_nd": [[190, 212], ["isinstance", "int", "int", "paddle.no_grad", "paddle.nn.functional.interpolate", "max", "round", "round"], "function", ["None"], ["", "def", "get_roi_image_nd", "(", "image_nd", ",", "object_roi", ",", "target_size", ")", ":", "\n", "    ", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "object_roi", "\n", "\n", "height", "=", "rmax", "-", "rmin", "+", "1", "\n", "width", "=", "cmax", "-", "cmin", "+", "1", "\n", "\n", "if", "isinstance", "(", "target_size", ",", "tuple", ")", ":", "\n", "        ", "new_height", ",", "new_width", "=", "target_size", "\n", "", "else", ":", "\n", "        ", "scale", "=", "target_size", "/", "max", "(", "height", ",", "width", ")", "\n", "new_height", "=", "int", "(", "round", "(", "height", "*", "scale", ")", ")", "\n", "new_width", "=", "int", "(", "round", "(", "width", "*", "scale", ")", ")", "\n", "\n", "", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "        ", "roi_image_nd", "=", "image_nd", "[", ":", ",", ":", ",", "rmin", ":", "rmax", "+", "1", ",", "cmin", ":", "cmax", "+", "1", "]", "\n", "roi_image_nd", "=", "paddle", ".", "nn", ".", "functional", ".", "interpolate", "(", "\n", "roi_image_nd", ",", "\n", "size", "=", "(", "new_height", ",", "new_width", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", ")", "\n", "\n", "", "return", "roi_image_nd", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.check_object_roi": [[214, 225], ["None"], "function", ["None"], ["", "def", "check_object_roi", "(", "object_roi", ",", "clicks_list", ")", ":", "\n", "    ", "for", "click", "in", "clicks_list", ":", "\n", "        ", "if", "click", ".", "is_positive", ":", "\n", "            ", "if", "click", ".", "coords", "[", "0", "]", "<", "object_roi", "[", "0", "]", "or", "click", ".", "coords", "[", "0", "]", ">=", "object_roi", "[", "\n", "1", "]", ":", "\n", "                ", "return", "False", "\n", "", "if", "click", ".", "coords", "[", "1", "]", "<", "object_roi", "[", "2", "]", "or", "click", ".", "coords", "[", "1", "]", ">=", "object_roi", "[", "\n", "3", "]", ":", "\n", "                ", "return", "False", "\n", "\n", "", "", "", "return", "True", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.predict.parse_args": [[27, 98], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model prediction'", ")", "\n", "\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The image to predict, which can be a path of image, or a file list containing image paths, or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# custom color map", "\n", "parser", ".", "add_argument", "(", "\n", "'--custom_color'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.predict.get_image_list": [[100, 135], ["os.path.isfile", "os.path.isdir", "len", "RuntimeError", "image_list.append", "os.path.dirname", "os.walk", "FileNotFoundError", "os.path.splitext", "open", "line.strip.strip", "image_list.append", "len", "os.path.join", "image_list.append", "line.strip.split", "line.strip.split", "os.path.splitext", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["nargs", "=", "'+'", ",", "\n", "help", "=", "'Save images with a custom color map. Default: None, use paddleseg\\'s default color map.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# set device", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "get_test_config", "(", "cfg", ",", "args", ")", ":", "\n", "\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "'aug_eval'", "in", "test_config", ":", "\n", "        ", "test_config", ".", "pop", "(", "'aug_eval'", ")", "\n", "", "if", "args", ".", "aug_pred", ":", "\n", "        ", "test_config", "[", "'aug_pred'", "]", "=", "args", ".", "aug_pred", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "\n", "", "if", "args", ".", "flip_horizontal", ":", "\n", "        ", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "\n", "", "if", "args", ".", "flip_vertical", ":", "\n", "        ", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.predict.main": [[137, 179], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "predict.get_image_list", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "paddleseg.core.predict", "RuntimeError", "RuntimeError", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict"], ["        ", "test_config", "[", "'custom_color'", "]", "=", "args", ".", "custom_color", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "transforms", "=", "Compose", "(", "cfg", ".", "val_transforms", ")", "\n", "image_list", ",", "image_dir", "=", "get_image_list", "(", "args", ".", "image_path", ")", "\n", "logger", ".", "info", "(", "'Number of predict images = {}'", ".", "format", "(", "len", "(", "image_list", ")", ")", ")", "\n", "\n", "test_config", "=", "get_test_config", "(", "cfg", ",", "args", ")", "\n", "\n", "predict", "(", "\n", "model", ",", "\n", "model_path", "=", "args", ".", "model_path", ",", "\n", "transforms", "=", "transforms", ",", "\n", "image_list", "=", "image_list", ",", "\n", "image_dir", "=", "image_dir", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.train.parse_args": [[25, 96], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["\n", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.train.main": [[98, 151], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "scripts.train.train", "RuntimeError", "RuntimeError", "paddleseg.utils.get_sys_env.items", "len", "ValueError", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train"], ["help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "=", "\"Auto mixed precision level. Accepted values are \u201cO1\u201d and \u201cO2\u201d: O1 represent mixed precision, the input \\\n                data type of each operator will be casted by white_list and black_list; O2 represent Pure fp16, all operators \\\n                parameters and input data will be casted to fp16, except operators in black_list, don\u2019t support fp16 kernel \\\n                and batchnorm. Default is O1(amp)\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.val.parse_args": [[27, 92], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.val.main": [[94, 137], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "paddleseg.core.evaluate", "RuntimeError", "RuntimeError", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--auc_roc'", ",", "\n", "dest", "=", "'add auc_roc metric'", ",", "\n", "help", "=", "'Whether to use auc_roc metric'", ",", "\n", "type", "=", "bool", ",", "\n", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.bg_replace.parse_args": [[27, 100], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["from", "dataset", "import", "MattingDataset", "\n", "from", "transforms", "import", "Compose", "\n", "from", "utils", "import", "get_image_list", ",", "estimate_foreground_ml", "\n", "\n", "\n", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'PP-HumanSeg inference for video'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'Image including human'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--trimap_path'", ",", "\n", "dest", "=", "'trimap_path'", ",", "\n", "help", "=", "'The path of trimap'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--background'", ",", "\n", "dest", "=", "'background'", ",", "\n", "help", "=", "'Background for replacing. It is a string which specifies the background color (r,g,b,w) or a path to background image. If not specified, a green background is used.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the inference results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--fg_estimate'", ",", "\n", "default", "=", "True", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to estimate foreground when predicting.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "transforms", "=", "Compose", "(", "cfg", ".", "val_transforms", ")", "\n", "\n", "alpha", ",", "fg", "=", "predict", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.bg_replace.background_replace": [[102, 232], ["paddleseg.utils.get_sys_env", "deploy.infer.Predictor", "os.exists", "os.makedirs", "os.makedirs", "cv2.imread", "bg_replace.get_bg_img", "deploy.infer.Predictor.run", "os.basename", "os.join", "cv2.imwrite", "paddleseg.utils.logger.info", "os.exists", "Exception", "bg_replace.get_bg_img", "paddleseg.utils.logger.info", "cv2.VideoCapture", "cv2.VideoCapture.get", "int", "int", "os.basename", "os.join", "cv2.VideoWriter", "cv2.VideoCapture.isOpened", "cv2.VideoCapture.release", "cv2.VideoWriter.release", "cv2.VideoCapture", "cv2.VideoCapture.isOpened", "cv2.VideoCapture.release", "os.exists", "Exception", "os.exists", "Exception", "cv2.VideoCapture.get", "cv2.VideoCapture.get", "osp.basename.split", "cv2.VideoWriter_fourcc", "cv2.VideoCapture", "cv2.VideoCapture.get", "cv2.VideoCapture.read", "cv2.VideoCapture.release", "cv2.VideoCapture.isOpened", "IOError", "cv2.VideoCapture", "cv2.VideoCapture.get", "cv2.VideoCapture.read", "cv2.VideoCapture.release", "timer.get_average", "deploy.infer.Predictor.run", "cv2.VideoWriter.write", "paddleseg.utils.logger.info", "deploy.infer.Predictor.run", "cv2.imshow", "timer.get_average", "cv2.VideoCapture.read", "cv2.VideoCapture.read", "ord", "cv2.waitKey", "cv2.VideoCapture.set", "cv2.VideoCapture.set"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.bg_replace.get_bg_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.bg_replace.get_bg_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average"], ["model_path", "=", "args", ".", "model_path", ",", "\n", "transforms", "=", "transforms", ",", "\n", "image_list", "=", "[", "args", ".", "image_path", "]", ",", "\n", "trimap_list", "=", "[", "args", ".", "trimap_path", "]", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "fg_estimate", "=", "args", ".", "fg_estimate", ")", "\n", "\n", "img_ori", "=", "cv2", ".", "imread", "(", "args", ".", "image_path", ")", "\n", "bg", "=", "get_bg", "(", "args", ".", "background", ",", "img_ori", ".", "shape", ")", "\n", "alpha", "=", "alpha", "/", "255.0", "\n", "alpha", "=", "alpha", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "com", "=", "alpha", "*", "fg", "+", "(", "1", "-", "alpha", ")", "*", "bg", "\n", "com", "=", "com", ".", "astype", "(", "'uint8'", ")", "\n", "com_save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "\n", "os", ".", "path", ".", "basename", "(", "args", ".", "image_path", ")", ")", "\n", "cv2", ".", "imwrite", "(", "com_save_path", ",", "com", ")", "\n", "\n", "\n", "", "def", "get_bg", "(", "background", ",", "img_shape", ")", ":", "\n", "    ", "bg", "=", "np", ".", "zeros", "(", "img_shape", ")", "\n", "if", "background", "==", "'r'", ":", "\n", "        ", "bg", "[", ":", ",", ":", ",", "2", "]", "=", "255", "\n", "", "elif", "background", "is", "None", "or", "background", "==", "'g'", ":", "\n", "        ", "bg", "[", ":", ",", ":", ",", "1", "]", "=", "255", "\n", "", "elif", "background", "==", "'b'", ":", "\n", "        ", "bg", "[", ":", ",", ":", ",", "0", "]", "=", "255", "\n", "", "elif", "background", "==", "'w'", ":", "\n", "        ", "bg", "[", ":", ",", ":", ",", ":", "]", "=", "255", "\n", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "background", ")", ":", "\n", "        ", "raise", "Exception", "(", "'The --background is not existed: {}'", ".", "format", "(", "\n", "background", ")", ")", "\n", "", "else", ":", "\n", "        ", "bg", "=", "cv2", ".", "imread", "(", "background", ")", "\n", "bg", "=", "cv2", ".", "resize", "(", "bg", ",", "(", "img_shape", "[", "1", "]", ",", "img_shape", "[", "0", "]", ")", ")", "\n", "", "return", "bg", "\n", "\n", "\n", "", "if", "__name__", "==", "\"__main__\"", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "main", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PP-HumanSeg.bg_replace.get_bg_img": [[234, 243], ["numpy.ones", "os.exists", "Exception", "cv2.imread"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.train.check_logits_losses": [[27, 34], ["len", "len", "RuntimeError"], "function", ["None"], ["    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.train.loss_computation": [[36, 58], ["train.check_logits_losses", "range", "len", "loss_list.append", "loss_i", "loss_i", "loss_list.append", "loss_list.append", "loss_list.append", "loss_i", "loss_i", "logits_list[].detach"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.check_logits_losses", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.train.train": [[60, 282], ["paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DataLoader", "paddle.io.DataLoader", "len", "paddleseg.utils.TimeAverager", "paddleseg.utils.TimeAverager", "collections.deque", "time.time", "time.sleep", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddleseg.utils.resume", "os.path.isdir", "os.path.exists", "os.makedirs", "paddle.distributed.init_parallel_env", "paddle.distributed.init_parallel_env", "paddle.DataParallel", "paddle.DataParallel", "LogWriter", "paddle.flops", "paddle.flops", "paddleseg.utils.logger.info", "LogWriter.close", "os.remove", "paddleseg.utils.TimeAverager.record", "data[].astype", "train.loss_computation", "sum", "sum.backward", "optimizer.step", "optimizer.get_lr", "isinstance", "model.clear_gradients", "paddleseg.utils.TimeAverager.record", "time.time", "x.numel", "int", "len", "data[].astype", "hasattr", "train_dataset.shuffle", "paddle.DataParallel.", "model", "optimizer._learning_rate.step", "sum.numpy", "range", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.calculate_eta", "paddleseg.utils.logger.info", "paddleseg.utils.TimeAverager.reset", "paddleseg.utils.TimeAverager.reset", "paddleseg.core.val.evaluate", "model.train", "os.path.join", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "collections.deque.append", "time.time", "l.numpy", "len", "loss_list[].numpy", "time.time", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "os.path.isdir", "os.makedirs", "model.state_dict", "os.path.join", "optimizer.state_dict", "os.path.join", "len", "collections.deque.popleft", "shutil.rmtree", "paddleseg.utils.logger.info", "paddleseg.utils.TimeAverager.get_ips_average", "len", "enumerate", "avg_loss_dict.items", "os.path.join", "paddle.save", "paddle.save", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "model.state_dict", "os.path.join", "str"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.resume", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.loss_computation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.calculate_eta", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_ips_average"], ["default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "=", "\"Auto mixed precision level. Accepted values are \u201cO1\u201d and \u201cO2\u201d: O1 represent mixed precision, the input \\\n                data type of each operator will be casted by white_list and black_list; O2 represent Pure fp16, all operators \\\n                parameters and input data will be casted to fp16, except operators in black_list, don\u2019t support fp16 kernel \\\n                and batchnorm. Default is O1(amp)\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "train_dataset", "=", "cfg", ".", "train_dataset", "\n", "if", "train_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "", "elif", "len", "(", "train_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of train_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "", "val_dataset", "=", "cfg", ".", "val_dataset", "if", "args", ".", "do_eval", "else", "None", "\n", "losses", "=", "cfg", ".", "loss", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "config_check", "(", "cfg", ",", "train_dataset", "=", "train_dataset", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "if", "place", "==", "'gpu'", "and", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "nranks", ">", "1", ":", "\n", "# convert bn to sync_bn", "\n", "        ", "cfg", ".", "_model", "=", "paddle", ".", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "cfg", ".", "model", ")", "\n", "\n", "", "train", "(", "\n", "cfg", ".", "model", ",", "\n", "train_dataset", ",", "\n", "val_dataset", "=", "val_dataset", ",", "\n", "optimizer", "=", "cfg", ".", "optimizer", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "iters", "=", "cfg", ".", "iters", ",", "\n", "batch_size", "=", "cfg", ".", "batch_size", ",", "\n", "resume_model", "=", "args", ".", "resume_model", ",", "\n", "save_interval", "=", "args", ".", "save_interval", ",", "\n", "log_iters", "=", "args", ".", "log_iters", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "use_vdl", "=", "args", ".", "use_vdl", ",", "\n", "losses", "=", "losses", ",", "\n", "keep_checkpoint_max", "=", "args", ".", "keep_checkpoint_max", ",", "\n", "test_config", "=", "cfg", ".", "test_config", ",", "\n", "precision", "=", "args", ".", "precision", ",", "\n", "amp_level", "=", "args", ".", "amp_level", ",", "\n", "profiler_options", "=", "args", ".", "profiler_options", ",", "\n", "to_static_training", "=", "cfg", ".", "to_static_training", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "main", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.optic_flow_process.human_seg_tracking": [[19, 59], ["numpy.zeros_like", "numpy.zeros_like", "disflow.calc", "disflow.calc", "numpy.round().astype", "numpy.round().astype", "numpy.array", "numpy.array", "numpy.meshgrid", "range", "range", "numpy.all", "numpy.all", "numpy.round", "numpy.round", "numpy.square", "numpy.square", "numpy.abs", "numpy.abs"], "function", ["None"], ["def", "human_seg_tracking", "(", "pre_gray", ",", "cur_gray", ",", "prev_cfd", ",", "dl_weights", ",", "disflow", ")", ":", "\n", "    ", "\"\"\"\u8ba1\u7b97\u5149\u6d41\u8ddf\u8e2a\u5339\u914d\u70b9\u548c\u5149\u6d41\u56fe\n    \u8f93\u5165\u53c2\u6570:\n        pre_gray: \u4e0a\u4e00\u5e27\u7070\u5ea6\u56fe\n        cur_gray: \u5f53\u524d\u5e27\u7070\u5ea6\u56fe\n        prev_cfd: \u4e0a\u4e00\u5e27\u5149\u6d41\u56fe\n        dl_weights: \u878d\u5408\u6743\u91cd\u56fe\n        disflow: \u5149\u6d41\u6570\u636e\u7ed3\u6784\n    \u8fd4\u56de\u503c:\n        is_track: \u5149\u6d41\u70b9\u8ddf\u8e2a\u4e8c\u503c\u56fe\uff0c\u5373\u662f\u5426\u5177\u6709\u5149\u6d41\u70b9\u5339\u914d\n        track_cfd: \u5149\u6d41\u8ddf\u8e2a\u56fe\n    \"\"\"", "\n", "check_thres", "=", "8", "\n", "h", ",", "w", "=", "pre_gray", ".", "shape", "[", ":", "2", "]", "\n", "track_cfd", "=", "np", ".", "zeros_like", "(", "prev_cfd", ")", "\n", "is_track", "=", "np", ".", "zeros_like", "(", "pre_gray", ")", "\n", "flow_fw", "=", "disflow", ".", "calc", "(", "pre_gray", ",", "cur_gray", ",", "None", ")", "\n", "flow_bw", "=", "disflow", ".", "calc", "(", "cur_gray", ",", "pre_gray", ",", "None", ")", "\n", "flow_fw", "=", "np", ".", "round", "(", "flow_fw", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "flow_bw", "=", "np", ".", "round", "(", "flow_bw", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "y_list", "=", "np", ".", "array", "(", "range", "(", "h", ")", ")", "\n", "x_list", "=", "np", ".", "array", "(", "range", "(", "w", ")", ")", "\n", "yv", ",", "xv", "=", "np", ".", "meshgrid", "(", "y_list", ",", "x_list", ")", "\n", "yv", ",", "xv", "=", "yv", ".", "T", ",", "xv", ".", "T", "\n", "cur_x", "=", "xv", "+", "flow_fw", "[", ":", ",", ":", ",", "0", "]", "\n", "cur_y", "=", "yv", "+", "flow_fw", "[", ":", ",", ":", ",", "1", "]", "\n", "\n", "# \u8d85\u51fa\u8fb9\u754c\u4e0d\u8ddf\u8e2a", "\n", "not_track", "=", "(", "cur_x", "<", "0", ")", "+", "(", "cur_x", ">=", "w", ")", "+", "(", "cur_y", "<", "0", ")", "+", "(", "cur_y", ">=", "h", ")", "\n", "flow_bw", "[", "~", "not_track", "]", "=", "flow_bw", "[", "cur_y", "[", "~", "not_track", "]", ",", "cur_x", "[", "~", "not_track", "]", "]", "\n", "not_track", "+=", "(", "np", ".", "square", "(", "flow_fw", "[", ":", ",", ":", ",", "0", "]", "+", "flow_bw", "[", ":", ",", ":", ",", "0", "]", ")", "+", "\n", "np", ".", "square", "(", "flow_fw", "[", ":", ",", ":", ",", "1", "]", "+", "flow_bw", "[", ":", ",", ":", ",", "1", "]", ")", ")", ">=", "check_thres", "\n", "track_cfd", "[", "cur_y", "[", "~", "not_track", "]", ",", "cur_x", "[", "~", "not_track", "]", "]", "=", "prev_cfd", "[", "~", "not_track", "]", "\n", "\n", "is_track", "[", "cur_y", "[", "~", "not_track", "]", ",", "cur_x", "[", "~", "not_track", "]", "]", "=", "1", "\n", "\n", "not_flow", "=", "np", ".", "all", "(", "np", ".", "abs", "(", "flow_fw", ")", "==", "0", ",", "\n", "axis", "=", "-", "1", ")", "*", "np", ".", "all", "(", "np", ".", "abs", "(", "flow_bw", ")", "==", "0", ",", "axis", "=", "-", "1", ")", "\n", "dl_weights", "[", "cur_y", "[", "not_flow", "]", ",", "cur_x", "[", "not_flow", "]", "]", "=", "0.05", "\n", "return", "track_cfd", ",", "is_track", ",", "dl_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.optic_flow_process.human_seg_track_fuse": [[61, 84], ["dl_cfd.copy", "is_track.astype.astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["", "def", "human_seg_track_fuse", "(", "track_cfd", ",", "dl_cfd", ",", "dl_weights", ",", "is_track", ")", ":", "\n", "    ", "\"\"\"\u5149\u6d41\u8ffd\u8e2a\u56fe\u548c\u4eba\u50cf\u5206\u5272\u7ed3\u6784\u878d\u5408\n    \u8f93\u5165\u53c2\u6570:\n        track_cfd: \u5149\u6d41\u8ffd\u8e2a\u56fe\n        dl_cfd: \u5f53\u524d\u5e27\u5206\u5272\u7ed3\u679c\n        dl_weights: \u878d\u5408\u6743\u91cd\u56fe\n        is_track: \u5149\u6d41\u70b9\u5339\u914d\u4e8c\u503c\u56fe\n    \u8fd4\u56de\n        cur_cfd: \u5149\u6d41\u8ddf\u8e2a\u56fe\u548c\u4eba\u50cf\u5206\u5272\u7ed3\u679c\u878d\u5408\u56fe\n    \"\"\"", "\n", "fusion_cfd", "=", "dl_cfd", ".", "copy", "(", ")", "\n", "is_track", "=", "is_track", ".", "astype", "(", "np", ".", "bool", ")", "\n", "fusion_cfd", "[", "is_track", "]", "=", "dl_weights", "[", "is_track", "]", "*", "dl_cfd", "[", "is_track", "]", "+", "(", "\n", "1", "-", "dl_weights", "[", "is_track", "]", ")", "*", "track_cfd", "[", "is_track", "]", "\n", "# \u786e\u5b9a\u533a\u57df", "\n", "index_certain", "=", "(", "(", "dl_cfd", ">", "0.9", ")", "+", "(", "dl_cfd", "<", "0.1", ")", ")", "*", "is_track", "\n", "index_less01", "=", "(", "dl_weights", "<", "0.1", ")", "*", "index_certain", "\n", "fusion_cfd", "[", "index_less01", "]", "=", "0.3", "*", "dl_cfd", "[", "index_less01", "]", "+", "0.7", "*", "track_cfd", "[", "\n", "index_less01", "]", "\n", "index_larger09", "=", "(", "dl_weights", ">=", "0.1", ")", "*", "index_certain", "\n", "fusion_cfd", "[", "index_larger09", "]", "=", "0.4", "*", "dl_cfd", "[", "index_larger09", "]", "+", "0.6", "*", "track_cfd", "[", "\n", "index_larger09", "]", "\n", "return", "fusion_cfd", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.optic_flow_process.threshold_mask": [[86, 91], ["dst.astype", "numpy.where", "numpy.where"], "function", ["None"], ["", "def", "threshold_mask", "(", "img", ",", "thresh_bg", ",", "thresh_fg", ")", ":", "\n", "    ", "dst", "=", "(", "img", "/", "255.0", "-", "thresh_bg", ")", "/", "(", "thresh_fg", "-", "thresh_bg", ")", "\n", "dst", "[", "np", ".", "where", "(", "dst", ">", "1", ")", "]", "=", "1", "\n", "dst", "[", "np", ".", "where", "(", "dst", "<", "0", ")", "]", "=", "0", "\n", "return", "dst", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.optic_flow_process.optic_flow_process": [[93, 124], ["scoremap.copy", "optic_flow_process.human_seg_tracking", "optic_flow_process.human_seg_track_fuse", "disflow.setFinestScale", "numpy.ones", "disflow.setFinestScale", "disflow.setFinestScale"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.optic_flow_process.human_seg_tracking", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.optic_flow_process.human_seg_track_fuse"], ["", "def", "optic_flow_process", "(", "cur_gray", ",", "scoremap", ",", "prev_gray", ",", "pre_cfd", ",", "disflow", ",", "\n", "is_init", ")", ":", "\n", "    ", "\"\"\"\u5149\u6d41\u4f18\u5316\n    Args:\n        cur_gray : \u5f53\u524d\u5e27\u7070\u5ea6\u56fe\n        pre_gray : \u524d\u4e00\u5e27\u7070\u5ea6\u56fe\n        pre_cfd  \uff1a\u524d\u4e00\u5e27\u878d\u5408\u7ed3\u679c\n        scoremap : \u5f53\u524d\u5e27\u5206\u5272\u7ed3\u679c\n        difflow  : \u5149\u6d41\n        is_init : \u662f\u5426\u7b2c\u4e00\u5e27\n    Returns:\n        fusion_cfd : \u5149\u6d41\u8ffd\u8e2a\u56fe\u548c\u9884\u6d4b\u7ed3\u679c\u878d\u5408\u56fe\n    \"\"\"", "\n", "h", ",", "w", "=", "scoremap", ".", "shape", "\n", "cur_cfd", "=", "scoremap", ".", "copy", "(", ")", "\n", "\n", "if", "is_init", ":", "\n", "        ", "if", "h", "<=", "64", "or", "w", "<=", "64", ":", "\n", "            ", "disflow", ".", "setFinestScale", "(", "1", ")", "\n", "", "elif", "h", "<=", "160", "or", "w", "<=", "160", ":", "\n", "            ", "disflow", ".", "setFinestScale", "(", "2", ")", "\n", "", "else", ":", "\n", "            ", "disflow", ".", "setFinestScale", "(", "3", ")", "\n", "", "fusion_cfd", "=", "cur_cfd", "\n", "", "else", ":", "\n", "        ", "weights", "=", "np", ".", "ones", "(", "(", "h", ",", "w", ")", ",", "np", ".", "float32", ")", "*", "0.3", "\n", "track_cfd", ",", "is_track", ",", "weights", "=", "human_seg_tracking", "(", "\n", "prev_gray", ",", "cur_gray", ",", "pre_cfd", ",", "weights", ",", "disflow", ")", "\n", "fusion_cfd", "=", "human_seg_track_fuse", "(", "track_cfd", ",", "cur_cfd", ",", "weights", ",", "is_track", ")", "\n", "\n", "", "return", "fusion_cfd", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.data.download_data.download_data": [[25, 36], ["paddleseg.utils.download.download_file_and_uncompress", "paddleseg.utils.download.download_file_and_uncompress"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.download.download_file_and_uncompress"], ["def", "download_data", "(", "savepath", ",", "extrapath", ")", ":", "\n", "    ", "url", "=", "\"https://paddleseg.bj.bcebos.com/humanseg/data/mini_supervisely.zip\"", "\n", "download_file_and_uncompress", "(", "\n", "url", "=", "url", ",", "savepath", "=", "savepath", ",", "extrapath", "=", "extrapath", ")", "\n", "\n", "url", "=", "\"https://paddleseg.bj.bcebos.com/humanseg/data/video_test.zip\"", "\n", "download_file_and_uncompress", "(", "\n", "url", "=", "url", ",", "\n", "savepath", "=", "savepath", ",", "\n", "extrapath", "=", "extrapath", ",", "\n", "extraname", "=", "'video_test.mp4'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.__init__": [[34, 41], ["infer.DeployConfig._load_transforms", "os.path.dirname", "codecs.open", "yaml.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig._load_transforms"], ["import", "transforms", "as", "T", "\n", "\n", "\n", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Deploy for matting model'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.transforms": [[42, 45], ["None"], "methods", ["None"], ["help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model": [[46, 49], ["os.path.join"], "methods", ["None"], ["parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The directory or path or file list of the images to be predicted.'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.params": [[50, 53], ["os.path.join"], "methods", ["None"], ["type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig._load_transforms": [[54, 62], ["t.pop", "transforms.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["'--trimap_path'", ",", "\n", "dest", "=", "'trimap_path'", ",", "\n", "help", "=", "'The directory or path or file list of the triamp to help predicted.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu.'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.Predictor.__init__": [[65, 85], ["infer.DeployConfig", "paddleseg.Compose", "cv2.DISOpticalFlow_create", "numpy.zeros", "numpy.zeros", "paddle.inference.Config", "paddle.inference.Config.disable_glog_info", "paddle.inference.create_predictor", "paddle.inference.Config.enable_use_gpu", "paddleseg.utils.TimeAverager"], "methods", ["None"], ["parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predict result.'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "choices", "=", "[", "'cpu'", ",", "'gpu'", "]", ",", "\n", "default", "=", "\"gpu\"", ",", "\n", "help", "=", "\"Select which device to inference, defaults to gpu.\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--fg_estimate'", ",", "\n", "default", "=", "True", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to estimate foreground when predicting.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--cpu_threads'", ",", "\n", "default", "=", "10", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.Predictor.preprocess": [[86, 93], ["processed_imgs.append", "ori_shapes.append", "infer.Predictor.compose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["type", "=", "int", ",", "\n", "help", "=", "'Number of threads to predict when using cpu.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_mkldnn'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Enable to use mkldnn to speed up when using cpu.'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.Predictor.run": [[94, 114], ["infer.Predictor.predictor.get_input_names", "infer.Predictor.predictor.get_input_handle", "infer.Predictor.preprocess", "numpy.array", "infer.Predictor.reshape", "infer.Predictor.copy_from_cpu", "infer.Predictor.predictor.run", "infer.Predictor.predictor.get_output_names", "infer.Predictor.predictor.get_output_handle", "infer.Predictor.copy_to_cpu", "infer.Predictor.postprocess", "time.time", "infer.Predictor.cost_averager.record", "time.time"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.Predictor.preprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.Predictor.postprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record"], ["parser", ".", "add_argument", "(", "\n", "'--use_trt'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to use Nvidia TensorRT to accelerate prediction.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", ",", "\"int8\"", "]", ",", "\n", "help", "=", "'The tensorrt precision.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--enable_auto_tune'", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Whether to enable tuned dynamic shape. We uses some images to collect '", "\n", "'the dynamic shape for trt sub graph, which avoids setting dynamic shape manually.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.Predictor.postprocess": [[115, 176], ["cv2.resize", "os.path.exists", "os.makedirs", "paddleseg.core.infer.reverse_transform", "numpy.array", "numpy.transpose", "pred[].squeeze", "cv2.cvtColor", "cv2.resize", "scripts.optic_flow_process.optic_flow_process", "cv2.resize.copy", "scripts.optic_flow_process.optic_flow_process.copy", "numpy.repeat", "paddleseg.core.infer.reverse_transform", "paddleseg.core.infer.reverse_transform", "numpy.transpose", "paddle.to_tensor", "numpy.argmax", "result.squeeze.squeeze.squeeze", "numpy.transpose", "paddle.to_tensor", "numpy.transpose", "paddle.to_tensor", "paddleseg.core.infer.reverse_transform.numpy().squeeze", "paddleseg.core.infer.reverse_transform.numpy().squeeze", "paddleseg.core.infer.reverse_transform.numpy", "paddleseg.core.infer.reverse_transform.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.scripts.optic_flow_process.optic_flow_process", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.infer_ensemble_three.reverse_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["'--auto_tuned_shape_file'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"auto_tune_tmp.pbtxt\"", ",", "\n", "help", "=", "'The temp file to save tuned dynamic shape.'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "\"--benchmark\"", ",", "\n", "type", "=", "eval", ",", "\n", "default", "=", "False", ",", "\n", "help", "=", "\"Whether to log some information about environment, model, configuration and performance.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--model_name\"", ",", "\n", "default", "=", "\"\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'When `--benchmark` is True, the specified model name is displayed.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--print_detail'", ",", "\n", "default", "=", "True", ",", "\n", "type", "=", "eval", ",", "\n", "choices", "=", "[", "True", ",", "False", "]", ",", "\n", "help", "=", "'Print GLOG information of Paddle Inference.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "use_auto_tune", "(", "args", ")", ":", "\n", "    ", "return", "hasattr", "(", "PredictConfig", ",", "\"collect_shape_range_info\"", ")", "and", "hasattr", "(", "PredictConfig", ",", "\"enable_tuned_tensorrt_dynamic_shape\"", ")", "and", "args", ".", "device", "==", "\"gpu\"", "and", "args", ".", "use_trt", "and", "args", ".", "enable_auto_tune", "\n", "\n", "\n", "", "class", "DeployConfig", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "codecs", ".", "open", "(", "path", ",", "'r'", ",", "'utf-8'", ")", "as", "file", ":", "\n", "            ", "self", ".", "dic", "=", "yaml", ".", "load", "(", "file", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "self", ".", "_transforms", "=", "self", ".", "load_transforms", "(", "self", ".", "dic", "[", "'Deploy'", "]", "[", "\n", "'transforms'", "]", ")", "\n", "self", ".", "_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "\n", "", "@", "property", "\n", "def", "transforms", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_transforms", "\n", "\n", "", "@", "property", "\n", "def", "model", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "_dir", ",", "self", ".", "dic", "[", "'Deploy'", "]", "[", "'model'", "]", ")", "\n", "\n", "", "@", "property", "\n", "def", "params", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "_dir", ",", "self", ".", "dic", "[", "'Deploy'", "]", "[", "'params'", "]", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "load_transforms", "(", "t_list", ")", ":", "\n", "        ", "com", "=", "manager", ".", "TRANSFORMS", "\n", "transforms", "=", "[", "]", "\n", "for", "t", "in", "t_list", ":", "\n", "            ", "ctype", "=", "t", ".", "pop", "(", "'type'", ")", "\n", "transforms", ".", "append", "(", "com", "[", "ctype", "]", "(", "**", "t", ")", ")", "\n", "", "return", "T", ".", "Compose", "(", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.predict.parse_args": [[26, 97], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model prediction'", ")", "\n", "\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The image to predict, which can be a path of image, or a file list containing image paths, or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# custom color map", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.predict.get_image_list": [[99, 126], ["os.path.isfile", "os.path.isdir", "len", "RuntimeError", "image_list.append", "os.walk", "FileNotFoundError", "os.path.splitext", "image_list.append", "os.path.splitext", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["dest", "=", "'custom_color'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Save images with a custom color map. Default: None, use paddleseg\\'s default color map.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# set device", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "get_test_config", "(", "cfg", ",", "args", ")", ":", "\n", "\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "'aug_eval'", "in", "test_config", ":", "\n", "        ", "test_config", ".", "pop", "(", "'aug_eval'", ")", "\n", "", "if", "args", ".", "aug_pred", ":", "\n", "        ", "test_config", "[", "'aug_pred'", "]", "=", "args", ".", "aug_pred", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "\n", "", "if", "args", ".", "flip_horizontal", ":", "\n", "        ", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.predict.main": [[128, 167], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "predict.get_image_list", "paddleseg.utils.logger.info", "paddleseg.core.predict", "RuntimeError", "RuntimeError", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict"], ["", "if", "args", ".", "flip_vertical", ":", "\n", "        ", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "if", "args", ".", "custom_color", ":", "\n", "        ", "test_config", "[", "'custom_color'", "]", "=", "args", ".", "custom_color", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "transforms", "=", "Compose", "(", "cfg", ".", "val_transforms", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.train.parse_args": [[25, 96], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["\n", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.train.main": [[98, 147], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "scripts.train.train", "RuntimeError", "RuntimeError", "paddleseg.utils.get_sys_env.items", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train"], ["help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "=", "\"Auto mixed precision level. Accepted values are \u201cO1\u201d and \u201cO2\u201d: O1 represent mixed precision, the input \\\n                data type of each operator will be casted by white_list and black_list; O2 represent Pure fp16, all operators \\\n                parameters and input data will be casted to fp16, except operators in black_list, don\u2019t support fp16 kernel \\\n                and batchnorm. Default is O1(amp)\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.val.parse_args": [[26, 91], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.val.main": [[93, 130], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "core.val.evaluate", "RuntimeError", "RuntimeError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate"], ["dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--auc_roc'", ",", "\n", "dest", "=", "'add auc_roc metric'", ",", "\n", "help", "=", "'Whether to use auc_roc metric'", ",", "\n", "type", "=", "bool", ",", "\n", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.predict_ensemble_three.parse_args": [[26, 121], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model prediction'", ")", "\n", "\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config_1\"", ",", "\n", "dest", "=", "\"cfg_1\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path_1'", ",", "\n", "dest", "=", "'model_path_1'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config_crop\"", ",", "\n", "dest", "=", "\"cfg_crop\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path_crop'", ",", "\n", "dest", "=", "'model_path_crop'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The path of image, it can be a file or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.predict_ensemble_three.get_image_list": [[123, 150], ["os.path.isfile", "os.path.isdir", "len", "RuntimeError", "image_list.append", "os.walk", "FileNotFoundError", "os.path.splitext", "image_list.append", "os.path.splitext", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "get_image_list", "(", "image_path", ")", ":", "\n", "    ", "\"\"\"Get image list\"\"\"", "\n", "valid_suffix", "=", "[", "\n", "'.JPEG'", ",", "'.jpeg'", ",", "'.JPG'", ",", "'.jpg'", ",", "'.BMP'", ",", "'.bmp'", ",", "'.PNG'", ",", "'.png'", "\n", "]", "\n", "image_list", "=", "[", "]", "\n", "image_dir", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "image_path", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "splitext", "(", "image_path", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "            ", "image_list", ".", "append", "(", "image_path", ")", "\n", "", "", "elif", "os", ".", "path", ".", "isdir", "(", "image_path", ")", ":", "\n", "        ", "image_dir", "=", "image_path", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "image_path", ")", ":", "\n", "            ", "for", "f", "in", "files", ":", "\n", "                ", "if", "'.ipynb_checkpoints'", "in", "root", ":", "\n", "                    ", "continue", "\n", "", "if", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "                    ", "image_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", "f", ")", ")", "\n", "", "", "", "", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\n", "'`--image_path` is not found. it should be an image file or a directory including images'", "\n", ")", "\n", "\n", "", "if", "len", "(", "image_list", ")", "==", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "'There are not image file in `--image_path`'", ")", "\n", "\n", "", "return", "image_list", ",", "image_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.predict_ensemble_three.main": [[152, 203], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "paddleseg.cvlibs.Config", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "predict_ensemble_three.get_image_list", "paddleseg.utils.logger.info", "core.predict_ensemble_three.predictEnsembleThree", "RuntimeError", "RuntimeError", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble_three.predictEnsembleThree"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "val_dataset", "=", "cfg", ".", "val_dataset", "\n", "cfg_1", "=", "Config", "(", "args", ".", "cfg_1", ")", "\n", "cfg_crop", "=", "Config", "(", "args", ".", "cfg_crop", ")", "\n", "val_dataset_crop", "=", "cfg_crop", ".", "val_dataset", "\n", "\n", "if", "not", "val_dataset", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The verification dataset is not specified in the configuration file.'", "\n", ")", "\n", "\n", "", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "model_1", "=", "cfg_1", ".", "model", "\n", "model_crop", "=", "cfg_crop", ".", "model", "\n", "transforms", "=", "val_dataset", ".", "transforms", "\n", "transforms_crop", "=", "val_dataset_crop", ".", "transforms", "\n", "image_list", ",", "image_dir", "=", "get_image_list", "(", "args", ".", "image_path", ")", "\n", "logger", ".", "info", "(", "'Number of predict images = {}'", ".", "format", "(", "len", "(", "image_list", ")", ")", ")", "\n", "predictEnsembleThree", "(", "\n", "model", ",", "\n", "model_1", ",", "\n", "model_crop", ",", "\n", "model_path", "=", "args", ".", "model_path", ",", "\n", "model_path_1", "=", "args", ".", "model_path_1", ",", "\n", "model_path_crop", "=", "args", ".", "model_path_crop", ",", "\n", "transforms", "=", "transforms", ",", "\n", "transforms_crop", "=", "transforms_crop", ",", "\n", "image_list", "=", "image_list", ",", "\n", "image_dir", "=", "image_dir", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "aug_pred", "=", "args", ".", "aug_pred", ",", "\n", "scales", "=", "args", ".", "scales", ",", "\n", "flip_horizontal", "=", "args", ".", "flip_horizontal", ",", "\n", "flip_vertical", "=", "args", ".", "flip_vertical", ",", "\n", "is_slide", "=", "args", ".", "is_slide", ",", "\n", "crop_size", "=", "args", ".", "crop_size", ",", "\n", "stride", "=", "args", ".", "stride", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.predict_ensemble.parse_args": [[26, 109], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model prediction'", ")", "\n", "\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config_hard\"", ",", "\n", "dest", "=", "\"cfg_hard\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path_hard'", ",", "\n", "dest", "=", "'model_path_hard'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The path of image, it can be a file or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.predict_ensemble.get_image_list": [[111, 138], ["os.path.isfile", "os.path.isdir", "len", "RuntimeError", "image_list.append", "os.walk", "FileNotFoundError", "os.path.splitext", "image_list.append", "os.path.splitext", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "get_image_list", "(", "image_path", ")", ":", "\n", "    ", "\"\"\"Get image list\"\"\"", "\n", "valid_suffix", "=", "[", "\n", "'.JPEG'", ",", "'.jpeg'", ",", "'.JPG'", ",", "'.jpg'", ",", "'.BMP'", ",", "'.bmp'", ",", "'.PNG'", ",", "'.png'", "\n", "]", "\n", "image_list", "=", "[", "]", "\n", "image_dir", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "image_path", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "splitext", "(", "image_path", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "            ", "image_list", ".", "append", "(", "image_path", ")", "\n", "", "", "elif", "os", ".", "path", ".", "isdir", "(", "image_path", ")", ":", "\n", "        ", "image_dir", "=", "image_path", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "image_path", ")", ":", "\n", "            ", "for", "f", "in", "files", ":", "\n", "                ", "if", "'.ipynb_checkpoints'", "in", "root", ":", "\n", "                    ", "continue", "\n", "", "if", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "-", "1", "]", "in", "valid_suffix", ":", "\n", "                    ", "image_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", "f", ")", ")", "\n", "", "", "", "", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\n", "'`--image_path` is not found. it should be an image file or a directory including images'", "\n", ")", "\n", "\n", "", "if", "len", "(", "image_list", ")", "==", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "'There are not image file in `--image_path`'", ")", "\n", "\n", "", "return", "image_list", ",", "image_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.AutoNUE.predict_ensemble.main": [[140, 184], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "predict_ensemble.get_image_list", "paddleseg.utils.logger.info", "core.predictEnsemble", "RuntimeError", "RuntimeError", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.core.predict_ensemble.predictEnsemble"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "val_dataset", "=", "cfg", ".", "val_dataset", "\n", "cfg_hard", "=", "Config", "(", "args", ".", "cfg_hard", ")", "\n", "\n", "if", "not", "val_dataset", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The verification dataset is not specified in the configuration file.'", "\n", ")", "\n", "\n", "", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "model_hard", "=", "cfg_hard", ".", "model", "\n", "transforms", "=", "val_dataset", ".", "transforms", "\n", "image_list", ",", "image_dir", "=", "get_image_list", "(", "args", ".", "image_path", ")", "\n", "logger", ".", "info", "(", "'Number of predict images = {}'", ".", "format", "(", "len", "(", "image_list", ")", ")", ")", "\n", "predictEnsemble", "(", "\n", "model", ",", "\n", "model_hard", ",", "\n", "model_path", "=", "args", ".", "model_path", ",", "\n", "model_path_hard", "=", "args", ".", "model_path_hard", ",", "\n", "transforms", "=", "transforms", ",", "\n", "image_list", "=", "image_list", ",", "\n", "image_dir", "=", "image_dir", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "aug_pred", "=", "args", ".", "aug_pred", ",", "\n", "scales", "=", "args", ".", "scales", ",", "\n", "flip_horizontal", "=", "args", ".", "flip_horizontal", ",", "\n", "flip_vertical", "=", "args", ".", "flip_vertical", ",", "\n", "is_slide", "=", "args", ".", "is_slide", ",", "\n", "crop_size", "=", "args", ".", "crop_size", ",", "\n", "stride", "=", "args", ".", "stride", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.predict.parse_args": [[26, 60], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model prediction'", ")", "\n", "\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The image to predict, which can be a path of image, or a file list containing image paths, or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.predict.get_test_config": [[62, 69], ["None"], "function", ["None"], ["type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.predict.main": [[71, 107], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.get_image_list", "paddleseg.utils.logger.info", "predict.get_test_config", "paddleseg.utils.config_check", "core.predict", "RuntimeError", "RuntimeError", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.get_test_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict"], ["dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# custom color map", "\n", "parser", ".", "add_argument", "(", "\n", "'--custom_color'", ",", "\n", "dest", "=", "'custom_color'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Save images with a custom color map. Default: None, use paddleseg\\'s default color map.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# set device", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.train.parse_args": [[28, 120], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "=", "\"Auto mixed precision level. Accepted values are \u201cO1\u201d and \u201cO2\u201d: O1 represent mixed precision, the input \\\n                data type of each operator will be casted by white_list and black_list; O2 represent Pure fp16, all operators \\\n                parameters and input data will be casted to fp16, except operators in black_list, don\u2019t support fp16 kernel \\\n                and batchnorm. Default is O1(amp)\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.train.main": [[122, 195], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "core.train.train", "paddle.seed", "numpy.random.seed", "random.seed", "RuntimeError", "len", "range", "RuntimeError", "paddleseg.utils.get_sys_env.items", "ValueError", "len", "ValueError", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train"], ["default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "train_dataset", "=", "cfg", ".", "train_dataset", "\n", "if", "train_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "", "elif", "len", "(", "train_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of train_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "", "val_dataset", "=", "cfg", ".", "val_dataset", "if", "args", ".", "do_eval", "else", "None", "\n", "losses", "=", "cfg", ".", "loss", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.val.get_test_config": [[26, 30], ["None"], "function", ["None"], ["\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.val.parse_args": [[32, 73], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.val.main": [[75, 126], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "val.get_test_config", "paddleseg.utils.config_check", "core.evaluate", "RuntimeError", "len", "range", "RuntimeError", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "ValueError", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.get_test_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--auc_roc'", ",", "\n", "dest", "=", "'add auc_roc metric'", ",", "\n", "help", "=", "'Whether to use auc_roc metric'", ",", "\n", "type", "=", "bool", ",", "\n", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.export.parse_args": [[26, 56], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model export.'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the exported model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for export'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--without_argmax'", ",", "\n", "dest", "=", "'without_argmax'", ",", "\n", "help", "=", "'Do not add the argmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--with_softmax'", ",", "\n", "dest", "=", "'with_softmax'", ",", "\n", "help", "=", "'Add the softmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.LaneSeg.export.main": [[58, 100], ["paddleseg.cvlibs.Config", "paddle.jit.to_static.eval", "paddle.jit.to_static", "os.path.join", "paddle.jit.save", "os.path.join", "paddleseg.utils.logger.info", "paddle.load", "net.set_dict", "paddleseg.utils.logger.info", "open", "paddleseg.cvlibs.Config.export_config.get", "yaml.dump", "paddle.static.InputSpec"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["\"--input_shape\"", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "\"Export the model with fixed input shape, such as 1 3 1024 1024.\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "class", "SavedSegmentationNet", "(", "paddle", ".", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "net", ",", "without_argmax", "=", "False", ",", "with_softmax", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "post_processer", "=", "PostPorcesser", "(", "without_argmax", ",", "with_softmax", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "self", ".", "net", "(", "x", ")", "\n", "outs", "=", "self", ".", "post_processer", "(", "outs", ")", "\n", "return", "outs", "\n", "\n", "\n", "", "", "class", "PostPorcesser", "(", "paddle", ".", "nn", ".", "Layer", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "without_argmax", ",", "with_softmax", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "without_argmax", "=", "without_argmax", "\n", "self", ".", "with_softmax", "=", "with_softmax", "\n", "\n", "", "def", "forward", "(", "self", ",", "outs", ")", ":", "\n", "        ", "new_outs", "=", "[", "]", "\n", "for", "out", "in", "outs", ":", "\n", "            ", "if", "self", ".", "with_softmax", ":", "\n", "                ", "out", "=", "paddle", ".", "nn", ".", "functional", ".", "softmax", "(", "out", ",", "axis", "=", "1", ")", "\n", "", "if", "not", "self", ".", "without_argmax", ":", "\n", "                ", "out", "=", "paddle", ".", "argmax", "(", "out", ",", "axis", "=", "1", ")", "\n", "", "new_outs", ".", "append", "(", "out", ")", "\n", "", "return", "new_outs", "\n", "\n", "\n", "", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'PADDLESEG_EXPORT_STAGE'", "]", "=", "'True'", "\n", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "net", "=", "cfg", ".", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.__init__": [[22, 38], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_classes", "=", "2", ",", "\n", "ori_shape", "=", "(", "720", ",", "1280", ")", ",", "\n", "cut_height", "=", "0", ",", "\n", "y_pixel_gap", "=", "10", ",", "\n", "points_nums", "=", "56", ",", "\n", "thresh", "=", "0.6", ",", "\n", "smooth", "=", "True", ")", ":", "\n", "        ", "super", "(", "LaneProcessor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "ori_shape", "=", "ori_shape", "\n", "self", ".", "cut_height", "=", "cut_height", "\n", "self", ".", "y_pixel_gap", "=", "y_pixel_gap", "\n", "self", ".", "points_nums", "=", "points_nums", "\n", "self", ".", "thresh", "=", "thresh", "\n", "self", ".", "smooth", "=", "smooth", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.get_lane_coords": [[39, 49], ["range", "len", "get_lane_coords.LaneProcessor.heatmap2coords", "range", "lane_coords_list.append", "len", "sorted"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.heatmap2coords", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "get_lane_coords", "(", "self", ",", "seg_pred", ")", ":", "\n", "        ", "lane_coords_list", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "len", "(", "seg_pred", ")", ")", ":", "\n", "            ", "seg", "=", "seg_pred", "[", "batch", "]", "\n", "lane_coords", "=", "self", ".", "heatmap2coords", "(", "seg", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "lane_coords", ")", ")", ":", "\n", "                ", "lane_coords", "[", "i", "]", "=", "sorted", "(", "\n", "lane_coords", "[", "i", "]", ",", "key", "=", "lambda", "pair", ":", "pair", "[", "1", "]", ")", "\n", "", "lane_coords_list", ".", "append", "(", "lane_coords", ")", "\n", "", "return", "lane_coords_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.process_gap": [[50, 84], ["any", "any", "range", "all", "print", "enumerate", "reversed", "enumerate", "enumerate", "enumerate", "len", "len", "len", "list", "len", "float", "int", "enumerate"], "methods", ["None"], ["", "def", "process_gap", "(", "self", ",", "coordinate", ")", ":", "\n", "        ", "if", "any", "(", "x", ">", "0", "for", "x", "in", "coordinate", ")", ":", "\n", "            ", "start", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "coordinate", ")", "if", "x", ">", "0", "]", "[", "0", "]", "\n", "end", "=", "[", "\n", "i", "for", "i", ",", "x", "in", "reversed", "(", "list", "(", "enumerate", "(", "coordinate", ")", ")", ")", "if", "x", ">", "0", "\n", "]", "[", "0", "]", "\n", "lane", "=", "coordinate", "[", "start", ":", "end", "+", "1", "]", "\n", "# The line segment is not continuous", "\n", "if", "any", "(", "x", "<", "0", "for", "x", "in", "lane", ")", ":", "\n", "                ", "gap_start", "=", "[", "\n", "i", "for", "i", ",", "x", "in", "enumerate", "(", "lane", "[", ":", "-", "1", "]", ")", "\n", "if", "x", ">", "0", "and", "lane", "[", "i", "+", "1", "]", "<", "0", "\n", "]", "\n", "gap_end", "=", "[", "\n", "i", "+", "1", "for", "i", ",", "x", "in", "enumerate", "(", "lane", "[", ":", "-", "1", "]", ")", "\n", "if", "x", "<", "0", "and", "lane", "[", "i", "+", "1", "]", ">", "0", "\n", "]", "\n", "gap_id", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "lane", ")", "if", "x", "<", "0", "]", "\n", "if", "len", "(", "gap_start", ")", "==", "0", "or", "len", "(", "gap_end", ")", "==", "0", ":", "\n", "                    ", "return", "coordinate", "\n", "", "for", "id", "in", "gap_id", ":", "\n", "                    ", "for", "i", "in", "range", "(", "len", "(", "gap_start", ")", ")", ":", "\n", "                        ", "if", "i", ">=", "len", "(", "gap_end", ")", ":", "\n", "                            ", "return", "coordinate", "\n", "", "if", "id", ">", "gap_start", "[", "i", "]", "and", "id", "<", "gap_end", "[", "i", "]", ":", "\n", "                            ", "gap_width", "=", "float", "(", "gap_end", "[", "i", "]", "-", "gap_start", "[", "i", "]", ")", "\n", "# line interpolation", "\n", "lane", "[", "id", "]", "=", "int", "(", "(", "id", "-", "gap_start", "[", "\n", "i", "]", ")", "/", "gap_width", "*", "lane", "[", "gap_end", "[", "i", "]", "]", "+", "(", "gap_end", "[", "\n", "i", "]", "-", "id", ")", "/", "gap_width", "*", "lane", "[", "gap_start", "[", "i", "]", "]", ")", "\n", "", "", "", "if", "not", "all", "(", "x", ">", "0", "for", "x", "in", "lane", ")", ":", "\n", "                    ", "print", "(", "\"Gaps still exist!\"", ")", "\n", "", "coordinate", "[", "start", ":", "end", "+", "1", "]", "=", "lane", "\n", "", "", "return", "coordinate", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.get_coords": [[85, 105], ["numpy.zeros", "range", "get_lane_coords.LaneProcessor.process_gap", "int", "numpy.argmax", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.process_gap"], ["", "def", "get_coords", "(", "self", ",", "heat_map", ")", ":", "\n", "        ", "dst_height", "=", "self", ".", "ori_shape", "[", "0", "]", "-", "self", ".", "cut_height", "\n", "coords", "=", "np", ".", "zeros", "(", "self", ".", "points_nums", ")", "\n", "coords", "[", ":", "]", "=", "-", "2", "\n", "pointCount", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "points_nums", ")", ":", "\n", "            ", "y_coord", "=", "dst_height", "-", "10", "-", "i", "*", "self", ".", "y_pixel_gap", "\n", "y", "=", "int", "(", "y_coord", "/", "dst_height", "*", "heat_map", ".", "shape", "[", "0", "]", ")", "\n", "if", "y", "<", "0", ":", "\n", "                ", "break", "\n", "", "prob_line", "=", "heat_map", "[", "y", ",", ":", "]", "\n", "x", "=", "np", ".", "argmax", "(", "prob_line", ")", "\n", "prob", "=", "prob_line", "[", "x", "]", "\n", "if", "prob", ">", "self", ".", "thresh", ":", "\n", "                ", "coords", "[", "i", "]", "=", "int", "(", "x", "/", "heat_map", ".", "shape", "[", "1", "]", "*", "self", ".", "ori_shape", "[", "1", "]", ")", "\n", "pointCount", "=", "pointCount", "+", "1", "\n", "", "", "if", "pointCount", "<", "2", ":", "\n", "            ", "coords", "[", ":", "]", "=", "-", "2", "\n", "", "self", ".", "process_gap", "(", "coords", ")", "\n", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.fix_outliers": [[106, 130], ["abs", "enumerate", "len", "enumerate", "enumerate", "diff.append", "diff.append", "abs", "abs", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "fix_outliers", "(", "self", ",", "coords", ")", ":", "\n", "        ", "data", "=", "[", "x", "for", "i", ",", "x", "in", "enumerate", "(", "coords", ")", "if", "x", ">", "0", "]", "\n", "index", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "coords", ")", "if", "x", ">", "0", "]", "\n", "if", "len", "(", "data", ")", "==", "0", ":", "\n", "            ", "return", "coords", "\n", "", "diff", "=", "[", "]", "\n", "is_outlier", "=", "False", "\n", "n", "=", "1", "\n", "x_gap", "=", "abs", "(", "(", "data", "[", "-", "1", "]", "-", "data", "[", "0", "]", ")", "/", "(", "1.0", "*", "(", "len", "(", "data", ")", "-", "1", ")", ")", ")", "\n", "for", "idx", ",", "dt", "in", "enumerate", "(", "data", ")", ":", "\n", "            ", "if", "is_outlier", "==", "False", ":", "\n", "                ", "t", "=", "idx", "-", "1", "\n", "n", "=", "1", "\n", "", "if", "idx", "==", "0", ":", "\n", "                ", "diff", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "diff", ".", "append", "(", "abs", "(", "data", "[", "idx", "]", "-", "data", "[", "t", "]", ")", ")", "\n", "if", "abs", "(", "data", "[", "idx", "]", "-", "data", "[", "t", "]", ")", ">", "n", "*", "(", "x_gap", "*", "1.5", ")", ":", "\n", "                    ", "n", "=", "n", "+", "1", "\n", "is_outlier", "=", "True", "\n", "ind", "=", "index", "[", "idx", "]", "\n", "coords", "[", "ind", "]", "=", "-", "1", "\n", "", "else", ":", "\n", "                    ", "is_outlier", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.heatmap2coords": [[131, 148], ["range", "get_lane_coords.LaneProcessor.get_coords", "get_lane_coords.LaneProcessor.add_coords", "len", "numpy.zeros", "get_lane_coords.LaneProcessor.add_coords", "cv2.blur", "enumerate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.get_coords", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.add_coords", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.add_coords"], ["", "", "", "", "def", "heatmap2coords", "(", "self", ",", "seg_pred", ")", ":", "\n", "        ", "coordinates", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_classes", "-", "1", ")", ":", "\n", "            ", "heat_map", "=", "seg_pred", "[", "i", "+", "1", "]", "\n", "if", "self", ".", "smooth", ":", "\n", "                ", "heat_map", "=", "cv2", ".", "blur", "(", "\n", "heat_map", ",", "(", "9", ",", "9", ")", ",", "borderType", "=", "cv2", ".", "BORDER_REPLICATE", ")", "\n", "", "coords", "=", "self", ".", "get_coords", "(", "heat_map", ")", "\n", "indexes", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "coords", ")", "if", "x", ">", "0", "]", "\n", "if", "not", "indexes", ":", "\n", "                ", "continue", "\n", "", "self", ".", "add_coords", "(", "coordinates", ",", "coords", ")", "\n", "\n", "", "if", "len", "(", "coordinates", ")", "==", "0", ":", "\n", "            ", "coords", "=", "np", ".", "zeros", "(", "self", ".", "points_nums", ")", "\n", "self", ".", "add_coords", "(", "coordinates", ",", "coords", ")", "\n", "", "return", "coordinates", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.add_coords": [[149, 156], ["range", "coordinates.append", "sub_lanes.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "add_coords", "(", "self", ",", "coordinates", ",", "coords", ")", ":", "\n", "        ", "sub_lanes", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "self", ".", "points_nums", ")", ":", "\n", "            ", "y_lane", "=", "self", ".", "ori_shape", "[", "0", "]", "-", "10", "-", "j", "*", "self", ".", "y_pixel_gap", "\n", "x_lane", "=", "coords", "[", "j", "]", "if", "coords", "[", "j", "]", ">", "0", "else", "-", "2", "\n", "sub_lanes", ".", "append", "(", "[", "x_lane", ",", "y_lane", "]", ")", "\n", "", "coordinates", ".", "append", "(", "sub_lanes", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.generate_tusimple_dataset.generate_seg_label_image": [[34, 75], ["range", "range", "range", "numpy.zeros", "range", "len", "len", "lanes.append", "len", "range", "len", "_lanes.append", "slope.append", "numpy.argsort", "numpy.argsort", "range", "len", "cv2.line", "zip", "len", "len", "len", "numpy.arctan2"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.line"], ["def", "generate_seg_label_image", "(", "label", ")", ":", "\n", "# this code copy from https://github.com/ZJULearning/resa/blob/main/tools/generate_seg_tusimple.py", "\n", "    ", "lanes", "=", "[", "]", "\n", "_lanes", "=", "[", "]", "\n", "slope", "=", "[", "]", "# identify 0th, 1st, 2nd, 3rd, 4th, 5th lane through slope", "\n", "for", "i", "in", "range", "(", "len", "(", "label", "[", "'lanes'", "]", ")", ")", ":", "\n", "        ", "l", "=", "[", "(", "x", ",", "y", ")", "for", "x", ",", "y", "in", "zip", "(", "label", "[", "'lanes'", "]", "[", "i", "]", ",", "label", "[", "'h_samples'", "]", ")", "\n", "if", "x", ">=", "0", "]", "\n", "if", "(", "len", "(", "l", ")", ">", "1", ")", ":", "\n", "            ", "_lanes", ".", "append", "(", "l", ")", "\n", "slope", ".", "append", "(", "\n", "np", ".", "arctan2", "(", "l", "[", "-", "1", "]", "[", "1", "]", "-", "l", "[", "0", "]", "[", "1", "]", ",", "l", "[", "0", "]", "[", "0", "]", "-", "l", "[", "-", "1", "]", "[", "0", "]", ")", "/", "np", ".", "pi", "*", "\n", "180", ")", "\n", "", "", "_lanes", "=", "[", "_lanes", "[", "i", "]", "for", "i", "in", "np", ".", "argsort", "(", "slope", ")", "]", "\n", "slope", "=", "[", "slope", "[", "i", "]", "for", "i", "in", "np", ".", "argsort", "(", "slope", ")", "]", "\n", "\n", "idx", "=", "[", "None", "for", "i", "in", "range", "(", "CLASS_NUMS", "-", "1", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "slope", ")", ")", ":", "\n", "        ", "if", "slope", "[", "i", "]", "<=", "90", ":", "\n", "            ", "idx", "[", "2", "]", "=", "i", "\n", "idx", "[", "1", "]", "=", "i", "-", "1", "if", "i", ">", "0", "else", "None", "\n", "idx", "[", "0", "]", "=", "i", "-", "2", "if", "i", ">", "1", "else", "None", "\n", "", "else", ":", "\n", "            ", "idx", "[", "3", "]", "=", "i", "\n", "idx", "[", "4", "]", "=", "i", "+", "1", "if", "i", "+", "1", "<", "len", "(", "slope", ")", "else", "None", "\n", "idx", "[", "5", "]", "=", "i", "+", "2", "if", "i", "+", "2", "<", "len", "(", "slope", ")", "else", "None", "\n", "break", "\n", "", "", "for", "i", "in", "range", "(", "CLASS_NUMS", "-", "1", ")", ":", "\n", "        ", "lanes", ".", "append", "(", "[", "]", "if", "idx", "[", "i", "]", "is", "None", "else", "_lanes", "[", "idx", "[", "i", "]", "]", ")", "\n", "\n", "", "seg_img", "=", "np", ".", "zeros", "(", "[", "Image_Height", ",", "Image_Width", "]", ",", "np", ".", "uint8", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "lanes", ")", ")", ":", "\n", "        ", "coords", "=", "lanes", "[", "i", "]", "\n", "if", "len", "(", "coords", ")", "<", "4", ":", "\n", "            ", "continue", "\n", "", "for", "j", "in", "range", "(", "len", "(", "coords", ")", "-", "1", ")", ":", "\n", "            ", "cv2", ".", "line", "(", "seg_img", ",", "coords", "[", "j", "]", ",", "coords", "[", "j", "+", "1", "]", ",", "i", "+", "1", ",", "\n", "LANE_SEG_WIDTH", "//", "2", ")", "\n", "\n", "", "", "return", "seg_img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.generate_tusimple_dataset.generate_labels": [[77, 110], ["os.makedirs", "open", "os.path.join", "os.path.join", "open", "os.path.join", "json.loads", "generate_tusimple_dataset.generate_seg_label_image", "img_path.split", "os.makedirs", "os.path.join", "cv2.imwrite", "label_str.insert", "label_str.insert", "open.write", "os.path.join", "img_path.split"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.generate_tusimple_dataset.generate_seg_label_image"], ["", "def", "generate_labels", "(", "args", ",", "src_dir", ",", "label_dir", ",", "image_set", ",", "mode", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "src_dir", ",", "label_dir", ")", ",", "exist_ok", "=", "True", ")", "\n", "label_file", "=", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "src_dir", ",", "\"{}_list.txt\"", ".", "format", "(", "mode", ")", ")", ",", "\"w\"", ")", "\n", "for", "json_name", "in", "(", "image_set", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "src_dir", ",", "json_name", ")", ")", "as", "jsonfile", ":", "\n", "            ", "for", "jsonline", "in", "jsonfile", ":", "\n", "                ", "label", "=", "json", ".", "loads", "(", "jsonline", ")", "\n", "seg_img", "=", "generate_seg_label_image", "(", "label", ")", "\n", "img_path", "=", "label", "[", "'raw_file'", "]", "\n", "seg_path", "=", "img_path", ".", "split", "(", "\"/\"", ")", "\n", "seg_path", ",", "img_name", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "src_dir", ",", "label_dir", ",", "\n", "seg_path", "[", "1", "]", ",", "\n", "seg_path", "[", "2", "]", ")", ",", "seg_path", "[", "3", "]", "\n", "os", ".", "makedirs", "(", "seg_path", ",", "exist_ok", "=", "True", ")", "\n", "seg_path", "=", "os", ".", "path", ".", "join", "(", "seg_path", ",", "img_name", "[", ":", "-", "3", "]", "+", "\"png\"", ")", "\n", "cv2", ".", "imwrite", "(", "seg_path", ",", "seg_img", ")", "\n", "\n", "img_path", "=", "\"/\"", ".", "join", "(", "[", "src_dir", ",", "img_path", "]", ")", "\n", "seg_path", "=", "\"/\"", ".", "join", "(", "[", "\n", "src_dir", ",", "label_dir", ",", "*", "img_path", ".", "split", "(", "\"/\"", ")", "[", "2", ":", "4", "]", ",", "\n", "img_name", "[", ":", "-", "3", "]", "+", "\"png\"", "\n", "]", ")", "\n", "if", "seg_path", "[", "0", "]", "!=", "'/'", ":", "\n", "                    ", "seg_path", "=", "'/'", "+", "seg_path", "\n", "", "if", "img_path", "[", "0", "]", "!=", "'/'", ":", "\n", "                    ", "img_path", "=", "'/'", "+", "img_path", "\n", "\n", "", "label_str", "=", "[", "]", "\n", "label_str", ".", "insert", "(", "0", ",", "seg_path", ")", "\n", "label_str", ".", "insert", "(", "0", ",", "img_path", ")", "\n", "label_str", "=", "\" \"", ".", "join", "(", "label_str", ")", "+", "\"\\n\"", "\n", "label_file", ".", "write", "(", "label_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.generate_tusimple_dataset.process_tusimple_dataset": [[112, 118], ["print", "generate_tusimple_dataset.generate_labels", "print", "generate_tusimple_dataset.generate_labels", "print"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.generate_tusimple_dataset.generate_labels", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.generate_tusimple_dataset.generate_labels"], ["", "", "", "", "def", "process_tusimple_dataset", "(", "args", ")", ":", "\n", "    ", "print", "(", "\"generating train set...\"", ")", "\n", "generate_labels", "(", "args", ",", "\"train_set\"", ",", "\"labels\"", ",", "TRAIN_DATA_SET", ",", "mode", "=", "\"train\"", ")", "\n", "print", "(", "\"generating test set...\"", ")", "\n", "generate_labels", "(", "args", ",", "\"test_set\"", ",", "\"labels\"", ",", "TEST_DATA_SET", ",", "mode", "=", "\"test\"", ")", "\n", "print", "(", "\"generate finish!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.__init__": [[32, 55], ["super().__init__", "get_lane_coords.LaneProcessor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_classes", "=", "2", ",", "\n", "ori_shape", "=", "(", "720", ",", "1280", ")", ",", "\n", "cut_height", "=", "0", ",", "\n", "thresh", "=", "0.6", ",", "\n", "test_gt_json", "=", "None", ",", "\n", "save_dir", "=", "'output/'", ")", ":", "\n", "        ", "super", "(", "TusimpleProcessor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "dump_to_json", "=", "[", "]", "\n", "self", ".", "save_dir", "=", "save_dir", "\n", "self", ".", "test_gt_json", "=", "test_gt_json", "\n", "self", ".", "color_map", "=", "[", "(", "255", ",", "0", ",", "0", ")", ",", "(", "0", ",", "255", ",", "0", ")", ",", "(", "0", ",", "0", ",", "255", ")", ",", "(", "255", ",", "255", ",", "0", ")", ",", "\n", "(", "255", ",", "0", ",", "255", ")", ",", "(", "0", ",", "255", ",", "125", ")", ",", "(", "50", ",", "100", ",", "50", ")", ",", "\n", "(", "100", ",", "50", ",", "100", ")", "]", "\n", "self", ".", "laneProcessor", "=", "LaneProcessor", "(", "\n", "num_classes", "=", "self", ".", "num_classes", ",", "\n", "ori_shape", "=", "ori_shape", ",", "\n", "cut_height", "=", "cut_height", ",", "\n", "y_pixel_gap", "=", "10", ",", "\n", "points_nums", "=", "56", ",", "\n", "thresh", "=", "thresh", ",", "\n", "smooth", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.dump_data_to_json": [[56, 97], ["paddle.functional.softmax", "seg_pred.numpy.numpy.numpy", "tusimple_processor.TusimpleProcessor.laneProcessor.get_lane_coords", "range", "len", "im_path[].split", "os.path.join", "tusimple_processor.TusimpleProcessor.dump_to_json.append", "cv2.imread", "os.path.join", "tusimple_processor.TusimpleProcessor.draw", "json_pred[].append", "json_pred[].append", "json.dumps", "os.path.basename", "len", "[].append", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.get_lane_coords.LaneProcessor.get_lane_coords", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.draw", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "dump_data_to_json", "(", "self", ",", "\n", "output", ",", "\n", "im_path", ",", "\n", "run_time", "=", "0", ",", "\n", "is_dump_json", "=", "True", ",", "\n", "is_view", "=", "False", ")", ":", "\n", "        ", "seg_pred", "=", "output", "[", "0", "]", "\n", "seg_pred", "=", "nn", ".", "functional", ".", "softmax", "(", "seg_pred", ",", "axis", "=", "1", ")", "\n", "seg_pred", "=", "seg_pred", ".", "numpy", "(", ")", "\n", "lane_coords_list", "=", "self", ".", "laneProcessor", ".", "get_lane_coords", "(", "seg_pred", ")", "\n", "\n", "for", "batch", "in", "range", "(", "len", "(", "seg_pred", ")", ")", ":", "\n", "            ", "lane_coords", "=", "lane_coords_list", "[", "batch", "]", "\n", "path_list", "=", "im_path", "[", "batch", "]", ".", "split", "(", "\"/\"", ")", "\n", "if", "is_dump_json", ":", "\n", "                ", "json_pred", "=", "{", "}", "\n", "json_pred", "[", "'lanes'", "]", "=", "[", "]", "\n", "json_pred", "[", "'run_time'", "]", "=", "run_time", "*", "1000", "\n", "json_pred", "[", "'h_sample'", "]", "=", "[", "]", "\n", "\n", "json_pred", "[", "'raw_file'", "]", "=", "os", ".", "path", ".", "join", "(", "*", "path_list", "[", "-", "4", ":", "]", ")", "\n", "for", "l", "in", "lane_coords", ":", "\n", "                    ", "if", "len", "(", "l", ")", "==", "0", ":", "\n", "                        ", "continue", "\n", "", "json_pred", "[", "'lanes'", "]", ".", "append", "(", "[", "]", ")", "\n", "for", "(", "x", ",", "y", ")", "in", "l", ":", "\n", "                        ", "json_pred", "[", "'lanes'", "]", "[", "-", "1", "]", ".", "append", "(", "int", "(", "x", ")", ")", "\n", "", "", "for", "(", "x", ",", "y", ")", "in", "lane_coords", "[", "0", "]", ":", "\n", "                    ", "json_pred", "[", "'h_sample'", "]", ".", "append", "(", "y", ")", "\n", "", "self", ".", "dump_to_json", ".", "append", "(", "json", ".", "dumps", "(", "json_pred", ")", ")", "\n", "\n", "", "if", "is_view", ":", "\n", "                ", "img", "=", "cv2", ".", "imread", "(", "im_path", "[", "batch", "]", ")", "\n", "if", "is_dump_json", ":", "\n", "                    ", "img_name", "=", "'_'", ".", "join", "(", "[", "x", "for", "x", "in", "path_list", "[", "-", "4", ":", "]", "]", ")", "\n", "sub_dir", "=", "'visual_eval'", "\n", "", "else", ":", "\n", "                    ", "img_name", "=", "os", ".", "path", ".", "basename", "(", "im_path", "[", "batch", "]", ")", "\n", "sub_dir", "=", "'visual_points'", "\n", "", "saved_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "sub_dir", ",", "img_name", ")", "\n", "self", ".", "draw", "(", "img", ",", "lane_coords", ",", "saved_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict": [[98, 101], ["tusimple_processor.TusimpleProcessor.dump_data_to_json"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.dump_data_to_json"], ["", "", "", "def", "predict", "(", "self", ",", "output", ",", "im_path", ")", ":", "\n", "        ", "self", ".", "dump_data_to_json", "(", "\n", "output", ",", "[", "im_path", "]", ",", "is_dump_json", "=", "False", ",", "is_view", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.bench_one_submit": [[102, 114], ["os.path.join", "lane.LaneEval.bench_one_submit", "str", "tusimple_processor.mkdir", "open", "print"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.lane.LaneEval.bench_one_submit", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir"], ["", "def", "bench_one_submit", "(", "self", ",", "local_rank", ")", ":", "\n", "        ", "output_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "str", "(", "local_rank", ")", ",", "'pred.json'", ")", "\n", "if", "output_file", "is", "not", "None", ":", "\n", "            ", "mkdir", "(", "output_file", ")", "\n", "", "with", "open", "(", "output_file", ",", "\"w+\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "self", ".", "dump_to_json", ":", "\n", "                ", "print", "(", "line", ",", "end", "=", "\"\\n\"", ",", "file", "=", "f", ")", "\n", "\n", "", "", "eval_rst", ",", "acc", ",", "fp", ",", "fn", "=", "LaneEval", ".", "bench_one_submit", "(", "output_file", ",", "\n", "self", ".", "test_gt_json", ")", "\n", "self", ".", "dump_to_json", "=", "[", "]", "\n", "return", "acc", ",", "fp", ",", "fn", ",", "eval_rst", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.draw": [[115, 126], ["enumerate", "tusimple_processor.mkdir", "cv2.imwrite", "cv2.circle", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir"], ["", "def", "draw", "(", "self", ",", "img", ",", "coords", ",", "file_path", "=", "None", ")", ":", "\n", "        ", "for", "i", ",", "coord", "in", "enumerate", "(", "coords", ")", ":", "\n", "            ", "for", "x", ",", "y", "in", "coord", ":", "\n", "                ", "if", "x", "<=", "0", "or", "y", "<=", "0", ":", "\n", "                    ", "continue", "\n", "", "cv2", ".", "circle", "(", "img", ",", "(", "int", "(", "x", ")", ",", "int", "(", "y", ")", ")", ",", "4", ",", "\n", "self", ".", "color_map", "[", "i", "%", "self", ".", "num_classes", "]", ",", "2", ")", "\n", "\n", "", "", "if", "file_path", "is", "not", "None", ":", "\n", "            ", "mkdir", "(", "file_path", ")", "\n", "cv2", ".", "imwrite", "(", "file_path", ",", "img", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir": [[25, 29], ["os.path.dirname", "os.path.exists", "os.makedirs"], "function", ["None"], ["def", "mkdir", "(", "path", ")", ":", "\n", "    ", "sub_dir", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "sub_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "sub_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.lane.LaneEval.get_angle": [[26, 36], ["len", "LaneEval.lr.fit", "numpy.arctan"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "get_angle", "(", "xs", ",", "y_samples", ")", ":", "\n", "        ", "xs", ",", "ys", "=", "xs", "[", "xs", ">=", "0", "]", ",", "y_samples", "[", "xs", ">=", "0", "]", "\n", "if", "len", "(", "xs", ")", ">", "1", ":", "\n", "            ", "LaneEval", ".", "lr", ".", "fit", "(", "ys", "[", ":", ",", "None", "]", ",", "xs", ")", "\n", "k", "=", "LaneEval", ".", "lr", ".", "coef_", "[", "0", "]", "\n", "theta", "=", "np", ".", "arctan", "(", "k", ")", "\n", "", "else", ":", "\n", "            ", "theta", "=", "0", "\n", "", "return", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.lane.LaneEval.line_accuracy": [[37, 42], ["numpy.array", "numpy.array", "numpy.sum", "len", "numpy.where", "numpy.abs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "line_accuracy", "(", "pred", ",", "gt", ",", "thresh", ")", ":", "\n", "        ", "pred", "=", "np", ".", "array", "(", "[", "p", "if", "p", ">=", "0", "else", "-", "100", "for", "p", "in", "pred", "]", ")", "\n", "gt", "=", "np", ".", "array", "(", "[", "g", "if", "g", ">=", "0", "else", "-", "100", "for", "g", "in", "gt", "]", ")", "\n", "return", "np", ".", "sum", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "pred", "-", "gt", ")", "<", "thresh", ",", "1.", ",", "0.", ")", ")", "/", "len", "(", "gt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.lane.LaneEval.bench": [[43, 78], ["any", "zip", "sum", "Exception", "lane.LaneEval.get_angle", "line_accs.append", "len", "len", "min", "len", "numpy.array", "numpy.array", "numpy.cos", "lane.LaneEval.line_accuracy", "numpy.max", "len", "max", "max", "len", "len", "len", "numpy.array", "numpy.array", "len", "min", "len", "len", "min", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.lane.LaneEval.get_angle", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.lane.LaneEval.line_accuracy"], ["", "@", "staticmethod", "\n", "def", "bench", "(", "pred", ",", "gt", ",", "y_samples", ",", "running_time", ")", ":", "\n", "        ", "if", "any", "(", "len", "(", "p", ")", "!=", "len", "(", "y_samples", ")", "for", "p", "in", "pred", ")", ":", "\n", "            ", "raise", "Exception", "(", "'Format of lanes error.'", ")", "\n", "", "if", "running_time", ">", "200", "or", "len", "(", "gt", ")", "+", "2", "<", "len", "(", "pred", ")", ":", "\n", "            ", "return", "0.", ",", "0.", ",", "1.", "\n", "", "angles", "=", "[", "\n", "LaneEval", ".", "get_angle", "(", "np", ".", "array", "(", "x_gts", ")", ",", "np", ".", "array", "(", "y_samples", ")", ")", "\n", "for", "x_gts", "in", "gt", "\n", "]", "\n", "threshs", "=", "[", "LaneEval", ".", "pixel_thresh", "/", "np", ".", "cos", "(", "angle", ")", "for", "angle", "in", "angles", "]", "\n", "line_accs", "=", "[", "]", "\n", "fp", ",", "fn", "=", "0.", ",", "0.", "\n", "matched", "=", "0.", "\n", "for", "x_gts", ",", "thresh", "in", "zip", "(", "gt", ",", "threshs", ")", ":", "\n", "            ", "accs", "=", "[", "\n", "LaneEval", ".", "line_accuracy", "(", "\n", "np", ".", "array", "(", "x_preds", ")", ",", "np", ".", "array", "(", "x_gts", ")", ",", "thresh", ")", "\n", "for", "x_preds", "in", "pred", "\n", "]", "\n", "max_acc", "=", "np", ".", "max", "(", "accs", ")", "if", "len", "(", "accs", ")", ">", "0", "else", "0.", "\n", "if", "max_acc", "<", "LaneEval", ".", "pt_thresh", ":", "\n", "                ", "fn", "+=", "1", "\n", "", "else", ":", "\n", "                ", "matched", "+=", "1", "\n", "", "line_accs", ".", "append", "(", "max_acc", ")", "\n", "", "fp", "=", "len", "(", "pred", ")", "-", "matched", "\n", "if", "len", "(", "gt", ")", ">", "4", "and", "fn", ">", "0", ":", "\n", "            ", "fn", "-=", "1", "\n", "", "s", "=", "sum", "(", "line_accs", ")", "\n", "if", "len", "(", "gt", ")", ">", "4", ":", "\n", "            ", "s", "-=", "min", "(", "line_accs", ")", "\n", "", "return", "s", "/", "max", "(", "min", "(", "4.0", ",", "len", "(", "gt", ")", ")", ",", "\n", "1.", ")", ",", "fp", "/", "len", "(", "pred", ")", "if", "len", "(", "pred", ")", ">", "0", "else", "0.", ",", "fn", "/", "max", "(", "\n", "min", "(", "len", "(", "gt", ")", ",", "4.", ")", ",", "1.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.lane.LaneEval.bench_one_submit": [[79, 130], ["len", "json.loads", "len", "len", "Exception", "json.dumps", "json.loads", "Exception", "open().readlines", "Exception", "Exception", "lane.LaneEval.bench", "open().readlines", "Exception", "open", "open"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.lane.LaneEval.bench"], ["", "@", "staticmethod", "\n", "def", "bench_one_submit", "(", "pred_file", ",", "gt_file", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "json_pred", "=", "[", "\n", "json", ".", "loads", "(", "line", ")", "for", "line", "in", "open", "(", "pred_file", ")", ".", "readlines", "(", ")", "\n", "]", "\n", "", "except", "BaseException", "as", "e", ":", "\n", "            ", "raise", "Exception", "(", "'Fail to load json file of the prediction.'", ")", "\n", "", "json_gt", "=", "[", "json", ".", "loads", "(", "line", ")", "for", "line", "in", "open", "(", "gt_file", ")", ".", "readlines", "(", ")", "]", "\n", "if", "len", "(", "json_gt", ")", "!=", "len", "(", "json_pred", ")", ":", "\n", "            ", "raise", "Exception", "(", "\n", "'We do not get the predictions of all the test tasks'", ")", "\n", "", "gts", "=", "{", "l", "[", "'raw_file'", "]", ":", "l", "for", "l", "in", "json_gt", "}", "\n", "accuracy", ",", "fp", ",", "fn", "=", "0.", ",", "0.", ",", "0.", "\n", "for", "pred", "in", "json_pred", ":", "\n", "            ", "if", "'raw_file'", "not", "in", "pred", "or", "'lanes'", "not", "in", "pred", "or", "'run_time'", "not", "in", "pred", ":", "\n", "                ", "raise", "Exception", "(", "\n", "'raw_file or lanes or run_time not in some predictions.'", ")", "\n", "", "raw_file", "=", "pred", "[", "'raw_file'", "]", "\n", "pred_lanes", "=", "pred", "[", "'lanes'", "]", "\n", "run_time", "=", "pred", "[", "'run_time'", "]", "\n", "if", "raw_file", "not", "in", "gts", ":", "\n", "                ", "raise", "Exception", "(", "\n", "'Some raw_file from your predictions do not exist in the test tasks.'", "\n", ")", "\n", "", "gt", "=", "gts", "[", "raw_file", "]", "\n", "gt_lanes", "=", "gt", "[", "'lanes'", "]", "\n", "y_samples", "=", "gt", "[", "'h_samples'", "]", "\n", "try", ":", "\n", "                ", "a", ",", "p", ",", "n", "=", "LaneEval", ".", "bench", "(", "pred_lanes", ",", "gt_lanes", ",", "y_samples", ",", "\n", "run_time", ")", "\n", "", "except", "BaseException", "as", "e", ":", "\n", "                ", "raise", "Exception", "(", "'Format of lanes error.'", ")", "\n", "", "accuracy", "+=", "a", "\n", "fp", "+=", "p", "\n", "fn", "+=", "n", "\n", "", "num", "=", "len", "(", "gts", ")", "\n", "# the first return parameter is the default ranking parameter", "\n", "return", "json", ".", "dumps", "(", "[", "{", "\n", "'name'", ":", "'Accuracy'", ",", "\n", "'value'", ":", "accuracy", "/", "num", ",", "\n", "'order'", ":", "'desc'", "\n", "}", ",", "{", "\n", "'name'", ":", "'FP'", ",", "\n", "'value'", ":", "fp", "/", "num", ",", "\n", "'order'", ":", "'asc'", "\n", "}", ",", "{", "\n", "'name'", ":", "'FN'", ",", "\n", "'value'", ":", "fn", "/", "num", ",", "\n", "'order'", ":", "'asc'", "\n", "}", "]", ")", ",", "accuracy", "/", "num", ",", "fp", "/", "num", ",", "fn", "/", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.parse_args": [[27, 71], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model prediction'", ")", "\n", "\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The image to predict, which can be a path of image, or a file list containing image paths, or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list": [[73, 100], ["os.path.isfile", "os.path.isdir", "len", "RuntimeError", "image_list.append", "os.walk", "FileNotFoundError", "os.path.splitext", "image_list.append", "os.path.splitext", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# custom color map", "\n", "parser", ".", "add_argument", "(", "\n", "'--custom_color'", ",", "\n", "dest", "=", "'custom_color'", ",", "\n", "nargs", "=", "'+'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.main": [[102, 144], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "predict.get_image_list", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "core.predict", "RuntimeError", "RuntimeError", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict"], ["type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# set device", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "get_test_config", "(", "cfg", ",", "args", ")", ":", "\n", "\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "'aug_eval'", "in", "test_config", ":", "\n", "        ", "test_config", ".", "pop", "(", "'aug_eval'", ")", "\n", "", "if", "args", ".", "aug_pred", ":", "\n", "        ", "test_config", "[", "'aug_pred'", "]", "=", "args", ".", "aug_pred", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "\n", "", "if", "args", ".", "flip_horizontal", ":", "\n", "        ", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "\n", "", "if", "args", ".", "flip_vertical", ":", "\n", "        ", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "if", "args", ".", "custom_color", ":", "\n", "        ", "test_config", "[", "'custom_color'", "]", "=", "args", ".", "custom_color", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.train.parse_args": [[26, 115], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "="]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.train.main": [[117, 173], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "core.train", "RuntimeError", "RuntimeError", "paddleseg.utils.get_sys_env.items", "len", "ValueError", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train"], ["parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "# Only support for the DeepLabv3+ model", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.val.parse_args": [[28, 66], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.val.main": [[68, 107], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "core.evaluate", "RuntimeError", "RuntimeError", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.semantic.SemanticEvaluator.__init__": [[35, 41], ["numpy.zeros"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_ignore_index", "=", "ignore_index", "\n", "self", ".", "_N", "=", "num_classes", "+", "1", "# store ignore label in the last class", "\n", "\n", "self", ".", "_conf_matrix", "=", "np", ".", "zeros", "(", "(", "self", ".", "_N", ",", "self", ".", "_N", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.semantic.SemanticEvaluator.update": [[42, 51], ["pred.astype.astype.astype", "gt.astype.astype.astype", "numpy.bincount().reshape", "numpy.bincount", "gt.astype.astype.reshape", "pred.astype.astype.reshape"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "pred", "=", "pred", ".", "astype", "(", "np", ".", "int", ")", "\n", "gt", "=", "gt", ".", "astype", "(", "np", ".", "int", ")", "\n", "gt", "[", "gt", "==", "self", ".", "_ignore_index", "]", "=", "self", ".", "_num_classes", "\n", "\n", "# raw: pred, column: gt", "\n", "self", ".", "_conf_matrix", "+=", "np", ".", "bincount", "(", "\n", "self", ".", "_N", "*", "pred", ".", "reshape", "(", "-", "1", ")", "+", "gt", ".", "reshape", "(", "-", "1", ")", ",", "minlength", "=", "self", ".", "_N", "\n", "**", "2", ")", ".", "reshape", "(", "self", ".", "_N", ",", "self", ".", "_N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.semantic.SemanticEvaluator.evaluate": [[52, 85], ["numpy.zeros", "numpy.zeros", "[].astype", "numpy.sum().astype", "numpy.sum().astype", "numpy.sum", "collections.OrderedDict", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "semantic.SemanticEvaluator._conf_matrix.diagonal"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Evaluates standard semantic segmentation metrics (http://cocodataset.org/#stuff-eval):\n        * Mean intersection-over-union averaged across classes (mIoU)\n        * Frequency Weighted IoU (fwIoU)\n        * Mean pixel accuracy averaged across classes (mACC)\n        * Pixel Accuracy (pACC)\n        \"\"\"", "\n", "acc", "=", "np", ".", "zeros", "(", "self", ".", "_num_classes", ",", "dtype", "=", "np", ".", "float", ")", "\n", "iou", "=", "np", ".", "zeros", "(", "self", ".", "_num_classes", ",", "dtype", "=", "np", ".", "float", ")", "\n", "tp", "=", "self", ".", "_conf_matrix", ".", "diagonal", "(", ")", "[", ":", "-", "1", "]", ".", "astype", "(", "np", ".", "float", ")", "\n", "pos_gt", "=", "np", ".", "sum", "(", "self", ".", "_conf_matrix", "[", ":", "-", "1", ",", ":", "-", "1", "]", ",", "axis", "=", "0", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "class_weights", "=", "pos_gt", "/", "np", ".", "sum", "(", "pos_gt", ")", "\n", "pos_pred", "=", "np", ".", "sum", "(", "self", ".", "_conf_matrix", "[", ":", "-", "1", ",", ":", "-", "1", "]", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "\n", "acc_valid", "=", "pos_pred", ">", "0", "\n", "acc", "[", "acc_valid", "]", "=", "tp", "[", "acc_valid", "]", "/", "pos_pred", "[", "acc_valid", "]", "\n", "iou_valid", "=", "(", "pos_gt", "+", "pos_pred", ")", ">", "0", "\n", "union", "=", "pos_gt", "+", "pos_pred", "-", "tp", "\n", "iou", "[", "acc_valid", "]", "=", "tp", "[", "acc_valid", "]", "/", "union", "[", "acc_valid", "]", "\n", "macc", "=", "np", ".", "sum", "(", "acc", ")", "/", "np", ".", "sum", "(", "acc_valid", ")", "\n", "miou", "=", "np", ".", "sum", "(", "iou", ")", "/", "np", ".", "sum", "(", "iou_valid", ")", "\n", "fiou", "=", "np", ".", "sum", "(", "iou", "*", "class_weights", ")", "\n", "pacc", "=", "np", ".", "sum", "(", "tp", ")", "/", "np", ".", "sum", "(", "pos_gt", ")", "\n", "\n", "res", "=", "{", "}", "\n", "res", "[", "\"mIoU\"", "]", "=", "100", "*", "miou", "\n", "res", "[", "\"fwIoU\"", "]", "=", "100", "*", "fiou", "\n", "res", "[", "\"mACC\"", "]", "=", "100", "*", "macc", "\n", "res", "[", "\"pACC\"", "]", "=", "100", "*", "pacc", "\n", "\n", "results", "=", "OrderedDict", "(", "{", "\"sem_seg\"", ":", "res", "}", ")", "\n", "return", "results", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PQStatCat.__init__": [[28, 33], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "iou", "=", "0.0", "\n", "self", ".", "tp", "=", "0", "\n", "self", ".", "fp", "=", "0", "\n", "self", ".", "fn", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PQStatCat.__iadd__": [[34, 40], ["None"], "methods", ["None"], ["", "def", "__iadd__", "(", "self", ",", "pd_stat_cat", ")", ":", "\n", "        ", "self", ".", "iou", "+=", "pd_stat_cat", ".", "iou", "\n", "self", ".", "tp", "+=", "pd_stat_cat", ".", "tp", "\n", "self", ".", "fp", "+=", "pd_stat_cat", ".", "fp", "\n", "self", ".", "fn", "+=", "pd_stat_cat", ".", "fn", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PQStatCat.__repr__": [[41, 45], ["str", "str", "str", "str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "s", "=", "'iou: '", "+", "str", "(", "self", ".", "iou", ")", "+", "' tp: '", "+", "str", "(", "self", ".", "tp", ")", "+", "' fp: '", "+", "str", "(", "\n", "self", ".", "fp", ")", "+", "' fn: '", "+", "str", "(", "self", ".", "fn", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PQStat.__init__": [[48, 51], ["collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ")", ":", "\n", "        ", "self", ".", "pq_per_cat", "=", "defaultdict", "(", "PQStatCat", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PQStat.__getitem__": [[52, 54], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "self", ".", "pq_per_cat", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PQStat.__iadd__": [[55, 59], ["pd_stat.pq_per_cat.items"], "methods", ["None"], ["", "def", "__iadd__", "(", "self", ",", "pd_stat", ")", ":", "\n", "        ", "for", "label", ",", "pq_stat_cat", "in", "pd_stat", ".", "pq_per_cat", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "pd_per_cat", "[", "label", "]", "+=", "pq_stat_cat", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PQStat.pq_average": [[60, 107], ["range"], "methods", ["None"], ["", "def", "pq_average", "(", "self", ",", "isthing", "=", "None", ",", "thing_list", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Calculate the average pq for all and every class.\n\n        Args:\n            num_classes (int): number of classes.\n            isthing (bool|None, optional): calculate average pq for thing class if isthing is True,\n                for stuff class if isthing is False and for all if isthing is None. Default: None. Default: None.\n            thing_list (list|None, optional): A list of thing class. It should be provided when isthing is equal to True or False. Default: None.\n        \"\"\"", "\n", "pq", ",", "sq", ",", "rq", ",", "n", "=", "0", ",", "0", ",", "0", ",", "0", "\n", "per_class_results", "=", "{", "}", "\n", "for", "label", "in", "range", "(", "self", ".", "num_classes", ")", ":", "\n", "            ", "if", "isthing", "is", "not", "None", ":", "\n", "                ", "if", "isthing", ":", "\n", "                    ", "if", "label", "not", "in", "thing_list", ":", "\n", "                        ", "continue", "\n", "", "", "else", ":", "\n", "                    ", "if", "label", "in", "thing_list", ":", "\n", "                        ", "continue", "\n", "", "", "", "iou", "=", "self", ".", "pq_per_cat", "[", "label", "]", ".", "iou", "\n", "tp", "=", "self", ".", "pq_per_cat", "[", "label", "]", ".", "tp", "\n", "fp", "=", "self", ".", "pq_per_cat", "[", "label", "]", ".", "fp", "\n", "fn", "=", "self", ".", "pq_per_cat", "[", "label", "]", ".", "fn", "\n", "if", "tp", "+", "fp", "+", "fn", "==", "0", ":", "\n", "                ", "per_class_results", "[", "label", "]", "=", "{", "'pq'", ":", "0.0", ",", "'sq'", ":", "0.0", ",", "'rq'", ":", "0.0", "}", "\n", "continue", "\n", "", "n", "+=", "1", "\n", "pq_class", "=", "iou", "/", "(", "tp", "+", "0.5", "*", "fp", "+", "0.5", "*", "fn", ")", "\n", "sq_class", "=", "iou", "/", "tp", "if", "tp", "!=", "0", "else", "0", "\n", "rq_class", "=", "tp", "/", "(", "tp", "+", "0.5", "*", "fp", "+", "0.5", "*", "fn", ")", "\n", "\n", "per_class_results", "[", "label", "]", "=", "{", "\n", "'pq'", ":", "pq_class", ",", "\n", "'sq'", ":", "sq_class", ",", "\n", "'rq'", ":", "rq_class", "\n", "}", "\n", "pq", "+=", "pq_class", "\n", "sq", "+=", "sq_class", "\n", "rq", "+=", "rq_class", "\n", "\n", "", "return", "{", "\n", "'pq'", ":", "pq", "/", "n", ",", "\n", "'sq'", ":", "sq", "/", "n", ",", "\n", "'rq'", ":", "rq", "/", "n", ",", "\n", "'n'", ":", "n", "\n", "}", ",", "per_class_results", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PanopticEvaluator.__init__": [[114, 124], ["panoptic.PQStat"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "thing_list", ",", "\n", "ignore_index", "=", "255", ",", "\n", "label_divisor", "=", "1000", ")", ":", "\n", "        ", "self", ".", "pq_stat", "=", "PQStat", "(", "num_classes", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "thing_list", "=", "thing_list", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "label_divisor", "=", "label_divisor", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PanopticEvaluator.update": [[125, 201], ["numpy.unique", "numpy.unique", "collections.defaultdict", "collections.defaultdict", "zip", "zip", "numpy.unique", "zip", "set", "set", "gt_pred_map.items", "collections.defaultdict.items", "collections.defaultdict.items", "pred.astype", "gt_pred_map.get", "gt.astype", "gt_pred_map.get", "set.add", "set.add", "gt_pred_map.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "# get the labels and counts for the pred and gt.", "\n", "        ", "gt_labels", ",", "gt_labels_counts", "=", "np", ".", "unique", "(", "gt", ",", "return_counts", "=", "True", ")", "\n", "pred_labels", ",", "pred_labels_counts", "=", "np", ".", "unique", "(", "pred", ",", "return_counts", "=", "True", ")", "\n", "gt_segms", "=", "defaultdict", "(", "dict", ")", "\n", "pred_segms", "=", "defaultdict", "(", "dict", ")", "\n", "for", "label", ",", "label_count", "in", "zip", "(", "gt_labels", ",", "gt_labels_counts", ")", ":", "\n", "            ", "category_id", "=", "label", "//", "self", ".", "label_divisor", "if", "label", ">", "self", ".", "label_divisor", "else", "label", "\n", "gt_segms", "[", "label", "]", "[", "'area'", "]", "=", "label_count", "\n", "gt_segms", "[", "label", "]", "[", "'category_id'", "]", "=", "category_id", "\n", "gt_segms", "[", "label", "]", "[", "'iscrowd'", "]", "=", "1", "if", "label", "in", "self", ".", "thing_list", "else", "0", "\n", "", "for", "label", ",", "label_count", "in", "zip", "(", "pred_labels", ",", "pred_labels_counts", ")", ":", "\n", "            ", "category_id", "=", "label", "//", "self", ".", "label_divisor", "if", "label", ">", "self", ".", "label_divisor", "else", "label", "\n", "pred_segms", "[", "label", "]", "[", "'area'", "]", "=", "label_count", "\n", "pred_segms", "[", "label", "]", "[", "'category_id'", "]", "=", "category_id", "\n", "\n", "# confusion matrix calculation", "\n", "", "pan_gt_pred", "=", "gt", ".", "astype", "(", "np", ".", "uint64", ")", "*", "OFFSET", "+", "pred", ".", "astype", "(", "np", ".", "uint64", ")", "\n", "gt_pred_map", "=", "{", "}", "\n", "labels", ",", "labels_cnt", "=", "np", ".", "unique", "(", "pan_gt_pred", ",", "return_counts", "=", "True", ")", "\n", "for", "label", ",", "intersection", "in", "zip", "(", "labels", ",", "labels_cnt", ")", ":", "\n", "            ", "gt_id", "=", "label", "//", "OFFSET", "\n", "pred_id", "=", "label", "%", "OFFSET", "\n", "gt_pred_map", "[", "(", "gt_id", ",", "pred_id", ")", "]", "=", "intersection", "\n", "\n", "# count all matched pairs", "\n", "", "gt_matched", "=", "set", "(", ")", "\n", "pred_matched", "=", "set", "(", ")", "\n", "for", "label_tuple", ",", "intersection", "in", "gt_pred_map", ".", "items", "(", ")", ":", "\n", "            ", "gt_label", ",", "pred_label", "=", "label_tuple", "\n", "if", "gt_label", "==", "self", ".", "ignore_index", "or", "pred_label", "==", "self", ".", "ignore_index", ":", "\n", "                ", "continue", "\n", "", "if", "gt_segms", "[", "gt_label", "]", "[", "'iscrowd'", "]", "==", "1", ":", "\n", "                ", "continue", "\n", "", "if", "gt_segms", "[", "gt_label", "]", "[", "'category_id'", "]", "!=", "pred_segms", "[", "pred_label", "]", "[", "\n", "'category_id'", "]", ":", "\n", "                ", "continue", "\n", "", "union", "=", "pred_segms", "[", "pred_label", "]", "[", "'area'", "]", "+", "gt_segms", "[", "gt_label", "]", "[", "\n", "'area'", "]", "-", "intersection", "-", "gt_pred_map", ".", "get", "(", "\n", "(", "self", ".", "ignore_index", ",", "pred_label", ")", ",", "0", ")", "\n", "iou", "=", "intersection", "/", "union", "\n", "if", "iou", ">", "0.5", ":", "\n", "                ", "self", ".", "pq_stat", "[", "gt_segms", "[", "gt_label", "]", "[", "'category_id'", "]", "]", ".", "tp", "+=", "1", "\n", "self", ".", "pq_stat", "[", "gt_segms", "[", "gt_label", "]", "[", "'category_id'", "]", "]", ".", "iou", "+=", "iou", "\n", "gt_matched", ".", "add", "(", "gt_label", ")", "\n", "pred_matched", ".", "add", "(", "pred_label", ")", "\n", "\n", "# count false negtive", "\n", "", "", "crowd_labels_dict", "=", "{", "}", "\n", "for", "gt_label", ",", "gt_info", "in", "gt_segms", ".", "items", "(", ")", ":", "\n", "            ", "if", "gt_label", "in", "gt_matched", ":", "\n", "                ", "continue", "\n", "", "if", "gt_label", "==", "self", ".", "ignore_index", ":", "\n", "                ", "continue", "\n", "# ignore crowd", "\n", "", "if", "gt_info", "[", "'iscrowd'", "]", "==", "1", ":", "\n", "                ", "crowd_labels_dict", "[", "gt_info", "[", "'category_id'", "]", "]", "=", "gt_label", "\n", "continue", "\n", "", "self", ".", "pq_stat", "[", "gt_info", "[", "'category_id'", "]", "]", ".", "fn", "+=", "1", "\n", "\n", "# count false positive", "\n", "", "for", "pred_label", ",", "pred_info", "in", "pred_segms", ".", "items", "(", ")", ":", "\n", "            ", "if", "pred_label", "in", "pred_matched", ":", "\n", "                ", "continue", "\n", "", "if", "pred_label", "==", "self", ".", "ignore_index", ":", "\n", "                ", "continue", "\n", "# intersection of the segment with self.ignore_index", "\n", "", "intersection", "=", "gt_pred_map", ".", "get", "(", "(", "self", ".", "ignore_index", ",", "pred_label", ")", ",", "0", ")", "\n", "if", "pred_info", "[", "'category_id'", "]", "in", "crowd_labels_dict", ":", "\n", "                ", "intersection", "+=", "gt_pred_map", ".", "get", "(", "\n", "(", "crowd_labels_dict", "[", "pred_info", "[", "'category_id'", "]", "]", ",", "pred_label", ")", ",", "\n", "0", ")", "\n", "# predicted segment is ignored if more than half of the segment correspond to self.ignore_index regions", "\n", "", "if", "intersection", "/", "pred_info", "[", "'area'", "]", ">", "0.5", ":", "\n", "                ", "continue", "\n", "", "self", ".", "pq_stat", "[", "pred_info", "[", "'category_id'", "]", "]", ".", "fp", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PanopticEvaluator.evaluate": [[202, 211], ["collections.OrderedDict", "panoptic.PanopticEvaluator.pq_stat.pq_average"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.panoptic.PQStat.pq_average"], ["", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "metrics", "=", "[", "(", "\"All\"", ",", "None", ")", ",", "(", "\"Things\"", ",", "True", ")", ",", "(", "\"Stuff\"", ",", "False", ")", "]", "\n", "results", "=", "{", "}", "\n", "for", "name", ",", "isthing", "in", "metrics", ":", "\n", "            ", "results", "[", "name", "]", ",", "per_class_results", "=", "self", ".", "pq_stat", ".", "pq_average", "(", "\n", "isthing", "=", "isthing", ",", "thing_list", "=", "self", ".", "thing_list", ")", "\n", "if", "name", "==", "'All'", ":", "\n", "                ", "results", "[", "'per_class'", "]", "=", "per_class_results", "\n", "", "", "return", "OrderedDict", "(", "pan_seg", "=", "results", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.__init__": [[51, 67], ["object.__init__", "isinstance", "list", "numpy.empty", "range", "numpy.empty", "range", "len", "range", "range", "range", "range", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "overlaps", "=", "0.5", ",", "thing_list", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "if", "isinstance", "(", "overlaps", ",", "float", ")", ":", "\n", "            ", "overlaps", "=", "[", "overlaps", "]", "\n", "", "self", ".", "overlaps", "=", "overlaps", "\n", "self", ".", "y_true", "=", "[", "[", "np", ".", "empty", "(", "0", ")", "for", "_i", "in", "range", "(", "len", "(", "overlaps", ")", ")", "]", "\n", "for", "_j", "in", "range", "(", "num_classes", ")", "]", "\n", "self", ".", "y_score", "=", "[", "[", "np", ".", "empty", "(", "0", ")", "for", "_i", "in", "range", "(", "len", "(", "overlaps", ")", ")", "]", "\n", "for", "_j", "in", "range", "(", "num_classes", ")", "]", "\n", "self", ".", "hard_fns", "=", "[", "[", "0", "]", "*", "len", "(", "overlaps", ")", "for", "_", "in", "range", "(", "num_classes", ")", "]", "\n", "\n", "if", "thing_list", "is", "None", ":", "\n", "            ", "self", ".", "thing_list", "=", "list", "(", "range", "(", "num_classes", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "thing_list", "=", "thing_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.update": [[68, 140], ["instance.InstanceEvaluator.get_instances", "range", "enumerate", "numpy.ones", "numpy.zeros", "enumerate", "numpy.append", "numpy.append", "len", "numpy.ones", "len", "len", "float", "float", "float", "numpy.append", "numpy.append", "max", "min", "numpy.append", "numpy.append", "numpy.append", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.get_instances", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "update", "(", "self", ",", "preds", ",", "gts", ",", "ignore_mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        compute y_true and y_score in this image.\n        preds (list): tuple list [(label, confidence, mask), ...].\n        gts (list): tuple list [(label, mask), ...].\n        ignore_mask (np.ndarray): Mask to ignore.\n        \"\"\"", "\n", "\n", "pred_instances", ",", "gt_instances", "=", "self", ".", "get_instances", "(", "\n", "preds", ",", "gts", ",", "ignore_mask", "=", "ignore_mask", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "num_classes", ")", ":", "\n", "            ", "if", "i", "not", "in", "self", ".", "thing_list", ":", "\n", "                ", "continue", "\n", "", "for", "oi", ",", "oth", "in", "enumerate", "(", "self", ".", "overlaps", ")", ":", "\n", "                ", "cur_true", "=", "np", ".", "ones", "(", "(", "len", "(", "gt_instances", "[", "i", "]", ")", ")", ")", "\n", "cur_score", "=", "np", ".", "ones", "(", "len", "(", "gt_instances", "[", "i", "]", ")", ")", "*", "(", "-", "float", "(", "\"inf\"", ")", ")", "\n", "cur_match", "=", "np", ".", "zeros", "(", "len", "(", "gt_instances", "[", "i", "]", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "for", "gti", ",", "gt_instance", "in", "enumerate", "(", "gt_instances", "[", "i", "]", ")", ":", "\n", "                    ", "found_match", "=", "False", "\n", "for", "pred_instance", "in", "gt_instance", "[", "'matched_pred'", "]", ":", "\n", "                        ", "overlap", "=", "float", "(", "pred_instance", "[", "'intersection'", "]", ")", "/", "(", "\n", "gt_instance", "[", "'pixel_count'", "]", "+", "pred_instance", "[", "\n", "'pixel_count'", "]", "-", "pred_instance", "[", "'intersection'", "]", ")", "\n", "if", "overlap", ">", "oth", ":", "\n", "                            ", "confidence", "=", "pred_instance", "[", "'confidence'", "]", "\n", "\n", "# if we already has a prediction for this groundtruth", "\n", "# the prediction with the lower score is automatically a false positive", "\n", "if", "cur_match", "[", "gti", "]", ":", "\n", "                                ", "max_score", "=", "max", "(", "cur_score", "[", "gti", "]", ",", "confidence", ")", "\n", "min_score", "=", "min", "(", "cur_score", "[", "gti", "]", ",", "confidence", ")", "\n", "cur_score", "=", "max_score", "\n", "# append false positive", "\n", "cur_true", "=", "np", ".", "append", "(", "cur_true", ",", "0", ")", "\n", "cur_score", "=", "np", ".", "append", "(", "cur_score", ",", "min_score", ")", "\n", "cur_match", "=", "np", ".", "append", "(", "cur_match", ",", "True", ")", "\n", "# otherwise set score", "\n", "", "else", ":", "\n", "                                ", "found_match", "=", "True", "\n", "cur_match", "[", "gti", "]", "=", "True", "\n", "cur_score", "[", "gti", "]", "=", "confidence", "\n", "\n", "", "", "", "if", "not", "found_match", ":", "\n", "                        ", "self", ".", "hard_fns", "[", "i", "]", "[", "oi", "]", "+=", "1", "\n", "# remove not-matched ground truth instances", "\n", "", "", "cur_true", "=", "cur_true", "[", "cur_match", "==", "True", "]", "\n", "cur_score", "=", "cur_score", "[", "cur_match", "==", "True", "]", "\n", "\n", "# collect not-matched predictions as false positive", "\n", "for", "pred_instance", "in", "pred_instances", "[", "i", "]", ":", "\n", "                    ", "found_gt", "=", "False", "\n", "for", "gt_instance", "in", "pred_instance", "[", "'matched_gt'", "]", ":", "\n", "                        ", "overlap", "=", "float", "(", "gt_instance", "[", "'intersection'", "]", ")", "/", "(", "\n", "gt_instance", "[", "'pixel_count'", "]", "+", "pred_instance", "[", "\n", "'pixel_count'", "]", "-", "gt_instance", "[", "'intersection'", "]", ")", "\n", "if", "overlap", ">", "oth", ":", "\n", "                            ", "found_gt", "=", "True", "\n", "break", "\n", "", "", "if", "not", "found_gt", ":", "\n", "                        ", "proportion_ignore", "=", "0", "\n", "if", "ignore_mask", "is", "not", "None", ":", "\n", "                            ", "nb_ignore_pixels", "=", "pred_instance", "[", "\n", "'void_intersection'", "]", "\n", "proportion_ignore", "=", "float", "(", "\n", "nb_ignore_pixels", ")", "/", "pred_instance", "[", "'pixel_count'", "]", "\n", "", "if", "proportion_ignore", "<=", "oth", ":", "\n", "                            ", "cur_true", "=", "np", ".", "append", "(", "cur_true", ",", "0", ")", "\n", "cur_score", "=", "np", ".", "append", "(", "cur_score", ",", "\n", "pred_instance", "[", "'confidence'", "]", ")", "\n", "", "", "", "self", ".", "y_true", "[", "i", "]", "[", "oi", "]", "=", "np", ".", "append", "(", "self", ".", "y_true", "[", "i", "]", "[", "oi", "]", ",", "cur_true", ")", "\n", "self", ".", "y_score", "[", "i", "]", "[", "oi", "]", "=", "np", ".", "append", "(", "self", ".", "y_score", "[", "i", "]", "[", "oi", "]", ",", "cur_score", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.evaluate": [[141, 151], ["instance.InstanceEvaluator.cal_ap", "instance.InstanceEvaluator.cal_map", "collections.OrderedDict"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.cal_ap", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.cal_map"], ["", "", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "ap", "=", "self", ".", "cal_ap", "(", ")", "\n", "map", "=", "self", ".", "cal_map", "(", ")", "\n", "\n", "res", "=", "{", "}", "\n", "res", "[", "\"AP\"", "]", "=", "[", "{", "i", ":", "ap", "[", "i", "]", "*", "100", "}", "for", "i", "in", "self", ".", "thing_list", "]", "\n", "res", "[", "\"mAP\"", "]", "=", "100", "*", "map", "\n", "\n", "results", "=", "OrderedDict", "(", "{", "\"ins_seg\"", ":", "res", "}", ")", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.cal_ap": [[152, 228], ["range", "range", "numpy.average", "len", "range", "len", "numpy.argsort", "numpy.cumsum", "numpy.unique", "len", "numpy.zeros", "numpy.zeros", "numpy.append", "enumerate", "numpy.copy", "numpy.append", "numpy.append", "numpy.convolve", "numpy.dot", "len", "len", "float", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "cal_ap", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        calculate ap for every classes\n        \"\"\"", "\n", "self", ".", "ap", "=", "[", "0", "]", "*", "self", ".", "num_classes", "\n", "self", ".", "ap_overlap", "=", "[", "[", "0", "]", "*", "len", "(", "self", ".", "overlaps", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "num_classes", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_classes", ")", ":", "\n", "            ", "if", "i", "not", "in", "self", ".", "thing_list", ":", "\n", "                ", "continue", "\n", "", "for", "j", "in", "range", "(", "len", "(", "self", ".", "overlaps", ")", ")", ":", "\n", "                ", "y_true", "=", "self", ".", "y_true", "[", "i", "]", "[", "j", "]", "\n", "y_score", "=", "self", ".", "y_score", "[", "i", "]", "[", "j", "]", "\n", "if", "len", "(", "y_true", ")", "==", "0", ":", "\n", "                    ", "self", ".", "ap_overlap", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "continue", "\n", "", "score_argsort", "=", "np", ".", "argsort", "(", "y_score", ")", "\n", "y_score_sorted", "=", "y_score", "[", "score_argsort", "]", "\n", "y_true_sorted", "=", "y_true", "[", "score_argsort", "]", "\n", "y_true_sorted_cumsum", "=", "np", ".", "cumsum", "(", "y_true_sorted", ")", "\n", "\n", "# unique thresholds", "\n", "thresholds", ",", "unique_indices", "=", "np", ".", "unique", "(", "\n", "y_score_sorted", ",", "return_index", "=", "True", ")", "\n", "\n", "# since we need to add an artificial point to the precision-recall curve", "\n", "# increase its length by 1", "\n", "nb_pr", "=", "len", "(", "unique_indices", ")", "+", "1", "\n", "\n", "# calculate precision and recall", "\n", "nb_examples", "=", "len", "(", "y_score_sorted", ")", "\n", "nb_true_exampels", "=", "y_true_sorted_cumsum", "[", "-", "1", "]", "\n", "precision", "=", "np", ".", "zeros", "(", "nb_pr", ")", "\n", "recall", "=", "np", ".", "zeros", "(", "nb_pr", ")", "\n", "\n", "# deal with the first point", "\n", "# only thing we need to do, is to append a zero to the cumsum at the end.", "\n", "# an index of -1 uses that zero then", "\n", "y_true_sorted_cumsum", "=", "np", ".", "append", "(", "y_true_sorted_cumsum", ",", "0", ")", "\n", "\n", "# deal with remaining", "\n", "for", "idx_res", ",", "idx_scores", "in", "enumerate", "(", "unique_indices", ")", ":", "\n", "                    ", "cumsum", "=", "y_true_sorted_cumsum", "[", "idx_scores", "-", "1", "]", "\n", "tp", "=", "nb_true_exampels", "-", "cumsum", "\n", "fp", "=", "nb_examples", "-", "idx_scores", "-", "tp", "\n", "fn", "=", "cumsum", "+", "self", ".", "hard_fns", "[", "i", "]", "[", "j", "]", "\n", "p", "=", "float", "(", "tp", ")", "/", "(", "tp", "+", "fp", ")", "\n", "r", "=", "float", "(", "tp", ")", "/", "(", "tp", "+", "fn", ")", "\n", "precision", "[", "idx_res", "]", "=", "p", "\n", "recall", "[", "idx_res", "]", "=", "r", "\n", "\n", "# add first point in curve", "\n", "", "precision", "[", "-", "1", "]", "=", "1.", "\n", "# In some calculation\uff0cmake precision the max after this point in curve.", "\n", "#precision = [np.max(precision[:i+1]) for i in range(len(precision))]", "\n", "recall", "[", "-", "1", "]", "=", "0.", "\n", "\n", "# compute average of precision-recall curve", "\n", "# integration is performed via zero order, or equivalently step-wise integration", "\n", "# first compute the widths of each step:", "\n", "# use a convolution with appropriate kernel, manually deal with the boundaries first", "\n", "recall_for_conv", "=", "np", ".", "copy", "(", "recall", ")", "\n", "recall_for_conv", "=", "np", ".", "append", "(", "recall_for_conv", "[", "0", "]", ",", "recall_for_conv", ")", "\n", "recall_for_conv", "=", "np", ".", "append", "(", "recall_for_conv", ",", "0.", ")", "\n", "\n", "step_widths", "=", "np", ".", "convolve", "(", "recall_for_conv", ",", "[", "-", "0.5", ",", "0", ",", "0.5", "]", ",", "\n", "'valid'", ")", "\n", "\n", "# integrate is now simply a dot product", "\n", "ap_current", "=", "np", ".", "dot", "(", "precision", ",", "step_widths", ")", "\n", "self", ".", "ap_overlap", "[", "i", "]", "[", "j", "]", "=", "ap_current", "\n", "\n", "", "", "ap", "=", "[", "np", ".", "average", "(", "i", ")", "for", "i", "in", "self", ".", "ap_overlap", "]", "\n", "self", ".", "ap", "=", "ap", "\n", "\n", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.cal_map": [[229, 239], ["instance.InstanceEvaluator.cal_ap", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.cal_ap"], ["", "def", "cal_map", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        calculate map for all classes\n        \"\"\"", "\n", "self", ".", "cal_ap", "(", ")", "\n", "valid_ap", "=", "[", "self", ".", "ap", "[", "i", "]", "for", "i", "in", "self", ".", "thing_list", "]", "\n", "map", "=", "np", ".", "mean", "(", "valid_ap", ")", "\n", "self", ".", "map", "=", "map", "\n", "\n", "return", "map", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.get_instances": [[240, 307], ["collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "numpy.count_nonzero", "gt_instances[].append", "collections.defaultdict", "numpy.count_nonzero", "enumerate", "pred_instances[].append", "numpy.count_nonzero", "numpy.count_nonzero", "numpy.logical_and", "numpy.logical_and", "collections.defaultdict.copy", "collections.defaultdict.copy", "matched_gt.append", "[].append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "get_instances", "(", "self", ",", "preds", ",", "gts", ",", "ignore_mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        In this method, we create two dicts of list\n        - pred_instances: contains all predictions and their associated gt\n        - gtInstances:   contains all gt instances and their associated predictions\n\n        Args:\n            preds (list): Prediction of image.\n            gts (list): Ground truth of image.\n            ignore_mask (np.ndarray, optional): Ignore mask. Default: None.\n\n        Return:\n            dict: pred_instances, the type is dict(list(dict))), e.g. {0: [{'pred_id':0, 'label':0',\n                'pixel_count':100, 'confidence': 0.9, 'void_intersection': 0,\n                'matched_gt': [gt_instance0, gt_instance1, ...]}, ], 1: }\n            dict: gt_instances,  the type is dict(list(dict))), e.g. {0: [{'inst_id':0, 'label':0',\n                'pixel_count':100, 'mask': np.ndarray, 'matched_pred': [pred_instance0, pred_instance1, ...]}, ], 1: }\n        \"\"\"", "\n", "\n", "pred_instances", "=", "defaultdict", "(", "list", ")", "\n", "gt_instances", "=", "defaultdict", "(", "list", ")", "\n", "\n", "gt_inst_count", "=", "0", "\n", "for", "gt", "in", "gts", ":", "\n", "            ", "label", ",", "mask", "=", "gt", "\n", "gt_instance", "=", "defaultdict", "(", "list", ")", "\n", "gt_instance", "[", "'inst_id'", "]", "=", "gt_inst_count", "\n", "gt_instance", "[", "'label'", "]", "=", "label", "\n", "gt_instance", "[", "'pixel_count'", "]", "=", "np", ".", "count_nonzero", "(", "mask", ")", "\n", "gt_instance", "[", "'mask'", "]", "=", "mask", "\n", "gt_instances", "[", "label", "]", ".", "append", "(", "gt_instance", ")", "\n", "gt_inst_count", "+=", "1", "\n", "\n", "", "pred_inst_count", "=", "0", "\n", "for", "pred", "in", "preds", ":", "\n", "            ", "label", ",", "conf", ",", "mask", "=", "pred", "\n", "pred_instance", "=", "defaultdict", "(", "list", ")", "\n", "pred_instance", "[", "'label'", "]", "=", "label", "\n", "pred_instance", "[", "'pred_id'", "]", "=", "pred_inst_count", "\n", "pred_instance", "[", "'pixel_count'", "]", "=", "np", ".", "count_nonzero", "(", "mask", ")", "\n", "pred_instance", "[", "'confidence'", "]", "=", "conf", "\n", "if", "ignore_mask", "is", "not", "None", ":", "\n", "                ", "pred_instance", "[", "'void_intersection'", "]", "=", "np", ".", "count_nonzero", "(", "\n", "np", ".", "logical_and", "(", "mask", ",", "ignore_mask", ")", ")", "\n", "\n", "# Loop through all ground truth instances with matching label", "\n", "", "matched_gt", "=", "[", "]", "\n", "for", "gt_num", ",", "gt_instance", "in", "enumerate", "(", "gt_instances", "[", "label", "]", ")", ":", "\n", "# print(gt_instances)", "\n", "                ", "intersection", "=", "np", ".", "count_nonzero", "(", "\n", "np", ".", "logical_and", "(", "mask", ",", "gt_instances", "[", "label", "]", "[", "gt_num", "]", "[", "'mask'", "]", ")", ")", "\n", "if", "intersection", ">", "0", ":", "\n", "                    ", "gt_copy", "=", "gt_instance", ".", "copy", "(", ")", "\n", "pred_copy", "=", "pred_instance", ".", "copy", "(", ")", "\n", "\n", "gt_copy", "[", "'intersection'", "]", "=", "intersection", "\n", "pred_copy", "[", "'intersection'", "]", "=", "intersection", "\n", "\n", "matched_gt", ".", "append", "(", "gt_copy", ")", "\n", "gt_instances", "[", "label", "]", "[", "gt_num", "]", "[", "'matched_pred'", "]", ".", "append", "(", "\n", "pred_copy", ")", "\n", "\n", "", "", "pred_instance", "[", "'matched_gt'", "]", "=", "matched_gt", "\n", "pred_inst_count", "+=", "1", "\n", "pred_instances", "[", "label", "]", ".", "append", "(", "pred_instance", ")", "\n", "\n", "", "return", "pred_instances", ",", "gt_instances", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.convert_gt_map": [[308, 329], ["numpy.unique", "gts.append", "mask.astype"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "@", "staticmethod", "\n", "def", "convert_gt_map", "(", "seg_map", ",", "ins_map", ")", ":", "\n", "        ", "\"\"\"\n        Convet the ground truth with format (h*w) to the format that satisfies the AP calculation.\n\n        Args:\n            seg_map (np.ndarray): the sementic segmentation map with shape H * W. Value is 0, 1, 2, ...\n            ins_map (np.ndarray): the instance segmentation map with shape H * W. Value is 0, 1, 2, ...\n\n        Returns:\n            list: tuple list like: [(label, mask), ...]\n        \"\"\"", "\n", "gts", "=", "[", "]", "\n", "instance_cnt", "=", "np", ".", "unique", "(", "ins_map", ")", "\n", "for", "i", "in", "instance_cnt", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "continue", "\n", "", "mask", "=", "ins_map", "==", "i", "\n", "label", "=", "seg_map", "[", "mask", "]", "[", "0", "]", "\n", "gts", ".", "append", "(", "(", "label", ",", "mask", ".", "astype", "(", "'int32'", ")", ")", ")", "\n", "", "return", "gts", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.evaluation.instance.InstanceEvaluator.convert_pred_map": [[330, 352], ["numpy.unique", "numpy.mean", "preds.append", "mask.astype"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "@", "staticmethod", "\n", "def", "convert_pred_map", "(", "seg_pred", ",", "pan_pred", ")", ":", "\n", "        ", "\"\"\"\n        Convet the predictions with format (h*w) to the format that satisfies the AP calculation.\n\n        Args:\n            seg_pred (np.ndarray): the sementic segmentation map with shape C * H * W. Value is probability.\n            pan_pred (np.ndarray): panoptic predictions, void_label, stuff_id * label_divisor, thing_id * label_divisor + ins_id , ins_id >= 1.\n\n        Returns:\n            list: tuple list like: [(label, score, mask), ...]\n        \"\"\"", "\n", "preds", "=", "[", "]", "\n", "instance_cnt", "=", "np", ".", "unique", "(", "pan_pred", ")", "\n", "for", "i", "in", "instance_cnt", ":", "\n", "            ", "if", "(", "i", "<", "1000", ")", "or", "(", "i", "%", "1000", "==", "0", ")", ":", "\n", "                ", "continue", "\n", "", "mask", "=", "pan_pred", "==", "i", "\n", "label", "=", "i", "//", "1000", "\n", "score", "=", "np", ".", "mean", "(", "seg_pred", "[", "label", "]", "[", "mask", "]", ")", "\n", "preds", ".", "append", "(", "(", "label", ",", "score", ",", "mask", ".", "astype", "(", "'int32'", ")", ")", ")", "\n", "", "return", "preds", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.CityscapesSOTA.predict.parse_args": [[26, 105], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model prediction'", ")", "\n", "\n", "# params of prediction", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for prediction'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--image_path'", ",", "\n", "dest", "=", "'image_path'", ",", "\n", "help", "=", "'The image to predict, which can be a path of image, or a file list containing image paths, or a directory including images'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the predicted results'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output/result'", ")", "\n", "\n", "# augment for prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_pred'", ",", "\n", "dest", "=", "'aug_pred'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for prediction'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window prediction", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to prediction by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# custom color map", "\n", "parser", ".", "add_argument", "(", "\n", "'--custom_color'", ",", "\n", "dest", "=", "'custom_color'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Save images with a custom color map. Default: None, use paddleseg\\'s default color map.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "# set device", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.CityscapesSOTA.predict.get_test_config": [[107, 129], ["None"], "function", ["None"], ["'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "get_test_config", "(", "cfg", ",", "args", ")", ":", "\n", "\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "'aug_eval'", "in", "test_config", ":", "\n", "        ", "test_config", ".", "pop", "(", "'aug_eval'", ")", "\n", "", "if", "args", ".", "aug_pred", ":", "\n", "        ", "test_config", "[", "'aug_pred'", "]", "=", "args", ".", "aug_pred", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "\n", "", "if", "args", ".", "flip_horizontal", ":", "\n", "        ", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "\n", "", "if", "args", ".", "flip_vertical", ":", "\n", "        ", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.CityscapesSOTA.predict.main": [[131, 168], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.get_image_list", "paddleseg.utils.logger.info", "predict.get_test_config", "paddleseg.utils.config_check", "paddleseg.core.predict", "RuntimeError", "RuntimeError", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.PanopticDeepLab.predict.get_image_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.get_test_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict"], ["", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "if", "args", ".", "custom_color", ":", "\n", "        ", "test_config", "[", "'custom_color'", "]", "=", "args", ".", "custom_color", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "transforms", "=", "Compose", "(", "cfg", ".", "val_transforms", ")", "\n", "image_list", ",", "image_dir", "=", "get_image_list", "(", "args", ".", "image_path", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.CityscapesSOTA.train.parse_args": [[25, 96], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["\n", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.CityscapesSOTA.train.main": [[98, 147], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "scripts.train.train", "RuntimeError", "RuntimeError", "paddleseg.utils.get_sys_env.items", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train"], ["help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "=", "\"Auto mixed precision level. Accepted values are \u201cO1\u201d and \u201cO2\u201d: O1 represent mixed precision, the input \\\n                data type of each operator will be casted by white_list and black_list; O2 represent Pure fp16, all operators \\\n                parameters and input data will be casted to fp16, except operators in black_list, don\u2019t support fp16 kernel \\\n                and batchnorm. Default is O1(amp)\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.CityscapesSOTA.val.parse_args": [[26, 91], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.CityscapesSOTA.val.main": [[93, 132], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "paddleseg.core.evaluate", "RuntimeError", "RuntimeError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate"], ["dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--auc_roc'", ",", "\n", "dest", "=", "'add auc_roc metric'", ",", "\n", "help", "=", "'Whether to use auc_roc metric'", ",", "\n", "type", "=", "bool", ",", "\n", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.train.parse_args": [[26, 116], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "=", "\"Auto mixed precision level. Accepted values are \u201cO1\u201d and \u201cO2\u201d: O1 represent mixed precision, the input \\\n                data type of each operator will be casted by white_list and black_list; O2 represent Pure fp16, all operators \\\n                parameters and input data will be casted to fp16, except operators in black_list, don\u2019t support fp16 kernel \\\n                and batchnorm. Default is O1(amp)\"", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.train.main": [[118, 190], ["medicalseg.utils.get_sys_env", "medicalseg.utils.logger.info", "paddle.set_device", "medicalseg.cvlibs.Config", "str", "medicalseg.utils.logger.info", "medicalseg.utils.config_check", "medicalseg.core.train", "paddle.seed", "numpy.random.seed", "random.seed", "RuntimeError", "len", "range", "RuntimeError", "medicalseg.utils.get_sys_env.items", "ValueError", "len", "ValueError", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train"], ["'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "train_dataset", "=", "cfg", ".", "train_dataset", "\n", "if", "train_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "", "elif", "len", "(", "train_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of train_dataset is 0. Please check if your dataset is valid'", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.val.parse_args": [[25, 73], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "get_test_config", "(", "cfg", ",", "args", ")", ":", "\n", "\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.val.main": [[75, 122], ["medicalseg.utils.get_sys_env", "paddle.set_device", "medicalseg.cvlibs.Config", "str", "medicalseg.utils.logger.info", "medicalseg.utils.config_check", "medicalseg.core.evaluate", "RuntimeError", "RuntimeError", "medicalseg.utils.utils.load_entire_model", "medicalseg.utils.logger.info", "LogWriter", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--auc_roc'", ",", "\n", "dest", "=", "'add auc_roc metric'", ",", "\n", "help", "=", "'Whether to use auc_roc metric'", ",", "\n", "type", "=", "bool", ",", "\n", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.export.SavedSegmentationNet.__init__": [[68, 72], ["super().__init__", "export.PostPorcesser"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net", ",", "without_argmax", "=", "False", ",", "with_softmax", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "post_processer", "=", "PostPorcesser", "(", "without_argmax", ",", "with_softmax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.export.SavedSegmentationNet.forward": [[73, 77], ["export.SavedSegmentationNet.net", "export.SavedSegmentationNet.post_processer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "self", ".", "net", "(", "x", ")", "\n", "outs", "=", "self", ".", "post_processer", "(", "outs", ")", "\n", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.export.PostPorcesser.__init__": [[80, 84], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "without_argmax", ",", "with_softmax", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "without_argmax", "=", "without_argmax", "\n", "self", ".", "with_softmax", "=", "with_softmax", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.export.PostPorcesser.forward": [[85, 94], ["new_outs.append", "paddle.nn.functional.softmax", "paddle.argmax"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "forward", "(", "self", ",", "outs", ")", ":", "\n", "        ", "new_outs", "=", "[", "]", "\n", "for", "out", "in", "outs", ":", "\n", "            ", "if", "self", ".", "with_softmax", ":", "\n", "                ", "out", "=", "paddle", ".", "nn", ".", "functional", ".", "softmax", "(", "out", ",", "axis", "=", "1", ")", "\n", "", "if", "not", "self", ".", "without_argmax", ":", "\n", "                ", "out", "=", "paddle", ".", "argmax", "(", "out", ",", "axis", "=", "1", ")", "\n", "", "new_outs", ".", "append", "(", "out", ")", "\n", "", "return", "new_outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.export.parse_args": [[25, 65], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model export.'", ")", "\n", "# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the exported model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for export'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--without_argmax'", ",", "\n", "dest", "=", "'without_argmax'", ",", "\n", "help", "=", "'Do not add the argmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--with_softmax'", ",", "\n", "dest", "=", "'with_softmax'", ",", "\n", "help", "=", "'Add the softmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--input_shape\"", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "\"Export the model with fixed input shape, such as 1 3 1024 1024.\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.MedicalSeg.export.main": [[96, 139], ["medicalseg.cvlibs.Config", "SavedSegmentationNet.eval", "paddle.jit.to_static", "os.path.join", "paddle.jit.save", "os.path.join", "medicalseg.utils.logger.info", "paddle.load", "net.set_dict", "medicalseg.utils.logger.info", "export.SavedSegmentationNet", "open", "medicalseg.cvlibs.Config.export_config.get", "yaml.dump", "paddle.static.InputSpec"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'PADDLESEG_EXPORT_STAGE'", "]", "=", "'True'", "\n", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "net", "=", "cfg", ".", "model", "\n", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "para_state_dict", "=", "paddle", ".", "load", "(", "args", ".", "model_path", ")", "\n", "net", ".", "set_dict", "(", "para_state_dict", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully.'", ")", "\n", "\n", "", "if", "args", ".", "input_shape", "is", "None", ":", "\n", "        ", "shape", "=", "[", "None", ",", "3", ",", "None", ",", "None", "]", "\n", "", "else", ":", "\n", "        ", "shape", "=", "args", ".", "input_shape", "\n", "\n", "", "if", "not", "args", ".", "without_argmax", "or", "args", ".", "with_softmax", ":", "\n", "        ", "new_net", "=", "SavedSegmentationNet", "(", "net", ",", "args", ".", "without_argmax", ",", "\n", "args", ".", "with_softmax", ")", "\n", "", "else", ":", "\n", "        ", "new_net", "=", "net", "\n", "\n", "", "new_net", ".", "eval", "(", ")", "\n", "new_net", "=", "paddle", ".", "jit", ".", "to_static", "(", "\n", "new_net", ",", "\n", "input_spec", "=", "[", "paddle", ".", "static", ".", "InputSpec", "(", "\n", "shape", "=", "shape", ",", "dtype", "=", "'float32'", ")", "]", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "'model'", ")", "\n", "paddle", ".", "jit", ".", "save", "(", "new_net", ",", "save_path", ")", "\n", "\n", "yml_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "'deploy.yaml'", ")", "\n", "with", "open", "(", "yml_file", ",", "'w'", ")", "as", "file", ":", "\n", "        ", "transforms", "=", "cfg", ".", "export_config", ".", "get", "(", "'transforms'", ",", "[", "{", "\n", "'type'", ":", "'Normalize'", "\n", "}", "]", ")", "\n", "data", "=", "{", "\n", "'Deploy'", ":", "{", "\n", "'transforms'", ":", "transforms", ",", "\n", "'model'", ":", "'model.pdmodel'", ",", "\n", "'params'", ":", "'model.pdiparams'", "\n", "}", "\n", "}", "\n", "yaml", ".", "dump", "(", "data", ",", "file", ")", "\n", "\n", "", "logger", ".", "info", "(", "f'Model is saved in {args.save_dir}.'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.label_remap": [[37, 52], ["map_dict.items", "isinstance", "np.array"], "function", ["None"], ["", "def", "label_remap", "(", "label", ",", "map_dict", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Convert labels using label map\n\n    label: 3D numpy/cupy array in [z, y, x] order.\n    map_dict: the label transfer map dict. key is the original label, value is the remaped one.\n    \"\"\"", "\n", "\n", "if", "not", "isinstance", "(", "label", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "image", "=", "np", ".", "array", "(", "label", ")", "\n", "\n", "", "for", "key", ",", "val", "in", "map_dict", ".", "items", "(", ")", ":", "\n", "        ", "label", "[", "label", "==", "key", "]", "=", "val", "\n", "\n", "", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.normalize": [[54, 65], ["np.clip", "isinstance", "np.array", "np.array.min", "np.array.max", "np.array.min"], "function", ["None"], ["", "def", "normalize", "(", "image", ",", "min_val", "=", "None", ",", "max_val", "=", "None", ")", ":", "\n", "    ", "\"Normalize the image with given min_val and max val \"", "\n", "if", "not", "isinstance", "(", "image", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "image", "=", "np", ".", "array", "(", "image", ")", "\n", "", "if", "min_val", "is", "None", "and", "max_val", "is", "None", ":", "\n", "        ", "image", "=", "(", "image", "-", "image", ".", "min", "(", ")", ")", "/", "(", "image", ".", "max", "(", ")", "-", "image", ".", "min", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "image", "=", "(", "image", "-", "min_val", ")", "/", "(", "max_val", "-", "min_val", ")", "\n", "", "np", ".", "clip", "(", "image", ",", "0", ",", "1", ",", "out", "=", "image", ")", "\n", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.values.HUnorm": [[67, 88], ["np.nan_to_num", "np.clip", "isinstance", "np.array"], "function", ["None"], ["", "def", "HUnorm", "(", "image", ",", "HU_min", "=", "-", "1200", ",", "HU_max", "=", "600", ",", "HU_nan", "=", "-", "2000", ")", ":", "\n", "    ", "\"\"\"\n    Convert CT HU unit into uint8 values. First bound HU values by predfined min\n    and max, and then normalize. Due to paddle.nn.conv3D doesn't support uint8, we need to convert\n    the returned image as float32.\n\n    image: 3D numpy array of raw HU values from CT series in [z, y, x] order.\n    HU_min: float, min HU value.\n    HU_max: float, max HU value.\n    HU_nan: float, value for nan in the raw CT image.\n    \"\"\"", "\n", "\n", "if", "not", "isinstance", "(", "image", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "image", "=", "np", ".", "array", "(", "image", ")", "\n", "", "image", "=", "np", ".", "nan_to_num", "(", "image", ",", "copy", "=", "False", ",", "nan", "=", "HU_nan", ")", "\n", "\n", "# normalize to [0, 1]", "\n", "image", "=", "(", "image", "-", "HU_min", ")", "/", "(", "(", "HU_max", "-", "HU_min", ")", "/", "255", ")", "\n", "np", ".", "clip", "(", "image", ",", "0", ",", "255", ",", "out", "=", "image", ")", "\n", "\n", "return", "image", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.dataset_json.parse_msd_basic_info": [[4, 17], ["json.loads", "tuple", "open().read", "dict[].values", "open"], "function", ["None"], ["def", "parse_msd_basic_info", "(", "json_path", ")", ":", "\n", "    ", "\"\"\"\n    get dataset basic info from msd dataset.json\n    \"\"\"", "\n", "dict", "=", "json", ".", "loads", "(", "open", "(", "json_path", ",", "\"r\"", ")", ".", "read", "(", ")", ")", "\n", "info", "=", "{", "}", "\n", "info", "[", "\"modalities\"", "]", "=", "tuple", "(", "dict", "[", "\"modality\"", "]", ".", "values", "(", ")", ")", "\n", "info", "[", "\"labels\"", "]", "=", "dict", "[", "\"labels\"", "]", "\n", "info", "[", "\"dataset_name\"", "]", "=", "dict", "[", "\"name\"", "]", "\n", "info", "[", "\"dataset_description\"", "]", "=", "dict", "[", "\"description\"", "]", "\n", "info", "[", "\"license_desc\"", "]", "=", "dict", "[", "\"licence\"", "]", "\n", "info", "[", "\"dataset_reference\"", "]", "=", "dict", "[", "\"reference\"", "]", "\n", "return", "info", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.load_image.load_slices": [[32, 49], ["np.array", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "np.array", "np.array", "os.path.join", "np.array", "list", "list", "os.listdir", "np.array.argsort", "reversed", "reversed", "pydicom.dcmread", "sitk.ReadImage.GetOrigin", "sitk.ReadImage.GetSpacing"], "function", ["None"], ["", "def", "load_slices", "(", "dcm_dir", ")", ":", "\n", "    ", "\"\"\"\n    Load dcm like images\n    Return img array and [z,y,x]-ordered origin and spacing\n    \"\"\"", "\n", "\n", "dcm_list", "=", "[", "os", ".", "path", ".", "join", "(", "dcm_dir", ",", "i", ")", "for", "i", "in", "os", ".", "listdir", "(", "dcm_dir", ")", "]", "\n", "indices", "=", "np", ".", "array", "(", "[", "pydicom", ".", "dcmread", "(", "i", ")", ".", "InstanceNumber", "for", "i", "in", "dcm_list", "]", ")", "\n", "dcm_list", "=", "np", ".", "array", "(", "dcm_list", ")", "[", "indices", ".", "argsort", "(", ")", "]", "\n", "\n", "itkimage", "=", "sitk", ".", "ReadImage", "(", "dcm_list", ")", "\n", "numpyImage", "=", "sitk", ".", "GetArrayFromImage", "(", "itkimage", ")", "\n", "\n", "numpyOrigin", "=", "np", ".", "array", "(", "list", "(", "reversed", "(", "itkimage", ".", "GetOrigin", "(", ")", ")", ")", ")", "\n", "numpySpacing", "=", "np", ".", "array", "(", "list", "(", "reversed", "(", "itkimage", ".", "GetSpacing", "(", ")", ")", ")", ")", "\n", "\n", "return", "numpyImage", ",", "numpyOrigin", ",", "numpySpacing", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.load_image.load_series": [[51, 64], ["SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "np.array", "np.array", "list", "list", "reversed", "reversed", "sitk.ReadImage.GetOrigin", "sitk.ReadImage.GetSpacing"], "function", ["None"], ["", "def", "load_series", "(", "mhd_path", ")", ":", "\n", "    ", "\"\"\"\n    Load mhd, nii like images\n    Return img array and [z,y,x]-ordered origin and spacing\n    \"\"\"", "\n", "\n", "itkimage", "=", "sitk", ".", "ReadImage", "(", "mhd_path", ")", "\n", "numpyImage", "=", "sitk", ".", "GetArrayFromImage", "(", "itkimage", ")", "\n", "\n", "numpyOrigin", "=", "np", ".", "array", "(", "list", "(", "reversed", "(", "itkimage", ".", "GetOrigin", "(", ")", ")", ")", ")", "\n", "numpySpacing", "=", "np", ".", "array", "(", "list", "(", "reversed", "(", "itkimage", ".", "GetSpacing", "(", ")", ")", ")", ")", "\n", "\n", "return", "numpyImage", ",", "numpyOrigin", ",", "numpySpacing", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.load_image.add_qform_sform": [[66, 72], ["nibabel.load", "nib.load.set_qform", "nib.load.set_sform", "nibabel.save", "nib.load.get_qform", "nib.load.get_sform"], "function", ["None"], ["", "def", "add_qform_sform", "(", "img_name", ")", ":", "\n", "    ", "img", "=", "nib", ".", "load", "(", "img_name", ")", "\n", "qform", ",", "sform", "=", "img", ".", "get_qform", "(", ")", ",", "img", ".", "get_sform", "(", ")", "\n", "img", ".", "set_qform", "(", "qform", ")", "\n", "img", ".", "set_sform", "(", "sform", ")", "\n", "nib", ".", "save", "(", "img", ",", "img_name", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.init": [[16, 19], ["None"], "function", ["None"], ["def", "init", "(", ")", ":", "# \u521d\u59cb\u5316", "\n", "    ", "global", "_global_dict", "\n", "_global_dict", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.set_value": [[21, 24], ["None"], "function", ["None"], ["", "def", "set_value", "(", "key", ",", "value", ")", ":", "\n", "#\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf", "\n", "    ", "_global_dict", "[", "key", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.get_value": [[26, 32], ["print"], "function", ["None"], ["", "def", "get_value", "(", "key", ")", ":", "\n", "#\u83b7\u5f97\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u5b58\u5728\u5219\u63d0\u793a\u8bfb\u53d6\u5bf9\u5e94\u53d8\u91cf\u5931\u8d25", "\n", "    ", "try", ":", "\n", "        ", "return", "_global_dict", "[", "key", "]", "\n", "", "except", ":", "\n", "        ", "print", "(", "'Read'", "+", "key", "+", "'failed\\r\\n'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.geometry.resample": [[31, 70], ["scipy.ndimage.zoom", "isinstance", "np.array", "np.array", "np.round", "np.array", "np.array", "tuple", "len"], "function", ["None"], ["", "def", "resample", "(", "image", ",", "\n", "spacing", "=", "None", ",", "\n", "new_spacing", "=", "[", "1.0", ",", "1.0", ",", "1.0", "]", ",", "\n", "new_shape", "=", "None", ",", "\n", "order", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    Resample image from the original spacing to new_spacing, e.g. 1x1x1\n\n    image(numpy array): 3D numpy array of raw HU values from CT series in [z, y, x] order.\n    spacing(list|tuple): float * 3, raw CT spacing in [z, y, x] order.\n    new_spacing: float * 3, new spacing used for resample, typically 1x1x1,\n        which means standardizing the raw CT with different spacing all into\n        1x1x1 mm.\n    new_shape(list|tuple): the new shape of resampled numpy array.\n    order(int): order for resample function scipy.ndimage.zoom\n\n    return: 3D binary numpy array with the same shape of the image after,\n        resampling. The actual resampling spacing is also returned.\n    \"\"\"", "\n", "\n", "if", "not", "isinstance", "(", "image", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "image", "=", "np", ".", "array", "(", "image", ")", "\n", "\n", "", "if", "new_shape", "is", "None", ":", "\n", "        ", "spacing", "=", "np", ".", "array", "(", "[", "spacing", "[", "0", "]", ",", "spacing", "[", "1", "]", ",", "spacing", "[", "2", "]", "]", ")", "\n", "new_shape", "=", "np", ".", "round", "(", "image", ".", "shape", "*", "spacing", "/", "new_spacing", ")", "\n", "", "else", ":", "\n", "        ", "new_shape", "=", "np", ".", "array", "(", "new_shape", ")", "\n", "if", "spacing", "is", "not", "None", "and", "len", "(", "spacing", ")", "==", "4", ":", "\n", "            ", "spacing", "=", "spacing", "[", "1", ":", "]", "\n", "", "new_spacing", "=", "tuple", "(", "(", "image", ".", "shape", "/", "new_shape", ")", "*", "\n", "spacing", ")", "if", "spacing", "is", "not", "None", "else", "None", "\n", "\n", "", "resize_factor", "=", "new_shape", "/", "np", ".", "array", "(", "image", ".", "shape", ")", "\n", "\n", "image_new", "=", "scipy", ".", "ndimage", ".", "zoom", "(", "\n", "image", ",", "resize_factor", ",", "mode", "=", "'nearest'", ",", "order", "=", "order", ")", "\n", "\n", "return", "image_new", ",", "new_spacing", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.__init__": [[29, 38], ["urls.items", "uncompress.uncompressor._download_file", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor._download_file"], ["    ", "def", "__init__", "(", "self", ",", "download_params", ")", ":", "\n", "        ", "if", "download_params", "is", "not", "None", ":", "\n", "            ", "urls", ",", "savepath", ",", "print_progress", "=", "download_params", "\n", "for", "key", ",", "url", "in", "urls", ".", "items", "(", ")", ":", "\n", "                ", "if", "url", ":", "\n", "                    ", "self", ".", "_download_file", "(", "\n", "url", ",", "\n", "savepath", "=", "os", ".", "path", ".", "join", "(", "savepath", ",", "key", ")", ",", "\n", "print_progress", "=", "print_progress", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor._uncompress_file_zip": [[39, 49], ["zipfile.ZipFile", "zipfile.ZipFile.namelist", "len", "enumerate", "zipfile.ZipFile.close", "zipfile.ZipFile.extract"], "methods", ["None"], ["", "", "", "", "def", "_uncompress_file_zip", "(", "self", ",", "filepath", ",", "extrapath", ")", ":", "\n", "        ", "files", "=", "zipfile", ".", "ZipFile", "(", "filepath", ",", "'r'", ")", "\n", "filelist", "=", "files", ".", "namelist", "(", ")", "\n", "rootpath", "=", "filelist", "[", "0", "]", "\n", "total_num", "=", "len", "(", "filelist", ")", "\n", "for", "index", ",", "file", "in", "enumerate", "(", "filelist", ")", ":", "\n", "            ", "files", ".", "extract", "(", "file", ",", "extrapath", ")", "\n", "yield", "total_num", ",", "index", ",", "rootpath", "\n", "", "files", ".", "close", "(", ")", "\n", "yield", "total_num", ",", "index", ",", "rootpath", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.progress": [[50, 59], ["sys.stdout.write", "time.time", "sys.stdout.flush", "time.time"], "methods", ["None"], ["", "def", "progress", "(", "self", ",", "str", ",", "end", "=", "False", ")", ":", "\n", "        ", "global", "lasttime", "\n", "if", "end", ":", "\n", "            ", "str", "+=", "\"\\n\"", "\n", "lasttime", "=", "0", "\n", "", "if", "time", ".", "time", "(", ")", "-", "lasttime", ">=", "FLUSH_INTERVAL", ":", "\n", "            ", "sys", ".", "stdout", ".", "write", "(", "\"\\r%s\"", "%", "str", ")", "\n", "lasttime", "=", "time", ".", "time", "(", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor._uncompress_file_tar": [[60, 70], ["tarfile.open", "tarfile.open.getnames", "len", "enumerate", "tarfile.open.close", "tarfile.open.extract"], "methods", ["None"], ["", "", "def", "_uncompress_file_tar", "(", "self", ",", "filepath", ",", "extrapath", ",", "mode", "=", "\"r:gz\"", ")", ":", "\n", "        ", "files", "=", "tarfile", ".", "open", "(", "filepath", ",", "mode", ")", "\n", "filelist", "=", "files", ".", "getnames", "(", ")", "\n", "total_num", "=", "len", "(", "filelist", ")", "\n", "rootpath", "=", "filelist", "[", "0", "]", "\n", "for", "index", ",", "file", "in", "enumerate", "(", "filelist", ")", ":", "\n", "            ", "files", ".", "extract", "(", "file", ",", "extrapath", ")", "\n", "yield", "total_num", ",", "index", ",", "rootpath", "\n", "", "files", ".", "close", "(", ")", "\n", "yield", "total_num", ",", "index", ",", "rootpath", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor._uncompress_file": [[71, 95], ["filepath.endswith", "functools.partial.", "print", "filepath.endswith", "uncompress.uncompressor.progress", "os.remove", "functools.partial", "functools.partial", "int", "uncompress.uncompressor.progress", "os.path.basename", "float", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.progress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.progress"], ["", "def", "_uncompress_file", "(", "self", ",", "filepath", ",", "extrapath", ",", "delete_file", ",", "\n", "print_progress", ")", ":", "\n", "        ", "if", "print_progress", ":", "\n", "            ", "print", "(", "\"Uncompress %s\"", "%", "os", ".", "path", ".", "basename", "(", "filepath", ")", ")", "\n", "\n", "", "if", "filepath", ".", "endswith", "(", "\"zip\"", ")", ":", "\n", "            ", "handler", "=", "self", ".", "_uncompress_file_zip", "\n", "", "elif", "filepath", ".", "endswith", "(", "(", "\"tgz\"", ",", "\"tar\"", ",", "\"tar.gz\"", ")", ")", ":", "\n", "            ", "handler", "=", "functools", ".", "partial", "(", "self", ".", "_uncompress_file_tar", ",", "mode", "=", "\"r:*\"", ")", "\n", "", "else", ":", "\n", "            ", "handler", "=", "functools", ".", "partial", "(", "self", ".", "_uncompress_file_tar", ",", "mode", "=", "\"r\"", ")", "\n", "\n", "", "for", "total_num", ",", "index", ",", "rootpath", "in", "handler", "(", "filepath", ",", "extrapath", ")", ":", "\n", "            ", "if", "print_progress", ":", "\n", "                ", "done", "=", "int", "(", "50", "*", "float", "(", "index", ")", "/", "total_num", ")", "\n", "self", ".", "progress", "(", "\"[%-50s] %.2f%%\"", "%", "\n", "(", "'='", "*", "done", ",", "float", "(", "100", "*", "index", ")", "/", "total_num", ")", ")", "\n", "", "", "if", "print_progress", ":", "\n", "            ", "self", ".", "progress", "(", "\"[%-50s] %.2f%%\"", "%", "(", "'='", "*", "50", ",", "100", ")", ",", "end", "=", "True", ")", "\n", "\n", "", "if", "delete_file", ":", "\n", "            ", "os", ".", "remove", "(", "filepath", ")", "\n", "\n", "", "return", "rootpath", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor._download_file": [[96, 128], ["requests.get", "requests.get.headers.get", "print", "int", "open", "shutil.copyfileobj", "os.path.exists", "print", "open", "int", "time.time", "requests.get.iter_content", "uncompress.uncompressor.progress", "os.path.getsize", "print", "len", "f.write", "os.path.basename", "int", "uncompress.uncompressor.progress", "os.path.basename", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.progress", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.uncompress.uncompressor.progress"], ["", "def", "_download_file", "(", "self", ",", "url", ",", "savepath", ",", "print_progress", ")", ":", "\n", "        ", "if", "print_progress", ":", "\n", "            ", "print", "(", "\"Connecting to {}\"", ".", "format", "(", "url", ")", ")", "\n", "", "r", "=", "requests", ".", "get", "(", "url", ",", "stream", "=", "True", ",", "timeout", "=", "15", ")", "\n", "total_length", "=", "r", ".", "headers", ".", "get", "(", "'content-length'", ")", "\n", "\n", "if", "total_length", "is", "None", ":", "\n", "            ", "with", "open", "(", "savepath", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "shutil", ".", "copyfileobj", "(", "r", ".", "raw", ",", "f", ")", "\n", "", "", "else", ":", "\n", "            ", "total_length", "=", "int", "(", "total_length", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "savepath", ")", "and", "total_length", "==", "os", ".", "path", ".", "getsize", "(", "\n", "savepath", ")", ":", "\n", "                ", "print", "(", "\"{} already downloaded, skipping\"", ".", "format", "(", "\n", "os", ".", "path", ".", "basename", "(", "savepath", ")", ")", ")", "\n", "return", "\n", "", "with", "open", "(", "savepath", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "dl", "=", "0", "\n", "total_length", "=", "int", "(", "total_length", ")", "\n", "starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "print_progress", ":", "\n", "                    ", "print", "(", "\"Downloading %s\"", "%", "os", ".", "path", ".", "basename", "(", "savepath", ")", ")", "\n", "", "for", "data", "in", "r", ".", "iter_content", "(", "chunk_size", "=", "4096", ")", ":", "\n", "                    ", "dl", "+=", "len", "(", "data", ")", "\n", "f", ".", "write", "(", "data", ")", "\n", "if", "print_progress", ":", "\n", "                        ", "done", "=", "int", "(", "50", "*", "dl", "/", "total_length", ")", "\n", "self", ".", "progress", "(", "\n", "\"[%-50s] %.2f%%\"", "%", "\n", "(", "'='", "*", "done", ",", "float", "(", "100", "*", "dl", ")", "/", "total_length", ")", ")", "\n", "", "", "", "if", "print_progress", ":", "\n", "                ", "self", ".", "progress", "(", "\"[%-50s] %.2f%%\"", "%", "(", "'='", "*", "50", ",", "100", ")", ",", "end", "=", "True", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env._find_cuda_home": [[26, 53], ["os.environ.get", "os.environ.get", "subprocess.check_output().decode().rstrip", "os.path.dirname", "os.path.dirname", "subprocess.check_output().decode", "glob.glob", "os.path.exists", "len", "subprocess.check_output"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["\n", "\n", "def", "_find_cuda_home", "(", ")", ":", "\n", "    ", "'''Finds the CUDA install path. It refers to the implementation of\n    pytorch <https://github.com/pytorch/pytorch/blob/master/torch/utils/cpp_extension.py>.\n    '''", "\n", "# Guess #1", "\n", "cuda_home", "=", "os", ".", "environ", ".", "get", "(", "'CUDA_HOME'", ")", "or", "os", ".", "environ", ".", "get", "(", "'CUDA_PATH'", ")", "\n", "if", "cuda_home", "is", "None", ":", "\n", "# Guess #2", "\n", "        ", "try", ":", "\n", "            ", "which", "=", "'where'", "if", "IS_WINDOWS", "else", "'which'", "\n", "nvcc", "=", "subprocess", ".", "check_output", "(", "[", "which", ",", "\n", "'nvcc'", "]", ")", ".", "decode", "(", ")", ".", "rstrip", "(", "'\\r\\n'", ")", "\n", "cuda_home", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "dirname", "(", "nvcc", ")", ")", "\n", "", "except", "Exception", ":", "\n", "# Guess #3", "\n", "            ", "if", "IS_WINDOWS", ":", "\n", "                ", "cuda_homes", "=", "glob", ".", "glob", "(", "\n", "'C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v*.*'", ")", "\n", "if", "len", "(", "cuda_homes", ")", "==", "0", ":", "\n", "                    ", "cuda_home", "=", "''", "\n", "", "else", ":", "\n", "                    ", "cuda_home", "=", "cuda_homes", "[", "0", "]", "\n", "", "", "else", ":", "\n", "                ", "cuda_home", "=", "'/usr/local/cuda'", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "cuda_home", ")", ":", "\n", "                ", "cuda_home", "=", "None", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env._get_nvcc_info": [[55, 67], ["os.path.isdir", "os.path.join", "subprocess.check_output().decode", "subprocess.check_output().decode.strip().split", "subprocess.check_output", "subprocess.check_output().decode.strip"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["\n", "\n", "", "def", "_get_nvcc_info", "(", "cuda_home", ")", ":", "\n", "    ", "if", "cuda_home", "is", "not", "None", "and", "os", ".", "path", ".", "isdir", "(", "cuda_home", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "nvcc", "=", "os", ".", "path", ".", "join", "(", "cuda_home", ",", "'bin/nvcc'", ")", "\n", "nvcc", "=", "subprocess", ".", "check_output", "(", "\n", "\"{} -V\"", ".", "format", "(", "nvcc", ")", ",", "shell", "=", "True", ")", ".", "decode", "(", ")", "\n", "nvcc", "=", "nvcc", ".", "strip", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "-", "1", "]", "\n", "", "except", "subprocess", ".", "SubprocessError", ":", "\n", "            ", "nvcc", "=", "\"Not Available\"", "\n", "", "", "else", ":", "\n", "        ", "nvcc", "=", "\"Not Available\"", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env._get_gpu_info": [[69, 79], ["subprocess.check_output().decode().strip", "gpu_info.split.split", "range", "len", "subprocess.check_output().decode", "gpu_info[].split", "subprocess.check_output"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["\n", "\n", "", "def", "_get_gpu_info", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "gpu_info", "=", "subprocess", ".", "check_output", "(", "[", "'nvidia-smi'", ",", "\n", "'-L'", "]", ")", ".", "decode", "(", ")", ".", "strip", "(", ")", "\n", "gpu_info", "=", "gpu_info", ".", "split", "(", "'\\n'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "gpu_info", ")", ")", ":", "\n", "            ", "gpu_info", "[", "i", "]", "=", "' '", ".", "join", "(", "gpu_info", "[", "i", "]", ".", "split", "(", "' '", ")", "[", ":", "4", "]", ")", "\n", "", "", "except", ":", "\n", "        ", "gpu_info", "=", "' Can not get GPU information. Please make sure CUDA have been installed successfully.'", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env": [[81, 122], ["platform.platform", "sys.version.replace", "paddle.is_compiled_with_cuda", "sys_env._find_cuda_home", "sys_env._get_nvcc_info", "paddle.get_cudnn_version", "os.environ.get", "sys_env._get_gpu_info", "subprocess.check_output().decode", "str", "paddle.get_device", "subprocess.check_output().decode.strip().split", "str", "paddle.distributed.ParallelEnv", "subprocess.check_output", "subprocess.check_output().decode.strip"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env._find_cuda_home", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env._get_nvcc_info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env._get_gpu_info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["\n", "\n", "", "def", "get_sys_env", "(", ")", ":", "\n", "    ", "\"\"\"collect environment information\"\"\"", "\n", "env_info", "=", "{", "}", "\n", "env_info", "[", "'platform'", "]", "=", "platform", ".", "platform", "(", ")", "\n", "\n", "env_info", "[", "'Python'", "]", "=", "sys", ".", "version", ".", "replace", "(", "'\\n'", ",", "''", ")", "\n", "\n", "# TODO is_compiled_with_cuda() has not been moved", "\n", "compiled_with_cuda", "=", "paddle", ".", "is_compiled_with_cuda", "(", ")", "\n", "env_info", "[", "'Paddle compiled with cuda'", "]", "=", "compiled_with_cuda", "\n", "\n", "if", "compiled_with_cuda", ":", "\n", "        ", "cuda_home", "=", "_find_cuda_home", "(", ")", "\n", "env_info", "[", "'NVCC'", "]", "=", "_get_nvcc_info", "(", "cuda_home", ")", "\n", "# refer to https://github.com/PaddlePaddle/Paddle/blob/release/2.0-rc/paddle/fluid/platform/device_context.cc#L327", "\n", "v", "=", "paddle", ".", "get_cudnn_version", "(", ")", "\n", "v", "=", "str", "(", "v", "//", "1000", ")", "+", "'.'", "+", "str", "(", "v", "%", "1000", "//", "100", ")", "\n", "env_info", "[", "'cudnn'", "]", "=", "v", "\n", "if", "'gpu'", "in", "paddle", ".", "get_device", "(", ")", ":", "\n", "            ", "gpu_nums", "=", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "nranks", "\n", "", "else", ":", "\n", "            ", "gpu_nums", "=", "0", "\n", "", "env_info", "[", "'GPUs used'", "]", "=", "gpu_nums", "\n", "\n", "env_info", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "os", ".", "environ", ".", "get", "(", "\n", "'CUDA_VISIBLE_DEVICES'", ")", "\n", "if", "gpu_nums", "==", "0", ":", "\n", "            ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "''", "\n", "", "env_info", "[", "'GPU'", "]", "=", "_get_gpu_info", "(", ")", "\n", "\n", "", "try", ":", "\n", "        ", "gcc", "=", "subprocess", ".", "check_output", "(", "[", "'gcc'", ",", "'--version'", "]", ")", ".", "decode", "(", ")", "\n", "gcc", "=", "gcc", ".", "strip", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "0", "]", "\n", "env_info", "[", "'GCC'", "]", "=", "gcc", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "\n", "", "env_info", "[", "'PaddleSeg'", "]", "=", "paddleseg", ".", "__version__", "\n", "env_info", "[", "'PaddlePaddle'", "]", "=", "paddle", ".", "__version__", "\n", "env_info", "[", "'OpenCV'", "]", "=", "cv2", ".", "__version__", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.seg_env._get_user_home": [[28, 30], ["os.path.expanduser"], "function", ["None"], ["def", "_get_user_home", "(", ")", ":", "\n", "    ", "return", "os", ".", "path", ".", "expanduser", "(", "'~'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.seg_env._get_seg_home": [[32, 43], ["os.path.join", "os.path.exists", "seg_env._get_user_home", "os.path.isdir", "medicalseg.utils.logger.warning"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.seg_env._get_user_home", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.warning"], ["", "def", "_get_seg_home", "(", ")", ":", "\n", "    ", "if", "'SEG_HOME'", "in", "os", ".", "environ", ":", "\n", "        ", "home_path", "=", "os", ".", "environ", "[", "'SEG_HOME'", "]", "\n", "if", "os", ".", "path", ".", "exists", "(", "home_path", ")", ":", "\n", "            ", "if", "os", ".", "path", ".", "isdir", "(", "home_path", ")", ":", "\n", "                ", "return", "home_path", "\n", "", "else", ":", "\n", "                ", "logger", ".", "warning", "(", "'SEG_HOME {} is a file!'", ".", "format", "(", "home_path", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "home_path", "\n", "", "", "return", "os", ".", "path", ".", "join", "(", "_get_user_home", "(", ")", ",", "'.paddleseg'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.seg_env._get_sub_home": [[45, 50], ["os.path.join", "seg_env._get_seg_home", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.seg_env._get_seg_home"], ["", "def", "_get_sub_home", "(", "directory", ")", ":", "\n", "    ", "home", "=", "os", ".", "path", ".", "join", "(", "_get_seg_home", "(", ")", ",", "directory", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "home", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "home", ",", "exist_ok", "=", "True", ")", "\n", "", "return", "home", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.DomainAdaptation.train.parse_args": [[28, 114], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["# params of training", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "="]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.DomainAdaptation.train.main": [[116, 196], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "cvlibs.Config", "str", "paddleseg.utils.logger.info", "script.train.Trainer", "script.train.Trainer.train", "paddle.seed", "numpy.random.seed", "random.seed", "paddleseg.utils.logger.info", "RuntimeError", "datasets.SYNTHIADataset", "datasets.SYNTHIADataset", "datasets.CityDataset", "datasets.CityDataset", "NotImplementedError", "RuntimeError", "paddleseg.utils.get_sys_env.items", "datasets.GTA5Dataset", "datasets.GTA5Dataset", "NotImplementedError", "len", "ValueError", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], [")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "train_dataset", "=", "cfg", ".", "train_dataset", "\n", "if", "train_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "", "elif", "len", "(", "train_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of train_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "", "val_dataset", "=", "cfg", ".", "val_dataset", "if", "args", ".", "do_eval", "else", "None", "\n", "losses", "=", "cfg", ".", "loss", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.DomainAdaptation.val.get_test_config": [[30, 48], ["None"], "function", ["None"], ["test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n", "\n", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.DomainAdaptation.val.parse_args": [[50, 121], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--auc_roc'", ",", "\n", "dest", "=", "'add auc_roc metric'", ",", "\n", "help", "=", "'Whether to use auc_roc metric'", ",", "\n", "type", "=", "bool", ",", "\n", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.DomainAdaptation.val.main": [[123, 168], ["paddleseg.utils.get_sys_env", "paddle.set_device", "cvlibs.Config", "str", "paddleseg.utils.logger.info", "val.get_test_config", "script.val.evaluate", "RuntimeError", "datasets.CityDataset", "NotImplementedError", "len", "print", "range", "RuntimeError", "utils.load_entire_model", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "len", "len", "print", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.get_test_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "val_dataset", "=", "cfg", ".", "val_dataset", "\n", "if", "val_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The verification dataset is not specified in the configuration file.'", "\n", ")", "\n", "", "elif", "len", "(", "val_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of val_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.__init__": [[36, 59], ["models.EMA", "paddleseg.models.losses.CrossEntropyLoss", "paddleseg.models.losses.KLLoss", "paddleseg.models.losses.MSELoss", "paddleseg.models.losses.BCELoss", "paddleseg.models.losses.BCELoss", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "range", "range"], "methods", ["None"], ["default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train": [[60, 553], ["train.Trainer.model.train", "utils.load_ema_model", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DataLoader", "paddle.io.DataLoader", "paddle.io.DataLoader", "paddle.io.DataLoader", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DataLoader", "paddle.io.DataLoader", "paddle.io.DataLoader", "paddle.io.DataLoader", "len", "paddleseg.utils.TimeAverager", "paddleseg.utils.TimeAverager", "collections.deque", "time.time", "time.sleep", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddleseg.utils.logger.info", "paddleseg.utils.resume", "os.path.isdir", "os.path.exists", "os.makedirs", "paddle.distributed.fleet.init", "paddle.distributed.fleet.init", "paddle.distributed.fleet.init", "paddle.distributed.fleet.init", "paddle.distributed.fleet.distributed_optimizer", "paddle.distributed.fleet.distributed_optimizer", "paddle.distributed.fleet.distributed_optimizer", "paddle.distributed.fleet.distributed_optimizer", "paddle.distributed.fleet.distributed_model", "paddle.distributed.fleet.distributed_model", "paddle.distributed.fleet.distributed_model", "paddle.distributed.fleet.distributed_model", "LogWriter", "enumerate", "train.Trainer.ema.update_buffer", "paddle.flops", "paddle.flops", "paddle.flops", "paddle.flops", "LogWriter.close", "os.remove", "zip", "paddleseg.utils.TimeAverager.record", "data_tgt[].astype", "data_src[].astype", "data_src[].astype", "data_tgt[].astype", "train.Trainer.celoss", "utils.augmentation.get_augmentation", "utils.augmentation.augment", "images_tgt_aug.cuda.cuda.cuda", "labels_tgt_aug.cuda.cuda.cuda", "utils.augmentation.augment", "labels_tgt_aug_aux.cuda.cuda.cuda", "sum.backward", "sum", "paddle.distributed.fleet.distributed_optimizer.step", "paddle.distributed.fleet.distributed_optimizer.step", "train.Trainer.ema.update_params", "x.numel", "int", "paddle.distributed.fleet.distributed_model.", "paddle.distributed.fleet.distributed_model.", "train.Trainer.model", "train.Trainer.celoss", "train.Trainer.numpy", "loss_src_seg_aux.numpy", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.softmax", "paddle.softmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.softmax", "paddle.softmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "train.Trainer.bceloss_src", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.distributed.fleet.distributed_model.", "paddle.distributed.fleet.distributed_model.", "train.Trainer.model", "train.Trainer.celoss", "loss_tgt_aug_main.numpy", "loss_tgt_aug_aux.numpy", "paddle.concat().detach", "paddle.concat().detach", "paddle.concat().detach", "paddle.concat().detach", "train.Trainer.model.fusion", "train.Trainer.celoss", "paddle.concat().detach", "paddle.concat().detach", "paddle.concat().detach", "paddle.concat().detach", "train.Trainer.model.fusion", "train.Trainer.celoss", "range", "loss_dict.values", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.distributed.fleet.distributed_optimizer.get_lr", "paddle.distributed.fleet.distributed_optimizer.get_lr", "isinstance", "isinstance", "train.Trainer.model.clear_gradients", "paddleseg.utils.TimeAverager.record", "time.time", "time.time", "paddle.distributed.fleet.distributed_model.", "paddle.distributed.fleet.distributed_model.", "train.Trainer.model", "paddle.softmax.detach", "pred_c.detach", "logits_list_src[].detach().clone", "paddleseg.utils.logger.info", "paddleseg.mask_to_binary_edge", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "train.Trainer.bceloss_tgt", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros.numpy", "paddle.zeros.numpy", "train.Trainer.numpy", "images_tgt.cpu", "paddle.argmax.detach().cpu", "paddle.argmax.detach().cpu", "images_tgt.cpu", "paddle.argmax.detach().cpu", "paddle.argmax.detach().cpu", "train.Trainer.celoss", "train.Trainer.numpy", "train.Trainer.numpy", "paddle.argmax().unsqueeze", "paddle.argmax().unsqueeze", "paddle.argmax().unsqueeze", "paddle.argmax().unsqueeze", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "labels_tgt_aug.cuda.cuda.unsqueeze", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "center_src_s.append", "center_tgt_s.append", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "train.Trainer.mseloss", "train.Trainer.mseloss", "item.detach().clone", "item.detach().clone", "lr_sche.step", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "utils.save_edge", "utils.save_edge", "utils.save_edge", "utils.save_edge", "utils.save_edge", "utils.save_edge", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.calculate_eta", "paddleseg.utils.logger.info", "paddleseg.utils.TimeAverager.reset", "paddleseg.utils.TimeAverager.reset", "train.Trainer.ema.apply_shadow", "train.Trainer.ema.model.eval", "script.val.evaluate", "train.Trainer.ema.restore", "train.Trainer.model.train", "os.path.join", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "collections.deque.append", "functools.reduce", "paddle.argmax.detach().clone().numpy", "paddle.argmax.detach().clone().numpy", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "train.Trainer.klloss", "train.Trainer.klloss", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor().detach().clone", "paddle.to_tensor().detach().clone", "paddle.to_tensor().detach().clone", "paddle.to_tensor().detach().clone", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor().detach().clone", "paddle.to_tensor().detach().clone", "paddle.to_tensor().detach().clone", "paddle.to_tensor().detach().clone", "train.Trainer.numpy", "train.Trainer.numpy", "loss_intra_relate.numpy", "logits_list_tgt_aug[].detach().clone", "src_edge_logit.astype", "tgt_edge_logit.astype", "time.time", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "script.val.evaluate", "paddleseg.utils.logger.info", "os.path.isdir", "os.makedirs", "train.Trainer.model.state_dict", "os.path.join", "os.path.join", "paddle.distributed.fleet.distributed_optimizer.state_dict", "paddle.distributed.fleet.distributed_optimizer.state_dict", "os.path.join", "len", "collections.deque.popleft", "shutil.rmtree", "paddleseg.utils.logger.info", "LogWriter.add_scalar", "LogWriter.add_scalar", "logits_list_src[].detach", "paddle.argmax.detach", "paddle.argmax.detach", "paddle.argmax.detach", "paddle.argmax.detach", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.argmax", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "item.detach", "item.detach", "paddle.argmax.max", "paddle.argmax.max", "paddle.argmax.min", "paddle.argmax.min", "max", "min", "functools.reduce", "paddleseg.utils.TimeAverager.get_ips_average", "len", "loss_dict.items", "os.path.join", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "LogWriter.add_scalar", "LogWriter.add_scalar", "paddle.argmax.detach().clone", "paddle.argmax.detach().clone", "logits_list_src[].detach().clone", "paddle.to_tensor().detach", "paddle.to_tensor().detach", "paddle.to_tensor().detach", "paddle.to_tensor().detach", "paddle.to_tensor().detach", "paddle.to_tensor().detach", "paddle.to_tensor().detach", "paddle.to_tensor().detach", "logits_list_tgt_aug[].detach", "LogWriter.add_scalar", "train.Trainer.model.state_dict", "os.path.join", "paddle.argmax.detach", "paddle.argmax.detach", "logits_list_src[].detach", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_ema_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.resume", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.update_buffer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.augmentation.get_augmentation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.augmentation.augment", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.augmentation.augment", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.update_params", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.fusion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.model.human_matting.HumanMatting.fusion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.mask_to_binary_edge", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_edge", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_edge", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_edge", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_edge", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_edge", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_edge", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.calculate_eta", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.apply_shadow", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.models.ema.EMA.restore", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_ips_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--precision\"", ",", "\n", "default", "=", "\"fp32\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fp32\"", ",", "\"fp16\"", "]", ",", "\n", "help", "=", "\"Use AMP (Auto mixed precision) if precision='fp16'. If precision='fp32', the training is normal.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--amp_level\"", ",", "\n", "default", "=", "\"O1\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"O1\"", ",", "\"O2\"", "]", ",", "\n", "help", "=", "\"Auto mixed precision level. Accepted values are \u201cO1\u201d and \u201cO2\u201d: O1 represent mixed precision, the input \\\n                data type of each operator will be casted by white_list and black_list; O2 represent Pure fp16, all operators \\\n                parameters and input data will be casted to fp16, except operators in black_list, don\u2019t support fp16 kernel \\\n                and batchnorm. Default is O1(amp)\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of train profiler. If profiler_options is not None, the train '", "'profiler is enabled. Refer to the paddleseg/utils/train_profiler.py for details.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "train_dataset", "=", "cfg", ".", "train_dataset", "\n", "if", "train_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "", "elif", "len", "(", "train_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of train_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "", "val_dataset", "=", "cfg", ".", "val_dataset", "if", "args", ".", "do_eval", "else", "None", "\n", "losses", "=", "cfg", ".", "loss", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "config_check", "(", "cfg", ",", "train_dataset", "=", "train_dataset", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "if", "place", "==", "'gpu'", "and", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "nranks", ">", "1", ":", "\n", "# convert bn to sync_bn", "\n", "        ", "cfg", ".", "_model", "=", "paddle", ".", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "cfg", ".", "model", ")", "\n", "\n", "", "train", "(", "\n", "cfg", ".", "model", ",", "\n", "train_dataset", ",", "\n", "val_dataset", "=", "val_dataset", ",", "\n", "optimizer", "=", "cfg", ".", "optimizer", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "iters", "=", "cfg", ".", "iters", ",", "\n", "batch_size", "=", "cfg", ".", "batch_size", ",", "\n", "resume_model", "=", "args", ".", "resume_model", ",", "\n", "save_interval", "=", "args", ".", "save_interval", ",", "\n", "log_iters", "=", "args", ".", "log_iters", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "use_vdl", "=", "args", ".", "use_vdl", ",", "\n", "losses", "=", "losses", ",", "\n", "keep_checkpoint_max", "=", "args", ".", "keep_checkpoint_max", ",", "\n", "test_config", "=", "cfg", ".", "test_config", ",", "\n", "precision", "=", "args", ".", "precision", ",", "\n", "amp_level", "=", "args", ".", "amp_level", ",", "\n", "profiler_options", "=", "args", ".", "profiler_options", ",", "\n", "to_static_training", "=", "cfg", ".", "to_static_training", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "main", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.__init__": [[44, 49], ["numpy.zeros"], "methods", ["None"], ["\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.pixel_accuracy": [[50, 59], ["numpy.sum", "print", "numpy.diag().sum", "val.Eval.confusion_matrix.sum", "numpy.diag"], "methods", ["None"], ["dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.mean_pixel_accuracy": [[60, 73], ["numpy.nanmean", "numpy.diag", "val.Eval.confusion_matrix.sum", "numpy.nanmean", "numpy.nanmean", "numpy.nanmean", "numpy.nanmean"], "methods", ["None"], ["\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.mean_iou": [[74, 89], ["numpy.nanmean", "numpy.diag", "numpy.nanmean", "numpy.nanmean", "numpy.nanmean", "numpy.nanmean", "numpy.diag", "numpy.sum", "numpy.sum"], "methods", ["None"], ["parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.fwiou": [[90, 116], ["numpy.multiply", "numpy.sum", "numpy.diag", "numpy.sum", "numpy.sum", "numpy.diag", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.isnan", "numpy.isnan", "numpy.isnan", "numpy.isnan", "numpy.isnan"], "methods", ["None"], ["action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--auc_roc'", ",", "\n", "dest", "=", "'add auc_roc metric'", ",", "\n", "help", "=", "'Whether to use auc_roc metric'", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.mean_precision": [[117, 130], ["numpy.nanmean", "numpy.diag", "val.Eval.confusion_matrix.sum", "numpy.nanmean", "numpy.nanmean", "numpy.nanmean", "numpy.nanmean"], "methods", ["None"], ["type", "=", "bool", ",", "\n", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--device'", ",", "\n", "dest", "=", "'device'", ",", "\n", "help", "=", "'Device place to be set, which can be GPU, XPU, NPU, CPU'", ",", "\n", "default", "=", "'gpu'", ",", "\n", "type", "=", "str", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "main", "(", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.print_every_class_eval": [[131, 159], ["log_fn", "range", "numpy.diag", "numpy.diag", "val.Eval.confusion_matrix.sum", "numpy.diag", "val.Eval.confusion_matrix.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "len", "log_fn", "numpy.diag", "str", "str", "str", "str", "str", "numpy.sum", "numpy.sum", "numpy.isnan", "round", "numpy.isnan", "round", "numpy.isnan", "round", "numpy.isnan", "round", "numpy.isnan", "round"], "methods", ["None"], ["    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "if", "args", ".", "device", "==", "'gpu'", "and", "env_info", "[", "\n", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "'GPUs used'", "]", ":", "\n", "        ", "place", "=", "'gpu'", "\n", "", "elif", "args", ".", "device", "==", "'xpu'", "and", "paddle", ".", "is_compiled_with_xpu", "(", ")", ":", "\n", "        ", "place", "=", "'xpu'", "\n", "", "elif", "args", ".", "device", "==", "'npu'", "and", "paddle", ".", "is_compiled_with_npu", "(", ")", ":", "\n", "        ", "place", "=", "'npu'", "\n", "", "else", ":", "\n", "        ", "place", "=", "'cpu'", "\n", "\n", "", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "val_dataset", "=", "cfg", ".", "val_dataset", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.__generate_matrix": [[161, 168], ["numpy.bincount", "numpy.bincount.reshape", "gt_image[].astype"], "methods", ["None"], ["        ", "raise", "RuntimeError", "(", "\n", "'The verification dataset is not specified in the configuration file.'", "\n", ")", "\n", "", "elif", "len", "(", "val_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of val_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.add_batch": [[169, 173], ["val.Eval.__generate_matrix"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.__generate_matrix"], ["", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset": [[174, 176], ["numpy.zeros"], "methods", ["None"], ["model", "=", "cfg", ".", "model", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "utils", ".", "load_entire_model", "(", "model", ",", "args", ".", "model_path", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.evaluate": [[178, 266], ["paddleseg.utils.logger.info", "val.Eval", "Eval.reset", "model.eval", "paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DataLoader", "paddle.io.DataLoader", "paddleseg.utils.progbar.Progbar", "paddleseg.utils.TimeAverager", "paddleseg.utils.TimeAverager", "time.time", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.no_grad", "paddle.no_grad", "enumerate", "Eval.pixel_accuracy", "Eval.mean_pixel_accuracy", "Eval.mean_iou", "Eval.fwiou", "Eval.mean_precision", "paddleseg.utils.logger.info", "paddle.distributed.parallel.parallel_helper._is_parallel_ctx_initialized", "paddle.distributed.parallel.parallel_helper._is_parallel_ctx_initialized", "paddle.distributed.init_parallel_env", "paddle.distributed.init_parallel_env", "len", "paddleseg.utils.TimeAverager.record", "y.astype.astype", "model", "y.astype.squeeze().numpy", "numpy.argmax", "Eval.add_batch", "paddleseg.utils.TimeAverager.record", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.TimeAverager.reset", "paddleseg.utils.TimeAverager.reset", "time.time", "len", "model.numpy", "utils.save_imgs", "progbar.Progbar.update", "time.time", "y.astype.squeeze", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.pixel_accuracy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.mean_pixel_accuracy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.mean_iou", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.fwiou", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.mean_precision", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.add_batch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.save_imgs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], ["\n", "", "test_config", "=", "get_test_config", "(", "cfg", ",", "args", ")", "\n", "config_check", "(", "cfg", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "evaluate", "(", "model", ",", "val_dataset", ",", "num_workers", "=", "args", ".", "num_workers", ",", "**", "test_config", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "main", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.__init__": [[35, 69], ["inference.clicker.Clicker", "util.LabelList", "logging.getLogger"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "predictor_params", ":", "dict", "=", "None", ",", "\n", "prob_thresh", ":", "float", "=", "0.5", ",", ")", ":", "\n", "        ", "\"\"\"\u521d\u59cb\u5316\u63a7\u5236\u5668.\n\n        Parameters\n        ----------\n        predictor_params : dict\n            \u63a8\u7406\u5668\u914d\u7f6e\n        prob_thresh : float\n            \u533a\u5206\u524d\u666f\u548c\u80cc\u666f\u7ed3\u679c\u7684\u9608\u503c\n\n        \"\"\"", "\n", "self", ".", "predictor_params", "=", "predictor_params", "\n", "self", ".", "prob_thresh", "=", "prob_thresh", "\n", "self", ".", "model", "=", "None", "\n", "self", ".", "image", "=", "None", "\n", "self", ".", "rawImage", "=", "None", "\n", "self", ".", "predictor", "=", "None", "\n", "self", ".", "clicker", "=", "clicker", ".", "Clicker", "(", ")", "\n", "self", ".", "states", "=", "[", "]", "\n", "self", ".", "probs_history", "=", "[", "]", "\n", "self", ".", "polygons", "=", "[", "]", "\n", "\n", "# \u7528\u4e8eredo", "\n", "self", ".", "undo_states", "=", "[", "]", "\n", "self", ".", "undo_probs_history", "=", "[", "]", "\n", "\n", "self", ".", "curr_label_number", "=", "0", "\n", "self", ".", "_result_mask", "=", "None", "\n", "self", ".", "labelList", "=", "LabelList", "(", ")", "\n", "self", ".", "lccFilter", "=", "False", "\n", "self", ".", "log", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.filterLargestCC": [[70, 81], ["isinstance"], "methods", ["None"], ["", "def", "filterLargestCC", "(", "self", ",", "do_filter", ":", "bool", ")", ":", "\n", "        ", "\"\"\"\u8bbe\u7f6e\u662f\u5426\u53ea\u4fdd\u7559\u63a8\u7406\u7ed3\u679c\u4e2d\u7684\u6700\u5927\u8054\u901a\u5757\n\n        Parameters\n        ----------\n        do_filter : bool\n            \u662f\u5426\u53ea\u4fdd\u5b58\u63a8\u7406\u7ed3\u679c\u4e2d\u7684\u6700\u5927\u8054\u901a\u5757\n        \"\"\"", "\n", "if", "not", "isinstance", "(", "do_filter", ",", "bool", ")", ":", "\n", "            ", "return", "\n", "", "self", ".", "lccFilter", "=", "do_filter", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setModel": [[82, 119], ["param_path.replace", "eiseg.logger.info", "time.time", "eiseg.logger.info", "os.exists", "Exception", "paddle.device.is_compiled_with_cuda", "models.EISegModel", "controller.InteractiveController.reset_predictor", "str", "time.time"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.reset_predictor"], ["", "def", "setModel", "(", "self", ",", "param_path", "=", "None", ",", "use_gpu", "=", "None", ")", ":", "\n", "        ", "\"\"\"\u8bbe\u7f6e\u63a8\u7406\u5176\u6a21\u578b.\n\n        Parameters\n        ----------\n        params_path : str\n            \u6a21\u578b\u8def\u5f84\n\n        use_gpu : bool\n            None:\u68c0\u6d4b\uff0c\u6839\u636epaddle\u7248\u672c\u5224\u65ad\n            bool:\u6309\u7167\u6307\u5b9a\u662f\u5426\u5f00\u542fGPU\n\n        Returns\n        -------\n        bool, str\n            \u662f\u5426\u6210\u529f\u8bbe\u7f6e\u6a21\u578b, \u5931\u8d25\u539f\u56e0\n\n        \"\"\"", "\n", "if", "param_path", "is", "not", "None", ":", "\n", "            ", "model_path", "=", "param_path", ".", "replace", "(", "\".pdiparams\"", ",", "\".pdmodel\"", ")", "\n", "if", "not", "osp", ".", "exists", "(", "model_path", ")", ":", "\n", "                ", "raise", "Exception", "(", "f\"\u672a\u5728 {model_path} \u627e\u5230\u6a21\u578b\u6587\u4ef6\"", ")", "\n", "", "if", "use_gpu", "is", "None", ":", "\n", "                ", "if", "paddle", ".", "device", ".", "is_compiled_with_cuda", "(", "\n", ")", ":", "# TODO: \u53ef\u4ee5\u4f7f\u7528GPU\u5374\u8fd4\u56deFalse", "\n", "                    ", "use_gpu", "=", "True", "\n", "", "else", ":", "\n", "                    ", "use_gpu", "=", "False", "\n", "", "", "logger", ".", "info", "(", "f\"User paddle compiled with gpu: use_gpu {use_gpu}\"", ")", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "try", ":", "\n", "                ", "self", ".", "model", "=", "EISegModel", "(", "model_path", ",", "param_path", ",", "use_gpu", ")", "\n", "self", ".", "reset_predictor", "(", ")", "# \u5373\u523b\u751f\u6548", "\n", "", "except", "KeyError", "as", "e", ":", "\n", "                ", "return", "False", ",", "str", "(", "e", ")", "\n", "", "logger", ".", "info", "(", "f\"Load model {model_path} took {time.time() - tic}\"", ")", "\n", "return", "True", ",", "\"\u6a21\u578b\u8bbe\u7f6e\u6210\u529f\"", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setImage": [[120, 133], ["numpy.zeros", "controller.InteractiveController.resetLastObject"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.resetLastObject"], ["", "", "def", "setImage", "(", "self", ",", "image", ":", "np", ".", "array", ")", ":", "\n", "        ", "\"\"\"\u8bbe\u7f6e\u5f53\u524d\u6807\u6ce8\u7684\u56fe\u7247\n\n        Parameters\n        ----------\n        image : np.array\n            \u5f53\u524d\u6807\u6ce8\u7684\u56fe\u7247\n\n        \"\"\"", "\n", "if", "self", ".", "model", "is", "not", "None", ":", "\n", "            ", "self", ".", "image", "=", "image", "\n", "self", ".", "_result_mask", "=", "np", ".", "zeros", "(", "image", ".", "shape", "[", ":", "2", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "self", ".", "resetLastObject", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setLabelList": [[135, 161], ["controller.InteractiveController.labelList.clear", "json.loads", "controller.InteractiveController.labelList.add"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "", "def", "setLabelList", "(", "self", ",", "labelList", ":", "json", ")", ":", "\n", "        ", "\"\"\"\u8bbe\u7f6e\u6807\u7b7e\u5217\u8868\uff0c\u4f1a\u8986\u76d6\u5df2\u6709\u7684\u6807\u7b7e\u5217\u8868\n\n        Parameters\n        ----------\n        labelList : json\n            \u6807\u7b7e\u5217\u8868\u683c\u5f0f\u4e3a\n            {\n                {\n                    \"idx\" : int         (like 0 or 1 or 2)\n                    \"name\" : str        (like \"car\"\u3000or \"airplan\")\n                    \"color\" : list      (like [255, 0, 0])\n                },\n                ...\n            }\n\n        Returns\n        -------\n        type\n            Description of returned object.\n\n        \"\"\"", "\n", "self", ".", "labelList", ".", "clear", "(", ")", "\n", "labels", "=", "json", ".", "loads", "(", "labelList", ")", "\n", "for", "lab", "in", "labels", ":", "\n", "            ", "self", ".", "labelList", ".", "add", "(", "lab", "[", "\"id\"", "]", ",", "lab", "[", "\"name\"", "]", ",", "lab", "[", "\"color\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.addLabel": [[162, 164], ["controller.InteractiveController.labelList.add"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add"], ["", "", "def", "addLabel", "(", "self", ",", "id", ":", "int", ",", "name", ":", "str", ",", "color", ":", "list", ")", ":", "\n", "        ", "self", ".", "labelList", ".", "add", "(", "id", ",", "name", ",", "color", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.delLabel": [[165, 167], ["controller.InteractiveController.labelList.remove"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove"], ["", "def", "delLabel", "(", "self", ",", "id", ":", "int", ")", ":", "\n", "        ", "self", ".", "labelList", ".", "remove", "(", "id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.clearLabel": [[168, 170], ["controller.InteractiveController.labelList.clear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear"], ["", "def", "clearLabel", "(", "self", ")", ":", "\n", "        ", "self", ".", "labelList", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.importLabel": [[171, 173], ["controller.InteractiveController.labelList.importLabel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.importLabel"], ["", "def", "importLabel", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "labelList", ".", "importLabel", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.exportLabel": [[174, 176], ["controller.InteractiveController.labelList.exportLabel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.exportLabel"], ["", "def", "exportLabel", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "labelList", ".", "exportLabel", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.addClick": [[178, 230], ["inference.clicker.Click", "controller.InteractiveController.clicker.add_click", "controller.InteractiveController.predictor.get_prediction", "controller.InteractiveController.states.append", "controller.InteractiveController.inImage", "len", "controller.InteractiveController.states.append", "controller.InteractiveController.probs_history.append", "controller.InteractiveController.probs_history.append", "controller.InteractiveController.clicker.get_state", "controller.InteractiveController.predictor.get_states", "controller.InteractiveController.clicker.get_state", "controller.InteractiveController.predictor.get_states", "numpy.zeros_like"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.add_click", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.get_prediction", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.inImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.get_state", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.get_states", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.get_state", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.get_states"], ["", "def", "addClick", "(", "self", ",", "x", ":", "int", ",", "y", ":", "int", ",", "is_positive", ":", "bool", ")", ":", "\n", "        ", "\"\"\"\u6dfb\u52a0\u4e00\u4e2a\u70b9\u5e76\u8fd0\u884c\u63a8\u7406\uff0c\u4fdd\u5b58\u5386\u53f2\u7528\u4e8eundo\n\n        Parameters\n        ----------\n        x : int\n            \u70b9\u51fb\u7684\u6a2a\u5750\u6807\n        y : int\n            \u70b9\u51fb\u7684\u7eb5\u5750\u6807\n        is_positive : bool\n            \u662f\u5426\u70b9\u7684\u662f\u6b63\u70b9\n\n        Returns\n        -------\n        bool, str\n            \u70b9\u51fb\u662f\u5426\u6dfb\u52a0\u6210\u529f, \u5931\u8d25\u539f\u56e0\n\n        \"\"\"", "\n", "\n", "# 1. \u786e\u5b9a\u53ef\u4ee5\u70b9", "\n", "if", "not", "self", ".", "inImage", "(", "x", ",", "y", ")", ":", "\n", "            ", "return", "False", ",", "\"\u70b9\u51fb\u8d8a\u754c\"", "\n", "", "if", "not", "self", ".", "modelSet", ":", "\n", "            ", "return", "False", ",", "\"\u672a\u52a0\u8f7d\u6a21\u578b\"", "\n", "", "if", "not", "self", ".", "imageSet", ":", "\n", "            ", "return", "False", ",", "\"\u56fe\u50cf\u672a\u8bbe\u7f6e\"", "\n", "\n", "", "if", "len", "(", "self", ".", "states", ")", "==", "0", ":", "# \u4fdd\u5b58\u4e00\u4e2a\u7a7a\u72b6\u6001", "\n", "            ", "self", ".", "states", ".", "append", "(", "{", "\n", "\"clicker\"", ":", "self", ".", "clicker", ".", "get_state", "(", ")", ",", "\n", "\"predictor\"", ":", "self", ".", "predictor", ".", "get_states", "(", ")", ",", "\n", "}", ")", "\n", "\n", "# 2. \u6dfb\u52a0\u70b9\u51fb\uff0c\u8dd1\u63a8\u7406", "\n", "", "click", "=", "clicker", ".", "Click", "(", "is_positive", "=", "is_positive", ",", "coords", "=", "(", "y", ",", "x", ")", ")", "\n", "self", ".", "clicker", ".", "add_click", "(", "click", ")", "\n", "pred", "=", "self", ".", "predictor", ".", "get_prediction", "(", "self", ".", "clicker", ")", "\n", "\n", "# 3. \u4fdd\u5b58\u72b6\u6001", "\n", "self", ".", "states", ".", "append", "(", "{", "\n", "\"clicker\"", ":", "self", ".", "clicker", ".", "get_state", "(", ")", ",", "\n", "\"predictor\"", ":", "self", ".", "predictor", ".", "get_states", "(", ")", ",", "\n", "}", ")", "\n", "if", "self", ".", "probs_history", ":", "\n", "            ", "self", ".", "probs_history", ".", "append", "(", "(", "self", ".", "probs_history", "[", "-", "1", "]", "[", "1", "]", ",", "pred", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "probs_history", ".", "append", "(", "(", "np", ".", "zeros_like", "(", "pred", ")", ",", "pred", ")", ")", "\n", "\n", "# \u70b9\u51fb\u4e4b\u540e\u5c31\u4e0d\u80fd\u63a5\u7740\u4e4b\u524d\u7684\u5386\u53f2redo\u4e86", "\n", "", "self", ".", "undo_states", "=", "[", "]", "\n", "self", ".", "undo_probs_history", "=", "[", "]", "\n", "return", "True", ",", "\"\u70b9\u51fb\u6dfb\u52a0\u6210\u529f\"", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.undoClick": [[231, 243], ["controller.InteractiveController.undo_states.append", "controller.InteractiveController.clicker.set_state", "controller.InteractiveController.predictor.set_states", "controller.InteractiveController.undo_probs_history.append", "len", "controller.InteractiveController.states.pop", "controller.InteractiveController.probs_history.pop", "controller.InteractiveController.reset_init_mask"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.set_state", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.set_states", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.reset_init_mask"], ["", "def", "undoClick", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        undo\u4e00\u6b65\u70b9\u51fb\n        \"\"\"", "\n", "if", "len", "(", "self", ".", "states", ")", "<=", "1", ":", "# == 1\u5c31\u53ea\u5269\u4e0b\u4e00\u4e2a\u7a7a\u72b6\u6001\u4e86\uff0c\u4e0d\u7528\u518d\u9000", "\n", "            ", "return", "\n", "", "self", ".", "undo_states", ".", "append", "(", "self", ".", "states", ".", "pop", "(", ")", ")", "\n", "self", ".", "clicker", ".", "set_state", "(", "self", ".", "states", "[", "-", "1", "]", "[", "\"clicker\"", "]", ")", "\n", "self", ".", "predictor", ".", "set_states", "(", "self", ".", "states", "[", "-", "1", "]", "[", "\"predictor\"", "]", ")", "\n", "self", ".", "undo_probs_history", ".", "append", "(", "self", ".", "probs_history", ".", "pop", "(", ")", ")", "\n", "if", "not", "self", ".", "probs_history", ":", "\n", "            ", "self", ".", "reset_init_mask", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.redoClick": [[244, 256], ["len", "len", "controller.InteractiveController.undo_states.pop", "controller.InteractiveController.states.append", "controller.InteractiveController.clicker.set_state", "controller.InteractiveController.predictor.set_states", "controller.InteractiveController.probs_history.append", "controller.InteractiveController.undo_probs_history.pop"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.set_state", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.set_states", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "redoClick", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        redo\u4e00\u6b65\u70b9\u51fb\n        \"\"\"", "\n", "if", "len", "(", "self", ".", "undo_states", ")", "==", "0", ":", "# \u5982\u679c\u8fd8\u6ca1\u64a4\u9500\u8fc7", "\n", "            ", "return", "\n", "", "if", "len", "(", "self", ".", "undo_probs_history", ")", ">=", "1", ":", "\n", "            ", "next_state", "=", "self", ".", "undo_states", ".", "pop", "(", ")", "\n", "self", ".", "states", ".", "append", "(", "next_state", ")", "\n", "self", ".", "clicker", ".", "set_state", "(", "next_state", "[", "\"clicker\"", "]", ")", "\n", "self", ".", "predictor", ".", "set_states", "(", "next_state", "[", "\"predictor\"", "]", ")", "\n", "self", ".", "probs_history", ".", "append", "(", "self", ".", "undo_probs_history", ".", "pop", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.finishObject": [[257, 274], ["util.get_polygon", "controller.InteractiveController.getLargestCC", "controller.InteractiveController.resetLastObject", "controller.InteractiveController.polygons.append", "controller.InteractiveController.astype"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.get_polygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.getLargestCC", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.resetLastObject", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "finishObject", "(", "self", ",", "building", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        \u7ed3\u675f\u5f53\u524d\u7269\u4f53\u6807\u6ce8\uff0c\u51c6\u5907\u6807\u4e0b\u4e00\u4e2a\n        \"\"\"", "\n", "object_prob", "=", "self", ".", "current_object_prob", "\n", "if", "object_prob", "is", "None", ":", "\n", "            ", "return", "None", ",", "None", "\n", "", "object_mask", "=", "object_prob", ">", "self", ".", "prob_thresh", "\n", "if", "self", ".", "lccFilter", ":", "\n", "            ", "object_mask", "=", "self", ".", "getLargestCC", "(", "object_mask", ")", "\n", "", "polygon", "=", "util", ".", "get_polygon", "(", "\n", "(", "object_mask", ".", "astype", "(", "np", ".", "uint8", ")", "*", "255", ")", ",", "building", "=", "building", ")", "\n", "if", "polygon", "is", "not", "None", ":", "\n", "            ", "self", ".", "_result_mask", "[", "object_mask", "]", "=", "self", ".", "curr_label_number", "\n", "self", ".", "resetLastObject", "(", ")", "\n", "self", ".", "polygons", ".", "append", "(", "[", "self", ".", "curr_label_number", ",", "polygon", "]", ")", "\n", "", "return", "object_mask", ",", "polygon", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.getPolygon": [[276, 278], ["None"], "methods", ["None"], ["", "def", "getPolygon", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "polygon", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setPolygon": [[279, 281], ["None"], "methods", ["None"], ["", "def", "setPolygon", "(", "self", ",", "polygon", ")", ":", "\n", "        ", "self", ".", "polygon", "=", "polygon", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.getMask": [[283, 290], ["numpy.zeros", "numpy.int32", "cv2.fillPoly", "numpy.array"], "methods", ["None"], ["", "def", "getMask", "(", "self", ")", ":", "\n", "        ", "s", "=", "self", ".", "imgShape", "\n", "img", "=", "np", ".", "zeros", "(", "[", "s", "[", "0", "]", ",", "s", "[", "1", "]", "]", ")", "\n", "for", "poly", "in", "self", ".", "polygons", ":", "\n", "            ", "pts", "=", "np", ".", "int32", "(", "[", "np", ".", "array", "(", "poly", "[", "1", "]", ")", "]", ")", "\n", "cv2", ".", "fillPoly", "(", "img", ",", "pts", "=", "pts", ",", "color", "=", "poly", "[", "0", "]", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setCurrLabelIdx": [[291, 295], ["isinstance"], "methods", ["None"], ["", "def", "setCurrLabelIdx", "(", "self", ",", "number", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "number", ",", "int", ")", ":", "\n", "            ", "return", "False", "\n", "", "self", ".", "curr_label_number", "=", "number", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.resetLastObject": [[296, 310], ["controller.InteractiveController.clicker.reset_clicks", "controller.InteractiveController.reset_predictor", "controller.InteractiveController.reset_init_mask"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.reset_clicks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.reset_predictor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.reset_init_mask"], ["", "def", "resetLastObject", "(", "self", ",", "update_image", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        \u91cd\u7f6e\u63a7\u5236\u5668\u72b6\u6001\n        Parameters\n            update_image(bool): \u662f\u5426\u66f4\u65b0\u56fe\u50cf\n        \"\"\"", "\n", "self", ".", "states", "=", "[", "]", "\n", "self", ".", "probs_history", "=", "[", "]", "\n", "self", ".", "undo_states", "=", "[", "]", "\n", "self", ".", "undo_probs_history", "=", "[", "]", "\n", "# self.current_object_prob = None", "\n", "self", ".", "clicker", ".", "reset_clicks", "(", ")", "\n", "self", ".", "reset_predictor", "(", ")", "\n", "self", ".", "reset_init_mask", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.reset_predictor": [[311, 324], ["inference.predictor.get_predictor", "controller.InteractiveController.predictor.set_input_image"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.__init__.get_predictor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.set_input_image"], ["", "def", "reset_predictor", "(", "self", ",", "predictor_params", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        \u91cd\u7f6e\u63a8\u7406\u5668\uff0c\u53ef\u4ee5\u6362\u63a8\u7406\u914d\u7f6e\n        Parameters\n            predictor_params(dict): \u63a8\u7406\u914d\u7f6e\n        \"\"\"", "\n", "if", "predictor_params", "is", "not", "None", ":", "\n", "            ", "self", ".", "predictor_params", "=", "predictor_params", "\n", "", "if", "self", ".", "model", ".", "model", ":", "\n", "            ", "self", ".", "predictor", "=", "get_predictor", "(", "self", ".", "model", ".", "model", ",", "\n", "**", "self", ".", "predictor_params", ")", "\n", "if", "self", ".", "image", "is", "not", "None", ":", "\n", "                ", "self", ".", "predictor", ".", "set_input_image", "(", "self", ".", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.reset_init_mask": [[325, 327], ["None"], "methods", ["None"], ["", "", "", "def", "reset_init_mask", "(", "self", ")", ":", "\n", "        ", "self", ".", "clicker", ".", "click_indx_offset", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.getLargestCC": [[328, 334], ["skimage.measure.label", "skimage.measure.label.max", "numpy.argmax", "numpy.bincount"], "methods", ["None"], ["", "def", "getLargestCC", "(", "self", ",", "mask", ")", ":", "\n", "        ", "mask", "=", "label", "(", "mask", ")", "\n", "if", "mask", ".", "max", "(", ")", "==", "0", ":", "\n", "            ", "return", "mask", "\n", "", "mask", "=", "mask", "==", "np", ".", "argmax", "(", "np", ".", "bincount", "(", "mask", ".", "flat", ")", "[", "1", ":", "]", ")", "+", "1", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.get_visualization": [[335, 356], ["numpy.zeros_like", "util.vis.draw_with_blend_and_clicks", "controller.InteractiveController.getLargestCC"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.draw_with_blend_and_clicks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.getLargestCC"], ["", "def", "get_visualization", "(", "self", ",", "alpha_blend", ":", "float", ",", "click_radius", ":", "int", ")", ":", "\n", "        ", "if", "self", ".", "image", "is", "None", ":", "\n", "            ", "return", "None", "\n", "# 1. \u6b63\u5728\u6807\u6ce8\u7684mask", "\n", "# results_mask_for_vis = self.result_mask  # \u52a0\u5165\u4e4b\u524d\u6807\u5b8c\u7684mask", "\n", "", "results_mask_for_vis", "=", "np", ".", "zeros_like", "(", "self", ".", "result_mask", ")", "\n", "results_mask_for_vis", "*=", "self", ".", "curr_label_number", "\n", "if", "self", ".", "probs_history", ":", "\n", "            ", "results_mask_for_vis", "[", "self", ".", "current_object_prob", ">", "\n", "self", ".", "prob_thresh", "]", "=", "self", ".", "curr_label_number", "\n", "", "if", "self", ".", "lccFilter", ":", "\n", "            ", "results_mask_for_vis", "=", "(", "self", ".", "getLargestCC", "(", "results_mask_for_vis", ")", "*", "\n", "self", ".", "curr_label_number", ")", "\n", "", "vis", "=", "draw_with_blend_and_clicks", "(", "\n", "self", ".", "image", ",", "\n", "mask", "=", "results_mask_for_vis", ",", "\n", "alpha", "=", "alpha_blend", ",", "\n", "clicks_list", "=", "self", ".", "clicker", ".", "clicks_list", ",", "\n", "radius", "=", "click_radius", ",", "\n", "palette", "=", "self", ".", "palette", ",", ")", "\n", "return", "vis", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.inImage": [[357, 362], ["None"], "methods", ["None"], ["", "def", "inImage", "(", "self", ",", "x", ":", "int", ",", "y", ":", "int", ")", ":", "\n", "        ", "s", "=", "self", ".", "image", ".", "shape", "\n", "if", "x", "<", "0", "or", "y", "<", "0", "or", "x", ">=", "s", "[", "1", "]", "or", "y", ">=", "s", "[", "0", "]", ":", "\n", "            ", "return", "False", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.result_mask": [[363, 367], ["controller.InteractiveController._result_mask.copy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["", "@", "property", "\n", "def", "result_mask", "(", "self", ")", ":", "\n", "        ", "result_mask", "=", "self", ".", "_result_mask", ".", "copy", "(", ")", "\n", "return", "result_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.palette": [[368, 376], ["colors.insert"], "methods", ["None"], ["", "@", "property", "\n", "def", "palette", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "labelList", ":", "\n", "            ", "colors", "=", "[", "ml", ".", "color", "for", "ml", "in", "self", ".", "labelList", "]", "\n", "colors", ".", "insert", "(", "0", ",", "[", "0", ",", "0", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "            ", "colors", "=", "[", "[", "0", ",", "0", ",", "0", "]", "]", "\n", "", "return", "colors", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.current_object_prob": [[377, 387], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "current_object_prob", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        \u83b7\u53d6\u5f53\u524d\u63a8\u7406\u6807\u7b7e\n        \"\"\"", "\n", "if", "self", ".", "probs_history", ":", "\n", "            ", "_", ",", "current_prob_additive", "=", "self", ".", "probs_history", "[", "-", "1", "]", "\n", "return", "current_prob_additive", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.is_incomplete_mask": [[388, 395], ["len"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "is_incomplete_mask", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns\n            bool: \u5f53\u524d\u7684\u7269\u4f53\u662f\u4e0d\u662f\u8fd8\u6ca1\u6807\u5b8c\n        \"\"\"", "\n", "return", "len", "(", "self", ".", "probs_history", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.imgShape": [[396, 399], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "imgShape", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image", ".", "shape", "# [1::-1]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.modelSet": [[400, 403], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "modelSet", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.modelName": [[404, 407], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "modelName", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "__name__", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.imageSet": [[408, 411], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "imageSet", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image", "is", "not", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.models.EISegModel.__init__": [[24, 56], ["models.EISegModel.check_param", "paddle.create_predictor", "paddle.Config", "paddle.Config.enable_mkldnn", "paddle.Config.switch_ir_optim", "paddle.Config.set_cpu_math_library_num_threads", "paddle.Config.enable_use_gpu", "paddle.Config.delete_pass", "paddle.Config.delete_pass", "paddle.Config.delete_pass", "paddle.Config.switch_ir_optim", "paddle.Config.enable_memory_optim", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.models.EISegModel.check_param"], ["    ", "@", "abstractmethod", "\n", "def", "__init__", "(", "self", ",", "model_path", ",", "param_path", ",", "use_gpu", "=", "False", ")", ":", "\n", "        ", "model_path", ",", "param_path", "=", "self", ".", "check_param", "(", "model_path", ",", "param_path", ")", "\n", "try", ":", "\n", "            ", "config", "=", "paddle_infer", ".", "Config", "(", "model_path", ",", "param_path", ")", "\n", "", "except", ":", "\n", "            ", "ValueError", "(", "\" \u6a21\u578b\u548c\u53c2\u6570\u4e0d\u5339\u914d\uff0c\u8bf7\u68c0\u67e5\u6a21\u578b\u548c\u53c2\u6570\u662f\u5426\u52a0\u8f7d\u9519\u8bef\"", ")", "\n", "", "if", "not", "use_gpu", ":", "\n", "            ", "config", ".", "enable_mkldnn", "(", ")", "\n", "# TODO: fluid\u8981\u5e9f\u5f03\u4e86\uff0c\u7814\u7a76\u5224\u65ad\u65b9\u5f0f", "\n", "# if paddle.fluid.core.supports_bfloat16():", "\n", "#     config.enable_mkldnn_bfloat16()", "\n", "config", ".", "switch_ir_optim", "(", "True", ")", "\n", "config", ".", "set_cpu_math_library_num_threads", "(", "10", ")", "\n", "", "else", ":", "\n", "            ", "config", ".", "enable_use_gpu", "(", "500", ",", "0", ")", "\n", "config", ".", "delete_pass", "(", "\"conv_elementwise_add_act_fuse_pass\"", ")", "\n", "config", ".", "delete_pass", "(", "\"conv_elementwise_add2_act_fuse_pass\"", ")", "\n", "config", ".", "delete_pass", "(", "\"conv_elementwise_add_fuse_pass\"", ")", "\n", "config", ".", "switch_ir_optim", "(", ")", "\n", "config", ".", "enable_memory_optim", "(", ")", "\n", "# use_tensoret = False  # TODO: \u76ee\u524dLinux\u548cwindows\u4e0b\u4f7f\u7528TensorRT\u62a5\u9519", "\n", "# if use_tensorrt:", "\n", "#     config.enable_tensorrt_engine(", "\n", "#         workspace_size=1 << 30,", "\n", "#         precision_mode=paddle_infer.PrecisionType.Float32,", "\n", "#         max_batch_size=1,", "\n", "#         min_subgraph_size=5,", "\n", "#         use_static=False,", "\n", "#         use_calib_mode=False,", "\n", "#     )", "\n", "", "self", ".", "model", "=", "paddle_infer", ".", "create_predictor", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.models.EISegModel.check_param": [[57, 63], ["Exception", "Exception", "os.exists", "os.exists"], "methods", ["None"], ["", "def", "check_param", "(", "self", ",", "model_path", ",", "param_path", ")", ":", "\n", "        ", "if", "model_path", "is", "None", "or", "not", "osp", ".", "exists", "(", "model_path", ")", ":", "\n", "            ", "raise", "Exception", "(", "f\"\u6a21\u578b\u8def\u5f84{model_path}\u4e0d\u5b58\u5728\u3002\u8bf7\u6307\u5b9a\u6b63\u786e\u7684\u6a21\u578b\u8def\u5f84\"", ")", "\n", "", "if", "param_path", "is", "None", "or", "not", "osp", ".", "exists", "(", "param_path", ")", ":", "\n", "            ", "raise", "Exception", "(", "f\"\u6743\u91cd\u8def\u5f84{param_path}\u4e0d\u5b58\u5728\u3002\u8bf7\u6307\u5b9a\u6b63\u786e\u7684\u6743\u91cd\u8def\u5f84\"", ")", "\n", "", "return", "model_path", ",", "param_path", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.ModelThread.__init__": [[50, 54], ["qtpy.QtCore.QThread.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "controller", ",", "param_path", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "controller", "=", "controller", "\n", "self", ".", "param_path", "=", "param_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.ModelThread.run": [[55, 61], ["app.ModelThread.controller.setModel", "app.ModelThread._signal.emit"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setModel"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "success", ",", "res", "=", "self", ".", "controller", ".", "setModel", "(", "self", ".", "param_path", ",", "False", ")", "\n", "self", ".", "_signal", ".", "emit", "(", "{", "\n", "\"success\"", ":", "success", ",", "\n", "\"res\"", ":", "res", ",", "\n", "\"param_path\"", ":", "self", ".", "param_path", "\n", "}", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.__init__": [[78, 239], ["qtpy.QtWidgets.QMainWindow.__init__", "qtpy.QtCore.QSettings", "app.APP_EISeg.settings.value", "app.APP_EISeg.setLayoutDirection", "app.APP_EISeg.setupUi", "controller.InteractiveController", "app.APP_EISeg.settings.value", "app.APP_EISeg.settings.value", "app.APP_EISeg.settings.value", "app.APP_EISeg.settings.value", "app.APP_EISeg.settings.value", "util.parse_configs", "qtpy.QtGui.QImageReader.supportedImageFormats", "app.APP_EISeg.initActions", "app.APP_EISeg.loadLayout", "app.APP_EISeg.toggleWidget", "app.APP_EISeg.updateModelMenu", "app.APP_EISeg.updateRecentFile", "widget.ShortcutWidget", "app.APP_EISeg.scene.clickRequest.connect", "app.APP_EISeg.canvas.zoomRequest.connect", "qtpy.QtWidgets.QGraphicsPixmapItem", "app.APP_EISeg.scene.addItem", "app.APP_EISeg.btnSave.clicked.connect", "app.APP_EISeg.listFiles.itemDoubleClicked.connect", "app.APP_EISeg.btnAddClass.clicked.connect", "app.APP_EISeg.btnParamsSelect.clicked.connect", "app.APP_EISeg.cheWithMask.stateChanged.connect", "app.APP_EISeg.sldOpacity.valueChanged.connect", "app.APP_EISeg.sldClickRadius.valueChanged.connect", "app.APP_EISeg.sldThresh.valueChanged.connect", "app.APP_EISeg.textWw.returnPressed.connect", "app.APP_EISeg.textWc.returnPressed.connect", "app.APP_EISeg.labelListTable.cellDoubleClicked.connect", "app.APP_EISeg.labelListTable.cellClicked.connect", "app.APP_EISeg.labelListTable.cellChanged.connect", "app.APP_EISeg.btnFinishedGrid.clicked.connect", "os.join", "os.join", "util.COCO", "qtpy.QtCore.QVariant", "len", "len", "app.APP_EISeg.settings.setValue", "qtpy.QtCore.QByteArray", "qtpy.QtCore.QVariant", "qtpy.QtCore.QVariant", "os.join", "os.join", "bandCombo.currentIndexChanged.connect", "int", "len", "tuple", "distutils.util.strtobool", "fmt.data().decode", "img_ext.append", "app.APP_EISeg.settings.value", "len", "fmt.data"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.ui.Ui_EISeg.setupUi", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.config.parse_configs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.initActions", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadLayout", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleWidget", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateModelMenu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateRecentFile", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "__init__", "(", "self", ",", "parent", "=", "None", ")", ":", "\n", "        ", "super", "(", "APP_EISeg", ",", "self", ")", ".", "__init__", "(", "parent", ")", "\n", "\n", "self", ".", "settings", "=", "QtCore", ".", "QSettings", "(", "\n", "osp", ".", "join", "(", "pjpath", ",", "\"config/setting.ini\"", ")", ",", "QtCore", ".", "QSettings", ".", "IniFormat", ")", "\n", "currentLang", "=", "self", ".", "settings", ".", "value", "(", "\"language\"", ")", "\n", "layoutdir", "=", "Qt", ".", "RightToLeft", "if", "currentLang", "==", "\"Arabic\"", "else", "Qt", ".", "LeftToRight", "\n", "self", ".", "setLayoutDirection", "(", "layoutdir", ")", "\n", "\n", "# \u521d\u59cb\u5316\u754c\u9762", "\n", "self", ".", "setupUi", "(", "self", ")", "\n", "\n", "# app\u53d8\u91cf", "\n", "self", ".", "_anning", "=", "False", "# self.status\u66ff\u4ee3", "\n", "self", ".", "isDirty", "=", "False", "# \u662f\u5426\u9700\u8981\u4fdd\u5b58", "\n", "self", ".", "image", "=", "None", "# \u53ef\u80fd\u5148\u52a0\u8f7d\u56fe\u7247\u540e\u52a0\u8f7d\u6a21\u578b\uff0c\u53ea\u7528\u4e8e\u6682\u5b58\u56fe\u7247", "\n", "self", ".", "predictor_params", "=", "{", "\n", "\"brs_mode\"", ":", "\"NoBRS\"", ",", "\n", "\"with_flip\"", ":", "False", ",", "\n", "\"zoom_in_params\"", ":", "{", "\n", "\"skip_clicks\"", ":", "-", "1", ",", "\n", "\"target_size\"", ":", "(", "400", ",", "400", ")", ",", "\n", "\"expansion_ratio\"", ":", "1.4", ",", "\n", "}", ",", "\n", "\"predictor_params\"", ":", "{", "\n", "\"net_clicks_limit\"", ":", "None", ",", "\n", "\"max_size\"", ":", "800", ",", "\n", "\"with_mask\"", ":", "True", ",", "\n", "}", ",", "\n", "}", "\n", "self", ".", "controller", "=", "InteractiveController", "(", "\n", "predictor_params", "=", "self", ".", "predictor_params", ",", "\n", "prob_thresh", "=", "self", ".", "segThresh", ",", ")", "\n", "# self.controller.labelList = util.LabelList()  # \u6807\u7b7e\u5217\u8868", "\n", "self", ".", "save_status", "=", "{", "\n", "\"gray_scale\"", ":", "True", ",", "\n", "\"pseudo_color\"", ":", "True", ",", "\n", "\"json\"", ":", "False", ",", "\n", "\"coco\"", ":", "True", ",", "\n", "\"cutout\"", ":", "True", ",", "\n", "}", "# \u662f\u5426\u4fdd\u5b58\u8fd9\u51e0\u4e2a\u683c\u5f0f", "\n", "self", ".", "outputDir", "=", "None", "# \u6807\u7b7e\u4fdd\u5b58\u8def\u5f84", "\n", "self", ".", "labelPaths", "=", "[", "]", "# \u6240\u6709outputdir\u4e2d\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84", "\n", "self", ".", "imagePaths", "=", "[", "]", "# \u6587\u4ef6\u5939\u4e0b\u6240\u6709\u5f85\u6807\u6ce8\u56fe\u7247\u8def\u5f84", "\n", "self", ".", "currIdx", "=", "0", "# \u6587\u4ef6\u5939\u6807\u6ce8\u5f53\u524d\u56fe\u7247\u4e0b\u6807", "\n", "self", ".", "origExt", "=", "False", "# \u662f\u5426\u4f7f\u7528\u56fe\u7247\u672c\u8eab\u62d3\u5c55\u540d\uff0c\u9632\u6b62\u91cd\u540d\u8986\u76d6", "\n", "if", "self", ".", "save_status", "[", "\"coco\"", "]", ":", "\n", "            ", "self", ".", "coco", "=", "COCO", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "coco", "=", "None", "\n", "", "self", ".", "colorMap", "=", "util", ".", "colorMap", "\n", "\n", "if", "self", ".", "settings", ".", "value", "(", "\"cutout_background\"", ")", ":", "\n", "            ", "self", ".", "cutoutBackground", "=", "[", "\n", "int", "(", "c", ")", "for", "c", "in", "self", ".", "settings", ".", "value", "(", "\"cutout_background\"", ")", "\n", "]", "\n", "if", "len", "(", "self", ".", "cutoutBackground", ")", "==", "3", ":", "\n", "                ", "self", ".", "cutoutBackground", "+=", "tuple", "(", "[", "255", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "cutoutBackground", "=", "[", "0", ",", "0", ",", "128", ",", "255", "]", "\n", "\n", "# widget", "\n", "", "self", ".", "dockWidgets", "=", "{", "\n", "\"model\"", ":", "self", ".", "ModelDock", ",", "\n", "\"data\"", ":", "self", ".", "DataDock", ",", "\n", "\"label\"", ":", "self", ".", "LabelDock", ",", "\n", "\"seg\"", ":", "self", ".", "SegSettingDock", ",", "\n", "\"rs\"", ":", "self", ".", "RSDock", ",", "\n", "\"med\"", ":", "self", ".", "MedDock", ",", "\n", "\"grid\"", ":", "self", ".", "GridDock", ",", "\n", "}", "\n", "# self.display_dockwidget = [True, True, True, True, False, False, False]", "\n", "self", ".", "dockStatus", "=", "self", ".", "settings", ".", "value", "(", "\n", "\"dock_status\"", ",", "QVariant", "(", "[", "]", ")", ",", "type", "=", "list", ")", "# \u6240\u6709widget\u662f\u5426\u5c55\u793a", "\n", "if", "len", "(", "self", ".", "dockStatus", ")", "!=", "len", "(", "self", ".", "dockWidgets", ")", ":", "\n", "            ", "self", ".", "dockStatus", "=", "[", "True", "]", "*", "4", "+", "[", "False", "]", "*", "(", "len", "(", "self", ".", "dockWidgets", ")", "-", "4", ")", "\n", "self", ".", "settings", ".", "setValue", "(", "\"dock_status\"", ",", "self", ".", "dockStatus", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dockStatus", "=", "[", "strtobool", "(", "s", ")", "for", "s", "in", "self", ".", "dockStatus", "]", "\n", "\n", "", "self", ".", "layoutStatus", "=", "self", ".", "settings", ".", "value", "(", "\"layout_status\"", ",", "\n", "QByteArray", "(", ")", ")", "# \u754c\u9762\u5143\u7d20\u4f4d\u7f6e", "\n", "\n", "self", ".", "recentModels", "=", "self", ".", "settings", ".", "value", "(", "\n", "\"recent_models\"", ",", "QVariant", "(", "[", "]", ")", ",", "type", "=", "list", ")", "\n", "self", ".", "recentFiles", "=", "self", ".", "settings", ".", "value", "(", "\n", "\"recent_files\"", ",", "QVariant", "(", "[", "]", ")", ",", "type", "=", "list", ")", "\n", "\n", "self", ".", "config", "=", "util", ".", "parse_configs", "(", "osp", ".", "join", "(", "pjpath", ",", "\"config/config.yaml\"", ")", ")", "\n", "\n", "# \u652f\u6301\u7684\u56fe\u50cf\u683c\u5f0f", "\n", "rs_ext", "=", "[", "\".tif\"", ",", "\".tiff\"", "]", "\n", "img_ext", "=", "[", "]", "\n", "for", "fmt", "in", "QtGui", ".", "QImageReader", ".", "supportedImageFormats", "(", ")", ":", "\n", "            ", "fmt", "=", "\".{}\"", ".", "format", "(", "fmt", ".", "data", "(", ")", ".", "decode", "(", ")", ")", "\n", "if", "fmt", "not", "in", "rs_ext", ":", "\n", "                ", "img_ext", ".", "append", "(", "fmt", ")", "\n", "", "", "self", ".", "formats", "=", "[", "\n", "img_ext", ",", "# \u81ea\u7136\u56fe\u50cf", "\n", "[", "\".dcm\"", "]", ",", "# \u533b\u5b66\u5f71\u50cf", "\n", "rs_ext", ",", "# \u9065\u611f\u5f71\u50cf", "\n", "]", "\n", "\n", "# \u9065\u611f", "\n", "self", ".", "raster", "=", "None", "\n", "self", ".", "grid", "=", "None", "\n", "self", ".", "rsRGB", "=", "[", "1", ",", "1", ",", "1", "]", "# \u9065\u611f\u7d22\u5f15", "\n", "\n", "# \u533b\u7597\u53c2\u6570", "\n", "self", ".", "midx", "=", "0", "# \u533b\u7597\u5207\u7247\u7d22\u5f15", "\n", "\n", "# \u5927\u56fe\u9650\u5236", "\n", "self", ".", "thumbnail_min", "=", "2000", "\n", "\n", "# \u521d\u59cb\u5316action", "\n", "self", ".", "initActions", "(", ")", "\n", "\n", "# \u66f4\u65b0\u8fd1\u671f\u8bb0\u5f55", "\n", "self", ".", "loadLayout", "(", ")", "# \u653e\u524d\u9762", "\n", "self", ".", "toggleWidget", "(", "\"all\"", ",", "warn", "=", "False", ")", "\n", "self", ".", "updateModelMenu", "(", ")", "\n", "self", ".", "updateRecentFile", "(", ")", "\n", "\n", "# \u7a97\u53e3", "\n", "## \u5feb\u6377\u952e", "\n", "self", ".", "ShortcutWidget", "=", "ShortcutWidget", "(", "self", ".", "actions", ",", "pjpath", ")", "\n", "\n", "## \u753b\u5e03", "\n", "self", ".", "scene", ".", "clickRequest", ".", "connect", "(", "self", ".", "canvasClick", ")", "\n", "self", ".", "canvas", ".", "zoomRequest", ".", "connect", "(", "self", ".", "viewZoomed", ")", "\n", "self", ".", "annImage", "=", "QtWidgets", ".", "QGraphicsPixmapItem", "(", ")", "\n", "self", ".", "scene", ".", "addItem", "(", "self", ".", "annImage", ")", "\n", "\n", "## \u6309\u94ae\u70b9\u51fb", "\n", "self", ".", "btnSave", ".", "clicked", ".", "connect", "(", "self", ".", "exportLabel", ")", "# \u4fdd\u5b58", "\n", "self", ".", "listFiles", ".", "itemDoubleClicked", ".", "connect", "(", "\n", "self", ".", "imageListClicked", ")", "# \u6807\u7b7e\u5217\u8868\u70b9\u51fb", "\n", "\n", "self", ".", "btnAddClass", ".", "clicked", ".", "connect", "(", "self", ".", "addLabel", ")", "\n", "self", ".", "btnParamsSelect", ".", "clicked", ".", "connect", "(", "self", ".", "changeParam", ")", "# \u6a21\u578b\u53c2\u6570\u9009\u62e9", "\n", "self", ".", "cheWithMask", ".", "stateChanged", ".", "connect", "(", "self", ".", "chooseMode", ")", "# with_mask", "\n", "\n", "## \u6ed1\u52a8", "\n", "self", ".", "sldOpacity", ".", "valueChanged", ".", "connect", "(", "self", ".", "maskOpacityChanged", ")", "\n", "self", ".", "sldClickRadius", ".", "valueChanged", ".", "connect", "(", "self", ".", "clickRadiusChanged", ")", "\n", "self", ".", "sldThresh", ".", "valueChanged", ".", "connect", "(", "self", ".", "threshChanged", ")", "\n", "# self.sldMISlide.valueChanged.connect(self.slideChanged)", "\n", "self", ".", "textWw", ".", "returnPressed", ".", "connect", "(", "self", ".", "wwChanged", ")", "\n", "self", ".", "textWc", ".", "returnPressed", ".", "connect", "(", "self", ".", "wcChanged", ")", "\n", "\n", "## \u6807\u7b7e\u5217\u8868\u70b9\u51fb", "\n", "self", ".", "labelListTable", ".", "cellDoubleClicked", ".", "connect", "(", "self", ".", "labelListDoubleClick", ")", "\n", "self", ".", "labelListTable", ".", "cellClicked", ".", "connect", "(", "self", ".", "labelListClicked", ")", "\n", "self", ".", "labelListTable", ".", "cellChanged", ".", "connect", "(", "self", ".", "labelListItemChanged", ")", "\n", "\n", "## \u529f\u80fd\u533a\u9009\u62e9", "\n", "# self.rsShow.currentIndexChanged.connect(self.rsShowModeChange)  # \u663e\u793a\u6a21\u578b", "\n", "for", "bandCombo", "in", "self", ".", "bandCombos", ":", "\n", "            ", "bandCombo", ".", "currentIndexChanged", ".", "connect", "(", "self", ".", "rsBandSet", ")", "# \u8bbe\u7f6e\u6ce2\u6bb5", "\n", "# self.btnInitGrid.clicked.connect(self.initGrid)  # \u6253\u5f00\u5bab\u683c", "\n", "", "self", ".", "btnFinishedGrid", ".", "clicked", ".", "connect", "(", "self", ".", "saveGridLabel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.initActions": [[240, 611], ["functools.partial", "functools.partial", "dir", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.setChecked", "functools.partial.", "functools.partial.setChecked", "functools.partial.", "functools.partial.setChecked", "functools.partial.", "functools.partial.setChecked", "functools.partial.", "functools.partial.setChecked", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.setChecked", "util.struct", "dir", "app.APP_EISeg.initActions.newWidget"], "methods", ["None"], ["", "def", "initActions", "(", "self", ")", ":", "\n", "        ", "tr", "=", "partial", "(", "QtCore", ".", "QCoreApplication", ".", "translate", ",", "\"APP_EISeg\"", ")", "\n", "action", "=", "partial", "(", "util", ".", "newAction", ",", "self", ")", "\n", "start", "=", "dir", "(", ")", "\n", "\n", "# \u6253\u5f00/\u52a0\u8f7d/\u4fdd\u5b58", "\n", "open_image", "=", "action", "(", "\n", "tr", "(", "\"&\u6253\u5f00\u56fe\u50cf\"", ")", ",", "\n", "self", ".", "openImage", ",", "\n", "\"open_image\"", ",", "\n", "\"OpenImage\"", ",", "\n", "tr", "(", "\"\u6253\u5f00\u4e00\u5f20\u56fe\u50cf\u8fdb\u884c\u6807\u6ce8\"", ")", ",", ")", "\n", "open_folder", "=", "action", "(", "\n", "tr", "(", "\"&\u6253\u5f00\u6587\u4ef6\u5939\"", ")", ",", "\n", "self", ".", "openFolder", ",", "\n", "\"open_folder\"", ",", "\n", "\"OpenFolder\"", ",", "\n", "tr", "(", "\"\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u7684\u56fe\u50cf\u8fdb\u884c\u6807\u6ce8\"", ")", ",", ")", "\n", "change_output_dir", "=", "action", "(", "\n", "tr", "(", "\"&\u6539\u53d8\u6807\u7b7e\u4fdd\u5b58\u8def\u5f84\"", ")", ",", "\n", "partial", "(", "self", ".", "changeOutputDir", ",", "None", ")", ",", "\n", "\"change_output_dir\"", ",", "\n", "\"ChangeOutputDir\"", ",", "\n", "tr", "(", "\"\u6539\u53d8\u6807\u7b7e\u4fdd\u5b58\u7684\u6587\u4ef6\u5939\u8def\u5f84\"", ")", ",", ")", "\n", "load_param", "=", "action", "(", "\n", "tr", "(", "\"&\u52a0\u8f7d\u6a21\u578b\u53c2\u6570\"", ")", ",", "\n", "self", ".", "changeParam", ",", "\n", "\"load_param\"", ",", "\n", "\"Model\"", ",", "\n", "tr", "(", "\"\u52a0\u8f7d\u4e00\u4e2a\u6a21\u578b\u53c2\u6570\"", ")", ",", ")", "\n", "save", "=", "action", "(", "\n", "tr", "(", "\"&\u4fdd\u5b58\"", ")", ",", "\n", "self", ".", "exportLabel", ",", "\n", "\"save\"", ",", "\n", "\"Save\"", ",", "\n", "tr", "(", "\"\u4fdd\u5b58\u56fe\u50cf\u6807\u7b7e\"", ")", ",", ")", "\n", "save_as", "=", "action", "(", "\n", "tr", "(", "\"&\u53e6\u5b58\u4e3a\"", ")", ",", "\n", "partial", "(", "\n", "self", ".", "exportLabel", ",", "saveAs", "=", "True", ")", ",", "\n", "\"save_as\"", ",", "\n", "\"SaveAs\"", ",", "\n", "tr", "(", "\"\u5728\u6307\u5b9a\u4f4d\u7f6e\u53e6\u5b58\u4e3a\u6807\u7b7e\"", ")", ",", ")", "\n", "auto_save", "=", "action", "(", "\n", "tr", "(", "\"&\u81ea\u52a8\u4fdd\u5b58\"", ")", ",", "\n", "self", ".", "toggleAutoSave", ",", "\n", "\"auto_save\"", ",", "\n", "\"AutoSave\"", ",", "\n", "tr", "(", "\"\u7ffb\u9875\u540c\u65f6\u81ea\u52a8\u4fdd\u5b58\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "# auto_save.setChecked(self.config.get(\"auto_save\", False))", "\n", "\n", "# \u6807\u6ce8", "\n", "turn_prev", "=", "action", "(", "\n", "tr", "(", "\"&\u4e0a\u4e00\u5f20\"", ")", ",", "\n", "partial", "(", "self", ".", "turnImg", ",", "-", "1", ")", ",", "\n", "\"turn_prev\"", ",", "\n", "\"Prev\"", ",", "\n", "tr", "(", "\"\u7ffb\u5230\u4e0a\u4e00\u5f20\u56fe\u7247\"", ")", ",", ")", "\n", "turn_next", "=", "action", "(", "\n", "tr", "(", "\"&\u4e0b\u4e00\u5f20\"", ")", ",", "\n", "partial", "(", "self", ".", "turnImg", ",", "1", ")", ",", "\n", "\"turn_next\"", ",", "\n", "\"Next\"", ",", "\n", "tr", "(", "\"\u7ffb\u5230\u4e0b\u4e00\u5f20\u56fe\u7247\"", ")", ",", ")", "\n", "finish_object", "=", "action", "(", "\n", "tr", "(", "\"&\u5b8c\u6210\u5f53\u524d\u76ee\u6807\"", ")", ",", "\n", "self", ".", "finishObject", ",", "\n", "\"finish_object\"", ",", "\n", "\"Ok\"", ",", "\n", "tr", "(", "\"\u5b8c\u6210\u5f53\u524d\u76ee\u6807\u7684\u6807\u6ce8\"", ")", ",", ")", "\n", "clear", "=", "action", "(", "\n", "tr", "(", "\"&\u6e05\u9664\u6240\u6709\u6807\u6ce8\"", ")", ",", "\n", "self", ".", "clearAll", ",", "\n", "\"clear\"", ",", "\n", "\"Clear\"", ",", "\n", "tr", "(", "\"\u6e05\u9664\u6240\u6709\u6807\u6ce8\u4fe1\u606f\"", ")", ",", ")", "\n", "undo", "=", "action", "(", "\n", "tr", "(", "\"&\u64a4\u9500\"", ")", ",", "\n", "self", ".", "undoClick", ",", "\n", "\"undo\"", ",", "\n", "\"Undo\"", ",", "\n", "tr", "(", "\"\u64a4\u9500\u4e00\u6b21\u70b9\u51fb\"", ")", ",", ")", "\n", "redo", "=", "action", "(", "\n", "tr", "(", "\"&\u91cd\u505a\"", ")", ",", "\n", "self", ".", "redoClick", ",", "\n", "\"redo\"", ",", "\n", "\"Redo\"", ",", "\n", "tr", "(", "\"\u91cd\u505a\u4e00\u6b21\u70b9\u51fb\"", ")", ",", ")", "\n", "del_active_polygon", "=", "action", "(", "\n", "tr", "(", "\"&\u5220\u9664\u591a\u8fb9\u5f62\"", ")", ",", "\n", "self", ".", "delActivePolygon", ",", "\n", "\"del_active_polygon\"", ",", "\n", "\"DeletePolygon\"", ",", "\n", "tr", "(", "\"\u5220\u9664\u5f53\u524d\u9009\u4e2d\u7684\u591a\u8fb9\u5f62\"", ")", ",", ")", "\n", "del_all_polygon", "=", "action", "(", "\n", "tr", "(", "\"&\u5220\u9664\u6240\u6709\u591a\u8fb9\u5f62\"", ")", ",", "\n", "self", ".", "delAllPolygon", ",", "\n", "\"del_all_polygon\"", ",", "\n", "\"DeleteAllPolygon\"", ",", "\n", "tr", "(", "\"\u5220\u9664\u6240\u6709\u7684\u591a\u8fb9\u5f62\"", ")", ",", ")", "\n", "largest_component", "=", "action", "(", "\n", "tr", "(", "\"&\u4fdd\u7559\u6700\u5927\u8fde\u901a\u5757\"", ")", ",", "\n", "self", ".", "toggleLargestCC", ",", "\n", "\"largest_component\"", ",", "\n", "\"SaveLargestCC\"", ",", "\n", "tr", "(", "\"\u4fdd\u7559\u6700\u5927\u7684\u8fde\u901a\u5757\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "origional_extension", "=", "action", "(", "\n", "tr", "(", "\"&\u6807\u7b7e\u548c\u56fe\u50cf\u4f7f\u7528\u76f8\u540c\u62d3\u5c55\u540d\"", ")", ",", "\n", "self", ".", "toggleOrigExt", ",", "\n", "\"origional_extension\"", ",", "\n", "\"Same\"", ",", "\n", "tr", "(", "\"\u6807\u7b7e\u548c\u56fe\u50cf\u4f7f\u7528\u76f8\u540c\u62d3\u5c55\u540d\uff0c\u7528\u4e8e\u56fe\u50cf\u4e2d\u6709\u6587\u4ef6\u540d\u76f8\u540c\u4f46\u62d3\u5c55\u540d\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u9632\u6b62\u6807\u7b7e\u8986\u76d6\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "save_pseudo", "=", "action", "(", "\n", "tr", "(", "\"&\u4f2a\u5f69\u8272\u4fdd\u5b58\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleSave", ",", "\"pseudo_color\"", ")", ",", "\n", "\"save_pseudo\"", ",", "\n", "\"SavePseudoColor\"", ",", "\n", "tr", "(", "\"\u4fdd\u5b58\u4e3a\u4f2a\u5f69\u8272\u56fe\u50cf\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "save_pseudo", ".", "setChecked", "(", "self", ".", "save_status", "[", "\"pseudo_color\"", "]", ")", "\n", "save_grayscale", "=", "action", "(", "\n", "tr", "(", "\"&\u7070\u5ea6\u4fdd\u5b58\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleSave", ",", "\"gray_scale\"", ")", ",", "\n", "\"save_grayscale\"", ",", "\n", "\"SaveGrayScale\"", ",", "\n", "tr", "(", "\"\u4fdd\u5b58\u4e3a\u7070\u5ea6\u56fe\u50cf\uff0c\u50cf\u7d20\u7684\u7070\u5ea6\u4e3a\u5bf9\u5e94\u7c7b\u578b\u7684\u6807\u7b7e\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "save_grayscale", ".", "setChecked", "(", "self", ".", "save_status", "[", "\"gray_scale\"", "]", ")", "\n", "save_json", "=", "action", "(", "\n", "tr", "(", "\"&JSON\u4fdd\u5b58\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleSave", ",", "\"json\"", ")", ",", "\n", "\"save_json\"", ",", "\n", "\"SaveJson\"", ",", "\n", "tr", "(", "\"\u4fdd\u5b58\u4e3aJSON\u683c\u5f0f\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "save_json", ".", "setChecked", "(", "self", ".", "save_status", "[", "\"json\"", "]", ")", "\n", "save_coco", "=", "action", "(", "\n", "tr", "(", "\"&COCO\u4fdd\u5b58\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleSave", ",", "\"coco\"", ")", ",", "\n", "\"save_coco\"", ",", "\n", "\"SaveCOCO\"", ",", "\n", "tr", "(", "\"\u4fdd\u5b58\u4e3aCOCO\u683c\u5f0f\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "save_coco", ".", "setChecked", "(", "self", ".", "save_status", "[", "\"coco\"", "]", ")", "\n", "save_cutout", "=", "action", "(", "\n", "tr", "(", "\"&\u62a0\u56fe\u4fdd\u5b58\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleSave", ",", "\"cutout\"", ")", ",", "\n", "\"save_cutout\"", ",", "\n", "\"SaveCutout\"", ",", "\n", "tr", "(", "\"\u53ea\u4fdd\u7559\u524d\u666f\uff0c\u80cc\u666f\u8bbe\u7f6e\u4e3a\u80cc\u666f\u8272\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "save_cutout", ".", "setChecked", "(", "self", ".", "save_status", "[", "\"cutout\"", "]", ")", "\n", "set_cutout_background", "=", "action", "(", "\n", "tr", "(", "\"&\u8bbe\u7f6e\u62a0\u56fe\u80cc\u666f\u8272\"", ")", ",", "\n", "self", ".", "setCutoutBackground", ",", "\n", "\"set_cutout_background\"", ",", "\n", "self", ".", "cutoutBackground", ",", "\n", "tr", "(", "\"\u62a0\u56fe\u540e\u80cc\u666f\u50cf\u7d20\u7684\u989c\u8272\"", ")", ",", ")", "\n", "close", "=", "action", "(", "\n", "tr", "(", "\"&\u5173\u95ed\"", ")", ",", "\n", "partial", "(", "self", ".", "saveImage", ",", "True", ")", ",", "\n", "\"close\"", ",", "\n", "\"Close\"", ",", "\n", "tr", "(", "\"\u5173\u95ed\u5f53\u524d\u56fe\u50cf\"", ")", ",", ")", "\n", "quit", "=", "action", "(", "\n", "tr", "(", "\"&\u9000\u51fa\"", ")", ",", "\n", "self", ".", "close", ",", "\n", "\"quit\"", ",", "\n", "\"Quit\"", ",", "\n", "tr", "(", "\"\u9000\u51fa\u8f6f\u4ef6\"", ")", ",", ")", "\n", "export_label_list", "=", "action", "(", "\n", "tr", "(", "\"&\u5bfc\u51fa\u6807\u7b7e\u5217\u8868\"", ")", ",", "\n", "partial", "(", "self", ".", "exportLabelList", ",", "None", ")", ",", "\n", "\"export_label_list\"", ",", "\n", "\"ExportLabel\"", ",", "\n", "tr", "(", "\"\u5c06\u6807\u7b7e\u5217\u8868\u5bfc\u51fa\u6210\u6807\u7b7e\u914d\u7f6e\u6587\u4ef6\"", ")", ",", ")", "\n", "import_label_list", "=", "action", "(", "\n", "tr", "(", "\"&\u8f7d\u5165\u6807\u7b7e\u5217\u8868\"", ")", ",", "\n", "partial", "(", "self", ".", "importLabelList", ",", "None", ")", ",", "\n", "\"import_label_list\"", ",", "\n", "\"ImportLabel\"", ",", "\n", "tr", "(", "\"\u4ece\u6807\u7b7e\u914d\u7f6e\u6587\u4ef6\u8f7d\u5165\u6807\u7b7e\u5217\u8868\"", ")", ",", ")", "\n", "clear_label_list", "=", "action", "(", "\n", "tr", "(", "\"&\u6e05\u7a7a\u6807\u7b7e\u5217\u8868\"", ")", ",", "\n", "self", ".", "clearLabelList", ",", "\n", "\"clear_label_list\"", ",", "\n", "\"ClearLabel\"", ",", "\n", "tr", "(", "\"\u6e05\u7a7a\u6240\u6709\u7684\u6807\u7b7e\"", ")", ",", ")", "\n", "clear_recent", "=", "action", "(", "\n", "tr", "(", "\"&\u6e05\u9664\u8fd1\u671f\u6587\u4ef6\u8bb0\u5f55\"", ")", ",", "\n", "self", ".", "clearRecentFile", ",", "\n", "\"clear_recent\"", ",", "\n", "\"ClearRecent\"", ",", "\n", "tr", "(", "\"\u6e05\u9664\u8fd1\u671f\u6807\u6ce8\u6587\u4ef6\u8bb0\u5f55\"", ")", ",", ")", "\n", "model_widget", "=", "action", "(", "\n", "tr", "(", "\"&\u6a21\u578b\u9009\u62e9\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleWidget", ",", "0", ")", ",", "\n", "\"model_widget\"", ",", "\n", "\"Net\"", ",", "\n", "tr", "(", "\"\u9690\u85cf/\u5c55\u793a\u6a21\u578b\u9009\u62e9\u9762\u677f\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "data_widget", "=", "action", "(", "\n", "tr", "(", "\"&\u6570\u636e\u5217\u8868\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleWidget", ",", "1", ")", ",", "\n", "\"data_widget\"", ",", "\n", "\"Data\"", ",", "\n", "tr", "(", "\"\u9690\u85cf/\u5c55\u793a\u6570\u636e\u5217\u8868\u9762\u677f\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "label_widget", "=", "action", "(", "\n", "tr", "(", "\"&\u6807\u7b7e\u5217\u8868\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleWidget", ",", "2", ")", ",", "\n", "\"label_widget\"", ",", "\n", "\"Label\"", ",", "\n", "tr", "(", "\"\u9690\u85cf/\u5c55\u793a\u6807\u7b7e\u5217\u8868\u9762\u677f\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "segmentation_widget", "=", "action", "(", "\n", "tr", "(", "\"&\u5206\u5272\u8bbe\u7f6e\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleWidget", ",", "3", ")", ",", "\n", "\"segmentation_widget\"", ",", "\n", "\"Setting\"", ",", "\n", "tr", "(", "\"\u9690\u85cf/\u5c55\u793a\u5206\u5272\u8bbe\u7f6e\u9762\u677f\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "rs_widget", "=", "action", "(", "\n", "tr", "(", "\"&\u9065\u611f\u8bbe\u7f6e\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleWidget", ",", "4", ")", ",", "\n", "\"rs_widget\"", ",", "\n", "\"RemoteSensing\"", ",", "\n", "tr", "(", "\"\u9690\u85cf/\u5c55\u793a\u9065\u611f\u8bbe\u7f6e\u9762\u677f\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "mi_widget", "=", "action", "(", "\n", "tr", "(", "\"&\u533b\u7597\u8bbe\u7f6e\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleWidget", ",", "5", ")", ",", "\n", "\"mi_widget\"", ",", "\n", "\"MedicalImaging\"", ",", "\n", "tr", "(", "\"\u9690\u85cf/\u5c55\u793a\u533b\u7597\u8bbe\u7f6e\u9762\u677f\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "grid_ann_widget", "=", "action", "(", "\n", "tr", "(", "\"&N2\u5bab\u683c\u6807\u6ce8\"", ")", ",", "\n", "partial", "(", "self", ".", "toggleWidget", ",", "6", ")", ",", "\n", "\"grid_ann_widget\"", ",", "\n", "\"N2\"", ",", "\n", "tr", "(", "\"\u9690\u85cf/\u5c55\u793aN^2\u5bab\u683c\u7ec6\u7c92\u5ea6\u6807\u6ce8\u9762\u677f\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "quick_start", "=", "action", "(", "\n", "tr", "(", "\"&\u5feb\u901f\u5165\u95e8\"", ")", ",", "\n", "self", ".", "quickStart", ",", "\n", "\"quick_start\"", ",", "\n", "\"Use\"", ",", "\n", "tr", "(", "\"\u4e3b\u8981\u529f\u80fd\u4f7f\u7528\u4ecb\u7ecd\"", ")", ",", ")", "\n", "report_bug", "=", "action", "(", "\n", "tr", "(", "\"&\u53cd\u9988\u95ee\u9898\"", ")", ",", "\n", "self", ".", "reportBug", ",", "\n", "\"report_bug\"", ",", "\n", "\"ReportBug\"", ",", "\n", "tr", "(", "\"\u901a\u8fc7Github Issue\u53cd\u9988\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u3002\u6211\u4eec\u4f1a\u5c3d\u5feb\u8fdb\u884c\u4fee\u590d\"", ")", ",", ")", "\n", "edit_shortcuts", "=", "action", "(", "\n", "tr", "(", "\"&\u7f16\u8f91\u5feb\u6377\u952e\"", ")", ",", "\n", "self", ".", "editShortcut", ",", "\n", "\"edit_shortcuts\"", ",", "\n", "\"Shortcut\"", ",", "\n", "tr", "(", "\"\u7f16\u8f91\u8f6f\u4ef6\u5feb\u6377\u952e\"", ")", ",", ")", "\n", "toggle_logging", "=", "action", "(", "\n", "tr", "(", "\"&\u8c03\u8bd5\u65e5\u5fd7\"", ")", ",", "\n", "self", ".", "toggleLogging", ",", "\n", "\"toggle_logging\"", ",", "\n", "\"Log\"", ",", "\n", "tr", "(", "\"\u7528\u4e8e\u89c2\u5bdf\u8f6f\u4ef6\u6267\u884c\u8fc7\u7a0b\u548c\u8fdb\u884cdebug\u3002\u6211\u4eec\u4e0d\u4f1a\u81ea\u52a8\u6536\u96c6\u4efb\u4f55\u65e5\u5fd7\uff0c\u53ef\u80fd\u4f1a\u5e0c\u671b\u60a8\u5728\u53cd\u9988\u95ee\u9898\u65f6\u95f4\u6253\u5f00\u6b64\u529f\u80fd\uff0c\u5e2e\u52a9\u6211\u4eec\u5b9a\u4f4d\u95ee\u9898\u3002\"", ")", ",", "\n", "checkable", "=", "True", ",", ")", "\n", "toggle_logging", ".", "setChecked", "(", "bool", "(", "self", ".", "settings", ".", "value", "(", "\"log\"", ",", "False", ")", ")", ")", "\n", "\n", "self", ".", "actions", "=", "util", ".", "struct", "(", ")", "\n", "for", "name", "in", "dir", "(", ")", ":", "\n", "            ", "if", "name", "not", "in", "start", ":", "\n", "                ", "self", ".", "actions", ".", "append", "(", "eval", "(", "name", ")", ")", "\n", "\n", "", "", "def", "newWidget", "(", "text", ",", "icon", ",", "showAction", ")", ":", "\n", "            ", "widget", "=", "QtWidgets", ".", "QMenu", "(", "tr", "(", "text", ")", ")", "\n", "widget", ".", "setIcon", "(", "util", ".", "newIcon", "(", "icon", ")", ")", "\n", "widget", ".", "aboutToShow", ".", "connect", "(", "showAction", ")", "\n", "return", "widget", "\n", "\n", "", "recent_files", "=", "newWidget", "(", "self", ".", "tr", "(", "\"\u8fd1\u671f\u6587\u4ef6\"", ")", ",", "\"Data\"", ",", "self", ".", "updateRecentFile", ")", "\n", "recent_params", "=", "newWidget", "(", "\n", "self", ".", "tr", "(", "\"\u8fd1\u671f\u6a21\u578b\u53ca\u53c2\u6570\"", ")", ",", "\"Net\"", ",", "self", ".", "updateModelMenu", ")", "\n", "languages", "=", "newWidget", "(", "\"\u8bed\u8a00\"", ",", "\"Language\"", ",", "self", ".", "updateLanguage", ")", "\n", "\n", "self", ".", "menus", "=", "util", ".", "struct", "(", "\n", "recent_files", "=", "recent_files", ",", "\n", "recent_params", "=", "recent_params", ",", "\n", "languages", "=", "languages", ",", "\n", "fileMenu", "=", "(", "\n", "open_image", ",", "\n", "open_folder", ",", "\n", "change_output_dir", ",", "\n", "load_param", ",", "\n", "clear_recent", ",", "\n", "recent_files", ",", "\n", "recent_params", ",", "\n", "None", ",", "\n", "save", ",", "\n", "save_as", ",", "\n", "auto_save", ",", "\n", "None", ",", "\n", "turn_next", ",", "\n", "turn_prev", ",", "\n", "close", ",", "\n", "None", ",", "\n", "quit", ",", ")", ",", "\n", "labelMenu", "=", "(", "\n", "export_label_list", ",", "\n", "import_label_list", ",", "\n", "clear_label_list", ",", ")", ",", "\n", "functionMenu", "=", "(", "\n", "largest_component", ",", "\n", "del_active_polygon", ",", "\n", "del_all_polygon", ",", "\n", "None", ",", "\n", "origional_extension", ",", "\n", "save_pseudo", ",", "\n", "save_grayscale", ",", "\n", "save_cutout", ",", "\n", "set_cutout_background", ",", "\n", "None", ",", "\n", "save_json", ",", "\n", "save_coco", ",", ")", ",", "\n", "showMenu", "=", "(", "\n", "model_widget", ",", "\n", "data_widget", ",", "\n", "label_widget", ",", "\n", "segmentation_widget", ",", "\n", "rs_widget", ",", "\n", "mi_widget", ",", "\n", "grid_ann_widget", ",", ")", ",", "\n", "helpMenu", "=", "(", "\n", "languages", ",", "\n", "quick_start", ",", "\n", "report_bug", ",", "\n", "edit_shortcuts", ",", "\n", "toggle_logging", ",", ")", ",", "\n", "toolBar", "=", "(", "\n", "finish_object", ",", "\n", "clear", ",", "\n", "undo", ",", "\n", "redo", ",", "\n", "turn_prev", ",", "\n", "turn_next", ",", "\n", "None", ",", "\n", "save_pseudo", ",", "\n", "save_grayscale", ",", "\n", "save_cutout", ",", "\n", "save_json", ",", "\n", "save_coco", ",", "\n", "origional_extension", ",", "\n", "None", ",", "\n", "largest_component", ",", ")", ",", ")", "\n", "\n", "def", "menu", "(", "title", ",", "actions", "=", "None", ")", ":", "\n", "            ", "menu", "=", "self", ".", "menuBar", "(", ")", ".", "addMenu", "(", "title", ")", "\n", "if", "actions", ":", "\n", "                ", "util", ".", "addActions", "(", "menu", ",", "actions", ")", "\n", "", "return", "menu", "\n", "\n", "", "menu", "(", "tr", "(", "\"\u6587\u4ef6\"", ")", ",", "self", ".", "menus", ".", "fileMenu", ")", "\n", "menu", "(", "tr", "(", "\"\u6807\u6ce8\"", ")", ",", "self", ".", "menus", ".", "labelMenu", ")", "\n", "menu", "(", "tr", "(", "\"\u529f\u80fd\"", ")", ",", "self", ".", "menus", ".", "functionMenu", ")", "\n", "menu", "(", "tr", "(", "\"\u663e\u793a\"", ")", ",", "self", ".", "menus", ".", "showMenu", ")", "\n", "menu", "(", "tr", "(", "\"\u5e2e\u52a9\"", ")", ",", "self", ".", "menus", ".", "helpMenu", ")", "\n", "util", ".", "addActions", "(", "self", ".", "toolBar", ",", "self", ".", "menus", ".", "toolBar", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setCutoutBackground": [[612, 623], ["qtpy.QtWidgets.QColorDialog.getColor", "qtpy.QtWidgets.QColorDialog.getColor.getRgb", "app.APP_EISeg.settings.setValue", "app.APP_EISeg.actions.set_cutout_background.setIcon", "qtpy.QtGui.QColor", "util.newIcon", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newIcon"], ["", "def", "setCutoutBackground", "(", "self", ")", ":", "\n", "        ", "c", "=", "self", ".", "cutoutBackground", "\n", "color", "=", "QtWidgets", ".", "QColorDialog", ".", "getColor", "(", "\n", "QtGui", ".", "QColor", "(", "*", "c", ")", ",", "\n", "self", ",", "\n", "options", "=", "QtWidgets", ".", "QColorDialog", ".", "ShowAlphaChannel", ",", ")", "\n", "self", ".", "cutoutBackground", "=", "color", ".", "getRgb", "(", ")", "\n", "self", ".", "settings", ".", "setValue", "(", "\"cutout_background\"", ",", "\n", "[", "int", "(", "c", ")", "for", "c", "in", "self", ".", "cutoutBackground", "]", ")", "\n", "self", ".", "actions", ".", "set_cutout_background", ".", "setIcon", "(", "\n", "util", ".", "newIcon", "(", "self", ".", "cutoutBackground", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.editShortcut": [[624, 627], ["app.APP_EISeg.ShortcutWidget.center", "app.APP_EISeg.ShortcutWidget.show"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.center"], ["", "def", "editShortcut", "(", "self", ")", ":", "\n", "        ", "self", ".", "ShortcutWidget", ".", "center", "(", ")", "\n", "self", ".", "ShortcutWidget", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateLanguage": [[629, 644], ["app.APP_EISeg.menus.languages.clear", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir.append", "os.listdir.append", "os.join", "os.join", "util.newAction", "app.APP_EISeg.menus.languages.addAction", "n.split", "n.endswith", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newAction"], ["", "def", "updateLanguage", "(", "self", ")", ":", "\n", "        ", "self", ".", "menus", ".", "languages", ".", "clear", "(", ")", "\n", "langs", "=", "os", ".", "listdir", "(", "osp", ".", "join", "(", "pjpath", ",", "\"util/translate\"", ")", ")", "\n", "langs", "=", "[", "n", ".", "split", "(", "\".\"", ")", "[", "0", "]", "for", "n", "in", "langs", "if", "n", ".", "endswith", "(", "\"qm\"", ")", "]", "\n", "langs", ".", "append", "(", "\"\u4e2d\u6587\"", ")", "\n", "for", "lang", "in", "langs", ":", "\n", "            ", "if", "lang", "==", "self", ".", "currLanguage", ":", "\n", "                ", "continue", "\n", "", "entry", "=", "util", ".", "newAction", "(", "\n", "self", ",", "\n", "lang", ",", "\n", "partial", "(", "self", ".", "changeLanguage", ",", "lang", ")", ",", "\n", "None", ",", "\n", "lang", "if", "lang", "!=", "\"Arabic\"", "else", "\"Egypt\"", ",", ")", "\n", "self", ".", "menus", ".", "languages", ".", "addAction", "(", "entry", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeLanguage": [[645, 648], ["app.APP_EISeg.settings.setValue", "app.APP_EISeg.warn", "app.APP_EISeg.tr", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "", "def", "changeLanguage", "(", "self", ",", "lang", ")", ":", "\n", "        ", "self", ".", "settings", ".", "setValue", "(", "\"language\"", ",", "lang", ")", "\n", "self", ".", "warn", "(", "self", ".", "tr", "(", "\"\u5207\u6362\u8bed\u8a00\"", ")", ",", "self", ".", "tr", "(", "\"\u5207\u6362\u8bed\u8a00\u9700\u8981\u91cd\u542f\u8f6f\u4ef6\u624d\u80fd\u751f\u6548\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateRecentFile": [[650, 666], ["menu.clear", "app.APP_EISeg.settings.value", "enumerate", "app.APP_EISeg.settings.setValue", "qtpy.QtCore.QVariant", "util.newIcon", "qtpy.QtWidgets.QAction", "qtpy.QtWidgets.QAction.triggered.connect", "menu.addAction", "len", "menu.addAction", "os.exists", "os.exists", "functools.partial", "app.APP_EISeg.tr", "qtpy.QtCore.QFileInfo().fileName", "qtpy.QtCore.QFileInfo"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newIcon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "updateRecentFile", "(", "self", ")", ":", "\n", "        ", "menu", "=", "self", ".", "menus", ".", "recent_files", "\n", "menu", ".", "clear", "(", ")", "\n", "recentFiles", "=", "self", ".", "settings", ".", "value", "(", "\n", "\"recent_files\"", ",", "QVariant", "(", "[", "]", ")", ",", "type", "=", "list", ")", "\n", "files", "=", "[", "f", "for", "f", "in", "recentFiles", "if", "osp", ".", "exists", "(", "f", ")", "]", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "files", ")", ":", "\n", "            ", "icon", "=", "util", ".", "newIcon", "(", "\"File\"", ")", "\n", "action", "=", "QtWidgets", ".", "QAction", "(", "icon", ",", "\"&\u3010%d\u3011 %s\"", "%", "\n", "(", "i", "+", "1", ",", "QtCore", ".", "QFileInfo", "(", "f", ")", ".", "fileName", "(", ")", ")", ",", "\n", "self", ")", "\n", "action", ".", "triggered", ".", "connect", "(", "partial", "(", "self", ".", "openRecentImage", ",", "f", ")", ")", "\n", "menu", ".", "addAction", "(", "action", ")", "\n", "", "if", "len", "(", "files", ")", "==", "0", ":", "\n", "            ", "menu", ".", "addAction", "(", "self", ".", "tr", "(", "\"\u65e0\u8fd1\u671f\u6587\u4ef6\"", ")", ")", "\n", "", "self", ".", "settings", ".", "setValue", "(", "\"recent_files\"", ",", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.addRecentFile": [[667, 677], ["app.APP_EISeg.settings.value", "app.APP_EISeg.settings.setValue", "app.APP_EISeg.updateRecentFile", "os.exists", "os.exists", "qtpy.QtCore.QVariant", "app.APP_EISeg.append", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateRecentFile", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "addRecentFile", "(", "self", ",", "path", ")", ":", "\n", "        ", "if", "not", "osp", ".", "exists", "(", "path", ")", ":", "\n", "            ", "return", "\n", "", "paths", "=", "self", ".", "settings", ".", "value", "(", "\"recent_files\"", ",", "QVariant", "(", "[", "]", ")", ",", "type", "=", "list", ")", "\n", "if", "path", "not", "in", "paths", ":", "\n", "            ", "paths", ".", "append", "(", "path", ")", "\n", "", "if", "len", "(", "paths", ")", ">", "15", ":", "\n", "            ", "del", "paths", "[", "0", "]", "\n", "", "self", ".", "settings", ".", "setValue", "(", "\"recent_files\"", ",", "paths", ")", "\n", "self", ".", "updateRecentFile", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.clearRecentFile": [[678, 681], ["app.APP_EISeg.settings.remove", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "clearRecentFile", "(", "self", ")", ":", "\n", "        ", "self", ".", "settings", ".", "remove", "(", "\"recent_files\"", ")", "\n", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "\"\u5df2\u6e05\u9664\u6700\u8fd1\u6253\u5f00\u6587\u4ef6\"", ")", ",", "10000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateModelMenu": [[683, 702], ["menu.clear", "enumerate", "app.APP_EISeg.settings.setValue", "util.newIcon", "qtpy.QtWidgets.QAction", "qtpy.QtWidgets.QAction.triggered.connect", "menu.addAction", "len", "menu.addAction", "os.exists", "os.exists", "functools.partial", "app.APP_EISeg.tr", "os.basename", "os.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newIcon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "updateModelMenu", "(", "self", ")", ":", "\n", "        ", "menu", "=", "self", ".", "menus", ".", "recent_params", "\n", "menu", ".", "clear", "(", ")", "\n", "\n", "self", ".", "recentModels", "=", "[", "\n", "m", "for", "m", "in", "self", ".", "recentModels", "if", "osp", ".", "exists", "(", "m", "[", "\"param_path\"", "]", ")", "\n", "]", "\n", "for", "idx", ",", "m", "in", "enumerate", "(", "self", ".", "recentModels", ")", ":", "\n", "            ", "icon", "=", "util", ".", "newIcon", "(", "\"Model\"", ")", "\n", "action", "=", "QtWidgets", ".", "QAction", "(", "\n", "icon", ",", "\n", "f\"{osp.basename(m['param_path'])}\"", ",", "\n", "self", ",", ")", "\n", "action", ".", "triggered", ".", "connect", "(", "\n", "partial", "(", "self", ".", "setModelParam", ",", "m", "[", "\"param_path\"", "]", ")", ")", "\n", "menu", ".", "addAction", "(", "action", ")", "\n", "", "if", "len", "(", "self", ".", "recentModels", ")", "==", "0", ":", "\n", "            ", "menu", ".", "addAction", "(", "self", ".", "tr", "(", "\"\u65e0\u8fd1\u671f\u6a21\u578b\u8bb0\u5f55\"", ")", ")", "\n", "", "self", ".", "settings", ".", "setValue", "(", "\"recent_params\"", ",", "self", ".", "recentModels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setModelParam": [[703, 708], ["app.APP_EISeg.changeParam"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeParam"], ["", "def", "setModelParam", "(", "self", ",", "paramPath", ")", ":", "\n", "        ", "res", "=", "self", ".", "changeParam", "(", "paramPath", ")", "\n", "if", "res", ":", "\n", "            ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeParam": [[709, 731], ["util.check_cn", "app.ModelThread", "app.APP_EISeg.load_thread._signal.connect", "app.APP_EISeg.load_thread.start", "app.APP_EISeg.tr", "qtpy.QtWidgets.QFileDialog.getOpenFileName", "app.APP_EISeg.warn", "os.dirname", "os.dirname", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "len", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.opath.check_cn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "changeParam", "(", "self", ",", "param_path", ":", "str", "=", "None", ")", ":", "\n", "        ", "if", "not", "param_path", ":", "\n", "            ", "filters", "=", "self", ".", "tr", "(", "\"Paddle\u9759\u6001\u6a21\u578b\u6743\u91cd\u6587\u4ef6(*.pdiparams)\"", ")", "\n", "start_path", "=", "(", "\".\"", "if", "len", "(", "self", ".", "recentModels", ")", "==", "0", "else", "\n", "osp", ".", "dirname", "(", "self", ".", "recentModels", "[", "-", "1", "]", "[", "\"param_path\"", "]", ")", ")", "\n", "param_path", ",", "_", "=", "QtWidgets", ".", "QFileDialog", ".", "getOpenFileName", "(", "\n", "self", ",", "\n", "self", ".", "tr", "(", "\"\u9009\u62e9\u6a21\u578b\u53c2\u6570\"", ")", "+", "\" - \"", "+", "__APPNAME__", ",", "\n", "start_path", ",", "\n", "filters", ",", ")", "\n", "", "if", "not", "param_path", ":", "\n", "            ", "return", "False", "\n", "\n", "# \u4e2d\u6587\u8def\u5f84\u6253\u4e0d\u5f00", "\n", "", "if", "check_cn", "(", "param_path", ")", ":", "\n", "            ", "self", ".", "warn", "(", "self", ".", "tr", "(", "\"\u53c2\u6570\u8def\u5f84\u5b58\u5728\u4e2d\u6587\"", ")", ",", "self", ".", "tr", "(", "\"\u8bf7\u4fee\u6539\u53c2\u6570\u8def\u5f84\u4e3a\u975e\u4e2d\u6587\u8def\u5f84\uff01\"", ")", ")", "\n", "return", "False", "\n", "\n", "# success, res = self.controller.setModel(param_path)", "\n", "", "self", ".", "load_thread", "=", "ModelThread", "(", "self", ".", "controller", ",", "param_path", ")", "\n", "self", ".", "load_thread", ".", "_signal", ".", "connect", "(", "self", ".", "__change_model_callback", ")", "\n", "self", ".", "load_thread", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.__change_model_callback": [[732, 752], ["app.APP_EISeg.settings.setValue", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.warnException", "app.APP_EISeg.recentModels.insert", "app.APP_EISeg.recentModels.remove", "app.APP_EISeg.recentModels.insert", "len", "os.basename", "os.basename", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warnException", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "__change_model_callback", "(", "self", ",", "signal_dict", ":", "dict", ")", ":", "\n", "        ", "success", "=", "signal_dict", "[", "\"success\"", "]", "\n", "res", "=", "signal_dict", "[", "\"res\"", "]", "\n", "param_path", "=", "signal_dict", "[", "\"param_path\"", "]", "\n", "if", "success", ":", "\n", "            ", "model_dict", "=", "{", "\"param_path\"", ":", "param_path", "}", "\n", "if", "model_dict", "not", "in", "self", ".", "recentModels", ":", "\n", "                ", "self", ".", "recentModels", ".", "insert", "(", "0", ",", "model_dict", ")", "\n", "if", "len", "(", "self", ".", "recentModels", ")", ">", "10", ":", "\n", "                    ", "del", "self", ".", "recentModels", "[", "-", "1", "]", "\n", "", "", "else", ":", "# \u5982\u679c\u5b58\u5728\u79fb\u52a8\u4f4d\u7f6e\uff0c\u786e\u4fdd\u52a0\u8f7d\u6700\u8fd1\u6a21\u578b\u7684\u6b63\u786e", "\n", "                ", "self", ".", "recentModels", ".", "remove", "(", "model_dict", ")", "\n", "self", ".", "recentModels", ".", "insert", "(", "0", ",", "model_dict", ")", "\n", "", "self", ".", "settings", ".", "setValue", "(", "\"recent_models\"", ",", "self", ".", "recentModels", ")", "\n", "self", ".", "statusbar", ".", "showMessage", "(", "\n", "osp", ".", "basename", "(", "param_path", ")", "+", "self", ".", "tr", "(", "\" \u6a21\u578b\u52a0\u8f7d\u6210\u529f\"", ")", ",", "10000", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "warnException", "(", "res", ")", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.chooseMode": [[753, 761], ["app.APP_EISeg.cheWithMask.isChecked", "app.APP_EISeg.controller.reset_predictor", "app.APP_EISeg.cheWithMask.isChecked", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.tr", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.reset_predictor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "", "def", "chooseMode", "(", "self", ")", ":", "\n", "        ", "self", ".", "predictor_params", "[", "\"predictor_params\"", "]", "[", "\n", "\"with_mask\"", "]", "=", "self", ".", "cheWithMask", ".", "isChecked", "(", ")", "\n", "self", ".", "controller", ".", "reset_predictor", "(", "predictor_params", "=", "self", ".", "predictor_params", ")", "\n", "if", "self", ".", "cheWithMask", ".", "isChecked", "(", ")", ":", "\n", "            ", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "\"\u63a9\u819c\u5df2\u542f\u7528\"", ")", ",", "10000", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "\"\u63a9\u819c\u5df2\u5173\u95ed\"", ")", ",", "10000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadRecentModelParam": [[762, 769], ["app.APP_EISeg.setModelParam", "len", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setModelParam", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "", "def", "loadRecentModelParam", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "recentModels", ")", "==", "0", ":", "\n", "            ", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "\"\u6ca1\u6709\u6700\u8fd1\u4f7f\u7528\u6a21\u578b\u4fe1\u606f\uff0c\u8bf7\u52a0\u8f7d\u6a21\u578b\"", ")", ",", "10000", ")", "\n", "return", "\n", "", "m", "=", "self", ".", "recentModels", "[", "0", "]", "\n", "param_path", "=", "m", "[", "\"param_path\"", "]", "\n", "self", ".", "setModelParam", "(", "param_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.importLabelList": [[771, 785], ["util.normcase", "app.APP_EISeg.controller.importLabel", "eiseg.logger.info", "app.APP_EISeg.refreshLabelList", "qtpy.QtWidgets.QFileDialog.getOpenFileName", "os.exists", "os.exists", "app.APP_EISeg.tr", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.opath.normcase", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.importLabel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.refreshLabelList", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "importLabelList", "(", "self", ",", "filePath", "=", "None", ")", ":", "\n", "        ", "if", "filePath", "is", "None", ":", "\n", "            ", "filters", "=", "self", ".", "tr", "(", "\"\u6807\u7b7e\u914d\u7f6e\u6587\u4ef6\"", ")", "+", "\" (*.txt)\"", "\n", "filePath", ",", "_", "=", "QtWidgets", ".", "QFileDialog", ".", "getOpenFileName", "(", "\n", "self", ",", "\n", "self", ".", "tr", "(", "\"\u9009\u62e9\u6807\u7b7e\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\"", ")", "+", "\" - \"", "+", "__APPNAME__", ",", "\n", "\".\"", ",", "\n", "filters", ",", ")", "\n", "", "filePath", "=", "normcase", "(", "filePath", ")", "\n", "if", "not", "osp", ".", "exists", "(", "filePath", ")", ":", "\n", "            ", "return", "\n", "", "self", ".", "controller", ".", "importLabel", "(", "filePath", ")", "\n", "logger", ".", "info", "(", "f\"Loaded label list: {self.controller.labelList.labelList}\"", ")", "\n", "self", ".", "refreshLabelList", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.exportLabelList": [[786, 800], ["app.APP_EISeg.controller.exportLabel", "len", "app.APP_EISeg.warn", "qtpy.QtWidgets.QFileDialog", "qtpy.QtWidgets.QFileDialog.setDefaultSuffix", "qtpy.QtWidgets.QFileDialog.setAcceptMode", "qtpy.QtWidgets.QFileDialog.setOption", "qtpy.QtWidgets.QFileDialog.getSaveFileName", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.exportLabel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "exportLabelList", "(", "self", ",", "savePath", ":", "str", "=", "None", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "controller", ".", "labelList", ")", "==", "0", ":", "\n", "            ", "self", ".", "warn", "(", "self", ".", "tr", "(", "\"\u6ca1\u6709\u9700\u8981\u4fdd\u5b58\u7684\u6807\u7b7e\"", ")", ",", "self", ".", "tr", "(", "\"\u8bf7\u5148\u6dfb\u52a0\u6807\u7b7e\u4e4b\u540e\u518d\u8fdb\u884c\u4fdd\u5b58\uff01\"", ")", ")", "\n", "return", "\n", "", "if", "savePath", "is", "None", ":", "\n", "            ", "filters", "=", "self", ".", "tr", "(", "\"\u6807\u7b7e\u914d\u7f6e\u6587\u4ef6\"", ")", "+", "\"(*.txt)\"", "\n", "dlg", "=", "QtWidgets", ".", "QFileDialog", "(", "self", ",", "self", ".", "tr", "(", "\"\u4fdd\u5b58\u6807\u7b7e\u914d\u7f6e\u6587\u4ef6\"", ")", ",", "\".\"", ",", "filters", ")", "\n", "dlg", ".", "setDefaultSuffix", "(", "\"txt\"", ")", "\n", "dlg", ".", "setAcceptMode", "(", "QtWidgets", ".", "QFileDialog", ".", "AcceptSave", ")", "\n", "dlg", ".", "setOption", "(", "QtWidgets", ".", "QFileDialog", ".", "DontConfirmOverwrite", ",", "False", ")", "\n", "savePath", ",", "_", "=", "dlg", ".", "getSaveFileName", "(", "\n", "self", ",", "\n", "self", ".", "tr", "(", "\"\u9009\u62e9\u4fdd\u5b58\u6807\u7b7e\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\"", ")", "+", "\" - \"", "+", "__APPNAME__", ",", "\".\"", ",", "filters", ")", "\n", "", "self", ".", "controller", ".", "exportLabel", "(", "savePath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.addLabel": [[801, 822], ["app.APP_EISeg.colorMap.get_color", "table.rowCount", "table.insertRow", "app.APP_EISeg.controller.addLabel", "qtpy.QtWidgets.QTableWidgetItem", "qtpy.QtWidgets.QTableWidgetItem.setFlags", "table.setItem", "table.setItem", "qtpy.QtWidgets.QTableWidgetItem", "qtpy.QtWidgets.QTableWidgetItem.setBackground", "qtpy.QtWidgets.QTableWidgetItem.setFlags", "table.setItem", "qtpy.QtWidgets.QTableWidgetItem", "qtpy.QtWidgets.QTableWidgetItem.setIcon", "qtpy.QtWidgets.QTableWidgetItem.setTextAlignment", "qtpy.QtWidgets.QTableWidgetItem.setFlags", "table.setItem", "app.APP_EISeg.adjustTableSize", "app.APP_EISeg.labelListClicked", "table.rowCount", "str", "qtpy.QtWidgets.QTableWidgetItem", "qtpy.QtGui.QColor", "util.newIcon", "app.APP_EISeg.labelListTable.rowCount"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.colormap.ColorMap.get_color", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.addLabel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.adjustTableSize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.labelListClicked", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newIcon"], ["", "def", "addLabel", "(", "self", ")", ":", "\n", "        ", "c", "=", "self", ".", "colorMap", ".", "get_color", "(", ")", "\n", "table", "=", "self", ".", "labelListTable", "\n", "idx", "=", "table", ".", "rowCount", "(", ")", "\n", "table", ".", "insertRow", "(", "table", ".", "rowCount", "(", ")", ")", "\n", "self", ".", "controller", ".", "addLabel", "(", "idx", "+", "1", ",", "\"\"", ",", "c", ")", "\n", "numberItem", "=", "QTableWidgetItem", "(", "str", "(", "idx", "+", "1", ")", ")", "\n", "numberItem", ".", "setFlags", "(", "QtCore", ".", "Qt", ".", "ItemIsEnabled", ")", "\n", "table", ".", "setItem", "(", "idx", ",", "0", ",", "numberItem", ")", "\n", "table", ".", "setItem", "(", "idx", ",", "1", ",", "QTableWidgetItem", "(", ")", ")", "\n", "colorItem", "=", "QTableWidgetItem", "(", ")", "\n", "colorItem", ".", "setBackground", "(", "QtGui", ".", "QColor", "(", "c", "[", "0", "]", ",", "c", "[", "1", "]", ",", "c", "[", "2", "]", ")", ")", "\n", "colorItem", ".", "setFlags", "(", "QtCore", ".", "Qt", ".", "ItemIsEnabled", ")", "\n", "table", ".", "setItem", "(", "idx", ",", "2", ",", "colorItem", ")", "\n", "delItem", "=", "QTableWidgetItem", "(", ")", "\n", "delItem", ".", "setIcon", "(", "util", ".", "newIcon", "(", "\"Clear\"", ")", ")", "\n", "delItem", ".", "setTextAlignment", "(", "Qt", ".", "AlignCenter", ")", "\n", "delItem", ".", "setFlags", "(", "QtCore", ".", "Qt", ".", "ItemIsEnabled", ")", "\n", "table", ".", "setItem", "(", "idx", ",", "3", ",", "delItem", ")", "\n", "self", ".", "adjustTableSize", "(", ")", "\n", "self", ".", "labelListClicked", "(", "self", ".", "labelListTable", ".", "rowCount", "(", ")", "-", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.adjustTableSize": [[823, 832], ["app.APP_EISeg.labelListTable.horizontalHeader().setDefaultSectionSize", "app.APP_EISeg.labelListTable.horizontalHeader().setSectionResizeMode", "app.APP_EISeg.labelListTable.horizontalHeader().setSectionResizeMode", "app.APP_EISeg.labelListTable.horizontalHeader().setSectionResizeMode", "app.APP_EISeg.labelListTable.setColumnWidth", "app.APP_EISeg.labelListTable.horizontalHeader", "app.APP_EISeg.labelListTable.horizontalHeader", "app.APP_EISeg.labelListTable.horizontalHeader", "app.APP_EISeg.labelListTable.horizontalHeader"], "methods", ["None"], ["", "def", "adjustTableSize", "(", "self", ")", ":", "\n", "        ", "self", ".", "labelListTable", ".", "horizontalHeader", "(", ")", ".", "setDefaultSectionSize", "(", "25", ")", "\n", "self", ".", "labelListTable", ".", "horizontalHeader", "(", ")", ".", "setSectionResizeMode", "(", "\n", "0", ",", "QtWidgets", ".", "QHeaderView", ".", "Fixed", ")", "\n", "self", ".", "labelListTable", ".", "horizontalHeader", "(", ")", ".", "setSectionResizeMode", "(", "\n", "3", ",", "QtWidgets", ".", "QHeaderView", ".", "Fixed", ")", "\n", "self", ".", "labelListTable", ".", "horizontalHeader", "(", ")", ".", "setSectionResizeMode", "(", "\n", "2", ",", "QtWidgets", ".", "QHeaderView", ".", "Fixed", ")", "\n", "self", ".", "labelListTable", ".", "setColumnWidth", "(", "2", ",", "50", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.clearLabelList": [[833, 849], ["app.APP_EISeg.warn", "app.APP_EISeg.controller.labelList.clear", "app.APP_EISeg.labelListTable.clear", "app.APP_EISeg.labelListTable.setRowCount", "len", "app.APP_EISeg.tr", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "clearLabelList", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "controller", ".", "labelList", ")", "==", "0", ":", "\n", "            ", "return", "True", "\n", "", "res", "=", "self", ".", "warn", "(", "\n", "self", ".", "tr", "(", "\"\u6e05\u7a7a\u6807\u7b7e\u5217\u8868?\"", ")", ",", "\n", "self", ".", "tr", "(", "\"\u8bf7\u786e\u8ba4\u662f\u5426\u8981\u6e05\u7a7a\u6807\u7b7e\u5217\u8868\"", ")", ",", "\n", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "Cancel", ",", ")", "\n", "if", "res", "==", "QMessageBox", ".", "Cancel", ":", "\n", "            ", "return", "False", "\n", "", "self", ".", "controller", ".", "labelList", ".", "clear", "(", ")", "\n", "if", "self", ".", "controller", ":", "\n", "            ", "self", ".", "controller", ".", "label_list", "=", "[", "]", "\n", "self", ".", "controller", ".", "curr_label_number", "=", "0", "\n", "", "self", ".", "labelListTable", ".", "clear", "(", ")", "\n", "self", ".", "labelListTable", ".", "setRowCount", "(", "0", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.refreshLabelList": [[850, 876], ["table.clearContents", "table.setRowCount", "table.setColumnCount", "enumerate", "app.APP_EISeg.adjustTableSize", "len", "qtpy.QtWidgets.QTableWidgetItem", "qtpy.QtWidgets.QTableWidgetItem.setFlags", "table.setItem", "table.setItem", "qtpy.QtWidgets.QTableWidgetItem", "qtpy.QtWidgets.QTableWidgetItem.setBackground", "qtpy.QtWidgets.QTableWidgetItem.setFlags", "table.setItem", "qtpy.QtWidgets.QTableWidgetItem", "qtpy.QtWidgets.QTableWidgetItem.setIcon", "qtpy.QtWidgets.QTableWidgetItem.setTextAlignment", "qtpy.QtWidgets.QTableWidgetItem.setFlags", "table.setItem", "app.APP_EISeg.adjustTableSize", "table.resizeColumnToContents", "str", "qtpy.QtWidgets.QTableWidgetItem", "qtpy.QtGui.QColor", "util.newIcon"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.adjustTableSize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.adjustTableSize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newIcon"], ["", "def", "refreshLabelList", "(", "self", ")", ":", "\n", "        ", "table", "=", "self", ".", "labelListTable", "\n", "table", ".", "clearContents", "(", ")", "\n", "table", ".", "setRowCount", "(", "len", "(", "self", ".", "controller", ".", "labelList", ")", ")", "\n", "table", ".", "setColumnCount", "(", "4", ")", "\n", "for", "idx", ",", "lab", "in", "enumerate", "(", "self", ".", "controller", ".", "labelList", ")", ":", "\n", "            ", "numberItem", "=", "QTableWidgetItem", "(", "str", "(", "lab", ".", "idx", ")", ")", "\n", "numberItem", ".", "setFlags", "(", "QtCore", ".", "Qt", ".", "ItemIsEnabled", ")", "\n", "table", ".", "setItem", "(", "idx", ",", "0", ",", "numberItem", ")", "\n", "table", ".", "setItem", "(", "idx", ",", "1", ",", "QTableWidgetItem", "(", "lab", ".", "name", ")", ")", "\n", "c", "=", "lab", ".", "color", "\n", "colorItem", "=", "QTableWidgetItem", "(", ")", "\n", "colorItem", ".", "setBackground", "(", "QtGui", ".", "QColor", "(", "c", "[", "0", "]", ",", "c", "[", "1", "]", ",", "c", "[", "2", "]", ")", ")", "\n", "colorItem", ".", "setFlags", "(", "QtCore", ".", "Qt", ".", "ItemIsEnabled", ")", "\n", "table", ".", "setItem", "(", "idx", ",", "2", ",", "colorItem", ")", "\n", "delItem", "=", "QTableWidgetItem", "(", ")", "\n", "delItem", ".", "setIcon", "(", "util", ".", "newIcon", "(", "\"Clear\"", ")", ")", "\n", "delItem", ".", "setTextAlignment", "(", "Qt", ".", "AlignCenter", ")", "\n", "delItem", ".", "setFlags", "(", "QtCore", ".", "Qt", ".", "ItemIsEnabled", ")", "\n", "table", ".", "setItem", "(", "idx", ",", "3", ",", "delItem", ")", "\n", "self", ".", "adjustTableSize", "(", ")", "\n", "\n", "", "cols", "=", "[", "0", ",", "1", ",", "3", "]", "\n", "for", "idx", "in", "cols", ":", "\n", "            ", "table", ".", "resizeColumnToContents", "(", "idx", ")", "\n", "", "self", ".", "adjustTableSize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.labelListDoubleClick": [[877, 894], ["qtpy.QtWidgets.QColorDialog.getColor", "table.item().setBackground", "app.APP_EISeg.labelListClicked", "qtpy.QtWidgets.QColorDialog.getColor.getRgb", "qtpy.QtWidgets.QColorDialog.getColor.getRgb", "app.APP_EISeg.controller.labelList.getLabelById", "table.item", "p.setColor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.labelListClicked", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.getLabelById", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setColor"], ["", "def", "labelListDoubleClick", "(", "self", ",", "row", ",", "col", ")", ":", "\n", "        ", "if", "col", "!=", "2", ":", "\n", "            ", "return", "\n", "", "table", "=", "self", ".", "labelListTable", "\n", "color", "=", "QtWidgets", ".", "QColorDialog", ".", "getColor", "(", ")", "\n", "if", "color", ".", "getRgb", "(", ")", "==", "(", "0", ",", "0", ",", "0", ",", "255", ")", ":", "\n", "            ", "return", "\n", "", "table", ".", "item", "(", "row", ",", "col", ")", ".", "setBackground", "(", "color", ")", "\n", "self", ".", "controller", ".", "labelList", "[", "row", "]", ".", "color", "=", "color", ".", "getRgb", "(", ")", "[", ":", "3", "]", "\n", "if", "self", ".", "controller", ":", "\n", "            ", "self", ".", "controller", ".", "label_list", "=", "self", ".", "controller", ".", "labelList", "\n", "", "for", "p", "in", "self", ".", "scene", ".", "polygon_items", ":", "\n", "            ", "idlab", "=", "self", ".", "controller", ".", "labelList", ".", "getLabelById", "(", "p", ".", "labelIndex", ")", "\n", "if", "idlab", "is", "not", "None", ":", "\n", "                ", "color", "=", "idlab", ".", "color", "\n", "p", ".", "setColor", "(", "color", ",", "color", ")", "\n", "", "", "self", ".", "labelListClicked", "(", "row", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.currLabelIdx": [[895, 898], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "currLabelIdx", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "controller", ".", "curr_label_number", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.labelListClicked": [[899, 916], ["int", "app.APP_EISeg.controller.labelList.remove", "table.removeRow", "range", "table.item().text", "range", "table.item().setBackground", "table.item().setSelected", "app.APP_EISeg.controller.setCurrLabelIdx", "len", "table.item().setBackground", "qtpy.QtGui.QColor", "int", "table.item", "qtpy.QtGui.QColor", "table.item", "table.item", "table.item().text", "table.item", "table.item"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setCurrLabelIdx"], ["", "def", "labelListClicked", "(", "self", ",", "row", ",", "col", ")", ":", "\n", "        ", "table", "=", "self", ".", "labelListTable", "\n", "if", "col", "==", "3", ":", "\n", "            ", "labelIdx", "=", "int", "(", "table", ".", "item", "(", "row", ",", "0", ")", ".", "text", "(", ")", ")", "\n", "self", ".", "controller", ".", "labelList", ".", "remove", "(", "labelIdx", ")", "\n", "table", ".", "removeRow", "(", "row", ")", "\n", "\n", "", "if", "col", "==", "0", "or", "col", "==", "1", ":", "\n", "            ", "for", "cl", "in", "range", "(", "2", ")", ":", "\n", "                ", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "controller", ".", "labelList", ")", ")", ":", "\n", "                    ", "table", ".", "item", "(", "idx", ",", "\n", "cl", ")", ".", "setBackground", "(", "QtGui", ".", "QColor", "(", "255", ",", "255", ",", "255", ")", ")", "\n", "", "table", ".", "item", "(", "row", ",", "cl", ")", ".", "setBackground", "(", "QtGui", ".", "QColor", "(", "48", ",", "140", ",", "198", ")", ")", "\n", "table", ".", "item", "(", "row", ",", "0", ")", ".", "setSelected", "(", "True", ")", "\n", "", "if", "self", ".", "controller", ":", "\n", "                ", "self", ".", "controller", ".", "setCurrLabelIdx", "(", "int", "(", "table", ".", "item", "(", "row", ",", "0", ")", ".", "text", "(", ")", ")", ")", "\n", "self", ".", "controller", ".", "label_list", "=", "self", ".", "controller", ".", "labelList", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.labelListItemChanged": [[917, 925], ["app.APP_EISeg.labelListTable.item().text", "app.APP_EISeg.labelListTable.item"], "methods", ["None"], ["", "", "", "def", "labelListItemChanged", "(", "self", ",", "row", ",", "col", ")", ":", "\n", "        ", "self", ".", "colorMap", ".", "usedColors", "=", "self", ".", "controller", ".", "labelList", ".", "colors", "\n", "try", ":", "\n", "            ", "if", "col", "==", "1", ":", "\n", "                ", "name", "=", "self", ".", "labelListTable", ".", "item", "(", "row", ",", "col", ")", ".", "text", "(", ")", "\n", "self", ".", "controller", ".", "labelList", "[", "row", "]", ".", "name", "=", "name", "\n", "", "", "except", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.createPoly": [[927, 947], ["widget.PolygonAnnotation", "app.APP_EISeg.scene.addItem", "app.APP_EISeg.scene.polygon_items.append", "app.APP_EISeg.setDirty", "len", "widget.PolygonAnnotation.addPointLast", "qtpy.QtCore.QPointF"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.addPointLast"], ["", "", "def", "createPoly", "(", "self", ",", "curr_polygon", ",", "color", ")", ":", "\n", "        ", "if", "curr_polygon", "is", "None", ":", "\n", "            ", "return", "\n", "", "for", "points", "in", "curr_polygon", ":", "\n", "            ", "if", "len", "(", "points", ")", "<", "3", ":", "\n", "                ", "continue", "\n", "", "poly", "=", "PolygonAnnotation", "(", "\n", "self", ".", "controller", ".", "labelList", "[", "self", ".", "currLabelIdx", "]", ".", "idx", ",", "\n", "self", ".", "controller", ".", "image", ".", "shape", ",", "\n", "self", ".", "delPolygon", ",", "\n", "self", ".", "setDirty", ",", "\n", "color", ",", "\n", "color", ",", "\n", "self", ".", "opacity", ",", ")", "\n", "poly", ".", "labelIndex", "=", "self", ".", "controller", ".", "labelList", "[", "self", ".", "currLabelIdx", "]", ".", "idx", "\n", "self", ".", "scene", ".", "addItem", "(", "poly", ")", "\n", "self", ".", "scene", ".", "polygon_items", ".", "append", "(", "poly", ")", "\n", "for", "p", "in", "points", ":", "\n", "                ", "poly", ".", "addPointLast", "(", "QtCore", ".", "QPointF", "(", "p", "[", "0", "]", ",", "p", "[", "1", "]", ")", ")", "\n", "", "self", ".", "setDirty", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.delActivePolygon": [[948, 957], ["enumerate", "polygon.hasFocus", "app.APP_EISeg.warn", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.delPolygon"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.delPolygon"], ["", "", "def", "delActivePolygon", "(", "self", ")", ":", "\n", "        ", "for", "idx", ",", "polygon", "in", "enumerate", "(", "self", ".", "scene", ".", "polygon_items", ")", ":", "\n", "            ", "if", "polygon", ".", "hasFocus", "(", ")", ":", "\n", "                ", "res", "=", "self", ".", "warn", "(", "\n", "self", ".", "tr", "(", "\"\u786e\u8ba4\u5220\u9664\uff1f\"", ")", ",", "\n", "self", ".", "tr", "(", "\"\u786e\u8ba4\u8981\u5220\u9664\u5f53\u524d\u9009\u4e2d\u591a\u8fb9\u5f62\u6807\u6ce8\uff1f\"", ")", ",", "\n", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "Cancel", ",", ")", "\n", "if", "res", "==", "QMessageBox", ".", "Yes", ":", "\n", "                    ", "self", ".", "delPolygon", "(", "polygon", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.delPolygon": [[958, 966], ["polygon.remove", "app.APP_EISeg.setDirty", "app.APP_EISeg.coco.delAnnotation", "os.basename", "os.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.delAnnotation"], ["", "", "", "", "def", "delPolygon", "(", "self", ",", "polygon", ")", ":", "\n", "        ", "polygon", ".", "remove", "(", ")", "\n", "if", "self", ".", "save_status", "[", "\"coco\"", "]", ":", "\n", "            ", "if", "polygon", ".", "coco_id", ":", "\n", "                ", "self", ".", "coco", ".", "delAnnotation", "(", "\n", "polygon", ".", "coco_id", ",", "\n", "self", ".", "coco", ".", "imgNameToId", "[", "osp", ".", "basename", "(", "self", ".", "imagePath", ")", "]", ",", ")", "\n", "", "", "self", ".", "setDirty", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.delAllPolygon": [[967, 970], ["app.APP_EISeg.delPolygon"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.delPolygon"], ["", "def", "delAllPolygon", "(", "self", ")", ":", "\n", "        ", "for", "p", "in", "self", ".", "scene", ".", "polygon_items", "[", ":", ":", "-", "1", "]", ":", "# \u5220\u9664\u6240\u6709\u591a\u8fb9\u5f62", "\n", "            ", "self", ".", "delPolygon", "(", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.delActivePoint": [[971, 974], ["polygon.removeFocusPoint"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.removeFocusPoint"], ["", "", "def", "delActivePoint", "(", "self", ")", ":", "\n", "        ", "for", "polygon", "in", "self", ".", "scene", ".", "polygon_items", ":", "\n", "            ", "polygon", ".", "removeFocusPoint", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.getMask": [[976, 993], ["numpy.zeros", "app.APP_EISeg.labelListTable.rowCount", "range", "int", "app.APP_EISeg.labelListTable.item().text", "numpy.int32", "cv2.fillPoly", "app.APP_EISeg.labelListTable.item", "numpy.array"], "methods", ["None"], ["", "", "def", "getMask", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "controller", "or", "self", ".", "controller", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "s", "=", "self", ".", "controller", ".", "imgShape", "\n", "pesudo", "=", "np", ".", "zeros", "(", "[", "s", "[", "0", "]", ",", "s", "[", "1", "]", "]", ")", "\n", "# \u8986\u76d6\u987a\u5e8f\uff0c\u4ece\u4e0a\u5f80\u4e0b", "\n", "# TODO: \u662f\u6807\u7b7e\u6570\u503c\u5927\u7684\u4f1a\u8986\u76d6\u5c0f\u7684\u5417?", "\n", "# A: \u662f\u5217\u8868\u4e2d\u4e0a\u9762\u7684\u8986\u76d6\u4e0b\u9762\u7684\uff0c\u7531\u4e8e\u6807\u7b7e\u53ef\u4ee5\u79fb\u52a8\uff0c\u4e0d\u4e00\u5b9a\u662f\u5927\u5c0f\u6309\u987a\u5e8f\u8986\u76d6", "\n", "# RE: \u6211\u4eec\u505a\u533b\u5b66\u7684\u65f6\u5019\u8986\u76d6\u6bd4\u8f83\u591a\uff0c\u611f\u89c9\u4e00\u822c\u662f\u6570\u503c\u5927\u7684\u6807\u7b7e\u8986\u76d6\u6570\u503c\u5c0f\u7684\u6807\u7b7e\u3002\u6309\u7167\u4e0a\u9762\u8986\u76d6\u4e0b\u9762\u7684\u8bdd\u53ef\u80fd\u8ddf\u5e38\u89c1\u7684\u60c5\u51b5\u6b63\u597d\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u611f\u89c9\u53ef\u80fd\u4ece\u4e0b\u5f80\u4e0a\u8986\u76d6\u4f1a\u6bd4\u8f83\u597d", "\n", "len_lab", "=", "self", ".", "labelListTable", ".", "rowCount", "(", ")", "\n", "for", "i", "in", "range", "(", "len_lab", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "            ", "idx", "=", "int", "(", "self", ".", "labelListTable", ".", "item", "(", "len_lab", "-", "i", "-", "1", ",", "0", ")", ".", "text", "(", ")", ")", "\n", "for", "poly", "in", "self", ".", "scene", ".", "polygon_items", ":", "\n", "                ", "if", "poly", ".", "labelIndex", "==", "idx", ":", "\n", "                    ", "pts", "=", "np", ".", "int32", "(", "[", "np", ".", "array", "(", "poly", ".", "scnenePoints", ")", "]", ")", "\n", "cv2", ".", "fillPoly", "(", "pesudo", ",", "pts", "=", "pts", ",", "color", "=", "idx", ")", "\n", "", "", "", "return", "pesudo", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.openRecentImage": [[994, 1000], ["app.APP_EISeg.queueEvent", "app.APP_EISeg.listFiles.addItems", "app.APP_EISeg.listFiles.setCurrentRow", "app.APP_EISeg.imagePaths.append", "functools.partial", "app.APP_EISeg.listFiles.count", "file_path.replace"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.queueEvent", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "openRecentImage", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "self", ".", "queueEvent", "(", "partial", "(", "self", ".", "loadImage", ",", "file_path", ")", ")", "\n", "self", ".", "listFiles", ".", "addItems", "(", "[", "file_path", ".", "replace", "(", "\"\\\\\"", ",", "\"/\"", ")", "]", ")", "\n", "self", ".", "currIdx", "=", "self", ".", "listFiles", ".", "count", "(", ")", "-", "1", "\n", "self", ".", "listFiles", ".", "setCurrentRow", "(", "self", ".", "currIdx", ")", "# \u79fb\u52a8\u4f4d\u7f6e", "\n", "self", ".", "imagePaths", ".", "append", "(", "file_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.openImage": [[1001, 1031], ["util.normcase", "app.APP_EISeg.listFiles.addItems", "app.APP_EISeg.listFiles.setCurrentRow", "app.APP_EISeg.imagePaths.append", "zip", "app.APP_EISeg.settings.value", "qtpy.QtWidgets.QFileDialog.getOpenFileName", "app.APP_EISeg.loadImage", "app.APP_EISeg.listFiles.count", "isinstance", "len", "os.dirname", "os.dirname", "len", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.opath.normcase", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "openImage", "(", "self", ",", "filePath", ":", "str", "=", "None", ")", ":", "\n", "# \u5728triggered.connect\u4e2d\u4f7f\u7528\u4e0d\u7ba1\u9ed8\u8ba4filePath\u4e3a\u4ec0\u4e48\u8fd4\u56de\u503c\u90fd\u4e3aFalse", "\n", "        ", "if", "not", "isinstance", "(", "filePath", ",", "str", ")", "or", "filePath", "is", "False", ":", "\n", "            ", "prompts", "=", "[", "\"\u56fe\u7247\"", ",", "\"\u533b\u5b66\u5f71\u50cf\"", ",", "\"\u9065\u611f\u5f71\u50cf\"", "]", "\n", "filters", "=", "\"\"", "\n", "for", "fmts", ",", "p", "in", "zip", "(", "self", ".", "formats", ",", "prompts", ")", ":", "\n", "                ", "filters", "+=", "f\"{p} ({' '.join(['*' + f for f in fmts])}) ;; \"", "\n", "", "filters", "=", "filters", "[", ":", "-", "3", "]", "\n", "recentPath", "=", "self", ".", "settings", ".", "value", "(", "\"recent_files\"", ",", "[", "]", ")", "\n", "if", "len", "(", "recentPath", ")", "==", "0", ":", "\n", "                ", "recentPath", "=", "\".\"", "\n", "", "else", ":", "\n", "                ", "recentPath", "=", "osp", ".", "dirname", "(", "recentPath", "[", "0", "]", ")", "\n", "", "filePath", ",", "_", "=", "QtWidgets", ".", "QFileDialog", ".", "getOpenFileName", "(", "\n", "self", ",", "\n", "self", ".", "tr", "(", "\"\u9009\u62e9\u5f85\u6807\u6ce8\u56fe\u7247\"", ")", "+", "\" - \"", "+", "__APPNAME__", ",", "\n", "recentPath", ",", "\n", "filters", ",", ")", "\n", "if", "len", "(", "filePath", ")", "==", "0", ":", "# \u7528\u6237\u6ca1\u9009\u5c31\u76f4\u63a5\u5173\u95ed\u7a97\u53e3", "\n", "                ", "return", "\n", "", "", "filePath", "=", "normcase", "(", "filePath", ")", "\n", "if", "not", "self", ".", "loadImage", "(", "filePath", ")", ":", "\n", "            ", "return", "False", "\n", "\n", "# 3. \u6dfb\u52a0\u8bb0\u5f55", "\n", "", "self", ".", "listFiles", ".", "addItems", "(", "[", "filePath", "]", ")", "\n", "self", ".", "currIdx", "=", "self", ".", "listFiles", ".", "count", "(", ")", "-", "1", "\n", "self", ".", "listFiles", ".", "setCurrentRow", "(", "self", ".", "currIdx", ")", "# \u79fb\u52a8\u4f4d\u7f6e", "\n", "self", ".", "imagePaths", ".", "append", "(", "filePath", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.openFolder": [[1032, 1089], ["app.APP_EISeg.saveImage", "app.APP_EISeg.listFiles.clear", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "tuple", "os.listdir.sort", "os.listdir.sort", "os.join", "os.join", "isinstance", "app.APP_EISeg.settings.value", "qtpy.QtWidgets.QFileDialog.getExistingDirectory", "len", "os.exists", "os.exists", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.join", "os.join", "util.normcase", "app.APP_EISeg.imagePaths.append", "app.APP_EISeg.listFiles.addItem", "os.exists", "os.exists", "app.APP_EISeg.changeOutputDir", "len", "app.APP_EISeg.turnImg", "len", "os.dirname", "os.dirname", "os.exists", "os.exists", "n.lower().endswith", "os.splitext", "os.splitext", "names.append", "app.APP_EISeg.toggleOrigExt", "app.APP_EISeg.tr", "n.lower"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.opath.normcase", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeOutputDir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.turnImg", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleOrigExt", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "openFolder", "(", "self", ",", "inputDir", ":", "str", "=", "None", ")", ":", "\n", "# 1. \u5982\u679c\u6ca1\u4f20\u6587\u4ef6\u5939\uff0c\u5f39\u6846\u8ba9\u7528\u6237\u9009", "\n", "        ", "if", "not", "isinstance", "(", "inputDir", ",", "str", ")", ":", "\n", "            ", "recentPath", "=", "self", ".", "settings", ".", "value", "(", "\"recent_files\"", ",", "[", "]", ")", "\n", "if", "len", "(", "recentPath", ")", "==", "0", ":", "\n", "                ", "recentPath", "=", "\".\"", "\n", "", "else", ":", "\n", "                ", "recentPath", "=", "osp", ".", "dirname", "(", "recentPath", "[", "-", "1", "]", ")", "\n", "", "inputDir", "=", "QtWidgets", ".", "QFileDialog", ".", "getExistingDirectory", "(", "\n", "self", ",", "\n", "self", ".", "tr", "(", "\"\u9009\u62e9\u5f85\u6807\u6ce8\u56fe\u7247\u6587\u4ef6\u5939\"", ")", "+", "\" - \"", "+", "__APPNAME__", ",", "\n", "recentPath", ",", "\n", "QtWidgets", ".", "QFileDialog", ".", "ShowDirsOnly", "|", "\n", "QtWidgets", ".", "QFileDialog", ".", "DontResolveSymlinks", ",", ")", "\n", "if", "not", "osp", ".", "exists", "(", "inputDir", ")", ":", "\n", "                ", "return", "\n", "\n", "# 2. \u5173\u95ed\u5f53\u524d\u56fe\u7247\uff0c\u6e05\u7a7a\u6587\u4ef6\u5217\u8868", "\n", "", "", "self", ".", "saveImage", "(", "close", "=", "True", ")", "\n", "self", ".", "imagePaths", "=", "[", "]", "\n", "self", ".", "listFiles", ".", "clear", "(", ")", "\n", "\n", "# 3. \u626b\u63cf\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u56fe\u7247", "\n", "# 3.1 \u83b7\u53d6\u6240\u6709\u6587\u4ef6\u540d", "\n", "imagePaths", "=", "os", ".", "listdir", "(", "inputDir", ")", "\n", "exts", "=", "tuple", "(", "f", "for", "fmts", "in", "self", ".", "formats", "for", "f", "in", "fmts", ")", "\n", "imagePaths", "=", "[", "n", "for", "n", "in", "imagePaths", "if", "n", ".", "lower", "(", ")", ".", "endswith", "(", "exts", ")", "]", "\n", "imagePaths", "=", "[", "n", "for", "n", "in", "imagePaths", "if", "not", "n", "[", "0", "]", "==", "\".\"", "]", "\n", "imagePaths", ".", "sort", "(", ")", "\n", "if", "len", "(", "imagePaths", ")", "==", "0", ":", "\n", "            ", "return", "\n", "# 3.2 \u8bbe\u7f6e\u9ed8\u8ba4\u8f93\u51fa\u8def\u5f84\u4e3a\u6587\u4ef6\u5939\u4e0b\u7684 label \u6587\u4ef6\u5939", "\n", "", "self", ".", "outputDir", "=", "osp", ".", "join", "(", "inputDir", ",", "\"label\"", ")", "\n", "if", "not", "osp", ".", "exists", "(", "self", ".", "outputDir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "outputDir", ")", "\n", "# 3.3 \u6709\u91cd\u540d\u56fe\u7247\uff0c\u6807\u7b7e\u4fdd\u7559\u539f\u6765\u62d3\u5c55\u540d", "\n", "", "names", "=", "[", "]", "\n", "for", "name", "in", "imagePaths", ":", "\n", "            ", "name", "=", "osp", ".", "splitext", "(", "name", ")", "[", "0", "]", "\n", "if", "name", "not", "in", "names", ":", "\n", "                ", "names", ".", "append", "(", "name", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "toggleOrigExt", "(", "True", ")", "\n", "break", "\n", "", "", "imagePaths", "=", "[", "osp", ".", "join", "(", "inputDir", ",", "n", ")", "for", "n", "in", "imagePaths", "]", "\n", "for", "p", "in", "imagePaths", ":", "\n", "            ", "p", "=", "normcase", "(", "p", ")", "\n", "self", ".", "imagePaths", ".", "append", "(", "p", ")", "\n", "self", ".", "listFiles", ".", "addItem", "(", "p", ")", "\n", "\n", "# 3.4 \u52a0\u8f7d\u5df2\u6709\u7684\u6807\u6ce8", "\n", "", "if", "self", ".", "outputDir", "is", "not", "None", "and", "osp", ".", "exists", "(", "self", ".", "outputDir", ")", ":", "\n", "            ", "self", ".", "changeOutputDir", "(", "self", ".", "outputDir", ")", "\n", "", "if", "len", "(", "self", ".", "imagePaths", ")", "!=", "0", ":", "\n", "            ", "self", ".", "currIdx", "=", "0", "\n", "self", ".", "turnImg", "(", "0", ")", "\n", "", "self", ".", "inputDir", "=", "inputDir", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadImage": [[1090, 1180], ["util.normcase", "app.APP_EISeg.saveImage", "app.APP_EISeg.eximgsInit", "util.normcase.lower().endswith", "util.normcase.lower().endswith", "util.normcase.lower().endswith", "app.APP_EISeg.controller.setImage", "app.APP_EISeg.updateImage", "app.APP_EISeg.loadLabel", "app.APP_EISeg.addRecentFile", "app.APP_EISeg.warn", "os.exists", "os.exists", "tuple", "cv2.imdecode", "plugin.n2grid.checkOpenGrid", "tuple", "plugin.medical.med.dcm_reader", "plugin.medical.med.windowlize", "tuple", "plugin.remotesensing.Raster", "app.APP_EISeg.raster.setBand", "app.APP_EISeg.edtGeoinfo.setText", "app.APP_EISeg.raster.checkOpenGrid", "app.APP_EISeg.updateBandList", "app.APP_EISeg.edtGeoinfo.setText", "app.APP_EISeg.warn", "util.normcase.lower", "numpy.fromfile", "app.APP_EISeg.loadGrid", "util.normcase.lower", "app.APP_EISeg.warn", "app.APP_EISeg.toggleWidget", "app.APP_EISeg.warn", "util.normcase.lower", "app.APP_EISeg.warn", "app.APP_EISeg.toggleWidget", "max", "app.APP_EISeg.raster.showGeoInfo", "app.APP_EISeg.loadGrid", "app.APP_EISeg.raster.getArray", "app.APP_EISeg.tr", "app.APP_EISeg.grid.getGrid", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.raster.getGrid", "app.APP_EISeg.raster.getArray"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.opath.normcase", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.eximgsInit", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadLabel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.addRecentFile", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.checkOpenGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.medical.med.dcm_reader", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.medical.med.windowlize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.setBand", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.checkOpenGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateBandList", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleWidget", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleWidget", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.showGeoInfo", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getArray", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getArray"], ["", "def", "loadImage", "(", "self", ",", "path", ")", ":", "\n", "        ", "if", "self", ".", "controller", ".", "model", "is", "None", ":", "\n", "            ", "self", ".", "warn", "(", "\"\u672a\u68c0\u6d4b\u5230\u6a21\u578b\"", ",", "\"\u8bf7\u5148\u52a0\u8f7d\u6a21\u578b\u53c2\u6570\"", ")", "\n", "return", "\n", "# 1. \u62d2\u7eddNone\u548c\u4e0d\u5b58\u5728\u7684\u8def\u5f84\uff0c\u5173\u95ed\u5f53\u524d\u56fe\u50cf", "\n", "", "if", "not", "path", ":", "\n", "            ", "return", "\n", "", "path", "=", "normcase", "(", "path", ")", "\n", "if", "not", "osp", ".", "exists", "(", "path", ")", ":", "\n", "            ", "return", "\n", "", "self", ".", "saveImage", "(", "True", ")", "# \u5173\u95ed\u5f53\u524d\u56fe\u50cf", "\n", "self", ".", "eximgsInit", "(", ")", "# TODO: \u5c06grid\u7684\u90e8\u5206\u6574\u5408\u5230saveImage\u91cc", "\n", "\n", "# 2. \u5224\u65ad\u56fe\u50cf\u7c7b\u578b\uff0c\u6253\u5f00", "\n", "# TODO: \u52a0\u7528\u6237\u6307\u5b9a\u7c7b\u578b\u7684\u529f\u80fd", "\n", "image", "=", "None", "\n", "\n", "# \u76f4\u63a5if\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u6253\u5f00\u9065\u611f\u56fe\u50cf\u540e\u591a\u6ce2\u6bb5\u4e0d\u5b58\u5728\uff0c\u73b0\u5728\u628a\u9065\u611f\u56fe\u50cf\u7684\u5355\u72ec\u62bd\u51fa\u6765\u4e86", "\n", "# \u81ea\u7136\u56fe\u50cf", "\n", "if", "path", ".", "lower", "(", ")", ".", "endswith", "(", "tuple", "(", "self", ".", "formats", "[", "0", "]", ")", ")", ":", "\n", "            ", "image", "=", "cv2", ".", "imdecode", "(", "np", ".", "fromfile", "(", "path", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "1", ")", "\n", "image", "=", "image", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# BGR\u8f6cRGB", "\n", "if", "checkOpenGrid", "(", "image", ",", "self", ".", "thumbnail_min", ")", ":", "\n", "                ", "if", "self", ".", "loadGrid", "(", "image", ",", "False", ")", ":", "\n", "                    ", "image", ",", "_", "=", "self", ".", "grid", ".", "getGrid", "(", "0", ",", "0", ")", "\n", "\n", "# \u533b\u5b66\u5f71\u50cf", "\n", "", "", "", "if", "path", ".", "lower", "(", ")", ".", "endswith", "(", "tuple", "(", "self", ".", "formats", "[", "1", "]", ")", ")", ":", "\n", "            ", "if", "not", "self", ".", "dockStatus", "[", "5", "]", ":", "\n", "                ", "res", "=", "self", ".", "warn", "(", "\n", "self", ".", "tr", "(", "\"\u672a\u542f\u7528\u533b\u7597\u7ec4\u4ef6\"", ")", ",", "\n", "self", ".", "tr", "(", "\"\u52a0\u8f7d\u533b\u7597\u5f71\u50cf\u9700\u542f\u7528\u533b\u7597\u7ec4\u4ef6\uff0c\u662f\u5426\u7acb\u5373\u542f\u7528\uff1f\"", ")", ",", "\n", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "Cancel", ",", ")", "\n", "if", "res", "==", "QMessageBox", ".", "Cancel", ":", "\n", "                    ", "return", "False", "\n", "", "self", ".", "toggleWidget", "(", "5", ")", "\n", "if", "not", "self", ".", "dockStatus", "[", "5", "]", ":", "\n", "                    ", "return", "False", "\n", "", "", "image", "=", "med", ".", "dcm_reader", "(", "path", ")", "# TODO: \u6dfb\u52a0\u591a\u5c42\u652f\u6301", "\n", "if", "image", ".", "shape", "[", "-", "1", "]", "!=", "1", ":", "\n", "                ", "self", ".", "warn", "(", "\"\u533b\u5b66\u5f71\u50cf\u6253\u5f00\u9519\u8bef\"", ",", "\"\u6682\u4e0d\u652f\u6301\u6253\u5f00\u591a\u5c42\u533b\u5b66\u5f71\u50cf\"", ")", "\n", "return", "False", "\n", "\n", "", "self", ".", "controller", ".", "rawImage", "=", "self", ".", "image", "=", "image", "\n", "image", "=", "med", ".", "windowlize", "(", "image", ",", "self", ".", "ww", ",", "self", ".", "wc", ")", "\n", "\n", "# \u9065\u611f\u56fe\u50cf", "\n", "", "if", "path", ".", "lower", "(", ")", ".", "endswith", "(", "tuple", "(", "self", ".", "formats", "[", "\n", "2", "]", ")", ")", ":", "# imghdr.what(path) == \"tiff\":", "\n", "            ", "if", "not", "self", ".", "dockStatus", "[", "4", "]", ":", "\n", "                ", "res", "=", "self", ".", "warn", "(", "\n", "self", ".", "tr", "(", "\"\u672a\u6253\u5f00\u9065\u611f\u7ec4\u4ef6\"", ")", ",", "\n", "self", ".", "tr", "(", "\"\u6253\u5f00\u9065\u611f\u56fe\u50cf\u9700\u542f\u7528\u9065\u611f\u7ec4\u4ef6\uff0c\u662f\u5426\u7acb\u5373\u542f\u7528\uff1f\"", ")", ",", "\n", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "Cancel", ",", ")", "\n", "if", "res", "==", "QMessageBox", ".", "Cancel", ":", "\n", "                    ", "return", "False", "\n", "", "self", ".", "toggleWidget", "(", "4", ")", "\n", "if", "not", "self", ".", "dockStatus", "[", "4", "]", ":", "\n", "                    ", "return", "False", "\n", "", "", "self", ".", "raster", "=", "Raster", "(", "path", ")", "\n", "if", "max", "(", "self", ".", "rsRGB", ")", ">", "self", ".", "raster", ".", "geoinfo", ".", "count", ":", "\n", "                ", "self", ".", "rsRGB", "=", "[", "1", ",", "1", ",", "1", "]", "\n", "", "self", ".", "raster", ".", "setBand", "(", "self", ".", "rsRGB", ")", "\n", "self", ".", "edtGeoinfo", ".", "setText", "(", "self", ".", "raster", ".", "showGeoInfo", "(", ")", ")", "\n", "if", "self", ".", "raster", ".", "checkOpenGrid", "(", "self", ".", "thumbnail_min", ")", ":", "\n", "                ", "if", "self", ".", "loadGrid", "(", "self", ".", "raster", ")", ":", "\n", "                    ", "image", ",", "_", "=", "self", ".", "raster", ".", "getGrid", "(", "0", ",", "0", ")", "\n", "", "else", ":", "\n", "                    ", "image", ",", "_", "=", "self", ".", "raster", ".", "getArray", "(", ")", "\n", "", "", "else", ":", "\n", "                ", "image", ",", "_", "=", "self", ".", "raster", ".", "getArray", "(", ")", "\n", "", "self", ".", "updateBandList", "(", ")", "\n", "# self.updateSlideSld(True)", "\n", "", "else", ":", "\n", "            ", "self", ".", "edtGeoinfo", ".", "setText", "(", "self", ".", "tr", "(", "\"\u65e0\"", ")", ")", "\n", "\n", "# \u5982\u679c\u6ca1\u627e\u5230\u56fe\u7247\u7684reader", "\n", "", "if", "image", "is", "None", ":", "\n", "            ", "self", ".", "warn", "(", "\"\u6253\u5f00\u56fe\u50cf\u5931\u8d25\"", ",", "f\"\u672a\u627e\u5230{path}\u6587\u4ef6\u5bf9\u5e94\u7684\u8bfb\u53d6\u7a0b\u5e8f\"", ")", "\n", "return", "\n", "\n", "", "self", ".", "image", "=", "image", "\n", "self", ".", "controller", ".", "setImage", "(", "image", ")", "\n", "self", ".", "updateImage", "(", "True", ")", "\n", "\n", "# 2. \u52a0\u8f7d\u6807\u7b7e", "\n", "self", ".", "loadLabel", "(", "path", ")", "\n", "self", ".", "addRecentFile", "(", "path", ")", "\n", "self", ".", "imagePath", "=", "path", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadLabel": [[1181, 1254], ["app.APP_EISeg.loadLabel.getName"], "methods", ["None"], ["", "def", "loadLabel", "(", "self", ",", "imgPath", ")", ":", "\n", "        ", "if", "imgPath", "==", "\"\"", ":", "\n", "            ", "return", "None", "\n", "\n", "# 1. \u8bfb\u53d6json\u683c\u5f0f\u6807\u7b7e", "\n", "", "if", "self", ".", "save_status", "[", "\"json\"", "]", ":", "\n", "\n", "            ", "def", "getName", "(", "path", ")", ":", "\n", "                ", "return", "osp", ".", "splitext", "(", "osp", ".", "basename", "(", "path", ")", ")", "[", "0", "]", "\n", "\n", "", "imgName", "=", "getName", "(", "imgPath", ")", "\n", "labelPath", "=", "None", "\n", "for", "path", "in", "self", ".", "labelPaths", ":", "\n", "                ", "if", "not", "path", ".", "endswith", "(", "\".json\"", ")", ":", "\n", "                    ", "continue", "\n", "", "if", "self", ".", "origExt", ":", "\n", "                    ", "if", "getName", "(", "path", ")", "==", "osp", ".", "basename", "(", "imgPath", ")", ":", "\n", "                        ", "labelPath", "=", "path", "\n", "break", "\n", "", "", "else", ":", "\n", "                    ", "if", "getName", "(", "path", ")", "==", "imgName", ":", "\n", "                        ", "labelPath", "=", "path", "\n", "break", "\n", "", "", "", "if", "not", "labelPath", ":", "\n", "                ", "return", "\n", "\n", "", "labels", "=", "json", ".", "loads", "(", "open", "(", "labelPath", ",", "\"r\"", ")", ".", "read", "(", ")", ")", "\n", "\n", "for", "label", "in", "labels", ":", "\n", "                ", "color", "=", "label", "[", "\"color\"", "]", "\n", "labelIdx", "=", "label", "[", "\"labelIdx\"", "]", "\n", "points", "=", "label", "[", "\"points\"", "]", "\n", "poly", "=", "PolygonAnnotation", "(", "\n", "labelIdx", ",", "\n", "self", ".", "controller", ".", "image", ".", "shape", ",", "\n", "self", ".", "delPolygon", ",", "\n", "self", ".", "setDirty", ",", "\n", "color", ",", "\n", "color", ",", "\n", "self", ".", "opacity", ",", ")", "\n", "self", ".", "scene", ".", "addItem", "(", "poly", ")", "\n", "self", ".", "scene", ".", "polygon_items", ".", "append", "(", "poly", ")", "\n", "for", "p", "in", "points", ":", "\n", "                    ", "poly", ".", "addPointLast", "(", "QtCore", ".", "QPointF", "(", "p", "[", "0", "]", ",", "p", "[", "1", "]", ")", ")", "\n", "\n", "# 2. \u8bfb\u53d6coco\u683c\u5f0f\u6807\u7b7e", "\n", "", "", "", "if", "self", ".", "save_status", "[", "\"coco\"", "]", ":", "\n", "            ", "imgId", "=", "self", ".", "coco", ".", "imgNameToId", ".", "get", "(", "osp", ".", "basename", "(", "imgPath", ")", ",", "None", ")", "\n", "if", "imgId", "is", "None", ":", "\n", "                ", "return", "\n", "", "anns", "=", "self", ".", "coco", ".", "imgToAnns", "[", "imgId", "]", "\n", "for", "ann", "in", "anns", ":", "\n", "                ", "xys", "=", "ann", "[", "\"segmentation\"", "]", "[", "0", "]", "\n", "points", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "0", ",", "len", "(", "xys", ")", ",", "2", ")", ":", "\n", "                    ", "points", ".", "append", "(", "[", "xys", "[", "idx", "]", ",", "xys", "[", "idx", "+", "1", "]", "]", ")", "\n", "", "labelIdx", "=", "ann", "[", "\"category_id\"", "]", "\n", "idlab", "=", "self", ".", "controller", ".", "labelList", ".", "getLabelById", "(", "labelIdx", ")", "\n", "if", "idlab", "is", "not", "None", ":", "\n", "                    ", "color", "=", "idlab", ".", "color", "\n", "poly", "=", "PolygonAnnotation", "(", "\n", "ann", "[", "\"category_id\"", "]", ",", "\n", "self", ".", "controller", ".", "image", ".", "shape", ",", "\n", "self", ".", "delPolygon", ",", "\n", "self", ".", "setDirty", ",", "\n", "color", ",", "\n", "color", ",", "\n", "self", ".", "opacity", ",", "\n", "ann", "[", "\"id\"", "]", ",", ")", "\n", "self", ".", "scene", ".", "addItem", "(", "poly", ")", "\n", "self", ".", "scene", ".", "polygon_items", ".", "append", "(", "poly", ")", "\n", "for", "p", "in", "points", ":", "\n", "                        ", "poly", ".", "addPointLast", "(", "QtCore", ".", "QPointF", "(", "p", "[", "0", "]", ",", "p", "[", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.turnImg": [[1255, 1276], ["app.APP_EISeg.setDirty", "app.APP_EISeg.loadImage", "app.APP_EISeg.listFiles.setCurrentRow", "app.APP_EISeg.turnGrid", "app.APP_EISeg.saveImage", "app.APP_EISeg.saveImage", "len", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.tr", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.turnGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "", "", "", "", "def", "turnImg", "(", "self", ",", "delta", ",", "list_click", "=", "False", ")", ":", "\n", "        ", "if", "(", "self", ".", "grid", "is", "None", "or", "self", ".", "grid", ".", "curr_idx", "is", "None", ")", "or", "list_click", ":", "\n", "# 1. \u68c0\u67e5\u662f\u5426\u6709\u56fe\u53ef\u7ffb\uff0c\u4fdd\u5b58\u6807\u7b7e", "\n", "            ", "self", ".", "currIdx", "+=", "delta", "\n", "if", "self", ".", "currIdx", ">=", "len", "(", "self", ".", "imagePaths", ")", "or", "self", ".", "currIdx", "<", "0", ":", "\n", "                ", "self", ".", "currIdx", "-=", "delta", "\n", "if", "delta", "==", "1", ":", "\n", "                    ", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "f\"\u6ca1\u6709\u540e\u4e00\u5f20\u56fe\u7247\"", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "f\"\u6ca1\u6709\u524d\u4e00\u5f20\u56fe\u7247\"", ")", ")", "\n", "", "self", ".", "saveImage", "(", "False", ")", "\n", "return", "\n", "", "else", ":", "\n", "                ", "self", ".", "saveImage", "(", "True", ")", "\n", "\n", "# 2. \u6253\u5f00\u65b0\u56fe", "\n", "", "self", ".", "loadImage", "(", "self", ".", "imagePaths", "[", "self", ".", "currIdx", "]", ")", "\n", "self", ".", "listFiles", ".", "setCurrentRow", "(", "self", ".", "currIdx", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "turnGrid", "(", "delta", ")", "\n", "", "self", ".", "setDirty", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.imageListClicked": [[1277, 1288], ["app.APP_EISeg.listFiles.currentRow", "app.APP_EISeg.turnImg", "app.APP_EISeg.warn", "app.APP_EISeg.changeParam", "app.APP_EISeg.exportLabel", "app.APP_EISeg.tr", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.turnImg", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeParam", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.exportLabel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "imageListClicked", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "controller", ":", "\n", "            ", "self", ".", "warn", "(", "self", ".", "tr", "(", "\"\u6a21\u578b\u672a\u52a0\u8f7d\"", ")", ",", "self", ".", "tr", "(", "\"\u5c1a\u672a\u52a0\u8f7d\u6a21\u578b\uff0c\u8bf7\u5148\u52a0\u8f7d\u6a21\u578b\uff01\"", ")", ")", "\n", "self", ".", "changeParam", "(", ")", "\n", "if", "not", "self", ".", "controller", ":", "\n", "                ", "return", "\n", "", "", "if", "self", ".", "controller", ".", "is_incomplete_mask", ":", "\n", "            ", "self", ".", "exportLabel", "(", ")", "\n", "", "toRow", "=", "self", ".", "listFiles", ".", "currentRow", "(", ")", "\n", "delta", "=", "toRow", "-", "self", ".", "currIdx", "\n", "self", ".", "turnImg", "(", "delta", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.finishObject": [[1289, 1311], ["app.APP_EISeg.controller.finishObject", "app.APP_EISeg.getMask", "app.APP_EISeg.updateImage", "app.APP_EISeg.boundaryRegular.isChecked", "app.APP_EISeg.createPoly", "p.setAnning", "p.setAnning"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.finishObject", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.getMask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.createPoly", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setAnning", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setAnning"], ["", "def", "finishObject", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "controller", "or", "self", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "current_mask", ",", "curr_polygon", "=", "self", ".", "controller", ".", "finishObject", "(", "\n", "building", "=", "self", ".", "boundaryRegular", ".", "isChecked", "(", ")", ")", "\n", "if", "curr_polygon", "is", "not", "None", ":", "\n", "            ", "self", ".", "updateImage", "(", ")", "\n", "if", "current_mask", "is", "not", "None", ":", "\n", "# current_mask = current_mask.astype(np.uint8) * 255", "\n", "# polygon = util.get_polygon(current_mask)", "\n", "                ", "color", "=", "self", ".", "controller", ".", "labelList", "[", "self", ".", "currLabelIdx", "]", ".", "color", "\n", "self", ".", "createPoly", "(", "curr_polygon", ",", "color", ")", "\n", "# \u72b6\u6001\u6539\u53d8", "\n", "", "", "if", "self", ".", "status", "==", "self", ".", "EDITING", ":", "\n", "            ", "self", ".", "status", "=", "self", ".", "ANNING", "\n", "for", "p", "in", "self", ".", "scene", ".", "polygon_items", ":", "\n", "                ", "p", ".", "setAnning", "(", "isAnning", "=", "True", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "status", "=", "self", ".", "EDITING", "\n", "for", "p", "in", "self", ".", "scene", ".", "polygon_items", ":", "\n", "                ", "p", ".", "setAnning", "(", "isAnning", "=", "False", ")", "\n", "", "", "self", ".", "getMask", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.completeLastMask": [[1312, 1328], ["app.APP_EISeg.warn", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.finishObject", "app.APP_EISeg.exportLabel", "app.APP_EISeg.setDirty"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.finishObject", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.exportLabel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty"], ["", "def", "completeLastMask", "(", "self", ")", ":", "\n", "# \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u662f\u5426\u5b8c\u6210\uff0cfalse\u5c31\u662f\u8fd8\u6709\u5e26\u70b9\u7684", "\n", "        ", "if", "not", "self", ".", "controller", "or", "self", ".", "controller", ".", "image", "is", "None", ":", "\n", "            ", "return", "True", "\n", "", "if", "not", "self", ".", "controller", ".", "is_incomplete_mask", ":", "\n", "            ", "return", "True", "\n", "", "res", "=", "self", ".", "warn", "(", "\n", "self", ".", "tr", "(", "\"\u5b8c\u6210\u6700\u540e\u4e00\u4e2a\u76ee\u6807\uff1f\"", ")", ",", "\n", "self", ".", "tr", "(", "\"\u662f\u5426\u5b8c\u6210\u6700\u540e\u4e00\u4e2a\u76ee\u6807\u7684\u6807\u6ce8\uff0c\u4e0d\u5b8c\u6210\u4e0d\u4f1a\u8fdb\u884c\u4fdd\u5b58\u3002\"", ")", ",", "\n", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "Cancel", ",", ")", "\n", "if", "res", "==", "QMessageBox", ".", "Yes", ":", "\n", "            ", "self", ".", "finishObject", "(", ")", "\n", "self", ".", "exportLabel", "(", ")", "\n", "self", ".", "setDirty", "(", "False", ")", "\n", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveImage": [[1329, 1355], ["app.APP_EISeg.completeLastMask", "app.APP_EISeg.annImage.setPixmap", "app.APP_EISeg.actions.auto_save.isChecked", "app.APP_EISeg.setDirty", "app.APP_EISeg.controller.resetLastObject", "app.APP_EISeg.updateImage", "qtpy.QtGui.QPixmap", "app.APP_EISeg.exportLabel", "app.APP_EISeg.warn", "p.remove", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.exportLabel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.completeLastMask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.resetLastObject", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.exportLabel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.exportLabel"], ["", "def", "saveImage", "(", "self", ",", "close", "=", "False", ")", ":", "\n", "        ", "if", "self", ".", "controller", "and", "self", ".", "controller", ".", "image", "is", "not", "None", ":", "\n", "# 1. \u5b8c\u6210\u6b63\u5728\u4ea4\u4e92\u5f0f\u6807\u6ce8\u7684\u6807\u7b7e", "\n", "            ", "self", ".", "completeLastMask", "(", ")", "\n", "# 2. \u8fdb\u884c\u4fdd\u5b58", "\n", "if", "self", ".", "isDirty", ":", "\n", "                ", "if", "self", ".", "actions", ".", "auto_save", ".", "isChecked", "(", ")", ":", "\n", "                    ", "self", ".", "exportLabel", "(", ")", "\n", "", "else", ":", "\n", "                    ", "res", "=", "self", ".", "warn", "(", "\n", "self", ".", "tr", "(", "\"\u4fdd\u5b58\u6807\u7b7e\uff1f\"", ")", ",", "\n", "self", ".", "tr", "(", "\"\u6807\u7b7e\u5c1a\u672a\u4fdd\u5b58\uff0c\u662f\u5426\u4fdd\u5b58\u6807\u7b7e\"", ")", ",", "\n", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "Cancel", ",", ")", "\n", "if", "res", "==", "QMessageBox", ".", "Yes", ":", "\n", "                        ", "self", ".", "exportLabel", "(", ")", "\n", "", "", "self", ".", "setDirty", "(", "False", ")", "\n", "", "if", "close", ":", "\n", "# 3. \u6e05\u7a7a\u591a\u8fb9\u5f62\u6807\u6ce8\uff0c\u5220\u6389\u56fe\u7247", "\n", "                ", "for", "p", "in", "self", ".", "scene", ".", "polygon_items", "[", ":", ":", "-", "1", "]", ":", "\n", "                    ", "p", ".", "remove", "(", ")", "\n", "", "self", ".", "scene", ".", "polygon_items", "=", "[", "]", "\n", "self", ".", "controller", ".", "resetLastObject", "(", ")", "\n", "self", ".", "updateImage", "(", ")", "\n", "self", ".", "controller", ".", "image", "=", "None", "\n", "", "", "if", "close", ":", "\n", "            ", "self", ".", "annImage", ".", "setPixmap", "(", "QPixmap", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.exportLabel": [[1356, 1485], ["app.APP_EISeg.completeLastMask", "app.APP_EISeg.setDirty", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.labelPaths.append", "app.APP_EISeg.getMask", "open().write", "app.APP_EISeg.labelPaths.append", "os.join", "os.join", "open().write", "os.splitext", "os.splitext", "os.join", "os.join", "app.APP_EISeg.chooseSavePath", "os.exists", "os.exists", "os.splitext", "os.splitext", "app.APP_EISeg.raster.saveMask", "app.APP_EISeg.shpSave.isChecked", "[].tofile", "os.splitext", "os.splitext", "numpy.zeros", "[].tofile", "os.splitext", "os.splitext", "app.APP_EISeg.controller.image.copy", "cv2.cvtColor", "[].tofile", "labels.append", "json.dumps", "app.APP_EISeg.coco.hasImage", "app.APP_EISeg.coco.addImage", "app.APP_EISeg.coco.hasCat", "os.dirname", "os.dirname", "json.dumps", "os.basename", "os.basename", "os.dirname", "os.dirname", "print", "os.splitext", "os.splitext", "numpy.ones", "label[].append", "open", "os.basename", "os.basename", "os.basename", "os.basename", "app.APP_EISeg.coco.addAnnotation", "app.APP_EISeg.coco.updateAnnotation", "app.APP_EISeg.coco.updateCategory", "app.APP_EISeg.coco.addCategory", "open", "app.APP_EISeg.tr", "plugin.save_shp", "os.splitext", "os.splitext", "os.basename", "os.basename", "points.append", "cv2.imencode", "cv2.imencode", "cv2.imencode"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.completeLastMask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.getMask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.chooseSavePath", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.saveMask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.hasImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.addImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.hasCat", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.addAnnotation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.updateAnnotation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.updateCategory", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.addCategory", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.shape.save_shp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "exportLabel", "(", "self", ",", "saveAs", "=", "False", ",", "savePath", "=", "None", ",", "lab_input", "=", "None", ")", ":", "\n", "# 1. \u9700\u8981\u5904\u4e8e\u6807\u6ce8\u72b6\u6001", "\n", "        ", "if", "not", "self", ".", "controller", "or", "self", ".", "controller", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "# 2. \u5b8c\u6210\u6b63\u5728\u4ea4\u4e92\u5f0f\u6807\u6ce8\u7684\u6807\u7b7e", "\n", "", "self", ".", "completeLastMask", "(", ")", "\n", "# 3. \u786e\u5b9a\u4fdd\u5b58\u8def\u5f84", "\n", "# 3.1 \u5982\u679c\u53c2\u6570\u6307\u5b9a\u4e86\u4fdd\u5b58\u8def\u5f84\u76f4\u63a5\u5b58\u5230savePath", "\n", "if", "not", "savePath", ":", "\n", "            ", "if", "not", "saveAs", "and", "self", ".", "outputDir", "is", "not", "None", ":", "\n", "# 3.2 \u6307\u5b9a\u4e86\u6807\u7b7e\u6587\u4ef6\u5939\uff0c\u800c\u4e14\u4e0d\u662f\u53e6\u5b58\u4e3a\uff1a\u6839\u636e\u6807\u7b7e\u6587\u4ef6\u5939\u548c\u6587\u4ef6\u540d\u51fa\u4fdd\u5b58\u8def\u5f84", "\n", "                ", "name", ",", "ext", "=", "osp", ".", "splitext", "(", "osp", ".", "basename", "(", "self", ".", "imagePath", ")", ")", "\n", "if", "not", "self", ".", "origExt", ":", "\n", "                    ", "ext", "=", "\".png\"", "\n", "", "savePath", "=", "osp", ".", "join", "(", "\n", "self", ".", "outputDir", ",", "\n", "name", "+", "ext", ",", ")", "\n", "", "else", ":", "\n", "# 3.3 \u6ca1\u6709\u6307\u5b9a\u6807\u7b7e\u5b58\u5230\u54ea\uff0c\u6216\u8005\u662f\u53e6\u5b58\u4e3a\uff1a\u5f39\u6846\u8ba9\u7528\u6237\u9009", "\n", "                ", "savePath", "=", "self", ".", "chooseSavePath", "(", ")", "\n", "", "", "if", "savePath", "is", "None", "or", "not", "osp", ".", "exists", "(", "osp", ".", "dirname", "(", "savePath", ")", ")", ":", "\n", "            ", "return", "\n", "\n", "", "if", "savePath", "not", "in", "self", ".", "labelPaths", ":", "\n", "            ", "self", ".", "labelPaths", ".", "append", "(", "savePath", ")", "\n", "\n", "", "if", "lab_input", "is", "None", ":", "\n", "            ", "mask_output", "=", "self", ".", "getMask", "(", ")", "\n", "s", "=", "self", ".", "controller", ".", "imgShape", "\n", "", "else", ":", "\n", "            ", "mask_output", "=", "lab_input", "\n", "s", "=", "lab_input", ".", "shape", "\n", "\n", "# BUG: \u5982\u679c\u7528\u4e86\u591a\u8fb9\u5f62\u6807\u6ce8\u4ece\u591a\u8fb9\u5f62\u751f\u6210mask", "\n", "# 4.1 \u4fdd\u5b58\u7070\u5ea6\u56fe", "\n", "", "if", "self", ".", "save_status", "[", "\"gray_scale\"", "]", ":", "\n", "            ", "if", "self", ".", "raster", "is", "not", "None", ":", "\n", "                ", "pathHead", ",", "_", "=", "osp", ".", "splitext", "(", "savePath", ")", "\n", "# if self.rsSave.isChecked():", "\n", "tifPath", "=", "pathHead", "+", "\"_mask.tif\"", "\n", "self", ".", "raster", ".", "saveMask", "(", "mask_output", ",", "tifPath", ")", "\n", "if", "self", ".", "shpSave", ".", "isChecked", "(", ")", ":", "\n", "                    ", "shpPath", "=", "pathHead", "+", "\".shp\"", "\n", "# geocode_list = self.mask2poly(mask_output, False)", "\n", "print", "(", "rs", ".", "save_shp", "(", "shpPath", ",", "tifPath", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "ext", "=", "osp", ".", "splitext", "(", "savePath", ")", "[", "1", "]", "\n", "cv2", ".", "imencode", "(", "ext", ",", "mask_output", ")", "[", "1", "]", ".", "tofile", "(", "savePath", ")", "\n", "# self.labelPaths.append(savePath)", "\n", "\n", "# 4.2 \u4fdd\u5b58\u4f2a\u5f69\u8272", "\n", "", "", "if", "self", ".", "save_status", "[", "\"pseudo_color\"", "]", ":", "\n", "            ", "if", "self", ".", "raster", "is", "None", ":", "\n", "                ", "pseudoPath", ",", "ext", "=", "osp", ".", "splitext", "(", "savePath", ")", "\n", "pseudoPath", "=", "pseudoPath", "+", "\"_pseudo\"", "+", "ext", "\n", "pseudo", "=", "np", ".", "zeros", "(", "[", "s", "[", "0", "]", ",", "s", "[", "1", "]", ",", "3", "]", ")", "\n", "# mask = self.controller.result_mask", "\n", "mask", "=", "mask_output", "\n", "# print(pseudo.shape, mask.shape)", "\n", "for", "lab", "in", "self", ".", "controller", ".", "labelList", ":", "\n", "                    ", "pseudo", "[", "mask", "==", "lab", ".", "idx", ",", ":", "]", "=", "lab", ".", "color", "[", ":", ":", "-", "1", "]", "\n", "", "cv2", ".", "imencode", "(", "ext", ",", "pseudo", ")", "[", "1", "]", ".", "tofile", "(", "pseudoPath", ")", "\n", "\n", "# 4.3 \u4fdd\u5b58\u524d\u666f\u62a0\u56fe", "\n", "", "", "if", "self", ".", "save_status", "[", "\"cutout\"", "]", ":", "\n", "            ", "if", "self", ".", "raster", "is", "None", ":", "\n", "                ", "mattingPath", ",", "ext", "=", "osp", ".", "splitext", "(", "savePath", ")", "\n", "mattingPath", "=", "mattingPath", "+", "\"_cutout\"", "+", "ext", "\n", "img", "=", "np", ".", "ones", "(", "[", "s", "[", "0", "]", ",", "s", "[", "1", "]", ",", "4", "]", ",", "dtype", "=", "\"uint8\"", ")", "*", "255", "\n", "img", "[", ":", ",", ":", ",", ":", "3", "]", "=", "self", ".", "controller", ".", "image", ".", "copy", "(", ")", "\n", "img", "[", "mask_output", "==", "0", "]", "=", "self", ".", "cutoutBackground", "\n", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_RGBA2BGRA", ")", "\n", "cv2", ".", "imencode", "(", "ext", ",", "img", ")", "[", "1", "]", ".", "tofile", "(", "mattingPath", ")", "\n", "\n", "# 4.4 \u4fdd\u5b58json", "\n", "", "", "if", "self", ".", "save_status", "[", "\"json\"", "]", ":", "\n", "            ", "polygons", "=", "self", ".", "scene", ".", "polygon_items", "\n", "labels", "=", "[", "]", "\n", "for", "polygon", "in", "polygons", ":", "\n", "                ", "l", "=", "self", ".", "controller", ".", "labelList", "[", "polygon", ".", "labelIndex", "-", "1", "]", "\n", "label", "=", "{", "\n", "\"name\"", ":", "l", ".", "name", ",", "\n", "\"labelIdx\"", ":", "l", ".", "idx", ",", "\n", "\"color\"", ":", "l", ".", "color", ",", "\n", "\"points\"", ":", "[", "]", ",", "\n", "}", "\n", "for", "p", "in", "polygon", ".", "scnenePoints", ":", "\n", "                    ", "label", "[", "\"points\"", "]", ".", "append", "(", "p", ")", "\n", "", "labels", ".", "append", "(", "label", ")", "\n", "", "if", "self", ".", "origExt", ":", "\n", "                ", "jsonPath", "=", "savePath", "+", "\".json\"", "\n", "", "else", ":", "\n", "                ", "jsonPath", "=", "osp", ".", "splitext", "(", "savePath", ")", "[", "0", "]", "+", "\".json\"", "\n", "", "open", "(", "jsonPath", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", ".", "write", "(", "json", ".", "dumps", "(", "labels", ")", ")", "\n", "self", ".", "labelPaths", ".", "append", "(", "jsonPath", ")", "\n", "\n", "# 4.5 \u4fdd\u5b58coco", "\n", "", "if", "self", ".", "save_status", "[", "\"coco\"", "]", ":", "\n", "            ", "if", "not", "self", ".", "coco", ".", "hasImage", "(", "osp", ".", "basename", "(", "self", ".", "imagePath", ")", ")", ":", "\n", "                ", "imgId", "=", "self", ".", "coco", ".", "addImage", "(", "\n", "osp", ".", "basename", "(", "self", ".", "imagePath", ")", ",", "s", "[", "1", "]", ",", "s", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "imgId", "=", "self", ".", "coco", ".", "imgNameToId", "[", "osp", ".", "basename", "(", "self", ".", "imagePath", ")", "]", "\n", "", "for", "polygon", "in", "self", ".", "scene", ".", "polygon_items", ":", "\n", "                ", "points", "=", "[", "]", "\n", "for", "p", "in", "polygon", ".", "scnenePoints", ":", "\n", "                    ", "for", "val", "in", "p", ":", "\n", "                        ", "points", ".", "append", "(", "val", ")", "\n", "\n", "", "", "if", "not", "polygon", ".", "coco_id", ":", "\n", "                    ", "annId", "=", "self", ".", "coco", ".", "addAnnotation", "(", "imgId", ",", "polygon", ".", "labelIndex", ",", "\n", "points", ")", "\n", "polygon", ".", "coco_id", "=", "annId", "\n", "", "else", ":", "\n", "                    ", "self", ".", "coco", ".", "updateAnnotation", "(", "polygon", ".", "coco_id", ",", "imgId", ",", "points", ")", "\n", "", "", "for", "lab", "in", "self", ".", "controller", ".", "labelList", ":", "\n", "                ", "if", "self", ".", "coco", ".", "hasCat", "(", "lab", ".", "idx", ")", ":", "\n", "                    ", "self", ".", "coco", ".", "updateCategory", "(", "lab", ".", "idx", ",", "lab", ".", "name", ",", "lab", ".", "color", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "coco", ".", "addCategory", "(", "lab", ".", "idx", ",", "lab", ".", "name", ",", "lab", ".", "color", ")", "\n", "", "", "saveDir", "=", "(", "self", ".", "outputDir", "\n", "if", "self", ".", "outputDir", "is", "not", "None", "else", "osp", ".", "dirname", "(", "savePath", ")", ")", "\n", "cocoPath", "=", "osp", ".", "join", "(", "saveDir", ",", "\"annotations.json\"", ")", "\n", "open", "(", "\n", "cocoPath", ",", "\"w\"", ",", "\n", "encoding", "=", "\"utf-8\"", ")", ".", "write", "(", "json", ".", "dumps", "(", "self", ".", "coco", ".", "dataset", ")", ")", "\n", "\n", "", "self", ".", "setDirty", "(", "False", ")", "\n", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "\"\u6807\u7b7e\u6210\u529f\u4fdd\u5b58\u81f3\"", ")", "+", "\" \"", "+", "savePath", ",", "5000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.chooseSavePath": [[1486, 1506], ["qtpy.QtWidgets.QFileDialog", "qtpy.QtWidgets.QFileDialog.setDefaultSuffix", "qtpy.QtWidgets.QFileDialog.setAcceptMode", "qtpy.QtWidgets.QFileDialog.setOption", "qtpy.QtWidgets.QFileDialog.setOption", "qtpy.QtWidgets.QFileDialog.getSaveFileName", "app.APP_EISeg.tr", "os.dirname", "os.dirname", "app.APP_EISeg.tr", "fmt.data().decode", "qtpy.QtGui.QImageReader.supportedImageFormats", "os.splitext", "os.splitext", "fmt.data", "os.basename", "os.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["", "def", "chooseSavePath", "(", "self", ")", ":", "\n", "        ", "formats", "=", "[", "\n", "\"*.{}\"", ".", "format", "(", "fmt", ".", "data", "(", ")", ".", "decode", "(", ")", ")", "\n", "for", "fmt", "in", "QtGui", ".", "QImageReader", ".", "supportedImageFormats", "(", ")", "\n", "]", "\n", "filters", "=", "\"Label file (%s)\"", "%", "\" \"", ".", "join", "(", "formats", ")", "\n", "dlg", "=", "QtWidgets", ".", "QFileDialog", "(", "\n", "self", ",", "\n", "self", ".", "tr", "(", "\"\u4fdd\u5b58\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\"", ")", ",", "\n", "osp", ".", "dirname", "(", "self", ".", "imagePath", ")", ",", "\n", "filters", ",", ")", "\n", "dlg", ".", "setDefaultSuffix", "(", "\"png\"", ")", "\n", "dlg", ".", "setAcceptMode", "(", "QtWidgets", ".", "QFileDialog", ".", "AcceptSave", ")", "\n", "dlg", ".", "setOption", "(", "QtWidgets", ".", "QFileDialog", ".", "DontConfirmOverwrite", ",", "False", ")", "\n", "dlg", ".", "setOption", "(", "QtWidgets", ".", "QFileDialog", ".", "DontUseNativeDialog", ",", "False", ")", "\n", "savePath", ",", "_", "=", "dlg", ".", "getSaveFileName", "(", "\n", "self", ",", "\n", "self", ".", "tr", "(", "\"\u9009\u62e9\u6807\u7b7e\u6587\u4ef6\u4fdd\u5b58\u8def\u5f84\"", ")", ",", "\n", "osp", ".", "splitext", "(", "osp", ".", "basename", "(", "self", ".", "imagePath", ")", ")", "[", "0", "]", "+", "\".png\"", ",", ")", "\n", "return", "savePath", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.eximgsInit": [[1507, 1513], ["app.APP_EISeg.gridTable.setRowCount", "app.APP_EISeg.gridTable.clearContents"], "methods", ["None"], ["", "def", "eximgsInit", "(", "self", ")", ":", "\n", "        ", "self", ".", "gridTable", ".", "setRowCount", "(", "0", ")", "\n", "self", ".", "gridTable", ".", "clearContents", "(", ")", "\n", "# \u6e05\u96f6", "\n", "self", ".", "raster", "=", "None", "\n", "self", ".", "grid", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty": [[1514, 1516], ["None"], "methods", ["None"], ["", "def", "setDirty", "(", "self", ",", "isDirty", ")", ":", "\n", "        ", "self", ".", "isDirty", "=", "isDirty", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeOutputDir": [[1517, 1556], ["app.APP_EISeg.settings.setValue", "qtpy.QtWidgets.QFileDialog.getExistingDirectory", "os.exists", "os.exists", "os.join", "os.join", "os.exists", "os.exists", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.join", "os.join", "os.exists", "os.exists", "app.APP_EISeg.settings.value", "app.APP_EISeg.initCoco", "os.join", "os.join", "os.exists", "os.exists", "os.join", "os.join", "n.endswith", "app.APP_EISeg.importLabelList", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.initCoco", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.importLabelList", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "changeOutputDir", "(", "self", ",", "outputDir", "=", "None", ")", ":", "\n", "# 1. \u5f39\u6846\u9009\u62e9\u6807\u7b7e\u8def\u5f84", "\n", "        ", "if", "outputDir", "is", "None", ":", "\n", "            ", "outputDir", "=", "QtWidgets", ".", "QFileDialog", ".", "getExistingDirectory", "(", "\n", "self", ",", "\n", "self", ".", "tr", "(", "\"\u9009\u62e9\u6807\u7b7e\u4fdd\u5b58\u8def\u5f84\"", ")", "+", "\" - \"", "+", "__APPNAME__", ",", "\n", "self", ".", "settings", ".", "value", "(", "\"output_dir\"", ",", "\".\"", ")", ",", "\n", "QtWidgets", ".", "QFileDialog", ".", "ShowDirsOnly", "|", "\n", "QtWidgets", ".", "QFileDialog", ".", "DontResolveSymlinks", ",", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "outputDir", ")", ":", "\n", "            ", "return", "False", "\n", "", "self", ".", "settings", ".", "setValue", "(", "\"output_dir\"", ",", "outputDir", ")", "\n", "self", ".", "outputDir", "=", "outputDir", "\n", "\n", "# 2. \u52a0\u8f7d\u6807\u7b7e", "\n", "# 2.1 \u5982\u679c\u4fdd\u5b58coco\u683c\u5f0f\uff0c\u52a0\u8f7dcoco\u6807\u7b7e", "\n", "if", "self", ".", "save_status", "[", "\"coco\"", "]", ":", "\n", "            ", "defaultPath", "=", "osp", ".", "join", "(", "self", ".", "outputDir", ",", "\"annotations.json\"", ")", "\n", "if", "osp", ".", "exists", "(", "defaultPath", ")", ":", "\n", "                ", "self", ".", "initCoco", "(", "defaultPath", ")", "\n", "\n", "# 2.2 \u5982\u679c\u4fdd\u5b58json\u683c\u5f0f\uff0c\u83b7\u53d6\u6240\u6709json\u6587\u4ef6\u540d", "\n", "", "", "if", "self", ".", "save_status", "[", "\"json\"", "]", ":", "\n", "            ", "labelPaths", "=", "os", ".", "listdir", "(", "outputDir", ")", "\n", "labelPaths", "=", "[", "n", "for", "n", "in", "labelPaths", "if", "n", ".", "endswith", "(", "\".json\"", ")", "]", "\n", "labelPaths", "=", "[", "osp", ".", "join", "(", "outputDir", ",", "n", ")", "for", "n", "in", "labelPaths", "]", "\n", "self", ".", "labelPaths", "=", "labelPaths", "\n", "\n", "# \u52a0\u8f7d\u5bf9\u5e94\u7684\u6807\u7b7e\u5217\u8868", "\n", "lab_auto_save", "=", "osp", ".", "join", "(", "self", ".", "outputDir", ",", "\"autosave_label.txt\"", ")", "\n", "if", "osp", ".", "exists", "(", "lab_auto_save", ")", "==", "False", ":", "\n", "                ", "lab_auto_save", "=", "osp", ".", "join", "(", "self", ".", "outputDir", ",", "\n", "\"label/autosave_label.txt\"", ")", "\n", "", "if", "osp", ".", "exists", "(", "lab_auto_save", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "self", ".", "importLabelList", "(", "lab_auto_save", ")", "\n", "", "except", ":", "\n", "                    ", "pass", "\n", "", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.maskOpacityChanged": [[1557, 1564], ["app.APP_EISeg.sldOpacity.textLab.setText", "app.APP_EISeg.updateImage", "str", "polygon.setOpacity"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage"], ["", "def", "maskOpacityChanged", "(", "self", ")", ":", "\n", "        ", "self", ".", "sldOpacity", ".", "textLab", ".", "setText", "(", "str", "(", "self", ".", "opacity", ")", ")", "\n", "if", "not", "self", ".", "controller", "or", "self", ".", "controller", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "for", "polygon", "in", "self", ".", "scene", ".", "polygon_items", ":", "\n", "            ", "polygon", ".", "setOpacity", "(", "self", ".", "opacity", ")", "\n", "", "self", ".", "updateImage", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.clickRadiusChanged": [[1565, 1570], ["app.APP_EISeg.sldClickRadius.textLab.setText", "app.APP_EISeg.updateImage", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage"], ["", "def", "clickRadiusChanged", "(", "self", ")", ":", "\n", "        ", "self", ".", "sldClickRadius", ".", "textLab", ".", "setText", "(", "str", "(", "self", ".", "clickRadius", ")", ")", "\n", "if", "not", "self", ".", "controller", "or", "self", ".", "controller", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "self", ".", "updateImage", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.threshChanged": [[1571, 1577], ["app.APP_EISeg.sldThresh.textLab.setText", "app.APP_EISeg.updateImage", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage"], ["", "def", "threshChanged", "(", "self", ")", ":", "\n", "        ", "self", ".", "sldThresh", ".", "textLab", ".", "setText", "(", "str", "(", "self", ".", "segThresh", ")", ")", "\n", "if", "not", "self", ".", "controller", "or", "self", ".", "controller", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "self", ".", "controller", ".", "prob_thresh", "=", "self", ".", "segThresh", "\n", "self", ".", "updateImage", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.undoClick": [[1586, 1595], ["app.APP_EISeg.controller.undoClick", "app.APP_EISeg.updateImage", "app.APP_EISeg.setDirty"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.undoClick", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty"], ["", "def", "undoClick", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "if", "not", "self", ".", "controller", ":", "\n", "            ", "return", "\n", "", "self", ".", "controller", ".", "undoClick", "(", ")", "\n", "self", ".", "updateImage", "(", ")", "\n", "if", "not", "self", ".", "controller", ".", "is_incomplete_mask", ":", "\n", "            ", "self", ".", "setDirty", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.clearAll": [[1596, 1602], ["app.APP_EISeg.controller.resetLastObject", "app.APP_EISeg.updateImage", "app.APP_EISeg.setDirty"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.resetLastObject", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty"], ["", "", "def", "clearAll", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "controller", "or", "self", ".", "controller", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "self", ".", "controller", ".", "resetLastObject", "(", ")", "\n", "self", ".", "updateImage", "(", ")", "\n", "self", ".", "setDirty", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.redoClick": [[1603, 1610], ["app.APP_EISeg.controller.redoClick", "app.APP_EISeg.updateImage"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.redoClick", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage"], ["", "def", "redoClick", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "if", "not", "self", ".", "controller", ":", "\n", "            ", "return", "\n", "", "self", ".", "controller", ".", "redoClick", "(", ")", "\n", "self", ".", "updateImage", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.canvasClick": [[1611, 1631], ["app.APP_EISeg.controller.addClick", "app.APP_EISeg.updateImage", "c.inImage", "app.APP_EISeg.warn", "app.APP_EISeg.warn", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.addClick", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.inImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "canvasClick", "(", "self", ",", "x", ",", "y", ",", "isLeft", ")", ":", "\n", "        ", "c", "=", "self", ".", "controller", "\n", "if", "c", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "if", "not", "c", ".", "inImage", "(", "x", ",", "y", ")", ":", "\n", "            ", "return", "\n", "", "if", "not", "c", ".", "modelSet", ":", "\n", "            ", "self", ".", "warn", "(", "self", ".", "tr", "(", "\"\u672a\u9009\u62e9\u6a21\u578b\"", ",", "self", ".", "tr", "(", "\"\u5c1a\u672a\u9009\u62e9\u6a21\u578b\uff0c\u8bf7\u5148\u5728\u53f3\u4e0a\u89d2\u9009\u62e9\u6a21\u578b\"", ")", ")", ")", "\n", "return", "\n", "\n", "", "if", "self", ".", "status", "==", "self", ".", "IDILE", ":", "\n", "            ", "return", "\n", "", "currLabel", "=", "self", ".", "controller", ".", "curr_label_number", "\n", "if", "not", "currLabel", "or", "currLabel", "==", "0", ":", "\n", "            ", "self", ".", "warn", "(", "self", ".", "tr", "(", "\"\u672a\u9009\u62e9\u5f53\u524d\u6807\u7b7e\"", ")", ",", "self", ".", "tr", "(", "\"\u8bf7\u5148\u5728\u6807\u7b7e\u5217\u8868\u4e2d\u5355\u51fb\u70b9\u9009\u6807\u7b7e\"", ")", ")", "\n", "return", "\n", "\n", "", "self", ".", "controller", ".", "addClick", "(", "x", ",", "y", ",", "isLeft", ")", "\n", "self", ".", "updateImage", "(", ")", "\n", "self", ".", "status", "=", "self", ".", "ANNING", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage": [[1632, 1645], ["app.APP_EISeg.controller.get_visualization", "qtpy.QtGui.QImage", "app.APP_EISeg.annImage.setPixmap", "app.APP_EISeg.resetZoom", "qtpy.QtGui.QPixmap"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.get_visualization", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.resetZoom"], ["", "def", "updateImage", "(", "self", ",", "reset_canvas", "=", "False", ")", ":", "\n", "        ", "if", "not", "self", ".", "controller", ":", "\n", "            ", "return", "\n", "", "image", "=", "self", ".", "controller", ".", "get_visualization", "(", "\n", "alpha_blend", "=", "self", ".", "opacity", ",", "\n", "click_radius", "=", "self", ".", "clickRadius", ",", ")", "\n", "height", ",", "width", ",", "_", "=", "image", ".", "shape", "\n", "bytesPerLine", "=", "3", "*", "width", "\n", "image", "=", "QImage", "(", "image", ".", "data", ",", "width", ",", "height", ",", "bytesPerLine", ",", "\n", "QImage", ".", "Format_RGB888", ")", "\n", "if", "reset_canvas", ":", "\n", "            ", "self", ".", "resetZoom", "(", "width", ",", "height", ")", "\n", "", "self", ".", "annImage", ".", "setPixmap", "(", "QPixmap", "(", "image", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.viewZoomed": [[1646, 1649], ["app.APP_EISeg.scene.updatePolygonSize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.updatePolygonSize"], ["", "def", "viewZoomed", "(", "self", ",", "scale", ")", ":", "\n", "        ", "self", ".", "scene", ".", "scale", "=", "scale", "\n", "self", ".", "scene", ".", "updatePolygonSize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.resetZoom": [[1651, 1670], ["app.APP_EISeg.scene.setSceneRect", "app.APP_EISeg.canvas.scale", "app.APP_EISeg.canvas.scale", "app.APP_EISeg.scrollArea.height", "app.APP_EISeg.scrollArea.width", "app.APP_EISeg.scrollArea.height"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.width"], ["", "def", "resetZoom", "(", "self", ",", "width", ",", "height", ")", ":", "\n", "# \u6bcf\u6b21\u52a0\u8f7d\u56fe\u50cf\u524d\u8bbe\u5b9a\u4e0b\u5f53\u524d\u7684\u663e\u793a\u6846\uff0c\u89e3\u51b3\u56fe\u50cf\u7f29\u5c0f\u540e\u4e0d\u5728\u4e2d\u5fc3\u7684\u95ee\u9898", "\n", "        ", "self", ".", "scene", ".", "setSceneRect", "(", "0", ",", "0", ",", "width", ",", "height", ")", "\n", "# \u7f29\u653e\u6e05\u9664", "\n", "self", ".", "canvas", ".", "scale", "(", "1", "/", "self", ".", "canvas", ".", "zoom_all", ",", "\n", "1", "/", "self", ".", "canvas", ".", "zoom_all", ")", "# \u91cd\u7f6e\u7f29\u653e", "\n", "self", ".", "canvas", ".", "zoom_all", "=", "1", "\n", "# \u6700\u4f73\u7f29\u653e", "\n", "s_eps", "=", "0.98", "\n", "scr_cont", "=", "[", "\n", "(", "self", ".", "scrollArea", ".", "width", "(", ")", "*", "s_eps", ")", "/", "width", ",", "\n", "(", "self", ".", "scrollArea", ".", "height", "(", ")", "*", "s_eps", ")", "/", "height", ",", "\n", "]", "\n", "if", "scr_cont", "[", "0", "]", "*", "height", ">", "self", ".", "scrollArea", ".", "height", "(", ")", ":", "\n", "            ", "self", ".", "canvas", ".", "zoom_all", "=", "scr_cont", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "canvas", ".", "zoom_all", "=", "scr_cont", "[", "0", "]", "\n", "", "self", ".", "canvas", ".", "scale", "(", "self", ".", "canvas", ".", "zoom_all", ",", "self", ".", "canvas", ".", "zoom_all", ")", "\n", "self", ".", "scene", ".", "scale", "=", "self", ".", "canvas", ".", "zoom_all", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.keyReleaseEvent": [[1671, 1678], ["event.key", "app.APP_EISeg.updateImage"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage"], ["", "def", "keyReleaseEvent", "(", "self", ",", "event", ")", ":", "\n", "# print(event.key(), Qt.Key_Control)", "\n", "# \u91ca\u653ectrl\u7684\u65f6\u5019\u5237\u65b0\u56fe\u50cf\uff0c\u5bf9\u5e94\u81ea\u9002\u5e94\u70b9\u5927\u5c0f\u5728\u7f29\u653e\u540e\u5237\u65b0", "\n", "        ", "if", "not", "self", ".", "controller", "or", "self", ".", "controller", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "if", "event", ".", "key", "(", ")", "==", "Qt", ".", "Key_Control", ":", "\n", "            ", "self", ".", "updateImage", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.queueEvent": [[1679, 1681], ["qtpy.QtCore.QTimer.singleShot"], "methods", ["None"], ["", "", "def", "queueEvent", "(", "self", ",", "function", ")", ":", "\n", "        ", "QtCore", ".", "QTimer", ".", "singleShot", "(", "0", ",", "function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleOrigExt": [[1682, 1688], ["app.APP_EISeg.actions.origional_extension.setChecked"], "methods", ["None"], ["", "def", "toggleOrigExt", "(", "self", ",", "dst", "=", "None", ")", ":", "\n", "        ", "if", "dst", ":", "\n", "            ", "self", ".", "origExt", "=", "dst", "\n", "", "else", ":", "\n", "            ", "self", ".", "origExt", "=", "not", "self", ".", "origExt", "\n", "", "self", ".", "actions", ".", "origional_extension", ".", "setChecked", "(", "self", ".", "origExt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleAutoSave": [[1689, 1696], ["app.APP_EISeg.actions.auto_save.setChecked", "app.APP_EISeg.settings.setValue", "app.APP_EISeg.changeOutputDir"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeOutputDir"], ["", "def", "toggleAutoSave", "(", "self", ",", "save", ")", ":", "\n", "        ", "if", "save", "and", "not", "self", ".", "outputDir", ":", "\n", "            ", "self", ".", "changeOutputDir", "(", "None", ")", "\n", "", "if", "save", "and", "not", "self", ".", "outputDir", ":", "\n", "            ", "save", "=", "False", "\n", "", "self", ".", "actions", ".", "auto_save", ".", "setChecked", "(", "save", ")", "\n", "self", ".", "settings", ".", "setValue", "(", "\"auto_save\"", ",", "save", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleSave": [[1697, 1707], ["app.APP_EISeg.initCoco", "app.APP_EISeg.actions.save_json.setChecked", "app.APP_EISeg.actions.save_coco.setChecked"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.initCoco"], ["", "def", "toggleSave", "(", "self", ",", "type", ")", ":", "\n", "        ", "self", ".", "save_status", "[", "type", "]", "=", "not", "self", ".", "save_status", "[", "type", "]", "\n", "if", "type", "==", "\"coco\"", "and", "self", ".", "save_status", "[", "\"coco\"", "]", ":", "\n", "            ", "self", ".", "initCoco", "(", ")", "\n", "", "if", "type", "==", "\"coco\"", ":", "\n", "            ", "self", ".", "save_status", "[", "\"json\"", "]", "=", "not", "self", ".", "save_status", "[", "\"coco\"", "]", "\n", "self", ".", "actions", ".", "save_json", ".", "setChecked", "(", "self", ".", "save_status", "[", "\"json\"", "]", ")", "\n", "", "if", "type", "==", "\"json\"", ":", "\n", "            ", "self", ".", "save_status", "[", "\"coco\"", "]", "=", "not", "self", ".", "save_status", "[", "\"json\"", "]", "\n", "self", ".", "actions", ".", "save_coco", ".", "setChecked", "(", "self", ".", "save_status", "[", "\"coco\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.initCoco": [[1708, 1722], ["util.COCO", "app.APP_EISeg.clearLabelList", "util.LabelList", "app.APP_EISeg.refreshLabelList", "os.join", "os.join", "os.exists", "os.exists", "os.exists", "os.exists"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.clearLabelList", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.refreshLabelList"], ["", "", "def", "initCoco", "(", "self", ",", "coco_path", ":", "str", "=", "None", ")", ":", "\n", "        ", "if", "not", "coco_path", ":", "\n", "            ", "if", "not", "self", ".", "outputDir", "or", "not", "osp", ".", "exists", "(", "self", ".", "outputDir", ")", ":", "\n", "                ", "coco_path", "=", "None", "\n", "", "else", ":", "\n", "                ", "coco_path", "=", "osp", ".", "join", "(", "self", ".", "outputDir", ",", "\"annotations.json\"", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "not", "osp", ".", "exists", "(", "coco_path", ")", ":", "\n", "                ", "coco_path", "=", "None", "\n", "", "", "self", ".", "coco", "=", "COCO", "(", "coco_path", ")", "\n", "if", "self", ".", "clearLabelList", "(", ")", ":", "\n", "            ", "self", ".", "controller", ".", "labelList", "=", "util", ".", "LabelList", "(", "self", ".", "coco", ".", "dataset", "[", "\n", "\"categories\"", "]", ")", "\n", "self", ".", "refreshLabelList", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleWidget": [[1723, 1763], ["isinstance", "list", "enumerate", "app.APP_EISeg.settings.setValue", "app.APP_EISeg.saveLayout", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.dockWidgets.values", "app.APP_EISeg.menus.showMenu[].setChecked", "app.APP_EISeg.warn", "app.APP_EISeg.tr", "plugin.medical.med.has_sitk", "app.APP_EISeg.warn", "app.APP_EISeg.tr", "widgets[].show", "widgets[].hide", "plugin.check_gdal", "plugin.check_rasterio", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveLayout", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.medical.med.has_sitk", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.check_gdal", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.check_rasterio", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "", "def", "toggleWidget", "(", "self", ",", "index", "=", "None", ",", "warn", "=", "True", ")", ":", "\n", "# TODO: \u8f93\u5165\u4ece\u6570\u5b57\u6539\u6210\u540d\u5b57", "\n", "\n", "# 1. \u6539\u53d8", "\n", "        ", "if", "isinstance", "(", "index", ",", "int", ")", ":", "\n", "            ", "self", ".", "dockStatus", "[", "index", "]", "=", "not", "self", ".", "dockStatus", "[", "index", "]", "\n", "\n", "# 2. \u5224\u65adwidget\u662f\u5426\u53ef\u4ee5\u5f00\u542f", "\n", "# 2.1 \u9065\u611f", "\n", "", "if", "self", ".", "dockStatus", "[", "4", "]", "and", "not", "(", "rs", ".", "check_gdal", "(", ")", "and", "rs", ".", "check_rasterio", "(", ")", ")", ":", "\n", "            ", "if", "warn", ":", "\n", "                ", "self", ".", "warn", "(", "\n", "self", ".", "tr", "(", "\"\u65e0\u6cd5\u5bfc\u5165GDAL\"", ")", ",", "\n", "self", ".", "tr", "(", "\"\u4f7f\u7528\u9065\u611f\u5de5\u5177\u9700\u8981\u5b89\u88c5GDAL\uff01\"", ")", ",", "\n", "QMessageBox", ".", "Yes", ",", ")", "\n", "", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "\"\u6253\u5f00\u9065\u611f\u5de5\u5177\u5931\u8d25\uff0c\u8bf7\u5b89\u88c5GDAL\u5e93\"", ")", ")", "\n", "self", ".", "dockStatus", "[", "4", "]", "=", "False", "\n", "\n", "# 2.2 \u533b\u7597", "\n", "", "if", "self", ".", "dockStatus", "[", "5", "]", "and", "not", "med", ".", "has_sitk", "(", ")", ":", "\n", "            ", "if", "warn", ":", "\n", "                ", "self", ".", "warn", "(", "\n", "self", ".", "tr", "(", "\"\u65e0\u6cd5\u5bfc\u5165SimpleITK\"", ")", ",", "\n", "self", ".", "tr", "(", "\"\u4f7f\u7528\u533b\u7597\u5de5\u5177\u9700\u8981\u5b89\u88c5SimpleITK\uff01\"", ")", ",", "\n", "QMessageBox", ".", "Yes", ",", ")", "\n", "", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "\"\u6253\u5f00\u533b\u7597\u5de5\u5177\u5931\u8d25\uff0c\u8bf7\u5b89\u88c5SimpleITK\"", ")", ")", "\n", "self", ".", "dockStatus", "[", "5", "]", "=", "False", "\n", "", "widgets", "=", "list", "(", "self", ".", "dockWidgets", ".", "values", "(", ")", ")", "\n", "\n", "for", "idx", ",", "s", "in", "enumerate", "(", "self", ".", "dockStatus", ")", ":", "\n", "            ", "self", ".", "menus", ".", "showMenu", "[", "idx", "]", ".", "setChecked", "(", "s", ")", "\n", "if", "s", ":", "\n", "                ", "widgets", "[", "idx", "]", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "                ", "widgets", "[", "idx", "]", ".", "hide", "(", ")", "\n", "\n", "", "", "self", ".", "settings", ".", "setValue", "(", "\"dock_status\"", ",", "self", ".", "dockStatus", ")", "\n", "# self.display_dockwidget[index] = bool(self.display_dockwidget[index] - 1)", "\n", "# self.toggleDockWidgets()", "\n", "self", ".", "saveLayout", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.rsBandSet": [[1781, 1798], ["range", "app.APP_EISeg.raster.setBand", "app.APP_EISeg.updateImage", "len", "isinstance", "app.APP_EISeg.raster.getArray", "app.APP_EISeg.bandCombos[].currentIndex", "app.APP_EISeg.raster.getGrid", "app.APP_EISeg.raster.getArray"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.setBand", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getArray", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getArray"], ["", "def", "rsBandSet", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "raster", "is", "None", ":", "\n", "            ", "return", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "bandCombos", ")", ")", ":", "\n", "            ", "self", ".", "rsRGB", "[", "i", "]", "=", "self", ".", "bandCombos", "[", "i", "]", ".", "currentIndex", "(", ")", "+", "1", "# \u4ece1\u5f00\u59cb", "\n", "", "self", ".", "raster", ".", "setBand", "(", "self", ".", "rsRGB", ")", "\n", "if", "self", ".", "grid", "is", "not", "None", ":", "\n", "            ", "if", "isinstance", "(", "self", ".", "grid", ".", "curr_idx", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "row", ",", "col", "=", "self", ".", "grid", ".", "curr_idx", "\n", "image", ",", "_", "=", "self", ".", "raster", ".", "getGrid", "(", "row", ",", "col", ")", "\n", "", "else", ":", "\n", "                ", "image", ",", "_", "=", "self", ".", "raster", ".", "getArray", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "image", ",", "_", "=", "self", ".", "raster", ".", "getArray", "(", ")", "\n", "", "self", ".", "image", "=", "image", "\n", "self", ".", "controller", ".", "image", "=", "image", "\n", "self", ".", "updateImage", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateBandList": [[1807, 1832], ["range", "range", "len", "app.APP_EISeg.bandCombos[].clear", "app.APP_EISeg.bandCombos[].addItems", "bandCombo.currentIndexChanged.connect", "len", "app.APP_EISeg.bandCombos[].clear", "app.APP_EISeg.bandCombos[].addItems", "app.APP_EISeg.bandCombos[].currentIndexChanged.disconnect", "app.APP_EISeg.bandCombos[].setCurrentIndex", "app.APP_EISeg.bandCombos[].currentIndexChanged.disconnect", "str", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear"], ["", "def", "updateBandList", "(", "self", ",", "clean", "=", "False", ")", ":", "\n", "        ", "if", "clean", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "bandCombos", ")", ")", ":", "\n", "                ", "try", ":", "# \u907f\u514d\u6253\u5f00jpg\u540e\u518d\u6253\u5f00tif\u62a5\u9519", "\n", "                    ", "self", ".", "bandCombos", "[", "i", "]", ".", "currentIndexChanged", ".", "disconnect", "(", ")", "\n", "", "except", "TypeError", ":", "\n", "                    ", "pass", "\n", "", "self", ".", "bandCombos", "[", "i", "]", ".", "clear", "(", ")", "\n", "self", ".", "bandCombos", "[", "i", "]", ".", "addItems", "(", "[", "\"band_1\"", "]", ")", "\n", "", "return", "\n", "", "bands", "=", "self", ".", "raster", ".", "geoinfo", ".", "count", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "bandCombos", ")", ")", ":", "\n", "            ", "try", ":", "# \u907f\u514d\u6253\u5f00jpg\u540e\u518d\u6253\u5f00tif\u62a5\u9519", "\n", "                ", "self", ".", "bandCombos", "[", "i", "]", ".", "currentIndexChanged", ".", "disconnect", "(", ")", "\n", "", "except", "TypeError", ":", "\n", "                ", "pass", "\n", "", "self", ".", "bandCombos", "[", "i", "]", ".", "clear", "(", ")", "\n", "self", ".", "bandCombos", "[", "i", "]", ".", "addItems", "(", "\n", "[", "(", "\"band_\"", "+", "str", "(", "j", "+", "1", ")", ")", "for", "j", "in", "range", "(", "bands", ")", "]", ")", "\n", "try", ":", "\n", "                ", "self", ".", "bandCombos", "[", "i", "]", ".", "setCurrentIndex", "(", "self", ".", "rsRGB", "[", "i", "]", "-", "1", ")", "\n", "", "except", "IndexError", ":", "\n", "                ", "pass", "\n", "", "", "for", "bandCombo", "in", "self", ".", "bandCombos", ":", "\n", "            ", "bandCombo", ".", "currentIndexChanged", ".", "connect", "(", "self", ".", "rsBandSet", ")", "# \u8bbe\u7f6e\u6ce2\u6bb5", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleLargestCC": [[1840, 1845], ["app.APP_EISeg.controller.filterLargestCC"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.filterLargestCC"], ["", "", "def", "toggleLargestCC", "(", "self", ",", "on", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "self", ".", "controller", ".", "filterLargestCC", "(", "on", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.initGrid": [[1847, 1862], ["app.APP_EISeg.grid.createGrids", "app.APP_EISeg.gridTable.setRowCount", "app.APP_EISeg.gridTable.setColumnCount", "range", "app.APP_EISeg.gridTable.item().setBackground", "app.APP_EISeg.gridTable.cellClicked.connect", "range", "app.APP_EISeg.gridTable.setItem", "app.APP_EISeg.gridTable.item().setBackground", "app.APP_EISeg.gridTable.item().setFlags", "app.APP_EISeg.gridTable.item", "qtpy.QtWidgets.QTableWidgetItem", "app.APP_EISeg.gridTable.item", "app.APP_EISeg.gridTable.item"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.createGrids"], ["", "", "def", "initGrid", "(", "self", ")", ":", "\n", "        ", "grid_row_count", ",", "grid_col_count", "=", "self", ".", "grid", ".", "createGrids", "(", ")", "\n", "self", ".", "gridTable", ".", "setRowCount", "(", "grid_row_count", ")", "\n", "self", ".", "gridTable", ".", "setColumnCount", "(", "grid_col_count", ")", "\n", "for", "r", "in", "range", "(", "grid_row_count", ")", ":", "\n", "            ", "for", "c", "in", "range", "(", "grid_col_count", ")", ":", "\n", "                ", "self", ".", "gridTable", ".", "setItem", "(", "r", ",", "c", ",", "QtWidgets", ".", "QTableWidgetItem", "(", ")", ")", "\n", "self", ".", "gridTable", ".", "item", "(", "r", ",", "c", ")", ".", "setBackground", "(", "self", ".", "GRID_COLOR", "[", "\"idle\"", "]", ")", "\n", "self", ".", "gridTable", ".", "item", "(", "r", ",", "c", ")", ".", "setFlags", "(", "\n", "Qt", ".", "ItemIsSelectable", ")", "# \u65e0\u6cd5\u9ad8\u4eae\u9009\u62e9", "\n", "# \u521d\u59cb\u663e\u793a\u7b2c\u4e00\u4e2a", "\n", "", "", "self", ".", "grid", ".", "curr_idx", "=", "(", "0", ",", "0", ")", "\n", "self", ".", "gridTable", ".", "item", "(", "0", ",", "0", ")", ".", "setBackground", "(", "self", ".", "GRID_COLOR", "[", "\"overlying\"", "]", ")", "\n", "# \u4e8b\u4ef6\u6ce8\u518c", "\n", "self", ".", "gridTable", ".", "cellClicked", ".", "connect", "(", "self", ".", "changeGrid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeGrid": [[1863, 1888], ["app.APP_EISeg.delAllPolygon", "app.APP_EISeg.grid.getGrid", "app.APP_EISeg.controller.setImage", "app.APP_EISeg.updateImage", "app.APP_EISeg.saveGrid", "app.APP_EISeg.gridTable.item().setBackground", "app.APP_EISeg.gridTable.item().setBackground", "app.APP_EISeg.mask2poly", "app.APP_EISeg.gridTable.item().setBackground", "app.APP_EISeg.gridTable.item().setBackground", "app.APP_EISeg.gridTable.item", "app.APP_EISeg.gridTable.item", "app.APP_EISeg.gridTable.item", "app.APP_EISeg.gridTable.item"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.delAllPolygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.mask2poly"], ["", "def", "changeGrid", "(", "self", ",", "row", ",", "col", ")", ":", "\n", "# \u6e05\u9664\u672a\u4fdd\u5b58\u7684\u5207\u6362", "\n", "# TODO: \u8fd9\u5757\u5e94\u8be5\u901a\u8fc7dirty\u5224\u65ad?", "\n", "        ", "if", "self", ".", "grid", ".", "curr_idx", "is", "not", "None", ":", "\n", "            ", "self", ".", "saveGrid", "(", ")", "# \u5207\u6362\u65f6\u81ea\u52a8\u4fdd\u5b58\u4e0a\u4e00\u5757", "\n", "last_r", ",", "last_c", "=", "self", ".", "grid", ".", "curr_idx", "\n", "if", "self", ".", "grid", ".", "mask_grids", "[", "last_r", "]", "[", "last_c", "]", "is", "None", ":", "\n", "                ", "self", ".", "gridTable", ".", "item", "(", "\n", "last_r", ",", "last_c", ")", ".", "setBackground", "(", "self", ".", "GRID_COLOR", "[", "\"idle\"", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "gridTable", ".", "item", "(", "\n", "last_r", ",", "last_c", ")", ".", "setBackground", "(", "self", ".", "GRID_COLOR", "[", "\"finised\"", "]", ")", "\n", "", "", "self", ".", "delAllPolygon", "(", ")", "\n", "image", ",", "mask", "=", "self", ".", "grid", ".", "getGrid", "(", "row", ",", "col", ")", "\n", "self", ".", "controller", ".", "setImage", "(", "image", ")", "\n", "self", ".", "grid", ".", "curr_idx", "=", "(", "row", ",", "col", ")", "\n", "if", "mask", "is", "None", ":", "\n", "            ", "self", ".", "gridTable", ".", "item", "(", "row", ",", "\n", "col", ")", ".", "setBackground", "(", "self", ".", "GRID_COLOR", "[", "\"current\"", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "gridTable", ".", "item", "(", "row", ",", "\n", "col", ")", ".", "setBackground", "(", "self", ".", "GRID_COLOR", "[", "\"overlying\"", "]", ")", "\n", "self", ".", "mask2poly", "(", "mask", ")", "\n", "# \u5237\u65b0", "\n", "", "self", ".", "updateImage", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.mask2poly": [[1889, 1920], ["range", "enumerate", "numpy.unique", "len", "colors.append", "zip", "int", "len", "util.get_polygon", "app.APP_EISeg.createPoly", "app.APP_EISeg.boundaryRegular.isChecked", "p.setAnning", "geocode_list.append", "gi.tolist"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.get_polygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.createPoly", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setAnning", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "mask2poly", "(", "self", ",", "mask", ",", "show", "=", "True", ")", ":", "\n", "        ", "labs", "=", "np", ".", "unique", "(", "mask", ")", "[", "1", ":", "]", "\n", "colors", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "labs", ")", ")", ":", "\n", "            ", "idx", "=", "int", "(", "labs", "[", "i", "]", ")", "-", "1", "\n", "if", "idx", "<", "len", "(", "self", ".", "controller", ".", "labelList", ")", ":", "\n", "                ", "c", "=", "self", ".", "controller", ".", "labelList", "[", "idx", "]", ".", "color", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "currLabelIdx", "!=", "-", "1", ":", "\n", "                    ", "c", "=", "self", ".", "controller", ".", "labelList", "[", "self", ".", "currLabelIdx", "]", ".", "color", "\n", "", "else", ":", "\n", "                    ", "c", "=", "None", "\n", "", "", "colors", ".", "append", "(", "c", ")", "\n", "", "geocode_list", "=", "[", "]", "\n", "for", "idx", ",", "(", "l", ",", "c", ")", "in", "enumerate", "(", "zip", "(", "labs", ",", "colors", ")", ")", ":", "\n", "            ", "if", "c", "is", "not", "None", ":", "\n", "                ", "curr_polygon", "=", "util", ".", "get_polygon", "(", "\n", "(", "(", "mask", "==", "l", ")", ".", "astype", "(", "np", ".", "uint8", ")", "*", "255", ")", ",", "\n", "building", "=", "self", ".", "boundaryRegular", ".", "isChecked", "(", ")", ")", "\n", "if", "show", "==", "True", ":", "\n", "                    ", "self", ".", "createPoly", "(", "curr_polygon", ",", "c", ")", "\n", "for", "p", "in", "self", ".", "scene", ".", "polygon_items", ":", "\n", "                        ", "p", ".", "setAnning", "(", "isAnning", "=", "False", ")", "\n", "", "", "else", ":", "\n", "                    ", "for", "g", "in", "curr_polygon", ":", "\n", "                        ", "points", "=", "[", "gi", ".", "tolist", "(", ")", "for", "gi", "in", "g", "]", "\n", "geocode_list", ".", "append", "(", "{", "\n", "\"name\"", ":", "self", ".", "controller", ".", "labelList", "[", "idx", "]", ".", "name", ",", "\n", "\"points\"", ":", "points", ",", "\n", "}", ")", "\n", "", "", "", "", "return", "geocode_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveGrid": [[1921, 1948], ["app.APP_EISeg.gridTable.item().setBackground", "numpy.array", "app.APP_EISeg.cheSaveEvery.isChecked", "app.APP_EISeg.getMask", "os.split", "os.split", "os.path.splitext", "os.path.splitext", "os.path.splitext", "os.path.splitext", "os.join", "os.join", "app.APP_EISeg.raster.getGrid", "easydict.EasyDict", "app.APP_EISeg.raster.saveMask", "app.APP_EISeg.raster.saveMask", "app.APP_EISeg.gridTable.item", "app.APP_EISeg.changeOutputDir", "app.APP_EISeg.listFiles.currentItem().text", "os.join.replace", "app.APP_EISeg.listFiles.currentItem", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.getMask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.saveMask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.saveMask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeOutputDir"], ["", "def", "saveGrid", "(", "self", ")", ":", "\n", "        ", "row", ",", "col", "=", "self", ".", "grid", ".", "curr_idx", "\n", "if", "self", ".", "grid", ".", "curr_idx", "is", "None", ":", "\n", "            ", "return", "\n", "", "self", ".", "gridTable", ".", "item", "(", "row", ",", "\n", "col", ")", ".", "setBackground", "(", "self", ".", "GRID_COLOR", "[", "\"overlying\"", "]", ")", "\n", "# if len(np.unique(self.grid.mask_grids[row][col])) == 1:", "\n", "self", ".", "grid", ".", "mask_grids", "[", "row", "]", "[", "col", "]", "=", "np", ".", "array", "(", "self", ".", "getMask", "(", ")", ")", "\n", "if", "self", ".", "cheSaveEvery", ".", "isChecked", "(", ")", ":", "\n", "            ", "if", "self", ".", "outputDir", "is", "None", ":", "\n", "                ", "self", ".", "changeOutputDir", "(", ")", "\n", "", "_", ",", "fullflname", "=", "osp", ".", "split", "(", "self", ".", "listFiles", ".", "currentItem", "(", ")", ".", "text", "(", ")", ")", "\n", "fname", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "fullflname", ")", "\n", "path", "=", "osp", ".", "join", "(", "self", ".", "outputDir", ",", "(", "\n", "fname", "+", "\"_data_\"", "+", "str", "(", "row", ")", "+", "\"_\"", "+", "str", "(", "col", ")", "+", "\".tif\"", ")", ")", "\n", "im", ",", "tf", "=", "self", ".", "raster", ".", "getGrid", "(", "row", ",", "col", ")", "\n", "h", ",", "w", "=", "im", ".", "shape", "[", ":", "2", "]", "\n", "geoinfo", "=", "edict", "(", ")", "\n", "geoinfo", ".", "xsize", "=", "w", "\n", "geoinfo", ".", "ysize", "=", "h", "\n", "geoinfo", ".", "dtype", "=", "self", ".", "raster", ".", "geoinfo", ".", "dtype", "\n", "geoinfo", ".", "crs", "=", "self", ".", "raster", ".", "geoinfo", ".", "crs", "\n", "geoinfo", ".", "geotf", "=", "tf", "\n", "self", ".", "raster", ".", "saveMask", "(", "self", ".", "grid", ".", "mask_grids", "[", "row", "]", "[", "col", "]", ",", "\n", "path", ".", "replace", "(", "\"data\"", ",", "\"mask\"", ")", ",", "\n", "geoinfo", ")", "# \u4fdd\u5b58mask", "\n", "self", ".", "raster", ".", "saveMask", "(", "im", ",", "path", ",", "geoinfo", ",", "3", ")", "# \u4fdd\u5b58\u56fe\u50cf", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.turnGrid": [[1949, 1964], ["app.APP_EISeg.changeGrid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.changeGrid"], ["", "", "def", "turnGrid", "(", "self", ",", "delta", ")", ":", "\n", "# \u5207\u6362\u4e0b\u4e00\u4e2a\u5bab\u683c", "\n", "        ", "r", ",", "c", "=", "self", ".", "grid", ".", "curr_idx", "if", "self", ".", "grid", ".", "curr_idx", "is", "not", "None", "else", "(", "0", ",", "-", "1", ")", "\n", "c", "+=", "delta", "\n", "if", "c", ">=", "self", ".", "grid", ".", "grid_count", "[", "1", "]", ":", "\n", "            ", "c", "=", "0", "\n", "r", "+=", "1", "\n", "if", "r", ">=", "self", ".", "grid", ".", "grid_count", "[", "0", "]", ":", "\n", "                ", "r", "=", "0", "\n", "", "", "if", "c", "<", "0", ":", "\n", "            ", "c", "=", "self", ".", "grid", ".", "grid_count", "[", "1", "]", "-", "1", "\n", "r", "-=", "1", "\n", "if", "r", "<", "0", ":", "\n", "                ", "r", "=", "self", ".", "grid", ".", "grid_count", "[", "0", "]", "-", "1", "\n", "", "", "self", ".", "changeGrid", "(", "r", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.closeGrid": [[1965, 1969], ["app.APP_EISeg.gridTable.setRowCount", "app.APP_EISeg.gridTable.clearContents"], "methods", ["None"], ["", "def", "closeGrid", "(", "self", ")", ":", "\n", "        ", "self", ".", "grid", "=", "None", "\n", "self", ".", "gridTable", ".", "setRowCount", "(", "0", ")", "\n", "self", ".", "gridTable", ".", "clearContents", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveGridLabel": [[1970, 2013], ["app.APP_EISeg.delAllPolygon", "app.APP_EISeg.grid.splicingList", "app.APP_EISeg.exportLabel", "app.APP_EISeg.gridTable.rowCount", "app.APP_EISeg.gridTable.colorCount", "range", "app.APP_EISeg.closeGrid", "app.APP_EISeg.updateBandList", "app.APP_EISeg.controller.setImage", "app.APP_EISeg.updateImage", "app.APP_EISeg.setDirty", "os.splitext", "os.splitext", "os.join", "os.join", "app.APP_EISeg.chooseSavePath", "app.APP_EISeg.finishObject", "app.APP_EISeg.saveGrid", "app.APP_EISeg.raster.getArray", "plugin.n2grid.checkOpenGrid", "app.APP_EISeg.statusbar.showMessage", "range", "os.basename", "os.basename", "app.APP_EISeg.tr", "app.APP_EISeg.gridTable.item().setBackground", "app.APP_EISeg.gridTable.item"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.delAllPolygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.splicingList", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.exportLabel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.closeGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateBandList", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.chooseSavePath", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.finishObject", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getArray", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.checkOpenGrid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "saveGridLabel", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "outputDir", "is", "not", "None", ":", "\n", "            ", "name", ",", "ext", "=", "osp", ".", "splitext", "(", "osp", ".", "basename", "(", "self", ".", "imagePath", ")", ")", "\n", "if", "not", "self", ".", "origExt", ":", "\n", "                ", "ext", "=", "\".png\"", "\n", "", "save_path", "=", "osp", ".", "join", "(", "self", ".", "outputDir", ",", "name", "+", "ext", ")", "\n", "", "else", ":", "\n", "            ", "save_path", "=", "self", ".", "chooseSavePath", "(", ")", "\n", "if", "save_path", "==", "\"\"", ":", "\n", "                ", "return", "\n", "", "", "try", ":", "\n", "            ", "self", ".", "finishObject", "(", ")", "\n", "self", ".", "saveGrid", "(", ")", "# \u5148\u4fdd\u5b58\u5f53\u524d", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "", "self", ".", "delAllPolygon", "(", ")", "# \u6e05\u7406", "\n", "mask", "=", "self", ".", "grid", ".", "splicingList", "(", "save_path", ")", "\n", "if", "self", ".", "grid", ".", "__class__", ".", "__name__", "==", "\"RSGrids\"", ":", "\n", "            ", "self", ".", "image", ",", "is_big", "=", "self", ".", "raster", ".", "getArray", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "image", "=", "self", ".", "grid", ".", "detimg", "\n", "is_big", "=", "checkOpenGrid", "(", "self", ".", "image", ",", "self", ".", "thumbnail_min", ")", "\n", "", "if", "is_big", "is", "None", ":", "\n", "            ", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "\"\u56fe\u50cf\u8fc7\u5927\uff0c\u5df2\u663e\u793a\u7f29\u7565\u56fe\"", ")", ")", "\n", "", "self", ".", "controller", ".", "image", "=", "self", ".", "image", "\n", "self", ".", "controller", ".", "_result_mask", "=", "mask", "\n", "self", ".", "exportLabel", "(", "savePath", "=", "save_path", ",", "lab_input", "=", "mask", ")", "\n", "# \u5237\u65b0", "\n", "grid_row_count", "=", "self", ".", "gridTable", ".", "rowCount", "(", ")", "\n", "grid_col_count", "=", "self", ".", "gridTable", ".", "colorCount", "(", ")", "\n", "for", "r", "in", "range", "(", "grid_row_count", ")", ":", "\n", "            ", "for", "c", "in", "range", "(", "grid_col_count", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "self", ".", "gridTable", ".", "item", "(", "\n", "r", ",", "c", ")", ".", "setBackground", "(", "self", ".", "GRID_COLOR", "[", "\"idle\"", "]", ")", "\n", "", "except", ":", "\n", "                    ", "pass", "\n", "", "", "", "self", ".", "raster", "=", "None", "\n", "self", ".", "closeGrid", "(", ")", "\n", "self", ".", "updateBandList", "(", "True", ")", "\n", "self", ".", "controller", ".", "setImage", "(", "self", ".", "image", ")", "\n", "self", ".", "updateImage", "(", "True", ")", "\n", "self", ".", "setDirty", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.opacity": [[2014, 2017], ["app.APP_EISeg.sldOpacity.value"], "methods", ["None"], ["", "@", "property", "\n", "def", "opacity", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sldOpacity", ".", "value", "(", ")", "/", "100", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.clickRadius": [[2018, 2021], ["app.APP_EISeg.sldClickRadius.value"], "methods", ["None"], ["", "@", "property", "\n", "def", "clickRadius", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sldClickRadius", ".", "value", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.segThresh": [[2022, 2025], ["app.APP_EISeg.sldThresh.value"], "methods", ["None"], ["", "@", "property", "\n", "def", "segThresh", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sldThresh", ".", "value", "(", ")", "/", "100", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warnException": [[2030, 2034], ["str", "app.APP_EISeg.warn", "str.split"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn"], ["", "def", "warnException", "(", "self", ",", "e", ")", ":", "\n", "        ", "e", "=", "str", "(", "e", ")", "\n", "title", "=", "e", ".", "split", "(", "\"\u3002\"", ")", "[", "0", "]", "\n", "self", ".", "warn", "(", "title", ",", "e", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn": [[2035, 2042], ["qtpy.QtWidgets.QMessageBox", "qtpy.QtWidgets.QMessageBox.setWindowTitle", "qtpy.QtWidgets.QMessageBox.setText", "qtpy.QtWidgets.QMessageBox.setStandardButtons", "qtpy.QtWidgets.QMessageBox.exec_"], "methods", ["None"], ["", "def", "warn", "(", "self", ",", "title", ",", "text", ",", "buttons", "=", "QMessageBox", ".", "Yes", ")", ":", "\n", "        ", "msg", "=", "QMessageBox", "(", ")", "\n", "# msg.setIcon(QMessageBox.Warning)", "\n", "msg", ".", "setWindowTitle", "(", "title", ")", "\n", "msg", ".", "setText", "(", "text", ")", "\n", "msg", ".", "setStandardButtons", "(", "buttons", ")", "\n", "return", "msg", ".", "exec_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.status": [[2055, 2063], ["None"], "methods", ["None"], ["", "@", "status", ".", "setter", "\n", "def", "status", "(", "self", ",", "status", ")", ":", "\n", "        ", "if", "status", "not", "in", "[", "self", ".", "ANNING", ",", "self", ".", "EDITING", "]", ":", "\n", "            ", "return", "\n", "", "if", "status", "==", "self", ".", "ANNING", ":", "\n", "            ", "self", ".", "_anning", "=", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "_anning", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadGrid": [[2064, 2078], ["app.APP_EISeg.warn", "app.APP_EISeg.tr", "app.APP_EISeg.tr", "app.APP_EISeg.initGrid", "app.APP_EISeg.dockWidgets[].isVisible", "app.APP_EISeg.menus.showMenu[].setChecked", "app.APP_EISeg.dockWidgets[].show", "plugin.n2grid.RSGrids", "plugin.n2grid.Grids"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.warn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.initGrid"], ["", "", "def", "loadGrid", "(", "self", ",", "img", ",", "is_rs", "=", "True", ")", ":", "\n", "        ", "res", "=", "self", ".", "warn", "(", "self", ".", "tr", "(", "\"\u56fe\u50cf\u8fc7\u5927\"", ")", ",", "self", ".", "tr", "(", "\"\u56fe\u50cf\u8fc7\u5927\uff0c\u662f\u5426\u542f\u7528\u5bab\u683c\u529f\u80fd\uff1f\"", ")", ",", "buttons", "=", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "No", ")", "\n", "if", "res", "==", "QMessageBox", ".", "Yes", ":", "\n", "# \u6253\u5f00\u5bab\u683c\u529f\u80fd", "\n", "            ", "if", "self", ".", "dockWidgets", "[", "\"grid\"", "]", ".", "isVisible", "(", ")", "is", "False", ":", "\n", "# TODO: \u6539\u6210self.dockStatus", "\n", "                ", "self", ".", "menus", ".", "showMenu", "[", "-", "1", "]", ".", "setChecked", "(", "True", ")", "\n", "# self.display_dockwidget[-1] = True", "\n", "self", ".", "dockWidgets", "[", "\"grid\"", "]", ".", "show", "(", ")", "\n", "", "self", ".", "grid", "=", "RSGrids", "(", "img", ")", "if", "is_rs", "else", "Grids", "(", "img", ")", "\n", "self", ".", "initGrid", "(", ")", "\n", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadLayout": [[2080, 2082], ["app.APP_EISeg.restoreState"], "methods", ["None"], ["", "def", "loadLayout", "(", "self", ")", ":", "\n", "        ", "self", ".", "restoreState", "(", "self", ".", "layoutStatus", ")", "\n", "# TODO: \u8fd9\u91cc\u68c0\u67e5\u73af\u5883\uff0c\u5224\u65ad\u662f\u4e0d\u662f\u5f00\u533b\u7597\u548c\u9065\u611fwidget", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveLayout": [[2084, 2090], ["app.APP_EISeg.settings.setValue", "app.APP_EISeg.settings.setValue", "qtpy.QtCore.QByteArray", "app.APP_EISeg.saveState", "app.APP_EISeg.save_status.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "saveLayout", "(", "self", ")", ":", "\n", "# \u4fdd\u5b58\u754c\u9762", "\n", "        ", "self", ".", "settings", ".", "setValue", "(", "\"layout_status\"", ",", "QByteArray", "(", "self", ".", "saveState", "(", ")", ")", ")", "\n", "self", ".", "settings", ".", "setValue", "(", "\n", "\"save_status\"", ",", "\n", "[", "(", "k", ",", "self", ".", "save_status", "[", "k", "]", ")", "for", "k", "in", "self", ".", "save_status", ".", "keys", "(", ")", "]", ")", "\n", "# # \u5982\u679c\u8bbe\u7f6e\u4e86\u4fdd\u5b58\u8def\u5f84\uff0c\u628a\u6807\u7b7e\u4e5f\u4fdd\u5b58\u4e0b", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.closeEvent": [[2094, 2098], ["app.APP_EISeg.saveImage", "app.APP_EISeg.saveLayout", "qtpy.QtCore.QCoreApplication.quit"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.saveLayout"], ["", "def", "closeEvent", "(", "self", ",", "event", ")", ":", "\n", "        ", "self", ".", "saveImage", "(", ")", "\n", "self", ".", "saveLayout", "(", ")", "\n", "QCoreApplication", ".", "quit", "(", ")", "\n", "# sys.exit(0)", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.reportBug": [[2100, 2103], ["webbrowser.open"], "methods", ["None"], ["", "def", "reportBug", "(", "self", ")", ":", "\n", "        ", "webbrowser", ".", "open", "(", "\n", "\"https://github.com/PaddleCV-SIG/EISeg/issues/new/choose\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.quickStart": [[2104, 2109], ["webbrowser.open"], "methods", ["None"], ["", "def", "quickStart", "(", "self", ")", ":", "\n", "# self.saveImage(True)", "\n", "# self.canvas.setStyleSheet(self.note_style)", "\n", "        ", "webbrowser", ".", "open", "(", "\n", "\"https://github.com/PaddleCV-SIG/EISeg/tree/release/0.4.0\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toggleLogging": [[2110, 2116], ["app.APP_EISeg.settings.setValue", "eiseg.logger.setLevel", "eiseg.logger.setLevel"], "methods", ["None"], ["", "def", "toggleLogging", "(", "self", ",", "s", ")", ":", "\n", "        ", "if", "s", ":", "\n", "            ", "logger", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "", "else", ":", "\n", "            ", "logger", ".", "setLevel", "(", "logging", ".", "CRITICAL", ")", "\n", "", "self", ".", "settings", ".", "setValue", "(", "\"log\"", ",", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.toBeImplemented": [[2117, 2119], ["app.APP_EISeg.statusbar.showMessage", "app.APP_EISeg.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "toBeImplemented", "(", "self", ")", ":", "\n", "        ", "self", ".", "statusbar", ".", "showMessage", "(", "self", ".", "tr", "(", "\"\u529f\u80fd\u5c1a\u5728\u5f00\u53d1\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.wwChanged": [[2121, 2131], ["app.APP_EISeg.textWw.selectAll", "plugin.medical.med.windowlize", "app.APP_EISeg.updateImage"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.medical.med.windowlize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage"], ["", "def", "wwChanged", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "controller", "or", "self", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "try", ":", "# \u90a3\u79cdjpg\u4ec0\u4e48\u683c\u5f0f\u7684\u533b\u7597\u56fe\u50cf\u8c03\u6574\u7a97\u5bbd\u7b49\u4f1a\u9020\u6210\u5d29\u6e83", "\n", "            ", "self", ".", "textWw", ".", "selectAll", "(", ")", "\n", "self", ".", "controller", ".", "image", "=", "med", ".", "windowlize", "(", "self", ".", "controller", ".", "rawImage", ",", "\n", "self", ".", "ww", ",", "self", ".", "wc", ")", "\n", "self", ".", "updateImage", "(", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.wcChanged": [[2132, 2142], ["app.APP_EISeg.textWc.selectAll", "plugin.medical.med.windowlize", "app.APP_EISeg.updateImage"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.medical.med.windowlize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.updateImage"], ["", "", "def", "wcChanged", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "controller", "or", "self", ".", "image", "is", "None", ":", "\n", "            ", "return", "\n", "", "try", ":", "\n", "            ", "self", ".", "textWc", ".", "selectAll", "(", ")", "\n", "self", ".", "controller", ".", "image", "=", "med", ".", "windowlize", "(", "self", ".", "controller", ".", "rawImage", ",", "\n", "self", ".", "ww", ",", "self", ".", "wc", ")", "\n", "self", ".", "updateImage", "(", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.ww": [[2143, 2146], ["int", "app.APP_EISeg.textWw.text"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "ww", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "self", ".", "textWw", ".", "text", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.wc": [[2147, 2150], ["int", "app.APP_EISeg.textWc.text"], "methods", ["None"], ["", "@", "property", "\n", "def", "wc", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "self", ".", "textWc", ".", "text", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.ui.Ui_EISeg.__init__": [[32, 35], ["object.__init__", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Ui_EISeg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tr", "=", "partial", "(", "QtCore", ".", "QCoreApplication", ".", "translate", ",", "\"APP_EISeg\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.ui.Ui_EISeg.setupUi": [[36, 312], ["MainWindow.setObjectName", "MainWindow.setMinimumSize", "MainWindow.setWindowTitle", "MainWindow.setWindowIcon", "qtpy.QtWidgets.QWidget", "qtpy.QtWidgets.QWidget.setObjectName", "MainWindow.setCentralWidget", "qtpy.QtWidgets.QToolBar", "qtpy.QtWidgets.QSizePolicy", "qtpy.QtWidgets.QSizePolicy.setHorizontalStretch", "qtpy.QtWidgets.QSizePolicy.setVerticalStretch", "qtpy.QtWidgets.QSizePolicy.setHeightForWidth", "qtpy.QtWidgets.QToolBar.setSizePolicy", "qtpy.QtWidgets.QToolBar.setMinimumSize", "qtpy.QtWidgets.QToolBar.setMovable", "qtpy.QtWidgets.QToolBar.setAllowedAreas", "qtpy.QtWidgets.QToolBar.setObjectName", "MainWindow.addToolBar", "qtpy.QtWidgets.QStatusBar", "ui.Ui_EISeg.statusbar.setObjectName", "ui.Ui_EISeg.statusbar.setStyleSheet", "MainWindow.setStatusBar", "ui.Ui_EISeg.statusbar.addPermanentWidget", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QHBoxLayout.setObjectName", "qtpy.QtWidgets.QScrollArea", "ui.Ui_EISeg.scrollArea.setWidgetResizable", "ui.Ui_EISeg.scrollArea.setObjectName", "qtpy.QtWidgets.QHBoxLayout.addWidget", "QtWidgets.QWidget.AnnotationScene", "ui.Ui_EISeg.scene.addPixmap", "QtWidgets.QWidget.AnnotationView", "qtpy.QtWidgets.QSizePolicy", "ui.Ui_EISeg.canvas.setSizePolicy", "ui.Ui_EISeg.canvas.setAlignment", "ui.Ui_EISeg.canvas.setAutoFillBackground", "ui.Ui_EISeg.canvas.setStyleSheet", "ui.Ui_EISeg.canvas.setObjectName", "ui.Ui_EISeg.scrollArea.setWidget", "functools.partial", "functools.partial", "qtpy.QtWidgets.QWidget", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QVBoxLayout", "qtpy.QtWidgets.QVBoxLayout.setObjectName", "functools.partial.", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QCheckBox", "ui.Ui_EISeg.cheWithMask.setText", "ui.Ui_EISeg.cheWithMask.setChecked", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QHBoxLayout.addLayout", "functools.partial.", "MainWindow.addDockWidget", "qtpy.QtWidgets.QWidget", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QVBoxLayout", "qtpy.QtWidgets.QVBoxLayout.setObjectName", "qtpy.QtWidgets.QListWidget", "ui.Ui_EISeg.listFiles.setObjectName", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QHBoxLayout.addLayout", "functools.partial.", "MainWindow.addDockWidget", "qtpy.QtWidgets.QWidget", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QVBoxLayout", "qtpy.QtWidgets.QVBoxLayout.setObjectName", "QtWidgets.QWidget.table.TableWidget", "ui.Ui_EISeg.labelListTable.horizontalHeader().hide", "ui.Ui_EISeg.labelListTable.horizontalHeader().setSectionResizeMode", "ui.Ui_EISeg.labelListTable.verticalHeader().hide", "ui.Ui_EISeg.labelListTable.setColumnWidth", "ui.Ui_EISeg.labelListTable.setObjectName", "ui.Ui_EISeg.labelListTable.clearContents", "ui.Ui_EISeg.labelListTable.setRowCount", "ui.Ui_EISeg.labelListTable.setColumnCount", "qtpy.QtWidgets.QVBoxLayout.addWidget", "functools.partial.", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QHBoxLayout.addLayout", "functools.partial.", "MainWindow.addDockWidget", "functools.partial", "qtpy.QtWidgets.QWidget", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QVBoxLayout", "qtpy.QtWidgets.QVBoxLayout.setObjectName", "functools.partial.", "qtpy.QtWidgets.QVBoxLayout.addLayout", "qtpy.QtWidgets.QVBoxLayout.addWidget", "functools.partial.", "qtpy.QtWidgets.QVBoxLayout.addLayout", "qtpy.QtWidgets.QVBoxLayout.addWidget", "functools.partial.", "qtpy.QtWidgets.QVBoxLayout.addLayout", "qtpy.QtWidgets.QVBoxLayout.addWidget", "functools.partial.", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QHBoxLayout.addLayout", "functools.partial.", "MainWindow.addDockWidget", "qtpy.QtWidgets.QWidget", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QVBoxLayout", "qtpy.QtWidgets.QVBoxLayout.setObjectName", "eiseg.widget.create.create_text", "qtpy.QtWidgets.QVBoxLayout.addWidget", "eiseg.widget.create.create_text", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QCheckBox", "ui.Ui_EISeg.boundaryRegular.setObjectName", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QCheckBox", "ui.Ui_EISeg.shpSave.setObjectName", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QHBoxLayout.addLayout", "eiseg.widget.create.create_text", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QTextEdit", "ui.Ui_EISeg.edtGeoinfo.setObjectName", "ui.Ui_EISeg.edtGeoinfo.setReadOnly", "qtpy.QtWidgets.QVBoxLayout.addWidget", "functools.partial.", "MainWindow.addDockWidget", "qtpy.QtWidgets.QWidget", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QVBoxLayout", "qtpy.QtWidgets.QVBoxLayout.setObjectName", "qtpy.QtWidgets.QLabel", "qtpy.QtWidgets.QLineEdit", "ui.Ui_EISeg.textWw.setText", "ui.Ui_EISeg.textWw.setValidator", "ui.Ui_EISeg.textWw.setMaxLength", "qtpy.QtWidgets.QLabel", "qtpy.QtWidgets.QLineEdit", "ui.Ui_EISeg.textWc.setText", "ui.Ui_EISeg.textWc.setValidator", "ui.Ui_EISeg.textWc.setMaxLength", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QHBoxLayout.addLayout", "functools.partial.", "MainWindow.addDockWidget", "qtpy.QtWidgets.QWidget", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QVBoxLayout", "qtpy.QtWidgets.QVBoxLayout.setObjectName", "functools.partial.", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QHBoxLayout.setObjectName", "qtpy.QtWidgets.QHBoxLayout.addWidget", "qtpy.QtWidgets.QVBoxLayout.addLayout", "qtpy.QtWidgets.QCheckBox", "ui.Ui_EISeg.cheSaveEvery.setText", "ui.Ui_EISeg.cheSaveEvery.setChecked", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QTableWidget", "ui.Ui_EISeg.gridTable.horizontalHeader().hide", "ui.Ui_EISeg.gridTable.verticalHeader().hide", "ui.Ui_EISeg.gridTable.horizontalHeader().setSectionResizeMode", "ui.Ui_EISeg.gridTable.verticalHeader().setSectionResizeMode", "ui.Ui_EISeg.gridTable.setObjectName", "ui.Ui_EISeg.gridTable.clearContents", "ui.Ui_EISeg.gridTable.setColumnCount", "ui.Ui_EISeg.gridTable.setRowCount", "qtpy.QtWidgets.QVBoxLayout.addWidget", "qtpy.QtWidgets.QHBoxLayout.addLayout", "functools.partial.", "MainWindow.addDockWidget", "qtpy.QtCore.QMetaObject.connectSlotsByName", "qtpy.QtCore.QSize", "qtpy.QtGui.QIcon", "qtpy.QtWidgets.QToolBar.sizePolicy().hasHeightForWidth", "qtpy.QtCore.QSize", "ui.Ui_EISeg.show_logo", "qtpy.QtGui.QPixmap", "ui.Ui_EISeg.tr", "os.join", "ui.Ui_EISeg.tr", "ui.Ui_EISeg.tr", "qtpy.QtCore.Qt.DockWidgetArea", "ui.Ui_EISeg.tr", "qtpy.QtCore.Qt.DockWidgetArea", "ui.Ui_EISeg.tr", "os.join", "ui.Ui_EISeg.tr", "qtpy.QtCore.Qt.DockWidgetArea", "ui.Ui_EISeg.tr", "ui.Ui_EISeg.tr", "ui.Ui_EISeg.tr", "ui.Ui_EISeg.tr", "os.join", "ui.Ui_EISeg.tr", "qtpy.QtCore.Qt.DockWidgetArea", "ui.Ui_EISeg.tr", "eiseg.widget.create.create_text", "qtpy.QtWidgets.QComboBox", "qtpy.QtWidgets.QComboBox.addItems", "ui.Ui_EISeg.bandCombos.append", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QHBoxLayout.setObjectName", "qtpy.QtWidgets.QHBoxLayout.addWidget", "qtpy.QtWidgets.QHBoxLayout.addWidget", "qtpy.QtWidgets.QHBoxLayout.setStretch", "qtpy.QtWidgets.QVBoxLayout.addLayout", "ui.Ui_EISeg.tr", "ui.Ui_EISeg.tr", "ui.Ui_EISeg.tr", "ui.Ui_EISeg.tr", "ui.Ui_EISeg.tr", "ui.Ui_EISeg.tr", "qtpy.QtCore.Qt.DockWidgetArea", "qtpy.QtGui.QIntValidator", "qtpy.QtGui.QIntValidator", "ui.Ui_EISeg.tr", "qtpy.QtCore.Qt.DockWidgetArea", "ui.Ui_EISeg.tr", "os.join", "ui.Ui_EISeg.tr", "qtpy.QtCore.Qt.DockWidgetArea", "os.join", "ui.Ui_EISeg.labelListTable.horizontalHeader", "ui.Ui_EISeg.labelListTable.horizontalHeader", "ui.Ui_EISeg.labelListTable.verticalHeader", "ui.Ui_EISeg.gridTable.horizontalHeader", "ui.Ui_EISeg.gridTable.verticalHeader", "ui.Ui_EISeg.gridTable.horizontalHeader", "ui.Ui_EISeg.gridTable.verticalHeader", "qtpy.QtWidgets.QToolBar.sizePolicy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_text", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_text", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_text", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.ui.Ui_EISeg.show_logo", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_text", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "setupUi", "(", "self", ",", "MainWindow", ")", ":", "\n", "## -- \u4e3b\u7a97\u4f53\u8bbe\u7f6e --", "\n", "        ", "MainWindow", ".", "setObjectName", "(", "\"MainWindow\"", ")", "\n", "MainWindow", ".", "setMinimumSize", "(", "QtCore", ".", "QSize", "(", "1366", ",", "768", ")", ")", "\n", "MainWindow", ".", "setWindowTitle", "(", "__APPNAME__", "+", "\" \"", "+", "__VERSION__", ")", "\n", "MainWindow", ".", "setWindowIcon", "(", "QIcon", "(", ")", ")", "# TODO: \u9ed8\u8ba4\u56fe\u6807\u9700\u8981\u6362\u4e00\u4e2a\u5417\uff0c\u8c8c\u4f3c\u4e0d\u80fd\u4e0d\u663e\u793a\u56fe\u6807", "\n", "CentralWidget", "=", "QtWidgets", ".", "QWidget", "(", "MainWindow", ")", "\n", "CentralWidget", ".", "setObjectName", "(", "\"CentralWidget\"", ")", "\n", "MainWindow", ".", "setCentralWidget", "(", "CentralWidget", ")", "\n", "## -----", "\n", "## -- \u5de5\u5177\u680f --", "\n", "toolBar", "=", "QtWidgets", ".", "QToolBar", "(", "self", ")", "\n", "sizePolicy", "=", "QtWidgets", ".", "QSizePolicy", "(", "QtWidgets", ".", "QSizePolicy", ".", "Preferred", ",", "\n", "QtWidgets", ".", "QSizePolicy", ".", "Minimum", ")", "\n", "sizePolicy", ".", "setHorizontalStretch", "(", "0", ")", "\n", "sizePolicy", ".", "setVerticalStretch", "(", "0", ")", "\n", "sizePolicy", ".", "setHeightForWidth", "(", "toolBar", ".", "sizePolicy", "(", ")", ".", "hasHeightForWidth", "(", ")", ")", "\n", "toolBar", ".", "setSizePolicy", "(", "sizePolicy", ")", "\n", "toolBar", ".", "setMinimumSize", "(", "QtCore", ".", "QSize", "(", "0", ",", "33", ")", ")", "\n", "toolBar", ".", "setMovable", "(", "True", ")", "\n", "toolBar", ".", "setAllowedAreas", "(", "QtCore", ".", "Qt", ".", "BottomToolBarArea", "|", "\n", "QtCore", ".", "Qt", ".", "TopToolBarArea", ")", "\n", "toolBar", ".", "setObjectName", "(", "\"toolBar\"", ")", "\n", "self", ".", "toolBar", "=", "toolBar", "\n", "MainWindow", ".", "addToolBar", "(", "QtCore", ".", "Qt", ".", "TopToolBarArea", ",", "self", ".", "toolBar", ")", "\n", "## -----", "\n", "## -- \u72b6\u6001\u680f --", "\n", "self", ".", "statusbar", "=", "QtWidgets", ".", "QStatusBar", "(", "MainWindow", ")", "\n", "self", ".", "statusbar", ".", "setObjectName", "(", "\"statusbar\"", ")", "\n", "self", ".", "statusbar", ".", "setStyleSheet", "(", "\"QStatusBar::item {border: none;}\"", ")", "\n", "MainWindow", ".", "setStatusBar", "(", "self", ".", "statusbar", ")", "\n", "self", ".", "statusbar", ".", "addPermanentWidget", "(", "\n", "self", ".", "show_logo", "(", "osp", ".", "join", "(", "pjpath", ",", "\"resource/Paddle.png\"", ")", ")", ")", "\n", "## -----", "\n", "## -- \u56fe\u5f62\u533a\u57df --", "\n", "ImageRegion", "=", "QtWidgets", ".", "QHBoxLayout", "(", "CentralWidget", ")", "\n", "ImageRegion", ".", "setObjectName", "(", "\"ImageRegion\"", ")", "\n", "# \u6ed1\u52a8\u533a\u57df", "\n", "self", ".", "scrollArea", "=", "QtWidgets", ".", "QScrollArea", "(", "CentralWidget", ")", "\n", "self", ".", "scrollArea", ".", "setWidgetResizable", "(", "True", ")", "\n", "self", ".", "scrollArea", ".", "setObjectName", "(", "\"scrollArea\"", ")", "\n", "ImageRegion", ".", "addWidget", "(", "self", ".", "scrollArea", ")", "\n", "# \u56fe\u5f62\u663e\u793a", "\n", "self", ".", "scene", "=", "AnnotationScene", "(", ")", "\n", "self", ".", "scene", ".", "addPixmap", "(", "QtGui", ".", "QPixmap", "(", ")", ")", "\n", "self", ".", "canvas", "=", "AnnotationView", "(", "self", ".", "scene", ",", "self", ")", "\n", "sizePolicy", "=", "QtWidgets", ".", "QSizePolicy", "(", "QtWidgets", ".", "QSizePolicy", ".", "Expanding", ",", "\n", "QtWidgets", ".", "QSizePolicy", ".", "Expanding", ")", "\n", "self", ".", "canvas", ".", "setSizePolicy", "(", "sizePolicy", ")", "\n", "self", ".", "canvas", ".", "setAlignment", "(", "QtCore", ".", "Qt", ".", "AlignCenter", ")", "\n", "self", ".", "canvas", ".", "setAutoFillBackground", "(", "False", ")", "\n", "self", ".", "canvas", ".", "setStyleSheet", "(", "\"background-color: White\"", ")", "\n", "self", ".", "canvas", ".", "setObjectName", "(", "\"canvas\"", ")", "\n", "self", ".", "scrollArea", ".", "setWidget", "(", "self", ".", "canvas", ")", "\n", "## -----", "\n", "## -- \u5de5\u4f5c\u533a --", "\n", "p_create_dock", "=", "partial", "(", "self", ".", "creat_dock", ",", "MainWindow", ")", "\n", "p_create_button", "=", "partial", "(", "self", ".", "create_button", ",", "CentralWidget", ")", "\n", "# \u6a21\u578b\u52a0\u8f7d", "\n", "widget", "=", "QtWidgets", ".", "QWidget", "(", ")", "\n", "horizontalLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", "widget", ")", "\n", "ModelRegion", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "ModelRegion", ".", "setObjectName", "(", "\"ModelRegion\"", ")", "\n", "# labShowSet = self.create_text(CentralWidget, \"labShowSet\", \"\u6a21\u578b\u9009\u62e9\")", "\n", "# ModelRegion.addWidget(labShowSet)", "\n", "# combo = QtWidgets.QComboBox(self)", "\n", "# # combo.addItems([self.tr(ModelsNick[m.__name__][0]) for m in MODELS])", "\n", "# combo.addItems([self.tr(ModelsNick[m][0]) for m in ModelsNick.keys()])", "\n", "# self.comboModelSelect = combo", "\n", "# ModelRegion.addWidget(self.comboModelSelect)", "\n", "# \u7f51\u7edc\u53c2\u6570", "\n", "self", ".", "btnParamsSelect", "=", "p_create_button", "(", "\n", "\"btnParamsLoad\"", ",", "\n", "self", ".", "tr", "(", "\"\u52a0\u8f7d\u7f51\u7edc\u53c2\u6570\"", ")", ",", "\n", "osp", ".", "join", "(", "pjpath", ",", "\"resource/Model.png\"", ")", ",", "\n", "\"Ctrl+D\"", ",", ")", "\n", "ModelRegion", ".", "addWidget", "(", "self", ".", "btnParamsSelect", ")", "# \u6a21\u578b\u9009\u62e9", "\n", "self", ".", "cheWithMask", "=", "QtWidgets", ".", "QCheckBox", "(", "self", ")", "\n", "self", ".", "cheWithMask", ".", "setText", "(", "self", ".", "tr", "(", "\"\u4f7f\u7528\u63a9\u819c\"", ")", ")", "\n", "self", ".", "cheWithMask", ".", "setChecked", "(", "True", ")", "\n", "ModelRegion", ".", "addWidget", "(", "self", ".", "cheWithMask", ")", "# with_mask", "\n", "horizontalLayout", ".", "addLayout", "(", "ModelRegion", ")", "\n", "self", ".", "ModelDock", "=", "p_create_dock", "(", "\"ModelDock\"", ",", "self", ".", "tr", "(", "\"\u6a21\u578b\u9009\u62e9\"", ")", ",", "widget", ")", "\n", "MainWindow", ".", "addDockWidget", "(", "QtCore", ".", "Qt", ".", "DockWidgetArea", "(", "2", ")", ",", "self", ".", "ModelDock", ")", "\n", "# \u6570\u636e\u5217\u8868", "\n", "# TODO: \u6570\u636e\u5217\u8868\u52a0\u4e00\u4e2a\u641c\u7d22\u529f\u80fd", "\n", "widget", "=", "QtWidgets", ".", "QWidget", "(", ")", "\n", "horizontalLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", "widget", ")", "\n", "ListRegion", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "ListRegion", ".", "setObjectName", "(", "\"ListRegion\"", ")", "\n", "# labFiles = self.create_text(CentralWidget, \"labFiles\", \"\u6570\u636e\u5217\u8868\")", "\n", "# ListRegion.addWidget(labFiles)", "\n", "self", ".", "listFiles", "=", "QtWidgets", ".", "QListWidget", "(", "CentralWidget", ")", "\n", "self", ".", "listFiles", ".", "setObjectName", "(", "\"ListFiles\"", ")", "\n", "ListRegion", ".", "addWidget", "(", "self", ".", "listFiles", ")", "\n", "\n", "# ListRegion.addWidget(self.btnSave)", "\n", "horizontalLayout", ".", "addLayout", "(", "ListRegion", ")", "\n", "self", ".", "DataDock", "=", "p_create_dock", "(", "\"DataDock\"", ",", "self", ".", "tr", "(", "\"\u6570\u636e\u5217\u8868\"", ")", ",", "widget", ")", "\n", "MainWindow", ".", "addDockWidget", "(", "QtCore", ".", "Qt", ".", "DockWidgetArea", "(", "2", ")", ",", "self", ".", "DataDock", ")", "\n", "# \u6807\u7b7e\u5217\u8868", "\n", "widget", "=", "QtWidgets", ".", "QWidget", "(", ")", "\n", "horizontalLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", "widget", ")", "\n", "LabelRegion", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "LabelRegion", ".", "setObjectName", "(", "\"LabelRegion\"", ")", "\n", "self", ".", "labelListTable", "=", "TableWidget", "(", "\n", "CentralWidget", ")", "# QtWidgets.QTableWidget(CentralWidget)", "\n", "self", ".", "labelListTable", ".", "horizontalHeader", "(", ")", ".", "hide", "(", ")", "\n", "# \u94fa\u6ee1", "\n", "self", ".", "labelListTable", ".", "horizontalHeader", "(", ")", ".", "setSectionResizeMode", "(", "\n", "QtWidgets", ".", "QHeaderView", ".", "Stretch", ")", "\n", "self", ".", "labelListTable", ".", "verticalHeader", "(", ")", ".", "hide", "(", ")", "\n", "self", ".", "labelListTable", ".", "setColumnWidth", "(", "0", ",", "10", ")", "\n", "# self.labelListTable.setMinimumWidth()", "\n", "self", ".", "labelListTable", ".", "setObjectName", "(", "\"labelListTable\"", ")", "\n", "self", ".", "labelListTable", ".", "clearContents", "(", ")", "\n", "self", ".", "labelListTable", ".", "setRowCount", "(", "0", ")", "\n", "self", ".", "labelListTable", ".", "setColumnCount", "(", "4", ")", "\n", "\n", "LabelRegion", ".", "addWidget", "(", "self", ".", "labelListTable", ")", "\n", "self", ".", "btnAddClass", "=", "p_create_button", "(", "\n", "\"btnAddClass\"", ",", "\n", "self", ".", "tr", "(", "\"\u6dfb\u52a0\u6807\u7b7e\"", ")", ",", "osp", ".", "join", "(", "pjpath", ",", "\"resource/Label.png\"", ")", ")", "\n", "LabelRegion", ".", "addWidget", "(", "self", ".", "btnAddClass", ")", "\n", "horizontalLayout", ".", "addLayout", "(", "LabelRegion", ")", "\n", "self", ".", "LabelDock", "=", "p_create_dock", "(", "\"LabelDock\"", ",", "self", ".", "tr", "(", "\"\u6807\u7b7e\u5217\u8868\"", ")", ",", "widget", ")", "\n", "MainWindow", ".", "addDockWidget", "(", "QtCore", ".", "Qt", ".", "DockWidgetArea", "(", "2", ")", ",", "self", ".", "LabelDock", ")", "\n", "## \u6ed1\u5757\u8bbe\u7f6e", "\n", "# \u5206\u5272\u9608\u503c", "\n", "p_create_slider", "=", "partial", "(", "self", ".", "create_slider", ",", "CentralWidget", ")", "\n", "widget", "=", "QtWidgets", ".", "QWidget", "(", ")", "\n", "horizontalLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", "widget", ")", "\n", "ShowSetRegion", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "ShowSetRegion", ".", "setObjectName", "(", "\"ShowSetRegion\"", ")", "\n", "self", ".", "sldThresh", ",", "SegShowRegion", "=", "p_create_slider", "(", "\"sldThresh\"", ",", "\n", "\"labThresh\"", ",", "\n", "self", ".", "tr", "(", "\"\u5206\u5272\u9608\u503c\uff1a\"", ")", ")", "\n", "ShowSetRegion", ".", "addLayout", "(", "SegShowRegion", ")", "\n", "ShowSetRegion", ".", "addWidget", "(", "self", ".", "sldThresh", ")", "\n", "# \u900f\u660e\u5ea6", "\n", "self", ".", "sldOpacity", ",", "MaskShowRegion", "=", "p_create_slider", "(", "\"sldOpacity\"", ",", "\n", "\"labOpacity\"", ",", "\n", "self", ".", "tr", "(", "\"\u6807\u7b7e\u900f\u660e\u5ea6\uff1a\"", ")", ",", "75", ")", "\n", "ShowSetRegion", ".", "addLayout", "(", "MaskShowRegion", ")", "\n", "ShowSetRegion", ".", "addWidget", "(", "self", ".", "sldOpacity", ")", "\n", "# \u70b9\u5927\u5c0f", "\n", "self", ".", "sldClickRadius", ",", "PointShowRegion", "=", "p_create_slider", "(", "\n", "\"sldClickRadius\"", ",", "\"labClickRadius\"", ",", "self", ".", "tr", "(", "\"\u70b9\u51fb\u53ef\u89c6\u5316\u534a\u5f84\uff1a\"", ")", ",", "3", ",", "10", ",", "1", ")", "\n", "ShowSetRegion", ".", "addLayout", "(", "PointShowRegion", ")", "\n", "ShowSetRegion", ".", "addWidget", "(", "self", ".", "sldClickRadius", ")", "\n", "# \u4fdd\u5b58", "\n", "self", ".", "btnSave", "=", "p_create_button", "(", "\n", "\"btnSave\"", ",", "\n", "self", ".", "tr", "(", "\"\u4fdd\u5b58\"", ")", ",", "\n", "osp", ".", "join", "(", "pjpath", ",", "\"resource/Save.png\"", ")", ",", "\n", "\"Ctrl+S\"", ",", ")", "\n", "ShowSetRegion", ".", "addWidget", "(", "self", ".", "btnSave", ")", "\n", "horizontalLayout", ".", "addLayout", "(", "ShowSetRegion", ")", "\n", "self", ".", "SegSettingDock", "=", "p_create_dock", "(", "\"SegSettingDock\"", ",", "\n", "self", ".", "tr", "(", "\"\u5206\u5272\u8bbe\u7f6e\"", ")", ",", "widget", ")", "\n", "MainWindow", ".", "addDockWidget", "(", "\n", "QtCore", ".", "Qt", ".", "DockWidgetArea", "(", "2", ")", ",", "self", ".", "SegSettingDock", ")", "\n", "## \u4e13\u4e1a\u529f\u80fd\u533a\u5de5\u4f5c\u533a", "\n", "widget", "=", "QtWidgets", ".", "QWidget", "(", ")", "\n", "horizontalLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", "widget", ")", "\n", "bandRegion", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "bandRegion", ".", "setObjectName", "(", "\"bandRegion\"", ")", "\n", "bandSelection", "=", "create_text", "(", "CentralWidget", ",", "\"bandSelection\"", ",", "\n", "self", ".", "tr", "(", "\"\u6ce2\u6bb5\u8bbe\u7f6e\"", ")", ")", "\n", "bandRegion", ".", "addWidget", "(", "bandSelection", ")", "\n", "text_list", "=", "[", "\"R\"", ",", "\"G\"", ",", "\"B\"", "]", "\n", "self", ".", "bandCombos", "=", "[", "]", "\n", "for", "txt", "in", "text_list", ":", "\n", "            ", "lab", "=", "create_text", "(", "CentralWidget", ",", "\"band\"", "+", "txt", ",", "txt", ")", "\n", "combo", "=", "QtWidgets", ".", "QComboBox", "(", ")", "\n", "combo", ".", "addItems", "(", "[", "\"band_1\"", "]", ")", "\n", "self", ".", "bandCombos", ".", "append", "(", "combo", ")", "\n", "hbandLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", ")", "\n", "hbandLayout", ".", "setObjectName", "(", "\"hbandLayout\"", ")", "\n", "hbandLayout", ".", "addWidget", "(", "lab", ")", "\n", "hbandLayout", ".", "addWidget", "(", "combo", ")", "\n", "hbandLayout", ".", "setStretch", "(", "1", ",", "4", ")", "\n", "bandRegion", ".", "addLayout", "(", "hbandLayout", ")", "\n", "", "resultSave", "=", "create_text", "(", "CentralWidget", ",", "\"resultSave\"", ",", "self", ".", "tr", "(", "\"\u4fdd\u5b58\u8bbe\u7f6e\"", ")", ")", "\n", "bandRegion", ".", "addWidget", "(", "resultSave", ")", "\n", "self", ".", "boundaryRegular", "=", "QtWidgets", ".", "QCheckBox", "(", "self", ".", "tr", "(", "\"\u4f7f\u7528\u5efa\u7b51\u8fb9\u754c\u7b80\u5316\"", ")", ")", "\n", "self", ".", "boundaryRegular", ".", "setObjectName", "(", "\"boundaryRegular\"", ")", "\n", "bandRegion", ".", "addWidget", "(", "self", ".", "boundaryRegular", ")", "\n", "self", ".", "shpSave", "=", "QtWidgets", ".", "QCheckBox", "(", "self", ".", "tr", "(", "\"\u989d\u5916\u4fdd\u5b58\u4e3aESRI Shapefile\"", ")", ")", "\n", "self", ".", "shpSave", ".", "setObjectName", "(", "\"shpSave\"", ")", "\n", "bandRegion", ".", "addWidget", "(", "self", ".", "shpSave", ")", "\n", "horizontalLayout", ".", "addLayout", "(", "bandRegion", ")", "\n", "showGeoInfo", "=", "create_text", "(", "CentralWidget", ",", "\"showGeoInfo\"", ",", "self", ".", "tr", "(", "\"\u5730\u7406\u4fe1\u606f\"", ")", ")", "\n", "bandRegion", ".", "addWidget", "(", "showGeoInfo", ")", "\n", "self", ".", "edtGeoinfo", "=", "QtWidgets", ".", "QTextEdit", "(", "self", ".", "tr", "(", "\"\u65e0\"", ")", ")", "\n", "self", ".", "edtGeoinfo", ".", "setObjectName", "(", "\"edtGeoinfo\"", ")", "\n", "self", ".", "edtGeoinfo", ".", "setReadOnly", "(", "True", ")", "\n", "bandRegion", ".", "addWidget", "(", "self", ".", "edtGeoinfo", ")", "\n", "self", ".", "RSDock", "=", "p_create_dock", "(", "\"RSDock\"", ",", "self", ".", "tr", "(", "\"\u9065\u611f\u8bbe\u7f6e\"", ")", ",", "widget", ")", "\n", "MainWindow", ".", "addDockWidget", "(", "QtCore", ".", "Qt", ".", "DockWidgetArea", "(", "2", ")", ",", "self", ".", "RSDock", ")", "\n", "\n", "## \u533b\u5b66\u5f71\u50cf\u8bbe\u7f6e", "\n", "widget", "=", "QtWidgets", ".", "QWidget", "(", ")", "\n", "horizontalLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", "widget", ")", "\n", "MIRegion", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "MIRegion", ".", "setObjectName", "(", "\"MIRegion\"", ")", "\n", "# mi_text = create_text(CentralWidget, \"sliceSelection\", self.tr(\"\u5207\u7247\u9009\u62e9\"))", "\n", "# MIRegion.addWidget(mi_text)", "\n", "# self.sldMISlide, slideRegion = p_create_slider(", "\n", "#     \"sldMISlide\", \"labMISlide\", self.tr(\"\u5207\u7247\u9009\u62e9\uff1a\"), 1, 1, 1", "\n", "# )", "\n", "# self.sldMISlide.setMinimum(1)", "\n", "wwLabel", "=", "QtWidgets", ".", "QLabel", "(", "\"\u7a97\u5bbd\"", ")", "\n", "self", ".", "textWw", "=", "QtWidgets", ".", "QLineEdit", "(", ")", "\n", "self", ".", "textWw", ".", "setText", "(", "\"200\"", ")", "\n", "self", ".", "textWw", ".", "setValidator", "(", "QtGui", ".", "QIntValidator", "(", ")", ")", "\n", "self", ".", "textWw", ".", "setMaxLength", "(", "4", ")", "\n", "\n", "wcLabel", "=", "QtWidgets", ".", "QLabel", "(", "\"\u7a97\u4f4d\"", ")", "\n", "self", ".", "textWc", "=", "QtWidgets", ".", "QLineEdit", "(", ")", "\n", "self", ".", "textWc", ".", "setText", "(", "\"0\"", ")", "\n", "self", ".", "textWc", ".", "setValidator", "(", "QtGui", ".", "QIntValidator", "(", ")", ")", "\n", "self", ".", "textWc", ".", "setMaxLength", "(", "4", ")", "\n", "\n", "# MIRegion.addLayout(slideRegion)", "\n", "# MIRegion.addWidget(self.sldMISlide)", "\n", "MIRegion", ".", "addWidget", "(", "wwLabel", ")", "\n", "MIRegion", ".", "addWidget", "(", "self", ".", "textWw", ")", "\n", "MIRegion", ".", "addWidget", "(", "wcLabel", ")", "\n", "MIRegion", ".", "addWidget", "(", "self", ".", "textWc", ")", "\n", "horizontalLayout", ".", "addLayout", "(", "MIRegion", ")", "\n", "self", ".", "MedDock", "=", "p_create_dock", "(", "\"MedDock\"", ",", "self", ".", "tr", "(", "\"\u533b\u7597\u8bbe\u7f6e\"", ")", ",", "widget", ")", "\n", "MainWindow", ".", "addDockWidget", "(", "QtCore", ".", "Qt", ".", "DockWidgetArea", "(", "2", ")", ",", "self", ".", "MedDock", ")", "\n", "## \u5bab\u683c\u533a\u57df", "\n", "widget", "=", "QtWidgets", ".", "QWidget", "(", ")", "\n", "horizontalLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", "widget", ")", "\n", "GridRegion", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "GridRegion", ".", "setObjectName", "(", "\"GridRegion\"", ")", "\n", "# self.btnInitGrid = p_create_button(", "\n", "#     \"btnInitGrid\",", "\n", "#     self.tr(\"\u521b\u5efa\u5bab\u683c\"),", "\n", "#     osp.join(pjpath, \"resource/N2.png\"),", "\n", "#     \"\",", "\n", "# )", "\n", "self", ".", "btnFinishedGrid", "=", "p_create_button", "(", "\n", "\"btnFinishedGrid\"", ",", "\n", "self", ".", "tr", "(", "\"\u5b8c\u6210\u5bab\u683c\"", ")", ",", "\n", "osp", ".", "join", "(", "pjpath", ",", "\"resource/Save.png\"", ")", ",", "\n", "\"\"", ",", ")", "\n", "hbandLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", ")", "\n", "hbandLayout", ".", "setObjectName", "(", "\"hbandLayout\"", ")", "\n", "# hbandLayout.addWidget(self.btnInitGrid)", "\n", "hbandLayout", ".", "addWidget", "(", "self", ".", "btnFinishedGrid", ")", "\n", "GridRegion", ".", "addLayout", "(", "hbandLayout", ")", "# \u521b\u5efa\u5bab\u683c", "\n", "self", ".", "cheSaveEvery", "=", "QtWidgets", ".", "QCheckBox", "(", "self", ")", "\n", "self", ".", "cheSaveEvery", ".", "setText", "(", "\"\u4fdd\u5b58\u6bcf\u4e2a\u5bab\u683c\u7684\u6807\u7b7e\"", ")", "\n", "self", ".", "cheSaveEvery", ".", "setChecked", "(", "False", ")", "\n", "GridRegion", ".", "addWidget", "(", "self", ".", "cheSaveEvery", ")", "\n", "self", ".", "gridTable", "=", "QtWidgets", ".", "QTableWidget", "(", "CentralWidget", ")", "\n", "self", ".", "gridTable", ".", "horizontalHeader", "(", ")", ".", "hide", "(", ")", "\n", "self", ".", "gridTable", ".", "verticalHeader", "(", ")", ".", "hide", "(", ")", "\n", "# \u94fa\u6ee1", "\n", "self", ".", "gridTable", ".", "horizontalHeader", "(", ")", ".", "setSectionResizeMode", "(", "\n", "QtWidgets", ".", "QHeaderView", ".", "Stretch", ")", "\n", "self", ".", "gridTable", ".", "verticalHeader", "(", ")", ".", "setSectionResizeMode", "(", "\n", "QtWidgets", ".", "QHeaderView", ".", "Stretch", ")", "\n", "self", ".", "gridTable", ".", "setObjectName", "(", "\"gridTable\"", ")", "\n", "self", ".", "gridTable", ".", "clearContents", "(", ")", "\n", "self", ".", "gridTable", ".", "setColumnCount", "(", "1", ")", "\n", "self", ".", "gridTable", ".", "setRowCount", "(", "1", ")", "\n", "GridRegion", ".", "addWidget", "(", "self", ".", "gridTable", ")", "\n", "horizontalLayout", ".", "addLayout", "(", "GridRegion", ")", "\n", "self", ".", "GridDock", "=", "p_create_dock", "(", "\"GridDock\"", ",", "self", ".", "tr", "(", "\"\u5bab\u683c\u5207\u6362\"", ")", ",", "widget", ")", "\n", "MainWindow", ".", "addDockWidget", "(", "QtCore", ".", "Qt", ".", "DockWidgetArea", "(", "2", ")", ",", "self", ".", "GridDock", ")", "\n", "## -----", "\n", "QtCore", ".", "QMetaObject", ".", "connectSlotsByName", "(", "MainWindow", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.ui.Ui_EISeg.create_text": [[317, 319], ["eiseg.widget.create.create_text"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_text"], ["", "def", "create_text", "(", "self", ",", "parent", ",", "text_name", "=", "None", ",", "text_text", "=", "None", ")", ":", "\n", "        ", "return", "create_text", "(", "parent", ",", "text_name", ",", "text_text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.ui.Ui_EISeg.create_button": [[322, 329], ["eiseg.widget.create.create_button"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_button"], ["", "def", "create_button", "(", "self", ",", "\n", "parent", ",", "\n", "btn_name", ",", "\n", "btn_text", ",", "\n", "ico_path", "=", "None", ",", "\n", "curt", "=", "None", ")", ":", "\n", "        ", "return", "create_button", "(", "parent", ",", "btn_name", ",", "btn_text", ",", "ico_path", ",", "curt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.ui.Ui_EISeg.creat_dock": [[331, 333], ["eiseg.widget.create.creat_dock"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.creat_dock"], ["", "def", "creat_dock", "(", "self", ",", "parent", ",", "name", ",", "text", ",", "layout", ")", ":", "\n", "        ", "return", "creat_dock", "(", "parent", ",", "name", ",", "text", ",", "layout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.ui.Ui_EISeg.show_logo": [[335, 345], ["qtpy.QtWidgets.QLabel", "qtpy.QtWidgets.QSizePolicy", "qtpy.QtWidgets.QLabel.setSizePolicy", "qtpy.QtWidgets.QLabel.setMaximumSize", "qtpy.QtWidgets.QLabel.setPixmap", "qtpy.QtWidgets.QLabel.setScaledContents", "qtpy.QtWidgets.QLabel.setObjectName", "qtpy.QtCore.QSize", "qtpy.QtGui.QPixmap"], "methods", ["None"], ["", "def", "show_logo", "(", "self", ",", "logo_path", ")", ":", "\n", "        ", "labLogo", "=", "QtWidgets", ".", "QLabel", "(", ")", "\n", "sizePolicy", "=", "QtWidgets", ".", "QSizePolicy", "(", "QtWidgets", ".", "QSizePolicy", ".", "Maximum", ",", "\n", "QtWidgets", ".", "QSizePolicy", ".", "Maximum", ")", "\n", "labLogo", ".", "setSizePolicy", "(", "sizePolicy", ")", "\n", "labLogo", ".", "setMaximumSize", "(", "QtCore", ".", "QSize", "(", "100", ",", "33", ")", ")", "\n", "labLogo", ".", "setPixmap", "(", "QtGui", ".", "QPixmap", "(", "logo_path", ")", ")", "\n", "labLogo", ".", "setScaledContents", "(", "True", ")", "\n", "labLogo", ".", "setObjectName", "(", "\"labLogo\"", ")", "\n", "return", "labLogo", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.ui.Ui_EISeg.create_slider": [[347, 364], ["eiseg.widget.create.create_slider"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_slider"], ["", "def", "create_slider", "(", "\n", "self", ",", "\n", "parent", ",", "\n", "sld_name", ",", "\n", "text_name", ",", "\n", "text", ",", "\n", "default_value", "=", "50", ",", "\n", "max_value", "=", "100", ",", "\n", "text_rate", "=", "0.01", ",", ")", ":", "\n", "        ", "return", "create_slider", "(", "\n", "parent", ",", "\n", "sld_name", ",", "\n", "text_name", ",", "\n", "text", ",", "\n", "default_value", ",", "\n", "max_value", ",", "\n", "text_rate", ",", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.run.main": [[28, 83], ["qtpy.QtCore.QSettings", "qtpy.QtWidgets.QApplication", "QtCore.QSettings.value", "app.APP_EISeg", "app.APP_EISeg.showMaximized", "qtpy.QtWidgets.QApplication.processEvents", "app.APP_EISeg.loadRecentModelParam", "sys.exit", "os.join", "qtpy.QtCore.QTranslator", "QtCore.QTranslator.load", "qtpy.QtWidgets.QApplication.installTranslator", "qtpy.QtWidgets.QApplication.exec", "os.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.loadRecentModelParam"], ["def", "main", "(", ")", ":", "\n", "## -- log --", "\n", "    ", "settings", "=", "QtCore", ".", "QSettings", "(", "\n", "osp", ".", "join", "(", "pjpath", ",", "\"config/setting.ini\"", ")", ",", "QtCore", ".", "QSettings", ".", "IniFormat", ")", "\n", "#", "\n", "# logFolder = settings.value(\"logFolder\")", "\n", "# logLevel = settings.value(\"logLevel\")", "\n", "# logDays = settings.value(\"logDays\")", "\n", "#", "\n", "# if logFolder is None or len(logFolder) == 0:", "\n", "#     logFolder = osp.normcase(osp.join(pjpath, \"log\"))", "\n", "# if not osp.exists(logFolder):", "\n", "#     os.makedirs(logFolder)", "\n", "#", "\n", "# if logLevel:", "\n", "#     logLevel = eval(logLevel)", "\n", "# else:", "\n", "#     logLevel = logging.DEBUG", "\n", "# if logDays:", "\n", "#     logDays = int(logDays)", "\n", "# else:", "\n", "#     logDays = 7", "\n", "# # TODO: \u5220\u9664\u5927\u4e8elogDays \u7684 log", "\n", "#", "\n", "# t = datetime.now().strftime(\"%Y-%m-%d_%H-%M-%S\")", "\n", "# logging.basicConfig(", "\n", "#     level=logging.DEBUG,", "\n", "#     filename=osp.normcase(osp.join(logFolder, f\"eiseg-{t}.log\")),", "\n", "#     format=\"%(levelname)s - %(asctime)s - %(filename)s - %(funcName)s - %(message)s\",", "\n", "# )", "\n", "# logger = logging.getLogger(\"EISeg Logger\")", "\n", "# handler = logging.FileHandler(osp.normcase(osp.join(logFolder, f\"eiseg-{t}.log\")))", "\n", "#", "\n", "# handler.setFormatter(", "\n", "#     logging.Formatter(", "\n", "#         \"%(levelname)s - %(asctime)s - %(filename)s - %(funcName)s - %(message)s\"", "\n", "#     )", "\n", "# )", "\n", "# logger.addHandler(handler)", "\n", "# logger.info(\"test info\")", "\n", "#", "\n", "app", "=", "QApplication", "(", "sys", ".", "argv", ")", "\n", "lang", "=", "settings", ".", "value", "(", "\"language\"", ")", "\n", "if", "lang", "!=", "\"\u4e2d\u6587\"", ":", "\n", "        ", "trans", "=", "QtCore", ".", "QTranslator", "(", "app", ")", "\n", "trans", ".", "load", "(", "osp", ".", "join", "(", "pjpath", ",", "f\"util/translate/{lang}\"", ")", ")", "\n", "app", ".", "installTranslator", "(", "trans", ")", "\n", "\n", "", "window", "=", "APP_EISeg", "(", ")", "# \u521b\u5efa\u5bf9\u8c61", "\n", "window", ".", "currLanguage", "=", "lang", "\n", "window", ".", "showMaximized", "(", ")", "# \u5168\u5c4f\u663e\u793a\u7a97\u53e3", "\n", "# \u52a0\u8f7d\u8fd1\u671f\u6a21\u578b", "\n", "QApplication", ".", "processEvents", "(", ")", "\n", "window", ".", "loadRecentModelParam", "(", ")", "\n", "sys", ".", "exit", "(", "app", ".", "exec", "(", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.view.AnnotationView.__init__": [[22, 32], ["qtpy.QtWidgets.QGraphicsView.__init__", "view.AnnotationView.setRenderHints", "view.AnnotationView.setMouseTracking", "view.AnnotationView.setTransformationAnchor", "view.AnnotationView.setResizeAnchor", "qtpy.QtCore.QPoint"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "super", "(", "AnnotationView", ",", "self", ")", ".", "__init__", "(", "*", "args", ")", "\n", "self", ".", "setRenderHints", "(", "QtGui", ".", "QPainter", ".", "Antialiasing", "|", "\n", "QtGui", ".", "QPainter", ".", "SmoothPixmapTransform", ")", "\n", "self", ".", "setMouseTracking", "(", "True", ")", "\n", "self", ".", "setTransformationAnchor", "(", "QtWidgets", ".", "QGraphicsView", ".", "NoAnchor", ")", "\n", "self", ".", "setResizeAnchor", "(", "QtWidgets", ".", "QGraphicsView", ".", "NoAnchor", ")", "\n", "self", ".", "point", "=", "QtCore", ".", "QPoint", "(", "0", ",", "0", ")", "\n", "self", ".", "middle_click", "=", "False", "\n", "self", ".", "zoom_all", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.view.AnnotationView.wheelEvent": [[33, 47], ["ev.modifiers", "view.AnnotationView.mapToScene", "view.AnnotationView.mapToScene", "view.AnnotationView.translate", "ev.ignore", "view.AnnotationView.zoomRequest.emit", "super().wheelEvent", "ev.pos", "view.AnnotationView.scale", "ev.pos", "delta.x", "delta.y", "ev.angleDelta().y", "ev.angleDelta"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.view.AnnotationView.wheelEvent"], ["", "def", "wheelEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "if", "ev", ".", "modifiers", "(", ")", "&", "QtCore", ".", "Qt", ".", "ControlModifier", ":", "\n", "            ", "zoom", "=", "1", "+", "ev", ".", "angleDelta", "(", ")", ".", "y", "(", ")", "/", "2880", "\n", "self", ".", "zoom_all", "*=", "zoom", "\n", "oldPos", "=", "self", ".", "mapToScene", "(", "ev", ".", "pos", "(", ")", ")", "\n", "if", "self", ".", "zoom_all", ">=", "0.02", "and", "self", ".", "zoom_all", "<=", "50", ":", "# \u9650\u5236\u7f29\u653e\u7684\u500d\u6570", "\n", "                ", "self", ".", "scale", "(", "zoom", ",", "zoom", ")", "\n", "", "newPos", "=", "self", ".", "mapToScene", "(", "ev", ".", "pos", "(", ")", ")", "\n", "delta", "=", "newPos", "-", "oldPos", "\n", "self", ".", "translate", "(", "delta", ".", "x", "(", ")", ",", "delta", ".", "y", "(", ")", ")", "\n", "ev", ".", "ignore", "(", ")", "\n", "self", ".", "zoomRequest", ".", "emit", "(", "self", ".", "zoom_all", ")", "\n", "", "else", ":", "\n", "            ", "super", "(", "AnnotationView", ",", "self", ")", ".", "wheelEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.view.AnnotationView.mouseMoveEvent": [[48, 59], ["super().mouseMoveEvent", "ev.pos", "view.AnnotationView.translate", "view.AnnotationView.horizontalScrollBar().isVisible", "view.AnnotationView.verticalScrollBar().isVisible", "view.AnnotationView._endPos.x", "view.AnnotationView._endPos.y", "ev.pos", "view.AnnotationView.horizontalScrollBar", "view.AnnotationView.verticalScrollBar"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.mouseMoveEvent"], ["", "", "def", "mouseMoveEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "if", "self", ".", "middle_click", "and", "(", "self", ".", "horizontalScrollBar", "(", ")", ".", "isVisible", "(", ")", "or", "\n", "self", ".", "verticalScrollBar", "(", ")", ".", "isVisible", "(", ")", ")", ":", "\n", "# \u653e\u5927\u5230\u51fa\u73b0\u6eda\u52a8\u6761\u624d\u5141\u8bb8\u62d6\u52a8\uff0c\u907f\u514d\u51fa\u73b0\u6296\u52a8", "\n", "            ", "self", ".", "_endPos", "=", "ev", ".", "pos", "(", "\n", ")", "/", "self", ".", "zoom_all", "-", "self", ".", "_startPos", "/", "self", ".", "zoom_all", "\n", "# \u8fd9\u513f\u4e0d\u5199\u4e3a\u5148\u51cf\u540e\u9664\uff0c\u8fd9\u6837\u4f1a\u9020\u6210\u901f\u5ea6\u4e0d\u4e00\u81f4", "\n", "self", ".", "point", "=", "self", ".", "point", "+", "self", ".", "_endPos", "\n", "self", ".", "_startPos", "=", "ev", ".", "pos", "(", ")", "\n", "self", ".", "translate", "(", "self", ".", "_endPos", ".", "x", "(", ")", ",", "self", ".", "_endPos", ".", "y", "(", ")", ")", "\n", "", "super", "(", "AnnotationView", ",", "self", ")", ".", "mouseMoveEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.view.AnnotationView.mousePressEvent": [[60, 65], ["super().mousePressEvent", "ev.buttons", "ev.pos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.mousePressEvent"], ["", "def", "mousePressEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "if", "ev", ".", "buttons", "(", ")", "==", "Qt", ".", "MiddleButton", ":", "\n", "            ", "self", ".", "middle_click", "=", "True", "\n", "self", ".", "_startPos", "=", "ev", ".", "pos", "(", ")", "\n", "", "super", "(", "AnnotationView", ",", "self", ")", ".", "mousePressEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.view.AnnotationView.mouseReleaseEvent": [[66, 70], ["super().mouseReleaseEvent", "ev.button"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.mouseReleaseEvent"], ["", "def", "mouseReleaseEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "if", "ev", ".", "button", "(", ")", "==", "Qt", ".", "MiddleButton", ":", "\n", "            ", "self", ".", "middle_click", "=", "False", "\n", "", "super", "(", "AnnotationView", ",", "self", ")", ".", "mouseReleaseEvent", "(", "ev", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.table.TableWidget.__init__": [[20, 30], ["qtpy.QtWidgets.QTableWidget.__init__", "table.TableWidget.setDragEnabled", "table.TableWidget.setAcceptDrops", "table.TableWidget.viewport().setAcceptDrops", "table.TableWidget.setDragDropOverwriteMode", "table.TableWidget.setDropIndicatorShown", "table.TableWidget.setSelectionMode", "table.TableWidget.setSelectionBehavior", "table.TableWidget.setDragDropMode", "table.TableWidget.viewport"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "setDragEnabled", "(", "True", ")", "\n", "self", ".", "setAcceptDrops", "(", "True", ")", "\n", "self", ".", "viewport", "(", ")", ".", "setAcceptDrops", "(", "True", ")", "\n", "self", ".", "setDragDropOverwriteMode", "(", "False", ")", "\n", "self", ".", "setDropIndicatorShown", "(", "True", ")", "\n", "self", ".", "setSelectionMode", "(", "QtWidgets", ".", "QAbstractItemView", ".", "ExtendedSelection", ")", "\n", "self", ".", "setSelectionBehavior", "(", "QtWidgets", ".", "QAbstractItemView", ".", "SelectRows", ")", "\n", "self", ".", "setDragDropMode", "(", "QtWidgets", ".", "QAbstractItemView", ".", "InternalMove", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.table.TableWidget.dropEvent": [[31, 57], ["event.source", "set", "table.TableWidget.indexAt().row", "sorted.discard", "sorted", "range", "dict", "enumerate", "table.TableWidget.columnCount", "sorted", "reversed", "event.accept", "table.TableWidget.rowCount", "len", "table.TableWidget.insertRow", "dict.items", "range", "sorted", "table.TableWidget.removeRow", "mi.row", "table.TableWidget.indexAt", "table.TableWidget.setItem", "dict.keys", "table.TableWidget.selectedIndexes", "event.pos", "table.TableWidget.takeItem", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "dropEvent", "(", "self", ",", "event", ")", ":", "\n", "        ", "if", "event", ".", "source", "(", ")", "==", "self", ":", "\n", "            ", "rows", "=", "set", "(", "[", "mi", ".", "row", "(", ")", "for", "mi", "in", "self", ".", "selectedIndexes", "(", ")", "]", ")", "\n", "targetRow", "=", "self", ".", "indexAt", "(", "event", ".", "pos", "(", ")", ")", ".", "row", "(", ")", "\n", "rows", ".", "discard", "(", "targetRow", ")", "\n", "rows", "=", "sorted", "(", "rows", ")", "\n", "if", "not", "rows", ":", "\n", "                ", "return", "\n", "", "if", "targetRow", "==", "-", "1", ":", "\n", "                ", "targetRow", "=", "self", ".", "rowCount", "(", ")", "\n", "", "for", "_", "in", "range", "(", "len", "(", "rows", ")", ")", ":", "\n", "                ", "self", ".", "insertRow", "(", "targetRow", ")", "\n", "", "rowMapping", "=", "dict", "(", ")", "# Src row to target row.", "\n", "for", "idx", ",", "row", "in", "enumerate", "(", "rows", ")", ":", "\n", "                ", "if", "row", "<", "targetRow", ":", "\n", "                    ", "rowMapping", "[", "row", "]", "=", "targetRow", "+", "idx", "\n", "", "else", ":", "\n", "                    ", "rowMapping", "[", "row", "+", "len", "(", "rows", ")", "]", "=", "targetRow", "+", "idx", "\n", "", "", "colCount", "=", "self", ".", "columnCount", "(", ")", "\n", "for", "srcRow", ",", "tgtRow", "in", "sorted", "(", "rowMapping", ".", "items", "(", ")", ")", ":", "\n", "                ", "for", "col", "in", "range", "(", "0", ",", "colCount", ")", ":", "\n", "                    ", "self", ".", "setItem", "(", "tgtRow", ",", "col", ",", "self", ".", "takeItem", "(", "srcRow", ",", "col", ")", ")", "\n", "", "", "for", "row", "in", "reversed", "(", "sorted", "(", "rowMapping", ".", "keys", "(", ")", ")", ")", ":", "\n", "                ", "self", ".", "removeRow", "(", "row", ")", "\n", "", "event", ".", "accept", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.table.TableWidget.drop_on": [[58, 65], ["table.TableWidget.indexAt", "event.pos", "table.TableWidget.isValid", "table.TableWidget.rowCount", "table.TableWidget.is_below", "table.TableWidget.row", "event.pos", "table.TableWidget.row"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.table.TableWidget.is_below"], ["", "", "def", "drop_on", "(", "self", ",", "event", ")", ":", "\n", "        ", "index", "=", "self", ".", "indexAt", "(", "event", ".", "pos", "(", ")", ")", "\n", "if", "not", "index", ".", "isValid", "(", ")", ":", "\n", "            ", "return", "self", ".", "rowCount", "(", ")", "\n", "\n", "", "return", "index", ".", "row", "(", ")", "+", "1", "if", "self", ".", "is_below", "(", "event", ".", "pos", "(", ")", ",", "\n", "index", ")", "else", "index", ".", "row", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.table.TableWidget.is_below": [[66, 77], ["table.TableWidget.visualRect", "table.TableWidget.contains", "pos.y", "table.TableWidget.top", "pos.y", "table.TableWidget.center().y", "table.TableWidget.bottom", "pos.y", "int", "table.TableWidget.model().flags", "table.TableWidget.center", "table.TableWidget.model"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.center", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.deploy.infer.DeployConfig.model"], ["", "def", "is_below", "(", "self", ",", "pos", ",", "index", ")", ":", "\n", "        ", "rect", "=", "self", ".", "visualRect", "(", "index", ")", "\n", "margin", "=", "2", "\n", "if", "pos", ".", "y", "(", ")", "-", "rect", ".", "top", "(", ")", "<", "margin", ":", "\n", "            ", "return", "False", "\n", "", "elif", "rect", ".", "bottom", "(", ")", "-", "pos", ".", "y", "(", ")", "<", "margin", ":", "\n", "            ", "return", "True", "\n", "# noinspection PyTypeChecker", "\n", "", "return", "(", "rect", ".", "contains", "(", "pos", ",", "True", ")", "and", "\n", "not", "(", "int", "(", "self", ".", "model", "(", ")", ".", "flags", "(", "index", ")", ")", "&", "Qt", ".", "ItemIsDropEnabled", ")", "and", "\n", "pos", ".", "y", "(", ")", ">=", "rect", ".", "center", "(", ")", ".", "y", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.__init__": [[21, 73], ["qtpy.QtWidgets.QGraphicsPolygonItem.__init__", "polygon.PolygonAnnotation.setZValue", "qtpy.QtGui.QColor", "polygon.PolygonAnnotation.insideColor.setAlphaF", "qtpy.QtGui.QColor", "polygon.PolygonAnnotation.halfInsideColor.setAlphaF", "polygon.PolygonAnnotation.setBrush", "qtpy.QtGui.QColor", "polygon.PolygonAnnotation.borderColor.setAlphaF", "polygon.PolygonAnnotation.setPen", "polygon.PolygonAnnotation.setAcceptHoverEvents", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setCursor", "BBoxAnnotation", "polygon.PolygonAnnotation.bbox.setParentItem", "qtpy.QtGui.QPen", "qtpy.QtGui.QCursor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "labelIndex", ",", "\n", "shape", ",", "\n", "delPolygon", ",", "\n", "setDirty", ",", "\n", "insideColor", "=", "[", "255", ",", "0", ",", "0", "]", ",", "\n", "borderColor", "=", "[", "0", ",", "255", ",", "0", "]", ",", "\n", "opacity", "=", "0.5", ",", "\n", "cocoIndex", "=", "None", ",", "\n", "parent", "=", "None", ",", ")", ":", "\n", "        ", "super", "(", "PolygonAnnotation", ",", "self", ")", ".", "__init__", "(", "parent", ")", "\n", "self", ".", "points", "=", "[", "]", "\n", "self", ".", "m_items", "=", "[", "]", "\n", "self", ".", "m_lines", "=", "[", "]", "\n", "self", ".", "coco_id", "=", "cocoIndex", "\n", "self", ".", "height", ",", "self", ".", "width", "=", "shape", "[", ":", "2", "]", "\n", "self", ".", "delPolygon", "=", "delPolygon", "\n", "self", ".", "setDirty", "=", "setDirty", "\n", "\n", "self", ".", "labelIndex", "=", "labelIndex", "\n", "self", ".", "item_hovering", "=", "False", "\n", "self", ".", "polygon_hovering", "=", "False", "\n", "self", ".", "anning", "=", "False", "# \u662f\u5426\u6807\u6ce8\u6a21\u5f0f", "\n", "self", ".", "line_hovering", "=", "False", "\n", "self", ".", "noMove", "=", "False", "\n", "self", ".", "last_focse", "=", "False", "# \u4e4b\u524d\u662f\u4e0d\u662f\u7126\u70b9\u5728", "\n", "\n", "self", ".", "setZValue", "(", "10", ")", "\n", "self", ".", "opacity", "=", "opacity", "\n", "i", "=", "insideColor", "\n", "self", ".", "insideColor", "=", "QtGui", ".", "QColor", "(", "i", "[", "0", "]", ",", "i", "[", "1", "]", ",", "i", "[", "2", "]", ")", "\n", "self", ".", "insideColor", ".", "setAlphaF", "(", "opacity", ")", "\n", "self", ".", "halfInsideColor", "=", "QtGui", ".", "QColor", "(", "i", "[", "0", "]", ",", "i", "[", "1", "]", ",", "i", "[", "2", "]", ")", "\n", "self", ".", "halfInsideColor", ".", "setAlphaF", "(", "opacity", "/", "2", ")", "\n", "self", ".", "setBrush", "(", "self", ".", "halfInsideColor", ")", "\n", "b", "=", "borderColor", "\n", "self", ".", "borderColor", "=", "QtGui", ".", "QColor", "(", "b", "[", "0", "]", ",", "b", "[", "1", "]", ",", "b", "[", "2", "]", ")", "\n", "self", ".", "borderColor", ".", "setAlphaF", "(", "0.8", ")", "\n", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "self", ".", "borderColor", ")", ")", "\n", "self", ".", "setAcceptHoverEvents", "(", "True", ")", "\n", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsSelectable", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsMovable", ",", "False", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemSendsGeometryChanges", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsFocusable", ",", "True", ")", "\n", "\n", "self", ".", "setCursor", "(", "QtGui", ".", "QCursor", "(", "QtCore", ".", "Qt", ".", "PointingHandCursor", ")", ")", "\n", "\n", "# persistent this bbox instance and update when needed", "\n", "self", ".", "bbox", "=", "BBoxAnnotation", "(", "labelIndex", ",", "self", ",", "cocoIndex", ",", "self", ")", "\n", "self", ".", "bbox", ".", "setParentItem", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.scnenePoints": [[74, 81], ["polygon.PolygonAnnotation.mapToScene", "points.append", "polygon.PolygonAnnotation.x", "polygon.PolygonAnnotation.y"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "@", "property", "\n", "def", "scnenePoints", "(", "self", ")", ":", "\n", "        ", "points", "=", "[", "]", "\n", "for", "p", "in", "self", ".", "points", ":", "\n", "            ", "p", "=", "self", ".", "mapToScene", "(", "p", ")", "\n", "points", ".", "append", "(", "[", "p", ".", "x", "(", ")", ",", "p", ".", "y", "(", ")", "]", ")", "\n", "", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.setAnning": [[82, 116], ["polygon.PolygonAnnotation.setAcceptHoverEvents", "polygon.PolygonAnnotation.setBrush", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setCursor", "polygon.PolygonAnnotation.setAcceptHoverEvents", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setFlag", "polygon.PolygonAnnotation.setCursor", "qtpy.QtGui.QBrush", "qtpy.QtGui.QCursor", "line.setAnning", "grip.setAnning", "polygon.PolygonAnnotation.setBrush", "polygon.PolygonAnnotation.setBrush", "qtpy.QtGui.QCursor", "line.setAnning", "grip.setAnning"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setAnning", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setAnning", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setAnning", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setAnning"], ["", "def", "setAnning", "(", "self", ",", "isAnning", "=", "True", ")", ":", "\n", "        ", "if", "isAnning", ":", "\n", "            ", "self", ".", "setAcceptHoverEvents", "(", "False", ")", "\n", "self", ".", "last_focse", "=", "self", ".", "polygon_hovering", "\n", "self", ".", "polygon_hovering", "=", "False", "\n", "self", ".", "anning", "=", "True", "\n", "self", ".", "setBrush", "(", "QtGui", ".", "QBrush", "(", "QtCore", ".", "Qt", ".", "NoBrush", ")", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsSelectable", ",", "False", ")", "\n", "# self.setFlag(QtWidgets.QGraphicsItem.ItemIsMovable, False)", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemSendsGeometryChanges", ",", "\n", "False", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsFocusable", ",", "False", ")", "\n", "self", ".", "setCursor", "(", "QtGui", ".", "QCursor", "(", "QtCore", ".", "Qt", ".", "ArrowCursor", ")", ")", "\n", "for", "line", "in", "self", ".", "m_lines", ":", "\n", "                ", "line", ".", "setAnning", "(", "False", ")", "\n", "", "for", "grip", "in", "self", ".", "m_items", ":", "\n", "                ", "grip", ".", "setAnning", "(", "False", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "setAcceptHoverEvents", "(", "True", ")", "\n", "self", ".", "anning", "=", "False", "\n", "if", "self", ".", "last_focse", ":", "\n", "                ", "self", ".", "polygon_hovering", "=", "True", "\n", "self", ".", "setBrush", "(", "self", ".", "insideColor", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "setBrush", "(", "self", ".", "halfInsideColor", ")", "\n", "", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsSelectable", ",", "True", ")", "\n", "# self.setFlag(QtWidgets.QGraphicsItem.ItemIsMovable, True)", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemSendsGeometryChanges", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsFocusable", ",", "True", ")", "\n", "self", ".", "setCursor", "(", "QtGui", ".", "QCursor", "(", "QtCore", ".", "Qt", ".", "PointingHandCursor", ")", ")", "\n", "for", "line", "in", "self", ".", "m_lines", ":", "\n", "                ", "line", ".", "setAnning", "(", "True", ")", "\n", "", "for", "grip", "in", "self", ".", "m_items", ":", "\n", "                ", "grip", ".", "setAnning", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.addPointMiddle": [[117, 143], ["GripItem", "GripItem.setEnabled", "GripItem.setPos", "polygon.PolygonAnnotation.scene().addItem", "GripItem.updateSize", "GripItem.setEnabled", "polygon.PolygonAnnotation.m_items.insert", "polygon.PolygonAnnotation.points.insert", "polygon.PolygonAnnotation.setPolygon", "polygon.PolygonAnnotation.bbox.update", "qtpy.QtCore.QLineF", "polygon.PolygonAnnotation.m_lines[].setLine", "LineItem", "qtpy.QtCore.QLineF", "LineItem.setLine", "polygon.PolygonAnnotation.m_lines.insert", "polygon.PolygonAnnotation.scene().addItem", "LineItem.updateWidth", "polygon.PolygonAnnotation.mapFromScene", "qtpy.QtGui.QPolygonF", "polygon.PolygonAnnotation.mapToScene", "polygon.PolygonAnnotation.mapToScene", "polygon.PolygonAnnotation.scene", "polygon.PolygonAnnotation.scene", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.updateSize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setPolygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.updateWidth"], ["", "", "", "def", "addPointMiddle", "(", "self", ",", "lineIdx", ",", "point", ")", ":", "\n", "        ", "gripItem", "=", "GripItem", "(", "self", ",", "lineIdx", "+", "1", ",", "self", ".", "borderColor", ",", "\n", "(", "self", ".", "height", ",", "self", ".", "width", ")", ")", "\n", "gripItem", ".", "setEnabled", "(", "False", ")", "\n", "gripItem", ".", "setPos", "(", "point", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "gripItem", ")", "\n", "gripItem", ".", "updateSize", "(", ")", "\n", "gripItem", ".", "setEnabled", "(", "True", ")", "\n", "for", "grip", "in", "self", ".", "m_items", "[", "lineIdx", "+", "1", ":", "]", ":", "\n", "            ", "grip", ".", "m_index", "+=", "1", "\n", "", "self", ".", "m_items", ".", "insert", "(", "lineIdx", "+", "1", ",", "gripItem", ")", "\n", "self", ".", "points", ".", "insert", "(", "lineIdx", "+", "1", ",", "self", ".", "mapFromScene", "(", "point", ")", ")", "\n", "self", ".", "setPolygon", "(", "QtGui", ".", "QPolygonF", "(", "self", ".", "points", ")", ")", "\n", "self", ".", "bbox", ".", "update", "(", ")", "\n", "for", "line", "in", "self", ".", "m_lines", "[", "lineIdx", "+", "1", ":", "]", ":", "\n", "            ", "line", ".", "idx", "+=", "1", "\n", "", "line", "=", "QtCore", ".", "QLineF", "(", "self", ".", "mapToScene", "(", "self", ".", "points", "[", "lineIdx", "]", ")", ",", "point", ")", "\n", "self", ".", "m_lines", "[", "lineIdx", "]", ".", "setLine", "(", "line", ")", "\n", "lineItem", "=", "LineItem", "(", "self", ",", "lineIdx", "+", "1", ",", "self", ".", "borderColor", ")", "\n", "line", "=", "QtCore", ".", "QLineF", "(", "\n", "point", ",", "\n", "self", ".", "mapToScene", "(", "self", ".", "points", "[", "(", "lineIdx", "+", "2", ")", "%", "len", "(", "self", ")", "]", ")", ",", ")", "\n", "lineItem", ".", "setLine", "(", "line", ")", "\n", "self", ".", "m_lines", ".", "insert", "(", "lineIdx", "+", "1", ",", "lineItem", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "lineItem", ")", "\n", "lineItem", ".", "updateWidth", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.addPointLast": [[144, 166], ["GripItem", "polygon.PolygonAnnotation.scene().addItem", "polygon.PolygonAnnotation.m_items.append", "GripItem.updateSize", "GripItem.setPos", "polygon.PolygonAnnotation.points.append", "polygon.PolygonAnnotation.setPolygon", "polygon.PolygonAnnotation.bbox.update", "len", "len", "LineItem", "polygon.PolygonAnnotation.scene().addItem", "polygon.PolygonAnnotation.m_lines.append", "LineItem.setLine", "polygon.PolygonAnnotation.m_lines[].setLine", "LineItem", "polygon.PolygonAnnotation.scene().addItem", "polygon.PolygonAnnotation.m_lines.append", "LineItem.setLine", "qtpy.QtGui.QPolygonF", "polygon.PolygonAnnotation.scene", "len", "qtpy.QtCore.QLineF", "qtpy.QtCore.QLineF", "len", "qtpy.QtCore.QLineF", "polygon.PolygonAnnotation.scene", "polygon.PolygonAnnotation.scene"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.updateSize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setPolygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "addPointLast", "(", "self", ",", "p", ")", ":", "\n", "        ", "grip", "=", "GripItem", "(", "self", ",", "\n", "len", "(", "self", ")", ",", "self", ".", "borderColor", ",", "(", "self", ".", "height", ",", "self", ".", "width", ")", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "grip", ")", "\n", "self", ".", "m_items", ".", "append", "(", "grip", ")", "\n", "grip", ".", "updateSize", "(", ")", "\n", "grip", ".", "setPos", "(", "p", ")", "\n", "if", "len", "(", "self", ")", "==", "0", ":", "\n", "            ", "line", "=", "LineItem", "(", "self", ",", "len", "(", "self", ")", ",", "self", ".", "borderColor", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "line", ")", "\n", "self", ".", "m_lines", ".", "append", "(", "line", ")", "\n", "line", ".", "setLine", "(", "QtCore", ".", "QLineF", "(", "p", ",", "p", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "m_lines", "[", "-", "1", "]", ".", "setLine", "(", "QtCore", ".", "QLineF", "(", "self", ".", "points", "[", "-", "1", "]", ",", "p", ")", ")", "\n", "line", "=", "LineItem", "(", "self", ",", "len", "(", "self", ")", ",", "self", ".", "borderColor", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "line", ")", "\n", "self", ".", "m_lines", ".", "append", "(", "line", ")", "\n", "line", ".", "setLine", "(", "QtCore", ".", "QLineF", "(", "p", ",", "self", ".", "points", "[", "0", "]", ")", ")", "\n", "\n", "", "self", ".", "points", ".", "append", "(", "p", ")", "\n", "self", ".", "setPolygon", "(", "QtGui", ".", "QPolygonF", "(", "self", ".", "points", ")", ")", "\n", "self", ".", "bbox", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.remove": [[167, 181], ["polygon.PolygonAnnotation.scene().polygon_items.remove", "polygon.PolygonAnnotation.scene().removeItem", "polygon.PolygonAnnotation.bbox.remove_from_scene", "polygon.PolygonAnnotation.scene().removeItem", "polygon.PolygonAnnotation.scene().removeItem", "len", "polygon.PolygonAnnotation.m_items.pop", "len", "polygon.PolygonAnnotation.m_lines.pop", "polygon.PolygonAnnotation.scene", "polygon.PolygonAnnotation.scene", "polygon.PolygonAnnotation.scene", "polygon.PolygonAnnotation.scene"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.remove_from_scene"], ["", "def", "remove", "(", "self", ")", ":", "\n", "        ", "for", "grip", "in", "self", ".", "m_items", ":", "\n", "            ", "self", ".", "scene", "(", ")", ".", "removeItem", "(", "grip", ")", "\n", "", "for", "line", "in", "self", ".", "m_lines", ":", "\n", "            ", "self", ".", "scene", "(", ")", ".", "removeItem", "(", "line", ")", "\n", "", "while", "len", "(", "self", ".", "m_items", ")", "!=", "0", ":", "\n", "            ", "self", ".", "m_items", ".", "pop", "(", ")", "\n", "", "while", "len", "(", "self", ".", "m_lines", ")", "!=", "0", ":", "\n", "            ", "self", ".", "m_lines", ".", "pop", "(", ")", "\n", "", "self", ".", "scene", "(", ")", ".", "polygon_items", ".", "remove", "(", "self", ")", "\n", "self", ".", "scene", "(", ")", ".", "removeItem", "(", "self", ")", "\n", "self", ".", "bbox", ".", "remove_from_scene", "(", ")", "\n", "del", "self", ".", "bbox", "\n", "del", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.removeFocusPoint": [[182, 209], ["enumerate", "item.hasFocus", "polygon.PolygonAnnotation.setPolygon", "polygon.PolygonAnnotation.bbox.update", "polygon.PolygonAnnotation.scene().removeItem", "polygon.PolygonAnnotation.scene().removeItem", "qtpy.QtCore.QLineF", "polygon.PolygonAnnotation.m_lines[].setLine", "len", "polygon.PolygonAnnotation.delPolygon", "qtpy.QtGui.QPolygonF", "polygon.PolygonAnnotation.mapToScene", "polygon.PolygonAnnotation.mapToScene", "polygon.PolygonAnnotation.scene", "polygon.PolygonAnnotation.scene", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setPolygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.delPolygon"], ["", "def", "removeFocusPoint", "(", "self", ")", ":", "\n", "        ", "focusIdx", "=", "None", "\n", "for", "idx", ",", "item", "in", "enumerate", "(", "self", ".", "m_items", ")", ":", "\n", "            ", "if", "item", ".", "hasFocus", "(", ")", ":", "\n", "                ", "focusIdx", "=", "idx", "\n", "break", "\n", "", "", "if", "focusIdx", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "self", ")", "<=", "3", ":", "\n", "                ", "self", ".", "delPolygon", "(", "self", ")", "# \u8c03\u7528app\u7684\u5220\u9664\u591a\u8fb9\u5f62\uff0c\u4e3a\u4e86\u540c\u65f6\u5220\u9664coco\u6807\u7b7e", "\n", "return", "\n", "", "del", "self", ".", "points", "[", "focusIdx", "]", "\n", "self", ".", "setPolygon", "(", "QtGui", ".", "QPolygonF", "(", "self", ".", "points", ")", ")", "\n", "self", ".", "bbox", ".", "update", "(", ")", "\n", "self", ".", "scene", "(", ")", ".", "removeItem", "(", "self", ".", "m_items", "[", "focusIdx", "]", ")", "\n", "del", "self", ".", "m_items", "[", "focusIdx", "]", "\n", "for", "grip", "in", "self", ".", "m_items", "[", "focusIdx", ":", "]", ":", "\n", "                ", "grip", ".", "m_index", "-=", "1", "\n", "\n", "", "self", ".", "scene", "(", ")", ".", "removeItem", "(", "self", ".", "m_lines", "[", "focusIdx", "]", ")", "\n", "del", "self", ".", "m_lines", "[", "focusIdx", "]", "\n", "line", "=", "QtCore", ".", "QLineF", "(", "\n", "self", ".", "mapToScene", "(", "self", ".", "points", "[", "(", "focusIdx", "-", "1", ")", "%", "len", "(", "self", ")", "]", ")", ",", "\n", "self", ".", "mapToScene", "(", "self", ".", "points", "[", "focusIdx", "%", "len", "(", "self", ")", "]", ")", ",", ")", "\n", "# print((focusIdx - 1) % len(self), len(self.m_lines), len(self))", "\n", "self", ".", "m_lines", "[", "(", "focusIdx", "-", "1", ")", "%", "len", "(", "self", ")", "]", ".", "setLine", "(", "line", ")", "\n", "for", "line", "in", "self", ".", "m_lines", "[", "focusIdx", ":", "]", ":", "\n", "                ", "line", ".", "idx", "-=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.removeLastPoint": [[210, 219], ["len", "polygon.PolygonAnnotation.points.pop", "polygon.PolygonAnnotation.setPolygon", "polygon.PolygonAnnotation.bbox.update", "polygon.PolygonAnnotation.m_items.pop", "polygon.PolygonAnnotation.scene().removeItem", "qtpy.QtGui.QPolygonF", "polygon.PolygonAnnotation.scene"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setPolygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], ["", "", "", "def", "removeLastPoint", "(", "self", ")", ":", "\n", "# TODO: \u521b\u5efa\u7684\u65f6\u5019\u7528\u5230\uff0c\u9700\u8981\u5220line", "\n", "        ", "if", "len", "(", "self", ".", "points", ")", "==", "0", ":", "\n", "            ", "self", ".", "points", ".", "pop", "(", ")", "\n", "self", ".", "setPolygon", "(", "QtGui", ".", "QPolygonF", "(", "self", ".", "points", ")", ")", "\n", "self", ".", "bbox", ".", "update", "(", ")", "\n", "it", "=", "self", ".", "m_items", ".", "pop", "(", ")", "\n", "self", ".", "scene", "(", ")", ".", "removeItem", "(", "it", ")", "\n", "del", "it", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.movePoint": [[220, 228], ["len", "polygon.PolygonAnnotation.mapFromScene", "polygon.PolygonAnnotation.setPolygon", "polygon.PolygonAnnotation.bbox.update", "polygon.PolygonAnnotation.moveLine", "qtpy.QtGui.QPolygonF"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.controller.InteractiveController.setPolygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.moveLine"], ["", "", "def", "movePoint", "(", "self", ",", "i", ",", "p", ")", ":", "\n", "# print(\"Move point\", i, p)", "\n", "        ", "if", "0", "<=", "i", "<", "len", "(", "self", ".", "points", ")", ":", "\n", "            ", "p", "=", "self", ".", "mapFromScene", "(", "p", ")", "\n", "self", ".", "points", "[", "i", "]", "=", "p", "\n", "self", ".", "setPolygon", "(", "QtGui", ".", "QPolygonF", "(", "self", ".", "points", ")", ")", "\n", "self", ".", "bbox", ".", "update", "(", ")", "\n", "self", ".", "moveLine", "(", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.moveLine": [[229, 245], ["qtpy.QtCore.QLineF", "polygon.PolygonAnnotation.m_lines[].setLine", "qtpy.QtCore.QLineF", "polygon.PolygonAnnotation.m_lines[].setLine", "polygon.PolygonAnnotation.mapToScene", "polygon.PolygonAnnotation.mapToScene", "polygon.PolygonAnnotation.mapToScene", "polygon.PolygonAnnotation.mapToScene", "len", "len", "len"], "methods", ["None"], ["", "", "def", "moveLine", "(", "self", ",", "i", ")", ":", "\n", "# print(\"Moving line: \", i, self.noMove)", "\n", "        ", "if", "self", ".", "noMove", ":", "\n", "            ", "return", "\n", "", "points", "=", "self", ".", "points", "\n", "# line[i]", "\n", "line", "=", "QtCore", ".", "QLineF", "(", "\n", "self", ".", "mapToScene", "(", "points", "[", "i", "]", ")", ",", "\n", "self", ".", "mapToScene", "(", "points", "[", "(", "i", "+", "1", ")", "%", "len", "(", "self", ")", "]", ")", ")", "\n", "self", ".", "m_lines", "[", "i", "]", ".", "setLine", "(", "line", ")", "\n", "# line[i-1]", "\n", "line", "=", "QtCore", ".", "QLineF", "(", "\n", "self", ".", "mapToScene", "(", "points", "[", "(", "i", "-", "1", ")", "%", "len", "(", "self", ")", "]", ")", ",", "\n", "self", ".", "mapToScene", "(", "points", "[", "i", "]", ")", ")", "\n", "# print((i - 1) % len(self), len(self.m_lines), len(self))", "\n", "self", ".", "m_lines", "[", "(", "i", "-", "1", ")", "%", "len", "(", "self", ")", "]", ".", "setLine", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.move_item": [[246, 253], ["len", "item.setEnabled", "item.setPos", "item.setEnabled", "polygon.PolygonAnnotation.moveLine"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.moveLine"], ["", "def", "move_item", "(", "self", ",", "i", ",", "pos", ")", ":", "\n", "        ", "if", "0", "<=", "i", "<", "len", "(", "self", ".", "m_items", ")", ":", "\n", "            ", "item", "=", "self", ".", "m_items", "[", "i", "]", "\n", "item", ".", "setEnabled", "(", "False", ")", "\n", "item", ".", "setPos", "(", "pos", ")", "\n", "item", ".", "setEnabled", "(", "True", ")", "\n", "self", ".", "moveLine", "(", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.itemChange": [[254, 259], ["super().itemChange", "enumerate", "polygon.PolygonAnnotation.move_item", "polygon.PolygonAnnotation.mapToScene"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.itemChange", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.move_item"], ["", "", "def", "itemChange", "(", "self", ",", "change", ",", "value", ")", ":", "\n", "        ", "if", "change", "==", "QtWidgets", ".", "QGraphicsItem", ".", "ItemPositionHasChanged", ":", "\n", "            ", "for", "i", ",", "point", "in", "enumerate", "(", "self", ".", "points", ")", ":", "\n", "                ", "self", ".", "move_item", "(", "i", ",", "self", ".", "mapToScene", "(", "point", ")", ")", "\n", "", "", "return", "super", "(", "PolygonAnnotation", ",", "self", ")", ".", "itemChange", "(", "change", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.hoverEnterEvent": [[260, 264], ["polygon.PolygonAnnotation.setBrush", "super().hoverEnterEvent"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.hoverEnterEvent"], ["", "def", "hoverEnterEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "self", ".", "polygon_hovering", "=", "True", "\n", "self", ".", "setBrush", "(", "self", ".", "insideColor", ")", "\n", "super", "(", "PolygonAnnotation", ",", "self", ")", ".", "hoverEnterEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.hoverLeaveEvent": [[265, 270], ["super().hoverLeaveEvent", "polygon.PolygonAnnotation.hasFocus", "polygon.PolygonAnnotation.setBrush"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.hoverLeaveEvent"], ["", "def", "hoverLeaveEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "self", ".", "polygon_hovering", "=", "False", "\n", "if", "not", "self", ".", "hasFocus", "(", ")", ":", "\n", "            ", "self", ".", "setBrush", "(", "self", ".", "halfInsideColor", ")", "\n", "", "super", "(", "PolygonAnnotation", ",", "self", ")", ".", "hoverLeaveEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.focusInEvent": [[271, 274], ["polygon.PolygonAnnotation.setBrush"], "methods", ["None"], ["", "def", "focusInEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "if", "not", "self", ".", "anning", ":", "\n", "            ", "self", ".", "setBrush", "(", "self", ".", "insideColor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.focusOutEvent": [[275, 278], ["polygon.PolygonAnnotation.setBrush"], "methods", ["None"], ["", "", "def", "focusOutEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "if", "not", "self", ".", "polygon_hovering", "and", "not", "self", ".", "anning", ":", "\n", "            ", "self", ".", "setBrush", "(", "self", ".", "halfInsideColor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.setColor": [[279, 294], ["qtpy.QtGui.QColor", "polygon.PolygonAnnotation.insideColor.setAlphaF", "qtpy.QtGui.QColor", "polygon.PolygonAnnotation.halfInsideColor.setAlphaF", "polygon.PolygonAnnotation.setBrush", "qtpy.QtGui.QColor", "polygon.PolygonAnnotation.borderColor.setAlphaF", "polygon.PolygonAnnotation.setPen", "qtpy.QtGui.QPen", "grip.setColor", "line.setColor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setColor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setColor"], ["", "", "def", "setColor", "(", "self", ",", "insideColor", ",", "borderColor", ")", ":", "\n", "        ", "i", "=", "insideColor", "\n", "self", ".", "insideColor", "=", "QtGui", ".", "QColor", "(", "i", "[", "0", "]", ",", "i", "[", "1", "]", ",", "i", "[", "2", "]", ")", "\n", "self", ".", "insideColor", ".", "setAlphaF", "(", "self", ".", "opacity", ")", "\n", "self", ".", "halfInsideColor", "=", "QtGui", ".", "QColor", "(", "i", "[", "0", "]", ",", "i", "[", "1", "]", ",", "i", "[", "2", "]", ")", "\n", "self", ".", "halfInsideColor", ".", "setAlphaF", "(", "self", ".", "opacity", "/", "2", ")", "\n", "self", ".", "setBrush", "(", "self", ".", "halfInsideColor", ")", "\n", "b", "=", "borderColor", "\n", "self", ".", "borderColor", "=", "QtGui", ".", "QColor", "(", "b", "[", "0", "]", ",", "b", "[", "1", "]", ",", "b", "[", "2", "]", ")", "\n", "self", ".", "borderColor", ".", "setAlphaF", "(", "0.8", ")", "\n", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "self", ".", "borderColor", ")", ")", "\n", "for", "grip", "in", "self", ".", "m_items", ":", "\n", "            ", "grip", ".", "setColor", "(", "self", ".", "borderColor", ")", "\n", "", "for", "line", "in", "self", ".", "m_lines", ":", "\n", "            ", "line", ".", "setColor", "(", "self", ".", "borderColor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.__len__": [[295, 297], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "points", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.RecordShortcutWidget.__init__": [[38, 46], ["qtpy.QtWidgets.QKeySequenceEdit.__init__", "shortcut.RecordShortcutWidget.setWindowFlags", "shortcut.RecordShortcutWidget.move", "shortcut.RecordShortcutWidget.show", "shortcut.RecordShortcutWidget.editingFinished.connect", "finishCallback", "shortcut.RecordShortcutWidget.keySequence"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "finishCallback", ",", "location", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "finishCallback", "=", "finishCallback", "\n", "# \u9690\u85cf\u754c\u9762", "\n", "self", ".", "setWindowFlags", "(", "Qt", ".", "FramelessWindowHint", ")", "\n", "self", ".", "move", "(", "location", ")", "\n", "self", ".", "show", "(", ")", "\n", "self", ".", "editingFinished", ".", "connect", "(", "lambda", ":", "finishCallback", "(", "self", ".", "keySequence", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.RecordShortcutWidget.keyReleaseEvent": [[47, 49], ["shortcut.RecordShortcutWidget.finishCallback", "shortcut.RecordShortcutWidget.keySequence"], "methods", ["None"], ["", "def", "keyReleaseEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "self", ".", "finishCallback", "(", "self", ".", "keySequence", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.__init__": [[52, 61], ["qtpy.QtWidgets.QWidget.__init__", "functools.partial", "shortcut.ShortcutWidget.setWindowTitle", "shortcut.ShortcutWidget.setWindowIcon", "shortcut.ShortcutWidget.initUI", "shortcut.ShortcutWidget.tr", "qtpy.QtGui.QIcon", "os.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.initUI", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["    ", "def", "__init__", "(", "self", ",", "actions", ",", "pjpath", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tr", "=", "partial", "(", "QtCore", ".", "QCoreApplication", ".", "translate", ",", "\"ShortcutWidget\"", ")", "\n", "self", ".", "setWindowTitle", "(", "self", ".", "tr", "(", "\"\u7f16\u8f91\u5feb\u6377\u952e\"", ")", ")", "\n", "self", ".", "setWindowIcon", "(", "QIcon", "(", "osp", ".", "join", "(", "pjpath", ",", "\"resource/Shortcut.png\"", ")", ")", ")", "\n", "# self.setFixedSize(self.width(), self.height())", "\n", "self", ".", "actions", "=", "actions", "\n", "self", ".", "recorder", "=", "None", "\n", "self", ".", "initUI", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.initUI": [[62, 81], ["qtpy.QtWidgets.QGridLayout", "shortcut.ShortcutWidget.ShortcutWidget.setLayout", "enumerate", "qtpy.QtWidgets.QGridLayout.addWidget", "action.shortcut().toString", "qtpy.QtWidgets.QPushButton", "qtpy.QtWidgets.QPushButton.setFixedWidth", "qtpy.QtWidgets.QPushButton.setFixedHeight", "qtpy.QtWidgets.QPushButton.clicked.connect", "qtpy.QtWidgets.QGridLayout.addWidget", "qtpy.QtWidgets.QLabel", "len", "shortcut.ShortcutWidget.ShortcutWidget.tr", "functools.partial", "action.shortcut", "action.iconText"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "initUI", "(", "self", ")", ":", "\n", "        ", "grid", "=", "QGridLayout", "(", ")", "\n", "self", ".", "setLayout", "(", "grid", ")", "\n", "\n", "actions", "=", "self", ".", "actions", "\n", "for", "idx", ",", "action", "in", "enumerate", "(", "actions", ")", ":", "\n", "# 2\u5217\u82f1\u6587\u770b\u4e0d\u6e05", "\n", "            ", "grid", ".", "addWidget", "(", "QLabel", "(", "action", ".", "iconText", "(", ")", "[", "1", ":", "]", ")", ",", "idx", "//", "3", ",", "idx", "%", "3", "*", "3", ")", "\n", "shortcut", "=", "action", ".", "shortcut", "(", ")", ".", "toString", "(", ")", "\n", "if", "len", "(", "shortcut", ")", "==", "0", ":", "\n", "                ", "shortcut", "=", "self", ".", "tr", "(", "\"-\"", ")", "\n", "", "button", "=", "QPushButton", "(", "shortcut", ")", "\n", "button", ".", "setFixedWidth", "(", "150", ")", "\n", "button", ".", "setFixedHeight", "(", "30", ")", "\n", "button", ".", "clicked", ".", "connect", "(", "partial", "(", "self", ".", "recordShortcut", ",", "action", ")", ")", "\n", "grid", ".", "addWidget", "(", "\n", "button", ",", "\n", "idx", "//", "3", ",", "\n", "idx", "%", "3", "*", "3", "+", "1", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.refreshUi": [[82, 91], ["enumerate", "action.shortcut().toString", "shortcut.ShortcutWidget.ShortcutWidget.layout().itemAtPosition().widget().setText", "len", "shortcut.ShortcutWidget.ShortcutWidget.tr", "action.shortcut", "shortcut.ShortcutWidget.ShortcutWidget.layout().itemAtPosition().widget", "shortcut.ShortcutWidget.ShortcutWidget.layout().itemAtPosition", "shortcut.ShortcutWidget.ShortcutWidget.layout"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "", "def", "refreshUi", "(", "self", ")", ":", "\n", "        ", "actions", "=", "self", ".", "actions", "\n", "for", "idx", ",", "action", "in", "enumerate", "(", "actions", ")", ":", "\n", "            ", "shortcut", "=", "action", ".", "shortcut", "(", ")", ".", "toString", "(", ")", "\n", "if", "len", "(", "shortcut", ")", "==", "0", ":", "\n", "                ", "shortcut", "=", "self", ".", "tr", "(", "\"-\"", ")", "\n", "", "self", ".", "layout", "(", ")", ".", "itemAtPosition", "(", "\n", "idx", "//", "3", ",", "\n", "idx", "%", "3", "*", "3", "+", "1", ",", ")", ".", "widget", "(", ")", ".", "setText", "(", "shortcut", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.recordShortcut": [[92, 101], ["shortcut.ShortcutWidget.geometry", "shortcut.ShortcutWidget.x", "shortcut.RecordShortcutWidget", "shortcut.ShortcutWidget.recorder.close", "shortcut.ShortcutWidget.y", "shortcut.ShortcutWidget.height", "PyQt5.QtCore.QPoint"], "methods", ["None"], ["", "", "def", "recordShortcut", "(", "self", ",", "action", ")", ":", "\n", "# \u6253\u5f00\u5feb\u6377\u952e\u8bbe\u7f6e\u7684\u7a97\u53e3\u65f6\uff0c\u5982\u679c\u4e4b\u524d\u7684\u8fd8\u5728\u5c31\u5148\u5173\u95ed", "\n", "        ", "if", "self", ".", "recorder", "is", "not", "None", ":", "\n", "            ", "self", ".", "recorder", ".", "close", "(", ")", "\n", "", "rect", "=", "self", ".", "geometry", "(", ")", "\n", "x", "=", "rect", ".", "x", "(", ")", "\n", "y", "=", "rect", ".", "y", "(", ")", "+", "rect", ".", "height", "(", ")", "\n", "self", ".", "recorder", "=", "RecordShortcutWidget", "(", "self", ".", "setShortcut", ",", "QPoint", "(", "x", ",", "y", ")", ")", "\n", "self", ".", "currentAction", "=", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.setShortcut": [[102, 121], ["shortcut.ShortcutWidget.recorder.close", "shortcut.ShortcutWidget.currentAction.setShortcut", "shortcut.ShortcutWidget.refreshUi", "util.save_configs", "a.shortcut", "key.toString.toString.toString", "qtpy.QtWidgets.QMessageBox", "qtpy.QtWidgets.QMessageBox.setIcon", "qtpy.QtWidgets.QMessageBox.setWindowTitle", "qtpy.QtWidgets.QMessageBox.setText", "qtpy.QtWidgets.QMessageBox.setStandardButtons", "qtpy.QtWidgets.QMessageBox.exec_", "key.toString.toString.toString", "shortcut.ShortcutWidget.tr", "shortcut.ShortcutWidget.tr", "a.data", "shortcut.ShortcutWidget.tr", "a.data", "shortcut.ShortcutWidget.tr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.setShortcut", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.refreshUi", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.config.save_configs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr"], ["", "def", "setShortcut", "(", "self", ",", "key", ")", ":", "\n", "        ", "self", ".", "recorder", ".", "close", "(", ")", "\n", "\n", "for", "a", "in", "self", ".", "actions", ":", "\n", "            ", "if", "a", ".", "shortcut", "(", ")", "==", "key", ":", "\n", "                ", "key", "=", "key", ".", "toString", "(", ")", "\n", "msg", "=", "QMessageBox", "(", ")", "\n", "msg", ".", "setIcon", "(", "QMessageBox", ".", "Warning", ")", "\n", "msg", ".", "setWindowTitle", "(", "key", "+", "\" \"", "+", "self", ".", "tr", "(", "\"\u5feb\u6377\u952e\u51b2\u7a81\"", ")", ")", "\n", "msg", ".", "setText", "(", "key", "+", "\" \"", "+", "self", ".", "tr", "(", "\"\u5feb\u6377\u952e\u5df2\u88ab\"", ")", "+", "\" \"", "+", "a", ".", "data", "(", "\n", ")", "+", "\" \"", "+", "self", ".", "tr", "(", "\"\u4f7f\u7528\uff0c\u8bf7\u8bbe\u7f6e\u5176\u4ed6\u5feb\u6377\u952e\u6216\u5148\u4fee\u6539\"", ")", "+", "\" \"", "+", "a", ".", "data", "(", ")", "+", "\" \"", "+", "\n", "self", ".", "tr", "(", "\"\u7684\u5feb\u6377\u952e\"", ")", ")", "\n", "msg", ".", "setStandardButtons", "(", "QMessageBox", ".", "Ok", ")", "\n", "msg", ".", "exec_", "(", ")", "\n", "return", "\n", "", "", "key", "=", "\"\"", "if", "key", ".", "toString", "(", ")", "==", "\"Esc\"", "else", "key", "# ESC\u4e0d\u8bbe\u7f6e\u5feb\u6377\u952e", "\n", "self", ".", "currentAction", ".", "setShortcut", "(", "key", ")", "\n", "self", ".", "refreshUi", "(", ")", "\n", "save_configs", "(", "None", ",", "None", ",", "self", ".", "actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.center": [[122, 127], ["shortcut.ShortcutWidget.frameGeometry", "PyQt5.QtWidgets.QDesktopWidget().availableGeometry().center", "shortcut.ShortcutWidget.moveCenter", "shortcut.ShortcutWidget.move", "shortcut.ShortcutWidget.topLeft", "PyQt5.QtWidgets.QDesktopWidget().availableGeometry", "PyQt5.QtWidgets.QDesktopWidget"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.center"], ["", "def", "center", "(", "self", ")", ":", "\n", "        ", "qr", "=", "self", ".", "frameGeometry", "(", ")", "\n", "cp", "=", "QDesktopWidget", "(", ")", ".", "availableGeometry", "(", ")", ".", "center", "(", ")", "\n", "qr", ".", "moveCenter", "(", "cp", ")", "\n", "self", ".", "move", "(", "qr", ".", "topLeft", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.moveEvent": [[129, 135], ["shortcut.ShortcutWidget.geometry", "shortcut.ShortcutWidget.x", "shortcut.ShortcutWidget.y", "shortcut.ShortcutWidget.height", "shortcut.ShortcutWidget.recorder.move"], "methods", ["None"], ["", "def", "moveEvent", "(", "self", ",", "event", ")", ":", "\n", "        ", "p", "=", "self", ".", "geometry", "(", ")", "\n", "x", "=", "p", ".", "x", "(", ")", "\n", "y", "=", "p", ".", "y", "(", ")", "+", "p", ".", "height", "(", ")", "\n", "if", "self", ".", "recorder", "is", "not", "None", ":", "\n", "            ", "self", ".", "recorder", ".", "move", "(", "x", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.closeEvent": [[136, 140], ["shortcut.ShortcutWidget.recorder.close"], "methods", ["None"], ["", "", "def", "closeEvent", "(", "self", ",", "event", ")", ":", "\n", "# \u5173\u95ed\u65f6\u4e5f\u9000\u51fa\u5feb\u6377\u952e\u8bbe\u7f6e", "\n", "        ", "if", "self", ".", "recorder", "is", "not", "None", ":", "\n", "            ", "self", ".", "recorder", ".", "close", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.__init__": [[21, 60], ["qtpy.QtWidgets.QGraphicsPathItem.__init__", "qtpy.QtCore.QPointF", "qtpy.QtCore.QPointF", "bbox.BBoxAnnotation.setZValue", "qtpy.QtGui.QColor", "bbox.BBoxAnnotation.borderColor.setAlphaF", "qtpy.QtGui.QPen", "qtpy.QtGui.QPen.setStyle", "bbox.BBoxAnnotation.setPen", "bbox.BBoxAnnotation.setFlag", "bbox.BBoxAnnotation.setFlag", "bbox.BBoxAnnotation.setFlag", "bbox.BBoxAnnotation.setFlag", "bbox.BBoxAnnotation.setAcceptHoverEvents"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "labelIndex", ",", "\n", "polyline", ",", "\n", "borderColor", "=", "[", "0", ",", "0", ",", "255", "]", ",", "\n", "cocoIndex", "=", "None", ",", "\n", "parent", "=", "None", ",", ")", ":", "\n", "        ", "super", "(", "BBoxAnnotation", ",", "self", ")", ".", "__init__", "(", "parent", ")", "\n", "self", ".", "polyline", "=", "polyline", "\n", "self", ".", "corner_points", "=", "[", "]", "\n", "self", ".", "upper_right", "=", "QtCore", ".", "QPointF", "(", ")", "\n", "self", ".", "bottom_left", "=", "QtCore", ".", "QPointF", "(", ")", "\n", "self", ".", "w", "=", "-", "1.0", "\n", "self", ".", "h", "=", "-", "1.0", "\n", "\n", "self", ".", "parent", "=", "parent", "\n", "self", ".", "is_added", "=", "False", "\n", "if", "self", ".", "parent", "is", "not", "None", ":", "\n", "            ", "self", ".", "is_added", "=", "True", "\n", "", "self", ".", "labelIndex", "=", "labelIndex", "\n", "self", ".", "coco_id", "=", "cocoIndex", "\n", "self", ".", "bbox_hovering", "=", "True", "\n", "\n", "# set rendering attributes", "\n", "self", ".", "setZValue", "(", "10", ")", "\n", "\n", "# b = borderColor", "\n", "# self.borderColor = QtGui.QColor(b[0], b[1], b[2])", "\n", "self", ".", "borderColor", "=", "QtGui", ".", "QColor", "(", "128", ",", "128", ",", "128", ")", "\n", "self", ".", "borderColor", ".", "setAlphaF", "(", "0.8", ")", "\n", "pen", "=", "QtGui", ".", "QPen", "(", "self", ".", "borderColor", ",", "1.2", ")", "\n", "pen", ".", "setStyle", "(", "Qt", ".", "DashDotLine", ")", "\n", "self", ".", "setPen", "(", "pen", ")", "\n", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsSelectable", ",", "False", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsMovable", ",", "False", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemSendsGeometryChanges", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsFocusable", ",", "False", ")", "\n", "self", ".", "setAcceptHoverEvents", "(", "False", ")", "\n", "# self.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.scnenePoints": [[62, 66], ["Exception"], "methods", ["None"], ["", "@", "property", "\n", "def", "scnenePoints", "(", "self", ")", ":", "\n", "# return 4 corner points", "\n", "        ", "raise", "Exception", "(", "\"Not Implemented Yet!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.setAnning": [[67, 69], ["Exception"], "methods", ["None"], ["", "def", "setAnning", "(", "self", ",", "isAnning", "=", "True", ")", ":", "\n", "        ", "raise", "Exception", "(", "\"Not Implemented Yet!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.remove": [[70, 72], ["Exception"], "methods", ["None"], ["", "def", "remove", "(", "self", ")", ":", "\n", "        ", "raise", "Exception", "(", "\"Not Implemented Yet!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.create_corners": [[75, 96], ["bbox.BBoxAnnotation.polyline.boundingRect", "bbox.BBoxAnnotation.bottomLeft", "bbox.BBoxAnnotation.topRight", "bbox.BBoxAnnotation.corner_points.clear", "bbox.BBoxAnnotation.corner_points.extend", "bbox.BBoxAnnotation.corner_points[].x", "bbox.BBoxAnnotation.corner_points[].x", "bbox.BBoxAnnotation.corner_points[].y", "bbox.BBoxAnnotation.corner_points[].y", "bbox.BBoxAnnotation.topLeft", "bbox.BBoxAnnotation.bottomRight", "bbox.BBoxAnnotation.corner_points[].x", "bbox.BBoxAnnotation.corner_points[].y", "bbox.BBoxAnnotation.corner_points[].x", "bbox.BBoxAnnotation.corner_points[].y"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear"], ["", "def", "create_corners", "(", "self", ")", ":", "\n", "        ", "bbox_rect_geo", "=", "self", ".", "polyline", ".", "boundingRect", "(", ")", "\n", "self", ".", "bottom_left", "=", "bbox_rect_geo", ".", "bottomLeft", "(", ")", "\n", "self", ".", "upper_right", "=", "bbox_rect_geo", ".", "topRight", "(", ")", "\n", "self", ".", "corner_points", ".", "clear", "(", ")", "\n", "self", ".", "corner_points", ".", "extend", "(", "[", "\n", "self", ".", "bottom_left", ",", "\n", "bbox_rect_geo", ".", "topLeft", "(", ")", ",", "\n", "self", ".", "upper_right", ",", "\n", "bbox_rect_geo", ".", "bottomRight", "(", ")", ",", "\n", "]", ")", "\n", "self", ".", "w", "=", "self", ".", "corner_points", "[", "3", "]", ".", "x", "(", ")", "-", "self", ".", "corner_points", "[", "1", "]", ".", "x", "(", ")", "\n", "self", ".", "h", "=", "self", ".", "corner_points", "[", "3", "]", ".", "y", "(", ")", "-", "self", ".", "corner_points", "[", "1", "]", ".", "y", "(", ")", "\n", "\n", "if", "self", ".", "corner_points", "[", "1", "]", ".", "x", "(", ")", ">", "512", "or", "self", ".", "corner_points", "[", "1", "]", ".", "x", "(", "\n", ")", "+", "self", ".", "w", ">", "512", ":", "\n", "            ", "pass", "\n", "", "if", "self", ".", "corner_points", "[", "1", "]", ".", "y", "(", ")", ">", "512", "or", "self", ".", "corner_points", "[", "1", "]", ".", "y", "(", "\n", ")", "+", "self", ".", "h", ">", "512", ":", "\n", "            ", "pass", "\n", "", "return", "self", ".", "corner_points", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.create_lines": [[97, 99], ["None"], "methods", ["None"], ["", "def", "create_lines", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update": [[102, 121], ["len", "bbox.BBoxAnnotation.remove_from_scene", "bbox.BBoxAnnotation.add_to_scene", "qtpy.QtGui.QPainterPath", "bbox.BBoxAnnotation.create_corners", "qtpy.QtGui.QPainterPath.moveTo", "range", "bbox.BBoxAnnotation.setPath", "qtpy.QtGui.QPainterPath.lineTo", "qtpy.QtGui.QPainterPath"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.remove_from_scene", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.add_to_scene", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.create_corners"], ["", "def", "update", "(", "self", ")", ":", "\n", "        ", "l", "=", "len", "(", "self", ".", "polyline", ".", "points", ")", "\n", "# print(\"up L:\", l, \" is_added:\", self.is_added)", "\n", "if", "l", "<", "3", ":", "\n", "            ", "if", "self", ".", "is_added", ":", "\n", "                ", "self", ".", "remove_from_scene", "(", ")", "\n", "", "", "else", ":", "# \u5927\u4e8e\u4e09\u4e2a\u70b9\u5c31\u53ef\u4ee5\u66f4\u65b0\uff0c\u5c0f\u4e8e\u4e09\u4e2a\u70b9\u5220\u9664\u591a\u8fb9\u5f62", "\n", "            ", "if", "self", ".", "is_added", ":", "\n", "                ", "self", ".", "add_to_scene", "(", ")", "\n", "", "else", ":", "\n", "                ", "path_geo", "=", "QtGui", ".", "QPainterPath", "(", ")", "\n", "self", ".", "create_corners", "(", ")", "\n", "path_geo", ".", "moveTo", "(", "self", ".", "corner_points", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "                    ", "path_geo", ".", "lineTo", "(", "self", ".", "corner_points", "[", "(", "i", "+", "1", ")", "%", "4", "]", ")", "\n", "", "self", ".", "setPath", "(", "QtGui", ".", "QPainterPath", "(", "path_geo", ")", ")", "\n", "pass", "\n", "", "pass", "\n", "", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.add_to_scene": [[122, 126], ["bbox.BBoxAnnotation.setParentItem"], "methods", ["None"], ["", "def", "add_to_scene", "(", "self", ")", ":", "\n", "# self.parentItem().scene().addItem(self)", "\n", "        ", "self", ".", "setParentItem", "(", "self", ".", "parent", ")", "\n", "self", ".", "is_added", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.remove_from_scene": [[127, 131], ["bbox.BBoxAnnotation.setParentItem"], "methods", ["None"], ["", "def", "remove_from_scene", "(", "self", ")", ":", "\n", "# self.parentItem().scene().removeItem(self)", "\n", "        ", "self", ".", "setParentItem", "(", "None", ")", "\n", "self", ".", "is_added", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.to_array": [[135, 143], ["bbox.BBoxAnnotation._round", "bbox.BBoxAnnotation._round", "bbox.BBoxAnnotation._round", "bbox.BBoxAnnotation._round", "bbox.BBoxAnnotation.corner_points[].x", "bbox.BBoxAnnotation.corner_points[].y"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation._round", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation._round", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation._round", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation._round"], ["", "def", "to_array", "(", "self", ")", ":", "\n", "        ", "np_array", "=", "[", "\n", "self", ".", "_round", "(", "self", ".", "corner_points", "[", "1", "]", ".", "x", "(", ")", ")", ",", "\n", "self", ".", "_round", "(", "self", ".", "corner_points", "[", "1", "]", ".", "y", "(", ")", ")", ",", "# topLeft", "\n", "self", ".", "_round", "(", "self", ".", "w", ")", ",", "\n", "self", ".", "_round", "(", "self", ".", "h", ")", ",", "\n", "]", "\n", "return", "np_array", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation._round": [[144, 150], ["str().split", "float", "str"], "methods", ["None"], ["", "def", "_round", "(", "self", ",", "number", ",", "ind", "=", "0", ")", ":", "\n", "        ", "nint", ",", "ndec", "=", "str", "(", "number", ")", ".", "split", "(", "\".\"", ")", "\n", "res", "=", "float", "(", "nint", "+", "\".\"", "+", "ndec", "[", ":", "ind", "]", ")", "\n", "if", "res", "<=", "0", ":", "\n", "            ", "res", "=", "0.0", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.__del__": [[151, 153], ["bbox.BBoxAnnotation.corner_points.clear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear"], ["", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "self", ".", "corner_points", ".", "clear", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.__init__": [[23, 44], ["qtpy.QtWidgets.QGraphicsPathItem.__init__", "color.setAlphaF", "grip.GripItem.updateSize", "grip.GripItem.setPath", "grip.GripItem.setBrush", "grip.GripItem.setPen", "grip.GripItem.setFlag", "grip.GripItem.setFlag", "grip.GripItem.setFlag", "grip.GripItem.setFlag", "grip.GripItem.setAcceptHoverEvents", "grip.GripItem.setZValue", "grip.GripItem.setCursor", "qtpy.QtGui.QPen", "qtpy.QtGui.QCursor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.updateSize"], ["def", "__init__", "(", "self", ",", "annotation_item", ",", "index", ",", "color", ",", "img_size", ")", ":", "\n", "        ", "super", "(", "GripItem", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "m_annotation_item", "=", "annotation_item", "\n", "self", ".", "hovering", "=", "False", "\n", "self", ".", "m_index", "=", "index", "\n", "self", ".", "anning", "=", "True", "\n", "color", ".", "setAlphaF", "(", "1", ")", "\n", "self", ".", "color", "=", "color", "\n", "self", ".", "img_size", "=", "img_size", "\n", "\n", "self", ".", "updateSize", "(", ")", "\n", "self", ".", "setPath", "(", "self", ".", "circle", ")", "\n", "self", ".", "setBrush", "(", "self", ".", "color", ")", "\n", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "self", ".", "color", ",", "1", ")", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsSelectable", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsMovable", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemSendsGeometryChanges", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsFocusable", ",", "True", ")", "\n", "self", ".", "setAcceptHoverEvents", "(", "True", ")", "\n", "self", ".", "setZValue", "(", "12", ")", "\n", "self", ".", "setCursor", "(", "QtGui", ".", "QCursor", "(", "QtCore", ".", "Qt", ".", "PointingHandCursor", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.setColor": [[45, 49], ["grip.GripItem.setBrush", "grip.GripItem.setPen", "qtpy.QtGui.QPen"], "methods", ["None"], ["", "def", "setColor", "(", "self", ",", "color", ")", ":", "\n", "        ", "self", ".", "setBrush", "(", "color", ")", "\n", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "color", ",", "1", ")", ")", "\n", "self", ".", "color", "=", "color", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.setAnning": [[50, 53], ["grip.GripItem.setEnabled"], "methods", ["None"], ["", "def", "setAnning", "(", "self", ",", "anning", "=", "True", ")", ":", "\n", "        ", "self", ".", "anning", "=", "anning", "\n", "self", ".", "setEnabled", "(", "anning", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.size": [[55, 58], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "size", "(", "self", ")", ":", "\n", "        ", "return", "GripItem", ".", "minSize", "\n", "# if not self.scene():", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.updateSize": [[70, 77], ["qtpy.QtGui.QPainterPath", "grip.GripItem.circle.addEllipse", "qtpy.QtGui.QPainterPath", "grip.GripItem.square.addRect", "grip.GripItem.setPath", "qtpy.QtCore.QRectF", "qtpy.QtCore.QRectF"], "methods", ["None"], ["", "def", "updateSize", "(", "self", ",", "s", "=", "2", ")", ":", "\n", "        ", "size", "=", "self", ".", "size", "\n", "self", ".", "circle", "=", "QtGui", ".", "QPainterPath", "(", ")", "\n", "self", ".", "circle", ".", "addEllipse", "(", "QtCore", ".", "QRectF", "(", "-", "size", ",", "-", "size", ",", "size", "*", "s", ",", "size", "*", "s", ")", ")", "\n", "self", ".", "square", "=", "QtGui", ".", "QPainterPath", "(", ")", "\n", "self", ".", "square", ".", "addRect", "(", "QtCore", ".", "QRectF", "(", "-", "size", ",", "-", "size", ",", "size", "*", "s", ",", "size", "*", "s", ")", ")", "\n", "self", ".", "setPath", "(", "self", ".", "square", "if", "self", ".", "hovering", "else", "self", ".", "circle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.hoverEnterEvent": [[78, 84], ["grip.GripItem.setPath", "grip.GripItem.setBrush", "super().hoverEnterEvent", "qtpy.QtGui.QColor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.hoverEnterEvent"], ["", "def", "hoverEnterEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "self", ".", "setPath", "(", "self", ".", "square", ")", "\n", "self", ".", "setBrush", "(", "QtGui", ".", "QColor", "(", "0", ",", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "m_annotation_item", ".", "item_hovering", "=", "True", "\n", "self", ".", "hovring", "=", "True", "\n", "super", "(", "GripItem", ",", "self", ")", ".", "hoverEnterEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.hoverLeaveEvent": [[85, 91], ["grip.GripItem.setPath", "grip.GripItem.setBrush", "super().hoverLeaveEvent"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.hoverLeaveEvent"], ["", "def", "hoverLeaveEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "self", ".", "setPath", "(", "self", ".", "circle", ")", "\n", "self", ".", "setBrush", "(", "self", ".", "color", ")", "\n", "self", ".", "m_annotation_item", ".", "item_hovering", "=", "False", "\n", "self", ".", "hovring", "=", "False", "\n", "super", "(", "GripItem", ",", "self", ")", ".", "hoverLeaveEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.mouseReleaseEvent": [[92, 95], ["grip.GripItem.setSelected", "super().mouseReleaseEvent"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.mouseReleaseEvent"], ["", "def", "mouseReleaseEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "self", ".", "setSelected", "(", "False", ")", "\n", "super", "(", "GripItem", ",", "self", ")", ".", "mouseReleaseEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.itemChange": [[96, 116], ["super().itemChange", "grip.GripItem.isEnabled", "PyQt5.QtCore.QPointF", "grip.GripItem.m_annotation_item.movePoint", "grip.GripItem.m_annotation_item.setDirty", "value.x", "value.y", "value.x", "value.x", "value.y", "value.y"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.itemChange", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.movePoint", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.eiseg.app.APP_EISeg.setDirty"], ["", "def", "itemChange", "(", "self", ",", "change", ",", "value", ")", ":", "\n", "        ", "tmp_val", "=", "value", "\n", "if", "change", "==", "QtWidgets", ".", "QGraphicsItem", ".", "ItemPositionChange", "and", "self", ".", "isEnabled", "(", "\n", ")", ":", "\n", "            ", "if", "value", ".", "x", "(", ")", ">", "self", ".", "img_size", "[", "1", "]", ":", "\n", "                ", "x", "=", "self", ".", "img_size", "[", "1", "]", "\n", "", "elif", "value", ".", "x", "(", ")", "<", "0", ":", "\n", "                ", "x", "=", "0", "\n", "", "else", ":", "\n", "                ", "x", "=", "value", ".", "x", "(", ")", "\n", "", "if", "value", ".", "y", "(", ")", ">", "self", ".", "img_size", "[", "0", "]", ":", "\n", "                ", "y", "=", "self", ".", "img_size", "[", "0", "]", "\n", "", "elif", "value", ".", "y", "(", ")", "<", "0", ":", "\n", "                ", "y", "=", "0", "\n", "", "else", ":", "\n", "                ", "y", "=", "value", ".", "y", "(", ")", "\n", "", "tmp_val", "=", "QPointF", "(", "x", ",", "y", ")", "\n", "self", ".", "m_annotation_item", ".", "movePoint", "(", "self", ".", "m_index", ",", "tmp_val", ")", "\n", "self", ".", "m_annotation_item", ".", "setDirty", "(", "True", ")", "\n", "", "return", "super", "(", "GripItem", ",", "self", ")", ".", "itemChange", "(", "change", ",", "tmp_val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.shape": [[117, 124], ["qtpy.QtGui.QPainterPath", "grip.GripItem.mapFromScene", "qtpy.QtGui.QPainterPath.addEllipse", "grip.GripItem.pos", "grip.GripItem.x", "grip.GripItem.y"], "methods", ["None"], ["", "def", "shape", "(", "self", ")", ":", "\n", "        ", "path", "=", "QtGui", ".", "QPainterPath", "(", ")", "\n", "p", "=", "self", ".", "mapFromScene", "(", "self", ".", "pos", "(", ")", ")", "\n", "x", ",", "y", "=", "p", ".", "x", "(", ")", ",", "p", ".", "y", "(", ")", "\n", "s", "=", "self", ".", "size", "\n", "path", ".", "addEllipse", "(", "p", ",", "s", "+", "GripItem", ".", "minSize", ",", "s", "+", "GripItem", ".", "minSize", ")", "\n", "return", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.mouseDoubleClickEvent": [[125, 127], ["grip.GripItem.m_annotation_item.removeFocusPoint"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.removeFocusPoint"], ["", "def", "mouseDoubleClickEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "self", ".", "m_annotation_item", ".", "removeFocusPoint", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.loading.LoadingWidget.__init__": [[24, 34], ["qtpy.QtWidgets.QWidget.__init__", "loading.LoadingWidget.setWindowFlags", "qtpy.QtWidgets.QHBoxLayout", "qtpy.QtWidgets.QLabel", "qtpy.QtWidgets.QHBoxLayout.addWidget", "loading.LoadingWidget.setLayout", "qtpy.QtGui.QMovie", "loading.LoadingWidget.label.setMovie", "loading.LoadingWidget.movie.start", "os.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "setWindowFlags", "(", "QtCore", ".", "Qt", ".", "FramelessWindowHint", ")", "\n", "layout", "=", "QHBoxLayout", "(", "self", ")", "\n", "self", ".", "label", "=", "QLabel", "(", ")", "\n", "layout", ".", "addWidget", "(", "self", ".", "label", ")", "\n", "self", ".", "setLayout", "(", "layout", ")", "\n", "self", ".", "movie", "=", "QMovie", "(", "osp", ".", "join", "(", "pjpath", ",", "\"resource\"", ",", "\"loading.gif\"", ")", ")", "\n", "self", ".", "label", ".", "setMovie", "(", "self", ".", "movie", ")", "\n", "self", ".", "movie", ".", "start", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.__init__": [[22, 26], ["qtpy.QtWidgets.QGraphicsScene.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["def", "__init__", "(", "self", ",", "parent", "=", "None", ")", ":", "\n", "        ", "super", "(", "AnnotationScene", ",", "self", ")", ".", "__init__", "(", "parent", ")", "\n", "self", ".", "creating", "=", "False", "\n", "self", ".", "polygon_items", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.updatePolygonSize": [[27, 33], ["grip.updateSize", "line.updateWidth"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.grip.GripItem.updateSize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.updateWidth"], ["", "def", "updatePolygonSize", "(", "self", ")", ":", "\n", "        ", "for", "poly", "in", "self", ".", "polygon_items", ":", "\n", "            ", "for", "grip", "in", "poly", ".", "m_items", ":", "\n", "                ", "grip", ".", "updateSize", "(", ")", "\n", "", "for", "line", "in", "poly", ".", "m_lines", ":", "\n", "                ", "line", ".", "updateWidth", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.setCreating": [[34, 36], ["None"], "methods", ["None"], ["", "", "", "def", "setCreating", "(", "self", ",", "creating", "=", "True", ")", ":", "\n", "        ", "self", ".", "creating", "=", "creating", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.mousePressEvent": [[37, 49], ["ev.scenePos", "super().mousePressEvent", "ev.buttons", "scene.AnnotationScene.clickRequest.emit", "scene.AnnotationScene.polygon_item.removeLastPoint", "scene.AnnotationScene.polygon_item.addPointLast", "scene.AnnotationScene.polygon_item.addPointLast", "int", "int", "ev.scenePos", "ev.scenePos", "ev.scenePos.x", "ev.scenePos.y", "ev.buttons"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.mousePressEvent", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.removeLastPoint", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.addPointLast", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.addPointLast"], ["", "def", "mousePressEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "pos", "=", "ev", ".", "scenePos", "(", ")", "\n", "if", "not", "self", ".", "creating", "and", "not", "self", ".", "hovering", ":", "\n", "            ", "if", "ev", ".", "buttons", "(", ")", "in", "[", "Qt", ".", "LeftButton", ",", "Qt", ".", "RightButton", "]", ":", "\n", "                ", "self", ".", "clickRequest", ".", "emit", "(", "\n", "int", "(", "pos", ".", "x", "(", ")", ")", ",", "int", "(", "pos", ".", "y", "(", ")", ")", ",", "ev", ".", "buttons", "(", ")", "==", "Qt", ".", "LeftButton", ")", "\n", "", "", "elif", "self", ".", "creating", ":", "\n", "            ", "self", ".", "polygon_item", ".", "removeLastPoint", "(", ")", "\n", "self", ".", "polygon_item", ".", "addPointLast", "(", "ev", ".", "scenePos", "(", ")", ")", "\n", "# movable element", "\n", "self", ".", "polygon_item", ".", "addPointLast", "(", "ev", ".", "scenePos", "(", ")", ")", "\n", "", "super", "(", "AnnotationScene", ",", "self", ")", ".", "mousePressEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.mouseMoveEvent": [[50, 57], ["super().mouseMoveEvent", "scene.AnnotationScene.polygon_item.movePoint", "ev.scenePos", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.mouseMoveEvent", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.movePoint"], ["", "def", "mouseMoveEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "if", "self", ".", "creating", ":", "\n", "            ", "self", ".", "polygon_item", ".", "movePoint", "(", "\n", "# self.polygon_item.number_of_points() - 1, ev.scenePos()", "\n", "len", "(", "self", ".", "polygon_item", ")", "-", "1", ",", "\n", "ev", ".", "scenePos", "(", ")", ",", ")", "\n", "", "super", "(", "AnnotationScene", ",", "self", ")", ".", "mouseMoveEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.item_hovering": [[58, 64], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "item_hovering", "(", "self", ")", ":", "\n", "        ", "for", "poly", "in", "self", ".", "polygon_items", ":", "\n", "            ", "if", "poly", ".", "item_hovering", ":", "\n", "                ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.polygon_hovering": [[65, 71], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "polygon_hovering", "(", "self", ")", ":", "\n", "        ", "for", "poly", "in", "self", ".", "polygon_items", ":", "\n", "            ", "if", "poly", ".", "polygon_hovering", ":", "\n", "                ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.line_hovering": [[72, 78], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "line_hovering", "(", "self", ")", ":", "\n", "        ", "for", "poly", "in", "self", ".", "polygon_items", ":", "\n", "            ", "if", "poly", ".", "line_hovering", ":", "\n", "                ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.scene.AnnotationScene.hovering": [[79, 82], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "hovering", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "item_hovering", "or", "self", ".", "polygon_hovering", "or", "self", ".", "line_hovering", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.DockWidget.__init__": [[88, 105], ["qtpy.QtWidgets.QDockWidget.__init__", "create.DockWidget.setObjectName", "create.DockWidget.setAllowedAreas", "create.DockWidget.setFeatures", "qtpy.QtWidgets.QSizePolicy", "qtpy.QtWidgets.QSizePolicy.setHorizontalStretch", "qtpy.QtWidgets.QSizePolicy.setVerticalStretch", "qtpy.QtWidgets.QSizePolicy.setHeightForWidth", "create.DockWidget.setSizePolicy", "create.DockWidget.setMinimumWidth", "create.DockWidget.setWindowTitle", "create.DockWidget.setStyleSheet", "create.DockWidget.topLevelChanged.connect", "create.DockWidget.sizePolicy().hasHeightForWidth", "create.DockWidget.sizePolicy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "parent", ",", "name", ",", "text", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "parent", "=", "parent", ")", "\n", "self", ".", "setObjectName", "(", "name", ")", "\n", "self", ".", "setAllowedAreas", "(", "Qt", ".", "RightDockWidgetArea", "|", "Qt", ".", "LeftDockWidgetArea", ")", "\n", "# \u611f\u89c9\u4e0d\u7ed9\u5173\u95ed\u597d\u70b9\u3002\u53ef\u4ee5\u5728\u663e\u793a\u91cc\u9762\u53d6\u6d88\u663e\u793a\u3002\u6709\u5173\u95ed\u7684\u8bdd\u663e\u793a\u91cc\u9762\u7684enable\u8fd8\u80fd\u5224\u65ad\u4fee\u6539\uff0c\u7d2f\u4e86", "\n", "self", ".", "setFeatures", "(", "QDockWidget", ".", "DockWidgetMovable", "|", "\n", "QDockWidget", ".", "DockWidgetFloatable", ")", "\n", "sizePolicy", "=", "QtWidgets", ".", "QSizePolicy", "(", "QtWidgets", ".", "QSizePolicy", ".", "Preferred", ",", "\n", "QtWidgets", ".", "QSizePolicy", ".", "Preferred", ")", "\n", "sizePolicy", ".", "setHorizontalStretch", "(", "0", ")", "\n", "sizePolicy", ".", "setVerticalStretch", "(", "0", ")", "\n", "sizePolicy", ".", "setHeightForWidth", "(", "self", ".", "sizePolicy", "(", ")", ".", "hasHeightForWidth", "(", ")", ")", "\n", "self", ".", "setSizePolicy", "(", "sizePolicy", ")", "\n", "self", ".", "setMinimumWidth", "(", "230", ")", "\n", "self", ".", "setWindowTitle", "(", "text", ")", "\n", "self", ".", "setStyleSheet", "(", "\"QDockWidget { background-color:rgb(204,204,248); }\"", ")", "\n", "self", ".", "topLevelChanged", ".", "connect", "(", "self", ".", "changeBackColor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.DockWidget.changeBackColor": [[106, 113], ["create.DockWidget.setStyleSheet", "create.DockWidget.setStyleSheet"], "methods", ["None"], ["", "def", "changeBackColor", "(", "self", ",", "isFloating", ")", ":", "\n", "        ", "if", "isFloating", ":", "\n", "            ", "self", ".", "setStyleSheet", "(", "\n", "\"QDockWidget { background-color:rgb(255,255,255); }\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "setStyleSheet", "(", "\n", "\"QDockWidget { background-color:rgb(204,204,248); }\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_text": [[21, 28], ["qtpy.QtWidgets.QLabel", "QtWidgets.QLabel.setObjectName", "QtWidgets.QLabel.setText"], "function", ["None"], ["def", "create_text", "(", "parent", ",", "text_name", "=", "None", ",", "text_text", "=", "None", ")", ":", "\n", "    ", "text", "=", "QtWidgets", ".", "QLabel", "(", "parent", ")", "\n", "if", "text_name", "is", "not", "None", ":", "\n", "        ", "text", ".", "setObjectName", "(", "text_name", ")", "\n", "", "if", "text_text", "is", "not", "None", ":", "\n", "        ", "text", ".", "setText", "(", "text_text", ")", "\n", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_button": [[31, 49], ["qtpy.QtWidgets.QSizePolicy", "qtpy.QtCore.QSize", "QtWidgets.QSizePolicy.setHorizontalStretch", "QtWidgets.QSizePolicy.setVerticalStretch", "qtpy.QtWidgets.QPushButton", "QtWidgets.QSizePolicy.setHeightForWidth", "QtWidgets.QPushButton.setSizePolicy", "QtWidgets.QPushButton.setMinimumSize", "QtWidgets.QPushButton.setObjectName", "QtWidgets.QPushButton.setText", "QtWidgets.QPushButton.sizePolicy().hasHeightForWidth", "QtWidgets.QPushButton.setIcon", "QtWidgets.QPushButton.setShortcut", "qtpy.QtGui.QIcon", "QtWidgets.QPushButton.sizePolicy"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.setShortcut"], ["", "def", "create_button", "(", "parent", ",", "btn_name", ",", "btn_text", ",", "ico_path", "=", "None", ",", "curt", "=", "None", ")", ":", "\n", "# \u521b\u5efa\u548c\u8bbe\u7f6e\u6309\u94ae", "\n", "    ", "sizePolicy", "=", "QtWidgets", ".", "QSizePolicy", "(", "QtWidgets", ".", "QSizePolicy", ".", "Minimum", ",", "\n", "QtWidgets", ".", "QSizePolicy", ".", "Fixed", ")", "\n", "min_size", "=", "QtCore", ".", "QSize", "(", "0", ",", "40", ")", "\n", "sizePolicy", ".", "setHorizontalStretch", "(", "0", ")", "\n", "sizePolicy", ".", "setVerticalStretch", "(", "0", ")", "\n", "btn", "=", "QtWidgets", ".", "QPushButton", "(", "parent", ")", "\n", "sizePolicy", ".", "setHeightForWidth", "(", "btn", ".", "sizePolicy", "(", ")", ".", "hasHeightForWidth", "(", ")", ")", "\n", "btn", ".", "setSizePolicy", "(", "sizePolicy", ")", "\n", "btn", ".", "setMinimumSize", "(", "min_size", ")", "\n", "btn", ".", "setObjectName", "(", "btn_name", ")", "\n", "if", "ico_path", "is", "not", "None", ":", "\n", "        ", "btn", ".", "setIcon", "(", "QtGui", ".", "QIcon", "(", "ico_path", ")", ")", "\n", "", "btn", ".", "setText", "(", "btn_text", ")", "\n", "if", "curt", "is", "not", "None", ":", "\n", "        ", "btn", ".", "setShortcut", "(", "curt", ")", "\n", "", "return", "btn", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_slider": [[52, 85], ["qtpy.QtWidgets.QHBoxLayout", "create.create_text", "QtWidgets.QHBoxLayout.addWidget", "create.create_text", "QtWidgets.QHBoxLayout.addWidget", "QtWidgets.QHBoxLayout.setStretch", "QtWidgets.QHBoxLayout.setStretch", "qtpy.QtWidgets.QSlider", "QtWidgets.QSlider.setMaximum", "QtWidgets.QSlider.setProperty", "QtWidgets.QSlider.setOrientation", "QtWidgets.QSlider.setObjectName", "QtWidgets.QSlider.setStyleSheet", "str"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_text", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.create_text"], ["", "def", "create_slider", "(", "\n", "parent", ",", "\n", "sld_name", ",", "\n", "text_name", ",", "\n", "text", ",", "\n", "default_value", "=", "50", ",", "\n", "max_value", "=", "100", ",", "\n", "text_rate", "=", "0.01", ",", ")", ":", "\n", "    ", "Region", "=", "QtWidgets", ".", "QHBoxLayout", "(", ")", "\n", "lab", "=", "create_text", "(", "parent", ",", "None", ",", "text", ")", "\n", "Region", ".", "addWidget", "(", "lab", ")", "\n", "labShow", "=", "create_text", "(", "parent", ",", "text_name", ",", "str", "(", "default_value", "*", "text_rate", ")", ")", "\n", "Region", ".", "addWidget", "(", "labShow", ")", "\n", "Region", ".", "setStretch", "(", "0", ",", "1", ")", "\n", "Region", ".", "setStretch", "(", "1", ",", "10", ")", "\n", "sld", "=", "QtWidgets", ".", "QSlider", "(", "parent", ")", "\n", "sld", ".", "setMaximum", "(", "max_value", ")", "# \u597d\u50cf\u53ea\u80fd\u6574\u6570\u7684\uff0c\u8fd9\u91cc\u662f\u6269\u5927\u4e8610\u500d\uff0c1 . 10", "\n", "sld", ".", "setProperty", "(", "\"value\"", ",", "default_value", ")", "\n", "sld", ".", "setOrientation", "(", "QtCore", ".", "Qt", ".", "Horizontal", ")", "\n", "sld", ".", "setObjectName", "(", "sld_name", ")", "\n", "sld", ".", "setStyleSheet", "(", "\"\"\"\n        QSlider::sub-page:horizontal {\n            background: #9999F1\n        }\n        QSlider::handle:horizontal\n        {\n            background: #3334E3;\n            width: 12px;\n            border-radius: 4px;\n        }\n        \"\"\"", ")", "\n", "sld", ".", "textLab", "=", "labShow", "\n", "return", "sld", ",", "Region", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.create.creat_dock": [[116, 120], ["create.DockWidget", "DockWidget.setWidget"], "function", ["None"], ["", "", "", "def", "creat_dock", "(", "parent", ",", "name", ",", "text", ",", "widget", ")", ":", "\n", "    ", "dock", "=", "DockWidget", "(", "parent", ",", "name", ",", "text", ")", "\n", "dock", ".", "setWidget", "(", "widget", ")", "\n", "return", "dock", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.__init__": [[22, 37], ["qtpy.QtWidgets.QGraphicsLineItem.__init__", "line.LineItem.setPen", "line.LineItem.setZValue", "line.LineItem.setFlag", "line.LineItem.setFlag", "line.LineItem.setAcceptHoverEvents", "line.LineItem.setBoundingRegionGranularity", "line.LineItem.updateWidth", "qtpy.QtGui.QPen"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.updateWidth"], ["def", "__init__", "(", "self", ",", "annotation_item", ",", "idx", ",", "color", ")", ":", "\n", "        ", "super", "(", "LineItem", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "polygon_item", "=", "annotation_item", "\n", "self", ".", "idx", "=", "idx", "\n", "self", ".", "color", "=", "color", "\n", "self", ".", "anning", "=", "True", "\n", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "color", ",", "self", ".", "width", ")", ")", "\n", "\n", "self", ".", "setZValue", "(", "11", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsSelectable", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsFocusable", ",", "True", ")", "\n", "# self.setFlag(QtWidgets.QGraphicsItem.ItemClipsToShape, True)", "\n", "self", ".", "setAcceptHoverEvents", "(", "True", ")", "\n", "self", ".", "setBoundingRegionGranularity", "(", "0.5", ")", "\n", "self", ".", "updateWidth", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setColor": [[38, 41], ["line.LineItem.setPen", "qtpy.QtGui.QPen"], "methods", ["None"], ["", "def", "setColor", "(", "self", ",", "color", ")", ":", "\n", "        ", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "color", ",", "self", ".", "width", ")", ")", "\n", "self", ".", "color", "=", "color", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.setAnning": [[42, 46], ["line.LineItem.setEnabled", "line.LineItem.updateWidth"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.updateWidth"], ["", "def", "setAnning", "(", "self", ",", "anning", "=", "True", ")", ":", "\n", "        ", "self", ".", "anning", "=", "anning", "\n", "self", ".", "setEnabled", "(", "anning", ")", "\n", "self", ".", "updateWidth", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.width": [[48, 51], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "width", "(", "self", ")", ":", "\n", "        ", "return", "LineItem", ".", "minWidth", "\n", "# if not self.scene():", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.updateWidth": [[63, 65], ["line.LineItem.setPen", "qtpy.QtGui.QPen"], "methods", ["None"], ["", "def", "updateWidth", "(", "self", ")", ":", "\n", "        ", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "self", ".", "color", ",", "self", ".", "width", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.hoverEnterEvent": [[66, 73], ["line.LineItem.boundingPolygon", "print", "super().hoverEnterEvent", "line.LineItem.setPen", "qtpy.QtGui.QPen"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.boundingPolygon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.hoverEnterEvent"], ["", "def", "hoverEnterEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "self", ".", "boundingPolygon", "(", "True", ")", "\n", "print", "(", "\"hover in\"", ")", "\n", "if", "self", ".", "anning", ":", "\n", "            ", "self", ".", "polygon_item", ".", "line_hovering", "=", "True", "\n", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "self", ".", "color", ",", "self", ".", "width", "*", "1.4", ")", ")", "\n", "", "super", "(", "LineItem", ",", "self", ")", ".", "hoverEnterEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.hoverLeaveEvent": [[74, 78], ["line.LineItem.setPen", "super().hoverLeaveEvent", "qtpy.QtGui.QPen"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.hoverLeaveEvent"], ["", "def", "hoverLeaveEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "self", ".", "polygon_item", ".", "line_hovering", "=", "False", "\n", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "self", ".", "color", ",", "self", ".", "width", ")", ")", "\n", "super", "(", "LineItem", ",", "self", ")", ".", "hoverLeaveEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.mouseDoubleClickEvent": [[79, 85], ["print", "super().mouseDoubleClickEvent", "line.LineItem.setPen", "line.LineItem.polygon_item.addPointMiddle", "qtpy.QtGui.QPen", "ev.pos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.mouseDoubleClickEvent", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.polygon.PolygonAnnotation.addPointMiddle"], ["", "def", "mouseDoubleClickEvent", "(", "self", ",", "ev", ")", ":", "\n", "        ", "print", "(", "\"anning\"", ",", "self", ".", "anning", ")", "\n", "if", "self", ".", "anning", ":", "\n", "            ", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "self", ".", "color", ",", "self", ".", "width", ")", ")", "\n", "self", ".", "polygon_item", ".", "addPointMiddle", "(", "self", ".", "idx", ",", "ev", ".", "pos", "(", ")", ")", "\n", "", "super", "(", "LineItem", ",", "self", ")", ".", "mouseDoubleClickEvent", "(", "ev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.shape": [[86, 90], ["qtpy.QtGui.QPainterPath", "qtpy.QtGui.QPainterPath.addPolygon", "line.LineItem.boundingPolygon"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.boundingPolygon"], ["", "def", "shape", "(", "self", ")", ":", "\n", "        ", "path", "=", "QtGui", ".", "QPainterPath", "(", ")", "\n", "path", ".", "addPolygon", "(", "self", ".", "boundingPolygon", "(", "False", ")", ")", "\n", "return", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.line.LineItem.boundingPolygon": [[98, 125], ["min", "qtpy.QtCore.QPointF", "qtpy.QtGui.QPolygonF", "line.LineItem.line().p1", "line.LineItem.line().p2", "dir.x", "print", "print", "dir.y", "s.x", "s.y", "e.x", "e.y", "dir.x", "dir.y", "line.LineItem.line", "line.LineItem.line"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.line", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.line"], ["", "def", "boundingPolygon", "(", "self", ",", "debug", ")", ":", "\n", "        ", "w", "=", "self", ".", "width", "*", "1.5", "\n", "w", "=", "min", "(", "w", ",", "2", ")", "\n", "s", ",", "e", "=", "self", ".", "line", "(", ")", ".", "p1", "(", ")", ",", "self", ".", "line", "(", ")", ".", "p2", "(", ")", "\n", "dir", "=", "s", "-", "e", "\n", "dx", ",", "dy", "=", "-", "dir", ".", "y", "(", ")", ",", "dir", ".", "x", "(", ")", "\n", "norm", "=", "(", "dx", "**", "2", "+", "dy", "**", "2", ")", "**", "(", "1", "/", "2", ")", "\n", "if", "debug", ":", "\n", "            ", "print", "(", "\n", "self", ".", "width", ",", "\n", "w", ",", "\n", "s", ".", "x", "(", ")", ",", "\n", "s", ".", "y", "(", ")", ",", "\n", "e", ".", "x", "(", ")", ",", "\n", "e", ".", "y", "(", ")", ",", "\n", "dir", ".", "x", "(", ")", ",", "\n", "dir", ".", "y", "(", ")", ",", "\n", "dx", ",", "\n", "dy", ",", "\n", "norm", ",", ")", "\n", "", "dx", "/=", "(", "norm", "+", "1e-16", ")", "\n", "dy", "/=", "(", "norm", "+", "1e-16", ")", "\n", "if", "debug", ":", "\n", "            ", "print", "(", "\"dir\"", ",", "dx", ",", "dy", ")", "\n", "", "p", "=", "QtCore", ".", "QPointF", "(", "dx", "*", "w", ",", "dy", "*", "w", ")", "\n", "poly", "=", "QtGui", ".", "QPolygonF", "(", "[", "s", "-", "p", ",", "s", "+", "p", ",", "e", "+", "p", ",", "e", "-", "p", "]", ")", "\n", "return", "poly", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.colormap.ColorMap.__init__": [[22, 31], ["open", "f.readlines", "random.shuffle", "int", "c.strip().split", "c.strip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle"], ["    ", "def", "__init__", "(", "self", ",", "color_path", ",", "shuffle", "=", "False", ")", ":", "\n", "        ", "self", ".", "colors", "=", "[", "]", "\n", "self", ".", "index", "=", "0", "\n", "self", ".", "usedColors", "=", "[", "]", "\n", "with", "open", "(", "color_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "colors", "=", "f", ".", "readlines", "(", ")", "\n", "", "if", "shuffle", ":", "\n", "            ", "random", ".", "shuffle", "(", "colors", ")", "\n", "", "self", ".", "colors", "=", "[", "[", "int", "(", "x", ")", "for", "x", "in", "c", ".", "strip", "(", ")", ".", "split", "(", "\",\"", ")", "]", "for", "c", "in", "colors", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.colormap.ColorMap.get_color": [[32, 36], ["len"], "methods", ["None"], ["", "def", "get_color", "(", "self", ")", ":", "\n", "        ", "color", "=", "self", ".", "colors", "[", "self", ".", "index", "]", "\n", "self", ".", "index", "=", "(", "self", ".", "index", "+", "1", ")", "%", "len", "(", "self", ")", "\n", "return", "color", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.colormap.ColorMap.__len__": [[37, 39], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "colors", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.config.cfgData.__init__": [[34, 38], ["open", "f.read", "yaml.load"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.config.cfgData.get": [[39, 44], ["config.cfgData.dicts.keys", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.config.parse_configs": [[8, 13], ["open", "yaml.load", "os.exists", "f.read"], "function", ["None"], ["#", "\n", "# Unless required by applicable law or agreed to in writing, software", "\n", "# distributed under the License is distributed on an \"AS IS\" BASIS,", "\n", "# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "\n", "# See the License for the specific language governing permissions and", "\n", "# limitations under the License.", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.config.save_configs": [[15, 31], ["os.join", "os.exists", "open", "open.close", "open", "yaml.dump", "action.shortcut().toString", "action.data", "action.shortcut"], "function", ["None"], ["import", "codecs", "\n", "import", "os", "\n", "from", "typing", "import", "Any", ",", "Dict", ",", "Generic", "\n", "import", "warnings", "\n", "\n", "import", "paddle", "\n", "import", "yaml", "\n", "\n", "from", "paddleseg", ".", "cvlibs", "import", "manager", "\n", "from", "paddleseg", ".", "utils", "import", "logger", "\n", "\n", "\n", "class", "Config", "(", "object", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.coco.CoCoAnn.__init__": [[49, 58], ["None"], "methods", ["None"], [")", ",", "\"annotation file format {} not supported\"", ".", "format", "(", "type", "(", "dataset", ")", ")", "\n", "print", "(", "\"Done (t={:0.2f}s)\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "tic", ")", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "createIndex", "(", ")", "\n", "print", "(", "\n", "f\"load coco with {len(self.dataset['images'])} images and {len(self.dataset['annotations'])} annotations.\"", "\n", ")", "\n", "\n", "", "", "def", "hasImage", "(", "self", ",", "imageName", ")", ":", "\n", "        ", "imgId", "=", "self", ".", "imgNameToId", ".", "get", "(", "imageName", ",", "None", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.coco.CoCoAnn.setInfo": [[59, 81], ["None"], "methods", ["None"], ["return", "imgId", "is", "not", "None", "\n", "\n", "", "def", "hasCat", "(", "self", ",", "catIdx", ")", ":", "\n", "        ", "res", "=", "self", ".", "cats", ".", "get", "(", "catIdx", ")", "\n", "return", "res", "is", "not", "None", "\n", "\n", "", "def", "createIndex", "(", "self", ")", ":", "\n", "# create index", "\n", "        ", "print", "(", "\"creating index...\"", ")", "\n", "anns", ",", "cats", ",", "imgs", "=", "{", "}", ",", "{", "}", ",", "{", "}", "\n", "imgNameToId", ",", "imgToAnns", ",", "catToImgs", ",", "imgNameToId", "=", "[", "\n", "defaultdict", "(", "list", ")", "for", "_", "in", "range", "(", "4", ")", "\n", "]", "\n", "if", "\"annotations\"", "in", "self", ".", "dataset", ":", "\n", "            ", "for", "ann", "in", "self", ".", "dataset", "[", "\"annotations\"", "]", ":", "\n", "                ", "imgToAnns", "[", "ann", "[", "\"image_id\"", "]", "]", ".", "append", "(", "ann", ")", "\n", "anns", "[", "ann", "[", "\"id\"", "]", "]", "=", "ann", "\n", "self", ".", "maxAnnId", "=", "max", "(", "self", ".", "maxAnnId", ",", "ann", "[", "\"id\"", "]", ")", "\n", "\n", "", "", "if", "\"images\"", "in", "self", ".", "dataset", ":", "\n", "            ", "for", "img", "in", "self", ".", "dataset", "[", "\"images\"", "]", ":", "\n", "                ", "imgs", "[", "img", "[", "\"id\"", "]", "]", "=", "img", "\n", "imgNameToId", "[", "img", "[", "\"file_name\"", "]", "]", "=", "img", "[", "\"id\"", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.coco.CoCoAnn.setCategories": [[83, 85], ["None"], "methods", ["None"], ["                    ", "imgId", "=", "int", "(", "img", "[", "\"id\"", "]", ")", "\n", "self", ".", "maxImgId", "=", "max", "(", "self", ".", "maxImgId", ",", "imgId", ")", "\n", "", "except", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.coco.CoCoAnn.addCategory": [[86, 93], ["coco.CoCoAnn.dict[].append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["                    ", "pass", "\n", "\n", "", "", "", "if", "\"categories\"", "in", "self", ".", "dataset", ":", "\n", "            ", "for", "cat", "in", "self", ".", "dataset", "[", "\"categories\"", "]", ":", "\n", "                ", "cats", "[", "cat", "[", "\"id\"", "]", "]", "=", "cat", "\n", "\n", "", "", "if", "\"annotations\"", "in", "self", ".", "dataset", "and", "\"categories\"", "in", "self", ".", "dataset", ":", "\n", "            ", "for", "ann", "in", "self", ".", "dataset", "[", "\"annotations\"", "]", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.coco.CoCoAnn.setLicenses": [[94, 96], ["None"], "methods", ["None"], ["                ", "catToImgs", "[", "ann", "[", "\"category_id\"", "]", "]", ".", "append", "(", "ann", "[", "\"image_id\"", "]", ")", "\n", "# TODO: read license", "\n", "", "", "print", "(", "\"index created!\"", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.coco.CoCoAnn.addLicense": [[97, 104], ["coco.CoCoAnn.dict[].append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["\n", "self", ".", "anns", "=", "anns", "\n", "self", ".", "imgToAnns", "=", "imgToAnns", "\n", "self", ".", "catToImgs", "=", "catToImgs", "\n", "self", ".", "imgNameToId", "=", "imgNameToId", "\n", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "cats", "=", "cats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.coco.CoCoAnn.addImage": [[105, 127], ["coco.CoCoAnn.dict[].append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "setInfo", "(", "\n", "self", ",", "\n", "year", ":", "int", "=", "\"\"", ",", "\n", "version", ":", "str", "=", "\"\"", ",", "\n", "description", ":", "str", "=", "\"\"", ",", "\n", "contributor", ":", "str", "=", "\"\"", ",", "\n", "url", ":", "str", "=", "\"\"", ",", "\n", "date_created", ":", "datetime", "=", "\"\"", ",", ")", ":", "\n", "        ", "self", ".", "dataset", "[", "\"info\"", "]", "=", "{", "\n", "\"year\"", ":", "year", ",", "\n", "\"version\"", ":", "version", ",", "\n", "\"description\"", ":", "description", ",", "\n", "\"contributor\"", ":", "contributor", ",", "\n", "\"url\"", ":", "url", ",", "\n", "\"date_created\"", ":", "date_created", ",", "\n", "}", "\n", "\n", "", "def", "addCategory", "(", "\n", "self", ",", "\n", "id", ":", "int", ",", "\n", "name", ":", "str", ",", "\n", "color", ":", "list", ",", "\n", "supercategory", ":", "str", "=", "\"\"", ",", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.coco.CoCoAnn.addAnnotation": [[128, 144], ["None"], "methods", ["None"], ["        ", "cat", "=", "{", "\n", "\"id\"", ":", "id", ",", "\n", "\"name\"", ":", "name", ",", "\n", "\"color\"", ":", "color", ",", "\n", "\"supercategory\"", ":", "supercategory", ",", "\n", "}", "\n", "self", ".", "cats", "[", "id", "]", "=", "cat", "\n", "self", ".", "dataset", "[", "\"categories\"", "]", ".", "append", "(", "cat", ")", "\n", "\n", "", "def", "updateCategory", "(", "\n", "self", ",", "\n", "id", ":", "int", ",", "\n", "name", ":", "str", ",", "\n", "color", ":", "list", ",", "\n", "supercategory", ":", "str", "=", "\"\"", ",", ")", ":", "\n", "        ", "cat", "=", "{", "\n", "\"id\"", ":", "id", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.get_polygon": [[28, 84], ["cv2.findContours", "cv2.__version__.split", "len", "enumerate", "range", "list", "print", "zip", "polygon.approx_poly_DIY", "list.append", "relas.append", "len", "filter", "cv2.approxPolyDP", "regularization.boundary_regularization", "polygon.append", "range", "cv2.arcLength", "isinstance", "isinstance", "len", "polygon.__find_min_point", "polygon.__change_list", "polygon.__change_list", "polygons[].extend", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.approx_poly_DIY", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rs_regularization.boundary_regularization", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__find_min_point", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__change_list", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__change_list"], ["borderColor", "=", "[", "0", ",", "255", ",", "0", "]", ",", "\n", "opacity", "=", "0.5", ",", "\n", "cocoIndex", "=", "None", ",", "\n", "parent", "=", "None", ",", ")", ":", "\n", "        ", "super", "(", "PolygonAnnotation", ",", "self", ")", ".", "__init__", "(", "parent", ")", "\n", "self", ".", "points", "=", "[", "]", "\n", "self", ".", "m_items", "=", "[", "]", "\n", "self", ".", "m_lines", "=", "[", "]", "\n", "self", ".", "coco_id", "=", "cocoIndex", "\n", "self", ".", "height", ",", "self", ".", "width", "=", "shape", "[", ":", "2", "]", "\n", "self", ".", "delPolygon", "=", "delPolygon", "\n", "self", ".", "setDirty", "=", "setDirty", "\n", "\n", "self", ".", "labelIndex", "=", "labelIndex", "\n", "self", ".", "item_hovering", "=", "False", "\n", "self", ".", "polygon_hovering", "=", "False", "\n", "self", ".", "anning", "=", "False", "# \u662f\u5426\u6807\u6ce8\u6a21\u5f0f", "\n", "self", ".", "line_hovering", "=", "False", "\n", "self", ".", "noMove", "=", "False", "\n", "self", ".", "last_focse", "=", "False", "# \u4e4b\u524d\u662f\u4e0d\u662f\u7126\u70b9\u5728", "\n", "\n", "self", ".", "setZValue", "(", "10", ")", "\n", "self", ".", "opacity", "=", "opacity", "\n", "i", "=", "insideColor", "\n", "self", ".", "insideColor", "=", "QtGui", ".", "QColor", "(", "i", "[", "0", "]", ",", "i", "[", "1", "]", ",", "i", "[", "2", "]", ")", "\n", "self", ".", "insideColor", ".", "setAlphaF", "(", "opacity", ")", "\n", "self", ".", "halfInsideColor", "=", "QtGui", ".", "QColor", "(", "i", "[", "0", "]", ",", "i", "[", "1", "]", ",", "i", "[", "2", "]", ")", "\n", "self", ".", "halfInsideColor", ".", "setAlphaF", "(", "opacity", "/", "2", ")", "\n", "self", ".", "setBrush", "(", "self", ".", "halfInsideColor", ")", "\n", "b", "=", "borderColor", "\n", "self", ".", "borderColor", "=", "QtGui", ".", "QColor", "(", "b", "[", "0", "]", ",", "b", "[", "1", "]", ",", "b", "[", "2", "]", ")", "\n", "self", ".", "borderColor", ".", "setAlphaF", "(", "0.8", ")", "\n", "self", ".", "setPen", "(", "QtGui", ".", "QPen", "(", "self", ".", "borderColor", ")", ")", "\n", "self", ".", "setAcceptHoverEvents", "(", "True", ")", "\n", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsSelectable", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsMovable", ",", "False", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemSendsGeometryChanges", ",", "True", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsFocusable", ",", "True", ")", "\n", "\n", "self", ".", "setCursor", "(", "QtGui", ".", "QCursor", "(", "QtCore", ".", "Qt", ".", "PointingHandCursor", ")", ")", "\n", "\n", "# persistent this bbox instance and update when needed", "\n", "self", ".", "bbox", "=", "BBoxAnnotation", "(", "labelIndex", ",", "self", ",", "cocoIndex", ",", "self", ")", "\n", "self", ".", "bbox", ".", "setParentItem", "(", "self", ")", "\n", "\n", "", "@", "property", "\n", "def", "scnenePoints", "(", "self", ")", ":", "\n", "        ", "points", "=", "[", "]", "\n", "for", "p", "in", "self", ".", "points", ":", "\n", "            ", "p", "=", "self", ".", "mapToScene", "(", "p", ")", "\n", "points", ".", "append", "(", "[", "p", ".", "x", "(", ")", ",", "p", ".", "y", "(", ")", "]", ")", "\n", "", "return", "points", "\n", "\n", "", "def", "setAnning", "(", "self", ",", "isAnning", "=", "True", ")", ":", "\n", "        ", "if", "isAnning", ":", "\n", "            ", "self", ".", "setAcceptHoverEvents", "(", "False", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__change_list": [[86, 94], ["polygons.extend", "polygons.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["self", ".", "polygon_hovering", "=", "False", "\n", "self", ".", "anning", "=", "True", "\n", "self", ".", "setBrush", "(", "QtGui", ".", "QBrush", "(", "QtCore", ".", "Qt", ".", "NoBrush", ")", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsSelectable", ",", "False", ")", "\n", "# self.setFlag(QtWidgets.QGraphicsItem.ItemIsMovable, False)", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemSendsGeometryChanges", ",", "\n", "False", ")", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsFocusable", ",", "False", ")", "\n", "self", ".", "setCursor", "(", "QtGui", ".", "QCursor", "(", "QtCore", ".", "Qt", ".", "ArrowCursor", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__find_min_point": [[96, 109], ["range", "len", "range", "len", "math.sqrt"], "function", ["None"], ["                ", "line", ".", "setAnning", "(", "False", ")", "\n", "", "for", "grip", "in", "self", ".", "m_items", ":", "\n", "                ", "grip", ".", "setAnning", "(", "False", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "setAcceptHoverEvents", "(", "True", ")", "\n", "self", ".", "anning", "=", "False", "\n", "if", "self", ".", "last_focse", ":", "\n", "                ", "self", ".", "polygon_hovering", "=", "True", "\n", "self", ".", "setBrush", "(", "self", ".", "insideColor", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "setBrush", "(", "self", ".", "halfInsideColor", ")", "\n", "", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemIsSelectable", ",", "True", ")", "\n", "# self.setFlag(QtWidgets.QGraphicsItem.ItemIsMovable, True)", "\n", "self", ".", "setFlag", "(", "QtWidgets", ".", "QGraphicsItem", ".", "ItemSendsGeometryChanges", ",", "True", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_ang": [[112, 123], ["math.sqrt", "math.sqrt", "math.sqrt", "math.degrees", "math.acos"], "function", ["None"], ["for", "line", "in", "self", ".", "m_lines", ":", "\n", "                ", "line", ".", "setAnning", "(", "True", ")", "\n", "", "for", "grip", "in", "self", ".", "m_items", ":", "\n", "                ", "grip", ".", "setAnning", "(", "True", ")", "\n", "\n", "", "", "", "def", "addPointMiddle", "(", "self", ",", "lineIdx", ",", "point", ")", ":", "\n", "        ", "gripItem", "=", "GripItem", "(", "self", ",", "lineIdx", "+", "1", ",", "self", ".", "borderColor", ",", "\n", "(", "self", ".", "height", ",", "self", ".", "width", ")", ")", "\n", "gripItem", ".", "setEnabled", "(", "False", ")", "\n", "gripItem", ".", "setPos", "(", "point", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "gripItem", ")", "\n", "gripItem", ".", "updateSize", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_dist": [[126, 128], ["math.sqrt"], "function", ["None"], ["            ", "grip", ".", "m_index", "+=", "1", "\n", "", "self", ".", "m_items", ".", "insert", "(", "lineIdx", "+", "1", ",", "gripItem", ")", "\n", "self", ".", "points", ".", "insert", "(", "lineIdx", "+", "1", ",", "self", ".", "mapFromScene", "(", "point", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.approx_poly_DIY": [[131, 177], ["numpy.array().reshape", "len", "len", "range", "polygon.__cal_ang", "numpy.array", "polygon.__cal_dist", "polygon.__cal_ang", "polygon.__cal_ang", "abs", "abs", "len", "len", "len", "polygon.__cal_dist", "polygon.__cal_dist", "polygon.__cal_dist", "polygon.__cal_dist", "len", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_ang", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_dist", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_ang", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_ang", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_dist", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_dist", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_dist", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.polygon.__cal_dist"], ["for", "line", "in", "self", ".", "m_lines", "[", "lineIdx", "+", "1", ":", "]", ":", "\n", "            ", "line", ".", "idx", "+=", "1", "\n", "", "line", "=", "QtCore", ".", "QLineF", "(", "self", ".", "mapToScene", "(", "self", ".", "points", "[", "lineIdx", "]", ")", ",", "point", ")", "\n", "self", ".", "m_lines", "[", "lineIdx", "]", ".", "setLine", "(", "line", ")", "\n", "lineItem", "=", "LineItem", "(", "self", ",", "lineIdx", "+", "1", ",", "self", ".", "borderColor", ")", "\n", "line", "=", "QtCore", ".", "QLineF", "(", "\n", "point", ",", "\n", "self", ".", "mapToScene", "(", "self", ".", "points", "[", "(", "lineIdx", "+", "2", ")", "%", "len", "(", "self", ")", "]", ")", ",", ")", "\n", "lineItem", ".", "setLine", "(", "line", ")", "\n", "self", ".", "m_lines", ".", "insert", "(", "lineIdx", "+", "1", ",", "lineItem", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "lineItem", ")", "\n", "lineItem", ".", "updateWidth", "(", ")", "\n", "\n", "", "def", "addPointLast", "(", "self", ",", "p", ")", ":", "\n", "        ", "grip", "=", "GripItem", "(", "self", ",", "\n", "len", "(", "self", ")", ",", "self", ".", "borderColor", ",", "(", "self", ".", "height", ",", "self", ".", "width", ")", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "grip", ")", "\n", "self", ".", "m_items", ".", "append", "(", "grip", ")", "\n", "grip", ".", "updateSize", "(", ")", "\n", "grip", ".", "setPos", "(", "p", ")", "\n", "if", "len", "(", "self", ")", "==", "0", ":", "\n", "            ", "line", "=", "LineItem", "(", "self", ",", "len", "(", "self", ")", ",", "self", ".", "borderColor", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "line", ")", "\n", "self", ".", "m_lines", ".", "append", "(", "line", ")", "\n", "line", ".", "setLine", "(", "QtCore", ".", "QLineF", "(", "p", ",", "p", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "m_lines", "[", "-", "1", "]", ".", "setLine", "(", "QtCore", ".", "QLineF", "(", "self", ".", "points", "[", "-", "1", "]", ",", "p", ")", ")", "\n", "line", "=", "LineItem", "(", "self", ",", "len", "(", "self", ")", ",", "self", ".", "borderColor", ")", "\n", "self", ".", "scene", "(", ")", ".", "addItem", "(", "line", ")", "\n", "self", ".", "m_lines", ".", "append", "(", "line", ")", "\n", "line", ".", "setLine", "(", "QtCore", ".", "QLineF", "(", "p", ",", "self", ".", "points", "[", "0", "]", ")", ")", "\n", "\n", "", "self", ".", "points", ".", "append", "(", "p", ")", "\n", "self", ".", "setPolygon", "(", "QtGui", ".", "QPolygonF", "(", "self", ".", "points", ")", ")", "\n", "self", ".", "bbox", ".", "update", "(", ")", "\n", "\n", "", "def", "remove", "(", "self", ")", ":", "\n", "        ", "for", "grip", "in", "self", ".", "m_items", ":", "\n", "            ", "self", ".", "scene", "(", ")", ".", "removeItem", "(", "grip", ")", "\n", "", "for", "line", "in", "self", ".", "m_lines", ":", "\n", "            ", "self", ".", "scene", "(", ")", ".", "removeItem", "(", "line", ")", "\n", "", "while", "len", "(", "self", ".", "m_items", ")", "!=", "0", ":", "\n", "            ", "self", ".", "m_items", ".", "pop", "(", ")", "\n", "", "while", "len", "(", "self", ".", "m_lines", ")", "!=", "0", ":", "\n", "            ", "self", ".", "m_lines", ".", "pop", "(", ")", "\n", "", "self", ".", "scene", "(", ")", ".", "polygon_items", ".", "remove", "(", "self", ")", "\n", "self", ".", "scene", "(", ")", ".", "removeItem", "(", "self", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.Label.__init__": [[22, 26], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "idx", "=", "None", ",", "name", "=", "None", ",", "color", "=", "None", ")", ":", "\n", "        ", "self", ".", "idx", "=", "idx", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "color", "=", "color", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.Label.__repr__": [[27, 29], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "f\"{self.idx} {self.name} {self.color}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.__init__": [[32, 38], ["lab.get", "label.LabelList.add", "colorMap.get_color"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.colormap.ColorMap.get_color"], ["    ", "def", "__init__", "(", "self", ",", "labels", ":", "dict", "=", "None", ")", ":", "\n", "        ", "self", ".", "labelList", "=", "[", "]", "\n", "if", "labels", "is", "not", "None", ":", "\n", "            ", "for", "lab", "in", "labels", ":", "\n", "                ", "color", "=", "lab", ".", "get", "(", "\"color\"", ",", "colorMap", ".", "get_color", "(", ")", ")", "\n", "self", ".", "add", "(", "lab", "[", "\"id\"", "]", ",", "lab", "[", "\"name\"", "]", ",", "color", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.add": [[39, 41], ["label.LabelList.labelList.append", "label.Label"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "def", "add", "(", "self", ",", "idx", ",", "name", ",", "color", ")", ":", "\n", "        ", "self", ".", "labelList", ".", "append", "(", "Label", "(", "idx", ",", "name", ",", "color", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove": [[42, 47], ["enumerate"], "methods", ["None"], ["", "def", "remove", "(", "self", ",", "index", ")", ":", "\n", "        ", "for", "idx", ",", "lab", "in", "enumerate", "(", "self", ".", "labelList", ")", ":", "\n", "            ", "if", "lab", ".", "idx", "==", "index", ":", "\n", "                ", "del", "self", ".", "labelList", "[", "idx", "]", "\n", "break", "\n", "# del self.labelList[index]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.clear": [[49, 51], ["None"], "methods", ["None"], ["", "", "", "def", "clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "labelList", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.toint": [[52, 62], ["isinstance", "range", "int", "len", "int"], "methods", ["None"], ["", "def", "toint", "(", "self", ",", "seq", ")", ":", "\n", "        ", "if", "isinstance", "(", "seq", ",", "list", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "seq", ")", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "seq", "[", "i", "]", "=", "int", "(", "seq", "[", "i", "]", ")", "\n", "", "except", "ValueError", ":", "\n", "                    ", "pass", "\n", "", "", "", "else", ":", "\n", "            ", "seq", "=", "int", "(", "seq", ")", "\n", "", "return", "seq", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.importLabel": [[63, 77], ["os.exists", "os.exists", "open", "f.readlines", "lab.replace().strip().split.replace().strip().split.replace().strip().split", "Label.Label", "labelList.append", "print", "Label.LabelList.toint", "str", "Label.LabelList.toint", "lab.replace().strip().split.replace().strip().split.replace().strip", "len", "len", "lab.replace().strip().split.replace().strip().split.replace"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.toint", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.toint"], ["", "def", "importLabel", "(", "self", ",", "path", ")", ":", "\n", "        ", "if", "not", "osp", ".", "exists", "(", "path", ")", ":", "\n", "            ", "return", "[", "]", "\n", "", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "labels", "=", "f", ".", "readlines", "(", ")", "\n", "", "labelList", "=", "[", "]", "\n", "for", "lab", "in", "labels", ":", "\n", "            ", "lab", "=", "lab", ".", "replace", "(", "\"\\n\"", ",", "\"\"", ")", ".", "strip", "(", "\" \"", ")", ".", "split", "(", "\" \"", ")", "\n", "if", "len", "(", "lab", ")", "!=", "2", "and", "len", "(", "lab", ")", "!=", "5", ":", "\n", "                ", "print", "(", "f\"{lab} \u6807\u7b7e\u4e0d\u5408\u6cd5\"", ")", "\n", "continue", "\n", "", "label", "=", "Label", "(", "self", ".", "toint", "(", "lab", "[", "0", "]", ")", ",", "str", "(", "lab", "[", "1", "]", ")", ",", "self", ".", "toint", "(", "lab", "[", "2", ":", "]", ")", ")", "\n", "labelList", ".", "append", "(", "label", ")", "\n", "", "self", ".", "labelList", "=", "labelList", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.exportLabel": [[78, 89], ["print", "open", "os.exists", "os.exists", "print", "print", "range", "print", "os.dirname", "os.dirname", "print"], "methods", ["None"], ["", "def", "exportLabel", "(", "self", ",", "path", ")", ":", "\n", "        ", "if", "not", "path", "or", "not", "osp", ".", "exists", "(", "osp", ".", "dirname", "(", "path", ")", ")", ":", "\n", "            ", "print", "(", "\"label path don't exist\"", ")", "\n", "return", "\n", "", "with", "open", "(", "path", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "for", "label", "in", "self", ".", "labelList", ":", "\n", "                ", "print", "(", "label", ".", "idx", ",", "end", "=", "\" \"", ",", "file", "=", "f", ")", "\n", "print", "(", "label", ".", "name", ",", "end", "=", "\" \"", ",", "file", "=", "f", ")", "\n", "for", "idx", "in", "range", "(", "3", ")", ":", "\n", "                    ", "print", "(", "label", ".", "color", "[", "idx", "]", ",", "end", "=", "\" \"", ",", "file", "=", "f", ")", "\n", "", "print", "(", "file", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.getLabelById": [[90, 94], ["None"], "methods", ["None"], ["", "", "", "def", "getLabelById", "(", "self", ",", "labelIdx", ")", ":", "\n", "        ", "for", "lab", "in", "self", ".", "labelList", ":", "\n", "            ", "if", "lab", ".", "idx", "==", "labelIdx", ":", "\n", "                ", "return", "lab", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.__repr__": [[95, 97], ["str"], "methods", ["None"], ["", "", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "labelList", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.__getitem__": [[98, 100], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "labelList", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.__len__": [[101, 103], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "labelList", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.colors": [[104, 110], ["cols.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "@", "property", "\n", "def", "colors", "(", "self", ")", ":", "\n", "        ", "cols", "=", "[", "]", "\n", "for", "lab", "in", "self", ".", "labelList", ":", "\n", "            ", "cols", ".", "append", "(", "lab", ".", "color", ")", "\n", "", "return", "cols", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.__init__": [[25, 37], ["object.__init__", "collections.defaultdict", "open", "f.readlines", "os.join", "txt.split", "strs[].strip", "strs[].strip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "is_trans", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "trans_dict", "=", "defaultdict", "(", "dict", ")", "\n", "with", "open", "(", "\n", "osp", ".", "join", "(", "pjpath", ",", "\"config/zh_CN.EN\"", ")", ",", "\"r\"", ",", "\n", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "texts", "=", "f", ".", "readlines", "(", ")", "\n", "for", "txt", "in", "texts", ":", "\n", "                ", "strs", "=", "txt", ".", "split", "(", "\"@\"", ")", "\n", "self", ".", "trans_dict", "[", "strs", "[", "0", "]", ".", "strip", "(", ")", "]", "=", "strs", "[", "1", "]", ".", "strip", "(", ")", "\n", "", "", "self", ".", "is_trans", "=", "is_trans", "\n", "self", ".", "youdao_url", "=", "\"http://fanyi.youdao.com/translate?&doctype=json&type=AUTO&i=\"", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.put": [[38, 46], ["str"], "methods", ["None"], ["", "def", "put", "(", "self", ",", "zh_CN", ")", ":", "\n", "        ", "if", "self", ".", "is_trans", "==", "False", ":", "\n", "            ", "return", "zh_CN", "\n", "", "else", ":", "\n", "            ", "try", ":", "\n", "                ", "return", "str", "(", "self", ".", "trans_dict", "[", "zh_CN", "]", ")", "\n", "", "except", ":", "\n", "                ", "return", "zh_CN", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.language.TransUI.tr": [[48, 57], ["requests.get", "json.loads", "str", "urllib.parse.quote"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "", "def", "tr", "(", "self", ",", "zh_CN", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "tr_url", "=", "self", ".", "youdao_url", "+", "parse", ".", "quote", "(", "zh_CN", ")", "\n", "response", "=", "requests", ".", "get", "(", "tr_url", ")", "\n", "js", "=", "json", ".", "loads", "(", "response", ".", "text", ")", "\n", "result_EN", "=", "js", "[", "\"translateResult\"", "]", "[", "0", "]", "[", "0", "]", "[", "\"tgt\"", "]", "\n", "return", "str", "(", "result_EN", ")", "\n", "", "except", ":", "\n", "            ", "return", "zh_CN", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.opath.check_cn": [[5, 8], ["re.compile", "re.compile.search"], "function", ["None"], ["def", "check_cn", "(", "path", ")", ":", "\n", "    ", "zh_model", "=", "re", ".", "compile", "(", "u'[\\u4e00-\\u9fa5]'", ")", "\n", "return", "zh_model", ".", "search", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.opath.normcase": [[11, 13], ["eval", "repr().replace", "repr"], "function", ["None"], ["", "def", "normcase", "(", "path", ")", ":", "\n", "    ", "return", "eval", "(", "repr", "(", "path", ")", ".", "replace", "(", "'\\\\\\\\'", ",", "'/'", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.__init__": [[85, 87], ["qt.struct.__dict__.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.__len__": [[88, 90], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append": [[91, 94], ["isinstance", "qt.struct.__dict__.update", "action.data"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], ["", "def", "append", "(", "self", ",", "action", ")", ":", "\n", "        ", "if", "isinstance", "(", "action", ",", "QtWidgets", ".", "QAction", ")", ":", "\n", "            ", "self", ".", "__dict__", ".", "update", "(", "{", "action", ".", "data", "(", ")", ":", "action", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.__iter__": [[95, 97], ["list().__iter__", "list", "qt.struct.__dict__.values"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.__iter__"], ["", "", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "list", "(", "self", ".", "__dict__", ".", "values", "(", ")", ")", ".", "__iter__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.__getitem__": [[98, 100], ["list", "qt.struct.__dict__.values"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "list", "(", "self", ".", "__dict__", ".", "values", "(", ")", ")", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get": [[101, 103], ["None"], "methods", ["None"], ["", "def", "get", "(", "self", ",", "name", ")", ":", "\n", "        ", "return", "self", ".", "__dict__", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newIcon": [[16, 24], ["os.join", "qtpy.QtGui.QIcon", "isinstance", "isinstance", "qtpy.QtGui.QPixmap", "QtGui.QPixmap.fill", "qtpy.QtGui.QIcon", "os.join", "qtpy.QtGui.QColor"], "function", ["None"], ["def", "newIcon", "(", "icon", ")", ":", "\n", "    ", "if", "isinstance", "(", "icon", ",", "list", ")", "or", "isinstance", "(", "icon", ",", "tuple", ")", ":", "\n", "        ", "pixmap", "=", "QtGui", ".", "QPixmap", "(", "100", ",", "100", ")", "\n", "c", "=", "icon", "\n", "pixmap", ".", "fill", "(", "QtGui", ".", "QColor", "(", "c", "[", "0", "]", ",", "c", "[", "1", "]", ",", "c", "[", "2", "]", ")", ")", "\n", "return", "QtGui", ".", "QIcon", "(", "pixmap", ")", "\n", "", "icons_dir", "=", "osp", ".", "join", "(", "here", ",", "\"../resource\"", ")", "\n", "return", "QtGui", ".", "QIcon", "(", "osp", ".", "join", "(", "\":/\"", ",", "icons_dir", ",", "f\"{icon}.png\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newButton": [[26, 33], ["qtpy.QtWidgets.QPushButton", "QtWidgets.QPushButton.setIcon", "QtWidgets.QPushButton.clicked.connect", "qt.newIcon"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newIcon"], ["", "def", "newButton", "(", "text", ",", "icon", "=", "None", ",", "slot", "=", "None", ")", ":", "\n", "    ", "b", "=", "QtWidgets", ".", "QPushButton", "(", "text", ")", "\n", "if", "icon", "is", "not", "None", ":", "\n", "        ", "b", ".", "setIcon", "(", "newIcon", "(", "icon", ")", ")", "\n", "", "if", "slot", "is", "not", "None", ":", "\n", "        ", "b", ".", "clicked", ".", "connect", "(", "slot", ")", "\n", "", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newAction": [[35, 68], ["qtpy.QtWidgets.QAction", "QtWidgets.QAction.setData", "shortcuts.get", "QtWidgets.QAction.setEnabled", "QtWidgets.QAction.setChecked", "QtWidgets.QAction.setIconText", "QtWidgets.QAction.setIcon", "isinstance", "QtWidgets.QAction.setToolTip", "QtWidgets.QAction.setStatusTip", "QtWidgets.QAction.triggered.connect", "QtWidgets.QAction.setCheckable", "text.replace", "qt.newIcon", "QtWidgets.QAction.setShortcuts", "QtWidgets.QAction.setShortcut"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.newIcon", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.shortcut.ShortcutWidget.setShortcut"], ["", "def", "newAction", "(", "\n", "parent", ",", "\n", "text", ",", "\n", "slot", "=", "None", ",", "\n", "shortcutName", "=", "None", ",", "\n", "icon", "=", "None", ",", "\n", "tip", "=", "None", ",", "\n", "checkable", "=", "False", ",", "\n", "enabled", "=", "True", ",", "\n", "checked", "=", "False", ",", ")", ":", "\n", "    ", "\"\"\"Create a new action and assign callbacks, shortcuts, etc.\"\"\"", "\n", "a", "=", "QtWidgets", ".", "QAction", "(", "text", ",", "parent", ")", "\n", "a", ".", "setData", "(", "shortcutName", ")", "\n", "# a = QtWidgets.QAction(\"\", parent)", "\n", "if", "icon", "is", "not", "None", ":", "\n", "        ", "a", ".", "setIconText", "(", "text", ".", "replace", "(", "\" \"", ",", "\"\\n\"", ")", ")", "\n", "a", ".", "setIcon", "(", "newIcon", "(", "icon", ")", ")", "\n", "", "shortcut", "=", "shortcuts", ".", "get", "(", "shortcutName", ",", "None", ")", "\n", "if", "shortcut", "is", "not", "None", ":", "\n", "        ", "if", "isinstance", "(", "shortcut", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "a", ".", "setShortcuts", "(", "shortcut", ")", "\n", "", "else", ":", "\n", "            ", "a", ".", "setShortcut", "(", "shortcut", ")", "\n", "", "", "if", "tip", "is", "not", "None", ":", "\n", "        ", "a", ".", "setToolTip", "(", "tip", ")", "\n", "a", ".", "setStatusTip", "(", "tip", ")", "\n", "", "if", "slot", "is", "not", "None", ":", "\n", "        ", "a", ".", "triggered", ".", "connect", "(", "slot", ")", "\n", "", "if", "checkable", ":", "\n", "        ", "a", ".", "setCheckable", "(", "True", ")", "\n", "", "a", ".", "setEnabled", "(", "enabled", ")", "\n", "a", ".", "setChecked", "(", "checked", ")", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.addActions": [[70, 78], ["widget.addSeparator", "isinstance", "widget.addMenu", "widget.addAction"], "function", ["None"], ["", "def", "addActions", "(", "widget", ",", "actions", ")", ":", "\n", "    ", "for", "action", "in", "actions", ":", "\n", "        ", "if", "action", "is", "None", ":", "\n", "            ", "widget", ".", "addSeparator", "(", ")", "\n", "", "elif", "isinstance", "(", "action", ",", "QtWidgets", ".", "QMenu", ")", ":", "\n", "            ", "widget", ".", "addMenu", "(", "action", ")", "\n", "", "else", ":", "\n", "            ", "widget", ".", "addAction", "(", "action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.labelValidator": [[80, 82], ["qtpy.QtGui.QRegExpValidator", "qtpy.QtCore.QRegExp"], "function", ["None"], ["", "", "", "def", "labelValidator", "(", ")", ":", "\n", "    ", "return", "QtGui", ".", "QRegExpValidator", "(", "QtCore", ".", "QRegExp", "(", "r\"^[^ \\t].+\"", ")", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.fmtShortcut": [[105, 108], ["text.split"], "function", ["None"], ["", "", "def", "fmtShortcut", "(", "text", ")", ":", "\n", "    ", "mod", ",", "key", "=", "text", ".", "split", "(", "\"+\"", ",", "1", ")", "\n", "return", "\"<b>%s</b>+<b>%s</b>\"", "%", "(", "mod", ",", "key", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_dims_with_exclusion": [[6, 12], ["list", "range", "list.remove"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove"], ["def", "get_dims_with_exclusion", "(", "dim", ",", "exclude", "=", "None", ")", ":", "\n", "    ", "dims", "=", "list", "(", "range", "(", "dim", ")", ")", "\n", "if", "exclude", "is", "not", "None", ":", "\n", "        ", "dims", ".", "remove", "(", "exclude", ")", "\n", "\n", "", "return", "dims", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.save_checkpoint": [[14, 37], ["paddle.save", "checkpoints_path.exists", "checkpoints_path.mkdir", "net.state_dict"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir"], ["", "def", "save_checkpoint", "(", "net", ",", "\n", "checkpoints_path", ",", "\n", "epoch", "=", "None", ",", "\n", "prefix", "=", "\"\"", ",", "\n", "verbose", "=", "True", ",", "\n", "multi_gpu", "=", "False", ")", ":", "\n", "    ", "if", "epoch", "is", "None", ":", "\n", "        ", "checkpoint_name", "=", "\"last_checkpoint.pdparams\"", "\n", "", "else", ":", "\n", "        ", "checkpoint_name", "=", "f\"{epoch:03d}.pdparams\"", "\n", "\n", "", "if", "prefix", ":", "\n", "        ", "checkpoint_name", "=", "f\"{prefix}_{checkpoint_name}\"", "\n", "\n", "", "if", "not", "checkpoints_path", ".", "exists", "(", ")", ":", "\n", "        ", "checkpoints_path", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "\n", "", "checkpoint_path", "=", "checkpoints_path", "/", "checkpoint_name", "\n", "\n", "net", "=", "net", ".", "module", "if", "multi_gpu", "else", "net", "\n", "\n", "# model_state = {'state_dict': net.state_dict(),'config': net.__dict__}", "\n", "paddle", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "checkpoint_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_bbox_from_mask": [[39, 46], ["numpy.any", "numpy.any", "numpy.where", "numpy.where"], "function", ["None"], ["", "def", "get_bbox_from_mask", "(", "mask", ")", ":", "\n", "    ", "rows", "=", "np", ".", "any", "(", "mask", ",", "axis", "=", "1", ")", "\n", "cols", "=", "np", ".", "any", "(", "mask", ",", "axis", "=", "0", ")", "\n", "rmin", ",", "rmax", "=", "np", ".", "where", "(", "rows", ")", "[", "0", "]", "[", "[", "0", ",", "-", "1", "]", "]", "\n", "cmin", ",", "cmax", "=", "np", ".", "where", "(", "cols", ")", "[", "0", "]", "[", "[", "0", ",", "-", "1", "]", "]", "\n", "\n", "return", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.expand_bbox": [[48, 64], ["int", "int", "int", "int", "max", "max", "round", "round", "round", "round"], "function", ["None"], ["", "def", "expand_bbox", "(", "bbox", ",", "expand_ratio", ",", "min_crop_size", "=", "None", ")", ":", "\n", "    ", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "=", "bbox", "\n", "rcenter", "=", "0.5", "*", "(", "rmin", "+", "rmax", ")", "\n", "ccenter", "=", "0.5", "*", "(", "cmin", "+", "cmax", ")", "\n", "height", "=", "expand_ratio", "*", "(", "rmax", "-", "rmin", "+", "1", ")", "\n", "width", "=", "expand_ratio", "*", "(", "cmax", "-", "cmin", "+", "1", ")", "\n", "if", "min_crop_size", "is", "not", "None", ":", "\n", "        ", "height", "=", "max", "(", "height", ",", "min_crop_size", ")", "\n", "width", "=", "max", "(", "width", ",", "min_crop_size", ")", "\n", "\n", "", "rmin", "=", "int", "(", "round", "(", "rcenter", "-", "0.5", "*", "height", ")", ")", "\n", "rmax", "=", "int", "(", "round", "(", "rcenter", "+", "0.5", "*", "height", ")", ")", "\n", "cmin", "=", "int", "(", "round", "(", "ccenter", "-", "0.5", "*", "width", ")", ")", "\n", "cmax", "=", "int", "(", "round", "(", "ccenter", "+", "0.5", "*", "width", ")", ")", "\n", "\n", "return", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.clamp_bbox": [[66, 72], ["max", "min", "max", "min"], "function", ["None"], ["", "def", "clamp_bbox", "(", "bbox", ",", "rmin", ",", "rmax", ",", "cmin", ",", "cmax", ")", ":", "\n", "    ", "return", "(", "\n", "max", "(", "rmin", ",", "bbox", "[", "0", "]", ")", ",", "\n", "min", "(", "rmax", ",", "bbox", "[", "1", "]", ")", ",", "\n", "max", "(", "cmin", ",", "bbox", "[", "2", "]", ")", ",", "\n", "min", "(", "cmax", ",", "bbox", "[", "3", "]", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_bbox_iou": [[74, 78], ["misc.get_segments_iou", "misc.get_segments_iou"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_segments_iou", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_segments_iou"], ["", "def", "get_bbox_iou", "(", "b1", ",", "b2", ")", ":", "\n", "    ", "h_iou", "=", "get_segments_iou", "(", "b1", "[", ":", "2", "]", ",", "b2", "[", ":", "2", "]", ")", "\n", "w_iou", "=", "get_segments_iou", "(", "b1", "[", "2", ":", "4", "]", ",", "b2", "[", "2", ":", "4", "]", ")", "\n", "return", "h_iou", "*", "w_iou", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_segments_iou": [[80, 86], ["max", "max", "min", "max", "max", "min"], "function", ["None"], ["", "def", "get_segments_iou", "(", "s1", ",", "s2", ")", ":", "\n", "    ", "a", ",", "b", "=", "s1", "\n", "c", ",", "d", "=", "s2", "\n", "intersection", "=", "max", "(", "0", ",", "min", "(", "b", ",", "d", ")", "-", "max", "(", "a", ",", "c", ")", "+", "1", ")", "\n", "union", "=", "max", "(", "1e-6", ",", "max", "(", "b", ",", "d", ")", "-", "min", "(", "a", ",", "c", ")", "+", "1", ")", "\n", "return", "intersection", "/", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.misc.get_labels_with_sizes": [[88, 93], ["numpy.bincount", "[].tolist", "x.flatten", "obj_sizes[].tolist", "numpy.nonzero"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "def", "get_labels_with_sizes", "(", "x", ")", ":", "\n", "    ", "obj_sizes", "=", "np", ".", "bincount", "(", "x", ".", "flatten", "(", ")", ")", "\n", "labels", "=", "np", ".", "nonzero", "(", "obj_sizes", ")", "[", "0", "]", ".", "tolist", "(", ")", "\n", "labels", "=", "[", "x", "for", "x", "in", "labels", "if", "x", "!=", "0", "]", "\n", "return", "labels", ",", "obj_sizes", "[", "labels", "]", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.serialize": [[7, 39], ["list", "functools.wraps", "copy.deepcopy", "zip", "set", "get_default_params().items", "list", "setattr", "init", "inspect.signature", "serialization.get_classname", "dict", "copy.deepcopy.keys", "copy.deepcopy.items", "inspect.isclass", "serialization.get_default_params", "serialization.get_classname"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_classname", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_default_params", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_classname"], ["def", "serialize", "(", "init", ")", ":", "\n", "    ", "parameters", "=", "list", "(", "inspect", ".", "signature", "(", "init", ")", ".", "parameters", ")", "\n", "\n", "@", "wraps", "(", "init", ")", "\n", "def", "new_init", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "params", "=", "deepcopy", "(", "kwargs", ")", "\n", "for", "pname", ",", "value", "in", "zip", "(", "parameters", "[", "1", ":", "]", ",", "args", ")", ":", "\n", "            ", "params", "[", "pname", "]", "=", "value", "\n", "\n", "", "config", "=", "{", "\"class\"", ":", "get_classname", "(", "self", ".", "__class__", ")", ",", "\"params\"", ":", "dict", "(", ")", "}", "\n", "specified_params", "=", "set", "(", "params", ".", "keys", "(", ")", ")", "\n", "\n", "for", "pname", ",", "param", "in", "get_default_params", "(", "self", ".", "__class__", ")", ".", "items", "(", ")", ":", "\n", "            ", "if", "pname", "not", "in", "params", ":", "\n", "                ", "params", "[", "pname", "]", "=", "param", ".", "default", "\n", "\n", "", "", "for", "name", ",", "value", "in", "list", "(", "params", ".", "items", "(", ")", ")", ":", "\n", "            ", "param_type", "=", "\"builtin\"", "\n", "if", "inspect", ".", "isclass", "(", "value", ")", ":", "\n", "                ", "param_type", "=", "\"class\"", "\n", "value", "=", "get_classname", "(", "value", ")", "\n", "\n", "", "config", "[", "\"params\"", "]", "[", "name", "]", "=", "{", "\n", "\"type\"", ":", "param_type", ",", "\n", "\"value\"", ":", "value", ",", "\n", "\"specified\"", ":", "name", "in", "specified_params", ",", "\n", "}", "\n", "\n", "", "setattr", "(", "self", ",", "\"_config\"", ",", "config", ")", "\n", "init", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "return", "new_init", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.load_model": [[41, 63], ["serialization.get_class_from_str", "serialization.get_default_params", "dict", "config[].items", "dict.update", "get_class_from_str.", "serialization.get_class_from_str"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_class_from_str", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_default_params", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_class_from_str"], ["", "def", "load_model", "(", "config", ",", "**", "kwargs", ")", ":", "\n", "    ", "model_class", "=", "get_class_from_str", "(", "config", "[", "\"class\"", "]", ")", "\n", "model_default_params", "=", "get_default_params", "(", "model_class", ")", "\n", "\n", "model_args", "=", "dict", "(", ")", "\n", "for", "pname", ",", "param", "in", "config", "[", "\"params\"", "]", ".", "items", "(", ")", ":", "\n", "        ", "value", "=", "param", "[", "\"value\"", "]", "\n", "if", "param", "[", "\"type\"", "]", "==", "\"class\"", ":", "\n", "            ", "value", "=", "get_class_from_str", "(", "value", ")", "\n", "\n", "", "if", "pname", "not", "in", "model_default_params", "and", "not", "param", "[", "\"specified\"", "]", ":", "\n", "            ", "continue", "\n", "\n", "", "assert", "pname", "in", "model_default_params", "\n", "if", "not", "param", "[", "\"specified\"", "]", "and", "model_default_params", "[", "\n", "pname", "]", ".", "default", "==", "value", ":", "\n", "            ", "continue", "\n", "", "model_args", "[", "pname", "]", "=", "value", "\n", "\n", "", "model_args", ".", "update", "(", "kwargs", ")", "\n", "\n", "return", "model_class", "(", "**", "model_args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_config_repr": [[65, 76], ["config[].items", "value.split", "str"], "function", ["None"], ["", "def", "get_config_repr", "(", "config", ")", ":", "\n", "    ", "config_str", "=", "f'Model: {config[\"class\"]}\\n'", "\n", "for", "pname", ",", "param", "in", "config", "[", "\"params\"", "]", ".", "items", "(", ")", ":", "\n", "        ", "value", "=", "param", "[", "\"value\"", "]", "\n", "if", "param", "[", "\"type\"", "]", "==", "\"class\"", ":", "\n", "            ", "value", "=", "value", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "\n", "", "param_str", "=", "f\"{pname:<22} = {str(value):<12}\"", "\n", "if", "not", "param", "[", "\"specified\"", "]", ":", "\n", "            ", "param_str", "+=", "\" (default)\"", "\n", "", "config_str", "+=", "param_str", "+", "\"\\n\"", "\n", "", "return", "config_str", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_default_params": [[78, 90], ["dict", "some_class.mro", "mclass_params.items", "inspect.signature"], "function", ["None"], ["", "def", "get_default_params", "(", "some_class", ")", ":", "\n", "    ", "params", "=", "dict", "(", ")", "\n", "for", "mclass", "in", "some_class", ".", "mro", "(", ")", ":", "\n", "        ", "if", "mclass", "is", "nn", ".", "Layer", "or", "mclass", "is", "object", ":", "\n", "            ", "continue", "\n", "\n", "", "mclass_params", "=", "inspect", ".", "signature", "(", "mclass", ".", "__init__", ")", ".", "parameters", "\n", "for", "pname", ",", "param", "in", "mclass_params", ".", "items", "(", ")", ":", "\n", "            ", "if", "param", ".", "default", "!=", "param", ".", "empty", "and", "pname", "not", "in", "params", ":", "\n", "                ", "params", "[", "pname", "]", "=", "param", "\n", "\n", "", "", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_classname": [[92, 98], ["None"], "function", ["None"], ["", "def", "get_classname", "(", "cls", ")", ":", "\n", "    ", "module", "=", "cls", ".", "__module__", "\n", "name", "=", "cls", ".", "__qualname__", "\n", "if", "module", "is", "not", "None", "and", "module", "!=", "\"__builtin__\"", ":", "\n", "        ", "name", "=", "module", "+", "\".\"", "+", "name", "\n", "", "return", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.serialization.get_class_from_str": [[100, 106], ["class_str.split", "__import__", "getattr"], "function", ["None"], ["", "def", "get_class_from_str", "(", "class_str", ")", ":", "\n", "    ", "components", "=", "class_str", ".", "split", "(", "\".\"", ")", "\n", "mod", "=", "__import__", "(", "\".\"", ".", "join", "(", "components", "[", ":", "-", "1", "]", ")", ")", "\n", "for", "comp", "in", "components", "[", "1", ":", "]", ":", "\n", "        ", "mod", "=", "getattr", "(", "mod", ",", "comp", ")", "\n", "", "return", "mod", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.__init__": [[6, 9], ["dict"], "methods", ["None"], ["#", "\n", "#    http://www.apache.org/licenses/LICENSE-2.0", "\n", "#", "\n", "# Unless required by applicable law or agreed to in writing, software", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.__len__": [[10, 12], ["len"], "methods", ["None"], ["# distributed under the License is distributed on an \"AS IS\" BASIS,", "\n", "# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "\n", "# See the License for the specific language governing permissions and", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.__repr__": [[13, 16], ["list", "manager.ComponentManager._components_dict.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["# limitations under the License.", "\n", "\n", "import", "inspect", "\n", "from", "collections", ".", "abc", "import", "Sequence", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.__getitem__": [[17, 25], ["isinstance", "manager.ComponentManager._components_dict.keys", "KeyError", "len", "KeyError", "list", "manager.ComponentManager._components_dict.values", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["\n", "import", "warnings", "\n", "\n", "\n", "class", "ComponentManager", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.__iter__": [[26, 29], ["manager.ComponentManager._components_dict.values"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys": [[30, 32], ["list", "manager.ComponentManager._components_dict.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.idx": [[33, 38], ["enumerate", "KeyError", "manager.ComponentManager.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.components_dict": [[39, 42], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.name": [[43, 46], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager._add_single_component": [[47, 62], ["TypeError", "manager.ComponentManager._components_dict.keys", "KeyError", "inspect.isclass", "inspect.isfunction", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.add_component": [[63, 73], ["isinstance", "manager.ComponentManager._add_single_component", "manager.ComponentManager._add_single_component"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager._add_single_component", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager._add_single_component"], ["\n", "\n", "def", "__init__", "(", "self", ",", "name", "=", "None", ")", ":", "\n", "        ", "self", ".", "_components_dict", "=", "dict", "(", ")", "\n", "self", ".", "_name", "=", "name", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_components_dict", ")", "\n", "\n", "", "def", "__repr__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.visualize_instances": [[7, 27], ["vis.get_palette", "palette[].astype", "imask.max", "vis.get_boundaries", "tresult.astype.astype", "result.astype.astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.get_palette", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.get_boundaries"], ["def", "visualize_instances", "(", "imask", ",", "\n", "bg_color", "=", "255", ",", "\n", "boundaries_color", "=", "None", ",", "\n", "boundaries_width", "=", "1", ",", "\n", "boundaries_alpha", "=", "0.8", ")", ":", "\n", "    ", "num_objects", "=", "imask", ".", "max", "(", ")", "+", "1", "\n", "palette", "=", "get_palette", "(", "num_objects", ")", "\n", "if", "bg_color", "is", "not", "None", ":", "\n", "        ", "palette", "[", "0", "]", "=", "bg_color", "\n", "\n", "", "result", "=", "palette", "[", "imask", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "if", "boundaries_color", "is", "not", "None", ":", "\n", "        ", "boundaries_mask", "=", "get_boundaries", "(", "\n", "imask", ",", "boundaries_width", "=", "boundaries_width", ")", "\n", "tresult", "=", "result", ".", "astype", "(", "np", ".", "float32", ")", "\n", "tresult", "[", "boundaries_mask", "]", "=", "boundaries_color", "\n", "tresult", "=", "tresult", "*", "boundaries_alpha", "+", "(", "1", "-", "boundaries_alpha", ")", "*", "result", "\n", "result", "=", "tresult", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.get_palette": [[29, 32], ["functools.lru_cache", "numpy.array"], "function", ["None"], ["", "@", "lru_cache", "(", "maxsize", "=", "16", ")", "\n", "def", "get_palette", "(", "num_cls", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "128", ",", "0", ",", "0", "]", ",", "[", "0", ",", "128", ",", "0", "]", ",", "[", "0", ",", "0", ",", "128", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.visualize_mask": [[34, 39], ["vis.get_palette", "palette[].astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.get_palette"], ["", "def", "visualize_mask", "(", "mask", ",", "num_cls", ")", ":", "\n", "    ", "palette", "=", "get_palette", "(", "num_cls", ")", "\n", "mask", "[", "mask", "==", "-", "1", "]", "=", "0", "\n", "\n", "return", "palette", "[", "mask", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.visualize_proposals": [[41, 51], ["vis.draw_probmap", "cv2.circle"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.draw_probmap"], ["", "def", "visualize_proposals", "(", "proposals_info", ",", "point_color", "=", "(", "255", ",", "0", ",", "0", ")", ",", "\n", "point_radius", "=", "1", ")", ":", "\n", "    ", "proposal_map", ",", "colors", ",", "candidates", "=", "proposals_info", "\n", "\n", "proposal_map", "=", "draw_probmap", "(", "proposal_map", ")", "\n", "for", "x", ",", "y", "in", "candidates", ":", "\n", "        ", "proposal_map", "=", "cv2", ".", "circle", "(", "proposal_map", ",", "(", "y", ",", "x", ")", ",", "point_radius", ",", "\n", "point_color", ",", "-", "1", ")", "\n", "\n", "", "return", "proposal_map", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.draw_probmap": [[53, 55], ["cv2.applyColorMap"], "function", ["None"], ["", "def", "draw_probmap", "(", "x", ")", ":", "\n", "    ", "return", "cv2", ".", "applyColorMap", "(", "(", "x", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "COLORMAP_HOT", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.draw_points": [[57, 63], ["cv2.circle.copy", "cv2.circle", "int", "int", "numpy.np.uint8"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["", "def", "draw_points", "(", "image", ",", "points", ",", "color", ",", "radius", "=", "3", ")", ":", "\n", "    ", "image", "=", "image", ".", "copy", "(", ")", "\n", "for", "p", "in", "points", ":", "\n", "        ", "image", "=", "cv2", ".", "circle", "(", "image", ",", "(", "int", "(", "p", "[", "1", "]", ")", ",", "int", "(", "p", "[", "0", "]", ")", ")", ",", "radius", ",", "color", ",", "-", "1", ")", "\n", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.draw_instance_map": [[65, 71], ["palette[].astype", "x.max", "vis.get_palette"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.get_palette"], ["", "def", "draw_instance_map", "(", "x", ",", "palette", "=", "None", ")", ":", "\n", "    ", "num_colors", "=", "x", ".", "max", "(", ")", "+", "1", "\n", "if", "palette", "is", "None", ":", "\n", "        ", "palette", "=", "get_palette", "(", "num_colors", ")", "\n", "\n", "", "return", "palette", "[", "x", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.blend_mask": [[73, 80], ["vis.draw_instance_map", "mask.min", "mask.copy"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.draw_instance_map", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["", "def", "blend_mask", "(", "image", ",", "mask", ",", "alpha", "=", "0.6", ")", ":", "\n", "    ", "if", "mask", ".", "min", "(", ")", "==", "-", "1", ":", "\n", "        ", "mask", "=", "mask", ".", "copy", "(", ")", "+", "1", "\n", "\n", "", "imap", "=", "draw_instance_map", "(", "mask", ")", "\n", "result", "=", "(", "image", "*", "(", "1", "-", "alpha", ")", "+", "alpha", "*", "imap", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.get_boundaries": [[82, 100], ["numpy.zeros", "numpy.unique", "instances_masks.flatten", "cv2.getStructuringElement", "cv2.erode().astype", "numpy.logical_xor", "numpy.logical_or", "numpy.logical_and", "cv2.erode", "obj_mask.astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.losses.loss_utils.flatten"], ["", "def", "get_boundaries", "(", "instances_masks", ",", "boundaries_width", "=", "1", ")", ":", "\n", "    ", "boundaries", "=", "np", ".", "zeros", "(", "\n", "(", "instances_masks", ".", "shape", "[", "0", "]", ",", "instances_masks", ".", "shape", "[", "1", "]", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "\n", "for", "obj_id", "in", "np", ".", "unique", "(", "instances_masks", ".", "flatten", "(", ")", ")", ":", "\n", "        ", "if", "obj_id", "==", "0", ":", "\n", "            ", "continue", "\n", "\n", "", "obj_mask", "=", "instances_masks", "==", "obj_id", "\n", "kernel", "=", "cv2", ".", "getStructuringElement", "(", "cv2", ".", "MORPH_ELLIPSE", ",", "(", "3", ",", "3", ")", ")", "\n", "inner_mask", "=", "cv2", ".", "erode", "(", "\n", "obj_mask", ".", "astype", "(", "np", ".", "uint8", ")", ",", "kernel", ",", "\n", "iterations", "=", "boundaries_width", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "\n", "obj_boundary", "=", "np", ".", "logical_xor", "(", "obj_mask", ",", "\n", "np", ".", "logical_and", "(", "inner_mask", ",", "obj_mask", ")", ")", "\n", "boundaries", "=", "np", ".", "logical_or", "(", "boundaries", ",", "obj_boundary", ")", "\n", "", "return", "boundaries", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.draw_with_blend_and_clicks": [[102, 136], ["img.copy", "numpy.array", "draw_points.astype", "vis.draw_points", "vis.draw_points", "vis.get_palette", "len", "mask.astype", "numpy.max"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.draw_points", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.draw_points", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.vis.get_palette"], ["", "def", "draw_with_blend_and_clicks", "(", "\n", "img", ",", "\n", "mask", "=", "None", ",", "\n", "alpha", "=", "0.6", ",", "\n", "clicks_list", "=", "None", ",", "\n", "pos_color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "\n", "neg_color", "=", "(", "255", ",", "0", ",", "0", ")", ",", "\n", "radius", "=", "4", ",", "\n", "palette", "=", "None", ",", ")", ":", "\n", "    ", "result", "=", "img", ".", "copy", "(", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "if", "not", "palette", ":", "\n", "            ", "palette", "=", "get_palette", "(", "np", ".", "max", "(", "mask", ")", "+", "1", ")", "\n", "", "palette", "=", "np", ".", "array", "(", "palette", ")", "\n", "rgb_mask", "=", "palette", "[", "mask", ".", "astype", "(", "np", ".", "uint8", ")", "]", "\n", "\n", "mask_region", "=", "(", "mask", ">", "0", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "result", "=", "(", "result", "*", "(", "1", "-", "mask_region", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", "+", "(", "1", "-", "alpha", ")", "*", "\n", "mask_region", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "*", "result", "+", "alpha", "*", "rgb_mask", ")", "\n", "result", "=", "result", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "", "if", "clicks_list", "is", "not", "None", "and", "len", "(", "clicks_list", ")", ">", "0", ":", "\n", "        ", "pos_points", "=", "[", "\n", "click", ".", "coords", "for", "click", "in", "clicks_list", "if", "click", ".", "is_positive", "\n", "]", "\n", "neg_points", "=", "[", "\n", "click", ".", "coords", "for", "click", "in", "clicks_list", "if", "not", "click", ".", "is_positive", "\n", "]", "\n", "\n", "result", "=", "draw_points", "(", "result", ",", "pos_points", ",", "pos_color", ",", "radius", "=", "radius", ")", "\n", "result", "=", "draw_points", "(", "result", ",", "neg_points", ",", "neg_color", ",", "radius", "=", "radius", ")", "\n", "\n", "", "return", "result", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.__init__": [[20, 55], ["dict", "dict", "dict", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "os.path.exists", "print", "time.time", "json.load", "print", "coco.COCO.createIndex", "print", "open", "type", "type", "time.time", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.createIndex"], ["    ", "def", "__init__", "(", "self", ",", "annotation_file", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Constructor of Microsoft COCO helper class for reading and visualizing annotations.\n        :param annotation_file (str): location of annotation file\n        :param image_folder (str): location to the folder that hosts images.\n        :return:\n        \"\"\"", "\n", "# dataset, anns, cats, imgs, imgToAnns, catToImgs, imgNameToId, maxAnnId, maxImgId", "\n", "self", ".", "dataset", "=", "{", "\n", "\"categories\"", ":", "[", "]", ",", "\n", "\"images\"", ":", "[", "]", ",", "\n", "\"annotations\"", ":", "[", "]", ",", "\n", "\"info\"", ":", "\"\"", ",", "\n", "\"licenses\"", ":", "[", "]", ",", "\n", "}", "# the complete json", "\n", "self", ".", "anns", "=", "dict", "(", ")", "# anns[annId]={}", "\n", "self", ".", "cats", "=", "dict", "(", ")", "# cats[catId] = {}", "\n", "self", ".", "imgs", "=", "dict", "(", ")", "# imgs[imgId] = {}", "\n", "self", ".", "imgToAnns", "=", "defaultdict", "(", "list", ")", "# imgToAnns[imgId] = [ann]", "\n", "self", ".", "catToImgs", "=", "defaultdict", "(", "list", ")", "# catToImgs[catId] = [imgId]", "\n", "self", ".", "imgNameToId", "=", "defaultdict", "(", "list", ")", "# imgNameToId[name] = imgId", "\n", "self", ".", "maxAnnId", "=", "0", "\n", "self", ".", "maxImgId", "=", "0", "\n", "if", "annotation_file", "is", "not", "None", "and", "os", ".", "path", ".", "exists", "(", "annotation_file", ")", ":", "\n", "            ", "print", "(", "\"loading annotations into memory...\"", ")", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "dataset", "=", "json", ".", "load", "(", "open", "(", "annotation_file", ",", "\"r\"", ")", ")", "\n", "assert", "(", "\n", "type", "(", "dataset", ")", "==", "dict", "\n", ")", ",", "\"annotation file format {} not supported\"", ".", "format", "(", "type", "(", "dataset", ")", ")", "\n", "print", "(", "\"Done (t={:0.2f}s)\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "tic", ")", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "createIndex", "(", ")", "\n", "print", "(", "\n", "f\"load coco with {len(self.dataset['images'])} images and {len(self.dataset['annotations'])} annotations.\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.hasImage": [[57, 60], ["coco.COCO.imgNameToId.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "def", "hasImage", "(", "self", ",", "imageName", ")", ":", "\n", "        ", "imgId", "=", "self", ".", "imgNameToId", ".", "get", "(", "imageName", ",", "None", ")", "\n", "return", "imgId", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.hasCat": [[61, 64], ["coco.COCO.cats.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "hasCat", "(", "self", ",", "catIdx", ")", ":", "\n", "        ", "res", "=", "self", ".", "cats", ".", "get", "(", "catIdx", ")", "\n", "return", "res", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.createIndex": [[65, 104], ["print", "print", "collections.defaultdict", "range", "imgToAnns[].append", "max", "catToImgs[].append", "int", "max"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "createIndex", "(", "self", ")", ":", "\n", "# create index", "\n", "        ", "print", "(", "\"creating index...\"", ")", "\n", "anns", ",", "cats", ",", "imgs", "=", "{", "}", ",", "{", "}", ",", "{", "}", "\n", "imgNameToId", ",", "imgToAnns", ",", "catToImgs", ",", "imgNameToId", "=", "[", "\n", "defaultdict", "(", "list", ")", "for", "_", "in", "range", "(", "4", ")", "\n", "]", "\n", "if", "\"annotations\"", "in", "self", ".", "dataset", ":", "\n", "            ", "for", "ann", "in", "self", ".", "dataset", "[", "\"annotations\"", "]", ":", "\n", "                ", "imgToAnns", "[", "ann", "[", "\"image_id\"", "]", "]", ".", "append", "(", "ann", ")", "\n", "anns", "[", "ann", "[", "\"id\"", "]", "]", "=", "ann", "\n", "self", ".", "maxAnnId", "=", "max", "(", "self", ".", "maxAnnId", ",", "ann", "[", "\"id\"", "]", ")", "\n", "\n", "", "", "if", "\"images\"", "in", "self", ".", "dataset", ":", "\n", "            ", "for", "img", "in", "self", ".", "dataset", "[", "\"images\"", "]", ":", "\n", "                ", "imgs", "[", "img", "[", "\"id\"", "]", "]", "=", "img", "\n", "imgNameToId", "[", "img", "[", "\"file_name\"", "]", "]", "=", "img", "[", "\"id\"", "]", "\n", "try", ":", "\n", "                    ", "imgId", "=", "int", "(", "img", "[", "\"id\"", "]", ")", "\n", "self", ".", "maxImgId", "=", "max", "(", "self", ".", "maxImgId", ",", "imgId", ")", "\n", "", "except", ":", "\n", "                    ", "pass", "\n", "\n", "", "", "", "if", "\"categories\"", "in", "self", ".", "dataset", ":", "\n", "            ", "for", "cat", "in", "self", ".", "dataset", "[", "\"categories\"", "]", ":", "\n", "                ", "cats", "[", "cat", "[", "\"id\"", "]", "]", "=", "cat", "\n", "\n", "", "", "if", "\"annotations\"", "in", "self", ".", "dataset", "and", "\"categories\"", "in", "self", ".", "dataset", ":", "\n", "            ", "for", "ann", "in", "self", ".", "dataset", "[", "\"annotations\"", "]", ":", "\n", "                ", "catToImgs", "[", "ann", "[", "\"category_id\"", "]", "]", ".", "append", "(", "ann", "[", "\"image_id\"", "]", ")", "\n", "# TODO: read license", "\n", "", "", "print", "(", "\"index created!\"", ")", "\n", "\n", "self", ".", "anns", "=", "anns", "\n", "self", ".", "imgToAnns", "=", "imgToAnns", "\n", "self", ".", "catToImgs", "=", "catToImgs", "\n", "self", ".", "imgNameToId", "=", "imgNameToId", "\n", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "cats", "=", "cats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.setInfo": [[105, 120], ["None"], "methods", ["None"], ["", "def", "setInfo", "(", "\n", "self", ",", "\n", "year", ":", "int", "=", "\"\"", ",", "\n", "version", ":", "str", "=", "\"\"", ",", "\n", "description", ":", "str", "=", "\"\"", ",", "\n", "contributor", ":", "str", "=", "\"\"", ",", "\n", "url", ":", "str", "=", "\"\"", ",", "\n", "date_created", ":", "datetime", "=", "\"\"", ",", ")", ":", "\n", "        ", "self", ".", "dataset", "[", "\"info\"", "]", "=", "{", "\n", "\"year\"", ":", "year", ",", "\n", "\"version\"", ":", "version", ",", "\n", "\"description\"", ":", "description", ",", "\n", "\"contributor\"", ":", "contributor", ",", "\n", "\"url\"", ":", "url", ",", "\n", "\"date_created\"", ":", "date_created", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.addCategory": [[122, 136], ["coco.COCO.dataset[].append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "addCategory", "(", "\n", "self", ",", "\n", "id", ":", "int", ",", "\n", "name", ":", "str", ",", "\n", "color", ":", "list", ",", "\n", "supercategory", ":", "str", "=", "\"\"", ",", ")", ":", "\n", "        ", "cat", "=", "{", "\n", "\"id\"", ":", "id", ",", "\n", "\"name\"", ":", "name", ",", "\n", "\"color\"", ":", "color", ",", "\n", "\"supercategory\"", ":", "supercategory", ",", "\n", "}", "\n", "self", ".", "cats", "[", "id", "]", "=", "cat", "\n", "self", ".", "dataset", "[", "\"categories\"", "]", ".", "append", "(", "cat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.updateCategory": [[137, 153], ["range", "len"], "methods", ["None"], ["", "def", "updateCategory", "(", "\n", "self", ",", "\n", "id", ":", "int", ",", "\n", "name", ":", "str", ",", "\n", "color", ":", "list", ",", "\n", "supercategory", ":", "str", "=", "\"\"", ",", ")", ":", "\n", "        ", "cat", "=", "{", "\n", "\"id\"", ":", "id", ",", "\n", "\"name\"", ":", "name", ",", "\n", "\"color\"", ":", "color", ",", "\n", "\"supercategory\"", ":", "supercategory", ",", "\n", "}", "\n", "self", ".", "cats", "[", "id", "]", "=", "cat", "\n", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "dataset", "[", "\"categories\"", "]", ")", ")", ":", "\n", "            ", "if", "self", ".", "dataset", "[", "\"categories\"", "]", "[", "idx", "]", "[", "\"id\"", "]", "==", "id", ":", "\n", "                ", "self", ".", "dataset", "[", "\"categories\"", "]", "[", "idx", "]", "=", "cat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.addImage": [[154, 184], ["coco.COCO.hasImage", "coco.COCO.dataset[].append", "print"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.hasImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "", "def", "addImage", "(", "\n", "self", ",", "\n", "file_name", ":", "str", ",", "\n", "width", ":", "int", ",", "\n", "height", ":", "int", ",", "\n", "id", ":", "int", "=", "None", ",", "\n", "license", ":", "int", "=", "\"\"", ",", "\n", "flickr_url", ":", "str", "=", "\"\"", ",", "\n", "coco_url", ":", "str", "=", "\"\"", ",", "\n", "date_captured", ":", "datetime", "=", "\"\"", ",", ")", ":", "\n", "        ", "if", "self", ".", "hasImage", "(", "file_name", ")", ":", "\n", "            ", "print", "(", "f\"{file_name}\u56fe\u7247\u5df2\u5b58\u5728\"", ")", "\n", "return", "\n", "", "if", "not", "id", ":", "\n", "            ", "self", ".", "maxImgId", "+=", "1", "\n", "id", "=", "self", ".", "maxImgId", "\n", "", "image", "=", "{", "\n", "\"id\"", ":", "id", ",", "\n", "\"width\"", ":", "width", ",", "\n", "\"height\"", ":", "height", ",", "\n", "\"file_name\"", ":", "file_name", ",", "\n", "\"license\"", ":", "license", ",", "\n", "\"flickr_url\"", ":", "flickr_url", ",", "\n", "\"coco_url\"", ":", "coco_url", ",", "\n", "\"date_captured\"", ":", "date_captured", ",", "\n", "}", "\n", "self", ".", "dataset", "[", "\"images\"", "]", ".", "append", "(", "image", ")", "\n", "self", ".", "imgs", "[", "id", "]", "=", "image", "\n", "self", ".", "imgNameToId", "[", "file_name", "]", "=", "id", "\n", "return", "id", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getBB": [[185, 190], ["max", "min", "max", "min"], "methods", ["None"], ["", "def", "getBB", "(", "self", ",", "segmentation", ")", ":", "\n", "        ", "x", "=", "segmentation", "[", ":", ":", "2", "]", "\n", "y", "=", "segmentation", "[", "1", ":", ":", "2", "]", "\n", "maxx", ",", "minx", ",", "maxy", ",", "miny", "=", "max", "(", "x", ")", ",", "min", "(", "x", ")", ",", "max", "(", "y", ")", ",", "min", "(", "y", ")", "\n", "return", "[", "minx", ",", "miny", ",", "maxx", "-", "minx", ",", "maxy", "-", "miny", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getArea": [[191, 196], ["numpy.abs", "numpy.dot", "numpy.dot", "numpy.roll", "numpy.roll"], "methods", ["None"], ["", "def", "getArea", "(", "self", ",", "segmentation", ")", ":", "\n", "        ", "x", "=", "segmentation", "[", ":", ":", "2", "]", "\n", "y", "=", "segmentation", "[", "1", ":", ":", "2", "]", "\n", "\n", "return", "0.5", "*", "np", ".", "abs", "(", "np", ".", "dot", "(", "x", ",", "np", ".", "roll", "(", "y", ",", "1", ")", ")", "-", "np", ".", "dot", "(", "y", ",", "np", ".", "roll", "(", "x", ",", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.addAnnotation": [[197, 226], ["coco.COCO.dataset[].append", "coco.COCO.imgToAnns[].append", "coco.COCO.catToImgs[].append", "print", "coco.COCO.getArea", "coco.COCO.getBB", "coco.COCO.anns.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getArea", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getBB", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "addAnnotation", "(", "\n", "self", ",", "\n", "image_id", ":", "int", ",", "\n", "category_id", ":", "int", ",", "\n", "segmentation", ":", "list", ",", "\n", "area", ":", "float", "=", "None", ",", "\n", "id", ":", "int", "=", "None", ",", ")", ":", "\n", "        ", "if", "id", "is", "not", "None", "and", "self", ".", "anns", ".", "get", "(", "id", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"\u6807\u7b7e\u5df2\u7ecf\u5b58\u5728\"", ")", "\n", "return", "\n", "", "if", "not", "id", ":", "\n", "            ", "self", ".", "maxAnnId", "+=", "1", "\n", "id", "=", "self", ".", "maxAnnId", "\n", "\n", "", "ann", "=", "{", "\n", "\"id\"", ":", "id", ",", "\n", "\"iscrowd\"", ":", "0", ",", "\n", "\"image_id\"", ":", "image_id", ",", "\n", "\"category_id\"", ":", "category_id", ",", "\n", "\"segmentation\"", ":", "[", "segmentation", "]", ",", "\n", "\"area\"", ":", "self", ".", "getArea", "(", "segmentation", ")", ",", "\n", "\"bbox\"", ":", "self", ".", "getBB", "(", "segmentation", ")", ",", "\n", "}", "\n", "\n", "self", ".", "dataset", "[", "\"annotations\"", "]", ".", "append", "(", "ann", ")", "\n", "self", ".", "anns", "[", "id", "]", "=", "ann", "\n", "self", ".", "imgToAnns", "[", "image_id", "]", ".", "append", "(", "ann", ")", "\n", "self", ".", "catToImgs", "[", "category_id", "]", ".", "append", "(", "image_id", ")", "\n", "return", "id", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.delAnnotation": [[227, 238], ["enumerate", "enumerate", "coco.COCO.anns.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "delAnnotation", "(", "self", ",", "annId", ",", "imgId", ")", ":", "\n", "        ", "if", "\"annotations\"", "in", "self", ".", "dataset", ":", "\n", "            ", "for", "idx", ",", "ann", "in", "enumerate", "(", "self", ".", "dataset", "[", "\"annotations\"", "]", ")", ":", "\n", "                ", "if", "ann", "[", "\"id\"", "]", "==", "annId", ":", "\n", "                    ", "del", "self", ".", "dataset", "[", "\"annotations\"", "]", "[", "idx", "]", "\n", "", "", "", "if", "annId", "in", "self", ".", "anns", ".", "keys", "(", ")", ":", "\n", "            ", "del", "self", ".", "anns", "[", "annId", "]", "\n", "\n", "", "for", "idx", ",", "ann", "in", "enumerate", "(", "self", ".", "imgToAnns", "[", "imgId", "]", ")", ":", "\n", "            ", "if", "ann", "[", "\"id\"", "]", "==", "annId", ":", "\n", "                ", "del", "self", ".", "imgToAnns", "[", "imgId", "]", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.updateAnnotation": [[239, 261], ["coco.COCO.getBB", "coco.COCO.getArea", "print"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getBB", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getArea"], ["", "", "", "def", "updateAnnotation", "(", "self", ",", "id", ",", "imgId", ",", "segmentation", ")", ":", "\n", "        ", "self", ".", "anns", "[", "id", "]", "[", "\"segmentation\"", "]", "=", "[", "segmentation", "]", "\n", "self", ".", "anns", "[", "id", "]", "[", "\"bbox\"", "]", "=", "self", ".", "getBB", "(", "segmentation", ")", "\n", "self", ".", "anns", "[", "id", "]", "[", "\"area\"", "]", "=", "self", ".", "getArea", "(", "segmentation", ")", "\n", "for", "rec", "in", "self", ".", "dataset", "[", "\"annotations\"", "]", ":", "\n", "            ", "if", "rec", "[", "\"id\"", "]", "==", "id", ":", "\n", "                ", "rec", "=", "self", ".", "anns", "[", "id", "]", "\n", "break", "\n", "\n", "", "", "for", "rec", "in", "self", ".", "dataset", "[", "\"annotations\"", "]", ":", "\n", "            ", "if", "rec", "[", "\"id\"", "]", "==", "id", ":", "\n", "# @todo TODO move into debug codes or controls", "\n", "                ", "print", "(", "\n", "\"record point : \"", ",", "\n", "rec", "[", "\"segmentation\"", "]", "[", "0", "]", "[", "0", "]", ",", "\n", "rec", "[", "\"segmentation\"", "]", "[", "0", "]", "[", "1", "]", ",", ")", "\n", "break", "\n", "\n", "", "", "for", "rec", "in", "self", ".", "imgToAnns", "[", "imgId", "]", ":", "\n", "            ", "if", "rec", "[", "\"id\"", "]", "==", "id", ":", "\n", "                ", "rec", "[", "\"segmentation\"", "]", "=", "[", "segmentation", "]", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info": [[262, 269], ["coco.COCO.dataset[].items", "print"], "methods", ["None"], ["", "", "", "def", "info", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Print information about the annotation file.\n        :return:\n        \"\"\"", "\n", "for", "key", ",", "value", "in", "self", ".", "dataset", "[", "\"info\"", "]", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "\"{}: {}\"", ".", "format", "(", "key", ",", "value", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getAnnIds": [[270, 304], ["coco._isArrayLike", "coco._isArrayLike", "len", "len", "len", "list", "len", "itertools.chain.from_iterable", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike"], ["", "", "def", "getAnnIds", "(", "self", ",", "imgIds", "=", "[", "]", ",", "catIds", "=", "[", "]", ",", "areaRng", "=", "[", "]", ",", "iscrowd", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Get ann ids that satisfy given filter conditions. default skips that filter\n        :param imgIds  (int array)     : get anns for given imgs\n               catIds  (int array)     : get anns for given cats\n               areaRng (float array)   : get anns for given area range (e.g. [0 inf])\n               iscrowd (boolean)       : get anns for given crowd label (False or True)\n        :return: ids (int array)       : integer array of ann ids\n        \"\"\"", "\n", "imgIds", "=", "imgIds", "if", "_isArrayLike", "(", "imgIds", ")", "else", "[", "imgIds", "]", "\n", "catIds", "=", "catIds", "if", "_isArrayLike", "(", "catIds", ")", "else", "[", "catIds", "]", "\n", "\n", "if", "len", "(", "imgIds", ")", "==", "len", "(", "catIds", ")", "==", "len", "(", "areaRng", ")", "==", "0", ":", "\n", "            ", "anns", "=", "self", ".", "dataset", "[", "\"annotations\"", "]", "\n", "", "else", ":", "\n", "            ", "if", "not", "len", "(", "imgIds", ")", "==", "0", ":", "\n", "                ", "lists", "=", "[", "\n", "self", ".", "imgToAnns", "[", "imgId", "]", "for", "imgId", "in", "imgIds", "\n", "if", "imgId", "in", "self", ".", "imgToAnns", "\n", "]", "\n", "anns", "=", "list", "(", "itertools", ".", "chain", ".", "from_iterable", "(", "lists", ")", ")", "\n", "", "else", ":", "\n", "                ", "anns", "=", "self", ".", "dataset", "[", "\"annotations\"", "]", "\n", "", "anns", "=", "(", "anns", "if", "len", "(", "catIds", ")", "==", "0", "else", "\n", "[", "ann", "for", "ann", "in", "anns", "if", "ann", "[", "\"category_id\"", "]", "in", "catIds", "]", ")", "\n", "anns", "=", "(", "anns", "if", "len", "(", "areaRng", ")", "==", "0", "else", "[", "\n", "ann", "for", "ann", "in", "anns", "\n", "if", "ann", "[", "\"area\"", "]", ">", "areaRng", "[", "0", "]", "and", "ann", "[", "\"area\"", "]", "<", "areaRng", "[", "1", "]", "\n", "]", ")", "\n", "", "if", "not", "iscrowd", "==", "None", ":", "\n", "            ", "ids", "=", "[", "ann", "[", "\"id\"", "]", "for", "ann", "in", "anns", "if", "ann", "[", "\"iscrowd\"", "]", "==", "iscrowd", "]", "\n", "", "else", ":", "\n", "            ", "ids", "=", "[", "ann", "[", "\"id\"", "]", "for", "ann", "in", "anns", "]", "\n", "", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getCatIds": [[305, 329], ["coco._isArrayLike", "coco._isArrayLike", "coco._isArrayLike", "len", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike"], ["", "def", "getCatIds", "(", "self", ",", "catNms", "=", "[", "]", ",", "supNms", "=", "[", "]", ",", "catIds", "=", "[", "]", ")", ":", "\n", "        ", "\"\"\"\n        filtering parameters. default skips that filter.\n        :param catNms (str array)  : get cats for given cat names\n        :param supNms (str array)  : get cats for given supercategory names\n        :param catIds (int array)  : get cats for given cat ids\n        :return: ids (int array)   : integer array of cat ids\n        \"\"\"", "\n", "catNms", "=", "catNms", "if", "_isArrayLike", "(", "catNms", ")", "else", "[", "catNms", "]", "\n", "supNms", "=", "supNms", "if", "_isArrayLike", "(", "supNms", ")", "else", "[", "supNms", "]", "\n", "catIds", "=", "catIds", "if", "_isArrayLike", "(", "catIds", ")", "else", "[", "catIds", "]", "\n", "\n", "if", "len", "(", "catNms", ")", "==", "len", "(", "supNms", ")", "==", "len", "(", "catIds", ")", "==", "0", ":", "\n", "            ", "cats", "=", "self", ".", "dataset", "[", "\"categories\"", "]", "\n", "", "else", ":", "\n", "            ", "cats", "=", "self", ".", "dataset", "[", "\"categories\"", "]", "\n", "cats", "=", "(", "cats", "if", "len", "(", "catNms", ")", "==", "0", "else", "\n", "[", "cat", "for", "cat", "in", "cats", "if", "cat", "[", "\"name\"", "]", "in", "catNms", "]", ")", "\n", "cats", "=", "(", "cats", "if", "len", "(", "supNms", ")", "==", "0", "else", "\n", "[", "cat", "for", "cat", "in", "cats", "if", "cat", "[", "\"supercategory\"", "]", "in", "supNms", "]", ")", "\n", "cats", "=", "(", "cats", "if", "len", "(", "catIds", ")", "==", "0", "else", "\n", "[", "cat", "for", "cat", "in", "cats", "if", "cat", "[", "\"id\"", "]", "in", "catIds", "]", ")", "\n", "", "ids", "=", "[", "cat", "[", "\"id\"", "]", "for", "cat", "in", "cats", "]", "\n", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getImgIds": [[330, 350], ["list", "coco._isArrayLike", "coco._isArrayLike", "len", "len", "coco.COCO.imgs.keys", "set", "enumerate", "set", "set", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "getImgIds", "(", "self", ",", "imgIds", "=", "[", "]", ",", "catIds", "=", "[", "]", ")", ":", "\n", "        ", "\"\"\"\n        Get img ids that satisfy given filter conditions.\n        :param imgIds (int array) : get imgs for given ids\n        :param catIds (int array) : get imgs with all given cats\n        :return: ids (int array)  : integer array of img ids\n        \"\"\"", "\n", "imgIds", "=", "imgIds", "if", "_isArrayLike", "(", "imgIds", ")", "else", "[", "imgIds", "]", "\n", "catIds", "=", "catIds", "if", "_isArrayLike", "(", "catIds", ")", "else", "[", "catIds", "]", "\n", "\n", "if", "len", "(", "imgIds", ")", "==", "len", "(", "catIds", ")", "==", "0", ":", "\n", "            ", "ids", "=", "self", ".", "imgs", ".", "keys", "(", ")", "\n", "", "else", ":", "\n", "            ", "ids", "=", "set", "(", "imgIds", ")", "\n", "for", "i", ",", "catId", "in", "enumerate", "(", "catIds", ")", ":", "\n", "                ", "if", "i", "==", "0", "and", "len", "(", "ids", ")", "==", "0", ":", "\n", "                    ", "ids", "=", "set", "(", "self", ".", "catToImgs", "[", "catId", "]", ")", "\n", "", "else", ":", "\n", "                    ", "ids", "&=", "set", "(", "self", ".", "catToImgs", "[", "catId", "]", ")", "\n", "", "", "", "return", "list", "(", "ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.loadAnns": [[351, 361], ["coco._isArrayLike", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike"], ["", "def", "loadAnns", "(", "self", ",", "ids", "=", "[", "]", ")", ":", "\n", "        ", "\"\"\"\n        Load anns with the specified ids.\n        :param ids (int array)       : integer ids specifying anns\n        :return: anns (object array) : loaded ann objects\n        \"\"\"", "\n", "if", "_isArrayLike", "(", "ids", ")", ":", "\n", "            ", "return", "[", "self", ".", "anns", "[", "id", "]", "for", "id", "in", "ids", "]", "\n", "", "elif", "type", "(", "ids", ")", "==", "int", ":", "\n", "            ", "return", "[", "self", ".", "anns", "[", "ids", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.loadCats": [[362, 372], ["coco._isArrayLike", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike"], ["", "", "def", "loadCats", "(", "self", ",", "ids", "=", "[", "]", ")", ":", "\n", "        ", "\"\"\"\n        Load cats with the specified ids.\n        :param ids (int array)       : integer ids specifying cats\n        :return: cats (object array) : loaded cat objects\n        \"\"\"", "\n", "if", "_isArrayLike", "(", "ids", ")", ":", "\n", "            ", "return", "[", "self", ".", "cats", "[", "id", "]", "for", "id", "in", "ids", "]", "\n", "", "elif", "type", "(", "ids", ")", "==", "int", ":", "\n", "            ", "return", "[", "self", ".", "cats", "[", "ids", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.loadImgs": [[373, 383], ["coco._isArrayLike", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike"], ["", "", "def", "loadImgs", "(", "self", ",", "ids", "=", "[", "]", ")", ":", "\n", "        ", "\"\"\"\n        Load anns with the specified ids.\n        :param ids (int array)       : integer ids specifying img\n        :return: imgs (object array) : loaded img objects\n        \"\"\"", "\n", "if", "_isArrayLike", "(", "ids", ")", ":", "\n", "            ", "return", "[", "self", ".", "imgs", "[", "id", "]", "for", "id", "in", "ids", "]", "\n", "", "elif", "type", "(", "ids", ")", "==", "int", ":", "\n", "            ", "return", "[", "self", ".", "imgs", "[", "ids", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.download": [[547, 571], ["len", "enumerate", "print", "len", "coco.COCO.imgs.values", "coco.COCO.loadImgs", "os.path.exists", "os.makedirs", "time.time", "os.path.join", "print", "os.path.exists", "urlretrieve", "time.time"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.loadImgs"], ["", "", "def", "download", "(", "self", ",", "tarDir", "=", "None", ",", "imgIds", "=", "[", "]", ")", ":", "\n", "        ", "\"\"\"\n        Download COCO images from mscoco.org server.\n        :param tarDir (str): COCO results directory name\n               imgIds (list): images to be downloaded\n        :return:\n        \"\"\"", "\n", "if", "tarDir", "is", "None", ":", "\n", "            ", "print", "(", "\"Please specify target directory\"", ")", "\n", "return", "-", "1", "\n", "", "if", "len", "(", "imgIds", ")", "==", "0", ":", "\n", "            ", "imgs", "=", "self", ".", "imgs", ".", "values", "(", ")", "\n", "", "else", ":", "\n", "            ", "imgs", "=", "self", ".", "loadImgs", "(", "imgIds", ")", "\n", "", "N", "=", "len", "(", "imgs", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "tarDir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "tarDir", ")", "\n", "", "for", "i", ",", "img", "in", "enumerate", "(", "imgs", ")", ":", "\n", "            ", "tic", "=", "time", ".", "time", "(", ")", "\n", "fname", "=", "os", ".", "path", ".", "join", "(", "tarDir", ",", "img", "[", "\"file_name\"", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "fname", ")", ":", "\n", "                ", "urlretrieve", "(", "img", "[", "\"coco_url\"", "]", ",", "fname", ")", "\n", "", "print", "(", "\"downloaded {}/{} images (t={:0.1f}s)\"", ".", "format", "(", "\n", "i", ",", "N", ",", "time", ".", "time", "(", ")", "-", "tic", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.loadNumpyAnnotations": [[572, 594], ["print", "print", "range", "type", "print", "int", "int"], "methods", ["None"], ["", "", "def", "loadNumpyAnnotations", "(", "self", ",", "data", ")", ":", "\n", "        ", "\"\"\"\n        Convert result data from a numpy array [Nx7] where each row contains {imageID,x1,y1,w,h,score,class}\n        :param  data (numpy.ndarray)\n        :return: annotations (python nested list)\n        \"\"\"", "\n", "print", "(", "\"Converting ndarray to lists...\"", ")", "\n", "assert", "type", "(", "data", ")", "==", "np", ".", "ndarray", "\n", "print", "(", "data", ".", "shape", ")", "\n", "assert", "data", ".", "shape", "[", "1", "]", "==", "7", "\n", "N", "=", "data", ".", "shape", "[", "0", "]", "\n", "ann", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "if", "i", "%", "1000000", "==", "0", ":", "\n", "                ", "print", "(", "\"{}/{}\"", ".", "format", "(", "i", ",", "N", ")", ")", "\n", "", "ann", "+=", "[", "{", "\n", "\"image_id\"", ":", "int", "(", "data", "[", "i", ",", "0", "]", ")", ",", "\n", "\"bbox\"", ":", "[", "data", "[", "i", ",", "1", "]", ",", "data", "[", "i", ",", "2", "]", ",", "data", "[", "i", ",", "3", "]", ",", "data", "[", "i", ",", "4", "]", "]", ",", "\n", "\"score\"", ":", "data", "[", "i", ",", "5", "]", ",", "\n", "\"category_id\"", ":", "int", "(", "data", "[", "i", ",", "6", "]", ")", ",", "\n", "}", "]", "\n", "", "return", "ann", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco._isArrayLike": [[15, 17], ["hasattr", "hasattr"], "function", ["None"], ["def", "_isArrayLike", "(", "obj", ")", ":", "\n", "    ", "return", "hasattr", "(", "obj", ",", "\"__iter__\"", ")", "and", "hasattr", "(", "obj", ",", "\"__len__\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.encode": [[81, 87], ["len", "pycocotools.encode", "len", "pycocotools.encode", "bimask.reshape"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.encode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.encode"], ["def", "encode", "(", "bimask", ")", ":", "\n", "    ", "if", "len", "(", "bimask", ".", "shape", ")", "==", "3", ":", "\n", "        ", "return", "_mask", ".", "encode", "(", "bimask", ")", "\n", "", "elif", "len", "(", "bimask", ".", "shape", ")", "==", "2", ":", "\n", "        ", "h", ",", "w", "=", "bimask", ".", "shape", "\n", "return", "_mask", ".", "encode", "(", "bimask", ".", "reshape", "(", "(", "h", ",", "w", ",", "1", ")", ",", "order", "=", "'F'", ")", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode": [[89, 94], ["type", "pycocotools.decode", "pycocotools.decode"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["", "", "def", "decode", "(", "rleObjs", ")", ":", "\n", "    ", "if", "type", "(", "rleObjs", ")", "==", "list", ":", "\n", "        ", "return", "_mask", ".", "decode", "(", "rleObjs", ")", "\n", "", "else", ":", "\n", "        ", "return", "_mask", ".", "decode", "(", "[", "rleObjs", "]", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.area": [[96, 101], ["type", "pycocotools.area", "pycocotools.area"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.area", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.area"], ["", "", "def", "area", "(", "rleObjs", ")", ":", "\n", "    ", "if", "type", "(", "rleObjs", ")", "==", "list", ":", "\n", "        ", "return", "_mask", ".", "area", "(", "rleObjs", ")", "\n", "", "else", ":", "\n", "        ", "return", "_mask", ".", "area", "(", "[", "rleObjs", "]", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.toBbox": [[103, 108], ["type", "pycocotools.toBbox", "pycocotools.toBbox"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.toBbox", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.toBbox"], ["", "", "def", "toBbox", "(", "rleObjs", ")", ":", "\n", "    ", "if", "type", "(", "rleObjs", ")", "==", "list", ":", "\n", "        ", "return", "_mask", ".", "toBbox", "(", "rleObjs", ")", "\n", "", "else", ":", "\n", "        ", "return", "_mask", ".", "toBbox", "(", "[", "rleObjs", "]", ")", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.__init__": [[61, 84], ["collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "cocoeval.Params", "print", "sorted", "sorted", "cocoGt.getImgIds", "cocoGt.getCatIds"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getImgIds", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.getCatIds"], ["    ", "def", "__init__", "(", "self", ",", "cocoGt", "=", "None", ",", "cocoDt", "=", "None", ",", "iouType", "=", "'segm'", ")", ":", "\n", "        ", "'''\n        Initialize CocoEval using coco APIs for gt and dt\n        :param cocoGt: coco object with ground truth annotations\n        :param cocoDt: coco object with detection results\n        :return: None\n        '''", "\n", "if", "not", "iouType", ":", "\n", "            ", "print", "(", "'iouType not specified. use default iouType segm'", ")", "\n", "", "self", ".", "cocoGt", "=", "cocoGt", "# ground truth COCO API", "\n", "self", ".", "cocoDt", "=", "cocoDt", "# detections COCO API", "\n", "self", ".", "evalImgs", "=", "defaultdict", "(", "\n", "list", ")", "# per-image per-category evaluation results [KxAxI] elements", "\n", "self", ".", "eval", "=", "{", "}", "# accumulated evaluation results", "\n", "self", ".", "_gts", "=", "defaultdict", "(", "list", ")", "# gt for evaluation", "\n", "self", ".", "_dts", "=", "defaultdict", "(", "list", ")", "# dt for evaluation", "\n", "self", ".", "params", "=", "Params", "(", "iouType", "=", "iouType", ")", "# parameters", "\n", "self", ".", "_paramsEval", "=", "{", "}", "# parameters for evaluation", "\n", "self", ".", "stats", "=", "[", "]", "# result summarization", "\n", "self", ".", "ious", "=", "{", "}", "# ious between all gts and dts", "\n", "if", "not", "cocoGt", "is", "None", ":", "\n", "            ", "self", ".", "params", ".", "imgIds", "=", "sorted", "(", "cocoGt", ".", "getImgIds", "(", ")", ")", "\n", "self", ".", "params", ".", "catIds", "=", "sorted", "(", "cocoGt", ".", "getCatIds", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval._prepare": [[85, 128], ["collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "cocoeval.COCOeval.cocoGt.loadAnns", "cocoeval.COCOeval.cocoDt.loadAnns", "cocoeval.COCOeval.cocoGt.loadAnns", "cocoeval.COCOeval.cocoDt.loadAnns", "cocoeval.COCOeval._prepare._toMask"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.loadAnns", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.loadAnns", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.loadAnns", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.loadAnns"], ["", "", "def", "_prepare", "(", "self", ")", ":", "\n", "        ", "'''\n        Prepare ._gts and ._dts for evaluation based on params\n        :return: None\n        '''", "\n", "\n", "def", "_toMask", "(", "anns", ",", "coco", ")", ":", "\n", "# modify ann['segmentation'] by reference", "\n", "            ", "for", "ann", "in", "anns", ":", "\n", "                ", "rle", "=", "coco", ".", "annToRLE", "(", "ann", ")", "\n", "ann", "[", "'segmentation'", "]", "=", "rle", "\n", "\n", "", "", "p", "=", "self", ".", "params", "\n", "if", "p", ".", "useCats", ":", "\n", "            ", "gts", "=", "self", ".", "cocoGt", ".", "loadAnns", "(", "\n", "self", ".", "cocoGt", ".", "getAnnIds", "(", "\n", "imgIds", "=", "p", ".", "imgIds", ",", "catIds", "=", "p", ".", "catIds", ")", ")", "\n", "dts", "=", "self", ".", "cocoDt", ".", "loadAnns", "(", "\n", "self", ".", "cocoDt", ".", "getAnnIds", "(", "\n", "imgIds", "=", "p", ".", "imgIds", ",", "catIds", "=", "p", ".", "catIds", ")", ")", "\n", "", "else", ":", "\n", "            ", "gts", "=", "self", ".", "cocoGt", ".", "loadAnns", "(", "self", ".", "cocoGt", ".", "getAnnIds", "(", "imgIds", "=", "p", ".", "imgIds", ")", ")", "\n", "dts", "=", "self", ".", "cocoDt", ".", "loadAnns", "(", "self", ".", "cocoDt", ".", "getAnnIds", "(", "imgIds", "=", "p", ".", "imgIds", ")", ")", "\n", "\n", "# convert ground truth to mask if iouType == 'segm'", "\n", "", "if", "p", ".", "iouType", "==", "'segm'", ":", "\n", "            ", "_toMask", "(", "gts", ",", "self", ".", "cocoGt", ")", "\n", "_toMask", "(", "dts", ",", "self", ".", "cocoDt", ")", "\n", "# set ignore flag", "\n", "", "for", "gt", "in", "gts", ":", "\n", "            ", "gt", "[", "'ignore'", "]", "=", "gt", "[", "'ignore'", "]", "if", "'ignore'", "in", "gt", "else", "0", "\n", "gt", "[", "'ignore'", "]", "=", "'iscrowd'", "in", "gt", "and", "gt", "[", "'iscrowd'", "]", "\n", "if", "p", ".", "iouType", "==", "'keypoints'", ":", "\n", "                ", "gt", "[", "'ignore'", "]", "=", "(", "gt", "[", "'num_keypoints'", "]", "==", "0", ")", "or", "gt", "[", "'ignore'", "]", "\n", "", "", "self", ".", "_gts", "=", "defaultdict", "(", "list", ")", "# gt for evaluation", "\n", "self", ".", "_dts", "=", "defaultdict", "(", "list", ")", "# dt for evaluation", "\n", "for", "gt", "in", "gts", ":", "\n", "            ", "self", ".", "_gts", "[", "gt", "[", "'image_id'", "]", ",", "gt", "[", "'category_id'", "]", "]", ".", "append", "(", "gt", ")", "\n", "", "for", "dt", "in", "dts", ":", "\n", "            ", "self", ".", "_dts", "[", "dt", "[", "'image_id'", "]", ",", "dt", "[", "'category_id'", "]", "]", ".", "append", "(", "dt", ")", "\n", "", "self", ".", "evalImgs", "=", "defaultdict", "(", "\n", "list", ")", "# per-image per-category evaluation results", "\n", "self", ".", "eval", "=", "{", "}", "# accumulated evaluation results", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate": [[129, 170], ["time.time", "print", "print", "list", "sorted", "cocoeval.COCOeval._prepare", "copy.deepcopy", "time.time", "print", "print", "numpy.unique", "list", "cocoeval.COCOeval.computeIoU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval._prepare", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.computeIoU"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "'''\n        Run per image evaluation on given images and store results (a list of dict) in self.evalImgs\n        :return: None\n        '''", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Running per image evaluation...'", ")", "\n", "p", "=", "self", ".", "params", "\n", "# add backward compatibility if useSegm is specified in params", "\n", "if", "not", "p", ".", "useSegm", "is", "None", ":", "\n", "            ", "p", ".", "iouType", "=", "'segm'", "if", "p", ".", "useSegm", "==", "1", "else", "'bbox'", "\n", "print", "(", "'useSegm (deprecated) is not None. Running {} evaluation'", ".", "\n", "format", "(", "p", ".", "iouType", ")", ")", "\n", "", "print", "(", "'Evaluate annotation type *{}*'", ".", "format", "(", "p", ".", "iouType", ")", ")", "\n", "p", ".", "imgIds", "=", "list", "(", "np", ".", "unique", "(", "p", ".", "imgIds", ")", ")", "\n", "if", "p", ".", "useCats", ":", "\n", "            ", "p", ".", "catIds", "=", "list", "(", "np", ".", "unique", "(", "p", ".", "catIds", ")", ")", "\n", "", "p", ".", "maxDets", "=", "sorted", "(", "p", ".", "maxDets", ")", "\n", "self", ".", "params", "=", "p", "\n", "\n", "self", ".", "_prepare", "(", ")", "\n", "# loop through images, area range, max detection number", "\n", "catIds", "=", "p", ".", "catIds", "if", "p", ".", "useCats", "else", "[", "-", "1", "]", "\n", "\n", "if", "p", ".", "iouType", "==", "'segm'", "or", "p", ".", "iouType", "==", "'bbox'", ":", "\n", "            ", "computeIoU", "=", "self", ".", "computeIoU", "\n", "", "elif", "p", ".", "iouType", "==", "'keypoints'", ":", "\n", "            ", "computeIoU", "=", "self", ".", "computeOks", "\n", "", "self", ".", "ious", "=", "{", "(", "imgId", ",", "catId", ")", ":", "computeIoU", "(", "imgId", ",", "catId", ")", "for", "imgId", "in", "p", ".", "imgIds", "\n", "for", "catId", "in", "catIds", "}", "\n", "\n", "evaluateImg", "=", "self", ".", "evaluateImg", "\n", "maxDet", "=", "p", ".", "maxDets", "[", "-", "1", "]", "\n", "self", ".", "evalImgs", "=", "[", "\n", "evaluateImg", "(", "imgId", ",", "catId", ",", "areaRng", ",", "maxDet", ")", "\n", "for", "catId", "in", "catIds", "for", "areaRng", "in", "p", ".", "areaRng", "for", "imgId", "in", "p", ".", "imgIds", "\n", "]", "\n", "self", ".", "_paramsEval", "=", "copy", ".", "deepcopy", "(", "self", ".", "params", ")", "\n", "toc", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'DONE (t={:0.2f}s).'", ".", "format", "(", "toc", "-", "tic", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.computeIoU": [[171, 199], ["numpy.argsort", "mask.iou", "len", "int", "len", "len", "Exception"], "methods", ["None"], ["", "def", "computeIoU", "(", "self", ",", "imgId", ",", "catId", ")", ":", "\n", "        ", "p", "=", "self", ".", "params", "\n", "if", "p", ".", "useCats", ":", "\n", "            ", "gt", "=", "self", ".", "_gts", "[", "imgId", ",", "catId", "]", "\n", "dt", "=", "self", ".", "_dts", "[", "imgId", ",", "catId", "]", "\n", "", "else", ":", "\n", "            ", "gt", "=", "[", "_", "for", "cId", "in", "p", ".", "catIds", "for", "_", "in", "self", ".", "_gts", "[", "imgId", ",", "cId", "]", "]", "\n", "dt", "=", "[", "_", "for", "cId", "in", "p", ".", "catIds", "for", "_", "in", "self", ".", "_dts", "[", "imgId", ",", "cId", "]", "]", "\n", "", "if", "len", "(", "gt", ")", "==", "0", "and", "len", "(", "dt", ")", "==", "0", ":", "\n", "            ", "return", "[", "]", "\n", "", "inds", "=", "np", ".", "argsort", "(", "[", "-", "d", "[", "'score'", "]", "for", "d", "in", "dt", "]", ",", "kind", "=", "'mergesort'", ")", "\n", "dt", "=", "[", "dt", "[", "i", "]", "for", "i", "in", "inds", "]", "\n", "if", "len", "(", "dt", ")", ">", "p", ".", "maxDets", "[", "-", "1", "]", ":", "\n", "            ", "dt", "=", "dt", "[", "0", ":", "p", ".", "maxDets", "[", "-", "1", "]", "]", "\n", "\n", "", "if", "p", ".", "iouType", "==", "'segm'", ":", "\n", "            ", "g", "=", "[", "g", "[", "'segmentation'", "]", "for", "g", "in", "gt", "]", "\n", "d", "=", "[", "d", "[", "'segmentation'", "]", "for", "d", "in", "dt", "]", "\n", "", "elif", "p", ".", "iouType", "==", "'bbox'", ":", "\n", "            ", "g", "=", "[", "g", "[", "'bbox'", "]", "for", "g", "in", "gt", "]", "\n", "d", "=", "[", "d", "[", "'bbox'", "]", "for", "d", "in", "dt", "]", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'unknown iouType for iou computation'", ")", "\n", "\n", "# compute iou between each dt and gt region", "\n", "", "iscrowd", "=", "[", "int", "(", "o", "[", "'iscrowd'", "]", ")", "for", "o", "in", "gt", "]", "\n", "ious", "=", "maskUtils", ".", "iou", "(", "d", ",", "g", ",", "iscrowd", ")", "\n", "return", "ious", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.computeOks": [[200, 249], ["numpy.argsort", "numpy.zeros", "len", "enumerate", "len", "numpy.array", "numpy.count_nonzero", "enumerate", "len", "len", "len", "len", "numpy.array", "numpy.zeros", "numpy.sum", "numpy.max", "numpy.max", "numpy.max", "numpy.max", "numpy.exp", "numpy.spacing"], "methods", ["None"], ["", "def", "computeOks", "(", "self", ",", "imgId", ",", "catId", ")", ":", "\n", "        ", "p", "=", "self", ".", "params", "\n", "# dimention here should be Nxm", "\n", "gts", "=", "self", ".", "_gts", "[", "imgId", ",", "catId", "]", "\n", "dts", "=", "self", ".", "_dts", "[", "imgId", ",", "catId", "]", "\n", "inds", "=", "np", ".", "argsort", "(", "[", "-", "d", "[", "'score'", "]", "for", "d", "in", "dts", "]", ",", "kind", "=", "'mergesort'", ")", "\n", "dts", "=", "[", "dts", "[", "i", "]", "for", "i", "in", "inds", "]", "\n", "if", "len", "(", "dts", ")", ">", "p", ".", "maxDets", "[", "-", "1", "]", ":", "\n", "            ", "dts", "=", "dts", "[", "0", ":", "p", ".", "maxDets", "[", "-", "1", "]", "]", "\n", "# if len(gts) == 0 and len(dts) == 0:", "\n", "", "if", "len", "(", "gts", ")", "==", "0", "or", "len", "(", "dts", ")", "==", "0", ":", "\n", "            ", "return", "[", "]", "\n", "", "ious", "=", "np", ".", "zeros", "(", "(", "len", "(", "dts", ")", ",", "len", "(", "gts", ")", ")", ")", "\n", "sigmas", "=", "p", ".", "kpt_oks_sigmas", "\n", "vars", "=", "(", "sigmas", "*", "2", ")", "**", "2", "\n", "k", "=", "len", "(", "sigmas", ")", "\n", "# compute oks between each detection and ground truth object", "\n", "for", "j", ",", "gt", "in", "enumerate", "(", "gts", ")", ":", "\n", "# create bounds for ignore regions(double the gt bbox)", "\n", "            ", "g", "=", "np", ".", "array", "(", "gt", "[", "'keypoints'", "]", ")", "\n", "xg", "=", "g", "[", "0", ":", ":", "3", "]", "\n", "yg", "=", "g", "[", "1", ":", ":", "3", "]", "\n", "vg", "=", "g", "[", "2", ":", ":", "3", "]", "\n", "k1", "=", "np", ".", "count_nonzero", "(", "vg", ">", "0", ")", "\n", "bb", "=", "gt", "[", "'bbox'", "]", "\n", "x0", "=", "bb", "[", "0", "]", "-", "bb", "[", "2", "]", "\n", "x1", "=", "bb", "[", "0", "]", "+", "bb", "[", "2", "]", "*", "2", "\n", "y0", "=", "bb", "[", "1", "]", "-", "bb", "[", "3", "]", "\n", "y1", "=", "bb", "[", "1", "]", "+", "bb", "[", "3", "]", "*", "2", "\n", "for", "i", ",", "dt", "in", "enumerate", "(", "dts", ")", ":", "\n", "                ", "d", "=", "np", ".", "array", "(", "dt", "[", "'keypoints'", "]", ")", "\n", "xd", "=", "d", "[", "0", ":", ":", "3", "]", "\n", "yd", "=", "d", "[", "1", ":", ":", "3", "]", "\n", "if", "k1", ">", "0", ":", "\n", "# measure the per-keypoint distance if keypoints visible", "\n", "                    ", "dx", "=", "xd", "-", "xg", "\n", "dy", "=", "yd", "-", "yg", "\n", "", "else", ":", "\n", "# measure minimum distance to keypoints in (x0,y0) & (x1,y1)", "\n", "                    ", "z", "=", "np", ".", "zeros", "(", "(", "k", ")", ")", "\n", "dx", "=", "np", ".", "max", "(", "(", "z", ",", "x0", "-", "xd", ")", ",", "axis", "=", "0", ")", "+", "np", ".", "max", "(", "\n", "(", "z", ",", "xd", "-", "x1", ")", ",", "axis", "=", "0", ")", "\n", "dy", "=", "np", ".", "max", "(", "(", "z", ",", "y0", "-", "yd", ")", ",", "axis", "=", "0", ")", "+", "np", ".", "max", "(", "\n", "(", "z", ",", "yd", "-", "y1", ")", ",", "axis", "=", "0", ")", "\n", "", "e", "=", "(", "dx", "**", "2", "+", "dy", "**", "2", ")", "/", "vars", "/", "(", "gt", "[", "'area'", "]", "+", "np", ".", "spacing", "(", "1", ")", ")", "/", "2", "\n", "if", "k1", ">", "0", ":", "\n", "                    ", "e", "=", "e", "[", "vg", ">", "0", "]", "\n", "", "ious", "[", "i", ",", "j", "]", "=", "np", ".", "sum", "(", "np", ".", "exp", "(", "-", "e", ")", ")", "/", "e", ".", "shape", "[", "0", "]", "\n", "", "", "return", "ious", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluateImg": [[250, 331], ["numpy.argsort", "numpy.argsort", "len", "len", "len", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.zeros", "numpy.array().reshape", "numpy.logical_or", "int", "enumerate", "numpy.logical_and", "len", "len", "len", "len", "enumerate", "numpy.array", "len", "numpy.repeat", "min", "enumerate"], "methods", ["None"], ["", "def", "evaluateImg", "(", "self", ",", "imgId", ",", "catId", ",", "aRng", ",", "maxDet", ")", ":", "\n", "        ", "'''\n        perform evaluation for single category and image\n        :return: dict (single image results)\n        '''", "\n", "p", "=", "self", ".", "params", "\n", "if", "p", ".", "useCats", ":", "\n", "            ", "gt", "=", "self", ".", "_gts", "[", "imgId", ",", "catId", "]", "\n", "dt", "=", "self", ".", "_dts", "[", "imgId", ",", "catId", "]", "\n", "", "else", ":", "\n", "            ", "gt", "=", "[", "_", "for", "cId", "in", "p", ".", "catIds", "for", "_", "in", "self", ".", "_gts", "[", "imgId", ",", "cId", "]", "]", "\n", "dt", "=", "[", "_", "for", "cId", "in", "p", ".", "catIds", "for", "_", "in", "self", ".", "_dts", "[", "imgId", ",", "cId", "]", "]", "\n", "", "if", "len", "(", "gt", ")", "==", "0", "and", "len", "(", "dt", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "\n", "", "for", "g", "in", "gt", ":", "\n", "            ", "if", "g", "[", "'ignore'", "]", "or", "(", "g", "[", "'area'", "]", "<", "aRng", "[", "0", "]", "or", "g", "[", "'area'", "]", ">", "aRng", "[", "1", "]", ")", ":", "\n", "                ", "g", "[", "'_ignore'", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "g", "[", "'_ignore'", "]", "=", "0", "\n", "\n", "# sort dt highest score first, sort gt ignore last", "\n", "", "", "gtind", "=", "np", ".", "argsort", "(", "[", "g", "[", "'_ignore'", "]", "for", "g", "in", "gt", "]", ",", "kind", "=", "'mergesort'", ")", "\n", "gt", "=", "[", "gt", "[", "i", "]", "for", "i", "in", "gtind", "]", "\n", "dtind", "=", "np", ".", "argsort", "(", "[", "-", "d", "[", "'score'", "]", "for", "d", "in", "dt", "]", ",", "kind", "=", "'mergesort'", ")", "\n", "dt", "=", "[", "dt", "[", "i", "]", "for", "i", "in", "dtind", "[", "0", ":", "maxDet", "]", "]", "\n", "iscrowd", "=", "[", "int", "(", "o", "[", "'iscrowd'", "]", ")", "for", "o", "in", "gt", "]", "\n", "# load computed ious", "\n", "ious", "=", "self", ".", "ious", "[", "imgId", ",", "catId", "]", "[", ":", ",", "gtind", "]", "if", "len", "(", "self", ".", "ious", "[", "\n", "imgId", ",", "catId", "]", ")", ">", "0", "else", "self", ".", "ious", "[", "imgId", ",", "catId", "]", "\n", "\n", "T", "=", "len", "(", "p", ".", "iouThrs", ")", "\n", "G", "=", "len", "(", "gt", ")", "\n", "D", "=", "len", "(", "dt", ")", "\n", "gtm", "=", "np", ".", "zeros", "(", "(", "T", ",", "G", ")", ")", "\n", "dtm", "=", "np", ".", "zeros", "(", "(", "T", ",", "D", ")", ")", "\n", "gtIg", "=", "np", ".", "array", "(", "[", "g", "[", "'_ignore'", "]", "for", "g", "in", "gt", "]", ")", "\n", "dtIg", "=", "np", ".", "zeros", "(", "(", "T", ",", "D", ")", ")", "\n", "if", "not", "len", "(", "ious", ")", "==", "0", ":", "\n", "            ", "for", "tind", ",", "t", "in", "enumerate", "(", "p", ".", "iouThrs", ")", ":", "\n", "                ", "for", "dind", ",", "d", "in", "enumerate", "(", "dt", ")", ":", "\n", "# information about best match so far (m=-1 -> unmatched)", "\n", "                    ", "iou", "=", "min", "(", "[", "t", ",", "1", "-", "1e-10", "]", ")", "\n", "m", "=", "-", "1", "\n", "for", "gind", ",", "g", "in", "enumerate", "(", "gt", ")", ":", "\n", "# if this gt already matched, and not a crowd, continue", "\n", "                        ", "if", "gtm", "[", "tind", ",", "gind", "]", ">", "0", "and", "not", "iscrowd", "[", "gind", "]", ":", "\n", "                            ", "continue", "\n", "# if dt matched to reg gt, and on ignore gt, stop", "\n", "", "if", "m", ">", "-", "1", "and", "gtIg", "[", "m", "]", "==", "0", "and", "gtIg", "[", "gind", "]", "==", "1", ":", "\n", "                            ", "break", "\n", "# continue to next gt unless better match made", "\n", "", "if", "ious", "[", "dind", ",", "gind", "]", "<", "iou", ":", "\n", "                            ", "continue", "\n", "# if match successful and best so far, store appropriately", "\n", "", "iou", "=", "ious", "[", "dind", ",", "gind", "]", "\n", "m", "=", "gind", "\n", "# if match made store id of match for both dt and gt", "\n", "", "if", "m", "==", "-", "1", ":", "\n", "                        ", "continue", "\n", "", "dtIg", "[", "tind", ",", "dind", "]", "=", "gtIg", "[", "m", "]", "\n", "dtm", "[", "tind", ",", "dind", "]", "=", "gt", "[", "m", "]", "[", "'id'", "]", "\n", "gtm", "[", "tind", ",", "m", "]", "=", "d", "[", "'id'", "]", "\n", "# set unmatched detections outside of area range to ignore", "\n", "", "", "", "a", "=", "np", ".", "array", "(", "\n", "[", "d", "[", "'area'", "]", "<", "aRng", "[", "0", "]", "or", "d", "[", "'area'", "]", ">", "aRng", "[", "1", "]", "for", "d", "in", "dt", "]", ")", ".", "reshape", "(", "\n", "(", "1", ",", "len", "(", "dt", ")", ")", ")", "\n", "dtIg", "=", "np", ".", "logical_or", "(", "dtIg", ",", "np", ".", "logical_and", "(", "dtm", "==", "0", ",", "np", ".", "repeat", "(", "a", ",", "T", ",", "0", ")", ")", ")", "\n", "# store results for given image and category", "\n", "return", "{", "\n", "'image_id'", ":", "imgId", ",", "\n", "'category_id'", ":", "catId", ",", "\n", "'aRng'", ":", "aRng", ",", "\n", "'maxDet'", ":", "maxDet", ",", "\n", "'dtIds'", ":", "[", "d", "[", "'id'", "]", "for", "d", "in", "dt", "]", ",", "\n", "'gtIds'", ":", "[", "g", "[", "'id'", "]", "for", "g", "in", "gt", "]", ",", "\n", "'dtMatches'", ":", "dtm", ",", "\n", "'gtMatches'", ":", "gtm", ",", "\n", "'dtScores'", ":", "[", "d", "[", "'score'", "]", "for", "d", "in", "dt", "]", ",", "\n", "'gtIgnore'", ":", "gtIg", ",", "\n", "'dtIgnore'", ":", "dtIg", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.accumulate": [[333, 450], ["print", "time.time", "len", "len", "len", "len", "set", "set", "set", "set", "len", "len", "enumerate", "time.time", "print", "print", "len", "numpy.ones", "numpy.ones", "numpy.ones", "map", "enumerate", "datetime.datetime.now().strftime", "enumerate", "enumerate", "enumerate", "enumerate", "enumerate", "map", "numpy.concatenate", "numpy.argsort", "numpy.concatenate", "numpy.count_nonzero", "numpy.logical_and", "numpy.logical_and", "numpy.cumsum().astype", "numpy.cumsum().astype", "enumerate", "datetime.datetime.now", "len", "numpy.concatenate", "numpy.concatenate", "numpy.logical_not", "numpy.logical_not", "numpy.logical_not", "zip", "numpy.array", "numpy.array", "len", "numpy.zeros", "numpy.zeros", "pr.tolist.tolist.tolist", "q.tolist.tolist.tolist", "range", "numpy.searchsorted", "numpy.array", "numpy.array", "tuple", "numpy.cumsum", "numpy.cumsum", "enumerate", "numpy.spacing"], "methods", ["None"], ["", "def", "accumulate", "(", "self", ",", "p", "=", "None", ")", ":", "\n", "        ", "'''\n        Accumulate per image evaluation results and store the result in self.eval\n        :param p: input params for evaluation\n        :return: None\n        '''", "\n", "print", "(", "'Accumulating evaluation results...'", ")", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "if", "not", "self", ".", "evalImgs", ":", "\n", "            ", "print", "(", "'Please run evaluate() first'", ")", "\n", "# allows input customized parameters", "\n", "", "if", "p", "is", "None", ":", "\n", "            ", "p", "=", "self", ".", "params", "\n", "", "p", ".", "catIds", "=", "p", ".", "catIds", "if", "p", ".", "useCats", "==", "1", "else", "[", "-", "1", "]", "\n", "T", "=", "len", "(", "p", ".", "iouThrs", ")", "\n", "R", "=", "len", "(", "p", ".", "recThrs", ")", "\n", "K", "=", "len", "(", "p", ".", "catIds", ")", "if", "p", ".", "useCats", "else", "1", "\n", "A", "=", "len", "(", "p", ".", "areaRng", ")", "\n", "M", "=", "len", "(", "p", ".", "maxDets", ")", "\n", "precision", "=", "-", "np", ".", "ones", "(", "\n", "(", "T", ",", "R", ",", "K", ",", "A", ",", "M", ")", ")", "# -1 for the precision of absent categories", "\n", "recall", "=", "-", "np", ".", "ones", "(", "(", "T", ",", "K", ",", "A", ",", "M", ")", ")", "\n", "scores", "=", "-", "np", ".", "ones", "(", "(", "T", ",", "R", ",", "K", ",", "A", ",", "M", ")", ")", "\n", "\n", "# create dictionary for future indexing", "\n", "_pe", "=", "self", ".", "_paramsEval", "\n", "catIds", "=", "_pe", ".", "catIds", "if", "_pe", ".", "useCats", "else", "[", "-", "1", "]", "\n", "setK", "=", "set", "(", "catIds", ")", "\n", "setA", "=", "set", "(", "map", "(", "tuple", ",", "_pe", ".", "areaRng", ")", ")", "\n", "setM", "=", "set", "(", "_pe", ".", "maxDets", ")", "\n", "setI", "=", "set", "(", "_pe", ".", "imgIds", ")", "\n", "# get inds to evaluate", "\n", "k_list", "=", "[", "n", "for", "n", ",", "k", "in", "enumerate", "(", "p", ".", "catIds", ")", "if", "k", "in", "setK", "]", "\n", "m_list", "=", "[", "m", "for", "n", ",", "m", "in", "enumerate", "(", "p", ".", "maxDets", ")", "if", "m", "in", "setM", "]", "\n", "a_list", "=", "[", "\n", "n", "for", "n", ",", "a", "in", "enumerate", "(", "map", "(", "lambda", "x", ":", "tuple", "(", "x", ")", ",", "p", ".", "areaRng", ")", ")", "\n", "if", "a", "in", "setA", "\n", "]", "\n", "i_list", "=", "[", "n", "for", "n", ",", "i", "in", "enumerate", "(", "p", ".", "imgIds", ")", "if", "i", "in", "setI", "]", "\n", "I0", "=", "len", "(", "_pe", ".", "imgIds", ")", "\n", "A0", "=", "len", "(", "_pe", ".", "areaRng", ")", "\n", "# retrieve E at each category, area range, and max number of detections", "\n", "for", "k", ",", "k0", "in", "enumerate", "(", "k_list", ")", ":", "\n", "            ", "Nk", "=", "k0", "*", "A0", "*", "I0", "\n", "for", "a", ",", "a0", "in", "enumerate", "(", "a_list", ")", ":", "\n", "                ", "Na", "=", "a0", "*", "I0", "\n", "for", "m", ",", "maxDet", "in", "enumerate", "(", "m_list", ")", ":", "\n", "                    ", "E", "=", "[", "self", ".", "evalImgs", "[", "Nk", "+", "Na", "+", "i", "]", "for", "i", "in", "i_list", "]", "\n", "E", "=", "[", "e", "for", "e", "in", "E", "if", "not", "e", "is", "None", "]", "\n", "if", "len", "(", "E", ")", "==", "0", ":", "\n", "                        ", "continue", "\n", "", "dtScores", "=", "np", ".", "concatenate", "(", "\n", "[", "e", "[", "'dtScores'", "]", "[", "0", ":", "maxDet", "]", "for", "e", "in", "E", "]", ")", "\n", "\n", "# different sorting method generates slightly different results.", "\n", "# mergesort is used to be consistent as Matlab implementation.", "\n", "inds", "=", "np", ".", "argsort", "(", "-", "dtScores", ",", "kind", "=", "'mergesort'", ")", "\n", "dtScoresSorted", "=", "dtScores", "[", "inds", "]", "\n", "\n", "dtm", "=", "np", ".", "concatenate", "(", "\n", "[", "e", "[", "'dtMatches'", "]", "[", ":", ",", "0", ":", "maxDet", "]", "for", "e", "in", "E", "]", ",", "\n", "axis", "=", "1", ")", "[", ":", ",", "inds", "]", "\n", "dtIg", "=", "np", ".", "concatenate", "(", "\n", "[", "e", "[", "'dtIgnore'", "]", "[", ":", ",", "0", ":", "maxDet", "]", "for", "e", "in", "E", "]", ",", "\n", "axis", "=", "1", ")", "[", ":", ",", "inds", "]", "\n", "gtIg", "=", "np", ".", "concatenate", "(", "[", "e", "[", "'gtIgnore'", "]", "for", "e", "in", "E", "]", ")", "\n", "npig", "=", "np", ".", "count_nonzero", "(", "gtIg", "==", "0", ")", "\n", "if", "npig", "==", "0", ":", "\n", "                        ", "continue", "\n", "", "tps", "=", "np", ".", "logical_and", "(", "dtm", ",", "np", ".", "logical_not", "(", "dtIg", ")", ")", "\n", "fps", "=", "np", ".", "logical_and", "(", "\n", "np", ".", "logical_not", "(", "dtm", ")", ",", "np", ".", "logical_not", "(", "dtIg", ")", ")", "\n", "\n", "tp_sum", "=", "np", ".", "cumsum", "(", "tps", ",", "axis", "=", "1", ")", ".", "astype", "(", "dtype", "=", "np", ".", "float", ")", "\n", "fp_sum", "=", "np", ".", "cumsum", "(", "fps", ",", "axis", "=", "1", ")", ".", "astype", "(", "dtype", "=", "np", ".", "float", ")", "\n", "for", "t", ",", "(", "tp", ",", "fp", ")", "in", "enumerate", "(", "zip", "(", "tp_sum", ",", "fp_sum", ")", ")", ":", "\n", "                        ", "tp", "=", "np", ".", "array", "(", "tp", ")", "\n", "fp", "=", "np", ".", "array", "(", "fp", ")", "\n", "nd", "=", "len", "(", "tp", ")", "\n", "rc", "=", "tp", "/", "npig", "\n", "pr", "=", "tp", "/", "(", "fp", "+", "tp", "+", "np", ".", "spacing", "(", "1", ")", ")", "\n", "q", "=", "np", ".", "zeros", "(", "(", "R", ",", ")", ")", "\n", "ss", "=", "np", ".", "zeros", "(", "(", "R", ",", ")", ")", "\n", "\n", "if", "nd", ":", "\n", "                            ", "recall", "[", "t", ",", "k", ",", "a", ",", "m", "]", "=", "rc", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "                            ", "recall", "[", "t", ",", "k", ",", "a", ",", "m", "]", "=", "0", "\n", "\n", "# numpy is slow without cython optimization for accessing elements", "\n", "# use python array gets significant speed improvement", "\n", "", "pr", "=", "pr", ".", "tolist", "(", ")", "\n", "q", "=", "q", ".", "tolist", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "nd", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "                            ", "if", "pr", "[", "i", "]", ">", "pr", "[", "i", "-", "1", "]", ":", "\n", "                                ", "pr", "[", "i", "-", "1", "]", "=", "pr", "[", "i", "]", "\n", "\n", "", "", "inds", "=", "np", ".", "searchsorted", "(", "rc", ",", "p", ".", "recThrs", ",", "side", "=", "'left'", ")", "\n", "try", ":", "\n", "                            ", "for", "ri", ",", "pi", "in", "enumerate", "(", "inds", ")", ":", "\n", "                                ", "q", "[", "ri", "]", "=", "pr", "[", "pi", "]", "\n", "ss", "[", "ri", "]", "=", "dtScoresSorted", "[", "pi", "]", "\n", "", "", "except", ":", "\n", "                            ", "pass", "\n", "", "precision", "[", "t", ",", ":", ",", "k", ",", "a", ",", "m", "]", "=", "np", ".", "array", "(", "q", ")", "\n", "scores", "[", "t", ",", ":", ",", "k", ",", "a", ",", "m", "]", "=", "np", ".", "array", "(", "ss", ")", "\n", "", "", "", "", "self", ".", "eval", "=", "{", "\n", "'params'", ":", "p", ",", "\n", "'counts'", ":", "[", "T", ",", "R", ",", "K", ",", "A", ",", "M", "]", ",", "\n", "'date'", ":", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "\n", "'precision'", ":", "precision", ",", "\n", "'recall'", ":", "recall", ",", "\n", "'scores'", ":", "scores", ",", "\n", "}", "\n", "toc", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'DONE (t={:0.2f}s).'", ".", "format", "(", "toc", "-", "tic", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.summarize": [[451, 535], ["cocoeval.COCOeval.summarize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.summarize"], ["", "def", "summarize", "(", "self", ")", ":", "\n", "        ", "'''\n        Compute and display summary metrics for evaluation results.\n        Note this functin can *only* be applied on the default parameter setting\n        '''", "\n", "\n", "def", "_summarize", "(", "ap", "=", "1", ",", "iouThr", "=", "None", ",", "areaRng", "=", "'all'", ",", "maxDets", "=", "100", ")", ":", "\n", "            ", "p", "=", "self", ".", "params", "\n", "iStr", "=", "' {:<18} {} @[ IoU={:<9} | area={:>6s} | maxDets={:>3d} ] = {:0.3f}'", "\n", "titleStr", "=", "'Average Precision'", "if", "ap", "==", "1", "else", "'Average Recall'", "\n", "typeStr", "=", "'(AP)'", "if", "ap", "==", "1", "else", "'(AR)'", "\n", "iouStr", "=", "'{:0.2f}:{:0.2f}'", ".", "format", "(", "p", ".", "iouThrs", "[", "0", "]", ",", "p", ".", "iouThrs", "[", "-", "1", "]", ")", "if", "iouThr", "is", "None", "else", "'{:0.2f}'", ".", "format", "(", "iouThr", ")", "\n", "\n", "aind", "=", "[", "i", "for", "i", ",", "aRng", "in", "enumerate", "(", "p", ".", "areaRngLbl", ")", "if", "aRng", "==", "areaRng", "]", "\n", "mind", "=", "[", "i", "for", "i", ",", "mDet", "in", "enumerate", "(", "p", ".", "maxDets", ")", "if", "mDet", "==", "maxDets", "]", "\n", "if", "ap", "==", "1", ":", "\n", "# dimension of precision: [TxRxKxAxM]", "\n", "                ", "s", "=", "self", ".", "eval", "[", "'precision'", "]", "\n", "# IoU", "\n", "if", "iouThr", "is", "not", "None", ":", "\n", "                    ", "t", "=", "np", ".", "where", "(", "iouThr", "==", "p", ".", "iouThrs", ")", "[", "0", "]", "\n", "s", "=", "s", "[", "t", "]", "\n", "", "s", "=", "s", "[", ":", ",", ":", ",", ":", ",", "aind", ",", "mind", "]", "\n", "", "else", ":", "\n", "# dimension of recall: [TxKxAxM]", "\n", "                ", "s", "=", "self", ".", "eval", "[", "'recall'", "]", "\n", "if", "iouThr", "is", "not", "None", ":", "\n", "                    ", "t", "=", "np", ".", "where", "(", "iouThr", "==", "p", ".", "iouThrs", ")", "[", "0", "]", "\n", "s", "=", "s", "[", "t", "]", "\n", "", "s", "=", "s", "[", ":", ",", ":", ",", "aind", ",", "mind", "]", "\n", "", "if", "len", "(", "s", "[", "s", ">", "-", "1", "]", ")", "==", "0", ":", "\n", "                ", "mean_s", "=", "-", "1", "\n", "", "else", ":", "\n", "                ", "mean_s", "=", "np", ".", "mean", "(", "s", "[", "s", ">", "-", "1", "]", ")", "\n", "", "print", "(", "\n", "iStr", ".", "format", "(", "titleStr", ",", "typeStr", ",", "iouStr", ",", "areaRng", ",", "maxDets", ",", "\n", "mean_s", ")", ")", "\n", "return", "mean_s", "\n", "\n", "", "def", "_summarizeDets", "(", ")", ":", "\n", "            ", "stats", "=", "np", ".", "zeros", "(", "(", "12", ",", ")", ")", "\n", "stats", "[", "0", "]", "=", "_summarize", "(", "1", ")", "\n", "stats", "[", "1", "]", "=", "_summarize", "(", "1", ",", "iouThr", "=", ".5", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "2", "]", ")", "\n", "stats", "[", "2", "]", "=", "_summarize", "(", "1", ",", "iouThr", "=", ".75", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "2", "]", ")", "\n", "stats", "[", "3", "]", "=", "_summarize", "(", "\n", "1", ",", "areaRng", "=", "'small'", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "2", "]", ")", "\n", "stats", "[", "4", "]", "=", "_summarize", "(", "\n", "1", ",", "areaRng", "=", "'medium'", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "2", "]", ")", "\n", "stats", "[", "5", "]", "=", "_summarize", "(", "\n", "1", ",", "areaRng", "=", "'large'", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "2", "]", ")", "\n", "stats", "[", "6", "]", "=", "_summarize", "(", "0", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "0", "]", ")", "\n", "stats", "[", "7", "]", "=", "_summarize", "(", "0", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "1", "]", ")", "\n", "stats", "[", "8", "]", "=", "_summarize", "(", "0", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "2", "]", ")", "\n", "stats", "[", "9", "]", "=", "_summarize", "(", "\n", "0", ",", "areaRng", "=", "'small'", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "2", "]", ")", "\n", "stats", "[", "10", "]", "=", "_summarize", "(", "\n", "0", ",", "areaRng", "=", "'medium'", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "2", "]", ")", "\n", "stats", "[", "11", "]", "=", "_summarize", "(", "\n", "0", ",", "areaRng", "=", "'large'", ",", "maxDets", "=", "self", ".", "params", ".", "maxDets", "[", "2", "]", ")", "\n", "return", "stats", "\n", "\n", "", "def", "_summarizeKps", "(", ")", ":", "\n", "            ", "stats", "=", "np", ".", "zeros", "(", "(", "10", ",", ")", ")", "\n", "stats", "[", "0", "]", "=", "_summarize", "(", "1", ",", "maxDets", "=", "20", ")", "\n", "stats", "[", "1", "]", "=", "_summarize", "(", "1", ",", "maxDets", "=", "20", ",", "iouThr", "=", ".5", ")", "\n", "stats", "[", "2", "]", "=", "_summarize", "(", "1", ",", "maxDets", "=", "20", ",", "iouThr", "=", ".75", ")", "\n", "stats", "[", "3", "]", "=", "_summarize", "(", "1", ",", "maxDets", "=", "20", ",", "areaRng", "=", "'medium'", ")", "\n", "stats", "[", "4", "]", "=", "_summarize", "(", "1", ",", "maxDets", "=", "20", ",", "areaRng", "=", "'large'", ")", "\n", "stats", "[", "5", "]", "=", "_summarize", "(", "0", ",", "maxDets", "=", "20", ")", "\n", "stats", "[", "6", "]", "=", "_summarize", "(", "0", ",", "maxDets", "=", "20", ",", "iouThr", "=", ".5", ")", "\n", "stats", "[", "7", "]", "=", "_summarize", "(", "0", ",", "maxDets", "=", "20", ",", "iouThr", "=", ".75", ")", "\n", "stats", "[", "8", "]", "=", "_summarize", "(", "0", ",", "maxDets", "=", "20", ",", "areaRng", "=", "'medium'", ")", "\n", "stats", "[", "9", "]", "=", "_summarize", "(", "0", ",", "maxDets", "=", "20", ",", "areaRng", "=", "'large'", ")", "\n", "return", "stats", "\n", "\n", "", "if", "not", "self", ".", "eval", ":", "\n", "            ", "raise", "Exception", "(", "'Please run accumulate() first'", ")", "\n", "", "iouType", "=", "self", ".", "params", ".", "iouType", "\n", "if", "iouType", "==", "'segm'", "or", "iouType", "==", "'bbox'", ":", "\n", "            ", "summarize", "=", "_summarizeDets", "\n", "", "elif", "iouType", "==", "'keypoints'", ":", "\n", "            ", "summarize", "=", "_summarizeKps", "\n", "", "self", ".", "stats", "=", "summarize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.__str__": [[536, 538], ["cocoeval.COCOeval.summarize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.summarize"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "self", ".", "summarize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.Params.setDetParams": [[545, 558], ["numpy.linspace", "numpy.linspace", "int", "int", "numpy.round", "numpy.round"], "methods", ["None"], ["def", "setDetParams", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgIds", "=", "[", "]", "\n", "self", ".", "catIds", "=", "[", "]", "\n", "# np.arange causes trouble.  the data point on arange is slightly larger than the true value", "\n", "self", ".", "iouThrs", "=", "np", ".", "linspace", "(", "\n", ".5", ",", "0.95", ",", "int", "(", "np", ".", "round", "(", "(", "0.95", "-", ".5", ")", "/", ".05", ")", ")", "+", "1", ",", "endpoint", "=", "True", ")", "\n", "self", ".", "recThrs", "=", "np", ".", "linspace", "(", "\n", ".0", ",", "1.00", ",", "int", "(", "np", ".", "round", "(", "(", "1.00", "-", ".0", ")", "/", ".01", ")", ")", "+", "1", ",", "endpoint", "=", "True", ")", "\n", "self", ".", "maxDets", "=", "[", "1", ",", "10", ",", "100", "]", "\n", "self", ".", "areaRng", "=", "[", "[", "0", "**", "2", ",", "1e5", "**", "2", "]", ",", "[", "0", "**", "2", ",", "32", "**", "2", "]", ",", "[", "32", "**", "2", ",", "96", "**", "2", "]", ",", "\n", "[", "96", "**", "2", ",", "1e5", "**", "2", "]", "]", "\n", "self", ".", "areaRngLbl", "=", "[", "'all'", ",", "'small'", ",", "'medium'", ",", "'large'", "]", "\n", "self", ".", "useCats", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.Params.setKpParams": [[559, 575], ["numpy.linspace", "numpy.linspace", "numpy.array", "int", "int", "numpy.round", "numpy.round"], "methods", ["None"], ["", "def", "setKpParams", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgIds", "=", "[", "]", "\n", "self", ".", "catIds", "=", "[", "]", "\n", "# np.arange causes trouble.  the data point on arange is slightly larger than the true value", "\n", "self", ".", "iouThrs", "=", "np", ".", "linspace", "(", "\n", ".5", ",", "0.95", ",", "int", "(", "np", ".", "round", "(", "(", "0.95", "-", ".5", ")", "/", ".05", ")", ")", "+", "1", ",", "endpoint", "=", "True", ")", "\n", "self", ".", "recThrs", "=", "np", ".", "linspace", "(", "\n", ".0", ",", "1.00", ",", "int", "(", "np", ".", "round", "(", "(", "1.00", "-", ".0", ")", "/", ".01", ")", ")", "+", "1", ",", "endpoint", "=", "True", ")", "\n", "self", ".", "maxDets", "=", "[", "20", "]", "\n", "self", ".", "areaRng", "=", "[", "[", "0", "**", "2", ",", "1e5", "**", "2", "]", ",", "[", "32", "**", "2", ",", "96", "**", "2", "]", ",", "[", "96", "**", "2", ",", "1e5", "**", "2", "]", "]", "\n", "self", ".", "areaRngLbl", "=", "[", "'all'", ",", "'medium'", ",", "'large'", "]", "\n", "self", ".", "useCats", "=", "1", "\n", "self", ".", "kpt_oks_sigmas", "=", "np", ".", "array", "(", "[", "\n", ".26", ",", ".25", ",", ".25", ",", ".35", ",", ".35", ",", ".79", ",", ".79", ",", ".72", ",", ".72", ",", ".62", ",", ".62", ",", "1.07", ",", "1.07", ",", "\n", ".87", ",", ".87", ",", ".89", ",", ".89", "\n", "]", ")", "/", "10.0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.Params.__init__": [[576, 586], ["cocoeval.Params.setDetParams", "cocoeval.Params.setKpParams", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.Params.setDetParams", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.Params.setKpParams"], ["", "def", "__init__", "(", "self", ",", "iouType", "=", "'segm'", ")", ":", "\n", "        ", "if", "iouType", "==", "'segm'", "or", "iouType", "==", "'bbox'", ":", "\n", "            ", "self", ".", "setDetParams", "(", ")", "\n", "", "elif", "iouType", "==", "'keypoints'", ":", "\n", "            ", "self", ".", "setKpParams", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'iouType not supported'", ")", "\n", "", "self", ".", "iouType", "=", "iouType", "\n", "# useSegm is deprecated", "\n", "self", ".", "useSegm", "=", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rs_regularization.boundary_regularization": [[29, 147], ["numpy.squeeze", "rdp_alg.rdp", "range", "numpy.argmax", "enumerate", "numpy.array", "final_points[].transpose.append", "range", "final_points[].transpose.append", "numpy.array", "final_points[].transpose", "cal_point.cal_dist", "cal_point.cal_azimuth", "dists.append", "azis.append", "azis_index.append", "zip", "np.array.append", "para_vetr_idxs.append", "np.array.append", "cal_line.line", "cal_line.line", "cal_line.intersection", "final_points[].transpose.append", "numpy.abs", "para_vetr_idxs.append", "rotate_ang.Srotation_angle_get_coor_coordinates", "rotate_ang.Srotation_angle_get_coor_coordinates", "cal_line.line", "cal_line.line", "cal_line.par_line_dist", "numpy.abs", "para_vetr_idxs.append", "numpy.abs", "numpy.abs", "rotate_ang.Nrotation_angle_get_coor_coordinates", "rotate_ang.Nrotation_angle_get_coor_coordinates", "cal_line.point_in_line", "final_points[].transpose.append", "cal_line.point_in_line", "cal_line.point_in_line", "cal_line.point_in_line", "final_points[].transpose.append", "final_points[].transpose.append", "numpy.abs", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg.rdp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_point.cal_dist", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_point.cal_azimuth", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.line", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.line", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.intersection", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rotate_ang.Srotation_angle_get_coor_coordinates", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rotate_ang.Srotation_angle_get_coor_coordinates", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.line", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.line", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.par_line_dist", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rotate_ang.Nrotation_angle_get_coor_coordinates", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rotate_ang.Nrotation_angle_get_coor_coordinates", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.point_in_line", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.point_in_line", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.point_in_line", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.point_in_line", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["def", "boundary_regularization", "(", "contours", ",", "img_shape", ",", "epsilon", "=", "6", ")", ":", "\n", "    ", "h", ",", "w", "=", "img_shape", "[", "0", ":", "2", "]", "\n", "# \u8f6e\u5ed3\u5b9a\u4f4d", "\n", "contours", "=", "np", ".", "squeeze", "(", "contours", ")", "\n", "# \u8f6e\u5ed3\u7cbe\u7b80DP", "\n", "contours", "=", "rdp", "(", "contours", ",", "epsilon", "=", "epsilon", ")", "\n", "contours", "[", ":", ",", "1", "]", "=", "h", "-", "contours", "[", ":", ",", "1", "]", "\n", "# \u8f6e\u5ed3\u89c4\u5219\u5316", "\n", "dists", "=", "[", "]", "\n", "azis", "=", "[", "]", "\n", "azis_index", "=", "[", "]", "\n", "# \u83b7\u53d6\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u548c\u65b9\u4f4d\u89d2", "\n", "for", "i", "in", "range", "(", "contours", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "cur_index", "=", "i", "\n", "next_index", "=", "i", "+", "1", "if", "i", "<", "contours", ".", "shape", "[", "0", "]", "-", "1", "else", "0", "\n", "prev_index", "=", "i", "-", "1", "\n", "cur_point", "=", "contours", "[", "cur_index", "]", "\n", "nest_point", "=", "contours", "[", "next_index", "]", "\n", "prev_point", "=", "contours", "[", "prev_index", "]", "\n", "dist", "=", "cal_dist", "(", "cur_point", ",", "nest_point", ")", "\n", "azi", "=", "cal_azimuth", "(", "cur_point", ",", "nest_point", ")", "\n", "dists", ".", "append", "(", "dist", ")", "\n", "azis", ".", "append", "(", "azi", ")", "\n", "azis_index", ".", "append", "(", "[", "cur_index", ",", "next_index", "]", ")", "\n", "# \u4ee5\u6700\u957f\u7684\u8fb9\u7684\u65b9\u5411\u4f5c\u4e3a\u4e3b\u65b9\u5411", "\n", "", "longest_edge_idex", "=", "np", ".", "argmax", "(", "dists", ")", "\n", "main_direction", "=", "azis", "[", "longest_edge_idex", "]", "\n", "# \u65b9\u5411\u7ea0\u6b63\uff0c\u7ed5\u4e2d\u5fc3\u70b9\u65cb\u8f6c\u5230\u4e0e\u4e3b\u65b9\u5411\u5782\u76f4\u6216\u8005\u5e73\u884c", "\n", "correct_points", "=", "[", "]", "\n", "para_vetr_idxs", "=", "[", "]", "# 0\u5e73\u884c 1\u5782\u76f4", "\n", "for", "i", ",", "(", "azi", ",", "(", "point_0_index", ",", "\n", "point_1_index", ")", ")", "in", "enumerate", "(", "zip", "(", "azis", ",", "azis_index", ")", ")", ":", "\n", "        ", "if", "i", "==", "longest_edge_idex", ":", "\n", "            ", "correct_points", ".", "append", "(", "\n", "[", "contours", "[", "point_0_index", "]", ",", "contours", "[", "point_1_index", "]", "]", ")", "\n", "para_vetr_idxs", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "# \u786e\u5b9a\u65cb\u8f6c\u89d2\u5ea6", "\n", "            ", "rotate_ang", "=", "main_direction", "-", "azi", "\n", "if", "np", ".", "abs", "(", "rotate_ang", ")", "<", "180", "/", "4", ":", "\n", "                ", "rotate_ang", "=", "rotate_ang", "\n", "para_vetr_idxs", ".", "append", "(", "0", ")", "\n", "", "elif", "np", ".", "abs", "(", "rotate_ang", ")", ">=", "90", "-", "180", "/", "4", ":", "\n", "                ", "rotate_ang", "=", "rotate_ang", "+", "90", "\n", "para_vetr_idxs", ".", "append", "(", "1", ")", "\n", "# \u6267\u884c\u65cb\u8f6c\u4efb\u52a1", "\n", "", "point_0", "=", "contours", "[", "point_0_index", "]", "\n", "point_1", "=", "contours", "[", "point_1_index", "]", "\n", "point_middle", "=", "(", "point_0", "+", "point_1", ")", "/", "2", "\n", "if", "rotate_ang", ">", "0", ":", "\n", "                ", "rotate_point_0", "=", "Srotation_angle_get_coor_coordinates", "(", "\n", "point_0", ",", "point_middle", ",", "np", ".", "abs", "(", "rotate_ang", ")", ")", "\n", "rotate_point_1", "=", "Srotation_angle_get_coor_coordinates", "(", "\n", "point_1", ",", "point_middle", ",", "np", ".", "abs", "(", "rotate_ang", ")", ")", "\n", "", "elif", "rotate_ang", "<", "0", ":", "\n", "                ", "rotate_point_0", "=", "Nrotation_angle_get_coor_coordinates", "(", "\n", "point_0", ",", "point_middle", ",", "np", ".", "abs", "(", "rotate_ang", ")", ")", "\n", "rotate_point_1", "=", "Nrotation_angle_get_coor_coordinates", "(", "\n", "point_1", ",", "point_middle", ",", "np", ".", "abs", "(", "rotate_ang", ")", ")", "\n", "", "else", ":", "\n", "                ", "rotate_point_0", "=", "point_0", "\n", "rotate_point_1", "=", "point_1", "\n", "", "correct_points", ".", "append", "(", "[", "rotate_point_0", ",", "rotate_point_1", "]", ")", "\n", "", "", "correct_points", "=", "np", ".", "array", "(", "correct_points", ")", "\n", "# \u76f8\u90bb\u8fb9\u6821\u6b63\uff0c\u5782\u76f4\u53d6\u4ea4\u70b9\uff0c\u5e73\u884c\u5e73\u79fb\u77ed\u8fb9\u6216\u8005\u52a0\u7ebf", "\n", "final_points", "=", "[", "]", "\n", "final_points", ".", "append", "(", "correct_points", "[", "0", "]", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "correct_points", ".", "shape", "[", "0", "]", "-", "1", ")", ":", "\n", "        ", "cur_index", "=", "i", "\n", "next_index", "=", "i", "+", "1", "if", "i", "<", "correct_points", ".", "shape", "[", "0", "]", "-", "1", "else", "0", "\n", "cur_edge_point_0", "=", "correct_points", "[", "cur_index", "]", "[", "0", "]", "\n", "cur_edge_point_1", "=", "correct_points", "[", "cur_index", "]", "[", "1", "]", "\n", "next_edge_point_0", "=", "correct_points", "[", "next_index", "]", "[", "0", "]", "\n", "next_edge_point_1", "=", "correct_points", "[", "next_index", "]", "[", "1", "]", "\n", "cur_para_vetr_idx", "=", "para_vetr_idxs", "[", "cur_index", "]", "\n", "next_para_vetr_idx", "=", "para_vetr_idxs", "[", "next_index", "]", "\n", "if", "cur_para_vetr_idx", "!=", "next_para_vetr_idx", ":", "\n", "# \u5782\u76f4\u53d6\u4ea4\u70b9", "\n", "            ", "L1", "=", "line", "(", "cur_edge_point_0", ",", "cur_edge_point_1", ")", "\n", "L2", "=", "line", "(", "next_edge_point_0", ",", "next_edge_point_1", ")", "\n", "point_intersection", "=", "intersection", "(", "L1", ",", "L2", ")", "\n", "final_points", ".", "append", "(", "point_intersection", ")", "\n", "", "elif", "cur_para_vetr_idx", "==", "next_para_vetr_idx", ":", "\n", "# \u5e73\u884c\u5206\u4e24\u79cd\uff0c\u4e00\u79cd\u52a0\u77ed\u7ebf\uff0c\u4e00\u79cd\u5e73\u79fb\uff0c\u53d6\u51b3\u4e8e\u8ddd\u79bb\u9608\u503c", "\n", "            ", "L1", "=", "line", "(", "cur_edge_point_0", ",", "cur_edge_point_1", ")", "\n", "L2", "=", "line", "(", "next_edge_point_0", ",", "next_edge_point_1", ")", "\n", "marg", "=", "par_line_dist", "(", "L1", ",", "L2", ")", "\n", "if", "marg", "<", "3", ":", "\n", "# \u5e73\u79fb", "\n", "                ", "point_move", "=", "point_in_line", "(", "\n", "next_edge_point_0", "[", "0", "]", ",", "next_edge_point_0", "[", "1", "]", ",", "\n", "cur_edge_point_0", "[", "0", "]", ",", "cur_edge_point_0", "[", "1", "]", ",", "\n", "cur_edge_point_1", "[", "0", "]", ",", "cur_edge_point_1", "[", "1", "]", ")", "\n", "final_points", ".", "append", "(", "point_move", ")", "\n", "# \u66f4\u65b0\u5e73\u79fb\u4e4b\u540e\u7684\u4e0b\u4e00\u6761\u8fb9", "\n", "correct_points", "[", "next_index", "]", "[", "0", "]", "=", "point_move", "\n", "correct_points", "[", "next_index", "]", "[", "1", "]", "=", "point_in_line", "(", "\n", "next_edge_point_1", "[", "0", "]", ",", "next_edge_point_1", "[", "1", "]", ",", "\n", "cur_edge_point_0", "[", "0", "]", ",", "cur_edge_point_0", "[", "1", "]", ",", "\n", "cur_edge_point_1", "[", "0", "]", ",", "cur_edge_point_1", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "# \u52a0\u7ebf", "\n", "                ", "add_mid_point", "=", "(", "cur_edge_point_1", "+", "next_edge_point_0", ")", "/", "2", "\n", "add_point_1", "=", "point_in_line", "(", "\n", "add_mid_point", "[", "0", "]", ",", "add_mid_point", "[", "1", "]", ",", "cur_edge_point_0", "[", "0", "]", ",", "\n", "cur_edge_point_0", "[", "1", "]", ",", "cur_edge_point_1", "[", "0", "]", ",", "\n", "cur_edge_point_1", "[", "1", "]", ")", "\n", "add_point_2", "=", "point_in_line", "(", "\n", "add_mid_point", "[", "0", "]", ",", "add_mid_point", "[", "1", "]", ",", "next_edge_point_0", "[", "0", "]", ",", "\n", "next_edge_point_0", "[", "1", "]", ",", "next_edge_point_1", "[", "0", "]", ",", "\n", "next_edge_point_1", "[", "1", "]", ")", "\n", "final_points", ".", "append", "(", "add_point_1", ")", "\n", "final_points", ".", "append", "(", "add_point_2", ")", "\n", "", "", "", "final_points", ".", "append", "(", "final_points", "[", "0", "]", ")", "\n", "final_points", "=", "np", ".", "array", "(", "final_points", ")", "\n", "final_points", "[", ":", ",", "1", "]", "=", "h", "-", "final_points", "[", ":", ",", "1", "]", "\n", "final_points", "=", "final_points", "[", "np", ".", "newaxis", ",", ":", "]", ".", "transpose", "(", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "return", "final_points", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg.pldist": [[30, 47], ["numpy.divide", "numpy.abs", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.det"], "function", ["None"], ["def", "pldist", "(", "x0", ",", "x1", ",", "x2", ")", ":", "\n", "    ", "\"\"\"\n    Calculates the distance from the point ``x0`` to the line given\n    by the points ``x1`` and ``x2``.\n    :param x0: a point\n    :type x0: a 2x1 numpy array\n    :param x1: a point of the line\n    :type x1: 2x1 numpy array\n    :param x2: another point of the line\n    :type x2: 2x1 numpy array\n    \"\"\"", "\n", "x0", ",", "x1", ",", "x2", "=", "x0", "[", ":", "2", "]", ",", "x1", "[", ":", "2", "]", ",", "x2", "[", ":", "2", "]", "# discard timestamp", "\n", "if", "x1", "[", "0", "]", "==", "x2", "[", "0", "]", ":", "\n", "        ", "return", "np", ".", "abs", "(", "x0", "[", "0", "]", "-", "x1", "[", "0", "]", ")", "\n", "", "return", "np", ".", "divide", "(", "\n", "np", ".", "linalg", ".", "norm", "(", "np", ".", "linalg", ".", "det", "(", "[", "x2", "-", "x1", ",", "x1", "-", "x0", "]", ")", ")", ",", "\n", "np", ".", "linalg", ".", "norm", "(", "x2", "-", "x1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg._rdp": [[49, 72], ["range", "dist", "rdp_alg._rdp", "rdp_alg._rdp", "numpy.vstack", "numpy.vstack"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg._rdp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg._rdp"], ["", "def", "_rdp", "(", "M", ",", "epsilon", ",", "dist", ")", ":", "\n", "    ", "\"\"\"\n    Simplifies a given array of points.\n    :param M: an array\n    :type M: Nx2 numpy array\n    :param epsilon: epsilon in the rdp algorithm\n    :type epsilon: float\n    :param dist: distance function\n    :type dist: function with signature ``f(x1, x2, x3)``\n    \"\"\"", "\n", "dmax", "=", "0.0", "\n", "index", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "1", ",", "M", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "d", "=", "dist", "(", "M", "[", "i", "]", ",", "M", "[", "0", "]", ",", "M", "[", "-", "1", "]", ")", "\n", "if", "d", ">", "dmax", ":", "\n", "            ", "index", "=", "i", "\n", "dmax", "=", "d", "\n", "", "", "if", "dmax", ">", "epsilon", ":", "\n", "        ", "r1", "=", "_rdp", "(", "M", "[", ":", "index", "+", "1", "]", ",", "epsilon", ",", "dist", ")", "\n", "r2", "=", "_rdp", "(", "M", "[", "index", ":", "]", ",", "epsilon", ",", "dist", ")", "\n", "return", "np", ".", "vstack", "(", "(", "r1", "[", ":", "-", "1", "]", ",", "r2", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "vstack", "(", "(", "M", "[", "0", "]", ",", "M", "[", "-", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg._rdp_nn": [[74, 85], ["_rdp().tolist", "rdp_alg._rdp", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg._rdp"], ["", "", "def", "_rdp_nn", "(", "seq", ",", "epsilon", ",", "dist", ")", ":", "\n", "    ", "\"\"\"\n    Simplifies a given array of points.\n    :param seq: a series of points\n    :type seq: sequence of 2-tuples\n    :param epsilon: epsilon in the rdp algorithm\n    :type epsilon: float\n    :param dist: distance function\n    :type dist: function with signature ``f(x1, x2, x3)``\n    \"\"\"", "\n", "return", "_rdp", "(", "np", ".", "array", "(", "seq", ")", ",", "epsilon", ",", "dist", ")", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg.rdp": [[87, 100], ["rdp_alg._rdp_nn", "str", "rdp_alg._rdp", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg._rdp_nn", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rdp_alg._rdp"], ["", "def", "rdp", "(", "M", ",", "epsilon", "=", "0", ",", "dist", "=", "pldist", ")", ":", "\n", "    ", "\"\"\"\n    Simplifies a given array of points.\n    :param M: a series of points\n    :type M: either a Nx2 numpy array or sequence of 2-tuples\n    :param epsilon: epsilon in the rdp algorithm\n    :type epsilon: float\n    :param dist: distance function\n    :type dist: function with signature ``f(x1, x2, x3)``\n    \"\"\"", "\n", "if", "\"numpy\"", "in", "str", "(", "type", "(", "M", ")", ")", ":", "\n", "        ", "return", "_rdp", "(", "M", ",", "epsilon", ",", "dist", ")", "\n", "", "return", "_rdp_nn", "(", "M", ",", "epsilon", ",", "dist", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.line": [[24, 29], ["None"], "function", ["None"], ["def", "line", "(", "p1", ",", "p2", ")", ":", "\n", "    ", "A", "=", "(", "p1", "[", "1", "]", "-", "p2", "[", "1", "]", ")", "\n", "B", "=", "(", "p2", "[", "0", "]", "-", "p1", "[", "0", "]", ")", "\n", "C", "=", "(", "p1", "[", "0", "]", "*", "p2", "[", "1", "]", "-", "p2", "[", "0", "]", "*", "p1", "[", "1", "]", ")", "\n", "return", "A", ",", "B", ",", "-", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.intersection": [[32, 42], ["None"], "function", ["None"], ["", "def", "intersection", "(", "L1", ",", "L2", ")", ":", "\n", "    ", "D", "=", "L1", "[", "0", "]", "*", "L2", "[", "1", "]", "-", "L1", "[", "1", "]", "*", "L2", "[", "0", "]", "\n", "Dx", "=", "L1", "[", "2", "]", "*", "L2", "[", "1", "]", "-", "L1", "[", "1", "]", "*", "L2", "[", "2", "]", "\n", "Dy", "=", "L1", "[", "0", "]", "*", "L2", "[", "2", "]", "-", "L1", "[", "2", "]", "*", "L2", "[", "0", "]", "\n", "if", "D", "!=", "0", ":", "\n", "        ", "x", "=", "Dx", "/", "D", "\n", "y", "=", "Dy", "/", "D", "\n", "return", "x", ",", "y", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.par_line_dist": [[45, 56], ["numpy.abs", "numpy.sqrt"], "function", ["None"], ["", "", "def", "par_line_dist", "(", "L1", ",", "L2", ")", ":", "\n", "    ", "A1", ",", "B1", ",", "C1", "=", "L1", "\n", "A2", ",", "B2", ",", "C2", "=", "L2", "\n", "new_A1", "=", "1", "\n", "new_B1", "=", "B1", "/", "A1", "\n", "new_C1", "=", "C1", "/", "A1", "\n", "new_A2", "=", "1", "\n", "new_B2", "=", "B2", "/", "A2", "\n", "new_C2", "=", "C2", "/", "A2", "\n", "dist", "=", "(", "np", ".", "abs", "(", "new_C1", "-", "new_C2", ")", ")", "/", "(", "np", ".", "sqrt", "(", "new_A2", "**", "2", "+", "new_B2", "**", "2", ")", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_line.point_in_line": [[59, 67], ["None"], "function", ["None"], ["", "def", "point_in_line", "(", "m", ",", "n", ",", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "    ", "x", "=", "(", "m", "*", "(", "x2", "-", "x1", ")", "*", "(", "x2", "-", "x1", ")", "+", "n", "*", "(", "y2", "-", "y1", ")", "*", "(", "x2", "-", "x1", ")", "+", "\n", "(", "x1", "*", "y2", "-", "x2", "*", "y1", ")", "*", "(", "y2", "-", "y1", ")", ")", "/", "(", "\n", "(", "x2", "-", "x1", ")", "*", "(", "x2", "-", "x1", ")", "+", "(", "y2", "-", "y1", ")", "*", "(", "y2", "-", "y1", ")", ")", "\n", "y", "=", "(", "m", "*", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "+", "n", "*", "(", "y2", "-", "y1", ")", "*", "(", "y2", "-", "y1", ")", "+", "\n", "(", "x2", "*", "y1", "-", "x1", "*", "y2", ")", "*", "(", "x2", "-", "x1", ")", ")", "/", "(", "\n", "(", "x2", "-", "x1", ")", "*", "(", "x2", "-", "x1", ")", "+", "(", "y2", "-", "y1", ")", "*", "(", "y2", "-", "y1", ")", ")", "\n", "return", "(", "x", ",", "y", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rotate_ang.Nrotation_angle_get_coor_coordinates": [[24, 34], ["math.radians", "math.cos", "math.sin", "math.cos", "math.sin"], "function", ["None"], ["def", "Nrotation_angle_get_coor_coordinates", "(", "point", ",", "center", ",", "angle", ")", ":", "\n", "    ", "src_x", ",", "src_y", "=", "point", "\n", "center_x", ",", "center_y", "=", "center", "\n", "radian", "=", "math", ".", "radians", "(", "angle", ")", "\n", "dest_x", "=", "(", "src_x", "-", "center_x", ")", "*", "math", ".", "cos", "(", "radian", ")", "+", "(", "src_y", "-", "center_y", ")", "*", "math", ".", "sin", "(", "radian", ")", "+", "center_x", "\n", "dest_y", "=", "(", "src_y", "-", "center_y", ")", "*", "math", ".", "cos", "(", "radian", ")", "-", "(", "src_x", "-", "center_x", ")", "*", "math", ".", "sin", "(", "radian", ")", "+", "center_y", "\n", "# return (int(dest_x), int(dest_y))", "\n", "return", "(", "dest_x", ",", "dest_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.rotate_ang.Srotation_angle_get_coor_coordinates": [[37, 47], ["math.radians", "math.cos", "math.sin", "math.sin", "math.cos"], "function", ["None"], ["", "def", "Srotation_angle_get_coor_coordinates", "(", "point", ",", "center", ",", "angle", ")", ":", "\n", "    ", "src_x", ",", "src_y", "=", "point", "\n", "center_x", ",", "center_y", "=", "center", "\n", "radian", "=", "math", ".", "radians", "(", "angle", ")", "\n", "dest_x", "=", "(", "src_x", "-", "center_x", ")", "*", "math", ".", "cos", "(", "radian", ")", "-", "(", "src_y", "-", "center_y", ")", "*", "math", ".", "sin", "(", "radian", ")", "+", "center_x", "\n", "dest_y", "=", "(", "src_x", "-", "center_x", ")", "*", "math", ".", "sin", "(", "radian", ")", "+", "(", "src_y", "-", "center_y", ")", "*", "math", ".", "cos", "(", "radian", ")", "+", "center_y", "\n", "# return [int(dest_x), int(dest_y)]", "\n", "return", "(", "dest_x", ",", "dest_y", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_point.cal_dist": [[25, 28], ["numpy.sqrt", "numpy.sum", "numpy.power"], "function", ["None"], ["def", "cal_dist", "(", "point_1", ",", "point_2", ")", ":", "\n", "    ", "dist", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "power", "(", "(", "point_1", "-", "point_2", ")", ",", "2", ")", ")", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_point.cal_ang": [[31, 41], ["cal_point.cal_ang._cal_pp"], "function", ["None"], ["", "def", "cal_ang", "(", "point_1", ",", "point_2", ",", "point_3", ")", ":", "\n", "    ", "def", "_cal_pp", "(", "p_1", ",", "p_2", ")", ":", "\n", "        ", "return", "math", ".", "sqrt", "(", "(", "p_1", "[", "0", "]", "-", "p_2", "[", "0", "]", ")", "*", "(", "p_1", "[", "0", "]", "-", "p_2", "[", "0", "]", ")", "+", "(", "p_1", "[", "1", "]", "-", "p_2", "[", "\n", "1", "]", ")", "*", "(", "p_1", "[", "1", "]", "-", "p_2", "[", "1", "]", ")", ")", "\n", "\n", "", "a", "=", "_cal_pp", "(", "point_2", ",", "point_3", ")", "\n", "b", "=", "_cal_pp", "(", "point_1", ",", "point_3", ")", "\n", "c", "=", "_cal_pp", "(", "point_1", ",", "point_2", ")", "\n", "B", "=", "math", ".", "degrees", "(", "math", ".", "acos", "(", "(", "b", "**", "2", "-", "a", "**", "2", "-", "c", "**", "2", ")", "/", "(", "-", "2", "*", "a", "*", "c", ")", ")", ")", "\n", "return", "B", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.regularization.cal_point.cal_azimuth": [[44, 71], ["math.atan", "math.atan", "math.atan", "math.atan"], "function", ["None"], ["", "def", "cal_azimuth", "(", "point_0", ",", "point_1", ")", ":", "\n", "    ", "x1", ",", "y1", "=", "point_0", "\n", "x2", ",", "y2", "=", "point_1", "\n", "if", "x1", "<", "x2", ":", "\n", "        ", "if", "y1", "<", "y2", ":", "\n", "            ", "ang", "=", "math", ".", "atan", "(", "(", "y2", "-", "y1", ")", "/", "(", "x2", "-", "x1", ")", ")", "\n", "ang", "=", "ang", "*", "180", "/", "math", ".", "pi", "\n", "return", "ang", "\n", "", "elif", "y1", ">", "y2", ":", "\n", "            ", "ang", "=", "math", ".", "atan", "(", "(", "y1", "-", "y2", ")", "/", "(", "x2", "-", "x1", ")", ")", "\n", "ang", "=", "ang", "*", "180", "/", "math", ".", "pi", "\n", "return", "90", "+", "(", "90", "-", "ang", ")", "\n", "", "elif", "y1", "==", "y2", ":", "\n", "            ", "return", "0", "\n", "", "", "elif", "x1", ">", "x2", ":", "\n", "        ", "if", "y1", "<", "y2", ":", "\n", "            ", "ang", "=", "math", ".", "atan", "(", "(", "y2", "-", "y1", ")", "/", "(", "x1", "-", "x2", ")", ")", "\n", "ang", "=", "ang", "*", "180", "/", "math", ".", "pi", "\n", "return", "90", "+", "(", "90", "-", "ang", ")", "\n", "", "elif", "y1", ">", "y2", ":", "\n", "            ", "ang", "=", "math", ".", "atan", "(", "(", "y1", "-", "y2", ")", "/", "(", "x1", "-", "x2", ")", ")", "\n", "ang", "=", "ang", "*", "180", "/", "math", ".", "pi", "\n", "return", "ang", "\n", "", "elif", "y1", "==", "y2", ":", "\n", "            ", "return", "0", "\n", "", "", "elif", "x1", "==", "x2", ":", "\n", "        ", "return", "90", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.__init__": [[26, 43], ["clicker.Clicker.reset_clicks", "clicker.Clicker.add_click"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.reset_clicks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.add_click"], ["    ", "def", "__init__", "(", "self", ",", "\n", "gt_mask", "=", "None", ",", "\n", "init_clicks", "=", "None", ",", "\n", "ignore_label", "=", "-", "1", ",", "\n", "click_indx_offset", "=", "0", ")", ":", "\n", "        ", "self", ".", "click_indx_offset", "=", "click_indx_offset", "\n", "if", "gt_mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "gt_mask", "=", "gt_mask", "==", "1", "\n", "self", ".", "not_ignore_mask", "=", "gt_mask", "!=", "ignore_label", "\n", "", "else", ":", "\n", "            ", "self", ".", "gt_mask", "=", "None", "\n", "\n", "", "self", ".", "reset_clicks", "(", ")", "\n", "\n", "if", "init_clicks", "is", "not", "None", ":", "\n", "            ", "for", "click", "in", "init_clicks", ":", "\n", "                ", "self", ".", "add_click", "(", "click", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.make_next_click": [[44, 48], ["clicker.Clicker._get_next_click", "clicker.Clicker.add_click"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker._get_next_click", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.add_click"], ["", "", "", "def", "make_next_click", "(", "self", ",", "pred_mask", ")", ":", "\n", "        ", "assert", "self", ".", "gt_mask", "is", "not", "None", "\n", "click", "=", "self", ".", "_get_next_click", "(", "pred_mask", ")", "\n", "self", ".", "add_click", "(", "click", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.get_clicks": [[49, 51], ["None"], "methods", ["None"], ["", "def", "get_clicks", "(", "self", ",", "clicks_limit", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "clicks_list", "[", ":", "clicks_limit", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker._get_next_click": [[52, 88], ["numpy.logical_and", "numpy.logical_and", "cv2.distanceTransform", "cv2.distanceTransform", "numpy.max", "numpy.max", "clicker.Click", "numpy.logical_and", "numpy.logical_and", "numpy.pad", "numpy.pad", "numpy.pad.astype", "numpy.pad.astype", "numpy.where", "numpy.where", "numpy.logical_not", "numpy.logical_not"], "methods", ["None"], ["", "def", "_get_next_click", "(", "self", ",", "pred_mask", ",", "padding", "=", "True", ")", ":", "\n", "        ", "fn_mask", "=", "np", ".", "logical_and", "(", "\n", "np", ".", "logical_and", "(", "self", ".", "gt_mask", ",", "np", ".", "logical_not", "(", "pred_mask", ")", ")", ",", "\n", "self", ".", "not_ignore_mask", ",", ")", "\n", "fp_mask", "=", "np", ".", "logical_and", "(", "\n", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "self", ".", "gt_mask", ")", ",", "pred_mask", ")", ",", "\n", "self", ".", "not_ignore_mask", ",", ")", "\n", "\n", "if", "padding", ":", "\n", "            ", "fn_mask", "=", "np", ".", "pad", "(", "fn_mask", ",", "(", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ",", "\"constant\"", ")", "\n", "fp_mask", "=", "np", ".", "pad", "(", "fp_mask", ",", "(", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ",", "\"constant\"", ")", "\n", "\n", "", "fn_mask_dt", "=", "cv2", ".", "distanceTransform", "(", "\n", "fn_mask", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "DIST_L2", ",", "0", ")", "\n", "fp_mask_dt", "=", "cv2", ".", "distanceTransform", "(", "\n", "fp_mask", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "DIST_L2", ",", "0", ")", "\n", "\n", "if", "padding", ":", "\n", "            ", "fn_mask_dt", "=", "fn_mask_dt", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "fp_mask_dt", "=", "fp_mask_dt", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", "\n", "\n", "", "fn_mask_dt", "=", "fn_mask_dt", "*", "self", ".", "not_clicked_map", "\n", "fp_mask_dt", "=", "fp_mask_dt", "*", "self", ".", "not_clicked_map", "\n", "\n", "fn_max_dist", "=", "np", ".", "max", "(", "fn_mask_dt", ")", "\n", "fp_max_dist", "=", "np", ".", "max", "(", "fp_mask_dt", ")", "\n", "\n", "is_positive", "=", "fn_max_dist", ">", "fp_max_dist", "\n", "if", "is_positive", ":", "\n", "            ", "coords_y", ",", "coords_x", "=", "np", ".", "where", "(", "\n", "fn_mask_dt", "==", "fn_max_dist", ")", "# coords is [y, x]", "\n", "", "else", ":", "\n", "            ", "coords_y", ",", "coords_x", "=", "np", ".", "where", "(", "\n", "fp_mask_dt", "==", "fp_max_dist", ")", "# coords is [y, x]", "\n", "\n", "", "return", "Click", "(", "is_positive", "=", "is_positive", ",", "coords", "=", "(", "coords_y", "[", "0", "]", ",", "coords_x", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.add_click": [[89, 101], ["clicker.Clicker.clicks_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "add_click", "(", "self", ",", "click", ")", ":", "\n", "        ", "coords", "=", "click", ".", "coords", "\n", "\n", "click", ".", "indx", "=", "self", ".", "click_indx_offset", "+", "self", ".", "num_pos_clicks", "+", "self", ".", "num_neg_clicks", "\n", "if", "click", ".", "is_positive", ":", "\n", "            ", "self", ".", "num_pos_clicks", "+=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "num_neg_clicks", "+=", "1", "\n", "\n", "", "self", ".", "clicks_list", ".", "append", "(", "click", ")", "\n", "if", "self", ".", "gt_mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "not_clicked_map", "[", "coords", "[", "0", "]", ",", "coords", "[", "1", "]", "]", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker._remove_last_click": [[102, 113], ["clicker.Clicker.clicks_list.pop"], "methods", ["None"], ["", "", "def", "_remove_last_click", "(", "self", ")", ":", "\n", "        ", "click", "=", "self", ".", "clicks_list", ".", "pop", "(", ")", "\n", "coords", "=", "click", ".", "coords", "\n", "\n", "if", "click", ".", "is_positive", ":", "\n", "            ", "self", ".", "num_pos_clicks", "-=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "num_neg_clicks", "-=", "1", "\n", "\n", "", "if", "self", ".", "gt_mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "not_clicked_map", "[", "coords", "[", "0", "]", ",", "coords", "[", "1", "]", "]", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.reset_clicks": [[114, 122], ["numpy.ones_like"], "methods", ["None"], ["", "", "def", "reset_clicks", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "gt_mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "not_clicked_map", "=", "np", ".", "ones_like", "(", "self", ".", "gt_mask", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "\n", "", "self", ".", "num_pos_clicks", "=", "0", "\n", "self", ".", "num_neg_clicks", "=", "0", "\n", "\n", "self", ".", "clicks_list", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.get_state": [[123, 125], ["copy.deepcopy"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "return", "deepcopy", "(", "self", ".", "clicks_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.set_state": [[126, 130], ["clicker.Clicker.reset_clicks", "clicker.Clicker.add_click"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.reset_clicks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.add_click"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "reset_clicks", "(", ")", "\n", "for", "click", "in", "state", ":", "\n", "            ", "self", ".", "add_click", "(", "click", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.__len__": [[131, 133], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "clicks_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.__init__": [[136, 140], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "is_positive", ",", "coords", ",", "indx", "=", "None", ")", ":", "\n", "        ", "self", ".", "is_positive", "=", "is_positive", "\n", "self", ".", "coords", "=", "coords", "\n", "self", ".", "indx", "=", "indx", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.coords_and_indx": [[141, 144], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "coords_and_indx", "(", "self", ")", ":", "\n", "        ", "return", "(", "*", "self", ".", "coords", ",", "self", ".", "indx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy": [[145, 150], ["copy.deepcopy", "kwargs.items", "setattr"], "methods", ["None"], ["", "def", "copy", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self_copy", "=", "deepcopy", "(", "self", ")", "\n", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "setattr", "(", "self_copy", ",", "k", ",", "v", ")", "\n", "", "return", "self_copy", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.__init__": [[29, 60], ["ops.BatchImageNormalize", "base.BasePredictor.transforms.append", "ops.DistMaps", "base.BasePredictor.transforms.append", "inference.transforms.SigmoidForPred", "base.BasePredictor.transforms.append", "inference.transforms.LimitLongestSide", "inference.transforms.AddHorizontalFlip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "model", ",", "\n", "net_clicks_limit", "=", "None", ",", "\n", "with_flip", "=", "False", ",", "\n", "zoom_in", "=", "None", ",", "\n", "max_size", "=", "None", ",", "\n", "with_mask", "=", "True", ",", "\n", "**", "kwargs", ")", ":", "\n", "\n", "        ", "self", ".", "with_flip", "=", "with_flip", "\n", "self", ".", "net_clicks_limit", "=", "net_clicks_limit", "\n", "self", ".", "original_image", "=", "None", "\n", "self", ".", "zoom_in", "=", "zoom_in", "\n", "self", ".", "prev_prediction", "=", "None", "\n", "self", ".", "model_indx", "=", "0", "\n", "self", ".", "click_models", "=", "None", "\n", "self", ".", "net_state_dict", "=", "None", "\n", "self", ".", "with_prev_mask", "=", "with_mask", "\n", "self", ".", "net", "=", "model", "\n", "\n", "self", ".", "normalization", "=", "BatchImageNormalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "self", ".", "transforms", "=", "[", "zoom_in", "]", "if", "zoom_in", "is", "not", "None", "else", "[", "]", "\n", "if", "max_size", "is", "not", "None", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "LimitLongestSide", "(", "max_size", "=", "max_size", ")", ")", "\n", "", "self", ".", "transforms", ".", "append", "(", "SigmoidForPred", "(", ")", ")", "\n", "if", "with_flip", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "AddHorizontalFlip", "(", ")", ")", "\n", "", "self", ".", "dist_maps", "=", "DistMaps", "(", "\n", "norm_radius", "=", "5", ",", "spatial_scale", "=", "1.0", ",", "cpu_mode", "=", "False", ",", "use_disks", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor": [[61, 67], ["isinstance", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "x.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "def", "to_tensor", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "isinstance", "(", "x", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "if", "x", ".", "ndim", "==", "2", ":", "\n", "                ", "x", "=", "x", "[", ":", ",", ":", ",", "None", "]", "\n", "", "", "img", "=", "paddle", ".", "to_tensor", "(", "x", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ")", ".", "astype", "(", "\"float32\"", ")", "/", "255", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.set_input_image": [[68, 80], ["base.BasePredictor.to_tensor", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "transform.reset", "len", "base.BasePredictor.original_image.unsqueeze", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset"], ["", "def", "set_input_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "image_nd", "=", "self", ".", "to_tensor", "(", "image", ")", "\n", "\n", "for", "transform", "in", "self", ".", "transforms", ":", "\n", "            ", "transform", ".", "reset", "(", ")", "\n", "", "self", ".", "original_image", "=", "image_nd", "\n", "if", "len", "(", "self", ".", "original_image", ".", "shape", ")", "==", "3", ":", "\n", "            ", "self", ".", "original_image", "=", "self", ".", "original_image", ".", "unsqueeze", "(", "0", ")", "\n", "", "self", ".", "prev_prediction", "=", "paddle", ".", "zeros_like", "(", "self", ".", "original_image", "[", ":", ",", ":", "\n", "1", ",", ":", ",", ":", "]", ")", "\n", "if", "not", "self", ".", "with_prev_mask", ":", "\n", "            ", "self", ".", "prev_edge", "=", "paddle", ".", "zeros_like", "(", "self", ".", "original_image", "[", ":", ",", ":", "1", ",", ":", ",", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.get_prediction": [[81, 126], ["clicker.get_clicks", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "base.BasePredictor.apply_transforms", "base.BasePredictor._get_prediction", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.interpolate", "paddle.interpolate", "reversed", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.interpolate", "paddle.interpolate", "t.inv_transform", "base.BasePredictor.zoom_in.check_possible_recalculation", "base.BasePredictor.get_prediction", "t.inv_transform.numpy", "t.inv_transform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.get_clicks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.apply_transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor._get_prediction", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.inv_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.check_possible_recalculation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.get_prediction", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.inv_transform"], ["", "", "def", "get_prediction", "(", "self", ",", "clicker", ",", "prev_mask", "=", "None", ")", ":", "\n", "        ", "clicks_list", "=", "clicker", ".", "get_clicks", "(", ")", "\n", "\n", "input_image", "=", "self", ".", "original_image", "\n", "if", "prev_mask", "is", "None", ":", "\n", "            ", "if", "not", "self", ".", "with_prev_mask", ":", "\n", "\n", "                ", "prev_mask", "=", "self", ".", "prev_edge", "\n", "", "else", ":", "\n", "                ", "prev_mask", "=", "self", ".", "prev_prediction", "\n", "\n", "", "", "input_image", "=", "paddle", ".", "concat", "(", "[", "input_image", ",", "prev_mask", "]", ",", "axis", "=", "1", ")", "\n", "\n", "image_nd", ",", "clicks_lists", ",", "is_image_changed", "=", "self", ".", "apply_transforms", "(", "\n", "input_image", ",", "[", "clicks_list", "]", ")", "\n", "pred_logits", ",", "pred_edges", "=", "self", ".", "_get_prediction", "(", "image_nd", ",", "clicks_lists", ",", "\n", "is_image_changed", ")", "\n", "\n", "pred_logits", "=", "paddle", ".", "to_tensor", "(", "pred_logits", ")", "\n", "\n", "prediction", "=", "F", ".", "interpolate", "(", "\n", "pred_logits", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", "\n", "size", "=", "image_nd", ".", "shape", "[", "2", ":", "]", ")", "\n", "if", "pred_edges", "is", "not", "None", ":", "\n", "            ", "pred_edge", "=", "paddle", ".", "to_tensor", "(", "pred_edges", ")", "\n", "edge_prediction", "=", "F", ".", "interpolate", "(", "\n", "pred_edge", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", "\n", "size", "=", "image_nd", ".", "shape", "[", "2", ":", "]", ")", "\n", "\n", "", "for", "t", "in", "reversed", "(", "self", ".", "transforms", ")", ":", "\n", "            ", "if", "pred_edges", "is", "not", "None", ":", "\n", "                ", "edge_prediction", "=", "t", ".", "inv_transform", "(", "edge_prediction", ")", "\n", "self", ".", "prev_edge", "=", "edge_prediction", "\n", "", "prediction", "=", "t", ".", "inv_transform", "(", "prediction", ")", "\n", "\n", "", "if", "self", ".", "zoom_in", "is", "not", "None", "and", "self", ".", "zoom_in", ".", "check_possible_recalculation", "(", "\n", ")", ":", "\n", "            ", "return", "self", ".", "get_prediction", "(", "clicker", ")", "\n", "\n", "", "self", ".", "prev_prediction", "=", "prediction", "\n", "return", "prediction", ".", "numpy", "(", ")", "[", "0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.prepare_input": [[127, 133], ["base.BasePredictor.normalization"], "methods", ["None"], ["", "def", "prepare_input", "(", "self", ",", "image", ")", ":", "\n", "        ", "prev_mask", "=", "None", "\n", "prev_mask", "=", "image", "[", ":", ",", "3", ":", ",", ":", ",", ":", "]", "\n", "image", "=", "image", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", "\n", "image", "=", "self", ".", "normalization", "(", "image", ")", "\n", "return", "image", ",", "prev_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.get_coord_features": [[134, 142], ["base.BasePredictor.dist_maps", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "get_coord_features", "(", "self", ",", "image", ",", "prev_mask", ",", "points", ")", ":", "\n", "\n", "        ", "coord_features", "=", "self", ".", "dist_maps", "(", "image", ",", "points", ")", "\n", "\n", "if", "prev_mask", "is", "not", "None", ":", "\n", "            ", "coord_features", "=", "paddle", ".", "concat", "(", "(", "prev_mask", ",", "coord_features", ")", ",", "axis", "=", "1", ")", "\n", "\n", "", "return", "coord_features", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor._get_prediction": [[143, 169], ["base.BasePredictor.net.get_input_names", "base.BasePredictor.net.get_input_handle", "base.BasePredictor.net.get_input_handle", "base.BasePredictor.get_points_nd", "base.BasePredictor.prepare_input", "base.BasePredictor.get_coord_features", "image.numpy().astype.numpy().astype.numpy().astype", "coord_features.numpy().astype.numpy().astype.numpy().astype", "base.BasePredictor.input_handle_1.copy_from_cpu", "base.BasePredictor.input_handle_2.copy_from_cpu", "base.BasePredictor.net.run", "base.BasePredictor.net.get_output_names", "base.BasePredictor.net.get_output_handle", "base.BasePredictor.copy_to_cpu", "len", "base.BasePredictor.net.get_output_handle", "base.BasePredictor.copy_to_cpu", "image.numpy().astype.numpy().astype.numpy", "coord_features.numpy().astype.numpy().astype.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.get_points_nd", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.prepare_input", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.DistMaps.get_coord_features", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run"], ["", "def", "_get_prediction", "(", "self", ",", "image_nd", ",", "clicks_lists", ",", "is_image_changed", ")", ":", "\n", "        ", "input_names", "=", "self", ".", "net", ".", "get_input_names", "(", ")", "\n", "self", ".", "input_handle_1", "=", "self", ".", "net", ".", "get_input_handle", "(", "input_names", "[", "0", "]", ")", "\n", "self", ".", "input_handle_2", "=", "self", ".", "net", ".", "get_input_handle", "(", "input_names", "[", "1", "]", ")", "\n", "points_nd", "=", "self", ".", "get_points_nd", "(", "clicks_lists", ")", "\n", "\n", "image", ",", "prev_mask", "=", "self", ".", "prepare_input", "(", "image_nd", ")", "\n", "coord_features", "=", "self", ".", "get_coord_features", "(", "image", ",", "prev_mask", ",", "points_nd", ")", "\n", "image", "=", "image", ".", "numpy", "(", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "coord_features", "=", "coord_features", ".", "numpy", "(", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "\n", "self", ".", "input_handle_1", ".", "copy_from_cpu", "(", "image", ")", "\n", "self", ".", "input_handle_2", ".", "copy_from_cpu", "(", "coord_features", ")", "\n", "\n", "self", ".", "net", ".", "run", "(", ")", "\n", "\n", "output_names", "=", "self", ".", "net", ".", "get_output_names", "(", ")", "\n", "\n", "output_handle", "=", "self", ".", "net", ".", "get_output_handle", "(", "output_names", "[", "0", "]", ")", "\n", "output_data", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "if", "len", "(", "output_names", ")", "==", "3", ":", "\n", "            ", "edge_handle", "=", "self", ".", "net", ".", "get_output_handle", "(", "output_names", "[", "2", "]", ")", "\n", "edge_data", "=", "edge_handle", ".", "copy_to_cpu", "(", ")", "\n", "return", "output_data", ",", "edge_data", "\n", "", "else", ":", "\n", "            ", "return", "output_data", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor._get_transform_states": [[170, 172], ["x.get_state"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.get_state"], ["", "", "def", "_get_transform_states", "(", "self", ")", ":", "\n", "        ", "return", "[", "x", ".", "get_state", "(", ")", "for", "x", "in", "self", ".", "transforms", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor._set_transform_states": [[173, 177], ["zip", "len", "len", "transform.set_state"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Clicker.set_state"], ["", "def", "_set_transform_states", "(", "self", ",", "states", ")", ":", "\n", "        ", "assert", "len", "(", "states", ")", "==", "len", "(", "self", ".", "transforms", ")", "\n", "for", "state", ",", "transform", "in", "zip", "(", "states", ",", "self", ".", "transforms", ")", ":", "\n", "            ", "transform", ".", "set_state", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.apply_transforms": [[178, 185], ["t.transform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.zoom_in.ZoomIn.transform"], ["", "", "def", "apply_transforms", "(", "self", ",", "image_nd", ",", "clicks_lists", ")", ":", "\n", "        ", "is_image_changed", "=", "False", "\n", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "image_nd", ",", "clicks_lists", "=", "t", ".", "transform", "(", "image_nd", ",", "clicks_lists", ")", "\n", "is_image_changed", "|=", "t", ".", "image_changed", "\n", "\n", "", "return", "image_nd", ",", "clicks_lists", ",", "is_image_changed", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.get_points_nd": [[186, 221], ["max", "max", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "sum", "min", "total_clicks.append", "len", "zip", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "get_points_nd", "(", "self", ",", "clicks_lists", ")", ":", "\n", "        ", "total_clicks", "=", "[", "]", "\n", "num_pos_clicks", "=", "[", "\n", "sum", "(", "x", ".", "is_positive", "for", "x", "in", "clicks_list", ")", "\n", "for", "clicks_list", "in", "clicks_lists", "\n", "]", "\n", "num_neg_clicks", "=", "[", "\n", "len", "(", "clicks_list", ")", "-", "num_pos", "\n", "for", "clicks_list", ",", "num_pos", "in", "zip", "(", "clicks_lists", ",", "num_pos_clicks", ")", "\n", "]", "\n", "num_max_points", "=", "max", "(", "num_pos_clicks", "+", "num_neg_clicks", ")", "\n", "if", "self", ".", "net_clicks_limit", "is", "not", "None", ":", "\n", "            ", "num_max_points", "=", "min", "(", "self", ".", "net_clicks_limit", ",", "num_max_points", ")", "\n", "", "num_max_points", "=", "max", "(", "1", ",", "num_max_points", ")", "\n", "\n", "for", "clicks_list", "in", "clicks_lists", ":", "\n", "            ", "clicks_list", "=", "clicks_list", "[", ":", "self", ".", "net_clicks_limit", "]", "\n", "pos_clicks", "=", "[", "\n", "click", ".", "coords_and_indx", "for", "click", "in", "clicks_list", "\n", "if", "click", ".", "is_positive", "\n", "]", "\n", "pos_clicks", "=", "pos_clicks", "+", "(", "num_max_points", "-", "len", "(", "pos_clicks", ")", ")", "*", "[", "\n", "(", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "]", "\n", "\n", "neg_clicks", "=", "[", "\n", "click", ".", "coords_and_indx", "for", "click", "in", "clicks_list", "\n", "if", "not", "click", ".", "is_positive", "\n", "]", "\n", "neg_clicks", "=", "neg_clicks", "+", "(", "num_max_points", "-", "len", "(", "neg_clicks", ")", ")", "*", "[", "\n", "(", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "]", "\n", "total_clicks", ".", "append", "(", "pos_clicks", "+", "neg_clicks", ")", "\n", "\n", "", "return", "paddle", ".", "to_tensor", "(", "total_clicks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.get_states": [[222, 226], ["base.BasePredictor._get_transform_states"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor._get_transform_states"], ["", "def", "get_states", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "\"transform_states\"", ":", "self", ".", "_get_transform_states", "(", ")", ",", "\n", "\"prev_prediction\"", ":", "self", ".", "prev_prediction", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.set_states": [[228, 231], ["base.BasePredictor._set_transform_states"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor._set_transform_states"], ["", "def", "set_states", "(", "self", ",", "states", ")", ":", "\n", "        ", "self", ".", "_set_transform_states", "(", "states", "[", "\"transform_states\"", "]", ")", "\n", "self", ".", "prev_prediction", "=", "states", "[", "\"prev_prediction\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.split_points_by_order": [[233, 273], ["tpoints.numpy", "len", "numpy.zeros", "enumerate", "range", "numpy.full", "range", "paddle.to_tensor", "paddle.to_tensor", "int", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "", "def", "split_points_by_order", "(", "tpoints", ",", "groups", ")", ":", "\n", "    ", "points", "=", "tpoints", ".", "numpy", "(", ")", "\n", "num_groups", "=", "len", "(", "groups", ")", "\n", "bs", "=", "points", ".", "shape", "[", "0", "]", "\n", "num_points", "=", "points", ".", "shape", "[", "1", "]", "//", "2", "\n", "\n", "groups", "=", "[", "x", "if", "x", ">", "0", "else", "num_points", "for", "x", "in", "groups", "]", "\n", "group_points", "=", "[", "\n", "np", ".", "full", "(", "\n", "(", "bs", ",", "2", "*", "x", ",", "3", ")", ",", "-", "1", ",", "dtype", "=", "np", ".", "float32", ")", "for", "x", "in", "groups", "\n", "]", "\n", "\n", "last_point_indx_group", "=", "np", ".", "zeros", "(", "(", "bs", ",", "num_groups", ",", "2", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "for", "group_indx", ",", "group_size", "in", "enumerate", "(", "groups", ")", ":", "\n", "        ", "last_point_indx_group", "[", ":", ",", "group_indx", ",", "1", "]", "=", "group_size", "\n", "\n", "", "for", "bindx", "in", "range", "(", "bs", ")", ":", "\n", "        ", "for", "pindx", "in", "range", "(", "2", "*", "num_points", ")", ":", "\n", "            ", "point", "=", "points", "[", "bindx", ",", "pindx", ",", ":", "]", "\n", "group_id", "=", "int", "(", "point", "[", "2", "]", ")", "\n", "if", "group_id", "<", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "is_negative", "=", "int", "(", "pindx", ">=", "num_points", ")", "\n", "if", "group_id", ">=", "num_groups", "or", "(", "\n", "group_id", "==", "0", "and", "\n", "is_negative", ")", ":", "# disable negative first click", "\n", "                ", "group_id", "=", "num_groups", "-", "1", "\n", "\n", "", "new_point_indx", "=", "last_point_indx_group", "[", "bindx", ",", "group_id", ",", "is_negative", "]", "\n", "last_point_indx_group", "[", "bindx", ",", "group_id", ",", "is_negative", "]", "+=", "1", "\n", "\n", "group_points", "[", "group_id", "]", "[", "bindx", ",", "new_point_indx", ",", ":", "]", "=", "point", "\n", "\n", "", "", "group_points", "=", "[", "\n", "paddle", ".", "to_tensor", "(", "\n", "x", ",", "dtype", "=", "tpoints", ".", "dtype", ")", "for", "x", "in", "group_points", "\n", "]", "\n", "\n", "return", "group_points", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.DistMaps.__init__": [[26, 41], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "norm_radius", ",", "\n", "spatial_scale", "=", "1.0", ",", "\n", "cpu_mode", "=", "True", ",", "\n", "use_disks", "=", "False", ")", ":", "\n", "        ", "super", "(", "DistMaps", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "spatial_scale", "=", "spatial_scale", "\n", "self", ".", "norm_radius", "=", "norm_radius", "\n", "self", ".", "cpu_mode", "=", "cpu_mode", "\n", "self", ".", "use_disks", "=", "use_disks", "\n", "\n", "if", "self", ".", "cpu_mode", ":", "\n", "            ", "from", "util", ".", "cython", "import", "get_dist_maps", "\n", "\n", "self", ".", "_get_dist_maps", "=", "get_dist_maps", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.DistMaps.get_coord_features": [[42, 92], ["range", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "points.reshape.reshape.reshape", "paddle.split", "paddle.split", "paddle.split", "paddle.split", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.unsqueeze().tile", "paddle.unsqueeze().tile", "paddle.unsqueeze().tile", "paddle.unsqueeze().tile", "invalid_points.numpy.numpy.numpy", "paddle.tanh.reshape", "paddle.tanh.reshape", "paddle.min", "paddle.min", "paddle.min", "paddle.min", "paddle.tanh.reshape", "paddle.tanh.reshape", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh.append", "paddle.tanh.append", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "ops.DistMaps._get_dist_maps", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "points[].numpy().astype", "numpy.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "points[].numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["", "", "def", "get_coord_features", "(", "self", ",", "points", ",", "batchsize", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "if", "self", ".", "cpu_mode", ":", "\n", "            ", "coords", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batchsize", ")", ":", "\n", "                ", "norm_delimeter", "=", "(", "1.0", "if", "self", ".", "use_disks", "else", "\n", "self", ".", "spatial_scale", "*", "self", ".", "norm_radius", ")", "\n", "coords", ".", "append", "(", "\n", "self", ".", "_get_dist_maps", "(", "points", "[", "i", "]", ".", "numpy", "(", ")", ".", "astype", "(", "\"float32\"", ")", ",", "\n", "rows", ",", "cols", ",", "norm_delimeter", ")", ")", "\n", "", "coords", "=", "paddle", ".", "to_tensor", "(", "np", ".", "stack", "(", "\n", "coords", ",", "axis", "=", "0", ")", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "", "else", ":", "\n", "            ", "num_points", "=", "points", ".", "shape", "[", "1", "]", "//", "2", "\n", "points", "=", "points", ".", "reshape", "(", "[", "-", "1", ",", "points", ".", "shape", "[", "2", "]", "]", ")", "\n", "points", ",", "points_order", "=", "paddle", ".", "split", "(", "points", ",", "[", "2", ",", "1", "]", ",", "axis", "=", "1", ")", "\n", "invalid_points", "=", "paddle", ".", "max", "(", "points", ",", "axis", "=", "1", ",", "keepdim", "=", "False", ")", "<", "0", "\n", "row_array", "=", "paddle", ".", "arange", "(", "\n", "start", "=", "0", ",", "end", "=", "rows", ",", "step", "=", "1", ",", "dtype", "=", "\"float32\"", ")", "\n", "col_array", "=", "paddle", ".", "arange", "(", "\n", "start", "=", "0", ",", "end", "=", "cols", ",", "step", "=", "1", ",", "dtype", "=", "\"float32\"", ")", "\n", "\n", "coord_rows", ",", "coord_cols", "=", "paddle", ".", "meshgrid", "(", "row_array", ",", "col_array", ")", "\n", "coords", "=", "paddle", ".", "unsqueeze", "(", "\n", "paddle", ".", "stack", "(", "\n", "[", "coord_rows", ",", "coord_cols", "]", ",", "axis", "=", "0", ")", ",", "\n", "axis", "=", "0", ")", ".", "tile", "(", "[", "points", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "\n", "add_xy", "=", "(", "points", "*", "self", ".", "spatial_scale", ")", ".", "reshape", "(", "\n", "[", "points", ".", "shape", "[", "0", "]", ",", "points", ".", "shape", "[", "1", "]", ",", "1", ",", "1", "]", ")", "\n", "coords", "=", "coords", "-", "add_xy", "\n", "if", "not", "self", ".", "use_disks", ":", "\n", "                ", "coords", "=", "coords", "/", "(", "self", ".", "norm_radius", "*", "self", ".", "spatial_scale", ")", "\n", "\n", "", "coords", "=", "coords", "*", "coords", "\n", "coords", "[", ":", ",", "0", "]", "+=", "coords", "[", ":", ",", "1", "]", "\n", "coords", "=", "coords", "[", ":", ",", ":", "1", "]", "\n", "invalid_points", "=", "invalid_points", ".", "numpy", "(", ")", "\n", "\n", "coords", "[", "invalid_points", ",", ":", ",", ":", ",", ":", "]", "=", "1e6", "\n", "coords", "=", "coords", ".", "reshape", "(", "[", "-", "1", ",", "num_points", ",", "1", ",", "rows", ",", "cols", "]", ")", "\n", "coords", "=", "paddle", ".", "min", "(", "coords", ",", "axis", "=", "1", ")", "\n", "coords", "=", "coords", ".", "reshape", "(", "[", "-", "1", ",", "2", ",", "rows", ",", "cols", "]", ")", "\n", "\n", "", "if", "self", ".", "use_disks", ":", "\n", "            ", "coords", "=", "(", "\n", "coords", "<=", "\n", "(", "self", ".", "norm_radius", "*", "self", ".", "spatial_scale", ")", "**", "2", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "", "else", ":", "\n", "            ", "coords", "=", "paddle", ".", "tanh", "(", "paddle", ".", "sqrt", "(", "coords", ")", "*", "2", ")", "\n", "", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.DistMaps.forward": [[93, 96], ["ops.DistMaps.get_coord_features"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.DistMaps.get_coord_features"], ["", "def", "forward", "(", "self", ",", "x", ",", "coords", ")", ":", "\n", "        ", "return", "self", ".", "get_coord_features", "(", "coords", ",", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "\n", "x", ".", "shape", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.ScaleLayer.__init__": [[99, 106], ["paddle.Layer.__init__", "ops.ScaleLayer.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__"], ["    ", "def", "__init__", "(", "self", ",", "init_value", "=", "1.0", ",", "lr_mult", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lr_mult", "=", "lr_mult", "\n", "self", ".", "scale", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "[", "1", "]", ",", "\n", "dtype", "=", "\"float32\"", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "init_value", "/", "lr_mult", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.ScaleLayer.forward": [[107, 110], ["paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "scale", "=", "paddle", ".", "abs", "(", "self", ".", "scale", "*", "self", ".", "lr_mult", ")", "\n", "return", "x", "*", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.BatchImageNormalize.__init__": [[113, 120], ["paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.base.BasePredictor.to_tensor"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "array", "(", "mean", ")", "[", "np", ".", "newaxis", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", ")", ".", "astype", "(", "\n", "\"float32\"", ")", "\n", "self", ".", "std", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "array", "(", "std", ")", "[", "np", ".", "newaxis", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", ")", ".", "astype", "(", "\n", "\"float32\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.ops.BatchImageNormalize.__call__": [[121, 124], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "tensor", "=", "(", "tensor", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "return", "tensor", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.predictor.__init__.get_predictor": [[24, 47], ["dict", "inference.transforms.ZoomIn", "base.BasePredictor", "NotImplementedError", "predictor_params_.update"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.grid.Grids.__init__": [[29, 36], ["grid.Grids.clear", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear"], ["    ", "def", "__init__", "(", "self", ",", "img", ",", "gridSize", "=", "(", "512", ",", "512", ")", ",", "overlap", "=", "(", "24", ",", "24", ")", ")", ":", "\n", "# TODO: \u8fd9\u4e2asize\u5982\u679c\u652f\u6301\u957f\u548c\u5bbd\u4e0d\u540c\u6709\u7528\u5417", "\n", "# \u53ef\u80fd\u53ef\u4ee5\u94fa\u6ee1\u7528\u6237\u5c4f\u5e55\uff1f", "\n", "        ", "self", ".", "clear", "(", ")", "\n", "self", ".", "detimg", "=", "img", "\n", "self", ".", "gridSize", "=", "np", ".", "array", "(", "gridSize", ")", "\n", "self", ".", "overlap", "=", "np", ".", "array", "(", "overlap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.grid.Grids.clear": [[37, 45], ["None"], "methods", ["None"], ["", "def", "clear", "(", "self", ")", ":", "\n", "# \u56fe\u50cfHWC\u683c\u5f0f", "\n", "        ", "self", ".", "detimg", "=", "None", "# \u5bab\u683c\u521d\u59cb\u56fe\u50cf", "\n", "self", ".", "grid_init", "=", "False", "# \u662f\u5426\u521d\u59cb\u5316\u4e86\u5bab\u683c", "\n", "# self.imagesGrid = []  # \u56fe\u50cf\u5bab\u683c", "\n", "self", ".", "mask_grids", "=", "[", "]", "# \u6807\u7b7e\u5bab\u683c", "\n", "self", ".", "grid_count", "=", "None", "# (row count, col count)", "\n", "self", ".", "curr_idx", "=", "None", "# (current row, current col)", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.grid.Grids.createGrids": [[46, 71], ["numpy.array", "numpy.ceil", "grid_count.astype.astype.astype", "list", "numpy.zeros", "range", "range"], "methods", ["None"], ["", "def", "createGrids", "(", "self", ")", ":", "\n", "# \u8ba1\u7b97\u5bab\u683c\u6a2a\u7eb5\u5411\u683c\u6570", "\n", "        ", "imgSize", "=", "np", ".", "array", "(", "self", ".", "detimg", ".", "shape", "[", ":", "2", "]", ")", "\n", "grid_count", "=", "np", ".", "ceil", "(", "(", "imgSize", "+", "self", ".", "overlap", ")", "/", "self", ".", "gridSize", ")", "\n", "self", ".", "grid_count", "=", "grid_count", "=", "grid_count", ".", "astype", "(", "\"uint16\"", ")", "\n", "# ul = self.overlap - self.gridSize", "\n", "# for row in range(grid_count[0]):", "\n", "#     ul[0] = ul[0] + self.gridSize[0] - self.overlap[0]", "\n", "#     for col in range(grid_count[1]):", "\n", "#         ul[1] = ul[1] + self.gridSize[1] - self.overlap[1]", "\n", "#         lr = ul + self.gridSize", "\n", "#         # print(\"ul, lr\", ul, lr)", "\n", "#         # \u6269\u5145", "\n", "#         det_tmp = self.detimg[ul[0]: lr[0], ul[1]: lr[1]]", "\n", "#         tmp = np.zeros((self.gridSize[0], self.gridSize[1], self.detimg.shape[-1]))", "\n", "#         tmp[:det_tmp.shape[0], :det_tmp.shape[1], :] = det_tmp", "\n", "#         self.imagesGrid.append(tmp)", "\n", "# self.mask_grids = [[np.zeros(self.gridSize)] * grid_count[1]] * grid_count[0]  # \u4e0d\u80fd\u7528\u6d45\u62f7\u8d1d", "\n", "self", ".", "mask_grids", "=", "[", "\n", "[", "np", ".", "zeros", "(", "self", ".", "gridSize", ")", "for", "_", "in", "range", "(", "grid_count", "[", "1", "]", ")", "]", "\n", "for", "_", "in", "range", "(", "grid_count", "[", "0", "]", ")", "\n", "]", "\n", "# print(len(self.mask_grids), len(self.mask_grids[0]))", "\n", "self", ".", "grid_init", "=", "True", "\n", "return", "list", "(", "grid_count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.grid.Grids.getGrid": [[72, 81], ["numpy.array"], "methods", ["None"], ["", "def", "getGrid", "(", "self", ",", "row", ",", "col", ")", ":", "\n", "        ", "gridIdx", "=", "np", ".", "array", "(", "[", "row", ",", "col", "]", ")", "\n", "ul", "=", "gridIdx", "*", "(", "self", ".", "gridSize", "-", "self", ".", "overlap", ")", "\n", "lr", "=", "ul", "+", "self", ".", "gridSize", "\n", "# print(\"ul, lr\", ul, lr)", "\n", "img", "=", "self", ".", "detimg", "[", "ul", "[", "0", "]", ":", "lr", "[", "0", "]", ",", "ul", "[", "1", "]", ":", "lr", "[", "1", "]", "]", "\n", "mask", "=", "self", ".", "mask_grids", "[", "row", "]", "[", "col", "]", "\n", "self", ".", "curr_idx", "=", "(", "row", ",", "col", ")", "\n", "return", "img", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.grid.Grids.splicingList": [[82, 127], ["math.ceil", "math.ceil", "numpy.zeros", "numpy.zeros.copy", "range", "numpy.where", "PIL.Image.fromarray().save", "range", "numpy.zeros", "PIL.Image.fromarray"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["", "def", "splicingList", "(", "self", ",", "save_path", ")", ":", "\n", "        ", "\"\"\"\n        \u5c06slide\u7684out\u8fdb\u884c\u62fc\u63a5\uff0craw_size\u4fdd\u8bc1\u6062\u590d\u5230\u539f\u72b6\n        \"\"\"", "\n", "imgs", "=", "self", ".", "mask_grids", "\n", "# print(len(imgs), len(imgs[0]))", "\n", "raw_size", "=", "self", ".", "detimg", ".", "shape", "[", ":", "2", "]", "\n", "# h, w = None, None", "\n", "# for i in range(len(imgs)):", "\n", "#     for j in range(len(imgs[i])):", "\n", "#         im = imgs[i][j]", "\n", "#         if im is not None:", "\n", "#             h, w = im.shape[:2]", "\n", "#             break", "\n", "# if h is None and w is None:", "\n", "#     return False", "\n", "h", ",", "w", "=", "self", ".", "gridSize", "\n", "row", "=", "math", ".", "ceil", "(", "raw_size", "[", "0", "]", "/", "h", ")", "\n", "col", "=", "math", ".", "ceil", "(", "raw_size", "[", "1", "]", "/", "w", ")", "\n", "# print('row, col:', row, col)", "\n", "result_1", "=", "np", ".", "zeros", "(", "(", "h", "*", "row", ",", "w", "*", "col", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "result_2", "=", "result_1", ".", "copy", "(", ")", "\n", "# k = 0", "\n", "for", "i", "in", "range", "(", "row", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "col", ")", ":", "\n", "# print('h, w:', h, w)", "\n", "                ", "ih", ",", "iw", "=", "imgs", "[", "i", "]", "[", "j", "]", ".", "shape", "[", ":", "2", "]", "\n", "im", "=", "np", ".", "zeros", "(", "self", ".", "gridSize", ")", "\n", "im", "[", ":", "ih", ",", ":", "iw", "]", "=", "imgs", "[", "i", "]", "[", "j", "]", "\n", "start_h", "=", "(", "i", "*", "h", ")", "if", "i", "==", "0", "else", "(", "i", "*", "(", "h", "-", "self", ".", "overlap", "[", "0", "]", ")", ")", "\n", "end_h", "=", "start_h", "+", "h", "\n", "start_w", "=", "(", "j", "*", "w", ")", "if", "j", "==", "0", "else", "(", "j", "*", "(", "w", "-", "self", ".", "overlap", "[", "1", "]", ")", ")", "\n", "end_w", "=", "start_w", "+", "w", "\n", "# print(\"se: \", start_h, end_h, start_w, end_w)", "\n", "# \u5355\u533a\u81ea\u5df1\uff0c\u91cd\u53e0\u53d6\u6216", "\n", "if", "(", "i", "+", "j", ")", "%", "2", "==", "0", ":", "\n", "                    ", "result_1", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "=", "im", "\n", "", "else", ":", "\n", "                    ", "result_2", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "=", "im", "\n", "# k += 1", "\n", "# print('r, c, k:', i_r, i_c, k)", "\n", "", "", "", "result", "=", "np", ".", "where", "(", "result_2", "!=", "0", ",", "result_2", ",", "result_1", ")", "\n", "result", "=", "result", "[", ":", "raw_size", "[", "0", "]", ",", ":", "raw_size", "[", "1", "]", "]", "\n", "Image", ".", "fromarray", "(", "result", ")", ".", "save", "(", "save_path", ",", "\"PNG\"", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.grid.checkOpenGrid": [[20, 26], ["max"], "function", ["None"], ["def", "checkOpenGrid", "(", "img", ",", "thumbnail_min", ")", ":", "\n", "    ", "H", ",", "W", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "if", "max", "(", "H", ",", "W", ")", "<=", "thumbnail_min", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.__init__": [[21, 33], ["super().__init__", "rs_grid.RSGrids.clear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear"], ["    ", "def", "__init__", "(", "self", ",", "raset", ":", "Raster", ")", "->", "None", ":", "\n", "        ", "\"\"\" \u5728EISeg\u4e2d\u7528\u4e8e\u5904\u7406\u9065\u611f\u6805\u683c\u6570\u636e\u7684\u5bab\u683c\u7c7b.\n\n        \u53c2\u6570:\n            tif_path (str): GTiff\u6570\u636e\u7684\u8def\u5f84.\n            show_band (Union[List[int], Tuple[int]], optional): \u7528\u4e8eRGB\u5408\u6210\u663e\u793a\u7684\u6ce2\u6bb5. \u9ed8\u8ba4\u4e3a [1, 1, 1].\n            grid_size (Union[List[int], Tuple[int]], optional): \u5207\u7247\u5927\u5c0f. \u9ed8\u8ba4\u4e3a [512, 512].\n            overlap (Union[List[int], Tuple[int]], optional): \u91cd\u53e0\u533a\u57df\u7684\u5927\u5c0f. \u9ed8\u8ba4\u4e3a [24, 24].\n        \"\"\"", "\n", "super", "(", "RSGrids", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "raster", "=", "raset", "\n", "self", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.clear": [[34, 38], ["None"], "methods", ["None"], ["", "def", "clear", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "mask_grids", "=", "[", "]", "# \u6807\u7b7e\u5bab\u683c", "\n", "self", ".", "grid_count", "=", "None", "# (row count, col count)", "\n", "self", ".", "curr_idx", "=", "None", "# (current row, current col)", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.createGrids": [[39, 47], ["numpy.ceil", "grid_count.astype.astype.astype", "list", "numpy.zeros", "range", "range"], "methods", ["None"], ["", "def", "createGrids", "(", "self", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "img_size", "=", "(", "self", ".", "raster", ".", "geoinfo", ".", "ysize", ",", "self", ".", "raster", ".", "geoinfo", ".", "xsize", ")", "\n", "grid_count", "=", "np", ".", "ceil", "(", "\n", "(", "img_size", "+", "self", ".", "raster", ".", "overlap", ")", "/", "self", ".", "raster", ".", "grid_size", ")", "\n", "self", ".", "grid_count", "=", "grid_count", "=", "grid_count", ".", "astype", "(", "\"uint16\"", ")", "\n", "self", ".", "mask_grids", "=", "[", "[", "np", ".", "zeros", "(", "self", ".", "raster", ".", "grid_size", ")", "for", "_", "in", "range", "(", "grid_count", "[", "1", "]", ")", "]", "for", "_", "in", "range", "(", "grid_count", "[", "0", "]", ")", "]", "\n", "return", "list", "(", "grid_count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.getGrid": [[48, 53], ["rs_grid.RSGrids.raster.getGrid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getGrid"], ["", "def", "getGrid", "(", "self", ",", "row", ":", "int", ",", "col", ":", "int", ")", "->", "Tuple", "[", "np", ".", "ndarray", "]", ":", "\n", "        ", "img", ",", "_", "=", "self", ".", "raster", ".", "getGrid", "(", "row", ",", "col", ")", "\n", "mask", "=", "self", ".", "mask_grids", "[", "row", "]", "[", "col", "]", "\n", "self", ".", "curr_idx", "=", "(", "row", ",", "col", ")", "\n", "return", "img", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.n2grid.rs_grid.RSGrids.splicingList": [[54, 58], ["rs_grid.RSGrids.raster.saveMaskbyGrids"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.saveMaskbyGrids"], ["", "def", "splicingList", "(", "self", ",", "save_path", ":", "str", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "mask", "=", "self", ".", "raster", ".", "saveMaskbyGrids", "(", "self", ".", "mask_grids", ",", "save_path", ",", "\n", "self", ".", "raster", ".", "geoinfo", ")", "\n", "return", "mask", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.medical.med.has_sitk": [[21, 28], ["None"], "function", ["None"], ["def", "has_sitk", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "import", "SimpleITK", "\n", "\n", "return", "True", "\n", "", "except", "ImportError", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.medical.med.dcm_reader": [[34, 46], ["eiseg.logger.debug", "sitk.ImageSeriesReader", "sitk.ImageSeriesReader.SetFileNames", "sitk.ImageSeriesReader.Execute", "sitk.GetArrayFromImage", "eiseg.logger.debug", "numpy.transpose", "np.transpose.astype", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.debug", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.logger.debug"], ["", "def", "dcm_reader", "(", "path", ")", ":", "\n", "    ", "logger", ".", "debug", "(", "f\"opening medical image {path}\"", ")", "\n", "reader", "=", "sitk", ".", "ImageSeriesReader", "(", ")", "\n", "reader", ".", "SetFileNames", "(", "[", "path", "]", ")", "\n", "image", "=", "reader", ".", "Execute", "(", ")", "\n", "img", "=", "sitk", ".", "GetArrayFromImage", "(", "image", ")", "\n", "logger", ".", "debug", "(", "f\"scan shape is {img.shape}\"", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "4", ":", "\n", "        ", "img", "=", "img", "[", "0", "]", "\n", "# WHC", "\n", "", "img", "=", "np", ".", "transpose", "(", "img", ",", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "return", "img", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.medical.med.windowlize": [[48, 62], ["scan.copy", "cv2.cvtColor.astype", "numpy.clip", "cv2.cvtColor.astype", "cv2.cvtColor"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["", "def", "windowlize", "(", "scan", ",", "ww", ",", "wc", ")", ":", "\n", "    ", "wl", "=", "wc", "-", "ww", "/", "2", "\n", "wh", "=", "wc", "+", "ww", "/", "2", "\n", "res", "=", "scan", ".", "copy", "(", ")", "\n", "res", "=", "res", ".", "astype", "(", "np", ".", "float32", ")", "\n", "res", "=", "np", ".", "clip", "(", "res", ",", "wl", ",", "wh", ")", "\n", "res", "=", "(", "res", "-", "wl", ")", "/", "ww", "*", "255", "\n", "res", "=", "res", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "# print(\"++\", res.shape)", "\n", "# for idx in range(res.shape[-1]):", "\n", "# TODO: \u652f\u63013d\u6216\u8005\u6539\u8c03\u7528", "\n", "res", "=", "cv2", ".", "cvtColor", "(", "res", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.__init__": [[41, 69], ["super().__init__", "os.exists", "rasterio.open", "raster.Raster.__getRasterInfo", "list", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.__getRasterInfo"], ["    ", "def", "__init__", "(", "self", ",", "\n", "tif_path", ":", "str", ",", "\n", "show_band", ":", "Union", "[", "List", "[", "int", "]", ",", "Tuple", "[", "int", "]", "]", "=", "[", "1", ",", "1", ",", "1", "]", ",", "\n", "open_grid", ":", "bool", "=", "False", ",", "\n", "grid_size", ":", "Union", "[", "List", "[", "int", "]", ",", "Tuple", "[", "int", "]", "]", "=", "[", "512", ",", "512", "]", ",", "\n", "overlap", ":", "Union", "[", "List", "[", "int", "]", ",", "Tuple", "[", "int", "]", "]", "=", "[", "24", ",", "24", "]", ")", "->", "None", ":", "\n", "        ", "\"\"\" \u5728EISeg\u4e2d\u7528\u4e8e\u5904\u7406\u9065\u611f\u6805\u683c\u6570\u636e\u7684\u7c7b.\n\n        \u53c2\u6570:\n            tif_path (str): GTiff\u6570\u636e\u7684\u8def\u5f84.\n            show_band (Union[List[int], Tuple[int]], optional): \u7528\u4e8eRGB\u5408\u6210\u663e\u793a\u7684\u6ce2\u6bb5. \u9ed8\u8ba4\u4e3a [1, 1, 1].\n            open_grid (bool, optional): \u662f\u5426\u6253\u5f00\u4e86\u5bab\u683c\u5207\u7247\u529f\u80fd. \u9ed8\u8ba4\u4e3a False.\n            grid_size (Union[List[int], Tuple[int]], optional): \u5207\u7247\u5927\u5c0f. \u9ed8\u8ba4\u4e3a [512, 512].\n            overlap (Union[List[int], Tuple[int]], optional): \u91cd\u53e0\u533a\u57df\u7684\u5927\u5c0f. \u9ed8\u8ba4\u4e3a [24, 24].\n        \"\"\"", "\n", "super", "(", "Raster", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "IMPORT_STATE", "is", "False", ":", "\n", "            ", "raise", "(", "\"Can't import rasterio!\"", ")", "\n", "", "if", "osp", ".", "exists", "(", "tif_path", ")", ":", "\n", "            ", "self", ".", "src_data", "=", "rasterio", ".", "open", "(", "tif_path", ")", "\n", "self", ".", "geoinfo", "=", "self", ".", "__getRasterInfo", "(", ")", "\n", "self", ".", "show_band", "=", "list", "(", "show_band", ")", "\n", "self", ".", "grid_size", "=", "np", ".", "array", "(", "grid_size", ")", "\n", "self", ".", "overlap", "=", "np", ".", "array", "(", "overlap", ")", "\n", "self", ".", "open_grid", "=", "open_grid", "\n", "", "else", ":", "\n", "            ", "raise", "(", "\"{0} not exists!\"", ".", "format", "(", "tif_path", ")", ")", "\n", "", "self", ".", "thumbnail_min", "=", "2000", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.__del__": [[70, 72], ["raster.Raster.src_data.close"], "methods", ["None"], ["", "def", "__del__", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "src_data", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.__getRasterInfo": [[73, 84], ["easydict.EasyDict"], "methods", ["None"], ["", "def", "__getRasterInfo", "(", "self", ")", "->", "Dict", ":", "\n", "        ", "meta", "=", "self", ".", "src_data", ".", "meta", "\n", "geoinfo", "=", "edict", "(", ")", "\n", "geoinfo", ".", "count", "=", "meta", "[", "\"count\"", "]", "\n", "geoinfo", ".", "dtype", "=", "meta", "[", "\"dtype\"", "]", "\n", "geoinfo", ".", "xsize", "=", "meta", "[", "\"width\"", "]", "\n", "geoinfo", ".", "ysize", "=", "meta", "[", "\"height\"", "]", "\n", "geoinfo", ".", "geotf", "=", "meta", "[", "\"transform\"", "]", "\n", "geoinfo", ".", "crs", "=", "meta", "[", "\"crs\"", "]", "\n", "geoinfo", ".", "crs_wkt", "=", "geoinfo", ".", "crs", ".", "wkt", "\n", "return", "geoinfo", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.checkOpenGrid": [[85, 93], ["isinstance", "max"], "methods", ["None"], ["", "def", "checkOpenGrid", "(", "self", ",", "thumbnail_min", ":", "Union", "[", "int", ",", "None", "]", ")", "->", "bool", ":", "\n", "        ", "if", "isinstance", "(", "thumbnail_min", ",", "int", ")", ":", "\n", "            ", "self", ".", "thumbnail_min", "=", "thumbnail_min", "\n", "", "if", "max", "(", "self", ".", "geoinfo", ".", "xsize", ",", "self", ".", "geoinfo", ".", "ysize", ")", "<=", "self", ".", "thumbnail_min", ":", "\n", "            ", "self", ".", "open_grid", "=", "False", "\n", "", "else", ":", "\n", "            ", "self", ".", "open_grid", "=", "True", "\n", "", "return", "self", ".", "open_grid", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.setBand": [[94, 96], ["list"], "methods", ["None"], ["", "def", "setBand", "(", "self", ",", "bands", ":", "Union", "[", "List", "[", "int", "]", ",", "Tuple", "[", "int", "]", "]", ")", "->", "None", ":", "\n", "        ", "self", ".", "show_band", "=", "list", "(", "bands", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.showGeoInfo": [[110, 119], ["str", "raster.Raster.geoinfo.crs.to_string().split", "raster.Raster.geoinfo.crs.to_string"], "methods", ["None"], ["", "def", "showGeoInfo", "(", "self", ")", "->", "str", ":", "\n", "# return str(\"\u25cf \u6ce2\u6bb5\u6570\uff1a{0}\\n\u25cf \u6570\u636e\u7c7b\u578b\uff1a{1}\\n\u25cf \u884c\u6570\uff1a{2}\\n\u25cf \u5217\u6570\uff1a{3}\\n{4}\".format(", "\n", "#     self.geoinfo.count, self.geoinfo.dtype, self.geoinfo.xsize,", "\n", "#     self.geoinfo.ysize, self.__analysis_proj4())", "\n", "# )", "\n", "        ", "return", "str", "(", "\"\u25cf \u6ce2\u6bb5\u6570\uff1a{0}\\n\u25cf \u6570\u636e\u7c7b\u578b\uff1a{1}\\n\u25cf \u884c\u6570\uff1a{2}\\n\u25cf \u5217\u6570\uff1a{3}\\n\u25cf EPSG\uff1a{4}\"", ".", "\n", "format", "(", "self", ".", "geoinfo", ".", "count", ",", "self", ".", "geoinfo", ".", "dtype", ",", "\n", "self", ".", "geoinfo", ".", "xsize", ",", "self", ".", "geoinfo", ".", "ysize", ",", "\n", "self", ".", "geoinfo", ".", "crs", ".", "to_string", "(", ")", ".", "split", "(", "\":\"", ")", "[", "-", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getArray": [[120, 135], ["numpy.stack", "imgtools.sample_norm", "imgtools.two_percentLinear", "rgb.append", "rgb.append", "raster.Raster.src_data.read", "imgtools.get_thumbnail", "raster.Raster.src_data.read"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.imgtools.sample_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.imgtools.two_percentLinear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.imgtools.get_thumbnail"], ["", "def", "getArray", "(", "self", ")", "->", "Tuple", "[", "np", ".", "ndarray", "]", ":", "\n", "        ", "rgb", "=", "[", "]", "\n", "if", "not", "self", ".", "open_grid", ":", "\n", "            ", "for", "b", "in", "self", ".", "show_band", ":", "\n", "                ", "rgb", ".", "append", "(", "self", ".", "src_data", ".", "read", "(", "b", ")", ")", "\n", "", "geotf", "=", "self", ".", "geoinfo", ".", "geotf", "\n", "", "else", ":", "\n", "            ", "for", "b", "in", "self", ".", "show_band", ":", "\n", "                ", "rgb", ".", "append", "(", "\n", "get_thumbnail", "(", "self", ".", "src_data", ".", "read", "(", "b", ")", ",", "self", ".", "thumbnail_min", ")", ")", "\n", "", "geotf", "=", "None", "\n", "", "ima", "=", "np", ".", "stack", "(", "rgb", ",", "axis", "=", "2", ")", "# cv2.merge(rgb)", "\n", "if", "self", ".", "geoinfo", "[", "\"dtype\"", "]", "!=", "\"uint8\"", ":", "\n", "            ", "ima", "=", "sample_norm", "(", "ima", ")", "\n", "", "return", "two_percentLinear", "(", "ima", ")", ",", "geotf", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getGrid": [[136, 152], ["numpy.array", "Window", "raster.Raster.src_data.window_transform", "cv2.merge", "raster.Raster.getArray", "rgb.append", "imgtools.sample_norm", "imgtools.two_percentLinear", "raster.Raster.src_data.read", "numpy.uint16"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.getArray", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.imgtools.sample_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.imgtools.two_percentLinear"], ["", "def", "getGrid", "(", "self", ",", "row", ":", "int", ",", "col", ":", "int", ")", "->", "Tuple", "[", "np", ".", "ndarray", "]", ":", "\n", "        ", "if", "self", ".", "open_grid", "is", "False", ":", "\n", "            ", "return", "self", ".", "getArray", "(", ")", "\n", "", "grid_idx", "=", "np", ".", "array", "(", "[", "row", ",", "col", "]", ")", "\n", "ul", "=", "grid_idx", "*", "(", "self", ".", "grid_size", "-", "self", ".", "overlap", ")", "\n", "lr", "=", "ul", "+", "self", ".", "grid_size", "\n", "# print(\"ul, lr\", ul, lr)", "\n", "window", "=", "Window", "(", "ul", "[", "1", "]", ",", "ul", "[", "0", "]", ",", "(", "lr", "[", "1", "]", "-", "ul", "[", "1", "]", ")", ",", "(", "lr", "[", "0", "]", "-", "ul", "[", "0", "]", ")", ")", "\n", "rgb", "=", "[", "]", "\n", "for", "b", "in", "self", ".", "show_band", ":", "\n", "            ", "rgb", ".", "append", "(", "self", ".", "src_data", ".", "read", "(", "b", ",", "window", "=", "window", ")", ")", "\n", "", "win_tf", "=", "self", ".", "src_data", ".", "window_transform", "(", "window", ")", "\n", "ima", "=", "cv2", ".", "merge", "(", "[", "np", ".", "uint16", "(", "c", ")", "for", "c", "in", "rgb", "]", ")", "\n", "if", "self", ".", "geoinfo", "[", "\"dtype\"", "]", "==", "\"uint32\"", ":", "\n", "            ", "ima", "=", "sample_norm", "(", "ima", ")", "\n", "", "return", "two_percentLinear", "(", "ima", ")", ",", "win_tf", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.saveMask": [[153, 178], ["raster.Raster.src_data.meta.copy", "raster.Raster.update", "numpy.nan_to_num().astype", "rasterio.open", "numpy.nan_to_num", "tf.write", "range", "tf.write"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update"], ["", "def", "saveMask", "(", "self", ",", "\n", "img", ":", "np", ".", "ndarray", ",", "\n", "save_path", ":", "str", ",", "\n", "geoinfo", ":", "Union", "[", "Dict", ",", "None", "]", "=", "None", ",", "\n", "count", ":", "int", "=", "1", ")", "->", "None", ":", "\n", "        ", "if", "geoinfo", "is", "None", ":", "\n", "            ", "geoinfo", "=", "self", ".", "geoinfo", "\n", "", "new_meta", "=", "self", ".", "src_data", ".", "meta", ".", "copy", "(", ")", "\n", "new_meta", ".", "update", "(", "{", "\n", "\"driver\"", ":", "\"GTiff\"", ",", "\n", "\"width\"", ":", "geoinfo", ".", "xsize", ",", "\n", "\"height\"", ":", "geoinfo", ".", "ysize", ",", "\n", "\"count\"", ":", "count", ",", "\n", "\"dtype\"", ":", "geoinfo", ".", "dtype", ",", "\n", "\"crs\"", ":", "geoinfo", ".", "crs", ",", "\n", "\"transform\"", ":", "geoinfo", ".", "geotf", "[", ":", "6", "]", ",", "\n", "\"nodata\"", ":", "0", "\n", "}", ")", "\n", "img", "=", "np", ".", "nan_to_num", "(", "img", ")", ".", "astype", "(", "\"int16\"", ")", "\n", "with", "rasterio", ".", "open", "(", "save_path", ",", "\"w\"", ",", "**", "new_meta", ")", "as", "tf", ":", "\n", "            ", "if", "count", "==", "1", ":", "\n", "                ", "tf", ".", "write", "(", "img", ",", "indexes", "=", "1", ")", "\n", "", "else", ":", "\n", "                ", "for", "i", "in", "range", "(", "count", ")", ":", "\n", "                    ", "tf", ".", "write", "(", "img", "[", ":", ",", ":", ",", "i", "]", ",", "indexes", "=", "(", "i", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.saveMaskbyGrids": [[179, 214], ["math.ceil", "math.ceil", "numpy.zeros", "numpy.zeros.copy", "range", "numpy.where", "range", "raster.Raster.saveMask", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.Raster.saveMask"], ["", "", "", "", "def", "saveMaskbyGrids", "(", "self", ",", "\n", "img_list", ":", "List", "[", "List", "[", "np", ".", "ndarray", "]", "]", ",", "\n", "save_path", ":", "Union", "[", "str", ",", "None", "]", "=", "None", ",", "\n", "geoinfo", ":", "Union", "[", "Dict", ",", "None", "]", "=", "None", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "if", "geoinfo", "is", "None", ":", "\n", "            ", "geoinfo", "=", "self", ".", "geoinfo", "\n", "", "raw_size", "=", "(", "geoinfo", ".", "ysize", ",", "geoinfo", ".", "xsize", ")", "\n", "h", ",", "w", "=", "self", ".", "grid_size", "\n", "row", "=", "math", ".", "ceil", "(", "raw_size", "[", "0", "]", "/", "h", ")", "\n", "col", "=", "math", ".", "ceil", "(", "raw_size", "[", "1", "]", "/", "w", ")", "\n", "# print(\"row, col:\", row, col)", "\n", "result_1", "=", "np", ".", "zeros", "(", "(", "h", "*", "row", ",", "w", "*", "col", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "result_2", "=", "result_1", ".", "copy", "(", ")", "\n", "for", "i", "in", "range", "(", "row", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "col", ")", ":", "\n", "# print(\"h, w:\", h, w)", "\n", "                ", "ih", ",", "iw", "=", "img_list", "[", "i", "]", "[", "j", "]", ".", "shape", "[", ":", "2", "]", "\n", "im", "=", "np", ".", "zeros", "(", "self", ".", "grid_size", ")", "\n", "im", "[", ":", "ih", ",", ":", "iw", "]", "=", "img_list", "[", "i", "]", "[", "j", "]", "\n", "start_h", "=", "(", "i", "*", "h", ")", "if", "i", "==", "0", "else", "(", "i", "*", "(", "h", "-", "self", ".", "overlap", "[", "0", "]", ")", ")", "\n", "end_h", "=", "start_h", "+", "h", "\n", "start_w", "=", "(", "j", "*", "w", ")", "if", "j", "==", "0", "else", "(", "j", "*", "(", "w", "-", "self", ".", "overlap", "[", "1", "]", ")", ")", "\n", "end_w", "=", "start_w", "+", "w", "\n", "# print(\"se: \", start_h, end_h, start_w, end_w)", "\n", "# \u5355\u533a\u81ea\u5df1\uff0c\u91cd\u53e0\u53d6\u6216", "\n", "if", "(", "i", "+", "j", ")", "%", "2", "==", "0", ":", "\n", "                    ", "result_1", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "=", "im", "\n", "", "else", ":", "\n", "                    ", "result_2", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "=", "im", "\n", "# print(\"r, c, k:\", i_r, i_c, k)", "\n", "", "", "", "result", "=", "np", ".", "where", "(", "result_2", "!=", "0", ",", "result_2", ",", "result_1", ")", "\n", "result", "=", "result", "[", ":", "raw_size", "[", "0", "]", ",", ":", "raw_size", "[", "1", "]", "]", "\n", "if", "save_path", "is", "not", "None", ":", "\n", "            ", "self", ".", "saveMask", "(", "result", ",", "save_path", ",", "geoinfo", ")", "\n", "", "return", "result", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.raster.check_rasterio": [[25, 31], ["None"], "function", ["None"], ["def", "check_rasterio", "(", ")", "->", "bool", ":", "\n", "    ", "try", ":", "\n", "        ", "import", "rasterio", "\n", "return", "True", "\n", "", "except", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.imgtools.two_percentLinear": [[21, 38], ["cv2.split", "imgtools.two_percentLinear.__gray_process"], "function", ["None"], ["def", "two_percentLinear", "(", "image", ":", "np", ".", "ndarray", ",", "max_out", ":", "int", "=", "255", ",", "\n", "min_out", ":", "int", "=", "0", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "b", ",", "g", ",", "r", "=", "cv2", ".", "split", "(", "image", ")", "\n", "\n", "def", "__gray_process", "(", "gray", ",", "maxout", "=", "max_out", ",", "minout", "=", "min_out", ")", ":", "\n", "        ", "high_value", "=", "np", ".", "percentile", "(", "gray", ",", "98", ")", "# \u53d6\u5f9798%\u76f4\u65b9\u56fe\u5904\u5bf9\u5e94\u7070\u5ea6", "\n", "low_value", "=", "np", ".", "percentile", "(", "gray", ",", "2", ")", "\n", "truncated_gray", "=", "np", ".", "clip", "(", "gray", ",", "a_min", "=", "low_value", ",", "a_max", "=", "high_value", ")", "\n", "processed_gray", "=", "(", "(", "truncated_gray", "-", "low_value", ")", "/", "\n", "(", "high_value", "-", "low_value", ")", ")", "*", "(", "maxout", "-", "minout", ")", "\n", "return", "processed_gray", "\n", "\n", "", "r_p", "=", "__gray_process", "(", "r", ")", "\n", "g_p", "=", "__gray_process", "(", "g", ")", "\n", "b_p", "=", "__gray_process", "(", "b", ")", "\n", "result", "=", "cv2", ".", "merge", "(", "(", "b_p", ",", "g_p", ",", "r_p", ")", ")", "\n", "return", "np", ".", "uint8", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.imgtools.sample_norm": [[41, 52], ["numpy.uint8", "len", "range", "numpy.stack", "skimage.exposure.equalize_hist", "skimage.exposure.equalize_hist", "float", "stretches.append", "numpy.max"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "sample_norm", "(", "image", ":", "np", ".", "ndarray", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "stretches", "=", "[", "]", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "3", ":", "\n", "        ", "for", "b", "in", "range", "(", "image", ".", "shape", "[", "-", "1", "]", ")", ":", "\n", "            ", "stretched", "=", "exposure", ".", "equalize_hist", "(", "image", "[", ":", ",", ":", ",", "b", "]", ")", "\n", "stretched", "/=", "float", "(", "np", ".", "max", "(", "stretched", ")", ")", "\n", "stretches", ".", "append", "(", "stretched", ")", "\n", "", "stretched_img", "=", "np", ".", "stack", "(", "stretches", ",", "axis", "=", "2", ")", "\n", "", "else", ":", "# if len(image.shape) == 2", "\n", "        ", "stretched_img", "=", "exposure", ".", "equalize_hist", "(", "image", ")", "\n", "", "return", "np", ".", "uint8", "(", "stretched_img", "*", "255", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.imgtools.get_thumbnail": [[55, 64], ["cv2.resize", "cv2.resize", "int", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.transforms.functional.resize"], ["", "def", "get_thumbnail", "(", "image", ":", "np", ".", "ndarray", ",", "range", ":", "int", "=", "2000", ",", "\n", "max_size", ":", "int", "=", "1000", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "if", "h", ">=", "range", "or", "w", ">=", "range", ":", "\n", "        ", "if", "h", ">=", "w", ":", "\n", "            ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "int", "(", "max_size", "/", "h", "*", "w", ")", ",", "max_size", ")", ")", "\n", "", "else", ":", "\n", "            ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "max_size", ",", "int", "(", "max_size", "/", "w", "*", "h", ")", ")", ")", "\n", "", "", "return", "image", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.shape.check_gdal": [[19, 28], ["None"], "function", ["None"], ["def", "check_gdal", "(", ")", "->", "bool", ":", "\n", "    ", "try", ":", "\n", "        ", "import", "gdal", "\n", "", "except", ":", "\n", "        ", "try", ":", "\n", "            ", "from", "osgeo", "import", "gdal", "\n", "", "except", "ImportError", ":", "\n", "            ", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.shape.save_shp": [[42, 70], ["gdal.Open", "gdal.Open.GetRasterBand", "ds.GetRasterBand.GetMaskBand", "gdal.SetConfigOption", "gdal.SetConfigOption", "ogr.RegisterAll", "ogr.GetDriverByName", "os.exists", "ogr.GetDriverByName.CreateDataSource", "osr.SpatialReference", "drv.CreateDataSource.CreateLayer", "ogr.FieldDefn", "dst_ds.CreateLayer.CreateField", "gdal.Polygonize", "drv.CreateDataSource.GetLayer", "dst_ds.GetLayer.SetAttributeFilter", "drv.CreateDataSource.Destroy", "ImportError", "os.remove", "os.remove", "dst_ds.GetLayer.DeleteFeature", "gdal.Open.GetProjection", "str", "holes.GetFID"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove"], ["", "def", "save_shp", "(", "shp_path", ":", "str", ",", "tif_path", ":", "str", ",", "ignore_index", ":", "int", "=", "0", ")", "->", "str", ":", "\n", "    ", "if", "IMPORT_STATE", "==", "True", ":", "\n", "        ", "ds", "=", "gdal", ".", "Open", "(", "tif_path", ")", "\n", "srcband", "=", "ds", ".", "GetRasterBand", "(", "1", ")", "\n", "maskband", "=", "srcband", ".", "GetMaskBand", "(", ")", "\n", "gdal", ".", "SetConfigOption", "(", "\"GDAL_FILENAME_IS_UTF8\"", ",", "\"YES\"", ")", "\n", "gdal", ".", "SetConfigOption", "(", "\"SHAPE_ENCODING\"", ",", "\"UTF-8\"", ")", "\n", "ogr", ".", "RegisterAll", "(", ")", "\n", "drv", "=", "ogr", ".", "GetDriverByName", "(", "\"ESRI Shapefile\"", ")", "\n", "if", "osp", ".", "exists", "(", "shp_path", ")", ":", "\n", "            ", "os", ".", "remove", "(", "shp_path", ")", "\n", "", "dst_ds", "=", "drv", ".", "CreateDataSource", "(", "shp_path", ")", "\n", "prosrs", "=", "osr", ".", "SpatialReference", "(", "wkt", "=", "ds", ".", "GetProjection", "(", ")", ")", "\n", "dst_layer", "=", "dst_ds", ".", "CreateLayer", "(", "\n", "\"segmentation\"", ",", "geom_type", "=", "ogr", ".", "wkbPolygon", ",", "srs", "=", "prosrs", ")", "\n", "dst_fieldname", "=", "\"DN\"", "\n", "fd", "=", "ogr", ".", "FieldDefn", "(", "dst_fieldname", ",", "ogr", ".", "OFTInteger", ")", "\n", "dst_layer", ".", "CreateField", "(", "fd", ")", "\n", "gdal", ".", "Polygonize", "(", "srcband", ",", "maskband", ",", "dst_layer", ",", "0", ",", "[", "]", ")", "\n", "lyr", "=", "dst_ds", ".", "GetLayer", "(", ")", "\n", "lyr", ".", "SetAttributeFilter", "(", "\"DN = '{}'\"", ".", "format", "(", "str", "(", "ignore_index", ")", ")", ")", "\n", "for", "holes", "in", "lyr", ":", "\n", "            ", "lyr", ".", "DeleteFeature", "(", "holes", ".", "GetFID", "(", ")", ")", "\n", "", "dst_ds", ".", "Destroy", "(", ")", "\n", "ds", "=", "None", "\n", "return", "\"Dataset creation successfully!\"", "\n", "", "else", ":", "\n", "        ", "raise", "ImportError", "(", "\"can't import gdal, osr, ogr!\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.check_gdal": [[16, 25], ["None"], "function", ["None"], ["def", "check_gdal", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "import", "gdal", "\n", "", "except", ":", "\n", "        ", "try", ":", "\n", "            ", "from", "osgeo", "import", "gdal", "\n", "", "except", "ImportError", ":", "\n", "            ", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.open_tif": [[41, 50], ["gdal.Open", "ImportError", "rstools.__tif2arr", "rstools.get_geoinfo"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.__tif2arr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.get_geoinfo"], ["", "", "def", "open_tif", "(", "geoimg_path", ")", ":", "\n", "    ", "\"\"\"\n    \u6253\u5f00tif\u6587\u4ef6\n    \"\"\"", "\n", "if", "IPT_GDAL", "==", "True", ":", "\n", "        ", "geoimg", "=", "gdal", ".", "Open", "(", "geoimg_path", ")", "\n", "return", "__tif2arr", "(", "geoimg", ")", ",", "get_geoinfo", "(", "geoimg", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ImportError", "(", "\"can't import gdal!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.__tif2arr": [[52, 60], ["geoimg.ReadAsArray", "ImportError", "len", "tifarr.transpose.transpose"], "function", ["None"], ["", "", "def", "__tif2arr", "(", "geoimg", ")", ":", "\n", "    ", "if", "IPT_GDAL", "==", "True", ":", "\n", "        ", "tifarr", "=", "geoimg", ".", "ReadAsArray", "(", ")", "\n", "if", "len", "(", "tifarr", ".", "shape", ")", "==", "3", ":", "\n", "            ", "tifarr", "=", "tifarr", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "# \u591a\u6ce2\u6bb5\u56fe\u50cf\u9ed8\u8ba4\u662f[c, h, w]", "\n", "", "return", "tifarr", "\n", "", "else", ":", "\n", "        ", "raise", "ImportError", "(", "\"can't import gdal!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.get_geoinfo": [[62, 78], ["ImportError", "geoimg.GetProjection", "geoimg.GetSpatialRef", "geoimg.GetGeoTransform"], "function", ["None"], ["", "", "def", "get_geoinfo", "(", "geoimg", ")", ":", "\n", "    ", "\"\"\"\n    \u83b7\u53d6tif\u56fe\u50cf\u7684\u4fe1\u606f\uff0c\u8f93\u5165\u4e3adgal\u8bfb\u53d6\u7684\u6570\u636e\n    \"\"\"", "\n", "if", "IPT_GDAL", "==", "True", ":", "\n", "        ", "geoinfo", "=", "{", "\n", "\"count\"", ":", "geoimg", ".", "RasterCount", ",", "\n", "\"xsize\"", ":", "geoimg", ".", "RasterXSize", ",", "\n", "\"ysize\"", ":", "geoimg", ".", "RasterYSize", ",", "\n", "\"proj\"", ":", "geoimg", ".", "GetProjection", "(", ")", ",", "\n", "\"proj2\"", ":", "geoimg", ".", "GetSpatialRef", "(", ")", ",", "\n", "\"geotf\"", ":", "geoimg", ".", "GetGeoTransform", "(", ")", ",", "\n", "}", "\n", "return", "geoinfo", "\n", "", "else", ":", "\n", "        ", "raise", "ImportError", "(", "\"can't import gdal!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.show_geoinfo": [[80, 87], ["str", "rstools.__analysis_proj2", "geo_info[].ExportToProj4"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.__analysis_proj2"], ["", "", "def", "show_geoinfo", "(", "geo_info", ",", "type", ")", ":", "\n", "    ", "return", "str", "(", "\"\u25cf \u6ce2\u6bb5\u6570\uff1a{0}\\n\u25cf \u6570\u636e\u7c7b\u578b\uff1a{1}\\n\u25cf \u884c\u6570\uff1a{2}\\n\u25cf \u5217\u6570\uff1a{3}\\n{4}\"", ".", "format", "(", "\n", "geo_info", "[", "\"count\"", "]", ",", "\n", "type", ",", "\n", "geo_info", "[", "\"xsize\"", "]", ",", "\n", "geo_info", "[", "\"ysize\"", "]", ",", "\n", "__analysis_proj2", "(", "geo_info", "[", "\"proj2\"", "]", ".", "ExportToProj4", "(", ")", ")", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.__analysis_proj2": [[89, 99], ["collections.defaultdict", "proj2.split", "str", "df.strip().split", "len", "df.strip"], "function", ["None"], ["", "def", "__analysis_proj2", "(", "proj2", ")", ":", "\n", "    ", "ap_dict", "=", "defaultdict", "(", "str", ")", "\n", "dinf", "=", "proj2", ".", "split", "(", "\"+\"", ")", "\n", "for", "df", "in", "dinf", ":", "\n", "        ", "kv", "=", "df", ".", "strip", "(", ")", ".", "split", "(", "\"=\"", ")", "\n", "if", "len", "(", "kv", ")", "==", "2", ":", "\n", "            ", "k", ",", "v", "=", "kv", "\n", "ap_dict", "[", "k", "]", "=", "v", "\n", "", "", "return", "str", "(", "\"\u25cf \u6295\u5f71\uff1a{0}\\n\u25cf \u57fa\u51c6\uff1a{1}\\n\u25cf \u5355\u4f4d\uff1a{2}\"", ".", "format", "(", "ap_dict", "[", "\"proj\"", "]", ",", "ap_dict", "[", "\n", "\"datum\"", "]", ",", "ap_dict", "[", "\"units\"", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.remotesensing.rstools.save_tif": [[101, 127], ["gdal.GetDriverByName", "gdal.GetDriverByName.Create", "driver.Create.SetProjection", "driver.Create.SetGeoTransform", "driver.Create.GetRasterBand().WriteArray", "ImportError", "driver.Create.GetRasterBand"], "function", ["None"], ["", "def", "save_tif", "(", "img", ",", "geoinfo", ",", "save_path", ")", ":", "\n", "    ", "\"\"\"\n    \u4fdd\u5b58\u5206\u5272\u7684\u56fe\u50cf\u5e76\u4f7f\u5176\u7a7a\u95f4\u4fe1\u606f\u4fdd\u6301\u4e00\u81f4\n    \"\"\"", "\n", "if", "IPT_GDAL", "==", "True", ":", "\n", "        ", "driver", "=", "gdal", ".", "GetDriverByName", "(", "\"GTiff\"", ")", "\n", "datatype", "=", "gdal", ".", "GDT_Byte", "\n", "dataset", "=", "driver", ".", "Create", "(", "\n", "save_path", ",", "\n", "geoinfo", "[", "\"xsize\"", "]", ",", "\n", "geoinfo", "[", "\"ysize\"", "]", ",", "\n", "1", ",", "# geoinfo['count'],  # \u4fdd\u5b58tif\u76ee\u524d\u4ec5\u7528\u4e8e\u4fdd\u5b58mask\uff0c\u6ce2\u6bb5\u4e3a1\u5c31OK", "\n", "datatype", ",", ")", "\n", "dataset", ".", "SetProjection", "(", "geoinfo", "[", "\"proj\"", "]", ")", "# \u5199\u5165\u6295\u5f71", "\n", "dataset", ".", "SetGeoTransform", "(", "geoinfo", "[", "\"geotf\"", "]", ")", "# \u5199\u5165\u4eff\u5c04\u53d8\u6362\u53c2\u6570", "\n", "# \u540c\u4e0a", "\n", "# C = img.shape[-1] if len(img.shape) == 3 else 1", "\n", "# if C == 1:", "\n", "#     dataset.GetRasterBand(1).WriteArray(img)", "\n", "# else:", "\n", "#     for i_c in range(C):", "\n", "#         dataset.GetRasterBand(i_c + 1).WriteArray(img[:, :, i_c])", "\n", "dataset", ".", "GetRasterBand", "(", "1", ")", ".", "WriteArray", "(", "img", ")", "\n", "del", "dataset", "# \u5220\u9664\u4e0etif\u7684\u8fde\u63a5", "\n", "", "else", ":", "\n", "        ", "raise", "ImportError", "(", "\"can't import gdal!\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2paddlex.mkdirp": [[36, 39], ["os.exists", "os.mkdir", "os.mkdir"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.mkdir"], ["def", "mkdirp", "(", "path", ")", ":", "\n", "    ", "if", "not", "osp", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2paddlex.Eiseg2Semantic": [[42, 109], ["os.join", "os.join", "eiseg2paddlex.mkdirp", "eiseg2paddlex.mkdirp", "eiseg2paddlex.mkdirp", "os.listdir", "os.listdir", "tqdm.tqdm", "print", "os.join", "os.join", "print", "os.join", "os.join", "os.listdir", "os.listdir", "random.shuffle", "len", "print", "print", "os.join", "open", "open", "ext.lower", "os.join", "os.join", "os.join", "os.join", "open", "rf.readlines", "wf.write", "range", "open", "tqdm.tqdm", "name.split", "name.replace", "os.exists", "os.join", "os.exists", "os.exists", "shutil.copy", "shutil.copy", "len", "wf.write", "enumerate", "os.join", "os.join", "new_img_path.replace.replace", "osp.join.replace", "os.path.split", "os.path.split", "tmps[].split", "name.replace", "os.exists", "os.join", "tf.write", "ef.write", "name.split", "os.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2paddlex.mkdirp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2paddlex.mkdirp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2paddlex.mkdirp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.datasets.cityscapes_autolabeling.CityscapesAutolabeling.shuffle", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.inference.clicker.Click.copy"], ["", "", "def", "Eiseg2Semantic", "(", "save_folder", ",", "imgs_folder", ",", "lab_folder", "=", "None", ",", "split_rate", "=", "0.9", ")", ":", "\n", "    ", "\"\"\"Convert the data marked by eiseg into the semantic segmentation data of paddlex.\n\n    Args:\n        save_folder (str): Data save folder.\n        imgs_folder (str): Image storage folder.\n        lab_folder (str, optional): Label storage folder, \n            if it is none, it will be saved in the current folder by default. Defaults to None.\n        split_rate (float, optional): Proportion of training data and validation data. Defaults to 0.9.\n    \"\"\"", "\n", "# move", "\n", "save_img_folder", "=", "osp", ".", "join", "(", "save_folder", ",", "\"JPEGImages\"", ")", "\n", "save_lab_folder", "=", "osp", ".", "join", "(", "save_folder", ",", "\"Annotations\"", ")", "\n", "mkdirp", "(", "save_folder", ")", "\n", "mkdirp", "(", "save_img_folder", ")", "\n", "mkdirp", "(", "save_lab_folder", ")", "\n", "imgs_name", "=", "os", ".", "listdir", "(", "imgs_folder", ")", "\n", "if", "lab_folder", "is", "None", ":", "\n", "        ", "lab_folder", "=", "osp", ".", "join", "(", "imgs_folder", ",", "\"label\"", ")", "\n", "", "for", "name", "in", "tqdm", "(", "imgs_name", ")", ":", "\n", "        ", "ext", "=", "\".\"", "+", "name", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "\n", "if", "ext", ".", "lower", "(", ")", "in", "FORMATS", ":", "\n", "            ", "img_path", "=", "osp", ".", "join", "(", "imgs_folder", ",", "name", ")", "\n", "lab_path", "=", "osp", ".", "join", "(", "lab_folder", ",", "name", ".", "replace", "(", "ext", ",", "\".png\"", ")", ")", "\n", "if", "not", "osp", ".", "exists", "(", "lab_path", ")", ":", "\n", "                ", "lab_path", "=", "osp", ".", "join", "(", "lab_folder", ",", "name", ")", "\n", "", "save_img_path", "=", "osp", ".", "join", "(", "save_img_folder", ",", "name", ")", "\n", "save_lab_path", "=", "osp", ".", "join", "(", "save_lab_folder", ",", "\n", "os", ".", "path", ".", "split", "(", "lab_path", ")", "[", "-", "1", "]", ")", "\n", "if", "osp", ".", "exists", "(", "img_path", ")", "and", "osp", ".", "exists", "(", "lab_path", ")", ":", "\n", "                ", "shutil", ".", "copy", "(", "img_path", ",", "save_img_path", ")", "\n", "shutil", ".", "copy", "(", "lab_path", ",", "save_lab_path", ")", "\n", "", "", "", "print", "(", "\"===== copy data finished! =====\"", ")", "\n", "# create label", "\n", "label_path", "=", "osp", ".", "join", "(", "lab_folder", ",", "\"autosave_label.txt\"", ")", "\n", "save_label_path", "=", "osp", ".", "join", "(", "save_folder", ",", "\"labels.txt\"", ")", "\n", "with", "open", "(", "label_path", ",", "\"r\"", ")", "as", "rf", ":", "\n", "        ", "with", "open", "(", "save_label_path", ",", "\"w\"", ")", "as", "wf", ":", "\n", "            ", "tmps", "=", "rf", ".", "readlines", "(", ")", "\n", "wf", ".", "write", "(", "\"background\\n\"", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "tmps", ")", ")", ":", "\n", "                ", "lab", "=", "tmps", "[", "i", "]", ".", "split", "(", "\" \"", ")", "[", "1", "]", "\n", "wf", ".", "write", "(", "lab", "+", "\"\\n\"", ")", "\n", "", "", "", "print", "(", "\"===== create label finished! =====\"", ")", "\n", "# create list", "\n", "train_list_path", "=", "osp", ".", "join", "(", "save_folder", ",", "\"train_list.txt\"", ")", "\n", "eval_list_path", "=", "osp", ".", "join", "(", "save_folder", ",", "\"val_list.txt\"", ")", "\n", "new_imgs_name", "=", "os", ".", "listdir", "(", "save_img_folder", ")", "\n", "random", ".", "shuffle", "(", "new_imgs_name", ")", "\n", "lens", "=", "len", "(", "new_imgs_name", ")", "\n", "with", "open", "(", "train_list_path", ",", "\"w\"", ")", "as", "tf", ":", "\n", "        ", "with", "open", "(", "eval_list_path", ",", "\"w\"", ")", "as", "ef", ":", "\n", "            ", "for", "idx", ",", "name", "in", "tqdm", "(", "enumerate", "(", "new_imgs_name", ",", "start", "=", "1", ")", ")", ":", "\n", "                ", "new_img_path", "=", "osp", ".", "join", "(", "\"JPEGImages\"", ",", "name", ")", "\n", "ext", "=", "\".\"", "+", "name", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "\n", "new_lab_path", "=", "osp", ".", "join", "(", "\"Annotations\"", ",", "\n", "name", ".", "replace", "(", "ext", ",", "\".png\"", ")", ")", "\n", "if", "not", "osp", ".", "exists", "(", "osp", ".", "join", "(", "save_folder", ",", "new_lab_path", ")", ")", ":", "\n", "                    ", "new_lab_path", "=", "osp", ".", "join", "(", "\"Annotations\"", ",", "name", ")", "\n", "", "new_img_path", "=", "new_img_path", ".", "replace", "(", "\"\\\\\"", ",", "\"/\"", ")", "\n", "new_lab_path", "=", "new_lab_path", ".", "replace", "(", "\"\\\\\"", ",", "\"/\"", ")", "\n", "if", "(", "idx", "/", "lens", ")", "<=", "split_rate", ":", "\n", "                    ", "tf", ".", "write", "(", "new_img_path", "+", "\" \"", "+", "new_lab_path", "+", "\"\\n\"", ")", "\n", "", "else", ":", "\n", "                    ", "ef", ".", "write", "(", "new_img_path", "+", "\" \"", "+", "new_lab_path", "+", "\"\\n\"", ")", "\n", "", "", "", "", "print", "(", "\"===== create data list finished! =====\"", ")", "\n", "print", "(", "\"===== all done! =====\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.baidu_translate.BaiduTranslate.__init__": [[27, 34], ["random.randint"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "fromLang", ",", "toLang", ")", ":", "\n", "        ", "self", ".", "url", "=", "\"/api/trans/vip/translate\"", "\n", "self", ".", "appid", "=", "\"20200311000396156\"", "\n", "self", ".", "secretKey", "=", "\"s6c3ZeYTI9lhrwQVugnM\"", "\n", "self", ".", "fromLang", "=", "fromLang", "\n", "self", ".", "toLang", "=", "toLang", "\n", "self", ".", "salt", "=", "random", ".", "randint", "(", "32768", ",", "65536", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.baidu_translate.BaiduTranslate.trans": [[35, 53], ["hashlib.md5", "hashlib.md5.update", "hashlib.md5.hexdigest", "hashlib.md5.hexdigest.encode", "http.client.HTTPConnection", "http.client.HTTPConnection.request", "http.client.HTTPConnection.getresponse", "http.client.HTTPConnection.getresponse.read().decode", "json.loads", "str", "str", "http.client.HTTPConnection.getresponse.read", "urllib.parse.quote"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.encode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["", "def", "trans", "(", "self", ",", "text", ")", ":", "\n", "        ", "sign", "=", "self", ".", "appid", "+", "text", "+", "str", "(", "self", ".", "salt", ")", "+", "self", ".", "secretKey", "\n", "md", "=", "hashlib", ".", "md5", "(", ")", "\n", "md", ".", "update", "(", "sign", ".", "encode", "(", "encoding", "=", "\"utf-8\"", ")", ")", "\n", "sign", "=", "md", ".", "hexdigest", "(", ")", "\n", "myurl", "=", "(", "self", ".", "url", "+", "\"?appid=\"", "+", "self", ".", "appid", "+", "\"&q=\"", "+", "parse", ".", "quote", "(", "text", ")", "+", "\n", "\"&from=\"", "+", "self", ".", "fromLang", "+", "\"&to=\"", "+", "self", ".", "toLang", "+", "\"&salt=\"", "+", "\n", "str", "(", "self", ".", "salt", ")", "+", "\"&sign=\"", "+", "sign", ")", "\n", "try", ":", "\n", "            ", "httpClient", "=", "http", ".", "client", ".", "HTTPConnection", "(", "\"api.fanyi.baidu.com\"", ")", "\n", "httpClient", ".", "request", "(", "\"GET\"", ",", "myurl", ")", "\n", "response", "=", "httpClient", ".", "getresponse", "(", ")", "\n", "html", "=", "response", ".", "read", "(", ")", ".", "decode", "(", "\"utf-8\"", ")", "\n", "html", "=", "json", ".", "loads", "(", "html", ")", "\n", "dst", "=", "html", "[", "\"trans_result\"", "]", "[", "0", "]", "[", "\"dst\"", "]", "\n", "return", "True", ",", "dst", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "return", "False", ",", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.baidu_translate.read_ts": [[55, 59], ["open().read", "bs4.BeautifulSoup", "open"], "function", ["None"], ["", "", "", "def", "read_ts", "(", "ts_path", ")", ":", "\n", "    ", "xml", "=", "open", "(", "ts_path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", ".", "read", "(", ")", "\n", "xml", "=", "bs", "(", "xml", ",", "\"xml\"", ")", "\n", "return", "xml", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2coco.MyEncoder.default": [[38, 47], ["isinstance", "int", "isinstance", "float", "isinstance", "val.tolist", "super().default"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2coco.MyEncoder.default"], ["    ", "def", "default", "(", "self", ",", "val", ")", ":", "\n", "        ", "if", "isinstance", "(", "val", ",", "np", ".", "integer", ")", ":", "\n", "            ", "return", "int", "(", "val", ")", "\n", "", "elif", "isinstance", "(", "val", ",", "np", ".", "floating", ")", ":", "\n", "            ", "return", "float", "(", "val", ")", "\n", "", "elif", "isinstance", "(", "val", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "return", "val", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "super", "(", "MyEncoder", ",", "self", ")", ".", "default", "(", "val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2coco.save_coco_annotation": [[49, 99], ["print", "open", "json.load", "pathlib.Path", "data_coco[].append", "data_coco[].append", "imgs_info_indexed_by_img_name.get"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "", "", "def", "save_coco_annotation", "(", "dataset", ",", "coco_annotation_path", ")", ":", "\n", "    ", "data_coco", "=", "{", "\"images\"", ":", "[", "]", ",", "\"annotations\"", ":", "[", "]", "}", "\n", "\n", "imgs_info_indexed_by_img_name", "=", "{", "}", "\n", "imgs_info_indexed_by_img_idx", "=", "{", "}", "\n", "\n", "print", "(", "\"Generating dataset from:\"", ",", "coco_annotation_path", ")", "\n", "with", "open", "(", "coco_annotation_path", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# fetch categroies, info and licenses fields", "\n", "data_coco", "[", "\"categories\"", "]", "=", "data", "[", "\"categories\"", "]", "\n", "data_coco", "[", "\"info\"", "]", "=", "data", "[", "\"info\"", "]", "\n", "data_coco", "[", "\"licenses\"", "]", "=", "data", "[", "\"licenses\"", "]", "\n", "\n", "# fetch images and annotations", "\n", "for", "img_info", "in", "data", "[", "\"images\"", "]", ":", "\n", "            ", "img_name", "=", "img_info", "[", "\"file_name\"", "]", "\n", "if", "imgs_info_indexed_by_img_name", ".", "get", "(", "img_name", ",", "None", ")", "is", "None", ":", "\n", "                ", "imgs_info_indexed_by_img_name", "[", "img_name", "]", "=", "{", "}", "\n", "", "imgs_info_indexed_by_img_name", "[", "img_name", "]", "[", "\"img_info\"", "]", "=", "img_info", "\n", "imgs_info_indexed_by_img_idx", "[", "img_info", "[", "\"id\"", "]", "]", "=", "img_info", "\n", "\n", "", "for", "annotation", "in", "data", "[", "\"annotations\"", "]", ":", "\n", "            ", "img_idx", "=", "annotation", "[", "\"image_id\"", "]", "\n", "img_info", "=", "imgs_info_indexed_by_img_idx", "[", "img_idx", "]", "\n", "img_name", "=", "img_info", "[", "\"file_name\"", "]", "\n", "# annotation polygon", "\n", "epsilon", "=", "1e-5", "\n", "if", "\"iscrowd\"", "not", "in", "annotation", ":", "\n", "                ", "annotation", "[", "\"iscrowd\"", "]", "=", "0", "\n", "", "if", "annotation", "[", "\"area\"", "]", "<", "epsilon", ":", "\n", "                ", "annotation", "[", "\"area\"", "]", "=", "annotation", "[", "\"bbox\"", "]", "[", "2", "]", "*", "annotation", "[", "\"bbox\"", "]", "[", "\n", "3", "]", "\n", "", "if", "useQtBottomLeft", ":", "\n", "                ", "annotation", "[", "\"bbox\"", "]", "[", "1", "]", "=", "annotation", "[", "\"bbox\"", "]", "[", "1", "]", "-", "annotation", "[", "\n", "\"bbox\"", "]", "[", "3", "]", "\n", "\n", "", "imgs_info_indexed_by_img_name", "[", "img_name", "]", "[", "\n", "\"img_annotation\"", "]", "=", "annotation", "\n", "\n", "", "", "for", "img_path", "in", "dataset", ":", "\n", "        ", "img_file", "=", "Path", "(", "img_path", ")", "\n", "img_name", "=", "img_file", ".", "name", "\n", "img_info_with_annotation", "=", "imgs_info_indexed_by_img_name", "[", "img_name", "]", "\n", "data_coco", "[", "\"images\"", "]", ".", "append", "(", "img_info_with_annotation", "[", "\"img_info\"", "]", ")", "\n", "data_coco", "[", "\"annotations\"", "]", ".", "append", "(", "img_info_with_annotation", "[", "\n", "\"img_annotation\"", "]", ")", "\n", "\n", "", "return", "data_coco", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2coco.main": [[103, 163], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "setattr", "list", "sorted", "setattr", "os.path.join", "os.path.join", "os.path.join", "sklearn.model_selection.train_test_split", "eiseg2coco.save_coco_annotation", "os.path.join", "json.dump", "eiseg2coco.save_coco_annotation", "os.path.join", "json.dump", "glob.iglob", "os.path.exists", "os.makedirs", "os.makedirs", "os.makedirs", "shutil.copyfile", "shutil.copyfile", "open", "open", "print", "os.path.join", "pathlib.Path", "os.path.join", "pathlib.Path", "os.path.join", "[].split", "os.path.split"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2coco.save_coco_annotation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.eiseg2coco.save_coco_annotation"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--dataset_type\"", ",", "\n", "default", "=", "\"eiseg\"", ",", "\n", "help", "=", "\"type type of dataset is supported is EISeg\"", ",", ")", "\n", "parser", ".", "add_argument", "(", "\"--json_input_dir\"", ",", "help", "=", "\"input annotation directory\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--image_input_dir\"", ",", "help", "=", "\"image directory\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--output_dir\"", ",", "help", "=", "\"output dataset directory\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "try", ":", "\n", "        ", "assert", "args", ".", "dataset_type", "in", "[", "\"coco\"", ",", "\"eiseg\"", ",", "\"labelme\"", "]", "\n", "", "except", "AssertionError", "as", "e", ":", "\n", "        ", "print", "(", "\"Only coco and EISeg dataset is supported for the moment!\"", ")", "\n", "return", "-", "1", "\n", "\n", "", "coco_annotation_dir", "=", "args", ".", "json_input_dir", "\n", "coco_annotation_file", "=", "os", ".", "path", ".", "join", "(", "coco_annotation_dir", ",", "\"annotations.json\"", ")", "\n", "\n", "setattr", "(", "settings", ",", "\"DATA_DIR\"", ",", "args", ".", "image_input_dir", ")", "\n", "raw_images", "=", "list", "(", "glob", ".", "iglob", "(", "os", ".", "path", ".", "join", "(", "settings", ".", "DATA_DIR", ",", "\"*.jpg\"", ")", ")", ")", "\n", "raw_images", "=", "sorted", "(", "\n", "raw_images", ",", "key", "=", "lambda", "x", ":", "os", ".", "path", ".", "split", "(", "x", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", ")", "\n", "\n", "assert", "settings", ".", "TRAIN_PROPORTION", ">", "0", "and", "settings", ".", "TRAIN_PROPORTION", "<", "1", "\n", "assert", "settings", ".", "TRAIN_PROPORTION", "+", "settings", ".", "VALIDATION_PROPORTION", "==", "1", "\n", "\n", "setattr", "(", "settings", ",", "\"coco_dataset_path\"", ",", "args", ".", "output_dir", ")", "\n", "train_path", "=", "os", ".", "path", ".", "join", "(", "settings", ".", "coco_dataset_path", ",", "\"train\"", ")", "\n", "val_path", "=", "os", ".", "path", ".", "join", "(", "settings", ".", "coco_dataset_path", ",", "\"val\"", ")", "\n", "annotation_path", "=", "os", ".", "path", ".", "join", "(", "settings", ".", "coco_dataset_path", ",", "\"annotations\"", ")", "\n", "# TODO: \u8def\u5f84\u90e8\u5206\u5b58\u5728", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "settings", ".", "coco_dataset_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "train_path", ")", "\n", "os", ".", "makedirs", "(", "val_path", ")", "\n", "os", ".", "makedirs", "(", "annotation_path", ")", "\n", "\n", "# Disk task : move images and annotation files to coco files hierarchy", "\n", "", "train_dataset", ",", "val_dataset", "=", "train_test_split", "(", "\n", "raw_images", ",", "train_size", "=", "settings", ".", "TRAIN_PROPORTION", ")", "\n", "\n", "for", "img_path", "in", "train_dataset", ":", "\n", "        ", "img_name", "=", "Path", "(", "img_path", ")", ".", "name", "# similar to boot api", "\n", "shutil", ".", "copyfile", "(", "img_path", ",", "os", ".", "path", ".", "join", "(", "train_path", ",", "img_name", ")", ")", "\n", "\n", "", "for", "img_path", "in", "val_dataset", ":", "\n", "        ", "img_name", "=", "Path", "(", "img_path", ")", ".", "name", "# similar to boot api", "\n", "shutil", ".", "copyfile", "(", "img_path", ",", "os", ".", "path", ".", "join", "(", "val_path", ",", "img_name", ")", ")", "\n", "\n", "# deal with coco annotation file", "\n", "", "data_coco_train", "=", "save_coco_annotation", "(", "train_dataset", ",", "coco_annotation_file", ")", "\n", "train_json_path", "=", "os", ".", "path", ".", "join", "(", "annotation_path", ",", "\"train.json\"", ")", "\n", "json", ".", "dump", "(", "\n", "data_coco_train", ",", "open", "(", "train_json_path", ",", "\"w\"", ")", ",", "indent", "=", "4", ",", "cls", "=", "MyEncoder", ")", "\n", "\n", "data_coco_val", "=", "save_coco_annotation", "(", "val_dataset", ",", "coco_annotation_file", ")", "\n", "val_json_path", "=", "os", ".", "path", ".", "join", "(", "annotation_path", ",", "\"val.json\"", ")", "\n", "json", ".", "dump", "(", "data_coco_val", ",", "open", "(", "val_json_path", ",", "\"w\"", ")", ",", "indent", "=", "4", ",", "cls", "=", "MyEncoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.semantic2instance._savePalette": [[24, 32], ["numpy.random.randint", "bin_colormap.astype.astype", "PIL.Image.fromarray", "Image.fromarray.putpalette", "Image.fromarray.save"], "function", ["None"], ["def", "_savePalette", "(", "label", ",", "save_path", ")", ":", "\n", "    ", "bin_colormap", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "255", ",", "(", "256", ",", "3", ")", ")", "# \u53ef\u89c6\u5316\u7684\u989c\u8272", "\n", "bin_colormap", "[", "0", ",", ":", "]", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "bin_colormap", "=", "bin_colormap", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "visualimg", "=", "Image", ".", "fromarray", "(", "label", ",", "\"P\"", ")", "\n", "palette", "=", "bin_colormap", "# long palette of 768 items", "\n", "visualimg", ".", "putpalette", "(", "palette", ")", "\n", "visualimg", ".", "save", "(", "save_path", ",", "format", "=", "'PNG'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.semantic2instance._segMaskB2I": [[34, 61], ["numpy.asarray", "numpy.zeros_like", "cv2.findContours", "range", "sorted", "areas.keys", "semantic2instance._savePalette", "PIL.Image.open", "cv2.__version__.split", "len", "cv2.contourArea", "areas.items", "cv2.fillPoly", "cv2.fillPoly"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.semantic2instance._savePalette"], ["", "def", "_segMaskB2I", "(", "mask_path", ",", "save_path", ")", ":", "\n", "    ", "img", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "mask_path", ")", ")", "\n", "mask", "=", "np", ".", "zeros_like", "(", "img", ")", "\n", "results", "=", "cv2", ".", "findContours", "(", "img", ",", "cv2", ".", "RETR_CCOMP", ",", "cv2", ".", "CHAIN_APPROX_NONE", ")", "\n", "cv2_v", "=", "cv2", ".", "__version__", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "contours", "=", "results", "[", "1", "]", "if", "cv2_v", "==", "\"3\"", "else", "results", "[", "0", "]", "# \u8fb9\u754c", "\n", "hierarchys", "=", "results", "[", "2", "]", "if", "cv2_v", "==", "\"3\"", "else", "results", "[", "1", "]", "# \u96b6\u5c5e\u4fe1\u606f", "\n", "areas", "=", "{", "}", "# \u9762\u79ef", "\n", "for", "i", "in", "range", "(", "len", "(", "contours", ")", ")", ":", "\n", "        ", "areas", "[", "i", "]", "=", "cv2", ".", "contourArea", "(", "contours", "[", "i", "]", ")", "\n", "", "sorted", "(", "areas", ".", "items", "(", ")", ",", "key", "=", "lambda", "kv", ":", "(", "kv", "[", "1", "]", ",", "kv", "[", "0", "]", ")", ",", "reverse", "=", "True", ")", "# \u9762\u79ef\u5347\u5e8f", "\n", "# \u5f00\u59cb\u586b\u5145", "\n", "color", "=", "1", "\n", "for", "idx", "in", "areas", ".", "keys", "(", ")", ":", "\n", "        ", "contour", "=", "contours", "[", "idx", "]", "\n", "hierarchy", "=", "hierarchys", "[", "0", "]", "[", "idx", "]", "\n", "# print(hierarchy)", "\n", "if", "hierarchy", "[", "-", "1", "]", "==", "-", "1", ":", "# \u8f93\u5165\u5b50\u8f6e\u5ed3", "\n", "            ", "cv2", ".", "fillPoly", "(", "mask", ",", "[", "contour", "]", ",", "color", ")", "\n", "color", "+=", "1", "\n", "", "else", ":", "\n", "            ", "cv2", ".", "fillPoly", "(", "mask", ",", "[", "contour", "]", ",", "0", ")", "\n", "# \u663e\u793a", "\n", "# cv2.drawContours(mask, contours, -1, (125,125,125), 1)", "\n", "# cv2.imshow('src',mask)", "\n", "# cv2.waitKey()", "\n", "", "", "_savePalette", "(", "mask", ",", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.__init__": [[13, 20], ["random.randint"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "fromLang", ",", "toLang", ")", ":", "\n", "        ", "self", ".", "url", "=", "\"/api/trans/vip/translate\"", "\n", "self", ".", "appid", "=", "\"20200311000396156\"", "\n", "self", ".", "secretKey", "=", "\"s6c3ZeYTI9lhrwQVugnM\"", "\n", "self", ".", "fromLang", "=", "fromLang", "\n", "self", ".", "toLang", "=", "toLang", "\n", "self", ".", "salt", "=", "random", ".", "randint", "(", "32768", ",", "65536", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.BaiduTranslate.BdTrans": [[21, 43], ["hashlib.md5", "hashlib.md5.update", "hashlib.md5.hexdigest", "hashlib.md5.hexdigest.encode", "http.client.HTTPConnection", "http.client.HTTPConnection.request", "http.client.HTTPConnection.getresponse", "http.client.HTTPConnection.getresponse.read().decode", "json.loads", "str", "str", "http.client.HTTPConnection.getresponse.read", "urllib.parse.quote"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.widget.bbox.BBoxAnnotation.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.encode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.mask.decode"], ["", "def", "BdTrans", "(", "self", ",", "text", ")", ":", "\n", "        ", "sign", "=", "self", ".", "appid", "+", "text", "+", "str", "(", "self", ".", "salt", ")", "+", "self", ".", "secretKey", "\n", "md", "=", "hashlib", ".", "md5", "(", ")", "\n", "md", ".", "update", "(", "sign", ".", "encode", "(", "encoding", "=", "\"utf-8\"", ")", ")", "\n", "sign", "=", "md", ".", "hexdigest", "(", ")", "\n", "myurl", "=", "self", ".", "url", "+", "\"?appid=\"", "+", "self", ".", "appid", "+", "\"&q=\"", "+", "parse", ".", "quote", "(", "text", ")", "+", "\"&from=\"", "+", "self", ".", "fromLang", "+", "\"&to=\"", "+", "self", ".", "toLang", "+", "\"&salt=\"", "+", "str", "(", "self", ".", "salt", ")", "+", "\"&sign=\"", "+", "sign", "\n", "try", ":", "\n", "            ", "httpClient", "=", "http", ".", "client", ".", "HTTPConnection", "(", "\"api.fanyi.baidu.com\"", ")", "\n", "httpClient", ".", "request", "(", "\"GET\"", ",", "myurl", ")", "\n", "response", "=", "httpClient", ".", "getresponse", "(", ")", "\n", "html", "=", "response", ".", "read", "(", ")", ".", "decode", "(", "\"utf-8\"", ")", "\n", "html", "=", "json", ".", "loads", "(", "html", ")", "\n", "dst", "=", "html", "[", "\"trans_result\"", "]", "[", "0", "]", "[", "\"dst\"", "]", "\n", "return", "True", ",", "dst", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "return", "False", ",", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tool.translateUI.firstCharUpper": [[83, 85], ["s[].upper"], "function", ["None"], ["", "", "def", "firstCharUpper", "(", "s", ")", ":", "\n", "    ", "return", "s", "[", ":", "1", "]", ".", "upper", "(", ")", "+", "s", "[", "1", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tests.analyze_infer_models_log.parse_args": [[11, 21], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Analyze logs'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--log_path\"", ",", "help", "=", "\"The path of log file.\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--save_path\"", ",", "\n", "help", "=", "\"The path of log file.\"", ",", "\n", "default", "=", "\"info.txt\"", ",", "\n", "type", "=", "str", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tests.analyze_infer_models_log.analyze": [[23, 73], ["open().readlines", "re.compile", "re.compile", "re.compile", "range", "range", "len", "re.search", "len", "re.search", "re.search.group", "open", "model_line_num.append", "re.search.group", "len", "re.search.group", "re.search", "re.search", "len", "float", "float", "re.search.group", "re.search.group"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "analyze", "(", "log_path", ")", ":", "\n", "    ", "results", "=", "{", "}", "\n", "logs", "=", "open", "(", "log_path", ")", ".", "readlines", "(", ")", "\n", "\n", "model_pattern", "=", "re", ".", "compile", "(", "r\"Test (.*) (.*) (fp\\d+)\"", ")", "\n", "miou_pattern", "=", "re", ".", "compile", "(", "r\"mIoU: (0.\\d+)\"", ")", "\n", "time_pattern", "=", "re", ".", "compile", "(", "r\"Average time: (0.\\d+)\"", ")", "\n", "\n", "# collect the start num for each test", "\n", "model_line_num", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "logs", ")", ")", ":", "\n", "        ", "match_obj", "=", "re", ".", "search", "(", "model_pattern", ",", "logs", "[", "i", "]", ")", "\n", "if", "match_obj", "is", "not", "None", ":", "\n", "            ", "model_line_num", ".", "append", "(", "i", ")", "\n", "\n", "# collect the useful information for each test", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "model_line_num", ")", ")", ":", "\n", "        ", "start_num", "=", "model_line_num", "[", "i", "]", "\n", "end_num", "=", "len", "(", "logs", ")", "-", "1", "if", "i", "==", "len", "(", "\n", "model_line_num", ")", "-", "1", "else", "model_line_num", "[", "i", "+", "1", "]", "-", "1", "\n", "\n", "match_obj", "=", "re", ".", "search", "(", "model_pattern", ",", "logs", "[", "start_num", "]", ")", "\n", "assert", "match_obj", "is", "not", "None", "\n", "model_name", "=", "match_obj", ".", "group", "(", "1", ")", "\n", "info_name", "=", "match_obj", ".", "group", "(", "2", ")", "+", "\"_\"", "+", "match_obj", ".", "group", "(", "3", ")", "\n", "miou_value", "=", "None", "\n", "time_value", "=", "None", "\n", "\n", "cur_num", "=", "end_num", "\n", "while", "cur_num", ">=", "start_num", "and", "(", "miou_value", "is", "None", "or", "\n", "time_value", "is", "None", ")", ":", "\n", "            ", "line", "=", "logs", "[", "cur_num", "]", "\n", "cur_num", "-=", "1", "\n", "if", "miou_value", "is", "None", ":", "\n", "                ", "match_obj", "=", "re", ".", "search", "(", "miou_pattern", ",", "line", ")", "\n", "if", "match_obj", "is", "not", "None", ":", "\n", "                    ", "miou_value", "=", "float", "(", "match_obj", ".", "group", "(", "1", ")", ")", "\n", "", "", "if", "time_value", "is", "None", ":", "\n", "                ", "match_obj", "=", "re", ".", "search", "(", "time_pattern", ",", "line", ")", "\n", "if", "match_obj", "is", "not", "None", ":", "\n", "                    ", "time_value", "=", "float", "(", "match_obj", ".", "group", "(", "1", ")", ")", "\n", "\n", "", "", "", "if", "model_name", "not", "in", "results", ":", "\n", "            ", "results", "[", "model_name", "]", "=", "{", "}", "\n", "", "results", "[", "model_name", "]", "[", "info_name", "]", "=", "{", "\n", "'miou'", ":", "miou_value", ",", "\n", "'time'", ":", "time_value", "\n", "}", "\n", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.tests.analyze_infer_models_log.save_info": [[75, 99], ["open", "open.write", "open.write", "list", "list.sort", "open.close", "results.keys", "open.write", "round", "round", "analyze_infer_models_log.save_info.write_helper"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.manager.ComponentManager.keys"], ["", "def", "save_info", "(", "results", ",", "save_path", ")", ":", "\n", "    ", "of", "=", "open", "(", "save_path", ",", "'w'", ")", "\n", "of", ".", "write", "(", "\"| \u6a21\u578b | \u4f7f\u7528TRT | \u6570\u503c\u7c7b\u578b | mIoU(%) | \u8017\u65f6(ms/img) | FPS |\\n\"", ")", "\n", "of", ".", "write", "(", "\"|  -  |   :-:   |   :-:  |  :-: |    :-:      |  :-:|\\n\"", ")", "\n", "model_names", "=", "list", "(", "results", ".", "keys", "(", ")", ")", "\n", "model_names", ".", "sort", "(", ")", "\n", "\n", "def", "write_helper", "(", "model_name", ",", "use_trt", ",", "dtype", ",", "info", ")", ":", "\n", "        ", "miou", "=", "\"-\"", "if", "info", "[", "\"miou\"", "]", "is", "None", "else", "round", "(", "100", "*", "info", "[", "\"miou\"", "]", ",", "2", ")", "\n", "time", "=", "\"-\"", "if", "info", "[", "\"time\"", "]", "is", "None", "else", "1000", "*", "info", "[", "\"time\"", "]", "\n", "fps", "=", "\"-\"", "if", "info", "[", "\"time\"", "]", "is", "None", "else", "round", "(", "1.0", "/", "info", "[", "\"time\"", "]", ",", "2", ")", "\n", "of", ".", "write", "(", "\"| {:<60} | {} | {} | {:<6} | {:<6} | {:<6} | \\n\"", ".", "format", "(", "\n", "model_name", ",", "use_trt", ",", "dtype", ",", "miou", ",", "time", ",", "fps", ")", ")", "\n", "\n", "", "for", "model_name", "in", "model_names", ":", "\n", "        ", "info", "=", "results", "[", "model_name", "]", "\n", "if", "\"Naive_fp32\"", "in", "info", ":", "\n", "            ", "write_helper", "(", "model_name", ",", "\"N\"", ",", "\"FP32\"", ",", "info", "[", "\"Naive_fp32\"", "]", ")", "\n", "", "if", "\"TRT_fp32\"", "in", "info", ":", "\n", "            ", "write_helper", "(", "model_name", ",", "\"Y\"", ",", "\"FP32\"", ",", "info", "[", "\"TRT_fp32\"", "]", ")", "\n", "", "if", "\"TRT_fp16\"", "in", "info", ":", "\n", "            ", "write_helper", "(", "model_name", ",", "\"Y\"", ",", "\"FP16\"", ",", "info", "[", "\"TRT_fp16\"", "]", ")", "\n", "\n", "", "", "of", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_train.parse_args": [[38, 121], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of pretrained model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_train.skip_quant": [[123, 137], ["paddleseg.utils.logger.info", "model.named_sublayers", "hasattr", "paddleseg.utils.logger.info", "isinstance"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["", "def", "skip_quant", "(", "model", ")", ":", "\n", "    ", "\"\"\"\n    If the model has backbone and head, we skip quantizing the conv2d and linear ops\n    that belongs the head.\n    \"\"\"", "\n", "if", "not", "hasattr", "(", "model", ",", "'backbone'", ")", ":", "\n", "        ", "logger", ".", "info", "(", "\"Quantize all target ops\"", ")", "\n", "return", "\n", "\n", "", "logger", ".", "info", "(", "\"Quantize all target ops in backbone\"", ")", "\n", "for", "name", ",", "cur_layer", "in", "model", ".", "named_sublayers", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "cur_layer", ",", "(", "paddle", ".", "nn", ".", "Conv2D", ",", "paddle", ".", "nn", ".", "Linear", ")", ")", "and", "\"backbone\"", "not", "in", "name", ":", "\n", "            ", "cur_layer", ".", "skip_quant", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_train.main": [[139, 208], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "qat_train.skip_quant", "paddleslim.QAT", "paddleslim.QAT.quantize", "paddleseg.utils.logger.info", "paddleseg.core.train", "paddle.seed", "numpy.random.seed", "random.seed", "RuntimeError", "RuntimeError", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "paddleseg.utils.get_sys_env.items", "len", "ValueError", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_train.skip_quant", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["", "", "", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "train_dataset", "=", "cfg", ".", "train_dataset", "\n", "if", "train_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "", "elif", "len", "(", "train_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of train_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "", "val_dataset", "=", "cfg", ".", "val_dataset", "if", "args", ".", "do_eval", "else", "None", "\n", "losses", "=", "cfg", ".", "loss", "\n", "\n", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "config_check", "(", "cfg", ",", "train_dataset", "=", "train_dataset", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "utils", ".", "load_entire_model", "(", "model", ",", "args", ".", "model_path", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully'", ")", "\n", "\n", "", "skip_quant", "(", "model", ")", "\n", "quantizer", "=", "QAT", "(", "config", "=", "quant_config", ")", "\n", "quantizer", ".", "quantize", "(", "model", ")", "\n", "logger", ".", "info", "(", "'Quantize the model successfully'", ")", "\n", "\n", "train", "(", "\n", "model", ",", "\n", "train_dataset", ",", "\n", "val_dataset", "=", "val_dataset", ",", "\n", "optimizer", "=", "cfg", ".", "optimizer", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "iters", "=", "cfg", ".", "iters", ",", "\n", "batch_size", "=", "cfg", ".", "batch_size", ",", "\n", "resume_model", "=", "None", ",", "\n", "save_interval", "=", "args", ".", "save_interval", ",", "\n", "log_iters", "=", "args", ".", "log_iters", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "use_vdl", "=", "args", ".", "use_vdl", ",", "\n", "losses", "=", "losses", ",", "\n", "keep_checkpoint_max", "=", "args", ".", "keep_checkpoint_max", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.get_test_config": [[33, 52], ["None"], "function", ["None"], ["def", "get_test_config", "(", "cfg", ",", "args", ")", ":", "\n", "\n", "    ", "test_config", "=", "cfg", ".", "test_config", "\n", "if", "args", ".", "aug_eval", ":", "\n", "        ", "test_config", "[", "'aug_eval'", "]", "=", "args", ".", "aug_eval", "\n", "test_config", "[", "'scales'", "]", "=", "args", ".", "scales", "\n", "\n", "", "if", "args", ".", "flip_horizontal", ":", "\n", "        ", "test_config", "[", "'flip_horizontal'", "]", "=", "args", ".", "flip_horizontal", "\n", "\n", "", "if", "args", ".", "flip_vertical", ":", "\n", "        ", "test_config", "[", "'flip_vertical'", "]", "=", "args", ".", "flip_vertical", "\n", "\n", "", "if", "args", ".", "is_slide", ":", "\n", "        ", "test_config", "[", "'is_slide'", "]", "=", "args", ".", "is_slide", "\n", "test_config", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "test_config", "[", "'stride'", "]", "=", "args", ".", "stride", "\n", "\n", "", "return", "test_config", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.parse_args": [[54, 125], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model evaluation'", ")", "\n", "\n", "# params of evaluate", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "# augment for evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--aug_eval'", ",", "\n", "dest", "=", "'aug_eval'", ",", "\n", "help", "=", "'Whether to use mulit-scales and flip augment for evaluation'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--scales'", ",", "\n", "dest", "=", "'scales'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Scales for augment'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_horizontal'", ",", "\n", "dest", "=", "'flip_horizontal'", ",", "\n", "help", "=", "'Whether to use flip horizontally augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--flip_vertical'", ",", "\n", "dest", "=", "'flip_vertical'", ",", "\n", "help", "=", "'Whether to use flip vertically augment'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "# sliding window evaluation", "\n", "parser", ".", "add_argument", "(", "\n", "'--is_slide'", ",", "\n", "dest", "=", "'is_slide'", ",", "\n", "help", "=", "'Whether to evaluate by sliding window'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop_size'", ",", "\n", "dest", "=", "'crop_size'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The crop size of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--stride'", ",", "\n", "dest", "=", "'stride'", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "'The stride of sliding window, the first is width and the second is height.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--data_format'", ",", "\n", "dest", "=", "'data_format'", ",", "\n", "help", "=", "'Data format that specifies the layout of input. It can be \"NCHW\" or \"NHWC\". Default: \"NCHW\".'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'NCHW'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.main": [[127, 178], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "qat_train.skip_quant", "paddleslim.QAT", "paddleslim.QAT.quantize", "paddleseg.utils.logger.info", "qat_val.get_test_config", "paddleseg.utils.config_check", "paddleseg.core.evaluate", "RuntimeError", "len", "range", "RuntimeError", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "ValueError", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_train.skip_quant", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_val.get_test_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "if", "not", "args", ".", "cfg", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "# Only support for the DeepLabv3+ model", "\n", "if", "args", ".", "data_format", "==", "'NHWC'", ":", "\n", "        ", "if", "cfg", ".", "dic", "[", "'model'", "]", "[", "'type'", "]", "!=", "'DeepLabV3P'", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The \"NHWC\" data format only support the DeepLabV3P model!'", ")", "\n", "", "cfg", ".", "dic", "[", "'model'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "cfg", ".", "dic", "[", "'model'", "]", "[", "'backbone'", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "loss_len", "=", "len", "(", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", ")", "\n", "for", "i", "in", "range", "(", "loss_len", ")", ":", "\n", "            ", "cfg", ".", "dic", "[", "'loss'", "]", "[", "'types'", "]", "[", "i", "]", "[", "'data_format'", "]", "=", "args", ".", "data_format", "\n", "\n", "", "", "val_dataset", "=", "cfg", ".", "val_dataset", "\n", "if", "val_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The verification dataset is not specified in the configuration file.'", "\n", ")", "\n", "", "elif", "len", "(", "val_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of val_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "\n", "", "msg", "=", "'\\n---------------Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "model", "=", "cfg", ".", "model", "\n", "\n", "skip_quant", "(", "model", ")", "\n", "quantizer", "=", "QAT", "(", "config", "=", "quant_config", ")", "\n", "quantizer", ".", "quantize", "(", "model", ")", "\n", "logger", ".", "info", "(", "'Quantize the model successfully'", ")", "\n", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "utils", ".", "load_entire_model", "(", "model", ",", "args", ".", "model_path", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully'", ")", "\n", "\n", "", "test_config", "=", "get_test_config", "(", "cfg", ",", "args", ")", "\n", "config_check", "(", "cfg", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "evaluate", "(", "model", ",", "val_dataset", ",", "num_workers", "=", "args", ".", "num_workers", ",", "**", "test_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_export.parse_args": [[34, 67], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model export.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "\n", "dest", "=", "\"cfg\"", ",", "\n", "help", "=", "\"The config file.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the exported model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for export'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--without_argmax'", ",", "\n", "dest", "=", "'without_argmax'", ",", "\n", "help", "=", "'Do not add the argmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--with_softmax'", ",", "\n", "dest", "=", "'with_softmax'", ",", "\n", "help", "=", "'Add the softmax operation at the end of the network'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_export.main": [[69, 112], ["paddleseg.cvlibs.Config", "qat_train.skip_quant", "paddleslim.QAT", "paddleslim.QAT.quantize", "paddleseg.utils.logger.info", "export.SavedSegmentationNet.eval", "os.path.join", "paddleslim.QAT.save_quantized_model", "os.path.join", "paddleseg.utils.logger.info", "paddleseg.utils.utils.load_entire_model", "paddleseg.utils.logger.info", "export.SavedSegmentationNet", "paddle.static.InputSpec", "open", "paddleseg.cvlibs.Config.export_config.get", "yaml.dump"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.quant.qat_train.skip_quant", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.load_entire_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.get"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'PADDLESEG_EXPORT_STAGE'", "]", "=", "'True'", "\n", "cfg", "=", "Config", "(", "args", ".", "cfg", ")", "\n", "net", "=", "cfg", ".", "model", "\n", "\n", "skip_quant", "(", "net", ")", "\n", "quantizer", "=", "QAT", "(", "config", "=", "quant_config", ")", "\n", "quantizer", ".", "quantize", "(", "net", ")", "\n", "logger", ".", "info", "(", "'Quantize the model successfully'", ")", "\n", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "utils", ".", "load_entire_model", "(", "net", ",", "args", ".", "model_path", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully'", ")", "\n", "\n", "", "if", "not", "args", ".", "without_argmax", "or", "args", ".", "with_softmax", ":", "\n", "        ", "new_net", "=", "SavedSegmentationNet", "(", "net", ",", "args", ".", "without_argmax", ",", "\n", "args", ".", "with_softmax", ")", "\n", "", "else", ":", "\n", "        ", "new_net", "=", "net", "\n", "\n", "", "new_net", ".", "eval", "(", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "'model'", ")", "\n", "input_spec", "=", "[", "\n", "paddle", ".", "static", ".", "InputSpec", "(", "\n", "shape", "=", "[", "None", ",", "3", ",", "None", ",", "None", "]", ",", "dtype", "=", "'float32'", ")", "\n", "]", "\n", "quantizer", ".", "save_quantized_model", "(", "new_net", ",", "save_path", ",", "input_spec", "=", "input_spec", ")", "\n", "\n", "yml_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "'deploy.yaml'", ")", "\n", "with", "open", "(", "yml_file", ",", "'w'", ")", "as", "file", ":", "\n", "        ", "transforms", "=", "cfg", ".", "export_config", ".", "get", "(", "'transforms'", ",", "[", "{", "\n", "'type'", ":", "'Normalize'", "\n", "}", "]", ")", "\n", "data", "=", "{", "\n", "'Deploy'", ":", "{", "\n", "'transforms'", ":", "transforms", ",", "\n", "'model'", ":", "'model.pdmodel'", ",", "\n", "'params'", ":", "'model.pdiparams'", "\n", "}", "\n", "}", "\n", "yaml", ".", "dump", "(", "data", ",", "file", ")", "\n", "\n", "", "logger", ".", "info", "(", "f'Model is saved in {args.save_dir}.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.prune.prune.parse_args": [[31, 82], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model pruning'", ")", "\n", "# params of pruning", "\n", "parser", ".", "add_argument", "(", "\n", "\"--config\"", ",", "dest", "=", "\"cfg\"", ",", "help", "=", "\"The config file.\"", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--pruning_ratio\"", ",", "\n", "dest", "=", "\"pruning_ratio\"", ",", "\n", "help", "=", "\"The ratio of model pruning.\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--retraining_iters'", ",", "\n", "dest", "=", "'retraining_iters'", ",", "\n", "help", "=", "'Number of iterations of retraining.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--model_path'", ",", "\n", "dest", "=", "'model_path'", ",", "\n", "help", "=", "'The path of model for evaluation'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.prune.prune.eval_fn": [[84, 88], ["paddleseg.core.val.evaluate"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate"], ["", "def", "eval_fn", "(", "net", ",", "eval_dataset", ",", "num_workers", ")", ":", "\n", "    ", "miou", ",", "_", ",", "_", ",", "_", ",", "_", "=", "evaluate", "(", "\n", "net", ",", "eval_dataset", ",", "num_workers", "=", "num_workers", ",", "print_detail", "=", "False", ")", "\n", "return", "miou", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.prune.prune.export_model": [[90, 110], ["paddle.jit.to_static", "paddle.ones", "net", "os.path.join", "paddle.jit.save", "os.path.join", "list", "open", "yaml.dump"], "function", ["None"], ["", "def", "export_model", "(", "net", ",", "cfg", ",", "save_dir", ")", ":", "\n", "    ", "net", ".", "forward", "=", "paddle", ".", "jit", ".", "to_static", "(", "net", ".", "forward", ")", "\n", "input_shape", "=", "[", "1", "]", "+", "list", "(", "cfg", ".", "val_dataset", "[", "0", "]", "[", "0", "]", ".", "shape", ")", "\n", "input_var", "=", "paddle", ".", "ones", "(", "input_shape", ")", "\n", "out", "=", "net", "(", "input_var", ")", "\n", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'model'", ")", "\n", "paddle", ".", "jit", ".", "save", "(", "net", ",", "save_path", ",", "input_spec", "=", "[", "input_var", "]", ")", "\n", "\n", "yml_file", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'deploy.yaml'", ")", "\n", "with", "open", "(", "yml_file", ",", "'w'", ")", "as", "file", ":", "\n", "        ", "transforms", "=", "cfg", ".", "dic", "[", "'val_dataset'", "]", "[", "'transforms'", "]", "\n", "data", "=", "{", "\n", "'Deploy'", ":", "{", "\n", "'transforms'", ":", "transforms", ",", "\n", "'model'", ":", "'model.pdmodel'", ",", "\n", "'params'", ":", "'model.pdiparams'", "\n", "}", "\n", "}", "\n", "yaml", ".", "dump", "(", "data", ",", "file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.prune.prune.main": [[112, 200], ["paddleseg.utils.get_sys_env", "paddle.set_device", "paddleseg.cvlibs.config.Config", "paddleseg.utils.logger.info", "os.path.join", "paddleslim.dygraph.L1NormFilterPruner", "paddleslim.dygraph.L1NormFilterPruner.sensitive", "paddleseg.utils.logger.info", "paddleslim.analysis.dygraph_flops", "paddleseg.utils.logger.info", "net.parameters", "paddleslim.dygraph.L1NormFilterPruner.sensitive_prune", "paddleslim.analysis.dygraph_flops", "paddleseg.utils.logger.info", "paddleseg.utils.logger.info", "paddleseg.core.train.train", "paddleseg.core.val.evaluate", "paddleseg.utils.logger.info", "RuntimeError", "os.path.exists", "os.makedirs", "RuntimeError", "RuntimeError", "paddle.load", "net.set_dict", "paddleseg.utils.logger.info", "list", "paddle.distributed.get_rank", "prune.export_model", "os.path.join", "os.path.exists", "functools.partial", "skips.append", "shutil.rmtree"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.prune.prune.export_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "env_info", "=", "get_sys_env", "(", ")", "\n", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "\n", "if", "not", "(", "0.0", "<", "args", ".", "pruning_ratio", "<", "1.0", ")", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The model pruning rate must be in the range of (0, 1).'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "save_dir", ")", "\n", "\n", "", "cfg", "=", "Config", "(", "\n", "args", ".", "cfg", ",", "\n", "iters", "=", "args", ".", "retraining_iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ")", "\n", "\n", "train_dataset", "=", "cfg", ".", "train_dataset", "\n", "if", "not", "train_dataset", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "\n", "", "val_dataset", "=", "cfg", ".", "val_dataset", "\n", "if", "not", "val_dataset", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The validation dataset is not specified in the c;onfiguration file.'", "\n", ")", "\n", "", "os", ".", "environ", "[", "'PADDLESEG_EXPORT_STAGE'", "]", "=", "'True'", "\n", "net", "=", "cfg", ".", "model", "\n", "\n", "if", "args", ".", "model_path", ":", "\n", "        ", "para_state_dict", "=", "paddle", ".", "load", "(", "args", ".", "model_path", ")", "\n", "net", ".", "set_dict", "(", "para_state_dict", ")", "\n", "logger", ".", "info", "(", "'Loaded trained params of model successfully'", ")", "\n", "\n", "", "logger", ".", "info", "(", "\n", "'Step 1/3: Start calculating the sensitivity of model parameters...'", ")", "\n", "sample_shape", "=", "[", "1", "]", "+", "list", "(", "train_dataset", "[", "0", "]", "[", "0", "]", ".", "shape", ")", "\n", "sen_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "'sen.pickle'", ")", "\n", "pruner", "=", "L1NormFilterPruner", "(", "net", ",", "sample_shape", ")", "\n", "pruner", ".", "sensitive", "(", "\n", "eval_func", "=", "partial", "(", "eval_fn", ",", "net", ",", "val_dataset", ",", "args", ".", "num_workers", ")", ",", "\n", "sen_file", "=", "sen_file", ")", "\n", "logger", ".", "info", "(", "\n", "f'The sensitivity calculation of model parameters is complete. The result is saved in {sen_file}.'", "\n", ")", "\n", "\n", "flops", "=", "dygraph_flops", "(", "net", ",", "sample_shape", ")", "\n", "logger", ".", "info", "(", "\n", "f'Step 2/3: Start to prune the model, the ratio of pruning is {args.pruning_ratio}. FLOPs before pruning: {flops}.'", "\n", ")", "\n", "\n", "# Avoid the bug when pruning conv2d with small channel number.", "\n", "# Remove this code after PaddleSlim 2.1 is available.", "\n", "# Related issue: https://github.com/PaddlePaddle/PaddleSlim/issues/674.", "\n", "skips", "=", "[", "]", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "if", "param", ".", "shape", "[", "0", "]", "<=", "8", ":", "\n", "            ", "skips", ".", "append", "(", "param", ".", "name", ")", "\n", "\n", "", "", "pruner", ".", "sensitive_prune", "(", "args", ".", "pruning_ratio", ",", "skip_vars", "=", "skips", ")", "\n", "flops", "=", "dygraph_flops", "(", "net", ",", "sample_shape", ")", "\n", "logger", ".", "info", "(", "f'Model pruning completed. FLOPs after pruning: {flops}.'", ")", "\n", "\n", "logger", ".", "info", "(", "f'Step 3/3: Start retraining the model.'", ")", "\n", "train", "(", "\n", "net", ",", "\n", "train_dataset", ",", "\n", "optimizer", "=", "cfg", ".", "optimizer", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "iters", "=", "cfg", ".", "iters", ",", "\n", "batch_size", "=", "cfg", ".", "batch_size", ",", "\n", "losses", "=", "cfg", ".", "loss", ")", "\n", "\n", "evaluate", "(", "net", ",", "val_dataset", ")", "\n", "\n", "if", "paddle", ".", "distributed", ".", "get_rank", "(", ")", "==", "0", ":", "\n", "        ", "export_model", "(", "net", ",", "cfg", ",", "args", ".", "save_dir", ")", "\n", "\n", "ckpt", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "f'iter_{args.retraining_iters}'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "ckpt", ")", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "ckpt", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "f'Model retraining finish. Model is saved in {args.save_dir}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_config.prepare_distill_adaptor": [[18, 43], ["None"], "function", ["None"], ["def", "prepare_distill_adaptor", "(", ")", ":", "\n", "    ", "\"\"\"\n    Prepare the distill adaptors for student and teacher model.\n    The adaptors set the intermediate feature tensors that used for distillation.\n    \"\"\"", "\n", "\n", "class", "StudentAdaptor", "(", "AdaptorBase", ")", ":", "\n", "        ", "def", "mapping_layers", "(", "self", ")", ":", "\n", "            ", "mapping_layers", "=", "{", "}", "\n", "# mapping_layers['hidden_0'] = 'layer_name'", "\n", "if", "self", ".", "add_tensor", ":", "\n", "# mapping_layers[\"hidden_0\"] = self.model.logit_list", "\n", "                ", "pass", "\n", "", "return", "mapping_layers", "\n", "\n", "", "", "class", "TeatherAdaptor", "(", "AdaptorBase", ")", ":", "\n", "        ", "def", "mapping_layers", "(", "self", ")", ":", "\n", "            ", "mapping_layers", "=", "{", "}", "\n", "# mapping_layers['hidden_0'] = 'layer_name'", "\n", "if", "self", ".", "add_tensor", ":", "\n", "# mapping_layers[\"hidden_0\"] = self.model.logit_list", "\n", "                ", "pass", "\n", "", "return", "mapping_layers", "\n", "\n", "", "", "return", "StudentAdaptor", ",", "TeatherAdaptor", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_config.prepare_distill_config": [[45, 60], ["None"], "function", ["None"], ["", "def", "prepare_distill_config", "(", ")", ":", "\n", "    ", "\"\"\"\n    Prepare the distill config.\n    \"\"\"", "\n", "'''\n    distill_config = [{\n        's_feature_idx': 0,\n        't_feature_idx': 0,\n        'feature_type': 'hidden',\n        'loss_function': 'SegChannelwiseLoss',\n        'weight': 1.0\n    }]\n    '''", "\n", "distill_config", "=", "{", "}", "\n", "return", "distill_config", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_train.parse_args": [[35, 121], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model training'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--student_config\"", ",", "\n", "help", "=", "\"The config file of the student model.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--teather_config\"", ",", "\n", "help", "=", "\"The config file of the teacher model. Distillation only uses \"", "\n", "\"the model in this config.\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--iters'", ",", "\n", "dest", "=", "'iters'", ",", "\n", "help", "=", "'iters for training'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--batch_size'", ",", "\n", "dest", "=", "'batch_size'", ",", "\n", "help", "=", "'Mini batch size of one gpu or cpu'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--learning_rate'", ",", "\n", "dest", "=", "'learning_rate'", ",", "\n", "help", "=", "'Learning rate'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_interval'", ",", "\n", "dest", "=", "'save_interval'", ",", "\n", "help", "=", "'How many iters to save a model snapshot once during training.'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--resume_model'", ",", "\n", "dest", "=", "'resume_model'", ",", "\n", "help", "=", "'The path of resume model for the student model'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_dir'", ",", "\n", "dest", "=", "'save_dir'", ",", "\n", "help", "=", "'The directory for saving the model snapshot'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'./output'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--keep_checkpoint_max'", ",", "\n", "dest", "=", "'keep_checkpoint_max'", ",", "\n", "help", "=", "'Maximum number of checkpoints to save'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num_workers'", ",", "\n", "dest", "=", "'num_workers'", ",", "\n", "help", "=", "'Num workers for data loader'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--do_eval'", ",", "\n", "dest", "=", "'do_eval'", ",", "\n", "help", "=", "'Eval while training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--log_iters'", ",", "\n", "dest", "=", "'log_iters'", ",", "\n", "help", "=", "'Display logging information at every log_iters'", ",", "\n", "default", "=", "10", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--use_vdl'", ",", "\n", "dest", "=", "'use_vdl'", ",", "\n", "help", "=", "'Whether to record the data to VisualDL during training'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--seed'", ",", "\n", "dest", "=", "'seed'", ",", "\n", "help", "=", "'Set the random seed during training.'", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "int", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_train.prepare_envs": [[123, 142], ["paddleseg.utils.get_sys_env", "paddleseg.utils.logger.info", "paddle.set_device", "paddle.seed", "numpy.random.seed", "random.seed", "paddleseg.utils.get_sys_env.items", "format"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.env_util.sys_env.get_sys_env", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info"], ["", "def", "prepare_envs", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Set random seed and the device.\n    \"\"\"", "\n", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "env_info", "=", "get_sys_env", "(", ")", "\n", "info", "=", "[", "'{}: {}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "env_info", ".", "items", "(", ")", "]", "\n", "info", "=", "'\\n'", ".", "join", "(", "[", "''", ",", "format", "(", "'Environment Information'", ",", "'-^48s'", ")", "]", "+", "info", "+", "\n", "[", "'-'", "*", "48", "]", ")", "\n", "logger", ".", "info", "(", "info", ")", "\n", "\n", "place", "=", "'gpu'", "if", "env_info", "[", "'Paddle compiled with cuda'", "]", "and", "env_info", "[", "\n", "'GPUs used'", "]", "else", "'cpu'", "\n", "\n", "paddle", ".", "set_device", "(", "place", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_train.prepare_config": [[144, 183], ["paddleseg.cvlibs.Config", "paddleseg.cvlibs.Config", "str", "paddleseg.utils.logger.info", "str", "paddleseg.utils.logger.info", "paddleseg.utils.config_check", "paddleseg.utils.config_check", "RuntimeError", "RuntimeError", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.config_check.config_check"], ["", "def", "prepare_config", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Create and check the config of student and teacher model.\n    Note: we only use the dataset generated by the student config.\n    \"\"\"", "\n", "if", "args", ".", "teather_config", "is", "None", "or", "args", ".", "student_config", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "'No configuration file specified.'", ")", "\n", "\n", "", "t_cfg", "=", "Config", "(", "args", ".", "teather_config", ")", "\n", "s_cfg", "=", "Config", "(", "\n", "args", ".", "student_config", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "iters", "=", "args", ".", "iters", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ")", "\n", "\n", "train_dataset", "=", "s_cfg", ".", "train_dataset", "\n", "val_dataset", "=", "s_cfg", ".", "val_dataset", "if", "args", ".", "do_eval", "else", "None", "\n", "if", "train_dataset", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The training dataset is not specified in the configuration file.'", ")", "\n", "", "elif", "len", "(", "train_dataset", ")", "==", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The length of train_dataset is 0. Please check if your dataset is valid'", "\n", ")", "\n", "\n", "", "msg", "=", "'\\n---------------Teacher Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "t_cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "msg", "=", "'\\n---------------Student Config Information---------------\\n'", "\n", "msg", "+=", "str", "(", "s_cfg", ")", "\n", "msg", "+=", "'------------------------------------------------'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "config_check", "(", "t_cfg", ",", "train_dataset", "=", "train_dataset", ",", "val_dataset", "=", "val_dataset", ")", "\n", "config_check", "(", "s_cfg", ",", "train_dataset", "=", "train_dataset", ",", "val_dataset", "=", "val_dataset", ")", "\n", "\n", "return", "t_cfg", ",", "s_cfg", ",", "train_dataset", ",", "val_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_train.main": [[185, 220], ["distill_train.prepare_envs", "distill_train.prepare_config", "distill_config.prepare_distill_config", "distill_config.prepare_distill_adaptor", "t_model.eval", "s_model.train", "paddleslim.dygraph.dist.Distill", "distill_utils.distill_train"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_train.prepare_envs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_train.prepare_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_config.prepare_distill_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_config.prepare_distill_adaptor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.distill_train"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "prepare_envs", "(", "args", ")", "\n", "\n", "t_cfg", ",", "s_cfg", ",", "train_dataset", ",", "val_dataset", "=", "prepare_config", "(", "args", ")", "\n", "\n", "distill_config", "=", "prepare_distill_config", "(", ")", "\n", "\n", "s_adaptor", ",", "t_adaptor", "=", "prepare_distill_adaptor", "(", ")", "\n", "\n", "t_model", "=", "t_cfg", ".", "model", "\n", "s_model", "=", "s_cfg", ".", "model", "\n", "t_model", ".", "eval", "(", ")", "\n", "s_model", ".", "train", "(", ")", "\n", "\n", "distill_model", "=", "Distill", "(", "distill_config", ",", "s_model", ",", "t_model", ",", "s_adaptor", ",", "\n", "t_adaptor", ")", "\n", "\n", "distill_train", "(", "\n", "distill_model", "=", "distill_model", ",", "\n", "train_dataset", "=", "train_dataset", ",", "\n", "val_dataset", "=", "val_dataset", ",", "\n", "optimizer", "=", "s_cfg", ".", "optimizer", ",", "\n", "save_dir", "=", "args", ".", "save_dir", ",", "\n", "iters", "=", "s_cfg", ".", "iters", ",", "\n", "batch_size", "=", "s_cfg", ".", "batch_size", ",", "\n", "resume_model", "=", "args", ".", "resume_model", ",", "\n", "save_interval", "=", "args", ".", "save_interval", ",", "\n", "log_iters", "=", "args", ".", "log_iters", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "use_vdl", "=", "args", ".", "use_vdl", ",", "\n", "losses", "=", "s_cfg", ".", "loss", ",", "\n", "distill_losses", "=", "s_cfg", ".", "distill_loss", ",", "\n", "keep_checkpoint_max", "=", "args", ".", "keep_checkpoint_max", ",", "\n", "test_config", "=", "s_cfg", ".", "test_config", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.check_logits_losses": [[29, 36], ["len", "len", "RuntimeError"], "function", ["None"], ["def", "check_logits_losses", "(", "logits_list", ",", "losses", ")", ":", "\n", "    ", "len_logits", "=", "len", "(", "logits_list", ")", "\n", "len_losses", "=", "len", "(", "losses", "[", "'types'", "]", ")", "\n", "if", "len_logits", "!=", "len_losses", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "'The length of logits_list should equal to the types of loss config: {} != {}.'", "\n", ".", "format", "(", "len_logits", ",", "len_losses", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.loss_computation": [[38, 54], ["distill_utils.check_logits_losses", "range", "len", "loss_list.append", "loss_list.append", "loss_list.append", "loss_i", "loss_i", "loss_i", "logits_list[].detach"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.check_logits_losses", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "", "def", "loss_computation", "(", "logits_list", ",", "labels", ",", "losses", ",", "edges", "=", "None", ")", ":", "\n", "    ", "check_logits_losses", "(", "logits_list", ",", "losses", ")", "\n", "loss_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "logits_list", ")", ")", ":", "\n", "        ", "logits", "=", "logits_list", "[", "i", "]", "\n", "loss_i", "=", "losses", "[", "'types'", "]", "[", "i", "]", "\n", "# Whether to use edges as labels According to loss type.", "\n", "if", "loss_i", ".", "__class__", ".", "__name__", "in", "(", "'BCELoss'", ",", "'FocalLoss'", "\n", ")", "and", "loss_i", ".", "edge_label", ":", "\n", "            ", "loss_list", ".", "append", "(", "losses", "[", "'coef'", "]", "[", "i", "]", "*", "loss_i", "(", "logits", ",", "edges", ")", ")", "\n", "", "elif", "loss_i", ".", "__class__", ".", "__name__", "in", "(", "\"KLLoss\"", ",", ")", ":", "\n", "            ", "loss_list", ".", "append", "(", "losses", "[", "'coef'", "]", "[", "i", "]", "*", "\n", "loss_i", "(", "logits_list", "[", "0", "]", ",", "logits_list", "[", "1", "]", ".", "detach", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "loss_list", ".", "append", "(", "losses", "[", "'coef'", "]", "[", "i", "]", "*", "loss_i", "(", "logits", ",", "labels", ")", ")", "\n", "", "", "return", "loss_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.distill_loss_computation": [[56, 71], ["distill_utils.check_logits_losses", "range", "len", "len", "len", "loss_list.append", "loss_i"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.check_logits_losses", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append"], ["", "def", "distill_loss_computation", "(", "student_logits_list", ",", "\n", "teacher_logits_list", ",", "\n", "labels", ",", "\n", "losses", ",", "\n", "edges", "=", "None", ")", ":", "\n", "    ", "assert", "len", "(", "student_logits_list", ")", "==", "len", "(", "teacher_logits_list", ")", "\n", "check_logits_losses", "(", "student_logits_list", ",", "losses", ")", "\n", "\n", "loss_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "student_logits_list", ")", ")", ":", "\n", "        ", "s_logits", "=", "student_logits_list", "[", "i", "]", "\n", "t_logits", "=", "teacher_logits_list", "[", "i", "]", "\n", "loss_i", "=", "losses", "[", "'types'", "]", "[", "i", "]", "\n", "loss_list", ".", "append", "(", "losses", "[", "'coef'", "]", "[", "i", "]", "*", "loss_i", "(", "s_logits", ",", "t_logits", ",", "labels", ")", ")", "\n", "", "return", "loss_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.distill_train": [[73, 365], ["paddle.io.DistributedBatchSampler", "paddle.io.DistributedBatchSampler", "paddle.io.DataLoader", "paddle.io.DataLoader", "len", "paddleseg.utils.TimeAverager", "paddleseg.utils.TimeAverager", "collections.deque", "time.time", "time.sleep", "RuntimeError", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "paddleseg.utils.resume", "os.path.isdir", "os.path.exists", "os.makedirs", "paddle.distributed.fleet.DistributedStrategy", "paddle.distributed.fleet.init", "paddle.distributed.fleet.distributed_optimizer", "paddle.distributed.fleet.distributed_model", "paddleseg.utils.logger.info", "paddle.amp.GradScaler", "paddle.amp.GradScaler", "LogWriter", "paddle.flops", "paddle.flops", "LogWriter.close", "os.remove", "paddleseg.utils.TimeAverager.record", "data[].astype", "fleet.distributed_optimizer.get_lr", "isinstance", "isinstance", "distill_model.clear_gradients", "paddleseg.utils.TimeAverager.record", "time.time", "x.numel", "int", "len", "data[].astype", "hasattr", "images.transpose.transpose", "paddle.amp.GradScaler.scale", "scaler.scale.backward", "isinstance", "distill_utils.loss_computation", "sum", "distill_utils.distill_loss_computation", "sum", "sum.backward", "fleet.distributed_optimizer.step", "lr_sche.step", "sum.numpy", "sum.numpy", "sum.numpy", "feature_distill_loss.numpy", "range", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.TimeAverager.get_average", "paddleseg.utils.calculate_eta", "paddleseg.utils.logger.info", "paddleseg.utils.TimeAverager.reset", "paddleseg.utils.TimeAverager.reset", "paddleseg.core.val.evaluate", "student_model.train", "os.path.join", "paddle.save", "paddle.save", "paddle.save", "paddle.save", "collections.deque.append", "time.time", "paddle.amp.auto_cast", "paddle.amp.auto_cast", "distill_utils.loss_computation", "sum", "paddle.amp.GradScaler.minimize", "paddle.amp.GradScaler.minimize", "fleet.distributed_model.", "distill_model", "l.numpy", "len", "out_loss_list[].numpy", "time.time", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "os.path.isdir", "os.makedirs", "student_model.state_dict", "os.path.join", "fleet.distributed_optimizer.state_dict", "os.path.join", "len", "collections.deque.popleft", "shutil.rmtree", "paddleseg.utils.logger.info", "fleet.distributed_model.", "distill_model", "paddleseg.utils.TimeAverager.get_ips_average", "len", "enumerate", "avg_loss_dict.items", "os.path.join", "paddle.save", "paddle.save", "LogWriter.add_scalar", "LogWriter.add_scalar", "LogWriter.add_scalar", "student_model.state_dict", "os.path.join", "str"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.resume", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.preprocess_utils.global_var.init", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.label.LabelList.remove", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.loss_computation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.distill_loss_computation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.ema.EMA.step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.calculate_eta", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.val.Eval.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.cocoeval.COCOeval.evaluate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.script.train.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.util.qt.struct.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.distill.distill_utils.loss_computation", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.coco.coco.COCO.info", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.timer.TimeAverager.get_ips_average"], ["", "def", "distill_train", "(", "distill_model", ",", "\n", "train_dataset", ",", "\n", "val_dataset", "=", "None", ",", "\n", "optimizer", "=", "None", ",", "\n", "save_dir", "=", "'output'", ",", "\n", "iters", "=", "10000", ",", "\n", "batch_size", "=", "2", ",", "\n", "resume_model", "=", "None", ",", "\n", "save_interval", "=", "1000", ",", "\n", "log_iters", "=", "10", ",", "\n", "num_workers", "=", "0", ",", "\n", "use_vdl", "=", "False", ",", "\n", "losses", "=", "None", ",", "\n", "distill_losses", "=", "None", ",", "\n", "keep_checkpoint_max", "=", "5", ",", "\n", "test_config", "=", "None", ",", "\n", "fp16", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Launch training.\n\n    Args:\n        distill_model (nn.Layer): A distill model.\n        train_dataset (paddle.io.Dataset): Used to read and process training datasets.\n        val_dataset (paddle.io.Dataset, optional): Used to read and process validation datasets.\n        optimizer (paddle.optimizer.Optimizer): The optimizer.\n        save_dir (str, optional): The directory for saving the model snapshot. Default: 'output'.\n        iters (int, optional): How may iters to train the model. Defualt: 10000.\n        batch_size (int, optional): Mini batch size of one gpu or cpu. Default: 2.\n        resume_model (str, optional): The path of resume model.\n        save_interval (int, optional): How many iters to save a model snapshot once during training. Default: 1000.\n        log_iters (int, optional): Display logging information at every log_iters. Default: 10.\n        num_workers (int, optional): Num workers for data loader. Default: 0.\n        use_vdl (bool, optional): Whether to record the data to VisualDL during training. Default: False.\n        losses (dict): A dict including 'types' and 'coef'. The length of coef should equal to 1 or len(losses['types']).\n            The 'types' item is a list of object of paddleseg.models.losses while the 'coef' item is a list of the relevant coefficient.\n        distill_losses (dict): A dict including 'types' and 'coef'. The format of distill_losses is the same as losses.\n        keep_checkpoint_max (int, optional): Maximum number of checkpoints to save. Default: 5.\n        test_config(dict, optional): Evaluation config.\n        fp16 (bool, optional): Whether to use amp. Not support for now.\n    \"\"\"", "\n", "if", "fp16", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"Distillation doesn't support amp training.\"", ")", "\n", "\n", "", "nranks", "=", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "nranks", "\n", "local_rank", "=", "paddle", ".", "distributed", ".", "ParallelEnv", "(", ")", ".", "local_rank", "\n", "student_model", "=", "distill_model", ".", "_student_models", "\n", "\n", "start_iter", "=", "0", "\n", "if", "resume_model", "is", "not", "None", ":", "\n", "        ", "start_iter", "=", "resume", "(", "student_model", ",", "optimizer", ",", "resume_model", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "save_dir", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "            ", "os", ".", "remove", "(", "save_dir", ")", "\n", "", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "\n", "", "if", "nranks", ">", "1", ":", "\n", "        ", "strategy", "=", "fleet", ".", "DistributedStrategy", "(", ")", "\n", "strategy", ".", "find_unused_parameters", "=", "True", "\n", "fleet", ".", "init", "(", "is_collective", "=", "True", ",", "strategy", "=", "strategy", ")", "\n", "\n", "optimizer", "=", "fleet", ".", "distributed_optimizer", "(", "\n", "optimizer", ")", "# The return is Fleet object", "\n", "ddp_distill_model", "=", "fleet", ".", "distributed_model", "(", "distill_model", ")", "\n", "\n", "", "batch_sampler", "=", "paddle", ".", "io", ".", "DistributedBatchSampler", "(", "\n", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "loader", "=", "paddle", ".", "io", ".", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "batch_sampler", "=", "batch_sampler", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "return_list", "=", "True", ",", "\n", "worker_init_fn", "=", "worker_init_fn", ",", ")", "\n", "\n", "if", "fp16", ":", "\n", "        ", "logger", ".", "info", "(", "'use amp to train'", ")", "\n", "scaler", "=", "paddle", ".", "amp", ".", "GradScaler", "(", "init_loss_scaling", "=", "1024", ")", "\n", "\n", "", "if", "use_vdl", ":", "\n", "        ", "from", "visualdl", "import", "LogWriter", "\n", "log_writer", "=", "LogWriter", "(", "save_dir", ")", "\n", "\n", "", "avg_loss", "=", "0.0", "\n", "avg_out_loss", "=", "0.0", "\n", "avg_out_distill_loss", "=", "0.0", "\n", "avg_feature_distill_loss", "=", "0.0", "\n", "avg_out_loss_list", "=", "[", "]", "\n", "iters_per_epoch", "=", "len", "(", "batch_sampler", ")", "\n", "best_mean_iou", "=", "-", "1.0", "\n", "best_model_iter", "=", "-", "1", "\n", "reader_cost_averager", "=", "TimeAverager", "(", ")", "\n", "batch_cost_averager", "=", "TimeAverager", "(", ")", "\n", "save_models", "=", "deque", "(", ")", "\n", "batch_start", "=", "time", ".", "time", "(", ")", "\n", "\n", "iter", "=", "start_iter", "\n", "while", "iter", "<", "iters", ":", "\n", "        ", "for", "data", "in", "loader", ":", "\n", "            ", "iter", "+=", "1", "\n", "if", "iter", ">", "iters", ":", "\n", "                ", "break", "\n", "", "reader_cost_averager", ".", "record", "(", "time", ".", "time", "(", ")", "-", "batch_start", ")", "\n", "images", "=", "data", "[", "0", "]", "\n", "labels", "=", "data", "[", "1", "]", ".", "astype", "(", "'int64'", ")", "\n", "edges", "=", "None", "\n", "if", "len", "(", "data", ")", "==", "3", ":", "\n", "                ", "edges", "=", "data", "[", "2", "]", ".", "astype", "(", "'int64'", ")", "\n", "", "if", "hasattr", "(", "distill_model", ",", "\n", "'data_format'", ")", "and", "distill_model", ".", "data_format", "==", "'NHWC'", ":", "\n", "                ", "images", "=", "images", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "\n", "", "if", "fp16", ":", "\n", "                ", "with", "paddle", ".", "amp", ".", "auto_cast", "(", "\n", "enable", "=", "True", ",", "\n", "custom_white_list", "=", "{", "\n", "\"elementwise_add\"", ",", "\"batch_norm\"", ",", "\"sync_batch_norm\"", "\n", "}", ",", "\n", "custom_black_list", "=", "{", "'bilinear_interp_v2'", "}", ")", ":", "\n", "                    ", "if", "nranks", ">", "1", ":", "\n", "                        ", "logits_list", "=", "ddp_distill_model", "(", "images", ")", "\n", "", "else", ":", "\n", "                        ", "logits_list", "=", "distill_model", "(", "images", ")", "\n", "", "loss_list", "=", "loss_computation", "(", "\n", "logits_list", "=", "logits_list", ",", "\n", "labels", "=", "labels", ",", "\n", "losses", "=", "losses", ",", "\n", "edges", "=", "edges", ")", "\n", "loss", "=", "sum", "(", "loss_list", ")", "\n", "\n", "", "scaled", "=", "scaler", ".", "scale", "(", "loss", ")", "# scale the loss", "\n", "scaled", ".", "backward", "(", ")", "# do backward", "\n", "if", "isinstance", "(", "optimizer", ",", "fleet", ".", "Fleet", ")", ":", "\n", "                    ", "scaler", ".", "minimize", "(", "optimizer", ".", "user_defined_optimizer", ",", "scaled", ")", "\n", "", "else", ":", "\n", "                    ", "scaler", ".", "minimize", "(", "optimizer", ",", "scaled", ")", "# update parameters", "\n", "", "", "else", ":", "\n", "                ", "if", "nranks", ">", "1", ":", "\n", "                    ", "s_logits_list", ",", "t_logits_list", ",", "feature_distill_loss", "=", "ddp_distill_model", "(", "\n", "images", ")", "\n", "", "else", ":", "\n", "                    ", "s_logits_list", ",", "t_logits_list", ",", "feature_distill_loss", "=", "distill_model", "(", "\n", "images", ")", "\n", "\n", "", "out_loss_list", "=", "loss_computation", "(", "\n", "logits_list", "=", "s_logits_list", ",", "\n", "labels", "=", "labels", ",", "\n", "losses", "=", "losses", ",", "\n", "edges", "=", "edges", ")", "\n", "out_loss", "=", "sum", "(", "out_loss_list", ")", "\n", "\n", "out_distill_loss_list", "=", "distill_loss_computation", "(", "\n", "student_logits_list", "=", "s_logits_list", ",", "\n", "teacher_logits_list", "=", "t_logits_list", ",", "\n", "labels", "=", "labels", ",", "\n", "losses", "=", "distill_losses", ",", "\n", "edges", "=", "edges", ")", "\n", "out_distill_loss", "=", "sum", "(", "out_distill_loss_list", ")", "\n", "\n", "loss", "=", "out_loss", "+", "out_distill_loss", "+", "feature_distill_loss", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "lr", "=", "optimizer", ".", "get_lr", "(", ")", "\n", "\n", "# update lr", "\n", "if", "isinstance", "(", "optimizer", ",", "fleet", ".", "Fleet", ")", ":", "\n", "                ", "lr_sche", "=", "optimizer", ".", "user_defined_optimizer", ".", "_learning_rate", "\n", "", "else", ":", "\n", "                ", "lr_sche", "=", "optimizer", ".", "_learning_rate", "\n", "", "if", "isinstance", "(", "lr_sche", ",", "paddle", ".", "optimizer", ".", "lr", ".", "LRScheduler", ")", ":", "\n", "                ", "lr_sche", ".", "step", "(", ")", "\n", "\n", "", "distill_model", ".", "clear_gradients", "(", ")", "\n", "avg_loss", "+=", "loss", ".", "numpy", "(", ")", "[", "0", "]", "\n", "avg_out_loss", "+=", "out_loss", ".", "numpy", "(", ")", "[", "0", "]", "\n", "avg_out_distill_loss", "+=", "out_distill_loss", ".", "numpy", "(", ")", "[", "0", "]", "\n", "avg_feature_distill_loss", "+=", "feature_distill_loss", ".", "numpy", "(", ")", "[", "0", "]", "\n", "if", "not", "avg_out_loss_list", ":", "\n", "                ", "avg_out_loss_list", "=", "[", "l", ".", "numpy", "(", ")", "for", "l", "in", "out_loss_list", "]", "\n", "", "else", ":", "\n", "                ", "for", "i", "in", "range", "(", "len", "(", "out_loss_list", ")", ")", ":", "\n", "                    ", "avg_out_loss_list", "[", "i", "]", "+=", "out_loss_list", "[", "i", "]", ".", "numpy", "(", ")", "\n", "", "", "batch_cost_averager", ".", "record", "(", "\n", "time", ".", "time", "(", ")", "-", "batch_start", ",", "num_samples", "=", "batch_size", ")", "\n", "\n", "if", "(", "iter", ")", "%", "log_iters", "==", "0", "and", "local_rank", "==", "0", ":", "\n", "                ", "avg_loss", "/=", "log_iters", "\n", "avg_out_loss", "/=", "log_iters", "\n", "avg_out_distill_loss", "/=", "log_iters", "\n", "avg_feature_distill_loss", "/=", "log_iters", "\n", "avg_out_loss_list", "=", "[", "\n", "l", "[", "0", "]", "/", "log_iters", "for", "l", "in", "avg_out_loss_list", "\n", "]", "\n", "remain_iters", "=", "iters", "-", "iter", "\n", "avg_train_batch_cost", "=", "batch_cost_averager", ".", "get_average", "(", ")", "\n", "avg_train_reader_cost", "=", "reader_cost_averager", ".", "get_average", "(", ")", "\n", "eta", "=", "calculate_eta", "(", "remain_iters", ",", "avg_train_batch_cost", ")", "\n", "logger", ".", "info", "(", "\n", "\"[TRAIN] epoch: {}, iter: {}/{}, loss: {:.4f},  out_loss: {:.4f}, out_distill_loss: {:.4f}, feature_distill_loss: {:.4f}, lr: {:.6f}, batch_cost: {:.4f}, reader_cost: {:.5f}, ips: {:.4f} samples/sec | ETA {}\"", "\n", ".", "format", "(", "(", "iter", "-", "1", ")", "//", "iters_per_epoch", "+", "1", ",", "iter", ",", "iters", ",", "\n", "avg_loss", ",", "avg_out_loss", ",", "avg_out_distill_loss", ",", "\n", "avg_feature_distill_loss", ",", "lr", ",", "avg_train_batch_cost", ",", "\n", "avg_train_reader_cost", ",", "\n", "batch_cost_averager", ".", "get_ips_average", "(", ")", ",", "eta", ")", ")", "\n", "if", "use_vdl", ":", "\n", "                    ", "log_writer", ".", "add_scalar", "(", "'Train/loss'", ",", "avg_loss", ",", "iter", ")", "\n", "# Record all losses if there are more than 2 losses.", "\n", "if", "len", "(", "avg_out_loss_list", ")", ">", "1", ":", "\n", "                        ", "avg_loss_dict", "=", "{", "}", "\n", "for", "i", ",", "value", "in", "enumerate", "(", "avg_out_loss_list", ")", ":", "\n", "                            ", "avg_loss_dict", "[", "'loss_'", "+", "str", "(", "i", ")", "]", "=", "value", "\n", "", "for", "key", ",", "value", "in", "avg_loss_dict", ".", "items", "(", ")", ":", "\n", "                            ", "log_tag", "=", "'Train/'", "+", "key", "\n", "log_writer", ".", "add_scalar", "(", "log_tag", ",", "value", ",", "iter", ")", "\n", "\n", "", "", "log_writer", ".", "add_scalar", "(", "'Train/lr'", ",", "lr", ",", "iter", ")", "\n", "log_writer", ".", "add_scalar", "(", "'Train/batch_cost'", ",", "\n", "avg_train_batch_cost", ",", "iter", ")", "\n", "log_writer", ".", "add_scalar", "(", "'Train/reader_cost'", ",", "\n", "avg_train_reader_cost", ",", "iter", ")", "\n", "", "avg_loss", "=", "0.0", "\n", "avg_out_loss", "=", "0.0", "\n", "avg_out_distill_loss", "=", "0.0", "\n", "avg_feature_distill_loss", "=", "0.0", "\n", "avg_out_loss_list", "=", "[", "]", "\n", "reader_cost_averager", ".", "reset", "(", ")", "\n", "batch_cost_averager", ".", "reset", "(", ")", "\n", "\n", "", "if", "(", "iter", "%", "save_interval", "==", "0", "or", "\n", "iter", "==", "iters", ")", "and", "(", "val_dataset", "is", "not", "None", ")", ":", "\n", "                ", "num_workers", "=", "1", "if", "num_workers", ">", "0", "else", "0", "\n", "\n", "if", "test_config", "is", "None", ":", "\n", "                    ", "test_config", "=", "{", "}", "\n", "\n", "", "mean_iou", ",", "acc", ",", "_", ",", "_", ",", "_", "=", "evaluate", "(", "\n", "student_model", ",", "\n", "val_dataset", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "**", "test_config", ")", "\n", "\n", "student_model", ".", "train", "(", ")", "\n", "\n", "", "if", "(", "iter", "%", "save_interval", "==", "0", "or", "iter", "==", "iters", ")", "and", "local_rank", "==", "0", ":", "\n", "                ", "current_save_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\n", "\"iter_{}\"", ".", "format", "(", "iter", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "current_save_dir", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "current_save_dir", ")", "\n", "", "paddle", ".", "save", "(", "student_model", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "current_save_dir", ",", "'model.pdparams'", ")", ")", "\n", "paddle", ".", "save", "(", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "current_save_dir", ",", "'model.pdopt'", ")", ")", "\n", "save_models", ".", "append", "(", "current_save_dir", ")", "\n", "if", "len", "(", "save_models", ")", ">", "keep_checkpoint_max", ">", "0", ":", "\n", "                    ", "model_to_remove", "=", "save_models", ".", "popleft", "(", ")", "\n", "shutil", ".", "rmtree", "(", "model_to_remove", ")", "\n", "\n", "", "if", "val_dataset", "is", "not", "None", ":", "\n", "                    ", "if", "mean_iou", ">", "best_mean_iou", ":", "\n", "                        ", "best_mean_iou", "=", "mean_iou", "\n", "best_model_iter", "=", "iter", "\n", "best_model_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"best_model\"", ")", "\n", "paddle", ".", "save", "(", "\n", "student_model", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "best_model_dir", ",", "'model.pdparams'", ")", ")", "\n", "", "logger", ".", "info", "(", "\n", "'[EVAL] The model with the best validation mIoU ({:.4f}) was saved at iter {}.'", "\n", ".", "format", "(", "best_mean_iou", ",", "best_model_iter", ")", ")", "\n", "\n", "if", "use_vdl", ":", "\n", "                        ", "log_writer", ".", "add_scalar", "(", "'Evaluate/mIoU'", ",", "mean_iou", ",", "iter", ")", "\n", "log_writer", ".", "add_scalar", "(", "'Evaluate/Acc'", ",", "acc", ",", "iter", ")", "\n", "", "", "", "batch_start", "=", "time", ".", "time", "(", ")", "\n", "\n", "# Calculate flops.", "\n", "", "", "if", "local_rank", "==", "0", ":", "\n", "\n", "        ", "def", "count_syncbn", "(", "m", ",", "x", ",", "y", ")", ":", "\n", "            ", "x", "=", "x", "[", "0", "]", "\n", "nelements", "=", "x", ".", "numel", "(", ")", "\n", "m", ".", "total_ops", "+=", "int", "(", "2", "*", "nelements", ")", "\n", "\n", "", "_", ",", "c", ",", "h", ",", "w", "=", "images", ".", "shape", "\n", "flops", "=", "paddle", ".", "flops", "(", "\n", "student_model", ",", "[", "1", ",", "c", ",", "h", ",", "w", "]", ",", "\n", "custom_ops", "=", "{", "paddle", ".", "nn", ".", "SyncBatchNorm", ":", "count_syncbn", "}", ")", "\n", "\n", "# Sleep for half a second to let dataloader release resources.", "\n", "", "time", ".", "sleep", "(", "0.5", ")", "\n", "if", "use_vdl", ":", "\n", "        ", "log_writer", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args": [[16, 32], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--serving_client_path\"", ",", "\n", "help", "=", "\"The path of serving_client file.\"", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--serving_ip_port\"", ",", "\n", "help", "=", "\"The serving ip.\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"127.0.0.1:9292\"", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--image_path\"", ",", "help", "=", "\"The image path.\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.serving.test_serving.run": [[34, 53], ["paddle_serving_client.Client", "paddle_serving_client.Client.load_client_config", "paddle_serving_client.Client.connect", "paddle_serving_app.reader.Sequential", "paddle_serving_app.reader.Sequential.", "paddle_serving_client.Client.predict", "paddleseg.utils.visualize.get_pseudo_color_map", "paddleseg.utils.visualize.get_pseudo_color_map.save", "print", "os.path.join", "paddle_serving_app.reader.File2Image", "paddle_serving_app.reader.RGB2BGR", "paddle_serving_app.reader.Div", "paddle_serving_app.reader.Normalize", "paddle_serving_app.reader.Transpose"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.third_party.tusimple_processor.TusimpleProcessor.predict", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleSeg.utils.utils.get_pseudo_color_map"], ["", "def", "run", "(", "args", ")", ":", "\n", "    ", "client", "=", "Client", "(", ")", "\n", "client", ".", "load_client_config", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "serving_client_path", ",", "\"serving_client_conf.prototxt\"", ")", ")", "\n", "client", ".", "connect", "(", "[", "args", ".", "serving_ip_port", "]", ")", "\n", "\n", "seq", "=", "Sequential", "(", "[", "\n", "File2Image", "(", ")", ",", "RGB2BGR", "(", ")", ",", "Div", "(", "255", ")", ",", "\n", "Normalize", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "False", ")", ",", "Transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "]", ")", "\n", "\n", "img", "=", "seq", "(", "args", ".", "image_path", ")", "\n", "fetch_map", "=", "client", ".", "predict", "(", "\n", "feed", "=", "{", "\"x\"", ":", "img", "}", ",", "fetch", "=", "[", "\"save_infer_model/scale_0.tmp_1\"", "]", ")", "\n", "\n", "result", "=", "fetch_map", "[", "\"save_infer_model/scale_0.tmp_1\"", "]", "\n", "color_img", "=", "get_pseudo_color_map", "(", "result", "[", "0", "]", ")", "\n", "color_img", ".", "save", "(", "\"./result.png\"", ")", "\n", "print", "(", "\"The segmentation image is saved in ./result.png\"", ")", "\n", "\n"]]}