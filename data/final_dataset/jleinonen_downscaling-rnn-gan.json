{"home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rnn.CustomGateGRU.__init__": [[6, 18], ["tensorflow.keras.layers.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.ReflectionPadding2D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "update_gate", "=", "None", ",", "reset_gate", "=", "None", ",", "output_gate", "=", "None", ",", "\n", "return_sequences", "=", "False", ",", "time_steps", "=", "1", ",", "\n", "**", "kwargs", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "update_gate", "=", "update_gate", "\n", "self", ".", "reset_gate", "=", "reset_gate", "\n", "self", ".", "output_gate", "=", "output_gate", "\n", "self", ".", "return_sequences", "=", "return_sequences", "\n", "self", ".", "time_steps", "=", "time_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rnn.CustomGateGRU.call": [[19, 34], ["range", "tensorflow.concat", "rnn.CustomGateGRU.update_gate", "rnn.CustomGateGRU.reset_gate", "rnn.CustomGateGRU.output_gate", "tensorflow.stack", "tensorflow.concat", "h_all.append", "tensorflow.math.tanh"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "(", "xt", ",", "h", ")", "=", "inputs", "\n", "\n", "h_all", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "self", ".", "time_steps", ")", ":", "\n", "            ", "x", "=", "xt", "[", ":", ",", "t", ",", "...", "]", "\n", "xh", "=", "tf", ".", "concat", "(", "(", "x", ",", "h", ")", ",", "axis", "=", "-", "1", ")", "\n", "z", "=", "self", ".", "update_gate", "(", "xh", ")", "\n", "r", "=", "self", ".", "reset_gate", "(", "xh", ")", "\n", "o", "=", "self", ".", "output_gate", "(", "tf", ".", "concat", "(", "(", "x", ",", "r", "*", "h", ")", ",", "axis", "=", "-", "1", ")", ")", "\n", "h", "=", "z", "*", "h", "+", "(", "1", "-", "z", ")", "*", "tf", ".", "math", ".", "tanh", "(", "o", ")", "\n", "if", "self", ".", "return_sequences", ":", "\n", "                ", "h_all", ".", "append", "(", "h", ")", "\n", "\n", "", "", "return", "tf", ".", "stack", "(", "h_all", ",", "axis", "=", "1", ")", "if", "self", ".", "return_sequences", "else", "h", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.crps.crps_ensemble": [[4, 23], ["forecasts.copy", "forecasts.copy.sort", "numpy.zeros_like", "range", "range"], "function", ["None"], ["def", "crps_ensemble", "(", "observation", ",", "forecasts", ")", ":", "\n", "    ", "fc", "=", "forecasts", ".", "copy", "(", ")", "\n", "fc", ".", "sort", "(", "axis", "=", "-", "1", ")", "\n", "obs", "=", "observation", "\n", "fc_below", "=", "fc", "<", "obs", "[", "...", ",", "None", "]", "\n", "crps", "=", "np", ".", "zeros_like", "(", "obs", ")", "\n", "\n", "for", "i", "in", "range", "(", "fc", ".", "shape", "[", "-", "1", "]", ")", ":", "\n", "        ", "below", "=", "fc_below", "[", "...", ",", "i", "]", "\n", "weight", "=", "(", "(", "i", "+", "1", ")", "**", "2", "-", "i", "**", "2", ")", "/", "fc", ".", "shape", "[", "-", "1", "]", "**", "2", "\n", "crps", "[", "below", "]", "+=", "weight", "*", "(", "obs", "[", "below", "]", "-", "fc", "[", "...", ",", "i", "]", "[", "below", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "fc", ".", "shape", "[", "-", "1", "]", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "        ", "above", "=", "~", "fc_below", "[", "...", ",", "i", "]", "\n", "k", "=", "fc", ".", "shape", "[", "-", "1", "]", "-", "1", "-", "i", "\n", "weight", "=", "(", "(", "k", "+", "1", ")", "**", "2", "-", "k", "**", "2", ")", "/", "fc", ".", "shape", "[", "-", "1", "]", "**", "2", "\n", "crps", "[", "above", "]", "+=", "weight", "*", "(", "fc", "[", "...", ",", "i", "]", "[", "above", "]", "-", "obs", "[", "above", "]", ")", "\n", "\n", "", "return", "crps", "\n", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_img": [[28, 33], ["matplotlib.pyplot.imshow", "matplotlib.pyplot.gca().tick_params", "numpy.log10", "numpy.log10", "matplotlib.colors.Normalize", "matplotlib.pyplot.gca"], "function", ["None"], ["def", "plot_img", "(", "img", ",", "value_range", "=", "(", "np", ".", "log10", "(", "0.1", ")", ",", "np", ".", "log10", "(", "100", ")", ")", ",", "extent", "=", "None", ")", ":", "\n", "    ", "plt", ".", "imshow", "(", "img", ",", "interpolation", "=", "'nearest'", ",", "\n", "norm", "=", "colors", ".", "Normalize", "(", "*", "value_range", ")", ",", "extent", "=", "extent", ")", "\n", "plt", ".", "gca", "(", ")", ".", "tick_params", "(", "left", "=", "False", ",", "bottom", "=", "False", ",", "\n", "labelleft", "=", "False", ",", "labelbottom", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_sequences": [[35, 89], ["batch_gen.decoder.denormalize", "batch_gen.decoder.denormalize", "matplotlib.pyplot.figure", "matplotlib.gridspec.GridSpec", "range", "next", "range", "batch_gen.decoder.denormalize", "range", "range", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "seq_gen.append", "len", "matplotlib.pyplot.subplot", "plots.plot_img", "matplotlib.pyplot.subplot", "plots.plot_img", "range", "gen.predict", "matplotlib.pyplot.subplot", "plots.plot_img", "noise_gen"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_img", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_img", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorRainFARM.predict", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_img"], ["", "def", "plot_sequences", "(", "gen", ",", "batch_gen", ",", "noise_gen", ",", "\n", "num_samples", "=", "8", ",", "num_instances", "=", "4", ",", "out_fn", "=", "None", ",", "\n", "plot_stride", "=", "1", ")", ":", "\n", "\n", "    ", "old_batch_size", "=", "batch_gen", ".", "batch_size", "\n", "try", ":", "\n", "        ", "batch_gen", ".", "batch_size", "=", "num_samples", "\n", "noise_gen", ".", "batch_size", "=", "num_samples", "\n", "(", "seq_real", ",", "cond", ")", "=", "next", "(", "batch_gen", ")", "\n", "seq_gen", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_instances", ")", ":", "\n", "            ", "seq_gen", ".", "append", "(", "gen", ".", "predict", "(", "[", "cond", "]", "+", "noise_gen", "(", ")", ")", ")", "\n", "", "", "finally", ":", "\n", "        ", "batch_gen", ".", "batch_size", "=", "old_batch_size", "\n", "noise_gen", ".", "batch_size", "=", "old_batch_size", "\n", "\n", "", "seq_real", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "seq_real", ")", "\n", "cond", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "cond", ")", "\n", "seq_gen", "=", "[", "batch_gen", ".", "decoder", ".", "denormalize", "(", "seq", ")", "for", "seq", "in", "seq_gen", "]", "\n", "\n", "num_frames", "=", "batch_gen", ".", "num_frames", "\n", "if", "plot_stride", ">", "1", ":", "\n", "        ", "seq_real", "=", "seq_real", "[", ":", ",", ":", ":", "plot_stride", ",", "...", "]", "\n", "cond", "=", "cond", "[", ":", ",", ":", ":", "plot_stride", ",", "...", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "seq_gen", ")", ")", ":", "\n", "            ", "seq_gen", "[", "i", "]", "=", "seq_gen", "[", "i", "]", "[", ":", ",", ":", ":", "plot_stride", ",", "...", "]", "\n", "", "num_frames", "=", "seq_real", ".", "shape", "[", "1", "]", "\n", "\n", "", "num_rows", "=", "num_samples", "*", "num_frames", "\n", "num_cols", "=", "2", "+", "num_instances", "\n", "\n", "figsize", "=", "(", "num_cols", "*", "1.5", ",", "num_rows", "*", "1.5", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "figsize", ")", "\n", "\n", "gs", "=", "gridspec", ".", "GridSpec", "(", "num_rows", ",", "num_cols", ",", "\n", "wspace", "=", "0.05", ",", "hspace", "=", "0.05", ")", "\n", "\n", "value_range", "=", "batch_gen", ".", "decoder", ".", "value_range", "\n", "\n", "for", "s", "in", "range", "(", "num_samples", ")", ":", "\n", "        ", "for", "t", "in", "range", "(", "num_frames", ")", ":", "\n", "            ", "i", "=", "s", "*", "num_frames", "+", "t", "\n", "plt", ".", "subplot", "(", "gs", "[", "i", ",", "0", "]", ")", "\n", "plot_img", "(", "seq_real", "[", "s", ",", "t", ",", ":", ",", ":", ",", "0", "]", ",", "value_range", "=", "value_range", ")", "\n", "plt", ".", "subplot", "(", "gs", "[", "i", ",", "1", "]", ")", "\n", "plot_img", "(", "cond", "[", "s", ",", "t", ",", ":", ",", ":", ",", "0", "]", ",", "value_range", "=", "value_range", ")", "\n", "for", "k", "in", "range", "(", "num_instances", ")", ":", "\n", "                ", "j", "=", "2", "+", "k", "\n", "plt", ".", "subplot", "(", "gs", "[", "i", ",", "j", "]", ")", "\n", "plot_img", "(", "seq_gen", "[", "k", "]", "[", "s", ",", "t", ",", ":", ",", ":", ",", "0", "]", ",", "value_range", "=", "value_range", ")", "\n", "\n", "", "", "", "if", "out_fn", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "out_fn", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_metrics_by_samples": [[91, 124], ["pandas.read_csv", "zip", "plt.gca.set_xlim", "plt.gca.set_ylim", "plt.gca.axhline", "plt.gca.axvline", "matplotlib.pyplot.grid", "matplotlib.pyplot.gca", "plt.gca.plot", "plt.gca.text", "x.max"], "function", ["None"], ["", "", "def", "plot_rank_metrics_by_samples", "(", "metrics_fn", ",", "ax", "=", "None", ",", "\n", "plot_metrics", "=", "[", "\"KS\"", ",", "\"DKL\"", ",", "\"OP\"", ",", "\"mean\"", "]", ",", "value_range", "=", "(", "-", "0.1", ",", "0.2", ")", ",", "\n", "linestyles", "=", "[", "'solid'", ",", "'dashed'", ",", "'dashdot'", ",", "':'", ",", "]", ",", "\n", "opt_switch_point", "=", "350000", ",", "plot_switch_text", "=", "True", ")", ":", "\n", "\n", "    ", "if", "ax", "is", "None", ":", "\n", "        ", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "\n", "", "df", "=", "pd", ".", "read_csv", "(", "metrics_fn", ",", "delimiter", "=", "\" \"", ")", "\n", "\n", "x", "=", "df", "[", "\"N\"", "]", "\n", "for", "(", "metric", ",", "linestyle", ")", "in", "zip", "(", "plot_metrics", ",", "linestyles", ")", ":", "\n", "        ", "y", "=", "df", "[", "metric", "]", "\n", "label", "=", "metric", "\n", "if", "metric", "==", "\"DKL\"", ":", "\n", "            ", "label", "=", "\"$D_\\\\mathrm{KL}$\"", "\n", "", "if", "metric", "==", "\"OP\"", ":", "\n", "            ", "label", "=", "\"OF\"", "\n", "", "if", "metric", "==", "\"mean\"", ":", "\n", "            ", "y", "=", "y", "-", "0.5", "\n", "label", "=", "\"mean - $\\\\frac{1}{2}$\"", "\n", "", "ax", ".", "plot", "(", "x", ",", "y", ",", "label", "=", "label", ",", "linestyle", "=", "linestyle", ")", "\n", "\n", "", "ax", ".", "set_xlim", "(", "(", "0", ",", "x", ".", "max", "(", ")", ")", ")", "\n", "ax", ".", "set_ylim", "(", "value_range", ")", "\n", "ax", ".", "axhline", "(", "0", ",", "linestyle", "=", "'--'", ",", "color", "=", "(", "0.75", ",", "0.75", ",", "0.75", ")", ",", "zorder", "=", "-", "10", ")", "\n", "ax", ".", "axvline", "(", "opt_switch_point", ",", "linestyle", "=", "'--'", ",", "color", "=", "(", "0.75", ",", "0.75", ",", "0.75", ")", ",", "zorder", "=", "-", "10", ")", "\n", "if", "plot_switch_text", ":", "\n", "        ", "text_x", "=", "opt_switch_point", "*", "0.98", "\n", "text_y", "=", "value_range", "[", "1", "]", "-", "(", "value_range", "[", "1", "]", "-", "value_range", "[", "0", "]", ")", "*", "0.02", "\n", "ax", ".", "text", "(", "text_x", ",", "text_y", ",", "\"Adam\\u2192SGD\"", ",", "horizontalalignment", "=", "'right'", ",", "\n", "verticalalignment", "=", "'top'", ",", "color", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "\n", "", "plt", ".", "grid", "(", "axis", "=", "'y'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_metrics_by_samples_multiple": [[126, 142], ["matplotlib.pyplot.subplots", "matplotlib.pyplot.subplots_adjust", "enumerate", "len", "zip", "plots.plot_rank_metrics_by_samples", "ax.text", "ax.set_ylabel", "ax.grid", "ax.legend", "ax.set_xlabel", "len"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_metrics_by_samples"], ["", "def", "plot_rank_metrics_by_samples_multiple", "(", "metrics_files", ",", "\n", "value_ranges", "=", "[", "(", "-", "0.025", ",", "0.075", ")", ",", "(", "-", "0.1", ",", "0.2", ")", "]", ")", ":", "\n", "    ", "(", "fig", ",", "axes", ")", "=", "plt", ".", "subplots", "(", "len", "(", "metrics_files", ")", ",", "1", ",", "sharex", "=", "True", ",", "\n", "squeeze", "=", "True", ")", "\n", "plt", ".", "subplots_adjust", "(", "hspace", "=", "0.1", ")", "\n", "\n", "for", "(", "i", ",", "(", "ax", ",", "fn", ",", "vr", ")", ")", "in", "enumerate", "(", "zip", "(", "axes", ",", "metrics_files", ",", "value_ranges", ")", ")", ":", "\n", "        ", "plot_rank_metrics_by_samples", "(", "fn", ",", "ax", ",", "plot_switch_text", "=", "(", "i", "==", "0", ")", ",", "value_range", "=", "vr", ")", "\n", "if", "i", "==", "len", "(", "metrics_files", ")", "-", "1", ":", "\n", "            ", "ax", ".", "legend", "(", "ncol", "=", "5", ")", "\n", "ax", ".", "set_xlabel", "(", "\"Training sequences\"", ")", "\n", "", "ax", ".", "text", "(", "0.04", ",", "0.97", ",", "\"({})\"", ".", "format", "(", "ascii_lowercase", "[", "i", "]", ")", ",", "\n", "horizontalalignment", "=", "'left'", ",", "verticalalignment", "=", "'top'", ",", "\n", "transform", "=", "ax", ".", "transAxes", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Rank metric\"", ")", "\n", "ax", ".", "grid", "(", "axis", "=", "'y'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_quality_metrics_by_samples": [[144, 181], ["pandas.read_csv", "pandas.read_csv", "zip", "plt.gca.set_xlim", "plt.gca.set_ylim", "plt.gca.axhline", "plt.gca.axvline", "matplotlib.pyplot.gca", "plt.gca.plot", "plt.gca.text", "x.max"], "function", ["None"], ["", "", "def", "plot_quality_metrics_by_samples", "(", "quality_metrics_fn", ",", "\n", "rank_metrics_fn", ",", "ax", "=", "None", ",", "\n", "plot_metrics", "=", "[", "\"RMSE\"", ",", "\"MSSSIM\"", ",", "\"LSD\"", ",", "\"CRPS\"", "]", ",", "value_range", "=", "(", "0", ",", "0.7", ")", ",", "\n", "linestyles", "=", "[", "'-'", ",", "'--'", ",", "':'", ",", "'-.'", "]", ",", "opt_switch_point", "=", "350000", ",", "\n", "plot_switch_text", "=", "True", ")", ":", "\n", "\n", "    ", "if", "ax", "is", "None", ":", "\n", "        ", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "\n", "", "df", "=", "pd", ".", "read_csv", "(", "quality_metrics_fn", ",", "delimiter", "=", "\" \"", ")", "\n", "df_r", "=", "pd", ".", "read_csv", "(", "rank_metrics_fn", ",", "delimiter", "=", "\" \"", ")", "\n", "df", "[", "\"CRPS\"", "]", "=", "df_r", "[", "\"CRPS\"", "]", "\n", "\n", "x", "=", "df", "[", "\"N\"", "]", "\n", "for", "(", "metric", ",", "linestyle", ")", "in", "zip", "(", "plot_metrics", ",", "linestyles", ")", ":", "\n", "        ", "y", "=", "df", "[", "metric", "]", "\n", "label", "=", "metric", "\n", "if", "metric", "==", "\"MSSSIM\"", ":", "\n", "            ", "y", "=", "1", "-", "y", "\n", "label", "=", "\"$1 - $MS-SSIM\"", "\n", "", "if", "metric", "==", "\"LSD\"", ":", "\n", "            ", "label", "=", "\"LSD [dB] / 50\"", "\n", "y", "=", "y", "/", "50", "\n", "", "if", "metric", "==", "\"CRPS\"", ":", "\n", "            ", "y", "=", "y", "*", "10", "\n", "label", "=", "\"CRPS $\\\\times$ 10\"", "\n", "", "ax", ".", "plot", "(", "x", ",", "y", ",", "label", "=", "label", ",", "linestyle", "=", "linestyle", ")", "\n", "\n", "", "ax", ".", "set_xlim", "(", "(", "0", ",", "x", ".", "max", "(", ")", ")", ")", "\n", "ax", ".", "set_ylim", "(", "value_range", ")", "\n", "ax", ".", "axhline", "(", "0", ",", "linestyle", "=", "'--'", ",", "color", "=", "(", "0.75", ",", "0.75", ",", "0.75", ")", ",", "zorder", "=", "-", "10", ")", "\n", "ax", ".", "axvline", "(", "opt_switch_point", ",", "linestyle", "=", "'--'", ",", "color", "=", "(", "0.75", ",", "0.75", ",", "0.75", ")", ",", "zorder", "=", "-", "10", ")", "\n", "if", "plot_switch_text", ":", "\n", "        ", "text_x", "=", "opt_switch_point", "*", "0.98", "\n", "text_y", "=", "value_range", "[", "1", "]", "-", "(", "value_range", "[", "1", "]", "-", "value_range", "[", "0", "]", ")", "*", "0.02", "\n", "ax", ".", "text", "(", "text_x", ",", "text_y", ",", "\"Adam\\u2192SGD\"", ",", "horizontalalignment", "=", "'right'", ",", "\n", "verticalalignment", "=", "'top'", ",", "color", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_quality_metrics_by_samples_multiple": [[183, 204], ["matplotlib.pyplot.subplots", "matplotlib.pyplot.subplots_adjust", "enumerate", "len", "zip", "plots.plot_quality_metrics_by_samples", "ax.text", "ax.set_ylabel", "ax.grid", "ax.legend", "ax.set_xlabel"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_quality_metrics_by_samples"], ["", "", "def", "plot_quality_metrics_by_samples_multiple", "(", "\n", "quality_metrics_files", ",", "rank_metrics_files", ")", ":", "\n", "\n", "    ", "(", "fig", ",", "axes", ")", "=", "plt", ".", "subplots", "(", "len", "(", "quality_metrics_files", ")", ",", "1", ",", "sharex", "=", "True", ",", "\n", "squeeze", "=", "True", ")", "\n", "plt", ".", "subplots_adjust", "(", "hspace", "=", "0.1", ")", "\n", "value_ranges", "=", "[", "(", "0", ",", "0.4", ")", ",", "(", "0", ",", "0.8", ")", "]", "\n", "\n", "for", "(", "i", ",", "(", "ax", ",", "fn_q", ",", "fn_r", ",", "vr", ")", ")", "in", "enumerate", "(", "zip", "(", "\n", "axes", ",", "quality_metrics_files", ",", "rank_metrics_files", ",", "value_ranges", ")", ")", ":", "\n", "        ", "plot_quality_metrics_by_samples", "(", "fn_q", ",", "fn_r", ",", "ax", ",", "\n", "plot_switch_text", "=", "(", "i", "==", "0", ")", ",", "value_range", "=", "vr", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "ax", ".", "legend", "(", "mode", "=", "'expand'", ",", "ncol", "=", "4", ",", "loc", "=", "'lower left'", ")", "\n", "", "if", "i", "==", "1", ":", "\n", "            ", "ax", ".", "set_xlabel", "(", "\"Training sequences\"", ")", "\n", "", "ax", ".", "text", "(", "0.04", ",", "0.97", ",", "\"({})\"", ".", "format", "(", "ascii_lowercase", "[", "i", "]", ")", ",", "\n", "horizontalalignment", "=", "'left'", ",", "verticalalignment", "=", "'top'", ",", "\n", "transform", "=", "ax", ".", "transAxes", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Quality metric\"", ")", "\n", "ax", ".", "grid", "(", "axis", "=", "'y'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_sequences_horiz": [[206, 300], ["len", "noise.NoiseGenerator", "numpy.array", "batch_gen.decoder.denormalize", "batch_gen.decoder.denormalize", "matplotlib.pyplot.figure", "matplotlib.gridspec.GridSpec", "range", "matplotlib.colorbar.ColorbarBase", "colorbar.ColorbarBase.set_ticks", "colorbar.ColorbarBase.set_ticklabels", "cax.tick_params", "colorbar.ColorbarBase.set_label", "noise_shapes", "next", "range", "batch_gen.decoder.denormalize", "range", "matplotlib.gridspec.GridSpecFromSubplotSpec", "range", "numpy.array", "matplotlib.pyplot.subplot", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "seq_gen.append", "len", "matplotlib.pyplot.subplot", "plots.plot_img", "matplotlib.pyplot.subplot", "plots.plot_img", "range", "numpy.log", "numpy.exp().round().astype", "matplotlib.colors.Normalize", "gen.predict", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.text", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.subplot", "plots.plot_img", "matplotlib.pyplot.title", "matplotlib.pyplot.ylabel", "numpy.exp().round", "noise.NoiseGenerator.", "matplotlib.pyplot.gca", "numpy.exp"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_img", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_img", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorRainFARM.predict", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_img"], ["", "", "def", "plot_sequences_horiz", "(", "gen", ",", "noise_shapes", ",", "batch_gen", ",", "\n", "samples", "=", "[", "0", ",", "1", ",", "2", "]", ",", "num_instances", "=", "3", ",", "out_fn", "=", "None", ",", "\n", "plot_stride", "=", "2", ",", "random_seed", "=", "1234", ",", "application", "=", "\"mchrzc\"", ")", ":", "\n", "\n", "    ", "num_samples", "=", "len", "(", "samples", ")", "\n", "old_batch_size", "=", "batch_gen", ".", "batch_size", "\n", "old_augment", "=", "batch_gen", ".", "augment", "\n", "old_zeros_frac", "=", "batch_gen", ".", "zeros_frac", "\n", "img_shape", "=", "batch_gen", ".", "sequences", ".", "shape", "[", "2", ":", "4", "]", "\n", "noise_gen", "=", "noise", ".", "NoiseGenerator", "(", "noise_shapes", "(", "img_shape", ")", ",", "\n", "batch_size", "=", "num_samples", ",", "random_seed", "=", "random_seed", ")", "\n", "# force the batch generator to return the selected samples", "\n", "batch_gen", ".", "next_ind", "=", "np", ".", "array", "(", "samples", ")", "\n", "try", ":", "\n", "        ", "batch_gen", ".", "batch_size", "=", "num_samples", "\n", "batch_gen", ".", "augment", "=", "False", "\n", "batch_gen", ".", "zeros_frac", "=", "0.0", "\n", "(", "seq_real", ",", "cond", ")", "=", "next", "(", "batch_gen", ")", "\n", "seq_gen", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_instances", ")", ":", "\n", "            ", "seq_gen", ".", "append", "(", "gen", ".", "predict", "(", "[", "cond", "]", "+", "noise_gen", "(", ")", ")", ")", "\n", "", "", "finally", ":", "\n", "        ", "batch_gen", ".", "batch_size", "=", "old_batch_size", "\n", "batch_gen", ".", "augment", "=", "old_augment", "\n", "batch_gen", ".", "zeros_frac", "=", "old_zeros_frac", "\n", "\n", "", "seq_real", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "seq_real", ")", "\n", "cond", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "cond", ")", "\n", "seq_gen", "=", "[", "batch_gen", ".", "decoder", ".", "denormalize", "(", "seq", ")", "for", "seq", "in", "seq_gen", "]", "\n", "\n", "num_frames", "=", "batch_gen", ".", "num_frames", "\n", "if", "plot_stride", ">", "1", ":", "\n", "        ", "seq_real", "=", "seq_real", "[", ":", ",", ":", ":", "plot_stride", ",", "...", "]", "\n", "cond", "=", "cond", "[", ":", ",", ":", ":", "plot_stride", ",", "...", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "seq_gen", ")", ")", ":", "\n", "            ", "seq_gen", "[", "i", "]", "=", "seq_gen", "[", "i", "]", "[", ":", ",", ":", ":", "plot_stride", ",", "...", "]", "\n", "", "num_frames", "=", "seq_real", ".", "shape", "[", "1", "]", "\n", "\n", "", "num_rows", "=", "num_samples", "\n", "num_cols", "=", "num_frames", "\n", "num_rows_s", "=", "2", "+", "num_instances", "\n", "\n", "figsize", "=", "(", "num_cols", "*", "1.5", ",", "num_rows", "*", "num_rows_s", "*", "1.60", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "figsize", ")", "\n", "\n", "gs", "=", "gridspec", ".", "GridSpec", "(", "num_rows", "+", "1", ",", "1", ",", "hspace", "=", "0.05", ",", "\n", "height_ratios", "=", "[", "1", "]", "*", "num_rows", "+", "[", "0.035", "]", ")", "\n", "\n", "value_range", "=", "batch_gen", ".", "decoder", ".", "value_range", "\n", "\n", "for", "s", "in", "range", "(", "num_samples", ")", ":", "\n", "        ", "gs_s", "=", "gridspec", ".", "GridSpecFromSubplotSpec", "(", "num_rows_s", ",", "num_cols", ",", "\n", "subplot_spec", "=", "gs", "[", "s", ",", "0", "]", ",", "wspace", "=", "0.05", ",", "hspace", "=", "0.05", ")", "\n", "for", "t", "in", "range", "(", "num_frames", ")", ":", "\n", "            ", "plt", ".", "subplot", "(", "gs_s", "[", "0", ",", "t", "]", ")", "\n", "plot_img", "(", "seq_real", "[", "s", ",", "t", ",", ":", ",", ":", ",", "0", "]", ",", "value_range", "=", "value_range", ")", "\n", "if", "t", "==", "0", ":", "\n", "                ", "plt", ".", "ylabel", "(", "\"Real\"", ",", "fontsize", "=", "16", ")", "\n", "plt", ".", "text", "(", "0.01", ",", "0.97", ",", "\"({})\"", ".", "format", "(", "ascii_lowercase", "[", "s", "]", ")", ",", "\n", "horizontalalignment", "=", "'left'", ",", "verticalalignment", "=", "'top'", ",", "\n", "transform", "=", "plt", ".", "gca", "(", ")", ".", "transAxes", ",", "fontsize", "=", "16", ")", "\n", "if", "s", "==", "0", ":", "\n", "                    ", "plt", ".", "title", "(", "\"Time \\u2192\"", ",", "fontsize", "=", "16", ")", "\n", "", "", "plt", ".", "subplot", "(", "gs_s", "[", "1", ",", "t", "]", ")", "\n", "plot_img", "(", "cond", "[", "s", ",", "t", ",", ":", ",", ":", ",", "0", "]", ",", "value_range", "=", "value_range", ")", "\n", "if", "t", "==", "0", ":", "\n", "                ", "plt", ".", "ylabel", "(", "\"Downs.\"", ",", "fontsize", "=", "16", ")", "\n", "", "for", "k", "in", "range", "(", "num_instances", ")", ":", "\n", "                ", "j", "=", "2", "+", "k", "\n", "plt", ".", "subplot", "(", "gs_s", "[", "j", ",", "t", "]", ")", "\n", "plot_img", "(", "seq_gen", "[", "k", "]", "[", "s", ",", "t", ",", ":", ",", ":", ",", "0", "]", ",", "value_range", "=", "value_range", ")", "\n", "if", "t", "==", "0", ":", "\n", "                    ", "plt", ".", "ylabel", "(", "\"Gen. #{}\"", ".", "format", "(", "k", "+", "1", ")", ",", "fontsize", "=", "16", ")", "\n", "\n", "", "", "", "", "if", "application", "==", "'mchrzc'", ":", "\n", "        ", "units", "=", "\"Rain rate [mm h$^{-1}$]\"", "\n", "cb_tick_loc", "=", "np", ".", "array", "(", "[", "-", "1", ",", "0", ",", "1", ",", "2", "]", ")", "\n", "cb_tick_labels", "=", "[", "0.1", ",", "1", ",", "10", ",", "100", "]", "\n", "", "elif", "application", "==", "'goescod'", ":", "\n", "        ", "units", "=", "\"Cloud optical thickness\"", "\n", "cb_tick_loc", "=", "np", ".", "log", "(", "[", "2", ",", "10", ",", "50", ",", "150", "]", ")", "\n", "cb_tick_labels", "=", "np", ".", "exp", "(", "cb_tick_loc", ")", ".", "round", "(", ")", ".", "astype", "(", "int", ")", "\n", "\n", "", "cax", "=", "plt", ".", "subplot", "(", "gs", "[", "-", "1", ",", "0", "]", ")", ".", "axes", "\n", "cb", "=", "colorbar", ".", "ColorbarBase", "(", "cax", ",", "norm", "=", "colors", ".", "Normalize", "(", "*", "value_range", ")", ",", "\n", "orientation", "=", "'horizontal'", ")", "\n", "cb", ".", "set_ticks", "(", "cb_tick_loc", ")", "\n", "cb", ".", "set_ticklabels", "(", "cb_tick_labels", ")", "\n", "cax", ".", "tick_params", "(", "labelsize", "=", "16", ")", "\n", "cb", ".", "set_label", "(", "units", ",", "size", "=", "16", ")", "\n", "\n", "if", "out_fn", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "out_fn", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_examples_mchrzc": [[302, 313], ["train.setup_gan", "gen.load_weights", "plots.plot_sequences_horiz", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_sequences_horiz"], ["", "", "def", "plot_examples_mchrzc", "(", "data_fn", ",", "weights_fn", ",", "plot_fn", ")", ":", "\n", "    ", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ",", "noise_shapes", ",", "\n", "steps_per_epoch", ")", "=", "train", ".", "setup_gan", "(", "data_fn", ",", "test_data_file", "=", "data_fn", ",", "\n", "sample_random", "=", "True", ",", "n_samples", "=", "1", ",", "application", "=", "'mchrzc'", ",", "\n", "random_seed", "=", "1234", ")", "\n", "gen", "=", "wgan", ".", "gen", "\n", "gen", ".", "load_weights", "(", "weights_fn", ")", "\n", "plot_sequences_horiz", "(", "gen", ",", "noise_shapes", ",", "batch_gen_test", ",", "samples", "=", "[", "0", ",", "21", ",", "15", "]", ",", "\n", "application", "=", "'mchrzc'", ",", "plot_stride", "=", "1", ")", "\n", "plt", ".", "savefig", "(", "plot_fn", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_examples_goescod": [[315, 326], ["train.setup_gan", "gen.load_weights", "plots.plot_sequences_horiz", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_sequences_horiz"], ["", "def", "plot_examples_goescod", "(", "data_fn", ",", "weights_fn", ",", "plot_fn", ")", ":", "\n", "    ", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ",", "noise_shapes", ",", "\n", "steps_per_epoch", ")", "=", "train", ".", "setup_gan", "(", "data_fn", ",", "test_data_file", "=", "data_fn", ",", "\n", "sample_random", "=", "True", ",", "n_samples", "=", "1", ",", "application", "=", "'goescod'", ",", "\n", "random_seed", "=", "1234", ")", "\n", "gen", "=", "wgan", ".", "gen", "\n", "gen", ".", "load_weights", "(", "weights_fn", ")", "\n", "plot_sequences_horiz", "(", "gen", ",", "noise_shapes", ",", "batch_gen_test", ",", "samples", "=", "[", "0", ",", "1", ",", "2", "]", ",", "\n", "application", "=", "'goescod'", ",", "plot_stride", "=", "1", ")", "\n", "plt", ".", "savefig", "(", "plot_fn", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_examples_mchrzc_random": [[328, 341], ["train.setup_gan", "gen.load_weights", "range", "plots.plot_sequences_horiz", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_sequences_horiz"], ["", "def", "plot_examples_mchrzc_random", "(", "data_fn", ",", "weights_fn", ",", "plot_dir", ",", "num_examples", "=", "16", ")", ":", "\n", "    ", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ",", "noise_shapes", ",", "\n", "steps_per_epoch", ")", "=", "train", ".", "setup_gan", "(", "data_fn", ",", "test_data_file", "=", "data_fn", ",", "\n", "sample_random", "=", "True", ",", "n_samples", "=", "1", ",", "application", "=", "'mchrzc'", ",", "\n", "random_seed", "=", "2345", ")", "\n", "gen", "=", "wgan", ".", "gen", "\n", "gen", ".", "load_weights", "(", "weights_fn", ")", "\n", "for", "k", "in", "range", "(", "num_examples", ")", ":", "\n", "        ", "plot_fn", "=", "plot_dir", "+", "\"/examples-mchrzc-random-{:02d}.pdf\"", ".", "format", "(", "k", ")", "\n", "plot_sequences_horiz", "(", "gen", ",", "noise_shapes", ",", "batch_gen_test", ",", "samples", "=", "[", "k", "]", ",", "\n", "application", "=", "'mchrzc'", ",", "plot_stride", "=", "1", ",", "num_instances", "=", "12", ")", "\n", "plt", ".", "savefig", "(", "plot_fn", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_examples_goescod_random": [[343, 356], ["train.setup_gan", "gen.load_weights", "range", "plots.plot_sequences_horiz", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_sequences_horiz"], ["", "", "def", "plot_examples_goescod_random", "(", "data_fn", ",", "weights_fn", ",", "plot_dir", ",", "num_examples", "=", "16", ")", ":", "\n", "    ", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ",", "noise_shapes", ",", "\n", "steps_per_epoch", ")", "=", "train", ".", "setup_gan", "(", "data_fn", ",", "test_data_file", "=", "data_fn", ",", "\n", "sample_random", "=", "True", ",", "n_samples", "=", "1", ",", "application", "=", "'goescod'", ",", "\n", "random_seed", "=", "2345", ")", "\n", "gen", "=", "wgan", ".", "gen", "\n", "gen", ".", "load_weights", "(", "weights_fn", ")", "\n", "for", "k", "in", "range", "(", "num_examples", ")", ":", "\n", "        ", "plot_fn", "=", "plot_dir", "+", "\"/examples-goescod-random-{:02d}.pdf\"", ".", "format", "(", "k", ")", "\n", "plot_sequences_horiz", "(", "gen", ",", "noise_shapes", ",", "batch_gen_test", ",", "samples", "=", "[", "k", "]", ",", "\n", "application", "=", "'goescod'", ",", "plot_stride", "=", "1", ",", "num_instances", "=", "12", ")", "\n", "plt", ".", "savefig", "(", "plot_fn", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_video_frame": [[358, 445], ["matplotlib.pyplot.figure", "int", "numpy.zeros", "numpy.zeros", "range", "matplotlib.colors.ListedColormap", "shapefile.Reader", "list", "matplotlib.pyplot.subplot", "plots.plot_img", "matplotlib.pyplot.imshow", "plots.plot_video_frame.draw_border"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_img"], ["", "", "def", "plot_video_frame", "(", "img_real", ",", "img_ds", ",", "img_gen", ",", "oob_mask", ",", "time", ",", "num_ensemble", "=", "4", ")", ":", "\n", "    ", "assert", "(", "num_ensemble", "in", "{", "1", ",", "4", "}", ")", "\n", "\n", "img_shape", "=", "img_real", ".", "shape", "\n", "\n", "if", "num_ensemble", "==", "1", ":", "\n", "        ", "figsize", "=", "(", "img_shape", "[", "1", "]", "/", "img_shape", "[", "0", "]", "*", "3", "*", "4", ",", "4", ")", "\n", "gs", "=", "gridspec", ".", "GridSpec", "(", "1", ",", "3", ",", "hspace", "=", "0.05", ",", "wspace", "=", "0.05", ")", "\n", "", "elif", "num_ensemble", "==", "4", ":", "\n", "        ", "figsize", "=", "(", "img_shape", "[", "1", "]", "/", "img_shape", "[", "0", "]", "*", "3", "*", "4", ",", "2", "*", "4", ")", "\n", "gs", "=", "gridspec", ".", "GridSpec", "(", "2", ",", "3", ",", "hspace", "=", "0.05", ",", "wspace", "=", "0.05", ")", "\n", "\n", "", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "figsize", ",", "dpi", "=", "210", ")", "\n", "ds_factor", "=", "int", "(", "round", "(", "(", "img_gen", ".", "shape", "[", "0", "]", "/", "img_ds", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "\n", "oob_mask_ds", "=", "np", ".", "zeros", "(", "img_ds", ".", "shape", ",", "dtype", "=", "bool", ")", "\n", "oob_mask_gen", "=", "np", ".", "zeros", "(", "img_gen", "[", ":", ",", ":", ",", "0", "]", ".", "shape", ",", "dtype", "=", "bool", ")", "\n", "for", "i_ds", "in", "range", "(", "oob_mask_ds", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "for", "j_ds", "in", "range", "(", "oob_mask_ds", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "i0", "=", "i_ds", "*", "ds_factor", "\n", "j0", "=", "j_ds", "*", "ds_factor", "\n", "i1", "=", "i0", "+", "ds_factor", "\n", "j1", "=", "j0", "+", "ds_factor", "\n", "oob_mask_ds", "[", "i_ds", ",", "j_ds", "]", "=", "oob_mask", "[", "i0", ":", "i1", ",", "j0", ":", "j1", "]", ".", "any", "(", ")", "\n", "oob_mask_gen", "[", "i0", ":", "i1", ",", "j0", ":", "j1", "]", "=", "oob_mask_ds", "[", "i_ds", ",", "j_ds", "]", "\n", "", "", "cmap_mask", "=", "colors", ".", "ListedColormap", "(", "[", "\n", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "[", "0.75", ",", "0.75", ",", "0.75", ",", "1.0", "]", "\n", "]", ")", "\n", "\n", "import", "shapefile", "\n", "border", "=", "shapefile", ".", "Reader", "(", "\"../data/Border_CH.shp\"", ")", "\n", "shapes", "=", "list", "(", "border", ".", "shapeRecords", "(", ")", ")", "\n", "def", "draw_border", "(", ")", ":", "\n", "        ", "for", "shape", "in", "shapes", ":", "\n", "            ", "x", "=", "[", "i", "[", "0", "]", "/", "1000.", "for", "i", "in", "shape", ".", "shape", ".", "points", "[", ":", "]", "]", "\n", "y", "=", "[", "i", "[", "1", "]", "/", "1000.", "for", "i", "in", "shape", ".", "shape", ".", "points", "[", ":", "]", "]", "\n", "plt", ".", "plot", "(", "x", ",", "y", ",", "'k'", ",", "linewidth", "=", "1.0", ")", "\n", "", "", "extent_real", "=", "[", "254.5", ",", "965.5", ",", "-", "159.5", ",", "480.5", "]", "\n", "extent_gen", "=", "[", "254.5", ",", "959.5", ",", "-", "159.5", ",", "480.5", "]", "\n", "\n", "plt", ".", "subplot", "(", "gs", "[", "0", ",", "0", "]", ")", "\n", "plot_img", "(", "img_real", ",", "extent", "=", "extent_real", ")", "\n", "plt", ".", "imshow", "(", "oob_mask", ".", "astype", "(", "int", ")", ",", "cmap", "=", "cmap_mask", ",", "extent", "=", "extent_real", ")", "\n", "draw_border", "(", ")", "\n", "plt", ".", "gca", "(", ")", ".", "set_xlim", "(", "(", "extent_real", "[", "0", "]", ",", "extent_real", "[", "1", "]", ")", ")", "\n", "plt", ".", "gca", "(", ")", ".", "set_ylim", "(", "(", "extent_real", "[", "2", "]", ",", "extent_real", "[", "3", "]", ")", ")", "\n", "plt", ".", "title", "(", "\"Real\"", ",", "fontsize", "=", "14", ")", "\n", "\n", "if", "num_ensemble", "==", "1", ":", "\n", "        ", "gs_ds", "=", "gs", "[", "0", ",", "1", "]", "\n", "", "elif", "num_ensemble", "==", "4", ":", "\n", "        ", "gs_ds", "=", "gs", "[", "1", ",", "0", "]", "\n", "", "plt", ".", "subplot", "(", "gs_ds", ")", "\n", "plot_img", "(", "img_ds", ",", "extent", "=", "extent_gen", ")", "\n", "plt", ".", "imshow", "(", "oob_mask_ds", ".", "astype", "(", "int", ")", ",", "cmap", "=", "cmap_mask", ",", "extent", "=", "extent_gen", ")", "\n", "draw_border", "(", ")", "\n", "plt", ".", "gca", "(", ")", ".", "set_xlim", "(", "(", "extent_real", "[", "0", "]", ",", "extent_real", "[", "1", "]", ")", ")", "\n", "plt", ".", "gca", "(", ")", ".", "set_ylim", "(", "(", "extent_real", "[", "2", "]", ",", "extent_real", "[", "3", "]", ")", ")", "\n", "\n", "if", "num_ensemble", "==", "1", ":", "\n", "        ", "plt", ".", "title", "(", "time", ".", "strftime", "(", "\"%Y-%m-%d %H:%M UTC\"", ")", "+", "\"\\n\\nDownsampled\"", ",", "fontsize", "=", "14", ")", "\n", "", "elif", "num_ensemble", "==", "4", ":", "\n", "        ", "plt", ".", "xlabel", "(", "\"Downsampled\"", ",", "fontsize", "=", "14", ")", "\n", "\n", "", "if", "num_ensemble", "==", "1", ":", "\n", "        ", "gs_list", "=", "[", "gs", "[", "0", ",", "2", "]", "]", "\n", "", "elif", "num_ensemble", "==", "4", ":", "\n", "        ", "gs_list", "=", "[", "gs", "[", "0", ",", "1", "]", ",", "gs", "[", "0", ",", "2", "]", ",", "gs", "[", "1", ",", "1", "]", ",", "gs", "[", "1", ",", "2", "]", "]", "\n", "", "for", "(", "k", ",", "g", ")", "in", "enumerate", "(", "gs_list", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "g", ")", "\n", "plot_img", "(", "img_gen", "[", ":", ",", ":", ",", "k", "]", ",", "extent", "=", "extent_gen", ")", "\n", "plt", ".", "imshow", "(", "oob_mask_gen", ".", "astype", "(", "int", ")", ",", "cmap", "=", "cmap_mask", ",", "extent", "=", "extent_gen", ")", "\n", "draw_border", "(", ")", "\n", "plt", ".", "gca", "(", ")", ".", "set_xlim", "(", "(", "extent_real", "[", "0", "]", ",", "extent_real", "[", "1", "]", ")", ")", "\n", "plt", ".", "gca", "(", ")", ".", "set_ylim", "(", "(", "extent_real", "[", "2", "]", ",", "extent_real", "[", "3", "]", ")", ")", "\n", "\n", "if", "num_ensemble", "==", "1", ":", "\n", "            ", "plt", ".", "title", "(", "\"Reconstructed\"", ",", "fontsize", "=", "14", ")", "\n", "", "elif", "num_ensemble", "==", "4", ":", "\n", "            ", "if", "k", "==", "1", ":", "\n", "                ", "plt", ".", "title", "(", "\"Generated #{}\"", ".", "format", "(", "k", "+", "1", ")", ",", "fontsize", "=", "14", ")", "\n", "", "elif", "k", "==", "0", ":", "\n", "                ", "plt", ".", "title", "(", "time", ".", "strftime", "(", "\"%Y-%m-%d %H:%M UTC\"", ")", "+", "\n", "\"\\n\\nGenerated#{}\"", ".", "format", "(", "k", "+", "1", ")", ",", "fontsize", "=", "14", ")", "\n", "", "else", ":", "\n", "                ", "plt", ".", "xlabel", "(", "\"Generated #{}\"", ".", "format", "(", "k", "+", "1", ")", ",", "fontsize", "=", "14", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_video_frames_all": [[448, 506], ["data.Smoothener", "data.RainRateDecoder", "ValueError", "os.path.exists", "os.mkdir", "data.RainRateDecoder.", "dec.reshape", "data.Smoothener.smoothen", "data.RainRateDecoder.", "netCDF4.Dataset", "numpy.array", "netCDF4.Dataset", "bisect.bisect_left", "range", "numpy.log10", "float", "print", "numpy.array", "plots.plot_video_frames_all.decode_real"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.Smoothener.smoothen"], ["", "", "", "", "def", "plot_video_frames_all", "(", "images_fn", ",", "gen_fn", ",", "out_dir", ",", "\n", "format", "=", "\"png\"", ",", "application", "=", "\"mchrzc\"", ",", "time_range", "=", "None", ",", "\n", "scaling_fn", "=", "path", "+", "\"/../data/scale_rzc.npy\"", ",", "num_ensemble", "=", "4", ")", ":", "\n", "\n", "    ", "if", "application", "==", "\"mchrzc\"", ":", "\n", "        ", "dec", "=", "data", ".", "RainRateDecoder", "(", "scaling_fn", ",", "below_val", "=", "np", ".", "log10", "(", "0.025", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown application.\"", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "out_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "out_dir", ")", "\n", "\n", "", "smoothener", "=", "data", ".", "Smoothener", "(", ")", "\n", "\n", "# To get a proper comparison of real and generated fields we must", "\n", "# apply the same kind of preprocessing as we do when training the GAN", "\n", "def", "decode_real", "(", "x", ")", ":", "\n", "        ", "oob_mask", "=", "(", "x", "==", "0", ")", "\n", "nan_mask", "=", "(", "x", "==", "1", ")", "\n", "x", "=", "dec", "(", "x", ")", "\n", "x", "[", "nan_mask", "|", "oob_mask", "]", "=", "dec", ".", "below_val", "\n", "x", "=", "x", ".", "reshape", "(", "(", "1", ",", "1", ")", "+", "img_real", ".", "shape", "+", "(", "1", ",", ")", ")", "\n", "x", "=", "smoothener", ".", "smoothen", "(", "x", ")", "\n", "x", "=", "x", "[", "0", ",", "0", ",", ":", ",", ":", ",", "0", "]", "\n", "x", "[", "x", "<", "dec", ".", "value_range", "[", "0", "]", "]", "=", "np", ".", "nan", "\n", "return", "(", "x", ",", "oob_mask", ")", "\n", "\n", "", "def", "decode", "(", "x", ")", ":", "\n", "        ", "oob_mask", "=", "(", "x", "==", "0", ")", "\n", "nan_mask", "=", "(", "x", "==", "1", ")", "\n", "x", "=", "dec", "(", "x", ")", "\n", "x", "[", "nan_mask", "|", "oob_mask", "]", "=", "np", ".", "nan", "\n", "return", "x", "\n", "\n", "", "with", "netCDF4", ".", "Dataset", "(", "images_fn", ",", "'r'", ")", "as", "ds_images", ":", "\n", "        ", "time_real", "=", "np", ".", "array", "(", "ds_images", "[", "\"time\"", "]", "[", ":", "]", ",", "copy", "=", "False", ")", "\n", "with", "netCDF4", ".", "Dataset", "(", "gen_fn", ",", "'r'", ")", "as", "ds_gen", ":", "\n", "            ", "t0", "=", "ds_gen", "[", "\"time\"", "]", "[", "0", "]", "\n", "k0", "=", "bisect_left", "(", "time_real", ",", "t0", ")", "\n", "\n", "N", "=", "ds_gen", "[", "\"images\"", "]", ".", "shape", "[", "0", "]", "\n", "for", "k", "in", "range", "(", "k0", ",", "k0", "+", "ds_gen", "[", "\"images\"", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "time", "=", "float", "(", "ds_images", "[", "\"time\"", "]", "[", "k", "]", ")", "\n", "time", "=", "datetime", "(", "1970", ",", "1", ",", "1", ")", "+", "timedelta", "(", "seconds", "=", "time", ")", "\n", "if", "time_range", "is", "not", "None", ":", "\n", "                    ", "if", "not", "(", "time_range", "[", "0", "]", "<=", "time", "<", "time_range", "[", "1", "]", ")", ":", "\n", "                        ", "continue", "\n", "", "", "print", "(", "k", ")", "\n", "img_real", "=", "np", ".", "array", "(", "ds_images", "[", "\"images\"", "]", "[", "k", ",", ":", ",", ":", ",", "0", "]", ",", "copy", "=", "False", ")", "\n", "(", "img_real", ",", "oob_mask", ")", "=", "decode_real", "(", "img_real", ")", "\n", "img_ds", "=", "decode", "(", "np", ".", "array", "(", "ds_gen", "[", "\"images_ds\"", "]", "[", "k", "-", "k0", ",", ":", ",", ":", ",", "0", "]", ",", "copy", "=", "False", ")", ")", "\n", "img_gen", "=", "decode", "(", "np", ".", "array", "(", "ds_gen", "[", "\"images\"", "]", "[", "k", "-", "k0", ",", ":", ",", ":", ",", "0", ",", ":", "]", ",", "copy", "=", "False", ")", ")", "\n", "\n", "plot_video_frame", "(", "img_real", ",", "img_ds", ",", "img_gen", ",", "\n", "oob_mask", ",", "time", ",", "num_ensemble", "=", "num_ensemble", ")", "\n", "out_fn", "=", "\"{}/frame-{:05d}.{}\"", ".", "format", "(", "out_dir", ",", "k", ",", "format", ")", "\n", "plt", ".", "savefig", "(", "out_fn", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_histogram": [[508, 518], ["numpy.linspace", "numpy.hstack", "numpy.histogram", "ax.plot", "h.sum"], "function", ["None"], ["", "", "", "", "def", "plot_rank_histogram", "(", "ax", ",", "ranks", ",", "N_ranks", "=", "101", ",", "**", "plot_params", ")", ":", "\n", "\n", "    ", "bc", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "N_ranks", ")", "\n", "db", "=", "(", "bc", "[", "1", "]", "-", "bc", "[", "0", "]", ")", "\n", "bins", "=", "bc", "-", "db", "/", "2", "\n", "bins", "=", "np", ".", "hstack", "(", "(", "bins", ",", "bins", "[", "-", "1", "]", "+", "db", ")", ")", "\n", "(", "h", ",", "_", ")", "=", "np", ".", "histogram", "(", "ranks", ",", "bins", "=", "bins", ")", "\n", "h", "=", "h", "/", "h", ".", "sum", "(", ")", "\n", "\n", "ax", ".", "plot", "(", "bc", ",", "h", ",", "**", "plot_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_cdf": [[520, 531], ["numpy.linspace", "numpy.hstack", "numpy.histogram", "h.cumsum.cumsum", "ax.plot"], "function", ["None"], ["", "def", "plot_rank_cdf", "(", "ax", ",", "ranks", ",", "N_ranks", "=", "101", ",", "**", "plot_params", ")", ":", "\n", "\n", "    ", "bc", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "N_ranks", ")", "\n", "db", "=", "(", "bc", "[", "1", "]", "-", "bc", "[", "0", "]", ")", "\n", "bins", "=", "bc", "-", "db", "/", "2", "\n", "bins", "=", "np", ".", "hstack", "(", "(", "bins", ",", "bins", "[", "-", "1", "]", "+", "db", ")", ")", "\n", "(", "h", ",", "_", ")", "=", "np", ".", "histogram", "(", "ranks", ",", "bins", "=", "bins", ")", "\n", "h", "=", "h", ".", "cumsum", "(", ")", "\n", "h", "=", "h", "/", "h", "[", "-", "1", "]", "\n", "\n", "ax", ".", "plot", "(", "bc", ",", "h", ",", "**", "plot_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_histogram_all": [[533, 577], ["matplotlib.pyplot.subplots", "matplotlib.pyplot.subplots_adjust", "zip", "numpy.linspace", "axes[].plot", "axes[].set_ylabel", "axes[].get_ylim", "axes[].set_ylim", "axes[].set_xlim", "axes[].text", "zip", "axes[].plot", "axes[].set_ylabel", "axes[].set_xlabel", "axes[].set_ylim", "axes[].set_xlim", "axes[].text", "axes[].legend", "plots.plot_rank_histogram", "plots.plot_rank_histogram", "plots.plot_rank_cdf", "plots.plot_rank_cdf", "numpy.load", "numpy.load", "len", "numpy.load", "numpy.load", "f[].item", "f[].item"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_histogram", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_histogram", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_cdf", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_cdf", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.load", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.load", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.load", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.load"], ["", "def", "plot_rank_histogram_all", "(", "rank_files", ",", "labels", ",", "N_ranks", "=", "101", ")", ":", "\n", "    ", "(", "fig", ",", "axes", ")", "=", "plt", ".", "subplots", "(", "2", ",", "1", ",", "sharex", "=", "True", ",", "figsize", "=", "(", "6", ",", "3", ")", ")", "\n", "plt", ".", "subplots_adjust", "(", "hspace", "=", "0.15", ")", "\n", "\n", "linestyles", "=", "[", "\"-\"", ",", "\"--\"", "]", "\n", "colors", "=", "[", "\"C0\"", ",", "\"C1\"", "]", "\n", "\n", "for", "(", "(", "fn_valid", ",", "fn_test", ")", ",", "label", ",", "ls", ",", "c", ")", "in", "zip", "(", "rank_files", ",", "labels", ",", "linestyles", ",", "colors", ")", ":", "\n", "        ", "with", "np", ".", "load", "(", "fn_test", ",", "allow_pickle", "=", "True", ")", "as", "f", ":", "\n", "            ", "ranks", "=", "f", "[", "'arr_0'", "]", ".", "item", "(", ")", "[", "'ranks'", "]", "\n", "", "plot_rank_histogram", "(", "axes", "[", "0", "]", ",", "ranks", ",", "N_ranks", "=", "N_ranks", ",", "\n", "label", "=", "label", ",", "linestyle", "=", "ls", ",", "linewidth", "=", "2", ",", "c", "=", "c", ",", "alpha", "=", "0.7", ",", "zorder", "=", "1", ")", "\n", "with", "np", ".", "load", "(", "fn_valid", ")", "as", "f", ":", "\n", "            ", "ranks", "=", "f", "[", "'arr_0'", "]", "\n", "", "plot_rank_histogram", "(", "axes", "[", "0", "]", ",", "ranks", ",", "N_ranks", "=", "N_ranks", ",", "\n", "label", "=", "None", ",", "linestyle", "=", "ls", ",", "linewidth", "=", "0.75", ",", "c", "=", "c", ",", "zorder", "=", "2", ")", "\n", "", "bc", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "N_ranks", ")", "\n", "axes", "[", "0", "]", ".", "plot", "(", "bc", ",", "[", "1.", "/", "N_ranks", "]", "*", "len", "(", "bc", ")", ",", "linestyle", "=", "':'", ",", "label", "=", "\"Uniform\"", ",", "c", "=", "'C2'", ",", "zorder", "=", "0", ")", "\n", "axes", "[", "0", "]", ".", "set_ylabel", "(", "\"Norm. occurrence\"", ")", "\n", "ylim", "=", "axes", "[", "0", "]", ".", "get_ylim", "(", ")", "\n", "axes", "[", "0", "]", ".", "set_ylim", "(", "(", "0", ",", "ylim", "[", "1", "]", ")", ")", "\n", "axes", "[", "0", "]", ".", "set_xlim", "(", "(", "0", ",", "1", ")", ")", "\n", "axes", "[", "0", "]", ".", "text", "(", "0.01", ",", "0.97", ",", "\"(a)\"", ",", "\n", "horizontalalignment", "=", "'left'", ",", "verticalalignment", "=", "'top'", ",", "\n", "transform", "=", "axes", "[", "0", "]", ".", "transAxes", ")", "\n", "\n", "for", "(", "(", "fn_valid", ",", "fn_test", ")", ",", "label", ",", "ls", ",", "c", ")", "in", "zip", "(", "rank_files", ",", "labels", ",", "linestyles", ",", "colors", ")", ":", "\n", "        ", "with", "np", ".", "load", "(", "fn_test", ",", "allow_pickle", "=", "True", ")", "as", "f", ":", "\n", "            ", "ranks", "=", "f", "[", "'arr_0'", "]", ".", "item", "(", ")", "[", "'ranks'", "]", "\n", "", "plot_rank_cdf", "(", "axes", "[", "1", "]", ",", "ranks", ",", "N_ranks", "=", "N_ranks", ",", "\n", "label", "=", "label", ",", "linestyle", "=", "ls", ",", "linewidth", "=", "2", ",", "c", "=", "c", ",", "alpha", "=", "0.7", ",", "zorder", "=", "1", ")", "\n", "with", "np", ".", "load", "(", "fn_valid", ")", "as", "f", ":", "\n", "            ", "ranks", "=", "f", "[", "'arr_0'", "]", "\n", "", "plot_rank_cdf", "(", "axes", "[", "1", "]", ",", "ranks", ",", "N_ranks", "=", "N_ranks", ",", "\n", "label", "=", "None", ",", "linestyle", "=", "ls", ",", "linewidth", "=", "0.75", ",", "c", "=", "c", ",", "zorder", "=", "2", ")", "\n", "", "axes", "[", "1", "]", ".", "plot", "(", "bc", ",", "bc", ",", "linestyle", "=", "':'", ",", "label", "=", "\"Uniform\"", ",", "c", "=", "'C2'", ",", "zorder", "=", "0", ")", "\n", "axes", "[", "1", "]", ".", "set_ylabel", "(", "\"CDF\"", ")", "\n", "axes", "[", "1", "]", ".", "set_xlabel", "(", "\"Normalized rank\"", ")", "\n", "axes", "[", "1", "]", ".", "set_ylim", "(", "0", ",", "1", ")", "\n", "axes", "[", "1", "]", ".", "set_xlim", "(", "(", "0", ",", "1", ")", ")", "\n", "axes", "[", "1", "]", ".", "text", "(", "0.01", ",", "0.97", ",", "\"(b)\"", ",", "\n", "horizontalalignment", "=", "'left'", ",", "verticalalignment", "=", "'top'", ",", "\n", "transform", "=", "axes", "[", "1", "]", ".", "transAxes", ")", "\n", "axes", "[", "1", "]", ".", "legend", "(", "loc", "=", "'lower right'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_all": [[579, 650], ["plots.plot_examples_mchrzc", "gc.collect", "plots.plot_examples_mchrzc_random", "gc.collect", "plots.plot_examples_goescod", "gc.collect", "plots.plot_examples_goescod_random", "gc.collect", "plots.plot_quality_metrics_by_samples_multiple", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "plots.plot_rank_metrics_by_samples_multiple", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "plots.plot_rank_histogram_all", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "plots.plot_comparison", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_examples_mchrzc", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_examples_mchrzc_random", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_examples_goescod", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_examples_goescod_random", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_quality_metrics_by_samples_multiple", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_metrics_by_samples_multiple", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_rank_histogram_all", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_comparison"], ["", "def", "plot_all", "(", "\n", "mchrzc_data_fn", ",", "\n", "goescod_data_fn", ",", "\n", "figs_dir", "=", "\"../figures/\"", ",", "\n", "mchrzc_gen_weights_fn", "=", "\"../models/gen_weights-mchrzc-0361600.h5\"", ",", "\n", "goescod_gen_weights_fn", "=", "\"../models/gen_weights-goescod-0371200.h5\"", ",", "\n", "mchrzc_quality_metrics_fn", "=", "\"../data/quality_metrics_by_time-mchrzc.txt\"", ",", "\n", "goescod_quality_metrics_fn", "=", "\"../data/quality_metrics_by_time-goescod.txt\"", ",", "\n", "mchrzc_rank_metrics_fn", "=", "\"../data/rank_metrics_by_time-mchrzc.txt\"", ",", "\n", "goescod_rank_metrics_fn", "=", "\"../data/rank_metrics_by_time-goescod.txt\"", ",", "\n", "mchrzc_rank_samples_valid_fn", "=", "\"../data/ranks-mchrzc-361600-valid.npz\"", ",", "\n", "mchrzc_rank_samples_test_fn", "=", "\"../data/ranks-mchrzc-361600-test.npz\"", ",", "\n", "goescod_rank_samples_valid_fn", "=", "\"../data/ranks-goescod-371200-valid.npz\"", ",", "\n", "goescod_rank_samples_test_fn", "=", "\"../data/ranks-goescod-371200-test.npz\"", "\n", ")", ":", "\n", "\n", "    ", "plot_examples_mchrzc", "(", "\n", "mchrzc_data_fn", ",", "\n", "mchrzc_gen_weights_fn", ",", "\n", "\"{}/examples-mchrzc.pdf\"", ".", "format", "(", "figs_dir", ")", "\n", ")", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "plot_examples_mchrzc_random", "(", "\n", "mchrzc_data_fn", ",", "mchrzc_gen_weights_fn", ",", "figs_dir", "\n", ")", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "plot_examples_goescod", "(", "\n", "goescod_data_fn", ",", "\n", "goescod_gen_weights_fn", ",", "\n", "\"{}/examples-goescod.pdf\"", ".", "format", "(", "figs_dir", ")", "\n", ")", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "plot_examples_goescod_random", "(", "\n", "goescod_data_fn", ",", "goescod_gen_weights_fn", ",", "figs_dir", "\n", ")", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "plot_quality_metrics_by_samples_multiple", "(", "\n", "[", "mchrzc_quality_metrics_fn", ",", "goescod_quality_metrics_fn", "]", ",", "\n", "[", "mchrzc_rank_metrics_fn", ",", "goescod_rank_metrics_fn", "]", "\n", ")", "\n", "plt", ".", "savefig", "(", "\"{}/quality-metrics-time.pdf\"", ".", "format", "(", "figs_dir", ")", ",", "\n", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "plot_rank_metrics_by_samples_multiple", "(", "\n", "[", "mchrzc_rank_metrics_fn", ",", "goescod_rank_metrics_fn", "]", "\n", ")", "\n", "plt", ".", "savefig", "(", "\"{}/rank-metrics-time.pdf\"", ".", "format", "(", "figs_dir", ")", ",", "\n", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "plot_rank_histogram_all", "(", "\n", "[", "\n", "(", "mchrzc_rank_samples_valid_fn", ",", "mchrzc_rank_samples_test_fn", ")", ",", "\n", "(", "goescod_rank_samples_valid_fn", ",", "goescod_rank_samples_test_fn", ")", ",", "\n", "]", ",", "\n", "[", "\"MCH-RZC\"", ",", "\"GOES-COT\"", "]", "\n", ")", "\n", "plt", ".", "savefig", "(", "\"{}/rank-distribution.pdf\"", ".", "format", "(", "figs_dir", ")", ",", "\n", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "plots", ".", "plot_comparison", "(", "\"/data/nowgan/test-samples-2017-128x128.nc\"", ",", "\n", "\"../models/gen_weights-mchrzc-0361600.h5\"", ",", "\n", "\"../models/gen_det_weights-mse.h5\"", ",", "random_seed", "=", "16", ")", "\n", "plt", ".", "savefig", "(", "\"../figures/comparison.pdf\"", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.resize_lanczos": [[652, 654], ["numpy.array", "Image.fromarray().resize", "Image.fromarray"], "function", ["None"], ["", "def", "resize_lanczos", "(", "img", ",", "size", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "Image", ".", "fromarray", "(", "img", ")", ".", "resize", "(", "size", ",", "resample", "=", "Image", ".", "LANCZOS", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_comparison": [[656, 729], ["train.setup_batch_gen", "tuple", "numpy.array", "models.generator", "models.initial_state_model", "models.generator_initialized", "models.generator_deterministic", "gen_gan.load_weights", "gen_gan.predict", "models.generator_deterministic.load_weights", "models.generator_deterministic.predict", "batch_gen.decoder.denormalize", "batch_gen.decoder.denormalize", "batch_gen.decoder.denormalize", "batch_gen.decoder.denormalize", "batch_gen.decoder.denormalize", "rainfarm.get_alpha_seq", "print", "numpy.log10", "len", "matplotlib.pyplot.figure", "matplotlib.gridspec.GridSpec", "range", "gc.collect", "next", "numpy.random.randn", "rainfarm.rainfarm_downscale", "range", "plots.resize_lanczos", "noise_shapes", "matplotlib.pyplot.subplot", "plots.plot_img", "numpy.isfinite", "numpy.isfinite", "matplotlib.pyplot.ylabel"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_batch_gen", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.initial_state_model", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator_initialized", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator_deterministic", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorRainFARM.predict", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorRainFARM.predict", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.get_alpha_seq", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.rainfarm_downscale", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.resize_lanczos", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_img"], ["", "def", "plot_comparison", "(", "test_data_file", ",", "gen_gan_weights", ",", "gen_det_mse_weights", ",", "\n", "application", "=", "\"mchrzc\"", ",", "random_seed", "=", "None", ")", ":", "\n", "\n", "    ", "(", "_", ",", "_", ",", "batch_gen", ")", "=", "train", ".", "setup_batch_gen", "(", "\n", "test_data_file", ",", "test_data_file", "=", "test_data_file", ",", "\n", "application", "=", "application", ",", "random_seed", "=", "random_seed", ",", "\n", "batch_size", "=", "1", "\n", ")", "\n", "\n", "old_batch_size", "=", "batch_gen", ".", "batch_size", "\n", "try", ":", "\n", "        ", "batch_gen", ".", "batch_size", "=", "1", "\n", "(", "seq_real", ",", "cond", ")", "=", "next", "(", "batch_gen", ")", "\n", "", "finally", ":", "\n", "        ", "batch_gen", ".", "batch_size", "=", "old_batch_size", "\n", "\n", "", "size", "=", "tuple", "(", "seq_real", ".", "shape", "[", "2", ":", "4", "]", ")", "\n", "seq_lanczos", "=", "np", ".", "array", "(", "[", "resize_lanczos", "(", "x", ",", "size", ")", "for", "x", "in", "cond", "[", "0", ",", "...", ",", "0", "]", "]", ")", "\n", "\n", "(", "gen", ",", "_", ")", "=", "models", ".", "generator", "(", ")", "\n", "init_model", "=", "models", ".", "initial_state_model", "(", ")", "\n", "(", "gen_gan", ",", "noise_shapes", ")", "=", "models", ".", "generator_initialized", "(", "\n", "gen", ",", "init_model", ")", "\n", "gen_det", "=", "models", ".", "generator_deterministic", "(", "gen_gan", ")", "\n", "\n", "noise", "=", "[", "np", ".", "random", ".", "randn", "(", "*", "(", "(", "1", ",", ")", "+", "s", ")", ")", "for", "s", "in", "noise_shapes", "(", "size", ")", "]", "\n", "gen_gan", ".", "load_weights", "(", "gen_gan_weights", ")", "\n", "seq_gan", "=", "gen_gan", ".", "predict", "(", "[", "cond", "]", "+", "noise", ")", "\n", "gen_det", ".", "load_weights", "(", "gen_det_mse_weights", ")", "\n", "seq_mse", "=", "gen_det", ".", "predict", "(", "cond", ")", "\n", "\n", "seq_real", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "seq_real", ")", "\n", "cond", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "cond", ")", "\n", "seq_lanczos", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "seq_lanczos", ")", "\n", "seq_mse", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "seq_mse", ")", "\n", "seq_gan", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "seq_gan", ")", "\n", "\n", "import", "rainfarm", "\n", "P", "=", "10", "**", "cond", "\n", "P", "[", "~", "np", ".", "isfinite", "(", "P", ")", "]", "=", "0", "\n", "alpha", "=", "rainfarm", ".", "get_alpha_seq", "(", "P", "[", "0", ",", "...", ",", "0", "]", ")", "\n", "print", "(", "alpha", ")", "\n", "r", "=", "[", "rainfarm", ".", "rainfarm_downscale", "(", "p", ",", "alpha", "=", "alpha", ",", "threshold", "=", "0.1", ")", "\n", "for", "p", "in", "P", "[", "0", ",", "...", ",", "0", "]", "]", "\n", "log_r", "=", "np", ".", "log10", "(", "r", ")", "\n", "log_r", "[", "~", "np", ".", "isfinite", "(", "log_r", ")", "]", "=", "np", ".", "nan", "\n", "\n", "sequences", "=", "[", "\n", "seq_real", "[", "0", ",", "...", ",", "0", "]", ",", "\n", "cond", "[", "0", ",", "...", ",", "0", "]", ",", "\n", "seq_lanczos", ",", "\n", "seq_mse", "[", "0", ",", "...", ",", "0", "]", ",", "\n", "log_r", ",", "\n", "seq_gan", "[", "0", ",", "...", ",", "0", "]", "\n", "]", "\n", "labels", "=", "[", "\n", "\"Real\"", ",", "\"Downsampled\"", ",", "\"Lanczos\"", ",", "\"Det. RCNN\"", ",", "\"RainFARM\"", ",", "\"GAN\"", "\n", "]", "\n", "\n", "num_cols", "=", "seq_real", ".", "shape", "[", "1", "]", "\n", "num_rows", "=", "len", "(", "sequences", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "1.5", "*", "num_cols", ",", "1.5", "*", "num_rows", ")", ")", "\n", "\n", "gs", "=", "gridspec", ".", "GridSpec", "(", "num_rows", ",", "num_cols", ",", "wspace", "=", "0.05", ",", "hspace", "=", "0.05", ")", "\n", "\n", "for", "k", "in", "range", "(", "seq_real", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "num_rows", ")", ":", "\n", "            ", "plt", ".", "subplot", "(", "gs", "[", "i", ",", "k", "]", ")", "\n", "plot_img", "(", "sequences", "[", "i", "]", "[", "k", ",", ":", ",", ":", "]", ")", "\n", "if", "k", "==", "0", ":", "\n", "                ", "plt", ".", "ylabel", "(", "labels", "[", "i", "]", ")", "\n", "\n", "", "", "", "gc", ".", "collect", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.noise.NoiseGenerator.__init__": [[5, 9], ["numpy.random.RandomState"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "noise_shapes", ",", "batch_size", "=", "32", ",", "random_seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "noise_shapes", "=", "noise_shapes", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "prng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", "=", "random_seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.noise.NoiseGenerator.__call__": [[10, 23], ["noise.NoiseGenerator.prng.randn().astype", "noise.NoiseGenerator.__call__.noise"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "mean", "=", "0.0", ",", "std", "=", "1.0", ")", ":", "\n", "\n", "        ", "def", "noise", "(", "shape", ")", ":", "\n", "            ", "shape", "=", "(", "self", ".", "batch_size", ",", ")", "+", "shape", "\n", "n", "=", "self", ".", "prng", ".", "randn", "(", "*", "shape", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "#n = np.zeros(shape, dtype=np.float32)", "\n", "if", "std", "!=", "1.0", ":", "\n", "                ", "n", "*=", "std", "\n", "", "if", "mean", "!=", "0.0", ":", "\n", "                ", "n", "+=", "mean", "\n", "", "return", "n", "\n", "\n", "", "return", "[", "noise", "(", "s", ")", "for", "s", "in", "self", ".", "noise_shapes", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.initial_state_model": [[16, 30], ["tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "range", "tensorflow.keras.models.Model", "layers.ReflectionPadding2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Concatenate", "blocks.res_block"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block"], ["def", "initial_state_model", "(", "num_preproc", "=", "3", ")", ":", "\n", "    ", "initial_frame_in", "=", "Input", "(", "shape", "=", "(", "None", ",", "None", ",", "1", ")", ")", "\n", "noise_in_initial", "=", "Input", "(", "shape", "=", "(", "None", ",", "None", ",", "8", ")", ",", "\n", "name", "=", "\"noise_in_initial\"", ")", "\n", "\n", "h", "=", "ReflectionPadding2D", "(", "padding", "=", "(", "1", ",", "1", ")", ")", "(", "initial_frame_in", ")", "\n", "h", "=", "Conv2D", "(", "256", "-", "noise_in_initial", ".", "shape", "[", "-", "1", "]", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ")", "(", "h", ")", "\n", "h", "=", "Concatenate", "(", ")", "(", "[", "h", ",", "noise_in_initial", "]", ")", "\n", "for", "i", "in", "range", "(", "num_preproc", ")", ":", "\n", "        ", "h", "=", "res_block", "(", "256", ",", "activation", "=", "'relu'", ")", "(", "h", ")", "\n", "\n", "", "return", "Model", "(", "\n", "inputs", "=", "[", "initial_frame_in", ",", "noise_in_initial", "]", ",", "\n", "outputs", "=", "h", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator": [[33, 86], ["tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "range", "enumerate", "tensorflow.keras.models.Model", "tensorflow.keras.layers.TimeDistributed", "tensorflow.keras.layers.TimeDistributed", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.layers.Lambda", "rnn.CustomGateGRU", "tensorflow.keras.layers.TimeDistributed", "tensorflow.keras.layers.TimeDistributed", "layers.ReflectionPadding2D", "tensorflow.keras.layers.Conv2D", "blocks.res_block", "blocks.res_block", "layers.ReflectionPadding2D", "tensorflow.keras.layers.Conv2D", "layers.ReflectionPadding2D", "tensorflow.keras.layers.Conv2D", "models.generator.gen_gate"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block"], ["", "def", "generator", "(", "num_channels", "=", "1", ",", "num_timesteps", "=", "8", ",", "num_preproc", "=", "3", ")", ":", "\n", "    ", "initial_state", "=", "Input", "(", "shape", "=", "(", "None", ",", "None", ",", "256", ")", ")", "\n", "noise_in_update", "=", "Input", "(", "shape", "=", "(", "num_timesteps", ",", "None", ",", "None", ",", "8", ")", ",", "\n", "name", "=", "\"noise_in_update\"", ")", "\n", "lores_in", "=", "Input", "(", "shape", "=", "(", "num_timesteps", ",", "None", ",", "None", ",", "num_channels", ")", ",", "\n", "name", "=", "\"cond_in\"", ")", "\n", "inputs", "=", "[", "lores_in", ",", "initial_state", ",", "noise_in_update", "]", "\n", "\n", "xt", "=", "TimeDistributed", "(", "ReflectionPadding2D", "(", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "(", "lores_in", ")", "\n", "xt", "=", "TimeDistributed", "(", "Conv2D", "(", "256", "-", "noise_in_update", ".", "shape", "[", "-", "1", "]", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ")", ")", "(", "xt", ")", "\n", "xt", "=", "Concatenate", "(", ")", "(", "[", "xt", ",", "noise_in_update", "]", ")", "\n", "for", "i", "in", "range", "(", "num_preproc", ")", ":", "\n", "        ", "xt", "=", "res_block", "(", "256", ",", "time_dist", "=", "True", ",", "activation", "=", "'relu'", ")", "(", "xt", ")", "\n", "\n", "", "def", "gen_gate", "(", "activation", "=", "'sigmoid'", ")", ":", "\n", "        ", "def", "gate", "(", "x", ")", ":", "\n", "            ", "x", "=", "ReflectionPadding2D", "(", "padding", "=", "(", "1", ",", "1", ")", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ")", "(", "x", ")", "\n", "if", "activation", "is", "not", "None", ":", "\n", "                ", "x", "=", "Activation", "(", "activation", ")", "(", "x", ")", "\n", "", "return", "x", "\n", "", "return", "Lambda", "(", "gate", ")", "\n", "\n", "", "x", "=", "CustomGateGRU", "(", "\n", "update_gate", "=", "gen_gate", "(", ")", ",", "\n", "reset_gate", "=", "gen_gate", "(", ")", ",", "\n", "output_gate", "=", "gen_gate", "(", "activation", "=", "None", ")", ",", "\n", "return_sequences", "=", "True", ",", "\n", "time_steps", "=", "num_timesteps", "\n", ")", "(", "[", "xt", ",", "initial_state", "]", ")", "\n", "\n", "h", "=", "x", "[", ":", ",", "-", "1", ",", "...", "]", "\n", "\n", "block_channels", "=", "[", "256", ",", "256", ",", "128", ",", "64", ",", "32", "]", "\n", "for", "(", "i", ",", "channels", ")", "in", "enumerate", "(", "block_channels", ")", ":", "\n", "        ", "if", "i", ">", "0", ":", "\n", "            ", "x", "=", "TimeDistributed", "(", "UpSampling2D", "(", "interpolation", "=", "'bilinear'", ")", ")", "(", "x", ")", "\n", "", "x", "=", "res_block", "(", "channels", ",", "time_dist", "=", "True", ",", "activation", "=", "'leakyrelu'", ")", "(", "x", ")", "\n", "\n", "", "x", "=", "TimeDistributed", "(", "ReflectionPadding2D", "(", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "(", "x", ")", "\n", "img_out", "=", "TimeDistributed", "(", "Conv2D", "(", "num_channels", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "activation", "=", "'sigmoid'", ")", ")", "(", "x", ")", "\n", "\n", "model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "[", "img_out", ",", "h", "]", ")", "\n", "\n", "def", "noise_shapes", "(", "img_shape", "=", "(", "128", ",", "128", ")", ")", ":", "\n", "        ", "noise_shape_update", "=", "(", "\n", "num_timesteps", ",", "img_shape", "[", "0", "]", "//", "16", ",", "img_shape", "[", "1", "]", "//", "16", ",", "8", "\n", ")", "\n", "return", "[", "noise_shape_update", "]", "\n", "\n", "", "return", "(", "model", ",", "noise_shapes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator_initialized": [[88, 111], ["tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "init_model", "gen", "tensorflow.keras.models.Model"], "function", ["None"], ["", "def", "generator_initialized", "(", "gen", ",", "init_model", ",", "\n", "num_channels", "=", "1", ",", "num_timesteps", "=", "8", ")", ":", "\n", "    ", "noise_in_initial", "=", "Input", "(", "shape", "=", "(", "None", ",", "None", ",", "8", ")", ",", "\n", "name", "=", "\"noise_in_initial\"", ")", "\n", "noise_in_update", "=", "Input", "(", "shape", "=", "(", "num_timesteps", ",", "None", ",", "None", ",", "8", ")", ",", "\n", "name", "=", "\"noise_in_update\"", ")", "\n", "lores_in", "=", "Input", "(", "shape", "=", "(", "num_timesteps", ",", "None", ",", "None", ",", "num_channels", ")", ",", "\n", "name", "=", "\"cond_in\"", ")", "\n", "inputs", "=", "[", "lores_in", ",", "noise_in_initial", ",", "noise_in_update", "]", "\n", "\n", "initial_state", "=", "init_model", "(", "[", "lores_in", "[", ":", ",", "0", ",", "...", "]", ",", "noise_in_initial", "]", ")", "\n", "(", "img_out", ",", "h", ")", "=", "gen", "(", "[", "lores_in", ",", "initial_state", ",", "noise_in_update", "]", ")", "\n", "\n", "model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "img_out", ")", "\n", "\n", "def", "noise_shapes", "(", "img_shape", "=", "(", "128", ",", "128", ")", ")", ":", "\n", "        ", "noise_shape_initial", "=", "(", "img_shape", "[", "0", "]", "//", "16", ",", "img_shape", "[", "1", "]", "//", "16", ",", "8", ")", "\n", "noise_shape_update", "=", "(", "\n", "num_timesteps", ",", "img_shape", "[", "0", "]", "//", "16", ",", "img_shape", "[", "1", "]", "//", "16", ",", "8", "\n", ")", "\n", "return", "[", "noise_shape_initial", ",", "noise_shape_update", "]", "\n", "\n", "", "return", "(", "model", ",", "noise_shapes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator_deterministic": [[113, 132], ["tensorflow.keras.layers.Input", "gen_init", "tensorflow.keras.models.Model", "tensorflow.shape", "tensorflow.fill", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.Lambda", "tensorflow.stack", "tensorflow.stack", "models.generator_deterministic.zeros_noise"], "function", ["None"], ["", "def", "generator_deterministic", "(", "gen_init", ",", "num_channels", "=", "1", ",", "num_timesteps", "=", "8", ")", ":", "\n", "    ", "lores_in", "=", "Input", "(", "shape", "=", "(", "num_timesteps", ",", "None", ",", "None", ",", "num_channels", ")", ",", "\n", "name", "=", "\"cond_in\"", ")", "\n", "\n", "def", "zeros_noise", "(", "input", ",", "which", ")", ":", "\n", "        ", "shape", "=", "tf", ".", "shape", "(", "input", ")", "\n", "if", "which", "==", "'init'", ":", "\n", "            ", "shape", "=", "tf", ".", "stack", "(", "[", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", ",", "shape", "[", "2", "]", ",", "8", "]", ")", "\n", "", "elif", "which", "==", "'update'", ":", "\n", "            ", "shape", "=", "tf", ".", "stack", "(", "[", "shape", "[", "0", "]", ",", "num_timesteps", ",", "shape", "[", "1", "]", ",", "shape", "[", "2", "]", ",", "8", "]", ")", "\n", "", "return", "tf", ".", "fill", "(", "shape", ",", "0.0", ")", "\n", "\n", "", "init_zeros", "=", "Lambda", "(", "lambda", "x", ":", "zeros_noise", "(", "x", ",", "'init'", ")", ")", "(", "lores_in", ")", "\n", "update_zeros", "=", "Lambda", "(", "lambda", "x", ":", "zeros_noise", "(", "x", ",", "'update'", ")", ")", "(", "lores_in", ")", "\n", "img_out", "=", "gen_init", "(", "[", "lores_in", ",", "init_zeros", ",", "update_zeros", "]", ")", "\n", "\n", "model", "=", "Model", "(", "inputs", "=", "lores_in", ",", "outputs", "=", "img_out", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.discriminator": [[135, 195], ["tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "enumerate", "tensorflow.keras.layers.Lambda", "tensorflow.keras.models.Model", "tensorflow.keras.layers.Concatenate", "blocks.res_block", "blocks.res_block", "blocks.res_block", "blocks.res_block", "tensorflow.keras.layers.Lambda", "rnn.CustomGateGRU", "rnn.CustomGateGRU", "tensorflow.keras.layers.TimeDistributed", "tensorflow.keras.layers.TimeDistributed", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.layers.TimeDistributed", "tensorflow.keras.layers.LeakyReLU", "tensorflow.keras.layers.TimeDistributed", "blocks.res_block", "blocks.res_block", "tensorflow.zeros_like", "tensorflow.keras.layers.Lambda.", "tensorflow.keras.layers.Lambda.", "tensorflow.keras.layers.GlobalAveragePooling2D", "tensorflow.keras.layers.GlobalAveragePooling2D", "layers.SNDense", "layers.SNDense", "layers.ReflectionPadding2D", "layers.SNConv2D", "models.discriminator.disc_gate"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block"], ["", "def", "discriminator", "(", "num_channels", "=", "1", ",", "num_timesteps", "=", "8", ")", ":", "\n", "    ", "hires_in", "=", "Input", "(", "shape", "=", "(", "num_timesteps", ",", "None", ",", "None", ",", "num_channels", ")", ",", "name", "=", "\"sample_in\"", ")", "\n", "lores_in", "=", "Input", "(", "shape", "=", "(", "num_timesteps", ",", "None", ",", "None", ",", "num_channels", ")", ",", "name", "=", "\"cond_in\"", ")", "\n", "\n", "x_hr", "=", "hires_in", "\n", "x_lr", "=", "lores_in", "\n", "\n", "block_channels", "=", "[", "32", ",", "64", ",", "128", ",", "256", "]", "\n", "for", "(", "i", ",", "channels", ")", "in", "enumerate", "(", "block_channels", ")", ":", "\n", "        ", "x_hr", "=", "res_block", "(", "channels", ",", "time_dist", "=", "True", ",", "\n", "norm", "=", "\"spectral\"", ",", "stride", "=", "2", ")", "(", "x_hr", ")", "\n", "x_lr", "=", "res_block", "(", "channels", ",", "time_dist", "=", "True", ",", "\n", "norm", "=", "\"spectral\"", ")", "(", "x_lr", ")", "\n", "\n", "", "x_joint", "=", "Concatenate", "(", ")", "(", "[", "x_lr", ",", "x_hr", "]", ")", "\n", "x_joint", "=", "res_block", "(", "256", ",", "time_dist", "=", "True", ",", "norm", "=", "\"spectral\"", ")", "(", "x_joint", ")", "\n", "x_joint", "=", "res_block", "(", "256", ",", "time_dist", "=", "True", ",", "norm", "=", "\"spectral\"", ")", "(", "x_joint", ")", "\n", "\n", "x_hr", "=", "res_block", "(", "256", ",", "time_dist", "=", "True", ",", "norm", "=", "\"spectral\"", ")", "(", "x_hr", ")", "\n", "x_hr", "=", "res_block", "(", "256", ",", "time_dist", "=", "True", ",", "norm", "=", "\"spectral\"", ")", "(", "x_hr", ")", "\n", "\n", "def", "disc_gate", "(", "activation", "=", "'sigmoid'", ")", ":", "\n", "        ", "def", "gate", "(", "x", ")", ":", "\n", "            ", "x", "=", "ReflectionPadding2D", "(", "padding", "=", "(", "1", ",", "1", ")", ")", "(", "x", ")", "\n", "x", "=", "SNConv2D", "(", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "kernel_initializer", "=", "'he_uniform'", ")", "(", "x", ")", "\n", "if", "activation", "is", "not", "None", ":", "\n", "                ", "x", "=", "Activation", "(", "activation", ")", "(", "x", ")", "\n", "", "return", "x", "\n", "", "return", "Lambda", "(", "gate", ")", "\n", "\n", "", "h", "=", "Lambda", "(", "lambda", "x", ":", "tf", ".", "zeros_like", "(", "x", "[", ":", ",", "0", ",", "...", "]", ")", ")", "\n", "x_joint", "=", "CustomGateGRU", "(", "\n", "update_gate", "=", "disc_gate", "(", ")", ",", "\n", "reset_gate", "=", "disc_gate", "(", ")", ",", "\n", "output_gate", "=", "disc_gate", "(", "activation", "=", "None", ")", ",", "\n", "return_sequences", "=", "True", ",", "\n", "time_steps", "=", "num_timesteps", "\n", ")", "(", "[", "x_joint", ",", "h", "(", "x_joint", ")", "]", ")", "\n", "x_hr", "=", "CustomGateGRU", "(", "\n", "update_gate", "=", "disc_gate", "(", ")", ",", "\n", "reset_gate", "=", "disc_gate", "(", ")", ",", "\n", "output_gate", "=", "disc_gate", "(", "activation", "=", "None", ")", ",", "\n", "return_sequences", "=", "True", ",", "\n", "time_steps", "=", "num_timesteps", "\n", ")", "(", "[", "x_hr", ",", "h", "(", "x_hr", ")", "]", ")", "\n", "\n", "x_avg_joint", "=", "TimeDistributed", "(", "GlobalAveragePooling2D", "(", ")", ")", "(", "x_joint", ")", "\n", "x_avg_hr", "=", "TimeDistributed", "(", "GlobalAveragePooling2D", "(", ")", ")", "(", "x_hr", ")", "\n", "\n", "x", "=", "Concatenate", "(", ")", "(", "[", "x_avg_joint", ",", "x_avg_hr", "]", ")", "\n", "x", "=", "TimeDistributed", "(", "SNDense", "(", "256", ")", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "\n", "disc_out", "=", "TimeDistributed", "(", "SNDense", "(", "1", ")", ")", "(", "x", ")", "\n", "\n", "disc", "=", "Model", "(", "inputs", "=", "[", "lores_in", ",", "hires_in", "]", ",", "outputs", "=", "disc_out", ",", "\n", "name", "=", "'disc'", ")", "\n", "\n", "return", "disc", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.__init__": [[17, 29], ["gan.WGANGP.build_wgan_gp"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.build_wgan_gp"], ["    ", "def", "__init__", "(", "self", ",", "gen", ",", "disc", ",", "num_channels", "=", "1", ",", "num_timesteps", "=", "8", ",", "\n", "gradient_penalty_weight", "=", "10", ",", "lr_disc", "=", "0.0001", ",", "lr_gen", "=", "0.0001", ",", "\n", "avg_seed", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "gen", "=", "gen", "\n", "self", ".", "disc", "=", "disc", "\n", "self", ".", "num_channels", "=", "num_channels", "\n", "self", ".", "num_timesteps", "=", "num_timesteps", "\n", "self", ".", "gradient_penalty_weight", "=", "gradient_penalty_weight", "\n", "self", ".", "lr_disc", "=", "lr_disc", "\n", "self", ".", "lr_gen", "=", "lr_gen", "\n", "self", ".", "build_wgan_gp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.filenames_from_root": [[30, 38], ["None"], "methods", ["None"], ["", "def", "filenames_from_root", "(", "self", ",", "root", ")", ":", "\n", "        ", "fn", "=", "{", "\n", "\"gen_weights\"", ":", "root", "+", "\"-gen_weights.h5\"", ",", "\n", "\"disc_weights\"", ":", "root", "+", "\"-disc_weights.h5\"", ",", "\n", "\"gen_opt_weights\"", ":", "root", "+", "\"-gen_opt_weights.h5\"", ",", "\n", "\"disc_opt_weights\"", ":", "root", "+", "\"-disc_opt_weights.h5\"", "\n", "}", "\n", "return", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.load": [[39, 51], ["gan.WGANGP.gen.load_weights", "gan.WGANGP.disc.load_weights", "meta.Nontrainable", "gan.WGANGP.gen_trainer._make_train_function", "meta.load_opt_weights", "meta.Nontrainable", "gan.WGANGP.disc_trainer._make_train_function", "meta.load_opt_weights"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.load_opt_weights", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.load_opt_weights"], ["", "def", "load", "(", "self", ",", "load_files", ")", ":", "\n", "        ", "self", ".", "gen", ".", "load_weights", "(", "load_files", "[", "\"gen_weights\"", "]", ")", "\n", "self", ".", "disc", ".", "load_weights", "(", "load_files", "[", "\"disc_weights\"", "]", ")", "\n", "\n", "with", "Nontrainable", "(", "self", ".", "disc", ")", ":", "\n", "            ", "self", ".", "gen_trainer", ".", "_make_train_function", "(", ")", "\n", "load_opt_weights", "(", "self", ".", "gen_trainer", ",", "\n", "load_files", "[", "\"gen_opt_weights\"", "]", ")", "\n", "", "with", "Nontrainable", "(", "self", ".", "gen", ")", ":", "\n", "            ", "self", ".", "disc_trainer", ".", "_make_train_function", "(", ")", "\n", "load_opt_weights", "(", "self", ".", "disc_trainer", ",", "\n", "load_files", "[", "\"disc_opt_weights\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.save": [[53, 59], ["gan.WGANGP.filenames_from_root", "gan.WGANGP.gen.save_weights", "gan.WGANGP.disc.save_weights", "meta.save_opt_weights", "meta.save_opt_weights"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.filenames_from_root", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.save_opt_weights", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.save_opt_weights"], ["", "", "def", "save", "(", "self", ",", "save_fn_root", ")", ":", "\n", "        ", "paths", "=", "self", ".", "filenames_from_root", "(", "save_fn_root", ")", "\n", "self", ".", "gen", ".", "save_weights", "(", "paths", "[", "\"gen_weights\"", "]", ",", "overwrite", "=", "True", ")", "\n", "self", ".", "disc", ".", "save_weights", "(", "paths", "[", "\"disc_weights\"", "]", ",", "overwrite", "=", "True", ")", "\n", "save_opt_weights", "(", "self", ".", "disc_trainer", ",", "paths", "[", "\"disc_opt_weights\"", "]", ")", "\n", "save_opt_weights", "(", "self", ".", "gen_trainer", ",", "paths", "[", "\"gen_opt_weights\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.build_wgan_gp": [[61, 96], ["meta.input_shapes", "meta.input_shapes", "meta.input_shapes", "gan.WGANGP.compile", "meta.Nontrainable", "gan.WGANGP.gen", "meta.ensure_list", "gan.WGANGP.disc", "tensorflow.keras.models.Model", "meta.Nontrainable", "gan.WGANGP.gen", "gan.WGANGP.disc", "gan.WGANGP.disc", "gan.WGANGP.disc", "tensorflow.keras.models.Model", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "layers.RandomWeightedAverage", "layers.GradientPenalty"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.input_shapes", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.input_shapes", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.input_shapes", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.compile", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.ensure_list"], ["", "def", "build_wgan_gp", "(", "self", ")", ":", "\n", "\n", "# find shapes for inputs", "\n", "        ", "cond_shapes", "=", "input_shapes", "(", "self", ".", "gen", ",", "\"cond\"", ")", "\n", "noise_shapes", "=", "input_shapes", "(", "self", ".", "gen", ",", "\"noise\"", ")", "\n", "sample_shapes", "=", "input_shapes", "(", "self", ".", "disc", ",", "\"sample\"", ")", "\n", "\n", "# Create generator training network", "\n", "with", "Nontrainable", "(", "self", ".", "disc", ")", ":", "\n", "            ", "cond_in", "=", "[", "Input", "(", "shape", "=", "s", ")", "for", "s", "in", "cond_shapes", "]", "\n", "noise_in", "=", "[", "Input", "(", "shape", "=", "s", ")", "for", "s", "in", "noise_shapes", "]", "\n", "gen_in", "=", "cond_in", "+", "noise_in", "\n", "gen_out", "=", "self", ".", "gen", "(", "gen_in", ")", "\n", "gen_out", "=", "ensure_list", "(", "gen_out", ")", "\n", "disc_in_gen", "=", "cond_in", "+", "[", "gen_out", "]", "\n", "disc_out_gen", "=", "self", ".", "disc", "(", "disc_in_gen", ")", "\n", "self", ".", "gen_trainer", "=", "Model", "(", "inputs", "=", "gen_in", ",", "outputs", "=", "disc_out_gen", ")", "\n", "\n", "# Create discriminator training network", "\n", "", "with", "Nontrainable", "(", "self", ".", "gen", ")", ":", "\n", "            ", "cond_in", "=", "[", "Input", "(", "shape", "=", "s", ")", "for", "s", "in", "cond_shapes", "]", "\n", "noise_in", "=", "[", "Input", "(", "shape", "=", "s", ")", "for", "s", "in", "noise_shapes", "]", "\n", "sample_in", "=", "[", "Input", "(", "shape", "=", "s", ")", "for", "s", "in", "sample_shapes", "]", "\n", "gen_in", "=", "cond_in", "+", "noise_in", "\n", "disc_in_real", "=", "sample_in", "[", "0", "]", "\n", "disc_in_fake", "=", "self", ".", "gen", "(", "gen_in", ")", "\n", "disc_in_avg", "=", "RandomWeightedAverage", "(", ")", "(", "[", "disc_in_real", ",", "disc_in_fake", "]", ")", "\n", "disc_out_real", "=", "self", ".", "disc", "(", "cond_in", "+", "[", "disc_in_real", "]", ")", "\n", "disc_out_fake", "=", "self", ".", "disc", "(", "cond_in", "+", "[", "disc_in_fake", "]", ")", "\n", "disc_out_avg", "=", "self", ".", "disc", "(", "cond_in", "+", "[", "disc_in_avg", "]", ")", "\n", "disc_gp", "=", "GradientPenalty", "(", ")", "(", "[", "disc_out_avg", ",", "disc_in_avg", "]", ")", "\n", "self", ".", "disc_trainer", "=", "Model", "(", "inputs", "=", "cond_in", "+", "sample_in", "+", "noise_in", ",", "\n", "outputs", "=", "[", "disc_out_real", ",", "disc_out_fake", ",", "disc_gp", "]", ")", "\n", "\n", "", "self", ".", "compile", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.compile": [[97, 114], ["tensorflow.keras.optimizers.Adam", "tensorflow.keras.optimizers.Adam", "meta.Nontrainable", "gan.WGANGP.gen_trainer.compile", "meta.Nontrainable", "gan.WGANGP.disc_trainer.compile"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.compile", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.compile"], ["", "def", "compile", "(", "self", ",", "opt_disc", "=", "None", ",", "opt_gen", "=", "None", ")", ":", "\n", "#create optimizers", "\n", "        ", "if", "opt_disc", "is", "None", ":", "\n", "            ", "opt_disc", "=", "Adam", "(", "self", ".", "lr_disc", ",", "beta_1", "=", "0.5", ",", "beta_2", "=", "0.9", ")", "\n", "", "self", ".", "opt_disc", "=", "opt_disc", "\n", "if", "opt_gen", "is", "None", ":", "\n", "            ", "opt_gen", "=", "Adam", "(", "self", ".", "lr_gen", ",", "beta_1", "=", "0.5", ",", "beta_2", "=", "0.9", ")", "\n", "", "self", ".", "opt_gen", "=", "opt_gen", "\n", "\n", "with", "Nontrainable", "(", "self", ".", "disc", ")", ":", "\n", "            ", "self", ".", "gen_trainer", ".", "compile", "(", "loss", "=", "wasserstein_loss", ",", "\n", "optimizer", "=", "self", ".", "opt_gen", ")", "\n", "", "with", "Nontrainable", "(", "self", ".", "gen", ")", ":", "\n", "            ", "self", ".", "disc_trainer", ".", "compile", "(", "\n", "loss", "=", "[", "wasserstein_loss", ",", "wasserstein_loss", ",", "'mse'", "]", ",", "\n", "loss_weights", "=", "[", "1.0", ",", "1.0", ",", "self", ".", "gradient_penalty_weight", "]", ",", "\n", "optimizer", "=", "self", ".", "opt_disc", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.train": [[116, 178], ["numpy.ones", "numpy.zeros", "range", "numpy.array", "tensorflow.python.keras.utils.generic_utils.Progbar", "range", "loss_log.append", "gc.collect", "next", "noise_gen", "meta.Nontrainable", "next", "gan.WGANGP.gen_trainer.train_on_batch", "enumerate", "enumerate", "tensorflow.python.keras.utils.generic_utils.Progbar.add", "numpy.hstack", "meta.Nontrainable", "gan.WGANGP.disc_trainer.train_on_batch", "numpy.array", "numpy.array", "losses.append", "losses.append", "noise_gen"], "methods", ["None"], ["", "", "def", "train", "(", "self", ",", "batch_gen", ",", "noise_gen", ",", "num_gen_batches", "=", "1", ",", "\n", "training_ratio", "=", "1", ",", "show_progress", "=", "True", ")", ":", "\n", "\n", "        ", "disc_target_real", "=", "None", "\n", "if", "show_progress", ":", "\n", "# Initialize progbar and batch counter", "\n", "            ", "progbar", "=", "generic_utils", ".", "Progbar", "(", "\n", "num_gen_batches", "*", "batch_gen", ".", "batch_size", ")", "\n", "\n", "", "disc_target_real", "=", "np", ".", "ones", "(", "\n", "(", "batch_gen", ".", "batch_size", ",", "batch_gen", ".", "num_frames", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "disc_target_fake", "=", "-", "disc_target_real", "\n", "gen_target", "=", "disc_target_real", "\n", "target_gp", "=", "np", ".", "zeros", "(", "(", "batch_gen", ".", "batch_size", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "disc_target", "=", "[", "disc_target_real", ",", "disc_target_fake", ",", "target_gp", "]", "\n", "\n", "loss_log", "=", "[", "]", "\n", "\n", "for", "k", "in", "range", "(", "num_gen_batches", ")", ":", "\n", "\n", "# train discriminator", "\n", "            ", "disc_loss", "=", "None", "\n", "disc_loss_n", "=", "0", "\n", "for", "rep", "in", "range", "(", "training_ratio", ")", ":", "\n", "# generate some real samples", "\n", "                ", "(", "sample", ",", "cond", ")", "=", "next", "(", "batch_gen", ")", "\n", "noise", "=", "noise_gen", "(", ")", "\n", "\n", "with", "Nontrainable", "(", "self", ".", "gen", ")", ":", "\n", "                    ", "dl", "=", "self", ".", "disc_trainer", ".", "train_on_batch", "(", "\n", "[", "cond", ",", "sample", "]", "+", "noise", ",", "disc_target", ")", "\n", "\n", "", "if", "disc_loss", "is", "None", ":", "\n", "                    ", "disc_loss", "=", "np", ".", "array", "(", "dl", ")", "\n", "", "else", ":", "\n", "                    ", "disc_loss", "+=", "np", ".", "array", "(", "dl", ")", "\n", "", "disc_loss_n", "+=", "1", "\n", "\n", "del", "sample", ",", "cond", "\n", "\n", "", "disc_loss", "/=", "disc_loss_n", "\n", "\n", "with", "Nontrainable", "(", "self", ".", "disc", ")", ":", "\n", "                ", "(", "sample", ",", "cond", ")", "=", "next", "(", "batch_gen", ")", "\n", "gen_loss", "=", "self", ".", "gen_trainer", ".", "train_on_batch", "(", "\n", "[", "cond", "]", "+", "noise_gen", "(", ")", ",", "gen_target", ")", "\n", "del", "sample", ",", "cond", "\n", "\n", "", "if", "show_progress", ":", "\n", "                ", "losses", "=", "[", "]", "\n", "for", "(", "i", ",", "dl", ")", "in", "enumerate", "(", "disc_loss", ")", ":", "\n", "                    ", "losses", ".", "append", "(", "(", "\"D{}\"", ".", "format", "(", "i", ")", ",", "dl", ")", ")", "\n", "", "for", "(", "i", ",", "gl", ")", "in", "enumerate", "(", "[", "gen_loss", "]", ")", ":", "\n", "                    ", "losses", ".", "append", "(", "(", "\"G{}\"", ".", "format", "(", "i", ")", ",", "gl", ")", ")", "\n", "", "progbar", ".", "add", "(", "batch_gen", ".", "batch_size", ",", "\n", "values", "=", "losses", ")", "\n", "\n", "", "loss_log", ".", "append", "(", "np", ".", "hstack", "(", "(", "disc_loss", ",", "gen_loss", ")", ")", ")", "\n", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "loss_log", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.wasserstein_loss": [[180, 182], ["tensorflow.keras.backend.mean"], "function", ["None"], ["", "", "def", "wasserstein_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "return", "K", ".", "mean", "(", "y_true", "*", "y_pred", ",", "axis", "=", "-", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorLanczos.__init__": [[488, 490], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "out_size", ")", ":", "\n", "        ", "self", ".", "out_size", "=", "out_size", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorLanczos.predict": [[491, 500], ["numpy.zeros", "range", "range", "plots.resize_lanczos"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.resize_lanczos"], ["", "def", "predict", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "y", "=", "args", "[", "0", "]", "[", "0", "]", "\n", "out_shape", "=", "y", ".", "shape", "[", ":", "2", "]", "+", "self", ".", "out_size", "+", "y", ".", "shape", "[", "4", ":", "]", "\n", "x", "=", "np", ".", "zeros", "(", "out_shape", ",", "dtype", "=", "y", ".", "dtype", ")", "\n", "for", "i", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "x", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "x", "[", "i", ",", "k", ",", ":", ",", ":", ",", "0", "]", "=", "plots", ".", "resize_lanczos", "(", "y", "[", "i", ",", "k", ",", ":", ",", ":", ",", "0", "]", ",", "\n", "self", ".", "out_size", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorDeterministicPlaceholder.__init__": [[503, 505], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "gen_det", ")", ":", "\n", "        ", "self", ".", "gen_det", "=", "gen_det", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorDeterministicPlaceholder.predict": [[506, 509], ["eval.GeneratorDeterministicPlaceholder.gen_det.predict"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorRainFARM.predict"], ["", "def", "predict", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "y", "=", "args", "[", "0", "]", "\n", "return", "self", ".", "gen_det", ".", "predict", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorRainFARM.__init__": [[512, 516], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ds_factor", ",", "decoder", ")", ":", "\n", "        ", "self", ".", "ds_factor", "=", "ds_factor", "\n", "self", ".", "decoder", "=", "decoder", "\n", "self", ".", "batches", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorRainFARM.predict": [[517, 541], ["print", "eval.GeneratorRainFARM.decoder.denormalize", "numpy.zeros", "range", "rainfarm.get_alpha_seq", "numpy.log10", "eval.GeneratorRainFARM.decoder.normalize", "x.clip.clip.clip", "rainfarm.rainfarm_downscale", "numpy.isfinite", "numpy.isfinite", "numpy.isfinite"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.get_alpha_seq", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.normalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.rainfarm_downscale"], ["", "def", "predict", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "print", "(", "self", ".", "batches", ")", "\n", "self", ".", "batches", "+=", "1", "\n", "y", "=", "args", "[", "0", "]", "[", "0", "]", "\n", "y", "=", "self", ".", "decoder", ".", "denormalize", "(", "y", ")", "\n", "P", "=", "10", "**", "y", "\n", "P", "[", "~", "np", ".", "isfinite", "(", "P", ")", "]", "=", "0", "\n", "\n", "out_size", "=", "(", "y", ".", "shape", "[", "2", "]", "*", "self", ".", "ds_factor", ",", "y", ".", "shape", "[", "3", "]", "*", "self", ".", "ds_factor", ")", "\n", "out_shape", "=", "y", ".", "shape", "[", ":", "2", "]", "+", "out_size", "+", "y", ".", "shape", "[", "4", ":", "]", "\n", "x", "=", "np", ".", "zeros", "(", "out_shape", ",", "dtype", "=", "y", ".", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "y", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "alpha", "=", "rainfarm", ".", "get_alpha_seq", "(", "P", "[", "i", ",", "...", ",", "0", "]", ")", "\n", "r", "=", "[", "rainfarm", ".", "rainfarm_downscale", "(", "p", ",", "alpha", "=", "alpha", ",", "threshold", "=", "0.1", ",", "\n", "ds_factor", "=", "self", ".", "ds_factor", ")", "for", "p", "in", "P", "[", "0", ",", "...", ",", "0", "]", "]", "\n", "log_r", "=", "np", ".", "log10", "(", "r", ")", "\n", "log_r", "[", "~", "np", ".", "isfinite", "(", "log_r", ")", "]", "=", "np", ".", "nan", "\n", "log_r", "=", "self", ".", "decoder", ".", "normalize", "(", "log_r", ")", "\n", "log_r", "[", "~", "np", ".", "isfinite", "(", "log_r", ")", "]", "=", "0.0", "\n", "x", "[", "i", ",", "...", ",", "0", "]", "=", "log_r", "\n", "x", "=", "x", ".", "clip", "(", "0", ",", "1", ")", "\n", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.randomize_nans": [[22, 27], ["numpy.isnan", "numpy.random.rand"], "function", ["None"], ["def", "randomize_nans", "(", "x", ",", "rnd_mean", ",", "rnd_range", ")", ":", "\n", "    ", "nan_mask", "=", "np", ".", "isnan", "(", "x", ")", "\n", "nan_shape", "=", "x", "[", "nan_mask", "]", ".", "shape", "\n", "x", "[", "nan_mask", "]", "=", "rnd_mean", "+", "(", "np", ".", "random", ".", "rand", "(", "*", "nan_shape", ")", "-", "0.5", ")", "*", "rnd_range", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.ensemble_ranks": [[29, 75], ["range", "numpy.concatenate", "numpy.concatenate", "next", "batch_gen.decoder.denormalize.ravel", "batch_gen.decoder.denormalize", "eval.randomize_nans", "range", "numpy.stack", "crps.crps_ensemble", "np.concatenate.append", "batch_gen.decoder.denormalize.reshape", "batch_gen.decoder.denormalize", "eval.randomize_nans", "numpy.count_nonzero", "np.concatenate.append", "noise_gen", "gen.predict", "batch_gen.decoder.denormalize.append", "crps.crps_ensemble.ravel", "numpy.prod"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.randomize_nans", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.crps.crps_ensemble", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.randomize_nans", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorRainFARM.predict"], ["", "def", "ensemble_ranks", "(", "gen", ",", "batch_gen", ",", "noise_gen", ",", "\n", "noise_offset", "=", "0.0", ",", "noise_mul", "=", "1.0", ",", "\n", "num_batches", "=", "1024", ",", "rank_samples", "=", "100", ",", "normalize_ranks", "=", "True", ")", ":", "\n", "\n", "    ", "rnd_range", "=", "0.1", "*", "(", "batch_gen", ".", "decoder", ".", "value_range", "[", "0", "]", "-", "\n", "batch_gen", ".", "decoder", ".", "below_val", ")", "\n", "\n", "ranks", "=", "[", "]", "\n", "crps_scores", "=", "[", "]", "\n", "\n", "for", "k", "in", "range", "(", "num_batches", ")", ":", "\n", "        ", "(", "sample", ",", "cond", ")", "=", "next", "(", "batch_gen", ")", "\n", "sample_crps", "=", "sample", "\n", "sample", "=", "sample", ".", "ravel", "(", ")", "\n", "sample", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "sample", ")", "\n", "randomize_nans", "(", "sample", ",", "batch_gen", ".", "decoder", ".", "below_val", ",", "rnd_range", ")", "\n", "\n", "samples_gen", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "rank_samples", ")", ":", "\n", "            ", "n", "=", "noise_gen", "(", ")", "\n", "for", "nn", "in", "n", ":", "\n", "                ", "nn", "*=", "noise_mul", "\n", "nn", "-=", "noise_offset", "\n", "", "sample_gen", "=", "gen", ".", "predict", "(", "[", "cond", "]", "+", "n", ")", "\n", "samples_gen", ".", "append", "(", "sample_gen", ")", "\n", "\n", "", "samples_gen", "=", "np", ".", "stack", "(", "samples_gen", ",", "axis", "=", "-", "1", ")", "\n", "\n", "crps_score", "=", "crps", ".", "crps_ensemble", "(", "sample_crps", ",", "samples_gen", ")", "\n", "crps_scores", ".", "append", "(", "crps_score", ".", "ravel", "(", ")", ")", "\n", "\n", "samples_gen", "=", "samples_gen", ".", "reshape", "(", "\n", "(", "np", ".", "prod", "(", "samples_gen", ".", "shape", "[", ":", "-", "1", "]", ")", ",", "samples_gen", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "samples_gen", "=", "batch_gen", ".", "decoder", ".", "denormalize", "(", "samples_gen", ")", "\n", "randomize_nans", "(", "samples_gen", ",", "batch_gen", ".", "decoder", ".", "below_val", ",", "rnd_range", ")", "\n", "\n", "rank", "=", "np", ".", "count_nonzero", "(", "sample", "[", ":", ",", "None", "]", ">=", "samples_gen", ",", "axis", "=", "-", "1", ")", "\n", "ranks", ".", "append", "(", "rank", ")", "\n", "\n", "", "ranks", "=", "np", ".", "concatenate", "(", "ranks", ")", "\n", "crps_scores", "=", "np", ".", "concatenate", "(", "crps_scores", ")", "\n", "\n", "if", "normalize_ranks", ":", "\n", "        ", "ranks", "=", "ranks", "/", "rank_samples", "\n", "\n", "", "return", "(", "ranks", ",", "crps_scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_KS": [[77, 83], ["numpy.histogram", "numpy.cumsum", "abs().max", "h.sum", "abs"], "function", ["None"], ["", "def", "rank_KS", "(", "norm_ranks", ",", "num_ranks", "=", "100", ")", ":", "\n", "    ", "(", "h", ",", "b", ")", "=", "np", ".", "histogram", "(", "norm_ranks", ",", "num_ranks", "+", "1", ")", "\n", "h", "=", "h", "/", "h", ".", "sum", "(", ")", "\n", "ch", "=", "np", ".", "cumsum", "(", "h", ")", "\n", "cb", "=", "b", "[", "1", ":", "]", "\n", "return", "abs", "(", "ch", "-", "cb", ")", ".", "max", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_CvM": [[85, 93], ["numpy.histogram", "numpy.cumsum", "numpy.diff", "numpy.sqrt", "h.sum"], "function", ["None"], ["", "def", "rank_CvM", "(", "norm_ranks", ",", "num_ranks", "=", "100", ")", ":", "\n", "    ", "(", "h", ",", "b", ")", "=", "np", ".", "histogram", "(", "norm_ranks", ",", "num_ranks", "+", "1", ")", "\n", "h", "=", "h", "/", "h", ".", "sum", "(", ")", "\n", "ch", "=", "np", ".", "cumsum", "(", "h", ")", "\n", "cb", "=", "b", "[", "1", ":", "]", "\n", "db", "=", "np", ".", "diff", "(", "b", ")", "\n", "\n", "return", "np", ".", "sqrt", "(", "(", "(", "ch", "-", "cb", ")", "**", "2", "*", "db", ")", ".", "sum", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_DKL": [[95, 100], ["numpy.histogram", "h.sum", "len", "numpy.log().sum", "numpy.log"], "function", ["None"], ["", "def", "rank_DKL", "(", "norm_ranks", ",", "num_ranks", "=", "100", ")", ":", "\n", "    ", "(", "h", ",", "b", ")", "=", "np", ".", "histogram", "(", "norm_ranks", ",", "num_ranks", "+", "1", ")", "\n", "q", "=", "h", "/", "h", ".", "sum", "(", ")", "\n", "p", "=", "1", "/", "len", "(", "h", ")", "\n", "return", "p", "*", "np", ".", "log", "(", "p", "/", "q", ")", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_OP": [[102, 108], ["numpy.count_nonzero", "float", "len"], "function", ["None"], ["", "def", "rank_OP", "(", "norm_ranks", ",", "num_ranks", "=", "100", ")", ":", "\n", "    ", "op", "=", "np", ".", "count_nonzero", "(", "\n", "(", "norm_ranks", "==", "0", ")", "|", "(", "norm_ranks", "==", "1", ")", "\n", ")", "\n", "op", "=", "float", "(", "op", ")", "/", "len", "(", "norm_ranks", ")", "\n", "return", "op", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_metrics_by_time": [[110, 147], ["train.setup_gan", "noise.NoiseGenerator", "os.listdir", "sorted", "eval.rank_metrics_by_time.log_line"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan"], ["", "def", "rank_metrics_by_time", "(", "application", ",", "data_file", ",", "out_fn", ",", "\n", "weights_dir", ",", "check_every", "=", "1", ",", "N_range", "=", "None", ")", ":", "\n", "    ", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ",", "\n", "noise_shapes", ",", "steps_per_epoch", ")", "=", "train", ".", "setup_gan", "(", "data_file", ",", "\n", "application", "=", "application", ",", "batch_size", "=", "64", ")", "\n", "gen", "=", "wgan", ".", "gen", "\n", "noise_gen", "=", "noise", ".", "NoiseGenerator", "(", "noise_shapes", "(", ")", ",", "\n", "batch_size", "=", "batch_gen_valid", ".", "batch_size", ")", "\n", "\n", "files", "=", "os", ".", "listdir", "(", "weights_dir", ")", "\n", "def", "get_id", "(", "fn", ")", ":", "\n", "        ", "return", "fn", ".", "split", "(", "\"-\"", ")", "[", "1", "]", "\n", "", "files", "=", "sorted", "(", "fn", "for", "fn", "in", "files", "if", "get_id", "(", "fn", ")", "==", "application", ")", "\n", "\n", "def", "log_line", "(", "line", ")", ":", "\n", "        ", "with", "open", "(", "out_fn", ",", "'a'", ")", "as", "f", ":", "\n", "            ", "print", "(", "line", ",", "file", "=", "f", ")", "\n", "", "", "log_line", "(", "\"N KS CvM DKL OP CRPS mean std\"", ")", "\n", "\n", "for", "fn", "in", "files", "[", ":", ":", "check_every", "]", ":", "\n", "        ", "N_samples", "=", "int", "(", "fn", ".", "split", "(", "\"-\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", ")", "\n", "if", "(", "N_range", "is", "not", "None", ")", "and", "not", "(", "N_range", "[", "0", "]", "<=", "N_samples", "<", "N_range", "[", "1", "]", ")", ":", "\n", "            ", "continue", "\n", "", "gen", ".", "load_weights", "(", "weights_dir", "+", "\"/\"", "+", "fn", ")", "\n", "(", "ranks", ",", "crps_scores", ")", "=", "ensemble_ranks", "(", "gen", ",", "batch_gen_valid", ",", "\n", "noise_gen", ",", "num_batches", "=", "8", ")", "\n", "\n", "KS", "=", "rank_KS", "(", "ranks", ")", "\n", "CvM", "=", "rank_CvM", "(", "ranks", ")", "\n", "DKL", "=", "rank_DKL", "(", "ranks", ")", "\n", "OP", "=", "rank_OP", "(", "ranks", ")", "\n", "CRPS", "=", "crps_scores", ".", "mean", "(", ")", "\n", "mean", "=", "ranks", ".", "mean", "(", ")", "\n", "std", "=", "ranks", ".", "std", "(", ")", "\n", "\n", "log_line", "(", "\"{} {:.6f} {:.6f} {:.6f} {:.6f} {:.6f} {:.6f} {:.6f}\"", ".", "format", "(", "\n", "N_samples", ",", "KS", ",", "CvM", ",", "DKL", ",", "OP", ",", "CRPS", ",", "mean", ",", "std", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_metrics_by_noise": [[149, 172], ["train.setup_gan", "noise.NoiseGenerator", "noise_shapes", "list", "int", "gen.load_weights", "eval.ensemble_ranks", "eval.rank_KS", "eval.rank_CvM", "eval.rank_DKL", "crps_scores.mean", "ranks.mean", "ranks.std", "print", "range", "[].split", "fn.split"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.ensemble_ranks", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_KS", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_CvM", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_DKL"], ["", "", "def", "rank_metrics_by_noise", "(", "application", ",", "run_id", ",", "data_file", ",", "\n", "weights_fn", ")", ":", "\n", "    ", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "_", ",", "\n", "noise_shapes", ",", "steps_per_epoch", ")", "=", "train", ".", "setup_gan", "(", "data_file", ",", "\n", "application", "=", "application", ")", "\n", "gen", "=", "wgan", ".", "gen", "\n", "noise_gen", "=", "noise", ".", "NoiseGenerator", "(", "noise_shapes", "(", ")", ",", "\n", "batch_size", "=", "batch_gen_valid", ".", "batch_size", ")", "\n", "\n", "for", "m", "in", "list", "(", "range", "(", "0.5", ",", "2.51", ",", "0.1", ")", ")", "+", "[", "3.0", ",", "3.5", "]", ":", "\n", "        ", "N_samples", "=", "int", "(", "fn", ".", "split", "(", "\"-\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", ")", "\n", "gen", ".", "load_weights", "(", "weights_dir", "+", "\"/\"", "+", "fn", ")", "\n", "(", "ranks", ",", "crps_scores", ")", "=", "ensemble_ranks", "(", "gen", ",", "batch_gen_valid", ",", "\n", "noise_gen", ",", "num_batches", "=", "32", ",", "noise_mul", "=", "m", ")", "\n", "\n", "KS", "=", "rank_KS", "(", "ranks", ")", "\n", "CvM", "=", "rank_CvM", "(", "ranks", ")", "\n", "DKL", "=", "rank_DKL", "(", "ranks", ")", "\n", "CRPS", "=", "crps_scores", ".", "mean", "(", ")", "\n", "mean", "=", "ranks", ".", "mean", "(", ")", "\n", "std", "=", "ranks", ".", "std", "(", ")", "\n", "\n", "print", "(", "N_samples", ",", "KS", ",", "CvM", ",", "DKL", ",", "CRPS", ",", "mean", ",", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_metrics_table": [[174, 211], ["noise.NoiseGenerator", "eval.ensemble_ranks", "eval.rank_KS", "eval.rank_CvM", "eval.rank_DKL", "eval.rank_OP", "crps_scores.mean", "ranks.mean", "ranks.std", "print", "print", "print", "print", "print", "print", "print", "train.setup_gan", "GeneratorRainFARM.load_weights", "noise_shapes", "train.setup_deterministic", "eval.GeneratorRainFARM"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.ensemble_ranks", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_KS", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_CvM", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_DKL", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.rank_OP", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_deterministic"], ["", "", "def", "rank_metrics_table", "(", "application", ",", "data_file", ",", "weights_fn", ",", "method", "=", "\"gan\"", ")", ":", "\n", "\n", "    ", "if", "method", "==", "\"gan\"", ":", "\n", "        ", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ",", "\n", "noise_shapes", ",", "steps_per_epoch", ")", "=", "train", ".", "setup_gan", "(", "data_file", ",", "\n", "test_data_file", "=", "data_file", ",", "application", "=", "application", ",", "batch_size", "=", "64", ")", "\n", "gen", "=", "wgan", ".", "gen", "\n", "gen", ".", "load_weights", "(", "weights_fn", ")", "\n", "", "elif", "method", "==", "\"rainfarm\"", ":", "\n", "        ", "(", "gen_det", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "\n", "batch_gen_test", ",", "steps_per_epoch", ")", "=", "train", ".", "setup_deterministic", "(", "data_file", ",", "\n", "test_data_file", "=", "data_file", ",", "sample_random", "=", "True", ",", "n_samples", "=", "1", ",", "batch_size", "=", "64", ",", "\n", "application", "=", "application", ",", "loss", "=", "'mse'", ")", "\n", "gen", "=", "GeneratorRainFARM", "(", "16", ",", "batch_gen_test", ".", "decoder", ")", "\n", "noise_shapes", "=", "lambda", ":", "[", "]", "\n", "\n", "", "noise_gen", "=", "noise", ".", "NoiseGenerator", "(", "noise_shapes", "(", ")", ",", "\n", "batch_size", "=", "batch_gen_valid", ".", "batch_size", ")", "\n", "\n", "(", "ranks", ",", "crps_scores", ")", "=", "ensemble_ranks", "(", "gen", ",", "batch_gen_test", ",", "\n", "noise_gen", ",", "num_batches", "=", "16", ")", "\n", "\n", "KS", "=", "rank_KS", "(", "ranks", ")", "\n", "CvM", "=", "rank_CvM", "(", "ranks", ")", "\n", "DKL", "=", "rank_DKL", "(", "ranks", ")", "\n", "OP", "=", "rank_OP", "(", "ranks", ")", "\n", "CRPS", "=", "crps_scores", ".", "mean", "(", ")", "\n", "mean", "=", "ranks", ".", "mean", "(", ")", "\n", "std", "=", "ranks", ".", "std", "(", ")", "\n", "\n", "print", "(", "\"KS: {:.3f}\"", ".", "format", "(", "KS", ")", ")", "\n", "print", "(", "\"CvM: {:.3f}\"", ".", "format", "(", "CvM", ")", ")", "\n", "print", "(", "\"DKL: {:.3f}\"", ".", "format", "(", "DKL", ")", ")", "\n", "print", "(", "\"OP: {:.3f}\"", ".", "format", "(", "OP", ")", ")", "\n", "print", "(", "\"CRPS: {:.3f}\"", ".", "format", "(", "CRPS", ")", ")", "\n", "print", "(", "\"mean: {:.3f}\"", ".", "format", "(", "mean", ")", ")", "\n", "print", "(", "\"std: {:.3f}\"", ".", "format", "(", "std", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.reconstruct_time_series_partial": [[213, 330], ["data.LogDownsampler", "noise.NoiseGenerator", "numpy.zeros", "numpy.zeros", "eval.reconstruct_time_series_partial.encoder"], "function", ["None"], ["", "def", "reconstruct_time_series_partial", "(", "images_fn", ",", "gen", ",", "noise_shapes", ",", "\n", "init_model", ",", "out_fn", ",", "\n", "time_range", ",", "h", "=", "None", ",", "last_t", "=", "None", ",", "application", "=", "\"mchrzc\"", ",", "ds_factor", "=", "16", ",", "n_ensemble", "=", "4", ",", "\n", "scaling_fn", "=", "path", "+", "\"/../data/scale_rzc.npy\"", ",", "relax_lam", "=", "0.0", ")", ":", "\n", "\n", "    ", "if", "application", "==", "\"mchrzc\"", ":", "\n", "        ", "dec", "=", "data", ".", "RainRateDecoder", "(", "scaling_fn", ",", "below_val", "=", "np", ".", "log10", "(", "0.025", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown application.\"", ")", "\n", "", "downsampler", "=", "data", ".", "LogDownsampler", "(", "min_val", "=", "dec", ".", "below_val", ",", "\n", "threshold_val", "=", "dec", ".", "value_range", "[", "0", "]", ")", "\n", "\n", "with", "netCDF4", ".", "Dataset", "(", "images_fn", ")", "as", "ds_img", ":", "\n", "        ", "time", "=", "np", ".", "array", "(", "ds_img", "[", "\"time\"", "]", "[", ":", "]", ",", "copy", "=", "False", ")", "\n", "time_dt", "=", "[", "datetime", "(", "1970", ",", "1", ",", "1", ")", "+", "timedelta", "(", "seconds", "=", "t", ")", "for", "t", "in", "time", "]", "\n", "t0", "=", "bisect_left", "(", "time_dt", ",", "time_range", "[", "0", "]", ")", "\n", "t1", "=", "bisect_left", "(", "time_dt", ",", "time_range", "[", "1", "]", ")", "\n", "images", "=", "np", ".", "array", "(", "ds_img", "[", "\"images\"", "]", "[", "t0", ":", "t1", ",", "...", "]", ",", "copy", "=", "False", ")", "\n", "time", "=", "time", "[", "t0", ":", "t1", "]", "\n", "\n", "", "img_shape", "=", "images", ".", "shape", "[", "1", ":", "3", "]", "\n", "img_shape", "=", "(", "\n", "img_shape", "[", "0", "]", "-", "img_shape", "[", "0", "]", "%", "ds_factor", ",", "\n", "img_shape", "[", "1", "]", "-", "img_shape", "[", "1", "]", "%", "ds_factor", ",", "\n", ")", "\n", "noise_gen", "=", "noise", ".", "NoiseGenerator", "(", "noise_shapes", "(", "img_shape", ")", ",", "\n", "batch_size", "=", "n_ensemble", ")", "\n", "\n", "images_ds", "=", "np", ".", "zeros", "(", "\n", "(", "images", ".", "shape", "[", "0", "]", ",", "img_shape", "[", "0", "]", "//", "ds_factor", ",", "img_shape", "[", "1", "]", "//", "ds_factor", ",", "1", ")", ",", "\n", "dtype", "=", "np", ".", "uint8", "\n", ")", "\n", "images_gen", "=", "np", ".", "zeros", "(", "\n", "(", "images", ".", "shape", "[", "0", "]", ",", ")", "+", "img_shape", "+", "(", "1", ",", "n_ensemble", ")", ",", "\n", "dtype", "=", "np", ".", "uint8", "\n", ")", "\n", "\n", "# this finds the nearest index in the R encoding", "\n", "def", "encoder", "(", ")", ":", "\n", "        ", "lR", "=", "dec", ".", "logR", "\n", "ind", "=", "np", ".", "arange", "(", "len", "(", "lR", ")", ")", "\n", "ip", "=", "interp1d", "(", "lR", ",", "ind", ")", "\n", "def", "f", "(", "x", ")", ":", "\n", "            ", "y", "=", "np", ".", "zeros", "(", "x", ".", "shape", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "valid", "=", "(", "x", ">=", "dec", ".", "value_range", "[", "0", "]", ")", "\n", "y", "[", "valid", "]", "=", "ip", "(", "x", "[", "valid", "]", ")", ".", "round", "(", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "y", "\n", "", "return", "f", "\n", "", "encode", "=", "encoder", "(", ")", "\n", "\n", "for", "k", "in", "range", "(", "images", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "print", "(", "\"{}/{}\"", ".", "format", "(", "k", "+", "1", ",", "images", ".", "shape", "[", "0", "]", ")", ")", "\n", "img_real", "=", "images", "[", "k", ":", "k", "+", "1", ",", ":", "img_shape", "[", "0", "]", ",", ":", "img_shape", "[", "1", "]", ",", ":", "]", "\n", "img_real", "=", "dec", "(", "img_real", ")", "\n", "img_real", "=", "img_real", ".", "reshape", "(", "\n", "(", "1", ",", "1", ")", "+", "img_real", ".", "shape", "[", "1", ":", "]", ")", "\n", "img_real", "[", "np", ".", "isnan", "(", "img_real", ")", "]", "=", "dec", ".", "below_val", "\n", "img_ds", "=", "downsampler", "(", "img_real", ")", "\n", "img_ds", "=", "dec", ".", "normalize", "(", "img_ds", ")", "\n", "img_ds_denorm", "=", "dec", ".", "denormalize", "(", "img_ds", ")", "\n", "img_ds", "=", "np", ".", "tile", "(", "img_ds", ",", "(", "n_ensemble", ",", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "(", "n_init", ",", "n_update", ")", "=", "noise_gen", "(", ")", "\n", "\n", "if", "(", "h", "is", "None", ")", "or", "(", "time", "[", "k", "]", "-", "last_t", "!=", "600", ")", ":", "\n", "            ", "h", "=", "init_model", ".", "predict", "(", "[", "img_ds", "[", ":", ",", "0", ",", "...", "]", ",", "n_init", "]", ")", "\n", "\n", "", "(", "img_gen", ",", "h", ")", "=", "gen", ".", "predict", "(", "[", "img_ds", ",", "h", ",", "n_update", "]", ")", "\n", "if", "relax_lam", ">", "0.0", ":", "\n", "# nudge h towards null", "\n", "            ", "h_null", "=", "init_model", ".", "predict", "(", "[", "\n", "np", ".", "zeros_like", "(", "img_ds", "[", ":", ",", "0", ",", "...", "]", ")", ",", "n_init", "\n", "]", ")", "\n", "h", "=", "h_null", "+", "(", "1.0", "-", "relax_lam", ")", "*", "(", "h", "-", "h_null", ")", "\n", "", "img_gen", "=", "dec", ".", "denormalize", "(", "img_gen", ")", "\n", "img_gen", "=", "img_gen", ".", "transpose", "(", "(", "1", ",", "2", ",", "3", ",", "4", ",", "0", ")", ")", "\n", "\n", "images_ds", "[", "k", ",", "...", "]", "=", "encode", "(", "img_ds_denorm", "[", "0", ",", "...", "]", ")", "\n", "images_gen", "[", "k", ",", "...", "]", "=", "encode", "(", "img_gen", "[", "0", ",", "...", "]", ")", "\n", "last_t", "=", "time", "[", "k", "]", "\n", "\n", "", "with", "netCDF4", ".", "Dataset", "(", "out_fn", ",", "'w'", ")", "as", "ds", ":", "\n", "        ", "dim_height", "=", "ds", ".", "createDimension", "(", "\"dim_height\"", ",", "img_shape", "[", "0", "]", ")", "\n", "dim_width", "=", "ds", ".", "createDimension", "(", "\"dim_width\"", ",", "img_shape", "[", "1", "]", ")", "\n", "dim_height_ds", "=", "ds", ".", "createDimension", "(", "\"dim_height_ds\"", ",", "\n", "img_shape", "[", "0", "]", "/", "ds_factor", ")", "\n", "dim_width_ds", "=", "ds", ".", "createDimension", "(", "\"dim_width_ds\"", ",", "\n", "img_shape", "[", "1", "]", "/", "ds_factor", ")", "\n", "dim_samples", "=", "ds", ".", "createDimension", "(", "\"dim_samples\"", ",", "images", ".", "shape", "[", "0", "]", ")", "\n", "dim_ensemble", "=", "ds", ".", "createDimension", "(", "\"dim_ensemble\"", ",", "n_ensemble", ")", "\n", "dim_channels", "=", "ds", ".", "createDimension", "(", "\"dim_channels\"", ",", "1", ")", "\n", "\n", "var_params", "=", "{", "\"zlib\"", ":", "True", ",", "\"complevel\"", ":", "9", "}", "\n", "\n", "def", "create_var", "(", "name", ",", "dims", ",", "**", "params", ")", ":", "\n", "            ", "dtype", "=", "params", ".", "pop", "(", "\"dtype\"", ",", "np", ".", "float32", ")", "\n", "var", "=", "ds", ".", "createVariable", "(", "name", ",", "dtype", ",", "dims", ",", "**", "params", ")", "\n", "return", "var", "\n", "\n", "", "var_img", "=", "create_var", "(", "\"images\"", ",", "\n", "(", "\"dim_samples\"", ",", "\"dim_height\"", ",", "\"dim_width\"", ",", "\"dim_channels\"", ",", "\n", "\"dim_ensemble\"", ")", ",", "\n", "chunksizes", "=", "(", "1", ",", "64", ",", "64", ",", "1", ",", "1", ")", ",", "dtype", "=", "np", ".", "uint8", ",", "**", "var_params", ")", "\n", "var_img", ".", "units", "=", "\"Encoded R\"", "\n", "var_img_ds", "=", "create_var", "(", "\"images_ds\"", ",", "\n", "(", "\"dim_samples\"", ",", "\"dim_height_ds\"", ",", "\"dim_width_ds\"", ",", "\"dim_channels\"", ")", ",", "\n", "dtype", "=", "np", ".", "uint8", ",", "**", "var_params", ")", "\n", "var_img_ds", ".", "units", "=", "\"Encoded R\"", "\n", "var_time", "=", "create_var", "(", "\"time\"", ",", "(", "\"dim_samples\"", ",", ")", ",", "\n", "chunksizes", "=", "(", "1", ",", ")", ",", "dtype", "=", "np", ".", "float64", ",", "**", "var_params", ")", "\n", "var_time", ".", "units", "=", "\"Seconds since 1970-01-01 00:00\"", "\n", "\n", "var_img_ds", "[", ":", "]", "=", "images_ds", "\n", "var_img", "[", ":", "]", "=", "images_gen", "\n", "var_time", "[", ":", "]", "=", "time", "\n", "\n", "", "return", "(", "h", ",", "last_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.reconstruct_time_series_monthly": [[332, 362], ["models.generator", "models.initial_state_model", "models.generator_initialized", "gen_init.load_weights", "datetime.datetime", "months.append", "eval.reconstruct_time_series_partial"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.initial_state_model", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator_initialized", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.reconstruct_time_series_partial"], ["", "def", "reconstruct_time_series_monthly", "(", "images_fn", ",", "weights_fn", ",", "out_dir", ",", "\n", "time_range", ",", "application", "=", "\"mchrzc\"", ",", "ds_factor", "=", "16", ",", "n_ensemble", "=", "4", ",", "\n", "relax_lam", "=", "0.0", ")", ":", "\n", "\n", "    ", "(", "gen", ",", "_", ")", "=", "models", ".", "generator", "(", "num_timesteps", "=", "1", ")", "\n", "init_model", "=", "models", ".", "initial_state_model", "(", ")", "\n", "(", "gen_init", ",", "noise_shapes", ")", "=", "models", ".", "generator_initialized", "(", "gen", ",", "init_model", ",", "\n", "num_timesteps", "=", "1", ")", "\n", "gen_init", ".", "load_weights", "(", "weights_fn", ")", "\n", "\n", "t0", "=", "time_range", "[", "0", "]", "\n", "months", "=", "[", "]", "\n", "while", "t0", "<", "time_range", "[", "1", "]", ":", "\n", "        ", "(", "y", ",", "m", ")", "=", "(", "t0", ".", "year", ",", "t0", ".", "month", ")", "\n", "m", "+=", "1", "\n", "if", "m", ">", "12", ":", "\n", "            ", "m", "=", "1", "\n", "y", "+=", "1", "\n", "", "t1", "=", "datetime", "(", "y", ",", "m", ",", "1", ")", "\n", "months", ".", "append", "(", "(", "t0", ",", "t1", ")", ")", "\n", "t0", "=", "t1", "\n", "\n", "", "(", "h", ",", "last_t", ")", "=", "(", "None", ",", "None", ")", "\n", "for", "month", "in", "months", ":", "\n", "        ", "out_fn", "=", "out_dir", "+", "\"/timeseries-{}-{}{:02d}.nc\"", ".", "format", "(", "\n", "application", ",", "month", "[", "0", "]", ".", "year", ",", "month", "[", "0", "]", ".", "month", ")", "\n", "(", "h", ",", "last_t", ")", "=", "reconstruct_time_series_partial", "(", "images_fn", ",", "gen", ",", "\n", "noise_shapes", ",", "init_model", ",", "out_fn", ",", "month", ",", "h", "=", "h", ",", "last_t", "=", "last_t", ",", "\n", "application", "=", "application", ",", "ds_factor", "=", "ds_factor", ",", "n_ensemble", "=", "n_ensemble", ",", "\n", "relax_lam", "=", "relax_lam", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.log_spectral_distance": [[365, 376], ["numpy.sqrt", "numpy.fft.fft2", "numpy.nanmean", "abs", "numpy.log10", "eval.log_spectral_distance.power_spectrum_dB"], "function", ["None"], ["", "", "def", "log_spectral_distance", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "def", "power_spectrum_dB", "(", "img", ")", ":", "\n", "        ", "fx", "=", "np", ".", "fft", ".", "fft2", "(", "img", ")", "\n", "fx", "=", "fx", "[", ":", "img", ".", "shape", "[", "0", "]", "//", "2", ",", ":", "img", ".", "shape", "[", "1", "]", "//", "2", "]", "\n", "px", "=", "abs", "(", "fx", ")", "**", "2", "\n", "return", "10", "*", "np", ".", "log10", "(", "px", ")", "\n", "\n", "", "d", "=", "(", "power_spectrum_dB", "(", "img1", ")", "-", "power_spectrum_dB", "(", "img2", ")", ")", "**", "2", "\n", "\n", "d", "[", "~", "np", ".", "isfinite", "(", "d", ")", "]", "=", "np", ".", "nan", "\n", "return", "np", ".", "sqrt", "(", "np", ".", "nanmean", "(", "d", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.log_spectral_distance_batch": [[378, 387], ["range", "numpy.array", "range", "eval.log_spectral_distance", "lsd_batch.append"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.log_spectral_distance"], ["", "def", "log_spectral_distance_batch", "(", "batch1", ",", "batch2", ")", ":", "\n", "    ", "lsd_batch", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch1", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "batch1", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "lsd", "=", "log_spectral_distance", "(", "\n", "batch1", "[", "i", ",", "j", ",", ":", ",", ":", ",", "0", "]", ",", "batch2", "[", "i", ",", "j", ",", ":", ",", ":", ",", "0", "]", "\n", ")", "\n", "lsd_batch", ".", "append", "(", "lsd", ")", "\n", "", "", "return", "np", ".", "array", "(", "lsd_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.image_quality": [[389, 419], ["noise.NoiseGenerator", "batch_gen.reset", "range", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "noise_shapes", "next", "range", "noise.NoiseGenerator.", "gen.predict", "numpy.sqrt", "msssim.MultiScaleSSIM", "eval.log_spectral_distance_batch", "np.concatenate.append", "np.concatenate.append", "np.concatenate.append", "np.sqrt.flatten", "msssim.MultiScaleSSIM.flatten", "log_spectral_distance_batch.flatten"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.reset", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.GeneratorRainFARM.predict", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.msssim.MultiScaleSSIM", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.log_spectral_distance_batch"], ["", "def", "image_quality", "(", "gen", ",", "batch_gen", ",", "noise_shapes", ",", "num_instances", "=", "1", ",", "\n", "N_batches", "=", "100", ")", ":", "\n", "    ", "N", "=", "batch_gen", ".", "N", "\n", "#N_batches = N//batch_gen.batch_size", "\n", "img_shape", "=", "batch_gen", ".", "img_shape", "\n", "noise_gen", "=", "noise", ".", "NoiseGenerator", "(", "noise_shapes", "(", "img_shape", ")", ",", "\n", "batch_size", "=", "batch_gen", ".", "batch_size", ",", "random_seed", "=", "1234", ")", "\n", "\n", "batch_gen", ".", "reset", "(", "random_seed", "=", "1234", ")", "\n", "rmse_all", "=", "[", "]", "\n", "ssim_all", "=", "[", "]", "\n", "lsd_all", "=", "[", "]", "\n", "\n", "for", "k", "in", "range", "(", "N_batches", ")", ":", "\n", "        ", "(", "img_real", ",", "img_ds", ")", "=", "next", "(", "batch_gen", ")", "\n", "for", "i", "in", "range", "(", "num_instances", ")", ":", "\n", "            ", "n", "=", "noise_gen", "(", ")", "\n", "img_gen", "=", "gen", ".", "predict", "(", "[", "img_ds", "]", "+", "n", ")", "\n", "rmse", "=", "np", ".", "sqrt", "(", "(", "(", "img_real", "-", "img_gen", ")", "**", "2", ")", ".", "mean", "(", "axis", "=", "(", "2", ",", "3", ",", "4", ")", ")", ")", "\n", "ssim", "=", "msssim", ".", "MultiScaleSSIM", "(", "img_real", ",", "img_gen", ",", "1.0", ")", "\n", "lsd", "=", "log_spectral_distance_batch", "(", "img_real", ",", "img_gen", ")", "\n", "rmse_all", ".", "append", "(", "rmse", ".", "flatten", "(", ")", ")", "\n", "ssim_all", ".", "append", "(", "ssim", ".", "flatten", "(", ")", ")", "\n", "lsd_all", ".", "append", "(", "lsd", ".", "flatten", "(", ")", ")", "\n", "\n", "", "", "rmse_all", "=", "np", ".", "concatenate", "(", "rmse_all", ")", "\n", "ssim_all", "=", "np", ".", "concatenate", "(", "ssim_all", ")", "\n", "lsd_all", "=", "np", ".", "concatenate", "(", "lsd_all", ")", "\n", "\n", "return", "(", "rmse_all", ",", "ssim_all", ",", "lsd_all", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.quality_metrics_by_time": [[421, 446], ["train.setup_gan", "os.listdir", "sorted", "eval.rank_metrics_by_time.log_line"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan"], ["", "def", "quality_metrics_by_time", "(", "application", ",", "data_fn", ",", "out_fn", ",", "\n", "weights_dir", ",", "check_every", "=", "1", ")", ":", "\n", "    ", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "_", ",", "\n", "noise_shapes", ",", "steps_per_epoch", ")", "=", "train", ".", "setup_gan", "(", "data_fn", ",", "\n", "application", "=", "application", ",", "batch_size", "=", "32", ")", "\n", "gen", "=", "wgan", ".", "gen", "\n", "\n", "files", "=", "os", ".", "listdir", "(", "weights_dir", ")", "\n", "def", "get_app", "(", "fn", ")", ":", "\n", "        ", "return", "fn", ".", "split", "(", "\"-\"", ")", "[", "1", "]", "\n", "", "files", "=", "sorted", "(", "fn", "for", "fn", "in", "files", "if", "get_app", "(", "fn", ")", "==", "application", ")", "\n", "\n", "def", "log_line", "(", "line", ")", ":", "\n", "        ", "with", "open", "(", "out_fn", ",", "'a'", ")", "as", "f", ":", "\n", "            ", "print", "(", "line", ",", "file", "=", "f", ")", "\n", "", "", "log_line", "(", "\"N RMSE MSSSIM LSD\"", ")", "\n", "\n", "for", "fn", "in", "files", "[", ":", ":", "check_every", "]", ":", "\n", "        ", "N_samples", "=", "int", "(", "fn", ".", "split", "(", "\"-\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", ")", "\n", "print", "(", "N_samples", ")", "\n", "gen", ".", "load_weights", "(", "weights_dir", "+", "\"/\"", "+", "fn", ")", "\n", "\n", "(", "rmse", ",", "ssim", ",", "lsd", ")", "=", "image_quality", "(", "gen", ",", "batch_gen_valid", ",", "noise_shapes", ")", "\n", "log_line", "(", "\"{} {:.6f} {:.6f} {:.6f}\"", ".", "format", "(", "\n", "N_samples", ",", "rmse", ".", "mean", "(", ")", ",", "ssim", ".", "mean", "(", ")", ",", "np", ".", "nanmean", "(", "lsd", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.quality_metrics_table": [[448, 483], ["eval.image_quality", "print", "print", "print", "train.setup_gan", "GeneratorRainFARM.load_weights", "train.setup_deterministic", "gen_det.load_weights", "eval.GeneratorDeterministicPlaceholder", "rmse.mean", "ssim.mean", "numpy.nanmean", "train.setup_deterministic", "eval.GeneratorLanczos", "train.setup_deterministic", "eval.GeneratorRainFARM"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.eval.image_quality", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_deterministic", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_deterministic", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_deterministic"], ["", "", "def", "quality_metrics_table", "(", "application", ",", "data_fn", ",", "weights_fn", ",", "method", "=", "\"gan\"", ")", ":", "\n", "    ", "if", "method", "==", "\"gan\"", ":", "\n", "        ", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ",", "\n", "noise_shapes", ",", "steps_per_epoch", ")", "=", "train", ".", "setup_gan", "(", "data_fn", ",", "\n", "test_data_file", "=", "data_fn", ",", "application", "=", "application", ",", "batch_size", "=", "32", ")", "\n", "gen", "=", "wgan", ".", "gen", "\n", "gen", ".", "load_weights", "(", "weights_fn", ")", "\n", "", "elif", "method", "==", "\"gen_det\"", ":", "\n", "        ", "(", "gen_det", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "\n", "batch_gen_test", ",", "steps_per_epoch", ")", "=", "train", ".", "setup_deterministic", "(", "data_fn", ",", "\n", "test_data_file", "=", "data_fn", ",", "sample_random", "=", "True", ",", "n_samples", "=", "1", ",", "batch_size", "=", "32", ",", "\n", "application", "=", "application", ",", "loss", "=", "'mse'", ")", "\n", "gen_det", ".", "load_weights", "(", "weights_fn", ")", "\n", "gen", "=", "GeneratorDeterministicPlaceholder", "(", "gen_det", ")", "\n", "noise_shapes", "=", "lambda", "s", ":", "[", "]", "\n", "", "elif", "method", "==", "\"lanczos\"", ":", "\n", "        ", "(", "gen_det", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "\n", "batch_gen_test", ",", "steps_per_epoch", ")", "=", "train", ".", "setup_deterministic", "(", "data_fn", ",", "\n", "test_data_file", "=", "data_fn", ",", "sample_random", "=", "True", ",", "n_samples", "=", "1", ",", "batch_size", "=", "32", ",", "\n", "application", "=", "application", ",", "loss", "=", "'mse'", ")", "\n", "gen", "=", "GeneratorLanczos", "(", "(", "128", ",", "128", ")", ")", "\n", "noise_shapes", "=", "lambda", "s", ":", "[", "]", "\n", "", "elif", "method", "==", "\"rainfarm\"", ":", "\n", "        ", "(", "gen_det", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "\n", "batch_gen_test", ",", "steps_per_epoch", ")", "=", "train", ".", "setup_deterministic", "(", "data_fn", ",", "\n", "test_data_file", "=", "data_fn", ",", "sample_random", "=", "True", ",", "n_samples", "=", "1", ",", "batch_size", "=", "32", ",", "\n", "application", "=", "application", ",", "loss", "=", "'mse'", ")", "\n", "gen", "=", "GeneratorRainFARM", "(", "16", ",", "batch_gen_test", ".", "decoder", ")", "\n", "noise_shapes", "=", "lambda", "s", ":", "[", "]", "\n", "\n", "", "(", "rmse", ",", "ssim", ",", "lsd", ")", "=", "image_quality", "(", "gen", ",", "batch_gen_test", ",", "noise_shapes", ")", "\n", "\n", "print", "(", "\"RMSE: {:.3f}\"", ".", "format", "(", "rmse", ".", "mean", "(", ")", ")", ")", "\n", "print", "(", "\"MSSSIM: {:.3f}\"", ".", "format", "(", "ssim", ".", "mean", "(", ")", ")", ")", "\n", "print", "(", "\"LSD: {:.3f}\"", ".", "format", "(", "np", ".", "nanmean", "(", "lsd", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.radial_average": [[7, 11], ["abs().mean", "abs"], "function", ["None"], ["def", "radial_average", "(", "s", ",", "k", ",", "k0", ")", ":", "\n", "    ", "dk", "=", "k", "[", "0", ",", "1", "]", "-", "k", "[", "0", ",", "0", "]", "\n", "on_rad", "=", "(", "k", ">=", "k0", "-", "dk", "*", "0.5", ")", "&", "(", "k", "<", "k0", "+", "dk", "*", "0.5", ")", "\n", "return", "abs", "(", "s", "[", "on_rad", "]", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.log_slope": [[13, 29], ["log_k.min", "log_k.max", "numpy.count_nonzero", "numpy.polyfit"], "function", ["None"], ["", "def", "log_slope", "(", "log_k", ",", "log_power_spectrum", ")", ":", "\n", "    ", "lk_min", "=", "log_k", ".", "min", "(", ")", "\n", "lk_max", "=", "log_k", ".", "max", "(", ")", "\n", "lk_range", "=", "lk_max", "-", "lk_min", "\n", "lk_min", "+=", "(", "1", "/", "6", ")", "*", "lk_range", "\n", "lk_max", "-=", "(", "1", "/", "6", ")", "*", "lk_range", "\n", "dk", "=", "lk_range", "/", "32", "\n", "\n", "selected", "=", "(", "lk_min", "<=", "log_k", ")", "&", "(", "log_k", "<=", "lk_max", ")", "\n", "num_selected", "=", "np", ".", "count_nonzero", "(", "selected", ")", "\n", "lk_sel", "=", "log_k", "[", "selected", "]", "\n", "ps_sel", "=", "log_power_spectrum", "[", "selected", "]", "\n", "(", "alpha", ",", "_", ")", "=", "np", ".", "polyfit", "(", "lk_sel", ",", "ps_sel", ",", "1", ")", "\n", "alpha", "=", "-", "alpha", "\n", "\n", "return", "alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.balanced_spatial_average": [[31, 34], ["numpy.ones_like", "scipy.ndimage.convolve", "scipy.ndimage.convolve"], "function", ["None"], ["", "def", "balanced_spatial_average", "(", "x", ",", "k", ")", ":", "\n", "    ", "ones", "=", "np", ".", "ones_like", "(", "x", ")", "\n", "return", "convolve", "(", "x", ",", "k", ")", "/", "convolve", "(", "ones", ",", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.get_alpha_seq": [[36, 48], ["numpy.fft.fftfreq", "numpy.fft.fftfreq", "numpy.sqrt", "numpy.stack", "numpy.stack", "abs", "numpy.log", "rainfarm.log_slope", "numpy.isfinite", "numpy.log", "numpy.fft.fft2"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.log_slope"], ["", "def", "get_alpha_seq", "(", "P", ")", ":", "\n", "    ", "ki", "=", "np", ".", "fft", ".", "fftfreq", "(", "P", ".", "shape", "[", "1", "]", ")", "\n", "kj", "=", "np", ".", "fft", ".", "fftfreq", "(", "P", ".", "shape", "[", "2", "]", ")", "\n", "k_sqr", "=", "ki", "[", ":", ",", "None", "]", "**", "2", "+", "kj", "[", "None", ",", ":", "]", "**", "2", "\n", "k", "=", "np", ".", "sqrt", "(", "k_sqr", ")", "\n", "k", "=", "np", ".", "stack", "(", "[", "k", "]", "*", "P", ".", "shape", "[", "0", "]", ")", "\n", "\n", "fp", "=", "np", ".", "stack", "(", "[", "np", ".", "fft", ".", "fft2", "(", "p", ")", "for", "p", "in", "P", "]", ")", "\n", "fp_abs", "=", "abs", "(", "fp", ")", "\n", "log_power_spectrum", "=", "np", ".", "log", "(", "fp_abs", "**", "2", ")", "\n", "valid", "=", "(", "k", "!=", "0", ")", "&", "np", ".", "isfinite", "(", "log_power_spectrum", ")", "\n", "return", "log_slope", "(", "np", ".", "log", "(", "k", "[", "valid", "]", ")", ",", "log_power_spectrum", "[", "valid", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.rainfarm_downscale": [[50, 91], ["numpy.fft.fftfreq", "numpy.fft.fftfreq", "numpy.sqrt", "numpy.fft.fftfreq", "numpy.fft.fftfreq", "numpy.sqrt", "numpy.exp", "g.std", "numpy.exp", "numpy.repeat", "int", "tophat.sum", "rainfarm.balanced_spatial_average", "rainfarm.balanced_spatial_average", "numpy.fft.fft2", "abs", "numpy.log", "rainfarm.log_slope", "warnings.catch_warnings", "warnings.simplefilter", "numpy.sqrt", "numpy.fft.ifft2", "numpy.repeat", "round", "numpy.isfinite", "numpy.log", "numpy.random.rand", "numpy.sqrt", "complex"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.balanced_spatial_average", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.balanced_spatial_average", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.rainfarm.log_slope"], ["", "def", "rainfarm_downscale", "(", "P", ",", "alpha", "=", "None", ",", "ds_factor", "=", "16", ",", "threshold", "=", "None", ")", ":", "\n", "    ", "ki", "=", "np", ".", "fft", ".", "fftfreq", "(", "P", ".", "shape", "[", "0", "]", ")", "\n", "kj", "=", "np", ".", "fft", ".", "fftfreq", "(", "P", ".", "shape", "[", "1", "]", ")", "\n", "k_sqr", "=", "ki", "[", ":", ",", "None", "]", "**", "2", "+", "kj", "[", "None", ",", ":", "]", "**", "2", "\n", "k", "=", "np", ".", "sqrt", "(", "k_sqr", ")", "\n", "\n", "ki_ds", "=", "np", ".", "fft", ".", "fftfreq", "(", "P", ".", "shape", "[", "0", "]", "*", "ds_factor", ",", "d", "=", "1", "/", "ds_factor", ")", "\n", "kj_ds", "=", "np", ".", "fft", ".", "fftfreq", "(", "P", ".", "shape", "[", "1", "]", "*", "ds_factor", ",", "d", "=", "1", "/", "ds_factor", ")", "\n", "k_ds_sqr", "=", "ki_ds", "[", ":", ",", "None", "]", "**", "2", "+", "kj_ds", "[", "None", ",", ":", "]", "**", "2", "\n", "k_ds", "=", "np", ".", "sqrt", "(", "k_ds_sqr", ")", "\n", "\n", "if", "alpha", "is", "None", ":", "\n", "        ", "fp", "=", "np", ".", "fft", ".", "fft2", "(", "P", ")", "\n", "fp_abs", "=", "abs", "(", "fp", ")", "\n", "log_power_spectrum", "=", "np", ".", "log", "(", "fp_abs", "**", "2", ")", "\n", "valid", "=", "(", "k", "!=", "0", ")", "&", "np", ".", "isfinite", "(", "log_power_spectrum", ")", "\n", "alpha", "=", "log_slope", "(", "np", ".", "log", "(", "k", "[", "valid", "]", ")", ",", "log_power_spectrum", "[", "valid", "]", ")", "\n", "\n", "", "fg", "=", "np", ".", "exp", "(", "complex", "(", "0", ",", "1", ")", "*", "2", "*", "np", ".", "pi", "*", "np", ".", "random", ".", "rand", "(", "*", "k_ds", ".", "shape", ")", ")", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "\"ignore\"", ")", "\n", "fg", "*=", "np", ".", "sqrt", "(", "k_ds_sqr", "**", "(", "-", "alpha", "/", "2", ")", ")", "\n", "", "fg", "[", "0", ",", "0", "]", "=", "0", "\n", "g", "=", "np", ".", "fft", ".", "ifft2", "(", "fg", ")", ".", "real", "\n", "g", "/=", "g", ".", "std", "(", ")", "\n", "r", "=", "np", ".", "exp", "(", "g", ")", "\n", "\n", "P_u", "=", "np", ".", "repeat", "(", "np", ".", "repeat", "(", "P", ",", "ds_factor", ",", "axis", "=", "0", ")", ",", "ds_factor", ",", "axis", "=", "1", ")", "\n", "rad", "=", "int", "(", "round", "(", "ds_factor", "/", "np", ".", "sqrt", "(", "np", ".", "pi", ")", ")", ")", "\n", "(", "mx", ",", "my", ")", "=", "np", ".", "mgrid", "[", "-", "rad", ":", "rad", "+", "0.01", ",", "-", "rad", ":", "rad", "+", "0.01", "]", "\n", "tophat", "=", "(", "(", "mx", "**", "2", "+", "my", "**", "2", ")", "<=", "rad", "**", "2", ")", ".", "astype", "(", "float", ")", "\n", "tophat", "/=", "tophat", ".", "sum", "(", ")", "\n", "\n", "P_agg", "=", "balanced_spatial_average", "(", "P_u", ",", "tophat", ")", "\n", "r_agg", "=", "balanced_spatial_average", "(", "r", ",", "tophat", ")", "\n", "r", "*=", "P_agg", "/", "r_agg", "\n", "\n", "if", "threshold", "is", "not", "None", ":", "\n", "        ", "r", "[", "r", "<", "threshold", "]", "=", "0", "\n", "\n", "", "return", "r", "\n", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.Nontrainable.__init__": [[7, 11], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "models", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "models", ",", "list", ")", ":", "\n", "            ", "models", "=", "[", "models", "]", "\n", "", "self", ".", "models", "=", "models", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.Nontrainable.__enter__": [[12, 17], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "trainable_status", "=", "[", "m", ".", "trainable", "for", "m", "in", "self", ".", "models", "]", "\n", "for", "m", "in", "self", ".", "models", ":", "\n", "            ", "m", ".", "trainable", "=", "False", "\n", "", "return", "self", ".", "models", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.Nontrainable.__exit__": [[18, 21], ["zip"], "methods", ["None"], ["", "def", "__exit__", "(", "self", ",", "type", ",", "value", ",", "traceback", ")", ":", "\n", "        ", "for", "(", "m", ",", "t", ")", "in", "zip", "(", "self", ".", "models", ",", "self", ".", "trainable_status", ")", ":", "\n", "            ", "m", ".", "trainable", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.save_opt_weights": [[23, 56], ["h5py.File", "getattr", "f.create_group", "tensorflow.keras.backend.batch_get_value", "enumerate", "zip", "zip", "weight_names.append", "f.create_group.create_dataset", "tensorflow.keras.backend.backend", "str.encode", "hasattr", "str", "hasattr", "str", "str", "str"], "function", ["None"], ["", "", "", "def", "save_opt_weights", "(", "model", ",", "filepath", ")", ":", "\n", "    ", "with", "h5py", ".", "File", "(", "filepath", ",", "'w'", ")", "as", "f", ":", "\n", "# Save optimizer weights.", "\n", "        ", "symbolic_weights", "=", "getattr", "(", "model", ".", "optimizer", ",", "'weights'", ")", "\n", "if", "symbolic_weights", ":", "\n", "            ", "optimizer_weights_group", "=", "f", ".", "create_group", "(", "'optimizer_weights'", ")", "\n", "weight_values", "=", "K", ".", "batch_get_value", "(", "symbolic_weights", ")", "\n", "weight_names", "=", "[", "]", "\n", "for", "i", ",", "(", "w", ",", "val", ")", "in", "enumerate", "(", "zip", "(", "symbolic_weights", ",", "\n", "weight_values", ")", ")", ":", "\n", "# Default values of symbolic_weights is /variable for theano", "\n", "                ", "if", "K", ".", "backend", "(", ")", "==", "'theano'", ":", "\n", "                    ", "if", "hasattr", "(", "w", ",", "'name'", ")", "and", "w", ".", "name", "!=", "\"/variable\"", ":", "\n", "                        ", "name", "=", "str", "(", "w", ".", "name", ")", "\n", "", "else", ":", "\n", "                        ", "name", "=", "'param_'", "+", "str", "(", "i", ")", "\n", "", "", "else", ":", "\n", "                    ", "if", "hasattr", "(", "w", ",", "'name'", ")", "and", "w", ".", "name", ":", "\n", "                        ", "name", "=", "str", "(", "w", ".", "name", ")", "\n", "", "else", ":", "\n", "                        ", "name", "=", "'param_'", "+", "str", "(", "i", ")", "\n", "", "", "weight_names", ".", "append", "(", "name", ".", "encode", "(", "'utf8'", ")", ")", "\n", "", "optimizer_weights_group", ".", "attrs", "[", "'weight_names'", "]", "=", "weight_names", "\n", "for", "name", ",", "val", "in", "zip", "(", "weight_names", ",", "weight_values", ")", ":", "\n", "                ", "param_dset", "=", "optimizer_weights_group", ".", "create_dataset", "(", "\n", "name", ",", "\n", "val", ".", "shape", ",", "\n", "dtype", "=", "val", ".", "dtype", ")", "\n", "if", "not", "val", ".", "shape", ":", "\n", "# scalar", "\n", "                    ", "param_dset", "[", "(", ")", "]", "=", "val", "\n", "", "else", ":", "\n", "                    ", "param_dset", "[", ":", "]", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.load_opt_weights": [[58, 66], ["h5py.File", "model.optimizer.set_weights", "n.decode"], "function", ["None"], ["", "", "", "", "", "def", "load_opt_weights", "(", "model", ",", "filepath", ")", ":", "\n", "    ", "with", "h5py", ".", "File", "(", "filepath", ",", "mode", "=", "'r'", ")", "as", "f", ":", "\n", "        ", "optimizer_weights_group", "=", "f", "[", "'optimizer_weights'", "]", "\n", "optimizer_weight_names", "=", "[", "n", ".", "decode", "(", "'utf8'", ")", "for", "n", "in", "\n", "optimizer_weights_group", ".", "attrs", "[", "'weight_names'", "]", "]", "\n", "optimizer_weight_values", "=", "[", "optimizer_weights_group", "[", "n", "]", "for", "n", "in", "\n", "optimizer_weight_names", "]", "\n", "model", ".", "optimizer", ".", "set_weights", "(", "optimizer_weight_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.ensure_list": [[68, 72], ["type"], "function", ["None"], ["", "", "def", "ensure_list", "(", "x", ")", ":", "\n", "    ", "if", "type", "(", "x", ")", "!=", "list", ":", "\n", "        ", "x", "=", "[", "x", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.meta.input_shapes": [[74, 79], ["tuple", "il.name.startswith"], "function", ["None"], ["", "def", "input_shapes", "(", "model", ",", "prefix", ")", ":", "\n", "    ", "shapes", "=", "[", "il", ".", "shape", "[", "1", ":", "]", "for", "il", "in", "\n", "model", ".", "inputs", "if", "il", ".", "name", ".", "startswith", "(", "prefix", ")", "]", "\n", "shapes", "=", "[", "tuple", "(", "[", "d", "for", "d", "in", "dims", "]", ")", "for", "dims", "in", "shapes", "]", "\n", "return", "shapes", "\n", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_batch_gen": [[21, 78], ["numpy.random.RandomState", "int", "np.random.RandomState.choice", "numpy.zeros", "data.LogDownsampler", "data.BatchGenerator", "data.BatchGenerator", "netCDF4.Dataset", "ds.set_auto_maskandscale", "round", "data.RainRateDecoder", "data.BatchGenerator", "numpy.array", "data.CODDecoder", "ValueError", "netCDF4.Dataset", "ds_test.set_auto_maskandscale", "numpy.array", "numpy.random.RandomState", "np.random.RandomState.choice", "numpy.array", "numpy.array", "numpy.log10"], "function", ["None"], ["def", "setup_batch_gen", "(", "data_file", "=", "None", ",", "test_data_file", "=", "None", ",", "\n", "application", "=", "\"mchrzc\"", ",", "\n", "batch_size", "=", "32", ",", "sample_random", "=", "False", ",", "validation_frac", "=", "0.1", ",", "\n", "validation_seed", "=", "1234", ",", "scaling_fn", "=", "path", "+", "\"/../data/scale_rzc.npy\"", ",", "\n", "n_samples", "=", "None", ",", "random_seed", "=", "None", ")", ":", "\n", "\n", "    ", "with", "netCDF4", ".", "Dataset", "(", "data_file", ",", "'r'", ")", "as", "ds", ":", "\n", "        ", "ds", ".", "set_auto_maskandscale", "(", "False", ")", "\n", "if", "n_samples", "is", "None", ":", "\n", "            ", "seq", "=", "np", ".", "array", "(", "ds", "[", "\"sequences\"", "]", "[", ":", "]", ",", "copy", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "if", "sample_random", ":", "\n", "                ", "prng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", "=", "random_seed", ")", "\n", "ind", "=", "prng", ".", "choice", "(", "ds", "[", "\"sequences\"", "]", ".", "shape", "[", "0", "]", ",", "n_samples", ",", "\n", "replace", "=", "False", ")", "\n", "seq", "=", "np", ".", "array", "(", "ds", "[", "\"sequences\"", "]", "[", "ind", ",", "...", "]", ",", "copy", "=", "False", ")", "\n", "", "else", ":", "\n", "                ", "seq", "=", "np", ".", "array", "(", "ds", "[", "\"sequences\"", "]", "[", "n_samples", "[", "0", "]", ":", "n_samples", "[", "1", "]", "]", ",", "\n", "copy", "=", "False", ")", "\n", "\n", "", "", "", "prng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", "=", "validation_seed", ")", "\n", "N_seq", "=", "seq", ".", "shape", "[", "0", "]", "\n", "N_validation", "=", "int", "(", "round", "(", "N_seq", "*", "validation_frac", ")", ")", "\n", "ind_valid", "=", "prng", ".", "choice", "(", "N_seq", ",", "N_validation", ",", "replace", "=", "False", ")", "\n", "validation", "=", "np", ".", "zeros", "(", "N_seq", ",", "dtype", "=", "bool", ")", "\n", "validation", "[", "ind_valid", "]", "=", "True", "\n", "training", "=", "~", "validation", "\n", "\n", "if", "application", "==", "\"mchrzc\"", ":", "\n", "        ", "dec", "=", "data", ".", "RainRateDecoder", "(", "scaling_fn", ",", "below_val", "=", "np", ".", "log10", "(", "0.025", ")", ")", "\n", "zeros_frac", "=", "0.2", "\n", "", "elif", "application", "==", "\"goescod\"", ":", "\n", "        ", "dec", "=", "data", ".", "CODDecoder", "(", "below_val", "=", "0.0", ")", "\n", "zeros_frac", "=", "0.0", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown application.\"", ")", "\n", "\n", "", "downsampler", "=", "data", ".", "LogDownsampler", "(", "min_val", "=", "dec", ".", "below_val", ",", "\n", "threshold_val", "=", "dec", ".", "value_range", "[", "0", "]", ")", "\n", "batch_gen_train", "=", "data", ".", "BatchGenerator", "(", "seq", "[", "training", ",", "...", "]", ",", "\n", "dec", ",", "downsampler", ",", "batch_size", "=", "batch_size", ",", "random_seed", "=", "random_seed", ",", "\n", "zeros_frac", "=", "zeros_frac", ")", "\n", "batch_gen_valid", "=", "data", ".", "BatchGenerator", "(", "seq", "[", "validation", ",", "...", "]", ",", "\n", "dec", ",", "downsampler", ",", "batch_size", "=", "batch_size", ",", "random_seed", "=", "random_seed", ",", "\n", "zeros_frac", "=", "zeros_frac", ")", "\n", "\n", "if", "test_data_file", ":", "\n", "        ", "with", "netCDF4", ".", "Dataset", "(", "test_data_file", ",", "'r'", ")", "as", "ds_test", ":", "\n", "            ", "ds_test", ".", "set_auto_maskandscale", "(", "False", ")", "\n", "seq_test", "=", "np", ".", "array", "(", "ds_test", "[", "\"sequences\"", "]", "[", ":", "]", ",", "copy", "=", "False", ")", "\n", "", "batch_gen_test", "=", "data", ".", "BatchGenerator", "(", "seq_test", ",", "\n", "dec", ",", "downsampler", ",", "batch_size", "=", "batch_size", ",", "random_seed", "=", "random_seed", ",", "\n", "zeros_frac", "=", "0.0", ")", "\n", "", "else", ":", "\n", "        ", "seq_test", "=", "None", "\n", "\n", "", "return", "(", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_gan": [[81, 110], ["models.generator", "models.initial_state_model", "models.generator_initialized", "models.discriminator", "gan.WGANGP", "train.setup_batch_gen", "gc.collect"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.initial_state_model", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator_initialized", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.discriminator", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_batch_gen"], ["", "def", "setup_gan", "(", "data_file", "=", "None", ",", "test_data_file", "=", "None", ",", "application", "=", "\"mchrzc\"", ",", "\n", "steps_per_epoch", "=", "None", ",", "\n", "batch_size", "=", "32", ",", "sample_random", "=", "False", ",", "\n", "validation_frac", "=", "0.1", ",", "validation_seed", "=", "1234", ",", "\n", "scaling_fn", "=", "path", "+", "\"/../data/scale_rzc.npy\"", ",", "\n", "n_samples", "=", "None", ",", "random_seed", "=", "None", ",", "lr_disc", "=", "0.0001", ",", "lr_gen", "=", "0.0001", ")", ":", "\n", "\n", "    ", "(", "gen", ",", "_", ")", "=", "models", ".", "generator", "(", ")", "\n", "init_model", "=", "models", ".", "initial_state_model", "(", ")", "\n", "(", "gen_init", ",", "noise_shapes", ")", "=", "models", ".", "generator_initialized", "(", "\n", "gen", ",", "init_model", ")", "\n", "disc", "=", "models", ".", "discriminator", "(", ")", "\n", "wgan", "=", "gan", ".", "WGANGP", "(", "gen_init", ",", "disc", ",", "lr_disc", "=", "lr_disc", ",", "lr_gen", "=", "lr_gen", ")", "\n", "\n", "(", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ")", "=", "setup_batch_gen", "(", "\n", "data_file", "=", "data_file", ",", "test_data_file", "=", "test_data_file", ",", "\n", "application", "=", "application", ",", "\n", "batch_size", "=", "batch_size", ",", "sample_random", "=", "sample_random", ",", "\n", "validation_frac", "=", "validation_frac", ",", "validation_seed", "=", "validation_seed", ",", "\n", "scaling_fn", "=", "scaling_fn", ",", "n_samples", "=", "n_samples", ",", "random_seed", "=", "random_seed", "\n", ")", "\n", "\n", "if", "steps_per_epoch", "is", "None", ":", "\n", "        ", "steps_per_epoch", "=", "batch_gen_train", ".", "N", "//", "batch_gen_train", ".", "batch_size", "\n", "\n", "", "gc", ".", "collect", "(", ")", "\n", "\n", "return", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ",", "\n", "noise_shapes", ",", "steps_per_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.train_gan": [[112, 128], ["noise.NoiseGenerator", "range", "noise_shapes", "print", "wgan.train", "plots.plot_sequences"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.train", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.plots.plot_sequences"], ["", "def", "train_gan", "(", "wgan", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "noise_shapes", ",", "\n", "steps_per_epoch", ",", "num_epochs", ",", "\n", "plot_samples", "=", "8", ",", "plot_fn", "=", "\"../figures/progress.pdf\"", ")", ":", "\n", "\n", "    ", "img_shape", "=", "batch_gen_train", ".", "img_shape", "\n", "noise_gen", "=", "noise", ".", "NoiseGenerator", "(", "noise_shapes", "(", "img_shape", ")", ",", "\n", "batch_size", "=", "batch_gen_train", ".", "batch_size", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "        ", "print", "(", "\"Epoch {}/{}\"", ".", "format", "(", "epoch", "+", "1", ",", "num_epochs", ")", ")", "\n", "loss_log", "=", "wgan", ".", "train", "(", "batch_gen_train", ",", "noise_gen", ",", "\n", "steps_per_epoch", ",", "training_ratio", "=", "5", ")", "\n", "plots", ".", "plot_sequences", "(", "wgan", ".", "gen", ",", "batch_gen_valid", ",", "noise_gen", ",", "\n", "num_samples", "=", "plot_samples", ",", "out_fn", "=", "plot_fn", ")", "\n", "\n", "", "return", "loss_log", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_deterministic": [[130, 159], ["models.generator", "models.initial_state_model", "models.generator_initialized", "models.generator_deterministic", "models.generator_deterministic.compile", "train.setup_batch_gen", "gc.collect", "tensorflow.keras.optimizers.Adam"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.initial_state_model", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator_initialized", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.models.generator_deterministic", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.compile", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.setup_batch_gen"], ["", "def", "setup_deterministic", "(", "data_file", "=", "None", ",", "test_data_file", "=", "None", ",", "\n", "application", "=", "\"mchrzc\"", ",", "steps_per_epoch", "=", "None", ",", "\n", "batch_size", "=", "32", ",", "sample_random", "=", "False", ",", "\n", "validation_frac", "=", "0.1", ",", "validation_seed", "=", "1234", ",", "\n", "scaling_fn", "=", "path", "+", "\"/../data/scale_rzc.npy\"", ",", "\n", "n_samples", "=", "None", ",", "random_seed", "=", "None", ",", "loss", "=", "'mse'", ",", "lr", "=", "1e-4", ")", ":", "\n", "\n", "    ", "(", "gen", ",", "_", ")", "=", "models", ".", "generator", "(", ")", "\n", "init_model", "=", "models", ".", "initial_state_model", "(", ")", "\n", "(", "gen_init", ",", "noise_shapes", ")", "=", "models", ".", "generator_initialized", "(", "\n", "gen", ",", "init_model", ")", "\n", "gen_det", "=", "models", ".", "generator_deterministic", "(", "gen_init", ")", "\n", "gen_det", ".", "compile", "(", "loss", "=", "loss", ",", "optimizer", "=", "Adam", "(", "lr", "=", "lr", ")", ")", "\n", "\n", "(", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ")", "=", "setup_batch_gen", "(", "\n", "data_file", "=", "data_file", ",", "test_data_file", "=", "test_data_file", ",", "\n", "application", "=", "application", ",", "\n", "batch_size", "=", "batch_size", ",", "sample_random", "=", "sample_random", ",", "\n", "validation_frac", "=", "validation_frac", ",", "validation_seed", "=", "validation_seed", ",", "\n", "scaling_fn", "=", "scaling_fn", ",", "n_samples", "=", "n_samples", ",", "random_seed", "=", "random_seed", "\n", ")", "\n", "\n", "if", "steps_per_epoch", "is", "None", ":", "\n", "        ", "steps_per_epoch", "=", "batch_gen_train", ".", "N", "//", "batch_gen_train", ".", "batch_size", "\n", "\n", "", "gc", ".", "collect", "(", ")", "\n", "\n", "return", "(", "gen_det", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "batch_gen_test", ",", "\n", "steps_per_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.train.train_deterministic": [[161, 179], ["tensorflow.keras.callbacks.EarlyStopping", "gen.fit", "train.train_deterministic.training_data"], "function", ["None"], ["", "def", "train_deterministic", "(", "gen", ",", "batch_gen_train", ",", "batch_gen_valid", ",", "\n", "steps_per_epoch", ",", "num_epochs", ")", ":", "\n", "\n", "    ", "def", "training_data", "(", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "yield", "next", "(", "batch_gen_train", ")", "[", ":", ":", "-", "1", "]", "\n", "\n", "", "", "def", "validation_data", "(", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "yield", "next", "(", "batch_gen_valid", ")", "[", ":", ":", "-", "1", "]", "\n", "\n", "", "", "callback", "=", "EarlyStopping", "(", "monitor", "=", "'val_loss'", ",", "patience", "=", "5", ",", "\n", "restore_best_weights", "=", "True", ")", "\n", "\n", "gen", ".", "fit", "(", "training_data", "(", ")", ",", "epochs", "=", "num_epochs", ",", "\n", "steps_per_epoch", "=", "steps_per_epoch", ",", "\n", "validation_data", "=", "validation_data", "(", ")", ",", "validation_steps", "=", "32", ",", "\n", "callbacks", "=", "[", "callback", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.Smoothener.__init__": [[6, 11], ["numpy.exp", "data.Smoothener.smoothing_kernel.sum"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "(", "x", ",", "y", ")", "=", "np", ".", "mgrid", "[", "-", "2", ":", "3", ",", "-", "2", ":", "3", "]", "\n", "self", ".", "smoothing_kernel", "=", "np", ".", "exp", "(", "-", "0.5", "*", "(", "x", "**", "2", "+", "y", "**", "2", ")", "/", "(", "0.65", "**", "2", ")", ")", "\n", "self", ".", "smoothing_kernel", "/=", "self", ".", "smoothing_kernel", ".", "sum", "(", ")", "\n", "self", ".", "edge_shapes", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.Smoothener.smoothen": [[12, 30], ["tuple", "numpy.empty_like", "range", "scipy.ndimage.convolve", "range", "numpy.ones", "range", "scipy.ndimage.convolve"], "methods", ["None"], ["", "def", "smoothen", "(", "self", ",", "img", ")", ":", "\n", "        ", "img_shape", "=", "tuple", "(", "img", ".", "shape", "[", "2", ":", "4", "]", ")", "\n", "if", "img_shape", "not", "in", "self", ".", "edge_shapes", ":", "\n", "            ", "s", "=", "convolve", "(", "np", ".", "ones", "(", "img_shape", ",", "dtype", "=", "np", ".", "float32", ")", ",", "\n", "self", ".", "smoothing_kernel", ",", "mode", "=", "\"constant\"", ")", "\n", "s", "=", "1.0", "/", "s", "\n", "self", ".", "edge_shapes", "[", "img_shape", "]", "=", "s", "\n", "", "else", ":", "\n", "            ", "s", "=", "self", ".", "edge_shapes", "[", "img_shape", "]", "\n", "\n", "", "img_smooth", "=", "np", ".", "empty_like", "(", "img", ")", "\n", "for", "i", "in", "range", "(", "img", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "img", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "for", "k", "in", "range", "(", "img", ".", "shape", "[", "-", "1", "]", ")", ":", "\n", "                    ", "img_smooth", "[", "i", ",", "j", ",", ":", ",", ":", ",", "k", "]", "=", "convolve", "(", "img", "[", "i", ",", "j", ",", ":", ",", ":", ",", "k", "]", ",", "\n", "self", ".", "smoothing_kernel", ",", "mode", "=", "\"constant\"", ")", "*", "s", "\n", "\n", "", "", "", "return", "img_smooth", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.__init__": [[34, 49], ["tuple", "data.Smoothener", "data.BatchGenerator.reset"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.reset"], ["    ", "def", "__init__", "(", "self", ",", "sequences", ",", "decoder", ",", "downsampler", ",", "batch_size", "=", "32", ",", "\n", "random_seed", "=", "None", ",", "augment", "=", "True", ",", "smoothen_image", "=", "True", ",", "zeros_frac", "=", "0.0", ")", ":", "\n", "\n", "        ", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "sequences", "=", "sequences", "\n", "self", ".", "N", "=", "self", ".", "sequences", ".", "shape", "[", "0", "]", "\n", "self", ".", "img_shape", "=", "tuple", "(", "self", ".", "sequences", ".", "shape", "[", "2", ":", "4", "]", ")", "\n", "self", ".", "num_frames", "=", "self", ".", "sequences", ".", "shape", "[", "1", "]", "\n", "self", ".", "decoder", "=", "decoder", "\n", "self", ".", "downsampler", "=", "downsampler", "\n", "self", ".", "augment", "=", "augment", "\n", "self", ".", "smoothen_image", "=", "smoothen_image", "\n", "self", ".", "zeros_frac", "=", "zeros_frac", "\n", "self", ".", "smoothener", "=", "Smoothener", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.__iter__": [[50, 52], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.reset": [[53, 56], ["numpy.random.RandomState", "numpy.array"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "random_seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "prng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", "=", "random_seed", ")", "\n", "self", ".", "next_ind", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.next_indices": [[57, 63], ["len", "numpy.arange", "data.BatchGenerator.prng.shuffle", "numpy.concatenate"], "methods", ["None"], ["", "def", "next_indices", "(", "self", ")", ":", "\n", "        ", "while", "len", "(", "self", ".", "next_ind", ")", "<", "self", ".", "batch_size", ":", "\n", "            ", "ind", "=", "np", ".", "arange", "(", "self", ".", "N", ",", "dtype", "=", "int", ")", "\n", "self", ".", "prng", ".", "shuffle", "(", "ind", ")", "\n", "self", ".", "next_ind", "=", "np", ".", "concatenate", "(", "[", "self", ".", "next_ind", ",", "ind", "]", ")", "\n", "", "return", "self", ".", "next_ind", "[", ":", "self", ".", "batch_size", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.__next__": [[64, 85], ["data.BatchGenerator.next_indices", "data.BatchGenerator.decoder", "data.BatchGenerator.downsampler", "data.BatchGenerator.decoder.normalize", "data.BatchGenerator.decoder.normalize", "data.BatchGenerator.augment_sequence_batch", "data.BatchGenerator.smoothener.smoothen", "data.BatchGenerator.prng.rand"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.next_indices", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.normalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.normalize", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.augment_sequence_batch", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.Smoothener.smoothen"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "ind", "=", "self", ".", "next_indices", "(", ")", "\n", "self", ".", "next_ind", "=", "self", ".", "next_ind", "[", "self", ".", "batch_size", ":", "]", "\n", "\n", "X", "=", "self", ".", "sequences", "[", "ind", ",", "...", "]", "\n", "\n", "X", "=", "self", ".", "decoder", "(", "X", ")", "\n", "if", "self", ".", "augment", ":", "\n", "            ", "X", "=", "self", ".", "augment_sequence_batch", "(", "X", ")", "\n", "", "Y", "=", "self", ".", "downsampler", "(", "X", ")", "\n", "X", "=", "self", ".", "decoder", ".", "normalize", "(", "X", ")", "\n", "Y", "=", "self", ".", "decoder", ".", "normalize", "(", "Y", ")", "\n", "if", "self", ".", "smoothen_image", ":", "\n", "            ", "X", "=", "self", ".", "smoothener", ".", "smoothen", "(", "X", ")", "\n", "\n", "", "if", "self", ".", "zeros_frac", ">", "0.0", ":", "\n", "            ", "set_zero", "=", "(", "self", ".", "prng", ".", "rand", "(", "X", ".", "shape", "[", "0", "]", ")", "<", "self", ".", "zeros_frac", ")", "\n", "X", "[", "set_zero", ",", "...", "]", "=", "0.0", "\n", "Y", "[", "set_zero", ",", "...", "]", "=", "0.0", "\n", "\n", "", "return", "(", "X", ",", "Y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.augment_sequence": [[86, 101], ["sequence.copy", "bool", "bool", "data.BatchGenerator.prng.randint", "data.BatchGenerator.prng.randint", "numpy.flip", "data.BatchGenerator.prng.randint", "numpy.flip", "numpy.rot90"], "methods", ["None"], ["", "def", "augment_sequence", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "seq", "=", "sequence", ".", "copy", "(", ")", "\n", "\n", "# mirror", "\n", "if", "bool", "(", "self", ".", "prng", ".", "randint", "(", "2", ")", ")", ":", "\n", "            ", "seq", "=", "np", ".", "flip", "(", "seq", ",", "axis", "=", "1", ")", "\n", "", "if", "bool", "(", "self", ".", "prng", ".", "randint", "(", "2", ")", ")", ":", "\n", "            ", "seq", "=", "np", ".", "flip", "(", "seq", ",", "axis", "=", "2", ")", "\n", "\n", "# rotate", "\n", "", "num_rot", "=", "self", ".", "prng", ".", "randint", "(", "4", ")", "\n", "if", "num_rot", ">", "0", ":", "\n", "            ", "seq", "=", "np", ".", "rot90", "(", "seq", ",", "k", "=", "num_rot", ",", "axes", "=", "(", "1", ",", "2", ")", ")", "\n", "\n", "", "return", "seq", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.augment_sequence_batch": [[102, 107], ["sequences.copy.copy.copy", "range", "data.BatchGenerator.augment_sequence"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.BatchGenerator.augment_sequence"], ["", "def", "augment_sequence_batch", "(", "self", ",", "sequences", ")", ":", "\n", "        ", "sequences", "=", "sequences", ".", "copy", "(", ")", "\n", "for", "i", "in", "range", "(", "sequences", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "sequences", "[", "i", ",", "...", "]", "=", "self", ".", "augment_sequence", "(", "sequences", "[", "i", ",", "...", "]", ")", "\n", "", "return", "sequences", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.__init__": [[110, 119], ["numpy.log10", "numpy.log10", "numpy.log10", "numpy.load"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.gan.WGANGP.load"], ["    ", "def", "__init__", "(", "self", ",", "scaling_fn", ",", "value_range", "=", "(", "np", ".", "log10", "(", "0.1", ")", ",", "np", ".", "log10", "(", "100", ")", ")", ",", "\n", "below_val", "=", "np", ".", "nan", ",", "normalize", "=", "False", ")", ":", "\n", "\n", "        ", "self", ".", "logR", "=", "np", ".", "log10", "(", "np", ".", "load", "(", "scaling_fn", ")", ")", "\n", "self", ".", "logR", "[", "0", "]", "=", "np", ".", "nan", "\n", "#self.x = np.arange(len(self.logR))", "\n", "self", ".", "value_range", "=", "value_range", "\n", "self", ".", "below_val", "=", "below_val", "\n", "self", ".", "normalize_output", "=", "normalize", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.__call__": [[120, 129], ["numpy.full", "data.RainRateDecoder.clip", "data.RainRateDecoder.normalize"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.normalize"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "valid", "=", "(", "img", "!=", "0", ")", "\n", "img_dec", "=", "np", ".", "full", "(", "img", ".", "shape", ",", "np", ".", "nan", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img_dec", "[", "valid", "]", "=", "self", ".", "logR", "[", "img", "[", "valid", "]", "]", "\n", "img_dec", "[", "img_dec", "<", "self", ".", "value_range", "[", "0", "]", "]", "=", "self", ".", "below_val", "\n", "img_dec", ".", "clip", "(", "max", "=", "self", ".", "value_range", "[", "1", "]", ",", "out", "=", "img_dec", ")", "\n", "if", "self", ".", "normalize_output", ":", "\n", "            ", "img_dec", "=", "self", ".", "normalize", "(", "img_dec", ")", "\n", "", "return", "img_dec", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.normalize": [[130, 133], ["None"], "methods", ["None"], ["", "def", "normalize", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "(", "img", "-", "self", ".", "below_val", ")", "/", "(", "self", ".", "value_range", "[", "1", "]", "-", "self", ".", "below_val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.denormalize": [[134, 140], ["None"], "methods", ["None"], ["", "def", "denormalize", "(", "self", ",", "img", ",", "set_nan", "=", "True", ")", ":", "\n", "        ", "img", "=", "img", "*", "(", "self", ".", "value_range", "[", "1", "]", "-", "self", ".", "below_val", ")", "+", "self", ".", "below_val", "\n", "img", "[", "img", "<", "self", ".", "value_range", "[", "0", "]", "]", "=", "self", ".", "below_val", "\n", "if", "set_nan", ":", "\n", "            ", "img", "[", "img", "==", "self", ".", "below_val", "]", "=", "np", ".", "nan", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.CODDecoder.__init__": [[143, 152], ["numpy.log", "numpy.log"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "value_range", "=", "(", "np", ".", "log", "(", "1.19", ")", ",", "np", ".", "log", "(", "158.48865", ")", ")", ",", "\n", "below_val", "=", "np", ".", "nan", ",", "normalize", "=", "False", ",", "\n", "scale_factor", "=", "158.48865", "/", "(", "2", "**", "16", "-", "2", ")", ")", ":", "\n", "\n", "        ", "self", ".", "value_range", "=", "value_range", "\n", "self", ".", "below_val", "=", "below_val", "\n", "self", ".", "normalize_output", "=", "normalize", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.CODDecoder.__call__": [[153, 162], ["numpy.full", "numpy.log", "data.CODDecoder.clip", "data.CODDecoder.normalize"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.RainRateDecoder.normalize"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "valid", "=", "(", "img", "!=", "0", ")", "\n", "img_dec", "=", "np", ".", "full", "(", "img", ".", "shape", ",", "np", ".", "nan", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img_dec", "[", "valid", "]", "=", "np", ".", "log", "(", "img", "[", "valid", "]", "*", "self", ".", "scale_factor", ")", "\n", "img_dec", "[", "(", "img_dec", "<", "self", ".", "value_range", "[", "0", "]", ")", "|", "~", "valid", "]", "=", "self", ".", "below_val", "\n", "img_dec", ".", "clip", "(", "max", "=", "self", ".", "value_range", "[", "1", "]", ",", "out", "=", "img_dec", ")", "\n", "if", "self", ".", "normalize_output", ":", "\n", "            ", "img_dec", "=", "self", ".", "normalize", "(", "img_dec", ")", "\n", "", "return", "img_dec", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.LogDownsampler.__init__": [[165, 169], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "pool_size", "=", "16", ",", "min_val", "=", "np", ".", "nan", ",", "threshold_val", "=", "None", ")", ":", "\n", "        ", "self", ".", "pool_size", "=", "pool_size", "\n", "self", ".", "min_val", "=", "min_val", "\n", "self", ".", "threshold_val", "=", "threshold_val", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.data.LogDownsampler.__call__": [[170, 187], ["numpy.zeros", "enumerate", "numpy.log10", "range", "enumerate", "numpy.isfinite", "range", "R[].mean", "numpy.isfinite"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "log_R", ")", ":", "\n", "        ", "R", "=", "10", "**", "log_R", "\n", "R", "[", "~", "np", ".", "isfinite", "(", "R", ")", "]", "=", "0.0", "\n", "lores_shape", "=", "(", "log_R", ".", "shape", "[", "0", "]", ",", "log_R", ".", "shape", "[", "1", "]", ",", "\n", "log_R", ".", "shape", "[", "2", "]", "//", "self", ".", "pool_size", ",", "log_R", ".", "shape", "[", "3", "]", "//", "self", ".", "pool_size", ",", "\n", "log_R", ".", "shape", "[", "4", "]", ")", "\n", "R_ds", "=", "np", ".", "zeros", "(", "lores_shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "(", "il", ",", "ih", ")", "in", "enumerate", "(", "range", "(", "0", ",", "log_R", ".", "shape", "[", "2", "]", ",", "self", ".", "pool_size", ")", ")", ":", "\n", "            ", "for", "(", "jl", ",", "jh", ")", "in", "enumerate", "(", "range", "(", "0", ",", "log_R", ".", "shape", "[", "3", "]", ",", "self", ".", "pool_size", ")", ")", ":", "\n", "                ", "R_ds", "[", ":", ",", ":", ",", "il", ",", "jl", ",", ":", "]", "=", "R", "[", ":", ",", ":", ",", "ih", ":", "ih", "+", "self", ".", "pool_size", ",", "\n", "jh", ":", "jh", "+", "self", ".", "pool_size", ",", ":", "]", ".", "mean", "(", "axis", "=", "(", "2", ",", "3", ")", ")", "\n", "", "", "log_R_ds", "=", "np", ".", "log10", "(", "R_ds", ")", "\n", "min_mask", "=", "~", "np", ".", "isfinite", "(", "log_R_ds", ")", "\n", "if", "self", ".", "threshold_val", "is", "not", "None", ":", "\n", "            ", "min_mask", "|=", "(", "log_R_ds", "<", "self", ".", "threshold_val", ")", "\n", "", "log_R_ds", "[", "min_mask", "]", "=", "self", ".", "min_val", "\n", "return", "log_R_ds", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.GradientPenalty.__init__": [[14, 16], ["tensorflow.keras.layers.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.ReflectionPadding2D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "GradientPenalty", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.GradientPenalty.call": [[17, 21], ["tensorflow.keras.backend.gradients", "tensorflow.keras.backend.sqrt", "tensorflow.keras.backend.sum", "tensorflow.keras.backend.batch_flatten", "tensorflow.keras.backend.square"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "target", ",", "wrt", "=", "inputs", "\n", "grad", "=", "K", ".", "gradients", "(", "target", ",", "wrt", ")", "[", "0", "]", "\n", "return", "K", ".", "sqrt", "(", "K", ".", "sum", "(", "K", ".", "batch_flatten", "(", "K", ".", "square", "(", "grad", ")", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ")", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.GradientPenalty.compute_output_shape": [[22, 24], ["None"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shapes", ")", ":", "\n", "        ", "return", "(", "input_shapes", "[", "1", "]", "[", "0", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.RandomWeightedAverage.build": [[27, 31], ["super().build", "len", "ValueError"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNDense.build"], ["    ", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "super", "(", "RandomWeightedAverage", ",", "self", ")", ".", "build", "(", "input_shape", ")", "\n", "if", "len", "(", "input_shape", ")", "!=", "2", ":", "\n", "            ", "raise", "ValueError", "(", "'A `RandomWeightedAverage` layer should be '", "\n", "'called on exactly 2 inputs'", ")", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.RandomWeightedAverage._merge_function": [[33, 44], ["tensorflow.keras.backend.shape", "tensorflow.keras.backend.random_uniform", "range", "len", "ValueError", "tensorflow.keras.backend.expand_dims", "len", "tensorflow.keras.backend.int_shape"], "methods", ["None"], ["", "", "def", "_merge_function", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "len", "(", "inputs", ")", "!=", "2", ":", "\n", "            ", "raise", "ValueError", "(", "'A `RandomWeightedAverage` layer should be '", "\n", "'called on exactly 2 inputs'", ")", "\n", "\n", "", "(", "x", ",", "y", ")", "=", "inputs", "\n", "shape", "=", "K", ".", "shape", "(", "x", ")", "\n", "weights", "=", "K", ".", "random_uniform", "(", "shape", "[", ":", "1", "]", ",", "0", ",", "1", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "K", ".", "int_shape", "(", "x", ")", ")", "-", "1", ")", ":", "\n", "            ", "weights", "=", "K", ".", "expand_dims", "(", "weights", ",", "-", "1", ")", "\n", "", "return", "x", "*", "weights", "+", "y", "*", "(", "1", "-", "weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNConv2D.build": [[48, 83], ["layers.SNConv2D.add_weight", "layers.SNConv2D.add_weight", "tensorflow.python.keras.engine.InputSpec", "ValueError", "layers.SNConv2D.add_weight", "tuple", "tensorflow.keras.initializers.RandomNormal", "layers.SNConv2D.kernel.shape.as_list"], "methods", ["None"], ["    ", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "if", "self", ".", "data_format", "==", "'channels_first'", ":", "\n", "            ", "channel_axis", "=", "1", "\n", "", "else", ":", "\n", "            ", "channel_axis", "=", "-", "1", "\n", "", "if", "input_shape", "[", "channel_axis", "]", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "'The channel dimension of the inputs '", "\n", "'should be defined. Found `None`.'", ")", "\n", "", "input_dim", "=", "input_shape", "[", "channel_axis", "]", "\n", "kernel_shape", "=", "self", ".", "kernel_size", "+", "(", "input_dim", ",", "self", ".", "filters", ")", "\n", "\n", "self", ".", "kernel", "=", "self", ".", "add_weight", "(", "shape", "=", "kernel_shape", ",", "\n", "initializer", "=", "self", ".", "kernel_initializer", ",", "\n", "name", "=", "'kernel'", ",", "\n", "regularizer", "=", "self", ".", "kernel_regularizer", ",", "\n", "constraint", "=", "self", ".", "kernel_constraint", ")", "\n", "\n", "if", "self", ".", "use_bias", ":", "\n", "            ", "self", ".", "bias", "=", "self", ".", "add_weight", "(", "shape", "=", "(", "self", ".", "filters", ",", ")", ",", "\n", "initializer", "=", "self", ".", "bias_initializer", ",", "\n", "name", "=", "'bias'", ",", "\n", "regularizer", "=", "self", ".", "bias_regularizer", ",", "\n", "constraint", "=", "self", ".", "bias_constraint", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "\n", "", "self", ".", "u", "=", "self", ".", "add_weight", "(", "shape", "=", "tuple", "(", "[", "1", ",", "self", ".", "kernel", ".", "shape", ".", "as_list", "(", ")", "[", "-", "1", "]", "]", ")", ",", "\n", "initializer", "=", "initializers", ".", "RandomNormal", "(", "0", ",", "1", ")", ",", "\n", "name", "=", "'sn'", ",", "\n", "trainable", "=", "False", ")", "\n", "\n", "# Set input spec.", "\n", "self", ".", "input_spec", "=", "InputSpec", "(", "ndim", "=", "self", ".", "rank", "+", "2", ",", "\n", "axes", "=", "{", "channel_axis", ":", "input_dim", "}", ")", "\n", "self", ".", "built", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNConv2D._get_trainable_var": [[84, 89], ["tensorflow.keras.backend.freezable_variable"], "methods", ["None"], ["", "def", "_get_trainable_var", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_trainable_var", "is", "None", ":", "\n", "            ", "self", ".", "_trainable_var", "=", "K", ".", "freezable_variable", "(", "\n", "self", ".", "_trainable", ",", "name", "=", "self", ".", "name", "+", "'_trainable'", ")", "\n", "", "return", "self", ".", "_trainable_var", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNConv2D._get_training_value": [[90, 100], ["isinstance", "tensorflow.python.keras.engine.base_layer_utils.is_in_keras_graph", "tensorflow.keras.backend.learning_phase", "bool", "tensorflow.python.ops.math_ops.logical_and", "tensorflow.python.ops.math_ops.logical_and", "layers.SNConv2D._get_trainable_var"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNDense._get_trainable_var"], ["", "def", "_get_training_value", "(", "self", ",", "training", "=", "None", ")", ":", "\n", "        ", "if", "training", "is", "None", ":", "\n", "            ", "training", "=", "K", ".", "learning_phase", "(", ")", "\n", "", "if", "isinstance", "(", "training", ",", "int", ")", ":", "\n", "            ", "training", "=", "bool", "(", "training", ")", "\n", "", "if", "base_layer_utils", ".", "is_in_keras_graph", "(", ")", ":", "\n", "            ", "training", "=", "math_ops", ".", "logical_and", "(", "training", ",", "self", ".", "_get_trainable_var", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "training", "=", "math_ops", ".", "logical_and", "(", "training", ",", "self", ".", "trainable", ")", "\n", "", "return", "training", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNConv2D.call": [[101, 152], ["layers.SNConv2D._get_training_value", "layers.SNConv2D.kernel.shape.as_list", "tensorflow.keras.backend.reshape", "layers.SNConv2D.call.power_iteration"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNDense._get_training_value"], ["", "def", "call", "(", "self", ",", "inputs", ",", "training", "=", "None", ")", ":", "\n", "        ", "training", "=", "self", ".", "_get_training_value", "(", "training", ")", "\n", "\n", "def", "_l2normalize", "(", "v", ",", "eps", "=", "1e-12", ")", ":", "\n", "            ", "return", "v", "/", "(", "K", ".", "sum", "(", "v", "**", "2", ")", "**", "0.5", "+", "eps", ")", "\n", "\n", "", "def", "power_iteration", "(", "W", ",", "u", ")", ":", "\n", "#Accroding the paper, we only need to do power iteration one time.", "\n", "            ", "_u", "=", "u", "\n", "_v", "=", "_l2normalize", "(", "K", ".", "dot", "(", "_u", ",", "K", ".", "transpose", "(", "W", ")", ")", ")", "\n", "_u", "=", "_l2normalize", "(", "K", ".", "dot", "(", "_v", ",", "W", ")", ")", "\n", "return", "_u", ",", "_v", "\n", "\n", "#Spectral Normalization", "\n", "", "W_shape", "=", "self", ".", "kernel", ".", "shape", ".", "as_list", "(", ")", "\n", "#Flatten the Tensor", "\n", "W_reshaped", "=", "K", ".", "reshape", "(", "self", ".", "kernel", ",", "[", "-", "1", ",", "W_shape", "[", "-", "1", "]", "]", ")", "\n", "_u", ",", "_v", "=", "power_iteration", "(", "W_reshaped", ",", "self", ".", "u", ")", "\n", "#Calculate Sigma", "\n", "sigma", "=", "K", ".", "dot", "(", "_v", ",", "W_reshaped", ")", "\n", "sigma", "=", "K", ".", "dot", "(", "sigma", ",", "K", ".", "transpose", "(", "_u", ")", ")", "\n", "#normalize it", "\n", "W_bar", "=", "W_reshaped", "/", "sigma", "\n", "\n", "if", "training", "==", "False", ":", "\n", "            ", "W_bar", "=", "K", ".", "reshape", "(", "W_bar", ",", "W_shape", ")", "\n", "", "else", ":", "\n", "            ", "u", "=", "self", ".", "u", ".", "assign", "(", "tf", ".", "cond", "(", "\n", "training", ",", "\n", "lambda", ":", "_u", ",", "\n", "lambda", ":", "self", ".", "u", "\n", ")", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "u", "]", ")", ":", "\n", "                ", "W_bar", "=", "K", ".", "reshape", "(", "W_bar", ",", "W_shape", ")", "\n", "\n", "", "", "outputs", "=", "K", ".", "conv2d", "(", "\n", "inputs", ",", "\n", "W_bar", ",", "\n", "strides", "=", "self", ".", "strides", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", "data_format", "=", "self", ".", "data_format", ",", "\n", "dilation_rate", "=", "self", ".", "dilation_rate", ")", "\n", "if", "self", ".", "use_bias", ":", "\n", "            ", "outputs", "=", "K", ".", "bias_add", "(", "\n", "outputs", ",", "\n", "self", ".", "bias", ",", "\n", "data_format", "=", "self", ".", "data_format", ")", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "activation", "(", "outputs", ")", "\n", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNDense.build": [[155, 177], ["layers.SNDense.add_weight", "layers.SNDense.add_weight", "tensorflow.python.keras.engine.InputSpec", "len", "layers.SNDense.add_weight", "tuple", "tensorflow.keras.initializers.RandomNormal", "layers.SNDense.kernel.shape.as_list"], "methods", ["None"], ["    ", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "assert", "len", "(", "input_shape", ")", ">=", "2", "\n", "input_dim", "=", "input_shape", "[", "-", "1", "]", "\n", "self", ".", "kernel", "=", "self", ".", "add_weight", "(", "shape", "=", "(", "input_dim", ",", "self", ".", "units", ")", ",", "\n", "initializer", "=", "self", ".", "kernel_initializer", ",", "\n", "name", "=", "'kernel'", ",", "\n", "regularizer", "=", "self", ".", "kernel_regularizer", ",", "\n", "constraint", "=", "self", ".", "kernel_constraint", ")", "\n", "if", "self", ".", "use_bias", ":", "\n", "            ", "self", ".", "bias", "=", "self", ".", "add_weight", "(", "shape", "=", "(", "self", ".", "units", ",", ")", ",", "\n", "initializer", "=", "self", ".", "bias_initializer", ",", "\n", "name", "=", "'bias'", ",", "\n", "regularizer", "=", "self", ".", "bias_regularizer", ",", "\n", "constraint", "=", "self", ".", "bias_constraint", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "", "self", ".", "u", "=", "self", ".", "add_weight", "(", "shape", "=", "tuple", "(", "[", "1", ",", "self", ".", "kernel", ".", "shape", ".", "as_list", "(", ")", "[", "-", "1", "]", "]", ")", ",", "\n", "initializer", "=", "initializers", ".", "RandomNormal", "(", "0", ",", "1", ")", ",", "\n", "name", "=", "'sn'", ",", "\n", "trainable", "=", "False", ")", "\n", "self", ".", "input_spec", "=", "InputSpec", "(", "min_ndim", "=", "2", ",", "axes", "=", "{", "-", "1", ":", "input_dim", "}", ")", "\n", "self", ".", "built", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNDense._get_trainable_var": [[178, 183], ["tensorflow.keras.backend.freezable_variable"], "methods", ["None"], ["", "def", "_get_trainable_var", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_trainable_var", "is", "None", ":", "\n", "            ", "self", ".", "_trainable_var", "=", "K", ".", "freezable_variable", "(", "\n", "self", ".", "_trainable", ",", "name", "=", "self", ".", "name", "+", "'_trainable'", ")", "\n", "", "return", "self", ".", "_trainable_var", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNDense._get_training_value": [[184, 194], ["isinstance", "tensorflow.python.keras.engine.base_layer_utils.is_in_keras_graph", "tensorflow.keras.backend.learning_phase", "bool", "tensorflow.python.ops.math_ops.logical_and", "tensorflow.python.ops.math_ops.logical_and", "layers.SNDense._get_trainable_var"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNDense._get_trainable_var"], ["", "def", "_get_training_value", "(", "self", ",", "training", "=", "None", ")", ":", "\n", "        ", "if", "training", "is", "None", ":", "\n", "            ", "training", "=", "K", ".", "learning_phase", "(", ")", "\n", "", "if", "isinstance", "(", "training", ",", "int", ")", ":", "\n", "            ", "training", "=", "bool", "(", "training", ")", "\n", "", "if", "base_layer_utils", ".", "is_in_keras_graph", "(", ")", ":", "\n", "            ", "training", "=", "math_ops", ".", "logical_and", "(", "training", ",", "self", ".", "_get_trainable_var", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "training", "=", "math_ops", ".", "logical_and", "(", "training", ",", "self", ".", "trainable", ")", "\n", "", "return", "training", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNDense.call": [[195, 234], ["layers.SNDense._get_training_value", "layers.SNDense.kernel.shape.as_list", "tensorflow.keras.backend.reshape", "layers.SNDense.call.power_iteration"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.SNDense._get_training_value"], ["", "def", "call", "(", "self", ",", "inputs", ",", "training", "=", "None", ")", ":", "\n", "        ", "training", "=", "self", ".", "_get_training_value", "(", "training", ")", "\n", "\n", "def", "_l2normalize", "(", "v", ",", "eps", "=", "1e-12", ")", ":", "\n", "            ", "return", "v", "/", "(", "K", ".", "sum", "(", "v", "**", "2", ")", "**", "0.5", "+", "eps", ")", "\n", "\n", "", "def", "power_iteration", "(", "W", ",", "u", ")", ":", "\n", "            ", "_u", "=", "u", "\n", "_v", "=", "_l2normalize", "(", "K", ".", "dot", "(", "_u", ",", "K", ".", "transpose", "(", "W", ")", ")", ")", "\n", "_u", "=", "_l2normalize", "(", "K", ".", "dot", "(", "_v", ",", "W", ")", ")", "\n", "return", "_u", ",", "_v", "\n", "\n", "", "W_shape", "=", "self", ".", "kernel", ".", "shape", ".", "as_list", "(", ")", "\n", "#Flatten the Tensor", "\n", "W_reshaped", "=", "K", ".", "reshape", "(", "self", ".", "kernel", ",", "[", "-", "1", ",", "W_shape", "[", "-", "1", "]", "]", ")", "\n", "_u", ",", "_v", "=", "power_iteration", "(", "W_reshaped", ",", "self", ".", "u", ")", "\n", "#Calculate Sigma", "\n", "sigma", "=", "K", ".", "dot", "(", "_v", ",", "W_reshaped", ")", "\n", "sigma", "=", "K", ".", "dot", "(", "sigma", ",", "K", ".", "transpose", "(", "_u", ")", ")", "\n", "#normalize it", "\n", "W_bar", "=", "W_reshaped", "/", "sigma", "\n", "\n", "if", "training", "==", "False", ":", "\n", "            ", "W_bar", "=", "K", ".", "reshape", "(", "W_bar", ",", "W_shape", ")", "\n", "", "else", ":", "\n", "            ", "u", "=", "self", ".", "u", ".", "assign", "(", "tf", ".", "cond", "(", "\n", "training", ",", "\n", "lambda", ":", "_u", ",", "\n", "lambda", ":", "self", ".", "u", "\n", ")", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "u", "]", ")", ":", "\n", "                ", "W_bar", "=", "K", ".", "reshape", "(", "W_bar", ",", "W_shape", ")", "\n", "\n", "", "", "output", "=", "K", ".", "dot", "(", "inputs", ",", "W_bar", ")", "\n", "if", "self", ".", "use_bias", ":", "\n", "            ", "output", "=", "K", ".", "bias_add", "(", "output", ",", "self", ".", "bias", ",", "data_format", "=", "'channels_last'", ")", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "output", "=", "self", ".", "activation", "(", "output", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.ReflectionPadding2D.__init__": [[237, 240], ["tuple", "tensorflow.keras.layers.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.ReflectionPadding2D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "padding", "=", "tuple", "(", "padding", ")", "\n", "super", "(", "ReflectionPadding2D", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.ReflectionPadding2D.compute_output_shape": [[241, 247], ["None"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "s", ")", ":", "\n", "        ", "return", "(", "\n", "s", "[", "0", "]", ",", "\n", "None", "if", "s", "[", "1", "]", "is", "None", "else", "s", "[", "1", "]", "+", "2", "*", "self", ".", "padding", "[", "0", "]", ",", "\n", "None", "if", "s", "[", "2", "]", "is", "None", "else", "s", "[", "2", "]", "+", "2", "*", "self", ".", "padding", "[", "1", "]", ",", "\n", "s", "[", "3", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.layers.ReflectionPadding2D.call": [[249, 252], ["tensorflow.pad"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ")", ":", "\n", "        ", "(", "i_pad", ",", "j_pad", ")", "=", "self", ".", "padding", "\n", "return", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "i_pad", ",", "i_pad", "]", ",", "[", "j_pad", ",", "j_pad", "]", ",", "[", "0", ",", "0", "]", "]", ",", "'REFLECT'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.conv_block": [[12, 40], ["tuple", "TD", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.LeakyReLU", "TD", "Conv", "tensorflow.keras.layers.ReLU", "layers.ReflectionPadding2D", "tensorflow.keras.layers.ThresholdedReLU", "tensorflow.keras.layers.ELU", "tensorflow.keras.regularizers.l2"], "function", ["None"], ["def", "conv_block", "(", "channels", ",", "conv_size", "=", "(", "3", ",", "3", ")", ",", "time_dist", "=", "False", ",", "\n", "norm", "=", "None", ",", "stride", "=", "1", ",", "activation", "=", "'leakyrelu'", ",", "padding", "=", "'valid'", ")", ":", "\n", "\n", "    ", "Conv", "=", "SNConv2D", "if", "norm", "==", "\"spectral\"", "else", "Conv2D", "\n", "TD", "=", "TimeDistributed", "if", "time_dist", "else", "(", "lambda", "x", ":", "x", ")", "\n", "\n", "def", "block", "(", "x", ")", ":", "\n", "        ", "if", "norm", "==", "\"batch\"", ":", "\n", "            ", "x", "=", "BatchNormalization", "(", "momentum", "=", "0.8", ",", "scale", "=", "False", ")", "(", "x", ")", "\n", "", "if", "activation", "==", "'leakyrelu'", ":", "\n", "            ", "x", "=", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "", "elif", "activation", "==", "'relu'", ":", "\n", "            ", "x", "=", "ReLU", "(", ")", "(", "x", ")", "\n", "", "elif", "activation", "==", "'thresholdedrelu'", ":", "\n", "            ", "x", "=", "ThresholdedReLU", "(", ")", "(", "x", ")", "\n", "", "elif", "activation", "==", "'elu'", ":", "\n", "            ", "x", "=", "ELU", "(", ")", "(", "x", ")", "\n", "", "if", "padding", "==", "'reflect'", ":", "\n", "            ", "pad", "=", "tuple", "(", "(", "s", "-", "1", ")", "//", "2", "for", "s", "in", "conv_size", ")", "\n", "x", "=", "TD", "(", "ReflectionPadding2D", "(", "padding", "=", "pad", ")", ")", "(", "x", ")", "\n", "", "x", "=", "TD", "(", "Conv", "(", "channels", ",", "conv_size", ",", "\n", "padding", "=", "'valid'", "if", "padding", "==", "'reflect'", "else", "padding", ",", "\n", "strides", "=", "(", "stride", ",", "stride", ")", ",", "\n", "kernel_regularizer", "=", "(", "l2", "(", "1e-4", ")", "if", "norm", "!=", "\"spectral\"", "else", "None", ")", "\n", ")", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "return", "block", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.res_block": [[42, 68], ["int", "blocks.conv_block", "blocks.conv_block", "tensorflow.keras.layers.Add", "TD", "blocks.conv_block", "tensorflow.keras.layers.AveragePooling2D"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.conv_block", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.conv_block", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.blocks.conv_block"], ["", "def", "res_block", "(", "channels", ",", "conv_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "1", ",", "norm", "=", "None", ",", "\n", "time_dist", "=", "False", ",", "activation", "=", "'leakyrelu'", ")", ":", "\n", "\n", "    ", "TD", "=", "TimeDistributed", "if", "time_dist", "else", "(", "lambda", "x", ":", "x", ")", "\n", "\n", "def", "block", "(", "x", ")", ":", "\n", "        ", "in_channels", "=", "int", "(", "x", ".", "shape", "[", "-", "1", "]", ")", "\n", "x_in", "=", "x", "\n", "if", "(", "stride", ">", "1", ")", ":", "\n", "            ", "x_in", "=", "TD", "(", "AveragePooling2D", "(", "pool_size", "=", "(", "stride", ",", "stride", ")", ")", ")", "(", "x_in", ")", "\n", "", "if", "(", "channels", "!=", "in_channels", ")", ":", "\n", "            ", "x_in", "=", "conv_block", "(", "channels", ",", "conv_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "1", ",", "\n", "activation", "=", "False", ",", "time_dist", "=", "time_dist", ")", "(", "x_in", ")", "\n", "\n", "", "x", "=", "conv_block", "(", "channels", ",", "conv_size", "=", "conv_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "'reflect'", ",", "norm", "=", "norm", ",", "time_dist", "=", "time_dist", ",", "\n", "activation", "=", "activation", ")", "(", "x", ")", "\n", "x", "=", "conv_block", "(", "channels", ",", "conv_size", "=", "conv_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "'reflect'", ",", "norm", "=", "norm", ",", "time_dist", "=", "time_dist", ",", "\n", "activation", "=", "activation", ")", "(", "x", ")", "\n", "\n", "x", "=", "Add", "(", ")", "(", "[", "x", ",", "x_in", "]", ")", "\n", "\n", "return", "x", "\n", "\n", "", "return", "block", "\n", "", ""]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.msssim._FSpecialGauss": [[26, 38], ["numpy.exp", "len", "np.exp.sum"], "function", ["None"], ["def", "_FSpecialGauss", "(", "size", ",", "sigma", ")", ":", "\n", "  ", "\"\"\"Function to mimic the 'fspecial' gaussian MATLAB function.\"\"\"", "\n", "radius", "=", "size", "//", "2", "\n", "offset", "=", "0.0", "\n", "start", ",", "stop", "=", "-", "radius", ",", "radius", "+", "1", "\n", "if", "size", "%", "2", "==", "0", ":", "\n", "    ", "offset", "=", "0.5", "\n", "stop", "-=", "1", "\n", "", "x", ",", "y", "=", "np", ".", "mgrid", "[", "offset", "+", "start", ":", "stop", ",", "offset", "+", "start", ":", "stop", "]", "\n", "assert", "len", "(", "x", ")", "==", "size", "\n", "g", "=", "np", ".", "exp", "(", "-", "(", "(", "x", "**", "2", "+", "y", "**", "2", ")", "/", "(", "2.0", "*", "sigma", "**", "2", ")", ")", ")", "\n", "return", "g", "/", "g", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.msssim._SSIMForMultiScale": [[40, 114], ["img1.astype.astype", "img2.astype.astype", "min", "numpy.mean", "numpy.mean", "RuntimeError", "RuntimeError", "numpy.reshape", "scipy.signal.fftconvolve", "scipy.signal.fftconvolve", "scipy.signal.fftconvolve", "scipy.signal.fftconvolve", "scipy.signal.fftconvolve", "msssim._FSpecialGauss"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.msssim._FSpecialGauss"], ["", "def", "_SSIMForMultiScale", "(", "img1", ",", "img2", ",", "max_val", "=", "255", ",", "filter_size", "=", "11", ",", "\n", "filter_sigma", "=", "1.5", ",", "k1", "=", "0.01", ",", "k2", "=", "0.03", ")", ":", "\n", "  ", "\"\"\"Return the Structural Similarity Map between `img1` and `img2`.\n\n  This function attempts to match the functionality of ssim_index_new.m by\n  Zhou Wang: http://www.cns.nyu.edu/~lcv/ssim/msssim.zip\n\n  Arguments:\n    img1: Numpy array holding the first RGB image batch.\n    img2: Numpy array holding the second RGB image batch.\n    max_val: the dynamic range of the images (i.e., the difference between the\n      maximum the and minimum allowed values).\n    filter_size: Size of blur kernel to use (will be reduced for small images).\n    filter_sigma: Standard deviation for Gaussian blur kernel (will be reduced\n      for small images).\n    k1: Constant used to maintain stability in the SSIM calculation (0.01 in\n      the original paper).\n    k2: Constant used to maintain stability in the SSIM calculation (0.03 in\n      the original paper).\n\n  Returns:\n    Pair containing the mean SSIM and contrast sensitivity between `img1` and\n    `img2`.\n\n  Raises:\n    RuntimeError: If input images don't have the same shape or don't have four\n      dimensions: [batch_size, height, width, depth].\n  \"\"\"", "\n", "if", "img1", ".", "shape", "!=", "img2", ".", "shape", ":", "\n", "    ", "raise", "RuntimeError", "(", "'Input images must have the same shape (%s vs. %s).'", ",", "\n", "img1", ".", "shape", ",", "img2", ".", "shape", ")", "\n", "", "if", "img1", ".", "ndim", "!=", "4", ":", "\n", "    ", "raise", "RuntimeError", "(", "'Input images must have four dimensions, not %d'", ",", "\n", "img1", ".", "ndim", ")", "\n", "\n", "", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "_", ",", "height", ",", "width", ",", "_", "=", "img1", ".", "shape", "\n", "\n", "# Filter size can't be larger than height or width of images.", "\n", "size", "=", "min", "(", "filter_size", ",", "height", ",", "width", ")", "\n", "\n", "# Scale down sigma if a smaller filter size is used.", "\n", "sigma", "=", "size", "*", "filter_sigma", "/", "filter_size", "if", "filter_size", "else", "0", "\n", "\n", "if", "filter_size", ":", "\n", "    ", "window", "=", "np", ".", "reshape", "(", "_FSpecialGauss", "(", "size", ",", "sigma", ")", ",", "(", "1", ",", "size", ",", "size", ",", "1", ")", ")", "\n", "mu1", "=", "signal", ".", "fftconvolve", "(", "img1", ",", "window", ",", "mode", "=", "'valid'", ")", "\n", "mu2", "=", "signal", ".", "fftconvolve", "(", "img2", ",", "window", ",", "mode", "=", "'valid'", ")", "\n", "sigma11", "=", "signal", ".", "fftconvolve", "(", "img1", "*", "img1", ",", "window", ",", "mode", "=", "'valid'", ")", "\n", "sigma22", "=", "signal", ".", "fftconvolve", "(", "img2", "*", "img2", ",", "window", ",", "mode", "=", "'valid'", ")", "\n", "sigma12", "=", "signal", ".", "fftconvolve", "(", "img1", "*", "img2", ",", "window", ",", "mode", "=", "'valid'", ")", "\n", "", "else", ":", "\n", "# Empty blur kernel so no need to convolve.", "\n", "    ", "mu1", ",", "mu2", "=", "img1", ",", "img2", "\n", "sigma11", "=", "img1", "*", "img1", "\n", "sigma22", "=", "img2", "*", "img2", "\n", "sigma12", "=", "img1", "*", "img2", "\n", "\n", "", "mu11", "=", "mu1", "*", "mu1", "\n", "mu22", "=", "mu2", "*", "mu2", "\n", "mu12", "=", "mu1", "*", "mu2", "\n", "sigma11", "-=", "mu11", "\n", "sigma22", "-=", "mu22", "\n", "sigma12", "-=", "mu12", "\n", "\n", "# Calculate intermediate values used by both ssim and cs_map.", "\n", "c1", "=", "(", "k1", "*", "max_val", ")", "**", "2", "\n", "c2", "=", "(", "k2", "*", "max_val", ")", "**", "2", "\n", "v1", "=", "2.0", "*", "sigma12", "+", "c2", "\n", "v2", "=", "sigma11", "+", "sigma22", "+", "c2", "\n", "ssim", "=", "np", ".", "mean", "(", "(", "(", "(", "2.0", "*", "mu12", "+", "c1", ")", "*", "v1", ")", "/", "(", "(", "mu11", "+", "mu22", "+", "c1", ")", "*", "v2", ")", ")", ")", "\n", "cs", "=", "np", ".", "mean", "(", "v1", "/", "v2", ")", "\n", "return", "ssim", ",", "cs", "\n", "\n"]], "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.msssim.MultiScaleSSIM": [[116, 209], ["numpy.array", "numpy.array", "numpy.array", "range", "np.append.clip", "np.append.clip", "numpy.array", "RuntimeError", "RuntimeError", "img1.reshape.reshape", "img2.reshape.reshape", "numpy.ones", "x.astype", "msssim._SSIMForMultiScale", "numpy.append", "numpy.append", "numpy.prod", "numpy.isfinite", "msssim.MultiScaleSSIM", "zip", "numpy.hstack", "scipy.ndimage.filters.convolve", "np.zeros.append", "numpy.zeros", "range", "msssim.MultiScaleSSIM", "range", "msssim.MultiScaleSSIM"], "function", ["home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.msssim._SSIMForMultiScale", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.msssim.MultiScaleSSIM", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.msssim.MultiScaleSSIM", "home.repos.pwc.inspect_result.jleinonen_downscaling-rnn-gan.dsrnngan.msssim.MultiScaleSSIM"], ["", "def", "MultiScaleSSIM", "(", "img1", ",", "img2", ",", "max_val", "=", "255", ",", "filter_size", "=", "11", ",", "filter_sigma", "=", "1.5", ",", "\n", "k1", "=", "0.01", ",", "k2", "=", "0.03", ",", "weights", "=", "None", ")", ":", "\n", "  ", "\"\"\"Return the MS-SSIM score between `img1` and `img2`.\n\n  This function implements Multi-Scale Structural Similarity (MS-SSIM) Image\n  Quality Assessment according to Zhou Wang's paper, \"Multi-scale structural\n  similarity for image quality assessment\" (2003).\n  Link: https://ece.uwaterloo.ca/~z70wang/publications/msssim.pdf\n\n  Author's MATLAB implementation:\n  http://www.cns.nyu.edu/~lcv/ssim/msssim.zip\n\n  Arguments:\n    img1: Numpy array holding the first RGB image batch.\n    img2: Numpy array holding the second RGB image batch.\n    max_val: the dynamic range of the images (i.e., the difference between the\n      maximum the and minimum allowed values).\n    filter_size: Size of blur kernel to use (will be reduced for small images).\n    filter_sigma: Standard deviation for Gaussian blur kernel (will be reduced\n      for small images).\n    k1: Constant used to maintain stability in the SSIM calculation (0.01 in\n      the original paper).\n    k2: Constant used to maintain stability in the SSIM calculation (0.03 in\n      the original paper).\n    weights: List of weights for each level; if none, use five levels and the\n      weights from the original paper.\n\n  Returns:\n    MS-SSIM score between `img1` and `img2`.\n\n  Raises:\n    RuntimeError: If input images don't have the same shape or don't have four\n      dimensions: [batch_size, height, width, depth].\n  \"\"\"", "\n", "if", "img1", ".", "shape", "!=", "img2", ".", "shape", ":", "\n", "    ", "raise", "RuntimeError", "(", "'Input images must have the same shape (%s vs. %s).'", ",", "\n", "img1", ".", "shape", ",", "img2", ".", "shape", ")", "\n", "", "if", "img1", ".", "ndim", "not", "in", "{", "3", ",", "4", ",", "5", "}", ":", "\n", "    ", "raise", "RuntimeError", "(", "'Input images must have 3-5 dimensions, not %d'", ",", "\n", "img1", ".", "ndim", ")", "\n", "\n", "# modified from the original: handle more input shapes", "\n", "", "if", "img1", ".", "ndim", "==", "3", ":", "\n", "    ", "img1", "=", "img1", ".", "reshape", "(", "(", "1", ",", ")", "+", "img1", ".", "shape", ")", "\n", "img2", "=", "img2", ".", "reshape", "(", "(", "1", ",", ")", "+", "img2", ".", "shape", ")", "\n", "return", "MultiScaleSSIM", "(", "img1", ",", "img2", ",", "max_val", "=", "max_val", ",", "\n", "filter_size", "=", "filter_size", ",", "filter_sigma", "=", "filter_sigma", ",", "\n", "k1", "=", "k1", ",", "k2", "=", "k2", ",", "weights", "=", "weights", ")", "[", "0", "]", "\n", "", "elif", "(", "img1", ".", "ndim", "==", "4", ")", "and", "(", "img1", ".", "shape", "[", "0", "]", ">", "1", ")", ":", "\n", "    ", "m", "=", "[", "]", "\n", "for", "(", "i1", ",", "i2", ")", "in", "zip", "(", "img1", ",", "img2", ")", ":", "\n", "      ", "m", ".", "append", "(", "MultiScaleSSIM", "(", "i1", ",", "i2", ",", "max_val", "=", "max_val", ",", "\n", "filter_size", "=", "filter_size", ",", "filter_sigma", "=", "filter_sigma", ",", "\n", "k1", "=", "k1", ",", "k2", "=", "k2", ",", "weights", "=", "weights", ")", ")", "\n", "", "return", "np", ".", "hstack", "(", "m", ")", "\n", "", "elif", "(", "img1", ".", "ndim", "==", "5", ")", ":", "\n", "    ", "m", "=", "np", ".", "zeros", "(", "img1", ".", "shape", "[", "0", ":", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "m", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "m", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "i1", "=", "img1", "[", "i", ",", "j", ",", "...", "]", "\n", "i2", "=", "img2", "[", "i", ",", "j", ",", "...", "]", "\n", "m", "[", "i", ",", "j", "]", "=", "MultiScaleSSIM", "(", "i1", ",", "i2", ",", "max_val", "=", "max_val", ",", "\n", "filter_size", "=", "filter_size", ",", "filter_sigma", "=", "filter_sigma", ",", "\n", "k1", "=", "k1", ",", "k2", "=", "k2", ",", "weights", "=", "weights", ")", "\n", "", "", "return", "m", "\n", "\n", "# Note: default weights don't sum to 1.0 but do match the paper / matlab code.", "\n", "", "weights", "=", "np", ".", "array", "(", "weights", "if", "weights", "else", "\n", "[", "0.0448", ",", "0.2856", ",", "0.3001", ",", "0.2363", ",", "0.1333", "]", ")", "\n", "levels", "=", "weights", ".", "size", "\n", "downsample_filter", "=", "np", ".", "ones", "(", "(", "1", ",", "2", ",", "2", ",", "1", ")", ")", "/", "4.0", "\n", "im1", ",", "im2", "=", "[", "x", ".", "astype", "(", "np", ".", "float64", ")", "for", "x", "in", "[", "img1", ",", "img2", "]", "]", "\n", "mssim", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "mcs", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "for", "_", "in", "range", "(", "levels", ")", ":", "\n", "    ", "ssim", ",", "cs", "=", "_SSIMForMultiScale", "(", "\n", "im1", ",", "im2", ",", "max_val", "=", "max_val", ",", "filter_size", "=", "filter_size", ",", "\n", "filter_sigma", "=", "filter_sigma", ",", "k1", "=", "k1", ",", "k2", "=", "k2", ")", "\n", "mssim", "=", "np", ".", "append", "(", "mssim", ",", "ssim", ")", "\n", "mcs", "=", "np", ".", "append", "(", "mcs", ",", "cs", ")", "\n", "filtered", "=", "[", "convolve", "(", "im", ",", "downsample_filter", ",", "mode", "=", "'reflect'", ")", "\n", "for", "im", "in", "[", "im1", ",", "im2", "]", "]", "\n", "im1", ",", "im2", "=", "[", "x", "[", ":", ",", ":", ":", "2", ",", ":", ":", "2", ",", ":", "]", "for", "x", "in", "filtered", "]", "\n", "\n", "# modified from the original: clip to 0 to prevent nan results", "\n", "", "mcs", ".", "clip", "(", "min", "=", "0", ",", "out", "=", "mcs", ")", "\n", "mssim", ".", "clip", "(", "min", "=", "0", ",", "out", "=", "mcs", ")", "\n", "\n", "m", "=", "np", ".", "prod", "(", "mcs", "[", "0", ":", "levels", "-", "1", "]", "**", "weights", "[", "0", ":", "levels", "-", "1", "]", ")", "*", "(", "mssim", "[", "levels", "-", "1", "]", "**", "weights", "[", "levels", "-", "1", "]", ")", "\n", "if", "not", "np", ".", "isfinite", "(", "m", ")", ":", "\n", "    ", "m", "=", "0", "\n", "", "return", "np", ".", "array", "(", "[", "m", "]", ")", "\n", "", ""]]}