{"home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.__init__": [[315, 335], ["keras.initializers.get", "keras.regularizers.get", "keras.regularizers.get", "keras.regularizers.get", "keras.constraints.get", "keras.constraints.get", "keras.constraints.get", "keras.engine.Layer.__init__", "keras.engine.InputSpec"], "methods", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.__init__"], ["def", "__init__", "(", "self", ",", "init", "=", "'glorot_uniform'", ",", "\n", "U_regularizer", "=", "None", ",", "b_start_regularizer", "=", "None", ",", "b_end_regularizer", "=", "None", ",", "\n", "U_constraint", "=", "None", ",", "b_start_constraint", "=", "None", ",", "b_end_constraint", "=", "None", ",", "\n", "weights", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "supports_masking", "=", "True", "\n", "self", ".", "uses_learning_phase", "=", "True", "\n", "self", ".", "input_spec", "=", "[", "InputSpec", "(", "ndim", "=", "3", ")", "]", "\n", "self", ".", "init", "=", "initializers", ".", "get", "(", "init", ")", "\n", "\n", "self", ".", "U_regularizer", "=", "regularizers", ".", "get", "(", "U_regularizer", ")", "\n", "self", ".", "b_start_regularizer", "=", "regularizers", ".", "get", "(", "b_start_regularizer", ")", "\n", "self", ".", "b_end_regularizer", "=", "regularizers", ".", "get", "(", "b_end_regularizer", ")", "\n", "self", ".", "U_constraint", "=", "constraints", ".", "get", "(", "U_constraint", ")", "\n", "self", ".", "b_start_constraint", "=", "constraints", ".", "get", "(", "b_start_constraint", ")", "\n", "self", ".", "b_end_constraint", "=", "constraints", ".", "get", "(", "b_end_constraint", ")", "\n", "\n", "self", ".", "initial_weights", "=", "weights", "\n", "\n", "super", "(", "ChainCRF", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.get_output_shape_for": [[336, 339], ["len"], "methods", ["None"], ["", "def", "get_output_shape_for", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "assert", "input_shape", "and", "len", "(", "input_shape", ")", "==", "3", "\n", "return", "(", "input_shape", "[", "0", "]", ",", "input_shape", "[", "1", "]", ",", "input_shape", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.compute_mask": [[340, 344], ["keras.backend.any"], "methods", ["None"], ["", "def", "compute_mask", "(", "self", ",", "input", ",", "mask", "=", "None", ")", ":", "\n", "        ", "if", "mask", "is", "not", "None", ":", "\n", "            ", "return", "K", ".", "any", "(", "mask", ",", "axis", "=", "1", ")", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF._fetch_mask": [[345, 350], ["None"], "methods", ["None"], ["", "def", "_fetch_mask", "(", "self", ")", ":", "\n", "        ", "mask", "=", "None", "\n", "if", "self", ".", "inbound_nodes", ":", "\n", "            ", "mask", "=", "self", ".", "inbound_nodes", "[", "0", "]", ".", "input_masks", "[", "0", "]", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.build": [[351, 383], ["ChainCRF.ChainCRF.add_weight", "ChainCRF.ChainCRF.add_weight", "ChainCRF.ChainCRF.add_weight", "len", "keras.engine.InputSpec", "ChainCRF.ChainCRF.set_weights", "keras.backend.floatx"], "methods", ["None"], ["", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "assert", "len", "(", "input_shape", ")", "==", "3", "\n", "n_classes", "=", "input_shape", "[", "2", "]", "\n", "n_steps", "=", "input_shape", "[", "1", "]", "\n", "assert", "n_classes", ">=", "2", "\n", "assert", "n_steps", "is", "None", "or", "n_steps", ">=", "2", "\n", "self", ".", "input_spec", "=", "[", "InputSpec", "(", "dtype", "=", "K", ".", "floatx", "(", ")", ",", "\n", "shape", "=", "(", "None", ",", "n_steps", ",", "n_classes", ")", ")", "]", "\n", "\n", "self", ".", "U", "=", "self", ".", "add_weight", "(", "(", "n_classes", ",", "n_classes", ")", ",", "\n", "initializer", "=", "self", ".", "init", ",", "\n", "name", "=", "'{}_U'", ".", "format", "(", "self", ".", "name", ")", ",", "\n", "regularizer", "=", "self", ".", "U_regularizer", ",", "\n", "constraint", "=", "self", ".", "U_constraint", ")", "\n", "\n", "self", ".", "b_start", "=", "self", ".", "add_weight", "(", "(", "n_classes", ",", ")", ",", "\n", "initializer", "=", "'zero'", ",", "\n", "name", "=", "'{}_b_start'", ".", "format", "(", "self", ".", "name", ")", ",", "\n", "regularizer", "=", "self", ".", "b_start_regularizer", ",", "\n", "constraint", "=", "self", ".", "b_start_constraint", ")", "\n", "\n", "self", ".", "b_end", "=", "self", ".", "add_weight", "(", "(", "n_classes", ",", ")", ",", "\n", "initializer", "=", "'zero'", ",", "\n", "name", "=", "'{}_b_end'", ".", "format", "(", "self", ".", "name", ")", ",", "\n", "regularizer", "=", "self", ".", "b_end_regularizer", ",", "\n", "constraint", "=", "self", ".", "b_end_constraint", ")", "\n", "\n", "if", "self", ".", "initial_weights", "is", "not", "None", ":", "\n", "            ", "self", ".", "set_weights", "(", "self", ".", "initial_weights", ")", "\n", "del", "self", ".", "initial_weights", "\n", "\n", "", "self", ".", "built", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.call": [[384, 389], ["ChainCRF.viterbi_decode", "keras.backend.one_hot", "keras.backend.in_train_phase"], "methods", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.viterbi_decode"], ["", "def", "call", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "y_pred", ",", "initial_states", "=", "viterbi_decode", "(", "x", ",", "self", ".", "U", ",", "self", ".", "b_start", ",", "self", ".", "b_end", ",", "mask", ")", "\n", "nb_classes", "=", "self", ".", "input_spec", "[", "0", "]", ".", "shape", "[", "2", "]", "\n", "y_pred_one_hot", "=", "K", ".", "one_hot", "(", "y_pred", ",", "nb_classes", ")", "\n", "return", "K", ".", "in_train_phase", "(", "x", ",", "y_pred_one_hot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.predict_proba": [[390, 394], ["ChainCRF.ChainCRF._fetch_mask", "ChainCRF.log_likelihood"], "methods", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF._fetch_mask", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.log_likelihood"], ["", "def", "predict_proba", "(", "self", ",", "y", ",", "x", ")", ":", "\n", "        ", "\"\"\"Calculate log like\"\"\"", "\n", "mask", "=", "self", ".", "_fetch_mask", "(", ")", "\n", "return", "log_likelihood", "(", "y", ",", "x", ",", "self", ".", "U", ",", "self", ".", "b_start", ",", "self", ".", "b_end", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.loss": [[395, 400], ["ChainCRF.ChainCRF._fetch_mask", "ChainCRF.chain_crf_loss"], "methods", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF._fetch_mask", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.chain_crf_loss"], ["", "def", "loss", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "'''Linear Chain Conditional Random Field loss function.\n        '''", "\n", "mask", "=", "self", ".", "_fetch_mask", "(", ")", "\n", "return", "chain_crf_loss", "(", "y_true", ",", "y_pred", ",", "self", ".", "U", ",", "self", ".", "b_start", ",", "self", ".", "b_end", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.sparse_loss": [[401, 409], ["keras.backend.cast", "keras.backend.squeeze", "ChainCRF.ChainCRF._fetch_mask", "ChainCRF.sparse_chain_crf_loss"], "methods", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF._fetch_mask", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.sparse_chain_crf_loss"], ["", "def", "sparse_loss", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "'''Linear Chain Conditional Random Field loss function with sparse\n        tag sequences.\n        '''", "\n", "y_true", "=", "K", ".", "cast", "(", "y_true", ",", "'int32'", ")", "\n", "y_true", "=", "K", ".", "squeeze", "(", "y_true", ",", "2", ")", "\n", "mask", "=", "self", ".", "_fetch_mask", "(", ")", "\n", "return", "sparse_chain_crf_loss", "(", "y_true", ",", "y_pred", ",", "self", ".", "U", ",", "self", ".", "b_start", ",", "self", ".", "b_end", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.get_config": [[410, 421], ["super().get_config", "dict", "ChainCRF.ChainCRF.U_regularizer.get_config", "ChainCRF.ChainCRF.b_start_regularizer.get_config", "ChainCRF.ChainCRF.b_end_regularizer.get_config", "ChainCRF.ChainCRF.U_constraint.get_config", "ChainCRF.ChainCRF.b_start_constraint.get_config", "ChainCRF.ChainCRF.b_end_constraint.get_config", "list", "list", "super().get_config.items", "config.items"], "methods", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.get_config", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.get_config", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.get_config", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.get_config", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.get_config", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.get_config", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.get_config"], ["", "def", "get_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "'init'", ":", "'glorot_uniform'", ",", "#self.init.__name__,", "\n", "'U_regularizer'", ":", "self", ".", "U_regularizer", ".", "get_config", "(", ")", "if", "self", ".", "U_regularizer", "else", "None", ",", "\n", "'b_start_regularizer'", ":", "self", ".", "b_start_regularizer", ".", "get_config", "(", ")", "if", "self", ".", "b_start_regularizer", "else", "None", ",", "\n", "'b_end_regularizer'", ":", "self", ".", "b_end_regularizer", ".", "get_config", "(", ")", "if", "self", ".", "b_end_regularizer", "else", "None", ",", "\n", "'U_constraint'", ":", "self", ".", "U_constraint", ".", "get_config", "(", ")", "if", "self", ".", "U_constraint", "else", "None", ",", "\n", "'b_start_constraint'", ":", "self", ".", "b_start_constraint", ".", "get_config", "(", ")", "if", "self", ".", "b_start_constraint", "else", "None", ",", "\n", "'b_end_constraint'", ":", "self", ".", "b_end_constraint", ".", "get_config", "(", ")", "if", "self", ".", "b_end_constraint", "else", "None", ",", "\n", "}", "\n", "base_config", "=", "super", "(", "ChainCRF", ",", "self", ")", ".", "get_config", "(", ")", "\n", "return", "dict", "(", "list", "(", "base_config", ".", "items", "(", ")", ")", "+", "list", "(", "config", ".", "items", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.path_energy": [[74, 79], ["ChainCRF.add_boundary_energy", "ChainCRF.path_energy0"], "function", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.add_boundary_energy", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.path_energy0"], ["", "", "def", "path_energy", "(", "y", ",", "x", ",", "U", ",", "b_start", "=", "None", ",", "b_end", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "    ", "'''Calculates the energy of a tag path y for a given input x (with mask),\n    transition energies U and boundary energies b_start, b_end.'''", "\n", "x", "=", "add_boundary_energy", "(", "x", ",", "b_start", ",", "b_end", ",", "mask", ")", "\n", "return", "path_energy0", "(", "y", ",", "x", ",", "U", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.path_energy0": [[81, 107], ["keras.backend.one_hot", "keras.backend.sum", "keras.backend.sum", "keras.backend.reshape", "keras.backend.gather", "keras.backend.sum", "keras.backend.shape", "keras.backend.cast", "keras.backend.floatx"], "function", ["None"], ["", "def", "path_energy0", "(", "y", ",", "x", ",", "U", ",", "mask", "=", "None", ")", ":", "\n", "    ", "'''Path energy without boundary potential handling.'''", "\n", "n_classes", "=", "K", ".", "shape", "(", "x", ")", "[", "2", "]", "\n", "y_one_hot", "=", "K", ".", "one_hot", "(", "y", ",", "n_classes", ")", "\n", "\n", "# Tag path energy", "\n", "energy", "=", "K", ".", "sum", "(", "x", "*", "y_one_hot", ",", "2", ")", "\n", "energy", "=", "K", ".", "sum", "(", "energy", ",", "1", ")", "\n", "\n", "# Transition energy", "\n", "y_t", "=", "y", "[", ":", ",", ":", "-", "1", "]", "\n", "y_tp1", "=", "y", "[", ":", ",", "1", ":", "]", "\n", "U_flat", "=", "K", ".", "reshape", "(", "U", ",", "[", "-", "1", "]", ")", "\n", "# Convert 2-dim indices (y_t, y_tp1) of U to 1-dim indices of U_flat:", "\n", "flat_indices", "=", "y_t", "*", "n_classes", "+", "y_tp1", "\n", "U_y_t_tp1", "=", "K", ".", "gather", "(", "U_flat", ",", "flat_indices", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "K", ".", "cast", "(", "mask", ",", "K", ".", "floatx", "(", ")", ")", "\n", "y_t_mask", "=", "mask", "[", ":", ",", ":", "-", "1", "]", "\n", "y_tp1_mask", "=", "mask", "[", ":", ",", "1", ":", "]", "\n", "U_y_t_tp1", "*=", "y_t_mask", "*", "y_tp1_mask", "\n", "\n", "", "energy", "+=", "K", ".", "sum", "(", "U_y_t_tp1", ",", "axis", "=", "1", ")", "\n", "\n", "return", "energy", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.sparse_chain_crf_loss": [[109, 122], ["ChainCRF.add_boundary_energy", "ChainCRF.path_energy0", "ChainCRF.free_energy0", "keras.backend.expand_dims"], "function", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.add_boundary_energy", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.path_energy0", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.free_energy0"], ["", "def", "sparse_chain_crf_loss", "(", "y", ",", "x", ",", "U", ",", "b_start", "=", "None", ",", "b_end", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "    ", "'''Given the true sparsely encoded tag sequence y, input x (with mask),\n    transition energies U, boundary energies b_start and b_end, it computes\n    the loss function of a Linear Chain Conditional Random Field:\n    loss(y, x) = NNL(P(y|x)), where P(y|x) = exp(E(y, x)) / Z.\n    So, loss(y, x) = - E(y, x) + log(Z)\n    Here, E(y, x) is the tag path energy, and Z is the normalization constant.\n    The values log(Z) is also called free energy.\n    '''", "\n", "x", "=", "add_boundary_energy", "(", "x", ",", "b_start", ",", "b_end", ",", "mask", ")", "\n", "energy", "=", "path_energy0", "(", "y", ",", "x", ",", "U", ",", "mask", ")", "\n", "energy", "-=", "free_energy0", "(", "x", ",", "U", ",", "mask", ")", "\n", "return", "K", ".", "expand_dims", "(", "-", "energy", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.log_likelihood": [[124, 141], ["keras.backend.argmax", "keras.backend.cast", "ChainCRF.add_boundary_energy", "ChainCRF.path_energy0", "ChainCRF.free_energy0", "keras.backend.expand_dims"], "function", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.add_boundary_energy", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.path_energy0", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.free_energy0"], ["", "def", "log_likelihood", "(", "y", ",", "x", ",", "U", ",", "b_start", "=", "None", ",", "b_end", "=", "None", ",", "mask", "=", "None", ")", ":", "# ES: added", "\n", "    ", "'''Given the densely encoded tag sequence y, input x (with mask),\n    transition energies U, boundary energies b_start and b_end, it computes\n    the loss function of a Linear Chain Conditional Random Field:\n    loss(y, x) = NNL(P(y|x)), where P(y|x) = exp(E(y, x)) / Z.\n    So, log(P(y|x)) = E(y, x) - log(Z)\n    Here, E(y, x) is the tag path energy, and Z is the normalization constant.\n    The values log(Z) is also called free energy.\n    '''", "\n", "# y needs to be sparse", "\n", "y_sparse", "=", "K", ".", "argmax", "(", "y", ",", "-", "1", ")", "\n", "y_sparse", "=", "K", ".", "cast", "(", "y_sparse", ",", "'int32'", ")", "\n", "\n", "x", "=", "add_boundary_energy", "(", "x", ",", "b_start", ",", "b_end", ",", "mask", ")", "\n", "energy", "=", "path_energy0", "(", "y_sparse", ",", "x", ",", "U", ",", "mask", ")", "\n", "energy", "-=", "free_energy0", "(", "x", ",", "U", ",", "mask", ")", "\n", "return", "K", ".", "expand_dims", "(", "energy", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.chain_crf_loss": [[143, 148], ["keras.backend.argmax", "keras.backend.cast", "ChainCRF.sparse_chain_crf_loss"], "function", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.sparse_chain_crf_loss"], ["", "def", "chain_crf_loss", "(", "y", ",", "x", ",", "U", ",", "b_start", "=", "None", ",", "b_end", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "    ", "'''Variant of sparse_chain_crf_loss but with one-hot encoded tags y.'''", "\n", "y_sparse", "=", "K", ".", "argmax", "(", "y", ",", "-", "1", ")", "\n", "y_sparse", "=", "K", ".", "cast", "(", "y_sparse", ",", "'int32'", ")", "\n", "return", "sparse_chain_crf_loss", "(", "y_sparse", ",", "x", ",", "U", ",", "b_start", ",", "b_end", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.add_boundary_energy": [[150, 172], ["keras.backend.cast", "keras.backend.expand_dims", "keras.backend.concatenate", "keras.backend.concatenate", "keras.backend.floatx", "keras.backend.concatenate", "keras.backend.cast", "keras.backend.concatenate", "keras.backend.cast", "keras.backend.greater", "keras.backend.floatx", "keras.backend.greater", "keras.backend.floatx", "keras.backend.zeros_like", "keras.backend.zeros_like"], "function", ["None"], ["", "def", "add_boundary_energy", "(", "x", ",", "b_start", "=", "None", ",", "b_end", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "    ", "'''Given the observations x, it adds the start boundary energy b_start (resp.\n    end boundary energy b_end on the start (resp. end) elements and multiplies\n    the mask.'''", "\n", "if", "mask", "is", "None", ":", "\n", "        ", "if", "b_start", "is", "not", "None", ":", "\n", "            ", "x", "=", "K", ".", "concatenate", "(", "[", "x", "[", ":", ",", ":", "1", ",", ":", "]", "+", "b_start", ",", "x", "[", ":", ",", "1", ":", ",", ":", "]", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "b_end", "is", "not", "None", ":", "\n", "            ", "x", "=", "K", ".", "concatenate", "(", "[", "x", "[", ":", ",", ":", "-", "1", ",", ":", "]", ",", "x", "[", ":", ",", "-", "1", ":", ",", ":", "]", "+", "b_end", "]", ",", "axis", "=", "1", ")", "\n", "", "", "else", ":", "\n", "        ", "mask", "=", "K", ".", "cast", "(", "mask", ",", "K", ".", "floatx", "(", ")", ")", "\n", "mask", "=", "K", ".", "expand_dims", "(", "mask", ",", "2", ")", "\n", "x", "*=", "mask", "\n", "if", "b_start", "is", "not", "None", ":", "\n", "            ", "mask_r", "=", "K", ".", "concatenate", "(", "[", "K", ".", "zeros_like", "(", "mask", "[", ":", ",", ":", "1", "]", ")", ",", "mask", "[", ":", ",", ":", "-", "1", "]", "]", ",", "axis", "=", "1", ")", "\n", "start_mask", "=", "K", ".", "cast", "(", "K", ".", "greater", "(", "mask", ",", "mask_r", ")", ",", "K", ".", "floatx", "(", ")", ")", "\n", "x", "=", "x", "+", "start_mask", "*", "b_start", "\n", "", "if", "b_end", "is", "not", "None", ":", "\n", "            ", "mask_l", "=", "K", ".", "concatenate", "(", "[", "mask", "[", ":", ",", "1", ":", "]", ",", "K", ".", "zeros_like", "(", "mask", "[", ":", ",", "-", "1", ":", "]", ")", "]", ",", "axis", "=", "1", ")", "\n", "end_mask", "=", "K", ".", "cast", "(", "K", ".", "greater", "(", "mask", ",", "mask_l", ")", ",", "K", ".", "floatx", "(", ")", ")", "\n", "x", "=", "x", "+", "end_mask", "*", "b_end", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.viterbi_decode": [[174, 189], ["ChainCRF.add_boundary_energy", "keras.backend.zeros_like", "ChainCRF._forward", "ChainCRF._backward", "keras.backend.cast", "keras.backend.max", "keras.backend.argmax", "keras.backend.floatx"], "function", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.add_boundary_energy", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF._forward", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF._backward"], ["", "def", "viterbi_decode", "(", "x", ",", "U", ",", "b_start", "=", "None", ",", "b_end", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "    ", "'''Computes the best tag sequence y for a given input x, i.e. the one that\n    maximizes the value of path_energy.'''", "\n", "x", "=", "add_boundary_energy", "(", "x", ",", "b_start", ",", "b_end", ",", "mask", ")", "\n", "\n", "alpha_0", "=", "x", "[", ":", ",", "0", ",", ":", "]", "\n", "gamma_0", "=", "K", ".", "zeros_like", "(", "alpha_0", ")", "\n", "initial_states", "=", "[", "gamma_0", ",", "alpha_0", "]", "\n", "_", ",", "gamma", "=", "_forward", "(", "x", ",", "\n", "lambda", "B", ":", "[", "K", ".", "cast", "(", "K", ".", "argmax", "(", "B", ",", "axis", "=", "1", ")", ",", "K", ".", "floatx", "(", ")", ")", ",", "K", ".", "max", "(", "B", ",", "axis", "=", "1", ")", "]", ",", "\n", "initial_states", ",", "\n", "U", ",", "\n", "mask", ")", "\n", "y", "=", "_backward", "(", "gamma", ",", "mask", ")", "\n", "return", "y", ",", "initial_states", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.free_energy": [[191, 196], ["ChainCRF.add_boundary_energy", "ChainCRF.free_energy0"], "function", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.add_boundary_energy", "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.free_energy0"], ["", "def", "free_energy", "(", "x", ",", "U", ",", "b_start", "=", "None", ",", "b_end", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "    ", "'''Computes efficiently the sum of all path energies for input x, when\n    runs over all possible tag sequences.'''", "\n", "x", "=", "add_boundary_energy", "(", "x", ",", "b_start", ",", "b_end", ",", "mask", ")", "\n", "return", "free_energy0", "(", "x", ",", "U", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.free_energy0": [[198, 207], ["ChainCRF._forward", "logsumexp"], "function", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF._forward"], ["", "def", "free_energy0", "(", "x", ",", "U", ",", "mask", "=", "None", ")", ":", "\n", "    ", "'''Free energy without boundary potential handling.'''", "\n", "initial_states", "=", "[", "x", "[", ":", ",", "0", ",", ":", "]", "]", "\n", "last_alpha", ",", "_", "=", "_forward", "(", "x", ",", "\n", "lambda", "B", ":", "[", "logsumexp", "(", "B", ",", "axis", "=", "1", ")", "]", ",", "\n", "initial_states", ",", "\n", "U", ",", "\n", "mask", ")", "\n", "return", "last_alpha", "[", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF._forward": [[209, 229], ["keras.backend.expand_dims", "keras.backend.concatenate", "keras.backend.rnn", "reduce_step", "keras.backend.expand_dims", "keras.backend.cast", "keras.backend.expand_dims", "keras.backend.expand_dims", "keras.backend.floatx", "keras.backend.expand_dims", "keras.backend.zeros_like", "keras.backend.expand_dims"], "function", ["None"], ["", "def", "_forward", "(", "x", ",", "reduce_step", ",", "initial_states", ",", "U", ",", "mask", "=", "None", ")", ":", "\n", "    ", "'''Forward recurrence of the linear chain crf.'''", "\n", "\n", "def", "_forward_step", "(", "energy_matrix_t", ",", "states", ")", ":", "\n", "        ", "alpha_tm1", "=", "states", "[", "-", "1", "]", "\n", "new_states", "=", "reduce_step", "(", "K", ".", "expand_dims", "(", "alpha_tm1", ",", "2", ")", "+", "energy_matrix_t", ")", "\n", "return", "new_states", "[", "0", "]", ",", "new_states", "\n", "\n", "", "U_shared", "=", "K", ".", "expand_dims", "(", "K", ".", "expand_dims", "(", "U", ",", "0", ")", ",", "0", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "K", ".", "cast", "(", "mask", ",", "K", ".", "floatx", "(", ")", ")", "\n", "mask_U", "=", "K", ".", "expand_dims", "(", "K", ".", "expand_dims", "(", "mask", "[", ":", ",", ":", "-", "1", "]", "*", "mask", "[", ":", ",", "1", ":", "]", ",", "2", ")", ",", "3", ")", "\n", "U_shared", "=", "U_shared", "*", "mask_U", "\n", "\n", "", "inputs", "=", "K", ".", "expand_dims", "(", "x", "[", ":", ",", "1", ":", ",", ":", "]", ",", "2", ")", "+", "U_shared", "\n", "inputs", "=", "K", ".", "concatenate", "(", "[", "inputs", ",", "K", ".", "zeros_like", "(", "inputs", "[", ":", ",", "-", "1", ":", ",", ":", ",", ":", "]", ")", "]", ",", "axis", "=", "1", ")", "\n", "\n", "last", ",", "values", ",", "_", "=", "K", ".", "rnn", "(", "_forward_step", ",", "inputs", ",", "initial_states", ")", "\n", "return", "last", ",", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF._backward": [[231, 254], ["keras.backend.cast", "keras.backend.rnn", "keras.backend.reverse", "keras.backend.squeeze", "batch_gather", "keras.backend.expand_dims", "keras.backend.cast", "keras.backend.zeros_like", "keras.backend.expand_dims"], "function", ["None"], ["", "def", "_backward", "(", "gamma", ",", "mask", ")", ":", "\n", "    ", "'''Backward recurrence of the linear chain crf.'''", "\n", "gamma", "=", "K", ".", "cast", "(", "gamma", ",", "'int32'", ")", "\n", "\n", "def", "_backward_step", "(", "gamma_t", ",", "states", ")", ":", "\n", "        ", "y_tm1", "=", "K", ".", "squeeze", "(", "states", "[", "0", "]", ",", "0", ")", "\n", "y_t", "=", "batch_gather", "(", "gamma_t", ",", "y_tm1", ")", "\n", "return", "y_t", ",", "[", "K", ".", "expand_dims", "(", "y_t", ",", "0", ")", "]", "\n", "\n", "", "initial_states", "=", "[", "K", ".", "expand_dims", "(", "K", ".", "zeros_like", "(", "gamma", "[", ":", ",", "0", ",", "0", "]", ")", ",", "0", ")", "]", "\n", "_", ",", "y_rev", ",", "_", "=", "K", ".", "rnn", "(", "_backward_step", ",", "\n", "gamma", ",", "\n", "initial_states", ",", "\n", "go_backwards", "=", "True", ")", "\n", "y", "=", "K", ".", "reverse", "(", "y_rev", ",", "1", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "K", ".", "cast", "(", "mask", ",", "dtype", "=", "'int32'", ")", "\n", "# mask output", "\n", "y", "*=", "mask", "\n", "# set masked values to -1", "\n", "y", "+=", "-", "(", "1", "-", "mask", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.create_custom_objects": [[423, 441], ["getattr", "getattr.", "getattr", "getattr.", "super().__init__"], "function", ["home.repos.pwc.inspect_result.ewsheng_byteNER.None.ChainCRF.ChainCRF.__init__"], ["", "", "def", "create_custom_objects", "(", ")", ":", "\n", "    ", "'''Returns the custom objects, needed for loading a persisted model.'''", "\n", "instanceHolder", "=", "{", "'instance'", ":", "None", "}", "\n", "\n", "class", "ClassWrapper", "(", "ChainCRF", ")", ":", "\n", "        ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "instanceHolder", "[", "'instance'", "]", "=", "self", "\n", "super", "(", "ClassWrapper", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "", "def", "loss", "(", "*", "args", ")", ":", "\n", "        ", "method", "=", "getattr", "(", "instanceHolder", "[", "'instance'", "]", ",", "'loss'", ")", "\n", "return", "method", "(", "*", "args", ")", "\n", "\n", "", "def", "sparse_loss", "(", "*", "args", ")", ":", "\n", "        ", "method", "=", "getattr", "(", "instanceHolder", "[", "'instance'", "]", ",", "'sparse_loss'", ")", "\n", "return", "method", "(", "*", "args", ")", "\n", "\n", "", "return", "{", "'ClassWrapper'", ":", "ClassWrapper", ",", "'ChainCRF'", ":", "ClassWrapper", ",", "'loss'", ":", "loss", ",", "'sparse_loss'", ":", "sparse_loss", "}", "\n", "\n"]]}