{"home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_failures": [[7, 19], ["len", "zip", "range", "len", "len"], "function", ["None"], ["def", "calculate_failures", "(", "trajectory", ")", ":", "\n", "    ", "\"\"\" Calculate number of failures\n    Args:\n        trajectory: list of bbox\n    Returns:\n        num_failures: number of failures\n        failures: failures point in trajectory, start with 0\n    \"\"\"", "\n", "failures", "=", "[", "i", "for", "i", ",", "x", "in", "zip", "(", "range", "(", "len", "(", "trajectory", ")", ")", ",", "trajectory", ")", "\n", "if", "len", "(", "x", ")", "==", "1", "and", "x", "[", "0", "]", "==", "2", "]", "\n", "num_failures", "=", "len", "(", "failures", ")", "\n", "return", "num_failures", ",", "failures", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_accuracy": [[20, 56], ["min", "region.vot_overlap_traj", "range", "len", "len", "len", "numpy.nanmean", "len", "range", "len", "len", "len"], "function", ["None"], ["", "def", "calculate_accuracy", "(", "pred_trajectory", ",", "gt_trajectory", ",", "\n", "burnin", "=", "0", ",", "ignore_unknown", "=", "True", ",", "bound", "=", "None", ")", ":", "\n", "    ", "\"\"\"Caculate accuracy socre as average overlap over the entire sequence\n    Args:\n        trajectory: list of bbox\n        gt_trajectory: list of bbox\n        burnin: number of frames that have to be ignored after the failure\n        ignore_unknown: ignore frames where the overlap is unknown\n        bound: bounding region\n    Return:\n        acc: average overlap\n        overlaps: per frame overlaps\n    \"\"\"", "\n", "pred_trajectory_", "=", "pred_trajectory", "\n", "if", "not", "ignore_unknown", ":", "\n", "        ", "unkown", "=", "[", "len", "(", "x", ")", "==", "1", "and", "x", "[", "0", "]", "==", "0", "for", "x", "in", "pred_trajectory", "]", "\n", "\n", "", "if", "burnin", ">", "0", ":", "\n", "        ", "pred_trajectory_", "=", "pred_trajectory", "[", ":", "]", "\n", "mask", "=", "[", "len", "(", "x", ")", "==", "1", "and", "x", "[", "0", "]", "==", "1", "for", "x", "in", "pred_trajectory", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "mask", ")", ")", ":", "\n", "            ", "if", "mask", "[", "i", "]", ":", "\n", "                ", "for", "j", "in", "range", "(", "burnin", ")", ":", "\n", "                    ", "if", "i", "+", "j", "<", "len", "(", "mask", ")", ":", "\n", "                        ", "pred_trajectory_", "[", "i", "+", "j", "]", "=", "[", "0", "]", "\n", "", "", "", "", "", "min_len", "=", "min", "(", "len", "(", "pred_trajectory_", ")", ",", "len", "(", "gt_trajectory", ")", ")", "\n", "overlaps", "=", "region", ".", "vot_overlap_traj", "(", "pred_trajectory_", "[", ":", "min_len", "]", ",", "\n", "gt_trajectory", "[", ":", "min_len", "]", ",", "bound", ")", "\n", "\n", "if", "not", "ignore_unknown", ":", "\n", "        ", "overlaps", "=", "[", "u", "if", "u", "else", "0", "for", "u", "in", "unkown", "]", "\n", "\n", "", "acc", "=", "0", "\n", "if", "len", "(", "overlaps", ")", ">", "0", ":", "\n", "        ", "acc", "=", "np", ".", "nanmean", "(", "overlaps", ")", "\n", "", "return", "acc", ",", "overlaps", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.overlap_ratio": [[77, 98], ["numpy.maximum", "numpy.minimum", "numpy.maximum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.minimum"], "function", ["None"], ["", "def", "overlap_ratio", "(", "rect1", ",", "rect2", ")", ":", "\n", "    ", "'''Compute overlap ratio between two rects\n    Args\n        rect:2d array of N x [x,y,w,h]\n    Return:\n        iou\n    '''", "\n", "# if rect1.ndim==1:", "\n", "#     rect1 = rect1[np.newaxis, :]", "\n", "# if rect2.ndim==1:", "\n", "#     rect2 = rect2[np.newaxis, :]", "\n", "left", "=", "np", ".", "maximum", "(", "rect1", "[", ":", ",", "0", "]", ",", "rect2", "[", ":", ",", "0", "]", ")", "\n", "right", "=", "np", ".", "minimum", "(", "rect1", "[", ":", ",", "0", "]", "+", "rect1", "[", ":", ",", "2", "]", ",", "rect2", "[", ":", ",", "0", "]", "+", "rect2", "[", ":", ",", "2", "]", ")", "\n", "top", "=", "np", ".", "maximum", "(", "rect1", "[", ":", ",", "1", "]", ",", "rect2", "[", ":", ",", "1", "]", ")", "\n", "bottom", "=", "np", ".", "minimum", "(", "rect1", "[", ":", ",", "1", "]", "+", "rect1", "[", ":", ",", "3", "]", ",", "rect2", "[", ":", ",", "1", "]", "+", "rect2", "[", ":", ",", "3", "]", ")", "\n", "\n", "intersect", "=", "np", ".", "maximum", "(", "0", ",", "right", "-", "left", ")", "*", "np", ".", "maximum", "(", "0", ",", "bottom", "-", "top", ")", "\n", "union", "=", "rect1", "[", ":", ",", "2", "]", "*", "rect1", "[", ":", ",", "3", "]", "+", "rect2", "[", ":", ",", "2", "]", "*", "rect2", "[", ":", ",", "3", "]", "-", "intersect", "\n", "iou", "=", "intersect", "/", "union", "\n", "iou", "=", "np", ".", "maximum", "(", "np", ".", "minimum", "(", "1", ",", "iou", ")", ",", "0", ")", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.success_overlap": [[99, 109], ["numpy.arange", "numpy.zeros", "statistics.overlap_ratio", "range", "len", "numpy.ones", "numpy.sum", "len", "len", "numpy.sum", "float"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.overlap_ratio"], ["", "def", "success_overlap", "(", "gt_bb", ",", "result_bb", ",", "n_frame", ")", ":", "\n", "    ", "thresholds_overlap", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "success", "=", "np", ".", "zeros", "(", "len", "(", "thresholds_overlap", ")", ")", "\n", "iou", "=", "np", ".", "ones", "(", "len", "(", "gt_bb", ")", ")", "*", "(", "-", "1", ")", "\n", "# mask = np.sum(gt_bb > 0, axis=1) == 4 #TODO check all dataset", "\n", "mask", "=", "np", ".", "sum", "(", "gt_bb", "[", ":", ",", "2", ":", "]", ">", "0", ",", "axis", "=", "1", ")", "==", "2", "\n", "iou", "[", "mask", "]", "=", "overlap_ratio", "(", "gt_bb", "[", "mask", "]", ",", "result_bb", "[", "mask", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "thresholds_overlap", ")", ")", ":", "\n", "        ", "success", "[", "i", "]", "=", "np", ".", "sum", "(", "iou", ">", "thresholds_overlap", "[", "i", "]", ")", "/", "float", "(", "n_frame", ")", "\n", "", "return", "success", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.success_error": [[110, 120], ["numpy.zeros", "numpy.sqrt", "range", "len", "numpy.ones", "numpy.sum", "numpy.sum", "len", "len", "numpy.power", "numpy.sum", "float"], "function", ["None"], ["", "def", "success_error", "(", "gt_center", ",", "result_center", ",", "thresholds", ",", "n_frame", ")", ":", "\n", "# n_frame = len(gt_center)", "\n", "    ", "success", "=", "np", ".", "zeros", "(", "len", "(", "thresholds", ")", ")", "\n", "dist", "=", "np", ".", "ones", "(", "len", "(", "gt_center", ")", ")", "*", "(", "-", "1", ")", "\n", "mask", "=", "np", ".", "sum", "(", "gt_center", ">", "0", ",", "axis", "=", "1", ")", "==", "2", "\n", "dist", "[", "mask", "]", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "\n", "np", ".", "power", "(", "gt_center", "[", "mask", "]", "-", "result_center", "[", "mask", "]", ",", "2", ")", ",", "axis", "=", "1", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "thresholds", ")", ")", ":", "\n", "        ", "success", "[", "i", "]", "=", "np", ".", "sum", "(", "dist", "<=", "thresholds", "[", "i", "]", ")", "/", "float", "(", "n_frame", ")", "\n", "", "return", "success", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.determine_thresholds": [[121, 134], ["numpy.sort", "numpy.floor", "numpy.floor().astype", "numpy.zeros", "len", "numpy.floor", "numpy.logical_not", "numpy.isnan", "numpy.linspace", "len"], "function", ["None"], ["", "def", "determine_thresholds", "(", "scores", ",", "resolution", "=", "100", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        scores: 1d array of score\n    \"\"\"", "\n", "scores", "=", "np", ".", "sort", "(", "scores", "[", "np", ".", "logical_not", "(", "np", ".", "isnan", "(", "scores", ")", ")", "]", ")", "\n", "delta", "=", "np", ".", "floor", "(", "len", "(", "scores", ")", "/", "(", "resolution", "-", "2", ")", ")", "\n", "idxs", "=", "np", ".", "floor", "(", "np", ".", "linspace", "(", "delta", "-", "1", ",", "len", "(", "scores", ")", "-", "delta", ",", "resolution", "-", "2", ")", "+", "0.5", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "thresholds", "=", "np", ".", "zeros", "(", "(", "resolution", ")", ")", "\n", "thresholds", "[", "0", "]", "=", "-", "np", ".", "inf", "\n", "thresholds", "[", "-", "1", "]", "=", "np", ".", "inf", "\n", "thresholds", "[", "1", ":", "-", "1", "]", "=", "scores", "[", "idxs", "]", "\n", "return", "thresholds", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_f1": [[135, 155], ["numpy.array", "numpy.array", "numpy.zeros", "numpy.zeros", "enumerate", "len", "len", "numpy.isnan", "numpy.isnan", "numpy.sum", "numpy.mean", "numpy.sum"], "function", ["None"], ["", "def", "calculate_f1", "(", "overlaps", ",", "score", ",", "bound", ",", "thresholds", ",", "N", ")", ":", "\n", "    ", "overlaps", "=", "np", ".", "array", "(", "overlaps", ")", "\n", "overlaps", "[", "np", ".", "isnan", "(", "overlaps", ")", "]", "=", "0", "\n", "score", "=", "np", ".", "array", "(", "score", ")", "\n", "score", "[", "np", ".", "isnan", "(", "score", ")", "]", "=", "0", "\n", "precision", "=", "np", ".", "zeros", "(", "len", "(", "thresholds", ")", ")", "\n", "recall", "=", "np", ".", "zeros", "(", "len", "(", "thresholds", ")", ")", "\n", "for", "i", ",", "th", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "        ", "if", "th", "==", "-", "np", ".", "inf", ":", "\n", "            ", "idx", "=", "score", ">", "0", "\n", "", "else", ":", "\n", "            ", "idx", "=", "score", ">=", "th", "\n", "", "if", "np", ".", "sum", "(", "idx", ")", "==", "0", ":", "\n", "            ", "precision", "[", "i", "]", "=", "1", "\n", "recall", "[", "i", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "precision", "[", "i", "]", "=", "np", ".", "mean", "(", "overlaps", "[", "idx", "]", ")", "\n", "recall", "[", "i", "]", "=", "np", ".", "sum", "(", "overlaps", "[", "idx", "]", ")", "/", "N", "\n", "", "", "f1", "=", "2", "*", "precision", "*", "recall", "/", "(", "precision", "+", "recall", ")", "\n", "return", "f1", ",", "precision", ",", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_expected_overlap": [[156, 170], ["numpy.zeros", "range", "numpy.logical_not", "numpy.any", "numpy.isnan", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "calculate_expected_overlap", "(", "fragments", ",", "fweights", ")", ":", "\n", "    ", "max_len", "=", "fragments", ".", "shape", "[", "1", "]", "\n", "expected_overlaps", "=", "np", ".", "zeros", "(", "(", "max_len", ")", ",", "np", ".", "float32", ")", "\n", "expected_overlaps", "[", "0", "]", "=", "1", "\n", "\n", "# TODO Speed Up ", "\n", "for", "i", "in", "range", "(", "1", ",", "max_len", ")", ":", "\n", "        ", "mask", "=", "np", ".", "logical_not", "(", "np", ".", "isnan", "(", "fragments", "[", ":", ",", "i", "]", ")", ")", "\n", "if", "np", ".", "any", "(", "mask", ")", ":", "\n", "            ", "fragment", "=", "fragments", "[", "mask", ",", "1", ":", "i", "+", "1", "]", "\n", "seq_mean", "=", "np", ".", "sum", "(", "fragment", ",", "1", ")", "/", "fragment", ".", "shape", "[", "1", "]", "\n", "expected_overlaps", "[", "i", "]", "=", "np", ".", "sum", "(", "seq_mean", "*", "\n", "fweights", "[", "mask", "]", ")", "/", "np", ".", "sum", "(", "fweights", "[", "mask", "]", ")", "\n", "", "", "return", "expected_overlaps", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.iou": [[172, 202], ["numpy.max", "numpy.max", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["None"], ["", "def", "iou", "(", "box1", ",", "box2", ",", "wh", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    compute the iou of two boxes.\n    Args:\n        box1, box2: [xmin, ymin, xmax, ymax] (wh=False) or [xcenter, ycenter, w, h] (wh=True)\n        wh: the format of coordinate.\n    Return:\n        iou: iou of box1 and box2.\n    \"\"\"", "\n", "if", "wh", "==", "False", ":", "\n", "        ", "xmin1", ",", "ymin1", ",", "xmax1", ",", "ymax1", "=", "box1", "\n", "xmin2", ",", "ymin2", ",", "xmax2", ",", "ymax2", "=", "box2", "\n", "", "else", ":", "\n", "        ", "xmin1", ",", "ymin1", "=", "int", "(", "box1", "[", "0", "]", "-", "box1", "[", "2", "]", "/", "2.0", ")", ",", "int", "(", "box1", "[", "1", "]", "-", "box1", "[", "3", "]", "/", "2.0", ")", "\n", "xmax1", ",", "ymax1", "=", "int", "(", "box1", "[", "0", "]", "+", "box1", "[", "2", "]", "/", "2.0", ")", ",", "int", "(", "box1", "[", "1", "]", "+", "box1", "[", "3", "]", "/", "2.0", ")", "\n", "xmin2", ",", "ymin2", "=", "int", "(", "box2", "[", "0", "]", "-", "box2", "[", "2", "]", "/", "2.0", ")", ",", "int", "(", "box2", "[", "1", "]", "-", "box2", "[", "3", "]", "/", "2.0", ")", "\n", "xmax2", ",", "ymax2", "=", "int", "(", "box2", "[", "0", "]", "+", "box2", "[", "2", "]", "/", "2.0", ")", ",", "int", "(", "box2", "[", "1", "]", "+", "box2", "[", "3", "]", "/", "2.0", ")", "\n", "\n", "", "xx1", "=", "np", ".", "max", "(", "[", "xmin1", ",", "xmin2", "]", ")", "\n", "yy1", "=", "np", ".", "max", "(", "[", "ymin1", ",", "ymin2", "]", ")", "\n", "xx2", "=", "np", ".", "min", "(", "[", "xmax1", ",", "xmax2", "]", ")", "\n", "yy2", "=", "np", ".", "min", "(", "[", "ymax1", ",", "ymax2", "]", ")", "\n", "\n", "area1", "=", "(", "xmax1", "-", "xmin1", ")", "*", "(", "ymax1", "-", "ymin1", ")", "\n", "area2", "=", "(", "xmax2", "-", "xmin2", ")", "*", "(", "ymax2", "-", "ymin2", ")", "\n", "\n", "inter_area", "=", "(", "np", ".", "max", "(", "[", "0", ",", "xx2", "-", "xx1", "]", ")", ")", "*", "(", "np", ".", "max", "(", "[", "0", ",", "yy2", "-", "yy1", "]", ")", ")", "\n", "iou", "=", "inter_area", "/", "(", "area1", "+", "area2", "-", "inter_area", "+", "1e-6", ")", "\n", "\n", "return", "iou", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc.determine_thresholds": [[6, 31], ["isinstance", "np.array.flatten", "np.array.sort", "numpy.ones", "numpy.floor", "numpy.linspace", "numpy.array", "len", "len", "len", "numpy.isnan"], "function", ["None"], ["def", "determine_thresholds", "(", "confidence", ",", "resolution", "=", "100", ")", ":", "\n", "    ", "\"\"\"choose threshold according to confidence\n\n    Args:\n        confidence: list or numpy array or numpy array\n        reolution: number of threshold to choose\n\n    Restures:\n        threshold: numpy array\n    \"\"\"", "\n", "if", "isinstance", "(", "confidence", ",", "list", ")", ":", "\n", "        ", "confidence", "=", "np", ".", "array", "(", "confidence", ")", "\n", "", "confidence", "=", "confidence", ".", "flatten", "(", ")", "\n", "confidence", "=", "confidence", "[", "~", "np", ".", "isnan", "(", "confidence", ")", "]", "\n", "confidence", ".", "sort", "(", ")", "\n", "\n", "assert", "len", "(", "confidence", ")", ">", "resolution", "and", "resolution", ">", "2", "\n", "\n", "thresholds", "=", "np", ".", "ones", "(", "(", "resolution", ")", ")", "\n", "thresholds", "[", "0", "]", "=", "-", "np", ".", "inf", "\n", "thresholds", "[", "-", "1", "]", "=", "np", ".", "inf", "\n", "delta", "=", "np", ".", "floor", "(", "len", "(", "confidence", ")", "/", "(", "resolution", "-", "2", ")", ")", "\n", "idxs", "=", "np", ".", "linspace", "(", "delta", ",", "len", "(", "confidence", ")", "-", "delta", ",", "resolution", "-", "2", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "thresholds", "[", "1", ":", "-", "1", "]", "=", "confidence", "[", "idxs", "]", "\n", "return", "thresholds", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.check_keys": [[25, 46], ["set", "set", "logger.info", "pretrained_state_dict.keys", "model.state_dict().keys", "len", "logger.info", "logger.info", "len", "logger.info", "logger.info", "len", "len", "model.state_dict", "x.endswith", "len", "len"], "function", ["None"], ["def", "check_keys", "(", "model", ",", "pretrained_state_dict", ")", ":", "\n", "    ", "ckpt_keys", "=", "set", "(", "pretrained_state_dict", ".", "keys", "(", ")", ")", "\n", "model_keys", "=", "set", "(", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ")", "\n", "used_pretrained_keys", "=", "model_keys", "&", "ckpt_keys", "\n", "unused_pretrained_keys", "=", "ckpt_keys", "-", "model_keys", "\n", "missing_keys", "=", "model_keys", "-", "ckpt_keys", "\n", "# filter 'num_batches_tracked'", "\n", "missing_keys", "=", "[", "x", "for", "x", "in", "missing_keys", "\n", "if", "not", "x", ".", "endswith", "(", "'num_batches_tracked'", ")", "]", "\n", "if", "len", "(", "missing_keys", ")", ">", "0", ":", "\n", "        ", "logger", ".", "info", "(", "'[Warning] missing keys: {}'", ".", "format", "(", "missing_keys", ")", ")", "\n", "logger", ".", "info", "(", "'missing keys:{}'", ".", "format", "(", "len", "(", "missing_keys", ")", ")", ")", "\n", "", "if", "len", "(", "unused_pretrained_keys", ")", ">", "0", ":", "\n", "        ", "logger", ".", "info", "(", "'[Warning] unused_pretrained_keys: {}'", ".", "format", "(", "\n", "unused_pretrained_keys", ")", ")", "\n", "logger", ".", "info", "(", "'unused checkpoint keys:{}'", ".", "format", "(", "\n", "len", "(", "unused_pretrained_keys", ")", ")", ")", "\n", "", "logger", ".", "info", "(", "'used keys:{}'", ".", "format", "(", "len", "(", "used_pretrained_keys", ")", ")", ")", "\n", "assert", "len", "(", "used_pretrained_keys", ")", ">", "0", ",", "'load NONE from pretrained checkpoint'", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.remove_prefix": [[48, 54], ["logger.info", "f", "x.startswith", "state_dict.items", "x.split"], "function", ["None"], ["", "def", "remove_prefix", "(", "state_dict", ",", "prefix", ")", ":", "\n", "    ", "''' Old style model is stored with all names of parameters\n    share common prefix 'module.' '''", "\n", "logger", ".", "info", "(", "'remove prefix \\'{}\\''", ".", "format", "(", "prefix", ")", ")", "\n", "f", "=", "lambda", "x", ":", "x", ".", "split", "(", "prefix", ",", "1", ")", "[", "-", "1", "]", "if", "x", ".", "startswith", "(", "prefix", ")", "else", "x", "\n", "return", "{", "f", "(", "key", ")", ":", "value", "for", "key", ",", "value", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.load_pretrain": [[56, 80], ["logger.info", "torch.cuda.current_device", "torch.cuda.current_device", "torch.load", "torch.load", "model.load_state_dict", "remove_prefix.keys", "model_load.remove_prefix", "model_load.remove_prefix", "model_load.check_keys", "logger.info", "remove_prefix.items", "model_load.check_keys", "storage.cuda"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.remove_prefix", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.remove_prefix", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.check_keys", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.check_keys"], ["", "def", "load_pretrain", "(", "model", ",", "pretrained_path", ")", ":", "\n", "    ", "logger", ".", "info", "(", "'load pretrained model from {}'", ".", "format", "(", "pretrained_path", ")", ")", "\n", "device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "pretrained_path", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cuda", "(", "device", ")", ")", "\n", "if", "\"state_dict\"", "in", "pretrained_dict", ".", "keys", "(", ")", ":", "\n", "        ", "pretrained_dict", "=", "remove_prefix", "(", "pretrained_dict", "[", "'state_dict'", "]", ",", "\n", "'module.'", ")", "\n", "", "else", ":", "\n", "        ", "pretrained_dict", "=", "remove_prefix", "(", "pretrained_dict", ",", "'module.'", ")", "\n", "\n", "", "try", ":", "\n", "        ", "check_keys", "(", "model", ",", "pretrained_dict", ")", "\n", "", "except", ":", "\n", "        ", "logger", ".", "info", "(", "'[Warning]: using pretrain as features.\\\n                Adding \"features.\" as prefix'", ")", "\n", "new_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "            ", "k", "=", "'features.'", "+", "k", "\n", "new_dict", "[", "k", "]", "=", "v", "\n", "", "pretrained_dict", "=", "new_dict", "\n", "check_keys", "(", "model", ",", "pretrained_dict", ")", "\n", "", "model", ".", "load_state_dict", "(", "pretrained_dict", ",", "strict", "=", "False", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.restore_from": [[82, 95], ["torch.cuda.current_device", "torch.cuda.current_device", "torch.load", "torch.load", "model_load.remove_prefix", "model_load.check_keys", "model.load_state_dict", "model_load.check_keys", "optimizer.load_state_dict", "storage.cuda"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.remove_prefix", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.check_keys", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.check_keys"], ["", "def", "restore_from", "(", "model", ",", "optimizer", ",", "ckpt_path", ")", ":", "\n", "    ", "device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "ckpt", "=", "torch", ".", "load", "(", "ckpt_path", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cuda", "(", "device", ")", ")", "\n", "epoch", "=", "ckpt", "[", "'epoch'", "]", "\n", "\n", "ckpt_model_dict", "=", "remove_prefix", "(", "ckpt", "[", "'state_dict'", "]", ",", "'module.'", ")", "\n", "check_keys", "(", "model", ",", "ckpt_model_dict", ")", "\n", "model", ".", "load_state_dict", "(", "ckpt_model_dict", ",", "strict", "=", "False", ")", "\n", "\n", "check_keys", "(", "optimizer", ",", "ckpt", "[", "'optimizer'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer'", "]", ")", "\n", "return", "model", ",", "optimizer", ",", "epoch", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.Meter.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "val", ",", "avg", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "val", "=", "val", "\n", "self", ".", "avg", "=", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.Meter.__repr__": [[15, 18], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"{name}: {val:.6f} ({avg:.6f})\"", ".", "format", "(", "\n", "name", "=", "self", ".", "name", ",", "val", "=", "self", ".", "val", ",", "avg", "=", "self", ".", "avg", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.Meter.__format__": [[20, 22], ["average_meter.Meter.__repr__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.LRScheduler.__repr__"], ["", "def", "__format__", "(", "self", ",", "*", "tuples", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "__repr__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.AverageMeter.__init__": [[26, 29], ["average_meter.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "num", "=", "100", ")", ":", "\n", "        ", "self", ".", "num", "=", "num", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.AverageMeter.reset": [[30, 35], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "{", "}", "\n", "self", ".", "sum", "=", "{", "}", "\n", "self", ".", "count", "=", "{", "}", "\n", "self", ".", "history", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.AverageMeter.update": [[36, 66], ["average_meter.AverageMeter.val.update", "range", "float", "average_meter.AverageMeter.history[].append", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update"], ["", "def", "update", "(", "self", ",", "batch", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "val", "=", "{", "}", "\n", "for", "k", "in", "kwargs", ":", "\n", "            ", "val", "[", "k", "]", "=", "kwargs", "[", "k", "]", "/", "float", "(", "batch", ")", "\n", "", "self", ".", "val", ".", "update", "(", "val", ")", "\n", "for", "k", "in", "kwargs", ":", "\n", "            ", "if", "k", "not", "in", "self", ".", "sum", ":", "\n", "                ", "self", ".", "sum", "[", "k", "]", "=", "0", "\n", "self", ".", "count", "[", "k", "]", "=", "0", "\n", "self", ".", "history", "[", "k", "]", "=", "[", "]", "\n", "", "self", ".", "sum", "[", "k", "]", "+=", "kwargs", "[", "k", "]", "\n", "self", ".", "count", "[", "k", "]", "+=", "batch", "\n", "for", "_", "in", "range", "(", "batch", ")", ":", "\n", "                ", "self", ".", "history", "[", "k", "]", ".", "append", "(", "val", "[", "k", "]", ")", "\n", "\n", "", "if", "self", ".", "num", "<=", "0", ":", "\n", "# < 0, average all", "\n", "                ", "self", ".", "history", "[", "k", "]", "=", "[", "]", "\n", "\n", "# == 0: no average", "\n", "if", "self", ".", "num", "==", "0", ":", "\n", "                    ", "self", ".", "sum", "[", "k", "]", "=", "self", ".", "val", "[", "k", "]", "\n", "self", ".", "count", "[", "k", "]", "=", "1", "\n", "\n", "", "", "elif", "len", "(", "self", ".", "history", "[", "k", "]", ")", ">", "self", ".", "num", ":", "\n", "                ", "pop_num", "=", "len", "(", "self", ".", "history", "[", "k", "]", ")", "-", "self", ".", "num", "\n", "for", "_", "in", "range", "(", "pop_num", ")", ":", "\n", "                    ", "self", ".", "sum", "[", "k", "]", "-=", "self", ".", "history", "[", "k", "]", "[", "0", "]", "\n", "del", "self", ".", "history", "[", "k", "]", "[", "0", "]", "\n", "self", ".", "count", "[", "k", "]", "-=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.AverageMeter.__repr__": [[67, 72], ["average_meter.AverageMeter.format_str"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.AverageMeter.format_str"], ["", "", "", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "s", "=", "''", "\n", "for", "k", "in", "self", ".", "sum", ":", "\n", "            ", "s", "+=", "self", ".", "format_str", "(", "k", ")", "\n", "", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.AverageMeter.format_str": [[73, 78], ["float", "float"], "methods", ["None"], ["", "def", "format_str", "(", "self", ",", "attr", ")", ":", "\n", "        ", "return", "\"{name}: {val:.6f} ({avg:.6f}) \"", ".", "format", "(", "\n", "name", "=", "attr", ",", "\n", "val", "=", "float", "(", "self", ".", "val", "[", "attr", "]", ")", ",", "\n", "avg", "=", "float", "(", "self", ".", "sum", "[", "attr", "]", ")", "/", "self", ".", "count", "[", "attr", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.AverageMeter.__getattr__": [[79, 86], ["average_meter.Meter", "super().__getattr__", "print", "average_meter.Meter", "average_meter.AverageMeter.avg"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__getattr__", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.avg"], ["", "def", "__getattr__", "(", "self", ",", "attr", ")", ":", "\n", "        ", "if", "attr", "in", "self", ".", "__dict__", ":", "\n", "            ", "return", "super", "(", "AverageMeter", ",", "self", ")", ".", "__getattr__", "(", "attr", ")", "\n", "", "if", "attr", "not", "in", "self", ".", "sum", ":", "\n", "            ", "print", "(", "\"invalid key '{}'\"", ".", "format", "(", "attr", ")", ")", "\n", "return", "Meter", "(", "attr", ",", "0", ",", "0", ")", "\n", "", "return", "Meter", "(", "attr", ",", "self", ".", "val", "[", "attr", "]", ",", "self", ".", "avg", "(", "attr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.average_meter.AverageMeter.avg": [[87, 89], ["float"], "methods", ["None"], ["", "def", "avg", "(", "self", ",", "attr", ")", ":", "\n", "        ", "return", "float", "(", "self", ".", "sum", "[", "attr", "]", ")", "/", "self", ".", "count", "[", "attr", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.DistModule.__init__": [[32, 40], ["torch.Module.__init__", "distributed.get_world_size", "distributed.broadcast_params"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.broadcast_params"], ["    ", "def", "__init__", "(", "self", ",", "module", ",", "bn_method", "=", "0", ")", ":", "\n", "        ", "super", "(", "DistModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "module", "=", "module", "\n", "self", ".", "bn_method", "=", "bn_method", "\n", "if", "get_world_size", "(", ")", ">", "1", ":", "\n", "            ", "broadcast_params", "(", "self", ".", "module", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bn_method", "=", "0", "# single proccess", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.DistModule.forward": [[41, 44], ["distributed.broadcast_buffers", "distributed.DistModule.module"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.broadcast_buffers"], ["", "", "def", "forward", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "broadcast_buffers", "(", "self", ".", "module", ",", "self", ".", "bn_method", ")", "\n", "return", "self", ".", "module", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.DistModule.train": [[45, 49], ["super().train", "distributed.DistModule.module.train"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.train", "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.train"], ["", "def", "train", "(", "self", ",", "mode", "=", "True", ")", ":", "\n", "        ", "super", "(", "DistModule", ",", "self", ")", ".", "train", "(", "mode", ")", "\n", "self", ".", "module", ".", "train", "(", "mode", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.average_reduce": [[21, 29], ["torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.all_reduce", "distributed.get_world_size", "distributed.get_world_size"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size"], ["def", "average_reduce", "(", "v", ")", ":", "\n", "    ", "if", "get_world_size", "(", ")", "==", "1", ":", "\n", "        ", "return", "v", "\n", "", "tensor", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "1", ")", "\n", "tensor", "[", "0", "]", "=", "v", "\n", "dist", ".", "all_reduce", "(", "tensor", ")", "\n", "v", "=", "tensor", "[", "0", "]", "/", "get_world_size", "(", ")", "\n", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.broadcast_params": [[51, 55], ["model.state_dict().values", "torch.broadcast", "model.state_dict"], "function", ["None"], ["", "", "def", "broadcast_params", "(", "model", ")", ":", "\n", "    ", "\"\"\" broadcast model parameters \"\"\"", "\n", "for", "p", "in", "model", ".", "state_dict", "(", ")", ".", "values", "(", ")", ":", "\n", "        ", "dist", ".", "broadcast", "(", "p", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.broadcast_buffers": [[57, 72], ["distributed.get_world_size", "model._all_buffers", "torch.broadcast", "torch.all_reduce", "Exception"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size"], ["", "", "def", "broadcast_buffers", "(", "model", ",", "method", "=", "0", ")", ":", "\n", "    ", "\"\"\" broadcast model buffers \"\"\"", "\n", "if", "method", "==", "0", ":", "\n", "        ", "return", "\n", "\n", "", "world_size", "=", "get_world_size", "(", ")", "\n", "\n", "for", "b", "in", "model", ".", "_all_buffers", "(", ")", ":", "\n", "        ", "if", "method", "==", "1", ":", "# broadcast from main proccess", "\n", "            ", "dist", ".", "broadcast", "(", "b", ",", "0", ")", "\n", "", "elif", "method", "==", "2", ":", "# average", "\n", "            ", "dist", ".", "all_reduce", "(", "b", ")", "\n", "b", "/=", "world_size", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Invalid buffer broadcast code {}'", ".", "format", "(", "method", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed._dist_init": [[77, 89], ["int", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.init_process_group", "torch.get_world_size"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size"], ["def", "_dist_init", "(", ")", ":", "\n", "    ", "'''\n    if guess right:\n        ntasks: world_size (process num)\n        proc_id: rank\n    '''", "\n", "rank", "=", "int", "(", "os", ".", "environ", "[", "'RANK'", "]", ")", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "rank", "%", "num_gpus", ")", "\n", "dist", ".", "init_process_group", "(", "backend", "=", "'nccl'", ")", "\n", "world_size", "=", "dist", ".", "get_world_size", "(", ")", "\n", "return", "rank", ",", "world_size", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed._get_local_ip": [[91, 99], ["socket.socket", "socket.socket.connect", "socket.socket.close", "socket.socket.getsockname"], "function", ["None"], ["", "def", "_get_local_ip", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "s", "=", "socket", ".", "socket", "(", "socket", ".", "AF_INET", ",", "socket", ".", "SOCK_DGRAM", ")", "\n", "s", ".", "connect", "(", "(", "'8.8.8.8'", ",", "80", ")", ")", "\n", "ip", "=", "s", ".", "getsockname", "(", ")", "[", "0", "]", "\n", "", "finally", ":", "\n", "        ", "s", ".", "close", "(", ")", "\n", "", "return", "ip", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.dist_init": [[101, 114], ["distributed._dist_init", "logger.info", "logger.info", "RuntimeError"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed._dist_init"], ["", "def", "dist_init", "(", ")", ":", "\n", "    ", "global", "rank", ",", "world_size", ",", "inited", "\n", "try", ":", "\n", "        ", "rank", ",", "world_size", "=", "_dist_init", "(", ")", "\n", "", "except", "RuntimeError", "as", "e", ":", "\n", "        ", "if", "'public'", "in", "e", ".", "args", "[", "0", "]", ":", "\n", "            ", "logger", ".", "info", "(", "e", ")", "\n", "logger", ".", "info", "(", "'Warning: use single process'", ")", "\n", "rank", ",", "world_size", "=", "0", ",", "1", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "*", "e", ".", "args", ")", "\n", "", "", "inited", "=", "True", "\n", "return", "rank", ",", "world_size", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_rank": [[116, 120], ["Exception"], "function", ["None"], ["", "def", "get_rank", "(", ")", ":", "\n", "    ", "if", "not", "inited", ":", "\n", "        ", "raise", "(", "Exception", "(", "'dist not inited'", ")", ")", "\n", "", "return", "rank", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size": [[122, 126], ["Exception"], "function", ["None"], ["", "def", "get_world_size", "(", ")", ":", "\n", "    ", "if", "not", "inited", ":", "\n", "        ", "raise", "(", "Exception", "(", "'dist not inited'", ")", ")", "\n", "", "return", "world_size", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.reduce_gradients": [[128, 140], ["pysot.utils.log_helper.log_once", "distributed.get_world_size", "model.parameters", "torch.all_reduce", "distributed.get_world_size"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.log_once", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size"], ["", "def", "reduce_gradients", "(", "model", ",", "_type", "=", "'sum'", ")", ":", "\n", "    ", "types", "=", "[", "'sum'", ",", "'avg'", "]", "\n", "assert", "_type", "in", "types", ",", "'gradients method must be in \"{}\"'", ".", "format", "(", "types", ")", "\n", "log_once", "(", "\"gradients method is {}\"", ".", "format", "(", "_type", ")", ")", "\n", "if", "get_world_size", "(", ")", ">", "1", ":", "\n", "        ", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "if", "param", ".", "requires_grad", ":", "\n", "                ", "dist", ".", "all_reduce", "(", "param", ".", "grad", ".", "data", ")", "\n", "if", "_type", "==", "'avg'", ":", "\n", "                    ", "param", ".", "grad", ".", "data", "/=", "get_world_size", "(", ")", "\n", "", "", "", "", "else", ":", "\n", "        ", "return", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.Filter.__init__": [[26, 28], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "flag", ")", ":", "\n", "        ", "self", ".", "flag", "=", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.Filter.filter": [[29, 31], ["None"], "methods", ["None"], ["", "def", "filter", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.Dummy.__init__": [[34, 36], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "arg", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.Dummy.__getattr__": [[37, 40], ["None"], "methods", ["None"], ["", "def", "__getattr__", "(", "self", ",", "arg", ")", ":", "\n", "        ", "def", "dummy", "(", "*", "args", ",", "**", "kwargs", ")", ":", "pass", "\n", "return", "dummy", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.LogOnce.__init__": [[133, 136], ["set", "log_helper.init_log"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.init_log"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "logged", "=", "set", "(", ")", "\n", "self", ".", "logger", "=", "init_log", "(", "'log_once'", ",", "format_func", "=", "get_format_custom", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.LogOnce.log": [[137, 146], ["log_helper.find_caller", "log_helper.LogOnce.logged.add", "log_helper.LogOnce.logger.info"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.find_caller"], ["", "def", "log", "(", "self", ",", "strings", ")", ":", "\n", "        ", "fn", ",", "lineno", ",", "caller", "=", "find_caller", "(", ")", "\n", "key", "=", "(", "fn", ",", "lineno", ",", "caller", ",", "strings", ")", "\n", "if", "key", "in", "self", ".", "logged", ":", "\n", "            ", "return", "\n", "", "self", ".", "logged", ".", "add", "(", "key", ")", "\n", "message", "=", "\"{filename:s}<{caller}>#{lineno:3d}] {strings}\"", ".", "format", "(", "\n", "filename", "=", "fn", ",", "lineno", "=", "lineno", ",", "strings", "=", "strings", ",", "caller", "=", "caller", ")", "\n", "self", ".", "logger", ".", "info", "(", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.get_format": [[42, 53], ["logging.Formatter", "int", "logger.addFilter", "log_helper.Filter"], "function", ["None"], ["", "", "def", "get_format", "(", "logger", ",", "level", ")", ":", "\n", "    ", "if", "'RANK'", "in", "os", ".", "environ", ":", "\n", "        ", "rank", "=", "int", "(", "os", ".", "environ", "[", "'RANK'", "]", ")", "\n", "\n", "if", "level", "==", "logging", ".", "INFO", ":", "\n", "            ", "logger", ".", "addFilter", "(", "Filter", "(", "rank", "==", "0", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "rank", "=", "0", "\n", "", "format_str", "=", "'[%(asctime)s-rk{}-%(filename)s#%(lineno)3d] %(message)s'", ".", "format", "(", "rank", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "format_str", ")", "\n", "return", "formatter", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.get_format_custom": [[55, 65], ["logging.Formatter", "int", "logger.addFilter", "log_helper.Filter"], "function", ["None"], ["", "def", "get_format_custom", "(", "logger", ",", "level", ")", ":", "\n", "    ", "if", "'RANK'", "in", "os", ".", "environ", ":", "\n", "        ", "rank", "=", "int", "(", "os", ".", "environ", "[", "'RANK'", "]", ")", "\n", "if", "level", "==", "logging", ".", "INFO", ":", "\n", "            ", "logger", ".", "addFilter", "(", "Filter", "(", "rank", "==", "0", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "rank", "=", "0", "\n", "", "format_str", "=", "'[%(asctime)s-rk{}-%(message)s'", ".", "format", "(", "rank", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "format_str", ")", "\n", "return", "formatter", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.init_log": [[67, 79], ["logs.add", "logging.getLogger", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.StreamHandler.setLevel", "format_func", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler"], "function", ["None"], ["", "def", "init_log", "(", "name", ",", "level", "=", "logging", ".", "INFO", ",", "format_func", "=", "get_format", ")", ":", "\n", "    ", "if", "(", "name", ",", "level", ")", "in", "logs", ":", "\n", "        ", "return", "\n", "", "logs", ".", "add", "(", "(", "name", ",", "level", ")", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "logger", ".", "setLevel", "(", "level", ")", "\n", "ch", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "ch", ".", "setLevel", "(", "level", ")", "\n", "formatter", "=", "format_func", "(", "logger", ",", "level", ")", "\n", "ch", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "ch", ")", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.add_file_handler": [[81, 86], ["logging.getLogger", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "log_helper.get_format"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.get_format"], ["", "def", "add_file_handler", "(", "name", ",", "log_file", ",", "level", "=", "logging", ".", "INFO", ")", ":", "\n", "    ", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "log_file", ")", "\n", "fh", ".", "setFormatter", "(", "get_format", "(", "logger", ",", "level", ")", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.print_speed": [[91, 106], ["logging.getLogger", "math.floor", "math.floor", "math.floor", "logging.getLogger.info"], "function", ["None"], ["def", "print_speed", "(", "i", ",", "i_time", ",", "n", ")", ":", "\n", "    ", "\"\"\"print_speed(index, index_time, total_iteration)\"\"\"", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'global'", ")", "\n", "average_time", "=", "i_time", "\n", "remaining_time", "=", "(", "n", "-", "i", ")", "*", "average_time", "\n", "remaining_day", "=", "math", ".", "floor", "(", "remaining_time", "/", "86400", ")", "\n", "remaining_hour", "=", "math", ".", "floor", "(", "remaining_time", "/", "3600", "-", "\n", "remaining_day", "*", "24", ")", "\n", "remaining_min", "=", "math", ".", "floor", "(", "remaining_time", "/", "60", "-", "\n", "remaining_day", "*", "1440", "-", "\n", "remaining_hour", "*", "60", ")", "\n", "logger", ".", "info", "(", "'Progress: %d / %d [%d%%], Speed: %.3f s/iter, ETA %d:%02d:%02d (D:H:M)\\n'", "%", "\n", "(", "i", ",", "n", ",", "i", "/", "n", "*", "100", ",", "\n", "average_time", ",", "\n", "remaining_day", ",", "remaining_hour", ",", "remaining_min", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.find_caller": [[108, 130], ["log_helper.find_caller.current_frame"], "function", ["None"], ["", "def", "find_caller", "(", ")", ":", "\n", "    ", "def", "current_frame", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "raise", "Exception", "\n", "", "except", ":", "\n", "            ", "return", "sys", ".", "exc_info", "(", ")", "[", "2", "]", ".", "tb_frame", ".", "f_back", "\n", "\n", "", "", "f", "=", "current_frame", "(", ")", "\n", "if", "f", "is", "not", "None", ":", "\n", "        ", "f", "=", "f", ".", "f_back", "\n", "", "rv", "=", "\"(unknown file)\"", ",", "0", ",", "\"(unknown function)\"", "\n", "while", "hasattr", "(", "f", ",", "\"f_code\"", ")", ":", "\n", "        ", "co", "=", "f", ".", "f_code", "\n", "filename", "=", "os", ".", "path", ".", "normcase", "(", "co", ".", "co_filename", ")", "\n", "rv", "=", "(", "co", ".", "co_filename", ",", "f", ".", "f_lineno", ",", "co", ".", "co_name", ")", "\n", "if", "filename", "==", "_srcfile", ":", "\n", "            ", "f", "=", "f", ".", "f_back", "\n", "continue", "\n", "", "break", "\n", "", "rv", "=", "list", "(", "rv", ")", "\n", "rv", "[", "0", "]", "=", "os", ".", "path", ".", "basename", "(", "rv", "[", "0", "]", ")", "\n", "return", "rv", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.log_once": [[151, 153], ["once_logger.log"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.log"], ["def", "log_once", "(", "strings", ")", ":", "\n", "    ", "once_logger", ".", "log", "(", "strings", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.main": [[155, 168], ["enumerate", "str", "log_helper.init_log", "logging.getLogger", "print", "logging.getLogger.debug", "logging.getLogger.info", "logging.getLogger.warning", "logging.getLogger.error", "logging.getLogger.critical"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.init_log"], ["", "def", "main", "(", ")", ":", "\n", "    ", "for", "i", ",", "lvl", "in", "enumerate", "(", "[", "logging", ".", "DEBUG", ",", "logging", ".", "INFO", ",", "\n", "logging", ".", "WARNING", ",", "logging", ".", "ERROR", ",", "\n", "logging", ".", "CRITICAL", "]", ")", ":", "\n", "        ", "log_name", "=", "str", "(", "lvl", ")", "\n", "init_log", "(", "log_name", ",", "lvl", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "log_name", ")", "\n", "print", "(", "'****cur lvl:{}'", ".", "format", "(", "lvl", ")", ")", "\n", "logger", ".", "debug", "(", "'debug'", ")", "\n", "logger", ".", "info", "(", "'info'", ")", "\n", "logger", ".", "warning", "(", "'warning'", ")", "\n", "logger", ".", "error", "(", "'error'", ")", "\n", "logger", ".", "critical", "(", "'critiacal'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.corner2center": [[19, 36], ["isinstance", "Center"], "function", ["None"], ["def", "corner2center", "(", "corner", ")", ":", "\n", "    ", "\"\"\" convert (x1, y1, x2, y2) to (cx, cy, w, h)\n    Args:\n        conrner: Corner or np.array (4*N)\n    Return:\n        Center or np.array (4 * N)\n    \"\"\"", "\n", "if", "isinstance", "(", "corner", ",", "Corner", ")", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "corner", "\n", "return", "Center", "(", "(", "x1", "+", "x2", ")", "*", "0.5", ",", "(", "y1", "+", "y2", ")", "*", "0.5", ",", "(", "x2", "-", "x1", ")", ",", "(", "y2", "-", "y1", ")", ")", "\n", "", "else", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "corner", "[", "0", "]", ",", "corner", "[", "1", "]", ",", "corner", "[", "2", "]", ",", "corner", "[", "3", "]", "\n", "x", "=", "(", "x1", "+", "x2", ")", "*", "0.5", "\n", "y", "=", "(", "y1", "+", "y2", ")", "*", "0.5", "\n", "w", "=", "x2", "-", "x1", "\n", "h", "=", "y2", "-", "y1", "\n", "return", "x", ",", "y", ",", "w", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.center2corner": [[38, 55], ["isinstance", "Corner"], "function", ["None"], ["", "", "def", "center2corner", "(", "center", ")", ":", "\n", "    ", "\"\"\" convert (cx, cy, w, h) to (x1, y1, x2, y2)\n    Args:\n        center: Center or np.array (4 * N)\n    Return:\n        center or np.array (4 * N)\n    \"\"\"", "\n", "if", "isinstance", "(", "center", ",", "Center", ")", ":", "\n", "        ", "x", ",", "y", ",", "w", ",", "h", "=", "center", "\n", "return", "Corner", "(", "x", "-", "w", "*", "0.5", ",", "y", "-", "h", "*", "0.5", ",", "x", "+", "w", "*", "0.5", ",", "y", "+", "h", "*", "0.5", ")", "\n", "", "else", ":", "\n", "        ", "x", ",", "y", ",", "w", ",", "h", "=", "center", "[", "0", "]", ",", "center", "[", "1", "]", ",", "center", "[", "2", "]", ",", "center", "[", "3", "]", "\n", "x1", "=", "x", "-", "w", "*", "0.5", "\n", "y1", "=", "y", "-", "h", "*", "0.5", "\n", "x2", "=", "x", "+", "w", "*", "0.5", "\n", "y2", "=", "y", "+", "h", "*", "0.5", "\n", "return", "x1", ",", "y1", ",", "x2", ",", "y2", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.IoU": [[57, 82], ["numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum"], "function", ["None"], ["", "", "def", "IoU", "(", "rect1", ",", "rect2", ")", ":", "\n", "    ", "\"\"\" caculate interection over union\n    Args:\n        rect1: (x1, y1, x2, y2)\n        rect2: (x1, y1, x2, y2)\n    Returns:\n        iou\n    \"\"\"", "\n", "# overlap", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "rect1", "[", "0", "]", ",", "rect1", "[", "1", "]", ",", "rect1", "[", "2", "]", ",", "rect1", "[", "3", "]", "\n", "tx1", ",", "ty1", ",", "tx2", ",", "ty2", "=", "rect2", "[", "0", "]", ",", "rect2", "[", "1", "]", ",", "rect2", "[", "2", "]", ",", "rect2", "[", "3", "]", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "tx1", ",", "x1", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "ty1", ",", "y1", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "tx2", ",", "x2", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "ty2", ",", "y2", ")", "\n", "\n", "ww", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "hh", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "target_a", "=", "(", "tx2", "-", "tx1", ")", "*", "(", "ty2", "-", "ty1", ")", "\n", "inter", "=", "ww", "*", "hh", "\n", "iou", "=", "inter", "/", "(", "area", "+", "target_a", "-", "inter", ")", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.cxy_wh_2_rect": [[84, 88], ["numpy.array"], "function", ["None"], ["", "def", "cxy_wh_2_rect", "(", "pos", ",", "sz", ")", ":", "\n", "    ", "\"\"\" convert (cx, cy, w, h) to (x1, y1, w, h), 0-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "pos", "[", "0", "]", "-", "sz", "[", "0", "]", "/", "2", ",", "pos", "[", "1", "]", "-", "sz", "[", "1", "]", "/", "2", ",", "sz", "[", "0", "]", ",", "sz", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.rect_2_cxy_wh": [[90, 95], ["numpy.array", "numpy.array"], "function", ["None"], ["", "def", "rect_2_cxy_wh", "(", "rect", ")", ":", "\n", "    ", "\"\"\" convert (x1, y1, w, h) to (cx, cy, w, h), 0-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "rect", "[", "0", "]", "+", "rect", "[", "2", "]", "/", "2", ",", "rect", "[", "1", "]", "+", "rect", "[", "3", "]", "/", "2", "]", ")", ",", "np", ".", "array", "(", "[", "rect", "[", "2", "]", ",", "rect", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.cxy_wh_2_rect1": [[97, 101], ["numpy.array"], "function", ["None"], ["", "def", "cxy_wh_2_rect1", "(", "pos", ",", "sz", ")", ":", "\n", "    ", "\"\"\" convert (cx, cy, w, h) to (x1, y1, w, h), 1-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "pos", "[", "0", "]", "-", "sz", "[", "0", "]", "/", "2", "+", "1", ",", "pos", "[", "1", "]", "-", "sz", "[", "1", "]", "/", "2", "+", "1", ",", "sz", "[", "0", "]", ",", "sz", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.rect1_2_cxy_wh": [[103, 108], ["numpy.array", "numpy.array"], "function", ["None"], ["", "def", "rect1_2_cxy_wh", "(", "rect", ")", ":", "\n", "    ", "\"\"\" convert (x1, y1, w, h) to (cx, cy, w, h), 1-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "rect", "[", "0", "]", "+", "rect", "[", "2", "]", "/", "2", "-", "1", ",", "rect", "[", "1", "]", "+", "rect", "[", "3", "]", "/", "2", "-", "1", "]", ")", ",", "np", ".", "array", "(", "[", "rect", "[", "2", "]", ",", "rect", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.get_axis_aligned_bbox": [[110, 135], ["numpy.mean", "numpy.mean", "min", "max", "min", "max", "numpy.sqrt", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["", "def", "get_axis_aligned_bbox", "(", "region", ")", ":", "\n", "    ", "\"\"\" convert region to (cx, cy, w, h) that represent by axis aligned box\n    \"\"\"", "\n", "nv", "=", "region", ".", "size", "\n", "if", "nv", "==", "8", ":", "\n", "        ", "cx", "=", "np", ".", "mean", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "cy", "=", "np", ".", "mean", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "x1", "=", "min", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "x2", "=", "max", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "y1", "=", "min", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "y2", "=", "max", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "A1", "=", "np", ".", "linalg", ".", "norm", "(", "region", "[", "0", ":", "2", "]", "-", "region", "[", "2", ":", "4", "]", ")", "*", "np", ".", "linalg", ".", "norm", "(", "region", "[", "2", ":", "4", "]", "-", "region", "[", "4", ":", "6", "]", ")", "\n", "A2", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "s", "=", "np", ".", "sqrt", "(", "A1", "/", "A2", ")", "\n", "w", "=", "s", "*", "(", "x2", "-", "x1", ")", "+", "1", "\n", "h", "=", "s", "*", "(", "y2", "-", "y1", ")", "+", "1", "\n", "", "else", ":", "\n", "        ", "x", "=", "region", "[", "0", "]", "\n", "y", "=", "region", "[", "1", "]", "\n", "w", "=", "region", "[", "2", "]", "\n", "h", "=", "region", "[", "3", "]", "\n", "cx", "=", "x", "+", "w", "/", "2", "\n", "cy", "=", "y", "+", "h", "/", "2", "\n", "", "return", "cx", ",", "cy", ",", "w", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.get_min_max_bbox": [[137, 158], ["numpy.mean", "numpy.mean", "min", "max", "min", "max"], "function", ["None"], ["", "def", "get_min_max_bbox", "(", "region", ")", ":", "\n", "    ", "\"\"\" convert region to (cx, cy, w, h) that represent by mim-max box\n    \"\"\"", "\n", "nv", "=", "region", ".", "size", "\n", "if", "nv", "==", "8", ":", "\n", "        ", "cx", "=", "np", ".", "mean", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "cy", "=", "np", ".", "mean", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "x1", "=", "min", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "x2", "=", "max", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "y1", "=", "min", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "y2", "=", "max", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "w", "=", "x2", "-", "x1", "\n", "h", "=", "y2", "-", "y1", "\n", "", "else", ":", "\n", "        ", "x", "=", "region", "[", "0", "]", "\n", "y", "=", "region", "[", "1", "]", "\n", "w", "=", "region", "[", "2", "]", "\n", "h", "=", "region", "[", "3", "]", "\n", "cx", "=", "x", "+", "w", "/", "2", "\n", "cy", "=", "y", "+", "h", "/", "2", "\n", "", "return", "cx", ",", "cy", ",", "w", ",", "h", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.anchor.Anchors.__init__": [[19, 31], ["anchor.Anchors.generate_anchors", "len", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.anchor.Anchors.generate_anchors"], ["def", "__init__", "(", "self", ",", "stride", ",", "ratios", ",", "scales", ",", "image_center", "=", "0", ",", "size", "=", "0", ")", ":", "\n", "        ", "self", ".", "stride", "=", "stride", "\n", "self", ".", "ratios", "=", "ratios", "\n", "self", ".", "scales", "=", "scales", "\n", "self", ".", "image_center", "=", "0", "\n", "self", ".", "size", "=", "0", "\n", "\n", "self", ".", "anchor_num", "=", "len", "(", "self", ".", "scales", ")", "*", "len", "(", "self", ".", "ratios", ")", "\n", "\n", "self", ".", "anchors", "=", "None", "\n", "\n", "self", ".", "generate_anchors", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.anchor.Anchors.generate_anchors": [[32, 48], ["numpy.zeros", "int", "int", "math.sqrt"], "methods", ["None"], ["", "def", "generate_anchors", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        generate anchors based on predefined configuration\n        \"\"\"", "\n", "self", ".", "anchors", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_num", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "size", "=", "self", ".", "stride", "*", "self", ".", "stride", "\n", "count", "=", "0", "\n", "for", "r", "in", "self", ".", "ratios", ":", "\n", "            ", "ws", "=", "int", "(", "math", ".", "sqrt", "(", "size", "*", "1.", "/", "r", ")", ")", "\n", "hs", "=", "int", "(", "ws", "*", "r", ")", "\n", "\n", "for", "s", "in", "self", ".", "scales", ":", "\n", "                ", "w", "=", "ws", "*", "s", "\n", "h", "=", "hs", "*", "s", "\n", "self", ".", "anchors", "[", "count", "]", "[", ":", "]", "=", "[", "-", "w", "*", "0.5", ",", "-", "h", "*", "0.5", ",", "w", "*", "0.5", ",", "h", "*", "0.5", "]", "[", ":", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.anchor.Anchors.generate_all_anchors": [[49, 86], ["numpy.array", "map", "pysot.utils.bbox.corner2center", "numpy.zeros", "map", "pysot.utils.bbox.center2corner", "numpy.arange().reshape", "numpy.arange().reshape", "numpy.stack().astype", "numpy.stack().astype", "x.reshape", "numpy.arange", "numpy.arange", "numpy.stack", "numpy.stack"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.corner2center", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.center2corner"], ["", "", "", "def", "generate_all_anchors", "(", "self", ",", "im_c", ",", "size", ")", ":", "\n", "        ", "\"\"\"\n        im_c: image center\n        size: image size\n        \"\"\"", "\n", "if", "self", ".", "image_center", "==", "im_c", "and", "self", ".", "size", "==", "size", ":", "\n", "            ", "return", "False", "\n", "", "self", ".", "image_center", "=", "im_c", "\n", "self", ".", "size", "=", "size", "\n", "\n", "a0x", "=", "im_c", "-", "size", "//", "2", "*", "self", ".", "stride", "\n", "ori", "=", "np", ".", "array", "(", "[", "a0x", "]", "*", "4", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "zero_anchors", "=", "self", ".", "anchors", "+", "ori", "\n", "\n", "x1", "=", "zero_anchors", "[", ":", ",", "0", "]", "\n", "y1", "=", "zero_anchors", "[", ":", ",", "1", "]", "\n", "x2", "=", "zero_anchors", "[", ":", ",", "2", "]", "\n", "y2", "=", "zero_anchors", "[", ":", ",", "3", "]", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "map", "(", "lambda", "x", ":", "x", ".", "reshape", "(", "self", ".", "anchor_num", ",", "1", ",", "1", ")", ",", "\n", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "corner2center", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "\n", "disp_x", "=", "np", ".", "arange", "(", "0", ",", "size", ")", ".", "reshape", "(", "1", ",", "1", ",", "-", "1", ")", "*", "self", ".", "stride", "\n", "disp_y", "=", "np", ".", "arange", "(", "0", ",", "size", ")", ".", "reshape", "(", "1", ",", "-", "1", ",", "1", ")", "*", "self", ".", "stride", "\n", "\n", "cx", "=", "cx", "+", "disp_x", "\n", "cy", "=", "cy", "+", "disp_y", "\n", "\n", "# broadcast", "\n", "zero", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "map", "(", "lambda", "x", ":", "x", "+", "zero", ",", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "center2corner", "(", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", "\n", "\n", "self", ".", "all_anchors", "=", "(", "np", ".", "stack", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "np", ".", "stack", "(", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "return", "True", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._exec": [[16, 19], ["os.popen", "os.popen.read().strip", "os.popen.read"], "function", ["None"], ["if", "isinstance", "(", "confidence", ",", "list", ")", ":", "\n", "        ", "confidence", "=", "np", ".", "array", "(", "confidence", ")", "\n", "", "confidence", "=", "confidence", ".", "flatten", "(", ")", "\n", "confidence", "=", "confidence", "[", "~", "np", ".", "isnan", "(", "confidence", ")", "]", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._bold": [[21, 23], ["None"], "function", ["None"], ["\n", "assert", "len", "(", "confidence", ")", ">", "resolution", "and", "resolution", ">", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._color": [[25, 27], ["None"], "function", ["None"], ["thresholds", "[", "0", "]", "=", "-", "np", ".", "inf", "\n", "thresholds", "[", "-", "1", "]", "=", "np", ".", "inf", "\n", "delta", "=", "np", ".", "floor", "(", "len", "(", "confidence", ")", "/", "(", "resolution", "-", "2", ")", ")", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._describe": [[29, 49], ["model.named_parameters", "model.named_children", "lines.append", "lines.append", "misc._describe", "misc._color", "misc._color", "len"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._describe", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._color", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._color"], ["thresholds", "[", "1", ":", "-", "1", "]", "=", "confidence", "[", "idxs", "]", "\n", "return", "thresholds", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc.commit": [[51, 58], ["os.path.abspath", "misc._exec", "misc._exec", "os.path.join", "os.path.dirname"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._exec", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._exec"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc.describe": [[60, 68], ["misc._describe", "lines.append", "len"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc._describe"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.LRScheduler.__init__": [[17, 21], ["torch.optim.lr_scheduler._LRScheduler.__init__", "Exception"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "if", "'lr_spaces'", "not", "in", "self", ".", "__dict__", ":", "\n", "            ", "raise", "Exception", "(", "'lr_spaces must be set in \"LRSchduler\"'", ")", "\n", "", "super", "(", "LRScheduler", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.LRScheduler.get_cur_lr": [[22, 24], ["None"], "methods", ["None"], ["", "def", "get_cur_lr", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "lr_spaces", "[", "self", ".", "last_epoch", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.LRScheduler.get_lr": [[25, 29], ["None"], "methods", ["None"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "epoch", "=", "self", ".", "last_epoch", "\n", "return", "[", "self", ".", "lr_spaces", "[", "epoch", "]", "*", "pg", "[", "'initial_lr'", "]", "/", "self", ".", "start_lr", "\n", "for", "pg", "in", "self", ".", "optimizer", ".", "param_groups", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.LRScheduler.__repr__": [[30, 33], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"({}) lr spaces: \\n{}\"", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ",", "\n", "self", ".", "lr_spaces", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.LogScheduler.__init__": [[36, 46], ["numpy.logspace", "lr_scheduler.LRScheduler.__init__", "math.log10", "math.log10"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "start_lr", "=", "0.03", ",", "end_lr", "=", "5e-4", ",", "\n", "epochs", "=", "50", ",", "last_epoch", "=", "-", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "start_lr", "=", "start_lr", "\n", "self", ".", "end_lr", "=", "end_lr", "\n", "self", ".", "epochs", "=", "epochs", "\n", "self", ".", "lr_spaces", "=", "np", ".", "logspace", "(", "math", ".", "log10", "(", "start_lr", ")", ",", "\n", "math", ".", "log10", "(", "end_lr", ")", ",", "\n", "epochs", ")", "\n", "\n", "super", "(", "LogScheduler", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.StepScheduler.__init__": [[49, 62], ["lr_scheduler.LRScheduler.__init__", "math.pow", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "start_lr", "=", "0.01", ",", "end_lr", "=", "None", ",", "\n", "step", "=", "10", ",", "mult", "=", "0.1", ",", "epochs", "=", "50", ",", "last_epoch", "=", "-", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "end_lr", "is", "not", "None", ":", "\n", "            ", "if", "start_lr", "is", "None", ":", "\n", "                ", "start_lr", "=", "end_lr", "/", "(", "mult", "**", "(", "epochs", "//", "step", ")", ")", "\n", "", "else", ":", "# for warm up policy", "\n", "                ", "mult", "=", "math", ".", "pow", "(", "end_lr", "/", "start_lr", ",", "1.", "/", "(", "epochs", "//", "step", ")", ")", "\n", "", "", "self", ".", "start_lr", "=", "start_lr", "\n", "self", ".", "lr_spaces", "=", "self", ".", "start_lr", "*", "(", "mult", "**", "(", "np", ".", "arange", "(", "epochs", ")", "//", "step", ")", ")", "\n", "self", ".", "mult", "=", "mult", "\n", "self", ".", "_step", "=", "step", "\n", "\n", "super", "(", "StepScheduler", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.MultiStepScheduler.__init__": [[65, 79], ["lr_scheduler.MultiStepScheduler._build_lr", "lr_scheduler.LRScheduler.__init__", "math.pow", "len", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.CosStepScheduler._build_lr", "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "start_lr", "=", "0.01", ",", "end_lr", "=", "None", ",", "\n", "steps", "=", "[", "10", ",", "20", ",", "30", ",", "40", "]", ",", "mult", "=", "0.5", ",", "epochs", "=", "50", ",", "\n", "last_epoch", "=", "-", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "end_lr", "is", "not", "None", ":", "\n", "            ", "if", "start_lr", "is", "None", ":", "\n", "                ", "start_lr", "=", "end_lr", "/", "(", "mult", "**", "(", "len", "(", "steps", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "mult", "=", "math", ".", "pow", "(", "end_lr", "/", "start_lr", ",", "1.", "/", "len", "(", "steps", ")", ")", "\n", "", "", "self", ".", "start_lr", "=", "start_lr", "\n", "self", ".", "lr_spaces", "=", "self", ".", "_build_lr", "(", "start_lr", ",", "steps", ",", "mult", ",", "epochs", ")", "\n", "self", ".", "mult", "=", "mult", "\n", "self", ".", "steps", "=", "steps", "\n", "\n", "super", "(", "MultiStepScheduler", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.MultiStepScheduler._build_lr": [[80, 88], ["range", "numpy.array"], "methods", ["None"], ["", "def", "_build_lr", "(", "self", ",", "start_lr", ",", "steps", ",", "mult", ",", "epochs", ")", ":", "\n", "        ", "lr", "=", "[", "0", "]", "*", "epochs", "\n", "lr", "[", "0", "]", "=", "start_lr", "\n", "for", "i", "in", "range", "(", "1", ",", "epochs", ")", ":", "\n", "            ", "lr", "[", "i", "]", "=", "lr", "[", "i", "-", "1", "]", "\n", "if", "i", "in", "steps", ":", "\n", "                ", "lr", "[", "i", "]", "*=", "mult", "\n", "", "", "return", "np", ".", "array", "(", "lr", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.LinearStepScheduler.__init__": [[91, 97], ["numpy.linspace", "lr_scheduler.LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "start_lr", "=", "0.01", ",", "end_lr", "=", "0.005", ",", "\n", "epochs", "=", "50", ",", "last_epoch", "=", "-", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "start_lr", "=", "start_lr", "\n", "self", ".", "end_lr", "=", "end_lr", "\n", "self", ".", "lr_spaces", "=", "np", ".", "linspace", "(", "start_lr", ",", "end_lr", ",", "epochs", ")", "\n", "super", "(", "LinearStepScheduler", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.CosStepScheduler.__init__": [[100, 107], ["lr_scheduler.CosStepScheduler._build_lr", "lr_scheduler.LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.CosStepScheduler._build_lr", "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "start_lr", "=", "0.01", ",", "end_lr", "=", "0.005", ",", "\n", "epochs", "=", "50", ",", "last_epoch", "=", "-", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "start_lr", "=", "start_lr", "\n", "self", ".", "end_lr", "=", "end_lr", "\n", "self", ".", "lr_spaces", "=", "self", ".", "_build_lr", "(", "start_lr", ",", "end_lr", ",", "epochs", ")", "\n", "\n", "super", "(", "CosStepScheduler", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.CosStepScheduler._build_lr": [[108, 113], ["numpy.arange().astype", "lr.astype", "numpy.arange", "numpy.cos"], "methods", ["None"], ["", "def", "_build_lr", "(", "self", ",", "start_lr", ",", "end_lr", ",", "epochs", ")", ":", "\n", "        ", "index", "=", "np", ".", "arange", "(", "epochs", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "lr", "=", "end_lr", "+", "(", "start_lr", "-", "end_lr", ")", "*", "(", "1.", "+", "np", ".", "cos", "(", "index", "*", "np", ".", "pi", "/", "epochs", ")", ")", "*", "0.5", "\n", "return", "lr", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.WarmUPScheduler.__init__": [[116, 123], ["numpy.concatenate", "lr_scheduler.LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "warmup", ",", "normal", ",", "epochs", "=", "50", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "warmup", "=", "warmup", ".", "lr_spaces", "# [::-1]", "\n", "normal", "=", "normal", ".", "lr_spaces", "\n", "self", ".", "lr_spaces", "=", "np", ".", "concatenate", "(", "[", "warmup", ",", "normal", "]", ")", "\n", "self", ".", "start_lr", "=", "normal", "[", "0", "]", "\n", "\n", "super", "(", "WarmUPScheduler", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler._build_lr_scheduler": [[133, 136], ["pysot.core.config.cfg.TRAIN.LR_WARMUP", "pysot.core.config.cfg.TRAIN.LR", "pysot.core.config.cfg.TRAIN.LR"], "function", ["None"], ["def", "_build_lr_scheduler", "(", "optimizer", ",", "config", ",", "epochs", "=", "50", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "    ", "return", "LRs", "[", "config", ".", "TYPE", "]", "(", "optimizer", ",", "last_epoch", "=", "last_epoch", ",", "\n", "epochs", "=", "epochs", ",", "**", "config", ".", "KWARGS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler._build_warm_up_scheduler": [[138, 145], ["lr_scheduler._build_lr_scheduler", "lr_scheduler._build_lr_scheduler", "lr_scheduler.WarmUPScheduler"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler._build_lr_scheduler", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler._build_lr_scheduler"], ["", "def", "_build_warm_up_scheduler", "(", "optimizer", ",", "epochs", "=", "50", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "    ", "warmup_epoch", "=", "cfg", ".", "TRAIN", ".", "LR_WARMUP", ".", "EPOCH", "\n", "sc1", "=", "_build_lr_scheduler", "(", "optimizer", ",", "cfg", ".", "TRAIN", ".", "LR_WARMUP", ",", "\n", "warmup_epoch", ",", "last_epoch", ")", "\n", "sc2", "=", "_build_lr_scheduler", "(", "optimizer", ",", "cfg", ".", "TRAIN", ".", "LR", ",", "\n", "epochs", "-", "warmup_epoch", ",", "last_epoch", ")", "\n", "return", "WarmUPScheduler", "(", "optimizer", ",", "sc1", ",", "sc2", ",", "epochs", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.build_lr_scheduler": [[147, 153], ["lr_scheduler._build_warm_up_scheduler", "lr_scheduler._build_lr_scheduler"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler._build_warm_up_scheduler", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler._build_lr_scheduler"], ["", "def", "build_lr_scheduler", "(", "optimizer", ",", "epochs", "=", "50", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "    ", "if", "cfg", ".", "TRAIN", ".", "LR_WARMUP", ".", "WARMUP", ":", "\n", "        ", "return", "_build_warm_up_scheduler", "(", "optimizer", ",", "epochs", ",", "last_epoch", ")", "\n", "", "else", ":", "\n", "        ", "return", "_build_lr_scheduler", "(", "optimizer", ",", "cfg", ".", "TRAIN", ".", "LR", ",", "\n", "epochs", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.visualization.draw_eao.draw_eao": [[11, 45], ["matplotlib.figure", "plt.figure.add_subplot", "numpy.linspace", "enumerate", "numpy.array", "numpy.max", "numpy.min", "enumerate", "zip", "fig.add_subplot.set_thetagrids", "fig.add_subplot.spines[].set_visible", "fig.add_subplot.legend", "fig.add_subplot.set_ylim", "fig.add_subplot.set_yticks", "matplotlib.show", "result.items", "list", "np.array.append", "np.array.append", "result.items", "list", "np.array.append", "numpy.array", "matplotlib.plot", "attr_value.append", "ret.values", "sorted", "ret.values", "result.items"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.show"], ["def", "draw_eao", "(", "result", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ",", "projection", "=", "'polar'", ")", "\n", "angles", "=", "np", ".", "linspace", "(", "0", ",", "2", "*", "np", ".", "pi", ",", "8", ",", "endpoint", "=", "True", ")", "\n", "\n", "attr2value", "=", "[", "]", "\n", "for", "i", ",", "(", "tracker_name", ",", "ret", ")", "in", "enumerate", "(", "result", ".", "items", "(", ")", ")", ":", "\n", "        ", "value", "=", "list", "(", "ret", ".", "values", "(", ")", ")", "\n", "attr2value", ".", "append", "(", "value", ")", "\n", "value", ".", "append", "(", "value", "[", "0", "]", ")", "\n", "", "attr2value", "=", "np", ".", "array", "(", "attr2value", ")", "\n", "max_value", "=", "np", ".", "max", "(", "attr2value", ",", "axis", "=", "0", ")", "\n", "min_value", "=", "np", ".", "min", "(", "attr2value", ",", "axis", "=", "0", ")", "\n", "result", "=", "{", "key", ":", "value", "for", "key", ",", "value", "in", "sorted", "(", "result", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", "[", "'all'", "]", ",", "reverse", "=", "True", ")", "}", "\n", "for", "i", ",", "(", "tracker_name", ",", "ret", ")", "in", "enumerate", "(", "result", ".", "items", "(", ")", ")", ":", "\n", "        ", "value", "=", "list", "(", "ret", ".", "values", "(", ")", ")", "\n", "value", ".", "append", "(", "value", "[", "0", "]", ")", "\n", "value", "=", "np", ".", "array", "(", "value", ")", "\n", "value", "*=", "(", "1", "/", "max_value", ")", "\n", "plt", ".", "plot", "(", "angles", ",", "value", ",", "linestyle", "=", "'-'", ",", "color", "=", "COLOR", "[", "i", "]", ",", "marker", "=", "MARKER_STYLE", "[", "i", "]", ",", "\n", "label", "=", "tracker_name", ",", "linewidth", "=", "1.5", ",", "markersize", "=", "6", ")", "\n", "\n", "", "attrs", "=", "[", "\"Overall\"", ",", "\"Camera motion\"", ",", "\"Illumination change\"", ",", "\"Motion Change\"", ",", "\n", "\"Size change\"", ",", "\"Occlusion\"", ",", "\"Unassigned\"", "]", "\n", "attr_value", "=", "[", "]", "\n", "for", "attr", ",", "maxv", ",", "minv", "in", "zip", "(", "attrs", ",", "max_value", ",", "min_value", ")", ":", "\n", "        ", "attr_value", ".", "append", "(", "attr", "+", "\"\\n({:.3f},{:.3f})\"", ".", "format", "(", "minv", ",", "maxv", ")", ")", "\n", "", "ax", ".", "set_thetagrids", "(", "angles", "[", ":", "-", "1", "]", "*", "180", "/", "np", ".", "pi", ",", "attr_value", ")", "\n", "ax", ".", "spines", "[", "'polar'", "]", ".", "set_visible", "(", "False", ")", "\n", "ax", ".", "legend", "(", "loc", "=", "'upper center'", ",", "bbox_to_anchor", "=", "(", "0.5", ",", "-", "0.07", ")", ",", "frameon", "=", "False", ",", "ncol", "=", "5", ")", "\n", "# ax.grid(b=False)", "\n", "ax", ".", "set_ylim", "(", "0", ",", "1.18", ")", "\n", "ax", ".", "set_yticks", "(", "[", "]", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.visualization.draw_f1.draw_f1": [[10, 57], ["matplotlib.subplots", "numpy.arange", "ax.grid", "ax.set_aspect", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.axis", "matplotlib.title", "result.items", "enumerate", "ax.legend", "matplotlib.xticks", "matplotlib.yticks", "matplotlib.show", "numpy.arange", "ax.plot", "ax.plot", "numpy.mean", "numpy.mean", "numpy.argmax", "sorted", "ax.plot", "ax.plot", "numpy.arange", "numpy.arange", "list", "list", "best_f1.items", "ret[].values", "ret[].values"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.show"], ["def", "draw_f1", "(", "result", ",", "bold_name", "=", "None", ")", ":", "\n", "# drawing f1 contour", "\n", "    ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "for", "f1", "in", "np", ".", "arange", "(", "0.1", ",", "1", ",", "0.1", ")", ":", "\n", "        ", "recall", "=", "np", ".", "arange", "(", "f1", ",", "1", "+", "0.01", ",", "0.01", ")", "\n", "precision", "=", "f1", "*", "recall", "/", "(", "2", "*", "recall", "-", "f1", ")", "\n", "ax", ".", "plot", "(", "recall", ",", "precision", ",", "color", "=", "[", "0", ",", "1", ",", "0", "]", ",", "linestyle", "=", "'-'", ",", "linewidth", "=", "0.5", ")", "\n", "ax", ".", "plot", "(", "precision", ",", "recall", ",", "color", "=", "[", "0", ",", "1", ",", "0", "]", ",", "linestyle", "=", "'-'", ",", "linewidth", "=", "0.5", ")", "\n", "", "ax", ".", "grid", "(", "b", "=", "True", ")", "\n", "ax", ".", "set_aspect", "(", "1", ")", "\n", "plt", ".", "xlabel", "(", "'Recall'", ")", "\n", "plt", ".", "ylabel", "(", "'Precision'", ")", "\n", "plt", ".", "axis", "(", "[", "0", ",", "1", ",", "0", ",", "1", "]", ")", "\n", "plt", ".", "title", "(", "r'\\textbf{VOT2018-LT Precision vs Recall}'", ")", "\n", "\n", "# draw result line", "\n", "all_precision", "=", "{", "}", "\n", "all_recall", "=", "{", "}", "\n", "best_f1", "=", "{", "}", "\n", "best_idx", "=", "{", "}", "\n", "for", "tracker_name", ",", "ret", "in", "result", ".", "items", "(", ")", ":", "\n", "        ", "precision", "=", "np", ".", "mean", "(", "list", "(", "ret", "[", "'precision'", "]", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "recall", "=", "np", ".", "mean", "(", "list", "(", "ret", "[", "'recall'", "]", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "f1", "=", "2", "*", "precision", "*", "recall", "/", "(", "precision", "+", "recall", ")", "\n", "max_idx", "=", "np", ".", "argmax", "(", "f1", ")", "\n", "all_precision", "[", "tracker_name", "]", "=", "precision", "\n", "all_recall", "[", "tracker_name", "]", "=", "recall", "\n", "best_f1", "[", "tracker_name", "]", "=", "f1", "[", "max_idx", "]", "\n", "best_idx", "[", "tracker_name", "]", "=", "max_idx", "\n", "\n", "", "for", "idx", ",", "(", "tracker_name", ",", "best_f1", ")", "in", "enumerate", "(", "sorted", "(", "best_f1", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", ")", ":", "\n", "        ", "if", "tracker_name", "==", "bold_name", ":", "\n", "            ", "label", "=", "r\"\\textbf{[%.3f] Ours}\"", "%", "(", "best_f1", ")", "\n", "", "else", ":", "\n", "            ", "label", "=", "\"[%.3f] \"", "%", "(", "best_f1", ")", "+", "tracker_name", "\n", "", "recall", "=", "all_recall", "[", "tracker_name", "]", "[", ":", "-", "1", "]", "\n", "precision", "=", "all_precision", "[", "tracker_name", "]", "[", ":", "-", "1", "]", "\n", "ax", ".", "plot", "(", "recall", ",", "precision", ",", "color", "=", "COLOR", "[", "idx", "]", ",", "linestyle", "=", "'-'", ",", "\n", "label", "=", "label", ")", "\n", "f1_idx", "=", "best_idx", "[", "tracker_name", "]", "\n", "ax", ".", "plot", "(", "recall", "[", "f1_idx", "]", ",", "precision", "[", "f1_idx", "]", ",", "color", "=", "[", "0", ",", "0", ",", "0", "]", ",", "marker", "=", "'o'", ",", "\n", "markerfacecolor", "=", "COLOR", "[", "idx", "]", ",", "markersize", "=", "5", ")", "\n", "", "ax", ".", "legend", "(", "loc", "=", "'lower right'", ",", "labelspacing", "=", "0.2", ")", "\n", "plt", ".", "xticks", "(", "np", ".", "arange", "(", "0", ",", "1", "+", "0.1", ",", "0.1", ")", ")", "\n", "plt", ".", "yticks", "(", "np", ".", "arange", "(", "0", ",", "1", "+", "0.1", ",", "0.1", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.visualization.draw_success_precision.draw_success_precision": [[10, 119], ["matplotlib.subplots", "ax.grid", "ax.set_aspect", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.axis", "numpy.arange", "success_ret.keys", "enumerate", "ax.legend", "ax.autoscale", "matplotlib.axis", "ax.autoscale", "matplotlib.axis", "matplotlib.xticks", "matplotlib.yticks", "ax.set_aspect", "matplotlib.show", "matplotlib.title", "matplotlib.title", "numpy.mean", "sorted", "matplotlib.plot", "numpy.arange", "numpy.arange", "matplotlib.subplots", "ax.grid", "ax.set_aspect", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.axis", "numpy.arange", "precision_ret.keys", "enumerate", "ax.legend", "ax.autoscale", "matplotlib.axis", "ax.autoscale", "matplotlib.axis", "matplotlib.xticks", "matplotlib.yticks", "ax.set_aspect", "matplotlib.show", "matplotlib.subplots", "ax.grid", "matplotlib.xlabel", "matplotlib.ylabel", "precision_ret.keys", "enumerate", "ax.legend", "ax.autoscale", "matplotlib.axis", "ax.autoscale", "matplotlib.axis", "matplotlib.xticks", "matplotlib.yticks", "ax.set_aspect", "matplotlib.show", "success.items", "numpy.mean", "matplotlib.title", "matplotlib.title", "sorted", "matplotlib.plot", "numpy.arange", "numpy.arange", "matplotlib.title", "matplotlib.title", "numpy.arange", "sorted", "matplotlib.plot", "numpy.arange", "numpy.arange", "success_ret[].items", "success_ret[].items", "numpy.mean", "precision.items", "numpy.mean", "numpy.mean", "norm_precision.items", "numpy.mean", "precision_ret[].items", "precision_ret[].items", "norm_precision_ret[].items", "norm_precision_ret[].items"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.show", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.show", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.show"], ["def", "draw_success_precision", "(", "success_ret", ",", "name", ",", "videos", ",", "attr", ",", "precision_ret", "=", "None", ",", "\n", "norm_precision_ret", "=", "None", ",", "bold_name", "=", "None", ",", "axis", "=", "[", "0", ",", "1", "]", ")", ":", "\n", "# success plot", "\n", "    ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "ax", ".", "grid", "(", "b", "=", "True", ")", "\n", "ax", ".", "set_aspect", "(", "1", ")", "\n", "plt", ".", "xlabel", "(", "'Overlap threshold'", ")", "\n", "plt", ".", "ylabel", "(", "'Success rate'", ")", "\n", "if", "attr", "==", "'ALL'", ":", "\n", "        ", "plt", ".", "title", "(", "r'\\textbf{Success plots of OPE on %s}'", "%", "(", "name", ")", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "title", "(", "r'\\textbf{Success plots of OPE - %s}'", "%", "(", "attr", ")", ")", "\n", "", "plt", ".", "axis", "(", "[", "0", ",", "1", "]", "+", "axis", ")", "\n", "success", "=", "{", "}", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "for", "tracker_name", "in", "success_ret", ".", "keys", "(", ")", ":", "\n", "        ", "value", "=", "[", "v", "for", "k", ",", "v", "in", "success_ret", "[", "tracker_name", "]", ".", "items", "(", ")", "if", "k", "in", "videos", "]", "\n", "success", "[", "tracker_name", "]", "=", "np", ".", "mean", "(", "value", ")", "\n", "", "for", "idx", ",", "(", "tracker_name", ",", "auc", ")", "in", "enumerate", "(", "sorted", "(", "success", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", ")", ":", "\n", "        ", "if", "tracker_name", "==", "bold_name", ":", "\n", "            ", "label", "=", "r\"\\textbf{[%.3f] %s}\"", "%", "(", "auc", ",", "tracker_name", ")", "\n", "", "else", ":", "\n", "            ", "label", "=", "\"[%.3f] \"", "%", "(", "auc", ")", "+", "tracker_name", "\n", "", "value", "=", "[", "v", "for", "k", ",", "v", "in", "success_ret", "[", "tracker_name", "]", ".", "items", "(", ")", "if", "k", "in", "videos", "]", "\n", "plt", ".", "plot", "(", "thresholds", ",", "np", ".", "mean", "(", "value", ",", "axis", "=", "0", ")", ",", "\n", "color", "=", "COLOR", "[", "idx", "]", ",", "linestyle", "=", "LINE_STYLE", "[", "idx", "]", ",", "label", "=", "label", ",", "linewidth", "=", "2", ")", "\n", "", "ax", ".", "legend", "(", "loc", "=", "'lower left'", ",", "labelspacing", "=", "0.2", ")", "\n", "ax", ".", "autoscale", "(", "enable", "=", "True", ",", "axis", "=", "'both'", ",", "tight", "=", "True", ")", "\n", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", "=", "plt", ".", "axis", "(", ")", "\n", "ax", ".", "autoscale", "(", "enable", "=", "False", ")", "\n", "ymax", "+=", "0.03", "\n", "plt", ".", "axis", "(", "[", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", "]", ")", "\n", "plt", ".", "xticks", "(", "np", ".", "arange", "(", "xmin", ",", "xmax", "+", "0.01", ",", "0.1", ")", ")", "\n", "plt", ".", "yticks", "(", "np", ".", "arange", "(", "ymin", ",", "ymax", ",", "0.1", ")", ")", "\n", "ax", ".", "set_aspect", "(", "(", "xmax", "-", "xmin", ")", "/", "(", "ymax", "-", "ymin", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "if", "precision_ret", ":", "\n", "# norm precision plot", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "ax", ".", "grid", "(", "b", "=", "True", ")", "\n", "ax", ".", "set_aspect", "(", "50", ")", "\n", "plt", ".", "xlabel", "(", "'Location error threshold'", ")", "\n", "plt", ".", "ylabel", "(", "'Precision'", ")", "\n", "if", "attr", "==", "'ALL'", ":", "\n", "            ", "plt", ".", "title", "(", "r'\\textbf{Precision plots of OPE on %s}'", "%", "(", "name", ")", ")", "\n", "", "else", ":", "\n", "            ", "plt", ".", "title", "(", "r'\\textbf{Precision plots of OPE - %s}'", "%", "(", "attr", ")", ")", "\n", "", "plt", ".", "axis", "(", "[", "0", ",", "50", "]", "+", "axis", ")", "\n", "precision", "=", "{", "}", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "\n", "for", "tracker_name", "in", "precision_ret", ".", "keys", "(", ")", ":", "\n", "            ", "value", "=", "[", "v", "for", "k", ",", "v", "in", "precision_ret", "[", "tracker_name", "]", ".", "items", "(", ")", "if", "k", "in", "videos", "]", "\n", "precision", "[", "tracker_name", "]", "=", "np", ".", "mean", "(", "value", ",", "axis", "=", "0", ")", "[", "20", "]", "\n", "", "for", "idx", ",", "(", "tracker_name", ",", "pre", ")", "in", "enumerate", "(", "sorted", "(", "precision", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", ")", ":", "\n", "            ", "if", "tracker_name", "==", "bold_name", ":", "\n", "                ", "label", "=", "r\"\\textbf{[%.3f] %s}\"", "%", "(", "pre", ",", "tracker_name", ")", "\n", "", "else", ":", "\n", "                ", "label", "=", "\"[%.3f] \"", "%", "(", "pre", ")", "+", "tracker_name", "\n", "", "value", "=", "[", "v", "for", "k", ",", "v", "in", "precision_ret", "[", "tracker_name", "]", ".", "items", "(", ")", "if", "k", "in", "videos", "]", "\n", "plt", ".", "plot", "(", "thresholds", ",", "np", ".", "mean", "(", "value", ",", "axis", "=", "0", ")", ",", "\n", "color", "=", "COLOR", "[", "idx", "]", ",", "linestyle", "=", "LINE_STYLE", "[", "idx", "]", ",", "label", "=", "label", ",", "linewidth", "=", "2", ")", "\n", "", "ax", ".", "legend", "(", "loc", "=", "'lower right'", ",", "labelspacing", "=", "0.2", ")", "\n", "ax", ".", "autoscale", "(", "enable", "=", "True", ",", "axis", "=", "'both'", ",", "tight", "=", "True", ")", "\n", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", "=", "plt", ".", "axis", "(", ")", "\n", "ax", ".", "autoscale", "(", "enable", "=", "False", ")", "\n", "ymax", "+=", "0.03", "\n", "plt", ".", "axis", "(", "[", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", "]", ")", "\n", "plt", ".", "xticks", "(", "np", ".", "arange", "(", "xmin", ",", "xmax", "+", "0.01", ",", "5", ")", ")", "\n", "plt", ".", "yticks", "(", "np", ".", "arange", "(", "ymin", ",", "ymax", ",", "0.1", ")", ")", "\n", "ax", ".", "set_aspect", "(", "(", "xmax", "-", "xmin", ")", "/", "(", "ymax", "-", "ymin", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "# norm precision plot", "\n", "", "if", "norm_precision_ret", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "ax", ".", "grid", "(", "b", "=", "True", ")", "\n", "plt", ".", "xlabel", "(", "'Location error threshold'", ")", "\n", "plt", ".", "ylabel", "(", "'Precision'", ")", "\n", "if", "attr", "==", "'ALL'", ":", "\n", "            ", "plt", ".", "title", "(", "r'\\textbf{Normalized Precision plots of OPE on %s}'", "%", "(", "name", ")", ")", "\n", "", "else", ":", "\n", "            ", "plt", ".", "title", "(", "r'\\textbf{Normalized Precision plots of OPE - %s}'", "%", "(", "attr", ")", ")", "\n", "", "norm_precision", "=", "{", "}", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "/", "100", "\n", "for", "tracker_name", "in", "precision_ret", ".", "keys", "(", ")", ":", "\n", "            ", "value", "=", "[", "v", "for", "k", ",", "v", "in", "norm_precision_ret", "[", "tracker_name", "]", ".", "items", "(", ")", "if", "k", "in", "videos", "]", "\n", "norm_precision", "[", "tracker_name", "]", "=", "np", ".", "mean", "(", "value", ",", "axis", "=", "0", ")", "[", "20", "]", "\n", "", "for", "idx", ",", "(", "tracker_name", ",", "pre", ")", "in", "enumerate", "(", "sorted", "(", "norm_precision", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", ")", ":", "\n", "            ", "if", "tracker_name", "==", "bold_name", ":", "\n", "                ", "label", "=", "r\"\\textbf{[%.3f] %s}\"", "%", "(", "pre", ",", "tracker_name", ")", "\n", "", "else", ":", "\n", "                ", "label", "=", "\"[%.3f] \"", "%", "(", "pre", ")", "+", "tracker_name", "\n", "", "value", "=", "[", "v", "for", "k", ",", "v", "in", "norm_precision_ret", "[", "tracker_name", "]", ".", "items", "(", ")", "if", "k", "in", "videos", "]", "\n", "plt", ".", "plot", "(", "thresholds", ",", "np", ".", "mean", "(", "value", ",", "axis", "=", "0", ")", ",", "\n", "color", "=", "COLOR", "[", "idx", "]", ",", "linestyle", "=", "LINE_STYLE", "[", "idx", "]", ",", "label", "=", "label", ",", "linewidth", "=", "2", ")", "\n", "", "ax", ".", "legend", "(", "loc", "=", "'lower right'", ",", "labelspacing", "=", "0.2", ")", "\n", "ax", ".", "autoscale", "(", "enable", "=", "True", ",", "axis", "=", "'both'", ",", "tight", "=", "True", ")", "\n", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", "=", "plt", ".", "axis", "(", ")", "\n", "ax", ".", "autoscale", "(", "enable", "=", "False", ")", "\n", "ymax", "+=", "0.03", "\n", "plt", ".", "axis", "(", "[", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", "]", ")", "\n", "plt", ".", "xticks", "(", "np", ".", "arange", "(", "xmin", ",", "xmax", "+", "0.01", ",", "0.05", ")", ")", "\n", "plt", ".", "yticks", "(", "np", ".", "arange", "(", "ymin", ",", "ymax", ",", "0.1", ")", ")", "\n", "ax", ".", "set_aspect", "(", "(", "xmax", "-", "xmin", ")", "/", "(", "ymax", "-", "ymin", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.lasot.LaSOTVideo.__init__": [[22, 27], ["video.Video.__init__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "\n", "gt_rect", ",", "attr", ",", "absent", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "LaSOTVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "attr", ",", "load_img", ")", "\n", "self", ".", "absent", "=", "np", ".", "array", "(", "absent", ",", "np", ".", "int8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.lasot.LaSOTVideo.load_tracker": [[28, 54], ["isinstance", "list", "os.path.join", "os.path.exists", "lasot.LaSOTVideo.pred_trajs.keys", "print", "x.split", "glob.glob.glob", "os.path.isdir", "open", "list", "len", "map", "f.readlines", "x.strip().split", "x.strip"], "methods", ["None"], ["", "def", "load_tracker", "(", "self", ",", "path", ",", "tracker_names", "=", "None", ",", "store", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path(str): path to result\n            tracker_name(list): name of tracker\n        \"\"\"", "\n", "if", "not", "tracker_names", ":", "\n", "            ", "tracker_names", "=", "[", "x", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "x", "in", "glob", "(", "path", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "x", ")", "]", "\n", "", "if", "isinstance", "(", "tracker_names", ",", "str", ")", ":", "\n", "            ", "tracker_names", "=", "[", "tracker_names", "]", "\n", "", "for", "name", "in", "tracker_names", ":", "\n", "            ", "traj_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "name", ",", "self", ".", "name", "+", "'.txt'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "traj_file", ")", ":", "\n", "                ", "with", "open", "(", "traj_file", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "pred_traj", "=", "[", "list", "(", "map", "(", "float", ",", "x", ".", "strip", "(", ")", ".", "split", "(", "','", ")", ")", ")", "\n", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "", "", "else", ":", "\n", "                ", "print", "(", "\"File not exists: \"", ",", "traj_file", ")", "\n", "", "if", "self", ".", "name", "==", "'monkey-17'", ":", "\n", "                ", "pred_traj", "=", "pred_traj", "[", ":", "len", "(", "self", ".", "gt_traj", ")", "]", "\n", "", "if", "store", ":", "\n", "                ", "self", ".", "pred_trajs", "[", "name", "]", "=", "pred_traj", "\n", "", "else", ":", "\n", "                ", "return", "pred_traj", "\n", "", "", "self", ".", "tracker_names", "=", "list", "(", "self", ".", "pred_trajs", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.lasot.LaSOTDataset.__init__": [[64, 95], ["dataset.Dataset.__init__", "tqdm.tqdm.tqdm", "lasot.LaSOTDataset.videos.values", "set", "list", "lasot.LaSOTDataset.videos.items", "open", "json.load", "json.load.keys", "tqdm.tqdm.tqdm.set_postfix_str", "lasot.LaSOTVideo", "lasot.LaSOTDataset.videos.keys", "os.path.join", "lasot.LaSOTDataset.attr[].append"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "LaSOTDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "LaSOTVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n", "meta_data", "[", "video", "]", "[", "'video_dir'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'attr'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'absent'", "]", ")", "\n", "\n", "# set attr", "\n", "", "attr", "=", "[", "]", "\n", "for", "x", "in", "self", ".", "videos", ".", "values", "(", ")", ":", "\n", "            ", "attr", "+=", "x", ".", "attr", "\n", "", "attr", "=", "set", "(", "attr", ")", "\n", "self", ".", "attr", "=", "{", "}", "\n", "self", ".", "attr", "[", "'ALL'", "]", "=", "list", "(", "self", ".", "videos", ".", "keys", "(", ")", ")", "\n", "for", "x", "in", "attr", ":", "\n", "            ", "self", ".", "attr", "[", "x", "]", "=", "[", "]", "\n", "", "for", "k", ",", "v", "in", "self", ".", "videos", ".", "items", "(", ")", ":", "\n", "            ", "for", "attr_", "in", "v", ".", "attr", ":", "\n", "                ", "self", ".", "attr", "[", "attr_", "]", ".", "append", "(", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.nfs.NFSVideo.__init__": [[23, 27], ["video.Video.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "\n", "gt_rect", ",", "attr", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "NFSVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "attr", ",", "load_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.nfs.NFSDataset.__init__": [[58, 78], ["dataset.Dataset.__init__", "tqdm.tqdm.tqdm", "list", "open", "json.load", "json.load.keys", "tqdm.tqdm.tqdm.set_postfix_str", "nfs.NFSVideo", "nfs.NFSDataset.videos.keys", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "NFSDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "NFSVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n", "meta_data", "[", "video", "]", "[", "'video_dir'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ",", "\n", "None", ")", "\n", "\n", "", "self", ".", "attr", "=", "{", "}", "\n", "self", ".", "attr", "[", "'ALL'", "]", "=", "list", "(", "self", ".", "videos", ".", "keys", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.got10k.GOT10kVideo.__init__": [[21, 25], ["video.Video.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "\n", "gt_rect", ",", "attr", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "GOT10kVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "attr", ",", "load_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.got10k.GOT10kDataset.__init__": [[56, 75], ["dataset.Dataset.__init__", "tqdm.tqdm.tqdm", "list", "open", "json.load", "json.load.keys", "tqdm.tqdm.tqdm.set_postfix_str", "got10k.GOT10kVideo", "got10k.GOT10kDataset.videos.keys", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "GOT10kDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "GOT10kVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n", "meta_data", "[", "video", "]", "[", "'video_dir'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ",", "\n", "None", ")", "\n", "", "self", ".", "attr", "=", "{", "}", "\n", "self", ".", "attr", "[", "'ALL'", "]", "=", "list", "(", "self", ".", "videos", ".", "keys", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTVideo.__init__": [[28, 57], ["video.Video.__init__", "numpy.all().astype().tolist", "list", "vot.VOTVideo.tags.keys", "os.path.join", "numpy.array", "len", "vot.VOTVideo.tags.items", "numpy.all().astype", "PIL.Image.open", "len", "numpy.all", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "gt_rect", ",", "\n", "camera_motion", ",", "illum_change", ",", "motion_change", ",", "size_change", ",", "occlusion", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "VOTVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "None", ",", "load_img", ")", "\n", "self", ".", "tags", "=", "{", "'all'", ":", "[", "1", "]", "*", "len", "(", "gt_rect", ")", "}", "\n", "self", ".", "tags", "[", "'camera_motion'", "]", "=", "camera_motion", "\n", "self", ".", "tags", "[", "'illum_change'", "]", "=", "illum_change", "\n", "self", ".", "tags", "[", "'motion_change'", "]", "=", "motion_change", "\n", "self", ".", "tags", "[", "'size_change'", "]", "=", "size_change", "\n", "self", ".", "tags", "[", "'occlusion'", "]", "=", "occlusion", "\n", "\n", "# TODO", "\n", "# if len(self.gt_traj[0]) == 4:", "\n", "#     self.gt_traj = [[x[0], x[1], x[0], x[1]+x[3]-1,", "\n", "#                     x[0]+x[2]-1, x[1]+x[3]-1, x[0]+x[2]-1, x[1]]", "\n", "#                         for x in self.gt_traj]", "\n", "\n", "# empty tag", "\n", "all_tag", "=", "[", "v", "for", "k", ",", "v", "in", "self", ".", "tags", ".", "items", "(", ")", "if", "len", "(", "v", ")", ">", "0", "]", "\n", "self", ".", "tags", "[", "'empty'", "]", "=", "np", ".", "all", "(", "1", "-", "np", ".", "array", "(", "all_tag", ")", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "int32", ")", ".", "tolist", "(", ")", "\n", "# self.tags['empty'] = np.all(1 - np.array(list(self.tags.values())),", "\n", "#         axis=1).astype(np.int32).tolist()", "\n", "\n", "self", ".", "tag_names", "=", "list", "(", "self", ".", "tags", ".", "keys", "(", ")", ")", "\n", "if", "not", "load_img", ":", "\n", "            ", "img_name", "=", "os", ".", "path", ".", "join", "(", "root", ",", "self", ".", "img_names", "[", "0", "]", ")", "\n", "img", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "img_name", ")", ",", "np", ".", "uint8", ")", "\n", "self", ".", "width", "=", "img", ".", "shape", "[", "1", "]", "\n", "self", ".", "height", "=", "img", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTVideo.select_tag": [[58, 62], ["None"], "methods", ["None"], ["", "", "def", "select_tag", "(", "self", ",", "tag", ",", "start", "=", "0", ",", "end", "=", "0", ")", ":", "\n", "        ", "if", "tag", "==", "'empty'", ":", "\n", "            ", "return", "self", ".", "tags", "[", "tag", "]", "\n", "", "return", "self", ".", "tags", "[", "tag", "]", "[", "start", ":", "end", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTVideo.load_tracker": [[63, 90], ["isinstance", "glob.glob.glob", "os.path.join", "len", "x.split", "glob.glob.glob", "os.path.isdir", "open", "pred_traj.append", "list", "map", "f.readlines", "x.strip().split", "x.strip"], "methods", ["None"], ["", "def", "load_tracker", "(", "self", ",", "path", ",", "tracker_names", "=", "None", ",", "store", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path(str): path to result\n            tracker_name(list): name of tracker\n        \"\"\"", "\n", "if", "not", "tracker_names", ":", "\n", "            ", "tracker_names", "=", "[", "x", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "x", "in", "glob", "(", "path", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "x", ")", "]", "\n", "", "if", "isinstance", "(", "tracker_names", ",", "str", ")", ":", "\n", "            ", "tracker_names", "=", "[", "tracker_names", "]", "\n", "", "for", "name", "in", "tracker_names", ":", "\n", "            ", "traj_files", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "path", ",", "name", ",", "'baseline'", ",", "self", ".", "name", ",", "'*0*.txt'", ")", ")", "\n", "if", "len", "(", "traj_files", ")", "==", "15", ":", "\n", "                ", "traj_files", "=", "traj_files", "\n", "", "else", ":", "\n", "                ", "traj_files", "=", "traj_files", "[", "0", ":", "1", "]", "\n", "", "pred_traj", "=", "[", "]", "\n", "for", "traj_file", "in", "traj_files", ":", "\n", "                ", "with", "open", "(", "traj_file", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "traj", "=", "[", "list", "(", "map", "(", "float", ",", "x", ".", "strip", "(", ")", ".", "split", "(", "','", ")", ")", ")", "\n", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "pred_traj", ".", "append", "(", "traj", ")", "\n", "", "", "if", "store", ":", "\n", "                ", "self", ".", "pred_trajs", "[", "name", "]", "=", "pred_traj", "\n", "", "else", ":", "\n", "                ", "return", "pred_traj", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTDataset.__init__": [[98, 123], ["dataset.Dataset.__init__", "tqdm.tqdm.tqdm", "open", "json.load", "json.load.keys", "tqdm.tqdm.tqdm.set_postfix_str", "vot.VOTVideo", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "VOTDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "VOTVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n", "meta_data", "[", "video", "]", "[", "'video_dir'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'camera_motion'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'illum_change'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'motion_change'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'size_change'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'occlusion'", "]", ",", "\n", "load_img", "=", "load_img", ")", "\n", "\n", "", "self", ".", "tags", "=", "[", "'all'", ",", "'camera_motion'", ",", "'illum_change'", ",", "'motion_change'", ",", "\n", "'size_change'", ",", "'occlusion'", ",", "'empty'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTLTVideo.__init__": [[135, 147], ["video.Video.__init__", "os.path.join", "numpy.array", "numpy.isnan", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "\n", "gt_rect", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "VOTLTVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "None", ",", "load_img", ")", "\n", "self", ".", "gt_traj", "=", "[", "[", "0", "]", "if", "np", ".", "isnan", "(", "bbox", "[", "0", "]", ")", "else", "bbox", "\n", "for", "bbox", "in", "self", ".", "gt_traj", "]", "\n", "if", "not", "load_img", ":", "\n", "            ", "img_name", "=", "os", ".", "path", ".", "join", "(", "root", ",", "self", ".", "img_names", "[", "0", "]", ")", "\n", "img", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "img_name", ")", ",", "np", ".", "uint8", ")", "\n", "self", ".", "width", "=", "img", ".", "shape", "[", "1", "]", "\n", "self", ".", "height", "=", "img", ".", "shape", "[", "0", "]", "\n", "", "self", ".", "confidence", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTLTVideo.load_tracker": [[148, 175], ["isinstance", "os.path.join", "os.path.join", "open", "open", "score.insert", "x.split", "glob.glob.glob", "os.path.isdir", "list", "float", "float", "map", "f.readlines", "x.strip", "x.strip().split", "f.readlines", "x.strip"], "methods", ["None"], ["", "def", "load_tracker", "(", "self", ",", "path", ",", "tracker_names", "=", "None", ",", "store", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path(str): path to result\n            tracker_name(list): name of tracker\n        \"\"\"", "\n", "if", "not", "tracker_names", ":", "\n", "            ", "tracker_names", "=", "[", "x", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "x", "in", "glob", "(", "path", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "x", ")", "]", "\n", "", "if", "isinstance", "(", "tracker_names", ",", "str", ")", ":", "\n", "            ", "tracker_names", "=", "[", "tracker_names", "]", "\n", "", "for", "name", "in", "tracker_names", ":", "\n", "            ", "traj_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "name", ",", "'longterm'", ",", "\n", "self", ".", "name", ",", "self", ".", "name", "+", "'_001.txt'", ")", "\n", "with", "open", "(", "traj_file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "traj", "=", "[", "list", "(", "map", "(", "float", ",", "x", ".", "strip", "(", ")", ".", "split", "(", "','", ")", ")", ")", "\n", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "", "if", "store", ":", "\n", "                ", "self", ".", "pred_trajs", "[", "name", "]", "=", "traj", "\n", "", "confidence_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "name", ",", "'longterm'", ",", "\n", "self", ".", "name", ",", "self", ".", "name", "+", "'_001_confidence.value'", ")", "\n", "with", "open", "(", "confidence_file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "score", "=", "[", "float", "(", "x", ".", "strip", "(", ")", ")", "for", "x", "in", "f", ".", "readlines", "(", ")", "[", "1", ":", "]", "]", "\n", "score", ".", "insert", "(", "0", ",", "float", "(", "'nan'", ")", ")", "\n", "", "if", "store", ":", "\n", "                ", "self", ".", "confidence", "[", "name", "]", "=", "score", "\n", "", "", "return", "traj", ",", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTLTDataset.__init__": [[183, 199], ["dataset.Dataset.__init__", "tqdm.tqdm.tqdm", "open", "json.load", "json.load.keys", "tqdm.tqdm.tqdm.set_postfix_str", "vot.VOTLTVideo", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "VOTLTDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "VOTLTVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n", "meta_data", "[", "video", "]", "[", "'video_dir'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.__init__": [[10, 30], ["os.path.join", "cv2.imread", "cv2.imread"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "\n", "gt_rect", ",", "attr", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "video_dir", "=", "video_dir", "\n", "self", ".", "init_rect", "=", "init_rect", "\n", "self", ".", "gt_traj", "=", "gt_rect", "\n", "self", ".", "attr", "=", "attr", "\n", "self", ".", "pred_trajs", "=", "{", "}", "\n", "self", ".", "img_names", "=", "[", "os", ".", "path", ".", "join", "(", "root", ",", "x", ")", "for", "x", "in", "img_names", "]", "\n", "self", ".", "imgs", "=", "None", "\n", "\n", "if", "load_img", ":", "\n", "            ", "self", ".", "imgs", "=", "[", "cv2", ".", "imread", "(", "x", ")", "for", "x", "in", "self", ".", "img_names", "]", "\n", "self", ".", "width", "=", "self", ".", "imgs", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "self", ".", "height", "=", "self", ".", "imgs", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "img", "=", "cv2", ".", "imread", "(", "self", ".", "img_names", "[", "0", "]", ")", "\n", "assert", "img", "is", "not", "None", ",", "self", ".", "img_names", "[", "0", "]", "\n", "self", ".", "width", "=", "img", ".", "shape", "[", "1", "]", "\n", "self", ".", "height", "=", "img", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.load_tracker": [[31, 57], ["isinstance", "list", "os.path.join", "os.path.exists", "video.Video.pred_trajs.keys", "print", "x.split", "glob.glob.glob", "os.path.isdir", "open", "len", "len", "print", "list", "len", "len", "map", "f.readlines", "x.strip().split", "x.strip"], "methods", ["None"], ["", "", "def", "load_tracker", "(", "self", ",", "path", ",", "tracker_names", "=", "None", ",", "store", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path(str): path to result\n            tracker_name(list): name of tracker\n        \"\"\"", "\n", "if", "not", "tracker_names", ":", "\n", "            ", "tracker_names", "=", "[", "x", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "x", "in", "glob", "(", "path", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "x", ")", "]", "\n", "", "if", "isinstance", "(", "tracker_names", ",", "str", ")", ":", "\n", "            ", "tracker_names", "=", "[", "tracker_names", "]", "\n", "", "for", "name", "in", "tracker_names", ":", "\n", "            ", "traj_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "name", ",", "self", ".", "name", "+", "'.txt'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "traj_file", ")", ":", "\n", "                ", "with", "open", "(", "traj_file", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "pred_traj", "=", "[", "list", "(", "map", "(", "float", ",", "x", ".", "strip", "(", ")", ".", "split", "(", "','", ")", ")", ")", "\n", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "", "if", "len", "(", "pred_traj", ")", "!=", "len", "(", "self", ".", "gt_traj", ")", ":", "\n", "                    ", "print", "(", "name", ",", "len", "(", "pred_traj", ")", ",", "len", "(", "self", ".", "gt_traj", ")", ",", "self", ".", "name", ")", "\n", "", "if", "store", ":", "\n", "                    ", "self", ".", "pred_trajs", "[", "name", "]", "=", "pred_traj", "\n", "", "else", ":", "\n", "                    ", "return", "pred_traj", "\n", "", "", "else", ":", "\n", "                ", "print", "(", "traj_file", ")", "\n", "", "", "self", ".", "tracker_names", "=", "list", "(", "self", ".", "pred_trajs", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.load_img": [[58, 63], ["cv2.imread"], "methods", ["None"], ["", "def", "load_img", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "imgs", "is", "None", ":", "\n", "            ", "self", ".", "imgs", "=", "[", "cv2", ".", "imread", "(", "x", ")", "for", "x", "in", "self", ".", "img_names", "]", "\n", "self", ".", "width", "=", "self", ".", "imgs", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "self", ".", "height", "=", "self", ".", "imgs", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.free_img": [[64, 66], ["None"], "methods", ["None"], ["", "", "def", "free_img", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgs", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.__len__": [[67, 69], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.__getitem__": [[70, 75], ["cv2.imread"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "imgs", "is", "None", ":", "\n", "            ", "return", "cv2", ".", "imread", "(", "self", ".", "img_names", "[", "idx", "]", ")", ",", "self", ".", "gt_traj", "[", "idx", "]", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "imgs", "[", "idx", "]", ",", "self", ".", "gt_traj", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.__iter__": [[76, 82], ["range", "len", "cv2.imread"], "methods", ["None"], ["", "", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "img_names", ")", ")", ":", "\n", "            ", "if", "self", ".", "imgs", "is", "not", "None", ":", "\n", "                ", "yield", "self", ".", "imgs", "[", "i", "]", ",", "self", ".", "gt_traj", "[", "i", "]", "\n", "", "else", ":", "\n", "                ", "yield", "cv2", ".", "imread", "(", "self", ".", "img_names", "[", "i", "]", ")", ",", "self", ".", "gt_traj", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.draw_box": [[83, 105], ["numpy.array().reshape", "tuple", "cv2.polylines", "len", "map", "cv2.putText", "len", "len", "numpy.array", "numpy.isnan", "list", "tuple", "cv2.rectangle", "map", "map", "cv2.putText"], "methods", ["None"], ["", "", "", "def", "draw_box", "(", "self", ",", "roi", ",", "img", ",", "linewidth", ",", "color", ",", "name", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n            roi: rectangle or polygon\n            img: numpy array img\n            linewith: line width of the bbox\n        \"\"\"", "\n", "if", "len", "(", "roi", ")", ">", "6", "and", "len", "(", "roi", ")", "%", "2", "==", "0", ":", "\n", "            ", "pts", "=", "np", ".", "array", "(", "roi", ",", "np", ".", "int32", ")", ".", "reshape", "(", "-", "1", ",", "1", ",", "2", ")", "\n", "color", "=", "tuple", "(", "map", "(", "int", ",", "color", ")", ")", "\n", "img", "=", "cv2", ".", "polylines", "(", "img", ",", "[", "pts", "]", ",", "True", ",", "color", ",", "linewidth", ")", "\n", "pt", "=", "(", "pts", "[", "0", ",", "0", ",", "0", "]", ",", "pts", "[", "0", ",", "0", ",", "1", "]", "-", "5", ")", "\n", "if", "name", ":", "\n", "                ", "img", "=", "cv2", ".", "putText", "(", "img", ",", "name", ",", "pt", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "color", ",", "1", ")", "\n", "", "", "elif", "len", "(", "roi", ")", "==", "4", ":", "\n", "            ", "if", "not", "np", ".", "isnan", "(", "roi", "[", "0", "]", ")", ":", "\n", "                ", "roi", "=", "list", "(", "map", "(", "int", ",", "roi", ")", ")", "\n", "color", "=", "tuple", "(", "map", "(", "int", ",", "color", ")", ")", "\n", "img", "=", "cv2", ".", "rectangle", "(", "img", ",", "(", "roi", "[", "0", "]", ",", "roi", "[", "1", "]", ")", ",", "(", "roi", "[", "0", "]", "+", "roi", "[", "2", "]", ",", "roi", "[", "1", "]", "+", "roi", "[", "3", "]", ")", ",", "\n", "color", ",", "linewidth", ")", "\n", "if", "name", ":", "\n", "                    ", "img", "=", "cv2", ".", "putText", "(", "img", ",", "name", ",", "(", "roi", "[", "0", "]", ",", "roi", "[", "1", "]", "-", "5", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "color", ",", "1", ")", "\n", "", "", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.show": [[106, 141], ["cv2.namedWindow", "enumerate", "zip", "video.Video.copy", "video.Video.draw_box", "pred_trajs.items", "cv2.putText", "cv2.imshow", "cv2.waitKey", "video.append", "len", "len", "len", "cv2.cvtColor", "cv2.cvtColor", "video.Video.draw_box", "str", "video.Video.copy", "tuple", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.copy", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.draw_box", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.video.Video.draw_box", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.copy"], ["", "def", "show", "(", "self", ",", "pred_trajs", "=", "{", "}", ",", "linewidth", "=", "2", ",", "show_name", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n            pred_trajs: dict of pred_traj, {'tracker_name': list of traj}\n                        pred_traj should contain polygon or rectangle(x, y, width, height)\n            linewith: line width of the bbox\n        \"\"\"", "\n", "assert", "self", ".", "imgs", "is", "not", "None", "\n", "video", "=", "[", "]", "\n", "cv2", ".", "namedWindow", "(", "self", ".", "name", ",", "cv2", ".", "WINDOW_NORMAL", ")", "\n", "colors", "=", "{", "}", "\n", "if", "len", "(", "pred_trajs", ")", "==", "0", "and", "len", "(", "self", ".", "pred_trajs", ")", ">", "0", ":", "\n", "            ", "pred_trajs", "=", "self", ".", "pred_trajs", "\n", "", "for", "i", ",", "(", "roi", ",", "img", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "gt_traj", ",", "\n", "self", ".", "imgs", "[", "self", ".", "start_frame", ":", "self", ".", "end_frame", "+", "1", "]", ")", ")", ":", "\n", "            ", "img", "=", "img", ".", "copy", "(", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "                ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "", "else", ":", "\n", "                ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", "\n", "", "img", "=", "self", ".", "draw_box", "(", "roi", ",", "img", ",", "linewidth", ",", "(", "0", ",", "255", ",", "0", ")", ",", "\n", "'gt'", "if", "show_name", "else", "None", ")", "\n", "for", "name", ",", "trajs", "in", "pred_trajs", ".", "items", "(", ")", ":", "\n", "                ", "if", "name", "not", "in", "colors", ":", "\n", "                    ", "color", "=", "tuple", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "3", ")", ")", "\n", "colors", "[", "name", "]", "=", "color", "\n", "", "else", ":", "\n", "                    ", "color", "=", "colors", "[", "name", "]", "\n", "", "img", "=", "self", ".", "draw_box", "(", "trajs", "[", "0", "]", "[", "i", "]", ",", "img", ",", "linewidth", ",", "color", ",", "\n", "name", "if", "show_name", "else", "None", ")", "\n", "", "cv2", ".", "putText", "(", "img", ",", "str", "(", "i", "+", "self", ".", "start_frame", ")", ",", "(", "5", ",", "20", ")", ",", "\n", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "(", "255", ",", "255", ",", "0", ")", ",", "2", ")", "\n", "cv2", ".", "imshow", "(", "self", ".", "name", ",", "img", ")", "\n", "cv2", ".", "waitKey", "(", "40", ")", "\n", "video", ".", "append", "(", "img", ".", "copy", "(", ")", ")", "\n", "", "return", "video", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.__init__": [[4, 8], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "videos", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.__getitem__": [[9, 14], ["isinstance", "isinstance", "sorted", "list", "dataset.Dataset.videos.keys"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "isinstance", "(", "idx", ",", "str", ")", ":", "\n", "            ", "return", "self", ".", "videos", "[", "idx", "]", "\n", "", "elif", "isinstance", "(", "idx", ",", "int", ")", ":", "\n", "            ", "return", "self", ".", "videos", "[", "sorted", "(", "list", "(", "self", ".", "videos", ".", "keys", "(", ")", ")", ")", "[", "idx", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.__len__": [[15, 17], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "videos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.__iter__": [[18, 22], ["sorted", "list", "dataset.Dataset.videos.keys"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "keys", "=", "sorted", "(", "list", "(", "self", ".", "videos", ".", "keys", "(", ")", ")", ")", "\n", "for", "key", "in", "keys", ":", "\n", "            ", "yield", "self", ".", "videos", "[", "key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.set_tracker": [[23, 31], ["None"], "methods", ["None"], ["", "", "def", "set_tracker", "(", "self", ",", "path", ",", "tracker_names", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path: path to tracker results,\n            tracker_names: list of tracker name\n        \"\"\"", "\n", "self", ".", "tracker_path", "=", "path", "\n", "self", ".", "tracker_names", "=", "tracker_names", "\n", "# for video in tqdm(self.videos.values(), ", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.uav.UAVVideo.__init__": [[21, 25], ["video.Video.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "\n", "gt_rect", ",", "attr", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "UAVVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "attr", ",", "load_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.uav.UAVDataset.__init__": [[34, 64], ["dataset.Dataset.__init__", "tqdm.tqdm.tqdm", "uav.UAVDataset.videos.values", "set", "list", "uav.UAVDataset.videos.items", "open", "json.load", "json.load.keys", "tqdm.tqdm.tqdm.set_postfix_str", "uav.UAVVideo", "uav.UAVDataset.videos.keys", "os.path.join", "uav.UAVDataset.attr[].append"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "UAVDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "UAVVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n", "meta_data", "[", "video", "]", "[", "'video_dir'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'attr'", "]", ")", "\n", "\n", "# set attr", "\n", "", "attr", "=", "[", "]", "\n", "for", "x", "in", "self", ".", "videos", ".", "values", "(", ")", ":", "\n", "            ", "attr", "+=", "x", ".", "attr", "\n", "", "attr", "=", "set", "(", "attr", ")", "\n", "self", ".", "attr", "=", "{", "}", "\n", "self", ".", "attr", "[", "'ALL'", "]", "=", "list", "(", "self", ".", "videos", ".", "keys", "(", ")", ")", "\n", "for", "x", "in", "attr", ":", "\n", "            ", "self", ".", "attr", "[", "x", "]", "=", "[", "]", "\n", "", "for", "k", ",", "v", "in", "self", ".", "videos", ".", "items", "(", ")", ":", "\n", "            ", "for", "attr_", "in", "v", ".", "attr", ":", "\n", "                ", "self", ".", "attr", "[", "attr_", "]", ".", "append", "(", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.trackingnet.TrackingNetVideo.__init__": [[22, 26], ["video.Video.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "\n", "gt_rect", ",", "attr", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "TrackingNetVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "attr", ",", "load_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.trackingnet.TrackingNetDataset.__init__": [[57, 76], ["dataset.Dataset.__init__", "tqdm.tqdm.tqdm", "list", "open", "json.load", "json.load.keys", "tqdm.tqdm.tqdm.set_postfix_str", "trackingnet.TrackingNetVideo", "trackingnet.TrackingNetDataset.videos.keys", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "TrackingNetDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "TrackingNetVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n", "meta_data", "[", "video", "]", "[", "'video_dir'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ",", "\n", "None", ")", "\n", "", "self", ".", "attr", "=", "{", "}", "\n", "self", ".", "attr", "[", "'ALL'", "]", "=", "list", "(", "self", ".", "videos", ".", "keys", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.__init__.DatasetFactory.create_dataset": [[11, 47], ["otb.OTBDataset", "lasot.LaSOTDataset", "uav.UAVDataset", "nfs.NFSDataset", "vot.VOTDataset", "vot.VOTLTDataset", "trackingnet.TrackingNetDataset", "trackingnet.TrackingNetDataset", "got10k.GOT10kDataset", "visdrone.VisDroneDataset", "Exception"], "methods", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.visdrone.VisDroneVideo.__init__": [[23, 27], ["video.Video.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "\n", "gt_rect", ",", "attr", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "VisDroneVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "attr", ",", "load_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.visdrone.VisDroneVideo.load_tracker": [[28, 74], ["isinstance", "list", "os.path.join", "os.path.exists", "visdrone.VisDroneVideo.pred_trajs.keys", "print", "x.split", "glob", "os.path.isdir", "open", "list", "len", "len", "print", "map", "f.readlines", "len", "len", "x.strip().split", "x.strip"], "methods", ["None"], ["", "def", "load_tracker", "(", "self", ",", "path", ",", "tracker_names", "=", "None", ",", "store", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path(str): path to result\n            tracker_name(list): name of tracker\n        \"\"\"", "\n", "if", "not", "tracker_names", ":", "\n", "            ", "tracker_names", "=", "[", "x", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "x", "in", "glob", "(", "path", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "x", ")", "]", "\n", "", "if", "isinstance", "(", "tracker_names", ",", "str", ")", ":", "\n", "            ", "tracker_names", "=", "[", "tracker_names", "]", "\n", "", "for", "name", "in", "tracker_names", ":", "\n", "            ", "traj_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "name", ",", "self", ".", "name", "+", "'.txt'", ")", "\n", "# if not os.path.exists(traj_file):", "\n", "#     if self.name == 'FleetFace':", "\n", "#         txt_name = 'fleetface.txt'", "\n", "#     elif self.name == 'Jogging-1':", "\n", "#         txt_name = 'jogging_1.txt'", "\n", "#     elif self.name == 'Jogging-2':", "\n", "#         txt_name = 'jogging_2.txt'", "\n", "#     elif self.name == 'Skating2-1':", "\n", "#         txt_name = 'skating2_1.txt'", "\n", "#     elif self.name == 'Skating2-2':", "\n", "#         txt_name = 'skating2_2.txt'", "\n", "#     elif self.name == 'FaceOcc1':", "\n", "#         txt_name = 'faceocc1.txt'", "\n", "#     elif self.name == 'FaceOcc2':", "\n", "#         txt_name = 'faceocc2.txt'", "\n", "#     elif self.name == 'Human4-2':", "\n", "#         txt_name = 'human4_2.txt'", "\n", "#     else:", "\n", "#         txt_name = self.name[0].lower()+self.name[1:]+'.txt'", "\n", "#     traj_file = os.path.join(path, name, txt_name)", "\n", "if", "os", ".", "path", ".", "exists", "(", "traj_file", ")", ":", "\n", "                ", "with", "open", "(", "traj_file", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "pred_traj", "=", "[", "list", "(", "map", "(", "float", ",", "x", ".", "strip", "(", ")", ".", "split", "(", "','", ")", ")", ")", "\n", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "if", "len", "(", "pred_traj", ")", "!=", "len", "(", "self", ".", "gt_traj", ")", ":", "\n", "                        ", "print", "(", "name", ",", "len", "(", "pred_traj", ")", ",", "len", "(", "self", ".", "gt_traj", ")", ",", "self", ".", "name", ")", "\n", "", "if", "store", ":", "\n", "                        ", "self", ".", "pred_trajs", "[", "name", "]", "=", "pred_traj", "\n", "", "else", ":", "\n", "                        ", "return", "pred_traj", "\n", "", "", "", "else", ":", "\n", "                ", "print", "(", "traj_file", ")", "\n", "", "", "self", ".", "tracker_names", "=", "list", "(", "self", ".", "pred_trajs", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.visdrone.VisDroneDataset.__init__": [[84, 117], ["dataset.Dataset.__init__", "tqdm.tqdm.tqdm", "visdrone.VisDroneDataset.videos.values", "set", "list", "visdrone.VisDroneDataset.videos.items", "open", "json.load", "json.load.keys", "tqdm.tqdm.tqdm.set_postfix_str", "visdrone.VisDroneVideo", "visdrone.VisDroneDataset.videos.keys", "os.path.join", "visdrone.VisDroneDataset.attr[].append"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "VisDroneDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "VisDroneVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n", "meta_data", "[", "video", "]", "[", "'video_dir'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'attr'", "]", ",", "\n", "load_img", ")", "\n", "\n", "# set attr", "\n", "", "attr", "=", "[", "]", "\n", "for", "x", "in", "self", ".", "videos", ".", "values", "(", ")", ":", "\n", "            ", "if", "x", ".", "attr", ":", "\n", "                ", "attr", "+=", "x", ".", "attr", "\n", "", "", "attr", "=", "set", "(", "attr", ")", "\n", "self", ".", "attr", "=", "{", "}", "\n", "self", ".", "attr", "[", "'ALL'", "]", "=", "list", "(", "self", ".", "videos", ".", "keys", "(", ")", ")", "\n", "for", "x", "in", "attr", ":", "\n", "            ", "self", ".", "attr", "[", "x", "]", "=", "[", "]", "\n", "", "for", "k", ",", "v", "in", "self", ".", "videos", ".", "items", "(", ")", ":", "\n", "            ", "if", "v", ".", "attr", ":", "\n", "                ", "for", "attr_", "in", "v", ".", "attr", ":", "\n", "                    ", "self", ".", "attr", "[", "attr_", "]", ".", "append", "(", "k", ")", "", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBVideo.__init__": [[24, 28], ["video.Video.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "\n", "gt_rect", ",", "attr", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "OTBVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "attr", ",", "load_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBVideo.load_tracker": [[29, 75], ["isinstance", "list", "os.path.join", "os.path.exists", "otb.OTBVideo.pred_trajs.keys", "os.path.exists", "os.path.join", "print", "x.split", "glob.glob.glob", "os.path.isdir", "open", "list", "len", "len", "print", "map", "f.readlines", "len", "len", "x.strip().split", "x.strip", "otb.OTBVideo.name[].lower"], "methods", ["None"], ["", "def", "load_tracker", "(", "self", ",", "path", ",", "tracker_names", "=", "None", ",", "store", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path(str): path to result\n            tracker_name(list): name of tracker\n        \"\"\"", "\n", "if", "not", "tracker_names", ":", "\n", "            ", "tracker_names", "=", "[", "x", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "x", "in", "glob", "(", "path", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "x", ")", "]", "\n", "", "if", "isinstance", "(", "tracker_names", ",", "str", ")", ":", "\n", "            ", "tracker_names", "=", "[", "tracker_names", "]", "\n", "", "for", "name", "in", "tracker_names", ":", "\n", "            ", "traj_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "name", ",", "self", ".", "name", "+", "'.txt'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "traj_file", ")", ":", "\n", "                ", "if", "self", ".", "name", "==", "'FleetFace'", ":", "\n", "                    ", "txt_name", "=", "'fleetface.txt'", "\n", "", "elif", "self", ".", "name", "==", "'Jogging-1'", ":", "\n", "                    ", "txt_name", "=", "'jogging_1.txt'", "\n", "", "elif", "self", ".", "name", "==", "'Jogging-2'", ":", "\n", "                    ", "txt_name", "=", "'jogging_2.txt'", "\n", "", "elif", "self", ".", "name", "==", "'Skating2-1'", ":", "\n", "                    ", "txt_name", "=", "'skating2_1.txt'", "\n", "", "elif", "self", ".", "name", "==", "'Skating2-2'", ":", "\n", "                    ", "txt_name", "=", "'skating2_2.txt'", "\n", "", "elif", "self", ".", "name", "==", "'FaceOcc1'", ":", "\n", "                    ", "txt_name", "=", "'faceocc1.txt'", "\n", "", "elif", "self", ".", "name", "==", "'FaceOcc2'", ":", "\n", "                    ", "txt_name", "=", "'faceocc2.txt'", "\n", "", "elif", "self", ".", "name", "==", "'Human4-2'", ":", "\n", "                    ", "txt_name", "=", "'human4_2.txt'", "\n", "", "else", ":", "\n", "                    ", "txt_name", "=", "self", ".", "name", "[", "0", "]", ".", "lower", "(", ")", "+", "self", ".", "name", "[", "1", ":", "]", "+", "'.txt'", "\n", "", "traj_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "name", ",", "txt_name", ")", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "traj_file", ")", ":", "\n", "                ", "with", "open", "(", "traj_file", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "pred_traj", "=", "[", "list", "(", "map", "(", "float", ",", "x", ".", "strip", "(", ")", ".", "split", "(", "','", ")", ")", ")", "\n", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "if", "len", "(", "pred_traj", ")", "!=", "len", "(", "self", ".", "gt_traj", ")", ":", "\n", "                        ", "print", "(", "name", ",", "len", "(", "pred_traj", ")", ",", "len", "(", "self", ".", "gt_traj", ")", ",", "self", ".", "name", ")", "\n", "", "if", "store", ":", "\n", "                        ", "self", ".", "pred_trajs", "[", "name", "]", "=", "pred_traj", "\n", "", "else", ":", "\n", "                        ", "return", "pred_traj", "\n", "", "", "", "else", ":", "\n", "                ", "print", "(", "traj_file", ")", "\n", "", "", "self", ".", "tracker_names", "=", "list", "(", "self", ".", "pred_trajs", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBDataset.__init__": [[85, 116], ["dataset.Dataset.__init__", "tqdm.tqdm.tqdm", "otb.OTBDataset.videos.values", "set", "list", "otb.OTBDataset.videos.items", "open", "json.load", "json.load.keys", "tqdm.tqdm.tqdm.set_postfix_str", "otb.OTBVideo", "otb.OTBDataset.videos.keys", "os.path.join", "otb.OTBDataset.attr[].append"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "OTBDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "OTBVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n", "meta_data", "[", "video", "]", "[", "'video_dir'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'attr'", "]", ",", "\n", "load_img", ")", "\n", "\n", "# set attr", "\n", "", "attr", "=", "[", "]", "\n", "for", "x", "in", "self", ".", "videos", ".", "values", "(", ")", ":", "\n", "            ", "attr", "+=", "x", ".", "attr", "\n", "", "attr", "=", "set", "(", "attr", ")", "\n", "self", ".", "attr", "=", "{", "}", "\n", "self", ".", "attr", "[", "'ALL'", "]", "=", "list", "(", "self", ".", "videos", ".", "keys", "(", ")", ")", "\n", "for", "x", "in", "attr", ":", "\n", "            ", "self", ".", "attr", "[", "x", "]", "=", "[", "]", "\n", "", "for", "k", ",", "v", "in", "self", ".", "videos", ".", "items", "(", ")", ":", "\n", "            ", "for", "attr_", "in", "v", ".", "attr", ":", "\n", "                ", "self", ".", "attr", "[", "attr_", "]", ".", "append", "(", "k", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.anchor_target.AnchorTarget.__init__": [[16, 23], ["pysot.utils.anchor.Anchors", "anchor_target.AnchorTarget.anchors.generate_all_anchors"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.anchor.Anchors.generate_all_anchors"], ["    ", "def", "__init__", "(", "self", ",", ")", ":", "\n", "        ", "self", ".", "anchors", "=", "Anchors", "(", "cfg", ".", "ANCHOR", ".", "STRIDE", ",", "\n", "cfg", ".", "ANCHOR", ".", "RATIOS", ",", "\n", "cfg", ".", "ANCHOR", ".", "SCALES", ")", "\n", "\n", "self", ".", "anchors", ".", "generate_all_anchors", "(", "im_c", "=", "cfg", ".", "TRAIN", ".", "SEARCH_SIZE", "//", "2", ",", "\n", "size", "=", "cfg", ".", "TRAIN", ".", "OUTPUT_SIZE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.anchor_target.AnchorTarget.__call__": [[24, 92], ["numpy.zeros", "numpy.zeros", "pysot.utils.bbox.corner2center", "numpy.log", "numpy.log", "pysot.utils.bbox.IoU", "numpy.where", "numpy.where", "anchor_target.AnchorTarget.__call__.select"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.corner2center", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.log", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.log", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.IoU"], ["", "def", "__call__", "(", "self", ",", "target", ",", "size", ",", "neg", "=", "False", ")", ":", "\n", "        ", "anchor_num", "=", "len", "(", "cfg", ".", "ANCHOR", ".", "RATIOS", ")", "*", "len", "(", "cfg", ".", "ANCHOR", ".", "SCALES", ")", "\n", "\n", "# -1 ignore 0 negative 1 positive", "\n", "cls", "=", "-", "1", "*", "np", ".", "ones", "(", "(", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "delta", "=", "np", ".", "zeros", "(", "(", "4", ",", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "delta_weight", "=", "np", ".", "zeros", "(", "(", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "def", "select", "(", "position", ",", "keep_num", "=", "16", ")", ":", "\n", "            ", "num", "=", "position", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "if", "num", "<=", "keep_num", ":", "\n", "                ", "return", "position", ",", "num", "\n", "", "slt", "=", "np", ".", "arange", "(", "num", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "slt", ")", "\n", "slt", "=", "slt", "[", ":", "keep_num", "]", "\n", "return", "tuple", "(", "p", "[", "slt", "]", "for", "p", "in", "position", ")", ",", "keep_num", "\n", "\n", "", "tcx", ",", "tcy", ",", "tw", ",", "th", "=", "corner2center", "(", "target", ")", "\n", "\n", "if", "neg", ":", "\n", "# l = size // 2 - 3", "\n", "# r = size // 2 + 3 + 1", "\n", "# cls[:, l:r, l:r] = 0", "\n", "\n", "            ", "cx", "=", "size", "//", "2", "\n", "cy", "=", "size", "//", "2", "\n", "cx", "+=", "int", "(", "np", ".", "ceil", "(", "(", "tcx", "-", "cfg", ".", "TRAIN", ".", "SEARCH_SIZE", "//", "2", ")", "/", "\n", "cfg", ".", "ANCHOR", ".", "STRIDE", "+", "0.5", ")", ")", "\n", "cy", "+=", "int", "(", "np", ".", "ceil", "(", "(", "tcy", "-", "cfg", ".", "TRAIN", ".", "SEARCH_SIZE", "//", "2", ")", "/", "\n", "cfg", ".", "ANCHOR", ".", "STRIDE", "+", "0.5", ")", ")", "\n", "l", "=", "max", "(", "0", ",", "cx", "-", "3", ")", "\n", "r", "=", "min", "(", "size", ",", "cx", "+", "4", ")", "\n", "u", "=", "max", "(", "0", ",", "cy", "-", "3", ")", "\n", "d", "=", "min", "(", "size", ",", "cy", "+", "4", ")", "\n", "cls", "[", ":", ",", "u", ":", "d", ",", "l", ":", "r", "]", "=", "0", "\n", "\n", "neg", ",", "neg_num", "=", "select", "(", "np", ".", "where", "(", "cls", "==", "0", ")", ",", "cfg", ".", "TRAIN", ".", "NEG_NUM", ")", "\n", "cls", "[", ":", "]", "=", "-", "1", "\n", "cls", "[", "neg", "]", "=", "0", "\n", "\n", "overlap", "=", "np", ".", "zeros", "(", "(", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "cls", ",", "delta", ",", "delta_weight", ",", "overlap", "\n", "\n", "", "anchor_box", "=", "self", ".", "anchors", ".", "all_anchors", "[", "0", "]", "\n", "anchor_center", "=", "self", ".", "anchors", ".", "all_anchors", "[", "1", "]", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "anchor_box", "[", "0", "]", ",", "anchor_box", "[", "1", "]", ",", "anchor_box", "[", "2", "]", ",", "anchor_box", "[", "3", "]", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "anchor_center", "[", "0", "]", ",", "anchor_center", "[", "1", "]", ",", "anchor_center", "[", "2", "]", ",", "anchor_center", "[", "3", "]", "\n", "\n", "delta", "[", "0", "]", "=", "(", "tcx", "-", "cx", ")", "/", "w", "\n", "delta", "[", "1", "]", "=", "(", "tcy", "-", "cy", ")", "/", "h", "\n", "delta", "[", "2", "]", "=", "np", ".", "log", "(", "tw", "/", "w", ")", "\n", "delta", "[", "3", "]", "=", "np", ".", "log", "(", "th", "/", "h", ")", "\n", "\n", "overlap", "=", "IoU", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ",", "target", ")", "\n", "\n", "pos", "=", "np", ".", "where", "(", "overlap", ">", "cfg", ".", "TRAIN", ".", "THR_HIGH", ")", "\n", "neg", "=", "np", ".", "where", "(", "overlap", "<", "cfg", ".", "TRAIN", ".", "THR_LOW", ")", "\n", "\n", "pos", ",", "pos_num", "=", "select", "(", "pos", ",", "cfg", ".", "TRAIN", ".", "POS_NUM", ")", "\n", "neg", ",", "neg_num", "=", "select", "(", "neg", ",", "cfg", ".", "TRAIN", ".", "TOTAL_NUM", "-", "cfg", ".", "TRAIN", ".", "POS_NUM", ")", "\n", "\n", "cls", "[", "pos", "]", "=", "1", "\n", "delta_weight", "[", "pos", "]", "=", "1.", "/", "(", "pos_num", "+", "1e-6", ")", "\n", "\n", "cls", "[", "neg", "]", "=", "0", "\n", "return", "cls", ",", "delta", ",", "delta_weight", ",", "overlap", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.__init__": [[32, 68], ["os.path.dirname", "os.path.join", "os.path.join", "logger.info", "list", "list", "len", "list", "logger.info", "dataset.SubDataset.shuffle", "os.path.realpath", "open", "json.load", "dataset.SubDataset._filter_zero", "dataset.SubDataset.keys", "dataset.SubDataset.keys", "dataset.SubDataset.keys", "list", "list.sort", "len", "logger.warning", "map", "len", "logger.warning", "filter", "list.keys", "x.isdigit"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset.shuffle", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset._filter_zero", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.Filter.filter"], ["#         desc='loading tacker result', ncols=100):", "\n", "#     video.load_tracker(path, tracker_names)", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset._filter_zero": [[69, 90], ["meta_data.items", "tracks.items", "frames.items", "len", "len", "isinstance", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.log": [[91, 95], ["logger.info"], "methods", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.shuffle": [[96, 103], ["list", "range", "len", "numpy.random.shuffle"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset.shuffle"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.get_image_anno": [[104, 110], ["os.path.join", "dataset.SubDataset.path_format.format"], "methods", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.get_positive_pair": [[111, 125], ["numpy.random.choice", "numpy.random.randint", "max", "numpy.random.choice", "list", "len", "min", "dataset.SubDataset.get_image_anno", "dataset.SubDataset.get_image_anno", "video.keys", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.get_image_anno", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.get_image_anno"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.get_random_target": [[126, 136], ["numpy.random.choice", "numpy.random.choice", "dataset.SubDataset.get_image_anno", "numpy.random.randint", "list", "video.keys"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.get_image_anno"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.__len__": [[137, 139], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset.__init__": [[142, 192], ["torch.utils.data.Dataset.__init__", "pysot.datasets.anchor_target.AnchorTarget", "pysot.datasets.augmentation.Augmentation", "pysot.datasets.augmentation.Augmentation", "dataset.TrkDataset.shuffle", "getattr", "dataset.SubDataset", "dataset.SubDataset.log", "dataset.TrkDataset.all_dataset.append"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset.shuffle", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.log"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset.shuffle": [[193, 207], ["logger.info", "logger.info", "numpy.random.shuffle", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset.shuffle"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset._find_dataset": [[208, 212], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset._get_bbox": [[213, 230], ["numpy.sqrt", "pysot.utils.bbox.center2corner", "len", "pysot.utils.bbox.Center"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.center2corner"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset.__len__": [[231, 233], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset.__getitem__": [[234, 338], ["dataset.TrkDataset._find_dataset", "cv2.imread", "cv2.imread", "dataset.TrkDataset._get_bbox", "dataset.TrkDataset._get_bbox", "dataset.TrkDataset.template_aug", "dataset.TrkDataset.search_aug", "dataset.TrkDataset.anchor_target", "dataset.get_random_target.transpose().astype", "numpy.random.choice().get_random_target.transpose().astype", "dataset.get_random_target", "numpy.random.choice().get_random_target", "dataset.get_positive_pair", "numpy.array", "numpy.random.random", "numpy.random.random", "dataset.get_random_target.transpose", "numpy.random.choice().get_random_target.transpose", "numpy.random.choice"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset._find_dataset", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset._get_bbox", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.TrkDataset._get_bbox", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.get_random_target", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.get_random_target", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.SubDataset.get_positive_pair", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.__init__": [[16, 26], ["numpy.array"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "shift", ",", "scale", ",", "blur", ",", "flip", ",", "color", ")", ":", "\n", "        ", "self", ".", "shift", "=", "shift", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "blur", "=", "blur", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "color", "=", "color", "\n", "self", ".", "rgbVar", "=", "np", ".", "array", "(", "\n", "[", "[", "-", "0.55919361", ",", "0.98062831", ",", "-", "0.41940627", "]", ",", "\n", "[", "1.72091413", ",", "0.19879334", ",", "-", "1.82968581", "]", ",", "\n", "[", "4.64467907", ",", "4.73710203", ",", "4.88324118", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random": [[27, 30], ["numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random"], ["", "@", "staticmethod", "\n", "def", "random", "(", ")", ":", "\n", "        ", "return", "np", ".", "random", ".", "random", "(", ")", "*", "2", "-", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._crop_roi": [[31, 43], ["numpy.array().astype", "cv2.warpAffine", "float", "numpy.array"], "methods", ["None"], ["", "def", "_crop_roi", "(", "self", ",", "image", ",", "bbox", ",", "out_sz", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", ":", "\n", "        ", "bbox", "=", "[", "float", "(", "x", ")", "for", "x", "in", "bbox", "]", "\n", "a", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "\n", "b", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "\n", "c", "=", "-", "a", "*", "bbox", "[", "0", "]", "\n", "d", "=", "-", "b", "*", "bbox", "[", "1", "]", "\n", "mapping", "=", "np", ".", "array", "(", "[", "[", "a", ",", "0", ",", "c", "]", ",", "\n", "[", "0", ",", "b", ",", "d", "]", "]", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "crop", "=", "cv2", ".", "warpAffine", "(", "image", ",", "mapping", ",", "(", "out_sz", ",", "out_sz", ")", ",", "\n", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "borderValue", "=", "padding", ")", "\n", "return", "crop", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._blur_aug": [[44, 57], ["augmentation.Augmentation._blur_aug.rand_kernel"], "methods", ["None"], ["", "def", "_blur_aug", "(", "self", ",", "image", ")", ":", "\n", "        ", "def", "rand_kernel", "(", ")", ":", "\n", "            ", "sizes", "=", "np", ".", "arange", "(", "5", ",", "46", ",", "2", ")", "\n", "size", "=", "np", ".", "random", ".", "choice", "(", "sizes", ")", "\n", "kernel", "=", "np", ".", "zeros", "(", "(", "size", ",", "size", ")", ")", "\n", "c", "=", "int", "(", "size", "/", "2", ")", "\n", "wx", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "kernel", "[", ":", ",", "c", "]", "+=", "1.", "/", "size", "*", "wx", "\n", "kernel", "[", "c", ",", ":", "]", "+=", "1.", "/", "size", "*", "(", "1", "-", "wx", ")", "\n", "return", "kernel", "\n", "", "kernel", "=", "rand_kernel", "(", ")", "\n", "image", "=", "cv2", ".", "filter2D", "(", "image", ",", "-", "1", ",", "kernel", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._color_aug": [[58, 64], ["numpy.dot", "offset.reshape.reshape.reshape", "numpy.random.randn"], "methods", ["None"], ["", "def", "_color_aug", "(", "self", ",", "image", ")", ":", "\n", "        ", "offset", "=", "np", ".", "dot", "(", "self", ".", "rgbVar", ",", "np", ".", "random", ".", "randn", "(", "3", ",", "1", ")", ")", "\n", "offset", "=", "offset", "[", ":", ":", "-", "1", "]", "# bgr 2 rgb", "\n", "offset", "=", "offset", ".", "reshape", "(", "3", ")", "\n", "image", "=", "image", "-", "offset", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._gray_aug": [[65, 69], ["cv2.cvtColor", "cv2.cvtColor"], "methods", ["None"], ["", "def", "_gray_aug", "(", "self", ",", "image", ")", ":", "\n", "        ", "grayed", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "grayed", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._shift_scale_aug": [[70, 109], ["pysot.utils.bbox.corner2center", "pysot.utils.bbox.center2corner", "pysot.utils.bbox.Corner", "augmentation.Augmentation._crop_roi", "min", "min", "pysot.utils.bbox.Center", "max", "max", "pysot.utils.bbox.Corner", "pysot.utils.bbox.Corner", "augmentation.Augmentation.random", "augmentation.Augmentation.random", "min", "min", "augmentation.Augmentation.random", "augmentation.Augmentation.random", "float", "float"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.corner2center", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.center2corner", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._crop_roi", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random"], ["", "def", "_shift_scale_aug", "(", "self", ",", "image", ",", "bbox", ",", "crop_bbox", ",", "size", ")", ":", "\n", "        ", "im_h", ",", "im_w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "\n", "# adjust crop bounding box", "\n", "crop_bbox_center", "=", "corner2center", "(", "crop_bbox", ")", "\n", "if", "self", ".", "scale", ":", "\n", "            ", "scale_x", "=", "(", "1.0", "+", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "scale", ")", "\n", "scale_y", "=", "(", "1.0", "+", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "scale", ")", "\n", "h", ",", "w", "=", "crop_bbox_center", ".", "h", ",", "crop_bbox_center", ".", "w", "\n", "scale_x", "=", "min", "(", "scale_x", ",", "float", "(", "im_w", ")", "/", "w", ")", "\n", "scale_y", "=", "min", "(", "scale_y", ",", "float", "(", "im_h", ")", "/", "h", ")", "\n", "crop_bbox_center", "=", "Center", "(", "crop_bbox_center", ".", "x", ",", "\n", "crop_bbox_center", ".", "y", ",", "\n", "crop_bbox_center", ".", "w", "*", "scale_x", ",", "\n", "crop_bbox_center", ".", "h", "*", "scale_y", ")", "\n", "\n", "", "crop_bbox", "=", "center2corner", "(", "crop_bbox_center", ")", "\n", "if", "self", ".", "shift", ":", "\n", "            ", "sx", "=", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "shift", "\n", "sy", "=", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "shift", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "crop_bbox", "\n", "\n", "sx", "=", "max", "(", "-", "x1", ",", "min", "(", "im_w", "-", "1", "-", "x2", ",", "sx", ")", ")", "\n", "sy", "=", "max", "(", "-", "y1", ",", "min", "(", "im_h", "-", "1", "-", "y2", ",", "sy", ")", ")", "\n", "\n", "crop_bbox", "=", "Corner", "(", "x1", "+", "sx", ",", "y1", "+", "sy", ",", "x2", "+", "sx", ",", "y2", "+", "sy", ")", "\n", "\n", "# adjust target bounding box", "\n", "", "x1", ",", "y1", "=", "crop_bbox", ".", "x1", ",", "crop_bbox", ".", "y1", "\n", "bbox", "=", "Corner", "(", "bbox", ".", "x1", "-", "x1", ",", "bbox", ".", "y1", "-", "y1", ",", "\n", "bbox", ".", "x2", "-", "x1", ",", "bbox", ".", "y2", "-", "y1", ")", "\n", "\n", "if", "self", ".", "scale", ":", "\n", "            ", "bbox", "=", "Corner", "(", "bbox", ".", "x1", "/", "scale_x", ",", "bbox", ".", "y1", "/", "scale_y", ",", "\n", "bbox", ".", "x2", "/", "scale_x", ",", "bbox", ".", "y2", "/", "scale_y", ")", "\n", "\n", "", "image", "=", "self", ".", "_crop_roi", "(", "image", ",", "crop_bbox", ",", "size", ")", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._flip_aug": [[110, 116], ["cv2.flip", "pysot.utils.bbox.Corner"], "methods", ["None"], ["", "def", "_flip_aug", "(", "self", ",", "image", ",", "bbox", ")", ":", "\n", "        ", "image", "=", "cv2", ".", "flip", "(", "image", ",", "1", ")", "\n", "width", "=", "image", ".", "shape", "[", "1", "]", "\n", "bbox", "=", "Corner", "(", "width", "-", "1", "-", "bbox", ".", "x2", ",", "bbox", ".", "y1", ",", "\n", "width", "-", "1", "-", "bbox", ".", "x1", ",", "bbox", ".", "y2", ")", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.__call__": [[117, 140], ["pysot.utils.bbox.center2corner", "augmentation.Augmentation._shift_scale_aug", "pysot.utils.bbox.Center", "augmentation.Augmentation._gray_aug", "numpy.random.random", "augmentation.Augmentation._color_aug", "numpy.random.random", "augmentation.Augmentation._blur_aug", "augmentation.Augmentation._flip_aug", "numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.center2corner", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._shift_scale_aug", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._gray_aug", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._color_aug", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._blur_aug", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation._flip_aug", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.augmentation.Augmentation.random"], ["", "def", "__call__", "(", "self", ",", "image", ",", "bbox", ",", "size", ",", "gray", "=", "False", ")", ":", "\n", "        ", "shape", "=", "image", ".", "shape", "\n", "crop_bbox", "=", "center2corner", "(", "Center", "(", "shape", "[", "0", "]", "//", "2", ",", "shape", "[", "1", "]", "//", "2", ",", "\n", "size", "-", "1", ",", "size", "-", "1", ")", ")", "\n", "# gray augmentation", "\n", "if", "gray", ":", "\n", "            ", "image", "=", "self", ".", "_gray_aug", "(", "image", ")", "\n", "\n", "# shift scale augmentation", "\n", "", "image", ",", "bbox", "=", "self", ".", "_shift_scale_aug", "(", "image", ",", "bbox", ",", "crop_bbox", ",", "size", ")", "\n", "\n", "# color augmentation", "\n", "if", "self", ".", "color", ">", "np", ".", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", "=", "self", ".", "_color_aug", "(", "image", ")", "\n", "\n", "# blur augmentation", "\n", "", "if", "self", ".", "blur", ">", "np", ".", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", "=", "self", ".", "_blur_aug", "(", "image", ")", "\n", "\n", "# flip augmentation", "\n", "", "if", "self", ".", "flip", "and", "self", ".", "flip", ">", "np", ".", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", ",", "bbox", "=", "self", ".", "_flip_aug", "(", "image", ",", "bbox", ")", "\n", "", "return", "image", ",", "bbox", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ar_benchmark.AccuracyRobustnessBenchmark.__init__": [[18, 21], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset", ",", "burnin", "=", "10", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "burnin", "=", "burnin", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ar_benchmark.AccuracyRobustnessBenchmark.eval": [[22, 41], ["isinstance", "ar_benchmark.AccuracyRobustnessBenchmark._calculate_accuracy_robustness"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ar_benchmark.AccuracyRobustnessBenchmark._calculate_accuracy_robustness"], ["", "def", "eval", "(", "self", ",", "eval_trackers", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            eval_tags: list of tag\n            eval_trackers: list of tracker name\n        Returns:\n            ret: dict of results\n        \"\"\"", "\n", "if", "eval_trackers", "is", "None", ":", "\n", "            ", "eval_trackers", "=", "self", ".", "dataset", ".", "tracker_names", "\n", "", "if", "isinstance", "(", "eval_trackers", ",", "str", ")", ":", "\n", "            ", "eval_trackers", "=", "[", "eval_trackers", "]", "\n", "\n", "", "result", "=", "{", "}", "\n", "for", "tracker_name", "in", "eval_trackers", ":", "\n", "            ", "accuracy", ",", "failures", "=", "self", ".", "_calculate_accuracy_robustness", "(", "tracker_name", ")", "\n", "result", "[", "tracker_name", "]", "=", "{", "'overlaps'", ":", "accuracy", ",", "\n", "'failures'", ":", "failures", "}", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ar_benchmark.AccuracyRobustnessBenchmark.show_result": [[42, 117], ["max", "print", "print", "print", "print", "header.format.format.format", "header.format.format.format", "len", "list", "list", "numpy.nanmean", "sum", "list", "numpy.mean", "print", "result.keys", "print", "print", "print", "print", "print", "list", "print", "max", "sorted", "result.keys", "itertools.chain", "ret[].values", "numpy.sum", "numpy.mean", "print", "print", "len", "[].keys", "result.keys", "print", "str", "str", "str", "str", "eao_result.items", "len", "formatter.format", "formatter.format", "len", "len", "len", "numpy.nanmean", "numpy.mean", "len", "len", "ret[].values", "ret[].values", "numpy.sum", "result.keys", "numpy.array"], "methods", ["None"], ["", "def", "show_result", "(", "self", ",", "result", ",", "eao_result", "=", "None", ",", "show_video_level", "=", "False", ",", "helight_threshold", "=", "0.5", ")", ":", "\n", "        ", "\"\"\"pretty print result\n        Args:\n            result: returned dict from function eval\n        \"\"\"", "\n", "tracker_name_len", "=", "max", "(", "(", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "result", ".", "keys", "(", ")", "]", ")", "+", "2", ")", ",", "12", ")", "\n", "if", "eao_result", "is", "not", "None", ":", "\n", "            ", "header", "=", "\"|{:^\"", "+", "str", "(", "tracker_name_len", ")", "+", "\"}|{:^10}|{:^12}|{:^13}|{:^7}|\"", "\n", "header", "=", "header", ".", "format", "(", "'Tracker Name'", ",", "\n", "'Accuracy'", ",", "'Robustness'", ",", "'Lost Number'", ",", "'EAO'", ")", "\n", "formatter", "=", "\"|{:^\"", "+", "str", "(", "tracker_name_len", ")", "+", "\"}|{:^10.3f}|{:^12.3f}|{:^13.1f}|{:^7.3f}|\"", "\n", "", "else", ":", "\n", "            ", "header", "=", "\"|{:^\"", "+", "str", "(", "tracker_name_len", ")", "+", "\"}|{:^10}|{:^12}|{:^13}|\"", "\n", "header", "=", "header", ".", "format", "(", "'Tracker Name'", ",", "\n", "'Accuracy'", ",", "'Robustness'", ",", "'Lost Number'", ")", "\n", "formatter", "=", "\"|{:^\"", "+", "str", "(", "tracker_name_len", ")", "+", "\"}|{:^10.3f}|{:^12.3f}|{:^13.1f}|\"", "\n", "", "bar", "=", "'-'", "*", "len", "(", "header", ")", "\n", "print", "(", "bar", ")", "\n", "print", "(", "header", ")", "\n", "print", "(", "bar", ")", "\n", "if", "eao_result", "is", "not", "None", ":", "\n", "            ", "tracker_eao", "=", "sorted", "(", "eao_result", ".", "items", "(", ")", ",", "\n", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", "[", "'all'", "]", ",", "\n", "reverse", "=", "True", ")", "[", ":", "20", "]", "\n", "tracker_names", "=", "[", "x", "[", "0", "]", "for", "x", "in", "tracker_eao", "]", "\n", "", "else", ":", "\n", "            ", "tracker_names", "=", "list", "(", "result", ".", "keys", "(", ")", ")", "\n", "", "for", "tracker_name", "in", "tracker_names", ":", "\n", "# for tracker_name, ret in result.items():", "\n", "            ", "ret", "=", "result", "[", "tracker_name", "]", "\n", "overlaps", "=", "list", "(", "itertools", ".", "chain", "(", "*", "ret", "[", "'overlaps'", "]", ".", "values", "(", ")", ")", ")", "\n", "accuracy", "=", "np", ".", "nanmean", "(", "overlaps", ")", "\n", "length", "=", "sum", "(", "[", "len", "(", "x", ")", "for", "x", "in", "ret", "[", "'overlaps'", "]", ".", "values", "(", ")", "]", ")", "\n", "failures", "=", "list", "(", "ret", "[", "'failures'", "]", ".", "values", "(", ")", ")", "\n", "lost_number", "=", "np", ".", "mean", "(", "np", ".", "sum", "(", "failures", ",", "axis", "=", "0", ")", ")", "\n", "robustness", "=", "np", ".", "mean", "(", "np", ".", "sum", "(", "np", ".", "array", "(", "failures", ")", ",", "axis", "=", "0", ")", "/", "length", ")", "*", "100", "\n", "if", "eao_result", "is", "None", ":", "\n", "                ", "print", "(", "formatter", ".", "format", "(", "tracker_name", ",", "accuracy", ",", "robustness", ",", "lost_number", ")", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "formatter", ".", "format", "(", "tracker_name", ",", "accuracy", ",", "robustness", ",", "lost_number", ",", "eao_result", "[", "tracker_name", "]", "[", "'all'", "]", ")", ")", "\n", "", "", "print", "(", "bar", ")", "\n", "\n", "if", "show_video_level", "and", "len", "(", "result", ")", "<", "10", ":", "\n", "            ", "print", "(", "'\\n\\n'", ")", "\n", "header1", "=", "\"|{:^14}|\"", ".", "format", "(", "\"Tracker name\"", ")", "\n", "header2", "=", "\"|{:^14}|\"", ".", "format", "(", "\"Video name\"", ")", "\n", "for", "tracker_name", "in", "result", ".", "keys", "(", ")", ":", "\n", "                ", "header1", "+=", "(", "\"{:^17}|\"", ")", ".", "format", "(", "tracker_name", ")", "\n", "header2", "+=", "\"{:^8}|{:^8}|\"", ".", "format", "(", "\"Acc\"", ",", "\"LN\"", ")", "\n", "", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "print", "(", "header1", ")", "\n", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "print", "(", "header2", ")", "\n", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "videos", "=", "list", "(", "result", "[", "tracker_name", "]", "[", "'overlaps'", "]", ".", "keys", "(", ")", ")", "\n", "for", "video", "in", "videos", ":", "\n", "                ", "row", "=", "\"|{:^14}|\"", ".", "format", "(", "video", ")", "\n", "for", "tracker_name", "in", "result", ".", "keys", "(", ")", ":", "\n", "                    ", "overlaps", "=", "result", "[", "tracker_name", "]", "[", "'overlaps'", "]", "[", "video", "]", "\n", "accuracy", "=", "np", ".", "nanmean", "(", "overlaps", ")", "\n", "failures", "=", "result", "[", "tracker_name", "]", "[", "'failures'", "]", "[", "video", "]", "\n", "lost_number", "=", "np", ".", "mean", "(", "failures", ")", "\n", "\n", "accuracy_str", "=", "\"{:^8.3f}\"", ".", "format", "(", "accuracy", ")", "\n", "if", "accuracy", "<", "helight_threshold", ":", "\n", "                        ", "row", "+=", "f'{Fore.RED}{accuracy_str}{Style.RESET_ALL}|'", "\n", "", "else", ":", "\n", "                        ", "row", "+=", "accuracy_str", "+", "'|'", "\n", "", "lost_num_str", "=", "\"{:^8.3f}\"", ".", "format", "(", "lost_number", ")", "\n", "if", "lost_number", ">", "0", ":", "\n", "                        ", "row", "+=", "f'{Fore.RED}{lost_num_str}{Style.RESET_ALL}|'", "\n", "", "else", ":", "\n", "                        ", "row", "+=", "lost_num_str", "+", "'|'", "\n", "", "", "print", "(", "row", ")", "\n", "", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ar_benchmark.AccuracyRobustnessBenchmark._calculate_accuracy_robustness": [[118, 142], ["range", "len", "video.load_tracker", "overlaps_group.append", "num_failures_group.append", "warnings.catch_warnings", "warnings.simplefilter", "numpy.nanmean().tolist", "utils.calculate_failures", "utils.calculate_accuracy", "numpy.nanmean"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBVideo.load_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_failures", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_accuracy"], ["", "", "def", "_calculate_accuracy_robustness", "(", "self", ",", "tracker_name", ")", ":", "\n", "        ", "overlaps", "=", "{", "}", "\n", "failures", "=", "{", "}", "\n", "all_length", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "dataset", ")", ")", ":", "\n", "            ", "video", "=", "self", ".", "dataset", "[", "i", "]", "\n", "gt_traj", "=", "video", ".", "gt_traj", "\n", "if", "tracker_name", "not", "in", "video", ".", "pred_trajs", ":", "\n", "                ", "tracker_trajs", "=", "video", ".", "load_tracker", "(", "self", ".", "dataset", ".", "tracker_path", ",", "tracker_name", ",", "False", ")", "\n", "", "else", ":", "\n", "                ", "tracker_trajs", "=", "video", ".", "pred_trajs", "[", "tracker_name", "]", "\n", "", "overlaps_group", "=", "[", "]", "\n", "num_failures_group", "=", "[", "]", "\n", "for", "tracker_traj", "in", "tracker_trajs", ":", "\n", "                ", "num_failures", "=", "calculate_failures", "(", "tracker_traj", ")", "[", "0", "]", "\n", "overlaps_", "=", "calculate_accuracy", "(", "tracker_traj", ",", "gt_traj", ",", "\n", "burnin", "=", "10", ",", "bound", "=", "(", "video", ".", "width", ",", "video", ".", "height", ")", ")", "[", "1", "]", "\n", "overlaps_group", ".", "append", "(", "overlaps_", ")", "\n", "num_failures_group", ".", "append", "(", "num_failures", ")", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "                ", "warnings", ".", "simplefilter", "(", "\"ignore\"", ",", "category", "=", "RuntimeWarning", ")", "\n", "overlaps", "[", "video", ".", "name", "]", "=", "np", ".", "nanmean", "(", "overlaps_group", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", "\n", "failures", "[", "video", ".", "name", "]", "=", "num_failures_group", "\n", "", "", "return", "overlaps", ",", "failures", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.__init__": [[13, 15], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.convert_bb_to_center": [[16, 19], ["numpy.array"], "methods", ["None"], ["", "def", "convert_bb_to_center", "(", "self", ",", "bboxes", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "(", "bboxes", "[", ":", ",", "0", "]", "+", "(", "bboxes", "[", ":", ",", "2", "]", "-", "1", ")", "/", "2", ")", ",", "\n", "(", "bboxes", "[", ":", ",", "1", "]", "+", "(", "bboxes", "[", ":", ",", "3", "]", "-", "1", ")", "/", "2", ")", "]", ")", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.convert_bb_to_norm_center": [[20, 22], ["ope_benchmark.OPEBenchmark.convert_bb_to_center"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.convert_bb_to_center"], ["", "def", "convert_bb_to_norm_center", "(", "self", ",", "bboxes", ",", "gt_wh", ")", ":", "\n", "        ", "return", "self", ".", "convert_bb_to_center", "(", "bboxes", ")", "/", "(", "gt_wh", "+", "1e-16", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.eval_success": [[23, 53], ["isinstance", "numpy.array", "len", "hasattr", "utils.success_overlap", "video.load_tracker", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.success_overlap", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBVideo.load_tracker"], ["", "def", "eval_success", "(", "self", ",", "eval_trackers", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args: \n            eval_trackers: list of tracker name or single tracker name\n        Return:\n            res: dict of results\n        \"\"\"", "\n", "if", "eval_trackers", "is", "None", ":", "\n", "            ", "eval_trackers", "=", "self", ".", "dataset", ".", "tracker_names", "\n", "", "if", "isinstance", "(", "eval_trackers", ",", "str", ")", ":", "\n", "            ", "eval_trackers", "=", "[", "eval_trackers", "]", "\n", "\n", "", "success_ret", "=", "{", "}", "\n", "for", "tracker_name", "in", "eval_trackers", ":", "\n", "            ", "success_ret_", "=", "{", "}", "\n", "for", "video", "in", "self", ".", "dataset", ":", "\n", "                ", "gt_traj", "=", "np", ".", "array", "(", "video", ".", "gt_traj", ")", "\n", "if", "tracker_name", "not", "in", "video", ".", "pred_trajs", ":", "\n", "                    ", "tracker_traj", "=", "video", ".", "load_tracker", "(", "self", ".", "dataset", ".", "tracker_path", ",", "\n", "tracker_name", ",", "False", ")", "\n", "tracker_traj", "=", "np", ".", "array", "(", "tracker_traj", ")", "\n", "", "else", ":", "\n", "                    ", "tracker_traj", "=", "np", ".", "array", "(", "video", ".", "pred_trajs", "[", "tracker_name", "]", ")", "\n", "", "n_frame", "=", "len", "(", "gt_traj", ")", "\n", "if", "hasattr", "(", "video", ",", "'absent'", ")", ":", "\n", "                    ", "gt_traj", "=", "gt_traj", "[", "video", ".", "absent", "==", "1", "]", "\n", "tracker_traj", "=", "tracker_traj", "[", "video", ".", "absent", "==", "1", "]", "\n", "", "success_ret_", "[", "video", ".", "name", "]", "=", "success_overlap", "(", "gt_traj", ",", "tracker_traj", ",", "n_frame", ")", "\n", "", "success_ret", "[", "tracker_name", "]", "=", "success_ret_", "\n", "", "return", "success_ret", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.eval_precision": [[54, 88], ["isinstance", "numpy.array", "len", "hasattr", "ope_benchmark.OPEBenchmark.convert_bb_to_center", "ope_benchmark.OPEBenchmark.convert_bb_to_center", "numpy.arange", "utils.success_error", "video.load_tracker", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.convert_bb_to_center", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.convert_bb_to_center", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.success_error", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBVideo.load_tracker"], ["", "def", "eval_precision", "(", "self", ",", "eval_trackers", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            eval_trackers: list of tracker name or single tracker name\n        Return:\n            res: dict of results\n        \"\"\"", "\n", "if", "eval_trackers", "is", "None", ":", "\n", "            ", "eval_trackers", "=", "self", ".", "dataset", ".", "tracker_names", "\n", "", "if", "isinstance", "(", "eval_trackers", ",", "str", ")", ":", "\n", "            ", "eval_trackers", "=", "[", "eval_trackers", "]", "\n", "\n", "", "precision_ret", "=", "{", "}", "\n", "for", "tracker_name", "in", "eval_trackers", ":", "\n", "            ", "precision_ret_", "=", "{", "}", "\n", "for", "video", "in", "self", ".", "dataset", ":", "\n", "                ", "gt_traj", "=", "np", ".", "array", "(", "video", ".", "gt_traj", ")", "\n", "if", "tracker_name", "not", "in", "video", ".", "pred_trajs", ":", "\n", "                    ", "tracker_traj", "=", "video", ".", "load_tracker", "(", "self", ".", "dataset", ".", "tracker_path", ",", "\n", "tracker_name", ",", "False", ")", "\n", "tracker_traj", "=", "np", ".", "array", "(", "tracker_traj", ")", "\n", "", "else", ":", "\n", "                    ", "tracker_traj", "=", "np", ".", "array", "(", "video", ".", "pred_trajs", "[", "tracker_name", "]", ")", "\n", "", "n_frame", "=", "len", "(", "gt_traj", ")", "\n", "if", "hasattr", "(", "video", ",", "'absent'", ")", ":", "\n", "                    ", "gt_traj", "=", "gt_traj", "[", "video", ".", "absent", "==", "1", "]", "\n", "tracker_traj", "=", "tracker_traj", "[", "video", ".", "absent", "==", "1", "]", "\n", "", "gt_center", "=", "self", ".", "convert_bb_to_center", "(", "gt_traj", ")", "\n", "tracker_center", "=", "self", ".", "convert_bb_to_center", "(", "tracker_traj", ")", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "\n", "precision_ret_", "[", "video", ".", "name", "]", "=", "success_error", "(", "gt_center", ",", "tracker_center", ",", "\n", "thresholds", ",", "n_frame", ")", "\n", "", "precision_ret", "[", "tracker_name", "]", "=", "precision_ret_", "\n", "", "return", "precision_ret", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.eval_norm_precision": [[89, 123], ["isinstance", "numpy.array", "len", "hasattr", "ope_benchmark.OPEBenchmark.convert_bb_to_norm_center", "ope_benchmark.OPEBenchmark.convert_bb_to_norm_center", "utils.success_error", "video.load_tracker", "numpy.array", "numpy.array", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.convert_bb_to_norm_center", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.convert_bb_to_norm_center", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.success_error", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBVideo.load_tracker"], ["", "def", "eval_norm_precision", "(", "self", ",", "eval_trackers", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            eval_trackers: list of tracker name or single tracker name\n        Return:\n            res: dict of results\n        \"\"\"", "\n", "if", "eval_trackers", "is", "None", ":", "\n", "            ", "eval_trackers", "=", "self", ".", "dataset", ".", "tracker_names", "\n", "", "if", "isinstance", "(", "eval_trackers", ",", "str", ")", ":", "\n", "            ", "eval_trackers", "=", "[", "eval_trackers", "]", "\n", "\n", "", "norm_precision_ret", "=", "{", "}", "\n", "for", "tracker_name", "in", "eval_trackers", ":", "\n", "            ", "norm_precision_ret_", "=", "{", "}", "\n", "for", "video", "in", "self", ".", "dataset", ":", "\n", "                ", "gt_traj", "=", "np", ".", "array", "(", "video", ".", "gt_traj", ")", "\n", "if", "tracker_name", "not", "in", "video", ".", "pred_trajs", ":", "\n", "                    ", "tracker_traj", "=", "video", ".", "load_tracker", "(", "self", ".", "dataset", ".", "tracker_path", ",", "\n", "tracker_name", ",", "False", ")", "\n", "tracker_traj", "=", "np", ".", "array", "(", "tracker_traj", ")", "\n", "", "else", ":", "\n", "                    ", "tracker_traj", "=", "np", ".", "array", "(", "video", ".", "pred_trajs", "[", "tracker_name", "]", ")", "\n", "", "n_frame", "=", "len", "(", "gt_traj", ")", "\n", "if", "hasattr", "(", "video", ",", "'absent'", ")", ":", "\n", "                    ", "gt_traj", "=", "gt_traj", "[", "video", ".", "absent", "==", "1", "]", "\n", "tracker_traj", "=", "tracker_traj", "[", "video", ".", "absent", "==", "1", "]", "\n", "", "gt_center_norm", "=", "self", ".", "convert_bb_to_norm_center", "(", "gt_traj", ",", "gt_traj", "[", ":", ",", "2", ":", "4", "]", ")", "\n", "tracker_center_norm", "=", "self", ".", "convert_bb_to_norm_center", "(", "tracker_traj", ",", "gt_traj", "[", ":", ",", "2", ":", "4", "]", ")", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "/", "100", "\n", "norm_precision_ret_", "[", "video", ".", "name", "]", "=", "success_error", "(", "gt_center_norm", ",", "\n", "tracker_center_norm", ",", "thresholds", ",", "n_frame", ")", "\n", "", "norm_precision_ret", "[", "tracker_name", "]", "=", "norm_precision_ret_", "\n", "", "return", "norm_precision_ret", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.ope_benchmark.OPEBenchmark.show_result": [[124, 196], ["success_ret.keys", "max", "print", "print", "print", "print", "numpy.mean", "sorted", "print", "print", "success_ret.keys", "print", "print", "print", "print", "print", "list", "print", "list", "tracker_auc.items", "max", "str", "len", "len", "formatter.format", "len", "len", "len", "success_ret[].keys", "success_ret.keys", "print", "success_ret[].values", "numpy.mean", "numpy.mean", "len", "len", "len", "numpy.mean", "numpy.mean", "len", "len", "str", "list", "list", "success_ret.keys", "precision_ret[].values", "norm_precision_ret[].values"], "methods", ["None"], ["", "def", "show_result", "(", "self", ",", "success_ret", ",", "precision_ret", "=", "None", ",", "\n", "norm_precision_ret", "=", "None", ",", "show_video_level", "=", "False", ",", "helight_threshold", "=", "0.6", ")", ":", "\n", "        ", "\"\"\"pretty print result\n        Args:\n            result: returned dict from function eval\n        \"\"\"", "\n", "# sort tracker", "\n", "tracker_auc", "=", "{", "}", "\n", "for", "tracker_name", "in", "success_ret", ".", "keys", "(", ")", ":", "\n", "            ", "auc", "=", "np", ".", "mean", "(", "list", "(", "success_ret", "[", "tracker_name", "]", ".", "values", "(", ")", ")", ")", "\n", "tracker_auc", "[", "tracker_name", "]", "=", "auc", "\n", "", "tracker_auc_", "=", "sorted", "(", "tracker_auc", ".", "items", "(", ")", ",", "\n", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "\n", "reverse", "=", "True", ")", "[", ":", "20", "]", "\n", "tracker_names", "=", "[", "x", "[", "0", "]", "for", "x", "in", "tracker_auc_", "]", "\n", "\n", "\n", "tracker_name_len", "=", "max", "(", "(", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "success_ret", ".", "keys", "(", ")", "]", ")", "+", "2", ")", ",", "12", ")", "\n", "header", "=", "(", "\"|{:^\"", "+", "str", "(", "tracker_name_len", ")", "+", "\"}|{:^9}|{:^16}|{:^11}|\"", ")", ".", "format", "(", "\n", "\"Tracker name\"", ",", "\"Success\"", ",", "\"Norm Precision\"", ",", "\"Precision\"", ")", "\n", "formatter", "=", "\"|{:^\"", "+", "str", "(", "tracker_name_len", ")", "+", "\"}|{:^9.3f}|{:^16.3f}|{:^11.3f}|\"", "\n", "print", "(", "'-'", "*", "len", "(", "header", ")", ")", "\n", "print", "(", "header", ")", "\n", "print", "(", "'-'", "*", "len", "(", "header", ")", ")", "\n", "for", "tracker_name", "in", "tracker_names", ":", "\n", "# success = np.mean(list(success_ret[tracker_name].values()))", "\n", "            ", "success", "=", "tracker_auc", "[", "tracker_name", "]", "\n", "if", "precision_ret", "is", "not", "None", ":", "\n", "                ", "precision", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", "[", "tracker_name", "]", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "[", "20", "]", "\n", "", "else", ":", "\n", "                ", "precision", "=", "0", "\n", "", "if", "norm_precision_ret", "is", "not", "None", ":", "\n", "                ", "norm_precision", "=", "np", ".", "mean", "(", "list", "(", "norm_precision_ret", "[", "tracker_name", "]", ".", "values", "(", ")", ")", ",", "\n", "axis", "=", "0", ")", "[", "20", "]", "\n", "", "else", ":", "\n", "                ", "norm_precision", "=", "0", "\n", "", "print", "(", "formatter", ".", "format", "(", "tracker_name", ",", "success", ",", "norm_precision", ",", "precision", ")", ")", "\n", "", "print", "(", "'-'", "*", "len", "(", "header", ")", ")", "\n", "\n", "if", "show_video_level", "and", "len", "(", "success_ret", ")", "<", "10", "and", "precision_ret", "is", "not", "None", "and", "len", "(", "precision_ret", ")", "<", "10", ":", "\n", "            ", "print", "(", "\"\\n\\n\"", ")", "\n", "header1", "=", "\"|{:^21}|\"", ".", "format", "(", "\"Tracker name\"", ")", "\n", "header2", "=", "\"|{:^21}|\"", ".", "format", "(", "\"Video name\"", ")", "\n", "for", "tracker_name", "in", "success_ret", ".", "keys", "(", ")", ":", "\n", "# col_len = max(20, len(tracker_name))", "\n", "                ", "header1", "+=", "(", "\"{:^21}|\"", ")", ".", "format", "(", "tracker_name", ")", "\n", "header2", "+=", "\"{:^9}|{:^11}|\"", ".", "format", "(", "\"success\"", ",", "\"precision\"", ")", "\n", "", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "print", "(", "header1", ")", "\n", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "print", "(", "header2", ")", "\n", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "videos", "=", "list", "(", "success_ret", "[", "tracker_name", "]", ".", "keys", "(", ")", ")", "\n", "for", "video", "in", "videos", ":", "\n", "                ", "row", "=", "\"|{:^21}|\"", ".", "format", "(", "video", ")", "\n", "for", "tracker_name", "in", "success_ret", ".", "keys", "(", ")", ":", "\n", "                    ", "success", "=", "np", ".", "mean", "(", "success_ret", "[", "tracker_name", "]", "[", "video", "]", ")", "\n", "precision", "=", "np", ".", "mean", "(", "precision_ret", "[", "tracker_name", "]", "[", "video", "]", ")", "\n", "success_str", "=", "\"{:^9.3f}\"", ".", "format", "(", "success", ")", "\n", "if", "success", "<", "helight_threshold", ":", "\n", "                        ", "row", "+=", "f'{Fore.RED}{success_str}{Style.RESET_ALL}|'", "\n", "", "else", ":", "\n", "                        ", "row", "+=", "success_str", "+", "'|'", "\n", "", "precision_str", "=", "\"{:^11.3f}\"", ".", "format", "(", "precision", ")", "\n", "if", "precision", "<", "helight_threshold", ":", "\n", "                        ", "row", "+=", "f'{Fore.RED}{precision_str}{Style.RESET_ALL}|'", "\n", "", "else", ":", "\n", "                        ", "row", "+=", "precision_str", "+", "'|'", "\n", "", "", "print", "(", "row", ")", "\n", "", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.eao_benchmark.EAOBenchmark.__init__": [[14, 31], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset", ",", "skipping", "=", "5", ",", "tags", "=", "[", "'all'", "]", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "skipping", "=", "skipping", "\n", "self", ".", "tags", "=", "tags", "\n", "# NOTE we not use gmm to generate low, high, peak value", "\n", "if", "dataset", ".", "name", "==", "'VOT2019'", ":", "\n", "            ", "self", ".", "low", "=", "46", "\n", "self", ".", "high", "=", "291", "\n", "self", ".", "peak", "=", "128", "\n", "", "elif", "dataset", ".", "name", "==", "'VOT2018'", "or", "dataset", ".", "name", "==", "'VOT2017'", ":", "\n", "            ", "self", ".", "low", "=", "100", "\n", "self", ".", "high", "=", "356", "\n", "self", ".", "peak", "=", "160", "\n", "", "elif", "dataset", ".", "name", "==", "'VOT2016'", ":", "\n", "            ", "self", ".", "low", "=", "108", "\n", "self", ".", "high", "=", "371", "\n", "self", ".", "peak", "=", "168", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.eao_benchmark.EAOBenchmark.eval": [[32, 50], ["isinstance", "eao_benchmark.EAOBenchmark._calculate_eao"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.eao_benchmark.EAOBenchmark._calculate_eao"], ["", "", "def", "eval", "(", "self", ",", "eval_trackers", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            eval_tags: list of tag\n            eval_trackers: list of tracker name\n        Returns:\n            eao: dict of results\n        \"\"\"", "\n", "if", "eval_trackers", "is", "None", ":", "\n", "            ", "eval_trackers", "=", "self", ".", "dataset", ".", "tracker_names", "\n", "", "if", "isinstance", "(", "eval_trackers", ",", "str", ")", ":", "\n", "            ", "eval_trackers", "=", "[", "eval_trackers", "]", "\n", "\n", "", "ret", "=", "{", "}", "\n", "for", "tracker_name", "in", "eval_trackers", ":", "\n", "            ", "eao", "=", "self", ".", "_calculate_eao", "(", "tracker_name", ",", "self", ".", "tags", ")", "\n", "ret", "[", "tracker_name", "]", "=", "eao", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.eao_benchmark.EAOBenchmark.show_result": [[51, 88], ["len", "max", "print", "print", "print", "print", "print", "print", "print", "print", "len", "sorted", "print", "len", "sorted", "print", "max", "result.items", "formatter.format", "result.items", "formatter.format", "len", "str", "result.keys"], "methods", ["None"], ["", "def", "show_result", "(", "self", ",", "result", ",", "topk", "=", "10", ")", ":", "\n", "        ", "\"\"\"pretty print result\n        Args:\n            result: returned dict from function eval\n        \"\"\"", "\n", "if", "len", "(", "self", ".", "tags", ")", "==", "1", ":", "\n", "            ", "tracker_name_len", "=", "max", "(", "(", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "result", ".", "keys", "(", ")", "]", ")", "+", "2", ")", ",", "12", ")", "\n", "header", "=", "(", "\"|{:^\"", "+", "str", "(", "tracker_name_len", ")", "+", "\"}|{:^10}|\"", ")", ".", "format", "(", "'Tracker Name'", ",", "'EAO'", ")", "\n", "bar", "=", "'-'", "*", "len", "(", "header", ")", "\n", "formatter", "=", "\"|{:^20}|{:^10.3f}|\"", "\n", "print", "(", "bar", ")", "\n", "print", "(", "header", ")", "\n", "print", "(", "bar", ")", "\n", "tracker_eao", "=", "sorted", "(", "result", ".", "items", "(", ")", ",", "\n", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", "[", "'all'", "]", ",", "\n", "reverse", "=", "True", ")", "[", ":", "topk", "]", "\n", "for", "tracker_name", ",", "eao", "in", "tracker_eao", ":", "\n", "# for tracker_name, ret in result.items():", "\n", "                ", "print", "(", "formatter", ".", "format", "(", "tracker_name", ",", "eao", ")", ")", "\n", "", "print", "(", "bar", ")", "\n", "", "else", ":", "\n", "            ", "header", "=", "\"|{:^20}|\"", ".", "format", "(", "'Tracker Name'", ")", "\n", "header", "+=", "\"{:^7}|{:^15}|{:^14}|{:^15}|{:^13}|{:^11}|{:^7}|\"", ".", "format", "(", "*", "self", ".", "tags", ")", "\n", "bar", "=", "'-'", "*", "len", "(", "header", ")", "\n", "formatter", "=", "\"{:^7.3f}|{:^15.3f}|{:^14.3f}|{:^15.3f}|{:^13.3f}|{:^11.3f}|{:^7.3f}|\"", "\n", "print", "(", "bar", ")", "\n", "print", "(", "header", ")", "\n", "print", "(", "bar", ")", "\n", "sorted_tacker", "=", "sorted", "(", "result", ".", "items", "(", ")", ",", "\n", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", "[", "'all'", "]", ",", "\n", "reverse", "=", "True", ")", "[", ":", "topk", "]", "\n", "sorted_tacker", "=", "[", "x", "[", "0", "]", "for", "x", "in", "sorted_tacker", "]", "\n", "for", "tracker_name", "in", "sorted_tacker", ":", "\n", "# for tracker_name, ret in result.items():", "\n", "                ", "print", "(", "\"|{:^20}|\"", ".", "format", "(", "tracker_name", ")", "+", "formatter", ".", "format", "(", "\n", "*", "[", "result", "[", "tracker_name", "]", "[", "x", "]", "for", "x", "in", "self", ".", "tags", "]", ")", ")", "\n", "", "print", "(", "bar", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.eao_benchmark.EAOBenchmark._calculate_eao": [[89, 164], ["sum", "max", "len", "print", "zip", "utils.calculate_expected_overlap", "numpy.zeros", "numpy.logical_not", "video.load_tracker", "gt_traj_length.append", "video_names.append", "all_overlaps.append", "all_failures.append", "len", "len", "numpy.ones", "numpy.ones", "len", "numpy.isnan", "numpy.sum", "numpy.sum", "len", "utils.calculate_accuracy", "utils.calculate_failures", "len", "len", "points.insert", "range", "min", "eao_benchmark.EAOBenchmark.dataset[].select_tag", "len", "len", "sum", "numpy.array", "numpy.array", "eao_benchmark.EAOBenchmark.dataset[].select_tag", "eao_benchmark.EAOBenchmark.dataset[].select_tag", "len", "len", "numpy.isnan", "len", "sum", "len", "sum", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_expected_overlap", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBVideo.load_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_accuracy", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_failures", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTVideo.select_tag", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTVideo.select_tag", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.vot.VOTVideo.select_tag"], ["", "", "def", "_calculate_eao", "(", "self", ",", "tracker_name", ",", "tags", ")", ":", "\n", "        ", "all_overlaps", "=", "[", "]", "\n", "all_failures", "=", "[", "]", "\n", "video_names", "=", "[", "]", "\n", "gt_traj_length", "=", "[", "]", "\n", "# for i in range(len(self.dataset)):", "\n", "for", "video", "in", "self", ".", "dataset", ":", "\n", "# video = self.dataset[i]", "\n", "            ", "gt_traj", "=", "video", ".", "gt_traj", "\n", "if", "tracker_name", "not", "in", "video", ".", "pred_trajs", ":", "\n", "                ", "tracker_trajs", "=", "video", ".", "load_tracker", "(", "self", ".", "dataset", ".", "tracker_path", ",", "tracker_name", ",", "False", ")", "\n", "", "else", ":", "\n", "                ", "tracker_trajs", "=", "video", ".", "pred_trajs", "[", "tracker_name", "]", "\n", "", "for", "tracker_traj", "in", "tracker_trajs", ":", "\n", "                ", "gt_traj_length", ".", "append", "(", "len", "(", "gt_traj", ")", ")", "\n", "video_names", ".", "append", "(", "video", ".", "name", ")", "\n", "overlaps", "=", "calculate_accuracy", "(", "tracker_traj", ",", "gt_traj", ",", "bound", "=", "(", "video", ".", "width", "-", "1", ",", "video", ".", "height", "-", "1", ")", ")", "[", "1", "]", "\n", "failures", "=", "calculate_failures", "(", "tracker_traj", ")", "[", "1", "]", "\n", "all_overlaps", ".", "append", "(", "overlaps", ")", "\n", "all_failures", ".", "append", "(", "failures", ")", "\n", "", "", "fragment_num", "=", "sum", "(", "[", "len", "(", "x", ")", "+", "1", "for", "x", "in", "all_failures", "]", ")", "\n", "max_len", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "all_overlaps", "]", ")", "\n", "if", "len", "(", "tracker_trajs", ")", "==", "0", ":", "\n", "            ", "print", "(", "'Warning: some seqs in {}.{} not found'", ".", "format", "(", "tracker_name", ",", "tags", ")", ")", "\n", "", "seq_weight", "=", "1", "/", "(", "len", "(", "tracker_trajs", ")", "+", "1e-10", ")", "# division by zero", "\n", "\n", "eao", "=", "{", "}", "\n", "for", "tag", "in", "tags", ":", "\n", "# prepare segments", "\n", "            ", "fweights", "=", "np", ".", "ones", "(", "(", "fragment_num", ")", ")", "*", "np", ".", "nan", "\n", "fragments", "=", "np", ".", "ones", "(", "(", "fragment_num", ",", "max_len", ")", ")", "*", "np", ".", "nan", "\n", "seg_counter", "=", "0", "\n", "for", "name", ",", "traj_len", ",", "failures", ",", "overlaps", "in", "zip", "(", "video_names", ",", "gt_traj_length", ",", "\n", "all_failures", ",", "all_overlaps", ")", ":", "\n", "                ", "if", "len", "(", "failures", ")", ">", "0", ":", "\n", "                    ", "points", "=", "[", "x", "+", "self", ".", "skipping", "for", "x", "in", "failures", "if", "\n", "x", "+", "self", ".", "skipping", "<=", "len", "(", "overlaps", ")", "]", "\n", "points", ".", "insert", "(", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "points", ")", ")", ":", "\n", "                        ", "if", "i", "!=", "len", "(", "points", ")", "-", "1", ":", "\n", "                            ", "fragment", "=", "np", ".", "array", "(", "overlaps", "[", "points", "[", "i", "]", ":", "points", "[", "i", "+", "1", "]", "+", "1", "]", ")", "\n", "fragments", "[", "seg_counter", ",", ":", "]", "=", "0", "\n", "", "else", ":", "\n", "                            ", "fragment", "=", "np", ".", "array", "(", "overlaps", "[", "points", "[", "i", "]", ":", "]", ")", "\n", "", "fragment", "[", "np", ".", "isnan", "(", "fragment", ")", "]", "=", "0", "\n", "fragments", "[", "seg_counter", ",", ":", "len", "(", "fragment", ")", "]", "=", "fragment", "\n", "if", "i", "!=", "len", "(", "points", ")", "-", "1", ":", "\n", "# tag_value = self.dataset[name].tags[tag][points[i]:points[i+1]+1]", "\n", "                            ", "tag_value", "=", "self", ".", "dataset", "[", "name", "]", ".", "select_tag", "(", "tag", ",", "points", "[", "i", "]", ",", "points", "[", "i", "+", "1", "]", "+", "1", ")", "\n", "w", "=", "sum", "(", "tag_value", ")", "/", "(", "points", "[", "i", "+", "1", "]", "-", "points", "[", "i", "]", "+", "1", ")", "\n", "fweights", "[", "seg_counter", "]", "=", "seq_weight", "*", "w", "\n", "", "else", ":", "\n", "# tag_value = self.dataset[name].tags[tag][points[i]:len(overlaps)]", "\n", "                            ", "tag_value", "=", "self", ".", "dataset", "[", "name", "]", ".", "select_tag", "(", "tag", ",", "points", "[", "i", "]", ",", "len", "(", "overlaps", ")", ")", "\n", "w", "=", "sum", "(", "tag_value", ")", "/", "(", "traj_len", "-", "points", "[", "i", "]", "+", "1e-16", ")", "\n", "fweights", "[", "seg_counter", "]", "=", "seq_weight", "*", "w", "# (len(fragment) / (traj_len-points[i]))", "\n", "", "seg_counter", "+=", "1", "\n", "", "", "else", ":", "\n", "# no failure", "\n", "                    ", "max_idx", "=", "min", "(", "len", "(", "overlaps", ")", ",", "max_len", ")", "\n", "fragments", "[", "seg_counter", ",", ":", "max_idx", "]", "=", "overlaps", "[", ":", "max_idx", "]", "\n", "# tag_value = self.dataset[name].tags[tag][:max_idx]", "\n", "tag_value", "=", "self", ".", "dataset", "[", "name", "]", ".", "select_tag", "(", "tag", ",", "0", ",", "max_idx", ")", "\n", "w", "=", "sum", "(", "tag_value", ")", "/", "max_idx", "\n", "fweights", "[", "seg_counter", "]", "=", "seq_weight", "*", "w", "\n", "seg_counter", "+=", "1", "\n", "\n", "", "", "expected_overlaps", "=", "calculate_expected_overlap", "(", "fragments", ",", "fweights", ")", "\n", "# caculate eao", "\n", "weight", "=", "np", ".", "zeros", "(", "(", "len", "(", "expected_overlaps", ")", ")", ")", "\n", "weight", "[", "self", ".", "low", "-", "1", ":", "self", ".", "high", "-", "1", "+", "1", "]", "=", "1", "\n", "is_valid", "=", "np", ".", "logical_not", "(", "np", ".", "isnan", "(", "expected_overlaps", ")", ")", "\n", "eao_", "=", "np", ".", "sum", "(", "expected_overlaps", "[", "is_valid", "]", "*", "weight", "[", "is_valid", "]", ")", "/", "np", ".", "sum", "(", "weight", "[", "is_valid", "]", ")", "\n", "eao", "[", "tag", "]", "=", "eao_", "\n", "", "return", "eao", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.__init__": [[11, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            result_path:\n        \"\"\"", "\n", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.eval": [[18, 39], ["isinstance", "f1_benchmark.F1Benchmark._cal_precision_reall"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark._cal_precision_reall"], ["", "def", "eval", "(", "self", ",", "eval_trackers", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            eval_tags: list of tag\n            eval_trackers: list of tracker name\n        Returns:\n            eao: dict of results\n        \"\"\"", "\n", "if", "eval_trackers", "is", "None", ":", "\n", "            ", "eval_trackers", "=", "self", ".", "dataset", ".", "tracker_names", "\n", "", "if", "isinstance", "(", "eval_trackers", ",", "str", ")", ":", "\n", "            ", "eval_trackers", "=", "[", "eval_trackers", "]", "\n", "\n", "", "ret", "=", "{", "}", "\n", "for", "tracker_name", "in", "eval_trackers", ":", "\n", "            ", "precision", ",", "recall", ",", "f1", "=", "self", ".", "_cal_precision_reall", "(", "tracker_name", ")", "\n", "ret", "[", "tracker_name", "]", "=", "{", "\"precision\"", ":", "precision", ",", "\n", "\"recall\"", ":", "recall", ",", "\n", "\"f1\"", ":", "f1", "\n", "}", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark._cal_precision_reall": [[40, 69], ["numpy.array", "range", "utils.determine_thresholds", "len", "sum", "utils.calculate_f1", "video.load_tracker", "utils.calculate_accuracy", "video.load_tracker", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc.determine_thresholds", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_f1", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBVideo.load_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.statistics.calculate_accuracy", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.otb.OTBVideo.load_tracker"], ["", "def", "_cal_precision_reall", "(", "self", ",", "tracker_name", ")", ":", "\n", "        ", "score", "=", "[", "]", "\n", "# for i in range(len(self.dataset)):", "\n", "#     video = self.dataset[i]", "\n", "for", "video", "in", "self", ".", "dataset", ":", "\n", "            ", "if", "tracker_name", "not", "in", "video", ".", "confidence", ":", "\n", "                ", "score", "+=", "video", ".", "load_tracker", "(", "self", ".", "dataset", ".", "tracker_path", ",", "tracker_name", ",", "False", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "score", "+=", "video", ".", "confidence", "[", "tracker_name", "]", "\n", "", "", "score", "=", "np", ".", "array", "(", "score", ")", "\n", "thresholds", "=", "determine_thresholds", "(", "score", ")", "[", ":", ":", "-", "1", "]", "\n", "\n", "precision", "=", "{", "}", "\n", "recall", "=", "{", "}", "\n", "f1", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "dataset", ")", ")", ":", "\n", "            ", "video", "=", "self", ".", "dataset", "[", "i", "]", "\n", "gt_traj", "=", "video", ".", "gt_traj", "\n", "N", "=", "sum", "(", "[", "1", "for", "x", "in", "gt_traj", "if", "len", "(", "x", ")", ">", "1", "]", ")", "\n", "if", "tracker_name", "not", "in", "video", ".", "pred_trajs", ":", "\n", "                ", "tracker_traj", ",", "score", "=", "video", ".", "load_tracker", "(", "self", ".", "dataset", ".", "tracker_path", ",", "tracker_name", ",", "False", ")", "\n", "", "else", ":", "\n", "                ", "tracker_traj", "=", "video", ".", "pred_trajs", "[", "tracker_name", "]", "\n", "score", "=", "video", ".", "confidence", "[", "tracker_name", "]", "\n", "", "overlaps", "=", "calculate_accuracy", "(", "tracker_traj", ",", "gt_traj", ",", "bound", "=", "(", "video", ".", "width", ",", "video", ".", "height", ")", ")", "[", "1", "]", "\n", "f1", "[", "video", ".", "name", "]", ",", "precision", "[", "video", ".", "name", "]", ",", "recall", "[", "video", ".", "name", "]", "=", "calculate_f1", "(", "overlaps", ",", "score", ",", "(", "video", ".", "width", ",", "video", ".", "height", ")", ",", "thresholds", ",", "N", ")", "\n", "", "return", "precision", ",", "recall", ",", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.show_result": [[70, 148], ["result.items", "max", "header.format.format.format", "print", "print", "print", "print", "numpy.mean", "numpy.mean", "numpy.argmax", "sorted", "len", "print", "print", "result.keys", "print", "print", "print", "print", "print", "list", "print", "list", "list", "sorted_tracker.items", "max", "str", "str", "formatter.format", "len", "[].keys", "result.keys", "print", "ret[].values", "ret[].values", "len", "len", "len", "numpy.argmax", "len", "len", "result.keys"], "methods", ["None"], ["", "def", "show_result", "(", "self", ",", "result", ",", "show_video_level", "=", "False", ",", "helight_threshold", "=", "0.5", ")", ":", "\n", "        ", "\"\"\"pretty print result\n        Args:\n            result: returned dict from function eval\n        \"\"\"", "\n", "# sort tracker according to f1", "\n", "sorted_tracker", "=", "{", "}", "\n", "for", "tracker_name", ",", "ret", "in", "result", ".", "items", "(", ")", ":", "\n", "            ", "precision", "=", "np", ".", "mean", "(", "list", "(", "ret", "[", "'precision'", "]", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "recall", "=", "np", ".", "mean", "(", "list", "(", "ret", "[", "'recall'", "]", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "f1", "=", "2", "*", "precision", "*", "recall", "/", "(", "precision", "+", "recall", ")", "\n", "max_idx", "=", "np", ".", "argmax", "(", "f1", ")", "\n", "sorted_tracker", "[", "tracker_name", "]", "=", "(", "precision", "[", "max_idx", "]", ",", "recall", "[", "max_idx", "]", ",", "\n", "f1", "[", "max_idx", "]", ")", "\n", "", "sorted_tracker_", "=", "sorted", "(", "sorted_tracker", ".", "items", "(", ")", ",", "\n", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", "[", "2", "]", ",", "\n", "reverse", "=", "True", ")", "[", ":", "20", "]", "\n", "tracker_names", "=", "[", "x", "[", "0", "]", "for", "x", "in", "sorted_tracker_", "]", "\n", "\n", "tracker_name_len", "=", "max", "(", "(", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "result", ".", "keys", "(", ")", "]", ")", "+", "2", ")", ",", "12", ")", "\n", "header", "=", "\"|{:^\"", "+", "str", "(", "tracker_name_len", ")", "+", "\"}|{:^11}|{:^8}|{:^7}|\"", "\n", "header", "=", "header", ".", "format", "(", "'Tracker Name'", ",", "\n", "'Precision'", ",", "'Recall'", ",", "'F1'", ")", "\n", "bar", "=", "'-'", "*", "len", "(", "header", ")", "\n", "formatter", "=", "\"|{:^\"", "+", "str", "(", "tracker_name_len", ")", "+", "\"}|{:^11.3f}|{:^8.3f}|{:^7.3f}|\"", "\n", "print", "(", "bar", ")", "\n", "print", "(", "header", ")", "\n", "print", "(", "bar", ")", "\n", "# for tracker_name, ret in result.items():", "\n", "#     precision = np.mean(list(ret['precision'].values()), axis=0)", "\n", "#     recall = np.mean(list(ret['recall'].values()), axis=0)", "\n", "#     f1 = 2 * precision * recall / (precision + recall)", "\n", "#     max_idx = np.argmax(f1)", "\n", "for", "tracker_name", "in", "tracker_names", ":", "\n", "            ", "precision", "=", "sorted_tracker", "[", "tracker_name", "]", "[", "0", "]", "\n", "recall", "=", "sorted_tracker", "[", "tracker_name", "]", "[", "1", "]", "\n", "f1", "=", "sorted_tracker", "[", "tracker_name", "]", "[", "2", "]", "\n", "print", "(", "formatter", ".", "format", "(", "tracker_name", ",", "precision", ",", "recall", ",", "f1", ")", ")", "\n", "", "print", "(", "bar", ")", "\n", "\n", "if", "show_video_level", "and", "len", "(", "result", ")", "<", "10", ":", "\n", "            ", "print", "(", "'\\n\\n'", ")", "\n", "header1", "=", "\"|{:^14}|\"", ".", "format", "(", "\"Tracker name\"", ")", "\n", "header2", "=", "\"|{:^14}|\"", ".", "format", "(", "\"Video name\"", ")", "\n", "for", "tracker_name", "in", "result", ".", "keys", "(", ")", ":", "\n", "# col_len = max(20, len(tracker_name))", "\n", "                ", "header1", "+=", "(", "\"{:^28}|\"", ")", ".", "format", "(", "tracker_name", ")", "\n", "header2", "+=", "\"{:^11}|{:^8}|{:^7}|\"", ".", "format", "(", "\"Precision\"", ",", "\"Recall\"", ",", "\"F1\"", ")", "\n", "", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "print", "(", "header1", ")", "\n", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "print", "(", "header2", ")", "\n", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "videos", "=", "list", "(", "result", "[", "tracker_name", "]", "[", "'precision'", "]", ".", "keys", "(", ")", ")", "\n", "for", "video", "in", "videos", ":", "\n", "                ", "row", "=", "\"|{:^14}|\"", ".", "format", "(", "video", ")", "\n", "for", "tracker_name", "in", "result", ".", "keys", "(", ")", ":", "\n", "                    ", "precision", "=", "result", "[", "tracker_name", "]", "[", "'precision'", "]", "[", "video", "]", "\n", "recall", "=", "result", "[", "tracker_name", "]", "[", "'recall'", "]", "[", "video", "]", "\n", "f1", "=", "result", "[", "tracker_name", "]", "[", "'f1'", "]", "[", "video", "]", "\n", "max_idx", "=", "np", ".", "argmax", "(", "f1", ")", "\n", "precision_str", "=", "\"{:^11.3f}\"", ".", "format", "(", "precision", "[", "max_idx", "]", ")", "\n", "if", "precision", "[", "max_idx", "]", "<", "helight_threshold", ":", "\n", "                        ", "row", "+=", "f'{Fore.RED}{precision_str}{Style.RESET_ALL}|'", "\n", "", "else", ":", "\n", "                        ", "row", "+=", "precision_str", "+", "'|'", "\n", "", "recall_str", "=", "\"{:^8.3f}\"", ".", "format", "(", "recall", "[", "max_idx", "]", ")", "\n", "if", "recall", "[", "max_idx", "]", "<", "helight_threshold", ":", "\n", "                        ", "row", "+=", "f'{Fore.RED}{recall_str}{Style.RESET_ALL}|'", "\n", "", "else", ":", "\n", "                        ", "row", "+=", "recall_str", "+", "'|'", "\n", "", "f1_str", "=", "\"{:^7.3f}\"", ".", "format", "(", "f1", "[", "max_idx", "]", ")", "\n", "if", "f1", "[", "max_idx", "]", "<", "helight_threshold", ":", "\n", "                        ", "row", "+=", "f'{Fore.RED}{f1_str}{Style.RESET_ALL}|'", "\n", "", "else", ":", "\n", "                        ", "row", "+=", "f1_str", "+", "'|'", "\n", "", "", "print", "(", "row", ")", "\n", "", "print", "(", "'-'", "*", "len", "(", "header1", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.siamfc_alex_upxcorr_otb.convert_model.convert": [[10, 70], ["dict", "tqdm.tqdm", "isinstance", "range", "re.match", "int", "numpy.squeeze", "re.match.groups", "numpy.squeeze", "scipy.io.loadmat", "torch.from_numpy", "torch.from_numpy", "convert_model.convert.squeeze"], "function", ["None"], ["        ", "k", "=", "k", ".", "replace", "(", "'features.features'", ",", "'backbone'", ")", "\n", "", "elif", "k", ".", "startswith", "(", "'features'", ")", ":", "\n", "        ", "k", "=", "k", ".", "replace", "(", "'features'", ",", "'neck'", ")", "\n", "", "elif", "k", ".", "startswith", "(", "'rpn_model'", ")", ":", "\n", "        ", "k", "=", "k", ".", "replace", "(", "'rpn_model'", ",", "'rpn_head'", ")", "\n", "", "elif", "k", ".", "startswith", "(", "'mask_model'", ")", ":", "\n", "        ", "k", "=", "k", ".", "replace", "(", "'mask_model.mask'", ",", "'mask_head'", ")", "\n", "", "elif", "k", ".", "startswith", "(", "'refine_model'", ")", ":", "\n", "        ", "k", "=", "k", ".", "replace", "(", "'refine_model'", ",", "'refine_head'", ")", "\n", "", "new_model", "[", "k", "]", "=", "v", "\n", "\n", "", "torch", ".", "save", "(", "new_model", ",", "'model.pth'", ")", "\n", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.siamfc_alex_upxcorr_vot.convert_model.convert": [[10, 70], ["dict", "tqdm.tqdm", "isinstance", "range", "re.match", "int", "numpy.squeeze", "re.match.groups", "numpy.squeeze", "scipy.io.loadmat", "torch.from_numpy", "torch.from_numpy", "convert_model.convert.squeeze"], "function", ["None"], ["        ", "k", "=", "k", ".", "replace", "(", "'features.features'", ",", "'backbone'", ")", "\n", "", "elif", "k", ".", "startswith", "(", "'features'", ")", ":", "\n", "        ", "k", "=", "k", ".", "replace", "(", "'features'", ",", "'neck'", ")", "\n", "", "elif", "k", ".", "startswith", "(", "'rpn_model'", ")", ":", "\n", "        ", "k", "=", "k", ".", "replace", "(", "'rpn_model'", ",", "'rpn_head'", ")", "\n", "", "elif", "k", ".", "startswith", "(", "'mask_model'", ")", ":", "\n", "        ", "k", "=", "k", ".", "replace", "(", "'mask_model.mask'", ",", "'mask_head'", ")", "\n", "", "elif", "k", ".", "startswith", "(", "'refine_model'", ")", ":", "\n", "        ", "k", "=", "k", ".", "replace", "(", "'refine_model'", ",", "'refine_head'", ")", "\n", "", "new_model", "[", "k", "]", "=", "v", "\n", "\n", "", "torch", ".", "save", "(", "new_model", ",", "'model.pth'", ")", "\n", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.init_weight.init_weights": [[4, 13], ["model.modules", "isinstance", "torch.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "function", ["None"], ["def", "init_weights", "(", "model", ")", ":", "\n", "    ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ".", "data", ",", "\n", "mode", "=", "'fan_out'", ",", "\n", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.loss.get_cls_loss": [[12, 18], ["torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.nll_loss", "len", "select.size"], "function", ["None"], ["def", "get_cls_loss", "(", "pred", ",", "label", ",", "select", ")", ":", "\n", "    ", "if", "len", "(", "select", ".", "size", "(", ")", ")", "==", "0", ":", "\n", "        ", "return", "0", "\n", "", "pred", "=", "torch", ".", "index_select", "(", "pred", ",", "0", ",", "select", ")", "\n", "label", "=", "torch", ".", "index_select", "(", "label", ",", "0", ",", "select", ")", "\n", "return", "F", ".", "nll_loss", "(", "pred", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.loss.select_cross_entropy_loss": [[20, 28], ["pred.view.view", "label.view.view", "label.view.data.eq().nonzero().squeeze().cuda", "label.view.data.eq().nonzero().squeeze().cuda", "loss.get_cls_loss", "loss.get_cls_loss", "label.view.data.eq().nonzero().squeeze", "label.view.data.eq().nonzero().squeeze", "label.view.data.eq().nonzero", "label.view.data.eq().nonzero", "label.view.data.eq", "label.view.data.eq"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.models.loss.get_cls_loss", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.loss.get_cls_loss"], ["", "def", "select_cross_entropy_loss", "(", "pred", ",", "label", ")", ":", "\n", "    ", "pred", "=", "pred", ".", "view", "(", "-", "1", ",", "2", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "pos", "=", "label", ".", "data", ".", "eq", "(", "1", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", ".", "cuda", "(", ")", "\n", "neg", "=", "label", ".", "data", ".", "eq", "(", "0", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", ".", "cuda", "(", ")", "\n", "loss_pos", "=", "get_cls_loss", "(", "pred", ",", "label", ",", "pos", ")", "\n", "loss_neg", "=", "get_cls_loss", "(", "pred", ",", "label", ",", "neg", ")", "\n", "return", "loss_pos", "*", "0.5", "+", "loss_neg", "*", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.loss.weight_l1_loss": [[30, 37], ["pred_loc.view.size", "pred_loc.view.view", "diff.sum().view.sum().view", "loss.sum().div", "diff.sum().view.sum", "loss.sum"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.div"], ["", "def", "weight_l1_loss", "(", "pred_loc", ",", "label_loc", ",", "loss_weight", ")", ":", "\n", "    ", "b", ",", "_", ",", "sh", ",", "sw", "=", "pred_loc", ".", "size", "(", ")", "\n", "pred_loc", "=", "pred_loc", ".", "view", "(", "b", ",", "4", ",", "-", "1", ",", "sh", ",", "sw", ")", "\n", "diff", "=", "(", "pred_loc", "-", "label_loc", ")", ".", "abs", "(", ")", "\n", "diff", "=", "diff", ".", "sum", "(", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "-", "1", ",", "sh", ",", "sw", ")", "\n", "loss", "=", "diff", "*", "loss_weight", "\n", "return", "loss", ".", "sum", "(", ")", ".", "div", "(", "b", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.__init__": [[19, 43], ["torch.Module.__init__", "pysot.models.backbone.get_backbone", "pysot.models.neck.get_neck", "pysot.models.head.get_rpn_head", "pysot.models.head.get_mask_head", "pysot.models.head.get_refine_head"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__", "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.__init__.get_backbone", "home.repos.pwc.inspect_result.shallowtoil_DROL.neck.__init__.get_neck", "home.repos.pwc.inspect_result.shallowtoil_DROL.head.__init__.get_rpn_head", "home.repos.pwc.inspect_result.shallowtoil_DROL.head.__init__.get_mask_head", "home.repos.pwc.inspect_result.shallowtoil_DROL.head.__init__.get_refine_head"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ModelBuilder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# build backbone", "\n", "self", ".", "backbone", "=", "get_backbone", "(", "cfg", ".", "BACKBONE", ".", "TYPE", ",", "\n", "**", "cfg", ".", "BACKBONE", ".", "KWARGS", ")", "\n", "\n", "# build adjust layer", "\n", "if", "cfg", ".", "ADJUST", ".", "ADJUST", ":", "\n", "            ", "self", ".", "neck", "=", "get_neck", "(", "cfg", ".", "ADJUST", ".", "TYPE", ",", "\n", "**", "cfg", ".", "ADJUST", ".", "KWARGS", ")", "\n", "\n", "# build rpn head", "\n", "", "if", "cfg", ".", "RPN", ".", "RPN", ":", "\n", "            ", "self", ".", "rpn_head", "=", "get_rpn_head", "(", "cfg", ".", "RPN", ".", "TYPE", ",", "\n", "**", "cfg", ".", "RPN", ".", "KWARGS", ")", "\n", "\n", "# build mask head", "\n", "", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "            ", "self", ".", "mask_head", "=", "get_mask_head", "(", "cfg", ".", "MASK", ".", "TYPE", ",", "\n", "**", "cfg", ".", "MASK", ".", "KWARGS", ")", "\n", "\n", "if", "cfg", ".", "REFINE", ".", "REFINE", ":", "\n", "                ", "self", ".", "refine_head", "=", "get_refine_head", "(", "cfg", ".", "REFINE", ".", "TYPE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.avg": [[44, 46], ["sum", "len"], "methods", ["None"], ["", "", "", "def", "avg", "(", "self", ",", "lst", ")", ":", "\n", "        ", "return", "sum", "(", "lst", ")", "/", "len", "(", "lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.weighted_avg": [[47, 52], ["range", "len"], "methods", ["None"], ["", "def", "weighted_avg", "(", "self", ",", "lst", ",", "weight", ")", ":", "\n", "        ", "s", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "weight", ")", ")", ":", "\n", "            ", "s", "+=", "lst", "[", "i", "]", "*", "weight", "[", "i", "]", "\n", "", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.template": [[53, 63], ["model_builder.ModelBuilder.backbone", "model_builder.ModelBuilder.neck", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range"], "methods", ["None"], ["", "def", "template", "(", "self", ",", "z", ")", ":", "\n", "        ", "zf", "=", "self", ".", "backbone", "(", "z", ")", "\n", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "            ", "zf", "=", "zf", "[", "-", "1", "]", "\n", "", "if", "cfg", ".", "ADJUST", ".", "ADJUST", ":", "\n", "            ", "zf", "=", "self", ".", "neck", "(", "zf", ")", "\n", "", "if", "cfg", ".", "RPN", ".", "RPN", ":", "\n", "            ", "self", ".", "zf", "=", "zf", "\n", "", "else", ":", "\n", "            ", "self", ".", "zf", "=", "torch", ".", "cat", "(", "[", "zf", "for", "_", "in", "range", "(", "3", ")", "]", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.template_short_term": [[64, 74], ["model_builder.ModelBuilder.backbone", "model_builder.ModelBuilder.neck", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range"], "methods", ["None"], ["", "", "def", "template_short_term", "(", "self", ",", "z_st", ")", ":", "\n", "        ", "zf_st", "=", "self", ".", "backbone", "(", "z_st", ")", "\n", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "            ", "zf_st", "=", "zf_st", "[", "-", "1", "]", "\n", "", "if", "cfg", ".", "ADJUST", ".", "ADJUST", ":", "\n", "            ", "zf_st", "=", "self", ".", "neck", "(", "zf_st", ")", "\n", "", "if", "cfg", ".", "RPN", ".", "RPN", ":", "\n", "            ", "self", ".", "zf_st", "=", "zf_st", "\n", "", "else", ":", "\n", "            ", "self", ".", "zf_st", "=", "torch", ".", "cat", "(", "[", "zf_st", "for", "_", "in", "range", "(", "3", ")", "]", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.instance": [[75, 95], ["model_builder.ModelBuilder.backbone", "model_builder.ModelBuilder.neck", "isinstance", "model_builder.ModelBuilder.weighted_avg", "model_builder.ModelBuilder.avg", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.weighted_avg", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.avg"], ["", "", "def", "instance", "(", "self", ",", "x", ")", ":", "\n", "        ", "xf", "=", "self", ".", "backbone", "(", "x", ")", "\n", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "            ", "xf", "=", "xf", "[", "-", "1", "]", "\n", "", "if", "cfg", ".", "ADJUST", ".", "ADJUST", ":", "\n", "            ", "xf", "=", "self", ".", "neck", "(", "xf", ")", "\n", "\n", "", "if", "not", "cfg", ".", "ADJUST", ".", "LAYER", ":", "\n", "            ", "if", "cfg", ".", "ADJUST", ".", "FUSE", "==", "'wavg'", ":", "\n", "                ", "cls_weight", "=", "self", ".", "rpn_head", ".", "cls_weight", "\n", "self", ".", "cf", "=", "self", ".", "weighted_avg", "(", "[", "cf", "for", "cf", "in", "xf", "]", ",", "cls_weight", ")", "\n", "", "elif", "cfg", ".", "ADJUST", ".", "FUSE", "==", "'avg'", ":", "\n", "                ", "self", ".", "cf", "=", "self", ".", "avg", "(", "[", "cf", "for", "cf", "in", "xf", "]", ")", "\n", "", "elif", "cfg", ".", "ADJUST", ".", "FUSE", "==", "'con'", ":", "\n", "                ", "self", ".", "cf", "=", "torch", ".", "cat", "(", "[", "cf", "for", "cf", "in", "xf", "]", ",", "dim", "=", "1", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "isinstance", "(", "xf", ",", "list", ")", ":", "\n", "                ", "self", ".", "cf", "=", "xf", "[", "cfg", ".", "ADJUST", ".", "LAYER", "-", "1", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "cf", "=", "xf", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.track": [[96, 146], ["model_builder.ModelBuilder.backbone", "model_builder.ModelBuilder.neck", "isinstance", "model_builder.ModelBuilder.rpn_head", "model_builder.ModelBuilder.size", "torch.conv2d().transpose", "torch.conv2d().transpose", "torch.conv2d().transpose", "model_builder.ModelBuilder.mask_head", "model_builder.ModelBuilder.weighted_avg", "model_builder.ModelBuilder.rpn_head", "model_builder.ModelBuilder.size", "torch.conv2d().transpose", "torch.conv2d().transpose", "torch.conv2d().transpose", "model_builder.ModelBuilder.avg", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_builder.ModelBuilder.view", "torch.conv2d", "torch.conv2d", "torch.conv2d", "model_builder.ModelBuilder.view"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.weighted_avg", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.avg", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d"], ["", "", "", "def", "track", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "xf", "=", "self", ".", "backbone", "(", "x", ")", "\n", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "            ", "self", ".", "xf", "=", "xf", "[", ":", "-", "1", "]", "\n", "xf", "=", "xf", "[", "-", "1", "]", "\n", "", "if", "cfg", ".", "ADJUST", ".", "ADJUST", ":", "\n", "            ", "xf", "=", "self", ".", "neck", "(", "xf", ")", "\n", "\n", "", "if", "not", "cfg", ".", "ADJUST", ".", "LAYER", ":", "\n", "            ", "if", "cfg", ".", "ADJUST", ".", "FUSE", "==", "'wavg'", ":", "\n", "                ", "cls_weight", "=", "self", ".", "rpn_head", ".", "cls_weight", "\n", "self", ".", "cf", "=", "self", ".", "weighted_avg", "(", "[", "cf", "for", "cf", "in", "xf", "]", ",", "cls_weight", ")", "\n", "", "elif", "cfg", ".", "ADJUST", ".", "FUSE", "==", "'avg'", ":", "\n", "                ", "self", ".", "cf", "=", "self", ".", "avg", "(", "[", "cf", "for", "cf", "in", "xf", "]", ")", "\n", "", "elif", "cfg", ".", "ADJUST", ".", "FUSE", "==", "'con'", ":", "\n", "                ", "self", ".", "cf", "=", "torch", ".", "cat", "(", "[", "cf", "for", "cf", "in", "xf", "]", ",", "dim", "=", "1", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "isinstance", "(", "xf", ",", "list", ")", ":", "\n", "                ", "self", ".", "cf", "=", "xf", "[", "cfg", ".", "ADJUST", ".", "LAYER", "-", "1", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "cf", "=", "xf", "\n", "\n", "", "", "if", "cfg", ".", "RPN", ".", "RPN", ":", "\n", "            ", "cls", ",", "loc", "=", "self", ".", "rpn_head", "(", "self", ".", "zf", ",", "xf", ")", "\n", "", "else", ":", "\n", "            ", "b", ",", "_", ",", "h", ",", "w", "=", "xf", ".", "size", "(", ")", "\n", "cls", "=", "F", ".", "conv2d", "(", "xf", ".", "view", "(", "1", ",", "-", "1", ",", "h", ",", "w", ")", ",", "self", ".", "zf", ",", "groups", "=", "b", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "            ", "mask", ",", "self", ".", "mask_corr_feature", "=", "self", ".", "mask_head", "(", "self", ".", "zf", ",", "xf", ")", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "            ", "if", "cfg", ".", "RPN", ".", "RPN", ":", "\n", "                ", "cls_st", ",", "loc_st", "=", "self", ".", "rpn_head", "(", "self", ".", "zf_st", ",", "xf", ")", "\n", "", "else", ":", "\n", "                ", "b", ",", "_", ",", "h", ",", "w", "=", "xf", ".", "size", "(", ")", "\n", "cls_st", "=", "F", ".", "conv2d", "(", "xf", ".", "view", "(", "1", ",", "-", "1", ",", "h", ",", "w", ")", ",", "self", ".", "zf_st", ",", "groups", "=", "b", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "", "return", "{", "\n", "'cls'", ":", "cls", ",", "\n", "'loc'", ":", "loc", "if", "cfg", ".", "RPN", ".", "RPN", "else", "None", ",", "\n", "'cls_st'", ":", "cls_st", ",", "\n", "'loc_st'", ":", "loc_st", "if", "cfg", ".", "RPN", ".", "RPN", "else", "None", ",", "\n", "'mask'", ":", "mask", "if", "cfg", ".", "MASK", ".", "MASK", "else", "None", "\n", "}", "\n", "", "else", ":", "\n", "            ", "return", "{", "\n", "'cls'", ":", "cls", ",", "\n", "'loc'", ":", "loc", "if", "cfg", ".", "RPN", ".", "RPN", "else", "None", ",", "\n", "'mask'", ":", "mask", "if", "cfg", ".", "MASK", ".", "MASK", "else", "None", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.mask_refine": [[148, 150], ["model_builder.ModelBuilder.refine_head"], "methods", ["None"], ["", "", "def", "mask_refine", "(", "self", ",", "pos", ")", ":", "\n", "        ", "return", "self", ".", "refine_head", "(", "self", ".", "xf", ",", "self", ".", "mask_corr_feature", ",", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.log_softmax": [[151, 157], ["torch.log_softmax.size", "torch.log_softmax.view", "torch.log_softmax.permute().contiguous", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax.permute"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.log_softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.log_softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.log_softmax"], ["", "def", "log_softmax", "(", "self", ",", "cls", ")", ":", "\n", "        ", "b", ",", "a2", ",", "h", ",", "w", "=", "cls", ".", "size", "(", ")", "\n", "cls", "=", "cls", ".", "view", "(", "b", ",", "2", ",", "a2", "//", "2", ",", "h", ",", "w", ")", "\n", "cls", "=", "cls", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "4", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "cls", "=", "F", ".", "log_softmax", "(", "cls", ",", "dim", "=", "4", ")", "\n", "return", "cls", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.forward": [[158, 210], ["data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "model_builder.ModelBuilder.backbone", "model_builder.ModelBuilder.backbone", "model_builder.ModelBuilder.neck", "model_builder.ModelBuilder.neck", "model_builder.ModelBuilder.rpn_head", "model_builder.ModelBuilder.log_softmax", "pysot.models.loss.select_cross_entropy_loss", "pysot.models.loss.weight_l1_loss", "model_builder.ModelBuilder.size", "model_builder.ModelBuilder.transpose", "model_builder.ModelBuilder.log_softmax", "pysot.models.loss.select_cross_entropy_loss", "model_builder.ModelBuilder.mask_head", "torch.conv2d", "torch.conv2d", "torch.conv2d", "model_builder.ModelBuilder.view"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.log_softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.loss.select_cross_entropy_loss", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.loss.weight_l1_loss", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.log_softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.loss.select_cross_entropy_loss", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "\"\"\" only used in training\n        \"\"\"", "\n", "template", "=", "data", "[", "'template'", "]", ".", "cuda", "(", ")", "\n", "search", "=", "data", "[", "'search'", "]", ".", "cuda", "(", ")", "\n", "label_cls", "=", "data", "[", "'label_cls'", "]", ".", "cuda", "(", ")", "\n", "label_loc", "=", "data", "[", "'label_loc'", "]", ".", "cuda", "(", ")", "\n", "label_loc_weight", "=", "data", "[", "'label_loc_weight'", "]", ".", "cuda", "(", ")", "\n", "\n", "# get feature", "\n", "zf", "=", "self", ".", "backbone", "(", "template", ")", "\n", "xf", "=", "self", ".", "backbone", "(", "search", ")", "\n", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "            ", "zf", "=", "zf", "[", "-", "1", "]", "\n", "self", ".", "xf_refine", "=", "xf", "[", ":", "-", "1", "]", "\n", "xf", "=", "xf", "[", "-", "1", "]", "\n", "", "if", "cfg", ".", "ADJUST", ".", "ADJUST", ":", "\n", "            ", "zf", "=", "self", ".", "neck", "(", "zf", ")", "\n", "xf", "=", "self", ".", "neck", "(", "xf", ")", "\n", "\n", "", "if", "cfg", ".", "RPN", ".", "RPN", ":", "\n", "            ", "cls", ",", "loc", "=", "self", ".", "rpn_head", "(", "zf", ",", "xf", ")", "\n", "\n", "# get loss", "\n", "cls", "=", "self", ".", "log_softmax", "(", "cls", ")", "\n", "cls_loss", "=", "select_cross_entropy_loss", "(", "cls", ",", "label_cls", ")", "\n", "loc_loss", "=", "weight_l1_loss", "(", "loc", ",", "label_loc", ",", "label_loc_weight", ")", "\n", "\n", "outputs", "=", "{", "}", "\n", "outputs", "[", "'total_loss'", "]", "=", "cfg", ".", "TRAIN", ".", "CLS_WEIGHT", "*", "cls_loss", "+", "cfg", ".", "TRAIN", ".", "LOC_WEIGHT", "*", "loc_loss", "\n", "outputs", "[", "'cls_loss'", "]", "=", "cls_loss", "\n", "outputs", "[", "'loc_loss'", "]", "=", "loc_loss", "\n", "", "else", ":", "\n", "            ", "b", ",", "_", ",", "h", ",", "w", "=", "xf", ".", "size", "(", ")", "\n", "cls", "=", "F", ".", "conv2d", "(", "xf", ".", "view", "(", "1", ",", "-", "1", ",", "h", ",", "w", ")", ",", "zf", ",", "groups", "=", "b", ")", "*", "1e-3", "+", "self", ".", "backbone", ".", "corr_bias", "\n", "cls", "=", "cls", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "# get loss", "\n", "cls", "=", "self", ".", "log_softmax", "(", "cls", ")", "\n", "cls_loss", "=", "select_cross_entropy_loss", "(", "cls", ",", "label_cls", ")", "\n", "\n", "outputs", "=", "{", "}", "\n", "outputs", "[", "'total_loss'", "]", "=", "cls_loss", "\n", "\n", "", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "# TODO", "\n", "            ", "mask", ",", "self", ".", "mask_corr_feature", "=", "self", ".", "mask_head", "(", "zf", ",", "xf", ")", "\n", "mask_loss", "=", "None", "\n", "outputs", "[", "'total_loss'", "]", "+=", "cfg", ".", "TRAIN", ".", "MASK_WEIGHT", "*", "mask_loss", "\n", "outputs", "[", "'mask_loss'", "]", "=", "mask_loss", "\n", "", "return", "outputs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.RPN.__init__": [[16, 18], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "RPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.RPN.forward": [[19, 21], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "x_f", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.UPChannelRPN.__init__": [[23, 40], ["rpn.RPN.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "anchor_num", "=", "5", ",", "feature_in", "=", "256", ")", ":", "\n", "        ", "super", "(", "UPChannelRPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "cls_output", "=", "2", "*", "anchor_num", "\n", "loc_output", "=", "4", "*", "anchor_num", "\n", "\n", "self", ".", "template_cls_conv", "=", "nn", ".", "Conv2d", "(", "feature_in", ",", "\n", "feature_in", "*", "cls_output", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "template_loc_conv", "=", "nn", ".", "Conv2d", "(", "feature_in", ",", "\n", "feature_in", "*", "loc_output", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "search_cls_conv", "=", "nn", ".", "Conv2d", "(", "feature_in", ",", "\n", "feature_in", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "search_loc_conv", "=", "nn", ".", "Conv2d", "(", "feature_in", ",", "\n", "feature_in", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "loc_adjust", "=", "nn", ".", "Conv2d", "(", "loc_output", ",", "loc_output", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.UPChannelRPN.forward": [[42, 52], ["rpn.UPChannelRPN.template_cls_conv", "rpn.UPChannelRPN.template_loc_conv", "rpn.UPChannelRPN.search_cls_conv", "rpn.UPChannelRPN.search_loc_conv", "pysot.core.xcorr.xcorr_fast", "rpn.UPChannelRPN.loc_adjust", "pysot.core.xcorr.xcorr_fast"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.core.xcorr.xcorr_fast", "home.repos.pwc.inspect_result.shallowtoil_DROL.core.xcorr.xcorr_fast"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "x_f", ")", ":", "\n", "        ", "cls_kernel", "=", "self", ".", "template_cls_conv", "(", "z_f", ")", "\n", "loc_kernel", "=", "self", ".", "template_loc_conv", "(", "z_f", ")", "\n", "\n", "cls_feature", "=", "self", ".", "search_cls_conv", "(", "x_f", ")", "\n", "loc_feature", "=", "self", ".", "search_loc_conv", "(", "x_f", ")", "\n", "\n", "cls", "=", "xcorr_fast", "(", "cls_feature", ",", "cls_kernel", ")", "\n", "loc", "=", "self", ".", "loc_adjust", "(", "xcorr_fast", "(", "loc_feature", ",", "loc_kernel", ")", ")", "\n", "return", "cls", ",", "loc", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.DepthwiseXCorr.__init__": [[54, 83], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "hidden", ",", "out_channels", ",", "fused", "=", "'none'", ",", "kernel_size", "=", "3", ",", "hidden_kernel_size", "=", "5", ")", ":", "\n", "        ", "super", "(", "DepthwiseXCorr", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fused", "=", "fused", "\n", "self", ".", "conv_kernel", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "hidden", ",", "kernel_size", "=", "kernel_size", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv_search", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "hidden", ",", "kernel_size", "=", "kernel_size", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "if", "self", ".", "fused", "==", "'con'", ":", "\n", "            ", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "hidden", "*", "2", ",", "hidden", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "hidden", ",", "out_channels", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "hidden", ",", "hidden", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "hidden", ",", "out_channels", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n", "", "if", "self", ".", "fused", "!=", "'none'", ":", "\n", "            ", "self", ".", "conv_raw", "=", "nn", ".", "Conv2d", "(", "hidden", ",", "hidden", ",", "kernel_size", "=", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.DepthwiseXCorr.forward": [[84, 100], ["rpn.DepthwiseXCorr.conv_kernel", "rpn.DepthwiseXCorr.conv_search", "pysot.core.xcorr.xcorr_depthwise", "rpn.DepthwiseXCorr.head", "rpn.DepthwiseXCorr.conv_raw", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.core.xcorr.xcorr_depthwise", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul"], ["", "", "def", "forward", "(", "self", ",", "kernel", ",", "search", ")", ":", "\n", "        ", "kernel", "=", "self", ".", "conv_kernel", "(", "kernel", ")", "\n", "search", "=", "self", ".", "conv_search", "(", "search", ")", "\n", "feature", "=", "xcorr_depthwise", "(", "search", ",", "kernel", ")", "\n", "if", "self", ".", "fused", "!=", "'none'", ":", "\n", "            ", "raw", "=", "self", ".", "conv_raw", "(", "search", ")", "\n", "if", "self", ".", "fused", "==", "'con'", ":", "\n", "                ", "feature", "=", "torch", ".", "cat", "(", "(", "feature", ",", "raw", ")", ",", "dim", "=", "1", ")", "\n", "", "elif", "self", ".", "fused", "==", "'mod'", ":", "\n", "                ", "feature", "=", "torch", ".", "matmul", "(", "feature", ",", "raw", ")", "\n", "", "elif", "self", ".", "fused", "==", "'avg'", ":", "\n", "                ", "feature", "=", "feature", "+", "raw", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", ")", "\n", "", "", "out", "=", "self", ".", "head", "(", "feature", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.DepthwiseRPN.__init__": [[102, 106], ["rpn.RPN.__init__", "rpn.DepthwiseXCorr", "rpn.DepthwiseXCorr"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "anchor_num", "=", "5", ",", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "fused", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "DepthwiseRPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cls", "=", "DepthwiseXCorr", "(", "in_channels", ",", "out_channels", ",", "2", "*", "anchor_num", ",", "fused", ")", "\n", "self", ".", "loc", "=", "DepthwiseXCorr", "(", "in_channels", ",", "out_channels", ",", "4", "*", "anchor_num", ",", "fused", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.DepthwiseRPN.forward": [[107, 111], ["rpn.DepthwiseRPN.cls", "rpn.DepthwiseRPN.loc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "x_f", ")", ":", "\n", "        ", "cls", "=", "self", ".", "cls", "(", "z_f", ",", "x_f", ")", "\n", "loc", "=", "self", ".", "loc", "(", "z_f", ",", "x_f", ")", "\n", "return", "cls", ",", "loc", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.MultiRPN.__init__": [[113, 122], ["rpn.RPN.__init__", "range", "len", "rpn.MultiRPN.add_module", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "rpn.DepthwiseRPN", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "str", "len", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "anchor_num", ",", "in_channels", ",", "weighted", "=", "False", ",", "fused", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "MultiRPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weighted", "=", "weighted", "\n", "for", "i", "in", "range", "(", "len", "(", "in_channels", ")", ")", ":", "\n", "            ", "self", ".", "add_module", "(", "'rpn'", "+", "str", "(", "i", "+", "2", ")", ",", "\n", "DepthwiseRPN", "(", "anchor_num", ",", "in_channels", "[", "i", "]", ",", "in_channels", "[", "i", "]", ",", "fused", ")", ")", "\n", "", "if", "self", ".", "weighted", ":", "\n", "            ", "self", ".", "cls_weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "len", "(", "in_channels", ")", ")", ")", "\n", "self", ".", "loc_weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "len", "(", "in_channels", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.rpn.MultiRPN.forward": [[123, 149], ["enumerate", "zip", "getattr", "getattr.", "cls.append", "loc.append", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "range", "sum", "len", "len", "getattr.MultiRPN.forward.weighted_avg"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.weighted_avg"], ["", "", "def", "forward", "(", "self", ",", "z_fs", ",", "x_fs", ")", ":", "\n", "        ", "cls", "=", "[", "]", "\n", "loc", "=", "[", "]", "\n", "for", "idx", ",", "(", "z_f", ",", "x_f", ")", "in", "enumerate", "(", "zip", "(", "z_fs", ",", "x_fs", ")", ",", "start", "=", "2", ")", ":", "\n", "            ", "rpn", "=", "getattr", "(", "self", ",", "'rpn'", "+", "str", "(", "idx", ")", ")", "\n", "c", ",", "l", "=", "rpn", "(", "z_f", ",", "x_f", ")", "\n", "cls", ".", "append", "(", "c", ")", "\n", "loc", ".", "append", "(", "l", ")", "\n", "\n", "", "if", "self", ".", "weighted", ":", "\n", "            ", "cls_weight", "=", "F", ".", "softmax", "(", "self", ".", "cls_weight", ",", "0", ")", "\n", "loc_weight", "=", "F", ".", "softmax", "(", "self", ".", "loc_weight", ",", "0", ")", "\n", "\n", "", "def", "avg", "(", "lst", ")", ":", "\n", "            ", "return", "sum", "(", "lst", ")", "/", "len", "(", "lst", ")", "\n", "\n", "", "def", "weighted_avg", "(", "lst", ",", "weight", ")", ":", "\n", "            ", "s", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "weight", ")", ")", ":", "\n", "                ", "s", "+=", "lst", "[", "i", "]", "*", "weight", "[", "i", "]", "\n", "", "return", "s", "\n", "\n", "", "if", "self", ".", "weighted", ":", "\n", "            ", "return", "weighted_avg", "(", "cls", ",", "cls_weight", ")", ",", "weighted_avg", "(", "loc", ",", "loc_weight", ")", "\n", "", "else", ":", "\n", "            ", "return", "avg", "(", "cls", ")", ",", "avg", "(", "loc", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.__init__.get_rpn_head": [[26, 28], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.__init__.get_mask_head": [[30, 32], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.__init__.get_refine_head": [[33, 35], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.mask.MaskCorr.__init__": [[16, 21], ["pysot.models.head.rpn.DepthwiseXCorr.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "hidden", ",", "out_channels", ",", "\n", "fused", "=", "'none'", ",", "kernel_size", "=", "3", ",", "hidden_kernel_size", "=", "5", ")", ":", "\n", "        ", "super", "(", "MaskCorr", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "hidden", ",", "\n", "out_channels", ",", "fused", ",", "\n", "kernel_size", ",", "hidden_kernel_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.mask.MaskCorr.forward": [[22, 28], ["mask.MaskCorr.conv_kernel", "mask.MaskCorr.conv_search", "pysot.core.xcorr.xcorr_depthwise", "mask.MaskCorr.head"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.core.xcorr.xcorr_depthwise"], ["", "def", "forward", "(", "self", ",", "kernel", ",", "search", ")", ":", "\n", "        ", "kernel", "=", "self", ".", "conv_kernel", "(", "kernel", ")", "\n", "search", "=", "self", ".", "conv_search", "(", "search", ")", "\n", "feature", "=", "xcorr_depthwise", "(", "search", ",", "kernel", ")", "\n", "out", "=", "self", ".", "head", "(", "feature", ")", "\n", "return", "out", ",", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.mask.Refine.__init__": [[31, 74], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Refine", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "v0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "16", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", ",", "4", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "v1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "16", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "v2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "128", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "h2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "h1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "h0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", ",", "4", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", ",", "4", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "256", ",", "32", ",", "15", ",", "15", ")", "\n", "self", ".", "post0", "=", "nn", ".", "Conv2d", "(", "32", ",", "16", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "post1", "=", "nn", ".", "Conv2d", "(", "16", ",", "4", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "post2", "=", "nn", ".", "Conv2d", "(", "4", ",", "1", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.head.mask.Refine.forward": [[75, 88], ["corr_feature[].view", "mask.Refine.deconv", "mask.Refine.post0", "mask.Refine.post1", "mask.Refine.post2", "out.view.view.view", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "mask.Refine.h2", "mask.Refine.v2", "mask.Refine.h1", "mask.Refine.v1", "mask.Refine.h0", "mask.Refine.v0"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "f", ",", "corr_feature", ",", "pos", ")", ":", "\n", "        ", "p0", "=", "F", ".", "pad", "(", "f", "[", "0", "]", ",", "[", "16", ",", "16", ",", "16", ",", "16", "]", ")", "[", ":", ",", ":", ",", "4", "*", "pos", "[", "0", "]", ":", "4", "*", "pos", "[", "0", "]", "+", "61", ",", "4", "*", "pos", "[", "1", "]", ":", "4", "*", "pos", "[", "1", "]", "+", "61", "]", "\n", "p1", "=", "F", ".", "pad", "(", "f", "[", "1", "]", ",", "[", "8", ",", "8", ",", "8", ",", "8", "]", ")", "[", ":", ",", ":", ",", "2", "*", "pos", "[", "0", "]", ":", "2", "*", "pos", "[", "0", "]", "+", "31", ",", "2", "*", "pos", "[", "1", "]", ":", "2", "*", "pos", "[", "1", "]", "+", "31", "]", "\n", "p2", "=", "F", ".", "pad", "(", "f", "[", "2", "]", ",", "[", "4", ",", "4", ",", "4", ",", "4", "]", ")", "[", ":", ",", ":", ",", "pos", "[", "0", "]", ":", "pos", "[", "0", "]", "+", "15", ",", "pos", "[", "1", "]", ":", "pos", "[", "1", "]", "+", "15", "]", "\n", "\n", "p3", "=", "corr_feature", "[", ":", ",", ":", ",", "pos", "[", "0", "]", ",", "pos", "[", "1", "]", "]", ".", "view", "(", "-", "1", ",", "256", ",", "1", ",", "1", ")", "\n", "\n", "out", "=", "self", ".", "deconv", "(", "p3", ")", "\n", "out", "=", "self", ".", "post0", "(", "F", ".", "upsample", "(", "self", ".", "h2", "(", "out", ")", "+", "self", ".", "v2", "(", "p2", ")", ",", "size", "=", "(", "31", ",", "31", ")", ")", ")", "\n", "out", "=", "self", ".", "post1", "(", "F", ".", "upsample", "(", "self", ".", "h1", "(", "out", ")", "+", "self", ".", "v1", "(", "p1", ")", ",", "size", "=", "(", "61", ",", "61", ")", ")", ")", "\n", "out", "=", "self", ".", "post2", "(", "F", ".", "upsample", "(", "self", ".", "h0", "(", "out", ")", "+", "self", ".", "v0", "(", "p0", ")", ",", "size", "=", "(", "127", ",", "127", ")", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "127", "*", "127", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.BasicBlock.__init__": [[19, 42], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "resnet_atrous.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__", "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "\n", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "padding", "=", "2", "-", "stride", "\n", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "padding", "=", "dilation", "\n", "\n", "", "dd", "=", "dilation", "\n", "pad", "=", "padding", "\n", "if", "downsample", "is", "not", "None", "and", "dilation", ">", "1", ":", "\n", "            ", "dd", "=", "dilation", "//", "2", "\n", "pad", "=", "dd", "\n", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "\n", "stride", "=", "stride", ",", "dilation", "=", "dd", ",", "bias", "=", "False", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "pad", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.BasicBlock.forward": [[43, 60], ["resnet_atrous.BasicBlock.conv1", "resnet_atrous.BasicBlock.bn1", "resnet_atrous.BasicBlock.relu", "resnet_atrous.BasicBlock.conv2", "resnet_atrous.BasicBlock.bn2", "resnet_atrous.BasicBlock.relu", "resnet_atrous.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.Bottleneck.__init__": [[65, 88], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "\n", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "padding", "=", "2", "-", "stride", "\n", "if", "downsample", "is", "not", "None", "and", "dilation", ">", "1", ":", "\n", "            ", "dilation", "=", "dilation", "//", "2", "\n", "padding", "=", "dilation", "\n", "\n", "", "assert", "stride", "==", "1", "or", "dilation", "==", "1", ",", "\"stride and dilation must have one equals to zero at least\"", "\n", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "padding", "=", "dilation", "\n", "", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.Bottleneck.forward": [[89, 111], ["resnet_atrous.Bottleneck.conv1", "resnet_atrous.Bottleneck.bn1", "resnet_atrous.Bottleneck.relu", "resnet_atrous.Bottleneck.conv2", "resnet_atrous.Bottleneck.bn2", "resnet_atrous.Bottleneck.relu", "resnet_atrous.Bottleneck.conv3", "resnet_atrous.Bottleneck.bn3", "resnet_atrous.Bottleneck.relu", "resnet_atrous.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.ResNet.__init__": [[114, 151], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet_atrous.ResNet._make_layer", "resnet_atrous.ResNet._make_layer", "resnet_atrous.ResNet.modules", "resnet_atrous.ResNet._make_layer", "resnet_atrous.ResNet._make_layer", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__", "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.ResNet._make_layer", "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.ResNet._make_layer", "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.ResNet._make_layer", "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "used_layers", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "# 3", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "feature_size", "=", "128", "*", "block", ".", "expansion", "\n", "self", ".", "used_layers", "=", "used_layers", "\n", "layer3", "=", "True", "if", "3", "in", "used_layers", "else", "False", "\n", "layer4", "=", "True", "if", "4", "in", "used_layers", "else", "False", "\n", "\n", "if", "layer3", ":", "\n", "            ", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "\n", "stride", "=", "1", ",", "dilation", "=", "2", ")", "# 15x15, 7x7", "\n", "self", ".", "feature_size", "=", "(", "256", "+", "128", ")", "*", "block", ".", "expansion", "\n", "", "else", ":", "\n", "            ", "self", ".", "layer3", "=", "lambda", "x", ":", "x", "# identity", "\n", "\n", "", "if", "layer4", ":", "\n", "            ", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "\n", "stride", "=", "1", ",", "dilation", "=", "4", ")", "# 7x7, 3x3", "\n", "self", ".", "feature_size", "=", "512", "*", "block", ".", "expansion", "\n", "", "else", ":", "\n", "            ", "self", ".", "layer4", "=", "lambda", "x", ":", "x", "# identity", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.ResNet._make_layer": [[152, 184], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "dd", "=", "dilation", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "if", "stride", "==", "1", "and", "dilation", "==", "1", ":", "\n", "                ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "if", "dilation", ">", "1", ":", "\n", "                    ", "dd", "=", "dilation", "//", "2", "\n", "padding", "=", "dd", "\n", "", "else", ":", "\n", "                    ", "dd", "=", "1", "\n", "padding", "=", "0", "\n", "", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "bias", "=", "False", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dd", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "\n", "downsample", ",", "dilation", "=", "dilation", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.ResNet.forward": [[185, 201], ["resnet_atrous.ResNet.conv1", "resnet_atrous.ResNet.bn1", "resnet_atrous.ResNet.relu", "resnet_atrous.ResNet.maxpool", "resnet_atrous.ResNet.layer1", "resnet_atrous.ResNet.layer2", "resnet_atrous.ResNet.layer3", "resnet_atrous.ResNet.layer4", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x_", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x_", ")", "\n", "\n", "p1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "p2", "=", "self", ".", "layer2", "(", "p1", ")", "\n", "p3", "=", "self", ".", "layer3", "(", "p2", ")", "\n", "p4", "=", "self", ".", "layer4", "(", "p3", ")", "\n", "out", "=", "[", "x_", ",", "p1", ",", "p2", ",", "p3", ",", "p4", "]", "\n", "out", "=", "[", "out", "[", "i", "]", "for", "i", "in", "self", ".", "used_layers", "]", "\n", "if", "len", "(", "out", ")", "==", "1", ":", "\n", "            ", "return", "out", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.conv3x3": [[10, 14], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.resnet18": [[203, 209], ["resnet_atrous.ResNet"], "function", ["None"], ["", "", "", "def", "resnet18", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.resnet34": [[211, 217], ["resnet_atrous.ResNet"], "function", ["None"], ["", "def", "resnet34", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.resnet_atrous.resnet50": [[219, 225], ["resnet_atrous.ResNet"], "function", ["None"], ["", "def", "resnet50", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.mobile_v2.InvertedResidual.__init__": [[27, 51], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", ",", "expand_ratio", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "InvertedResidual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "self", ".", "use_res_connect", "=", "self", ".", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "\n", "padding", "=", "2", "-", "stride", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "padding", "=", "dilation", "\n", "\n", "", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "inp", "*", "expand_ratio", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "inp", "*", "expand_ratio", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "inp", "*", "expand_ratio", ",", "inp", "*", "expand_ratio", ",", "3", ",", "\n", "stride", ",", "padding", ",", "dilation", "=", "dilation", ",", "\n", "groups", "=", "inp", "*", "expand_ratio", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "inp", "*", "expand_ratio", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "inp", "*", "expand_ratio", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.mobile_v2.InvertedResidual.forward": [[53, 58], ["mobile_v2.InvertedResidual.conv", "mobile_v2.InvertedResidual.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "use_res_connect", ":", "\n", "            ", "return", "x", "+", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.mobile_v2.MobileNetV2.__init__": [[61, 122], ["torch.Sequential.__init__", "int", "mobile_v2.MobileNetV2.add_module", "enumerate", "int", "int", "mobile_v2.conv_bn", "int", "range", "mobile_v2.MobileNetV2.add_module", "torch.Sequential", "torch.Sequential", "layers.append", "layers.append", "max", "mobile_v2.InvertedResidual", "mobile_v2.InvertedResidual"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__", "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.mobile_v2.conv_bn"], ["    ", "def", "__init__", "(", "self", ",", "width_mult", "=", "1.0", ",", "used_layers", "=", "[", "3", ",", "5", ",", "7", "]", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "interverted_residual_setting", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "# 0,2,3,4,6", "\n", "\n", "self", ".", "interverted_residual_setting", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", ",", "1", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "1", ",", "2", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", ",", "2", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "1", ",", "4", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", ",", "4", "]", ",", "\n", "]", "\n", "\n", "self", ".", "channels", "=", "[", "24", ",", "32", ",", "96", ",", "320", "]", "\n", "self", ".", "channels", "=", "[", "int", "(", "c", "*", "width_mult", ")", "for", "c", "in", "self", ".", "channels", "]", "\n", "\n", "input_channel", "=", "int", "(", "32", "*", "width_mult", ")", "\n", "self", ".", "last_channel", "=", "int", "(", "1280", "*", "width_mult", ")", "if", "width_mult", ">", "1.0", "else", "1280", "\n", "\n", "self", ".", "add_module", "(", "'layer0'", ",", "conv_bn", "(", "3", ",", "input_channel", ",", "2", ",", "0", ")", ")", "\n", "\n", "last_dilation", "=", "1", "\n", "\n", "self", ".", "used_layers", "=", "used_layers", "\n", "\n", "for", "idx", ",", "(", "t", ",", "c", ",", "n", ",", "s", ",", "d", ")", "in", "enumerate", "(", "self", ".", "interverted_residual_setting", ",", "start", "=", "1", ")", ":", "\n", "            ", "output_channel", "=", "int", "(", "c", "*", "width_mult", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "if", "d", "==", "last_dilation", ":", "\n", "                        ", "dd", "=", "d", "\n", "", "else", ":", "\n", "                        ", "dd", "=", "max", "(", "d", "//", "2", ",", "1", ")", "\n", "", "layers", ".", "append", "(", "InvertedResidual", "(", "input_channel", ",", "\n", "output_channel", ",", "s", ",", "t", ",", "dd", ")", ")", "\n", "", "else", ":", "\n", "                    ", "layers", ".", "append", "(", "InvertedResidual", "(", "input_channel", ",", "\n", "output_channel", ",", "1", ",", "t", ",", "d", ")", ")", "\n", "", "input_channel", "=", "output_channel", "\n", "\n", "", "last_dilation", "=", "d", "\n", "\n", "self", ".", "add_module", "(", "'layer%d'", "%", "(", "idx", ")", ",", "nn", ".", "Sequential", "(", "*", "layers", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.mobile_v2.MobileNetV2.forward": [[123, 132], ["range", "outputs.append", "getattr"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outputs", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "8", ")", ":", "\n", "            ", "name", "=", "\"layer%d\"", "%", "idx", "\n", "x", "=", "getattr", "(", "self", ",", "name", ")", "(", "x", ")", "\n", "outputs", ".", "append", "(", "x", ")", "\n", "", "p0", ",", "p1", ",", "p2", ",", "p3", ",", "p4", "=", "[", "outputs", "[", "i", "]", "for", "i", "in", "[", "1", ",", "2", ",", "3", ",", "5", ",", "7", "]", "]", "\n", "out", "=", "[", "outputs", "[", "i", "]", "for", "i", "in", "self", ".", "used_layers", "]", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.mobile_v2.conv_bn": [[10, 15], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["def", "conv_bn", "(", "inp", ",", "oup", ",", "stride", ",", "padding", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "3", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.mobile_v2.conv_1x1_bn": [[18, 23], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["", "def", "conv_1x1_bn", "(", "inp", ",", "oup", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.mobile_v2.mobilenetv2": [[134, 137], ["mobile_v2.MobileNetV2"], "function", ["None"], ["", "", "def", "mobilenetv2", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV2", "(", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.alexnet.AlexNetLegacy.__init__": [[12, 35], ["list", "torch.Module.__init__", "torch.Sequential", "torch.Sequential", "map", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "int"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "width_mult", "=", "1", ")", ":", "\n", "        ", "configs", "=", "list", "(", "map", "(", "lambda", "x", ":", "3", "if", "x", "==", "3", "else", "\n", "int", "(", "x", "*", "width_mult", ")", ",", "AlexNet", ".", "configs", ")", ")", "\n", "super", "(", "AlexNetLegacy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "0", "]", ",", "configs", "[", "1", "]", ",", "kernel_size", "=", "11", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "1", "]", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "1", "]", ",", "configs", "[", "2", "]", ",", "kernel_size", "=", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "2", "]", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "2", "]", ",", "configs", "[", "3", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "3", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "3", "]", ",", "configs", "[", "4", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "4", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "4", "]", ",", "configs", "[", "5", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "5", "]", ")", ",", "\n", ")", "\n", "self", ".", "feature_size", "=", "configs", "[", "5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.alexnet.AlexNetLegacy.forward": [[36, 39], ["alexnet.AlexNetLegacy.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.alexnet.AlexNetLegacy2.__init__": [[41, 61], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "AlexNetLegacy2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "96", ",", "11", ",", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "96", ",", "256", ",", "5", ",", "1", ",", "groups", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "384", ",", "3", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "384", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "384", ",", "384", ",", "3", ",", "1", ",", "groups", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "384", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "384", ",", "256", ",", "3", ",", "1", ",", "groups", "=", "2", ")", "\n", ")", "\n", "self", ".", "corr_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.alexnet.AlexNetLegacy2.forward": [[62, 65], ["alexnet.AlexNetLegacy2.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.alexnet.AlexNet.__init__": [[69, 101], ["list", "torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "map", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "int"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "width_mult", "=", "1", ")", ":", "\n", "        ", "configs", "=", "list", "(", "map", "(", "lambda", "x", ":", "3", "if", "x", "==", "3", "else", "\n", "int", "(", "x", "*", "width_mult", ")", ",", "AlexNet", ".", "configs", ")", ")", "\n", "super", "(", "AlexNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "0", "]", ",", "configs", "[", "1", "]", ",", "kernel_size", "=", "11", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "1", "]", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "1", "]", ",", "configs", "[", "2", "]", ",", "kernel_size", "=", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "2", "]", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "layer3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "2", "]", ",", "configs", "[", "3", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "3", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "layer4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "3", "]", ",", "configs", "[", "4", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "4", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "layer5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "configs", "[", "4", "]", ",", "configs", "[", "5", "]", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "configs", "[", "5", "]", ")", ",", "\n", ")", "\n", "self", ".", "feature_size", "=", "configs", "[", "5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.alexnet.AlexNet.forward": [[102, 109], ["alexnet.AlexNet.layer1", "alexnet.AlexNet.layer2", "alexnet.AlexNet.layer3", "alexnet.AlexNet.layer4", "alexnet.AlexNet.layer5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "layer5", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.alexnet.alexnetlegacy": [[111, 113], ["alexnet.AlexNetLegacy"], "function", ["None"], ["", "", "def", "alexnetlegacy", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "AlexNetLegacy", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.alexnet.alexnetlegacy2": [[114, 116], ["alexnet.AlexNetLegacy2"], "function", ["None"], ["", "def", "alexnetlegacy2", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "AlexNetLegacy2", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.alexnet.alexnet": [[117, 119], ["alexnet.AlexNet"], "function", ["None"], ["", "def", "alexnet", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "AlexNet", "(", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.backbone.__init__.get_backbone": [[23, 25], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.neck.neck.AdjustLayer.__init__": [[12, 17], ["torch.Module.__init__", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "AdjustLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.neck.neck.AdjustLayer.forward": [[19, 26], ["neck.AdjustLayer.downsample", "neck.AdjustLayer.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "if", "x", ".", "size", "(", "3", ")", "<", "20", ":", "\n", "            ", "l", "=", "4", "\n", "r", "=", "l", "+", "7", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "l", ":", "r", ",", "l", ":", "r", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.neck.neck.AdjustAllLayer.__init__": [[29, 38], ["torch.Module.__init__", "len", "neck.AdjustLayer", "range", "neck.AdjustAllLayer.add_module", "neck.AdjustLayer", "str"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "AdjustAllLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num", "=", "len", "(", "out_channels", ")", "\n", "if", "self", ".", "num", "==", "1", ":", "\n", "            ", "self", ".", "downsample", "=", "AdjustLayer", "(", "in_channels", "[", "0", "]", ",", "out_channels", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "num", ")", ":", "\n", "                ", "self", ".", "add_module", "(", "'downsample'", "+", "str", "(", "i", "+", "2", ")", ",", "\n", "AdjustLayer", "(", "in_channels", "[", "i", "]", ",", "out_channels", "[", "i", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.neck.neck.AdjustAllLayer.forward": [[39, 48], ["neck.AdjustAllLayer.downsample", "range", "getattr", "out.append", "getattr.", "str"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "if", "self", ".", "num", "==", "1", ":", "\n", "            ", "return", "self", ".", "downsample", "(", "features", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num", ")", ":", "\n", "                ", "adj_layer", "=", "getattr", "(", "self", ",", "'downsample'", "+", "str", "(", "i", "+", "2", ")", ")", "\n", "out", ".", "append", "(", "adj_layer", "(", "features", "[", "i", "]", ")", ")", "\n", "", "return", "out", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.neck.__init__.get_neck": [[19, 21], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamfc_tracker.SiamFCTracker.__init__": [[20, 36], ["pysot.tracker.base_tracker.SiameseTracker.__init__", "[].dot().astype", "numpy.sum", "siamfc_tracker.SiamFCTracker.model.eval", "pysot.tracker.classifier.base_classifier.BaseClassifier", "[].dot", "numpy.hanning", "numpy.hanning"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.eval"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "super", "(", "SiamFCTracker", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "score_size", "=", "(", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "-", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ")", "//", "cfg", ".", "TRACK", ".", "TOTAL_STRIDE", "+", "1", "+", "cfg", ".", "TRACK", ".", "BASE_SIZE", "\n", "self", ".", "interp_score_size", "=", "self", ".", "score_size", "*", "cfg", ".", "TRACK", ".", "RESPONSE_UP_STRIDE", "\n", "hanning", "=", "np", ".", "hanning", "(", "self", ".", "interp_score_size", ")", "[", ":", ",", "np", ".", "newaxis", "]", ".", "dot", "(", "\n", "np", ".", "hanning", "(", "self", ".", "interp_score_size", ")", "[", "np", ".", "newaxis", ",", ":", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "hanning", "/=", "np", ".", "sum", "(", "hanning", ")", "\n", "self", ".", "window", "=", "hanning", "\n", "self", ".", "lost_count", "=", "0", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "self", ".", "classifier", "=", "BaseClassifier", "(", "self", ".", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamfc_tracker.SiamFCTracker._bbox_clip": [[37, 43], ["max", "max", "max", "max", "min", "min", "min", "min"], "methods", ["None"], ["", "", "def", "_bbox_clip", "(", "self", ",", "cx", ",", "cy", ",", "width", ",", "height", ",", "boundary", ")", ":", "\n", "        ", "cx", "=", "max", "(", "0", ",", "min", "(", "cx", ",", "boundary", "[", "1", "]", ")", ")", "\n", "cy", "=", "max", "(", "0", ",", "min", "(", "cy", ",", "boundary", "[", "0", "]", ")", ")", "\n", "width", "=", "max", "(", "10", ",", "min", "(", "width", ",", "boundary", "[", "1", "]", ")", ")", "\n", "height", "=", "max", "(", "10", ",", "min", "(", "height", ",", "boundary", "[", "0", "]", ")", ")", "\n", "return", "cx", ",", "cy", ",", "width", ",", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamfc_tracker.SiamFCTracker.init": [[44, 79], ["numpy.array", "numpy.array", "round", "numpy.mean", "siamfc_tracker.SiamFCTracker.get_subwindow", "numpy.sqrt", "torch.no_grad", "siamfc_tracker.SiamFCTracker.model.template", "siamfc_tracker.SiamFCTracker.get_subwindow", "siamfc_tracker.SiamFCTracker.classifier.initialize", "numpy.ones", "numpy.arange", "numpy.sum", "numpy.sum", "round", "siamfc_tracker.SiamFCTracker.type", "torch.no_grad", "siamfc_tracker.SiamFCTracker.model.template_short_term", "numpy.ceil", "numpy.floor"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.SiameseTracker.get_subwindow", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.template", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.SiameseTracker.get_subwindow", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.initialize", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.template_short_term"], ["", "def", "init", "(", "self", ",", "img", ",", "bbox", ")", ":", "\n", "        ", "self", ".", "frame_num", "=", "1", "\n", "self", ".", "temp_max", "=", "0", "\n", "\n", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "bbox", "[", "0", "]", "+", "(", "bbox", "[", "2", "]", "-", "1", ")", "/", "2", ",", "\n", "bbox", "[", "1", "]", "+", "(", "bbox", "[", "3", "]", "-", "1", ")", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", "]", ")", "\n", "\n", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "round", "(", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", ")", "\n", "scale_z", "=", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", "/", "s_z", "\n", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "z0_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ",", "\n", "s_z", ",", "self", ".", "channel_average", ")", "\n", "self", ".", "z_crop", "=", "self", ".", "z0_crop", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "model", ".", "template", "(", "self", ".", "z0_crop", ")", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "if", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "model", ".", "template_short_term", "(", "self", ".", "z_crop", ")", "\n", "\n", "", "", "s_xx", "=", "s_z", "*", "(", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "*", "2", "/", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ")", "\n", "x_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "*", "2", ",", "\n", "round", "(", "s_xx", ")", ",", "self", ".", "channel_average", ")", "\n", "self", ".", "classifier", ".", "initialize", "(", "x_crop", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "bbox", ")", "\n", "\n", "", "self", ".", "penalty", "=", "np", ".", "ones", "(", "cfg", ".", "TRACK", ".", "SCALE_NUM", ")", "*", "cfg", ".", "TRACK", ".", "PENALTY_K", "\n", "self", ".", "penalty", "[", "cfg", ".", "TRACK", ".", "SCALE_NUM", "//", "2", "]", "=", "1", "\n", "self", ".", "scales", "=", "cfg", ".", "TRACK", ".", "SCALE_STEP", "**", "np", ".", "arange", "(", "np", ".", "ceil", "(", "cfg", ".", "TRACK", ".", "SCALE_NUM", "/", "2", ")", "-", "cfg", ".", "TRACK", ".", "SCALE_NUM", ",", "\n", "np", ".", "floor", "(", "cfg", ".", "TRACK", ".", "SCALE_NUM", "/", "2", ")", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamfc_tracker.SiamFCTracker.track": [[80, 207], ["numpy.sqrt", "torch.cat", "outputs[].squeeze", "max_score.argmax", "siamfc_tracker.SiamFCTracker.track.normalize2"], "methods", ["None"], ["", "def", "track", "(", "self", ",", "img", ")", ":", "\n", "        ", "self", ".", "frame_num", "+=", "1", "\n", "self", ".", "curr_frame", "=", "img", "\n", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", "\n", "scale_z", "=", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", "/", "s_z", "\n", "s_x", "=", "s_z", "*", "(", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "/", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ")", "\n", "\n", "size_x_scales", "=", "s_x", "*", "self", ".", "scales", "\n", "x_crop_pyramid", "=", "torch", ".", "cat", "(", "[", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", ",", "\n", "round", "(", "size_x_scale", ")", ",", "self", ".", "channel_average", ")", "for", "size_x_scale", "in", "size_x_scales", "]", ",", "dim", "=", "0", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", "=", "self", ".", "model", ".", "track", "(", "x_crop_pyramid", ")", "\n", "\n", "", "score", "=", "outputs", "[", "'cls'", "]", ".", "squeeze", "(", ")", "\n", "score", "=", "[", "cv2", ".", "resize", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "(", "self", ".", "interp_score_size", ",", "\n", "self", ".", "interp_score_size", ")", ",", "cv2", ".", "INTER_CUBIC", ")", "for", "x", "in", "score", "]", "\n", "\n", "def", "normalize", "(", "score", ")", ":", "\n", "            ", "score", "=", "(", "score", "-", "np", ".", "min", "(", "score", ")", ")", "/", "(", "np", ".", "max", "(", "score", ")", "-", "np", ".", "min", "(", "score", ")", ")", "\n", "return", "score", "\n", "\n", "", "def", "normalize2", "(", "score", ")", ":", "\n", "            ", "score", "-=", "score", ".", "min", "(", ")", "\n", "score", "/=", "score", ".", "sum", "(", ")", "\n", "return", "score", "\n", "\n", "", "max_score", "=", "np", ".", "array", "(", "[", "x", ".", "max", "(", ")", "for", "x", "in", "score", "]", ")", "*", "self", ".", "penalty", "\n", "scale_idx", "=", "max_score", ".", "argmax", "(", ")", "\n", "scale", "=", "self", ".", "scales", "[", "scale_idx", "]", "\n", "pscore", "=", "score", "[", "scale_idx", "]", "\n", "pscore", "=", "normalize2", "(", "pscore", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "\n", "            ", "flag", ",", "s", "=", "self", ".", "classifier", ".", "track", "(", "scale_idx", ")", "\n", "if", "flag", "==", "'not_found'", ":", "\n", "                ", "self", ".", "lost_count", "+=", "1", "\n", "", "else", ":", "\n", "                ", "self", ".", "lost_count", "=", "0", "\n", "\n", "", "confidence", "=", "np", ".", "array", "(", "cv2", ".", "resize", "(", "s", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "(", "self", ".", "interp_score_size", ",", "\n", "self", ".", "interp_score_size", ")", ",", "cv2", ".", "INTER_CUBIC", ")", ")", "\n", "pscore", "=", "pscore", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "COEE_CLASS", ")", "+", "normalize2", "(", "confidence", ")", "*", "cfg", ".", "TRACK", ".", "COEE_CLASS", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "                ", "score_st", "=", "outputs", "[", "'cls_st'", "]", ".", "squeeze", "(", ")", "\n", "score_st", "=", "[", "cv2", ".", "resize", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "(", "self", ".", "interp_score_size", ",", "\n", "self", ".", "interp_score_size", ")", ",", "cv2", ".", "INTER_CUBIC", ")", "for", "x", "in", "score_st", "]", "\n", "max_score_st", "=", "np", ".", "array", "(", "[", "x", ".", "max", "(", ")", "for", "x", "in", "score_st", "]", ")", "*", "self", ".", "penalty", "\n", "scale_idx_st", "=", "max_score_st", ".", "argmax", "(", ")", "\n", "scale_st", "=", "self", ".", "scales", "[", "scale_idx_st", "]", "\n", "pscore_st", "=", "score_st", "[", "scale_idx_st", "]", "\n", "pscore_st", "=", "normalize2", "(", "pscore_st", ")", "\n", "\n", "", "", "pscore", "=", "pscore", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", ")", "+", "self", ".", "window", "*", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", "\n", "max_r", ",", "max_c", "=", "np", ".", "unravel_index", "(", "pscore", ".", "argmax", "(", ")", ",", "pscore", ".", "shape", ")", "\n", "disp_score_interp", "=", "np", ".", "array", "(", "[", "max_c", ",", "max_r", "]", ")", "-", "(", "self", ".", "interp_score_size", "-", "1", ")", "/", "2.", "\n", "disp_score_input", "=", "disp_score_interp", "*", "cfg", ".", "TRACK", ".", "TOTAL_STRIDE", "/", "cfg", ".", "TRACK", ".", "RESPONSE_UP_STRIDE", "\n", "disp_score_frame", "=", "disp_score_input", "*", "(", "s_x", "*", "scale", ")", "/", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", "and", "cfg", ".", "TRACK", ".", "SHORT_TERM_DRIFT", "and", "self", ".", "lost_count", ">=", "8", ":", "\n", "            ", "cx", ",", "cy", "=", "disp_score_frame", "[", "0", "]", "/", "4", "+", "self", ".", "center_pos", "[", "0", "]", ",", "disp_score_frame", "[", "1", "]", "/", "4", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "cx", ",", "cy", "=", "disp_score_frame", "[", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", ",", "disp_score_frame", "[", "1", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "\n", "", "width", "=", "self", ".", "size", "[", "0", "]", "*", "(", "(", "1", "-", "cfg", ".", "TRACK", ".", "LR", ")", "+", "cfg", ".", "TRACK", ".", "LR", "*", "scale", ")", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "*", "(", "(", "1", "-", "cfg", ".", "TRACK", ".", "LR", ")", "+", "cfg", ".", "TRACK", ".", "LR", "*", "scale", ")", "\n", "cx", ",", "cy", ",", "width", ",", "height", "=", "self", ".", "_bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", "and", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "\n", "            ", "pscore_st", "=", "pscore_st", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", ")", "+", "self", ".", "window", "*", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", "\n", "max_r_st", ",", "max_c_st", "=", "np", ".", "unravel_index", "(", "pscore_st", ".", "argmax", "(", ")", ",", "pscore_st", ".", "shape", ")", "\n", "disp_score_interp_st", "=", "np", ".", "array", "(", "[", "max_c_st", ",", "max_r_st", "]", ")", "-", "(", "self", ".", "interp_score_size", "-", "1", ")", "/", "2.", "\n", "disp_score_input_st", "=", "disp_score_interp_st", "*", "cfg", ".", "TRACK", ".", "TOTAL_STRIDE", "/", "cfg", ".", "TRACK", ".", "RESPONSE_UP_STRIDE", "\n", "disp_score_frame_st", "=", "disp_score_input_st", "*", "(", "s_x", "*", "scale", ")", "/", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", "and", "cfg", ".", "TRACK", ".", "SHORT_TERM_DRIFT", "and", "self", ".", "lost_count", ">=", "8", ":", "\n", "                ", "cx_st", "=", "disp_score_frame_st", "[", "0", "]", "/", "4", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "cy_st", "=", "disp_score_frame_st", "[", "1", "]", "/", "4", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "cx_st", "=", "disp_score_frame_st", "[", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "cy_st", "=", "disp_score_frame_st", "[", "1", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "\n", "", "width_st", "=", "self", ".", "size", "[", "0", "]", "*", "(", "(", "1", "-", "cfg", ".", "TRACK", ".", "LR", ")", "+", "cfg", ".", "TRACK", ".", "LR", "*", "scale_st", ")", "\n", "height_st", "=", "self", ".", "size", "[", "1", "]", "*", "(", "(", "1", "-", "cfg", ".", "TRACK", ".", "LR", ")", "+", "cfg", ".", "TRACK", ".", "LR", "*", "scale_st", ")", "\n", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", "=", "self", ".", "_bbox_clip", "(", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "if", "iou", "(", "(", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", ")", ",", "(", "cx", ",", "cy", ",", "width", ",", "height", ")", ",", "wh", "=", "True", ")", ">=", "cfg", ".", "TRACK", ".", "TAU_REGRESSION", "and", "pscore_st", ".", "max", "(", ")", "-", "pscore", ".", "max", "(", ")", ">=", "cfg", ".", "TRACK", ".", "TAU_CLASSIFICATION", ":", "\n", "                ", "cx", ",", "cy", ",", "width", ",", "height", ",", "pscore", "=", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", ",", "pscore_st", "\n", "\n", "", "", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "width", ",", "height", "]", ")", "\n", "bbox", "=", "[", "cx", "-", "width", "/", "2", ",", "cy", "-", "height", "/", "2", ",", "width", ",", "height", "]", "\n", "best_score", "=", "pscore", ".", "max", "(", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "self", ".", "classifier", ".", "update", "(", "bbox", ",", "flag", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "                ", "if", "torch", ".", "max", "(", "s", ")", ".", "item", "(", ")", ">=", "cfg", ".", "TRACK", ".", "TARGET_UPDATE_THRESHOLD", "and", "flag", "!=", "'hard_negative'", ":", "\n", "                    ", "if", "torch", ".", "max", "(", "s", ")", ".", "item", "(", ")", ">", "self", ".", "temp_max", ":", "\n", "                        ", "self", ".", "temp_max", "=", "torch", ".", "max", "(", "s", ")", ".", "item", "(", ")", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "z_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ",", "\n", "s_z", ",", "self", ".", "channel_average", ")", "\n", "\n", "", "", "if", "(", "self", ".", "frame_num", "-", "1", ")", "%", "cfg", ".", "TRACK", ".", "TARGET_UPDATE_SKIPPING", "==", "0", ":", "\n", "                    ", "self", ".", "temp_max", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "self", ".", "model", ".", "template_short_term", "(", "self", ".", "z_crop", ")", "\n", "\n", "", "", "", "", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'best_score'", ":", "best_score", ",", "\n", "'flag'", ":", "flag", "\n", "}", "\n", "", "else", ":", "\n", "            ", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'best_score'", ":", "best_score", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siammask_tracker.SiamMaskTracker.__init__": [[21, 27], ["pysot.tracker.siamrpn_tracker.SiamRPNTracker.__init__", "hasattr", "hasattr"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "super", "(", "SiamMaskTracker", ",", "self", ")", ".", "__init__", "(", "model", ")", "\n", "assert", "hasattr", "(", "self", ".", "model", ",", "'mask_head'", ")", ",", "\"SiamMaskTracker must have mask_head\"", "\n", "assert", "hasattr", "(", "self", ".", "model", ",", "'refine_head'", ")", ",", "\"SiamMaskTracker must have refine_head\"", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siammask_tracker.SiamMaskTracker._crop_back": [[28, 40], ["numpy.array().astype", "cv2.warpAffine", "numpy.array"], "methods", ["None"], ["", "def", "_crop_back", "(", "self", ",", "image", ",", "bbox", ",", "out_sz", ",", "padding", "=", "0", ")", ":", "\n", "        ", "a", "=", "(", "out_sz", "[", "0", "]", "-", "1", ")", "/", "bbox", "[", "2", "]", "\n", "b", "=", "(", "out_sz", "[", "1", "]", "-", "1", ")", "/", "bbox", "[", "3", "]", "\n", "c", "=", "-", "a", "*", "bbox", "[", "0", "]", "\n", "d", "=", "-", "b", "*", "bbox", "[", "1", "]", "\n", "mapping", "=", "np", ".", "array", "(", "[", "[", "a", ",", "0", ",", "c", "]", ",", "\n", "[", "0", ",", "b", ",", "d", "]", "]", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "crop", "=", "cv2", ".", "warpAffine", "(", "image", ",", "mapping", ",", "(", "out_sz", "[", "0", "]", ",", "out_sz", "[", "1", "]", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "borderValue", "=", "padding", ")", "\n", "return", "crop", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siammask_tracker.SiamMaskTracker._mask_post_processing": [[41, 65], ["target_mask.astype.astype.astype", "cv2.findContours", "cv2.findContours", "cv2.contourArea", "contour.reshape", "cv2.boxPoints", "pysot.utils.bbox.cxy_wh_2_rect", "numpy.array", "len", "numpy.max", "cv2.minAreaRect", "numpy.argmax"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.cxy_wh_2_rect"], ["", "def", "_mask_post_processing", "(", "self", ",", "mask", ")", ":", "\n", "        ", "target_mask", "=", "(", "mask", ">", "cfg", ".", "TRACK", ".", "MASK_THERSHOLD", ")", "\n", "target_mask", "=", "target_mask", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "if", "cv2", ".", "__version__", "[", "-", "5", "]", "==", "'4'", ":", "\n", "            ", "contours", ",", "_", "=", "cv2", ".", "findContours", "(", "target_mask", ",", "\n", "cv2", ".", "RETR_EXTERNAL", ",", "\n", "cv2", ".", "CHAIN_APPROX_NONE", ")", "\n", "", "else", ":", "\n", "            ", "_", ",", "contours", ",", "_", "=", "cv2", ".", "findContours", "(", "target_mask", ",", "\n", "cv2", ".", "RETR_EXTERNAL", ",", "\n", "cv2", ".", "CHAIN_APPROX_NONE", ")", "\n", "", "cnt_area", "=", "[", "cv2", ".", "contourArea", "(", "cnt", ")", "for", "cnt", "in", "contours", "]", "\n", "if", "len", "(", "contours", ")", "!=", "0", "and", "np", ".", "max", "(", "cnt_area", ")", ">", "100", ":", "\n", "            ", "contour", "=", "contours", "[", "np", ".", "argmax", "(", "cnt_area", ")", "]", "\n", "polygon", "=", "contour", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "prbox", "=", "cv2", ".", "boxPoints", "(", "cv2", ".", "minAreaRect", "(", "polygon", ")", ")", "\n", "rbox_in_img", "=", "prbox", "\n", "", "else", ":", "\n", "            ", "location", "=", "cxy_wh_2_rect", "(", "self", ".", "center_pos", ",", "self", ".", "size", ")", "\n", "rbox_in_img", "=", "np", ".", "array", "(", "[", "[", "location", "[", "0", "]", ",", "location", "[", "1", "]", "]", ",", "\n", "[", "location", "[", "0", "]", "+", "location", "[", "2", "]", ",", "location", "[", "1", "]", "]", ",", "\n", "[", "location", "[", "0", "]", "+", "location", "[", "2", "]", ",", "location", "[", "1", "]", "+", "location", "[", "3", "]", "]", ",", "\n", "[", "location", "[", "0", "]", ",", "location", "[", "1", "]", "+", "location", "[", "3", "]", "]", "]", ")", "\n", "", "return", "rbox_in_img", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siammask_tracker.SiamMaskTracker.track": [[66, 208], ["numpy.sqrt", "round", "siammask_tracker.SiamMaskTracker.get_subwindow", "siammask_tracker.SiamMaskTracker._convert_score", "siammask_tracker.SiamMaskTracker._convert_bbox", "siammask_tracker.SiamMaskTracker.track.change"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.SiameseTracker.get_subwindow", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker._convert_score", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker._convert_bbox"], ["", "def", "track", "(", "self", ",", "img", ")", ":", "\n", "\n", "        ", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", "\n", "scale_z", "=", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", "/", "s_z", "\n", "s_x", "=", "s_z", "*", "(", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "/", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ")", "\n", "s_x", "=", "round", "(", "s_x", ")", "\n", "\n", "x_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "\n", "self", ".", "center_pos", ",", "\n", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", ",", "\n", "s_x", ",", "\n", "self", ".", "channel_average", ")", "\n", "crop_box", "=", "[", "self", ".", "center_pos", "[", "0", "]", "-", "s_x", "/", "2", ",", "\n", "self", ".", "center_pos", "[", "1", "]", "-", "s_x", "/", "2", ",", "\n", "s_x", ",", "\n", "s_x", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", "=", "self", ".", "model", ".", "track", "(", "x_crop", ")", "\n", "", "score", "=", "self", ".", "_convert_score", "(", "outputs", "[", "'cls'", "]", ")", "\n", "pred_bbox", "=", "self", ".", "_convert_bbox", "(", "outputs", "[", "'loc'", "]", ",", "self", ".", "anchors", ")", "\n", "\n", "def", "change", "(", "r", ")", ":", "\n", "            ", "return", "np", ".", "maximum", "(", "r", ",", "1.", "/", "r", ")", "\n", "\n", "", "def", "sz", "(", "w", ",", "h", ")", ":", "\n", "            ", "pad", "=", "(", "w", "+", "h", ")", "*", "0.5", "\n", "return", "np", ".", "sqrt", "(", "(", "w", "+", "pad", ")", "*", "(", "h", "+", "pad", ")", ")", "\n", "\n", "", "s_c", "=", "change", "(", "sz", "(", "pred_bbox", "[", "2", ",", ":", "]", ",", "pred_bbox", "[", "3", ",", ":", "]", ")", "/", "\n", "(", "sz", "(", "self", ".", "size", "[", "0", "]", "*", "scale_z", ",", "self", ".", "size", "[", "1", "]", "*", "scale_z", ")", ")", ")", "\n", "r_c", "=", "change", "(", "(", "self", ".", "size", "[", "0", "]", "/", "self", ".", "size", "[", "1", "]", ")", "/", "\n", "(", "pred_bbox", "[", "2", ",", ":", "]", "/", "pred_bbox", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty", "=", "np", ".", "exp", "(", "-", "(", "r_c", "*", "s_c", "-", "1", ")", "*", "cfg", ".", "TRACK", ".", "PENALTY_K", ")", "\n", "pscore", "=", "penalty", "*", "score", "\n", "\n", "def", "normalize", "(", "score", ")", ":", "\n", "            ", "score", "=", "(", "score", "-", "np", ".", "min", "(", "score", ")", ")", "/", "(", "np", ".", "max", "(", "score", ")", "-", "np", ".", "min", "(", "score", ")", ")", "\n", "return", "score", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "flag", ",", "cs", "=", "self", ".", "classifier", ".", "track", "(", ")", "\n", "confidence", "=", "Image", ".", "fromarray", "(", "cs", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "confidence", "=", "np", ".", "array", "(", "confidence", ".", "resize", "(", "(", "self", ".", "score_size", ",", "self", ".", "score_size", ")", ")", ")", ".", "flatten", "(", ")", "\n", "pscore", "=", "pscore", ".", "reshape", "(", "5", ",", "-", "1", ")", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "COEE_CLASS", ")", "+", "normalize", "(", "confidence", ")", "*", "cfg", ".", "TRACK", ".", "COEE_CLASS", "\n", "pscore", "=", "pscore", ".", "flatten", "(", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "                ", "score_st", "=", "self", ".", "_convert_score", "(", "outputs", "[", "'cls_st'", "]", ")", "\n", "pred_bbox_st", "=", "self", ".", "_convert_bbox", "(", "outputs", "[", "'loc_st'", "]", ",", "self", ".", "anchors", ")", "\n", "s_c_st", "=", "change", "(", "sz", "(", "pred_bbox_st", "[", "2", ",", ":", "]", ",", "pred_bbox_st", "[", "3", ",", ":", "]", ")", "/", "\n", "(", "sz", "(", "self", ".", "size", "[", "0", "]", "*", "scale_z", ",", "self", ".", "size", "[", "1", "]", "*", "scale_z", ")", ")", ")", "\n", "r_c_st", "=", "change", "(", "(", "self", ".", "size", "[", "0", "]", "/", "self", ".", "size", "[", "1", "]", ")", "/", "\n", "(", "pred_bbox_st", "[", "2", ",", ":", "]", "/", "pred_bbox_st", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty_st", "=", "np", ".", "exp", "(", "-", "(", "r_c_st", "*", "s_c_st", "-", "1", ")", "*", "cfg", ".", "TRACK", ".", "PENALTY_K", ")", "\n", "pscore_st", "=", "penalty_st", "*", "score_st", "\n", "pscore_st", "=", "pscore_st", ".", "reshape", "(", "5", ",", "-", "1", ")", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "COEE_CLASS", ")", "+", "normalize", "(", "confidence", ")", "*", "cfg", ".", "TRACK", ".", "COEE_CLASS", "\n", "pscore_st", "=", "pscore_st", ".", "flatten", "(", "0", ")", "\n", "\n", "", "", "pscore", "=", "pscore", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", ")", "+", "self", ".", "window", "*", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", "\n", "best_idx", "=", "np", ".", "argmax", "(", "pscore", ")", "\n", "bbox", "=", "pred_bbox", "[", ":", ",", "best_idx", "]", "/", "scale_z", "\n", "lr", "=", "penalty", "[", "best_idx", "]", "*", "score", "[", "best_idx", "]", "*", "cfg", ".", "TRACK", ".", "LR", "\n", "cx", "=", "bbox", "[", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "bbox", "[", "1", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "2", "]", "*", "lr", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "3", "]", "*", "lr", "\n", "cx", ",", "cy", ",", "width", ",", "height", "=", "self", ".", "_bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", "and", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "            ", "pscore_st", "=", "pscore_st", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", ")", "+", "self", ".", "window", "*", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", "\n", "best_idx_st", "=", "np", ".", "argmax", "(", "pscore_st", ")", "\n", "bbox_st", "=", "pred_bbox_st", "[", ":", ",", "best_idx_st", "]", "/", "scale_z", "\n", "lr_st", "=", "penalty_st", "[", "best_idx_st", "]", "*", "score_st", "[", "best_idx_st", "]", "*", "cfg", ".", "TRACK", ".", "LR", "\n", "cx_st", "=", "bbox_st", "[", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "cy_st", "=", "bbox_st", "[", "1", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "width_st", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr_st", ")", "+", "bbox_st", "[", "2", "]", "*", "lr_st", "\n", "height_st", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr_st", ")", "+", "bbox_st", "[", "3", "]", "*", "lr_st", "\n", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", "=", "self", ".", "_bbox_clip", "(", "cx_st", ",", "cy_st", ",", "width_st", ",", "\n", "height_st", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "if", "iou", "(", "(", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", ")", ",", "(", "cx", ",", "cy", ",", "width", ",", "height", ")", ",", "wh", "=", "True", ")", ">=", "cfg", ".", "TRACK", ".", "TAU_REGRESSION", "and", "score_st", "[", "best_idx_st", "]", "-", "score", "[", "best_idx", "]", ">=", "cfg", ".", "TRACK", ".", "TAU_CLASSIFICATION", ":", "\n", "                ", "cx", ",", "cy", ",", "width", ",", "height", ",", "score", ",", "best_idx", "=", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", ",", "score_st", ",", "best_idx_st", "\n", "\n", "", "", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "width", ",", "height", "]", ")", "\n", "\n", "bbox", "=", "[", "cx", "-", "width", "/", "2", ",", "\n", "cy", "-", "height", "/", "2", ",", "\n", "width", ",", "\n", "height", "]", "\n", "best_score", "=", "score", "[", "best_idx", "]", "\n", "\n", "pos", "=", "np", ".", "unravel_index", "(", "best_idx", ",", "(", "5", ",", "self", ".", "score_size", ",", "self", ".", "score_size", ")", ")", "\n", "delta_x", ",", "delta_y", "=", "pos", "[", "2", "]", ",", "pos", "[", "1", "]", "\n", "\n", "mask", "=", "self", ".", "model", ".", "mask_refine", "(", "(", "delta_y", ",", "delta_x", ")", ")", ".", "sigmoid", "(", ")", ".", "squeeze", "(", ")", "\n", "out_size", "=", "cfg", ".", "TRACK", ".", "MASK_OUTPUT_SIZE", "\n", "mask", "=", "mask", ".", "view", "(", "out_size", ",", "out_size", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n", "s", "=", "crop_box", "[", "2", "]", "/", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "\n", "base_size", "=", "cfg", ".", "TRACK", ".", "BASE_SIZE", "\n", "stride", "=", "cfg", ".", "ANCHOR", ".", "STRIDE", "\n", "sub_box", "=", "[", "crop_box", "[", "0", "]", "+", "(", "delta_x", "-", "base_size", "/", "2", ")", "*", "stride", "*", "s", ",", "\n", "crop_box", "[", "1", "]", "+", "(", "delta_y", "-", "base_size", "/", "2", ")", "*", "stride", "*", "s", ",", "\n", "s", "*", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ",", "\n", "s", "*", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", "]", "\n", "s", "=", "out_size", "/", "sub_box", "[", "2", "]", "\n", "\n", "im_h", ",", "im_w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "back_box", "=", "[", "-", "sub_box", "[", "0", "]", "*", "s", ",", "-", "sub_box", "[", "1", "]", "*", "s", ",", "im_w", "*", "s", ",", "im_h", "*", "s", "]", "\n", "mask_in_img", "=", "self", ".", "_crop_back", "(", "mask", ",", "back_box", ",", "(", "im_w", ",", "im_h", ")", ")", "\n", "polygon", "=", "self", ".", "_mask_post_processing", "(", "mask_in_img", ")", "\n", "polygon", "=", "polygon", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "self", ".", "classifier", ".", "update", "(", "bbox", ",", "scale_z", ",", "flag", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "                ", "if", "torch", ".", "max", "(", "cs", ")", ".", "item", "(", ")", ">=", "cfg", ".", "TRACK", ".", "TARGET_UPDATE_THRESHOLD", "and", "flag", "!=", "'hard_negative'", ":", "\n", "                    ", "if", "torch", ".", "max", "(", "cs", ")", ".", "item", "(", ")", ">", "self", ".", "temp_max", ":", "\n", "                        ", "self", ".", "temp_max", "=", "torch", ".", "max", "(", "cs", ")", ".", "item", "(", ")", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "z_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ",", "\n", "s_z", ",", "self", ".", "channel_average", ")", "\n", "", "", "if", "(", "self", ".", "frame_num", "-", "1", ")", "%", "cfg", ".", "TRACK", ".", "TARGET_UPDATE_SKIPPING", "==", "0", ":", "\n", "                    ", "self", ".", "temp_max", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "self", ".", "model", ".", "template_short_term", "(", "self", ".", "z_crop", ")", "\n", "\n", "", "", "", "", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'best_score'", ":", "best_score", ",", "\n", "'mask'", ":", "mask_in_img", ",", "\n", "'polygon'", ":", "polygon", ",", "\n", "'flag'", ":", "flag", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.BaseTracker.init": [[18, 20], ["None"], "methods", ["None"], ["    ", "def", "init", "(", "self", ",", "img", ",", "bbox", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.BaseTracker.track": [[21, 23], ["None"], "methods", ["None"], ["", "def", "track", "(", "self", ",", "img", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.SiameseTracker.get_subwindow": [[26, 77], ["isinstance", "numpy.floor", "numpy.floor", "int", "int", "int", "int", "any", "im_patch.cuda.cuda.transpose", "im_patch.cuda.cuda.astype", "torch.from_numpy", "max", "max", "max", "max", "numpy.zeros", "numpy.array_equal", "cv2.resize", "im_patch.cuda.cuda.cuda", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["    ", "def", "get_subwindow", "(", "self", ",", "im", ",", "pos", ",", "model_sz", ",", "original_sz", ",", "avg_chans", ")", ":", "\n", "\n", "        ", "if", "isinstance", "(", "pos", ",", "float", ")", ":", "\n", "            ", "pos", "=", "[", "pos", ",", "pos", "]", "\n", "", "sz", "=", "original_sz", "\n", "im_sz", "=", "im", ".", "shape", "\n", "c", "=", "(", "original_sz", "+", "1", ")", "/", "2", "\n", "# context_xmin = round(pos[0] - c) # py2 and py3 round", "\n", "context_xmin", "=", "np", ".", "floor", "(", "pos", "[", "0", "]", "-", "c", "+", "0.5", ")", "\n", "context_xmax", "=", "context_xmin", "+", "sz", "-", "1", "\n", "# context_ymin = round(pos[1] - c)", "\n", "context_ymin", "=", "np", ".", "floor", "(", "pos", "[", "1", "]", "-", "c", "+", "0.5", ")", "\n", "context_ymax", "=", "context_ymin", "+", "sz", "-", "1", "\n", "left_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_xmin", ")", ")", "\n", "top_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_ymin", ")", ")", "\n", "right_pad", "=", "int", "(", "max", "(", "0.", ",", "context_xmax", "-", "im_sz", "[", "1", "]", "+", "1", ")", ")", "\n", "bottom_pad", "=", "int", "(", "max", "(", "0.", ",", "context_ymax", "-", "im_sz", "[", "0", "]", "+", "1", ")", ")", "\n", "\n", "context_xmin", "=", "context_xmin", "+", "left_pad", "\n", "context_xmax", "=", "context_xmax", "+", "left_pad", "\n", "context_ymin", "=", "context_ymin", "+", "top_pad", "\n", "context_ymax", "=", "context_ymax", "+", "top_pad", "\n", "\n", "r", ",", "c", ",", "k", "=", "im", ".", "shape", "\n", "if", "any", "(", "[", "top_pad", ",", "bottom_pad", ",", "left_pad", ",", "right_pad", "]", ")", ":", "\n", "            ", "size", "=", "(", "r", "+", "top_pad", "+", "bottom_pad", ",", "c", "+", "left_pad", "+", "right_pad", ",", "k", ")", "\n", "te_im", "=", "np", ".", "zeros", "(", "size", ",", "np", ".", "uint8", ")", "\n", "te_im", "[", "top_pad", ":", "top_pad", "+", "r", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "im", "\n", "if", "top_pad", ":", "\n", "                ", "te_im", "[", "0", ":", "top_pad", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "bottom_pad", ":", "\n", "                ", "te_im", "[", "r", "+", "top_pad", ":", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "left_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "0", ":", "left_pad", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "right_pad", ":", "\n", "                ", "te_im", "[", ":", ",", "c", "+", "left_pad", ":", ",", ":", "]", "=", "avg_chans", "\n", "", "im_patch", "=", "te_im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "", "else", ":", "\n", "            ", "im_patch", "=", "im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "\n", "", "if", "not", "np", ".", "array_equal", "(", "model_sz", ",", "original_sz", ")", ":", "\n", "            ", "im_patch", "=", "cv2", ".", "resize", "(", "im_patch", ",", "(", "model_sz", ",", "model_sz", ")", ")", "\n", "", "im_patch", "=", "im_patch", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "im_patch", "=", "im_patch", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "im_patch", "=", "im_patch", ".", "astype", "(", "np", ".", "float32", ")", "\n", "im_patch", "=", "torch", ".", "from_numpy", "(", "im_patch", ")", "\n", "if", "cfg", ".", "CUDA", ":", "\n", "            ", "im_patch", "=", "im_patch", ".", "cuda", "(", ")", "\n", "", "return", "im_patch", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpnlt_tracker.SiamRPNLTTracker.__init__": [[18, 21], ["pysot.tracker.siamrpn_tracker.SiamRPNTracker.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "super", "(", "SiamRPNLTTracker", ",", "self", ")", ".", "__init__", "(", "model", ")", "\n", "self", ".", "longterm_state", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpnlt_tracker.SiamRPNLTTracker.track": [[22, 121], ["numpy.sqrt", "numpy.hanning", "numpy.outer", "numpy.tile", "siamrpnlt_tracker.SiamRPNLTTracker.generate_anchor", "siamrpnlt_tracker.SiamRPNLTTracker.get_subwindow", "siamrpnlt_tracker.SiamRPNLTTracker._convert_score", "siamrpnlt_tracker.SiamRPNLTTracker._convert_bbox", "siamrpnlt_tracker.SiamRPNLTTracker.track.change"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker.generate_anchor", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.SiameseTracker.get_subwindow", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker._convert_score", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker._convert_bbox"], ["", "def", "track", "(", "self", ",", "img", ")", ":", "\n", "        ", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", "\n", "scale_z", "=", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", "/", "s_z", "\n", "\n", "if", "self", ".", "longterm_state", ":", "\n", "            ", "instance_size", "=", "cfg", ".", "TRACK", ".", "LOST_INSTANCE_SIZE", "\n", "", "else", ":", "\n", "            ", "instance_size", "=", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "\n", "\n", "", "score_size", "=", "(", "instance_size", "-", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ")", "//", "cfg", ".", "ANCHOR", ".", "STRIDE", "+", "1", "+", "cfg", ".", "TRACK", ".", "BASE_SIZE", "\n", "hanning", "=", "np", ".", "hanning", "(", "score_size", ")", "\n", "window", "=", "np", ".", "outer", "(", "hanning", ",", "hanning", ")", "\n", "window", "=", "np", ".", "tile", "(", "window", ".", "flatten", "(", ")", ",", "self", ".", "anchor_num", ")", "\n", "anchors", "=", "self", ".", "generate_anchor", "(", "score_size", ")", "\n", "\n", "s_x", "=", "s_z", "*", "(", "instance_size", "/", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ")", "\n", "x_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "instance_size", ",", "\n", "round", "(", "s_x", ")", ",", "self", ".", "channel_average", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", "=", "self", ".", "model", ".", "track", "(", "x_crop", ")", "\n", "\n", "", "score", "=", "self", ".", "_convert_score", "(", "outputs", "[", "'cls'", "]", ")", "\n", "pred_bbox", "=", "self", ".", "_convert_bbox", "(", "outputs", "[", "'loc'", "]", ",", "anchors", ")", "\n", "\n", "def", "change", "(", "r", ")", ":", "\n", "            ", "return", "np", ".", "maximum", "(", "r", ",", "1.", "/", "r", ")", "\n", "\n", "", "def", "sz", "(", "w", ",", "h", ")", ":", "\n", "            ", "pad", "=", "(", "w", "+", "h", ")", "*", "0.5", "\n", "return", "np", ".", "sqrt", "(", "(", "w", "+", "pad", ")", "*", "(", "h", "+", "pad", ")", ")", "\n", "\n", "", "s_c", "=", "change", "(", "sz", "(", "pred_bbox", "[", "2", ",", ":", "]", ",", "pred_bbox", "[", "3", ",", ":", "]", ")", "/", "\n", "(", "sz", "(", "self", ".", "size", "[", "0", "]", "*", "scale_z", ",", "self", ".", "size", "[", "1", "]", "*", "scale_z", ")", ")", ")", "\n", "r_c", "=", "change", "(", "(", "self", ".", "size", "[", "0", "]", "/", "self", ".", "size", "[", "1", "]", ")", "/", "\n", "(", "pred_bbox", "[", "2", ",", ":", "]", "/", "pred_bbox", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty", "=", "np", ".", "exp", "(", "-", "(", "r_c", "*", "s_c", "-", "1", ")", "*", "cfg", ".", "TRACK", ".", "PENALTY_K", ")", "\n", "pscore", "=", "penalty", "*", "score", "\n", "\n", "def", "normalize", "(", "score", ")", ":", "\n", "            ", "score", "=", "(", "score", "-", "np", ".", "min", "(", "score", ")", ")", "/", "(", "np", ".", "max", "(", "score", ")", "-", "np", ".", "min", "(", "score", ")", ")", "\n", "return", "score", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "\n", "            ", "flag", ",", "s", "=", "self", ".", "classifier", ".", "track", "(", ")", "\n", "confidence", "=", "Image", ".", "fromarray", "(", "s", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "confidence", "=", "np", ".", "array", "(", "confidence", ".", "resize", "(", "(", "score_size", ",", "score_size", ")", ")", ")", ".", "flatten", "(", ")", "\n", "pscore", "=", "pscore", ".", "reshape", "(", "5", ",", "-", "1", ")", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "COEE_CLASS", ")", "+", "normalize", "(", "confidence", ")", "*", "cfg", ".", "TRACK", ".", "COEE_CLASS", "\n", "pscore", "=", "pscore", ".", "flatten", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "longterm_state", ":", "\n", "            ", "pscore", "=", "pscore", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", ")", "+", "window", "*", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", "\n", "", "else", ":", "\n", "            ", "pscore", "=", "pscore", "*", "(", "1", "-", "0.001", ")", "+", "window", "*", "0.001", "\n", "\n", "", "best_idx", "=", "np", ".", "argmax", "(", "pscore", ")", "\n", "bbox", "=", "pred_bbox", "[", ":", ",", "best_idx", "]", "/", "scale_z", "\n", "lr", "=", "penalty", "[", "best_idx", "]", "*", "score", "[", "best_idx", "]", "*", "cfg", ".", "TRACK", ".", "LR", "\n", "best_score", "=", "score", "[", "best_idx", "]", "\n", "if", "best_score", ">=", "cfg", ".", "TRACK", ".", "CONFIDENCE_LOW", ":", "\n", "            ", "cx", "=", "bbox", "[", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "bbox", "[", "1", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "2", "]", "*", "lr", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "3", "]", "*", "lr", "\n", "", "else", ":", "\n", "            ", "cx", "=", "self", ".", "center_pos", "[", "0", "]", "\n", "cy", "=", "self", ".", "center_pos", "[", "1", "]", "\n", "width", "=", "self", ".", "size", "[", "0", "]", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "\n", "\n", "", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "width", ",", "height", "]", ")", "\n", "cx", ",", "cy", ",", "width", ",", "height", "=", "self", ".", "_bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "bbox", "=", "[", "cx", "-", "width", "/", "2", ",", "cy", "-", "height", "/", "2", ",", "width", ",", "height", "]", "\n", "\n", "if", "not", "self", ".", "longterm_state", ":", "\n", "            ", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "                ", "self", ".", "classifier", ".", "update", "(", "bbox", ",", "scale_z", ",", "flag", ")", "\n", "\n", "", "", "if", "best_score", "<", "cfg", ".", "TRACK", ".", "CONFIDENCE_LOW", ":", "\n", "            ", "self", ".", "longterm_state", "=", "True", "\n", "", "elif", "best_score", ">", "cfg", ".", "TRACK", ".", "CONFIDENCE_HIGH", ":", "\n", "            ", "self", ".", "longterm_state", "=", "False", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'best_score'", ":", "best_score", ",", "\n", "'flag'", ":", "flag", "\n", "}", "\n", "", "else", ":", "\n", "            ", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'best_score'", ":", "best_score", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker.__init__": [[22, 38], ["pysot.tracker.base_tracker.SiameseTracker.__init__", "numpy.hanning", "numpy.outer", "numpy.tile", "siamrpn_tracker.SiamRPNTracker.generate_anchor", "siamrpn_tracker.SiamRPNTracker.model.eval", "len", "len", "numpy.outer.flatten", "pysot.tracker.classifier.base_classifier.BaseClassifier"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker.generate_anchor", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.eval"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "super", "(", "SiamRPNTracker", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "score_size", "=", "(", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "-", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ")", "//", "cfg", ".", "ANCHOR", ".", "STRIDE", "+", "1", "+", "cfg", ".", "TRACK", ".", "BASE_SIZE", "\n", "self", ".", "anchor_num", "=", "len", "(", "cfg", ".", "ANCHOR", ".", "RATIOS", ")", "*", "len", "(", "cfg", ".", "ANCHOR", ".", "SCALES", ")", "\n", "hanning", "=", "np", ".", "hanning", "(", "self", ".", "score_size", ")", "\n", "window", "=", "np", ".", "outer", "(", "hanning", ",", "hanning", ")", "\n", "self", ".", "window", "=", "np", ".", "tile", "(", "window", ".", "flatten", "(", ")", ",", "self", ".", "anchor_num", ")", "\n", "self", ".", "anchors", "=", "self", ".", "generate_anchor", "(", "self", ".", "score_size", ")", "\n", "self", ".", "lost_count", "=", "0", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "self", ".", "classifier", "=", "BaseClassifier", "(", "self", ".", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker.generate_anchor": [[39, 54], ["pysot.utils.anchor.Anchors", "numpy.stack", "numpy.tile().reshape", "numpy.meshgrid", "numpy.tile().flatten", "numpy.tile().flatten", "xx.astype", "yy.astype", "numpy.tile", "range", "range", "numpy.tile", "numpy.tile", "xx.flatten", "yy.flatten"], "methods", ["None"], ["", "", "def", "generate_anchor", "(", "self", ",", "score_size", ")", ":", "\n", "        ", "anchors", "=", "Anchors", "(", "cfg", ".", "ANCHOR", ".", "STRIDE", ",", "cfg", ".", "ANCHOR", ".", "RATIOS", ",", "cfg", ".", "ANCHOR", ".", "SCALES", ")", "\n", "anchor", "=", "anchors", ".", "anchors", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", ",", "anchor", "[", ":", ",", "2", "]", ",", "anchor", "[", ":", ",", "3", "]", "\n", "anchor", "=", "np", ".", "stack", "(", "[", "(", "x1", "+", "x2", ")", "*", "0.5", ",", "(", "y1", "+", "y2", ")", "*", "0.5", ",", "x2", "-", "x1", ",", "y2", "-", "y1", "]", ",", "1", ")", "\n", "total_stride", "=", "anchors", ".", "stride", "\n", "anchor_num", "=", "anchor", ".", "shape", "[", "0", "]", "\n", "anchor", "=", "np", ".", "tile", "(", "anchor", ",", "score_size", "*", "score_size", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ")", ")", "\n", "ori", "=", "-", "(", "score_size", "//", "2", ")", "*", "total_stride", "\n", "xx", ",", "yy", "=", "np", ".", "meshgrid", "(", "[", "ori", "+", "total_stride", "*", "dx", "for", "dx", "in", "range", "(", "score_size", ")", "]", ",", "\n", "[", "ori", "+", "total_stride", "*", "dy", "for", "dy", "in", "range", "(", "score_size", ")", "]", ")", "\n", "xx", ",", "yy", "=", "np", ".", "tile", "(", "xx", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", ",", "np", ".", "tile", "(", "yy", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", "\n", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", "=", "xx", ".", "astype", "(", "np", ".", "float32", ")", ",", "yy", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "anchor", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker._convert_bbox": [[55, 64], ["delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous().view", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "numpy.exp", "numpy.exp", "delta.data.cpu().numpy.data.cpu().numpy.permute().contiguous", "delta.data.cpu().numpy.data.cpu().numpy.data.cpu", "delta.data.cpu().numpy.data.cpu().numpy.permute"], "methods", ["None"], ["", "def", "_convert_bbox", "(", "self", ",", "delta", ",", "anchor", ")", ":", "\n", "        ", "delta", "=", "delta", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "4", ",", "-", "1", ")", "\n", "delta", "=", "delta", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "delta", "[", "0", ",", ":", "]", "=", "delta", "[", "0", ",", ":", "]", "*", "anchor", "[", ":", ",", "2", "]", "+", "anchor", "[", ":", ",", "0", "]", "\n", "delta", "[", "1", ",", ":", "]", "=", "delta", "[", "1", ",", ":", "]", "*", "anchor", "[", ":", ",", "3", "]", "+", "anchor", "[", ":", ",", "1", "]", "\n", "delta", "[", "2", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "2", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "2", "]", "\n", "delta", "[", "3", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "3", ",", ":", "]", ")", "*", "anchor", "[", ":", ",", "3", "]", "\n", "return", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker._convert_score": [[65, 69], ["torch.softmax().data[].cpu().numpy.permute().contiguous().view().permute", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy", "torch.softmax().data[].cpu().numpy.permute().contiguous().view", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu", "torch.softmax().data[].cpu().numpy.permute().contiguous", "torch.softmax().data[].cpu().numpy.permute", "torch.softmax", "torch.softmax"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax"], ["", "def", "_convert_score", "(", "self", ",", "score", ")", ":", "\n", "        ", "score", "=", "score", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ".", "contiguous", "(", ")", ".", "view", "(", "2", ",", "-", "1", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "score", "=", "F", ".", "softmax", "(", "score", ",", "dim", "=", "1", ")", ".", "data", "[", ":", ",", "1", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker._bbox_clip": [[70, 76], ["max", "max", "max", "max", "min", "min", "min", "min"], "methods", ["None"], ["", "def", "_bbox_clip", "(", "self", ",", "cx", ",", "cy", ",", "width", ",", "height", ",", "boundary", ")", ":", "\n", "        ", "cx", "=", "max", "(", "0", ",", "min", "(", "cx", ",", "boundary", "[", "1", "]", ")", ")", "\n", "cy", "=", "max", "(", "0", ",", "min", "(", "cy", ",", "boundary", "[", "0", "]", ")", ")", "\n", "width", "=", "max", "(", "10", ",", "min", "(", "width", ",", "boundary", "[", "1", "]", ")", ")", "\n", "height", "=", "max", "(", "10", ",", "min", "(", "height", ",", "boundary", "[", "0", "]", ")", ")", "\n", "return", "cx", ",", "cy", ",", "width", ",", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker.init": [[77, 105], ["numpy.array", "numpy.array", "round", "numpy.mean", "siamrpn_tracker.SiamRPNTracker.get_subwindow", "numpy.sqrt", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "siamrpn_tracker.SiamRPNTracker.model.template", "siamrpn_tracker.SiamRPNTracker.get_subwindow", "siamrpn_tracker.SiamRPNTracker.classifier.initialize", "numpy.sum", "numpy.sum", "round", "siamrpn_tracker.SiamRPNTracker.type", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "siamrpn_tracker.SiamRPNTracker.model.template_short_term"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.SiameseTracker.get_subwindow", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.template", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.SiameseTracker.get_subwindow", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.initialize", "home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.template_short_term"], ["", "def", "init", "(", "self", ",", "img", ",", "bbox", ")", ":", "\n", "        ", "self", ".", "frame_num", "=", "1", "\n", "self", ".", "temp_max", "=", "0", "\n", "\n", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "bbox", "[", "0", "]", "+", "(", "bbox", "[", "2", "]", "-", "1", ")", "/", "2", ",", "bbox", "[", "1", "]", "+", "(", "bbox", "[", "3", "]", "-", "1", ")", "/", "2", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", "]", ")", "\n", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "round", "(", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", ")", "\n", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "z0_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ",", "\n", "s_z", ",", "self", ".", "channel_average", ")", "\n", "self", ".", "z_crop", "=", "self", ".", "z0_crop", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "model", ".", "template", "(", "self", ".", "z0_crop", ")", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "if", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "model", ".", "template_short_term", "(", "self", ".", "z_crop", ")", "\n", "\n", "", "", "s_xx", "=", "s_z", "*", "(", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "*", "2", "/", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ")", "\n", "x_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "*", "2", ",", "\n", "round", "(", "s_xx", ")", ",", "self", ".", "channel_average", ")", "\n", "\n", "self", ".", "classifier", ".", "initialize", "(", "x_crop", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "bbox", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker.track": [[106, 230], ["numpy.sqrt", "siamrpn_tracker.SiamRPNTracker.get_subwindow", "siamrpn_tracker.SiamRPNTracker._convert_score", "siamrpn_tracker.SiamRPNTracker._convert_bbox", "siamrpn_tracker.SiamRPNTracker.track.change"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.base_tracker.SiameseTracker.get_subwindow", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker._convert_score", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker._convert_bbox"], ["", "", "def", "track", "(", "self", ",", "img", ")", ":", "\n", "        ", "self", ".", "frame_num", "+=", "1", "\n", "self", ".", "curr_frame", "=", "img", "\n", "w_z", "=", "self", ".", "size", "[", "0", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "h_z", "=", "self", ".", "size", "[", "1", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "self", ".", "size", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", "\n", "scale_z", "=", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", "/", "s_z", "\n", "s_x", "=", "s_z", "*", "(", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "/", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ")", "\n", "\n", "x_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", ",", "\n", "round", "(", "s_x", ")", ",", "self", ".", "channel_average", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", "=", "self", ".", "model", ".", "track", "(", "x_crop", ")", "\n", "\n", "", "score", "=", "self", ".", "_convert_score", "(", "outputs", "[", "'cls'", "]", ")", "\n", "pred_bbox", "=", "self", ".", "_convert_bbox", "(", "outputs", "[", "'loc'", "]", ",", "self", ".", "anchors", ")", "\n", "\n", "def", "change", "(", "r", ")", ":", "\n", "            ", "return", "np", ".", "maximum", "(", "r", ",", "1.", "/", "r", ")", "\n", "\n", "", "def", "sz", "(", "w", ",", "h", ")", ":", "\n", "            ", "pad", "=", "(", "w", "+", "h", ")", "*", "0.5", "\n", "return", "np", ".", "sqrt", "(", "(", "w", "+", "pad", ")", "*", "(", "h", "+", "pad", ")", ")", "\n", "\n", "", "def", "normalize", "(", "score", ")", ":", "\n", "            ", "score", "=", "(", "score", "-", "np", ".", "min", "(", "score", ")", ")", "/", "(", "np", ".", "max", "(", "score", ")", "-", "np", ".", "min", "(", "score", ")", ")", "\n", "return", "score", "\n", "\n", "", "s_c", "=", "change", "(", "sz", "(", "pred_bbox", "[", "2", ",", ":", "]", ",", "pred_bbox", "[", "3", ",", ":", "]", ")", "/", "\n", "(", "sz", "(", "self", ".", "size", "[", "0", "]", "*", "scale_z", ",", "self", ".", "size", "[", "1", "]", "*", "scale_z", ")", ")", ")", "\n", "r_c", "=", "change", "(", "(", "self", ".", "size", "[", "0", "]", "/", "self", ".", "size", "[", "1", "]", ")", "/", "\n", "(", "pred_bbox", "[", "2", ",", ":", "]", "/", "pred_bbox", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty", "=", "np", ".", "exp", "(", "-", "(", "r_c", "*", "s_c", "-", "1", ")", "*", "cfg", ".", "TRACK", ".", "PENALTY_K", ")", "\n", "pscore", "=", "penalty", "*", "score", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "flag", ",", "s", "=", "self", ".", "classifier", ".", "track", "(", ")", "\n", "if", "flag", "==", "'not_found'", ":", "\n", "                ", "self", ".", "lost_count", "+=", "1", "\n", "", "else", ":", "\n", "                ", "self", ".", "lost_count", "=", "0", "\n", "\n", "", "confidence", "=", "Image", ".", "fromarray", "(", "s", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "confidence", "=", "np", ".", "array", "(", "confidence", ".", "resize", "(", "(", "self", ".", "score_size", ",", "self", ".", "score_size", ")", ")", ")", ".", "flatten", "(", ")", "\n", "pscore", "=", "pscore", ".", "reshape", "(", "5", ",", "-", "1", ")", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "COEE_CLASS", ")", "+", "normalize", "(", "confidence", ")", "*", "cfg", ".", "TRACK", ".", "COEE_CLASS", "\n", "pscore", "=", "pscore", ".", "flatten", "(", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "                ", "score_st", "=", "self", ".", "_convert_score", "(", "outputs", "[", "'cls_st'", "]", ")", "\n", "pred_bbox_st", "=", "self", ".", "_convert_bbox", "(", "outputs", "[", "'loc_st'", "]", ",", "self", ".", "anchors", ")", "\n", "s_c_st", "=", "change", "(", "sz", "(", "pred_bbox_st", "[", "2", ",", ":", "]", ",", "pred_bbox_st", "[", "3", ",", ":", "]", ")", "/", "\n", "(", "sz", "(", "self", ".", "size", "[", "0", "]", "*", "scale_z", ",", "self", ".", "size", "[", "1", "]", "*", "scale_z", ")", ")", ")", "\n", "r_c_st", "=", "change", "(", "(", "self", ".", "size", "[", "0", "]", "/", "self", ".", "size", "[", "1", "]", ")", "/", "\n", "(", "pred_bbox_st", "[", "2", ",", ":", "]", "/", "pred_bbox_st", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty_st", "=", "np", ".", "exp", "(", "-", "(", "r_c_st", "*", "s_c_st", "-", "1", ")", "*", "cfg", ".", "TRACK", ".", "PENALTY_K", ")", "\n", "pscore_st", "=", "penalty_st", "*", "score_st", "\n", "pscore_st", "=", "pscore_st", ".", "reshape", "(", "5", ",", "-", "1", ")", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "COEE_CLASS", ")", "+", "normalize", "(", "confidence", ")", "*", "cfg", ".", "TRACK", ".", "COEE_CLASS", "\n", "pscore_st", "=", "pscore_st", ".", "flatten", "(", ")", "\n", "\n", "", "", "pscore", "=", "pscore", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", ")", "+", "self", ".", "window", "*", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", "\n", "best_idx", "=", "np", ".", "argmax", "(", "pscore", ")", "\n", "bbox", "=", "pred_bbox", "[", ":", ",", "best_idx", "]", "/", "scale_z", "\n", "lr", "=", "penalty", "[", "best_idx", "]", "*", "score", "[", "best_idx", "]", "*", "cfg", ".", "TRACK", ".", "LR", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", "and", "cfg", ".", "TRACK", ".", "SHORT_TERM_DRIFT", "and", "self", ".", "lost_count", ">=", "8", ":", "\n", "            ", "cx", ",", "cy", "=", "bbox", "[", "0", "]", "/", "4", "+", "self", ".", "center_pos", "[", "0", "]", ",", "bbox", "[", "1", "]", "/", "4", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "cx", ",", "cy", "=", "bbox", "[", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", ",", "bbox", "[", "1", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "", "width", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "2", "]", "*", "lr", "\n", "height", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "3", "]", "*", "lr", "\n", "cx", ",", "cy", ",", "width", ",", "height", "=", "self", ".", "_bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", "and", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "            ", "pscore_st", "=", "pscore_st", "*", "(", "1", "-", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", ")", "+", "self", ".", "window", "*", "cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", "\n", "best_idx_st", "=", "np", ".", "argmax", "(", "pscore_st", ")", "\n", "bbox_st", "=", "pred_bbox_st", "[", ":", ",", "best_idx_st", "]", "/", "scale_z", "\n", "lr_st", "=", "penalty_st", "[", "best_idx_st", "]", "*", "score_st", "[", "best_idx_st", "]", "*", "cfg", ".", "TRACK", ".", "LR", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", "and", "cfg", ".", "TRACK", ".", "SHORT_TERM_DRIFT", "and", "self", ".", "lost_count", ">=", "8", ":", "\n", "                ", "cx_st", ",", "cy_st", "=", "bbox_st", "[", "0", "]", "/", "4", "+", "self", ".", "center_pos", "[", "0", "]", ",", "bbox_st", "[", "1", "]", "/", "4", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "cx_st", ",", "cy_st", "=", "bbox_st", "[", "0", "]", "+", "self", ".", "center_pos", "[", "0", "]", ",", "bbox_st", "[", "1", "]", "+", "self", ".", "center_pos", "[", "1", "]", "\n", "", "width_st", "=", "self", ".", "size", "[", "0", "]", "*", "(", "1", "-", "lr_st", ")", "+", "bbox_st", "[", "2", "]", "*", "lr_st", "\n", "height_st", "=", "self", ".", "size", "[", "1", "]", "*", "(", "1", "-", "lr_st", ")", "+", "bbox_st", "[", "3", "]", "*", "lr_st", "\n", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", "=", "self", ".", "_bbox_clip", "(", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "if", "iou", "(", "(", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", ")", ",", "(", "cx", ",", "cy", ",", "width", ",", "height", ")", ",", "wh", "=", "True", ")", ">=", "cfg", ".", "TRACK", ".", "TAU_REGRESSION", "and", "score_st", "[", "best_idx_st", "]", "-", "score", "[", "best_idx", "]", ">=", "cfg", ".", "TRACK", ".", "TAU_CLASSIFICATION", ":", "\n", "                ", "cx", ",", "cy", ",", "width", ",", "height", ",", "score", ",", "best_idx", "=", "cx_st", ",", "cy_st", ",", "width_st", ",", "height_st", ",", "score_st", ",", "best_idx_st", "\n", "\n", "", "", "self", ".", "center_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "self", ".", "size", "=", "np", ".", "array", "(", "[", "width", ",", "height", "]", ")", "\n", "bbox", "=", "[", "cx", "-", "width", "/", "2", ",", "cy", "-", "height", "/", "2", ",", "\n", "width", ",", "height", "]", "\n", "best_score", "=", "score", "[", "best_idx", "]", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "self", ".", "classifier", ".", "update", "(", "bbox", ",", "scale_z", ",", "flag", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "TEMPLATE_UPDATE", ":", "\n", "                ", "if", "torch", ".", "max", "(", "s", ")", ".", "item", "(", ")", ">=", "cfg", ".", "TRACK", ".", "TARGET_UPDATE_THRESHOLD", "and", "flag", "!=", "'hard_negative'", ":", "\n", "                    ", "if", "torch", ".", "max", "(", "s", ")", ".", "item", "(", ")", ">", "self", ".", "temp_max", ":", "\n", "                        ", "self", ".", "temp_max", "=", "torch", ".", "max", "(", "s", ")", ".", "item", "(", ")", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "z_crop", "=", "self", ".", "get_subwindow", "(", "img", ",", "self", ".", "center_pos", ",", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", ",", "s_z", ",", "self", ".", "channel_average", ")", "\n", "\n", "", "", "if", "(", "self", ".", "frame_num", "-", "1", ")", "%", "cfg", ".", "TRACK", ".", "TARGET_UPDATE_SKIPPING", "==", "0", ":", "\n", "                    ", "self", ".", "temp_max", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "self", ".", "model", ".", "template_short_term", "(", "self", ".", "z_crop", ")", "\n", "\n", "", "", "", "", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "            ", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'best_score'", ":", "best_score", ",", "\n", "'flag'", ":", "flag", "\n", "}", "\n", "", "else", ":", "\n", "            ", "return", "{", "\n", "'bbox'", ":", "bbox", ",", "\n", "'best_score'", ":", "best_score", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.tracker_builder.build_tracker": [[23, 25], ["None"], "function", ["None"], ["def", "build_tracker", "(", "model", ")", ":", "\n", "    ", "return", "TRACKS", "[", "cfg", ".", "TRACK", ".", "TYPE", "]", "(", "model", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.optim.FactorizedConvProblem.__init__": [[8, 26], ["optim.FactorizedConvProblem.filter_reg.concat().concat().concat", "optim.FactorizedConvProblem.filter_reg.concat", "optim.FactorizedConvProblem.filter_reg.concat().concat", "optim.FactorizedConvProblem.filter_reg.concat"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat"], ["    ", "def", "__init__", "(", "self", ",", "training_samples", ":", "TensorList", ",", "y", ":", "TensorList", ",", "use_attention", ":", "bool", ",", "\n", "filter_reg", ":", "torch", ".", "Tensor", ",", "projection_reg", ",", "sample_weights", ":", "TensorList", ",", "\n", "projection_activation", ",", "att_activation", ",", "response_activation", ")", ":", "\n", "\n", "        ", "self", ".", "training_samples", "=", "training_samples", "\n", "self", ".", "y", "=", "y", "\n", "self", ".", "sample_weights", "=", "sample_weights", "\n", "self", ".", "use_attetion", "=", "use_attention", "\n", "self", ".", "filter_reg", "=", "filter_reg", "\n", "self", ".", "projection_reg", "=", "projection_reg", "\n", "self", ".", "projection_activation", "=", "projection_activation", "\n", "self", ".", "att_activation", "=", "att_activation", "\n", "self", ".", "response_activation", "=", "response_activation", "\n", "\n", "if", "self", ".", "use_attetion", ":", "\n", "            ", "self", ".", "diag_M", "=", "self", ".", "filter_reg", ".", "concat", "(", "projection_reg", ")", ".", "concat", "(", "projection_reg", ")", ".", "concat", "(", "projection_reg", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "diag_M", "=", "self", ".", "filter_reg", ".", "concat", "(", "projection_reg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.optim.FactorizedConvProblem.__call__": [[27, 77], ["pysot.tracker.classifier.libs.operation.conv1x1().apply", "pysot.tracker.classifier.libs.operation.conv2d().apply", "pysot.tracker.classifier.libs.operation.conv2d().apply.extend", "pysot.tracker.classifier.libs.operation.conv2d().apply.extend", "optim.FactorizedConvProblem.sample_weights.sqrt().view", "pysot.tracker.classifier.libs.operation.conv2d().apply.extend", "pysot.tracker.classifier.libs.operation.conv2d().apply.extend", "pysot.tracker.classifier.libs.operation.conv1x1", "pysot.tracker.classifier.libs.operation.adaptive_avg_pool2d", "pysot.tracker.classifier.libs.operation.conv1x1().apply", "pysot.tracker.classifier.libs.operation.sigmoid", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.operation.matmul", "pysot.tracker.classifier.libs.operation.matmul", "pysot.tracker.classifier.libs.operation.conv2d", "optim.FactorizedConvProblem.filter_reg.apply", "optim.FactorizedConvProblem.projection_reg.apply", "pysot.tracker.classifier.libs.operation.conv1x1", "pysot.tracker.classifier.libs.operation.spatial_attention", "NotImplementedError", "optim.FactorizedConvProblem.sample_weights.sqrt", "optim.FactorizedConvProblem.projection_reg.apply", "optim.FactorizedConvProblem.projection_reg.apply", "len", "len", "pysot.tracker.classifier.libs.operation.conv1x1", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros", "torch.zeros", "compressed_samples[].size", "compressed_samples[].size", "compressed_samples[].size", "compressed_samples[].size", "compressed_samples[].size"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv1x1", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.adaptive_avg_pool2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.sigmoid", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv1x1", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.spatial_attention", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv1x1"], ["", "", "def", "__call__", "(", "self", ",", "x", ":", "TensorList", ")", ":", "\n", "\n", "        ", "if", "self", ".", "use_attetion", ":", "\n", "            ", "filter", "=", "x", "[", ":", "1", "]", "\n", "fc2", "=", "x", "[", "1", ":", "2", "]", "\n", "fc1", "=", "x", "[", "2", ":", "3", "]", "\n", "P", "=", "x", "[", "3", ":", "4", "]", "\n", "", "else", ":", "\n", "            ", "filter", "=", "x", "[", ":", "len", "(", "x", ")", "//", "2", "]", "# w2 in paper", "\n", "P", "=", "x", "[", "len", "(", "x", ")", "//", "2", ":", "]", "# w1 in paper", "\n", "\n", "# Compression module", "\n", "", "compressed_samples", "=", "operation", ".", "conv1x1", "(", "self", ".", "training_samples", ",", "P", ")", ".", "apply", "(", "self", ".", "projection_activation", ")", "\n", "\n", "# Attention module", "\n", "if", "self", ".", "use_attetion", ":", "\n", "            ", "if", "cfg", ".", "TRACK", ".", "CHANNEL_ATTENTION", ":", "\n", "                ", "global_average", "=", "operation", ".", "adaptive_avg_pool2d", "(", "compressed_samples", ",", "1", ")", "\n", "temp_variables", "=", "operation", ".", "conv1x1", "(", "global_average", ",", "fc1", ")", ".", "apply", "(", "self", ".", "att_activation", ")", "\n", "channel_attention", "=", "operation", ".", "sigmoid", "(", "operation", ".", "conv1x1", "(", "temp_variables", ",", "fc2", ")", ")", "\n", "", "else", ":", "\n", "                ", "channel_attention", "=", "TensorList", "(", "\n", "[", "torch", ".", "zeros", "(", "compressed_samples", "[", "0", "]", ".", "size", "(", "0", ")", ",", "compressed_samples", "[", "0", "]", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "]", "\n", ")", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "SPATIAL_ATTENTION", "==", "'none'", ":", "\n", "                ", "spatial_attention", "=", "TensorList", "(", "\n", "[", "torch", ".", "zeros", "(", "compressed_samples", "[", "0", "]", ".", "size", "(", "0", ")", ",", "1", ",", "compressed_samples", "[", "0", "]", ".", "size", "(", "2", ")", ",", "\n", "compressed_samples", "[", "0", "]", ".", "size", "(", "3", ")", ")", ".", "cuda", "(", ")", "]", "\n", ")", "\n", "", "elif", "cfg", ".", "TRACK", ".", "SPATIAL_ATTENTION", "==", "'pool'", ":", "\n", "                ", "spatial_attention", "=", "operation", ".", "spatial_attention", "(", "compressed_samples", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", "'No spatial attention Implemented'", ")", "\n", "\n", "", "compressed_samples", "=", "operation", ".", "matmul", "(", "compressed_samples", ",", "spatial_attention", ")", "+", "operation", ".", "matmul", "(", "compressed_samples", ",", "channel_attention", ")", "\n", "\n", "# Filter module", "\n", "", "residuals", "=", "operation", ".", "conv2d", "(", "compressed_samples", ",", "filter", ",", "mode", "=", "'same'", ")", ".", "apply", "(", "self", ".", "response_activation", ")", "\n", "residuals", "=", "residuals", "-", "self", ".", "y", "\n", "residuals", "=", "self", ".", "sample_weights", ".", "sqrt", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "*", "residuals", "\n", "\n", "residuals", ".", "extend", "(", "self", ".", "filter_reg", ".", "apply", "(", "math", ".", "sqrt", ")", "*", "filter", ")", "\n", "if", "self", ".", "use_attetion", ":", "\n", "            ", "residuals", ".", "extend", "(", "self", ".", "projection_reg", ".", "apply", "(", "math", ".", "sqrt", ")", "*", "fc2", ")", "\n", "residuals", ".", "extend", "(", "self", ".", "projection_reg", ".", "apply", "(", "math", ".", "sqrt", ")", "*", "fc1", ")", "\n", "", "residuals", ".", "extend", "(", "self", ".", "projection_reg", ".", "apply", "(", "math", ".", "sqrt", ")", "*", "P", ")", "\n", "\n", "return", "residuals", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.optim.FactorizedConvProblem.ip_input": [[79, 115], ["pysot.tracker.classifier.libs.operation.conv2d().view", "pysot.tracker.classifier.libs.operation.conv2d().view", "pysot.tracker.classifier.libs.operation.conv2d().view", "pysot.tracker.classifier.libs.operation.conv2d().view", "pysot.tracker.classifier.libs.operation.conv2d().view.concat().concat().concat", "pysot.tracker.classifier.libs.operation.conv2d().view", "pysot.tracker.classifier.libs.operation.conv2d().view", "pysot.tracker.classifier.libs.operation.conv2d().view.concat", "pysot.tracker.classifier.libs.operation.conv2d().view.clone", "len", "pysot.tracker.classifier.libs.operation.conv2d().view.clone", "pysot.tracker.classifier.libs.operation.conv2d", "pysot.tracker.classifier.libs.operation.conv2d", "pysot.tracker.classifier.libs.operation.conv2d", "pysot.tracker.classifier.libs.operation.conv2d", "pysot.tracker.classifier.libs.operation.conv2d().view.concat().concat", "pysot.tracker.classifier.libs.operation.conv2d", "pysot.tracker.classifier.libs.operation.conv2d", "a_f2.view", "b_f2.view", "a_f1.view", "b_f1.view", "a_P.view", "b_P.view", "pysot.tracker.classifier.libs.operation.conv2d().view.clone", "a_P.view", "b_P.view", "pysot.tracker.classifier.libs.operation.conv2d().view.concat", "pysot.tracker.classifier.libs.operation.conv2d().view.clone"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat"], ["", "def", "ip_input", "(", "self", ",", "a", ":", "TensorList", ",", "b", ":", "TensorList", ")", ":", "\n", "\n", "        ", "if", "self", ".", "use_attetion", ":", "\n", "            ", "a_filter", "=", "a", "[", ":", "1", "]", "\n", "a_f2", "=", "a", "[", "1", ":", "2", "]", "\n", "a_f1", "=", "a", "[", "2", ":", "3", "]", "\n", "a_P", "=", "a", "[", "3", ":", "]", "\n", "b_filter", "=", "b", "[", ":", "1", "]", "\n", "b_f2", "=", "b", "[", "1", ":", "2", "]", "\n", "b_f1", "=", "b", "[", "2", ":", "3", "]", "\n", "b_P", "=", "b", "[", "3", ":", "]", "\n", "\n", "ip_out", "=", "operation", ".", "conv2d", "(", "a_filter", ",", "b_filter", ")", ".", "view", "(", "-", "1", ")", "\n", "ip_out", "+=", "operation", ".", "conv2d", "(", "a_f2", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ",", "b_f2", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "ip_out", "+=", "operation", ".", "conv2d", "(", "a_f1", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ",", "b_f1", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "ip_out", "+=", "operation", ".", "conv2d", "(", "a_P", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ",", "b_P", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "return", "ip_out", ".", "concat", "(", "ip_out", ".", "clone", "(", ")", ")", ".", "concat", "(", "ip_out", ".", "clone", "(", ")", ")", ".", "concat", "(", "ip_out", ".", "clone", "(", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "num", "=", "len", "(", "a", ")", "//", "2", "# Number of filters", "\n", "a_filter", "=", "a", "[", ":", "num", "]", "\n", "b_filter", "=", "b", "[", ":", "num", "]", "\n", "a_P", "=", "a", "[", "num", ":", "]", "\n", "b_P", "=", "b", "[", "num", ":", "]", "\n", "\n", "# Filter inner product", "\n", "# ip_out = a_filter.reshape(-1) @ b_filter.reshape(-1)", "\n", "ip_out", "=", "operation", ".", "conv2d", "(", "a_filter", ",", "b_filter", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "# Add projection matrix part", "\n", "# ip_out += a_P.reshape(-1) @ b_P.reshape(-1)", "\n", "ip_out", "+=", "operation", ".", "conv2d", "(", "a_P", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ",", "b_P", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "# Have independent inner products for each filter", "\n", "return", "ip_out", ".", "concat", "(", "ip_out", ".", "clone", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.optim.FactorizedConvProblem.M1": [[116, 119], ["None"], "methods", ["None"], ["", "", "def", "M1", "(", "self", ",", "x", ":", "TensorList", ")", ":", "\n", "# factorized convolution", "\n", "        ", "return", "x", "/", "self", ".", "diag_M", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.optim.ConvProblem.__init__": [[121, 127], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "training_samples", ":", "TensorList", ",", "y", ":", "TensorList", ",", "filter_reg", ":", "torch", ".", "Tensor", ",", "sample_weights", ":", "TensorList", ",", "response_activation", ")", ":", "\n", "        ", "self", ".", "training_samples", "=", "training_samples", "\n", "self", ".", "y", "=", "y", "\n", "self", ".", "filter_reg", "=", "filter_reg", "\n", "self", ".", "sample_weights", "=", "sample_weights", "\n", "self", ".", "response_activation", "=", "response_activation", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.optim.ConvProblem.__call__": [[128, 143], ["pysot.tracker.classifier.libs.operation.conv2d().apply", "pysot.tracker.classifier.libs.operation.conv2d().apply.extend", "optim.ConvProblem.sample_weights.sqrt().view", "pysot.tracker.classifier.libs.operation.conv2d", "optim.ConvProblem.filter_reg.apply", "optim.ConvProblem.sample_weights.sqrt"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply"], ["", "def", "__call__", "(", "self", ",", "x", ":", "TensorList", ")", ":", "\n", "        ", "\"\"\"\n        Compute residuals\n        :param x: [filters]\n        :return: [data_terms, filter_regularizations]\n        \"\"\"", "\n", "# Do convolution and compute residuals", "\n", "residuals", "=", "operation", ".", "conv2d", "(", "self", ".", "training_samples", ",", "x", ",", "mode", "=", "'same'", ")", ".", "apply", "(", "self", ".", "response_activation", ")", "\n", "residuals", "=", "residuals", "-", "self", ".", "y", "\n", "residuals", "=", "self", ".", "sample_weights", ".", "sqrt", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "*", "residuals", "\n", "\n", "# Add regularization for projection matrix", "\n", "residuals", ".", "extend", "(", "self", ".", "filter_reg", ".", "apply", "(", "math", ".", "sqrt", ")", "*", "x", ")", "\n", "\n", "return", "residuals", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.optim.ConvProblem.ip_input": [[144, 148], ["pysot.tracker.classifier.libs.operation.conv2d().view", "pysot.tracker.classifier.libs.operation.conv2d"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d"], ["", "def", "ip_input", "(", "self", ",", "a", ":", "TensorList", ",", "b", ":", "TensorList", ")", ":", "\n", "# return a.reshape(-1) @ b.reshape(-1)", "\n", "# return (a * b).sum()", "\n", "        ", "return", "operation", ".", "conv2d", "(", "a", ",", "b", ")", ".", "view", "(", "-", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.__init__": [[22, 24], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.initialize": [[25, 81], ["torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.TensorList", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "numpy.sqrt", "base_classifier.BaseClassifier.init_learning", "base_classifier.BaseClassifier.generate_init_samples", "base_classifier.BaseClassifier.init_projection_matrix", "base_classifier.BaseClassifier.init_label_function", "base_classifier.BaseClassifier.init_memory", "base_classifier.BaseClassifier.init_optimization", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "base_classifier.BaseClassifier.init_attention_layer", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "sum", "sum"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_learning", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.generate_init_samples", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_projection_matrix", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_label_function", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_memory", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_optimization", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_attention_layer"], ["", "def", "initialize", "(", "self", ",", "image", ",", "state", ")", ":", "\n", "\n", "# Initialize some stuff", "\n", "        ", "self", ".", "frame_num", "=", "1", "\n", "\n", "self", ".", "img_sample_sz", "=", "torch", ".", "round", "(", "torch", ".", "Tensor", "(", "[", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", ",", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "]", ")", ")", "\n", "if", "'alex'", "in", "cfg", ".", "META_ARC", ":", "\n", "            ", "l", "=", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "//", "cfg", ".", "ANCHOR", ".", "STRIDE", "-", "cfg", ".", "ANCHOR", ".", "STRIDE", "-", "1", "\n", "", "else", ":", "\n", "            ", "l", "=", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", "//", "cfg", ".", "ANCHOR", ".", "STRIDE", "\n", "", "self", ".", "output_sz", "=", "torch", ".", "Tensor", "(", "(", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", ",", "cfg", ".", "TRACK", ".", "INSTANCE_SIZE", ")", ")", "\n", "self", ".", "feature_sz", "=", "TensorList", "(", "[", "torch", ".", "Tensor", "(", "[", "l", ",", "l", "]", ")", "]", ")", "\n", "self", ".", "kernel_size", "=", "TensorList", "(", "[", "cfg", ".", "TRACK", ".", "KERNEL_SIZE", "]", ")", "\n", "self", ".", "score_sz", "=", "cfg", ".", "TRAIN", ".", "OUTPUT_SIZE", "\n", "\n", "# Get all geometry information", "\n", "self", ".", "pos", "=", "torch", ".", "Tensor", "(", "[", "state", "[", "1", "]", "+", "(", "state", "[", "3", "]", "-", "1", ")", "/", "2", ",", "state", "[", "0", "]", "+", "(", "state", "[", "2", "]", "-", "1", ")", "/", "2", "]", ")", "\n", "self", ".", "target_sz", "=", "torch", ".", "Tensor", "(", "[", "state", "[", "3", "]", ",", "state", "[", "2", "]", "]", ")", "\n", "\n", "wc_z", "=", "self", ".", "target_sz", "[", "1", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "sum", "(", "self", ".", "target_sz", ")", "\n", "hc_z", "=", "self", ".", "target_sz", "[", "0", "]", "+", "cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "sum", "(", "self", ".", "target_sz", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "wc_z", "*", "hc_z", ")", "\n", "self", ".", "scale", "=", "cfg", ".", "TRACK", ".", "EXEMPLAR_SIZE", "/", "s_z", "\n", "\n", "# hinge mask", "\n", "self", ".", "use_attention_layer", "=", "cfg", ".", "TRACK", ".", "USE_ATTENTION_LAYER", "and", "(", "cfg", ".", "TRACK", ".", "CHANNEL_ATTENTION", "or", "cfg", ".", "TRACK", ".", "SPATIAL_ATTENTION", "!=", "'none'", ")", "\n", "\n", "# Optimization options", "\n", "self", ".", "precond_learning_rate", "=", "cfg", ".", "TRACK", ".", "LEARNING_RATE", "\n", "self", ".", "CG_forgetting_rate", "=", "cfg", ".", "TRACK", ".", "CG_FORGETTING_RATE", "\n", "if", "not", "self", ".", "CG_forgetting_rate", "or", "self", ".", "precond_learning_rate", ">=", "1", ":", "\n", "            ", "self", ".", "direction_forget_factor", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "direction_forget_factor", "=", "(", "1", "-", "self", ".", "precond_learning_rate", ")", "**", "self", ".", "CG_forgetting_rate", "\n", "\n", "# Initialize some learning things", "\n", "", "self", ".", "init_learning", "(", ")", "\n", "\n", "# Extract and transform sample", "\n", "train_x", "=", "self", ".", "generate_init_samples", "(", "image", ")", "\n", "\n", "# Initialize projection matrix", "\n", "self", ".", "init_projection_matrix", "(", "train_x", ")", "\n", "\n", "# Generate label function", "\n", "init_y", "=", "self", ".", "init_label_function", "(", "train_x", ")", "\n", "\n", "# Init memory", "\n", "self", ".", "init_memory", "(", "train_x", ")", "\n", "\n", "# Init attention layer", "\n", "if", "self", ".", "use_attention_layer", ":", "\n", "            ", "self", ".", "init_attention_layer", "(", "train_x", ")", "\n", "\n", "# Init optimizer and do initial optimization", "\n", "", "self", ".", "init_optimization", "(", "train_x", ",", "init_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_optimization": [[82, 172], ["pysot.tracker.classifier.libs.TensorList", "base_classifier.BaseClassifier.project_sample", "zip", "pysot.tracker.classifier.optim.ConvProblem", "base_classifier.BaseClassifier.filter_optimizer.run", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.optim.FactorizedConvProblem", "isinstance", "pysot.tracker.classifier.libs.optimization.ConjugateGradient", "base_classifier.BaseClassifier.filter_optimizer.run", "x.new_zeros", "ValueError", "base_classifier.BaseClassifier.filter.concat().concat().concat", "base_classifier.BaseClassifier.filter.concat", "pysot.tracker.classifier.libs.optimization.GaussNewtonCG", "base_classifier.BaseClassifier.joint_optimizer.run", "base_classifier.BaseClassifier.joint_optimizer.run", "zip", "RuntimeError", "pysot.tracker.classifier.libs.optimization.GradientDescent", "zip", "f.normal_", "pysot.tracker.classifier.libs.optimization.GradientDescentL2", "base_classifier.BaseClassifier.filter.concat().concat", "pysot.tracker.classifier.libs.optimization.NewtonCG", "open", "f.write", "f.numel", "pysot.tracker.classifier.libs.optimization.GradientDescent", "base_classifier.BaseClassifier.filter.concat", "v.item"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.project_sample", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.run", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.run", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.run", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.run", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat"], ["", "def", "init_optimization", "(", "self", ",", "train_x", ",", "init_y", ")", ":", "\n", "# Initialize filter", "\n", "        ", "filter_init_method", "=", "cfg", ".", "TRACK", ".", "FILTER_INIT_METHOD", "\n", "self", ".", "filter", "=", "TensorList", "(", "\n", "[", "x", ".", "new_zeros", "(", "1", ",", "cdim", ",", "sz", "[", "0", "]", ",", "sz", "[", "1", "]", ")", "for", "x", ",", "cdim", ",", "sz", "in", "zip", "(", "train_x", ",", "self", ".", "compressed_dim", ",", "self", ".", "kernel_size", ")", "]", "\n", ")", "\n", "if", "filter_init_method", "==", "'zeros'", ":", "\n", "            ", "pass", "\n", "", "elif", "filter_init_method", "==", "'randn'", ":", "\n", "            ", "for", "f", "in", "self", ".", "filter", ":", "\n", "                ", "f", ".", "normal_", "(", "0", ",", "1", "/", "f", ".", "numel", "(", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown \"filter_init_method\"'", ")", "\n", "\n", "# Get parameters", "\n", "", "self", ".", "update_projection_matrix", "=", "cfg", ".", "TRACK", ".", "UPDATE_PROJECTION_MATRIX", "and", "cfg", ".", "TRACK", ".", "USE_PROJECTION_MATRIX", "\n", "optimizer", "=", "cfg", ".", "TRACK", ".", "OPTIMIZER", "\n", "\n", "# Setup factorized joint optimization", "\n", "if", "self", ".", "update_projection_matrix", ":", "\n", "            ", "self", ".", "projection_reg", "=", "TensorList", "(", "[", "cfg", ".", "TRACK", ".", "PROJECTION_REG", "]", ")", "\n", "\n", "self", ".", "joint_problem", "=", "FactorizedConvProblem", "(", "\n", "self", ".", "init_training_samples", ",", "init_y", ",", "self", ".", "use_attention_layer", ",", "self", ".", "filter_reg", ",", "self", ".", "projection_reg", ",", "\n", "self", ".", "init_sample_weights", ",", "self", ".", "projection_activation", ",", "self", ".", "att_activation", ",", "self", ".", "response_activation", "\n", ")", "\n", "\n", "# Variable containing both filter and projection matrix", "\n", "if", "self", ".", "use_attention_layer", ":", "\n", "                ", "joint_var", "=", "self", ".", "filter", ".", "concat", "(", "self", ".", "channel_att_fc2", ")", ".", "concat", "(", "self", ".", "channel_att_fc1", ")", ".", "concat", "(", "self", ".", "projection_matrix", ")", "\n", "", "else", ":", "\n", "                ", "joint_var", "=", "self", ".", "filter", ".", "concat", "(", "self", ".", "projection_matrix", ")", "\n", "\n", "# Initialize optimizer", "\n", "", "plot_show", "=", "cfg", ".", "TRACK", ".", "DEBUG_CLASS", "and", "cfg", ".", "TRACK", ".", "VISUALIZE_CLASS", "\n", "if", "optimizer", "==", "'GaussNewtonCG'", ":", "\n", "                ", "self", ".", "joint_optimizer", "=", "GaussNewtonCG", "(", "self", ".", "joint_problem", ",", "joint_var", ",", "plotting", "=", "plot_show", ",", "analyze", "=", "cfg", ".", "TRACK", ".", "ANALYZE_CONVERGENCE", ",", "fig_num", "=", "(", "12", ",", "13", ",", "14", ")", ")", "\n", "", "elif", "optimizer", "==", "'GradientDescentL2'", ":", "\n", "                ", "self", ".", "joint_optimizer", "=", "GradientDescentL2", "(", "self", ".", "joint_problem", ",", "joint_var", ",", "cfg", ".", "TRACK", ".", "OPTIMIZER_STEP_LENGTH", ",", "cfg", ".", "TRACK", ".", "OPTIMIZER_MOMENTUM", ",", "plotting", "=", "plot_show", ",", "debug", "=", "cfg", ".", "TRACK", ".", "ANALYZE_CONVERGENCE", ",", "fig_num", "=", "(", "12", ",", "13", ")", ")", "\n", "", "elif", "optimizer", "==", "'NewtonCG'", ":", "\n", "                ", "self", ".", "joint_optimizer", "=", "NewtonCG", "(", "self", ".", "joint_problem", ",", "joint_var", ",", "plotting", "=", "plot_show", ",", "analyze", "=", "cfg", ".", "TRACK", ".", "ANALYZE_CONVERGENCE", ",", "fig_num", "=", "(", "12", ",", "13", ",", "14", ")", ")", "\n", "", "elif", "optimizer", "==", "'GradientDescent'", ":", "\n", "                ", "self", ".", "joint_optimizer", "=", "GradientDescent", "(", "self", ".", "joint_problem", ",", "joint_var", ",", "cfg", ".", "TRACK", ".", "OPTIMIZER_STEP_LENGTH", ",", "cfg", ".", "TRACK", ".", "OPTIMIZER_MOMENTUM", ",", "plotting", "=", "plot_show", ",", "debug", "=", "cfg", ".", "TRACK", ".", "ANALYZE_CONVERGENCE", ",", "fig_num", "=", "(", "12", ",", "13", ")", ")", "\n", "\n", "# Do joint optimization", "\n", "", "if", "isinstance", "(", "cfg", ".", "TRACK", ".", "INIT_CG_ITER", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "self", ".", "joint_optimizer", ".", "run", "(", "cfg", ".", "TRACK", ".", "INIT_CG_ITER", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "joint_optimizer", ".", "run", "(", "cfg", ".", "TRACK", ".", "INIT_CG_ITER", "//", "cfg", ".", "TRACK", ".", "INIT_GN_ITER", ",", "cfg", ".", "TRACK", ".", "INIT_GN_ITER", ")", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "ANALYZE_CONVERGENCE", ":", "\n", "                ", "opt_name", "=", "'CG'", "if", "cfg", ".", "TRACK", ".", "CG_OPTIMIZER", "else", "'GD'", "\n", "for", "val_name", ",", "values", "in", "zip", "(", "[", "'loss'", ",", "'gradient'", "]", ",", "[", "self", ".", "joint_optimizer", ".", "losses", ",", "self", ".", "joint_optimizer", ".", "gradient_mags", "]", ")", ":", "\n", "                    ", "val_str", "=", "' '", ".", "join", "(", "[", "'{:.8e}'", ".", "format", "(", "v", ".", "item", "(", ")", ")", "for", "v", "in", "values", "]", ")", "\n", "file_name", "=", "'{}_{}.txt'", ".", "format", "(", "opt_name", ",", "val_name", ")", "\n", "with", "open", "(", "file_name", ",", "'a'", ")", "as", "f", ":", "\n", "                        ", "f", ".", "write", "(", "val_str", "+", "'\\n'", ")", "\n", "", "", "raise", "RuntimeError", "(", "'Exiting'", ")", "\n", "\n", "# Re-project samples with the new projection/attention layer", "\n", "", "", "compressed_samples", "=", "self", ".", "project_sample", "(", "self", ".", "init_training_samples", ",", "self", ".", "projection_matrix", ")", "\n", "for", "train_samp", ",", "init_samp", "in", "zip", "(", "self", ".", "training_samples", ",", "compressed_samples", ")", ":", "\n", "            ", "train_samp", "[", ":", "init_samp", ".", "shape", "[", "0", "]", ",", "...", "]", "=", "init_samp", "\n", "\n", "# Initialize optimizer", "\n", "", "self", ".", "conv_problem", "=", "ConvProblem", "(", "self", ".", "training_samples", ",", "self", ".", "y", ",", "self", ".", "filter_reg", ",", "\n", "self", ".", "sample_weights", ",", "self", ".", "response_activation", ")", "\n", "\n", "if", "optimizer", "==", "'GaussNewtonCG'", ":", "\n", "            ", "self", ".", "filter_optimizer", "=", "ConjugateGradient", "(", "self", ".", "conv_problem", ",", "self", ".", "filter", ",", "fletcher_reeves", "=", "cfg", ".", "TRACK", ".", "FLETCHER_REEVES", ",", "\n", "direction_forget_factor", "=", "self", ".", "direction_forget_factor", ",", "debug", "=", "plot_show", ",", "fig_num", "=", "(", "12", ",", "13", ")", ")", "\n", "", "elif", "optimizer", "==", "'GradientDescent'", ":", "\n", "            ", "self", ".", "filter_optimizer", "=", "GradientDescent", "(", "self", ".", "conv_problem", ",", "self", ".", "filter", ",", "cfg", ".", "TRACK", ".", "OPTIMIZER_STEP_LENGTH", ",", "\n", "cfg", ".", "TRACK", ".", "OPTIMIZER_MOMENTUM", ",", "debug", "=", "plot_show", ",", "fig_num", "=", "12", ")", "\n", "\n", "# Transfer losses from previous optimization", "\n", "", "if", "self", ".", "update_projection_matrix", ":", "\n", "            ", "self", ".", "filter_optimizer", ".", "residuals", "=", "self", ".", "joint_optimizer", ".", "residuals", "\n", "self", ".", "filter_optimizer", ".", "losses", "=", "self", ".", "joint_optimizer", ".", "losses", "\n", "\n", "", "if", "not", "self", ".", "update_projection_matrix", ":", "\n", "            ", "self", ".", "filter_optimizer", ".", "run", "(", "cfg", ".", "TRACK", ".", "INIT_CG_ITER", ")", "\n", "\n", "# Post optimization", "\n", "", "self", ".", "filter_optimizer", ".", "run", "(", "cfg", ".", "TRACK", ".", "POST_INIT_CG_ITER", ")", "\n", "\n", "# Free memory", "\n", "del", "self", ".", "init_training_samples", "\n", "if", "self", ".", "use_projection_matrix", ":", "\n", "            ", "del", "self", ".", "joint_problem", ",", "self", ".", "joint_optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.track": [[174, 190], ["base_classifier.BaseClassifier.pos.round", "base_classifier.BaseClassifier.extract_processed_sample", "base_classifier.BaseClassifier.apply_filter", "base_classifier.BaseClassifier.localize_target", "pysot.tracker.classifier.libs.plotting.show_tensor", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.extract_processed_sample", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.apply_filter", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.localize_target", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.show_tensor"], ["", "", "def", "track", "(", "self", ",", "scale_idx", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "frame_num", "+=", "1", "\n", "\n", "# Get infer sample without shift", "\n", "self", ".", "sample_pos", "=", "self", ".", "pos", ".", "round", "(", ")", "\n", "self", ".", "feat_x", "=", "self", ".", "extract_processed_sample", "(", "scale_idx", "=", "scale_idx", ")", "\n", "\n", "# Compute scores", "\n", "scores_raw", "=", "self", ".", "apply_filter", "(", "self", ".", "feat_x", ")", "\n", "s", ",", "flag", "=", "self", ".", "localize_target", "(", "scores_raw", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "VISUALIZE_CLASS", ":", "\n", "            ", "show_tensor", "(", "s", ",", "5", ",", "title", "=", "'Classification Max score = {:.2f}'", ".", "format", "(", "torch", ".", "max", "(", "s", ")", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "return", "flag", ",", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update": [[191, 215], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "base_classifier.BaseClassifier.get_label_function", "pysot.tracker.classifier.libs.TensorList", "base_classifier.BaseClassifier.update_memory", "base_classifier.BaseClassifier.filter_optimizer.run", "base_classifier.BaseClassifier.filter_optimizer.run"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.get_label_function", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update_memory", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.run", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.run"], ["", "def", "update", "(", "self", ",", "state", ",", "scale_z", ",", "flag", ")", ":", "\n", "\n", "        ", "if", "flag", "!=", "'not_found'", ":", "\n", "            ", "self", ".", "pos", "=", "torch", ".", "Tensor", "(", "[", "state", "[", "1", "]", "+", "(", "state", "[", "3", "]", "-", "1", ")", "/", "2.", ",", "state", "[", "0", "]", "+", "(", "state", "[", "2", "]", "-", "1", ")", "/", "2.", "]", ")", "\n", "self", ".", "target_sz", "=", "torch", ".", "Tensor", "(", "[", "state", "[", "3", "]", ",", "state", "[", "2", "]", "]", ")", "\n", "\n", "# Check flags and set learning rate if hard negative", "\n", "", "update_flag", "=", "flag", "not", "in", "[", "'not_found'", ",", "'uncertain'", "]", "\n", "hard_negative", "=", "(", "flag", "==", "'hard_negative'", ")", "\n", "learning_rate", "=", "cfg", ".", "TRACK", ".", "HARD_NEGATIVE_LEARNING_RATE", "if", "hard_negative", "else", "cfg", ".", "TRACK", ".", "LEARNING_RATE", "\n", "\n", "if", "update_flag", ":", "\n", "# Create label for sample", "\n", "            ", "train_y", "=", "self", ".", "get_label_function", "(", "self", ".", "sample_pos", ",", "scale_z", ",", "self", ".", "target_sz", ")", "\n", "train_x", "=", "TensorList", "(", "[", "x", "for", "x", "in", "self", ".", "feat_x", "]", ")", "\n", "\n", "# Update memory", "\n", "self", ".", "update_memory", "(", "train_x", ",", "train_y", ",", "learning_rate", ")", "\n", "\n", "# Train filter", "\n", "", "if", "hard_negative", ":", "\n", "            ", "self", ".", "filter_optimizer", ".", "run", "(", "cfg", ".", "TRACK", ".", "HARD_NEGATIVE_CG_ITER", ")", "\n", "", "elif", "(", "self", ".", "frame_num", "-", "1", ")", "%", "cfg", ".", "TRACK", ".", "TRAIN_SKIPPING", "==", "0", ":", "\n", "            ", "self", ".", "filter_optimizer", ".", "run", "(", "cfg", ".", "TRACK", ".", "CG_ITER", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.apply_filter": [[216, 218], ["pysot.tracker.classifier.libs.operation.conv2d"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d"], ["", "", "def", "apply_filter", "(", "self", ",", "sample_x", ":", "TensorList", ")", ":", "\n", "        ", "return", "operation", ".", "conv2d", "(", "sample_x", ",", "self", ".", "filter", ",", "mode", "=", "'same'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.localize_target": [[219, 237], ["enumerate", "pysot.tracker.classifier.libs.fourier.sum_fs", "pysot.tracker.classifier.libs.fourier.sample_fs().squeeze", "pysot.tracker.classifier.libs.fourier.cfft2", "zip", "pysot.tracker.classifier.libs.fourier.shift_fs", "base_classifier.BaseClassifier.localize_advanced", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "scores_raw.size", "scores_raw.size", "pysot.tracker.classifier.libs.fourier.sample_fs", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.sum_fs", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.cfft2", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.shift_fs", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.localize_advanced", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.sample_fs"], ["", "def", "localize_target", "(", "self", ",", "scores_raw", ")", ":", "\n", "        ", "sf_weighted", "=", "fourier", ".", "cfft2", "(", "scores_raw", ")", "/", "(", "scores_raw", ".", "size", "(", "2", ")", "*", "scores_raw", ".", "size", "(", "3", ")", ")", "\n", "for", "i", ",", "(", "sz", ",", "ksz", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "feature_sz", ",", "self", ".", "kernel_size", ")", ")", ":", "\n", "            ", "sf_weighted", "[", "i", "]", "=", "fourier", ".", "shift_fs", "(", "sf_weighted", "[", "i", "]", ",", "math", ".", "pi", "*", "(", "1", "-", "torch", ".", "Tensor", "(", "[", "ksz", "[", "0", "]", "%", "2", ",", "ksz", "[", "1", "]", "%", "2", "]", ")", "/", "sz", ")", ")", "\n", "\n", "", "scores_fs", "=", "fourier", ".", "sum_fs", "(", "sf_weighted", ")", "\n", "scores", "=", "fourier", ".", "sample_fs", "(", "scores_fs", ",", "self", ".", "output_sz", ")", ".", "squeeze", "(", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "ADVANCED_LOCALIZATION", ":", "\n", "            ", "return", "self", ".", "localize_advanced", "(", "scores", ")", "\n", "\n", "# Shift the score output for visualization purposes", "\n", "", "if", "cfg", ".", "TRACK", ".", "VISUALIZE_CLASS", ":", "\n", "            ", "sz", "=", "scores", ".", "shape", "[", "-", "2", ":", "]", "\n", "scores", "=", "torch", ".", "cat", "(", "[", "scores", "[", "...", ",", "sz", "[", "0", "]", "//", "2", ":", ",", ":", "]", ",", "scores", "[", "...", ",", ":", "sz", "[", "0", "]", "//", "2", ",", ":", "]", "]", ",", "-", "2", ")", "\n", "scores", "=", "torch", ".", "cat", "(", "[", "scores", "[", "...", ",", ":", ",", "sz", "[", "1", "]", "//", "2", ":", "]", ",", "scores", "[", "...", ",", ":", ",", ":", "sz", "[", "1", "]", "//", "2", "]", "]", ",", "-", "1", ")", "\n", "\n", "", "return", "scores", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.localize_advanced": [[238, 289], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pysot.tracker.classifier.libs.dcf.max2d", "max_disp1.float().cpu().view.float().cpu().view.float().cpu().view", "max", "min", "max", "min", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "pysot.tracker.classifier.libs.dcf.max2d", "max_disp2.float().cpu().view.float().cpu().view.float().cpu().view", "max_score1.item", "round", "round", "round", "round", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "max_disp1.float().cpu().view.float().cpu().view.float().cpu", "max_disp2.float().cpu().view.float().cpu().view.float().cpu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "max_disp1[].item", "max_disp1[].item", "math.sqrt", "max_disp1.float().cpu().view.float().cpu().view.float", "target_neigh_sz[].item", "max_disp1[].item", "target_neigh_sz[].item", "max_disp1[].item", "max_disp2.float().cpu().view.float().cpu().view.float", "target_neigh_sz[].item", "target_neigh_sz[].item"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.max2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.max2d"], ["", "def", "localize_advanced", "(", "self", ",", "scores", ")", ":", "\n", "        ", "\"\"\"Does the advanced localization with hard negative detection and target not found.\"\"\"", "\n", "\n", "sz", "=", "scores", ".", "shape", "[", "-", "2", ":", "]", "\n", "\n", "# Shift scores back", "\n", "scores", "=", "torch", ".", "cat", "(", "[", "scores", "[", "...", ",", "(", "sz", "[", "0", "]", "+", "1", ")", "//", "2", ":", ",", ":", "]", ",", "scores", "[", "...", ",", ":", "(", "sz", "[", "0", "]", "+", "1", ")", "//", "2", ",", ":", "]", "]", ",", "-", "2", ")", "\n", "scores", "=", "torch", ".", "cat", "(", "[", "scores", "[", "...", ",", ":", ",", "(", "sz", "[", "1", "]", "+", "1", ")", "//", "2", ":", "]", ",", "scores", "[", "...", ",", ":", ",", ":", "(", "sz", "[", "1", "]", "+", "1", ")", "//", "2", "]", "]", ",", "-", "1", ")", "\n", "\n", "# Find maximum", "\n", "max_score1", ",", "max_disp1", "=", "dcf", ".", "max2d", "(", "scores", ")", "\n", "max_disp1", "=", "max_disp1", ".", "float", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "target_disp1", "=", "max_disp1", "-", "self", ".", "output_sz", "//", "2", "\n", "\n", "if", "max_score1", ".", "item", "(", ")", "<", "cfg", ".", "TRACK", ".", "TARGET_NOT_FOUND_THRESHOLD", ":", "\n", "            ", "return", "scores", ",", "'not_found'", "\n", "\n", "# Mask out target neighborhood", "\n", "", "target_neigh_sz", "=", "cfg", ".", "TRACK", ".", "TARGET_NEIGHBORHOOD_SCALE", "*", "self", ".", "target_sz", "*", "self", ".", "scale", "\n", "tneigh_top", "=", "max", "(", "round", "(", "max_disp1", "[", "0", "]", ".", "item", "(", ")", "-", "target_neigh_sz", "[", "0", "]", ".", "item", "(", ")", "/", "2", ")", ",", "0", ")", "\n", "tneigh_bottom", "=", "min", "(", "round", "(", "max_disp1", "[", "0", "]", ".", "item", "(", ")", "+", "target_neigh_sz", "[", "0", "]", ".", "item", "(", ")", "/", "2", "+", "1", ")", ",", "sz", "[", "0", "]", ")", "\n", "tneigh_left", "=", "max", "(", "round", "(", "max_disp1", "[", "1", "]", ".", "item", "(", ")", "-", "target_neigh_sz", "[", "1", "]", ".", "item", "(", ")", "/", "2", ")", ",", "0", ")", "\n", "tneigh_right", "=", "min", "(", "round", "(", "max_disp1", "[", "1", "]", ".", "item", "(", ")", "+", "target_neigh_sz", "[", "1", "]", ".", "item", "(", ")", "/", "2", "+", "1", ")", ",", "sz", "[", "1", "]", ")", "\n", "scores_masked", "=", "scores", ".", "clone", "(", ")", "\n", "scores_masked", "[", "...", ",", "tneigh_top", ":", "tneigh_bottom", ",", "tneigh_left", ":", "tneigh_right", "]", "=", "0", "\n", "\n", "# Find new maximum", "\n", "max_score2", ",", "max_disp2", "=", "dcf", ".", "max2d", "(", "scores_masked", ")", "\n", "max_disp2", "=", "max_disp2", ".", "float", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "target_disp2", "=", "max_disp2", "-", "self", ".", "output_sz", "//", "2", "\n", "\n", "# Handle the different cases", "\n", "if", "max_score2", ">", "cfg", ".", "TRACK", ".", "DISTRACTOR_THRESHOLD", "*", "max_score1", ":", "\n", "            ", "disp_norm1", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "target_disp1", "**", "2", ")", ")", "\n", "disp_norm2", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "target_disp2", "**", "2", ")", ")", "\n", "disp_threshold", "=", "cfg", ".", "TRACK", ".", "DISPLACEMENT_SCALE", "*", "math", ".", "sqrt", "(", "sz", "[", "0", "]", "*", "sz", "[", "1", "]", ")", "/", "2", "\n", "\n", "if", "disp_norm2", ">", "disp_threshold", "and", "disp_norm1", "<", "disp_threshold", ":", "\n", "                ", "return", "scores", ",", "'hard_negative'", "\n", "", "if", "disp_norm2", "<", "disp_threshold", "and", "disp_norm1", ">", "disp_threshold", ":", "\n", "                ", "return", "scores", ",", "'hard_negative'", "\n", "", "if", "disp_norm2", ">", "disp_threshold", "and", "disp_norm1", ">", "disp_threshold", ":", "\n", "                ", "return", "scores", ",", "'uncertain'", "\n", "\n", "# If also the distractor is close, return with highest score", "\n", "", "return", "scores", ",", "'uncertain'", "\n", "\n", "", "if", "max_score2", ">", "cfg", ".", "TRACK", ".", "HARD_NEGATIVE_THRESHOLD", "*", "max_score1", "and", "max_score2", ">", "cfg", ".", "TRACK", ".", "TARGET_NOT_FOUND_THRESHOLD", ":", "\n", "            ", "return", "scores", ",", "'hard_negative'", "\n", "\n", "", "return", "scores", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.extract_sample": [[290, 297], ["pysot.tracker.classifier.libs.TensorList", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "base_classifier.BaseClassifier.model.instance", "im.cuda"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.instance"], ["", "def", "extract_sample", "(", "self", ",", "im", ":", "torch", ".", "Tensor", ")", ":", "\n", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "model", ".", "instance", "(", "im", ".", "cuda", "(", ")", ")", "\n", "", "feat", "=", "TensorList", "(", "[", "self", ".", "model", ".", "cf", "]", ")", "\n", "\n", "return", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.extract_transformed_samples": [[298, 303], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "base_classifier.BaseClassifier.extract_sample", "T"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.extract_sample"], ["", "def", "extract_transformed_samples", "(", "self", ",", "im", ":", "torch", ".", "Tensor", ",", "transforms", ")", ":", "\n", "        ", "ims_augmented", "=", "torch", ".", "cat", "(", "[", "T", "(", "im", ")", "for", "T", "in", "transforms", "]", ")", "\n", "feature_map", "=", "self", ".", "extract_sample", "(", "ims_augmented", ")", "\n", "\n", "return", "feature_map", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.project_sample": [[304, 328], ["pysot.tracker.classifier.libs.operation.conv2d().apply", "pysot.tracker.classifier.libs.operation.conv2d", "pysot.tracker.classifier.libs.operation.adaptive_avg_pool2d", "pysot.tracker.classifier.libs.operation.conv1x1().apply", "pysot.tracker.classifier.libs.operation.sigmoid", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.operation.matmul", "pysot.tracker.classifier.libs.operation.matmul", "pysot.tracker.classifier.libs.operation.conv1x1", "pysot.tracker.classifier.libs.operation.spatial_attention", "pysot.tracker.classifier.libs.operation.conv1x1", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "compressed_samples[].size", "compressed_samples[].size", "compressed_samples[].size", "compressed_samples[].size", "compressed_samples[].size"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.adaptive_avg_pool2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.sigmoid", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv1x1", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.spatial_attention", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv1x1"], ["", "def", "project_sample", "(", "self", ",", "x", ":", "TensorList", ",", "proj_matrix", "=", "None", ")", ":", "\n", "# Apply projection matrix", "\n", "        ", "if", "proj_matrix", "is", "None", ":", "\n", "            ", "proj_matrix", "=", "self", ".", "projection_matrix", "\n", "\n", "", "compressed_samples", "=", "operation", ".", "conv2d", "(", "x", ",", "proj_matrix", ")", ".", "apply", "(", "self", ".", "projection_activation", ")", "\n", "\n", "if", "self", ".", "use_attention_layer", ":", "\n", "            ", "if", "cfg", ".", "TRACK", ".", "CHANNEL_ATTENTION", ":", "\n", "                ", "global_average", "=", "operation", ".", "adaptive_avg_pool2d", "(", "compressed_samples", ",", "1", ")", "\n", "temp_variables", "=", "operation", ".", "conv1x1", "(", "global_average", ",", "self", ".", "channel_att_fc1", ")", ".", "apply", "(", "self", ".", "att_activation", ")", "\n", "channel_attention", "=", "operation", ".", "sigmoid", "(", "operation", ".", "conv1x1", "(", "temp_variables", ",", "self", ".", "channel_att_fc2", ")", ")", "\n", "", "else", ":", "\n", "                ", "channel_attention", "=", "TensorList", "(", "[", "torch", ".", "zeros", "(", "compressed_samples", "[", "0", "]", ".", "size", "(", "0", ")", ",", "compressed_samples", "[", "0", "]", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "]", ")", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "SPATIAL_ATTENTION", "==", "'none'", ":", "\n", "                ", "spatial_attention", "=", "TensorList", "(", "[", "torch", ".", "zeros", "(", "compressed_samples", "[", "0", "]", ".", "size", "(", "0", ")", ",", "1", ",", "compressed_samples", "[", "0", "]", ".", "size", "(", "2", ")", ",", "compressed_samples", "[", "0", "]", ".", "size", "(", "3", ")", ")", ".", "cuda", "(", ")", "]", ")", "\n", "", "elif", "cfg", ".", "TRACK", ".", "SPATIAL_ATTENTION", "==", "'pool'", ":", "\n", "                ", "spatial_attention", "=", "operation", ".", "spatial_attention", "(", "compressed_samples", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "", "compressed_samples", "=", "operation", ".", "matmul", "(", "compressed_samples", ",", "spatial_attention", ")", "+", "operation", ".", "matmul", "(", "compressed_samples", ",", "channel_attention", ")", "\n", "\n", "", "return", "compressed_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.extract_processed_sample": [[329, 339], ["base_classifier.BaseClassifier.project_sample", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.TensorList", "base_classifier.BaseClassifier.model.cf[].unsqueeze"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.project_sample"], ["", "def", "extract_processed_sample", "(", "self", ",", "im", ":", "torch", ".", "Tensor", "=", "None", ",", "scale_idx", "=", "None", ")", ":", "\n", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "scale_idx", "is", "not", "None", ":", "\n", "                ", "x", "=", "TensorList", "(", "[", "self", ".", "model", ".", "cf", "[", "scale_idx", "]", ".", "unsqueeze", "(", "0", ")", "]", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "TensorList", "(", "[", "self", ".", "model", ".", "cf", "]", ")", "\n", "", "", "feat", "=", "self", ".", "project_sample", "(", "x", ")", "\n", "\n", "return", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_learning": [[340, 392], ["pysot.tracker.classifier.libs.TensorList", "isinstance", "isinstance", "isinstance", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "ValueError", "ValueError", "ValueError", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu"], "methods", ["None"], ["", "def", "init_learning", "(", "self", ")", ":", "\n", "\n", "# Filter regularization", "\n", "        ", "self", ".", "filter_reg", "=", "TensorList", "(", "[", "cfg", ".", "TRACK", ".", "FILTER_REG", "]", ")", "\n", "\n", "# Activation function after the projection matrix (phi_1 in the paper)", "\n", "projection_activation", "=", "cfg", ".", "TRACK", ".", "PROJECTION_ACTIVATION", "\n", "if", "isinstance", "(", "projection_activation", ",", "tuple", ")", ":", "\n", "            ", "projection_activation", ",", "act_param", "=", "projection_activation", "\n", "\n", "", "if", "projection_activation", "==", "'none'", ":", "\n", "            ", "self", ".", "projection_activation", "=", "lambda", "x", ":", "x", "\n", "", "elif", "projection_activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "projection_activation", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "projection_activation", "==", "'elu'", ":", "\n", "            ", "self", ".", "projection_activation", "=", "torch", ".", "nn", ".", "ELU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "projection_activation", "==", "'mlu'", ":", "\n", "            ", "self", ".", "projection_activation", "=", "lambda", "x", ":", "F", ".", "elu", "(", "F", ".", "leaky_relu", "(", "x", ",", "1", "/", "act_param", ")", ",", "act_param", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown activation'", ")", "\n", "\n", "# Activation function for attention layer", "\n", "", "att_activation", "=", "cfg", ".", "TRACK", ".", "ATT_ACTIVATION", "\n", "if", "isinstance", "(", "att_activation", ",", "tuple", ")", ":", "\n", "            ", "att_activation", ",", "act_param", "=", "att_activation", "\n", "", "if", "att_activation", "==", "'none'", ":", "\n", "            ", "self", ".", "att_activation", "=", "lambda", "x", ":", "x", "\n", "", "elif", "att_activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "att_activation", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "att_activation", "==", "'elu'", ":", "\n", "            ", "self", ".", "att_activation", "=", "torch", ".", "nn", ".", "ELU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "att_activation", "==", "'mlu'", ":", "\n", "            ", "self", ".", "att_activation", "=", "lambda", "x", ":", "F", ".", "elu", "(", "F", ".", "leaky_relu", "(", "x", ",", "1", "/", "act_param", ")", ",", "act_param", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown activation'", ")", "\n", "\n", "\n", "# Activation function after the output scores (phi_2 in the paper)", "\n", "", "response_activation", "=", "cfg", ".", "TRACK", ".", "RESPONSE_ACTIVATION", "\n", "if", "isinstance", "(", "response_activation", ",", "tuple", ")", ":", "\n", "            ", "response_activation", ",", "act_param", "=", "response_activation", "\n", "\n", "", "if", "response_activation", "==", "'none'", ":", "\n", "            ", "self", ".", "response_activation", "=", "lambda", "x", ":", "x", "\n", "", "elif", "response_activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "response_activation", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "response_activation", "==", "'elu'", ":", "\n", "            ", "self", ".", "response_activation", "=", "torch", ".", "nn", ".", "ELU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "response_activation", "==", "'mlu'", ":", "\n", "            ", "self", ".", "response_activation", "=", "lambda", "x", ":", "F", ".", "elu", "(", "F", ".", "leaky_relu", "(", "x", ",", "1", "/", "act_param", ")", ",", "act_param", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown activation'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.generate_init_samples": [[394, 446], ["base_classifier.BaseClassifier.img_sample_sz.clone", "base_classifier.BaseClassifier.extract_transformed_samples", "enumerate", "aug_expansion_sz.float.float.float", "base_classifier.BaseClassifier.img_sample_sz.long().tolist", "pysot.tracker.classifier.libs.augmentation.Identity", "base_classifier.BaseClassifier.transforms.extend", "base_classifier.BaseClassifier.transforms.extend", "base_classifier.BaseClassifier.transforms.append", "base_classifier.BaseClassifier.transforms.extend", "base_classifier.BaseClassifier.transforms.extend", "base_classifier.BaseClassifier.transforms.extend", "pysot.tracker.classifier.libs.TensorList", "base_classifier.BaseClassifier.transforms.extend", "enumerate", "pysot.tracker.classifier.libs.augmentation.FlipHorizontal", "pysot.tracker.classifier.libs.TensorList", "base_classifier.BaseClassifier.img_sample_sz.long", "base_classifier.BaseClassifier.img_sample_sz.long", "pysot.tracker.classifier.libs.augmentation.Translation", "pysot.tracker.classifier.libs.augmentation.Translation", "base_classifier.BaseClassifier.get_rand_shift", "pysot.tracker.classifier.libs.augmentation.Blur", "pysot.tracker.classifier.libs.augmentation.Scale", "pysot.tracker.classifier.libs.augmentation.Rotate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "get_absolute", "base_classifier.BaseClassifier.get_rand_shift", "base_classifier.BaseClassifier.get_rand_shift", "base_classifier.BaseClassifier.get_rand_shift", "torch.dropout2d", "torch.dropout2d", "torch.dropout2d", "[].expand", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.extract_transformed_samples"], ["", "", "def", "generate_init_samples", "(", "self", ",", "im", ":", "torch", ".", "Tensor", ")", "->", "TensorList", ":", "\n", "        ", "\"\"\"Generate augmented initial samples.\"\"\"", "\n", "\n", "# Compute augmentation size", "\n", "aug_expansion_factor", "=", "cfg", ".", "TRACK", ".", "AUGMENTATION_EXPANSION_FACTOR", "\n", "aug_expansion_sz", "=", "self", ".", "img_sample_sz", ".", "clone", "(", ")", "\n", "aug_output_sz", "=", "None", "\n", "if", "aug_expansion_factor", "is", "not", "None", "and", "aug_expansion_factor", "!=", "1", ":", "\n", "            ", "aug_expansion_sz", "=", "(", "self", ".", "img_sample_sz", "*", "aug_expansion_factor", ")", ".", "long", "(", ")", "\n", "aug_expansion_sz", "+=", "(", "aug_expansion_sz", "-", "self", ".", "img_sample_sz", ".", "long", "(", ")", ")", "%", "2", "\n", "aug_expansion_sz", "=", "aug_expansion_sz", ".", "float", "(", ")", "\n", "aug_output_sz", "=", "self", ".", "img_sample_sz", ".", "long", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "# Random shift operator", "\n", "", "self", ".", "get_rand_shift", "=", "lambda", ":", "None", "\n", "self", ".", "random_shift_factor", "=", "cfg", ".", "TRACK", ".", "RANDOM_SHIFT_FACTOR", "\n", "if", "self", ".", "random_shift_factor", ">", "0", ":", "\n", "            ", "self", ".", "get_rand_shift", "=", "lambda", ":", "(", "(", "torch", ".", "rand", "(", "2", ")", "-", "0.5", ")", "*", "self", ".", "img_sample_sz", "*", "self", ".", "random_shift_factor", ")", ".", "long", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "# Create transofmations", "\n", "", "self", ".", "transforms", "=", "[", "augmentation", ".", "Identity", "(", "aug_output_sz", ")", "]", "\n", "if", "cfg", ".", "TRACK", ".", "AUGMENTATION_SHIFT", ":", "\n", "            ", "self", ".", "transforms", ".", "extend", "(", "[", "augmentation", ".", "Translation", "(", "shift", ",", "aug_output_sz", ")", "for", "shift", "in", "cfg", ".", "TRACK", ".", "AUGMENTATION_SHIFT", "]", ")", "\n", "", "if", "cfg", ".", "TRACK", ".", "AUGMENTATION_RELATIVESHIFT", ":", "\n", "            ", "get_absolute", "=", "lambda", "shift", ":", "(", "torch", ".", "Tensor", "(", "shift", ")", "*", "self", ".", "img_sample_sz", "/", "2", ")", ".", "long", "(", ")", ".", "tolist", "(", ")", "\n", "self", ".", "transforms", ".", "extend", "(", "[", "augmentation", ".", "Translation", "(", "get_absolute", "(", "shift", ")", ",", "aug_output_sz", ")", "for", "shift", "in", "cfg", ".", "TRACK", ".", "AUGMENTATION_RELATIVESHIFT", "]", ")", "\n", "", "if", "cfg", ".", "TRACK", ".", "AUGMENTATION_FLIPLR", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "augmentation", ".", "FlipHorizontal", "(", "aug_output_sz", ",", "self", ".", "get_rand_shift", "(", ")", ")", ")", "\n", "", "if", "cfg", ".", "TRACK", ".", "AUGMENTATION_BLUR", ":", "\n", "            ", "self", ".", "transforms", ".", "extend", "(", "[", "augmentation", ".", "Blur", "(", "sigma", ",", "aug_output_sz", ",", "self", ".", "get_rand_shift", "(", ")", ")", "for", "sigma", "in", "cfg", ".", "TRACK", ".", "AUGMENTATION_BLUR", "]", ")", "\n", "", "if", "cfg", ".", "TRACK", ".", "AUGMENTATION_SCALE", ":", "\n", "            ", "self", ".", "transforms", ".", "extend", "(", "[", "augmentation", ".", "Scale", "(", "scale_factor", ",", "aug_output_sz", ",", "self", ".", "get_rand_shift", "(", ")", ")", "for", "scale_factor", "in", "cfg", ".", "TRACK", ".", "AUGMENTATION_SCALE", "]", ")", "\n", "", "if", "cfg", ".", "TRACK", ".", "AUGMENTATION_ROTATE", ":", "\n", "            ", "self", ".", "transforms", ".", "extend", "(", "[", "augmentation", ".", "Rotate", "(", "angle", ",", "aug_output_sz", ",", "self", ".", "get_rand_shift", "(", ")", ")", "for", "angle", "in", "cfg", ".", "TRACK", ".", "AUGMENTATION_ROTATE", "]", ")", "\n", "\n", "# Generate initial samples", "\n", "", "init_samples", "=", "self", ".", "extract_transformed_samples", "(", "im", ",", "self", ".", "transforms", ")", "\n", "\n", "# Remove augmented samples for those that shall not have", "\n", "for", "i", ",", "use_aug", "in", "enumerate", "(", "TensorList", "(", "[", "cfg", ".", "TRACK", ".", "USE_AUGMENTATION", "]", ")", ")", ":", "\n", "            ", "if", "not", "use_aug", ":", "\n", "                ", "init_samples", "[", "i", "]", "=", "init_samples", "[", "i", "]", "[", "0", ":", "1", ",", "...", "]", "\n", "\n", "# Add dropout samples", "\n", "", "", "if", "cfg", ".", "TRACK", ".", "AUGMENTATION_DROUPOUT", ":", "\n", "            ", "num", ",", "prob", "=", "cfg", ".", "TRACK", ".", "AUGMENTATION_DROUPOUT", "\n", "self", ".", "transforms", ".", "extend", "(", "self", ".", "transforms", "[", ":", "1", "]", "*", "num", ")", "\n", "for", "i", ",", "use_aug", "in", "enumerate", "(", "TensorList", "(", "[", "cfg", ".", "TRACK", ".", "USE_AUGMENTATION", "]", ")", ")", ":", "\n", "                ", "if", "use_aug", ":", "\n", "                    ", "init_samples", "[", "i", "]", "=", "torch", ".", "cat", "(", "[", "init_samples", "[", "i", "]", ",", "F", ".", "dropout2d", "(", "init_samples", "[", "i", "]", "[", "0", ":", "1", ",", "...", "]", ".", "expand", "(", "num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ",", "p", "=", "prob", ",", "training", "=", "True", ")", "]", ")", "\n", "\n", "", "", "", "return", "init_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_projection_matrix": [[448, 469], ["pysot.tracker.classifier.libs.TensorList", "x.size", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.TensorList.mean", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.TensorList.t", "pysot.tracker.classifier.libs.TensorList", "len", "e.permute().reshape().clone", "[].t().unsqueeze().unsqueeze().clone", "zip", "e.permute().reshape", "ex.new_zeros().normal_", "zip", "[].t().unsqueeze().unsqueeze", "e.permute", "ex.new_zeros", "math.sqrt", "[].t().unsqueeze", "[].t", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd"], "methods", ["None"], ["", "def", "init_projection_matrix", "(", "self", ",", "x", ")", ":", "\n", "# Set if using projection matrix", "\n", "        ", "self", ".", "use_projection_matrix", "=", "cfg", ".", "TRACK", ".", "USE_PROJECTION_MATRIX", "\n", "\n", "if", "self", ".", "use_projection_matrix", ":", "\n", "            ", "self", ".", "compressed_dim", "=", "TensorList", "(", "[", "cfg", ".", "TRACK", ".", "COMPRESSED_DIM", "]", ")", "\n", "proj_init_method", "=", "cfg", ".", "TRACK", ".", "PROJ_INIT_METHOD", "\n", "if", "proj_init_method", "==", "'pca'", ":", "\n", "                ", "x_mat", "=", "TensorList", "(", "[", "e", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", ".", "reshape", "(", "e", ".", "shape", "[", "1", "]", ",", "-", "1", ")", ".", "clone", "(", ")", "for", "e", "in", "x", "]", ")", "\n", "x_mat", "-=", "x_mat", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "cov_x", "=", "x_mat", "@", "x_mat", ".", "t", "(", ")", "\n", "self", ".", "projection_matrix", "=", "TensorList", "(", "\n", "[", "None", "if", "cdim", "is", "None", "else", "torch", ".", "svd", "(", "C", ")", "[", "0", "]", "[", ":", ",", ":", "cdim", "]", ".", "t", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "clone", "(", ")", "for", "C", ",", "cdim", "in", "\n", "zip", "(", "cov_x", ",", "self", ".", "compressed_dim", ")", "]", ")", "\n", "", "elif", "proj_init_method", "==", "'randn'", ":", "\n", "                ", "self", ".", "projection_matrix", "=", "TensorList", "(", "\n", "[", "None", "if", "cdim", "is", "None", "else", "ex", ".", "new_zeros", "(", "cdim", ",", "ex", ".", "shape", "[", "1", "]", ",", "1", ",", "1", ")", ".", "normal_", "(", "0", ",", "1", "/", "math", ".", "sqrt", "(", "ex", ".", "shape", "[", "1", "]", ")", ")", "for", "ex", ",", "cdim", "in", "\n", "zip", "(", "x", ",", "self", ".", "compressed_dim", ")", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "compressed_dim", "=", "x", ".", "size", "(", "1", ")", "\n", "self", ".", "projection_matrix", "=", "TensorList", "(", "[", "None", "]", "*", "len", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_attention_layer": [[470, 479], ["pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.TensorList", "pysot.tracker.classifier.libs.TensorList", "ex.new_zeros().normal_", "zip", "ex.new_zeros().normal_", "zip", "ex.new_zeros", "math.sqrt", "ex.new_zeros", "math.sqrt"], "methods", ["None"], ["", "", "def", "init_attention_layer", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "self", ".", "compressed_dim", "=", "TensorList", "(", "[", "cfg", ".", "TRACK", ".", "COMPRESSED_DIM", "]", ")", "\n", "self", ".", "channel_att_fc1", "=", "TensorList", "(", "\n", "[", "None", "if", "cdim", "is", "None", "else", "ex", ".", "new_zeros", "(", "cdim", "//", "2", ",", "cdim", ",", "1", ",", "1", ")", ".", "normal_", "(", "0", ",", "1", "/", "math", ".", "sqrt", "(", "cdim", ")", ")", "\n", "for", "ex", ",", "cdim", "in", "zip", "(", "x", ",", "self", ".", "compressed_dim", ")", "]", ")", "\n", "self", ".", "channel_att_fc2", "=", "TensorList", "(", "\n", "[", "None", "if", "cdim", "is", "None", "else", "ex", ".", "new_zeros", "(", "cdim", ",", "cdim", "//", "2", ",", "1", ",", "1", ")", ".", "normal_", "(", "0", ",", "1", "/", "math", ".", "sqrt", "(", "cdim", ")", ")", "\n", "for", "ex", ",", "cdim", "in", "zip", "(", "x", ",", "self", ".", "compressed_dim", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_label_function": [[480, 500], ["pysot.tracker.classifier.libs.TensorList", "zip", "pysot.tracker.classifier.libs.TensorList", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "enumerate", "x.new_zeros", "base_classifier.BaseClassifier.pos.round", "pysot.tracker.classifier.libs.dcf.label_function_spatial", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "zip", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.label_function_spatial"], ["", "def", "init_label_function", "(", "self", ",", "train_x", ")", ":", "\n", "# Allocate label function", "\n", "        ", "self", ".", "y", "=", "TensorList", "(", "[", "x", ".", "new_zeros", "(", "cfg", ".", "TRACK", ".", "SAMPLE_MEMORY_SIZE", ",", "1", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ")", "for", "x", "in", "train_x", "]", ")", "\n", "\n", "# Output sigma factor", "\n", "output_sigma_factor", "=", "cfg", ".", "TRACK", ".", "OUTPUT_SIGMA_FACTOR", "\n", "\n", "self", ".", "sigma", "=", "(", "self", ".", "feature_sz", "/", "self", ".", "img_sample_sz", "*", "self", ".", "target_sz", "*", "self", ".", "scale", ")", ".", "prod", "(", ")", ".", "sqrt", "(", ")", "*", "output_sigma_factor", "*", "torch", ".", "ones", "(", "2", ")", "\n", "\n", "# Generate label functions", "\n", "target_center_norm", "=", "(", "self", ".", "pos", "-", "self", ".", "pos", ".", "round", "(", ")", ")", "/", "self", ".", "img_sample_sz", "\n", "for", "y", ",", "sig", ",", "sz", ",", "ksz", ",", "x", "in", "zip", "(", "self", ".", "y", ",", "self", ".", "sigma", ",", "self", ".", "feature_sz", ",", "self", ".", "kernel_size", ",", "train_x", ")", ":", "\n", "            ", "center_pos", "=", "sz", "*", "target_center_norm", "+", "0.5", "*", "torch", ".", "Tensor", "(", "[", "(", "ksz", "[", "0", "]", "+", "1", ")", "%", "2", ",", "(", "ksz", "[", "1", "]", "+", "1", ")", "%", "2", "]", ")", "\n", "for", "i", ",", "T", "in", "enumerate", "(", "self", ".", "transforms", "[", ":", "x", ".", "shape", "[", "0", "]", "]", ")", ":", "\n", "                ", "sample_center", "=", "center_pos", "+", "torch", ".", "Tensor", "(", "T", ".", "shift", ")", "/", "self", ".", "img_sample_sz", "*", "sz", "\n", "# y[i, 0, ...] = dcf.label_function_spatial(sz, sig, sample_center, scale)", "\n", "y", "[", "i", ",", "0", ",", "...", "]", "=", "dcf", ".", "label_function_spatial", "(", "sz", ",", "sig", ",", "sample_center", ")", "\n", "\n", "# Return only the ones to use for initial training", "\n", "", "", "return", "TensorList", "(", "[", "y", "[", ":", "x", ".", "shape", "[", "0", "]", ",", "...", "]", "for", "y", ",", "x", "in", "zip", "(", "self", ".", "y", ",", "train_x", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.init_memory": [[501, 518], ["train_x.size", "pysot.tracker.classifier.libs.TensorList", "base_classifier.BaseClassifier.num_init_samples.copy", "pysot.tracker.classifier.libs.TensorList", "zip", "pysot.tracker.classifier.libs.TensorList", "len", "x.new_zeros", "x.new_zeros", "x.new_ones", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.copy"], ["", "def", "init_memory", "(", "self", ",", "train_x", ")", ":", "\n", "# Initialize first-frame training samples", "\n", "        ", "self", ".", "num_init_samples", "=", "train_x", ".", "size", "(", "0", ")", "\n", "self", ".", "init_sample_weights", "=", "TensorList", "(", "[", "x", ".", "new_ones", "(", "1", ")", "/", "x", ".", "shape", "[", "0", "]", "for", "x", "in", "train_x", "]", ")", "\n", "self", ".", "init_training_samples", "=", "train_x", "\n", "\n", "# Sample counters and weights", "\n", "self", ".", "num_stored_samples", "=", "self", ".", "num_init_samples", ".", "copy", "(", ")", "\n", "self", ".", "previous_replace_ind", "=", "[", "None", "]", "*", "len", "(", "self", ".", "num_stored_samples", ")", "\n", "self", ".", "sample_weights", "=", "TensorList", "(", "[", "x", ".", "new_zeros", "(", "cfg", ".", "TRACK", ".", "SAMPLE_MEMORY_SIZE", ")", "for", "x", "in", "train_x", "]", ")", "\n", "for", "sw", ",", "init_sw", ",", "num", "in", "zip", "(", "self", ".", "sample_weights", ",", "self", ".", "init_sample_weights", ",", "self", ".", "num_init_samples", ")", ":", "\n", "            ", "sw", "[", ":", "num", "]", "=", "init_sw", "\n", "\n", "# Initialize memory", "\n", "", "self", ".", "training_samples", "=", "TensorList", "(", "\n", "[", "x", ".", "new_zeros", "(", "cfg", ".", "TRACK", ".", "SAMPLE_MEMORY_SIZE", ",", "cdim", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ")", "for", "x", ",", "cdim", "in", "\n", "zip", "(", "train_x", ",", "self", ".", "compressed_dim", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update_memory": [[519, 527], ["base_classifier.BaseClassifier.update_sample_weights", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update_sample_weights"], ["", "def", "update_memory", "(", "self", ",", "sample_x", ":", "TensorList", ",", "sample_y", ":", "TensorList", ",", "learning_rate", "=", "None", ")", ":", "\n", "        ", "replace_ind", "=", "self", ".", "update_sample_weights", "(", "self", ".", "sample_weights", ",", "self", ".", "previous_replace_ind", ",", "self", ".", "num_stored_samples", ",", "self", ".", "num_init_samples", ",", "learning_rate", ")", "\n", "self", ".", "previous_replace_ind", "=", "replace_ind", "\n", "for", "train_samp", ",", "x", ",", "ind", "in", "zip", "(", "self", ".", "training_samples", ",", "sample_x", ",", "replace_ind", ")", ":", "\n", "            ", "train_samp", "[", "ind", ":", "ind", "+", "1", ",", "...", "]", "=", "x", "\n", "", "for", "y_memory", ",", "y", ",", "ind", "in", "zip", "(", "self", ".", "y", ",", "sample_y", ",", "replace_ind", ")", ":", "\n", "            ", "y_memory", "[", "ind", ":", "ind", "+", "1", ",", "...", "]", "=", "y", "\n", "", "self", ".", "num_stored_samples", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update_sample_weights": [[528, 565], ["zip", "sw.sum", "replace_ind.append", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "r_ind.item", "sw[].sum", "sw[].sum"], "methods", ["None"], ["", "def", "update_sample_weights", "(", "self", ",", "sample_weights", ",", "previous_replace_ind", ",", "num_stored_samples", ",", "num_init_samples", ",", "learning_rate", "=", "None", ")", ":", "\n", "# Update weights and get index to replace in memory", "\n", "        ", "replace_ind", "=", "[", "]", "\n", "for", "sw", ",", "prev_ind", ",", "num_samp", ",", "num_init", "in", "zip", "(", "sample_weights", ",", "previous_replace_ind", ",", "num_stored_samples", ",", "num_init_samples", ")", ":", "\n", "            ", "lr", "=", "learning_rate", "\n", "# if lr is None:", "\n", "#     lr = fpar.learning_rate", "\n", "\n", "init_samp_weight", "=", "cfg", ".", "TRACK", ".", "INIT_SAMPLES_MINIMUM_WEIGHT", "\n", "if", "init_samp_weight", "==", "0", ":", "\n", "                ", "init_samp_weight", "=", "None", "\n", "", "s_ind", "=", "0", "if", "init_samp_weight", "is", "None", "else", "num_init", "\n", "\n", "if", "num_samp", "==", "0", "or", "lr", "==", "1", ":", "\n", "                ", "sw", "[", ":", "]", "=", "0", "\n", "sw", "[", "0", "]", "=", "1", "\n", "r_ind", "=", "0", "\n", "", "else", ":", "\n", "# Get index to replace", "\n", "                ", "_", ",", "r_ind", "=", "torch", ".", "min", "(", "sw", "[", "s_ind", ":", "]", ",", "0", ")", "\n", "r_ind", "=", "r_ind", ".", "item", "(", ")", "+", "s_ind", "\n", "\n", "# Update weights", "\n", "if", "prev_ind", "is", "None", ":", "\n", "                    ", "sw", "/=", "1", "-", "lr", "\n", "sw", "[", "r_ind", "]", "=", "lr", "\n", "", "else", ":", "\n", "                    ", "sw", "[", "r_ind", "]", "=", "sw", "[", "prev_ind", "]", "/", "(", "1", "-", "lr", ")", "\n", "\n", "", "", "sw", "/=", "sw", ".", "sum", "(", ")", "\n", "if", "init_samp_weight", "is", "not", "None", "and", "sw", "[", ":", "num_init", "]", ".", "sum", "(", ")", "<", "init_samp_weight", ":", "\n", "                ", "sw", "/=", "init_samp_weight", "+", "sw", "[", "num_init", ":", "]", ".", "sum", "(", ")", "\n", "sw", "[", ":", "num_init", "]", "=", "init_samp_weight", "/", "num_init", "\n", "\n", "", "replace_ind", ".", "append", "(", "r_ind", ")", "\n", "\n", "", "return", "replace_ind", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.get_label_function": [[566, 578], ["torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "pysot.tracker.classifier.libs.TensorList", "zip", "pysot.tracker.classifier.libs.TensorList.append", "pysot.tracker.classifier.libs.dcf.label_function_spatial", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.label_function_spatial"], ["", "def", "get_label_function", "(", "self", ",", "sample_pos", ",", "scale_z", ",", "target_sz", "=", "torch", ".", "ones", "(", "2", ")", ")", ":", "\n", "# Generate label function", "\n", "        ", "train_y", "=", "TensorList", "(", ")", "\n", "target_center_norm", "=", "(", "self", ".", "pos", "-", "sample_pos", ")", "/", "self", ".", "img_sample_sz", "\n", "# target_center_norm = (self.pos - sample_pos) * scale_z / self.img_sample_sz", "\n", "scale", "=", "target_sz", "[", "0", "]", "/", "target_sz", "[", "1", "]", "\n", "\n", "for", "sig", ",", "sz", ",", "ksz", "in", "zip", "(", "self", ".", "sigma", ",", "self", ".", "feature_sz", ",", "self", ".", "kernel_size", ")", ":", "\n", "            ", "center", "=", "sz", "*", "target_center_norm", "+", "0.5", "*", "torch", ".", "Tensor", "(", "[", "(", "ksz", "[", "0", "]", "+", "1", ")", "%", "2", ",", "(", "ksz", "[", "1", "]", "+", "1", ")", "%", "2", "]", ")", "\n", "train_y", ".", "append", "(", "dcf", ".", "label_function_spatial", "(", "sz", ",", "sig", ",", "center", ")", ")", "\n", "\n", "", "return", "train_y", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.transform_score": [[579, 594], ["enumerate", "pysot.tracker.classifier.libs.fourier.sum_fs", "pysot.tracker.classifier.libs.fourier.sample_fs().squeeze", "pysot.tracker.classifier.libs.fourier.cfft2", "zip", "pysot.tracker.classifier.libs.fourier.shift_fs", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "scores_raw.size", "scores_raw.size", "pysot.tracker.classifier.libs.fourier.sample_fs", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.sum_fs", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.cfft2", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.shift_fs", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.sample_fs"], ["", "def", "transform_score", "(", "self", ",", "scores_raw", ")", ":", "\n", "\n", "        ", "sf_weighted", "=", "fourier", ".", "cfft2", "(", "scores_raw", ")", "/", "(", "scores_raw", ".", "size", "(", "2", ")", "*", "scores_raw", ".", "size", "(", "3", ")", ")", "\n", "for", "i", ",", "(", "sz", ",", "ksz", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "feature_sz", ",", "self", ".", "kernel_size", ")", ")", ":", "\n", "            ", "sf_weighted", "[", "i", "]", "=", "fourier", ".", "shift_fs", "(", "sf_weighted", "[", "i", "]", ",", "math", ".", "pi", "*", "(", "1", "-", "torch", ".", "Tensor", "(", "[", "ksz", "[", "0", "]", "%", "2", ",", "ksz", "[", "1", "]", "%", "2", "]", ")", "/", "sz", ")", ")", "\n", "\n", "", "scores_fs", "=", "fourier", ".", "sum_fs", "(", "sf_weighted", ")", "\n", "scores", "=", "fourier", ".", "sample_fs", "(", "scores_fs", ",", "self", ".", "output_sz", ")", ".", "squeeze", "(", ")", "\n", "\n", "if", "cfg", ".", "TRACK", ".", "VISUALIZE_CLASS", ":", "\n", "            ", "sz", "=", "scores", ".", "shape", "[", "-", "2", ":", "]", "\n", "scores", "=", "torch", ".", "cat", "(", "[", "scores", "[", "...", ",", "sz", "[", "0", "]", "//", "2", ":", ",", ":", "]", ",", "scores", "[", "...", ",", ":", "sz", "[", "0", "]", "//", "2", ",", ":", "]", "]", ",", "-", "2", ")", "\n", "scores", "=", "torch", ".", "cat", "(", "[", "scores", "[", "...", ",", ":", ",", "sz", "[", "1", "]", "//", "2", ":", "]", ",", "scores", "[", "...", ",", ":", ",", ":", "sz", "[", "1", "]", "//", "2", "]", "]", ",", "-", "1", ")", "\n", "\n", "", "return", "scores", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.rfftshift2": [[7, 11], ["torch.cat", "torch.cat"], "function", ["None"], ["@", "tensor_operation", "\n", "def", "rfftshift2", "(", "a", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "h", "=", "a", ".", "shape", "[", "2", "]", "+", "2", "\n", "return", "torch", ".", "cat", "(", "(", "a", "[", ":", ",", ":", ",", "(", "h", "-", "1", ")", "//", "2", ":", ",", "...", "]", ",", "a", "[", ":", ",", ":", ",", ":", "h", "//", "2", ",", "...", "]", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.irfftshift2": [[13, 17], ["int", "torch.cat", "torch.cat"], "function", ["None"], ["", "@", "tensor_operation", "\n", "def", "irfftshift2", "(", "a", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "mid", "=", "int", "(", "(", "a", ".", "shape", "[", "2", "]", "-", "1", ")", "/", "2", ")", "\n", "return", "torch", ".", "cat", "(", "(", "a", "[", ":", ",", ":", ",", "mid", ":", ",", "...", "]", ",", "a", "[", ":", ",", ":", ",", ":", "mid", ",", "...", "]", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.cfft2": [[19, 25], ["fourier.rfftshift2", "torch.rfft", "torch.rfft"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.rfftshift2"], ["", "@", "tensor_operation", "\n", "def", "cfft2", "(", "a", ")", ":", "\n", "    ", "\"\"\"Do FFT and center the low frequency component.\n    Always produces odd (full) output sizes.\"\"\"", "\n", "\n", "return", "rfftshift2", "(", "torch", ".", "rfft", "(", "a", ",", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.cifft2": [[27, 32], ["torch.irfft", "torch.irfft", "fourier.irfftshift2"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.irfftshift2"], ["", "@", "tensor_operation", "\n", "def", "cifft2", "(", "a", ",", "signal_sizes", "=", "None", ")", ":", "\n", "    ", "\"\"\"Do inverse FFT corresponding to cfft2.\"\"\"", "\n", "\n", "return", "torch", ".", "irfft", "(", "irfftshift2", "(", "a", ")", ",", "2", ",", "signal_sizes", "=", "signal_sizes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.sample_fs": [[34, 62], ["torch.Tensor().float", "torch.Tensor().float", "int", "int", "fourier.cifft2", "ValueError", "int", "int", "fourier.cifft2", "torch.Tensor", "torch.Tensor", "grid_sz.prod().item", "fourier.cifft2", "torch.pad", "torch.Tensor().float.prod().item", "fourier.cifft2", "s.item", "torch.pad", "grid_sz.long().tolist", "grid_sz.prod", "grid_sz.long().tolist", "torch.Tensor().float.prod", "grid_sz.long", "grid_sz.long"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.cifft2", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.cifft2", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.cifft2", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.cifft2"], ["", "@", "tensor_operation", "\n", "def", "sample_fs", "(", "a", ":", "torch", ".", "Tensor", ",", "grid_sz", ":", "torch", ".", "Tensor", "=", "None", ",", "rescale", "=", "True", ")", ":", "\n", "    ", "\"\"\"Samples the Fourier series.\"\"\"", "\n", "\n", "# Size of the fourier series", "\n", "sz", "=", "torch", ".", "Tensor", "(", "[", "a", ".", "shape", "[", "2", "]", ",", "2", "*", "a", ".", "shape", "[", "3", "]", "-", "1", "]", ")", ".", "float", "(", ")", "\n", "\n", "# Default grid", "\n", "if", "grid_sz", "is", "None", "or", "sz", "[", "0", "]", "==", "grid_sz", "[", "0", "]", "and", "sz", "[", "1", "]", "==", "grid_sz", "[", "1", "]", ":", "\n", "        ", "if", "rescale", ":", "\n", "            ", "return", "sz", ".", "prod", "(", ")", ".", "item", "(", ")", "*", "cifft2", "(", "a", ")", "\n", "", "return", "cifft2", "(", "a", ")", "\n", "\n", "", "if", "sz", "[", "0", "]", ">", "grid_sz", "[", "0", "]", "or", "sz", "[", "1", "]", ">", "grid_sz", "[", "1", "]", ":", "\n", "        ", "raise", "ValueError", "(", "\"Only grid sizes that are smaller than the Fourier series size are supported.\"", ")", "\n", "\n", "", "tot_pad", "=", "(", "grid_sz", "-", "sz", ")", ".", "tolist", "(", ")", "\n", "is_even", "=", "[", "s", ".", "item", "(", ")", "%", "2", "==", "0", "for", "s", "in", "sz", "]", "\n", "\n", "# Compute paddings", "\n", "pad_top", "=", "int", "(", "(", "tot_pad", "[", "0", "]", "+", "1", ")", "/", "2", ")", "if", "is_even", "[", "0", "]", "else", "int", "(", "tot_pad", "[", "0", "]", "/", "2", ")", "\n", "pad_bottom", "=", "int", "(", "tot_pad", "[", "0", "]", "-", "pad_top", ")", "\n", "pad_right", "=", "int", "(", "(", "tot_pad", "[", "1", "]", "+", "1", ")", "/", "2", ")", "\n", "\n", "if", "rescale", ":", "\n", "        ", "return", "grid_sz", ".", "prod", "(", ")", ".", "item", "(", ")", "*", "cifft2", "(", "F", ".", "pad", "(", "a", ",", "(", "0", ",", "0", ",", "0", ",", "pad_right", ",", "pad_top", ",", "pad_bottom", ")", ")", ",", "signal_sizes", "=", "grid_sz", ".", "long", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "cifft2", "(", "F", ".", "pad", "(", "a", ",", "(", "0", ",", "0", ",", "0", ",", "pad_right", ",", "pad_top", ",", "pad_bottom", ")", ")", ",", "signal_sizes", "=", "grid_sz", ".", "long", "(", ")", ".", "tolist", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.get_frequency_coord": [[64, 75], ["torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "ky.unsqueeze.unsqueeze", "kx.unsqueeze.unsqueeze", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "int", "int", "int"], "function", ["None"], ["", "", "def", "get_frequency_coord", "(", "sz", ",", "add_complex_dim", "=", "False", ",", "device", "=", "'cpu'", ")", ":", "\n", "    ", "\"\"\"Frequency coordinates.\"\"\"", "\n", "\n", "ky", "=", "torch", ".", "arange", "(", "-", "int", "(", "(", "sz", "[", "0", "]", "-", "1", ")", "/", "2", ")", ",", "int", "(", "sz", "[", "0", "]", "/", "2", "+", "1", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", ".", "view", "(", "1", ",", "1", ",", "-", "1", ",", "1", ")", "\n", "kx", "=", "torch", ".", "arange", "(", "0", ",", "int", "(", "sz", "[", "1", "]", "/", "2", "+", "1", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "\n", "if", "add_complex_dim", ":", "\n", "        ", "ky", "=", "ky", ".", "unsqueeze", "(", "-", "1", ")", "\n", "kx", "=", "kx", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "", "return", "ky", ",", "kx", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.shift_fs": [[77, 93], ["fourier.get_frequency_coord", "pysot.mult", "a.dim", "ValueError", "pysot.mult", "pysot.exp_imag", "pysot.exp_imag", "shift[].item", "shift[].item"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.get_frequency_coord", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.exp_imag", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.exp_imag"], ["", "@", "tensor_operation", "\n", "def", "shift_fs", "(", "a", ":", "torch", ".", "Tensor", ",", "shift", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Shift a sample a in the Fourier domain.\n    Params:\n        a : The fourier coefficiens of the sample.\n        shift : The shift to be performed normalized to the range [-pi, pi].\"\"\"", "\n", "\n", "if", "a", ".", "dim", "(", ")", "!=", "5", ":", "\n", "        ", "raise", "ValueError", "(", "'a must be the Fourier coefficients, a 5-dimensional tensor.'", ")", "\n", "\n", "", "if", "shift", "[", "0", "]", "==", "0", "and", "shift", "[", "1", "]", "==", "0", ":", "\n", "        ", "return", "a", "\n", "\n", "", "ky", ",", "kx", "=", "get_frequency_coord", "(", "(", "a", ".", "shape", "[", "2", "]", ",", "2", "*", "a", ".", "shape", "[", "3", "]", "-", "1", ")", ",", "device", "=", "a", ".", "device", ")", "\n", "\n", "return", "complex", ".", "mult", "(", "complex", ".", "mult", "(", "a", ",", "complex", ".", "exp_imag", "(", "shift", "[", "0", "]", ".", "item", "(", ")", "*", "ky", ")", ")", ",", "complex", ".", "exp_imag", "(", "shift", "[", "1", "]", ".", "item", "(", ")", "*", "kx", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.sum_fs": [[95, 115], ["sorted", "e.clone", "int", "int", "int"], "function", ["None"], ["", "def", "sum_fs", "(", "a", ":", "TensorList", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "\"\"\"Sum a list of Fourier series expansions.\"\"\"", "\n", "\n", "s", "=", "None", "\n", "mid", "=", "None", "\n", "\n", "for", "e", "in", "sorted", "(", "a", ",", "key", "=", "lambda", "elem", ":", "elem", ".", "shape", "[", "-", "3", "]", ",", "reverse", "=", "True", ")", ":", "\n", "        ", "if", "s", "is", "None", ":", "\n", "            ", "s", "=", "e", ".", "clone", "(", ")", "\n", "mid", "=", "int", "(", "(", "s", ".", "shape", "[", "-", "3", "]", "-", "1", ")", "/", "2", ")", "\n", "", "else", ":", "\n", "# Compute coordinates", "\n", "            ", "top", "=", "mid", "-", "int", "(", "(", "e", ".", "shape", "[", "-", "3", "]", "-", "1", ")", "/", "2", ")", "\n", "bottom", "=", "mid", "+", "int", "(", "e", ".", "shape", "[", "-", "3", "]", "/", "2", ")", "+", "1", "\n", "right", "=", "e", ".", "shape", "[", "-", "2", "]", "\n", "\n", "# Add the data", "\n", "s", "[", "...", ",", "top", ":", "bottom", ",", ":", "right", ",", ":", "]", "+=", "e", "\n", "\n", "", "", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.sum_fs12": [[117, 137], ["sorted", "e.clone", "int", "int", "int"], "function", ["None"], ["", "def", "sum_fs12", "(", "a", ":", "TensorList", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "\"\"\"Sum a list of Fourier series expansions.\"\"\"", "\n", "\n", "s", "=", "None", "\n", "mid", "=", "None", "\n", "\n", "for", "e", "in", "sorted", "(", "a", ",", "key", "=", "lambda", "elem", ":", "elem", ".", "shape", "[", "0", "]", ",", "reverse", "=", "True", ")", ":", "\n", "        ", "if", "s", "is", "None", ":", "\n", "            ", "s", "=", "e", ".", "clone", "(", ")", "\n", "mid", "=", "int", "(", "(", "s", ".", "shape", "[", "0", "]", "-", "1", ")", "/", "2", ")", "\n", "", "else", ":", "\n", "# Compute coordinates", "\n", "            ", "top", "=", "mid", "-", "int", "(", "(", "e", ".", "shape", "[", "0", "]", "-", "1", ")", "/", "2", ")", "\n", "bottom", "=", "mid", "+", "int", "(", "e", ".", "shape", "[", "0", "]", "/", "2", ")", "+", "1", "\n", "right", "=", "e", ".", "shape", "[", "1", "]", "\n", "\n", "# Add the data", "\n", "s", "[", "top", ":", "bottom", ",", ":", "right", ",", "...", "]", "+=", "e", "\n", "\n", "", "", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.inner_prod_fs": [[139, 147], ["pysot.is_complex", "pysot.is_complex", "pysot.is_real", "pysot.is_real", "NotImplementedError", "a[].reshape", "b[].reshape", "a.reshape", "b.reshape", "a[].reshape", "b[].reshape", "a.reshape", "b.reshape"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real"], ["", "@", "tensor_operation", "\n", "def", "inner_prod_fs", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "if", "complex", ".", "is_complex", "(", "a", ")", "and", "complex", ".", "is_complex", "(", "b", ")", ":", "\n", "        ", "return", "2", "*", "(", "a", ".", "reshape", "(", "-", "1", ")", "@", "b", ".", "reshape", "(", "-", "1", ")", ")", "-", "a", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", ".", "reshape", "(", "-", "1", ")", "@", "b", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", ".", "reshape", "(", "-", "1", ")", "\n", "", "elif", "complex", ".", "is_real", "(", "a", ")", "and", "complex", ".", "is_real", "(", "b", ")", ":", "\n", "        ", "return", "2", "*", "(", "a", ".", "reshape", "(", "-", "1", ")", "@", "b", ".", "reshape", "(", "-", "1", ")", ")", "-", "a", "[", ":", ",", ":", ",", ":", ",", "0", "]", ".", "reshape", "(", "-", "1", ")", "@", "b", "[", ":", ",", ":", ",", ":", ",", "0", "]", ".", "reshape", "(", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Not implemented for mixed real and complex.'", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.show_tensor": [[8, 27], ["a.squeeze().cpu().clone().detach().numpy", "matplotlib.figure", "matplotlib.tight_layout", "matplotlib.cla", "matplotlib.imshow", "matplotlib.axis", "matplotlib.axis", "matplotlib.draw", "matplotlib.pause", "numpy.transpose", "matplotlib.title", "a.squeeze().cpu().clone().detach", "a.squeeze().cpu().clone", "a.squeeze().cpu", "a.squeeze"], "function", ["None"], ["def", "show_tensor", "(", "a", ":", "torch", ".", "Tensor", ",", "fig_num", "=", "None", ",", "title", "=", "None", ")", ":", "\n", "    ", "\"\"\"Display a 2D tensor.\n    args:\n        fig_num: Figure number.\n        title: Title of figure.\n    \"\"\"", "\n", "a_np", "=", "a", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "clone", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "if", "a_np", ".", "ndim", "==", "3", ":", "\n", "        ", "a_np", "=", "np", ".", "transpose", "(", "a_np", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "", "plt", ".", "figure", "(", "fig_num", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "cla", "(", ")", "\n", "plt", ".", "imshow", "(", "a_np", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "plt", ".", "axis", "(", "'equal'", ")", "\n", "if", "title", "is", "not", "None", ":", "\n", "        ", "plt", ".", "title", "(", "title", ")", "\n", "", "plt", ".", "draw", "(", ")", "\n", "plt", ".", "pause", "(", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph": [[29, 46], ["a.squeeze().cpu().clone().detach().numpy", "matplotlib.figure", "matplotlib.cla", "matplotlib.plot", "matplotlib.draw", "matplotlib.pause", "matplotlib.title", "a.squeeze().cpu().clone().detach", "a.squeeze().cpu().clone", "a.squeeze().cpu", "a.squeeze"], "function", ["None"], ["", "def", "plot_graph", "(", "a", ":", "torch", ".", "Tensor", ",", "fig_num", "=", "None", ",", "title", "=", "None", ")", ":", "\n", "    ", "\"\"\"Plot graph. Data is a 1D tensor.\n    args:\n        fig_num: Figure number.\n        title: Title of figure.\n    \"\"\"", "\n", "a_np", "=", "a", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "clone", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "if", "a_np", ".", "ndim", ">", "1", ":", "\n", "        ", "raise", "ValueError", "\n", "", "plt", ".", "figure", "(", "fig_num", ")", "\n", "# plt.tight_layout()", "\n", "plt", ".", "cla", "(", ")", "\n", "plt", ".", "plot", "(", "a_np", ")", "\n", "if", "title", "is", "not", "None", ":", "\n", "        ", "plt", ".", "title", "(", "title", ")", "\n", "", "plt", ".", "draw", "(", ")", "\n", "plt", ".", "pause", "(", "0.001", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.__call__": [[10, 13], ["None"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "x", ":", "TensorList", ")", "->", "TensorList", ":", "\n", "        ", "\"\"\"Shall compute the residuals of the problem.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_input": [[14, 17], ["sum", "a.view", "b.view"], "methods", ["None"], ["", "def", "ip_input", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "        ", "\"\"\"Inner product of the input space.\"\"\"", "\n", "return", "sum", "(", "a", ".", "view", "(", "-", "1", ")", "@", "b", ".", "view", "(", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_output": [[18, 21], ["sum", "a.view", "b.view"], "methods", ["None"], ["", "def", "ip_output", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "        ", "\"\"\"Inner product of the output space.\"\"\"", "\n", "return", "sum", "(", "a", ".", "view", "(", "-", "1", ")", "@", "b", ".", "view", "(", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.M1": [[22, 25], ["None"], "methods", ["None"], ["", "def", "M1", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"M1 preconditioner.\"\"\"", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.M2": [[26, 29], ["None"], "methods", ["None"], ["", "def", "M2", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"M2 preconditioner.\"\"\"", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.MinimizationProblem.__call__": [[33, 36], ["None"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "x", ":", "TensorList", ")", "->", "TensorList", ":", "\n", "        ", "\"\"\"Shall compute the loss.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.MinimizationProblem.ip_input": [[37, 40], ["sum", "a.view", "b.view"], "methods", ["None"], ["", "def", "ip_input", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "        ", "\"\"\"Inner product of the input space.\"\"\"", "\n", "return", "sum", "(", "a", ".", "view", "(", "-", "1", ")", "@", "b", ".", "view", "(", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.MinimizationProblem.M1": [[41, 43], ["None"], "methods", ["None"], ["", "def", "M1", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.MinimizationProblem.M2": [[44, 46], ["None"], "methods", ["None"], ["", "def", "M2", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.__init__": [[52, 65], ["torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "fletcher_reeves", "=", "True", ",", "standard_alpha", "=", "True", ",", "direction_forget_factor", "=", "0", ",", "debug", "=", "False", ")", ":", "\n", "        ", "self", ".", "fletcher_reeves", "=", "fletcher_reeves", "\n", "self", ".", "standard_alpha", "=", "standard_alpha", "\n", "self", ".", "direction_forget_factor", "=", "direction_forget_factor", "\n", "self", ".", "debug", "=", "debug", "\n", "\n", "# State", "\n", "self", ".", "p", "=", "None", "\n", "self", ".", "rho", "=", "torch", ".", "ones", "(", "1", ")", "\n", "self", ".", "r_prev", "=", "None", "\n", "\n", "# Right hand side", "\n", "self", ".", "b", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.reset_state": [[66, 70], ["torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "reset_state", "(", "self", ")", ":", "\n", "        ", "self", ".", "p", "=", "None", "\n", "self", ".", "rho", "=", "torch", ".", "ones", "(", "1", ")", "\n", "self", ".", "r_prev", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.run_CG": [[72, 164], ["range", "optimization.ConjugateGradientBase.reset_state", "optimization.ConjugateGradientBase.b.clone", "optimization.ConjugateGradientBase.residual_norm", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "optimization.ConjugateGradientBase.M1", "optimization.ConjugateGradientBase.M2", "optimization.ConjugateGradientBase.ip", "optimization.ConjugateGradientBase.check_zero", "optimization.ConjugateGradientBase.A", "optimization.ConjugateGradientBase.ip", "optimization.ConjugateGradientBase.A", "optimization.ConjugateGradientBase.clone", "beta.clamp.clamp.clamp", "optimization.ConjugateGradientBase.clone", "optimization.ConjugateGradientBase.residual_norm", "optimization.ConjugateGradientBase.evaluate_CG_iteration", "print", "optimization.ConjugateGradientBase.ip", "optimization.ConjugateGradientBase.ip", "print"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.reset_state", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.residual_norm", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M1", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M2", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.ip", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.check_zero", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.A", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.ip", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.A", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.residual_norm", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.evaluate_CG_iteration", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.ip", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.ip"], ["", "def", "run_CG", "(", "self", ",", "num_iter", ",", "x", "=", "None", ",", "eps", "=", "0.0", ")", ":", "\n", "        ", "\"\"\"Main conjugate gradient method.\n\n        args:\n            num_iter: Number of iterations.\n            x: Initial guess. Assumed zero if None.\n            eps: Stop if the residual norm gets smaller than this.\n        \"\"\"", "\n", "\n", "# Apply forgetting factor", "\n", "if", "self", ".", "direction_forget_factor", "==", "0", ":", "\n", "            ", "self", ".", "reset_state", "(", ")", "\n", "", "elif", "self", ".", "p", "is", "not", "None", ":", "\n", "            ", "self", ".", "rho", "/=", "self", ".", "direction_forget_factor", "\n", "\n", "", "if", "x", "is", "None", ":", "\n", "            ", "r", "=", "self", ".", "b", ".", "clone", "(", ")", "\n", "", "else", ":", "\n", "            ", "r", "=", "self", ".", "b", "-", "self", ".", "A", "(", "x", ")", "\n", "\n", "# Norms of residuals etc for debugging", "\n", "", "resvec", "=", "None", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "normr", "=", "self", ".", "residual_norm", "(", "r", ")", "\n", "resvec", "=", "torch", ".", "zeros", "(", "num_iter", "+", "1", ")", "\n", "resvec", "[", "0", "]", "=", "normr", "\n", "\n", "# Loop over iterations", "\n", "", "for", "ii", "in", "range", "(", "num_iter", ")", ":", "\n", "# Preconditioners", "\n", "            ", "y", "=", "self", ".", "M1", "(", "r", ")", "\n", "z", "=", "self", ".", "M2", "(", "y", ")", "\n", "\n", "rho1", "=", "self", ".", "rho", "\n", "self", ".", "rho", "=", "self", ".", "ip", "(", "r", ",", "z", ")", "\n", "\n", "if", "self", ".", "check_zero", "(", "self", ".", "rho", ")", ":", "\n", "                ", "if", "self", ".", "debug", ":", "\n", "                    ", "print", "(", "'Stopped CG since rho = 0'", ")", "\n", "if", "resvec", "is", "not", "None", ":", "\n", "                        ", "resvec", "=", "resvec", "[", ":", "ii", "+", "1", "]", "\n", "", "", "return", "x", ",", "resvec", "\n", "\n", "", "if", "self", ".", "p", "is", "None", ":", "\n", "                ", "self", ".", "p", "=", "z", ".", "clone", "(", ")", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "fletcher_reeves", ":", "\n", "                    ", "beta", "=", "self", ".", "rho", "/", "rho1", "\n", "", "else", ":", "\n", "                    ", "rho2", "=", "self", ".", "ip", "(", "self", ".", "r_prev", ",", "z", ")", "\n", "beta", "=", "(", "self", ".", "rho", "-", "rho2", ")", "/", "rho1", "\n", "\n", "", "beta", "=", "beta", ".", "clamp", "(", "0", ")", "\n", "self", ".", "p", "=", "z", "+", "self", ".", "p", "*", "beta", "\n", "\n", "", "q", "=", "self", ".", "A", "(", "self", ".", "p", ")", "\n", "pq", "=", "self", ".", "ip", "(", "self", ".", "p", ",", "q", ")", "\n", "\n", "if", "self", ".", "standard_alpha", ":", "\n", "                ", "alpha", "=", "self", ".", "rho", "/", "pq", "\n", "", "else", ":", "\n", "                ", "alpha", "=", "self", ".", "ip", "(", "self", ".", "p", ",", "r", ")", "/", "pq", "\n", "\n", "# Save old r for PR formula", "\n", "", "if", "not", "self", ".", "fletcher_reeves", ":", "\n", "                ", "self", ".", "r_prev", "=", "r", ".", "clone", "(", ")", "\n", "\n", "# Form new iterate", "\n", "", "if", "x", "is", "None", ":", "\n", "                ", "x", "=", "self", ".", "p", "*", "alpha", "\n", "", "else", ":", "\n", "                ", "x", "+=", "self", ".", "p", "*", "alpha", "\n", "\n", "", "if", "ii", "<", "num_iter", "-", "1", "or", "self", ".", "debug", ":", "\n", "                ", "r", "-=", "q", "*", "alpha", "\n", "\n", "", "if", "eps", ">", "0.0", "or", "self", ".", "debug", ":", "\n", "                ", "normr", "=", "self", ".", "residual_norm", "(", "r", ")", "\n", "\n", "", "if", "self", ".", "debug", ":", "\n", "                ", "self", ".", "evaluate_CG_iteration", "(", "x", ")", "\n", "resvec", "[", "ii", "+", "1", "]", "=", "normr", "\n", "\n", "", "if", "eps", ">", "0", "and", "normr", "<=", "eps", ":", "\n", "                ", "if", "self", ".", "debug", ":", "\n", "                    ", "print", "(", "'Stopped CG since norm smaller than eps'", ")", "\n", "", "break", "\n", "\n", "", "", "if", "resvec", "is", "not", "None", ":", "\n", "            ", "resvec", "=", "resvec", "[", ":", "ii", "+", "2", "]", "\n", "\n", "", "return", "x", ",", "resvec", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.A": [[166, 169], ["None"], "methods", ["None"], ["", "def", "A", "(", "self", ",", "x", ")", ":", "\n", "# Implements the left hand operation", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.ip": [[170, 173], ["a.view", "b.view"], "methods", ["None"], ["", "def", "ip", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "# Implements the inner product", "\n", "        ", "return", "a", ".", "view", "(", "-", "1", ")", "@", "b", ".", "view", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.residual_norm": [[174, 179], ["optimization.ConjugateGradientBase.ip().sum", "isinstance", "sum.sqrt", "sum", "optimization.ConjugateGradientBase.ip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.ip"], ["", "def", "residual_norm", "(", "self", ",", "r", ")", ":", "\n", "        ", "res", "=", "self", ".", "ip", "(", "r", ",", "r", ")", ".", "sum", "(", ")", "\n", "if", "isinstance", "(", "res", ",", "(", "TensorList", ",", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "res", "=", "sum", "(", "res", ")", "\n", "", "return", "res", ".", "sqrt", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.check_zero": [[180, 187], ["isinstance", "s.abs", "sum", "sum.item"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs"], ["", "def", "check_zero", "(", "self", ",", "s", ",", "eps", "=", "0.0", ")", ":", "\n", "        ", "ss", "=", "s", ".", "abs", "(", ")", "<=", "eps", "\n", "if", "isinstance", "(", "ss", ",", "(", "TensorList", ",", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "ss", "=", "sum", "(", "ss", ")", "\n", "", "mark", "=", "ss", ".", "item", "(", ")", ">", "0", "\n", "\n", "return", "mark", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.M1": [[188, 191], ["None"], "methods", ["None"], ["", "def", "M1", "(", "self", ",", "x", ")", ":", "\n", "# M1 preconditioner", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.M2": [[192, 195], ["None"], "methods", ["None"], ["", "def", "M2", "(", "self", ",", "x", ")", ":", "\n", "# M2 preconditioner", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.evaluate_CG_iteration": [[196, 198], ["None"], "methods", ["None"], ["", "def", "evaluate_CG_iteration", "(", "self", ",", "x", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradient.__init__": [[204, 221], ["optimization.ConjugateGradientBase.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "problem", ":", "L2Problem", ",", "variable", ":", "TensorList", ",", "cg_eps", "=", "0.0", ",", "fletcher_reeves", "=", "True", ",", "\n", "standard_alpha", "=", "True", ",", "direction_forget_factor", "=", "0", ",", "debug", "=", "False", ",", "plotting", "=", "False", ",", "fig_num", "=", "(", "10", ",", "11", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "fletcher_reeves", ",", "standard_alpha", ",", "direction_forget_factor", ",", "debug", "or", "plotting", ")", "\n", "\n", "self", ".", "problem", "=", "problem", "\n", "self", ".", "x", "=", "variable", "\n", "\n", "self", ".", "plotting", "=", "plotting", "\n", "self", ".", "fig_num", "=", "fig_num", "\n", "\n", "self", ".", "cg_eps", "=", "cg_eps", "\n", "self", ".", "f0", "=", "None", "\n", "self", ".", "g", "=", "None", "\n", "self", ".", "dfdxt_g", "=", "None", "\n", "\n", "self", ".", "residuals", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "self", ".", "losses", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradient.clear_temp": [[222, 226], ["None"], "methods", ["None"], ["", "def", "clear_temp", "(", "self", ")", ":", "\n", "        ", "self", ".", "f0", "=", "None", "\n", "self", ".", "g", "=", "None", "\n", "self", ".", "dfdxt_g", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradient.run": [[228, 274], ["optimization.ConjugateGradient.x.requires_grad_", "optimization.ConjugateGradient.problem", "optimization.ConjugateGradient.f0.detach", "optimization.ConjugateGradient.g.requires_grad_", "tensorlist.TensorList", "optimization.ConjugateGradient.run_CG", "optimization.ConjugateGradient.x.detach_", "optimization.ConjugateGradient.x.detach_", "optimization.ConjugateGradient.clear_temp", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "optimization.ConjugateGradient.problem.ip_output", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "optimization.ConjugateGradient.dfdxt_g.detach", "optimization.ConjugateGradient.problem", "optimization.ConjugateGradient.problem.ip_output", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "plotting.plot_graph", "plotting.plot_graph"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.run_CG", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.clear_temp", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_output", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_output", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph"], ["", "def", "run", "(", "self", ",", "num_cg_iter", ")", ":", "\n", "        ", "\"\"\"Run the oprimizer with the provided number of iterations.\"\"\"", "\n", "\n", "if", "num_cg_iter", "==", "0", ":", "\n", "            ", "return", "\n", "\n", "", "lossvec", "=", "None", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "lossvec", "=", "torch", ".", "zeros", "(", "2", ")", "\n", "\n", "", "self", ".", "x", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# Evaluate function at current estimate", "\n", "self", ".", "f0", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "\n", "# Create copy with graph detached", "\n", "self", ".", "g", "=", "self", ".", "f0", ".", "detach", "(", ")", "\n", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "lossvec", "[", "0", "]", "=", "self", ".", "problem", ".", "ip_output", "(", "self", ".", "g", ",", "self", ".", "g", ")", "\n", "\n", "", "self", ".", "g", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# Get df/dx^t @ f0", "\n", "self", ".", "dfdxt_g", "=", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "self", ".", "f0", ",", "self", ".", "x", ",", "self", ".", "g", ",", "create_graph", "=", "True", ")", ")", "\n", "\n", "# Get the right hand side", "\n", "self", ".", "b", "=", "-", "self", ".", "dfdxt_g", ".", "detach", "(", ")", "\n", "\n", "# Run CG", "\n", "delta_x", ",", "res", "=", "self", ".", "run_CG", "(", "num_cg_iter", ",", "eps", "=", "self", ".", "cg_eps", ")", "\n", "\n", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "x", "+=", "delta_x", "\n", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "self", ".", "f0", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "lossvec", "[", "-", "1", "]", "=", "self", ".", "problem", ".", "ip_output", "(", "self", ".", "f0", ",", "self", ".", "f0", ")", "\n", "self", ".", "residuals", "=", "torch", ".", "cat", "(", "(", "self", ".", "residuals", ",", "res", ")", ")", "\n", "self", ".", "losses", "=", "torch", ".", "cat", "(", "(", "self", ".", "losses", ",", "lossvec", ")", ")", "\n", "if", "self", ".", "plotting", ":", "\n", "                ", "plot_graph", "(", "self", ".", "losses", ",", "self", ".", "fig_num", "[", "0", "]", ",", "title", "=", "'Loss'", ")", "\n", "plot_graph", "(", "self", ".", "residuals", ",", "self", ".", "fig_num", "[", "1", "]", ",", "title", "=", "'CG residuals'", ")", "\n", "\n", "", "", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "clear_temp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradient.A": [[276, 279], ["torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "tensorlist.TensorList", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad"], "methods", ["None"], ["", "def", "A", "(", "self", ",", "x", ")", ":", "\n", "        ", "dfdx_x", "=", "torch", ".", "autograd", ".", "grad", "(", "self", ".", "dfdxt_g", ",", "self", ".", "g", ",", "grad_outputs", "=", "x", ",", "retain_graph", "=", "True", ")", "\n", "return", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "self", ".", "f0", ",", "self", ".", "x", ",", "grad_outputs", "=", "dfdx_x", ",", "retain_graph", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradient.ip": [[281, 283], ["optimization.ConjugateGradient.problem.ip_input"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.MinimizationProblem.ip_input"], ["", "def", "ip", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "        ", "return", "self", ".", "problem", ".", "ip_input", "(", "a", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradient.M1": [[284, 286], ["optimization.ConjugateGradient.problem.M1"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M1"], ["", "def", "M1", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "problem", ".", "M1", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradient.M2": [[287, 289], ["optimization.ConjugateGradient.problem.M2"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M2"], ["", "def", "M2", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "problem", ".", "M2", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.__init__": [[295, 315], ["optimization.ConjugateGradientBase.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "problem", ":", "L2Problem", ",", "variable", ":", "TensorList", ",", "cg_eps", "=", "0.0", ",", "fletcher_reeves", "=", "True", ",", "\n", "standard_alpha", "=", "True", ",", "direction_forget_factor", "=", "0", ",", "debug", "=", "False", ",", "analyze", "=", "False", ",", "plotting", "=", "False", ",", "\n", "fig_num", "=", "(", "10", ",", "11", ",", "12", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "fletcher_reeves", ",", "standard_alpha", ",", "direction_forget_factor", ",", "debug", "or", "analyze", "or", "plotting", ")", "\n", "\n", "self", ".", "problem", "=", "problem", "\n", "self", ".", "x", "=", "variable", "\n", "\n", "self", ".", "analyze_convergence", "=", "analyze", "\n", "self", ".", "plotting", "=", "plotting", "\n", "self", ".", "fig_num", "=", "fig_num", "\n", "\n", "self", ".", "cg_eps", "=", "cg_eps", "\n", "self", ".", "f0", "=", "None", "\n", "self", ".", "g", "=", "None", "\n", "self", ".", "dfdxt_g", "=", "None", "\n", "\n", "self", ".", "residuals", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "self", ".", "losses", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "self", ".", "gradient_mags", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.clear_temp": [[316, 320], ["None"], "methods", ["None"], ["", "def", "clear_temp", "(", "self", ")", ":", "\n", "        ", "self", ".", "f0", "=", "None", "\n", "self", ".", "g", "=", "None", "\n", "self", ".", "dfdxt_g", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.run_GN": [[322, 324], ["optimization.GaussNewtonCG.run"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.run"], ["", "def", "run_GN", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "run", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.run": [[326, 367], ["isinstance", "len", "optimization.GaussNewtonCG.x.detach_", "optimization.GaussNewtonCG.clear_temp", "optimization.GaussNewtonCG.evaluate_CG_iteration", "optimization.GaussNewtonCG.run_GN_iter", "ValueError", "optimization.GaussNewtonCG.problem", "optimization.GaussNewtonCG.problem.ip_output", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "plotting.plot_graph", "plotting.plot_graph", "plotting.plot_graph", "optimization.GaussNewtonCG.detach().cpu().view", "optimization.GaussNewtonCG.detach().cpu", "optimization.GaussNewtonCG.detach"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.clear_temp", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.evaluate_CG_iteration", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.run_GN_iter", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_output", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph"], ["", "def", "run", "(", "self", ",", "num_cg_iter", ",", "num_gn_iter", "=", "None", ")", ":", "\n", "        ", "\"\"\"Run the optimizer.\n        args:\n            num_cg_iter: Number of CG iterations per GN iter. If list, then each entry specifies number of CG iterations\n                         and number of GN iterations is given by the length of the list.\n            num_gn_iter: Number of GN iterations. Shall only be given if num_cg_iter is an integer.\n        \"\"\"", "\n", "\n", "if", "isinstance", "(", "num_cg_iter", ",", "int", ")", ":", "\n", "            ", "if", "num_gn_iter", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "'Must specify number of GN iter if CG iter is constant'", ")", "\n", "", "num_cg_iter", "=", "[", "num_cg_iter", "]", "*", "num_gn_iter", "\n", "\n", "", "num_gn_iter", "=", "len", "(", "num_cg_iter", ")", "\n", "if", "num_gn_iter", "==", "0", ":", "\n", "            ", "return", "\n", "\n", "", "if", "self", ".", "analyze_convergence", ":", "\n", "            ", "self", ".", "evaluate_CG_iteration", "(", "0", ")", "\n", "\n", "# Outer loop for running the GN iterations.", "\n", "", "for", "cg_iter", "in", "num_cg_iter", ":", "\n", "            ", "self", ".", "run_GN_iter", "(", "cg_iter", ")", "\n", "\n", "", "if", "self", ".", "debug", ":", "\n", "            ", "if", "not", "self", ".", "analyze_convergence", ":", "\n", "                ", "self", ".", "f0", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "loss", "=", "self", ".", "problem", ".", "ip_output", "(", "self", ".", "f0", ",", "self", ".", "f0", ")", "\n", "self", ".", "losses", "=", "torch", ".", "cat", "(", "(", "self", ".", "losses", ",", "loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "\n", "", "if", "self", ".", "plotting", ":", "\n", "                ", "plot_graph", "(", "self", ".", "losses", ",", "self", ".", "fig_num", "[", "0", "]", ",", "title", "=", "'Loss'", ")", "\n", "plot_graph", "(", "self", ".", "residuals", ",", "self", ".", "fig_num", "[", "1", "]", ",", "title", "=", "'CG residuals'", ")", "\n", "if", "self", ".", "analyze_convergence", ":", "\n", "                    ", "plot_graph", "(", "self", ".", "gradient_mags", ",", "self", ".", "fig_num", "[", "2", "]", ",", "'Gradient magnitude'", ")", "\n", "\n", "\n", "", "", "", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "clear_temp", "(", ")", "\n", "\n", "return", "self", ".", "losses", ",", "self", ".", "residuals", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.run_GN_iter": [[369, 400], ["optimization.GaussNewtonCG.x.requires_grad_", "optimization.GaussNewtonCG.problem", "optimization.GaussNewtonCG.f0.detach", "optimization.GaussNewtonCG.g.requires_grad_", "tensorlist.TensorList", "optimization.GaussNewtonCG.run_CG", "optimization.GaussNewtonCG.x.detach_", "optimization.GaussNewtonCG.problem.ip_output", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "optimization.GaussNewtonCG.dfdxt_g.detach", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "optimization.GaussNewtonCG.detach().cpu().view", "optimization.GaussNewtonCG.detach().cpu", "optimization.GaussNewtonCG.detach"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.run_CG", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_output"], ["", "def", "run_GN_iter", "(", "self", ",", "num_cg_iter", ")", ":", "\n", "        ", "\"\"\"Runs a single GN iteration.\"\"\"", "\n", "\n", "self", ".", "x", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# Evaluate function at current estimate", "\n", "self", ".", "f0", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "\n", "# Create copy with graph detached", "\n", "self", ".", "g", "=", "self", ".", "f0", ".", "detach", "(", ")", "\n", "\n", "if", "self", ".", "debug", "and", "not", "self", ".", "analyze_convergence", ":", "\n", "            ", "loss", "=", "self", ".", "problem", ".", "ip_output", "(", "self", ".", "g", ",", "self", ".", "g", ")", "\n", "self", ".", "losses", "=", "torch", ".", "cat", "(", "(", "self", ".", "losses", ",", "loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "\n", "", "self", ".", "g", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# Get df/dx^t @ f0", "\n", "self", ".", "dfdxt_g", "=", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "self", ".", "f0", ",", "self", ".", "x", ",", "self", ".", "g", ",", "create_graph", "=", "True", ")", ")", "\n", "\n", "# Get the right hand side", "\n", "self", ".", "b", "=", "-", "self", ".", "dfdxt_g", ".", "detach", "(", ")", "\n", "\n", "# Run CG", "\n", "delta_x", ",", "res", "=", "self", ".", "run_CG", "(", "num_cg_iter", ",", "eps", "=", "self", ".", "cg_eps", ")", "\n", "\n", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "x", "+=", "delta_x", "\n", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "self", ".", "residuals", "=", "torch", ".", "cat", "(", "(", "self", ".", "residuals", ",", "res", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.A": [[402, 405], ["torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "tensorlist.TensorList", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad"], "methods", ["None"], ["", "", "def", "A", "(", "self", ",", "x", ")", ":", "\n", "        ", "dfdx_x", "=", "torch", ".", "autograd", ".", "grad", "(", "self", ".", "dfdxt_g", ",", "self", ".", "g", ",", "grad_outputs", "=", "x", ",", "retain_graph", "=", "True", ")", "\n", "return", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "self", ".", "f0", ",", "self", ".", "x", ",", "dfdx_x", ",", "retain_graph", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.ip": [[406, 408], ["optimization.GaussNewtonCG.problem.ip_input"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.MinimizationProblem.ip_input"], ["", "def", "ip", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "        ", "return", "self", ".", "problem", ".", "ip_input", "(", "a", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.M1": [[409, 411], ["optimization.GaussNewtonCG.problem.M1"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M1"], ["", "def", "M1", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "problem", ".", "M1", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.M2": [[412, 414], ["optimization.GaussNewtonCG.problem.M2"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M2"], ["", "def", "M2", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "problem", ".", "M2", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GaussNewtonCG.evaluate_CG_iteration": [[415, 428], ["x.requires_grad_", "optimization.GaussNewtonCG.problem", "optimization.GaussNewtonCG.problem.ip_output", "tensorlist.TensorList", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "optimization.GaussNewtonCG.detach().cpu().view", "sum().cpu().sqrt().detach().view", "optimization.GaussNewtonCG.detach().cpu", "sum().cpu().sqrt().detach", "optimization.GaussNewtonCG.detach", "sum().cpu().sqrt", "sum().cpu", "sum", "tensorlist.TensorList.view", "tensorlist.TensorList.view"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_output"], ["", "def", "evaluate_CG_iteration", "(", "self", ",", "delta_x", ")", ":", "\n", "        ", "if", "self", ".", "analyze_convergence", ":", "\n", "            ", "x", "=", "(", "self", ".", "x", "+", "delta_x", ")", ".", "detach", "(", ")", "\n", "x", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# compute loss and gradient", "\n", "f", "=", "self", ".", "problem", "(", "x", ")", "\n", "loss", "=", "self", ".", "problem", ".", "ip_output", "(", "f", ",", "f", ")", "\n", "grad", "=", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "x", ")", ")", "\n", "\n", "# store in the vectors", "\n", "self", ".", "losses", "=", "torch", ".", "cat", "(", "(", "self", ".", "losses", ",", "loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "self", ".", "gradient_mags", "=", "torch", ".", "cat", "(", "(", "self", ".", "gradient_mags", ",", "sum", "(", "grad", ".", "view", "(", "-", "1", ")", "@", "grad", ".", "view", "(", "-", "1", ")", ")", ".", "cpu", "(", ")", ".", "sqrt", "(", ")", ".", "detach", "(", ")", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescentL2.__init__": [[433, 450], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "optimization.GradientDescentL2.clear_temp"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.clear_temp"], ["def", "__init__", "(", "self", ",", "problem", ":", "L2Problem", ",", "variable", ":", "TensorList", ",", "step_length", ":", "float", ",", "momentum", ":", "float", "=", "0.0", ",", "debug", "=", "False", ",", "plotting", "=", "False", ",", "fig_num", "=", "(", "10", ",", "11", ")", ")", ":", "\n", "\n", "        ", "self", ".", "problem", "=", "problem", "\n", "self", ".", "x", "=", "variable", "\n", "\n", "self", ".", "step_legnth", "=", "step_length", "\n", "self", ".", "momentum", "=", "momentum", "\n", "\n", "self", ".", "debug", "=", "debug", "or", "plotting", "\n", "self", ".", "plotting", "=", "plotting", "\n", "self", ".", "fig_num", "=", "fig_num", "\n", "\n", "self", ".", "losses", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "self", ".", "gradient_mags", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "self", ".", "residuals", "=", "None", "\n", "\n", "self", ".", "clear_temp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescentL2.clear_temp": [[452, 455], ["None"], "methods", ["None"], ["", "def", "clear_temp", "(", "self", ")", ":", "\n", "        ", "self", ".", "f0", "=", "None", "\n", "self", ".", "dir", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescentL2.run": [[457, 507], ["range", "optimization.GradientDescentL2.x.detach_", "optimization.GradientDescentL2.clear_temp", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "optimization.GradientDescentL2.x.requires_grad_", "optimization.GradientDescentL2.problem", "optimization.GradientDescentL2.problem.ip_output", "tensorlist.TensorList", "optimization.GradientDescentL2.x.detach_", "optimization.GradientDescentL2.x.requires_grad_", "optimization.GradientDescentL2.problem", "optimization.GradientDescentL2.problem.ip_output", "tensorlist.TensorList", "optimization.GradientDescentL2.problem.ip_output().item", "sum().cpu().sqrt().item", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "optimization.GradientDescentL2.item", "sum().sqrt().item", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "plotting.plot_graph", "plotting.plot_graph", "optimization.GradientDescentL2.problem.ip_output", "sum().cpu().sqrt", "sum().sqrt", "sum().cpu", "sum", "sum", "tensorlist.TensorList.view", "tensorlist.TensorList.view", "tensorlist.TensorList.view", "tensorlist.TensorList.view"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.clear_temp", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_output", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_output", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.L2Problem.ip_output"], ["", "def", "run", "(", "self", ",", "num_iter", ",", "dummy", "=", "None", ")", ":", "\n", "\n", "        ", "if", "num_iter", "==", "0", ":", "\n", "            ", "return", "\n", "\n", "", "lossvec", "=", "None", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "lossvec", "=", "torch", ".", "zeros", "(", "num_iter", "+", "1", ")", "\n", "grad_mags", "=", "torch", ".", "zeros", "(", "num_iter", "+", "1", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "num_iter", ")", ":", "\n", "            ", "self", ".", "x", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# Evaluate function at current estimate", "\n", "self", ".", "f0", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "\n", "# Compute loss", "\n", "loss", "=", "self", ".", "problem", ".", "ip_output", "(", "self", ".", "f0", ",", "self", ".", "f0", ")", "\n", "\n", "# Compute grad", "\n", "grad", "=", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "x", ")", ")", "\n", "\n", "# Update direction", "\n", "if", "self", ".", "dir", "is", "None", ":", "\n", "                ", "self", ".", "dir", "=", "grad", "\n", "", "else", ":", "\n", "                ", "self", ".", "dir", "=", "grad", "+", "self", ".", "momentum", "*", "self", ".", "dir", "\n", "\n", "", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "x", "-=", "self", ".", "step_legnth", "*", "self", ".", "dir", "\n", "\n", "if", "self", ".", "debug", ":", "\n", "                ", "lossvec", "[", "i", "]", "=", "loss", ".", "item", "(", ")", "\n", "grad_mags", "[", "i", "]", "=", "sum", "(", "grad", ".", "view", "(", "-", "1", ")", "@", "grad", ".", "view", "(", "-", "1", ")", ")", ".", "sqrt", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "if", "self", ".", "debug", ":", "\n", "            ", "self", ".", "x", ".", "requires_grad_", "(", "True", ")", "\n", "self", ".", "f0", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "loss", "=", "self", ".", "problem", ".", "ip_output", "(", "self", ".", "f0", ",", "self", ".", "f0", ")", "\n", "grad", "=", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "x", ")", ")", "\n", "lossvec", "[", "-", "1", "]", "=", "self", ".", "problem", ".", "ip_output", "(", "self", ".", "f0", ",", "self", ".", "f0", ")", ".", "item", "(", ")", "\n", "grad_mags", "[", "-", "1", "]", "=", "sum", "(", "grad", ".", "view", "(", "-", "1", ")", "@", "grad", ".", "view", "(", "-", "1", ")", ")", ".", "cpu", "(", ")", ".", "sqrt", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "losses", "=", "torch", ".", "cat", "(", "(", "self", ".", "losses", ",", "lossvec", ")", ")", "\n", "self", ".", "gradient_mags", "=", "torch", ".", "cat", "(", "(", "self", ".", "gradient_mags", ",", "grad_mags", ")", ")", "\n", "if", "self", ".", "plotting", ":", "\n", "                ", "plot_graph", "(", "self", ".", "losses", ",", "self", ".", "fig_num", "[", "0", "]", ",", "title", "=", "'Loss'", ")", "\n", "plot_graph", "(", "self", ".", "gradient_mags", ",", "self", ".", "fig_num", "[", "1", "]", ",", "title", "=", "'Gradient magnitude'", ")", "\n", "\n", "", "", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "clear_temp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.__init__": [[513, 534], ["optimization.ConjugateGradientBase.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "problem", ":", "MinimizationProblem", ",", "variable", ":", "TensorList", ",", "init_hessian_reg", "=", "0.0", ",", "hessian_reg_factor", "=", "1.0", ",", "\n", "cg_eps", "=", "0.0", ",", "fletcher_reeves", "=", "True", ",", "standard_alpha", "=", "True", ",", "direction_forget_factor", "=", "0", ",", "\n", "debug", "=", "False", ",", "analyze", "=", "False", ",", "plotting", "=", "False", ",", "fig_num", "=", "(", "10", ",", "11", ",", "12", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "fletcher_reeves", ",", "standard_alpha", ",", "direction_forget_factor", ",", "debug", "or", "analyze", "or", "plotting", ")", "\n", "\n", "self", ".", "problem", "=", "problem", "\n", "self", ".", "x", "=", "variable", "\n", "\n", "self", ".", "analyze_convergence", "=", "analyze", "\n", "self", ".", "plotting", "=", "plotting", "\n", "self", ".", "fig_num", "=", "fig_num", "\n", "\n", "self", ".", "hessian_reg", "=", "init_hessian_reg", "\n", "self", ".", "hessian_reg_factor", "=", "hessian_reg_factor", "\n", "self", ".", "cg_eps", "=", "cg_eps", "\n", "self", ".", "f0", "=", "None", "\n", "self", ".", "g", "=", "None", "\n", "\n", "self", ".", "residuals", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "self", ".", "losses", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "self", ".", "gradient_mags", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.clear_temp": [[535, 538], ["None"], "methods", ["None"], ["", "def", "clear_temp", "(", "self", ")", ":", "\n", "        ", "self", ".", "f0", "=", "None", "\n", "self", ".", "g", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.run": [[540, 575], ["isinstance", "len", "optimization.NewtonCG.x.detach_", "optimization.NewtonCG.clear_temp", "optimization.NewtonCG.evaluate_CG_iteration", "optimization.NewtonCG.run_newton_iter", "optimization.NewtonCG.problem", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "plotting.plot_graph", "plotting.plot_graph", "plotting.plot_graph", "optimization.NewtonCG.detach().cpu().view", "optimization.NewtonCG.detach().cpu", "optimization.NewtonCG.detach"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.clear_temp", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.evaluate_CG_iteration", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.run_newton_iter", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph"], ["", "def", "run", "(", "self", ",", "num_cg_iter", ",", "num_newton_iter", "=", "None", ")", ":", "\n", "\n", "        ", "if", "isinstance", "(", "num_cg_iter", ",", "int", ")", ":", "\n", "            ", "if", "num_cg_iter", "==", "0", ":", "\n", "                ", "return", "\n", "", "if", "num_newton_iter", "is", "None", ":", "\n", "                ", "num_newton_iter", "=", "1", "\n", "", "num_cg_iter", "=", "[", "num_cg_iter", "]", "*", "num_newton_iter", "\n", "\n", "", "num_newton_iter", "=", "len", "(", "num_cg_iter", ")", "\n", "if", "num_newton_iter", "==", "0", ":", "\n", "            ", "return", "\n", "\n", "", "if", "self", ".", "analyze_convergence", ":", "\n", "            ", "self", ".", "evaluate_CG_iteration", "(", "0", ")", "\n", "\n", "", "for", "cg_iter", "in", "num_cg_iter", ":", "\n", "            ", "self", ".", "run_newton_iter", "(", "cg_iter", ")", "\n", "self", ".", "hessian_reg", "*=", "self", ".", "hessian_reg_factor", "\n", "\n", "", "if", "self", ".", "debug", ":", "\n", "            ", "if", "not", "self", ".", "analyze_convergence", ":", "\n", "                ", "loss", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "self", ".", "losses", "=", "torch", ".", "cat", "(", "(", "self", ".", "losses", ",", "loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "\n", "", "if", "self", ".", "plotting", ":", "\n", "                ", "plot_graph", "(", "self", ".", "losses", ",", "self", ".", "fig_num", "[", "0", "]", ",", "title", "=", "'Loss'", ")", "\n", "plot_graph", "(", "self", ".", "residuals", ",", "self", ".", "fig_num", "[", "1", "]", ",", "title", "=", "'CG residuals'", ")", "\n", "if", "self", ".", "analyze_convergence", ":", "\n", "                    ", "plot_graph", "(", "self", ".", "gradient_mags", ",", "self", ".", "fig_num", "[", "2", "]", ",", "'Gradient magnitude'", ")", "\n", "\n", "", "", "", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "clear_temp", "(", ")", "\n", "\n", "return", "self", ".", "losses", ",", "self", ".", "residuals", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.run_newton_iter": [[577, 601], ["optimization.NewtonCG.x.requires_grad_", "optimization.NewtonCG.problem", "tensorlist.TensorList", "optimization.NewtonCG.run_CG", "optimization.NewtonCG.x.detach_", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "optimization.NewtonCG.g.detach", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "optimization.NewtonCG.f0.detach().cpu().view", "optimization.NewtonCG.f0.detach().cpu", "optimization.NewtonCG.f0.detach"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.ConjugateGradientBase.run_CG"], ["", "def", "run_newton_iter", "(", "self", ",", "num_cg_iter", ")", ":", "\n", "\n", "        ", "self", ".", "x", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# Evaluate function at current estimate", "\n", "self", ".", "f0", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "\n", "if", "self", ".", "debug", "and", "not", "self", ".", "analyze_convergence", ":", "\n", "            ", "self", ".", "losses", "=", "torch", ".", "cat", "(", "(", "self", ".", "losses", ",", "self", ".", "f0", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "\n", "# Gradient of loss", "\n", "", "self", ".", "g", "=", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "self", ".", "f0", ",", "self", ".", "x", ",", "create_graph", "=", "True", ")", ")", "\n", "\n", "# Get the right hand side", "\n", "self", ".", "b", "=", "-", "self", ".", "g", ".", "detach", "(", ")", "\n", "\n", "# Run CG", "\n", "delta_x", ",", "res", "=", "self", ".", "run_CG", "(", "num_cg_iter", ",", "eps", "=", "self", ".", "cg_eps", ")", "\n", "\n", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "x", "+=", "delta_x", "\n", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "self", ".", "residuals", "=", "torch", ".", "cat", "(", "(", "self", ".", "residuals", ",", "res", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.A": [[603, 605], ["tensorlist.TensorList", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad"], "methods", ["None"], ["", "", "def", "A", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "self", ".", "g", ",", "self", ".", "x", ",", "x", ",", "retain_graph", "=", "True", ")", ")", "+", "self", ".", "hessian_reg", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.ip": [[606, 609], ["optimization.NewtonCG.problem.ip_input"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.MinimizationProblem.ip_input"], ["", "def", "ip", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "# Implements the inner product", "\n", "        ", "return", "self", ".", "problem", ".", "ip_input", "(", "a", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M1": [[610, 612], ["optimization.NewtonCG.problem.M1"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M1"], ["", "def", "M1", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "problem", ".", "M1", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M2": [[613, 615], ["optimization.NewtonCG.problem.M2"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.M2"], ["", "def", "M2", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "problem", ".", "M2", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.NewtonCG.evaluate_CG_iteration": [[616, 628], ["x.requires_grad_", "optimization.NewtonCG.problem", "tensorlist.TensorList", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "optimization.NewtonCG.detach().cpu().view", "sum().cpu().sqrt().detach().view", "optimization.NewtonCG.detach().cpu", "sum().cpu().sqrt().detach", "optimization.NewtonCG.detach", "sum().cpu().sqrt", "sum().cpu", "sum", "tensorlist.TensorList.view", "tensorlist.TensorList.view"], "methods", ["None"], ["", "def", "evaluate_CG_iteration", "(", "self", ",", "delta_x", ")", ":", "\n", "        ", "if", "self", ".", "analyze_convergence", ":", "\n", "            ", "x", "=", "(", "self", ".", "x", "+", "delta_x", ")", ".", "detach", "(", ")", "\n", "x", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# compute loss and gradient", "\n", "loss", "=", "self", ".", "problem", "(", "x", ")", "\n", "grad", "=", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "x", ")", ")", "\n", "\n", "# store in the vectors", "\n", "self", ".", "losses", "=", "torch", ".", "cat", "(", "(", "self", ".", "losses", ",", "loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "self", ".", "gradient_mags", "=", "torch", ".", "cat", "(", "(", "self", ".", "gradient_mags", ",", "sum", "(", "grad", ".", "view", "(", "-", "1", ")", "@", "grad", ".", "view", "(", "-", "1", ")", ")", ".", "cpu", "(", ")", ".", "sqrt", "(", ")", ".", "detach", "(", ")", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.__init__": [[633, 651], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "optimization.GradientDescent.clear_temp"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.clear_temp"], ["def", "__init__", "(", "self", ",", "problem", ":", "MinimizationProblem", ",", "variable", ":", "TensorList", ",", "step_length", ":", "float", ",", "momentum", ":", "float", "=", "0.0", ",", "\n", "debug", "=", "False", ",", "plotting", "=", "False", ",", "fig_num", "=", "(", "10", ",", "11", ")", ")", ":", "\n", "\n", "        ", "self", ".", "problem", "=", "problem", "\n", "self", ".", "x", "=", "variable", "\n", "\n", "self", ".", "step_legnth", "=", "step_length", "\n", "self", ".", "momentum", "=", "momentum", "\n", "\n", "self", ".", "debug", "=", "debug", "or", "plotting", "\n", "self", ".", "plotting", "=", "plotting", "\n", "self", ".", "fig_num", "=", "fig_num", "\n", "\n", "self", ".", "losses", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "self", ".", "gradient_mags", "=", "torch", ".", "zeros", "(", "0", ")", "\n", "self", ".", "residuals", "=", "None", "\n", "\n", "self", ".", "clear_temp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.clear_temp": [[653, 655], ["None"], "methods", ["None"], ["", "def", "clear_temp", "(", "self", ")", ":", "\n", "        ", "self", ".", "dir", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.run": [[657, 703], ["range", "optimization.GradientDescent.x.detach_", "optimization.GradientDescent.clear_temp", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "optimization.GradientDescent.x.requires_grad_", "optimization.GradientDescent.problem", "tensorlist.TensorList", "optimization.GradientDescent.x.detach_", "optimization.GradientDescent.x.requires_grad_", "optimization.GradientDescent.problem", "tensorlist.TensorList", "optimization.GradientDescent.item", "sum().cpu().sqrt().item", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "optimization.GradientDescent.item", "sum().sqrt().item", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "plotting.plot_graph", "plotting.plot_graph", "sum().cpu().sqrt", "sum().sqrt", "sum().cpu", "sum", "sum", "tensorlist.TensorList.view", "tensorlist.TensorList.view", "tensorlist.TensorList.view", "tensorlist.TensorList.view"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.optimization.GradientDescent.clear_temp", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.plotting.plot_graph"], ["", "def", "run", "(", "self", ",", "num_iter", ",", "dummy", "=", "None", ")", ":", "\n", "\n", "        ", "if", "num_iter", "==", "0", ":", "\n", "            ", "return", "\n", "\n", "", "lossvec", "=", "None", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "lossvec", "=", "torch", ".", "zeros", "(", "num_iter", "+", "1", ")", "\n", "grad_mags", "=", "torch", ".", "zeros", "(", "num_iter", "+", "1", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "num_iter", ")", ":", "\n", "            ", "self", ".", "x", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# Evaluate function at current estimate", "\n", "loss", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "\n", "# Compute grad", "\n", "grad", "=", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "x", ")", ")", "\n", "\n", "# Update direction", "\n", "if", "self", ".", "dir", "is", "None", ":", "\n", "                ", "self", ".", "dir", "=", "grad", "\n", "", "else", ":", "\n", "                ", "self", ".", "dir", "=", "grad", "+", "self", ".", "momentum", "*", "self", ".", "dir", "\n", "\n", "", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "x", "-=", "self", ".", "step_legnth", "*", "self", ".", "dir", "\n", "\n", "if", "self", ".", "debug", ":", "\n", "                ", "lossvec", "[", "i", "]", "=", "loss", ".", "item", "(", ")", "\n", "grad_mags", "[", "i", "]", "=", "sum", "(", "grad", ".", "view", "(", "-", "1", ")", "@", "grad", ".", "view", "(", "-", "1", ")", ")", ".", "sqrt", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "if", "self", ".", "debug", ":", "\n", "            ", "self", ".", "x", ".", "requires_grad_", "(", "True", ")", "\n", "loss", "=", "self", ".", "problem", "(", "self", ".", "x", ")", "\n", "grad", "=", "TensorList", "(", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "x", ")", ")", "\n", "lossvec", "[", "-", "1", "]", "=", "loss", ".", "item", "(", ")", "\n", "grad_mags", "[", "-", "1", "]", "=", "sum", "(", "grad", ".", "view", "(", "-", "1", ")", "@", "grad", ".", "view", "(", "-", "1", ")", ")", ".", "cpu", "(", ")", ".", "sqrt", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "losses", "=", "torch", ".", "cat", "(", "(", "self", ".", "losses", ",", "lossvec", ")", ")", "\n", "self", ".", "gradient_mags", "=", "torch", ".", "cat", "(", "(", "self", ".", "gradient_mags", ",", "grad_mags", ")", ")", "\n", "if", "self", ".", "plotting", ":", "\n", "                ", "plot_graph", "(", "self", ".", "losses", ",", "self", ".", "fig_num", "[", "0", "]", ",", "title", "=", "'Loss'", ")", "\n", "plot_graph", "(", "self", ".", "gradient_mags", ",", "self", ".", "fig_num", "[", "1", "]", ",", "title", "=", "'Gradient magnitude'", ")", "\n", "\n", "", "", "self", ".", "x", ".", "detach_", "(", ")", "\n", "self", ".", "clear_temp", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_complex": [[5, 7], ["a.dim"], "function", ["None"], ["def", "is_complex", "(", "a", ":", "torch", ".", "Tensor", ")", "->", "bool", ":", "\n", "    ", "return", "a", ".", "dim", "(", ")", ">=", "4", "and", "a", ".", "shape", "[", "-", "1", "]", "==", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real": [[9, 11], ["complex.is_complex"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_complex"], ["", "def", "is_real", "(", "a", ":", "torch", ".", "Tensor", ")", "->", "bool", ":", "\n", "    ", "return", "not", "is_complex", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult": [[13, 33], ["complex.is_real", "complex.is_real", "complex.mult_real_cplx", "complex.mult_real_cplx", "complex.mult_real_cplx", "a.dim", "b.dim", "ValueError", "b.dim", "a.dim", "ValueError"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult_real_cplx", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult_real_cplx", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult_real_cplx"], ["", "@", "tensor_operation", "\n", "def", "mult", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Pointwise complex multiplication of complex tensors.\"\"\"", "\n", "\n", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "if", "a", ".", "dim", "(", ")", ">=", "b", ".", "dim", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Incorrect dimensions.'", ")", "\n", "# a is real", "\n", "", "return", "mult_real_cplx", "(", "a", ",", "b", ")", "\n", "", "if", "is_real", "(", "b", ")", ":", "\n", "        ", "if", "b", ".", "dim", "(", ")", ">=", "a", ".", "dim", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Incorrect dimensions.'", ")", "\n", "# b is real", "\n", "", "return", "mult_real_cplx", "(", "b", ",", "a", ")", "\n", "\n", "# Both complex", "\n", "", "c", "=", "mult_real_cplx", "(", "a", "[", "...", ",", "0", "]", ",", "b", ")", "\n", "c", "[", "...", ",", "0", "]", "-=", "a", "[", "...", ",", "1", "]", "*", "b", "[", "...", ",", "1", "]", "\n", "c", "[", "...", ",", "1", "]", "+=", "a", "[", "...", ",", "1", "]", "*", "b", "[", "...", ",", "0", "]", "\n", "return", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult_conj": [[35, 55], ["complex.is_real", "complex.is_real", "complex.mult_real_cplx", "complex.mult_real_cplx", "complex.mult_real_cplx", "a.dim", "b.dim", "ValueError", "complex.conj", "b.dim", "a.dim", "ValueError"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult_real_cplx", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult_real_cplx", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult_real_cplx", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.conj"], ["", "@", "tensor_operation", "\n", "def", "mult_conj", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Pointwise complex multiplication of complex tensors, with conjugate on b: a*conj(b).\"\"\"", "\n", "\n", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "if", "a", ".", "dim", "(", ")", ">=", "b", ".", "dim", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Incorrect dimensions.'", ")", "\n", "# a is real", "\n", "", "return", "mult_real_cplx", "(", "a", ",", "conj", "(", "b", ")", ")", "\n", "", "if", "is_real", "(", "b", ")", ":", "\n", "        ", "if", "b", ".", "dim", "(", ")", ">=", "a", ".", "dim", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Incorrect dimensions.'", ")", "\n", "# b is real", "\n", "", "return", "mult_real_cplx", "(", "b", ",", "a", ")", "\n", "\n", "# Both complex", "\n", "", "c", "=", "mult_real_cplx", "(", "b", "[", "...", ",", "0", "]", ",", "a", ")", "\n", "c", "[", "...", ",", "0", "]", "+=", "a", "[", "...", ",", "1", "]", "*", "b", "[", "...", ",", "1", "]", "\n", "c", "[", "...", ",", "1", "]", "-=", "a", "[", "...", ",", "0", "]", "*", "b", "[", "...", ",", "1", "]", "\n", "return", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult_real_cplx": [[57, 65], ["complex.is_real", "ValueError", "a.unsqueeze"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real"], ["", "@", "tensor_operation", "\n", "def", "mult_real_cplx", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Pointwise complex multiplication of real tensor a with complex tensor b.\"\"\"", "\n", "\n", "if", "is_real", "(", "b", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Last dimension must have length 2.'", ")", "\n", "\n", "", "return", "a", ".", "unsqueeze", "(", "-", "1", ")", "*", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.div": [[67, 78], ["complex.is_real", "complex.div_cplx_real", "complex.div_cplx_real", "complex.mult_conj", "complex.abs_sqr", "b.dim", "a.dim", "ValueError"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.div_cplx_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.div_cplx_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult_conj", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs_sqr"], ["", "@", "tensor_operation", "\n", "def", "div", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Pointwise complex division of complex tensors.\"\"\"", "\n", "\n", "if", "is_real", "(", "b", ")", ":", "\n", "        ", "if", "b", ".", "dim", "(", ")", ">=", "a", ".", "dim", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Incorrect dimensions.'", ")", "\n", "# b is real", "\n", "", "return", "div_cplx_real", "(", "a", ",", "b", ")", "\n", "\n", "", "return", "div_cplx_real", "(", "mult_conj", "(", "a", ",", "b", ")", ",", "abs_sqr", "(", "b", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.div_cplx_real": [[80, 88], ["complex.is_real", "ValueError", "b.unsqueeze"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real"], ["", "@", "tensor_operation", "\n", "def", "div_cplx_real", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Pointwise complex division of complex tensor a with real tensor b.\"\"\"", "\n", "\n", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Last dimension must have length 2.'", ")", "\n", "\n", "", "return", "a", "/", "b", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs_sqr": [[90, 98], ["complex.is_real", "torch.sum", "ValueError"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real"], ["", "@", "tensor_operation", "\n", "def", "abs_sqr", "(", "a", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Squared absolute value.\"\"\"", "\n", "\n", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Last dimension must have length 2.'", ")", "\n", "\n", "", "return", "torch", ".", "sum", "(", "a", "*", "a", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs": [[100, 108], ["complex.is_real", "torch.sqrt", "ValueError", "complex.abs_sqr"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs_sqr"], ["", "@", "tensor_operation", "\n", "def", "abs", "(", "a", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Absolute value.\"\"\"", "\n", "\n", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Last dimension must have length 2.'", ")", "\n", "\n", "", "return", "torch", ".", "sqrt", "(", "abs_sqr", "(", "a", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.conj": [[110, 119], ["complex.is_real", "complex.complex", "ValueError"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex"], ["", "@", "tensor_operation", "\n", "def", "conj", "(", "a", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Complex conjugate.\"\"\"", "\n", "\n", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Last dimension must have length 2.'", ")", "\n", "\n", "# return a * torch.Tensor([1, -1], device=a.device)", "\n", "", "return", "complex", "(", "a", "[", "...", ",", "0", "]", ",", "-", "a", "[", "...", ",", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.real": [[121, 129], ["complex.is_real", "ValueError"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real"], ["", "@", "tensor_operation", "\n", "def", "real", "(", "a", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Real part.\"\"\"", "\n", "\n", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Last dimension must have length 2.'", ")", "\n", "\n", "", "return", "a", "[", "...", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.imag": [[131, 139], ["complex.is_real", "ValueError"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real"], ["", "@", "tensor_operation", "\n", "def", "imag", "(", "a", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Imaginary part.\"\"\"", "\n", "\n", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Last dimension must have length 2.'", ")", "\n", "\n", "", "return", "a", "[", "...", ",", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex": [[141, 151], ["torch.cat", "b.new_zeros.new_zeros", "a.new_zeros.new_zeros", "b.new_zeros.unsqueeze", "a.new_zeros.unsqueeze"], "function", ["None"], ["", "@", "tensor_operation", "\n", "def", "complex", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", "=", "None", ")", ":", "\n", "    ", "\"\"\"Create complex tensor from real and imaginary part.\"\"\"", "\n", "\n", "if", "b", "is", "None", ":", "\n", "        ", "b", "=", "a", ".", "new_zeros", "(", "a", ".", "shape", ")", "\n", "", "elif", "a", "is", "None", ":", "\n", "        ", "a", "=", "b", ".", "new_zeros", "(", "b", ".", "shape", ")", "\n", "\n", "", "return", "torch", ".", "cat", "(", "(", "a", ".", "unsqueeze", "(", "-", "1", ")", ",", "b", ".", "unsqueeze", "(", "-", "1", ")", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mtimes": [[153, 179], ["complex.is_real", "complex.is_real", "complex.mtimes_real_complex", "complex.mtimes_complex_real", "complex.complex", "complex.complex", "complex.complex", "complex.complex", "a.dim", "b.dim", "ValueError", "b.dim", "a.dim", "ValueError", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mtimes_real_complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mtimes_complex_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul"], ["", "@", "tensor_operation", "\n", "def", "mtimes", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ",", "conj_a", "=", "False", ",", "conj_b", "=", "False", ")", ":", "\n", "    ", "\"\"\"Complex matrix multiplication of complex tensors.\n    The dimensions (-3, -2) are matrix multiplied. -1 is the complex dimension.\"\"\"", "\n", "\n", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "if", "a", ".", "dim", "(", ")", ">=", "b", ".", "dim", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Incorrect dimensions.'", ")", "\n", "", "return", "mtimes_real_complex", "(", "a", ",", "b", ",", "conj_b", "=", "conj_b", ")", "\n", "", "if", "is_real", "(", "b", ")", ":", "\n", "        ", "if", "b", ".", "dim", "(", ")", ">=", "a", ".", "dim", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Incorrect dimensions.'", ")", "\n", "", "return", "mtimes_complex_real", "(", "a", ",", "b", ",", "conj_a", "=", "conj_a", ")", "\n", "\n", "", "if", "not", "conj_a", "and", "not", "conj_b", ":", "\n", "        ", "return", "complex", "(", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", "[", "...", ",", "0", "]", ")", "-", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", "[", "...", ",", "1", "]", ")", ",", "\n", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", "[", "...", ",", "1", "]", ")", "+", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", "[", "...", ",", "0", "]", ")", ")", "\n", "", "if", "conj_a", "and", "not", "conj_b", ":", "\n", "        ", "return", "complex", "(", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", "[", "...", ",", "0", "]", ")", "+", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", "[", "...", ",", "1", "]", ")", ",", "\n", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", "[", "...", ",", "1", "]", ")", "-", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", "[", "...", ",", "0", "]", ")", ")", "\n", "", "if", "not", "conj_a", "and", "conj_b", ":", "\n", "        ", "return", "complex", "(", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", "[", "...", ",", "0", "]", ")", "+", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", "[", "...", ",", "1", "]", ")", ",", "\n", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", "[", "...", ",", "0", "]", ")", "-", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", "[", "...", ",", "1", "]", ")", ")", "\n", "", "if", "conj_a", "and", "conj_b", ":", "\n", "        ", "return", "complex", "(", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", "[", "...", ",", "0", "]", ")", "-", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", "[", "...", ",", "1", "]", ")", ",", "\n", "-", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", "[", "...", ",", "1", "]", ")", "-", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", "[", "...", ",", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mtimes_real_complex": [[181, 190], ["complex.is_real", "ValueError", "complex.complex", "complex.complex", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul"], ["", "", "@", "tensor_operation", "\n", "def", "mtimes_real_complex", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ",", "conj_b", "=", "False", ")", ":", "\n", "    ", "if", "is_real", "(", "b", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Incorrect dimensions.'", ")", "\n", "\n", "", "if", "not", "conj_b", ":", "\n", "        ", "return", "complex", "(", "torch", ".", "matmul", "(", "a", ",", "b", "[", "...", ",", "0", "]", ")", ",", "torch", ".", "matmul", "(", "a", ",", "b", "[", "...", ",", "1", "]", ")", ")", "\n", "", "if", "conj_b", ":", "\n", "        ", "return", "complex", "(", "torch", ".", "matmul", "(", "a", ",", "b", "[", "...", ",", "0", "]", ")", ",", "-", "torch", ".", "matmul", "(", "a", ",", "b", "[", "...", ",", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mtimes_complex_real": [[192, 201], ["complex.is_real", "ValueError", "complex.complex", "complex.complex", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.is_real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.complex", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul"], ["", "", "@", "tensor_operation", "\n", "def", "mtimes_complex_real", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ",", "conj_a", "=", "False", ")", ":", "\n", "    ", "if", "is_real", "(", "a", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Incorrect dimensions.'", ")", "\n", "\n", "", "if", "not", "conj_a", ":", "\n", "        ", "return", "complex", "(", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", ")", ",", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", ")", ")", "\n", "", "if", "conj_a", ":", "\n", "        ", "return", "complex", "(", "torch", ".", "matmul", "(", "a", "[", "...", ",", "0", "]", ",", "b", ")", ",", "-", "torch", ".", "matmul", "(", "a", "[", "...", ",", "1", "]", ",", "b", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.exp_imag": [[203, 209], ["a.unsqueeze.unsqueeze", "torch.cat", "torch.cos", "torch.sin"], "function", ["None"], ["", "", "@", "tensor_operation", "\n", "def", "exp_imag", "(", "a", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Complex exponential with imaginary input: e^(i*a)\"\"\"", "\n", "\n", "a", "=", "a", ".", "unsqueeze", "(", "-", "1", ")", "\n", "return", "torch", ".", "cat", "(", "(", "torch", ".", "cos", "(", "a", ")", ",", "torch", ".", "sin", "(", "a", ")", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensordict.TensorDict.concat": [[8, 11], ["tensordict.TensorDict"], "methods", ["None"], ["def", "concat", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"Concatenates two dicts without copying internal data.\"\"\"", "\n", "return", "TensorDict", "(", "self", ",", "**", "other", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensordict.TensorDict.copy": [[12, 14], ["tensordict.TensorDict", "super().copy"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.copy"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "return", "TensorDict", "(", "super", "(", "TensorDict", ",", "self", ")", ".", "copy", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensordict.TensorDict.__getattr__": [[15, 22], ["hasattr", "AttributeError", "tensordict.TensorDict", "hasattr", "tensordict.TensorDict.items", "getattr"], "methods", ["None"], ["", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "torch", ".", "Tensor", ",", "name", ")", ":", "\n", "            ", "raise", "AttributeError", "(", "'\\'TensorDict\\' object has not attribute \\'{}\\''", ".", "format", "(", "name", ")", ")", "\n", "\n", "", "def", "apply_attr", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "return", "TensorDict", "(", "{", "n", ":", "getattr", "(", "e", ",", "name", ")", "(", "*", "args", ",", "**", "kwargs", ")", "if", "hasattr", "(", "e", ",", "name", ")", "else", "e", "for", "n", ",", "e", "in", "self", ".", "items", "(", ")", "}", ")", "\n", "", "return", "apply_attr", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensordict.TensorDict.attribute": [[23, 25], ["tensordict.TensorDict", "getattr", "tensordict.TensorDict.items"], "methods", ["None"], ["", "def", "attribute", "(", "self", ",", "attr", ":", "str", ",", "*", "args", ")", ":", "\n", "        ", "return", "TensorDict", "(", "{", "n", ":", "getattr", "(", "e", ",", "attr", ",", "*", "args", ")", "for", "n", ",", "e", "in", "self", ".", "items", "(", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensordict.TensorDict.apply": [[26, 28], ["tensordict.TensorDict", "fn", "tensordict.TensorDict.items"], "methods", ["None"], ["", "def", "apply", "(", "self", ",", "fn", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "TensorDict", "(", "{", "n", ":", "fn", "(", "e", ",", "*", "args", ",", "**", "kwargs", ")", "for", "n", ",", "e", "in", "self", ".", "items", "(", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensordict.TensorDict._iterable": [[29, 32], ["isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_iterable", "(", "a", ")", ":", "\n", "        ", "return", "isinstance", "(", "a", ",", "(", "TensorDict", ",", "list", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.attention.normalize": [[4, 7], ["numpy.min", "numpy.max", "numpy.min"], "function", ["None"], ["def", "normalize", "(", "score", ")", ":", "\n", "    ", "score", "=", "(", "score", "-", "np", ".", "min", "(", "score", ")", ")", "/", "(", "np", ".", "max", "(", "score", ")", "-", "np", ".", "min", "(", "score", ")", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.attention.normfun": [[8, 11], ["numpy.exp"], "function", ["None"], ["", "def", "normfun", "(", "x", ",", "mu", ",", "sigma", ")", ":", "\n", "    ", "pdf", "=", "np", ".", "exp", "(", "-", "(", "(", "x", "-", "mu", ")", "**", "2", ")", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "\n", "return", "pdf", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.attention.generate_xy_attention": [[12, 19], ["numpy.linspace", "attention.normalize", "normfun().reshape", "normfun().reshape", "numpy.dot", "numpy.abs", "numpy.abs", "attention.normfun", "attention.normfun"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.attention.normalize", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.attention.normfun", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.attention.normfun"], ["", "def", "generate_xy_attention", "(", "center", ",", "size", ")", ":", "\n", "\n", "    ", "a", "=", "np", ".", "linspace", "(", "-", "size", "//", "2", "+", "1", ",", "size", "//", "2", ",", "size", ")", "\n", "x", "=", "-", "normfun", "(", "a", ",", "center", "[", "1", "]", ",", "10", ")", ".", "reshape", "(", "(", "size", ",", "1", ")", ")", "+", "2", "\n", "y", "=", "-", "normfun", "(", "a", ",", "center", "[", "0", "]", ",", "10", ")", ".", "reshape", "(", "(", "1", ",", "size", ")", ")", "+", "2", "\n", "z", "=", "normalize", "(", "1.", "/", "np", ".", "dot", "(", "np", ".", "abs", "(", "x", ")", ",", "np", ".", "abs", "(", "y", ")", ")", ")", "\n", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.params.TrackerParams.free_memory": [[7, 11], ["dir", "hasattr", "getattr().free_memory", "a.startswith", "getattr", "getattr"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.params.TrackerParams.free_memory"], ["def", "free_memory", "(", "self", ")", ":", "\n", "        ", "for", "a", "in", "dir", "(", "self", ")", ":", "\n", "            ", "if", "not", "a", ".", "startswith", "(", "'__'", ")", "and", "hasattr", "(", "getattr", "(", "self", ",", "a", ")", ",", "'free_memory'", ")", ":", "\n", "                ", "getattr", "(", "self", ",", "a", ")", ".", "free_memory", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.params.FeatureParams.__init__": [[15, 24], ["kwargs.items", "len", "isinstance", "setattr", "setattr", "tensorlist.TensorList"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "len", "(", "args", ")", ">", "0", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "for", "name", ",", "val", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "val", ",", "list", ")", ":", "\n", "                ", "setattr", "(", "self", ",", "name", ",", "TensorList", "(", "val", ")", ")", "\n", "", "else", ":", "\n", "                ", "setattr", "(", "self", ",", "name", ",", "val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.params.Choice": [[26, 29], ["random.choice"], "function", ["None"], ["", "", "", "", "def", "Choice", "(", "*", "args", ")", ":", "\n", "    ", "\"\"\"Can be used to sample random parameter values.\"\"\"", "\n", "return", "random", ".", "choice", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.preprocessing.numpy_to_torch": [[6, 8], ["torch.from_numpy().float().permute().unsqueeze", "torch.from_numpy().float().permute().unsqueeze", "torch.from_numpy().float().permute", "torch.from_numpy().float().permute", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["def", "numpy_to_torch", "(", "a", ":", "np", ".", "ndarray", ")", ":", "\n", "    ", "return", "torch", ".", "from_numpy", "(", "a", ")", ".", "float", "(", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.preprocessing.torch_to_numpy": [[10, 12], ["a.squeeze().permute().numpy", "a.squeeze().permute", "a.squeeze"], "function", ["None"], ["", "def", "torch_to_numpy", "(", "a", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "return", "a", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.preprocessing.sample_patch": [[14, 61], ["pos.long().clone", "torch.max().long", "torch.max().long", "torch.pad", "torch.interpolate", "torch.min().item", "torch.min().item", "int", "int", "sample_sz.float", "output_sz.long().tolist", "pos.long", "max", "torch.max", "torch.max", "torch.min", "torch.min", "int", "sz.round", "torch.Tensor", "torch.Tensor", "tl[].item", "tl[].item", "output_sz.long", "os[].item", "os[].item", "br[].item", "br[].item", "sample_sz.float", "output_sz.float"], "function", ["None"], ["", "def", "sample_patch", "(", "im", ":", "torch", ".", "Tensor", ",", "pos", ":", "torch", ".", "Tensor", ",", "sample_sz", ":", "torch", ".", "Tensor", ",", "output_sz", ":", "torch", ".", "Tensor", "=", "None", ")", ":", "\n", "    ", "\"\"\"Sample an image patch.\n\n    args:\n        im: Image\n        pos: center position of crop\n        sample_sz: size to crop\n        output_sz: size to resize to\n    \"\"\"", "\n", "\n", "# copy and convert", "\n", "posl", "=", "pos", ".", "long", "(", ")", ".", "clone", "(", ")", "\n", "\n", "# Compute pre-downsampling factor", "\n", "if", "output_sz", "is", "not", "None", ":", "\n", "        ", "resize_factor", "=", "torch", ".", "min", "(", "sample_sz", ".", "float", "(", ")", "/", "output_sz", ".", "float", "(", ")", ")", ".", "item", "(", ")", "\n", "df", "=", "int", "(", "max", "(", "int", "(", "resize_factor", "-", "0.1", ")", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "df", "=", "int", "(", "1", ")", "\n", "\n", "", "sz", "=", "sample_sz", ".", "float", "(", ")", "/", "df", "# new size", "\n", "\n", "# Do downsampling", "\n", "if", "df", ">", "1", ":", "\n", "        ", "os", "=", "posl", "%", "df", "# offset", "\n", "posl", "=", "(", "posl", "-", "os", ")", "/", "df", "# new position", "\n", "im2", "=", "im", "[", "...", ",", "os", "[", "0", "]", ".", "item", "(", ")", ":", ":", "df", ",", "os", "[", "1", "]", ".", "item", "(", ")", ":", ":", "df", "]", "# downsample", "\n", "", "else", ":", "\n", "        ", "im2", "=", "im", "\n", "\n", "# compute size to crop", "\n", "", "szl", "=", "torch", ".", "max", "(", "sz", ".", "round", "(", ")", ",", "torch", ".", "Tensor", "(", "[", "2", "]", ")", ")", ".", "long", "(", ")", "\n", "\n", "# Extract top and bottom coordinates", "\n", "tl", "=", "posl", "-", "(", "szl", "-", "1", ")", "/", "2", "\n", "br", "=", "posl", "+", "szl", "/", "2", "\n", "\n", "# Get image patch", "\n", "im_patch", "=", "F", ".", "pad", "(", "im2", ",", "(", "-", "tl", "[", "1", "]", ".", "item", "(", ")", ",", "br", "[", "1", "]", ".", "item", "(", ")", "-", "im2", ".", "shape", "[", "3", "]", "+", "1", ",", "-", "tl", "[", "0", "]", ".", "item", "(", ")", ",", "br", "[", "0", "]", ".", "item", "(", ")", "-", "im2", ".", "shape", "[", "2", "]", "+", "1", ")", ",", "'replicate'", ")", "\n", "\n", "if", "output_sz", "is", "None", "or", "(", "im_patch", ".", "shape", "[", "-", "2", "]", "==", "output_sz", "[", "0", "]", "and", "im_patch", ".", "shape", "[", "-", "1", "]", "==", "output_sz", "[", "1", "]", ")", ":", "\n", "        ", "return", "im_patch", "\n", "\n", "# Resample", "\n", "", "im_patch", "=", "F", ".", "interpolate", "(", "im_patch", ",", "output_sz", ".", "long", "(", ")", ".", "tolist", "(", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "return", "im_patch", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__init__": [[8, 10], ["list", "list.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["def", "__init__", "(", "self", ",", "list_of_tensors", "=", "list", "(", ")", ")", ":", "\n", "        ", "super", "(", "TensorList", ",", "self", ")", ".", "__init__", "(", "list_of_tensors", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__getitem__": [[11, 18], ["isinstance", "list.__getitem__", "isinstance", "tensorlist.TensorList", "tensorlist.TensorList", "list.__getitem__", "list.__getitem__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__getitem__", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__getitem__", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "isinstance", "(", "item", ",", "int", ")", ":", "\n", "            ", "return", "super", "(", "TensorList", ",", "self", ")", ".", "__getitem__", "(", "item", ")", "\n", "", "elif", "isinstance", "(", "item", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "super", "(", "TensorList", ",", "self", ")", ".", "__getitem__", "(", "i", ")", "for", "i", "in", "item", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "TensorList", "(", "super", "(", "TensorList", ",", "self", ")", ".", "__getitem__", "(", "item", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__add__": [[19, 23], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "", "def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e1", "+", "e2", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "e", "+", "other", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__radd__": [[24, 28], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__radd__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e2", "+", "e1", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "other", "+", "e", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__iadd__": [[29, 37], ["tensorlist.TensorList._iterable", "enumerate", "range", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__iadd__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "for", "i", ",", "e2", "in", "enumerate", "(", "other", ")", ":", "\n", "                ", "self", "[", "i", "]", "+=", "e2", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", ":", "\n", "                ", "self", "[", "i", "]", "+=", "other", "\n", "", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__sub__": [[38, 42], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__sub__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e1", "-", "e2", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "e", "-", "other", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__rsub__": [[43, 47], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__rsub__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e2", "-", "e1", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "other", "-", "e", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__isub__": [[48, 56], ["tensorlist.TensorList._iterable", "enumerate", "range", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__isub__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "for", "i", ",", "e2", "in", "enumerate", "(", "other", ")", ":", "\n", "                ", "self", "[", "i", "]", "-=", "e2", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", ":", "\n", "                ", "self", "[", "i", "]", "-=", "other", "\n", "", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__mul__": [[57, 61], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__mul__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e1", "*", "e2", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "e", "*", "other", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__rmul__": [[62, 66], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__rmul__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e2", "*", "e1", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "other", "*", "e", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__imul__": [[67, 75], ["tensorlist.TensorList._iterable", "enumerate", "range", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__imul__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "for", "i", ",", "e2", "in", "enumerate", "(", "other", ")", ":", "\n", "                ", "self", "[", "i", "]", "*=", "e2", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", ":", "\n", "                ", "self", "[", "i", "]", "*=", "other", "\n", "", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__truediv__": [[76, 80], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__truediv__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e1", "/", "e2", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "e", "/", "other", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__rtruediv__": [[81, 85], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__rtruediv__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e2", "/", "e1", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "other", "/", "e", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__itruediv__": [[86, 94], ["tensorlist.TensorList._iterable", "enumerate", "range", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__itruediv__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "for", "i", ",", "e2", "in", "enumerate", "(", "other", ")", ":", "\n", "                ", "self", "[", "i", "]", "/=", "e2", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", ":", "\n", "                ", "self", "[", "i", "]", "/=", "other", "\n", "", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__matmul__": [[95, 99], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__matmul__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e1", "@", "e2", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "e", "@", "other", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__rmatmul__": [[100, 104], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__rmatmul__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e2", "@", "e1", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "other", "@", "e", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__imatmul__": [[105, 113], ["tensorlist.TensorList._iterable", "enumerate", "range", "len"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__imatmul__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "for", "i", ",", "e2", "in", "enumerate", "(", "other", ")", ":", "\n", "                ", "self", "[", "i", "]", "@=", "e2", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", ":", "\n", "                ", "self", "[", "i", "]", "@=", "other", "\n", "", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__mod__": [[114, 118], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__mod__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e1", "%", "e2", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "e", "%", "other", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__rmod__": [[119, 123], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__rmod__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e2", "%", "e1", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "other", "%", "e", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__pos__": [[124, 126], ["tensorlist.TensorList"], "methods", ["None"], ["", "def", "__pos__", "(", "self", ")", ":", "\n", "        ", "return", "TensorList", "(", "[", "+", "e", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__neg__": [[127, 129], ["tensorlist.TensorList"], "methods", ["None"], ["", "def", "__neg__", "(", "self", ")", ":", "\n", "        ", "return", "TensorList", "(", "[", "-", "e", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__le__": [[130, 134], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__le__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e1", "<=", "e2", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "e", "<=", "other", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__ge__": [[135, 139], ["tensorlist.TensorList._iterable", "tensorlist.TensorList", "tensorlist.TensorList", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable"], ["", "def", "__ge__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "TensorList", ".", "_iterable", "(", "other", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "e1", ">=", "e2", "for", "e1", ",", "e2", "in", "zip", "(", "self", ",", "other", ")", "]", ")", "\n", "", "return", "TensorList", "(", "[", "e", ">=", "other", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.concat": [[140, 142], ["tensorlist.TensorList", "list.__add__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__add__"], ["", "def", "concat", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "TensorList", "(", "super", "(", "TensorList", ",", "self", ")", ".", "__add__", "(", "other", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.copy": [[143, 145], ["tensorlist.TensorList", "super().copy"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.copy"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "return", "TensorList", "(", "super", "(", "TensorList", ",", "self", ")", ".", "copy", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.unroll": [[146, 157], ["tensorlist.TensorList", "any", "isinstance", "TensorList.extend", "TensorList.append", "isinstance", "t.unroll"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.unroll"], ["", "def", "unroll", "(", "self", ")", ":", "\n", "        ", "if", "not", "any", "(", "isinstance", "(", "t", ",", "TensorList", ")", "for", "t", "in", "self", ")", ":", "\n", "            ", "return", "self", "\n", "\n", "", "new_list", "=", "TensorList", "(", ")", "\n", "for", "t", "in", "self", ":", "\n", "            ", "if", "isinstance", "(", "t", ",", "TensorList", ")", ":", "\n", "                ", "new_list", ".", "extend", "(", "t", ".", "unroll", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "new_list", ".", "append", "(", "t", ")", "\n", "", "", "return", "new_list", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.attribute": [[158, 160], ["tensorlist.TensorList", "getattr"], "methods", ["None"], ["", "def", "attribute", "(", "self", ",", "attr", ":", "str", ",", "*", "args", ")", ":", "\n", "        ", "return", "TensorList", "(", "[", "getattr", "(", "e", ",", "attr", ",", "*", "args", ")", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.apply": [[161, 163], ["tensorlist.TensorList", "fn"], "methods", ["None"], ["", "def", "apply", "(", "self", ",", "fn", ")", ":", "\n", "        ", "return", "TensorList", "(", "[", "fn", "(", "e", ")", "for", "e", "in", "self", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList.__getattr__": [[164, 172], ["hasattr", "AttributeError", "tensorlist.TensorList", "getattr"], "methods", ["None"], ["", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "torch", ".", "Tensor", ",", "name", ")", ":", "\n", "            ", "raise", "AttributeError", "(", "'\\'TensorList\\' object has not attribute \\'{}\\''", ".", "format", "(", "name", ")", ")", "\n", "\n", "", "def", "apply_attr", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "return", "TensorList", "(", "[", "getattr", "(", "e", ",", "name", ")", "(", "*", "args", ",", "**", "kwargs", ")", "for", "e", "in", "self", "]", ")", "\n", "\n", "", "return", "apply_attr", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.TensorList._iterable": [[173, 176], ["isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_iterable", "(", "a", ")", ":", "\n", "        ", "return", "isinstance", "(", "a", ",", "(", "TensorList", ",", "list", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.tensorlist.tensor_operation": [[179, 204], ["functools.wraps", "isinstance", "op", "len", "ValueError", "len", "tensorlist.tensor_operation.islist"], "function", ["None"], ["", "", "def", "tensor_operation", "(", "op", ")", ":", "\n", "    ", "def", "islist", "(", "a", ")", ":", "\n", "        ", "return", "isinstance", "(", "a", ",", "TensorList", ")", "\n", "\n", "", "@", "functools", ".", "wraps", "(", "op", ")", "\n", "def", "oplist", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "len", "(", "args", ")", "==", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'Must be at least one argument without keyword (i.e. operand).'", ")", "\n", "\n", "", "if", "len", "(", "args", ")", "==", "1", ":", "\n", "            ", "if", "islist", "(", "args", "[", "0", "]", ")", ":", "\n", "                ", "return", "TensorList", "(", "[", "op", "(", "a", ",", "**", "kwargs", ")", "for", "a", "in", "args", "[", "0", "]", "]", ")", "\n", "", "", "else", ":", "\n", "# Multiple operands, assume max two", "\n", "            ", "if", "islist", "(", "args", "[", "0", "]", ")", "and", "islist", "(", "args", "[", "1", "]", ")", ":", "\n", "                ", "return", "TensorList", "(", "[", "op", "(", "a", ",", "b", ",", "*", "args", "[", "2", ":", "]", ",", "**", "kwargs", ")", "for", "a", ",", "b", "in", "zip", "(", "*", "args", "[", ":", "2", "]", ")", "]", ")", "\n", "", "if", "islist", "(", "args", "[", "0", "]", ")", ":", "\n", "                ", "return", "TensorList", "(", "[", "op", "(", "a", ",", "*", "args", "[", "1", ":", "]", ",", "**", "kwargs", ")", "for", "a", "in", "args", "[", "0", "]", "]", ")", "\n", "", "if", "islist", "(", "args", "[", "1", "]", ")", ":", "\n", "                ", "return", "TensorList", "(", "[", "op", "(", "args", "[", "0", "]", ",", "b", ",", "*", "args", "[", "2", ":", "]", ",", "**", "kwargs", ")", "for", "b", "in", "args", "[", "1", "]", "]", ")", "\n", "\n", "# None of the operands are lists", "\n", "", "", "return", "op", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "return", "oplist", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d": [[6, 33], ["torch.conv2d", "ValueError", "ValueError", "slice", "slice", "slice", "slice"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d"], ["@", "tensor_operation", "\n", "def", "conv2d", "(", "input", ":", "torch", ".", "Tensor", ",", "weight", ":", "torch", ".", "Tensor", ",", "bias", ":", "torch", ".", "Tensor", "=", "None", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "mode", "=", "None", ")", ":", "\n", "    ", "\"\"\"Standard conv2d. Returns the input if weight=None.\"\"\"", "\n", "\n", "if", "weight", "is", "None", ":", "\n", "        ", "return", "input", "\n", "\n", "", "ind", "=", "None", "\n", "if", "mode", "is", "not", "None", ":", "\n", "        ", "if", "padding", "!=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'Cannot input both padding and mode.'", ")", "\n", "", "if", "mode", "==", "'same'", ":", "\n", "            ", "padding", "=", "(", "weight", ".", "shape", "[", "2", "]", "//", "2", ",", "weight", ".", "shape", "[", "3", "]", "//", "2", ")", "\n", "if", "weight", ".", "shape", "[", "2", "]", "%", "2", "==", "0", "or", "weight", ".", "shape", "[", "3", "]", "%", "2", "==", "0", ":", "\n", "                ", "ind", "=", "(", "slice", "(", "-", "1", ")", "if", "weight", ".", "shape", "[", "2", "]", "%", "2", "==", "0", "else", "slice", "(", "None", ")", ",", "\n", "slice", "(", "-", "1", ")", "if", "weight", ".", "shape", "[", "3", "]", "%", "2", "==", "0", "else", "slice", "(", "None", ")", ")", "\n", "", "", "elif", "mode", "==", "'valid'", ":", "\n", "            ", "padding", "=", "(", "0", ",", "0", ")", "\n", "", "elif", "mode", "==", "'full'", ":", "\n", "            ", "padding", "=", "(", "weight", ".", "shape", "[", "2", "]", "-", "1", ",", "weight", ".", "shape", "[", "3", "]", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown mode for padding.'", ")", "\n", "\n", "", "", "out", "=", "F", ".", "conv2d", "(", "input", ",", "weight", ",", "bias", "=", "bias", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ")", "\n", "if", "ind", "is", "None", ":", "\n", "        ", "return", "out", "\n", "", "return", "out", "[", ":", ",", ":", ",", "ind", "[", "0", "]", ",", "ind", "[", "1", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv1x1": [[35, 44], ["torch.matmul().view", "torch.matmul().view", "torch.matmul", "torch.matmul", "weight.view", "input.view"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul"], ["", "@", "tensor_operation", "\n", "def", "conv1x1", "(", "input", ":", "torch", ".", "Tensor", ",", "weight", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Do a convolution with a 1x1 kernel weights. Implemented with matmul, which can be faster than using conv.\"\"\"", "\n", "\n", "if", "weight", "is", "None", ":", "\n", "        ", "return", "input", "\n", "\n", "", "return", "torch", ".", "matmul", "(", "weight", ".", "view", "(", "weight", ".", "shape", "[", "0", "]", ",", "weight", ".", "shape", "[", "1", "]", ")", ",", "\n", "input", ".", "view", "(", "input", ".", "shape", "[", "0", "]", ",", "input", ".", "shape", "[", "1", "]", ",", "-", "1", ")", ")", ".", "view", "(", "input", ".", "shape", "[", "0", "]", ",", "weight", ".", "shape", "[", "0", "]", ",", "input", ".", "shape", "[", "2", "]", ",", "input", ".", "shape", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.spatial_attention": [[45, 48], ["torch.sigmoid", "torch.sigmoid", "torch.mean", "torch.mean"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.sigmoid", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.sigmoid"], ["", "@", "tensor_operation", "\n", "def", "spatial_attention", "(", "input", ":", "torch", ".", "Tensor", ",", "dim", ":", "int", "=", "0", ",", "keepdim", ":", "bool", "=", "True", ")", ":", "\n", "    ", "return", "torch", ".", "sigmoid", "(", "torch", ".", "mean", "(", "input", ",", "dim", ",", "keepdim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.adaptive_avg_pool2d": [[49, 52], ["torch.adaptive_avg_pool2d"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.adaptive_avg_pool2d"], ["", "@", "tensor_operation", "\n", "def", "adaptive_avg_pool2d", "(", "input", ":", "torch", ".", "Tensor", ",", "shape", ")", ":", "\n", "    ", "return", "F", ".", "adaptive_avg_pool2d", "(", "input", ",", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.sigmoid": [[53, 56], ["torch.sigmoid", "torch.sigmoid"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.sigmoid", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.sigmoid"], ["", "@", "tensor_operation", "\n", "def", "sigmoid", "(", "input", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "return", "torch", ".", "sigmoid", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax": [[57, 61], ["input.size", "torch.softmax().reshape", "torch.softmax", "input.reshape"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.softmax"], ["", "@", "tensor_operation", "\n", "def", "softmax", "(", "input", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "x_shape", "=", "input", ".", "size", "(", ")", "\n", "return", "F", ".", "softmax", "(", "input", ".", "reshape", "(", "x_shape", "[", "0", "]", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ".", "reshape", "(", "x_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.matmul": [[62, 65], ["b.expand_as"], "function", ["None"], ["", "@", "tensor_operation", "\n", "def", "matmul", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "return", "a", "*", "b", ".", "expand_as", "(", "a", ")", "", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.__init__": [[12, 15], ["None"], "methods", ["None"], ["Center", ",", "center2corner", ",", "Corner", "\n", "\n", "\n", "class", "Augmentation", ":", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.__call__": [[16, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "shift", ",", "scale", ",", "blur", ",", "flip", ",", "color", ")", ":", "\n", "        ", "self", ".", "shift", "=", "shift", "\n", "self", ".", "scale", "=", "scale", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.crop_to_output": [[19, 37], ["isinstance", "torch.pad", "torch.pad", "math.floor", "math.ceil", "math.floor", "math.ceil"], "methods", ["None"], ["self", ".", "blur", "=", "blur", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "color", "=", "color", "\n", "self", ".", "rgbVar", "=", "np", ".", "array", "(", "\n", "[", "[", "-", "0.55919361", ",", "0.98062831", ",", "-", "0.41940627", "]", ",", "\n", "[", "1.72091413", ",", "0.19879334", ",", "-", "1.82968581", "]", ",", "\n", "[", "4.64467907", ",", "4.73710203", ",", "4.88324118", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "random", "(", ")", ":", "\n", "        ", "return", "np", ".", "random", ".", "random", "(", ")", "*", "2", "-", "1.0", "\n", "\n", "", "def", "_crop_roi", "(", "self", ",", "image", ",", "bbox", ",", "out_sz", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", ":", "\n", "        ", "bbox", "=", "[", "float", "(", "x", ")", "for", "x", "in", "bbox", "]", "\n", "a", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "\n", "b", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "\n", "c", "=", "-", "a", "*", "bbox", "[", "0", "]", "\n", "d", "=", "-", "b", "*", "bbox", "[", "1", "]", "\n", "mapping", "=", "np", ".", "array", "(", "[", "[", "a", ",", "0", ",", "c", "]", ",", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Identity.__call__": [[40, 42], ["augmentation.Identity.crop_to_output"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.crop_to_output"], ["borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "borderValue", "=", "padding", ")", "\n", "return", "crop", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.FlipHorizontal.__call__": [[45, 50], ["isinstance", "augmentation.FlipHorizontal.crop_to_output", "numpy.fliplr", "image.flip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.crop_to_output"], ["        ", "def", "rand_kernel", "(", ")", ":", "\n", "            ", "sizes", "=", "np", ".", "arange", "(", "5", ",", "46", ",", "2", ")", "\n", "size", "=", "np", ".", "random", ".", "choice", "(", "sizes", ")", "\n", "kernel", "=", "np", ".", "zeros", "(", "(", "size", ",", "size", ")", ")", "\n", "c", "=", "int", "(", "size", "/", "2", ")", "\n", "wx", "=", "np", ".", "random", ".", "random", "(", ")", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.FlipVertical.__call__": [[53, 58], ["isinstance", "augmentation.FlipVertical.crop_to_output", "numpy.flipud", "image.flip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.crop_to_output"], ["return", "kernel", "\n", "", "kernel", "=", "rand_kernel", "(", ")", "\n", "image", "=", "cv2", ".", "filter2D", "(", "image", ",", "-", "1", ",", "kernel", ")", "\n", "return", "image", "\n", "\n", "", "def", "_color_aug", "(", "self", ",", "image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Translation.__init__": [[61, 64], ["augmentation.Transform.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["offset", "=", "offset", ".", "reshape", "(", "3", ")", "\n", "image", "=", "image", "-", "offset", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Translation.__call__": [[65, 70], ["isinstance", "augmentation.Translation.crop_to_output"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.crop_to_output"], ["", "def", "_gray_aug", "(", "self", ",", "image", ")", ":", "\n", "        ", "grayed", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "grayed", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "return", "image", "\n", "\n", "", "def", "_shift_scale_aug", "(", "self", ",", "image", ",", "bbox", ",", "crop_bbox", ",", "size", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Scale.__init__": [[73, 76], ["augmentation.Transform.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["# adjust crop bounding box", "\n", "crop_bbox_center", "=", "corner2center", "(", "crop_bbox", ")", "\n", "if", "self", ".", "scale", ":", "\n", "            ", "scale_x", "=", "(", "1.0", "+", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "scale", ")", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Scale.__call__": [[77, 95], ["isinstance", "round", "round", "torch.interpolate", "torch.interpolate", "augmentation.Scale.crop_to_output"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.crop_to_output"], ["scale_y", "=", "(", "1.0", "+", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "scale", ")", "\n", "h", ",", "w", "=", "crop_bbox_center", ".", "h", ",", "crop_bbox_center", ".", "w", "\n", "scale_x", "=", "min", "(", "scale_x", ",", "float", "(", "im_w", ")", "/", "w", ")", "\n", "scale_y", "=", "min", "(", "scale_y", ",", "float", "(", "im_h", ")", "/", "h", ")", "\n", "crop_bbox_center", "=", "Center", "(", "crop_bbox_center", ".", "x", ",", "\n", "crop_bbox_center", ".", "y", ",", "\n", "crop_bbox_center", ".", "w", "*", "scale_x", ",", "\n", "crop_bbox_center", ".", "h", "*", "scale_y", ")", "\n", "\n", "", "crop_bbox", "=", "center2corner", "(", "crop_bbox_center", ")", "\n", "if", "self", ".", "shift", ":", "\n", "            ", "sx", "=", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "shift", "\n", "sy", "=", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "shift", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "crop_bbox", "\n", "\n", "sx", "=", "max", "(", "-", "x1", ",", "min", "(", "im_w", "-", "1", "-", "x2", ",", "sx", ")", ")", "\n", "sy", "=", "max", "(", "-", "y1", ",", "min", "(", "im_h", "-", "1", "-", "y2", ",", "sy", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Affine.__init__": [[99, 102], ["augmentation.Transform.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["", "x1", ",", "y1", "=", "crop_bbox", ".", "x1", ",", "crop_bbox", ".", "y1", "\n", "bbox", "=", "Corner", "(", "bbox", ".", "x1", "-", "x1", ",", "bbox", ".", "y1", "-", "y1", ",", "\n", "bbox", ".", "x2", "-", "x1", ",", "bbox", ".", "y2", "-", "y1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Affine.__call__": [[103, 108], ["isinstance", "augmentation.Affine.crop_to_output", "cv2.warpAffine", "preprocessing.numpy_to_torch", "augmentation.Affine.", "preprocessing.torch_to_numpy"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.crop_to_output", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.preprocessing.numpy_to_torch", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.preprocessing.torch_to_numpy"], ["if", "self", ".", "scale", ":", "\n", "            ", "bbox", "=", "Corner", "(", "bbox", ".", "x1", "/", "scale_x", ",", "bbox", ".", "y1", "/", "scale_y", ",", "\n", "bbox", ".", "x2", "/", "scale_x", ",", "bbox", ".", "y2", "/", "scale_y", ")", "\n", "\n", "", "image", "=", "self", ".", "_crop_roi", "(", "image", ",", "crop_bbox", ",", "size", ")", "\n", "return", "image", ",", "bbox", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Rotate.__init__": [[112, 115], ["augmentation.Transform.__init__"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["width", "=", "image", ".", "shape", "[", "1", "]", "\n", "bbox", "=", "Corner", "(", "width", "-", "1", "-", "bbox", ".", "x2", ",", "bbox", ".", "y1", ",", "\n", "width", "-", "1", "-", "bbox", ".", "x1", ",", "bbox", ".", "y2", ")", "\n", "return", "image", ",", "bbox", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Rotate.__call__": [[116, 125], ["isinstance", "augmentation.Rotate.crop_to_output", "numpy.array", "numpy.concatenate", "cv2.warpAffine", "preprocessing.numpy_to_torch", "augmentation.Rotate.", "numpy.expand_dims", "preprocessing.torch_to_numpy", "numpy.array", "math.cos", "math.sin", "math.cos", "math.sin"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.crop_to_output", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.preprocessing.numpy_to_torch", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.preprocessing.torch_to_numpy"], ["\n", "", "def", "__call__", "(", "self", ",", "image", ",", "bbox", ",", "size", ",", "gray", "=", "False", ")", ":", "\n", "        ", "shape", "=", "image", ".", "shape", "\n", "crop_bbox", "=", "center2corner", "(", "Center", "(", "shape", "[", "0", "]", "//", "2", ",", "shape", "[", "1", "]", "//", "2", ",", "\n", "size", "-", "1", ",", "size", "-", "1", ")", ")", "\n", "# gray augmentation", "\n", "if", "gray", ":", "\n", "            ", "image", "=", "self", ".", "_gray_aug", "(", "image", ")", "\n", "\n", "# shift scale augmentation", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Blur.__init__": [[129, 139], ["augmentation.Transform.__init__", "isinstance", "math.ceil", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "augmentation.Blur.filter[].view", "augmentation.Blur.filter[].sum", "augmentation.Blur.filter[].view", "augmentation.Blur.filter[].sum", "zip"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__"], ["if", "self", ".", "color", ">", "np", ".", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", "=", "self", ".", "_color_aug", "(", "image", ")", "\n", "\n", "# blur augmentation", "\n", "", "if", "self", ".", "blur", ">", "np", ".", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", "=", "self", ".", "_blur_aug", "(", "image", ")", "\n", "\n", "# flip augmentation", "\n", "", "if", "self", ".", "flip", "and", "self", ".", "flip", ">", "np", ".", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", ",", "bbox", "=", "self", ".", "_flip_aug", "(", "image", ",", "bbox", ")", "\n", "", "return", "image", ",", "bbox", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Blur.__call__": [[140, 147], ["isinstance", "torch.conv2d", "torch.conv2d", "augmentation.Blur.crop_to_output", "image.view", "torch.conv2d().view", "torch.conv2d().view", "torch.conv2d", "torch.conv2d"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.augmentation.Transform.crop_to_output", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d"], ["", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.hann1d": [[6, 12], ["torch.cat", "torch.cat", "torch.cos", "torch.cos", "w[].flip", "torch.cos", "torch.cos", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["def", "hann1d", "(", "sz", ":", "int", ",", "centered", "=", "True", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "\"\"\"1D cosine window.\"\"\"", "\n", "if", "centered", ":", "\n", "        ", "return", "0.5", "*", "(", "1", "-", "torch", ".", "cos", "(", "(", "2", "*", "math", ".", "pi", "/", "(", "sz", "+", "2", ")", ")", "*", "torch", ".", "arange", "(", "1", ",", "sz", "+", "1", ")", ".", "float", "(", ")", ")", ")", "\n", "", "w", "=", "0.5", "*", "(", "1", "+", "torch", ".", "cos", "(", "(", "2", "*", "math", ".", "pi", "/", "(", "sz", "+", "2", ")", ")", "*", "torch", ".", "arange", "(", "0", ",", "sz", "//", "2", "+", "1", ")", ".", "float", "(", ")", ")", ")", "\n", "return", "torch", ".", "cat", "(", "[", "w", ",", "w", "[", "1", ":", "sz", "-", "sz", "//", "2", "]", ".", "flip", "(", "(", "0", ",", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.hann2d": [[14, 17], ["hann1d().reshape", "hann1d().reshape", "dcf.hann1d", "dcf.hann1d", "sz[].item", "sz[].item"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.hann1d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.hann1d"], ["", "def", "hann2d", "(", "sz", ":", "torch", ".", "Tensor", ",", "centered", "=", "True", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "\"\"\"2D cosine window.\"\"\"", "\n", "return", "hann1d", "(", "sz", "[", "0", "]", ".", "item", "(", ")", ",", "centered", ")", ".", "reshape", "(", "1", ",", "1", ",", "-", "1", ",", "1", ")", "*", "hann1d", "(", "sz", "[", "1", "]", ".", "item", "(", ")", ",", "centered", ")", ".", "reshape", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.hann2d_clipped": [[19, 36], ["torch.pad", "hann1d().reshape", "hann1d().reshape", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pad[].item", "pad[].item", "pad[].item", "pad[].item", "dcf.hann1d", "dcf.hann1d", "effective_sz[].item", "effective_sz[].item"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.hann1d", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.hann1d"], ["", "def", "hann2d_clipped", "(", "sz", ":", "torch", ".", "Tensor", ",", "effective_sz", ":", "torch", ".", "Tensor", ",", "centered", "=", "True", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "\"\"\"1D clipped cosine window.\"\"\"", "\n", "\n", "# Ensure that the difference is even", "\n", "effective_sz", "+=", "(", "effective_sz", "-", "sz", ")", "%", "2", "\n", "effective_window", "=", "hann1d", "(", "effective_sz", "[", "0", "]", ".", "item", "(", ")", ",", "True", ")", ".", "reshape", "(", "1", ",", "1", ",", "-", "1", ",", "1", ")", "*", "hann1d", "(", "effective_sz", "[", "1", "]", ".", "item", "(", ")", ",", "True", ")", ".", "reshape", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "\n", "pad", "=", "(", "sz", "-", "effective_sz", ")", "/", "2", "\n", "\n", "window", "=", "F", ".", "pad", "(", "effective_window", ",", "(", "pad", "[", "1", "]", ".", "item", "(", ")", ",", "pad", "[", "1", "]", ".", "item", "(", ")", ",", "pad", "[", "0", "]", ".", "item", "(", ")", ",", "pad", "[", "0", "]", ".", "item", "(", ")", ")", ",", "'replicate'", ")", "\n", "\n", "if", "centered", ":", "\n", "        ", "return", "window", "\n", "", "else", ":", "\n", "        ", "mid", "=", "(", "sz", "/", "2", ")", ".", "int", "(", ")", "\n", "window_shift_lr", "=", "torch", ".", "cat", "(", "(", "window", "[", ":", ",", ":", ",", ":", ",", "mid", "[", "1", "]", ":", "]", ",", "window", "[", ":", ",", ":", ",", ":", ",", ":", "mid", "[", "1", "]", "]", ")", ",", "3", ")", "\n", "return", "torch", ".", "cat", "(", "(", "window_shift_lr", "[", ":", ",", ":", ",", "mid", "[", "0", "]", ":", ",", ":", "]", ",", "window_shift_lr", "[", ":", ",", ":", ",", ":", "mid", "[", "0", "]", ",", ":", "]", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.gauss_fourier": [[38, 44], ["torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.exp", "torch.exp", "int", "int", "int", "math.sqrt", "torch.arange.float"], "function", ["None"], ["", "", "def", "gauss_fourier", "(", "sz", ":", "int", ",", "sigma", ":", "float", ",", "half", ":", "bool", "=", "False", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "half", ":", "\n", "        ", "k", "=", "torch", ".", "arange", "(", "0", ",", "int", "(", "sz", "/", "2", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "k", "=", "torch", ".", "arange", "(", "-", "int", "(", "(", "sz", "-", "1", ")", "/", "2", ")", ",", "int", "(", "sz", "/", "2", "+", "1", ")", ")", "\n", "", "return", "(", "math", ".", "sqrt", "(", "2", "*", "math", ".", "pi", ")", "*", "sigma", "/", "sz", ")", "*", "torch", ".", "exp", "(", "-", "2", "*", "(", "math", ".", "pi", "*", "sigma", "*", "k", ".", "float", "(", ")", "/", "sz", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.gauss_spatial": [[46, 49], ["torch.arange", "torch.arange", "torch.exp", "torch.exp"], "function", ["None"], ["", "def", "gauss_spatial", "(", "sz", ",", "sigma", ",", "center", "=", "0", ",", "end_pad", "=", "0", ")", ":", "\n", "    ", "k", "=", "torch", ".", "arange", "(", "-", "(", "sz", "-", "1", ")", "/", "2", ",", "(", "sz", "+", "1", ")", "/", "2", "+", "end_pad", ")", "\n", "return", "torch", ".", "exp", "(", "-", "1.0", "/", "(", "2", "*", "sigma", "**", "2", ")", "*", "(", "k", "-", "center", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.label_function": [[51, 53], ["gauss_fourier().reshape", "gauss_fourier().reshape", "dcf.gauss_fourier", "dcf.gauss_fourier", "sz[].item", "sigma[].item", "sz[].item", "sigma[].item"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.gauss_fourier", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.gauss_fourier"], ["", "def", "label_function", "(", "sz", ":", "torch", ".", "Tensor", ",", "sigma", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "return", "gauss_fourier", "(", "sz", "[", "0", "]", ".", "item", "(", ")", ",", "sigma", "[", "0", "]", ".", "item", "(", ")", ")", ".", "reshape", "(", "1", ",", "1", ",", "-", "1", ",", "1", ")", "*", "gauss_fourier", "(", "sz", "[", "1", "]", ".", "item", "(", ")", ",", "sigma", "[", "1", "]", ".", "item", "(", ")", ",", "True", ")", ".", "reshape", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.label_function_spatial": [[54, 58], ["torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "gauss_spatial().reshape", "gauss_spatial().reshape", "scale.sqrt", "scale.sqrt", "dcf.gauss_spatial", "dcf.gauss_spatial", "sz[].item", "sigma[].item", "end_pad[].item", "sz[].item", "sigma[].item", "end_pad[].item"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.gauss_spatial", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.gauss_spatial"], ["", "def", "label_function_spatial", "(", "sz", ":", "torch", ".", "Tensor", ",", "sigma", ":", "torch", ".", "Tensor", ",", "center", ":", "torch", ".", "Tensor", "=", "torch", ".", "zeros", "(", "2", ")", ",", "scale", ":", "torch", ".", "Tensor", "=", "torch", ".", "ones", "(", "1", ")", ",", "end_pad", ":", "torch", ".", "Tensor", "=", "torch", ".", "zeros", "(", "2", ")", ")", ":", "\n", "    ", "\"\"\"The origin is in the middle of the image.\"\"\"", "\n", "return", "gauss_spatial", "(", "sz", "[", "0", "]", ".", "item", "(", ")", ",", "sigma", "[", "0", "]", ".", "item", "(", ")", ",", "center", "[", "0", "]", ",", "end_pad", "[", "0", "]", ".", "item", "(", ")", ")", ".", "reshape", "(", "1", ",", "1", ",", "-", "1", ",", "1", ")", "**", "(", "1", "/", "scale", ".", "sqrt", "(", ")", ")", "*", "gauss_spatial", "(", "sz", "[", "1", "]", ".", "item", "(", ")", ",", "sigma", "[", "1", "]", ".", "item", "(", ")", ",", "center", "[", "1", "]", ",", "end_pad", "[", "1", "]", ".", "item", "(", ")", ")", ".", "reshape", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "**", "(", "scale", ".", "sqrt", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.cubic_spline_fourier": [[60, 70], ["torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cos"], "function", ["None"], ["", "def", "cubic_spline_fourier", "(", "f", ",", "a", ")", ":", "\n", "    ", "\"\"\"The continuous Fourier transform of a cubic spline kernel.\"\"\"", "\n", "\n", "bf", "=", "(", "6", "*", "(", "1", "-", "torch", ".", "cos", "(", "2", "*", "math", ".", "pi", "*", "f", ")", ")", "+", "3", "*", "a", "*", "(", "1", "-", "torch", ".", "cos", "(", "4", "*", "math", ".", "pi", "*", "f", ")", ")", "\n", "-", "(", "6", "+", "8", "*", "a", ")", "*", "math", ".", "pi", "*", "f", "*", "torch", ".", "sin", "(", "2", "*", "math", ".", "pi", "*", "f", ")", "-", "2", "*", "a", "*", "math", ".", "pi", "*", "f", "*", "torch", ".", "sin", "(", "4", "*", "math", ".", "pi", "*", "f", ")", ")", "/", "(", "4", "*", "math", ".", "pi", "**", "4", "*", "f", "**", "4", ")", "\n", "\n", "bf", "[", "f", "==", "0", "]", "=", "1", "\n", "\n", "return", "bf", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.get_interp_fourier": [[72, 93], ["fourier.get_frequency_coord", "complex.mult", "complex.mult", "complex.mult.to", "complex.mult.to", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "ValueError", "complex.exp_imag", "complex.exp_imag", "dcf.cubic_spline_fourier", "dcf.cubic_spline_fourier"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.get_frequency_coord", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.exp_imag", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.exp_imag", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.cubic_spline_fourier", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.cubic_spline_fourier"], ["", "def", "get_interp_fourier", "(", "sz", ":", "torch", ".", "Tensor", ",", "method", "=", "'ideal'", ",", "bicubic_param", "=", "0.5", ",", "centering", "=", "True", ",", "windowing", "=", "False", ",", "device", "=", "'cpu'", ")", ":", "\n", "\n", "    ", "ky", ",", "kx", "=", "fourier", ".", "get_frequency_coord", "(", "sz", ")", "\n", "\n", "if", "method", "==", "'ideal'", ":", "\n", "        ", "interp_y", "=", "torch", ".", "ones", "(", "ky", ".", "shape", ")", "/", "sz", "[", "0", "]", "\n", "interp_x", "=", "torch", ".", "ones", "(", "kx", ".", "shape", ")", "/", "sz", "[", "1", "]", "\n", "", "elif", "method", "==", "'bicubic'", ":", "\n", "        ", "interp_y", "=", "cubic_spline_fourier", "(", "ky", "/", "sz", "[", "0", "]", ",", "bicubic_param", ")", "/", "sz", "[", "0", "]", "\n", "interp_x", "=", "cubic_spline_fourier", "(", "kx", "/", "sz", "[", "1", "]", ",", "bicubic_param", ")", "/", "sz", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Unknown method.'", ")", "\n", "\n", "", "if", "centering", ":", "\n", "        ", "interp_y", "=", "complex", ".", "mult", "(", "interp_y", ",", "complex", ".", "exp_imag", "(", "(", "-", "math", ".", "pi", "/", "sz", "[", "0", "]", ")", "*", "ky", ")", ")", "\n", "interp_x", "=", "complex", ".", "mult", "(", "interp_x", ",", "complex", ".", "exp_imag", "(", "(", "-", "math", ".", "pi", "/", "sz", "[", "1", "]", ")", "*", "kx", ")", ")", "\n", "\n", "", "if", "windowing", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "interp_y", ".", "to", "(", "device", ")", ",", "interp_x", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.interpolate_dft": [[95, 102], ["isinstance", "isinstance", "ValueError", "complex.mult", "complex.mult", "complex.mult"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.mult"], ["", "def", "interpolate_dft", "(", "a", ":", "torch", ".", "Tensor", ",", "interp_fs", ")", "->", "torch", ".", "Tensor", ":", "\n", "\n", "    ", "if", "isinstance", "(", "interp_fs", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "return", "complex", ".", "mult", "(", "a", ",", "interp_fs", ")", "\n", "", "if", "isinstance", "(", "interp_fs", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "        ", "return", "complex", ".", "mult", "(", "complex", ".", "mult", "(", "a", ",", "interp_fs", "[", "0", "]", ")", ",", "interp_fs", "[", "1", "]", ")", "\n", "", "raise", "ValueError", "(", "'\"interp_fs\" must be tensor or tuple of tensors.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.get_reg_filter": [[104, 152], ["getattr", "getattr", "complex.abs", "torch.irfft", "torch.irfft", "complex.real", "torch.cat.nonzero().max", "int", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.rfft", "torch.rfft", "sz.prod", "fourier.rfftshift2", "max_inds[].item", "max_inds[].item", "max_inds[].item", "torch.cat", "torch.cat", "torch.ones", "torch.ones", "target_sz.prod().sqrt", "torch.ones", "torch.ones", "sz.long().tolist", "sz.prod", "torch.irfft.min", "torch.cat.nonzero", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "reg_window_dft[].flip", "target_sz.prod", "int", "int", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "sz.long", "int", "int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "complex.abs.max", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.real", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.fourier.rfftshift2", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs", "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.complex.abs"], ["", "def", "get_reg_filter", "(", "sz", ":", "torch", ".", "Tensor", ",", "target_sz", ":", "torch", ".", "Tensor", ",", "params", ")", ":", "\n", "    ", "\"\"\"Computes regularization filter in CCOT and ECO.\"\"\"", "\n", "\n", "if", "not", "params", ".", "use_reg_window", ":", "\n", "        ", "return", "params", ".", "reg_window_min", "*", "torch", ".", "ones", "(", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "", "if", "getattr", "(", "params", ",", "'reg_window_square'", ",", "False", ")", ":", "\n", "        ", "target_sz", "=", "target_sz", ".", "prod", "(", ")", ".", "sqrt", "(", ")", "*", "torch", ".", "ones", "(", "2", ")", "\n", "\n", "# Normalization factor", "\n", "", "reg_scale", "=", "0.5", "*", "target_sz", "\n", "\n", "# Construct grid", "\n", "if", "getattr", "(", "params", ",", "'reg_window_centered'", ",", "True", ")", ":", "\n", "        ", "wrg", "=", "torch", ".", "arange", "(", "-", "int", "(", "(", "sz", "[", "0", "]", "-", "1", ")", "/", "2", ")", ",", "int", "(", "sz", "[", "0", "]", "/", "2", "+", "1", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "view", "(", "1", ",", "1", ",", "-", "1", ",", "1", ")", "\n", "wcg", "=", "torch", ".", "arange", "(", "-", "int", "(", "(", "sz", "[", "1", "]", "-", "1", ")", "/", "2", ")", ",", "int", "(", "sz", "[", "1", "]", "/", "2", "+", "1", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "wrg", "=", "torch", ".", "cat", "(", "[", "torch", ".", "arange", "(", "0", ",", "int", "(", "sz", "[", "0", "]", "/", "2", "+", "1", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ",", "\n", "torch", ".", "arange", "(", "-", "int", "(", "(", "sz", "[", "0", "]", "-", "1", ")", "/", "2", ")", ",", "0", ",", "dtype", "=", "torch", ".", "float32", ")", "]", ")", ".", "view", "(", "1", ",", "1", ",", "-", "1", ",", "1", ")", "\n", "wcg", "=", "torch", ".", "cat", "(", "[", "torch", ".", "arange", "(", "0", ",", "int", "(", "sz", "[", "1", "]", "/", "2", "+", "1", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ",", "\n", "torch", ".", "arange", "(", "-", "int", "(", "(", "sz", "[", "1", "]", "-", "1", ")", "/", "2", ")", ",", "0", ",", "dtype", "=", "torch", ".", "float32", ")", "]", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "\n", "# Construct regularization window", "\n", "", "reg_window", "=", "(", "params", ".", "reg_window_edge", "-", "params", ".", "reg_window_min", ")", "*", "(", "torch", ".", "abs", "(", "wrg", "/", "reg_scale", "[", "0", "]", ")", "**", "params", ".", "reg_window_power", "+", "\n", "torch", ".", "abs", "(", "wcg", "/", "reg_scale", "[", "1", "]", ")", "**", "params", ".", "reg_window_power", ")", "+", "params", ".", "reg_window_min", "\n", "\n", "# Compute DFT and enforce sparsity", "\n", "reg_window_dft", "=", "torch", ".", "rfft", "(", "reg_window", ",", "2", ")", "/", "sz", ".", "prod", "(", ")", "\n", "reg_window_dft_abs", "=", "complex", ".", "abs", "(", "reg_window_dft", ")", "\n", "reg_window_dft", "[", "reg_window_dft_abs", "<", "params", ".", "reg_sparsity_threshold", "*", "reg_window_dft_abs", ".", "max", "(", ")", ",", ":", "]", "=", "0", "\n", "\n", "# Do the inverse transform to correct for the window minimum", "\n", "reg_window_sparse", "=", "torch", ".", "irfft", "(", "reg_window_dft", ",", "2", ",", "signal_sizes", "=", "sz", ".", "long", "(", ")", ".", "tolist", "(", ")", ")", "\n", "reg_window_dft", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "+=", "params", ".", "reg_window_min", "-", "sz", ".", "prod", "(", ")", "*", "reg_window_sparse", ".", "min", "(", ")", "\n", "reg_window_dft", "=", "complex", ".", "real", "(", "fourier", ".", "rfftshift2", "(", "reg_window_dft", ")", ")", "\n", "\n", "# Remove zeros", "\n", "max_inds", ",", "_", "=", "reg_window_dft", ".", "nonzero", "(", ")", ".", "max", "(", "dim", "=", "0", ")", "\n", "mid_ind", "=", "int", "(", "(", "reg_window_dft", ".", "shape", "[", "2", "]", "-", "1", ")", "/", "2", ")", "\n", "top", "=", "max_inds", "[", "-", "2", "]", ".", "item", "(", ")", "+", "1", "\n", "bottom", "=", "2", "*", "mid_ind", "-", "max_inds", "[", "-", "2", "]", ".", "item", "(", ")", "\n", "right", "=", "max_inds", "[", "-", "1", "]", ".", "item", "(", ")", "+", "1", "\n", "reg_window_dft", "=", "reg_window_dft", "[", "...", ",", "bottom", ":", "top", ",", ":", "right", "]", "\n", "if", "reg_window_dft", ".", "shape", "[", "-", "1", "]", ">", "1", ":", "\n", "        ", "reg_window_dft", "=", "torch", ".", "cat", "(", "[", "reg_window_dft", "[", "...", ",", "1", ":", "]", ".", "flip", "(", "(", "2", ",", "3", ")", ")", ",", "reg_window_dft", "]", ",", "-", "1", ")", "\n", "\n", "", "return", "reg_window_dft", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.libs.dcf.max2d": [[154, 163], ["torch.max", "torch.max", "torch.max", "torch.max", "argmax_row.reshape.reshape", "torch.cat", "torch.cat", "argmax_row.reshape.view", "argmax_col.numel", "argmax_row.reshape.unsqueeze", "argmax_col.unsqueeze", "torch.arange", "torch.arange", "argmax_col.view", "argmax_col.numel"], "function", ["None"], ["", "def", "max2d", "(", "a", ":", "torch", ".", "Tensor", ")", "->", "(", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"Computes maximum and argmax in the last two dimensions.\"\"\"", "\n", "\n", "max_val_row", ",", "argmax_row", "=", "torch", ".", "max", "(", "a", ",", "dim", "=", "-", "2", ")", "\n", "max_val", ",", "argmax_col", "=", "torch", ".", "max", "(", "max_val_row", ",", "dim", "=", "-", "1", ")", "\n", "argmax_row", "=", "argmax_row", ".", "view", "(", "argmax_col", ".", "numel", "(", ")", ",", "-", "1", ")", "[", "torch", ".", "arange", "(", "argmax_col", ".", "numel", "(", ")", ")", ",", "argmax_col", ".", "view", "(", "-", "1", ")", "]", "\n", "argmax_row", "=", "argmax_row", ".", "reshape", "(", "argmax_col", ".", "shape", ")", "\n", "argmax", "=", "torch", ".", "cat", "(", "(", "argmax_row", ".", "unsqueeze", "(", "-", "1", ")", ",", "argmax_col", ".", "unsqueeze", "(", "-", "1", ")", ")", ",", "-", "1", ")", "\n", "return", "max_val", ",", "argmax", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.core.xcorr.xcorr_slow": [[12, 26], ["range", "torch.cat", "torch.cat", "x.size", "px.view.view", "pk.view.view", "torch.conv2d", "torch.cat.append", "px.view.size", "px.view.size", "px.view.size", "px.view.size", "pk.view.size", "pk.view.size"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d"], ["def", "xcorr_slow", "(", "x", ",", "kernel", ")", ":", "\n", "    ", "\"\"\"for loop to calculate cross correlation, slow version\n    \"\"\"", "\n", "batch", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch", ")", ":", "\n", "        ", "px", "=", "x", "[", "i", "]", "\n", "pk", "=", "kernel", "[", "i", "]", "\n", "px", "=", "px", ".", "view", "(", "1", ",", "px", ".", "size", "(", ")", "[", "0", "]", ",", "px", ".", "size", "(", ")", "[", "1", "]", ",", "px", ".", "size", "(", ")", "[", "2", "]", ")", "\n", "pk", "=", "pk", ".", "view", "(", "-", "1", ",", "px", ".", "size", "(", ")", "[", "1", "]", ",", "pk", ".", "size", "(", ")", "[", "1", "]", ",", "pk", ".", "size", "(", ")", "[", "2", "]", ")", "\n", "po", "=", "F", ".", "conv2d", "(", "px", ",", "pk", ")", "\n", "out", ".", "append", "(", "po", ")", "\n", "", "out", "=", "torch", ".", "cat", "(", "out", ",", "0", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.core.xcorr.xcorr_fast": [[28, 37], ["kernel.view", "x.view", "torch.conv2d", "po.view.view", "kernel.size", "x.size", "kernel.size", "kernel.size", "x.size", "x.size", "po.view.size", "po.view.size"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d"], ["", "def", "xcorr_fast", "(", "x", ",", "kernel", ")", ":", "\n", "    ", "\"\"\"group conv2d to calculate cross correlation, fast version\n    \"\"\"", "\n", "batch", "=", "kernel", ".", "size", "(", ")", "[", "0", "]", "\n", "pk", "=", "kernel", ".", "view", "(", "-", "1", ",", "x", ".", "size", "(", ")", "[", "1", "]", ",", "kernel", ".", "size", "(", ")", "[", "2", "]", ",", "kernel", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "px", "=", "x", ".", "view", "(", "1", ",", "-", "1", ",", "x", ".", "size", "(", ")", "[", "2", "]", ",", "x", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "po", "=", "F", ".", "conv2d", "(", "px", ",", "pk", ",", "groups", "=", "batch", ")", "\n", "po", "=", "po", ".", "view", "(", "batch", ",", "-", "1", ",", "po", ".", "size", "(", ")", "[", "2", "]", ",", "po", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "return", "po", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.core.xcorr.xcorr_depthwise": [[39, 49], ["kernel.view.size", "kernel.view.size", "x.view.view", "kernel.view.view", "torch.conv2d", "out.view.view", "x.view.size", "x.view.size", "kernel.view.size", "kernel.view.size", "out.view.size", "out.view.size"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.libs.operation.conv2d"], ["", "def", "xcorr_depthwise", "(", "x", ",", "kernel", ")", ":", "\n", "    ", "\"\"\"depthwise cross correlation\n    \"\"\"", "\n", "batch", "=", "kernel", ".", "size", "(", "0", ")", "\n", "channel", "=", "kernel", ".", "size", "(", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "1", ",", "batch", "*", "channel", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "kernel", "=", "kernel", ".", "view", "(", "batch", "*", "channel", ",", "1", ",", "kernel", ".", "size", "(", "2", ")", ",", "kernel", ".", "size", "(", "3", ")", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "x", ",", "kernel", ",", "groups", "=", "batch", "*", "channel", ")", "\n", "out", "=", "out", ".", "view", "(", "batch", ",", "channel", ",", "out", ".", "size", "(", "2", ")", ",", "out", ".", "size", "(", "3", ")", ")", "\n", "return", "out", "\n", "", ""]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.demo.get_frames": [[28, 56], ["cv2.VideoCapture", "range", "cv2.VideoCapture.read", "cv2.VideoCapture.read", "video_name.endswith", "video_name.endswith", "cv2.VideoCapture", "glob.glob", "sorted", "cv2.VideoCapture.read", "os.path.join", "cv2.imread", "int", "[].split", "x.split"], "function", ["None"], ["def", "get_frames", "(", "video_name", ")", ":", "\n", "    ", "if", "not", "video_name", ":", "\n", "        ", "cap", "=", "cv2", ".", "VideoCapture", "(", "0", ")", "\n", "# warmup", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "            ", "cap", ".", "read", "(", ")", "\n", "", "while", "True", ":", "\n", "            ", "ret", ",", "frame", "=", "cap", ".", "read", "(", ")", "\n", "if", "ret", ":", "\n", "                ", "yield", "frame", "\n", "", "else", ":", "\n", "                ", "break", "\n", "", "", "", "elif", "video_name", ".", "endswith", "(", "'avi'", ")", "or", "video_name", ".", "endswith", "(", "'mp4'", ")", ":", "\n", "        ", "cap", "=", "cv2", ".", "VideoCapture", "(", "args", ".", "video_name", ")", "\n", "while", "True", ":", "\n", "            ", "ret", ",", "frame", "=", "cap", ".", "read", "(", ")", "\n", "if", "ret", ":", "\n", "                ", "yield", "frame", "\n", "", "else", ":", "\n", "                ", "break", "\n", "", "", "", "else", ":", "\n", "        ", "images", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "video_name", ",", "'*.jp*'", ")", ")", "\n", "images", "=", "sorted", "(", "images", ",", "\n", "key", "=", "lambda", "x", ":", "int", "(", "x", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", ")", "\n", "for", "img", "in", "images", ":", "\n", "            ", "frame", "=", "cv2", ".", "imread", "(", "img", ")", "\n", "yield", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.demo.main": [[58, 106], ["pysot.core.config.cfg.merge_from_file", "torch.cuda.is_available", "torch.device", "pysot.models.model_builder.ModelBuilder", "pysot.models.model_builder.ModelBuilder.load_state_dict", "pysot.models.model_builder.ModelBuilder.eval().to", "pysot.tracker.tracker_builder.build_tracker", "cv2.namedWindow", "demo.get_frames", "torch.load", "pysot.models.model_builder.ModelBuilder.eval", "[].split", "pysot.tracker.tracker_builder.build_tracker.init", "pysot.tracker.tracker_builder.build_tracker.track", "cv2.imshow", "cv2.waitKey", "cv2.selectROI", "numpy.array().astype", "cv2.polylines", "np.stack().transpose.astype", "numpy.stack().transpose", "cv2.addWeighted", "list", "cv2.rectangle", "storage.cpu", "exit", "map", "args.video_name.split", "numpy.array", "np.array().astype.reshape", "numpy.stack"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.tracker_builder.build_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.demo.get_frames", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.eval", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker.init", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.track"], ["", "", "", "def", "main", "(", ")", ":", "\n", "# load config", "\n", "    ", "cfg", ".", "merge_from_file", "(", "args", ".", "config", ")", "\n", "cfg", ".", "CUDA", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "cfg", ".", "CUDA", "else", "'cpu'", ")", "\n", "\n", "# create model", "\n", "model", "=", "ModelBuilder", "(", ")", "\n", "\n", "# load model", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "snapshot", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cpu", "(", ")", ")", ")", "\n", "model", ".", "eval", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "# build tracker", "\n", "tracker", "=", "build_tracker", "(", "model", ")", "\n", "\n", "first_frame", "=", "True", "\n", "if", "args", ".", "video_name", ":", "\n", "        ", "video_name", "=", "args", ".", "video_name", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "video_name", "=", "'webcam'", "\n", "", "cv2", ".", "namedWindow", "(", "video_name", ",", "cv2", ".", "WND_PROP_FULLSCREEN", ")", "\n", "for", "frame", "in", "get_frames", "(", "args", ".", "video_name", ")", ":", "\n", "        ", "if", "first_frame", ":", "\n", "            ", "try", ":", "\n", "                ", "init_rect", "=", "cv2", ".", "selectROI", "(", "video_name", ",", "frame", ",", "False", ",", "False", ")", "\n", "", "except", ":", "\n", "                ", "exit", "(", ")", "\n", "", "tracker", ".", "init", "(", "frame", ",", "init_rect", ")", "\n", "first_frame", "=", "False", "\n", "", "else", ":", "\n", "            ", "outputs", "=", "tracker", ".", "track", "(", "frame", ")", "\n", "if", "'polygon'", "in", "outputs", ":", "\n", "                ", "polygon", "=", "np", ".", "array", "(", "outputs", "[", "'polygon'", "]", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "cv2", ".", "polylines", "(", "frame", ",", "[", "polygon", ".", "reshape", "(", "(", "-", "1", ",", "1", ",", "2", ")", ")", "]", ",", "\n", "True", ",", "(", "0", ",", "255", ",", "0", ")", ",", "3", ")", "\n", "mask", "=", "(", "(", "outputs", "[", "'mask'", "]", ">", "cfg", ".", "TRACK", ".", "MASK_THERSHOLD", ")", "*", "255", ")", "\n", "mask", "=", "mask", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "stack", "(", "[", "mask", ",", "mask", "*", "255", ",", "mask", "]", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "frame", "=", "cv2", ".", "addWeighted", "(", "frame", ",", "0.77", ",", "mask", ",", "0.23", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "bbox", "=", "list", "(", "map", "(", "int", ",", "outputs", "[", "'bbox'", "]", ")", ")", "\n", "cv2", ".", "rectangle", "(", "frame", ",", "(", "bbox", "[", "0", "]", ",", "bbox", "[", "1", "]", ")", ",", "\n", "(", "bbox", "[", "0", "]", "+", "bbox", "[", "2", "]", ",", "bbox", "[", "1", "]", "+", "bbox", "[", "3", "]", ")", ",", "\n", "(", "0", ",", "255", ",", "0", ")", ",", "3", ")", "\n", "", "cv2", ".", "imshow", "(", "video_name", ",", "frame", ")", "\n", "cv2", ".", "waitKey", "(", "40", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.eval.main": [[34, 204], ["os.path.join", "glob.glob", "min", "os.path.realpath", "os.path.join", "os.path.join", "len", "len", "os.path.join", "toolkit.datasets.OTBDataset", "toolkit.datasets.VisDroneDataset.set_tracker", "toolkit.evaluation.OPEBenchmark", "toolkit.evaluation.OPEBenchmark.show_result", "x.split", "os.path.dirname", "multiprocessing.Pool", "tqdm.tqdm", "multiprocessing.Pool", "tqdm.tqdm", "toolkit.datasets.VisDroneDataset.attr.items", "toolkit.datasets.LaSOTDataset", "toolkit.datasets.VisDroneDataset.set_tracker", "toolkit.evaluation.OPEBenchmark", "toolkit.evaluation.OPEBenchmark.show_result", "pool.imap_unordered", "success_ret.update", "pool.imap_unordered", "precision_ret.update", "toolkit.visualization.draw_success_precision", "multiprocessing.Pool", "tqdm.tqdm", "multiprocessing.Pool", "tqdm.tqdm", "multiprocessing.Pool", "tqdm.tqdm", "toolkit.visualization.draw_success_precision", "toolkit.datasets.UAVDataset", "toolkit.datasets.VisDroneDataset.set_tracker", "toolkit.evaluation.OPEBenchmark", "toolkit.evaluation.OPEBenchmark.show_result", "len", "len", "pool.imap_unordered", "success_ret.update", "pool.imap_unordered", "precision_ret.update", "pool.imap_unordered", "norm_precision_ret.update", "multiprocessing.Pool", "tqdm.tqdm", "multiprocessing.Pool", "tqdm.tqdm", "toolkit.datasets.VisDroneDataset.attr.items", "toolkit.datasets.NFSDataset", "toolkit.datasets.VisDroneDataset.set_tracker", "toolkit.evaluation.OPEBenchmark", "toolkit.evaluation.OPEBenchmark.show_result", "len", "len", "len", "pool.imap_unordered", "success_ret.update", "pool.imap_unordered", "precision_ret.update", "toolkit.visualization.draw_success_precision", "multiprocessing.Pool", "tqdm.tqdm", "multiprocessing.Pool", "tqdm.tqdm", "toolkit.datasets.VisDroneDataset.attr.items", "toolkit.datasets.VOTDataset", "toolkit.datasets.VisDroneDataset.set_tracker", "toolkit.evaluation.AccuracyRobustnessBenchmark", "toolkit.evaluation.AccuracyRobustnessBenchmark.show_result", "len", "len", "pool.imap_unordered", "success_ret.update", "pool.imap_unordered", "precision_ret.update", "toolkit.visualization.draw_success_precision", "multiprocessing.Pool", "tqdm.tqdm", "toolkit.evaluation.EAOBenchmark", "toolkit.evaluation.EAOBenchmark", "multiprocessing.Pool", "tqdm.tqdm", "toolkit.visualization.draw_eao", "toolkit.datasets.VOTLTDataset", "toolkit.datasets.VisDroneDataset.set_tracker", "toolkit.evaluation.F1Benchmark", "toolkit.evaluation.OPEBenchmark.show_result", "len", "len", "pool.imap_unordered", "ar_result.update", "pool.imap_unordered", "eao_result.update", "multiprocessing.Pool", "tqdm.tqdm", "toolkit.visualization.draw_f1", "print", "len", "len", "pool.imap_unordered", "f1_result.update", "toolkit.datasets.VisDroneDataset", "toolkit.datasets.VisDroneDataset.set_tracker", "toolkit.evaluation.OPEBenchmark", "toolkit.evaluation.OPEBenchmark.show_result", "len", "multiprocessing.Pool", "tqdm.tqdm", "multiprocessing.Pool", "tqdm.tqdm", "pool.imap_unordered", "success_ret.update", "pool.imap_unordered", "precision_ret.update", "len", "len"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.set_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.show_result", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.set_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.show_result", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.visualization.draw_success_precision.draw_success_precision", "home.repos.pwc.inspect_result.shallowtoil_DROL.visualization.draw_success_precision.draw_success_precision", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.set_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.show_result", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.set_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.show_result", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.visualization.draw_success_precision.draw_success_precision", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.set_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.show_result", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.visualization.draw_success_precision.draw_success_precision", "home.repos.pwc.inspect_result.shallowtoil_DROL.visualization.draw_eao.draw_eao", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.set_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.show_result", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.visualization.draw_f1.draw_f1", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.dataset.Dataset.set_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.show_result", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.update"], ["def", "main", "(", ")", ":", "\n", "    ", "tracker_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "tracker_path", ",", "args", ".", "dataset", ")", "\n", "trackers", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "args", ".", "tracker_path", ",", "\n", "args", ".", "dataset", ",", "\n", "args", ".", "tracker_prefix", "+", "'*'", ")", ")", "\n", "trackers", "=", "[", "x", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "x", "in", "trackers", "]", "\n", "\n", "assert", "len", "(", "trackers", ")", ">", "0", "\n", "args", ".", "num", "=", "min", "(", "args", ".", "num", ",", "len", "(", "trackers", ")", ")", "\n", "\n", "root", "=", "os", ".", "path", ".", "realpath", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "\n", "'../testing_dataset'", ")", ")", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "args", ".", "dataset", ")", "\n", "if", "'OTB'", "in", "args", ".", "dataset", ":", "\n", "        ", "dataset", "=", "OTBDataset", "(", "args", ".", "dataset", ",", "root", ")", "\n", "dataset", ".", "set_tracker", "(", "tracker_dir", ",", "trackers", ")", "\n", "benchmark", "=", "OPEBenchmark", "(", "dataset", ")", "\n", "success_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_success", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval success'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "success_ret", ".", "update", "(", "ret", ")", "\n", "", "", "precision_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_precision", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval precision'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "precision_ret", ".", "update", "(", "ret", ")", "\n", "", "", "benchmark", ".", "show_result", "(", "success_ret", ",", "precision_ret", ",", "\n", "show_video_level", "=", "args", ".", "show_video_level", ")", "\n", "if", "args", ".", "vis", ":", "\n", "            ", "for", "attr", ",", "videos", "in", "dataset", ".", "attr", ".", "items", "(", ")", ":", "\n", "                ", "draw_success_precision", "(", "success_ret", ",", "\n", "name", "=", "dataset", ".", "name", ",", "\n", "videos", "=", "videos", ",", "\n", "attr", "=", "attr", ",", "\n", "precision_ret", "=", "precision_ret", ",", "\n", "bold_name", "=", "'Ours'", ")", "\n", "", "", "", "elif", "'LaSOT'", "==", "args", ".", "dataset", ":", "\n", "        ", "dataset", "=", "LaSOTDataset", "(", "args", ".", "dataset", ",", "root", ")", "\n", "dataset", ".", "set_tracker", "(", "tracker_dir", ",", "trackers", ")", "\n", "benchmark", "=", "OPEBenchmark", "(", "dataset", ")", "\n", "success_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_success", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval success'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "success_ret", ".", "update", "(", "ret", ")", "\n", "", "", "precision_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_precision", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval precision'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "precision_ret", ".", "update", "(", "ret", ")", "\n", "", "", "norm_precision_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_norm_precision", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval norm precision'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "norm_precision_ret", ".", "update", "(", "ret", ")", "\n", "", "", "benchmark", ".", "show_result", "(", "success_ret", ",", "precision_ret", ",", "norm_precision_ret", ",", "\n", "show_video_level", "=", "args", ".", "show_video_level", ")", "\n", "if", "args", ".", "vis", ":", "\n", "            ", "draw_success_precision", "(", "success_ret", ",", "\n", "name", "=", "dataset", ".", "name", ",", "\n", "videos", "=", "dataset", ".", "attr", "[", "'ALL'", "]", ",", "\n", "attr", "=", "'ALL'", ",", "\n", "precision_ret", "=", "precision_ret", ",", "\n", "norm_precision_ret", "=", "norm_precision_ret", ",", "\n", "bold_name", "=", "'Ours'", ")", "\n", "", "", "elif", "'UAV'", "in", "args", ".", "dataset", ":", "\n", "        ", "dataset", "=", "UAVDataset", "(", "args", ".", "dataset", ",", "root", ")", "\n", "dataset", ".", "set_tracker", "(", "tracker_dir", ",", "trackers", ")", "\n", "benchmark", "=", "OPEBenchmark", "(", "dataset", ")", "\n", "success_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_success", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval success'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "success_ret", ".", "update", "(", "ret", ")", "\n", "", "", "precision_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_precision", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval precision'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "precision_ret", ".", "update", "(", "ret", ")", "\n", "", "", "benchmark", ".", "show_result", "(", "success_ret", ",", "precision_ret", ",", "\n", "show_video_level", "=", "args", ".", "show_video_level", ")", "\n", "if", "args", ".", "vis", ":", "\n", "            ", "for", "attr", ",", "videos", "in", "dataset", ".", "attr", ".", "items", "(", ")", ":", "\n", "                ", "draw_success_precision", "(", "success_ret", ",", "\n", "name", "=", "dataset", ".", "name", ",", "\n", "videos", "=", "videos", ",", "\n", "attr", "=", "attr", ",", "\n", "precision_ret", "=", "precision_ret", ",", "\n", "bold_name", "=", "'Ours'", ")", "\n", "", "", "", "elif", "'NFS'", "in", "args", ".", "dataset", ":", "\n", "        ", "dataset", "=", "NFSDataset", "(", "args", ".", "dataset", ",", "root", ")", "\n", "dataset", ".", "set_tracker", "(", "tracker_dir", ",", "trackers", ")", "\n", "benchmark", "=", "OPEBenchmark", "(", "dataset", ")", "\n", "success_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_success", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval success'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "success_ret", ".", "update", "(", "ret", ")", "\n", "", "", "precision_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_precision", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval precision'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "precision_ret", ".", "update", "(", "ret", ")", "\n", "", "", "benchmark", ".", "show_result", "(", "success_ret", ",", "precision_ret", ",", "\n", "show_video_level", "=", "args", ".", "show_video_level", ")", "\n", "if", "args", ".", "vis", ":", "\n", "            ", "for", "attr", ",", "videos", "in", "dataset", ".", "attr", ".", "items", "(", ")", ":", "\n", "                ", "draw_success_precision", "(", "success_ret", ",", "\n", "name", "=", "dataset", ".", "name", ",", "\n", "video", "=", "videos", ",", "\n", "attr", "=", "attr", ",", "\n", "precision_ret", "=", "precision_ret", ",", "\n", "bold_name", "=", "'Ours'", ")", "\n", "", "", "", "elif", "args", ".", "dataset", "in", "[", "'VOT2016'", ",", "'VOT2017'", ",", "'VOT2018'", ",", "'VOT2019'", "]", ":", "\n", "        ", "dataset", "=", "VOTDataset", "(", "args", ".", "dataset", ",", "root", ")", "\n", "dataset", ".", "set_tracker", "(", "tracker_dir", ",", "trackers", ")", "\n", "ar_benchmark", "=", "AccuracyRobustnessBenchmark", "(", "dataset", ")", "\n", "ar_result", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "ar_benchmark", ".", "eval", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval ar'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "ar_result", ".", "update", "(", "ret", ")", "\n", "\n", "", "", "if", "args", ".", "vis", ":", "\n", "            ", "benchmark", "=", "EAOBenchmark", "(", "dataset", ",", "tags", "=", "[", "\"all\"", ",", "\"camera_motion\"", ",", "\"illum_change\"", ",", "\n", "\"motion_change\"", ",", "\"size_change\"", ",", "\"occlusion\"", ",", "\"empty\"", "]", ")", "\n", "", "else", ":", "\n", "            ", "benchmark", "=", "EAOBenchmark", "(", "dataset", ")", "\n", "", "eao_result", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval eao'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "eao_result", ".", "update", "(", "ret", ")", "\n", "", "", "ar_benchmark", ".", "show_result", "(", "ar_result", ",", "eao_result", ",", "\n", "show_video_level", "=", "args", ".", "show_video_level", ")", "\n", "if", "args", ".", "vis", ":", "\n", "            ", "draw_eao", "(", "eao_result", ")", "\n", "", "", "elif", "'VOT2018-LT'", "==", "args", ".", "dataset", ":", "\n", "        ", "dataset", "=", "VOTLTDataset", "(", "args", ".", "dataset", ",", "root", ")", "\n", "dataset", ".", "set_tracker", "(", "tracker_dir", ",", "trackers", ")", "\n", "benchmark", "=", "F1Benchmark", "(", "dataset", ")", "\n", "f1_result", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval f1'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "f1_result", ".", "update", "(", "ret", ")", "\n", "", "", "benchmark", ".", "show_result", "(", "f1_result", ",", "\n", "show_video_level", "=", "args", ".", "show_video_level", ")", "\n", "if", "args", ".", "vis", ":", "\n", "            ", "draw_f1", "(", "f1_result", ",", "\n", "bold_name", "=", "'Ours'", ")", "\n", "", "", "elif", "'TrackingNet'", "in", "args", ".", "dataset", ":", "\n", "        ", "print", "(", "'Please evaluate on the server!'", ")", "\n", "", "elif", "'VisDrone'", "in", "args", ".", "dataset", ":", "\n", "        ", "dataset", "=", "VisDroneDataset", "(", "args", ".", "dataset", ",", "root", ")", "\n", "dataset", ".", "set_tracker", "(", "tracker_dir", ",", "trackers", ")", "\n", "benchmark", "=", "OPEBenchmark", "(", "dataset", ")", "\n", "success_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_success", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval success'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "success_ret", ".", "update", "(", "ret", ")", "\n", "", "", "precision_ret", "=", "{", "}", "\n", "with", "Pool", "(", "processes", "=", "args", ".", "num", ")", "as", "pool", ":", "\n", "            ", "for", "ret", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "benchmark", ".", "eval_precision", ",", "\n", "trackers", ")", ",", "desc", "=", "'eval precision'", ",", "total", "=", "len", "(", "trackers", ")", ",", "ncols", "=", "100", ")", ":", "\n", "                ", "precision_ret", ".", "update", "(", "ret", ")", "\n", "", "", "benchmark", ".", "show_result", "(", "success_ret", ",", "precision_ret", ",", "\n", "show_video_level", "=", "args", ".", "show_video_level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.seed_torch": [[49, 57], ["random.seed", "str", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed"], "function", ["None"], ["def", "seed_torch", "(", "seed", "=", "0", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "os", ".", "environ", "[", "'PYTHONHASHSEED'", "]", "=", "str", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.build_data_loader": [[59, 74], ["logger.info", "pysot.datasets.dataset.TrkDataset", "logger.info", "torch.utils.data.DataLoader", "pysot.utils.distributed.get_world_size", "torch.utils.data.distributed.DistributedSampler"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size"], ["", "def", "build_data_loader", "(", ")", ":", "\n", "    ", "logger", ".", "info", "(", "\"build train dataset\"", ")", "\n", "# train_dataset", "\n", "train_dataset", "=", "TrkDataset", "(", ")", "\n", "logger", ".", "info", "(", "\"build dataset done\"", ")", "\n", "\n", "train_sampler", "=", "None", "\n", "if", "get_world_size", "(", ")", ">", "1", ":", "\n", "        ", "train_sampler", "=", "DistributedSampler", "(", "train_dataset", ")", "\n", "", "train_loader", "=", "DataLoader", "(", "train_dataset", ",", "\n", "batch_size", "=", "cfg", ".", "TRAIN", ".", "BATCH_SIZE", ",", "\n", "num_workers", "=", "cfg", ".", "TRAIN", ".", "NUM_WORKERS", ",", "\n", "pin_memory", "=", "True", ",", "\n", "sampler", "=", "train_sampler", ")", "\n", "return", "train_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.build_opt_lr": [[76, 118], ["torch.optim.SGD", "torch.optim.SGD", "pysot.utils.lr_scheduler.build_lr_scheduler", "pysot.utils.lr_scheduler.build_lr_scheduler.step", "model.backbone.parameters", "model.backbone.modules", "getattr().parameters", "getattr().modules", "isinstance", "filter", "model.rpn_head.parameters", "isinstance", "m.eval", "model.backbone.parameters", "model.neck.parameters", "model.mask_head.parameters", "model.refine_head.parameters", "getattr", "getattr", "m.train", "pysot.core.config.cfg.TRAIN.START_EPOCH"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.build_lr_scheduler", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.Filter.filter", "home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.eval", "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.train"], ["", "def", "build_opt_lr", "(", "model", ",", "current_epoch", "=", "0", ")", ":", "\n", "    ", "if", "current_epoch", ">=", "cfg", ".", "BACKBONE", ".", "TRAIN_EPOCH", ":", "\n", "        ", "for", "layer", "in", "cfg", ".", "BACKBONE", ".", "TRAIN_LAYERS", ":", "\n", "            ", "for", "param", "in", "getattr", "(", "model", ".", "backbone", ",", "layer", ")", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "True", "\n", "", "for", "m", "in", "getattr", "(", "model", ".", "backbone", ",", "layer", ")", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "m", ".", "train", "(", ")", "\n", "", "", "", "", "else", ":", "\n", "        ", "for", "param", "in", "model", ".", "backbone", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "", "for", "m", "in", "model", ".", "backbone", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "eval", "(", ")", "\n", "\n", "", "", "", "trainable_params", "=", "[", "]", "\n", "trainable_params", "+=", "[", "{", "'params'", ":", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "\n", "model", ".", "backbone", ".", "parameters", "(", ")", ")", ",", "\n", "'lr'", ":", "cfg", ".", "BACKBONE", ".", "LAYERS_LR", "*", "cfg", ".", "TRAIN", ".", "BASE_LR", "}", "]", "\n", "\n", "if", "cfg", ".", "ADJUST", ".", "ADJUST", ":", "\n", "        ", "trainable_params", "+=", "[", "{", "'params'", ":", "model", ".", "neck", ".", "parameters", "(", ")", ",", "\n", "'lr'", ":", "cfg", ".", "TRAIN", ".", "BASE_LR", "}", "]", "\n", "\n", "", "trainable_params", "+=", "[", "{", "'params'", ":", "model", ".", "rpn_head", ".", "parameters", "(", ")", ",", "\n", "'lr'", ":", "cfg", ".", "TRAIN", ".", "BASE_LR", "}", "]", "\n", "\n", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "        ", "trainable_params", "+=", "[", "{", "'params'", ":", "model", ".", "mask_head", ".", "parameters", "(", ")", ",", "\n", "'lr'", ":", "cfg", ".", "TRAIN", ".", "BASE_LR", "}", "]", "\n", "\n", "", "if", "cfg", ".", "REFINE", ".", "REFINE", ":", "\n", "        ", "trainable_params", "+=", "[", "{", "'params'", ":", "model", ".", "refine_head", ".", "parameters", "(", ")", ",", "\n", "'lr'", ":", "cfg", ".", "TRAIN", ".", "LR", ".", "BASE_LR", "}", "]", "\n", "\n", "", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "trainable_params", ",", "\n", "momentum", "=", "cfg", ".", "TRAIN", ".", "MOMENTUM", ",", "\n", "weight_decay", "=", "cfg", ".", "TRAIN", ".", "WEIGHT_DECAY", ")", "\n", "\n", "lr_scheduler", "=", "build_lr_scheduler", "(", "optimizer", ",", "epochs", "=", "cfg", ".", "TRAIN", ".", "EPOCH", ")", "\n", "lr_scheduler", ".", "step", "(", "cfg", ".", "TRAIN", ".", "START_EPOCH", ")", "\n", "return", "optimizer", ",", "lr_scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.log_grads": [[120, 155], ["train.log_grads.weights_grads"], "function", ["None"], ["", "def", "log_grads", "(", "model", ",", "tb_writer", ",", "tb_index", ")", ":", "\n", "    ", "def", "weights_grads", "(", "model", ")", ":", "\n", "        ", "grad", "=", "{", "}", "\n", "weights", "=", "{", "}", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "                ", "grad", "[", "name", "]", "=", "param", ".", "grad", "\n", "weights", "[", "name", "]", "=", "param", ".", "data", "\n", "", "", "return", "grad", ",", "weights", "\n", "\n", "", "grad", ",", "weights", "=", "weights_grads", "(", "model", ")", "\n", "feature_norm", ",", "rpn_norm", "=", "0", ",", "0", "\n", "for", "k", ",", "g", "in", "grad", ".", "items", "(", ")", ":", "\n", "        ", "_norm", "=", "g", ".", "data", ".", "norm", "(", "2", ")", "\n", "weight", "=", "weights", "[", "k", "]", "\n", "w_norm", "=", "weight", ".", "norm", "(", "2", ")", "\n", "if", "'feature'", "in", "k", ":", "\n", "            ", "feature_norm", "+=", "_norm", "**", "2", "\n", "", "else", ":", "\n", "            ", "rpn_norm", "+=", "_norm", "**", "2", "\n", "\n", "", "tb_writer", ".", "add_scalar", "(", "'grad_all/'", "+", "k", ".", "replace", "(", "'.'", ",", "'/'", ")", ",", "\n", "_norm", ",", "tb_index", ")", "\n", "tb_writer", ".", "add_scalar", "(", "'weight_all/'", "+", "k", ".", "replace", "(", "'.'", ",", "'/'", ")", ",", "\n", "w_norm", ",", "tb_index", ")", "\n", "tb_writer", ".", "add_scalar", "(", "'w-g/'", "+", "k", ".", "replace", "(", "'.'", ",", "'/'", ")", ",", "\n", "w_norm", "/", "(", "1e-20", "+", "_norm", ")", ",", "tb_index", ")", "\n", "", "tot_norm", "=", "feature_norm", "+", "rpn_norm", "\n", "tot_norm", "=", "tot_norm", "**", "0.5", "\n", "feature_norm", "=", "feature_norm", "**", "0.5", "\n", "rpn_norm", "=", "rpn_norm", "**", "0.5", "\n", "\n", "tb_writer", ".", "add_scalar", "(", "'grad/tot'", ",", "tot_norm", ",", "tb_index", ")", "\n", "tb_writer", ".", "add_scalar", "(", "'grad/feature'", ",", "feature_norm", ",", "tb_index", ")", "\n", "tb_writer", ".", "add_scalar", "(", "'grad/rpn'", ",", "rpn_norm", ",", "tb_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.train": [[157, 258], ["lr_scheduler.get_cur_lr", "pysot.utils.distributed.get_rank", "pysot.utils.average_meter.AverageMeter", "pysot.utils.distributed.get_world_size", "logger.info", "time.time", "enumerate", "os.makedirs", "pysot.utils.distributed.average_reduce", "model", "train.train.is_valid_number"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.lr_scheduler.LRScheduler.get_cur_lr", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_rank", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.get_world_size", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.average_reduce"], ["", "def", "train", "(", "train_loader", ",", "model", ",", "optimizer", ",", "lr_scheduler", ",", "tb_writer", ")", ":", "\n", "    ", "cur_lr", "=", "lr_scheduler", ".", "get_cur_lr", "(", ")", "\n", "rank", "=", "get_rank", "(", ")", "\n", "\n", "average_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "def", "is_valid_number", "(", "x", ")", ":", "\n", "        ", "return", "not", "(", "math", ".", "isnan", "(", "x", ")", "or", "math", ".", "isinf", "(", "x", ")", "or", "x", ">", "1e4", ")", "\n", "\n", "", "world_size", "=", "get_world_size", "(", ")", "\n", "num_per_epoch", "=", "len", "(", "train_loader", ".", "dataset", ")", "//", "cfg", ".", "TRAIN", ".", "EPOCH", "//", "(", "cfg", ".", "TRAIN", ".", "BATCH_SIZE", "*", "world_size", ")", "\n", "start_epoch", "=", "cfg", ".", "TRAIN", ".", "START_EPOCH", "\n", "epoch", "=", "start_epoch", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "cfg", ".", "TRAIN", ".", "SNAPSHOT_DIR", ")", "and", "get_rank", "(", ")", "==", "0", ":", "\n", "        ", "os", ".", "makedirs", "(", "cfg", ".", "TRAIN", ".", "SNAPSHOT_DIR", ")", "\n", "\n", "", "logger", ".", "info", "(", "\"model\\n{}\"", ".", "format", "(", "describe", "(", "model", ".", "module", ")", ")", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "\n", "        ", "if", "epoch", "!=", "idx", "//", "num_per_epoch", "+", "start_epoch", ":", "\n", "            ", "epoch", "=", "idx", "//", "num_per_epoch", "+", "start_epoch", "\n", "\n", "if", "get_rank", "(", ")", "==", "0", ":", "\n", "                ", "torch", ".", "save", "(", "\n", "{", "'epoch'", ":", "epoch", ",", "\n", "'state_dict'", ":", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", "}", ",", "\n", "cfg", ".", "TRAIN", ".", "SNAPSHOT_DIR", "+", "'/checkpoint_e%d.pth'", "%", "(", "epoch", ")", ")", "\n", "\n", "", "if", "epoch", "==", "cfg", ".", "TRAIN", ".", "EPOCH", ":", "\n", "                ", "return", "\n", "\n", "", "if", "cfg", ".", "BACKBONE", ".", "TRAIN_EPOCH", "==", "epoch", ":", "\n", "                ", "logger", ".", "info", "(", "'start training backbone.'", ")", "\n", "optimizer", ",", "lr_scheduler", "=", "build_opt_lr", "(", "model", ".", "module", ",", "epoch", ")", "\n", "logger", ".", "info", "(", "\"model\\n{}\"", ".", "format", "(", "describe", "(", "model", ".", "module", ")", ")", ")", "\n", "\n", "", "lr_scheduler", ".", "step", "(", "epoch", ")", "\n", "cur_lr", "=", "lr_scheduler", ".", "get_cur_lr", "(", ")", "\n", "logger", ".", "info", "(", "'epoch: {}'", ".", "format", "(", "epoch", "+", "1", ")", ")", "\n", "\n", "", "tb_idx", "=", "idx", "\n", "if", "idx", "%", "num_per_epoch", "==", "0", "and", "idx", "!=", "0", ":", "\n", "            ", "for", "idx", ",", "pg", "in", "enumerate", "(", "optimizer", ".", "param_groups", ")", ":", "\n", "                ", "logger", ".", "info", "(", "'epoch {} lr {}'", ".", "format", "(", "epoch", "+", "1", ",", "pg", "[", "'lr'", "]", ")", ")", "\n", "if", "rank", "==", "0", ":", "\n", "                    ", "tb_writer", ".", "add_scalar", "(", "'lr/group{}'", ".", "format", "(", "idx", "+", "1", ")", ",", "\n", "pg", "[", "'lr'", "]", ",", "tb_idx", ")", "\n", "\n", "", "", "", "data_time", "=", "average_reduce", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "tb_writer", ".", "add_scalar", "(", "'time/data'", ",", "data_time", ",", "tb_idx", ")", "\n", "\n", "", "outputs", "=", "model", "(", "data", ")", "\n", "loss", "=", "outputs", "[", "'total_loss'", "]", "\n", "\n", "if", "is_valid_number", "(", "loss", ".", "data", ".", "item", "(", ")", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "reduce_gradients", "(", "model", ")", "\n", "\n", "if", "rank", "==", "0", "and", "cfg", ".", "TRAIN", ".", "LOG_GRADS", ":", "\n", "                ", "log_grads", "(", "model", ".", "module", ",", "tb_writer", ",", "tb_idx", ")", "\n", "\n", "# clip gradient", "\n", "", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "cfg", ".", "TRAIN", ".", "GRAD_CLIP", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "batch_time", "=", "time", ".", "time", "(", ")", "-", "end", "\n", "batch_info", "=", "{", "}", "\n", "batch_info", "[", "'batch_time'", "]", "=", "average_reduce", "(", "batch_time", ")", "\n", "batch_info", "[", "'data_time'", "]", "=", "average_reduce", "(", "data_time", ")", "\n", "for", "k", ",", "v", "in", "sorted", "(", "outputs", ".", "items", "(", ")", ")", ":", "\n", "            ", "batch_info", "[", "k", "]", "=", "average_reduce", "(", "v", ".", "data", ".", "item", "(", ")", ")", "\n", "\n", "", "average_meter", ".", "update", "(", "**", "batch_info", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "for", "k", ",", "v", "in", "batch_info", ".", "items", "(", ")", ":", "\n", "                ", "tb_writer", ".", "add_scalar", "(", "k", ",", "v", ",", "tb_idx", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "cfg", ".", "TRAIN", ".", "PRINT_FREQ", "==", "0", ":", "\n", "                ", "info", "=", "\"Epoch: [{}][{}/{}] lr: {:.6f}\\n\"", ".", "format", "(", "\n", "epoch", "+", "1", ",", "(", "idx", "+", "1", ")", "%", "num_per_epoch", ",", "\n", "num_per_epoch", ",", "cur_lr", ")", "\n", "for", "cc", ",", "(", "k", ",", "v", ")", "in", "enumerate", "(", "batch_info", ".", "items", "(", ")", ")", ":", "\n", "                    ", "if", "cc", "%", "2", "==", "0", ":", "\n", "                        ", "info", "+=", "(", "\"\\t{:s}\\t\"", ")", ".", "format", "(", "\n", "getattr", "(", "average_meter", ",", "k", ")", ")", "\n", "", "else", ":", "\n", "                        ", "info", "+=", "(", "\"{:s}\\n\"", ")", ".", "format", "(", "\n", "getattr", "(", "average_meter", ",", "k", ")", ")", "\n", "", "", "logger", ".", "info", "(", "info", ")", "\n", "print_speed", "(", "idx", "+", "1", "+", "start_epoch", "*", "num_per_epoch", ",", "\n", "average_meter", ".", "batch_time", ".", "avg", ",", "\n", "cfg", ".", "TRAIN", ".", "EPOCH", "*", "num_per_epoch", ")", "\n", "", "", "end", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.main": [[260, 321], ["pysot.utils.distributed.dist_init", "logger.info", "pysot.core.config.cfg.merge_from_file", "pysot.models.model_builder.ModelBuilder().cuda().train", "pysot.utils.distributed.DistModule", "train.build_data_loader", "train.build_opt_lr", "logger.info", "logger.info", "train.train", "pysot.utils.log_helper.init_log", "logger.info", "logger.info", "pysot.utils.model_load.load_pretrain", "pysot.utils.model_load.load_pretrain", "tensorboardX.SummaryWriter", "logger.info", "os.path.isfile", "pysot.utils.model_load.restore_from", "pysot.utils.distributed.DistModule", "os.path.exists", "os.makedirs", "pysot.utils.log_helper.add_file_handler", "pysot.models.model_builder.ModelBuilder().cuda", "os.path.join", "pysot.utils.misc.commit", "json.dumps", "pysot.models.model_builder.ModelBuilder"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.utils.distributed.dist_init", "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.train", "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.build_data_loader", "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.build_opt_lr", "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.train.train", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.init_log", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.load_pretrain", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.load_pretrain", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.restore_from", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.log_helper.add_file_handler", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.misc.commit"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "rank", ",", "world_size", "=", "dist_init", "(", ")", "\n", "logger", ".", "info", "(", "\"init done\"", ")", "\n", "\n", "# load cfg", "\n", "cfg", ".", "merge_from_file", "(", "args", ".", "cfg", ")", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "cfg", ".", "TRAIN", ".", "RESUME", "=", "args", ".", "resume", "\n", "", "if", "rank", "==", "0", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "cfg", ".", "TRAIN", ".", "LOG_DIR", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "cfg", ".", "TRAIN", ".", "LOG_DIR", ")", "\n", "", "init_log", "(", "'global'", ",", "logging", ".", "INFO", ")", "\n", "if", "cfg", ".", "TRAIN", ".", "LOG_DIR", ":", "\n", "            ", "add_file_handler", "(", "'global'", ",", "\n", "os", ".", "path", ".", "join", "(", "cfg", ".", "TRAIN", ".", "LOG_DIR", ",", "'logs.txt'", ")", ",", "\n", "logging", ".", "INFO", ")", "\n", "\n", "", "logger", ".", "info", "(", "\"Version Information: \\n{}\\n\"", ".", "format", "(", "commit", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"config \\n{}\"", ".", "format", "(", "json", ".", "dumps", "(", "cfg", ",", "indent", "=", "4", ")", ")", ")", "\n", "\n", "# create model", "\n", "", "model", "=", "ModelBuilder", "(", ")", ".", "cuda", "(", ")", ".", "train", "(", ")", "\n", "dist_model", "=", "DistModule", "(", "model", ")", "\n", "\n", "# load pretrained backbone weights", "\n", "if", "cfg", ".", "BACKBONE", ".", "PRETRAINED", ":", "\n", "# cur_path = os.path.dirname(os.path.realpath(__file__))", "\n", "# backbone_path = os.path.join(cur_path, '../', cfg.BACKBONE.PRETRAINED)", "\n", "        ", "load_pretrain", "(", "model", ".", "backbone", ",", "cfg", ".", "BACKBONE", ".", "PRETRAINED", ")", "\n", "\n", "# load all weights", "\n", "", "if", "cfg", ".", "PRETRAINED", ":", "\n", "        ", "load_pretrain", "(", "model", ",", "cfg", ".", "PRETRAINED", ")", "\n", "\n", "# create tensorboard writer", "\n", "", "if", "rank", "==", "0", "and", "cfg", ".", "TRAIN", ".", "LOG_DIR", ":", "\n", "        ", "tb_writer", "=", "SummaryWriter", "(", "cfg", ".", "TRAIN", ".", "LOG_DIR", ")", "\n", "", "else", ":", "\n", "        ", "tb_writer", "=", "None", "\n", "\n", "# build dataset loader", "\n", "", "train_loader", "=", "build_data_loader", "(", ")", "\n", "\n", "# build optimizer and lr_scheduler", "\n", "optimizer", ",", "lr_scheduler", "=", "build_opt_lr", "(", "dist_model", ".", "module", ",", "\n", "cfg", ".", "TRAIN", ".", "START_EPOCH", ")", "\n", "\n", "# resume training", "\n", "if", "cfg", ".", "TRAIN", ".", "RESUME", ":", "\n", "        ", "logger", ".", "info", "(", "\"resume from {}\"", ".", "format", "(", "cfg", ".", "TRAIN", ".", "RESUME", ")", ")", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "cfg", ".", "TRAIN", ".", "RESUME", ")", ",", "'{} is not a valid file.'", ".", "format", "(", "cfg", ".", "TRAIN", ".", "RESUME", ")", "\n", "model", ",", "optimizer", ",", "cfg", ".", "TRAIN", ".", "START_EPOCH", "=", "restore_from", "(", "model", ",", "optimizer", ",", "cfg", ".", "TRAIN", ".", "RESUME", ")", "\n", "dist_model", "=", "DistModule", "(", "model", ")", "\n", "\n", "", "logger", ".", "info", "(", "lr_scheduler", ")", "\n", "logger", ".", "info", "(", "\"model prepare done\"", ")", "\n", "\n", "# start training", "\n", "train", "(", "train_loader", ",", "dist_model", ",", "optimizer", ",", "lr_scheduler", ",", "tb_writer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.test.seed_torch": [[42, 50], ["random.seed", "str", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed", "pysot.core.config.cfg.TRACK.SEED", "pysot.core.config.cfg.TRACK.SEED"], "function", ["None"], ["def", "seed_torch", "(", "seed", "=", "0", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "os", ".", "environ", "[", "'PYTHONHASHSEED'", "]", "=", "str", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.test.main": [[51, 259], ["pysot.core.config.cfg.merge_from_file", "os.path.dirname", "os.path.join", "pysot.models.model_builder.ModelBuilder", "pysot.utils.model_load.load_pretrain().cuda().eval", "pysot.tracker.tracker_builder.build_tracker", "toolkit.datasets.DatasetFactory.create_dataset", "os.path.realpath", "[].split", "enumerate", "print", "enumerate", "pysot.utils.model_load.load_pretrain().cuda", "test.seed_torch", "enumerate", "cv2.getTickFrequency", "os.path.join", "os.path.join", "print", "test.seed_torch", "enumerate", "cv2.getTickFrequency", "print", "os.path.isdir", "print", "cv2.getTickCount", "os.path.isdir", "os.makedirs", "open", "os.path.exists", "print", "cv2.getTickCount", "track_times.append", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pysot.utils.model_load.load_pretrain", "args.snapshot.split", "os.path.join", "len", "pysot.utils.bbox.get_axis_aligned_bbox", "pysot.tracker.tracker_builder.build_tracker.init", "pred_bboxes.append", "cv2.getTickCount", "cv2.destroyAllWindows", "cv2.polylines", "cv2.putText", "cv2.putText", "cv2.imshow", "cv2.waitKey", "isinstance", "os.path.join", "pysot.utils.bbox.get_axis_aligned_bbox", "pysot.tracker.tracker_builder.build_tracker.init", "scores.append", "pysot.tracker.tracker_builder.build_tracker.track", "pred_bboxes.append", "scores.append", "cv2.getTickCount", "cv2.destroyAllWindows", "list", "cv2.rectangle", "cv2.putText", "cv2.imshow", "cv2.waitKey", "os.path.isdir", "os.makedirs", "open", "open", "open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.array", "pysot.tracker.tracker_builder.build_tracker.track", "toolkit.utils.region.vot_overlap", "pred_bboxes.append", "cv2.polylines", "list", "cv2.rectangle", "str", "str", "cv2.putText", "f.write", "f.write", "numpy.array", "pred_bboxes.append", "pred_bboxes.append", "cv2.getTickFrequency", "cv2.putText", "list", "cv2.rectangle", "map", "str", "cv2.putText", "f.write", "f.write", "os.path.isdir", "os.makedirs", "open", "open", "os.path.isdir", "os.makedirs", "open", "pred_bboxes.append", "pred_bboxes.append", "numpy.array().reshape", "map", "cv2.getTickCount", "len", "map", "f.write", "f.write", "f.write", "f.write", "f.write", "numpy.array().reshape", "numpy.array", "numpy.array", "toolkit.utils.region.vot_float2str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.eval", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.tracker_builder.build_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.datasets.__init__.DatasetFactory.create_dataset", "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.test.seed_torch", "home.repos.pwc.inspect_result.shallowtoil_DROL.tools.test.seed_torch", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.load_pretrain", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.get_axis_aligned_bbox", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker.init", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.bbox.get_axis_aligned_bbox", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.siamrpn_tracker.SiamRPNTracker.init", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.track", "home.repos.pwc.inspect_result.shallowtoil_DROL.classifier.base_classifier.BaseClassifier.track"], ["", "def", "main", "(", ")", ":", "\n", "# load config", "\n", "    ", "cfg", ".", "merge_from_file", "(", "args", ".", "config", ")", "\n", "cfg", ".", "TRACK", ".", "VISUALIZE_CLASS", "=", "args", ".", "vis", "\n", "if", "args", ".", "seed", "!=", "-", "1", ":", "\n", "        ", "cfg", ".", "TRACK", ".", "SEED", "=", "args", ".", "seed", "\n", "\n", "", "cur_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "\n", "dataset_root", "=", "os", ".", "path", ".", "join", "(", "cur_dir", ",", "'../testing_dataset'", ",", "args", ".", "dataset", ")", "\n", "\n", "# create model", "\n", "model", "=", "ModelBuilder", "(", ")", "\n", "\n", "# load model", "\n", "model", "=", "load_pretrain", "(", "model", ",", "args", ".", "snapshot", ")", ".", "cuda", "(", ")", ".", "eval", "(", ")", "\n", "\n", "# build tracker", "\n", "tracker", "=", "build_tracker", "(", "model", ")", "\n", "\n", "# create dataset", "\n", "dataset", "=", "DatasetFactory", ".", "create_dataset", "(", "name", "=", "args", ".", "dataset", ",", "\n", "dataset_root", "=", "dataset_root", ",", "\n", "load_img", "=", "False", ")", "\n", "\n", "model_name", "=", "args", ".", "snapshot", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "total_lost", "=", "0", "\n", "if", "args", ".", "dataset", "in", "[", "'VOT2016'", ",", "'VOT2018'", ",", "'VOT2019'", "]", ":", "\n", "# restart tracking", "\n", "        ", "for", "v_idx", ",", "video", "in", "enumerate", "(", "dataset", ")", ":", "\n", "            ", "seed_torch", "(", "cfg", ".", "TRACK", ".", "SEED", ")", "\n", "if", "args", ".", "video", "!=", "''", ":", "\n", "# test one special video", "\n", "                ", "if", "video", ".", "name", "!=", "args", ".", "video", ":", "\n", "                    ", "continue", "\n", "", "", "if", "args", ".", "skip", "and", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "'results'", ",", "args", ".", "dataset", ",", "model_name", ",", "\n", "'baseline'", ",", "video", ".", "name", ")", ")", ":", "\n", "                ", "print", "(", "'{} skip {}'", ".", "format", "(", "v_idx", "+", "1", ",", "video", ".", "name", ")", ")", "\n", "continue", "\n", "", "frame_counter", "=", "0", "\n", "lost_number", "=", "0", "\n", "toc", "=", "0", "\n", "pred_bboxes", "=", "[", "]", "\n", "for", "idx", ",", "(", "img", ",", "gt_bbox", ")", "in", "enumerate", "(", "video", ")", ":", "\n", "                ", "if", "len", "(", "gt_bbox", ")", "==", "4", ":", "\n", "                    ", "gt_bbox", "=", "[", "gt_bbox", "[", "0", "]", ",", "gt_bbox", "[", "1", "]", ",", "\n", "gt_bbox", "[", "0", "]", ",", "gt_bbox", "[", "1", "]", "+", "gt_bbox", "[", "3", "]", "-", "1", ",", "\n", "gt_bbox", "[", "0", "]", "+", "gt_bbox", "[", "2", "]", "-", "1", ",", "gt_bbox", "[", "1", "]", "+", "gt_bbox", "[", "3", "]", "-", "1", ",", "\n", "gt_bbox", "[", "0", "]", "+", "gt_bbox", "[", "2", "]", "-", "1", ",", "gt_bbox", "[", "1", "]", "]", "\n", "", "tic", "=", "cv2", ".", "getTickCount", "(", ")", "\n", "if", "idx", "==", "frame_counter", ":", "\n", "                    ", "cx", ",", "cy", ",", "w", ",", "h", "=", "get_axis_aligned_bbox", "(", "np", ".", "array", "(", "gt_bbox", ")", ")", "\n", "gt_bbox_", "=", "[", "cx", "-", "(", "w", "-", "1", ")", "/", "2", ",", "cy", "-", "(", "h", "-", "1", ")", "/", "2", ",", "w", ",", "h", "]", "\n", "tracker", ".", "init", "(", "img", ",", "gt_bbox_", ")", "\n", "pred_bbox", "=", "gt_bbox_", "\n", "pred_bboxes", ".", "append", "(", "1", ")", "\n", "", "elif", "idx", ">", "frame_counter", ":", "\n", "                    ", "outputs", "=", "tracker", ".", "track", "(", "img", ")", "\n", "pred_bbox", "=", "outputs", "[", "'bbox'", "]", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "                        ", "flag", "=", "outputs", "[", "'flag'", "]", "\n", "", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "                        ", "pred_bbox", "=", "outputs", "[", "'polygon'", "]", "\n", "", "overlap", "=", "vot_overlap", "(", "pred_bbox", ",", "gt_bbox", ",", "(", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ")", ")", "\n", "if", "overlap", ">", "0", ":", "\n", "# not lost", "\n", "                        ", "pred_bboxes", ".", "append", "(", "pred_bbox", ")", "\n", "", "else", ":", "\n", "# lost object", "\n", "                        ", "pred_bboxes", ".", "append", "(", "2", ")", "\n", "frame_counter", "=", "idx", "+", "5", "# skip 5 frames", "\n", "lost_number", "+=", "1", "\n", "", "", "else", ":", "\n", "                    ", "pred_bboxes", ".", "append", "(", "0", ")", "\n", "", "toc", "+=", "cv2", ".", "getTickCount", "(", ")", "-", "tic", "\n", "if", "idx", "==", "0", ":", "\n", "                    ", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "", "if", "args", ".", "vis", "and", "idx", ">", "frame_counter", ":", "\n", "                    ", "cv2", ".", "polylines", "(", "img", ",", "[", "np", ".", "array", "(", "gt_bbox", ",", "np", ".", "int", ")", ".", "reshape", "(", "(", "-", "1", ",", "1", ",", "2", ")", ")", "]", ",", "\n", "True", ",", "(", "0", ",", "255", ",", "0", ")", ",", "3", ")", "\n", "if", "cfg", ".", "MASK", ".", "MASK", ":", "\n", "                        ", "cv2", ".", "polylines", "(", "img", ",", "[", "np", ".", "array", "(", "pred_bbox", ",", "np", ".", "int", ")", ".", "reshape", "(", "(", "-", "1", ",", "1", ",", "2", ")", ")", "]", ",", "\n", "True", ",", "(", "0", ",", "255", ",", "255", ")", ",", "3", ")", "\n", "", "else", ":", "\n", "                        ", "pred_bbox", "=", "list", "(", "map", "(", "int", ",", "pred_bbox", ")", ")", "\n", "cv2", ".", "rectangle", "(", "img", ",", "(", "pred_bbox", "[", "0", "]", ",", "pred_bbox", "[", "1", "]", ")", ",", "\n", "(", "pred_bbox", "[", "0", "]", "+", "pred_bbox", "[", "2", "]", ",", "pred_bbox", "[", "1", "]", "+", "pred_bbox", "[", "3", "]", ")", ",", "(", "0", ",", "255", ",", "255", ")", ",", "3", ")", "\n", "", "cv2", ".", "putText", "(", "img", ",", "str", "(", "idx", ")", ",", "(", "40", ",", "40", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "(", "0", ",", "255", ",", "255", ")", ",", "2", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "str", "(", "lost_number", ")", ",", "(", "40", ",", "80", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ")", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", "and", "flag", ":", "\n", "                        ", "cv2", ".", "putText", "(", "img", ",", "flag", ",", "(", "pred_bbox", "[", "0", "]", ",", "pred_bbox", "[", "1", "]", "-", "20", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ")", "\n", "", "cv2", ".", "imshow", "(", "video", ".", "name", ",", "img", ")", "\n", "cv2", ".", "waitKey", "(", "1", ")", "\n", "", "", "toc", "/=", "cv2", ".", "getTickFrequency", "(", ")", "\n", "# save results", "\n", "video_path", "=", "os", ".", "path", ".", "join", "(", "'results'", ",", "args", ".", "dataset", ",", "model_name", ",", "\n", "'baseline'", ",", "video", ".", "name", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "video_path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "video_path", ")", "\n", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "video_path", ",", "'{}_001.txt'", ".", "format", "(", "video", ".", "name", ")", ")", "\n", "with", "open", "(", "result_path", ",", "'w'", ")", "as", "f", ":", "\n", "                ", "for", "x", "in", "pred_bboxes", ":", "\n", "                    ", "if", "isinstance", "(", "x", ",", "int", ")", ":", "\n", "                        ", "f", ".", "write", "(", "\"{:d}\\n\"", ".", "format", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "                        ", "f", ".", "write", "(", "','", ".", "join", "(", "[", "vot_float2str", "(", "\"%.4f\"", ",", "i", ")", "for", "i", "in", "x", "]", ")", "+", "'\\n'", ")", "\n", "", "", "", "print", "(", "'({:3d}) Video: {:12s} Time: {:4.1f}s Speed: {:3.1f}fps Lost: {:d}'", ".", "format", "(", "\n", "v_idx", "+", "1", ",", "video", ".", "name", ",", "toc", ",", "idx", "/", "toc", ",", "lost_number", ")", ")", "\n", "total_lost", "+=", "lost_number", "\n", "", "print", "(", "\"{:s} total lost: {:d}\"", ".", "format", "(", "model_name", ",", "total_lost", ")", ")", "\n", "", "else", ":", "\n", "# OPE tracking", "\n", "        ", "for", "v_idx", ",", "video", "in", "enumerate", "(", "dataset", ")", ":", "\n", "            ", "seed_torch", "(", "cfg", ".", "TRACK", ".", "SEED", ")", "\n", "if", "args", ".", "video", "!=", "''", ":", "\n", "# test one special video", "\n", "                ", "if", "video", ".", "name", "!=", "args", ".", "video", ":", "\n", "                    ", "continue", "\n", "", "", "if", "args", ".", "skip", "and", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "'results'", ",", "args", ".", "dataset", ",", "model_name", ",", "'{}.txt'", ".", "format", "(", "video", ".", "name", ")", ")", ")", ":", "\n", "                ", "print", "(", "'{} skip {}'", ".", "format", "(", "v_idx", "+", "1", ",", "video", ".", "name", ")", ")", "\n", "continue", "\n", "", "toc", "=", "0", "\n", "pred_bboxes", "=", "[", "]", "\n", "scores", "=", "[", "]", "\n", "track_times", "=", "[", "]", "\n", "for", "idx", ",", "(", "img", ",", "gt_bbox", ")", "in", "enumerate", "(", "video", ")", ":", "\n", "                ", "tic", "=", "cv2", ".", "getTickCount", "(", ")", "\n", "if", "idx", "==", "0", ":", "\n", "                    ", "cx", ",", "cy", ",", "w", ",", "h", "=", "get_axis_aligned_bbox", "(", "np", ".", "array", "(", "gt_bbox", ")", ")", "\n", "gt_bbox_", "=", "[", "cx", "-", "(", "w", "-", "1", ")", "/", "2", ",", "cy", "-", "(", "h", "-", "1", ")", "/", "2", ",", "w", ",", "h", "]", "\n", "tracker", ".", "init", "(", "img", ",", "gt_bbox_", ")", "\n", "pred_bbox", "=", "gt_bbox_", "\n", "scores", ".", "append", "(", "None", ")", "\n", "if", "'VOT2018-LT'", "==", "args", ".", "dataset", ":", "\n", "                        ", "pred_bboxes", ".", "append", "(", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                        ", "pred_bboxes", ".", "append", "(", "pred_bbox", ")", "\n", "", "", "else", ":", "\n", "# print('frame ' + str(idx))", "\n", "                    ", "outputs", "=", "tracker", ".", "track", "(", "img", ")", "\n", "pred_bbox", "=", "outputs", "[", "'bbox'", "]", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", ":", "\n", "                        ", "flag", "=", "outputs", "[", "'flag'", "]", "\n", "", "pred_bboxes", ".", "append", "(", "pred_bbox", ")", "\n", "scores", ".", "append", "(", "outputs", "[", "'best_score'", "]", ")", "\n", "", "toc", "+=", "cv2", ".", "getTickCount", "(", ")", "-", "tic", "\n", "track_times", ".", "append", "(", "(", "cv2", ".", "getTickCount", "(", ")", "-", "tic", ")", "/", "cv2", ".", "getTickFrequency", "(", ")", ")", "\n", "if", "idx", "==", "0", ":", "\n", "                    ", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "", "if", "args", ".", "vis", "and", "idx", ">", "0", ":", "\n", "                    ", "if", "'VOT2018-LT'", "==", "args", ".", "dataset", "and", "len", "(", "gt_bbox", ")", "<", "2", ":", "\n", "                        ", "cv2", ".", "putText", "(", "img", ",", "'absence'", ",", "(", "40", ",", "60", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ")", "\n", "", "else", ":", "\n", "                        ", "gt_bbox", "=", "list", "(", "map", "(", "int", ",", "gt_bbox", ")", ")", "\n", "cv2", ".", "rectangle", "(", "img", ",", "(", "gt_bbox", "[", "0", "]", ",", "gt_bbox", "[", "1", "]", ")", ",", "\n", "(", "gt_bbox", "[", "0", "]", "+", "gt_bbox", "[", "2", "]", ",", "gt_bbox", "[", "1", "]", "+", "gt_bbox", "[", "3", "]", ")", ",", "(", "0", ",", "255", ",", "0", ")", ",", "3", ")", "\n", "", "pred_bbox", "=", "list", "(", "map", "(", "int", ",", "pred_bbox", ")", ")", "\n", "cv2", ".", "rectangle", "(", "img", ",", "(", "pred_bbox", "[", "0", "]", ",", "pred_bbox", "[", "1", "]", ")", ",", "\n", "(", "pred_bbox", "[", "0", "]", "+", "pred_bbox", "[", "2", "]", ",", "pred_bbox", "[", "1", "]", "+", "pred_bbox", "[", "3", "]", ")", ",", "(", "0", ",", "255", ",", "255", ")", ",", "3", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "str", "(", "idx", ")", ",", "(", "40", ",", "40", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "(", "0", ",", "255", ",", "255", ")", ",", "2", ")", "\n", "if", "cfg", ".", "TRACK", ".", "USE_CLASSIFIER", "and", "flag", ":", "\n", "                        ", "cv2", ".", "putText", "(", "img", ",", "flag", ",", "(", "pred_bbox", "[", "0", "]", ",", "pred_bbox", "[", "1", "]", "-", "20", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ")", "\n", "", "cv2", ".", "imshow", "(", "video", ".", "name", ",", "img", ")", "\n", "cv2", ".", "waitKey", "(", "1", ")", "\n", "", "", "toc", "/=", "cv2", ".", "getTickFrequency", "(", ")", "\n", "# save results", "\n", "if", "'VOT2018-LT'", "==", "args", ".", "dataset", ":", "\n", "                ", "video_path", "=", "os", ".", "path", ".", "join", "(", "'results'", ",", "args", ".", "dataset", ",", "model_name", ",", "\n", "'longterm'", ",", "video", ".", "name", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "video_path", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "video_path", ")", "\n", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "video_path", ",", "\n", "'{}_001.txt'", ".", "format", "(", "video", ".", "name", ")", ")", "\n", "with", "open", "(", "result_path", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "for", "x", "in", "pred_bboxes", ":", "\n", "                        ", "f", ".", "write", "(", "','", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "x", "]", ")", "+", "'\\n'", ")", "\n", "", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "video_path", ",", "\n", "'{}_001_confidence.value'", ".", "format", "(", "video", ".", "name", ")", ")", "\n", "with", "open", "(", "result_path", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "for", "x", "in", "scores", ":", "\n", "                        ", "f", ".", "write", "(", "'\\n'", ")", "if", "x", "is", "None", "else", "f", ".", "write", "(", "\"{:.6f}\\n\"", ".", "format", "(", "x", ")", ")", "\n", "", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "video_path", ",", "\n", "'{}_time.txt'", ".", "format", "(", "video", ".", "name", ")", ")", "\n", "with", "open", "(", "result_path", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "for", "x", "in", "track_times", ":", "\n", "                        ", "f", ".", "write", "(", "\"{:.6f}\\n\"", ".", "format", "(", "x", ")", ")", "\n", "", "", "", "elif", "'GOT-10k'", "==", "args", ".", "dataset", ":", "\n", "                ", "video_path", "=", "os", ".", "path", ".", "join", "(", "'results'", ",", "args", ".", "dataset", ",", "model_name", ",", "video", ".", "name", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "video_path", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "video_path", ")", "\n", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "video_path", ",", "'{}_001.txt'", ".", "format", "(", "video", ".", "name", ")", ")", "\n", "with", "open", "(", "result_path", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "for", "x", "in", "pred_bboxes", ":", "\n", "                        ", "f", ".", "write", "(", "','", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "x", "]", ")", "+", "'\\n'", ")", "\n", "", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "video_path", ",", "\n", "'{}_time.txt'", ".", "format", "(", "video", ".", "name", ")", ")", "\n", "with", "open", "(", "result_path", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "for", "x", "in", "track_times", ":", "\n", "                        ", "f", ".", "write", "(", "\"{:.6f}\\n\"", ".", "format", "(", "x", ")", ")", "\n", "", "", "", "else", ":", "\n", "                ", "model_path", "=", "os", ".", "path", ".", "join", "(", "'results'", ",", "args", ".", "dataset", ",", "model_name", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "model_path", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "model_path", ")", "\n", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "model_path", ",", "'{}.txt'", ".", "format", "(", "video", ".", "name", ")", ")", "\n", "with", "open", "(", "result_path", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "for", "x", "in", "pred_bboxes", ":", "\n", "                        ", "f", ".", "write", "(", "','", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "x", "]", ")", "+", "'\\n'", ")", "\n", "", "", "", "print", "(", "'({:3d}) Video: {:12s} Time: {:5.1f}s Speed: {:3.1f}fps'", ".", "format", "(", "\n", "v_idx", "+", "1", ",", "video", ".", "name", ",", "toc", ",", "idx", "/", "toc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot_iter.warmup": [[26, 29], ["range", "model.template", "torch.FloatTensor().cuda", "torch.FloatTensor"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.models.model_builder.ModelBuilder.template"], ["def", "warmup", "(", "model", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "model", ".", "template", "(", "torch", ".", "FloatTensor", "(", "1", ",", "3", ",", "127", ",", "127", ")", ".", "cuda", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot_iter.setup_tracker": [[30, 39], ["pysot.core.config.cfg.merge_from_file", "pysot.models.model_builder.ModelBuilder", "pysot.utils.model_load.load_pretrain().cuda().eval", "pysot.tracker.tracker_builder.build_tracker", "vot_iter.warmup", "pysot.utils.model_load.load_pretrain().cuda", "pysot.utils.model_load.load_pretrain"], "function", ["home.repos.pwc.inspect_result.shallowtoil_DROL.evaluation.f1_benchmark.F1Benchmark.eval", "home.repos.pwc.inspect_result.shallowtoil_DROL.tracker.tracker_builder.build_tracker", "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot_iter.warmup", "home.repos.pwc.inspect_result.shallowtoil_DROL.utils.model_load.load_pretrain"], ["", "", "def", "setup_tracker", "(", ")", ":", "\n", "    ", "cfg", ".", "merge_from_file", "(", "cfg_file", ")", "\n", "\n", "model", "=", "ModelBuilder", "(", ")", "\n", "model", "=", "load_pretrain", "(", "model", ",", "model_file", ")", ".", "cuda", "(", ")", ".", "eval", "(", ")", "\n", "\n", "tracker", "=", "build_tracker", "(", "model", ")", "\n", "warmup", "(", "model", ")", "\n", "return", "tracker", "\n", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__init__": [[27, 59], ["trax.Server", "vot.VOT._trax.wait", "isinstance", "vot.VOT._trax.status", "Polygon", "Rectangle", "x.path", "len", "vot.VOT.image.items", "Point", "vot.VOT.region.bounds", "Exception"], "methods", ["None"], ["\n", "def", "__init__", "(", "self", ",", "name", ",", "root", ",", "video_dir", ",", "init_rect", ",", "img_names", ",", "gt_rect", ",", "\n", "camera_motion", ",", "illum_change", ",", "motion_change", ",", "size_change", ",", "occlusion", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "VOTVideo", ",", "self", ")", ".", "__init__", "(", "name", ",", "root", ",", "video_dir", ",", "\n", "init_rect", ",", "img_names", ",", "gt_rect", ",", "None", ",", "load_img", ")", "\n", "self", ".", "tags", "=", "{", "'all'", ":", "[", "1", "]", "*", "len", "(", "gt_rect", ")", "}", "\n", "self", ".", "tags", "[", "'camera_motion'", "]", "=", "camera_motion", "\n", "self", ".", "tags", "[", "'illum_change'", "]", "=", "illum_change", "\n", "self", ".", "tags", "[", "'motion_change'", "]", "=", "motion_change", "\n", "self", ".", "tags", "[", "'size_change'", "]", "=", "size_change", "\n", "self", ".", "tags", "[", "'occlusion'", "]", "=", "occlusion", "\n", "\n", "# TODO", "\n", "# if len(self.gt_traj[0]) == 4:", "\n", "#     self.gt_traj = [[x[0], x[1], x[0], x[1]+x[3]-1,", "\n", "#                     x[0]+x[2]-1, x[1]+x[3]-1, x[0]+x[2]-1, x[1]]", "\n", "#                         for x in self.gt_traj]", "\n", "\n", "# empty tag", "\n", "all_tag", "=", "[", "v", "for", "k", ",", "v", "in", "self", ".", "tags", ".", "items", "(", ")", "if", "len", "(", "v", ")", ">", "0", "]", "\n", "self", ".", "tags", "[", "'empty'", "]", "=", "np", ".", "all", "(", "1", "-", "np", ".", "array", "(", "all_tag", ")", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "int32", ")", ".", "tolist", "(", ")", "\n", "# self.tags['empty'] = np.all(1 - np.array(list(self.tags.values())),", "\n", "#         axis=1).astype(np.int32).tolist()", "\n", "\n", "self", ".", "tag_names", "=", "list", "(", "self", ".", "tags", ".", "keys", "(", ")", ")", "\n", "if", "not", "load_img", ":", "\n", "            ", "img_name", "=", "os", ".", "path", ".", "join", "(", "root", ",", "self", ".", "img_names", "[", "0", "]", ")", "\n", "img", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "img_name", ")", ",", "np", ".", "uint8", ")", "\n", "self", ".", "width", "=", "img", ".", "shape", "[", "1", "]", "\n", "self", ".", "height", "=", "img", ".", "shape", "[", "0", "]", "\n", "\n", "", "", "def", "select_tag", "(", "self", ",", "tag", ",", "start", "=", "0", ",", "end", "=", "0", ")", ":", "\n", "        ", "if", "tag", "==", "'empty'", ":", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.region": [[60, 70], ["None"], "methods", ["None"], ["            ", "return", "self", ".", "tags", "[", "tag", "]", "\n", "", "return", "self", ".", "tags", "[", "tag", "]", "[", "start", ":", "end", "]", "\n", "\n", "", "def", "load_tracker", "(", "self", ",", "path", ",", "tracker_names", "=", "None", ",", "store", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path(str): path to result\n            tracker_name(list): name of tracker\n        \"\"\"", "\n", "if", "not", "tracker_names", ":", "\n", "            ", "tracker_names", "=", "[", "x", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "x", "in", "glob", "(", "path", ")", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.report": [[71, 87], ["isinstance", "vot.VOT._trax.status", "isinstance", "isinstance", "trax.Polygon.create", "trax.Rectangle.create"], "methods", ["None"], ["if", "os", ".", "path", ".", "isdir", "(", "x", ")", "]", "\n", "", "if", "isinstance", "(", "tracker_names", ",", "str", ")", ":", "\n", "            ", "tracker_names", "=", "[", "tracker_names", "]", "\n", "", "for", "name", "in", "tracker_names", ":", "\n", "            ", "traj_files", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "path", ",", "name", ",", "'baseline'", ",", "self", ".", "name", ",", "'*0*.txt'", ")", ")", "\n", "if", "len", "(", "traj_files", ")", "==", "15", ":", "\n", "                ", "traj_files", "=", "traj_files", "\n", "", "else", ":", "\n", "                ", "traj_files", "=", "traj_files", "[", "0", ":", "1", "]", "\n", "", "pred_traj", "=", "[", "]", "\n", "for", "traj_file", "in", "traj_files", ":", "\n", "                ", "with", "open", "(", "traj_file", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "traj", "=", "[", "list", "(", "map", "(", "float", ",", "x", ".", "strip", "(", ")", ".", "split", "(", "','", ")", ")", ")", "\n", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "pred_traj", ".", "append", "(", "traj", ")", "\n", "", "", "if", "store", ":", "\n", "                ", "self", ".", "pred_trajs", "[", "name", "]", "=", "pred_traj", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.frame": [[88, 109], ["hasattr", "vot.VOT._trax.wait", "x.path", "len", "vot.VOT.image.items"], "methods", ["None"], ["", "else", ":", "\n", "                ", "return", "pred_traj", "\n", "\n", "", "", "", "", "class", "VOTDataset", "(", "Dataset", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        name: dataset name, should be 'VOT2018', 'VOT2016', 'VOT2019'\n        dataset_root: dataset root\n        load_img: wether to load all imgs\n    \"\"\"", "\n", "def", "__init__", "(", "self", ",", "name", ",", "dataset_root", ",", "load_img", "=", "False", ")", ":", "\n", "        ", "super", "(", "VOTDataset", ",", "self", ")", ".", "__init__", "(", "name", ",", "dataset_root", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "name", "+", "'.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "meta_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# load videos", "\n", "", "pbar", "=", "tqdm", "(", "meta_data", ".", "keys", "(", ")", ",", "desc", "=", "'loading '", "+", "name", ",", "ncols", "=", "100", ")", "\n", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "pbar", ":", "\n", "            ", "pbar", ".", "set_postfix_str", "(", "video", ")", "\n", "self", ".", "videos", "[", "video", "]", "=", "VOTVideo", "(", "video", ",", "\n", "dataset_root", ",", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.quit": [[111, 114], ["hasattr", "vot.VOT._trax.quit"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.quit"], ["meta_data", "[", "video", "]", "[", "'init_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'img_names'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'gt_rect'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'camera_motion'", "]", ",", "\n"]], "home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.__del__": [[115, 117], ["vot.VOT.quit"], "methods", ["home.repos.pwc.inspect_result.shallowtoil_DROL.vot_iter.vot.VOT.quit"], ["meta_data", "[", "video", "]", "[", "'illum_change'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'motion_change'", "]", ",", "\n", "meta_data", "[", "video", "]", "[", "'size_change'", "]", ",", "\n"]]}