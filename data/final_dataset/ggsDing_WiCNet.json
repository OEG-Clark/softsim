{"home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_BLU.main": [[50, 66], ["models.WiCoNet.WiCoNet.cuda", "datasets.BLU_WiCo.Loader", "torch.utils.data.DataLoader", "datasets.BLU_WiCo.Loader", "torch.utils.data.DataLoader", "utils.loss.CrossEntropyLoss2d().cuda", "torch.optim.SGD", "Train_WiCo_BLU.train", "writer.close", "print", "filter", "models.WiCoNet.WiCoNet", "utils.loss.CrossEntropyLoss2d", "Net().cuda.parameters"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.train"], ["def", "main", "(", ")", ":", "\n", "    ", "net", "=", "Net", "(", "3", ",", "num_classes", "=", "BLU", ".", "num_classes", "+", "1", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "train_set", "=", "BLU", ".", "Loader", "(", "args", "[", "'data_dir'", "]", ",", "'train'", ",", "random_crop", "=", "True", ",", "crop_nums", "=", "args", "[", "'crop_nums'", "]", ",", "random_flip", "=", "True", ",", "\n", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", "\n", "train_loader", "=", "DataLoader", "(", "train_set", ",", "batch_size", "=", "args", "[", "'train_batch_size'", "]", ",", "num_workers", "=", "args", "[", "'num_workers'", "]", ",", "shuffle", "=", "True", ")", "\n", "val_set", "=", "BLU", ".", "Loader", "(", "args", "[", "'data_dir'", "]", ",", "'val'", ",", "sliding_crop", "=", "True", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", "\n", "val_loader", "=", "DataLoader", "(", "val_set", ",", "batch_size", "=", "args", "[", "'val_batch_size'", "]", ",", "num_workers", "=", "args", "[", "'num_workers'", "]", ",", "shuffle", "=", "False", ")", "\n", "\n", "criterion", "=", "CrossEntropyLoss2d", "(", "ignore_index", "=", "0", ")", ".", "cuda", "(", ")", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "net", ".", "parameters", "(", ")", ")", ",", "lr", "=", "args", "[", "'lr'", "]", ",", "weight_decay", "=", "args", "[", "'weight_decay'", "]", ",", "momentum", "=", "args", "[", "'momentum'", "]", ",", "nesterov", "=", "True", ")", "\n", "\n", "train", "(", "train_loader", ",", "net", ",", "criterion", ",", "optimizer", ",", "val_loader", ")", "\n", "writer", ".", "close", "(", ")", "\n", "print", "(", "'Training finished.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_BLU.train": [[67, 135], ["time.time", "float", "torch.cuda.empty_cache", "net.train", "time.time", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "enumerate", "Train_WiCo_BLU.validate", "print", "len", "len", "Train_WiCo_BLU.adjust_learning_rate", "optimizer.zero_grad", "net", "Train_WiCo_BLU.calc_alpha", "criterion", "criterion", "loss.backward", "optimizer.step", "labels.cuda().long.cpu().detach().numpy", "outputs.cpu().detach.cpu().detach", "torch.argmax", "preds.numpy.numpy", "utils.utils.AverageMeter", "zip", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "os.path.join", "torch.save", "imgs.cuda().float.cuda().float", "labels.cuda().long.cuda().long", "imgs_s.cuda().float.cuda().float", "labels_s.cuda().long.cuda().long", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "loss.cpu().detach().numpy", "time.time", "print", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "net.state_dict", "labels.cuda().long.cpu().detach", "outputs.cpu().detach.cpu", "imgs.cuda().float.cuda", "labels.cuda().long.cuda", "imgs_s.cuda().float.cuda", "labels_s.cuda().long.cuda", "loss.cpu().detach", "time.time", "labels.cuda().long.cpu", "len", "loss.cpu"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.train", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.validate", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.adjust_learning_rate", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.calc_alpha", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.PolyLR.step", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update"], ["", "def", "train", "(", "train_loader", ",", "net", ",", "criterion", ",", "optimizer", ",", "val_loader", ")", ":", "\n", "    ", "bestaccT", "=", "0", "\n", "bestaccV", "=", "0.5", "\n", "bestloss", "=", "1", "\n", "curr_epoch", "=", "0", "\n", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "all_iters", "=", "float", "(", "len", "(", "train_loader", ")", "*", "args", "[", "'epochs'", "]", ")", "\n", "while", "True", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "net", ".", "train", "(", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "train_loss", "=", "AverageMeter", "(", ")", "\n", "\n", "curr_iter", "=", "curr_epoch", "*", "len", "(", "train_loader", ")", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "running_iter", "=", "curr_iter", "+", "i", "+", "1", "\n", "adjust_learning_rate", "(", "optimizer", ",", "running_iter", ",", "all_iters", ")", "\n", "imgs_s", ",", "labels_s", ",", "imgs", ",", "labels", "=", "data", "\n", "if", "args", "[", "'gpu'", "]", ":", "\n", "                ", "imgs", "=", "imgs", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "imgs_s", "=", "imgs_s", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "labels_s", "=", "labels_s", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", ",", "aux", "=", "net", "(", "imgs_s", ",", "imgs", ")", "\n", "\n", "alpha", "=", "calc_alpha", "(", "running_iter", ",", "all_iters", ")", "\n", "main_loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "aux_loss", "=", "criterion", "(", "aux", ",", "labels_s", ")", "\n", "loss", "=", "main_loss", "+", "alpha", "*", "aux_loss", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "outputs", "=", "outputs", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "preds", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "preds", "=", "preds", ".", "numpy", "(", ")", "\n", "# batch_valid_sum = 0", "\n", "acc_curr_meter", "=", "AverageMeter", "(", ")", "\n", "for", "(", "pred", ",", "label", ")", "in", "zip", "(", "preds", ",", "labels", ")", ":", "\n", "                ", "acc", ",", "valid_sum", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_curr_meter", ".", "update", "(", "acc", ")", "\n", "", "acc_meter", ".", "update", "(", "acc_curr_meter", ".", "avg", ")", "\n", "train_loss", ".", "update", "(", "loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "curr_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "args", "[", "'print_freq'", "]", "==", "0", ":", "\n", "                ", "print", "(", "'[epoch %d] [iter %d / %d %.1fs] [lr %f] [train loss %.4f acc %.2f]'", "%", "(", "\n", "curr_epoch", ",", "i", "+", "1", ",", "len", "(", "train_loader", ")", ",", "curr_time", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "train_loss", ".", "val", ",", "acc_meter", ".", "val", "*", "100", ")", ")", "\n", "writer", ".", "add_scalar", "(", "'train loss'", ",", "train_loss", ".", "val", ",", "running_iter", ")", "\n", "writer", ".", "add_scalar", "(", "'train accuracy'", ",", "acc_meter", ".", "val", ",", "running_iter", ")", "\n", "writer", ".", "add_scalar", "(", "'lr'", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "running_iter", ")", "\n", "\n", "", "", "acc_v", ",", "loss_v", "=", "validate", "(", "val_loader", ",", "net", ",", "criterion", ",", "curr_epoch", ")", "\n", "if", "acc_meter", ".", "avg", ">", "bestaccT", ":", "bestaccT", "=", "acc_meter", ".", "avg", "\n", "if", "acc_v", ">", "bestaccV", ":", "\n", "            ", "bestaccV", "=", "acc_v", "\n", "bestloss", "=", "loss_v", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'chkpt_dir'", "]", ",", "NET_NAME", "+", "'_%de_OA%.2f.pth'", "%", "(", "curr_epoch", ",", "acc_v", "*", "100", ")", ")", "\n", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "", "print", "(", "'Total time: %.1fs Best rec: Train %.2f, Val %.2f, Val_loss %.4f'", "%", "(", "time", ".", "time", "(", ")", "-", "begin_time", ",", "bestaccT", "*", "100", ",", "bestaccV", "*", "100", ",", "bestloss", ")", ")", "\n", "curr_epoch", "+=", "1", "\n", "if", "curr_epoch", ">=", "args", "[", "'epochs'", "]", ":", "\n", "            ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_BLU.validate": [[136, 179], ["net.eval", "torch.cuda.empty_cache", "time.time", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "enumerate", "print", "writer.add_scalar", "writer.add_scalar", "utils.utils.AverageMeter.update", "outputs.cpu().detach.cpu().detach", "labels.cuda().long.cpu().detach().numpy", "torch.argmax", "preds.numpy.numpy", "zip", "time.time", "utils.utils.AverageMeter.average", "utils.utils.AverageMeter.average", "imgs.cuda().float.cuda().float", "labels.cuda().long.cuda().long", "imgs_s.cuda().float.cuda().float", "torch.no_grad", "net", "criterion", "criterion.cpu().detach().numpy", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "datasets.BLU_WiCo.Index2Color", "os.path.join", "skimage.io.imsave", "print", "outputs.cpu().detach.cpu", "labels.cuda().long.cpu().detach", "utils.utils.AverageMeter.average", "imgs.cuda().float.cuda", "labels.cuda().long.cuda", "imgs_s.cuda().float.cuda", "criterion.cpu().detach", "utils.utils.AverageMeter.average", "labels.cuda().long.cpu", "criterion.cpu"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Index2Color", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average"], ["", "", "", "def", "validate", "(", "val_loader", ",", "net", ",", "criterion", ",", "curr_epoch", ")", ":", "\n", "# the following code is written assuming that batch size is 1", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "val_loss", "=", "AverageMeter", "(", ")", "\n", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "vi", ",", "data", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "        ", "imgs_s", ",", "labels_s", ",", "imgs", ",", "labels", "=", "data", "\n", "\n", "if", "args", "[", "'gpu'", "]", ":", "\n", "            ", "imgs", "=", "imgs", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "imgs_s", "=", "imgs_s", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", ",", "_", "=", "net", "(", "imgs_s", ",", "imgs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "", "val_loss", ".", "update", "(", "loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "outputs", "=", "outputs", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "preds", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "preds", "=", "preds", ".", "numpy", "(", ")", "\n", "for", "(", "pred", ",", "label", ")", "in", "zip", "(", "preds", ",", "labels", ")", ":", "\n", "            ", "acc", ",", "valid_sum", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_meter", ".", "update", "(", "acc", ")", "\n", "\n", "", "if", "args", "[", "'save_pred'", "]", "and", "vi", "==", "0", ":", "\n", "            ", "pred_color", "=", "BLU", ".", "Index2Color", "(", "preds", "[", "0", "]", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'pred_dir'", "]", ",", "NET_NAME", "+", "'.png'", ")", "\n", "io", ".", "imsave", "(", "pred_path", ",", "pred_color", ")", "\n", "print", "(", "'Prediction saved!'", ")", "\n", "\n", "", "", "curr_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "print", "(", "'%.1fs Val loss: %.2f Accuracy: %.2f'", "%", "(", "curr_time", ",", "val_loss", ".", "average", "(", ")", ",", "acc_meter", ".", "average", "(", ")", "*", "100", ")", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'val_loss'", ",", "val_loss", ".", "average", "(", ")", ",", "curr_epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'val_Accuracy'", ",", "acc_meter", ".", "average", "(", ")", ",", "curr_epoch", ")", "\n", "\n", "return", "acc_meter", ".", "avg", ",", "val_loss", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_BLU.calc_alpha": [[180, 183], ["float"], "function", ["None"], ["", "def", "calc_alpha", "(", "curr_iter", ",", "all_iters", ",", "weight", "=", "1.0", ")", ":", "\n", "    ", "r", "=", "(", "1.0", "-", "float", "(", "curr_iter", ")", "/", "all_iters", ")", "**", "2.0", "\n", "return", "weight", "*", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_BLU.adjust_learning_rate": [[184, 190], ["float"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "curr_iter", ",", "all_iter", ")", ":", "\n", "    ", "scale_running_lr", "=", "(", "(", "1.", "-", "float", "(", "curr_iter", ")", "/", "all_iter", ")", "**", "args", "[", "'lr_decay_power'", "]", ")", "\n", "running_lr", "=", "args", "[", "'lr'", "]", "*", "scale_running_lr", "\n", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "running_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_PD.norm_gray": [[34, 40], ["y.astype", "numpy.min", "numpy.max"], "function", ["None"], ["def", "norm_gray", "(", "x", ",", "out_range", "=", "(", "0", ",", "255", ")", ")", ":", "\n", "# x=x*(x>0)", "\n", "    ", "domain", "=", "np", ".", "min", "(", "x", ")", ",", "np", ".", "max", "(", "x", ")", "\n", "y", "=", "(", "x", "-", "(", "domain", "[", "1", "]", "+", "domain", "[", "0", "]", ")", "/", "2", ")", "/", "(", "domain", "[", "1", "]", "-", "domain", "[", "0", "]", "+", "1e-10", ")", "\n", "y", "=", "y", "*", "(", "out_range", "[", "1", "]", "-", "out_range", "[", "0", "]", ")", "+", "(", "out_range", "[", "1", "]", "+", "out_range", "[", "0", "]", ")", "/", "2", "\n", "return", "y", ".", "astype", "(", "'uint8'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_PD.draw_rectangle": [[41, 55], ["cv2.rectangle", "cv2.putText", "cv2.putText"], "function", ["None"], ["", "def", "draw_rectangle", "(", "img", ",", "pos", "=", "'boundary'", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "thick", "=", "2", ",", "text", "=", "'context window'", ")", ":", "\n", "    ", "h", ",", "w", ",", "c", "=", "img", ".", "shape", "\n", "if", "pos", "==", "'boundary'", ":", "\n", "        ", "start_pos", "=", "(", "0", ",", "0", ")", "\n", "end_pos", "=", "(", "h", "-", "1", ",", "w", "-", "1", ")", "\n", "", "elif", "pos", "==", "'center'", ":", "\n", "        ", "start_pos", "=", "(", "h", "//", "2", "-", "32", ",", "w", "//", "2", "-", "32", ")", "\n", "end_pos", "=", "(", "h", "//", "2", "+", "32", ",", "w", "//", "2", "+", "32", ")", "\n", "", "cv2", ".", "rectangle", "(", "img", ",", "start_pos", ",", "end_pos", ",", "color", ",", "thick", ")", "\n", "if", "pos", "==", "'boundary'", ":", "\n", "        ", "cv2", ".", "putText", "(", "img", ",", "text", ",", "(", "start_pos", "[", "0", "]", "+", "15", ",", "start_pos", "[", "1", "]", "+", "15", ")", ",", "cv2", ".", "FONT_HERSHEY_PLAIN", ",", "1.2", ",", "color", ")", "\n", "", "elif", "pos", "==", "'center'", ":", "\n", "        ", "cv2", ".", "putText", "(", "img", ",", "text", ",", "(", "start_pos", "[", "0", "]", "-", "24", ",", "start_pos", "[", "1", "]", "-", "5", ")", ",", "cv2", ".", "FONT_HERSHEY_PLAIN", ",", "1.2", ",", "color", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_PD.main": [[56, 71], ["models.WiCoNet.WiCoNet.cuda", "net.cuda.load_state_dict", "net.cuda.cuda", "net.cuda.eval", "print", "os.path.join", "os.path.join", "open", "datasets.PD_WiCo.Loader", "torch.utils.data.DataLoader", "Eval_WiCo_PD.predict", "open.close", "torch.load", "torch.load", "os.path.exists", "os.makedirs", "models.WiCoNet.WiCoNet"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.predict"], ["", "def", "main", "(", ")", ":", "\n", "    ", "net", "=", "Net", "(", "5", ",", "num_classes", "=", "RS", ".", "num_classes", "+", "1", ",", "size_context", "=", "args", "[", "'crop_size_global'", "]", ",", "size_local", "=", "args", "[", "'crop_size_local'", "]", ")", ".", "cuda", "(", ")", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", "[", "'chkpt_path'", "]", ")", ")", "#, strict = False", "\n", "net", "=", "net", ".", "cuda", "(", ")", "\n", "net", ".", "eval", "(", ")", "\n", "print", "(", "NET_NAME", "+", "' Model loaded.'", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'data_dir'", "]", ",", "'Eval'", ",", "NET_NAME", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "pred_path", ")", ":", "os", ".", "makedirs", "(", "pred_path", ")", "\n", "info_txt_path", "=", "os", ".", "path", ".", "join", "(", "pred_path", ",", "'info.txt'", ")", "\n", "f", "=", "open", "(", "info_txt_path", ",", "'w+'", ")", "\n", "\n", "val_set", "=", "PD", ".", "Loader", "(", "args", "[", "'data_dir'", "]", ",", "'test'", ",", "sliding_crop", "=", "True", ",", "crop_size_global", "=", "args", "[", "'crop_size_global'", "]", ",", "crop_size_local", "=", "args", "[", "'crop_size_local'", "]", ")", "\n", "val_loader", "=", "DataLoader", "(", "val_set", ",", "batch_size", "=", "args", "[", "'val_batch_size'", "]", ",", "num_workers", "=", "4", ",", "shuffle", "=", "False", ")", "\n", "predict", "(", "net", ",", "val_loader", ",", "pred_path", ",", "args", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_PD.predict": [[72, 149], ["utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "enumerate", "numpy.array", "numpy.array", "print", "print", "F1[].mean", "IoU[].mean", "print", "print", "print", "print", "output.detach().cpu.detach().cpu", "torch.argmax", "torch.argmax", "pred.numpy().squeeze.numpy().squeeze", "label.cuda().float.detach().cpu().numpy", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "RS.Index2Color", "Eval_WiCo_PD.norm_gray", "os.path.join", "skimage.io.imsave", "utils.utils.CaclTP", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "print", "scipy.stats.hmean", "numpy.array2string", "numpy.array2string", "f_out.write", "f_out.write", "f_out.write", "f_out.write", "f_out.write", "torch.no_grad", "torch.no_grad", "net", "norm_gray.numpy().squeeze", "Eval_WiCo_PD.norm_gray", "img.cuda().float.detach().cpu().numpy().squeeze().transpose", "cv2.applyColorMap", "os.path.join", "skimage.io.imsave", "f_out.write", "zip", "numpy.array2string", "numpy.array2string", "img_s.cuda().float.cuda().float", "img.cuda().float.cuda().float", "label.cuda().float.cuda().float", "output.detach().cpu.detach", "pred.numpy().squeeze.numpy", "torch.softmax", "label.cuda().float.detach().cpu", "norm_gray.numpy", "img.cuda().float.detach().cpu().numpy().squeeze", "len", "img_s.cuda().float.cuda", "img.cuda().float.cuda", "label.cuda().float.cuda", "label.cuda().float.detach", "len", "img.cuda().float.detach().cpu().numpy", "img.cuda().float.detach().cpu", "img.cuda().float.detach"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Index2Color", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.norm_gray", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.CaclTP", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.norm_gray"], ["", "def", "predict", "(", "net", ",", "pred_loader", ",", "pred_path", ",", "f_out", "=", "None", ")", ":", "\n", "    ", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "TP_meter", "=", "AverageMeter", "(", ")", "\n", "pred_meter", "=", "AverageMeter", "(", ")", "\n", "label_meter", "=", "AverageMeter", "(", ")", "\n", "Union_meter", "=", "AverageMeter", "(", ")", "\n", "output_info", "=", "f_out", "is", "not", "None", "\n", "\n", "for", "vi", ",", "data", "in", "enumerate", "(", "pred_loader", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "img_s", ",", "label_s", ",", "img", ",", "label", "=", "data", "\n", "if", "args", "[", "'gpu'", "]", ":", "\n", "                ", "img_s", "=", "img_s", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "img", "=", "img", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "label", "=", "label", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "\n", "", "output", ",", "aux", "=", "net", "(", "img_s", ",", "img", ")", "\n", "\n", "", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "pred", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "pred", "=", "pred", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "if", "args", "[", "'s_class'", "]", ":", "\n", "            ", "class_map", "=", "F", ".", "softmax", "(", "output", ",", "dim", "=", "1", ")", "[", ":", ",", "args", "[", "'s_class'", "]", ",", ":", ",", ":", "]", "\n", "class_map", "=", "class_map", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "class_map", "=", "norm_gray", "(", "class_map", ")", "\n", "\n", "", "label", "=", "label", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "acc", ",", "_", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_meter", ".", "update", "(", "acc", ")", "\n", "pred_color", "=", "RS", ".", "Index2Color", "(", "pred", ")", "\n", "img", "=", "img", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "img", "=", "norm_gray", "(", "img", ")", "\n", "# img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)", "\n", "# img = draw_rectangle(img)", "\n", "# img = draw_rectangle(img, pos='center', color=(0, 255, 255), thick=2, text='local window')", "\n", "# label_color = PD.Index2Color(label).squeeze()", "\n", "pred_name", "=", "os", ".", "path", ".", "join", "(", "pred_path", ",", "'%d_WiC.png'", "%", "vi", ")", "\n", "io", ".", "imsave", "(", "pred_name", ",", "pred_color", ")", "\n", "# img_name = os.path.join(pred_path, '%d_img.png'%vi)", "\n", "# label_name = os.path.join(pred_path, '%d_label.png'%vi)", "\n", "# io.imsave(label_name, label_color)", "\n", "if", "args", "[", "'s_class'", "]", ":", "\n", "            ", "saliency_map", "=", "cv2", ".", "applyColorMap", "(", "class_map", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "pred_name", "=", "os", ".", "path", ".", "join", "(", "pred_path", ",", "'%d_WiC_saliency.png'", "%", "vi", ")", "\n", "saliency_map", "=", "(", "img", "*", "0.5", "+", "saliency_map", "*", "0.5", ")", ".", "astype", "(", "'uint8'", ")", "\n", "io", ".", "imsave", "(", "pred_name", ",", "saliency_map", ")", "\n", "", "TP", ",", "pred_hist", ",", "label_hist", ",", "union_hist", "=", "CaclTP", "(", "pred", ",", "label", ",", "RS", ".", "num_classes", ")", "\n", "TP_meter", ".", "update", "(", "TP", ")", "\n", "pred_meter", ".", "update", "(", "pred_hist", ")", "\n", "label_meter", ".", "update", "(", "label_hist", ")", "\n", "Union_meter", ".", "update", "(", "union_hist", ")", "\n", "print", "(", "'Eval num %d/%d, Acc %.2f'", "%", "(", "vi", ",", "len", "(", "pred_loader", ")", ",", "acc", "*", "100", ")", ")", "\n", "if", "output_info", ":", "\n", "            ", "f_out", ".", "write", "(", "'Eval num %d/%d, Acc %.2f\\n'", "%", "(", "vi", ",", "len", "(", "pred_loader", ")", ",", "acc", "*", "100", ")", ")", "\n", "\n", "", "", "precision", "=", "TP_meter", ".", "sum", "/", "(", "label_meter", ".", "sum", "+", "1e-10", ")", "+", "1e-10", "\n", "recall", "=", "TP_meter", ".", "sum", "/", "(", "pred_meter", ".", "sum", "+", "1e-10", ")", "+", "1e-10", "\n", "F1", "=", "[", "stats", ".", "hmean", "(", "[", "pre", ",", "rec", "]", ")", "for", "pre", ",", "rec", "in", "zip", "(", "precision", ",", "recall", ")", "]", "\n", "F1", "=", "np", ".", "array", "(", "F1", ")", "\n", "IoU", "=", "TP_meter", ".", "sum", "/", "Union_meter", ".", "sum", "\n", "IoU", "=", "np", ".", "array", "(", "IoU", ")", "\n", "\n", "print", "(", "output", ".", "shape", ")", "\n", "print", "(", "'Acc %.2f'", "%", "(", "acc_meter", ".", "avg", "*", "100", ")", ")", "\n", "avg_F", "=", "F1", "[", ":", "-", "1", "]", ".", "mean", "(", ")", "\n", "mIoU", "=", "IoU", "[", ":", "-", "1", "]", ".", "mean", "(", ")", "\n", "print", "(", "'Avg F1 %.2f'", "%", "(", "avg_F", "*", "100", ")", ")", "\n", "print", "(", "np", ".", "array2string", "(", "F1", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "print", "(", "'mIoU %.2f'", "%", "(", "mIoU", "*", "100", ")", ")", "\n", "print", "(", "np", ".", "array2string", "(", "IoU", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "if", "output_info", ":", "\n", "        ", "f_out", ".", "write", "(", "'Acc %.2f\\n'", "%", "(", "acc_meter", ".", "avg", "*", "100", ")", ")", "\n", "f_out", ".", "write", "(", "'Avg F1 %.2f\\n'", "%", "(", "avg_F", "*", "100", ")", ")", "\n", "f_out", ".", "write", "(", "np", ".", "array2string", "(", "F1", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "f_out", ".", "write", "(", "'\\nmIoU %.2f\\n'", "%", "(", "mIoU", "*", "100", ")", ")", "\n", "f_out", ".", "write", "(", "np", ".", "array2string", "(", "IoU", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "", "return", "avg_F", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_PD.AccEval": [[150, 179], ["utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "range", "numpy.array", "print", "print", "numpy.array().mean", "print", "len", "outputs[].detach().cpu", "torch.max", "torch.max", "pred.numpy.numpy", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "utils.utils.CaclTP", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "scipy.stats.hmean", "numpy.array2string", "zip", "numpy.array", "outputs[].detach"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.CaclTP", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update"], ["", "def", "AccEval", "(", "outputs", ",", "labels", ")", ":", "\n", "    ", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "TP_meter", "=", "AverageMeter", "(", ")", "\n", "pred_meter", "=", "AverageMeter", "(", ")", "\n", "label_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "vi", "in", "range", "(", "len", "(", "labels", ")", ")", ":", "\n", "        ", "label", "=", "labels", "[", "vi", "]", "\n", "output", "=", "outputs", "[", "vi", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "_", ",", "pred", "=", "torch", ".", "max", "(", "output", ",", "dim", "=", "0", ")", "\n", "pred", "=", "pred", ".", "numpy", "(", ")", "\n", "acc", ",", "_", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_meter", ".", "update", "(", "acc", ")", "\n", "\n", "TP", ",", "pred_hist", ",", "label_hist", "=", "CaclTP", "(", "pred", ",", "label", ",", "RS", ".", "num_classes", ")", "\n", "TP_meter", ".", "update", "(", "TP", ")", "\n", "pred_meter", ".", "update", "(", "pred_hist", ")", "\n", "label_meter", ".", "update", "(", "label_hist", ")", "\n", "\n", "", "precision", "=", "TP_meter", ".", "sum", "/", "(", "label_meter", ".", "sum", "+", "1e-10", ")", "+", "1e-10", "\n", "recall", "=", "TP_meter", ".", "sum", "/", "(", "pred_meter", ".", "sum", "+", "1e-10", ")", "+", "1e-10", "\n", "F1", "=", "[", "stats", ".", "hmean", "(", "[", "pre", ",", "rec", "]", ")", "for", "pre", ",", "rec", "in", "zip", "(", "precision", ",", "recall", ")", "]", "\n", "F1", "=", "np", ".", "array", "(", "F1", ")", "\n", "\n", "print", "(", "'Acc %.2f'", "%", "(", "acc_meter", ".", "avg", "*", "100", ")", ")", "\n", "print", "(", "np", ".", "array2string", "(", "F1", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "avg_F", "=", "np", ".", "array", "(", "F1", "[", ":", "-", "1", "]", ")", ".", "mean", "(", ")", "\n", "print", "(", "avg_F", "*", "100", ")", "\n", "return", "acc_meter", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_PD.main": [[48, 65], ["models.WiCoNet.WiCoNet.cuda", "Net().cuda.load_state_dict", "datasets.PD_WiCo.Loader", "torch.utils.data.DataLoader", "datasets.PD_WiCo.Loader", "torch.utils.data.DataLoader", "utils.loss.CrossEntropyLoss2d().cuda", "torch.optim.SGD", "Train_WiCo_PD.train", "writer.close", "print", "torch.load", "filter", "models.WiCoNet.WiCoNet", "utils.loss.CrossEntropyLoss2d", "Net().cuda.parameters"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.train"], ["def", "main", "(", ")", ":", "\n", "    ", "net", "=", "Net", "(", "5", ",", "num_classes", "=", "PD", ".", "num_classes", "+", "1", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", ".", "cuda", "(", ")", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", "[", "'load_path'", "]", ")", ")", "\n", "\n", "train_set", "=", "PD", ".", "Loader", "(", "args", "[", "'data_dir'", "]", ",", "'train'", ",", "random_crop", "=", "True", ",", "crop_nums", "=", "args", "[", "'crop_nums'", "]", ",", "random_flip", "=", "True", ",", "\n", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", "\n", "train_loader", "=", "DataLoader", "(", "train_set", ",", "batch_size", "=", "args", "[", "'train_batch_size'", "]", ",", "num_workers", "=", "args", "[", "'num_workers'", "]", ",", "shuffle", "=", "True", ")", "\n", "val_set", "=", "PD", ".", "Loader", "(", "args", "[", "'data_dir'", "]", ",", "'val'", ",", "sliding_crop", "=", "True", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", "\n", "val_loader", "=", "DataLoader", "(", "val_set", ",", "batch_size", "=", "args", "[", "'val_batch_size'", "]", ",", "num_workers", "=", "args", "[", "'num_workers'", "]", ",", "shuffle", "=", "False", ")", "\n", "\n", "criterion", "=", "CrossEntropyLoss2d", "(", "ignore_index", "=", "0", ")", ".", "cuda", "(", ")", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "net", ".", "parameters", "(", ")", ")", ",", "lr", "=", "args", "[", "'lr'", "]", ",", "\n", "weight_decay", "=", "args", "[", "'weight_decay'", "]", ",", "momentum", "=", "args", "[", "'momentum'", "]", ",", "nesterov", "=", "True", ")", "\n", "\n", "train", "(", "train_loader", ",", "net", ",", "criterion", ",", "optimizer", ",", "val_loader", ")", "\n", "writer", ".", "close", "(", ")", "\n", "print", "(", "'Training finished.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_PD.train": [[66, 134], ["time.time", "float", "torch.cuda.empty_cache", "net.train", "time.time", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "enumerate", "Train_WiCo_PD.validate", "print", "len", "len", "Train_WiCo_PD.adjust_learning_rate", "optimizer.zero_grad", "net", "Train_WiCo_PD.calc_alpha", "criterion", "criterion", "loss.backward", "optimizer.step", "labels.cuda().long.cpu().detach().numpy", "outputs.cpu().detach.cpu().detach", "torch.argmax", "preds.numpy.numpy", "utils.utils.AverageMeter", "zip", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "os.path.join", "torch.save", "imgs.cuda().float.cuda().float", "labels.cuda().long.cuda().long", "imgs_s.cuda().float.cuda().float", "labels_s.cuda().long.cuda().long", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "loss.cpu().detach().numpy", "time.time", "print", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "net.state_dict", "labels.cuda().long.cpu().detach", "outputs.cpu().detach.cpu", "imgs.cuda().float.cuda", "labels.cuda().long.cuda", "imgs_s.cuda().float.cuda", "labels_s.cuda().long.cuda", "loss.cpu().detach", "time.time", "labels.cuda().long.cpu", "len", "loss.cpu"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.train", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.validate", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.adjust_learning_rate", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.calc_alpha", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.PolyLR.step", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update"], ["", "def", "train", "(", "train_loader", ",", "net", ",", "criterion", ",", "optimizer", ",", "val_loader", ")", ":", "\n", "    ", "bestaccT", "=", "0", "\n", "bestaccV", "=", "0.5", "\n", "bestloss", "=", "1", "\n", "curr_epoch", "=", "0", "\n", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "all_iters", "=", "float", "(", "len", "(", "train_loader", ")", "*", "args", "[", "'epochs'", "]", ")", "\n", "while", "True", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "net", ".", "train", "(", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "train_loss", "=", "AverageMeter", "(", ")", "\n", "\n", "curr_iter", "=", "curr_epoch", "*", "len", "(", "train_loader", ")", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "running_iter", "=", "curr_iter", "+", "i", "+", "1", "\n", "adjust_learning_rate", "(", "optimizer", ",", "running_iter", ",", "all_iters", ")", "\n", "imgs_s", ",", "labels_s", ",", "imgs", ",", "labels", "=", "data", "\n", "if", "args", "[", "'gpu'", "]", ":", "\n", "                ", "imgs", "=", "imgs", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "imgs_s", "=", "imgs_s", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "labels_s", "=", "labels_s", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", ",", "aux", "=", "net", "(", "imgs_s", ",", "imgs", ")", "\n", "\n", "alpha", "=", "calc_alpha", "(", "running_iter", ",", "all_iters", ")", "\n", "main_loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "aux_loss", "=", "criterion", "(", "aux", ",", "labels_s", ")", "\n", "loss", "=", "main_loss", "+", "alpha", "*", "aux_loss", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "outputs", "=", "outputs", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "preds", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "preds", "=", "preds", ".", "numpy", "(", ")", "\n", "# batch_valid_sum = 0", "\n", "acc_curr_meter", "=", "AverageMeter", "(", ")", "\n", "for", "(", "pred", ",", "label", ")", "in", "zip", "(", "preds", ",", "labels", ")", ":", "\n", "                ", "acc", ",", "valid_sum", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_curr_meter", ".", "update", "(", "acc", ")", "\n", "", "acc_meter", ".", "update", "(", "acc_curr_meter", ".", "avg", ")", "\n", "train_loss", ".", "update", "(", "loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "curr_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "if", "(", "i", "+", "1", ")", "%", "args", "[", "'print_freq'", "]", "==", "0", ":", "\n", "                ", "print", "(", "'[epoch %d] [iter %d / %d %.1fs] [lr %f] [train loss %.4f acc %.2f]'", "%", "(", "\n", "curr_epoch", ",", "i", "+", "1", ",", "len", "(", "train_loader", ")", ",", "curr_time", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "train_loss", ".", "val", ",", "acc_meter", ".", "val", "*", "100", ")", ")", "\n", "writer", ".", "add_scalar", "(", "'train loss'", ",", "train_loss", ".", "val", ",", "running_iter", ")", "\n", "writer", ".", "add_scalar", "(", "'train accuracy'", ",", "acc_meter", ".", "val", ",", "running_iter", ")", "\n", "writer", ".", "add_scalar", "(", "'lr'", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "running_iter", ")", "\n", "\n", "", "", "acc_v", ",", "loss_v", "=", "validate", "(", "val_loader", ",", "net", ",", "criterion", ",", "curr_epoch", ")", "\n", "if", "acc_meter", ".", "avg", ">", "bestaccT", ":", "bestaccT", "=", "acc_meter", ".", "avg", "\n", "if", "acc_v", ">", "bestaccV", ":", "\n", "            ", "bestaccV", "=", "acc_v", "\n", "bestloss", "=", "loss_v", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'chkpt_dir'", "]", ",", "NET_NAME", "+", "'_%de_OA%.2f.pth'", "%", "(", "curr_epoch", ",", "acc_v", "*", "100", ")", ")", "\n", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "", "print", "(", "'Total time: %.1fs Best rec: Train %.2f, Val %.2f, Val_loss %.4f'", "%", "(", "time", ".", "time", "(", ")", "-", "begin_time", ",", "bestaccT", "*", "100", ",", "bestaccV", "*", "100", ",", "bestloss", ")", ")", "\n", "curr_epoch", "+=", "1", "\n", "if", "curr_epoch", ">=", "args", "[", "'epochs'", "]", ":", "\n", "            ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_PD.validate": [[135, 177], ["net.eval", "torch.cuda.empty_cache", "time.time", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "enumerate", "print", "writer.add_scalar", "writer.add_scalar", "utils.utils.AverageMeter.update", "outputs.cpu().detach.cpu().detach", "labels.cuda().long.cpu().detach().numpy", "torch.argmax", "preds.numpy.numpy", "zip", "time.time", "utils.utils.AverageMeter.average", "utils.utils.AverageMeter.average", "imgs.cuda().float.cuda().float", "labels.cuda().long.cuda().long", "imgs_s.cuda().float.cuda().float", "torch.no_grad", "net", "criterion", "criterion.cpu().detach().numpy", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "datasets.PD_WiCo.Index2Color", "os.path.join", "skimage.io.imsave", "print", "outputs.cpu().detach.cpu", "labels.cuda().long.cpu().detach", "utils.utils.AverageMeter.average", "imgs.cuda().float.cuda", "labels.cuda().long.cuda", "imgs_s.cuda().float.cuda", "criterion.cpu().detach", "utils.utils.AverageMeter.average", "labels.cuda().long.cpu", "criterion.cpu"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Index2Color", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average"], ["", "", "", "def", "validate", "(", "val_loader", ",", "net", ",", "criterion", ",", "curr_epoch", ")", ":", "\n", "# the following code is written assuming that batch size is 1", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "val_loss", "=", "AverageMeter", "(", ")", "\n", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "vi", ",", "data", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "        ", "imgs_s", ",", "labels_s", ",", "imgs", ",", "labels", "=", "data", "\n", "\n", "if", "args", "[", "'gpu'", "]", ":", "\n", "            ", "imgs", "=", "imgs", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "imgs_s", "=", "imgs_s", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", ",", "_", "=", "net", "(", "imgs_s", ",", "imgs", ")", "#", "\n", "loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "", "val_loss", ".", "update", "(", "loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "outputs", "=", "outputs", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "preds", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "preds", "=", "preds", ".", "numpy", "(", ")", "\n", "for", "(", "pred", ",", "label", ")", "in", "zip", "(", "preds", ",", "labels", ")", ":", "\n", "            ", "acc", ",", "valid_sum", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_meter", ".", "update", "(", "acc", ")", "\n", "", "if", "args", "[", "'save_pred'", "]", "and", "vi", "==", "0", ":", "\n", "            ", "pred_color", "=", "PD", ".", "Index2Color", "(", "preds", "[", "0", "]", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'pred_dir'", "]", ",", "NET_NAME", "+", "'.png'", ")", "\n", "io", ".", "imsave", "(", "pred_path", ",", "pred_color", ")", "\n", "print", "(", "'Prediction saved!'", ")", "\n", "\n", "", "", "curr_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "print", "(", "'%.1fs Val loss: %.2f Accuracy: %.2f'", "%", "(", "curr_time", ",", "val_loss", ".", "average", "(", ")", ",", "acc_meter", ".", "average", "(", ")", "*", "100", ")", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'val_loss'", ",", "val_loss", ".", "average", "(", ")", ",", "curr_epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'val_Accuracy'", ",", "acc_meter", ".", "average", "(", ")", ",", "curr_epoch", ")", "\n", "\n", "return", "acc_meter", ".", "avg", ",", "val_loss", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_PD.calc_alpha": [[178, 181], ["float"], "function", ["None"], ["", "def", "calc_alpha", "(", "curr_iter", ",", "all_iters", ",", "weight", "=", "1.0", ")", ":", "\n", "    ", "r", "=", "(", "1.0", "-", "float", "(", "curr_iter", ")", "/", "all_iters", ")", "**", "2.0", "\n", "return", "weight", "*", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_PD.adjust_learning_rate": [[182, 188], ["float"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "curr_iter", ",", "all_iter", ")", ":", "\n", "    ", "scale_running_lr", "=", "(", "(", "1.", "-", "float", "(", "curr_iter", ")", "/", "all_iter", ")", "**", "args", "[", "'lr_decay_power'", "]", ")", "\n", "running_lr", "=", "args", "[", "'lr'", "]", "*", "scale_running_lr", "\n", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "running_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_BLU.norm_gray": [[36, 42], ["y.astype", "numpy.min", "numpy.max"], "function", ["None"], ["def", "norm_gray", "(", "x", ",", "out_range", "=", "(", "0", ",", "255", ")", ")", ":", "\n", "# x=x*(x>0)", "\n", "    ", "domain", "=", "np", ".", "min", "(", "x", ")", ",", "np", ".", "max", "(", "x", ")", "\n", "y", "=", "(", "x", "-", "(", "domain", "[", "1", "]", "+", "domain", "[", "0", "]", ")", "/", "2", ")", "/", "(", "domain", "[", "1", "]", "-", "domain", "[", "0", "]", "+", "1e-10", ")", "\n", "y", "=", "y", "*", "(", "out_range", "[", "1", "]", "-", "out_range", "[", "0", "]", ")", "+", "(", "out_range", "[", "1", "]", "+", "out_range", "[", "0", "]", ")", "/", "2", "\n", "return", "y", ".", "astype", "(", "'uint8'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_BLU.draw_rectangle": [[44, 58], ["cv2.rectangle", "cv2.putText", "cv2.putText"], "function", ["None"], ["", "def", "draw_rectangle", "(", "img", ",", "pos", "=", "'boundary'", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "thick", "=", "2", ",", "text", "=", "'context window'", ")", ":", "\n", "    ", "h", ",", "w", ",", "c", "=", "img", ".", "shape", "\n", "if", "pos", "==", "'boundary'", ":", "\n", "        ", "start_pos", "=", "(", "0", ",", "0", ")", "\n", "end_pos", "=", "(", "h", "-", "1", ",", "w", "-", "1", ")", "\n", "", "elif", "pos", "==", "'center'", ":", "\n", "        ", "start_pos", "=", "(", "h", "//", "2", "-", "64", ",", "w", "//", "2", "-", "64", ")", "\n", "end_pos", "=", "(", "h", "//", "2", "+", "64", ",", "w", "//", "2", "+", "64", ")", "\n", "", "cv2", ".", "rectangle", "(", "img", ",", "start_pos", ",", "end_pos", ",", "color", ",", "thick", ")", "\n", "if", "pos", "==", "'boundary'", ":", "\n", "        ", "cv2", ".", "putText", "(", "img", ",", "text", ",", "(", "start_pos", "[", "0", "]", "+", "15", ",", "start_pos", "[", "1", "]", "+", "15", ")", ",", "cv2", ".", "FONT_HERSHEY_PLAIN", ",", "1.2", ",", "color", ")", "\n", "", "elif", "pos", "==", "'center'", ":", "\n", "        ", "cv2", ".", "putText", "(", "img", ",", "text", ",", "(", "start_pos", "[", "0", "]", "-", "24", ",", "start_pos", "[", "1", "]", "-", "5", ")", ",", "cv2", ".", "FONT_HERSHEY_PLAIN", ",", "1.2", ",", "color", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_BLU.main": [[60, 75], ["models.WiCoNet.WiCoNet.cuda", "net.cuda.load_state_dict", "net.cuda.cuda", "net.cuda.eval", "print", "os.path.join", "os.path.join", "open", "datasets.BLU_WiCo.Loader", "torch.utils.data.DataLoader", "Eval_WiCo_BLU.predict", "open.close", "torch.load", "torch.load", "os.path.exists", "os.makedirs", "models.WiCoNet.WiCoNet"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.predict"], ["", "def", "main", "(", ")", ":", "\n", "    ", "net", "=", "Net", "(", "3", ",", "num_classes", "=", "BLU", ".", "num_classes", "+", "1", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", ".", "cuda", "(", ")", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", "[", "'load_path'", "]", ")", ")", "# , strict = False", "\n", "net", "=", "net", ".", "cuda", "(", ")", "\n", "net", ".", "eval", "(", ")", "\n", "print", "(", "NET_NAME", "+", "' Model loaded.'", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'data_dir'", "]", ",", "'Eval'", ",", "NET_NAME", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "pred_path", ")", ":", "os", ".", "makedirs", "(", "pred_path", ")", "\n", "info_txt_path", "=", "os", ".", "path", ".", "join", "(", "pred_path", ",", "'info.txt'", ")", "\n", "f", "=", "open", "(", "info_txt_path", ",", "'w+'", ")", "\n", "\n", "val_set", "=", "BLU", ".", "Loader", "(", "args", "[", "'data_dir'", "]", ",", "'test'", ",", "sliding_crop", "=", "True", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", "\n", "val_loader", "=", "DataLoader", "(", "val_set", ",", "batch_size", "=", "args", "[", "'val_batch_size'", "]", ",", "num_workers", "=", "4", ",", "shuffle", "=", "False", ")", "\n", "predict", "(", "net", ",", "val_loader", ",", "pred_path", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_BLU.predict": [[77, 162], ["utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "enumerate", "numpy.array", "numpy.array", "print", "print", "np.array.mean", "np.array.mean", "print", "print", "print", "print", "output.detach().cpu.detach().cpu", "torch.argmax", "torch.argmax", "pred.numpy().squeeze.numpy().squeeze", "label.cuda().float.detach().cpu().numpy", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "datasets.BLU_WiCo.Index2Color", "img.cuda().float.detach().cpu().numpy().squeeze().transpose", "Eval_WiCo_BLU.norm_gray", "os.path.join", "skimage.io.imsave", "utils.utils.CaclTP", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "print", "scipy.stats.hmean", "numpy.array2string", "numpy.array2string", "f_out.write", "f_out.write", "f_out.write", "f_out.write", "f_out.write", "torch.no_grad", "torch.no_grad", "net", "norm_gray.numpy().squeeze", "Eval_WiCo_BLU.norm_gray", "cv2.applyColorMap", "os.path.join", "skimage.io.imsave", "f_out.write", "zip", "numpy.array2string", "numpy.array2string", "img_s.cuda().float.cuda().float", "img.cuda().float.cuda().float", "label.cuda().float.cuda().float", "output.detach().cpu.detach", "pred.numpy().squeeze.numpy", "torch.softmax", "label.cuda().float.detach().cpu", "img.cuda().float.detach().cpu().numpy().squeeze", "norm_gray.numpy", "len", "img_s.cuda().float.cuda", "img.cuda().float.cuda", "label.cuda().float.cuda", "label.cuda().float.detach", "img.cuda().float.detach().cpu().numpy", "len", "img.cuda().float.detach().cpu", "img.cuda().float.detach"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Index2Color", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.norm_gray", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.CaclTP", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.norm_gray"], ["", "def", "predict", "(", "net", ",", "pred_loader", ",", "pred_path", ",", "f_out", "=", "None", ")", ":", "\n", "    ", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "TP_meter", "=", "AverageMeter", "(", ")", "\n", "pred_meter", "=", "AverageMeter", "(", ")", "\n", "label_meter", "=", "AverageMeter", "(", ")", "\n", "Union_meter", "=", "AverageMeter", "(", ")", "\n", "output_info", "=", "f_out", "is", "not", "None", "\n", "\n", "for", "vi", ",", "data", "in", "enumerate", "(", "pred_loader", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "img_s", ",", "_", ",", "img", ",", "label", "=", "data", "\n", "if", "args", "[", "'gpu'", "]", ":", "\n", "                ", "img_s", "=", "img_s", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "img", "=", "img", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "label", "=", "label", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "\n", "", "output", ",", "aux", "=", "net", "(", "img_s", ",", "img", ")", "#", "\n", "\n", "", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "pred", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "pred", "=", "pred", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "if", "args", "[", "'s_class'", "]", ":", "\n", "            ", "class_map", "=", "F", ".", "softmax", "(", "output", ",", "dim", "=", "1", ")", "[", ":", ",", "args", "[", "'s_class'", "]", ",", ":", ",", ":", "]", "\n", "class_map", "=", "class_map", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "class_map", "=", "norm_gray", "(", "class_map", ")", "\n", "\n", "", "label", "=", "label", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "acc", ",", "_", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_meter", ".", "update", "(", "acc", ")", "\n", "pred_color", "=", "BLU", ".", "Index2Color", "(", "pred", ")", "\n", "img", "=", "img", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "img", "=", "norm_gray", "(", "img", ")", "\n", "# img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)", "\n", "# img = draw_rectangle(img)", "\n", "# img = draw_rectangle(img, pos='center', color=(0, 255, 255), thick=2, text='local window')", "\n", "# aux = torch.argmax(aux.detach().cpu(), dim=1)", "\n", "# aux = aux.numpy().squeeze()", "\n", "# aux_color = BLU.Index2Color(aux)", "\n", "# label_color = BLU.Index2Color(label).squeeze()", "\n", "pred_name", "=", "os", ".", "path", ".", "join", "(", "pred_path", ",", "'%d_WiC.png'", "%", "vi", ")", "\n", "# img_name = os.path.join(pred_path, '%d_img.png'%vi)", "\n", "# aux_name = os.path.join(pred_path, '%d_aux.png'%vi)", "\n", "# img_s_name = os.path.join(pred_path, '%d_img_s.png'%vi)", "\n", "# label_name = os.path.join(pred_path, '%d_label.png'%vi)", "\n", "io", ".", "imsave", "(", "pred_name", ",", "pred_color", ")", "\n", "# cv2.imwrite(img_name, img)", "\n", "# io.imsave(label_name, label_color)", "\n", "if", "args", "[", "'s_class'", "]", ":", "\n", "            ", "saliency_map", "=", "cv2", ".", "applyColorMap", "(", "class_map", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "pred_name", "=", "os", ".", "path", ".", "join", "(", "pred_path", ",", "'%d_saliency.png'", "%", "vi", ")", "\n", "saliency_map", "=", "(", "img", "*", "0.5", "+", "saliency_map", "*", "0.5", ")", ".", "astype", "(", "'uint8'", ")", "\n", "io", ".", "imsave", "(", "pred_name", ",", "saliency_map", ")", "\n", "", "TP", ",", "pred_hist", ",", "label_hist", ",", "union_hist", "=", "CaclTP", "(", "pred", ",", "label", ",", "BLU", ".", "num_classes", ")", "\n", "TP_meter", ".", "update", "(", "TP", ")", "\n", "pred_meter", ".", "update", "(", "pred_hist", ")", "\n", "label_meter", ".", "update", "(", "label_hist", ")", "\n", "Union_meter", ".", "update", "(", "union_hist", ")", "\n", "print", "(", "'Eval num %d/%d, Acc %.2f'", "%", "(", "vi", ",", "len", "(", "pred_loader", ")", ",", "acc", "*", "100", ")", ")", "\n", "if", "output_info", ":", "\n", "            ", "f_out", ".", "write", "(", "'Eval num %d/%d, Acc %.2f\\n'", "%", "(", "vi", ",", "len", "(", "pred_loader", ")", ",", "acc", "*", "100", ")", ")", "\n", "\n", "", "", "precision", "=", "TP_meter", ".", "sum", "/", "(", "label_meter", ".", "sum", "+", "1e-10", ")", "+", "1e-10", "\n", "recall", "=", "TP_meter", ".", "sum", "/", "(", "pred_meter", ".", "sum", "+", "1e-10", ")", "+", "1e-10", "\n", "F1", "=", "[", "stats", ".", "hmean", "(", "[", "pre", ",", "rec", "]", ")", "for", "pre", ",", "rec", "in", "zip", "(", "precision", ",", "recall", ")", "]", "\n", "F1", "=", "np", ".", "array", "(", "F1", ")", "\n", "IoU", "=", "TP_meter", ".", "sum", "/", "Union_meter", ".", "sum", "\n", "IoU", "=", "np", ".", "array", "(", "IoU", ")", "\n", "\n", "print", "(", "output", ".", "shape", ")", "\n", "print", "(", "'Acc %.2f'", "%", "(", "acc_meter", ".", "avg", "*", "100", ")", ")", "\n", "avg_F", "=", "F1", ".", "mean", "(", ")", "\n", "mIoU", "=", "IoU", ".", "mean", "(", ")", "\n", "print", "(", "'Avg F1 %.2f'", "%", "(", "avg_F", "*", "100", ")", ")", "\n", "print", "(", "np", ".", "array2string", "(", "F1", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "print", "(", "'mIoU %.2f'", "%", "(", "mIoU", "*", "100", ")", ")", "\n", "print", "(", "np", ".", "array2string", "(", "IoU", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "if", "output_info", ":", "\n", "        ", "f_out", ".", "write", "(", "'Acc %.2f\\n'", "%", "(", "acc_meter", ".", "avg", "*", "100", ")", ")", "\n", "f_out", ".", "write", "(", "'Avg F1 %.2f\\n'", "%", "(", "avg_F", "*", "100", ")", ")", "\n", "f_out", ".", "write", "(", "\n", "np", ".", "array2string", "(", "F1", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "f_out", ".", "write", "(", "'\\nmIoU %.2f\\n'", "%", "(", "mIoU", "*", "100", ")", ")", "\n", "f_out", ".", "write", "(", "\n", "np", ".", "array2string", "(", "IoU", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "", "return", "avg_F", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.main": [[51, 68], ["models.WiCoNet.WiCoNet.cuda", "datasets.GID_WiCo.Loader", "torch.utils.data.DataLoader", "datasets.GID_WiCo.Loader", "torch.utils.data.DataLoader", "utils.loss.CrossEntropyLoss2d().cuda", "torch.optim.SGD", "Train_WiCo_GID.train", "writer.close", "print", "filter", "models.WiCoNet.WiCoNet", "utils.loss.CrossEntropyLoss2d", "Net().cuda.parameters"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.train"], ["def", "main", "(", ")", ":", "\n", "    ", "net", "=", "Net", "(", "4", ",", "num_classes", "=", "GID", ".", "num_classes", "+", "1", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "\n", "size_local", "=", "args", "[", "'size_local'", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "train_set", "=", "GID", ".", "Loader", "(", "args", "[", "'data_dir'", "]", ",", "'train'", ",", "random_crop", "=", "True", ",", "crop_nums", "=", "args", "[", "'crop_nums'", "]", ",", "random_flip", "=", "True", ",", "\n", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", "\n", "train_loader", "=", "DataLoader", "(", "train_set", ",", "batch_size", "=", "args", "[", "'train_batch_size'", "]", ",", "num_workers", "=", "args", "[", "'num_workers'", "]", ",", "shuffle", "=", "True", ")", "\n", "val_set", "=", "GID", ".", "Loader", "(", "args", "[", "'data_dir'", "]", ",", "'val'", ",", "sliding_crop", "=", "True", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", "\n", "val_loader", "=", "DataLoader", "(", "val_set", ",", "batch_size", "=", "args", "[", "'val_batch_size'", "]", ",", "num_workers", "=", "args", "[", "'num_workers'", "]", ",", "shuffle", "=", "False", ")", "\n", "\n", "criterion", "=", "CrossEntropyLoss2d", "(", "ignore_index", "=", "0", ")", ".", "cuda", "(", ")", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "net", ".", "parameters", "(", ")", ")", ",", "lr", "=", "args", "[", "'lr'", "]", ",", "\n", "weight_decay", "=", "args", "[", "'weight_decay'", "]", ",", "momentum", "=", "args", "[", "'momentum'", "]", ",", "nesterov", "=", "True", ")", "\n", "\n", "train", "(", "train_loader", ",", "net", ",", "criterion", ",", "optimizer", ",", "val_loader", ")", "\n", "writer", ".", "close", "(", ")", "\n", "print", "(", "'Training finished.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.train": [[70, 138], ["time.time", "float", "torch.cuda.empty_cache", "net.train", "time.time", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "enumerate", "Train_WiCo_GID.validate", "print", "len", "len", "Train_WiCo_GID.adjust_learning_rate", "optimizer.zero_grad", "net", "Train_WiCo_GID.calc_alpha", "criterion", "criterion", "loss.backward", "optimizer.step", "labels.cuda().long.cpu().detach().numpy", "outputs.cpu().detach.cpu().detach", "torch.argmax", "preds.numpy.numpy", "utils.utils.AverageMeter", "zip", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "os.path.join", "torch.save", "imgs.cuda().float.cuda().float", "labels.cuda().long.cuda().long", "imgs_s.cuda().float.cuda().float", "labels_s.cuda().long.cuda().long", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "loss.cpu().detach().numpy", "time.time", "print", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "net.state_dict", "labels.cuda().long.cpu().detach", "outputs.cpu().detach.cpu", "imgs.cuda().float.cuda", "labels.cuda().long.cuda", "imgs_s.cuda().float.cuda", "labels_s.cuda().long.cuda", "loss.cpu().detach", "time.time", "labels.cuda().long.cpu", "len", "loss.cpu"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.train", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.validate", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.adjust_learning_rate", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.calc_alpha", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.PolyLR.step", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update"], ["", "def", "train", "(", "train_loader", ",", "net", ",", "criterion", ",", "optimizer", ",", "val_loader", ")", ":", "\n", "    ", "bestaccT", "=", "0", "\n", "bestaccV", "=", "0.5", "\n", "bestloss", "=", "1", "\n", "curr_epoch", "=", "0", "\n", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "all_iters", "=", "float", "(", "len", "(", "train_loader", ")", "*", "args", "[", "'epochs'", "]", ")", "\n", "while", "True", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "net", ".", "train", "(", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "train_loss", "=", "AverageMeter", "(", ")", "\n", "\n", "curr_iter", "=", "curr_epoch", "*", "len", "(", "train_loader", ")", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "running_iter", "=", "curr_iter", "+", "i", "+", "1", "\n", "adjust_learning_rate", "(", "optimizer", ",", "running_iter", ",", "all_iters", ")", "\n", "imgs_s", ",", "labels_s", ",", "imgs", ",", "labels", "=", "data", "\n", "if", "args", "[", "'gpu'", "]", ":", "\n", "                ", "imgs", "=", "imgs", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "imgs_s", "=", "imgs_s", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "labels_s", "=", "labels_s", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", ",", "aux", "=", "net", "(", "imgs_s", ",", "imgs", ")", "\n", "\n", "alpha", "=", "calc_alpha", "(", "running_iter", ",", "all_iters", ")", "\n", "main_loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "aux_loss", "=", "criterion", "(", "aux", ",", "labels_s", ")", "\n", "loss", "=", "main_loss", "+", "alpha", "*", "aux_loss", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "outputs", "=", "outputs", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "preds", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "preds", "=", "preds", ".", "numpy", "(", ")", "\n", "# batch_valid_sum = 0", "\n", "acc_curr_meter", "=", "AverageMeter", "(", ")", "\n", "for", "(", "pred", ",", "label", ")", "in", "zip", "(", "preds", ",", "labels", ")", ":", "\n", "                ", "acc", ",", "valid_sum", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_curr_meter", ".", "update", "(", "acc", ")", "\n", "", "acc_meter", ".", "update", "(", "acc_curr_meter", ".", "avg", ")", "\n", "train_loss", ".", "update", "(", "loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "curr_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "args", "[", "'print_freq'", "]", "==", "0", ":", "\n", "                ", "print", "(", "'[epoch %d] [iter %d / %d %.1fs] [lr %f] [train loss %.4f acc %.2f]'", "%", "(", "\n", "curr_epoch", ",", "i", "+", "1", ",", "len", "(", "train_loader", ")", ",", "curr_time", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "train_loss", ".", "val", ",", "acc_meter", ".", "val", "*", "100", ")", ")", "\n", "writer", ".", "add_scalar", "(", "'train loss'", ",", "train_loss", ".", "val", ",", "running_iter", ")", "\n", "writer", ".", "add_scalar", "(", "'train accuracy'", ",", "acc_meter", ".", "val", ",", "running_iter", ")", "\n", "writer", ".", "add_scalar", "(", "'lr'", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "running_iter", ")", "\n", "\n", "", "", "acc_v", ",", "loss_v", "=", "validate", "(", "val_loader", ",", "net", ",", "criterion", ",", "curr_epoch", ")", "\n", "if", "acc_meter", ".", "avg", ">", "bestaccT", ":", "bestaccT", "=", "acc_meter", ".", "avg", "\n", "if", "acc_v", ">", "bestaccV", ":", "\n", "            ", "bestaccV", "=", "acc_v", "\n", "bestloss", "=", "loss_v", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'chkpt_dir'", "]", ",", "NET_NAME", "+", "'_%de_OA%.2f.pth'", "%", "(", "curr_epoch", ",", "acc_v", "*", "100", ")", ")", "\n", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "", "print", "(", "'Total time: %.1fs Best rec: Train %.2f, Val %.2f, Val_loss %.4f'", "%", "(", "time", ".", "time", "(", ")", "-", "begin_time", ",", "bestaccT", "*", "100", ",", "bestaccV", "*", "100", ",", "bestloss", ")", ")", "\n", "curr_epoch", "+=", "1", "\n", "if", "curr_epoch", ">=", "args", "[", "'epochs'", "]", ":", "\n", "            ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.validate": [[140, 183], ["net.eval", "torch.cuda.empty_cache", "time.time", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "enumerate", "print", "writer.add_scalar", "writer.add_scalar", "utils.utils.AverageMeter.update", "outputs.cpu().detach.cpu().detach", "labels.cuda().long.cpu().detach().numpy", "torch.argmax", "preds.numpy.numpy", "zip", "time.time", "utils.utils.AverageMeter.average", "utils.utils.AverageMeter.average", "imgs.cuda().float.cuda().float", "labels.cuda().long.cuda().long", "imgs_s.cuda().float.cuda().float", "torch.no_grad", "net", "criterion", "criterion.cpu().detach().numpy", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "datasets.GID_WiCo.Index2Color", "os.path.join", "skimage.io.imsave", "print", "outputs.cpu().detach.cpu", "labels.cuda().long.cpu().detach", "utils.utils.AverageMeter.average", "imgs.cuda().float.cuda", "labels.cuda().long.cuda", "imgs_s.cuda().float.cuda", "criterion.cpu().detach", "utils.utils.AverageMeter.average", "labels.cuda().long.cpu", "criterion.cpu"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Index2Color", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average"], ["", "", "", "def", "validate", "(", "val_loader", ",", "net", ",", "criterion", ",", "curr_epoch", ")", ":", "\n", "# the following code is written assuming that batch size is 1", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "val_loss", "=", "AverageMeter", "(", ")", "\n", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "vi", ",", "data", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "        ", "imgs_s", ",", "labels_s", ",", "imgs", ",", "labels", "=", "data", "\n", "\n", "if", "args", "[", "'gpu'", "]", ":", "\n", "            ", "imgs", "=", "imgs", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "imgs_s", "=", "imgs_s", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", ",", "_", "=", "net", "(", "imgs_s", ",", "imgs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "", "val_loss", ".", "update", "(", "loss", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "outputs", "=", "outputs", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "preds", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "preds", "=", "preds", ".", "numpy", "(", ")", "\n", "for", "(", "pred", ",", "label", ")", "in", "zip", "(", "preds", ",", "labels", ")", ":", "\n", "            ", "acc", ",", "valid_sum", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_meter", ".", "update", "(", "acc", ")", "\n", "\n", "", "if", "args", "[", "'save_pred'", "]", "and", "vi", "==", "0", ":", "\n", "            ", "pred_color", "=", "GID", ".", "Index2Color", "(", "preds", "[", "0", "]", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'pred_dir'", "]", ",", "NET_NAME", "+", "'.png'", ")", "\n", "io", ".", "imsave", "(", "pred_path", ",", "pred_color", ")", "\n", "print", "(", "'Prediction saved!'", ")", "\n", "\n", "", "", "curr_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "print", "(", "'%.1fs Val loss: %.2f Accuracy: %.2f'", "%", "(", "curr_time", ",", "val_loss", ".", "average", "(", ")", ",", "acc_meter", ".", "average", "(", ")", "*", "100", ")", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'val_loss'", ",", "val_loss", ".", "average", "(", ")", ",", "curr_epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'val_Accuracy'", ",", "acc_meter", ".", "average", "(", ")", ",", "curr_epoch", ")", "\n", "\n", "return", "acc_meter", ".", "avg", ",", "val_loss", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.calc_alpha": [[185, 188], ["float"], "function", ["None"], ["", "def", "calc_alpha", "(", "curr_iter", ",", "all_iters", ",", "weight", "=", "1.0", ")", ":", "\n", "    ", "r", "=", "(", "1.0", "-", "float", "(", "curr_iter", ")", "/", "all_iters", ")", "**", "2.0", "\n", "return", "weight", "*", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Train_WiCo_GID.adjust_learning_rate": [[190, 196], ["float"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "curr_iter", ",", "all_iter", ")", ":", "\n", "    ", "scale_running_lr", "=", "(", "(", "1.", "-", "float", "(", "curr_iter", ")", "/", "all_iter", ")", "**", "args", "[", "'lr_decay_power'", "]", ")", "\n", "running_lr", "=", "args", "[", "'lr'", "]", "*", "scale_running_lr", "\n", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "running_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.norm_gray": [[36, 42], ["y.astype", "numpy.min", "numpy.max"], "function", ["None"], ["def", "norm_gray", "(", "x", ",", "out_range", "=", "(", "0", ",", "255", ")", ")", ":", "\n", "# x=x*(x>0)", "\n", "    ", "domain", "=", "np", ".", "min", "(", "x", ")", ",", "np", ".", "max", "(", "x", ")", "\n", "y", "=", "(", "x", "-", "(", "domain", "[", "1", "]", "+", "domain", "[", "0", "]", ")", "/", "2", ")", "/", "(", "domain", "[", "1", "]", "-", "domain", "[", "0", "]", "+", "1e-10", ")", "\n", "y", "=", "y", "*", "(", "out_range", "[", "1", "]", "-", "out_range", "[", "0", "]", ")", "+", "(", "out_range", "[", "1", "]", "+", "out_range", "[", "0", "]", ")", "/", "2", "\n", "return", "y", ".", "astype", "(", "'uint8'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.draw_rectangle": [[44, 58], ["cv2.rectangle", "cv2.putText", "cv2.putText"], "function", ["None"], ["", "def", "draw_rectangle", "(", "img", ",", "pos", "=", "'boundary'", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "thick", "=", "2", ",", "text", "=", "'context window'", ")", ":", "\n", "    ", "h", ",", "w", ",", "c", "=", "img", ".", "shape", "\n", "if", "pos", "==", "'boundary'", ":", "\n", "        ", "start_pos", "=", "(", "0", ",", "0", ")", "\n", "end_pos", "=", "(", "h", "-", "1", ",", "w", "-", "1", ")", "\n", "", "elif", "pos", "==", "'center'", ":", "\n", "        ", "start_pos", "=", "(", "h", "//", "2", "-", "64", ",", "w", "//", "2", "-", "64", ")", "\n", "end_pos", "=", "(", "h", "//", "2", "+", "64", ",", "w", "//", "2", "+", "64", ")", "\n", "", "cv2", ".", "rectangle", "(", "img", ",", "start_pos", ",", "end_pos", ",", "color", ",", "thick", ")", "\n", "if", "pos", "==", "'boundary'", ":", "\n", "        ", "cv2", ".", "putText", "(", "img", ",", "text", ",", "(", "start_pos", "[", "0", "]", "+", "15", ",", "start_pos", "[", "1", "]", "+", "15", ")", ",", "cv2", ".", "FONT_HERSHEY_PLAIN", ",", "1.2", ",", "color", ")", "\n", "", "elif", "pos", "==", "'center'", ":", "\n", "        ", "cv2", ".", "putText", "(", "img", ",", "text", ",", "(", "start_pos", "[", "0", "]", "-", "24", ",", "start_pos", "[", "1", "]", "-", "5", ")", ",", "cv2", ".", "FONT_HERSHEY_PLAIN", ",", "1.2", ",", "color", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.main": [[60, 75], ["models.WiCoNet.WiCoNet.cuda", "net.cuda.load_state_dict", "net.cuda.cuda", "net.cuda.eval", "print", "os.path.join", "os.path.join", "open", "datasets.GID_WiCo.Loader", "torch.utils.data.DataLoader", "Eval_WiCo_GID.predict", "open.close", "torch.load", "torch.load", "os.path.exists", "os.makedirs", "models.WiCoNet.WiCoNet"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.predict"], ["", "def", "main", "(", ")", ":", "\n", "    ", "net", "=", "Net", "(", "4", ",", "num_classes", "=", "GID", ".", "num_classes", "+", "1", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", ".", "cuda", "(", ")", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", "[", "'load_path'", "]", ")", ")", "# , strict = False", "\n", "net", "=", "net", ".", "cuda", "(", ")", "\n", "net", ".", "eval", "(", ")", "\n", "print", "(", "NET_NAME", "+", "' Model loaded.'", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'data_dir'", "]", ",", "'Eval'", ",", "NET_NAME", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "pred_path", ")", ":", "os", ".", "makedirs", "(", "pred_path", ")", "\n", "info_txt_path", "=", "os", ".", "path", ".", "join", "(", "pred_path", ",", "'info.txt'", ")", "\n", "f", "=", "open", "(", "info_txt_path", ",", "'w+'", ")", "\n", "\n", "val_set", "=", "GID", ".", "Loader", "(", "args", "[", "'data_dir'", "]", ",", "'test'", ",", "sliding_crop", "=", "True", ",", "size_context", "=", "args", "[", "'size_context'", "]", ",", "size_local", "=", "args", "[", "'size_local'", "]", ")", "\n", "val_loader", "=", "DataLoader", "(", "val_set", ",", "batch_size", "=", "args", "[", "'val_batch_size'", "]", ",", "num_workers", "=", "4", ",", "shuffle", "=", "False", ")", "\n", "predict", "(", "net", ",", "val_loader", ",", "pred_path", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.predict": [[77, 156], ["utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "enumerate", "numpy.array", "numpy.array", "print", "print", "np.array.mean", "np.array.mean", "print", "print", "print", "print", "output.detach().cpu.detach().cpu", "torch.argmax", "torch.argmax", "pred.numpy().squeeze.numpy().squeeze", "label.cuda().float.detach().cpu().numpy", "utils.utils.accuracy", "utils.utils.AverageMeter.update", "datasets.GID_WiCo.Index2Color", "img.cuda().float.detach().cpu().numpy().squeeze().transpose", "Eval_WiCo_GID.norm_gray", "os.path.join", "skimage.io.imsave", "utils.utils.CaclTP", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "utils.utils.AverageMeter.update", "print", "scipy.stats.hmean", "numpy.array2string", "numpy.array2string", "f_out.write", "f_out.write", "f_out.write", "f_out.write", "f_out.write", "torch.no_grad", "torch.no_grad", "net", "norm_gray.numpy().squeeze", "Eval_WiCo_GID.norm_gray", "cv2.applyColorMap", "os.path.join", "skimage.io.imsave", "f_out.write", "zip", "numpy.array2string", "numpy.array2string", "img_s.cuda().float.cuda().float", "img.cuda().float.cuda().float", "label.cuda().float.cuda().float", "output.detach().cpu.detach", "pred.numpy().squeeze.numpy", "torch.softmax", "label.cuda().float.detach().cpu", "img.cuda().float.detach().cpu().numpy().squeeze", "norm_gray.numpy", "len", "img_s.cuda().float.cuda", "img.cuda().float.cuda", "label.cuda().float.cuda", "label.cuda().float.detach", "img.cuda().float.detach().cpu().numpy", "len", "img.cuda().float.detach().cpu", "img.cuda().float.detach"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Index2Color", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.norm_gray", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.CaclTP", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ggsDing_WiCNet.None.Eval_WiCo_GID.norm_gray"], ["", "def", "predict", "(", "net", ",", "pred_loader", ",", "pred_path", ",", "f_out", "=", "None", ")", ":", "\n", "    ", "acc_meter", "=", "AverageMeter", "(", ")", "\n", "TP_meter", "=", "AverageMeter", "(", ")", "\n", "pred_meter", "=", "AverageMeter", "(", ")", "\n", "label_meter", "=", "AverageMeter", "(", ")", "\n", "Union_meter", "=", "AverageMeter", "(", ")", "\n", "output_info", "=", "f_out", "is", "not", "None", "\n", "\n", "for", "vi", ",", "data", "in", "enumerate", "(", "pred_loader", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "img_s", ",", "_", ",", "img", ",", "label", "=", "data", "\n", "if", "args", "[", "'gpu'", "]", ":", "\n", "                ", "img_s", "=", "img_s", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "img", "=", "img", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "label", "=", "label", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "\n", "", "output", ",", "aux", "=", "net", "(", "img_s", ",", "img", ")", "\n", "\n", "", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "pred", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "pred", "=", "pred", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "if", "args", "[", "'s_class'", "]", ":", "\n", "            ", "class_map", "=", "F", ".", "softmax", "(", "output", ",", "dim", "=", "1", ")", "[", ":", ",", "args", "[", "'s_class'", "]", ",", ":", ",", ":", "]", "\n", "class_map", "=", "class_map", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "class_map", "=", "norm_gray", "(", "class_map", ")", "\n", "\n", "", "label", "=", "label", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "acc", ",", "_", "=", "accuracy", "(", "pred", ",", "label", ")", "\n", "acc_meter", ".", "update", "(", "acc", ")", "\n", "pred_color", "=", "GID", ".", "Index2Color", "(", "pred", ")", "\n", "img", "=", "img", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "img", "=", "norm_gray", "(", "img", ")", "\n", "# img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)", "\n", "# img = draw_rectangle(img)", "\n", "# img = draw_rectangle(img, pos='center', color=(0, 255, 255), thick=2, text='local window')", "\n", "# label_color = GID.Index2Color(label).squeeze()", "\n", "pred_name", "=", "os", ".", "path", ".", "join", "(", "pred_path", ",", "'%d_WiC.png'", "%", "vi", ")", "\n", "io", ".", "imsave", "(", "pred_name", ",", "pred_color", ")", "\n", "# img_name = os.path.join(pred_path, '%d_img.png'%vi)", "\n", "# label_name = os.path.join(pred_path, '%d_label.png'%vi)", "\n", "# io.imsave(label_name, label_color)", "\n", "if", "args", "[", "'s_class'", "]", ":", "\n", "            ", "saliency_map", "=", "cv2", ".", "applyColorMap", "(", "class_map", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "pred_name", "=", "os", ".", "path", ".", "join", "(", "pred_path", ",", "'%d_saliency.png'", "%", "vi", ")", "\n", "saliency_map", "=", "(", "img", "*", "0.5", "+", "saliency_map", "*", "0.5", ")", ".", "astype", "(", "'uint8'", ")", "\n", "io", ".", "imsave", "(", "pred_name", ",", "saliency_map", ")", "\n", "", "TP", ",", "pred_hist", ",", "label_hist", ",", "union_hist", "=", "CaclTP", "(", "pred", ",", "label", ",", "GID", ".", "num_classes", ")", "\n", "TP_meter", ".", "update", "(", "TP", ")", "\n", "pred_meter", ".", "update", "(", "pred_hist", ")", "\n", "label_meter", ".", "update", "(", "label_hist", ")", "\n", "Union_meter", ".", "update", "(", "union_hist", ")", "\n", "print", "(", "'Eval num %d/%d, Acc %.2f'", "%", "(", "vi", ",", "len", "(", "pred_loader", ")", ",", "acc", "*", "100", ")", ")", "\n", "if", "output_info", ":", "\n", "            ", "f_out", ".", "write", "(", "'Eval num %d/%d, Acc %.2f\\n'", "%", "(", "vi", ",", "len", "(", "pred_loader", ")", ",", "acc", "*", "100", ")", ")", "\n", "\n", "", "", "precision", "=", "TP_meter", ".", "sum", "/", "(", "label_meter", ".", "sum", "+", "1e-10", ")", "+", "1e-10", "\n", "recall", "=", "TP_meter", ".", "sum", "/", "(", "pred_meter", ".", "sum", "+", "1e-10", ")", "+", "1e-10", "\n", "F1", "=", "[", "stats", ".", "hmean", "(", "[", "pre", ",", "rec", "]", ")", "for", "pre", ",", "rec", "in", "zip", "(", "precision", ",", "recall", ")", "]", "\n", "F1", "=", "np", ".", "array", "(", "F1", ")", "\n", "IoU", "=", "TP_meter", ".", "sum", "/", "Union_meter", ".", "sum", "\n", "IoU", "=", "np", ".", "array", "(", "IoU", ")", "\n", "\n", "print", "(", "output", ".", "shape", ")", "\n", "print", "(", "'Acc %.2f'", "%", "(", "acc_meter", ".", "avg", "*", "100", ")", ")", "\n", "avg_F", "=", "F1", ".", "mean", "(", ")", "\n", "mIoU", "=", "IoU", ".", "mean", "(", ")", "\n", "print", "(", "'Avg F1 %.2f'", "%", "(", "avg_F", "*", "100", ")", ")", "\n", "print", "(", "np", ".", "array2string", "(", "F1", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "print", "(", "'mIoU %.2f'", "%", "(", "mIoU", "*", "100", ")", ")", "\n", "print", "(", "np", ".", "array2string", "(", "IoU", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "if", "output_info", ":", "\n", "        ", "f_out", ".", "write", "(", "'Acc %.2f\\n'", "%", "(", "acc_meter", ".", "avg", "*", "100", ")", ")", "\n", "f_out", ".", "write", "(", "'Avg F1 %.2f\\n'", "%", "(", "avg_F", "*", "100", ")", ")", "\n", "f_out", ".", "write", "(", "\n", "np", ".", "array2string", "(", "F1", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "f_out", ".", "write", "(", "'\\nmIoU %.2f\\n'", "%", "(", "mIoU", "*", "100", ")", ")", "\n", "f_out", ".", "write", "(", "\n", "np", ".", "array2string", "(", "IoU", "*", "100", ",", "precision", "=", "4", ",", "separator", "=", "', '", ",", "formatter", "=", "{", "'float_kind'", ":", "lambda", "x", ":", "\"%.2f\"", "%", "x", "}", ")", ")", "\n", "", "return", "avg_F", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.crf.dense_crf": [[4, 26], ["numpy.expand_dims", "numpy.append", "pydensecrf.DenseCRF2D", "np.ascontiguousarray.reshape", "numpy.ascontiguousarray", "numpy.ascontiguousarray", "dcrf.DenseCRF2D.setUnaryEnergy", "dcrf.DenseCRF2D.addPairwiseGaussian", "dcrf.DenseCRF2D.addPairwiseBilateral", "dcrf.DenseCRF2D.inference", "numpy.argmax().reshape", "numpy.log", "numpy.argmax", "numpy.array"], "function", ["None"], ["def", "dense_crf", "(", "img", ",", "output_probs", ")", ":", "\n", "    ", "h", "=", "output_probs", ".", "shape", "[", "0", "]", "\n", "w", "=", "output_probs", ".", "shape", "[", "1", "]", "\n", "\n", "output_probs", "=", "np", ".", "expand_dims", "(", "output_probs", ",", "0", ")", "\n", "output_probs", "=", "np", ".", "append", "(", "1", "-", "output_probs", ",", "output_probs", ",", "axis", "=", "0", ")", "\n", "\n", "d", "=", "dcrf", ".", "DenseCRF2D", "(", "w", ",", "h", ",", "2", ")", "\n", "U", "=", "-", "np", ".", "log", "(", "output_probs", ")", "\n", "U", "=", "U", ".", "reshape", "(", "(", "2", ",", "-", "1", ")", ")", "\n", "U", "=", "np", ".", "ascontiguousarray", "(", "U", ")", "\n", "img", "=", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n", "d", ".", "setUnaryEnergy", "(", "U", ")", "\n", "\n", "d", ".", "addPairwiseGaussian", "(", "sxy", "=", "20", ",", "compat", "=", "3", ")", "\n", "d", ".", "addPairwiseBilateral", "(", "sxy", "=", "30", ",", "srgb", "=", "20", ",", "rgbim", "=", "img", ",", "compat", "=", "10", ")", "\n", "\n", "Q", "=", "d", ".", "inference", "(", "5", ")", "\n", "Q", "=", "np", ".", "argmax", "(", "np", ".", "array", "(", "Q", ")", ",", "axis", "=", "0", ")", ".", "reshape", "(", "(", "h", ",", "w", ")", ")", "\n", "\n", "return", "Q", "\n", "", ""]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.eval.eval_net": [[8, 35], ["net.eval", "len", "enumerate", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().long", "torch.from_numpy().unsqueeze().long", "torch.from_numpy().unsqueeze().long", "net", "torch.CrossEntropyLoss", "loss.", "loss.item", "img.cuda.cuda", "label.cuda.cuda", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["def", "eval_net", "(", "net", ",", "dataset", ",", "gpu", "=", "True", ")", ":", "\n", "    ", "\"\"\"Evaluation without the densecrf with the dice coefficient\"\"\"", "\n", "net", ".", "eval", "(", ")", "\n", "tot", "=", "0", "\n", "n", "=", "len", "(", "dataset", ")", "\n", "for", "i", ",", "b", "in", "enumerate", "(", "dataset", ")", ":", "\n", "# img = b[0]", "\n", "# true_mask = b[1]", "\n", "# img = torch.from_numpy(img).unsqueeze(0)", "\n", "# true_mask = torch.from_numpy(true_mask).unsqueeze(0)", "\n", "#", "\n", "# if gpu:", "\n", "#     img = img.cuda()", "\n", "#     true_mask = true_mask.cuda()", "\n", "\n", "        ", "img", "=", "torch", ".", "from_numpy", "(", "b", "[", "0", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", "\n", "label", "=", "torch", ".", "from_numpy", "(", "b", "[", "1", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "long", "(", ")", "\n", "if", "gpu", ":", "\n", "            ", "img", "=", "img", ".", "cuda", "(", ")", "\n", "label", "=", "label", ".", "cuda", "(", ")", "\n", "\n", "", "pred", "=", "net", "(", "img", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "loss", "=", "loss", "(", "pred", ",", "label", ")", "\n", "\n", "tot", "+=", "loss", ".", "item", "(", ")", "\n", "", "return", "tot", "/", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.eval.eval_net_BCE": [[36, 65], ["net.eval", "len", "enumerate", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "net", "net.view", "labels.view", "torch.BCEWithLogitsLoss", "loss.", "loss.item", "img.cuda.cuda", "label.cuda.cuda", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["", "def", "eval_net_BCE", "(", "net", ",", "dataset", ",", "gpu", "=", "True", ")", ":", "\n", "    ", "\"\"\"Evaluation without the densecrf with the dice coefficient\"\"\"", "\n", "net", ".", "eval", "(", ")", "\n", "tot", "=", "0", "\n", "n", "=", "len", "(", "dataset", ")", "\n", "for", "i", ",", "b", "in", "enumerate", "(", "dataset", ")", ":", "\n", "# img = b[0]", "\n", "# true_mask = b[1]", "\n", "# img = torch.from_numpy(img).unsqueeze(0)", "\n", "# true_mask = torch.from_numpy(true_mask).unsqueeze(0)", "\n", "#", "\n", "# if gpu:", "\n", "#     img = img.cuda()", "\n", "#     true_mask = true_mask.cuda()", "\n", "\n", "        ", "img", "=", "torch", ".", "from_numpy", "(", "b", "[", "0", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", "\n", "label", "=", "torch", ".", "from_numpy", "(", "b", "[", "1", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", "\n", "if", "gpu", ":", "\n", "            ", "img", "=", "img", ".", "cuda", "(", ")", "\n", "label", "=", "label", ".", "cuda", "(", ")", "\n", "\n", "", "pred", "=", "net", "(", "img", ")", "\n", "pred_flat", "=", "pred", ".", "view", "(", "-", "1", ")", "\n", "labels_flat", "=", "labels", ".", "view", "(", "-", "1", ")", "\n", "loss", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", "\n", "loss", "=", "loss", "(", "pred_flat", ",", "labels_flat", ")", "\n", "\n", "tot", "+=", "loss", ".", "item", "(", ")", "\n", "", "return", "tot", "/", "n", "\n", "", ""]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.get_ids": [[23, 26], ["os.listdir"], "function", ["None"], ["", "def", "get_ids", "(", "dir", ")", ":", "\n", "    ", "\"\"\"Returns a list of the ids in the directory\"\"\"", "\n", "return", "(", "f", "[", ":", "-", "4", "]", "for", "f", "in", "os", ".", "listdir", "(", "dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.split_ids": [[28, 31], ["range"], "function", ["None"], ["", "def", "split_ids", "(", "ids", ",", "n", "=", "2", ")", ":", "\n", "    ", "\"\"\"Split each id in n, creating n tuples (id, k) for each id\"\"\"", "\n", "return", "(", "(", "id", ",", "i", ")", "for", "i", "in", "range", "(", "n", ")", "for", "id", "in", "ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.to_cropped_imgs": [[33, 38], ["utils.resize_and_crop", "PIL.Image.open", "utils.get_square"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.resize_and_crop", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.get_square"], ["", "def", "to_cropped_imgs", "(", "ids", ",", "dir", ",", "suffix", ",", "scale", ")", ":", "\n", "    ", "\"\"\"From a list of tuples, returns the correct cropped img\"\"\"", "\n", "for", "id", ",", "pos", "in", "ids", ":", "\n", "        ", "im", "=", "resize_and_crop", "(", "Image", ".", "open", "(", "dir", "+", "id", "+", "suffix", ")", ",", "scale", "=", "scale", ")", "\n", "yield", "get_square", "(", "im", ",", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.get_imgs_and_masks": [[39, 65], ["print", "load.DataAug", "print", "list", "data.append", "labels.append", "imgs_switched.append", "labels_index.append", "zip", "numpy.array", "numpy.array", "len", "len", "utils.hwc_to_chw", "load.Color2Index0", "PIL.Image.open", "PIL.Image.open"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.DataAug", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.hwc_to_chw", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.Color2Index0"], ["", "", "def", "get_imgs_and_masks", "(", "ids", ",", "dir_img", ",", "dir_label", ",", "crop_size", ")", ":", "\n", "    ", "\"\"\"Return all the couples (img, mask)\"\"\"", "\n", "data", ",", "labels", "=", "[", "]", ",", "[", "]", "\n", "for", "id", ",", "pos", "in", "ids", ":", "\n", "        ", "fPath", "=", "dir_img", "+", "id", "+", "'.png'", "\n", "lPath", "=", "dir_label", "+", "id", "+", "'.png'", "\n", "data", ".", "append", "(", "np", ".", "array", "(", "Image", ".", "open", "(", "fPath", ")", ")", ")", "\n", "labels", ".", "append", "(", "np", ".", "array", "(", "Image", ".", "open", "(", "lPath", ")", ")", ")", "\n", "", "print", "(", "'%d images loaded.'", "%", "len", "(", "data", ")", ")", "\n", "\n", "data", ",", "labels", "=", "DataAug", "(", "data", ",", "labels", ",", "crop_size", ")", "\n", "print", "(", "'Image augment done. %d Images created.'", "%", "len", "(", "data", ")", ")", "\n", "# need to transform from HWC to CHW", "\n", "# imgs_switched = map(hwc_to_chw, data)", "\n", "imgs_switched", "=", "[", "]", "\n", "for", "im", "in", "data", ":", "\n", "        ", "imgs_switched", ".", "append", "(", "hwc_to_chw", "(", "im", ")", ")", "\n", "# for i in range(data.shape[0]):", "\n", "#     print(data[i].shape)", "\n", "# imgs_normalized = map(normalize, imgs_switched)", "\n", "\n", "", "labels_index", "=", "[", "]", "\n", "for", "label", "in", "labels", ":", "\n", "        ", "labels_index", ".", "append", "(", "Color2Index0", "(", "label", ",", "colormap2label", ")", ")", "\n", "\n", "", "return", "list", "(", "zip", "(", "imgs_switched", ",", "labels_index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.get_binary_imgs_and_masks": [[66, 88], ["print", "load.DataAug_1C", "print", "list", "data.append", "labels.append", "imgs_switched.append", "labels_index.append", "zip", "numpy.array", "numpy.asarray", "len", "len", "numpy.expand_dims", "PIL.Image.open().convert", "PIL.Image.open().convert", "PIL.Image.open", "PIL.Image.open"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.DataAug_1C"], ["", "def", "get_binary_imgs_and_masks", "(", "ids", ",", "dir_img", ",", "dir_label", ",", "crop_size", ")", ":", "\n", "    ", "\"\"\"Return all the couples (img, mask)\"\"\"", "\n", "data", ",", "labels", "=", "[", "]", ",", "[", "]", "\n", "for", "id", ",", "pos", "in", "ids", ":", "\n", "        ", "fPath", "=", "dir_img", "+", "id", "+", "'.png'", "\n", "lPath", "=", "dir_label", "+", "id", "+", "'.png'", "\n", "data", ".", "append", "(", "np", ".", "array", "(", "Image", ".", "open", "(", "fPath", ")", ".", "convert", "(", "\"L\"", ")", ")", ")", "\n", "labels", ".", "append", "(", "np", ".", "asarray", "(", "Image", ".", "open", "(", "lPath", ")", ".", "convert", "(", "\"L\"", ")", ")", ")", "\n", "", "print", "(", "'%d images loaded.'", "%", "len", "(", "data", ")", ")", "\n", "\n", "data", ",", "labels", "=", "DataAug_1C", "(", "data", ",", "labels", ",", "crop_size", ")", "\n", "print", "(", "'Image augment done. %d Images created.'", "%", "len", "(", "data", ")", ")", "\n", "\n", "imgs_switched", "=", "[", "]", "\n", "for", "im", "in", "data", ":", "\n", "        ", "imgs_switched", ".", "append", "(", "np", ".", "expand_dims", "(", "im", ",", "0", ")", ")", "\n", "\n", "", "labels_index", "=", "[", "]", "\n", "for", "label", "in", "labels", ":", "\n", "        ", "labels_index", ".", "append", "(", "label", "/", "255", ")", "\n", "\n", "", "return", "list", "(", "zip", "(", "imgs_switched", ",", "labels_index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.read_images": [[89, 98], ["len", "PIL.Image.open", "PIL.Image.open"], "function", ["None"], ["", "def", "read_images", "(", "ids", ",", "dir_img", ",", "dir_label", ")", ":", "\n", "    ", "n", "=", "len", "(", "Img_fileList", ")", "\n", "data", ",", "label", "=", "[", "None", "]", "*", "n", ",", "[", "None", "]", "*", "n", "\n", "for", "id", ",", "pos", "in", "ids", ":", "\n", "        ", "fPath", "=", "dir_img", "+", "id", "+", "suffix", "\n", "lPath", "=", "dir_label", "+", "id", "+", "suffix", "\n", "data", "[", "i", "]", "=", "Image", ".", "open", "(", "fPath", ")", "\n", "label", "[", "i", "]", "=", "Image", ".", "open", "(", "lPath", ")", "\n", "", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.DataAug": [[99, 127], ["load.create_crops", "load.create_crops", "range", "len", "numpy.concatenate", "numpy.concatenate", "load.create_crops", "load.create_crops"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.create_crops", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.create_crops", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.create_crops", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.create_crops"], ["", "def", "DataAug", "(", "data", ",", "labels", ",", "size", ")", ":", "\n", "    ", "crop_imgs", "=", "create_crops", "(", "data", "[", "0", "]", ",", "size", ")", "\n", "crop_labels", "=", "create_crops", "(", "labels", "[", "0", "]", ",", "size", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "data", ")", ")", ":", "\n", "        ", "crop_imgs", "=", "np", ".", "concatenate", "(", "(", "crop_imgs", ",", "create_crops", "(", "data", "[", "i", "]", ",", "size", ")", ")", ",", "axis", "=", "0", ")", "\n", "crop_labels", "=", "np", ".", "concatenate", "(", "(", "crop_labels", ",", "create_crops", "(", "labels", "[", "i", "]", ",", "size", ")", ")", ",", "axis", "=", "0", ")", "\n", "# crop_imgs = []", "\n", "# crop_labels = []", "\n", "# aug_times = []", "\n", "# ten_crop_imgs = []", "\n", "# ten_crop_labels = []", "\n", "# for i in range(len(data)):", "\n", "#     h_rate = data[i].shape[0]/size[0]", "\n", "#     w_rate = data[i].shape[1]/size[1]", "\n", "#     aug_time = min(h_rate,w_rate)*2", "\n", "#     print(aug_time)", "\n", "#     if (aug_time<1.5): aug_time=8", "\n", "#     elif (aug_time<2): aug_time=10", "\n", "#     else: aug_time=18", "\n", "#     aug_times.append(aug_time)", "\n", "#     ten_crop_imgs.append(ten_crop(data[i], size))", "\n", "#     ten_crop_labels.append(ten_crop(labels[i], size))", "\n", "# for t in range(max(aug_times)):", "\n", "#     for i in range(len(data)):", "\n", "#         if(aug_times[i]>t):", "\n", "#             crop_imgs.append(ten_crop_imgs[i][t])", "\n", "#             crop_labels.append(ten_crop_labels[i][t])", "\n", "", "return", "crop_imgs", ",", "crop_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.DataAug_1C": [[128, 156], ["load.create_crops_1C", "load.create_crops_1C", "range", "len", "numpy.concatenate", "numpy.concatenate", "load.create_crops_1C", "load.create_crops_1C"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.create_crops_1C", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.create_crops_1C", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.create_crops_1C", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.create_crops_1C"], ["", "def", "DataAug_1C", "(", "data", ",", "labels", ",", "size", ")", ":", "\n", "    ", "crop_imgs", "=", "create_crops_1C", "(", "data", "[", "0", "]", ",", "size", ")", "\n", "crop_labels", "=", "create_crops_1C", "(", "labels", "[", "0", "]", ",", "size", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "data", ")", ")", ":", "\n", "        ", "crop_imgs", "=", "np", ".", "concatenate", "(", "(", "crop_imgs", ",", "create_crops_1C", "(", "data", "[", "i", "]", ",", "size", ")", ")", ",", "axis", "=", "0", ")", "\n", "crop_labels", "=", "np", ".", "concatenate", "(", "(", "crop_labels", ",", "create_crops_1C", "(", "labels", "[", "i", "]", ",", "size", ")", ")", ",", "axis", "=", "0", ")", "\n", "# crop_imgs = []", "\n", "# crop_labels = []", "\n", "# aug_times = []", "\n", "# ten_crop_imgs = []", "\n", "# ten_crop_labels = []", "\n", "# for i in range(len(data)):", "\n", "#     h_rate = data[i].shape[0]/size[0]", "\n", "#     w_rate = data[i].shape[1]/size[1]", "\n", "#     aug_time = min(h_rate,w_rate)*2", "\n", "#     print(aug_time)", "\n", "#     if (aug_time<1.5): aug_time=8", "\n", "#     elif (aug_time<2): aug_time=10", "\n", "#     else: aug_time=18", "\n", "#     aug_times.append(aug_time)", "\n", "#     ten_crop_imgs.append(ten_crop(data[i], size))", "\n", "#     ten_crop_labels.append(ten_crop(labels[i], size))", "\n", "# for t in range(max(aug_times)):", "\n", "#     for i in range(len(data)):", "\n", "#         if(aug_times[i]>t):", "\n", "#             crop_imgs.append(ten_crop_imgs[i][t])", "\n", "#             crop_labels.append(ten_crop_labels[i][t])", "\n", "", "return", "crop_imgs", ",", "crop_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.Color2Index": [[157, 165], ["numpy.zeros", "enumerate", "data.astype.astype"], "function", ["None"], ["", "def", "Color2Index", "(", "ColorLabels", ",", "colormap2label", ")", ":", "\n", "    ", "IndexLabels", "=", "np", ".", "zeros", "(", "ColorLabels", ".", "shape", "[", "0", "]", ",", "ColorLabels", ".", "shape", "[", "1", "]", ",", "\n", "ColorLabels", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "ColorLabels", ")", ":", "\n", "        ", "data", "=", "data", ".", "astype", "(", "'int32'", ")", "\n", "idx", "=", "(", "data", "[", ":", ",", ":", ",", "0", "]", "*", "256", "+", "data", "[", ":", ",", ":", ",", "1", "]", ")", "*", "256", "+", "data", "[", ":", ",", ":", ",", "2", "]", "\n", "IndexLabels", "[", "i", "]", "=", "colormap2label", "[", "idx", "]", "\n", "", "return", "IndexLabels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.Color2Index0": [[166, 170], ["ColorLabel.astype"], "function", ["None"], ["", "def", "Color2Index0", "(", "ColorLabel", ",", "colormap2label", ")", ":", "\n", "    ", "data", "=", "ColorLabel", ".", "astype", "(", "'int32'", ")", "\n", "idx", "=", "(", "data", "[", ":", ",", ":", ",", "0", "]", "*", "256", "+", "data", "[", ":", ",", ":", ",", "1", "]", ")", "*", "256", "+", "data", "[", ":", ",", ":", ",", "2", "]", "\n", "return", "colormap2label", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.Index2Color": [[171, 174], ["pred.astype"], "function", ["None"], ["", "def", "Index2Color", "(", "pred", ",", "colormap2label", ")", ":", "\n", "    ", "x", "=", "pred", ".", "astype", "(", "'int32'", ")", "\n", "return", "colormap2label", "[", "x", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.ten_crop": [[175, 237], ["cv2.flip", "cv2.flip", "cv2.flip", "cv2.flip", "cv2.flip", "print", "print", "print", "print", "numpy.stack", "ValueError", "str"], "function", ["None"], ["", "def", "ten_crop", "(", "src", ",", "size", ")", ":", "\n", "    ", "\"\"\"Crop 10 regions from an array.\n    This is performed same as:\n    http://chainercv.readthedocs.io/en/stable/reference/transforms.html#ten-crop\n\n    This method crops 10 regions. All regions will be in shape\n    :obj`size`. These regions consist of 1 center crop and 4 corner\n    crops and horizontal flips of them.\n    The crops are ordered in this order.\n    * center crop\n    * top-left crop\n    * bottom-right crop\n    * top-right crop\n    * bottom-left crop\n    * center crop (flipped horizontally)\n    * top-left crop (flipped horizontally)\n    * bottom-left crop (flipped horizontally)\n    * top-right crop (flipped horizontally)\n    * bottom-right crop (flipped horizontally)\n\n    Parameters\n    ----------\n    src : Numpy array\n        Input image.\n    size : tuple\n        Tuple of length 2, as (width, height) of the cropped areas.\n\n    Returns\n    -------\n    mxnet.nd.NDArray\n        The cropped images with shape (10, size[1], size[0], C)\n\n    \"\"\"", "\n", "h", ",", "w", ",", "_", "=", "src", ".", "shape", "\n", "ow", ",", "oh", "=", "size", "\n", "\n", "if", "h", "<", "oh", "or", "w", "<", "ow", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "\n", "# h=int(h)", "\n", "# w = int(w)", "\n", "# ow = int(ow)", "\n", "# oh = int(oh)", "\n", "\n", "", "tl", "=", "src", "[", "0", ":", "oh", ",", "0", ":", "ow", ",", ":", "]", "\n", "bl", "=", "src", "[", "h", "-", "oh", ":", "h", ",", "0", ":", "ow", ",", ":", "]", "\n", "tr", "=", "src", "[", "0", ":", "oh", ",", "w", "-", "ow", ":", "w", ",", ":", "]", "\n", "br", "=", "src", "[", "h", "-", "oh", ":", "h", ",", "w", "-", "ow", ":", "w", ",", ":", "]", "\n", "center", "=", "src", "[", "(", "h", "-", "oh", ")", "//", "2", ":", "(", "h", "+", "oh", ")", "//", "2", ",", "(", "w", "-", "ow", ")", "//", "2", ":", "(", "w", "+", "ow", ")", "//", "2", ",", ":", "]", "\n", "\n", "tl_f", "=", "cv2", ".", "flip", "(", "tl", ",", "-", "1", ")", "\n", "bl_f", "=", "cv2", ".", "flip", "(", "bl", ",", "-", "1", ")", "\n", "tr_f", "=", "cv2", ".", "flip", "(", "tr", ",", "-", "1", ")", "\n", "br_f", "=", "cv2", ".", "flip", "(", "br", ",", "-", "1", ")", "\n", "center_f", "=", "cv2", ".", "flip", "(", "center", ",", "-", "1", ")", "\n", "print", "(", "center_f", ".", "shape", ")", "\n", "print", "(", "center_rf", ".", "shape", ")", "\n", "print", "(", "center_tf", ".", "shape", ")", "\n", "print", "(", "center_bf", ".", "shape", ")", "\n", "crops", "=", "np", ".", "stack", "(", "[", "tl", ",", "br", ",", "tr", ",", "bl", ",", "tl_f", ",", "br_f", ",", "tr_f", ",", "bl_f", ",", "center", ",", "center_f", "]", ",", "axis", "=", "0", ")", "\n", "return", "crops", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.create_crops": [[238, 274], ["math.ceil", "math.ceil", "math.ceil", "math.ceil", "range", "numpy.concatenate", "ValueError", "range", "crop_imgs_f.append", "int", "int", "crop_imgs.append", "cv2.flip", "numpy.array", "numpy.array", "str"], "function", ["None"], ["", "def", "create_crops", "(", "img", ",", "size", ")", ":", "\n", "# print(img.shape)", "\n", "    ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "\n", "", "h_rate", "=", "h", "/", "c_h", "\n", "w_rate", "=", "w", "/", "c_w", "\n", "h_times", "=", "math", ".", "ceil", "(", "h_rate", ")", "\n", "w_times", "=", "math", ".", "ceil", "(", "w_rate", ")", "\n", "stride_h", "=", "math", ".", "ceil", "(", "c_h", "*", "(", "h_times", "-", "h_rate", ")", "/", "(", "h_times", "-", "1", ")", ")", "\n", "stride_w", "=", "math", ".", "ceil", "(", "c_w", "*", "(", "w_times", "-", "w_rate", ")", "/", "(", "w_times", "-", "1", ")", ")", "\n", "crop_imgs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "h_times", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "w_times", ")", ":", "\n", "            ", "s_h", "=", "int", "(", "j", "*", "c_h", "-", "j", "*", "stride_h", ")", "\n", "if", "(", "j", "==", "(", "h_times", "-", "1", ")", ")", ":", "s_h", "=", "h", "-", "c_h", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "int", "(", "i", "*", "c_w", "-", "i", "*", "stride_w", ")", "\n", "if", "(", "i", "==", "(", "w_times", "-", "1", ")", ")", ":", "s_w", "=", "w", "-", "c_w", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "# print('%d %d %d %d'%(s_h, e_h, s_w, e_w))", "\n", "crop_im", "=", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", "\n", "crop_imgs", ".", "append", "(", "crop_im", ")", "\n", "\n", "", "", "crop_imgs_f", "=", "[", "]", "\n", "for", "im", "in", "crop_imgs", ":", "\n", "        ", "crop_imgs_f", ".", "append", "(", "cv2", ".", "flip", "(", "im", ",", "-", "1", ")", ")", "\n", "\n", "", "crops", "=", "np", ".", "concatenate", "(", "(", "np", ".", "array", "(", "crop_imgs", ")", ",", "np", ".", "array", "(", "crop_imgs_f", ")", ")", ",", "axis", "=", "0", ")", "\n", "# print(crops.shape)", "\n", "return", "crops", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.load.create_crops_1C": [[275, 311], ["math.ceil", "math.ceil", "math.ceil", "math.ceil", "range", "numpy.concatenate", "ValueError", "range", "crop_imgs_f.append", "int", "int", "crop_imgs.append", "cv2.flip", "numpy.array", "numpy.array", "str"], "function", ["None"], ["", "def", "create_crops_1C", "(", "img", ",", "size", ")", ":", "\n", "# print(img.shape)", "\n", "    ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "\n", "", "h_rate", "=", "h", "/", "c_h", "\n", "w_rate", "=", "w", "/", "c_w", "\n", "h_times", "=", "math", ".", "ceil", "(", "h_rate", ")", "\n", "w_times", "=", "math", ".", "ceil", "(", "w_rate", ")", "\n", "stride_h", "=", "math", ".", "ceil", "(", "c_h", "*", "(", "h_times", "-", "h_rate", ")", "/", "(", "h_times", "-", "1", ")", ")", "\n", "stride_w", "=", "math", ".", "ceil", "(", "c_w", "*", "(", "w_times", "-", "w_rate", ")", "/", "(", "w_times", "-", "1", ")", ")", "\n", "crop_imgs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "h_times", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "w_times", ")", ":", "\n", "            ", "s_h", "=", "int", "(", "j", "*", "c_h", "-", "j", "*", "stride_h", ")", "\n", "if", "(", "j", "==", "(", "h_times", "-", "1", ")", ")", ":", "s_h", "=", "h", "-", "c_h", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "int", "(", "i", "*", "c_w", "-", "i", "*", "stride_w", ")", "\n", "if", "(", "i", "==", "(", "w_times", "-", "1", ")", ")", ":", "s_w", "=", "w", "-", "c_w", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "# print('%d %d %d %d'%(s_h, e_h, s_w, e_w))", "\n", "crop_im", "=", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", "]", "\n", "crop_imgs", ".", "append", "(", "crop_im", ")", "\n", "\n", "", "", "crop_imgs_f", "=", "[", "]", "\n", "for", "im", "in", "crop_imgs", ":", "\n", "        ", "crop_imgs_f", ".", "append", "(", "cv2", ".", "flip", "(", "im", ",", "-", "1", ")", ")", "\n", "\n", "", "crops", "=", "np", ".", "concatenate", "(", "(", "np", ".", "array", "(", "crop_imgs", ")", ",", "np", ".", "array", "(", "crop_imgs_f", ")", ")", ",", "axis", "=", "0", ")", "\n", "# print(crops.shape)", "\n", "return", "crops", "\n", "", ""]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.loss.CrossEntropyLoss2d.__init__": [[6, 10], ["torch.Module.__init__", "torch.NLLLoss", "torch.NLLLoss", "torch.NLLLoss"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "ignore_index", "=", "0", ",", ")", ":", "\n", "        ", "super", "(", "CrossEntropyLoss2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nll_loss", "=", "nn", ".", "NLLLoss", "(", "weight", "=", "weight", ",", "ignore_index", "=", "ignore_index", ",", "\n", "reduction", "=", "'elementwise_mean'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.loss.CrossEntropyLoss2d.forward": [[11, 13], ["loss.CrossEntropyLoss2d.nll_loss", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ")", ":", "\n", "        ", "return", "self", ".", "nll_loss", "(", "F", ".", "log_softmax", "(", "inputs", ",", "dim", "=", "1", ")", ",", "targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.loss.CrossEntropy2d": [[16, 31], ["input[].view.size", "input[].view.transpose().transpose().contiguous", "input[].view", "torch.cross_entropy", "input[].view.transpose().transpose", "target_mask.sum", "input[].view.transpose", "target.view().repeat", "target.view"], "function", ["None"], ["", "", "def", "CrossEntropy2d", "(", "input", ",", "target", ",", "weight", "=", "None", ",", "size_average", "=", "False", ")", ":", "\n", "# input:(n, c, h, w) target:(n, h, w)", "\n", "    ", "n", ",", "c", ",", "h", ",", "w", "=", "input", ".", "size", "(", ")", "\n", "\n", "input", "=", "input", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "input", "=", "input", "[", "target", ".", "view", "(", "n", ",", "h", ",", "w", ",", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "c", ")", ">=", "0", "]", ".", "view", "(", "-", "1", ",", "c", ")", "\n", "\n", "target_mask", "=", "target", ">=", "0", "\n", "target", "=", "target", "[", "target_mask", "]", "\n", "#loss = F.nll_loss(F.log_softmax(input), target, weight=weight, size_average=False)", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "input", ",", "target", ",", "weight", "=", "weight", ",", "size_average", "=", "False", ")", "\n", "if", "size_average", ":", "\n", "        ", "loss", "/=", "target_mask", ".", "sum", "(", ")", ".", "data", "[", "0", "]", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.loss.weighted_BCE": [[32, 42], ["torch.clamp", "torch.clamp", "torch.clamp", "torch.neg", "torch.neg", "torch.neg", "torch.mean", "torch.mean", "torch.mean", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["None"], ["", "def", "weighted_BCE", "(", "output", ",", "target", ",", "weight_pos", "=", "None", ",", "weight_neg", "=", "None", ")", ":", "\n", "    ", "output", "=", "torch", ".", "clamp", "(", "output", ",", "min", "=", "1e-8", ",", "max", "=", "1", "-", "1e-8", ")", "\n", "\n", "if", "weight_pos", "is", "not", "None", ":", "\n", "        ", "loss", "=", "weight_pos", "*", "(", "target", "*", "torch", ".", "log", "(", "output", ")", ")", "+", "weight_neg", "*", "(", "(", "1", "-", "target", ")", "*", "torch", ".", "log", "(", "1", "-", "output", ")", ")", "\n", "", "else", ":", "\n", "        ", "loss", "=", "target", "*", "torch", ".", "log", "(", "output", ")", "+", "(", "1", "-", "target", ")", "*", "torch", ".", "log", "(", "1", "-", "output", ")", "\n", "\n", "", "return", "torch", ".", "neg", "(", "torch", ".", "mean", "(", "loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.loss.pix_loss": [[43, 60], ["output.size", "torch.log_softmax", "logp.gather.gather", "target.view", "weighted_logp.sum", "pix_weight.view().sum", "weighted_loss.mean", "pix_weight.view"], "function", ["None"], ["", "def", "pix_loss", "(", "output", ",", "target", ",", "pix_weight", ",", "ignore_index", "=", "None", ")", ":", "\n", "# Calculate log probabilities", "\n", "    ", "if", "ignore_index", "is", "not", "None", ":", "\n", "        ", "active_pos", "=", "1", "-", "(", "target", "==", "ignore_index", ")", ".", "unsqueeze", "(", "1", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "pix_weight", "*=", "active_pos", "\n", "\n", "", "batch_size", ",", "_", ",", "H", ",", "W", "=", "output", ".", "size", "(", ")", "\n", "logp", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "# Gather log probabilities with respect to target", "\n", "logp", "=", "logp", ".", "gather", "(", "1", ",", "target", ".", "view", "(", "batch_size", ",", "1", ",", "H", ",", "W", ")", ")", "\n", "# Multiply with weights", "\n", "weighted_logp", "=", "(", "logp", "*", "pix_weight", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "# Rescale so that loss is in approx. same interval", "\n", "weighted_loss", "=", "weighted_logp", ".", "sum", "(", "1", ")", "/", "pix_weight", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "sum", "(", "1", ")", "\n", "# Average over mini-batch", "\n", "weighted_loss", "=", "-", "1.0", "*", "weighted_loss", ".", "mean", "(", ")", "\n", "return", "weighted_loss", "\n", "", ""]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.showIMG": [[11, 15], ["matplotlib.imshow", "matplotlib.show"], "function", ["None"], ["def", "showIMG", "(", "img", ")", ":", "\n", "    ", "plt", ".", "imshow", "(", "img", ")", "\n", "plt", ".", "show", "(", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rand_flip": [[16, 27], ["random.random", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "img[].copy", "label[].copy", "numpy.flip", "numpy.flip", "numpy.flip", "numpy.flip"], "function", ["None"], ["", "def", "rand_flip", "(", "img", ",", "label", ")", ":", "\n", "    ", "r", "=", "random", ".", "random", "(", ")", "\n", "# showIMG(img.transpose((1, 2, 0)))", "\n", "if", "r", "<", "0.25", ":", "\n", "        ", "return", "img", ",", "label", "\n", "", "elif", "r", "<", "0.5", ":", "\n", "        ", "return", "np", ".", "flip", "(", "img", ",", "axis", "=", "0", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "label", ",", "axis", "=", "0", ")", ".", "copy", "(", ")", "\n", "", "elif", "r", "<", "0.75", ":", "\n", "        ", "return", "np", ".", "flip", "(", "img", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "label", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "img", "[", ":", ":", "-", "1", ",", ":", ":", "-", "1", ",", ":", "]", ".", "copy", "(", ")", ",", "label", "[", ":", ":", "-", "1", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rand_flip2": [[28, 39], ["random.random", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "img_s[].copy", "label_s[].copy", "img[].copy", "label[].copy", "numpy.flip", "numpy.flip", "numpy.flip", "numpy.flip", "numpy.flip", "numpy.flip", "numpy.flip", "numpy.flip"], "function", ["None"], ["", "", "def", "rand_flip2", "(", "img_s", ",", "label_s", ",", "img", ",", "label", ")", ":", "\n", "    ", "r", "=", "random", ".", "random", "(", ")", "\n", "# showIMG(img.transpose((1, 2, 0)))", "\n", "if", "r", "<", "0.25", ":", "\n", "        ", "return", "img_s", ",", "label_s", ",", "img", ",", "label", "\n", "", "elif", "r", "<", "0.5", ":", "\n", "        ", "return", "np", ".", "flip", "(", "img_s", ",", "axis", "=", "0", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "label_s", ",", "axis", "=", "0", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "img", ",", "axis", "=", "0", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "label", ",", "axis", "=", "0", ")", ".", "copy", "(", ")", "\n", "", "elif", "r", "<", "0.75", ":", "\n", "        ", "return", "np", ".", "flip", "(", "img_s", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "label_s", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "img", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "label", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "img_s", "[", ":", ":", "-", "1", ",", ":", ":", "-", "1", ",", ":", "]", ".", "copy", "(", ")", ",", "label_s", "[", ":", ":", "-", "1", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ",", "img", "[", ":", ":", "-", "1", ",", ":", ":", "-", "1", ",", ":", "]", ".", "copy", "(", ")", ",", "label", "[", ":", ":", "-", "1", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rand_flip_mix": [[40, 51], ["random.random", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip().copy", "img[].copy", "label[].copy", "x_s[].copy", "numpy.flip", "numpy.flip", "numpy.flip", "numpy.flip", "numpy.flip", "numpy.flip"], "function", ["None"], ["", "", "def", "rand_flip_mix", "(", "img", ",", "label", ",", "x_s", ")", ":", "\n", "    ", "r", "=", "random", ".", "random", "(", ")", "\n", "# showIMG(img.transpose((1, 2, 0)))", "\n", "if", "r", "<", "0.25", ":", "\n", "        ", "return", "img", ",", "label", ",", "x_s", "\n", "", "elif", "r", "<", "0.5", ":", "\n", "        ", "return", "np", ".", "flip", "(", "img", ",", "axis", "=", "0", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "label", ",", "axis", "=", "0", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "x_s", ",", "axis", "=", "0", ")", ".", "copy", "(", ")", "\n", "", "elif", "r", "<", "0.75", ":", "\n", "        ", "return", "np", ".", "flip", "(", "img", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "label", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", ",", "np", ".", "flip", "(", "x_s", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "img", "[", ":", ":", "-", "1", ",", ":", ":", "-", "1", ",", ":", "]", ".", "copy", "(", ")", ",", "label", "[", ":", ":", "-", "1", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ",", "x_s", "[", ":", ":", "-", "1", ",", ":", ":", "-", "1", ",", ":", "]", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rand_rotate": [[52, 64], ["random.randint", "numpy.asarray", "numpy.asarray", "skimage.transform.rotate", "skimage.transform.rotate"], "function", ["None"], ["", "", "def", "rand_rotate", "(", "img", ",", "label", ")", ":", "\n", "    ", "r", "=", "random", ".", "randint", "(", "0", ",", "179", ")", "\n", "# print(r)", "\n", "# showIMG(img.transpose((1, 2, 0)))", "\n", "img_rotate", "=", "np", ".", "asarray", "(", "sktransf", ".", "rotate", "(", "img", ",", "r", ",", "order", "=", "1", ",", "mode", "=", "'symmetric'", ",", "\n", "preserve_range", "=", "True", ")", ",", "np", ".", "float", ")", "\n", "label_rotate", "=", "np", ".", "asarray", "(", "sktransf", ".", "rotate", "(", "label", ",", "r", ",", "order", "=", "0", ",", "mode", "=", "'constant'", ",", "\n", "cval", "=", "0", ",", "preserve_range", "=", "True", ")", ",", "np", ".", "uint8", ")", "\n", "# print(img_rotate[0:10, 0:10, :])", "\n", "# print(label_rotate[0:10, 0:10])", "\n", "# h_s = image", "\n", "return", "img_rotate", ",", "label_rotate", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rand_rotate_crop": [[65, 77], ["random.randint", "transform.rotate_image", "transform.rotate_image", "transform.largest_rotated_rect", "transform.crop_around_center", "transform.crop_around_center", "math.radians"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rotate_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rotate_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.largest_rotated_rect", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.crop_around_center", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.crop_around_center"], ["", "def", "rand_rotate_crop", "(", "img", ",", "label", ")", ":", "\n", "    ", "r", "=", "random", ".", "randint", "(", "0", ",", "179", ")", "\n", "image_height", ",", "image_width", "=", "img", ".", "shape", "[", "0", ":", "2", "]", "\n", "im_rotated", "=", "rotate_image", "(", "img", ",", "r", ",", "order", "=", "1", ")", "\n", "l_rotated", "=", "rotate_image", "(", "label", ",", "r", ",", "order", "=", "0", ")", "\n", "crop_w", ",", "crop_h", "=", "largest_rotated_rect", "(", "image_width", ",", "image_height", ",", "math", ".", "radians", "(", "r", ")", ")", "\n", "im_rotated_cropped", "=", "crop_around_center", "(", "im_rotated", ",", "crop_w", ",", "crop_h", ")", "\n", "l_rotated_cropped", "=", "crop_around_center", "(", "l_rotated", ",", "crop_w", ",", "crop_h", ")", "\n", "# print(img_rotate[0:10, 0:10, :])", "\n", "# print(label_rotate[0:10, 0:10])", "\n", "# h_s = image", "\n", "return", "im_rotated_cropped", ",", "l_rotated_cropped", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rotate_image": [[78, 150], ["tuple", "numpy.vstack", "numpy.matrix", "max", "min", "max", "min", "int", "int", "numpy.matrix", "cv2.warpAffine", "abs", "abs", "numpy.array", "cv2.getRotationMatrix2D", "numpy.matrix", "numpy.matrix", "int", "int", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "rotate_image", "(", "image", ",", "angle", ",", "order", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    Rotates an OpenCV 2 / NumPy image about it's centre by the given angle\n    (in degrees). The returned image will be large enough to hold the entire\n    new image, with a black background\n    \"\"\"", "\n", "\n", "# Get the image size", "\n", "# No that's not an error - NumPy stores image matricies backwards", "\n", "image_size", "=", "(", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "0", "]", ")", "\n", "image_center", "=", "tuple", "(", "np", ".", "array", "(", "image_size", ")", "/", "2", ")", "\n", "\n", "# Convert the OpenCV 3x2 rotation matrix to 3x3", "\n", "rot_mat", "=", "np", ".", "vstack", "(", "\n", "[", "cv2", ".", "getRotationMatrix2D", "(", "image_center", ",", "angle", ",", "1.0", ")", ",", "[", "0", ",", "0", ",", "1", "]", "]", "\n", ")", "\n", "\n", "rot_mat_notranslate", "=", "np", ".", "matrix", "(", "rot_mat", "[", "0", ":", "2", ",", "0", ":", "2", "]", ")", "\n", "\n", "# Shorthand for below calcs", "\n", "image_w2", "=", "image_size", "[", "0", "]", "*", "0.5", "\n", "image_h2", "=", "image_size", "[", "1", "]", "*", "0.5", "\n", "\n", "# Obtain the rotated coordinates of the image corners", "\n", "rotated_coords", "=", "[", "\n", "(", "np", ".", "array", "(", "[", "-", "image_w2", ",", "image_h2", "]", ")", "*", "rot_mat_notranslate", ")", ".", "A", "[", "0", "]", ",", "\n", "(", "np", ".", "array", "(", "[", "image_w2", ",", "image_h2", "]", ")", "*", "rot_mat_notranslate", ")", ".", "A", "[", "0", "]", ",", "\n", "(", "np", ".", "array", "(", "[", "-", "image_w2", ",", "-", "image_h2", "]", ")", "*", "rot_mat_notranslate", ")", ".", "A", "[", "0", "]", ",", "\n", "(", "np", ".", "array", "(", "[", "image_w2", ",", "-", "image_h2", "]", ")", "*", "rot_mat_notranslate", ")", ".", "A", "[", "0", "]", "\n", "]", "\n", "\n", "# Find the size of the new image", "\n", "x_coords", "=", "[", "pt", "[", "0", "]", "for", "pt", "in", "rotated_coords", "]", "\n", "x_pos", "=", "[", "x", "for", "x", "in", "x_coords", "if", "x", ">", "0", "]", "\n", "x_neg", "=", "[", "x", "for", "x", "in", "x_coords", "if", "x", "<", "0", "]", "\n", "\n", "y_coords", "=", "[", "pt", "[", "1", "]", "for", "pt", "in", "rotated_coords", "]", "\n", "y_pos", "=", "[", "y", "for", "y", "in", "y_coords", "if", "y", ">", "0", "]", "\n", "y_neg", "=", "[", "y", "for", "y", "in", "y_coords", "if", "y", "<", "0", "]", "\n", "\n", "right_bound", "=", "max", "(", "x_pos", ")", "\n", "left_bound", "=", "min", "(", "x_neg", ")", "\n", "top_bound", "=", "max", "(", "y_pos", ")", "\n", "bot_bound", "=", "min", "(", "y_neg", ")", "\n", "\n", "new_w", "=", "int", "(", "abs", "(", "right_bound", "-", "left_bound", ")", ")", "\n", "new_h", "=", "int", "(", "abs", "(", "top_bound", "-", "bot_bound", ")", ")", "\n", "\n", "# We require a translation matrix to keep the image centred", "\n", "trans_mat", "=", "np", ".", "matrix", "(", "[", "\n", "[", "1", ",", "0", ",", "int", "(", "new_w", "*", "0.5", "-", "image_w2", ")", "]", ",", "\n", "[", "0", ",", "1", ",", "int", "(", "new_h", "*", "0.5", "-", "image_h2", ")", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "\n", "]", ")", "\n", "\n", "# Compute the tranform for the combined rotation and translation", "\n", "affine_mat", "=", "(", "np", ".", "matrix", "(", "trans_mat", ")", "*", "np", ".", "matrix", "(", "rot_mat", ")", ")", "[", "0", ":", "2", ",", ":", "]", "\n", "\n", "# Apply the transform", "\n", "flag", "=", "cv2", ".", "INTER_NEAREST", "\n", "if", "order", "==", "1", ":", "flag", "=", "cv2", ".", "INTER_LINEAR", "\n", "elif", "order", "==", "2", ":", "flag", "=", "cv2", ".", "INTER_AREA", "\n", "elif", "order", ">", "2", ":", "flag", "=", "cv2", ".", "INTER_CUBIC", "\n", "\n", "result", "=", "cv2", ".", "warpAffine", "(", "\n", "image", ",", "\n", "affine_mat", ",", "\n", "(", "new_w", ",", "new_h", ")", ",", "\n", "flags", "=", "flag", "\n", ")", "\n", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rand_rotate_mix": [[151, 165], ["random.randint", "numpy.asarray", "numpy.asarray", "numpy.asarray", "skimage.transform.rotate", "skimage.transform.rotate", "skimage.transform.rotate"], "function", ["None"], ["", "def", "rand_rotate_mix", "(", "img", ",", "label", ",", "x_s", ")", ":", "\n", "    ", "r", "=", "random", ".", "randint", "(", "0", ",", "179", ")", "\n", "# print(r)", "\n", "# showIMG(img.transpose((1, 2, 0)))", "\n", "img_rotate", "=", "np", ".", "asarray", "(", "sktransf", ".", "rotate", "(", "img", ",", "r", ",", "order", "=", "1", ",", "mode", "=", "'symmetric'", ",", "\n", "preserve_range", "=", "True", ")", ",", "np", ".", "float", ")", "\n", "label_rotate", "=", "np", ".", "asarray", "(", "sktransf", ".", "rotate", "(", "label", ",", "r", ",", "order", "=", "0", ",", "mode", "=", "'constant'", ",", "\n", "cval", "=", "0", ",", "preserve_range", "=", "True", ")", ",", "np", ".", "uint8", ")", "\n", "x_s_rotate", "=", "np", ".", "asarray", "(", "sktransf", ".", "rotate", "(", "x_s", ",", "r", ",", "order", "=", "0", ",", "mode", "=", "'symmetric'", ",", "\n", "cval", "=", "0", ",", "preserve_range", "=", "True", ")", ",", "np", ".", "uint8", ")", "\n", "# print(img_rotate[0:10, 0:10, :])", "\n", "# print(label_rotate[0:10, 0:10])", "\n", "# h_s = image", "\n", "return", "img_rotate", ",", "label_rotate", ",", "x_s_rotate", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.create_crops": [[166, 208], ["len", "zip", "print", "math.ceil", "math.ceil", "range", "print", "crop_imgs.append", "crop_labels.append", "math.ceil", "math.ceil", "range", "len", "int", "int", "crop_imgs.append", "str", "crop_labels.append", "crop_labels.append"], "function", ["None"], ["", "def", "create_crops", "(", "ims", ",", "labels", ",", "size", ")", ":", "\n", "    ", "crop_imgs", "=", "[", "]", "\n", "crop_labels", "=", "[", "]", "\n", "label_dims", "=", "len", "(", "labels", "[", "0", "]", ".", "shape", ")", "\n", "for", "img", ",", "label", ",", "in", "zip", "(", "ims", ",", "labels", ")", ":", "\n", "        ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "            ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "crop_imgs", ".", "append", "(", "img", ")", "\n", "crop_labels", ".", "append", "(", "label", ")", "\n", "continue", "\n", "", "h_rate", "=", "h", "/", "c_h", "\n", "w_rate", "=", "w", "/", "c_w", "\n", "h_times", "=", "math", ".", "ceil", "(", "h_rate", ")", "\n", "w_times", "=", "math", ".", "ceil", "(", "w_rate", ")", "\n", "if", "h_times", "==", "1", ":", "stride_h", "=", "0", "\n", "else", ":", "\n", "            ", "stride_h", "=", "math", ".", "ceil", "(", "c_h", "*", "(", "h_times", "-", "h_rate", ")", "/", "(", "h_times", "-", "1", ")", ")", "\n", "", "if", "w_times", "==", "1", ":", "stride_w", "=", "0", "\n", "else", ":", "\n", "            ", "stride_w", "=", "math", ".", "ceil", "(", "c_w", "*", "(", "w_times", "-", "w_rate", ")", "/", "(", "w_times", "-", "1", ")", ")", "\n", "", "for", "j", "in", "range", "(", "h_times", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "w_times", ")", ":", "\n", "                ", "s_h", "=", "int", "(", "j", "*", "c_h", "-", "j", "*", "stride_h", ")", "\n", "if", "(", "j", "==", "(", "h_times", "-", "1", ")", ")", ":", "s_h", "=", "h", "-", "c_h", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "int", "(", "i", "*", "c_w", "-", "i", "*", "stride_w", ")", "\n", "if", "(", "i", "==", "(", "w_times", "-", "1", ")", ")", ":", "s_w", "=", "w", "-", "c_w", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "# print('%d %d %d %d'%(s_h, e_h, s_w, e_w))", "\n", "# print('%d %d %d %d'%(s_h_s, e_h_s, s_w_s, e_w_s))", "\n", "crop_imgs", ".", "append", "(", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "if", "label_dims", "==", "2", ":", "\n", "                    ", "crop_labels", ".", "append", "(", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", "]", ")", "\n", "", "else", ":", "\n", "                    ", "crop_labels", ".", "append", "(", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "\n", "", "", "", "", "print", "(", "'Sliding crop finished. %d images created.'", "%", "len", "(", "crop_imgs", ")", ")", "\n", "return", "crop_imgs", ",", "crop_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.create_crops_onlyimgs": [[209, 239], ["print", "math.ceil", "math.ceil", "math.ceil", "math.ceil", "range", "print", "range", "len", "int", "int", "crop_imgs.append", "str"], "function", ["None"], ["", "def", "create_crops_onlyimgs", "(", "ims", ",", "size", ")", ":", "\n", "    ", "crop_imgs", "=", "[", "]", "\n", "for", "img", "in", "ims", ":", "\n", "        ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "            ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "continue", "\n", "", "h_rate", "=", "h", "/", "c_h", "\n", "w_rate", "=", "w", "/", "c_w", "\n", "h_times", "=", "math", ".", "ceil", "(", "h_rate", ")", "\n", "w_times", "=", "math", ".", "ceil", "(", "w_rate", ")", "\n", "stride_h", "=", "math", ".", "ceil", "(", "c_h", "*", "(", "h_times", "-", "h_rate", ")", "/", "(", "h_times", "-", "1", ")", ")", "\n", "stride_w", "=", "math", ".", "ceil", "(", "c_w", "*", "(", "w_times", "-", "w_rate", ")", "/", "(", "w_times", "-", "1", ")", ")", "\n", "for", "j", "in", "range", "(", "h_times", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "w_times", ")", ":", "\n", "                ", "s_h", "=", "int", "(", "j", "*", "c_h", "-", "j", "*", "stride_h", ")", "\n", "if", "(", "j", "==", "(", "h_times", "-", "1", ")", ")", ":", "s_h", "=", "h", "-", "c_h", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "int", "(", "i", "*", "c_w", "-", "i", "*", "stride_w", ")", "\n", "if", "(", "i", "==", "(", "w_times", "-", "1", ")", ")", ":", "s_w", "=", "w", "-", "c_w", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "# print('%d %d %d %d'%(s_h, e_h, s_w, e_w))", "\n", "# print('%d %d %d %d'%(s_h_s, e_h_s, s_w_s, e_w_s))", "\n", "crop_imgs", ".", "append", "(", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "\n", "", "", "", "print", "(", "'Sliding crop finished. %d images created.'", "%", "len", "(", "crop_imgs", ")", ")", "\n", "return", "crop_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.sliding_crop_single_img": [[240, 267], ["math.ceil", "math.ceil", "math.ceil", "math.ceil", "range", "range", "int", "int", "crop_imgs.append"], "function", ["None"], ["", "def", "sliding_crop_single_img", "(", "img", ",", "size", ")", ":", "\n", "    ", "crop_imgs", "=", "[", "]", "\n", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "assert", "h", ">=", "c_h", "and", "w", ">=", "c_w", ",", "\"Cannot crop area from image.\"", "\n", "h_rate", "=", "h", "/", "c_h", "\n", "w_rate", "=", "w", "/", "c_w", "\n", "h_times", "=", "math", ".", "ceil", "(", "h_rate", ")", "\n", "w_times", "=", "math", ".", "ceil", "(", "w_rate", ")", "\n", "stride_h", "=", "math", ".", "ceil", "(", "c_h", "*", "(", "h_times", "-", "h_rate", ")", "/", "(", "h_times", "-", "1", ")", ")", "\n", "stride_w", "=", "math", ".", "ceil", "(", "c_w", "*", "(", "w_times", "-", "w_rate", ")", "/", "(", "w_times", "-", "1", ")", ")", "\n", "for", "j", "in", "range", "(", "h_times", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "w_times", ")", ":", "\n", "            ", "s_h", "=", "int", "(", "j", "*", "c_h", "-", "j", "*", "stride_h", ")", "\n", "if", "(", "j", "==", "(", "h_times", "-", "1", ")", ")", ":", "s_h", "=", "h", "-", "c_h", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "int", "(", "i", "*", "c_w", "-", "i", "*", "stride_w", ")", "\n", "if", "(", "i", "==", "(", "w_times", "-", "1", ")", ")", ":", "s_w", "=", "w", "-", "c_w", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "# print('%d %d %d %d'%(s_h, e_h, s_w, e_w))", "\n", "# print('%d %d %d %d'%(s_h_s, e_h_s, s_w_s, e_w_s))", "\n", "crop_imgs", ".", "append", "(", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "\n", "#print('Sliding crop finished. %d images created.' %len(crop_imgs))", "\n", "", "", "return", "crop_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.slidding_crop_WC": [[268, 321], ["len", "zip", "print", "int", "math.ceil", "math.ceil", "range", "print", "crop_imgs.append", "crop_labels.append", "math.ceil", "math.ceil", "range", "len", "int", "int", "int", "int", "int", "int", "crop_imgs.append", "crop_imgs_s.append", "str", "crop_labels.append", "crop_labels_s.append", "crop_labels.append", "crop_labels_s.append"], "function", ["None"], ["", "def", "slidding_crop_WC", "(", "imgs_s", ",", "labels_s", ",", "ims", ",", "labels", ",", "crop_size_global", ",", "crop_size_local", ",", "scale", "=", "8", ")", ":", "\n", "    ", "crop_imgs_s", "=", "[", "]", "\n", "crop_labels_s", "=", "[", "]", "\n", "crop_imgs", "=", "[", "]", "\n", "crop_labels", "=", "[", "]", "\n", "c_h", "=", "crop_size_local", "\n", "c_w", "=", "crop_size_local", "\n", "label_dims", "=", "len", "(", "labels", "[", "0", "]", ".", "shape", ")", "\n", "for", "img_s", ",", "label_s", ",", "img", ",", "label", "in", "zip", "(", "imgs_s", ",", "labels_s", ",", "ims", ",", "labels", ")", ":", "\n", "        ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "offset", "=", "int", "(", "(", "crop_size_global", "-", "crop_size_local", ")", "/", "2", ")", "\n", "if", "h", "<", "crop_size_local", "or", "w", "<", "crop_size_local", ":", "\n", "            ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "crop_imgs", ".", "append", "(", "img", ")", "\n", "crop_labels", ".", "append", "(", "label", ")", "\n", "continue", "\n", "", "h_rate", "=", "h", "/", "crop_size_local", "\n", "w_rate", "=", "w", "/", "crop_size_local", "\n", "h_times", "=", "math", ".", "ceil", "(", "h_rate", ")", "\n", "w_times", "=", "math", ".", "ceil", "(", "w_rate", ")", "\n", "if", "h_times", "==", "1", ":", "stride_h", "=", "0", "\n", "else", ":", "\n", "            ", "stride_h", "=", "math", ".", "ceil", "(", "c_h", "*", "(", "h_times", "-", "h_rate", ")", "/", "(", "h_times", "-", "1", ")", ")", "\n", "", "if", "w_times", "==", "1", ":", "stride_w", "=", "0", "\n", "else", ":", "\n", "            ", "stride_w", "=", "math", ".", "ceil", "(", "c_w", "*", "(", "w_times", "-", "w_rate", ")", "/", "(", "w_times", "-", "1", ")", ")", "\n", "", "for", "j", "in", "range", "(", "h_times", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "w_times", ")", ":", "\n", "                ", "s_h", "=", "int", "(", "j", "*", "c_h", "-", "j", "*", "stride_h", ")", "\n", "if", "(", "j", "==", "(", "h_times", "-", "1", ")", ")", ":", "s_h", "=", "h", "-", "c_h", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "int", "(", "i", "*", "c_w", "-", "i", "*", "stride_w", ")", "\n", "if", "(", "i", "==", "(", "w_times", "-", "1", ")", ")", ":", "s_w", "=", "w", "-", "c_w", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "\n", "s_h_s", "=", "int", "(", "s_h", "/", "scale", ")", "\n", "s_w_s", "=", "int", "(", "s_w", "/", "scale", ")", "\n", "e_h_s", "=", "int", "(", "(", "e_h", "+", "2", "*", "offset", ")", "/", "scale", ")", "\n", "e_w_s", "=", "int", "(", "(", "e_w", "+", "2", "*", "offset", ")", "/", "scale", ")", "\n", "# print('%d %d %d %d'%(s_h, e_h, s_w, e_w))", "\n", "# print('%d %d %d %d'%(s_h_s, e_h_s, s_w_s, e_w_s))", "\n", "crop_imgs", ".", "append", "(", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "crop_imgs_s", ".", "append", "(", "img_s", "[", "s_h_s", ":", "e_h_s", ",", "s_w_s", ":", "e_w_s", ",", ":", "]", ")", "\n", "if", "label_dims", "==", "2", ":", "\n", "                    ", "crop_labels", ".", "append", "(", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", "]", ")", "\n", "crop_labels_s", ".", "append", "(", "label_s", "[", "s_h_s", ":", "e_h_s", ",", "s_w_s", ":", "e_w_s", "]", ")", "\n", "", "else", ":", "\n", "                    ", "crop_labels", ".", "append", "(", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "crop_labels_s", ".", "append", "(", "label_s", "[", "s_h_s", ":", "e_h_s", ",", "s_w_s", ":", "e_w_s", ",", ":", "]", ")", "\n", "\n", "", "", "", "", "print", "(", "'Sliding crop finished. %d images created.'", "%", "len", "(", "crop_imgs", ")", ")", "\n", "return", "crop_imgs_s", ",", "crop_labels_s", ",", "crop_imgs", ",", "crop_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.center_crop": [[322, 342], ["zip", "print", "int", "int", "crop_imgs.append", "crop_labels.append", "print", "len", "str"], "function", ["None"], ["", "def", "center_crop", "(", "ims", ",", "labels", ",", "size", ")", ":", "\n", "    ", "crop_imgs", "=", "[", "]", "\n", "crop_labels", "=", "[", "]", "\n", "for", "img", ",", "label", "in", "zip", "(", "ims", ",", "labels", ")", ":", "\n", "        ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "            ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "continue", "\n", "", "s_h", "=", "int", "(", "h", "/", "2", "-", "c_h", "/", "2", ")", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "int", "(", "w", "/", "2", "-", "c_w", "/", "2", ")", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "crop_imgs", ".", "append", "(", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "\n", "", "print", "(", "'Center crop finished. %d images created.'", "%", "len", "(", "crop_imgs", ")", ")", "\n", "return", "crop_imgs", ",", "crop_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.five_crop": [[343, 372], ["zip", "print", "int", "int", "crop_imgs.append", "crop_labels.append", "crop_imgs.append", "crop_labels.append", "crop_imgs.append", "crop_labels.append", "crop_imgs.append", "crop_labels.append", "crop_imgs.append", "crop_labels.append", "print", "len", "str"], "function", ["None"], ["", "def", "five_crop", "(", "ims", ",", "labels", ",", "size", ")", ":", "\n", "    ", "crop_imgs", "=", "[", "]", "\n", "crop_labels", "=", "[", "]", "\n", "for", "img", ",", "label", "in", "zip", "(", "ims", ",", "labels", ")", ":", "\n", "        ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "            ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "continue", "\n", "", "s_h", "=", "int", "(", "h", "/", "2", "-", "c_h", "/", "2", ")", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "int", "(", "w", "/", "2", "-", "c_w", "/", "2", ")", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "crop_imgs", ".", "append", "(", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "\n", "crop_imgs", ".", "append", "(", "img", "[", "0", ":", "c_h", ",", "0", ":", "c_w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "0", ":", "c_h", ",", "0", ":", "c_w", ",", ":", "]", ")", "\n", "crop_imgs", ".", "append", "(", "img", "[", "h", "-", "c_h", ":", "h", ",", "w", "-", "c_w", ":", "w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "h", "-", "c_h", ":", "h", ",", "w", "-", "c_w", ":", "w", ",", ":", "]", ")", "\n", "crop_imgs", ".", "append", "(", "img", "[", "0", ":", "c_h", ",", "w", "-", "c_w", ":", "w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "0", ":", "c_h", ",", "w", "-", "c_w", ":", "w", ",", ":", "]", ")", "\n", "crop_imgs", ".", "append", "(", "img", "[", "h", "-", "c_h", ":", "h", ",", "0", ":", "c_w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "h", "-", "c_h", ":", "h", ",", "0", ":", "c_w", ",", ":", "]", ")", "\n", "\n", "", "print", "(", "'Five crop finished. %d images created.'", "%", "len", "(", "crop_imgs", ")", ")", "\n", "return", "crop_imgs", ",", "crop_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.data_padding": [[373, 396], ["enumerate", "math.ceil", "math.floor", "math.ceil", "math.floor", "numpy.pad", "numpy.pad", "print"], "function", ["None"], ["", "def", "data_padding", "(", "imgs", ",", "labels", ",", "scale", "=", "32", ")", ":", "\n", "    ", "for", "idx", ",", "img", "in", "enumerate", "(", "imgs", ")", ":", "\n", "        ", "label", "=", "labels", "[", "idx", "]", "\n", "shape_before", "=", "img", ".", "shape", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "h_padding", "=", "h", "%", "scale", "\n", "w_padding", "=", "w", "%", "scale", "\n", "need_padding", "=", "h_padding", ">", "0", "and", "w_padding", ">", "0", "\n", "if", "need_padding", ":", "\n", "            ", "h_padding", "=", "(", "scale", "-", "h_padding", ")", "/", "2", "\n", "h_padding1", "=", "math", ".", "ceil", "(", "h_padding", ")", "\n", "h_padding2", "=", "math", ".", "floor", "(", "h_padding", ")", "\n", "\n", "w_padding", "=", "(", "scale", "-", "w_padding", ")", "/", "2", "\n", "w_padding1", "=", "math", ".", "ceil", "(", "w_padding", ")", "\n", "w_padding2", "=", "math", ".", "floor", "(", "w_padding", ")", "\n", "img", "=", "np", ".", "pad", "(", "img", ",", "(", "(", "h_padding1", ",", "h_padding2", ")", ",", "(", "w_padding1", ",", "w_padding2", ")", ",", "(", "0", ",", "0", ")", ")", ",", "'symmetric'", ")", "\n", "label", "=", "np", ".", "pad", "(", "label", ",", "(", "(", "h_padding1", ",", "h_padding2", ")", ",", "(", "w_padding1", ",", "w_padding2", ")", ",", "(", "0", ",", "0", ")", ")", ",", "'constant'", ")", "\n", "shape_after", "=", "img", ".", "shape", "\n", "print", "(", "'img padding: [%d, %d]->[%d, %d]'", "%", "(", "shape_before", "[", "0", "]", ",", "shape_before", "[", "1", "]", ",", "shape_after", "[", "0", "]", ",", "shape_after", "[", "1", "]", ")", ")", "\n", "imgs", "[", "idx", "]", "=", "img", "\n", "labels", "[", "idx", "]", "=", "label", "\n", "", "", "return", "imgs", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.data_padding_fixsize": [[397, 415], ["enumerate", "math.ceil", "math.floor", "math.ceil", "math.floor", "numpy.pad", "numpy.pad"], "function", ["None"], ["", "def", "data_padding_fixsize", "(", "imgs", ",", "labels", ",", "size", ")", ":", "\n", "    ", "for", "idx", ",", "img", "in", "enumerate", "(", "imgs", ")", ":", "\n", "        ", "label", "=", "labels", "[", "idx", "]", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "h_padding", "=", "size", "[", "0", "]", "\n", "w_padding", "=", "size", "[", "1", "]", "\n", "\n", "h_padding1", "=", "math", ".", "ceil", "(", "h_padding", ")", "\n", "h_padding2", "=", "math", ".", "floor", "(", "h_padding", ")", "\n", "\n", "w_padding1", "=", "math", ".", "ceil", "(", "w_padding", ")", "\n", "w_padding2", "=", "math", ".", "floor", "(", "w_padding", ")", "\n", "\n", "img", "=", "np", ".", "pad", "(", "img", ",", "(", "(", "h_padding1", ",", "h_padding2", ")", ",", "(", "w_padding1", ",", "w_padding2", ")", ",", "(", "0", ",", "0", ")", ")", ",", "'symmetric'", ")", "\n", "label", "=", "np", ".", "pad", "(", "label", ",", "(", "(", "h_padding1", ",", "h_padding2", ")", ",", "(", "w_padding1", ",", "w_padding2", ")", ")", ",", "'constant'", ")", "\n", "imgs", "[", "idx", "]", "=", "img", "\n", "labels", "[", "idx", "]", "=", "label", "\n", "", "return", "imgs", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.five_crop_mix": [[416, 463], ["zip", "print", "int", "int", "int", "int", "int", "int", "crop_xs.append", "crop_imgs.append", "crop_labels.append", "crop_xs.append", "crop_imgs.append", "crop_labels.append", "crop_xs.append", "crop_imgs.append", "crop_labels.append", "crop_xs.append", "crop_imgs.append", "crop_labels.append", "crop_xs.append", "crop_imgs.append", "crop_labels.append", "print", "len", "str"], "function", ["None"], ["", "def", "five_crop_mix", "(", "ims", ",", "labels", ",", "x_s", ",", "size", ",", "scale", "=", "8", ")", ":", "\n", "    ", "crop_imgs", "=", "[", "]", "\n", "crop_labels", "=", "[", "]", "\n", "crop_xs", "=", "[", "]", "\n", "for", "img", ",", "label", ",", "x_s", "in", "zip", "(", "ims", ",", "labels", ",", "x_s", ")", ":", "\n", "        ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "h_s", "=", "int", "(", "h", "/", "scale", ")", "\n", "w_s", "=", "int", "(", "w", "/", "scale", ")", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "c_h_s", "=", "int", "(", "c_h", "/", "scale", ")", "\n", "c_w_s", "=", "int", "(", "c_w", "/", "scale", ")", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "            ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "continue", "\n", "", "s_h_s", "=", "int", "(", "h_s", "/", "2", "-", "c_h_s", "/", "2", ")", "\n", "e_h_s", "=", "s_h_s", "+", "c_h_s", "\n", "s_w_s", "=", "int", "(", "w_s", "/", "2", "-", "c_w_s", "/", "2", ")", "\n", "e_w_s", "=", "s_w_s", "+", "c_w_s", "\n", "s_h", "=", "s_h_s", "*", "scale", "\n", "s_w", "=", "s_w_s", "*", "scale", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "\n", "crop_xs", ".", "append", "(", "x_s", "[", ":", ",", "s_h_s", ":", "e_h_s", ",", "s_w_s", ":", "e_w_s", "]", ")", "\n", "crop_imgs", ".", "append", "(", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "\n", "crop_xs", ".", "append", "(", "x_s", "[", ":", ",", ":", "c_h_s", ",", ":", "c_w_s", "]", ")", "\n", "crop_imgs", ".", "append", "(", "img", "[", ":", "c_h", ",", ":", "c_w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", ":", "c_h", ",", ":", "c_w", ",", ":", "]", ")", "\n", "\n", "crop_xs", ".", "append", "(", "x_s", "[", ":", ",", "-", "c_h_s", ":", ",", "-", "c_w_s", ":", "]", ")", "\n", "crop_imgs", ".", "append", "(", "img", "[", "-", "c_h", ":", ",", "-", "c_w", ":", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "-", "c_h", ":", ",", "-", "c_w", ":", ",", ":", "]", ")", "\n", "\n", "crop_xs", ".", "append", "(", "x_s", "[", ":", ",", ":", "c_h_s", ",", "-", "c_w_s", ":", "]", ")", "\n", "crop_imgs", ".", "append", "(", "img", "[", ":", "c_h", ",", "-", "c_w", ":", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", ":", "c_h", ",", "-", "c_w", ":", ",", ":", "]", ")", "\n", "\n", "crop_xs", ".", "append", "(", "x_s", "[", ":", ",", "-", "c_h_s", ":", ",", ":", "c_w_s", "]", ")", "\n", "crop_imgs", ".", "append", "(", "img", "[", "-", "c_h", ":", ",", ":", "c_w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "-", "c_h", ":", ",", ":", "c_w", ",", ":", "]", ")", "\n", "\n", "", "print", "(", "'Five crop finished. %d images created.'", "%", "len", "(", "crop_imgs", ")", ")", "\n", "return", "crop_imgs", ",", "crop_labels", ",", "crop_xs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.sliding_crop": [[464, 500], ["print", "math.ceil", "math.ceil", "math.ceil", "math.ceil", "range", "range", "str", "int", "int", "crop_imgs.append"], "function", ["None"], ["", "def", "sliding_crop", "(", "img", ",", "size", ")", ":", "\n", "# print(img.shape)", "\n", "    ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "        ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", "\n", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "", "else", ":", "\n", "        ", "h_rate", "=", "h", "/", "c_h", "\n", "w_rate", "=", "w", "/", "c_w", "\n", "h_times", "=", "math", ".", "ceil", "(", "h_rate", ")", "\n", "w_times", "=", "math", ".", "ceil", "(", "w_rate", ")", "\n", "stride_h", "=", "math", ".", "ceil", "(", "c_h", "*", "(", "h_times", "-", "h_rate", ")", "/", "(", "h_times", "-", "1", ")", ")", "\n", "stride_w", "=", "math", ".", "ceil", "(", "c_w", "*", "(", "w_times", "-", "w_rate", ")", "/", "(", "w_times", "-", "1", ")", ")", "\n", "crop_imgs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "h_times", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "w_times", ")", ":", "\n", "                ", "s_h", "=", "int", "(", "j", "*", "c_h", "-", "j", "*", "stride_h", ")", "\n", "if", "(", "j", "==", "(", "h_times", "-", "1", ")", ")", ":", "s_h", "=", "h", "-", "c_h", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "int", "(", "i", "*", "c_w", "-", "i", "*", "stride_w", ")", "\n", "if", "(", "i", "==", "(", "w_times", "-", "1", ")", ")", ":", "s_w", "=", "w", "-", "c_w", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "# print('%d %d %d %d'%(s_h, e_h, s_w, e_w))", "\n", "crop_im", "=", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", "\n", "crop_imgs", ".", "append", "(", "crop_im", ")", "\n", "\n", "# crop_imgs_f = []", "\n", "# for im in crop_imgs:", "\n", "#     crop_imgs_f.append(cv2.flip(im, -1))", "\n", "\n", "# crops = np.concatenate((np.array(crop_imgs)), axis=0)", "\n", "# print(crops.shape)", "\n", "", "", "return", "crop_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.random_crop": [[501, 520], ["print", "random.randint", "random.randint", "str"], "function", ["None"], ["", "", "def", "random_crop", "(", "img", ",", "label", ",", "size", ")", ":", "\n", "# print(img.shape)", "\n", "    ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "        ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", "\n", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "", "else", ":", "\n", "        ", "s_h", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "c_h", ")", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "s_w", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "c_w", ")", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "\n", "crop_im", "=", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", "\n", "crop_label", "=", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", "]", "\n", "# print('%d %d %d %d'%(s_h, e_h, s_w, e_w))", "\n", "return", "crop_im", ",", "crop_label", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.random_crop2": [[521, 551], ["int", "int", "print", "random.randint", "random.randint"], "function", ["None"], ["", "", "def", "random_crop2", "(", "img_s", ",", "label_s", ",", "img", ",", "label", ",", "crop_size_global", ",", "crop_size_local", ",", "scale", ")", ":", "\n", "# print(img.shape)", "\n", "    ", "h_s", ",", "w_s", "=", "img_s", ".", "shape", "[", ":", "2", "]", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "padding_size", "=", "int", "(", "(", "crop_size_global", "-", "crop_size_local", ")", "/", "scale", ")", "\n", "crop_size_s", "=", "int", "(", "crop_size_global", "/", "scale", ")", "\n", "\n", "if", "h_s", "<", "crop_size_s", "or", "w_s", "<", "crop_size_s", "or", "h", "<", "crop_size_local", "or", "w", "<", "crop_size_local", ":", "\n", "        ", "print", "(", "'Crop failed. Size error.'", ")", "\n", "", "else", ":", "\n", "        ", "h_seed", "=", "random", ".", "randint", "(", "0", ",", "h_s", "-", "crop_size_s", ")", "\n", "w_seed", "=", "random", ".", "randint", "(", "0", ",", "w_s", "-", "crop_size_s", ")", "\n", "\n", "start_h_s", "=", "h_seed", "\n", "end_h_s", "=", "start_h_s", "+", "crop_size_s", "\n", "start_w_s", "=", "w_seed", "\n", "end_w_s", "=", "start_w_s", "+", "crop_size_s", "\n", "crop_im_s", "=", "img_s", "[", "start_h_s", ":", "end_h_s", ",", "start_w_s", ":", "end_w_s", ",", ":", "]", "\n", "crop_label_s", "=", "label_s", "[", "start_h_s", ":", "end_h_s", ",", "start_w_s", ":", "end_w_s", "]", "\n", "#print('start_h_s%d, end_h_s%d, start_w_s%d, end_w_s%d'%(start_h_s,end_h_s,start_w_s,end_w_s))", "\n", "\n", "start_h", "=", "h_seed", "*", "scale", "\n", "end_h", "=", "start_h", "+", "crop_size_local", "\n", "start_w", "=", "w_seed", "*", "scale", "\n", "end_w", "=", "start_w", "+", "crop_size_local", "\n", "#print('start_h%d, end_h%d, start_w%d, end_w%d'%(start_h,end_h,start_w,end_w))", "\n", "crop_im", "=", "img", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", ",", ":", "]", "\n", "crop_label", "=", "label", "[", "start_h", ":", "end_h", ",", "start_w", ":", "end_w", "]", "\n", "\n", "return", "crop_im_s", ",", "crop_label_s", ",", "crop_im", ",", "crop_label", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.random_crop_mix": [[552, 581], ["int", "int", "int", "int", "print", "random.randint", "random.randint", "str"], "function", ["None"], ["", "", "def", "random_crop_mix", "(", "img", ",", "label", ",", "x_s", ",", "size", ",", "scale", "=", "8", ")", ":", "\n", "# print(img.shape)", "\n", "    ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "c_h_s", "=", "int", "(", "c_h", "/", "scale", ")", "\n", "c_w_s", "=", "int", "(", "c_w", "/", "scale", ")", "\n", "h_times", "=", "int", "(", "h", "/", "scale", "-", "c_h_s", ")", "\n", "w_times", "=", "int", "(", "w", "/", "scale", "-", "c_w_s", ")", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "        ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", "\n", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "", "else", ":", "\n", "        ", "s_h_s", "=", "random", ".", "randint", "(", "0", ",", "h_times", ")", "\n", "s_h", "=", "s_h_s", "*", "scale", "\n", "s_w_s", "=", "random", ".", "randint", "(", "0", ",", "w_times", ")", "\n", "s_w", "=", "s_w_s", "*", "scale", "\n", "e_h_s", "=", "s_h_s", "+", "c_h_s", "\n", "e_w_s", "=", "s_w_s", "+", "c_w_s", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "\n", "crop_im", "=", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", "\n", "crop_label", "=", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", "]", "\n", "crop_xs", "=", "x_s", "[", ":", ",", "s_h_s", ":", "e_h_s", ",", "s_w_s", ":", "e_w_s", "]", "\n", "# print('%d %d %d %d' % (s_h, e_h, s_w, e_w))", "\n", "# print('%d %d %d %d' % (s_h_s, e_h_s, s_w_s, e_w_s))", "\n", "return", "crop_im", ",", "crop_label", ",", "crop_xs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.create_crops_mix": [[582, 620], ["zip", "print", "int", "int", "math.ceil", "math.ceil", "math.ceil", "math.ceil", "range", "print", "range", "len", "int", "int", "int", "int", "crop_imgs.append", "crop_labels.append", "crop_x_s.append", "str"], "function", ["None"], ["", "", "def", "create_crops_mix", "(", "ims", ",", "labels", ",", "x_s", ",", "size", ",", "scale", "=", "1", "/", "8", ")", ":", "\n", "    ", "crop_imgs", "=", "[", "]", "\n", "crop_labels", "=", "[", "]", "\n", "crop_x_s", "=", "[", "]", "\n", "for", "img", ",", "label", ",", "x", "in", "zip", "(", "ims", ",", "labels", ",", "x_s", ")", ":", "\n", "        ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "c_h", "=", "size", "[", "0", "]", "\n", "c_w", "=", "size", "[", "1", "]", "\n", "c_h_s", "=", "int", "(", "c_h", "*", "scale", ")", "\n", "c_w_s", "=", "int", "(", "c_w", "*", "scale", ")", "\n", "if", "h", "<", "c_h", "or", "w", "<", "c_w", ":", "\n", "            ", "print", "(", "\"Cannot crop area {} from image with size ({}, {})\"", ".", "format", "(", "str", "(", "size", ")", ",", "h", ",", "w", ")", ")", "\n", "continue", "\n", "", "h_rate", "=", "h", "/", "c_h", "\n", "w_rate", "=", "w", "/", "c_w", "\n", "h_times", "=", "math", ".", "ceil", "(", "h_rate", ")", "\n", "w_times", "=", "math", ".", "ceil", "(", "w_rate", ")", "\n", "stride_h", "=", "math", ".", "ceil", "(", "c_h", "*", "(", "h_times", "-", "h_rate", ")", "/", "(", "h_times", "-", "1", ")", ")", "\n", "stride_w", "=", "math", ".", "ceil", "(", "c_w", "*", "(", "w_times", "-", "w_rate", ")", "/", "(", "w_times", "-", "1", ")", ")", "\n", "for", "j", "in", "range", "(", "h_times", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "w_times", ")", ":", "\n", "                ", "s_h", "=", "int", "(", "j", "*", "c_h", "-", "j", "*", "stride_h", ")", "\n", "s_h_s", "=", "int", "(", "s_h", "*", "scale", ")", "\n", "if", "(", "j", "==", "(", "h_times", "-", "1", ")", ")", ":", "s_h", "=", "h", "-", "c_h", "\n", "e_h", "=", "s_h", "+", "c_h", "\n", "e_h_s", "=", "s_h_s", "+", "c_h_s", "\n", "s_w", "=", "int", "(", "i", "*", "c_w", "-", "i", "*", "stride_w", ")", "\n", "s_w_s", "=", "int", "(", "s_w", "*", "scale", ")", "\n", "if", "(", "i", "==", "(", "w_times", "-", "1", ")", ")", ":", "s_w", "=", "w", "-", "c_w", "\n", "e_w", "=", "s_w", "+", "c_w", "\n", "e_w_s", "=", "s_w_s", "+", "c_w_s", "\n", "crop_imgs", ".", "append", "(", "img", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "crop_labels", ".", "append", "(", "label", "[", "s_h", ":", "e_h", ",", "s_w", ":", "e_w", ",", ":", "]", ")", "\n", "crop_x_s", ".", "append", "(", "x", "[", ":", ",", "s_h_s", ":", "e_h_s", ",", "s_w_s", ":", "e_w_s", "]", ")", "\n", "\n", "", "", "", "print", "(", "'Sliding crop finished. %d images created.'", "%", "len", "(", "crop_imgs", ")", ")", "\n", "return", "crop_imgs", ",", "crop_labels", ",", "crop_x_s", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.crop_around_center": [[621, 642], ["int", "int", "int", "int", "int", "int"], "function", ["None"], ["", "def", "crop_around_center", "(", "image", ",", "width", ",", "height", ")", ":", "\n", "    ", "\"\"\"\n    Given a NumPy / OpenCV 2 image, crops it to the given width and height,\n    around it's centre point\n    \"\"\"", "\n", "\n", "image_size", "=", "(", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "0", "]", ")", "\n", "image_center", "=", "(", "int", "(", "image_size", "[", "0", "]", "*", "0.5", ")", ",", "int", "(", "image_size", "[", "1", "]", "*", "0.5", ")", ")", "\n", "\n", "if", "(", "width", ">", "image_size", "[", "0", "]", ")", ":", "\n", "        ", "width", "=", "image_size", "[", "0", "]", "\n", "\n", "", "if", "(", "height", ">", "image_size", "[", "1", "]", ")", ":", "\n", "        ", "height", "=", "image_size", "[", "1", "]", "\n", "\n", "", "x1", "=", "int", "(", "image_center", "[", "0", "]", "-", "width", "*", "0.5", ")", "\n", "x2", "=", "int", "(", "image_center", "[", "0", "]", "+", "width", "*", "0.5", ")", "\n", "y1", "=", "int", "(", "image_center", "[", "1", "]", "-", "height", "*", "0.5", ")", "\n", "y2", "=", "int", "(", "image_center", "[", "1", "]", "+", "height", "*", "0.5", ")", "\n", "\n", "return", "image", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.largest_rotated_rect": [[643, 676], ["int", "math.atan2", "math.atan2", "math.cos", "math.sin", "math.cos", "math.tan", "math.floor", "math.cos", "math.sin", "math.sin", "math.cos", "math.sin"], "function", ["None"], ["", "def", "largest_rotated_rect", "(", "w", ",", "h", ",", "angle", ")", ":", "\n", "    ", "\"\"\"\n    Given a rectangle of size wxh that has been rotated by 'angle' (in\n    radians), computes the width and height of the largest possible\n    axis-aligned rectangle within the rotated rectangle.\n\n    Original JS code by 'Andri' and Magnus Hoff from Stack Overflow\n\n    Converted to Python by Aaron Snoswell\n    \"\"\"", "\n", "\n", "quadrant", "=", "int", "(", "math", ".", "floor", "(", "angle", "/", "(", "math", ".", "pi", "/", "2", ")", ")", ")", "&", "3", "\n", "sign_alpha", "=", "angle", "if", "(", "(", "quadrant", "&", "1", ")", "==", "0", ")", "else", "math", ".", "pi", "-", "angle", "\n", "alpha", "=", "(", "sign_alpha", "%", "math", ".", "pi", "+", "math", ".", "pi", ")", "%", "math", ".", "pi", "\n", "\n", "bb_w", "=", "w", "*", "math", ".", "cos", "(", "alpha", ")", "+", "h", "*", "math", ".", "sin", "(", "alpha", ")", "\n", "bb_h", "=", "w", "*", "math", ".", "sin", "(", "alpha", ")", "+", "h", "*", "math", ".", "cos", "(", "alpha", ")", "\n", "\n", "gamma", "=", "math", ".", "atan2", "(", "bb_w", ",", "bb_w", ")", "if", "(", "w", "<", "h", ")", "else", "math", ".", "atan2", "(", "bb_w", ",", "bb_w", ")", "\n", "\n", "delta", "=", "math", ".", "pi", "-", "alpha", "-", "gamma", "\n", "\n", "length", "=", "h", "if", "(", "w", "<", "h", ")", "else", "w", "\n", "\n", "d", "=", "length", "*", "math", ".", "cos", "(", "alpha", ")", "\n", "a", "=", "d", "*", "math", ".", "sin", "(", "alpha", ")", "/", "math", ".", "sin", "(", "delta", ")", "\n", "\n", "y", "=", "a", "*", "math", ".", "cos", "(", "gamma", ")", "\n", "x", "=", "y", "*", "math", ".", "tan", "(", "gamma", ")", "\n", "\n", "return", "(", "\n", "bb_w", "-", "2", "*", "x", ",", "\n", "bb_h", "-", "2", "*", "y", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.Rotate_Aug": [[678, 694], ["range", "print", "len", "range", "print", "transform.rotate_image", "transform.rotate_image", "transform.largest_rotated_rect", "transform.crop_around_center", "transform.crop_around_center", "imgs.append", "labels.append", "len", "math.radians"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rotate_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rotate_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.largest_rotated_rect", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.crop_around_center", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.crop_around_center"], ["", "def", "Rotate_Aug", "(", "imgs", ",", "labels", ",", "step", "=", "20", ",", "start_angle", "=", "20", ",", "max_angle", "=", "179", ")", ":", "\n", "    ", "for", "idx", "in", "range", "(", "len", "(", "imgs", ")", ")", ":", "\n", "        ", "im", "=", "imgs", "[", "idx", "]", "\n", "l", "=", "labels", "[", "idx", "]", "\n", "image_height", ",", "image_width", "=", "im", ".", "shape", "[", "0", ":", "2", "]", "\n", "for", "i", "in", "range", "(", "start_angle", ",", "max_angle", ",", "step", ")", ":", "\n", "            ", "im_rotated", "=", "rotate_image", "(", "im", ",", "i", ",", "order", "=", "3", ")", "\n", "l_rotated", "=", "rotate_image", "(", "l", ",", "i", ",", "order", "=", "0", ")", "\n", "crop_w", ",", "crop_h", "=", "largest_rotated_rect", "(", "image_width", ",", "image_height", ",", "math", ".", "radians", "(", "i", ")", ")", "\n", "im_rotated_cropped", "=", "crop_around_center", "(", "im_rotated", ",", "crop_w", ",", "crop_h", ")", "\n", "l_rotated_cropped", "=", "crop_around_center", "(", "l_rotated", ",", "crop_w", ",", "crop_h", ")", "\n", "imgs", ".", "append", "(", "im_rotated_cropped", ")", "\n", "labels", ".", "append", "(", "l_rotated_cropped", ")", "\n", "", "print", "(", "'Img %d rotated.'", "%", "idx", ")", "\n", "", "print", "(", "'Rotation finished. %d images in total.'", "%", "len", "(", "imgs", ")", ")", "\n", "return", "imgs", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.Rotate_Aug_S": [[695, 709], ["range", "print", "transform.rotate_image", "transform.rotate_image", "transform.largest_rotated_rect", "transform.crop_around_center", "transform.crop_around_center", "imgs.append", "labels.append", "math.radians", "len"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rotate_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rotate_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.largest_rotated_rect", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.crop_around_center", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.crop_around_center"], ["", "def", "Rotate_Aug_S", "(", "im", ",", "l", ",", "step", "=", "20", ",", "start_angle", "=", "15", ",", "max_angle", "=", "89", ")", ":", "\n", "    ", "imgs", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "image_height", ",", "image_width", "=", "im", ".", "shape", "[", "0", ":", "2", "]", "\n", "for", "i", "in", "range", "(", "start_angle", ",", "max_angle", ",", "step", ")", ":", "\n", "        ", "im_rotated", "=", "rotate_image", "(", "im", ",", "i", ",", "order", "=", "1", ")", "\n", "l_rotated", "=", "rotate_image", "(", "l", ",", "i", ",", "order", "=", "0", ")", "\n", "crop_w", ",", "crop_h", "=", "largest_rotated_rect", "(", "image_width", ",", "image_height", ",", "math", ".", "radians", "(", "i", ")", ")", "\n", "im_rotated_cropped", "=", "crop_around_center", "(", "im_rotated", ",", "crop_w", ",", "crop_h", ")", "\n", "l_rotated_cropped", "=", "crop_around_center", "(", "l_rotated", ",", "crop_w", ",", "crop_h", ")", "\n", "imgs", ".", "append", "(", "im_rotated_cropped", ")", "\n", "labels", ".", "append", "(", "l_rotated_cropped", ")", "\n", "", "print", "(", "'Rotation finished. %d images added.'", "%", "len", "(", "imgs", ")", ")", "\n", "return", "imgs", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.PolyLR.__init__": [[66, 74], ["float", "misc.PolyLR.init_lr_groups.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "curr_iter", ",", "max_iter", ",", "lr_decay", ")", ":", "\n", "        ", "self", ".", "max_iter", "=", "float", "(", "max_iter", ")", "\n", "self", ".", "init_lr_groups", "=", "[", "]", "\n", "for", "p", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "self", ".", "init_lr_groups", ".", "append", "(", "p", "[", "'lr'", "]", ")", "\n", "", "self", ".", "param_groups", "=", "optimizer", ".", "param_groups", "\n", "self", ".", "curr_iter", "=", "curr_iter", "\n", "self", ".", "lr_decay", "=", "lr_decay", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.PolyLR.step": [[75, 78], ["enumerate"], "methods", ["None"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "for", "idx", ",", "p", "in", "enumerate", "(", "self", ".", "param_groups", ")", ":", "\n", "            ", "p", "[", "'lr'", "]", "=", "self", ".", "init_lr_groups", "[", "idx", "]", "*", "(", "1", "-", "self", ".", "curr_iter", "/", "self", ".", "max_iter", ")", "**", "self", ".", "lr_decay", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.Conv2dDeformable.__init__": [[82, 93], ["torch.nn.Module.__init__", "isinstance", "torch.nn.Conv2d", "torch.nn.Conv2d", "misc.Conv2dDeformable.offset_filter.weight.data.normal_"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "regular_filter", ",", "cuda", "=", "True", ")", ":", "\n", "        ", "super", "(", "Conv2dDeformable", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "isinstance", "(", "regular_filter", ",", "nn", ".", "Conv2d", ")", "\n", "self", ".", "regular_filter", "=", "regular_filter", "\n", "self", ".", "offset_filter", "=", "nn", ".", "Conv2d", "(", "regular_filter", ".", "in_channels", ",", "2", "*", "regular_filter", ".", "in_channels", ",", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "offset_filter", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.0005", ")", "\n", "self", ".", "input_shape", "=", "None", "\n", "self", ".", "grid_w", "=", "None", "\n", "self", ".", "grid_h", "=", "None", "\n", "self", ".", "cuda", "=", "cuda", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.Conv2dDeformable.forward": [[94, 117], ["misc.Conv2dDeformable.size", "misc.Conv2dDeformable.offset_filter", "torch.split", "torch.split", "torch.split", "torch.split", "offset_w.contiguous().view.contiguous().view.contiguous().view", "offset_h.contiguous().view.contiguous().view.contiguous().view", "misc.Conv2dDeformable.contiguous().view().unsqueeze", "torch.grid_sample", "torch.grid_sample", "misc.Conv2dDeformable.contiguous().view", "misc.Conv2dDeformable.regular_filter", "int", "int", "int", "int", "numpy.meshgrid", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "int", "int", "int", "offset_w.contiguous().view.contiguous().view.contiguous", "offset_h.contiguous().view.contiguous().view.contiguous", "numpy.linspace", "numpy.linspace", "grid_w.cuda.cuda.cuda", "grid_h.cuda.cuda.cuda", "misc.Conv2dDeformable.contiguous().view", "misc.Conv2dDeformable.contiguous", "int", "int", "misc.Conv2dDeformable.contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_shape", "=", "x", ".", "size", "(", ")", "# (b, c, h, w)", "\n", "offset", "=", "self", ".", "offset_filter", "(", "x", ")", "# (b, 2*c, h, w)", "\n", "offset_w", ",", "offset_h", "=", "torch", ".", "split", "(", "offset", ",", "self", ".", "regular_filter", ".", "in_channels", ",", "1", ")", "# (b, c, h, w)", "\n", "offset_w", "=", "offset_w", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "int", "(", "x_shape", "[", "2", "]", ")", ",", "int", "(", "x_shape", "[", "3", "]", ")", ")", "# (b*c, h, w)", "\n", "offset_h", "=", "offset_h", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "int", "(", "x_shape", "[", "2", "]", ")", ",", "int", "(", "x_shape", "[", "3", "]", ")", ")", "# (b*c, h, w)", "\n", "if", "not", "self", ".", "input_shape", "or", "self", ".", "input_shape", "!=", "x_shape", ":", "\n", "            ", "self", ".", "input_shape", "=", "x_shape", "\n", "grid_w", ",", "grid_h", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "x_shape", "[", "3", "]", ")", ",", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "x_shape", "[", "2", "]", ")", ")", "# (h, w)", "\n", "grid_w", "=", "torch", ".", "Tensor", "(", "grid_w", ")", "\n", "grid_h", "=", "torch", ".", "Tensor", "(", "grid_h", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "                ", "grid_w", "=", "grid_w", ".", "cuda", "(", ")", "\n", "grid_h", "=", "grid_h", ".", "cuda", "(", ")", "\n", "", "self", ".", "grid_w", "=", "nn", ".", "Parameter", "(", "grid_w", ")", "\n", "self", ".", "grid_h", "=", "nn", ".", "Parameter", "(", "grid_h", ")", "\n", "", "offset_w", "=", "offset_w", "+", "self", ".", "grid_w", "# (b*c, h, w)", "\n", "offset_h", "=", "offset_h", "+", "self", ".", "grid_h", "# (b*c, h, w)", "\n", "x", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "int", "(", "x_shape", "[", "2", "]", ")", ",", "int", "(", "x_shape", "[", "3", "]", ")", ")", ".", "unsqueeze", "(", "1", ")", "# (b*c, 1, h, w)", "\n", "x", "=", "F", ".", "grid_sample", "(", "x", ",", "torch", ".", "stack", "(", "(", "offset_h", ",", "offset_w", ")", ",", "3", ")", ")", "# (b*c, h, w)", "\n", "x", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "int", "(", "x_shape", "[", "1", "]", ")", ",", "int", "(", "x_shape", "[", "2", "]", ")", ",", "int", "(", "x_shape", "[", "3", "]", ")", ")", "# (b, c, h, w)", "\n", "x", "=", "self", ".", "regular_filter", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.check_mkdir": [[11, 14], ["os.path.exists", "os.mkdir"], "function", ["None"], ["def", "check_mkdir", "(", "dir_name", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir_name", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "dir_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.initialize_weights": [[16, 26], ["model.modules", "isinstance", "isinstance", "torch.nn.init.kaiming_normal_", "isinstance", "module.bias.data.zero_", "module.weight.data.fill_", "module.bias.data.zero_"], "function", ["None"], ["", "", "def", "initialize_weights", "(", "*", "models", ")", ":", "\n", "    ", "for", "model", "in", "models", ":", "\n", "        ", "for", "module", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "module", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "module", ".", "weight", ")", "\n", "if", "module", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "module", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "module", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "module", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.get_upsampling_weight": [[28, 39], ["numpy.zeros", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy", "abs", "abs", "list", "list", "range", "range"], "function", ["None"], ["", "", "", "", "def", "get_upsampling_weight", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ")", ":", "\n", "    ", "factor", "=", "(", "kernel_size", "+", "1", ")", "//", "2", "\n", "if", "kernel_size", "%", "2", "==", "1", ":", "\n", "        ", "center", "=", "factor", "-", "1", "\n", "", "else", ":", "\n", "        ", "center", "=", "factor", "-", "0.5", "\n", "", "og", "=", "np", ".", "ogrid", "[", ":", "kernel_size", ",", ":", "kernel_size", "]", "\n", "filt", "=", "(", "1", "-", "abs", "(", "og", "[", "0", "]", "-", "center", ")", "/", "factor", ")", "*", "(", "1", "-", "abs", "(", "og", "[", "1", "]", "-", "center", ")", "/", "factor", ")", "\n", "weight", "=", "np", ".", "zeros", "(", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "kernel_size", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "weight", "[", "list", "(", "range", "(", "in_channels", ")", ")", ",", "list", "(", "range", "(", "out_channels", ")", ")", ",", ":", ",", ":", "]", "=", "filt", "\n", "return", "torch", ".", "from_numpy", "(", "weight", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc._fast_hist": [[42, 48], ["numpy.bincount().reshape", "numpy.bincount", "label_true[].astype"], "function", ["None"], ["", "def", "_fast_hist", "(", "label_pred", ",", "label_true", ",", "num_classes", ")", ":", "\n", "    ", "mask", "=", "(", "label_true", ">=", "0", ")", "&", "(", "label_true", "<", "num_classes", ")", "\n", "hist", "=", "np", ".", "bincount", "(", "\n", "num_classes", "*", "label_true", "[", "mask", "]", ".", "astype", "(", "int", ")", "+", "\n", "label_pred", "[", "mask", "]", ",", "minlength", "=", "num_classes", "**", "2", ")", ".", "reshape", "(", "num_classes", ",", "num_classes", ")", "\n", "return", "hist", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.evaluate": [[50, 63], ["numpy.zeros", "zip", "numpy.nanmean", "numpy.nanmean", "misc._fast_hist", "numpy.diag().sum", "np.zeros.sum", "numpy.diag", "np.zeros.sum", "numpy.diag", "np.zeros.sum", "np.zeros.sum", "lp.flatten", "lt.flatten", "numpy.diag", "numpy.diag", "np.zeros.sum", "np.zeros.sum"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc._fast_hist"], ["", "def", "evaluate", "(", "predictions", ",", "gts", ",", "num_classes", ")", ":", "\n", "    ", "hist", "=", "np", ".", "zeros", "(", "(", "num_classes", ",", "num_classes", ")", ")", "\n", "for", "lp", ",", "lt", "in", "zip", "(", "predictions", ",", "gts", ")", ":", "\n", "        ", "hist", "+=", "_fast_hist", "(", "lp", ".", "flatten", "(", ")", ",", "lt", ".", "flatten", "(", ")", ",", "num_classes", ")", "\n", "# axis 0: gt, axis 1: prediction", "\n", "", "acc", "=", "np", ".", "diag", "(", "hist", ")", ".", "sum", "(", ")", "/", "hist", ".", "sum", "(", ")", "\n", "acc_cls", "=", "np", ".", "diag", "(", "hist", ")", "/", "hist", ".", "sum", "(", "axis", "=", "1", ")", "\n", "acc_cls", "=", "np", ".", "nanmean", "(", "acc_cls", ")", "\n", "iu", "=", "np", ".", "diag", "(", "hist", ")", "/", "(", "hist", ".", "sum", "(", "axis", "=", "1", ")", "+", "hist", ".", "sum", "(", "axis", "=", "0", ")", "-", "np", ".", "diag", "(", "hist", ")", ")", "\n", "mean_iu", "=", "np", ".", "nanmean", "(", "iu", ")", "\n", "freq", "=", "hist", ".", "sum", "(", "axis", "=", "1", ")", "/", "hist", ".", "sum", "(", ")", "\n", "fwavacc", "=", "(", "freq", "[", "freq", ">", "0", "]", "*", "iu", "[", "freq", ">", "0", "]", ")", ".", "sum", "(", ")", "\n", "return", "acc", ",", "acc_cls", ",", "mean_iu", ",", "fwavacc", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.sliced_forward": [[119, 221], ["max", "max", "torch.pad", "F.pad.size", "F.pad.size", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.upsample", "torch.autograd.Variable().cuda", "max", "print", "torch.upsample", "max", "torch.autograd.Variable", "torch.autograd.Variable", "int", "int", "F.upsample.size", "F.upsample.size", "torch.zeros", "torch.zeros", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "int", "range", "torch.autograd.Variable().cuda", "misc.sliced_forward._pad"], "function", ["None"], ["", "", "def", "sliced_forward", "(", "single_forward", ")", ":", "\n", "    ", "def", "_pad", "(", "x", ",", "crop_size", ")", ":", "\n", "        ", "h", ",", "w", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "pad_h", "=", "max", "(", "crop_size", "-", "h", ",", "0", ")", "\n", "pad_w", "=", "max", "(", "crop_size", "-", "w", ",", "0", ")", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "(", "0", ",", "pad_w", ",", "0", ",", "pad_h", ")", ")", "\n", "return", "x", ",", "pad_h", ",", "pad_w", "\n", "\n", "", "def", "wrapper", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", ",", "_", ",", "ori_h", ",", "ori_w", "=", "x", ".", "size", "(", ")", "\n", "if", "self", ".", "training", "and", "self", ".", "use_aux", ":", "\n", "            ", "outputs_all_scales", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "batch_size", ",", "self", ".", "num_classes", ",", "ori_h", ",", "ori_w", ")", ")", ")", ".", "cuda", "(", ")", "\n", "aux_all_scales", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "batch_size", ",", "self", ".", "num_classes", ",", "ori_h", ",", "ori_w", ")", ")", ")", ".", "cuda", "(", ")", "\n", "for", "s", "in", "self", ".", "scales", ":", "\n", "                ", "new_size", "=", "(", "int", "(", "ori_h", "*", "s", ")", ",", "int", "(", "ori_w", "*", "s", ")", ")", "\n", "scaled_x", "=", "F", ".", "upsample", "(", "x", ",", "size", "=", "new_size", ",", "mode", "=", "'bilinear'", ")", "\n", "scaled_x", "=", "Variable", "(", "scaled_x", ")", ".", "cuda", "(", ")", "\n", "scaled_h", ",", "scaled_w", "=", "scaled_x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "long_size", "=", "max", "(", "scaled_h", ",", "scaled_w", ")", "\n", "print", "(", "scaled_x", ".", "size", "(", ")", ")", "\n", "\n", "if", "long_size", ">", "self", ".", "crop_size", ":", "\n", "                    ", "count", "=", "torch", ".", "zeros", "(", "(", "scaled_h", ",", "scaled_w", ")", ")", "\n", "outputs", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "batch_size", ",", "self", ".", "num_classes", ",", "scaled_h", ",", "scaled_w", ")", ")", ")", ".", "cuda", "(", ")", "\n", "aux_outputs", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "batch_size", ",", "self", ".", "num_classes", ",", "scaled_h", ",", "scaled_w", ")", ")", ")", ".", "cuda", "(", ")", "\n", "stride", "=", "int", "(", "ceil", "(", "self", ".", "crop_size", "*", "self", ".", "stride_rate", ")", ")", "\n", "h_step_num", "=", "int", "(", "ceil", "(", "(", "scaled_h", "-", "self", ".", "crop_size", ")", "/", "stride", ")", ")", "+", "1", "\n", "w_step_num", "=", "int", "(", "ceil", "(", "(", "scaled_w", "-", "self", ".", "crop_size", ")", "/", "stride", ")", ")", "+", "1", "\n", "for", "yy", "in", "range", "(", "h_step_num", ")", ":", "\n", "                        ", "for", "xx", "in", "range", "(", "w_step_num", ")", ":", "\n", "                            ", "sy", ",", "sx", "=", "yy", "*", "stride", ",", "xx", "*", "stride", "\n", "ey", ",", "ex", "=", "sy", "+", "self", ".", "crop_size", ",", "sx", "+", "self", ".", "crop_size", "\n", "x_sub", "=", "scaled_x", "[", ":", ",", ":", ",", "sy", ":", "ey", ",", "sx", ":", "ex", "]", "\n", "x_sub", ",", "pad_h", ",", "pad_w", "=", "_pad", "(", "x_sub", ",", "self", ".", "crop_size", ")", "\n", "print", "(", "x_sub", ".", "size", "(", ")", ")", "\n", "outputs_sub", ",", "aux_sub", "=", "single_forward", "(", "self", ",", "x_sub", ")", "\n", "\n", "if", "sy", "+", "self", ".", "crop_size", ">", "scaled_h", ":", "\n", "                                ", "outputs_sub", "=", "outputs_sub", "[", ":", ",", ":", ",", ":", "-", "pad_h", ",", ":", "]", "\n", "aux_sub", "=", "aux_sub", "[", ":", ",", ":", ",", ":", "-", "pad_h", ",", ":", "]", "\n", "\n", "", "if", "sx", "+", "self", ".", "crop_size", ">", "scaled_w", ":", "\n", "                                ", "outputs_sub", "=", "outputs_sub", "[", ":", ",", ":", ",", ":", ",", ":", "-", "pad_w", "]", "\n", "aux_sub", "=", "aux_sub", "[", ":", ",", ":", ",", ":", ",", ":", "-", "pad_w", "]", "\n", "\n", "", "outputs", "[", ":", ",", ":", ",", "sy", ":", "ey", ",", "sx", ":", "ex", "]", "=", "outputs_sub", "\n", "aux_outputs", "[", ":", ",", ":", ",", "sy", ":", "ey", ",", "sx", ":", "ex", "]", "=", "aux_sub", "\n", "\n", "count", "[", "sy", ":", "ey", ",", "sx", ":", "ex", "]", "+=", "1", "\n", "", "", "count", "=", "Variable", "(", "count", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "(", "outputs", "/", "count", ")", "\n", "aux_outputs", "=", "(", "outputs", "/", "count", ")", "\n", "", "else", ":", "\n", "                    ", "scaled_x", ",", "pad_h", ",", "pad_w", "=", "_pad", "(", "scaled_x", ",", "self", ".", "crop_size", ")", "\n", "outputs", ",", "aux_outputs", "=", "single_forward", "(", "self", ",", "scaled_x", ")", "\n", "outputs", "=", "outputs", "[", ":", ",", ":", ",", ":", "-", "pad_h", ",", ":", "-", "pad_w", "]", "\n", "aux_outputs", "=", "aux_outputs", "[", ":", ",", ":", ",", ":", "-", "pad_h", ",", ":", "-", "pad_w", "]", "\n", "", "outputs_all_scales", "+=", "outputs", "\n", "aux_all_scales", "+=", "aux_outputs", "\n", "", "return", "outputs_all_scales", "/", "len", "(", "self", ".", "scales", ")", ",", "aux_all_scales", "\n", "", "else", ":", "\n", "            ", "outputs_all_scales", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "batch_size", ",", "self", ".", "num_classes", ",", "ori_h", ",", "ori_w", ")", ")", ")", ".", "cuda", "(", ")", "\n", "for", "s", "in", "self", ".", "scales", ":", "\n", "                ", "new_size", "=", "(", "int", "(", "ori_h", "*", "s", ")", ",", "int", "(", "ori_w", "*", "s", ")", ")", "\n", "scaled_x", "=", "F", ".", "upsample", "(", "x", ",", "size", "=", "new_size", ",", "mode", "=", "'bilinear'", ")", "\n", "scaled_h", ",", "scaled_w", "=", "scaled_x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "long_size", "=", "max", "(", "scaled_h", ",", "scaled_w", ")", "\n", "\n", "if", "long_size", ">", "self", ".", "crop_size", ":", "\n", "                    ", "count", "=", "torch", ".", "zeros", "(", "(", "scaled_h", ",", "scaled_w", ")", ")", "\n", "outputs", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "batch_size", ",", "self", ".", "num_classes", ",", "scaled_h", ",", "scaled_w", ")", ")", ")", ".", "cuda", "(", ")", "\n", "stride", "=", "int", "(", "ceil", "(", "self", ".", "crop_size", "*", "self", ".", "stride_rate", ")", ")", "\n", "h_step_num", "=", "int", "(", "ceil", "(", "(", "scaled_h", "-", "self", ".", "crop_size", ")", "/", "stride", ")", ")", "+", "1", "\n", "w_step_num", "=", "int", "(", "ceil", "(", "(", "scaled_w", "-", "self", ".", "crop_size", ")", "/", "stride", ")", ")", "+", "1", "\n", "for", "yy", "in", "range", "(", "h_step_num", ")", ":", "\n", "                        ", "for", "xx", "in", "range", "(", "w_step_num", ")", ":", "\n", "                            ", "sy", ",", "sx", "=", "yy", "*", "stride", ",", "xx", "*", "stride", "\n", "ey", ",", "ex", "=", "sy", "+", "self", ".", "crop_size", ",", "sx", "+", "self", ".", "crop_size", "\n", "x_sub", "=", "scaled_x", "[", ":", ",", ":", ",", "sy", ":", "ey", ",", "sx", ":", "ex", "]", "\n", "x_sub", ",", "pad_h", ",", "pad_w", "=", "_pad", "(", "x_sub", ",", "self", ".", "crop_size", ")", "\n", "\n", "outputs_sub", "=", "single_forward", "(", "self", ",", "x_sub", ")", "\n", "\n", "if", "sy", "+", "self", ".", "crop_size", ">", "scaled_h", ":", "\n", "                                ", "outputs_sub", "=", "outputs_sub", "[", ":", ",", ":", ",", ":", "-", "pad_h", ",", ":", "]", "\n", "\n", "", "if", "sx", "+", "self", ".", "crop_size", ">", "scaled_w", ":", "\n", "                                ", "outputs_sub", "=", "outputs_sub", "[", ":", ",", ":", ",", ":", ",", ":", "-", "pad_w", "]", "\n", "\n", "", "outputs", "[", ":", ",", ":", ",", "sy", ":", "ey", ",", "sx", ":", "ex", "]", "=", "outputs_sub", "\n", "\n", "count", "[", "sy", ":", "ey", ",", "sx", ":", "ex", "]", "+=", "1", "\n", "", "", "count", "=", "Variable", "(", "count", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "(", "outputs", "/", "count", ")", "\n", "", "else", ":", "\n", "                    ", "scaled_x", ",", "pad_h", ",", "pad_w", "=", "_pad", "(", "scaled_x", ",", "self", ".", "crop_size", ")", "\n", "outputs", "=", "single_forward", "(", "self", ",", "scaled_x", ")", "\n", "outputs", "=", "outputs", "[", ":", ",", ":", ",", ":", "-", "pad_h", ",", ":", "-", "pad_w", "]", "\n", "", "outputs_all_scales", "+=", "outputs", "\n", "", "return", "outputs_all_scales", "\n", "\n", "", "", "return", "wrapper", "\n", "", ""]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.data_vis.plot_img_and_mask": [[3, 13], ["matplotlib.figure", "plt.figure.add_subplot", "fig.add_subplot.set_title", "matplotlib.imshow", "plt.figure.add_subplot", "fig.add_subplot.set_title", "matplotlib.imshow", "matplotlib.show"], "function", ["None"], ["def", "plot_img_and_mask", "(", "img", ",", "mask", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "a", "=", "fig", ".", "add_subplot", "(", "1", ",", "2", ",", "1", ")", "\n", "a", ".", "set_title", "(", "'Input image'", ")", "\n", "plt", ".", "imshow", "(", "img", ")", "\n", "\n", "b", "=", "fig", ".", "add_subplot", "(", "1", ",", "2", ",", "2", ")", "\n", "b", ".", "set_title", "(", "'Output mask'", ")", "\n", "plt", ".", "imshow", "(", "mask", ")", "\n", "plt", ".", "show", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.__init__": [[116, 122], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "initialized", "=", "False", "\n", "self", ".", "val", "=", "None", "\n", "self", ".", "avg", "=", "None", "\n", "self", ".", "sum", "=", "None", "\n", "self", ".", "count", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.initialize": [[123, 129], ["None"], "methods", ["None"], ["", "def", "initialize", "(", "self", ",", "val", ",", "count", ",", "weight", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "avg", "=", "val", "\n", "self", ".", "count", "=", "count", "\n", "self", ".", "sum", "=", "val", "*", "weight", "\n", "self", ".", "initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.update": [[130, 135], ["utils.AverageMeter.initialize", "utils.AverageMeter.add"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.initialize", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.add"], ["", "def", "update", "(", "self", ",", "val", ",", "count", "=", "1", ",", "weight", "=", "1", ")", ":", "\n", "        ", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "self", ".", "initialize", "(", "val", ",", "count", ",", "weight", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "add", "(", "val", ",", "count", ",", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.add": [[136, 141], ["None"], "methods", ["None"], ["", "", "def", "add", "(", "self", ",", "val", ",", "count", ",", "weight", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "count", "+=", "count", "\n", "self", ".", "sum", "+=", "val", "*", "weight", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.value": [[142, 144], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.average": [[145, 147], ["None"], "methods", ["None"], ["", "def", "average", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.read_idtxt": [[6, 24], ["open", "open.close", "open.read", "is_number", "id_list.append"], "function", ["None"], ["def", "read_idtxt", "(", "path", ")", ":", "\n", "  ", "id_list", "=", "[", "]", "\n", "#print('start reading')", "\n", "f", "=", "open", "(", "path", ",", "'r'", ")", "\n", "curr_str", "=", "''", "\n", "while", "True", ":", "\n", "      ", "ch", "=", "f", ".", "read", "(", "1", ")", "\n", "if", "is_number", "(", "ch", ")", ":", "\n", "          ", "curr_str", "+=", "ch", "\n", "", "else", ":", "\n", "          ", "id_list", ".", "append", "(", "curr_str", ")", "\n", "#print(curr_str)", "\n", "curr_str", "=", "''", "\n", "", "if", "not", "ch", ":", "\n", "#print('end reading')", "\n", "          ", "break", "\n", "", "", "f", ".", "close", "(", ")", "\n", "return", "id_list", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.get_square": [[25, 32], ["None"], "function", ["None"], ["", "def", "get_square", "(", "img", ",", "pos", ")", ":", "\n", "    ", "\"\"\"Extract a left or a right square from ndarray shape : (H, W, C))\"\"\"", "\n", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "if", "pos", "==", "0", ":", "\n", "        ", "return", "img", "[", ":", ",", ":", "h", "]", "\n", "", "else", ":", "\n", "        ", "return", "img", "[", ":", ",", "-", "h", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.split_img_into_squares": [[33, 35], ["utils.get_square", "utils.get_square"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.get_square", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.get_square"], ["", "", "def", "split_img_into_squares", "(", "img", ")", ":", "\n", "    ", "return", "get_square", "(", "img", ",", "0", ")", ",", "get_square", "(", "img", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.hwc_to_chw": [[36, 38], ["numpy.transpose"], "function", ["None"], ["", "def", "hwc_to_chw", "(", "img", ")", ":", "\n", "    ", "return", "np", ".", "transpose", "(", "img", ",", "axes", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.resize_and_crop": [[39, 53], ["int", "int", "pilimg.resize", "img.crop.crop", "numpy.array"], "function", ["None"], ["", "def", "resize_and_crop", "(", "pilimg", ",", "scale", "=", "0.5", ",", "final_height", "=", "None", ")", ":", "\n", "    ", "w", "=", "pilimg", ".", "size", "[", "0", "]", "\n", "h", "=", "pilimg", ".", "size", "[", "1", "]", "\n", "newW", "=", "int", "(", "w", "*", "scale", ")", "\n", "newH", "=", "int", "(", "h", "*", "scale", ")", "\n", "\n", "if", "not", "final_height", ":", "\n", "        ", "diff", "=", "0", "\n", "", "else", ":", "\n", "        ", "diff", "=", "newH", "-", "final_height", "\n", "\n", "", "img", "=", "pilimg", ".", "resize", "(", "(", "newW", ",", "newH", ")", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "diff", "//", "2", ",", "newW", ",", "newH", "-", "diff", "//", "2", ")", ")", "\n", "return", "np", ".", "array", "(", "img", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.batch": [[54, 65], ["enumerate", "b.append", "len"], "function", ["None"], ["", "def", "batch", "(", "iterable", ",", "batch_size", ")", ":", "\n", "    ", "\"\"\"Yields lists by batch\"\"\"", "\n", "b", "=", "[", "]", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "iterable", ")", ":", "\n", "        ", "b", ".", "append", "(", "t", ")", "\n", "if", "(", "i", "+", "1", ")", "%", "batch_size", "==", "0", ":", "\n", "            ", "yield", "b", "\n", "b", "=", "[", "]", "\n", "\n", "", "", "if", "len", "(", "b", ")", ">", "0", ":", "\n", "        ", "yield", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.seprate_batch": [[66, 78], ["range", "batches.append", "len", "len", "range"], "function", ["None"], ["", "", "def", "seprate_batch", "(", "dataset", ",", "batch_size", ")", ":", "\n", "    ", "\"\"\"Yields lists by batch\"\"\"", "\n", "num_batch", "=", "len", "(", "dataset", ")", "//", "batch_size", "+", "1", "\n", "batch_len", "=", "batch_size", "\n", "# print (len(data))", "\n", "# print (num_batch)", "\n", "batches", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_batch", ")", ":", "\n", "        ", "batches", ".", "append", "(", "[", "dataset", "[", "j", "]", "for", "j", "in", "range", "(", "batch_len", ")", "]", ")", "\n", "# print('current data index: %d' %(i*batch_size+batch_len))", "\n", "if", "(", "i", "+", "2", "==", "num_batch", ")", ":", "batch_len", "=", "len", "(", "dataset", ")", "-", "(", "num_batch", "-", "1", ")", "*", "batch_size", "\n", "", "return", "(", "batches", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.split_train_val": [[79, 85], ["list", "len", "int", "random.shuffle"], "function", ["None"], ["", "def", "split_train_val", "(", "dataset", ",", "val_percent", "=", "0.05", ")", ":", "\n", "    ", "dataset", "=", "list", "(", "dataset", ")", "\n", "length", "=", "len", "(", "dataset", ")", "\n", "n", "=", "int", "(", "length", "*", "val_percent", ")", "\n", "random", ".", "shuffle", "(", "dataset", ")", "\n", "return", "{", "'train'", ":", "dataset", "[", ":", "-", "n", "]", ",", "'val'", ":", "dataset", "[", "-", "n", ":", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.normalize": [[87, 89], ["None"], "function", ["None"], ["", "def", "normalize", "(", "x", ")", ":", "\n", "    ", "return", "x", "/", "255", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.merge_masks": [[90, 98], ["numpy.zeros"], "function", ["None"], ["", "def", "merge_masks", "(", "img1", ",", "img2", ",", "full_w", ")", ":", "\n", "    ", "h", "=", "img1", ".", "shape", "[", "0", "]", "\n", "\n", "new", "=", "np", ".", "zeros", "(", "(", "h", ",", "full_w", ")", ",", "np", ".", "float32", ")", "\n", "new", "[", ":", ",", ":", "full_w", "//", "2", "+", "1", "]", "=", "img1", "[", ":", ",", ":", "full_w", "//", "2", "+", "1", "]", "\n", "new", "[", ":", ",", "full_w", "//", "2", "+", "1", ":", "]", "=", "img2", "[", ":", ",", "-", "(", "full_w", "//", "2", "-", "1", ")", ":", "]", "\n", "\n", "return", "new", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.rle_encode": [[101, 112], ["mask_image.flatten", "numpy.where"], "function", ["None"], ["", "def", "rle_encode", "(", "mask_image", ")", ":", "\n", "    ", "pixels", "=", "mask_image", ".", "flatten", "(", ")", "\n", "# We avoid issues with '1' at the start or end (at the corners of", "\n", "# the original image) by setting those pixels to '0' explicitly.", "\n", "# We do not expect these to be non-zero for an accurate mask,", "\n", "# so this should not harm the score.", "\n", "pixels", "[", "0", "]", "=", "0", "\n", "pixels", "[", "-", "1", "]", "=", "0", "\n", "runs", "=", "np", ".", "where", "(", "pixels", "[", "1", ":", "]", "!=", "pixels", "[", ":", "-", "1", "]", ")", "[", "0", "]", "+", "2", "\n", "runs", "[", "1", ":", ":", "2", "]", "=", "runs", "[", "1", ":", ":", "2", "]", "-", "runs", "[", ":", "-", "1", ":", "2", "]", "\n", "return", "runs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.ImageValStretch2D": [[148, 154], ["img.astype"], "function", ["None"], ["", "", "def", "ImageValStretch2D", "(", "img", ")", ":", "\n", "    ", "img", "=", "img", "*", "255", "\n", "#maxval = img.max(axis=0).max(axis=0)", "\n", "#minval = img.min(axis=0).min(axis=0)", "\n", "#img = (img-minval)*255/(maxval-minval)", "\n", "return", "img", ".", "astype", "(", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.ConfMap": [[155, 170], ["numpy.zeros", "range", "range", "int", "range"], "function", ["None"], ["", "def", "ConfMap", "(", "output", ",", "pred", ")", ":", "\n", "# print(output.shape)", "\n", "    ", "n", ",", "h", ",", "w", "=", "output", ".", "shape", "\n", "conf", "=", "np", ".", "zeros", "(", "pred", ".", "shape", ",", "float", ")", "\n", "for", "h_idx", "in", "range", "(", "h", ")", ":", "\n", "      ", "for", "w_idx", "in", "range", "(", "w", ")", ":", "\n", "        ", "n_idx", "=", "int", "(", "pred", "[", "h_idx", ",", "w_idx", "]", ")", "\n", "sum", "=", "0", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "          ", "val", "=", "output", "[", "i", ",", "h_idx", ",", "w_idx", "]", "\n", "if", "val", ">", "0", ":", "sum", "+=", "val", "\n", "", "conf", "[", "h_idx", ",", "w_idx", "]", "=", "output", "[", "n_idx", ",", "h_idx", ",", "w_idx", "]", "/", "sum", "\n", "if", "conf", "[", "h_idx", ",", "w_idx", "]", "<", "0", ":", "conf", "[", "h_idx", ",", "w_idx", "]", "=", "0", "\n", "# print(conf)", "\n", "", "", "return", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.accuracy": [[171, 177], ["valid.sum", "float"], "function", ["None"], ["", "def", "accuracy", "(", "pred", ",", "label", ")", ":", "\n", "    ", "valid", "=", "(", "label", ">", "0", ")", "\n", "acc_sum", "=", "(", "valid", "*", "(", "pred", "==", "label", ")", ")", ".", "sum", "(", ")", "\n", "valid_sum", "=", "valid", ".", "sum", "(", ")", "\n", "acc", "=", "float", "(", "acc_sum", ")", "/", "(", "valid_sum", "+", "1e-10", ")", "\n", "return", "acc", ",", "valid_sum", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.binary_accuracy": [[178, 184], ["valid.sum", "float"], "function", ["None"], ["", "def", "binary_accuracy", "(", "pred", ",", "label", ")", ":", "\n", "    ", "valid", "=", "(", "label", "<", "2", ")", "\n", "acc_sum", "=", "(", "valid", "*", "(", "pred", "==", "label", ")", ")", ".", "sum", "(", ")", "\n", "valid_sum", "=", "valid", ".", "sum", "(", ")", "\n", "acc", "=", "float", "(", "acc_sum", ")", "/", "(", "valid_sum", "+", "1e-10", ")", "\n", "return", "acc", ",", "valid_sum", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.intersectionAndUnion": [[185, 208], ["numpy.asarray().copy", "numpy.asarray().copy", "numpy.histogram", "numpy.histogram", "numpy.histogram", "numpy.asarray", "numpy.asarray"], "function", ["None"], ["", "def", "intersectionAndUnion", "(", "imPred", ",", "imLab", ",", "numClass", ")", ":", "\n", "    ", "imPred", "=", "np", ".", "asarray", "(", "imPred", ")", ".", "copy", "(", ")", "\n", "imLab", "=", "np", ".", "asarray", "(", "imLab", ")", ".", "copy", "(", ")", "\n", "\n", "# imPred += 1", "\n", "# imLab += 1", "\n", "# Remove classes from unlabeled pixels in gt image.", "\n", "# We should not penalize detections in unlabeled portions of the image.", "\n", "imPred", "=", "imPred", "*", "(", "imLab", ">", "0", ")", "\n", "\n", "# Compute area intersection:", "\n", "intersection", "=", "imPred", "*", "(", "imPred", "==", "imLab", ")", "\n", "(", "area_intersection", ",", "_", ")", "=", "np", ".", "histogram", "(", "\n", "intersection", ",", "bins", "=", "numClass", ",", "range", "=", "(", "1", ",", "numClass", "+", "1", ")", ")", "\n", "# print(area_intersection)", "\n", "\n", "# Compute area union:", "\n", "(", "area_pred", ",", "_", ")", "=", "np", ".", "histogram", "(", "imPred", ",", "bins", "=", "numClass", ",", "range", "=", "(", "1", ",", "numClass", "+", "1", ")", ")", "\n", "(", "area_lab", ",", "_", ")", "=", "np", ".", "histogram", "(", "imLab", ",", "bins", "=", "numClass", ",", "range", "=", "(", "1", ",", "numClass", "+", "1", ")", ")", "\n", "area_union", "=", "area_pred", "+", "area_lab", "-", "area_intersection", "\n", "# print(area_pred)", "\n", "# print(area_lab)", "\n", "return", "(", "area_intersection", ",", "area_union", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.CaclTP": [[209, 244], ["numpy.asarray().copy", "numpy.asarray().copy", "numpy.histogram", "numpy.histogram", "numpy.histogram", "numpy.asarray", "numpy.asarray"], "function", ["None"], ["", "def", "CaclTP", "(", "imPred", ",", "imLab", ",", "numClass", ")", ":", "\n", "    ", "imPred", "=", "np", ".", "asarray", "(", "imPred", ")", ".", "copy", "(", ")", "\n", "imLab", "=", "np", ".", "asarray", "(", "imLab", ")", ".", "copy", "(", ")", "\n", "\n", "# imPred += 1", "\n", "# imLab += 1", "\n", "# # Remove classes from unlabeled pixels in gt image.", "\n", "# # We should not penalize detections in unlabeled portions of the image.", "\n", "imPred", "=", "imPred", "*", "(", "imLab", ">", "0", ")", "\n", "\n", "# Compute area intersection:", "\n", "TP", "=", "imPred", "*", "(", "imPred", "==", "imLab", ")", "\n", "(", "TP_hist", ",", "_", ")", "=", "np", ".", "histogram", "(", "\n", "TP", ",", "bins", "=", "numClass", ",", "range", "=", "(", "1", ",", "numClass", "+", "1", ")", ")", "\n", "# print(TP.shape)", "\n", "# print(TP_hist)", "\n", "\n", "# Compute area union:", "\n", "(", "pred_hist", ",", "_", ")", "=", "np", ".", "histogram", "(", "imPred", ",", "bins", "=", "numClass", ",", "range", "=", "(", "1", ",", "numClass", "+", "1", ")", ")", "\n", "(", "lab_hist", ",", "_", ")", "=", "np", ".", "histogram", "(", "imLab", ",", "bins", "=", "numClass", ",", "range", "=", "(", "1", ",", "numClass", "+", "1", ")", ")", "\n", "\n", "union_hist", "=", "pred_hist", "+", "lab_hist", "-", "TP_hist", "\n", "# print(pred_hist)", "\n", "# print(lab_hist)", "\n", "# precision = TP_hist / (lab_hist + 1e-10) + 1e-10", "\n", "# recall = TP_hist / (pred_hist + 1e-10) + 1e-10", "\n", "# # print(precision)", "\n", "# # print(recall)", "\n", "# F1 = [stats.hmean([pre, rec]) for pre, rec in zip(precision, recall)]", "\n", "# print(F1)", "\n", "\n", "# print(area_pred)", "\n", "# print(area_lab)", "\n", "\n", "return", "(", "TP_hist", ",", "pred_hist", ",", "lab_hist", ",", "union_hist", ")", "", "", ""]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.Loader.__init__": [[106, 130], ["GID_WiCo.read_RSimages", "GID_WiCo.rescale_images", "GID_WiCo.rescale_images", "utils.data_padding_fixsize", "utils.slidding_crop_WC", "len", "len"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.read_RSimages", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_images", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_images", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.data_padding_fixsize", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.slidding_crop_WC"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "mode", ",", "random_crop", "=", "False", ",", "crop_nums", "=", "40", ",", "random_flip", "=", "False", ",", "sliding_crop", "=", "False", ",", "size_context", "=", "512", ",", "size_local", "=", "256", ",", "scale", "=", "4", ")", ":", "\n", "        ", "self", ".", "size_context", "=", "size_context", "\n", "self", ".", "size_local", "=", "size_local", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "crop_nums", "=", "crop_nums", "\n", "self", ".", "random_flip", "=", "random_flip", "\n", "self", ".", "random_crop", "=", "random_crop", "\n", "data", ",", "labels", "=", "read_RSimages", "(", "data_dir", ",", "mode", ")", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "labels", "=", "labels", "\n", "\n", "data_s", "=", "rescale_images", "(", "data", ",", "scale", ",", "2", ")", "\n", "labels_s", "=", "rescale_images", "(", "labels", ",", "scale", ",", "0", ")", "\n", "padding_size", "=", "(", "size_context", "-", "size_local", ")", "/", "scale", "/", "2", "\n", "self", ".", "data_s", ",", "self", ".", "labels_s", "=", "transform", ".", "data_padding_fixsize", "(", "data_s", ",", "labels_s", ",", "[", "padding_size", ",", "padding_size", "]", ")", "\n", "if", "sliding_crop", ":", "\n", "            ", "self", ".", "data_s", ",", "self", ".", "labels_s", ",", "self", ".", "data", ",", "self", ".", "labels", "=", "transform", ".", "slidding_crop_WC", "(", "self", ".", "data_s", ",", "self", ".", "labels_s", ",", "self", ".", "data", ",", "self", ".", "labels", ",", "size_context", ",", "size_local", ",", "scale", ")", "\n", "\n", "", "if", "self", ".", "random_crop", ":", "\n", "            ", "self", ".", "len", "=", "crop_nums", "*", "len", "(", "self", ".", "data", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "len", "=", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.Loader.__getitem__": [[131, 149], ["GID_WiCo.normalize_image", "torch.from_numpy", "GID_WiCo.normalize_image", "torch.from_numpy", "int", "utils.random_crop2", "utils.rand_flip2", "torch.from_numpy.transpose", "torch.from_numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.random_crop2", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rand_flip2"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "random_crop", ":", "\n", "            ", "idx", "=", "int", "(", "idx", "/", "self", ".", "crop_nums", ")", "\n", "data_s", ",", "label_s", ",", "data", ",", "label", "=", "transform", ".", "random_crop2", "(", "self", ".", "data_s", "[", "idx", "]", ",", "self", ".", "labels_s", "[", "idx", "]", ",", "self", ".", "data", "[", "idx", "]", ",", "self", ".", "labels", "[", "idx", "]", ",", "self", ".", "size_context", ",", "self", ".", "size_local", ",", "self", ".", "scale", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "self", ".", "data", "[", "idx", "]", "\n", "label", "=", "self", ".", "labels", "[", "idx", "]", "\n", "data_s", "=", "self", ".", "data_s", "[", "idx", "]", "\n", "label_s", "=", "self", ".", "labels_s", "[", "idx", "]", "\n", "", "if", "self", ".", "random_flip", ":", "\n", "            ", "data_s", ",", "label_s", ",", "data", ",", "label", "=", "transform", ".", "rand_flip2", "(", "data_s", ",", "label_s", ",", "data", ",", "label", ")", "\n", "\n", "", "data_s", "=", "normalize_image", "(", "data_s", ")", "\n", "data_s", "=", "torch", ".", "from_numpy", "(", "data_s", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "data", "=", "normalize_image", "(", "data", ")", "\n", "data", "=", "torch", ".", "from_numpy", "(", "data", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "return", "data_s", ",", "label_s", ",", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.Loader.__len__": [[150, 152], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.IRRGB2RGBIR": [[19, 22], ["cv2.split", "cv2.merge"], "function", ["None"], ["def", "IRRGB2RGBIR", "(", "img", ")", ":", "\n", "    ", "IR", ",", "R", ",", "G", ",", "B", "=", "cv2", ".", "split", "(", "img", ")", "\n", "return", "cv2", ".", "merge", "(", "(", "R", ",", "G", ",", "B", ",", "IR", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.normalize_image": [[23, 25], ["torch.utils.data"], "function", ["None"], ["", "def", "normalize_image", "(", "im", ")", ":", "\n", "    ", "return", "(", "im", "-", "GID_MEAN_IRRGB", ")", "/", "GID_STD_IRRGB", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.normalize_images": [[26, 30], ["enumerate", "GID_WiCo.normalize_image"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image"], ["", "def", "normalize_images", "(", "imgs", ")", ":", "\n", "    ", "for", "i", ",", "im", "in", "enumerate", "(", "imgs", ")", ":", "\n", "        ", "imgs", "[", "i", "]", "=", "normalize_image", "(", "im", ")", "\n", "", "return", "imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.Index2Color": [[35, 39], ["numpy.asarray", "numpy.asarray"], "function", ["None"], ["", "def", "Index2Color", "(", "pred", ")", ":", "\n", "    ", "colormap", "=", "np", ".", "asarray", "(", "GID_COLORMAP", ",", "dtype", "=", "'uint8'", ")", "\n", "x", "=", "np", ".", "asarray", "(", "pred", ",", "dtype", "=", "'int32'", ")", "\n", "return", "colormap", "[", "x", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.Colorls2Index": [[40, 44], ["enumerate", "GID_WiCo.Color2Index"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Color2Index"], ["", "def", "Colorls2Index", "(", "ColorLabels", ")", ":", "\n", "    ", "for", "i", ",", "data", "in", "enumerate", "(", "ColorLabels", ")", ":", "\n", "        ", "ColorLabels", "[", "i", "]", "=", "Color2Index", "(", "data", ")", "\n", "", "return", "ColorLabels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.Color2Index": [[45, 51], ["ColorLabel.astype", "IndexMap.astype", "torch.utils.data"], "function", ["None"], ["", "def", "Color2Index", "(", "ColorLabel", ")", ":", "\n", "    ", "data", "=", "ColorLabel", ".", "astype", "(", "np", ".", "int32", ")", "\n", "idx", "=", "(", "data", "[", ":", ",", ":", ",", "0", "]", "*", "256", "+", "data", "[", ":", ",", ":", ",", "1", "]", ")", "*", "256", "+", "data", "[", ":", ",", ":", ",", "2", "]", "\n", "IndexMap", "=", "colormap2label", "[", "idx", "]", "\n", "IndexMap", "=", "IndexMap", "*", "(", "IndexMap", "<=", "num_classes", ")", "\n", "return", "IndexMap", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.get_file_name": [[52, 64], ["os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "get_file_name", "(", "mode", "=", "'train'", ")", ":", "\n", "    ", "assert", "mode", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", "\n", "if", "mode", "==", "'train'", ":", "\n", "        ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'train'", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'numpy'", ",", "'train'", ")", "\n", "", "else", ":", "\n", "        ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'val'", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'numpy'", ",", "'val'", ")", "\n", "\n", "", "data_list", "=", "os", ".", "listdir", "(", "img_dir", ")", "\n", "numpy_path_list", "=", "[", "os", ".", "path", ".", "join", "(", "pred_path", ",", "it", ")", "for", "it", "in", "data_list", "]", "\n", "return", "numpy_path_list", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.read_RSimages": [[65, 90], ["os.path.join", "os.listdir", "int", "print", "print", "len", "img_path.replace", "skimage.io.imread", "GID_WiCo.Color2Index", "torch.utils.data.append", "labels.append", "data_list.append", "skimage.io.imread", "GID_WiCo.rescale_image", "GID_WiCo.rescale_image", "print", "os.path.join", "str", "len"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Color2Index", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_image"], ["", "def", "read_RSimages", "(", "data_dir", ",", "mode", ",", "rescale_ratio", "=", "False", ")", ":", "\n", "    ", "assert", "mode", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", "\n", "data_list", "=", "[", "]", "\n", "img_dir", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "mode", ",", "'image'", ")", "\n", "item_list", "=", "os", ".", "listdir", "(", "img_dir", ")", "\n", "for", "item", "in", "item_list", ":", "\n", "        ", "if", "(", "item", "[", "-", "4", ":", "]", "==", "'.png'", ")", ":", "data_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "item", ")", ")", "\n", "", "data_length", "=", "int", "(", "len", "(", "data_list", ")", ")", "\n", "count", "=", "0", "\n", "data", ",", "labels", "=", "[", "]", ",", "[", "]", "\n", "for", "it", "in", "data_list", ":", "\n", "        ", "img_path", "=", "it", "\n", "mask_path", "=", "img_path", ".", "replace", "(", "'image'", ",", "'label'", ")", "\n", "img", "=", "io", ".", "imread", "(", "img_path", ")", "\n", "label", "=", "Color2Index", "(", "io", ".", "imread", "(", "mask_path", ")", ")", "\n", "if", "rescale_ratio", ":", "\n", "            ", "img", "=", "rescale_image", "(", "img", ",", "rescale_ratio", ",", "2", ")", "\n", "label", "=", "rescale_image", "(", "label", ",", "rescale_ratio", ",", "0", ")", "\n", "", "data", ".", "append", "(", "img", ")", "\n", "labels", ".", "append", "(", "label", ")", "\n", "count", "+=", "1", "\n", "if", "not", "count", "%", "10", ":", "print", "(", "'%d/%d images loaded.'", "%", "(", "count", ",", "data_length", ")", ")", "\n", "", "print", "(", "data", "[", "0", "]", ".", "shape", ")", "\n", "print", "(", "str", "(", "len", "(", "data", ")", ")", "+", "' '", "+", "mode", "+", "' images'", "+", "' loaded.'", ")", "\n", "return", "data", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.rescale_images": [[91, 96], ["rescaled_imgs.append", "GID_WiCo.rescale_image", "torch.utils.data"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_image"], ["", "def", "rescale_images", "(", "imgs", ",", "scale", ",", "order", "=", "0", ")", ":", "\n", "    ", "rescaled_imgs", "=", "[", "]", "\n", "for", "im", "in", "imgs", ":", "\n", "        ", "rescaled_imgs", ".", "append", "(", "rescale_image", "(", "im", ",", "scale", ",", "order", ")", ")", "\n", "", "return", "rescaled_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.GID_WiCo.rescale_image": [[97, 104], ["cv2.resize", "int", "int"], "function", ["None"], ["", "def", "rescale_image", "(", "img", ",", "scale", "=", "8", ",", "order", "=", "0", ")", ":", "\n", "    ", "flag", "=", "cv2", ".", "INTER_NEAREST", "\n", "if", "order", "==", "1", ":", "flag", "=", "cv2", ".", "INTER_LINEAR", "\n", "elif", "order", "==", "2", ":", "flag", "=", "cv2", ".", "INTER_AREA", "\n", "elif", "order", ">", "2", ":", "flag", "=", "cv2", ".", "INTER_CUBIC", "\n", "im_rescaled", "=", "cv2", ".", "resize", "(", "img", ",", "(", "int", "(", "img", ".", "shape", "[", "0", "]", "/", "scale", ")", ",", "int", "(", "img", ".", "shape", "[", "1", "]", "/", "scale", ")", ")", ",", "interpolation", "=", "flag", ")", "\n", "return", "im_rescaled", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.Loader.__init__": [[97, 121], ["BLU_WiCo.read_RSimages", "BLU_WiCo.rescale_images", "BLU_WiCo.rescale_images", "utils.data_padding_fixsize", "utils.slidding_crop_WC", "len", "len"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.read_RSimages", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_images", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_images", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.data_padding_fixsize", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.slidding_crop_WC"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "mode", ",", "random_crop", "=", "False", ",", "crop_nums", "=", "40", ",", "random_flip", "=", "False", ",", "sliding_crop", "=", "False", ",", "size_context", "=", "256", "*", "3", ",", "size_local", "=", "256", ",", "scale", "=", "4", ")", ":", "\n", "        ", "self", ".", "size_context", "=", "size_context", "\n", "self", ".", "size_local", "=", "size_local", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "crop_nums", "=", "crop_nums", "\n", "self", ".", "random_flip", "=", "random_flip", "\n", "self", ".", "random_crop", "=", "random_crop", "\n", "data", ",", "labels", "=", "read_RSimages", "(", "data_dir", ",", "mode", ")", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "labels", "=", "labels", "\n", "\n", "data_s", "=", "rescale_images", "(", "data", ",", "scale", ",", "2", ")", "\n", "labels_s", "=", "rescale_images", "(", "labels", ",", "scale", ",", "0", ")", "\n", "padding_size", "=", "(", "size_context", "-", "size_local", ")", "/", "scale", "/", "2", "\n", "self", ".", "data_s", ",", "self", ".", "labels_s", "=", "transform", ".", "data_padding_fixsize", "(", "data_s", ",", "labels_s", ",", "[", "padding_size", ",", "padding_size", "]", ")", "\n", "if", "sliding_crop", ":", "\n", "            ", "self", ".", "data_s", ",", "self", ".", "labels_s", ",", "self", ".", "data", ",", "self", ".", "labels", "=", "transform", ".", "slidding_crop_WC", "(", "self", ".", "data_s", ",", "self", ".", "labels_s", ",", "self", ".", "data", ",", "self", ".", "labels", ",", "size_context", ",", "size_local", ",", "scale", ")", "\n", "\n", "", "if", "self", ".", "random_crop", ":", "\n", "            ", "self", ".", "len", "=", "crop_nums", "*", "len", "(", "self", ".", "data", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "len", "=", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.Loader.__getitem__": [[122, 140], ["BLU_WiCo.normalize_image", "torch.from_numpy", "BLU_WiCo.normalize_image", "torch.from_numpy", "int", "utils.random_crop2", "utils.rand_flip2", "torch.from_numpy.transpose", "torch.from_numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.random_crop2", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rand_flip2"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "random_crop", ":", "\n", "            ", "idx", "=", "int", "(", "idx", "/", "self", ".", "crop_nums", ")", "\n", "data_s", ",", "label_s", ",", "data", ",", "label", "=", "transform", ".", "random_crop2", "(", "self", ".", "data_s", "[", "idx", "]", ",", "self", ".", "labels_s", "[", "idx", "]", ",", "self", ".", "data", "[", "idx", "]", ",", "self", ".", "labels", "[", "idx", "]", ",", "self", ".", "size_context", ",", "self", ".", "size_local", ",", "self", ".", "scale", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "self", ".", "data", "[", "idx", "]", "\n", "label", "=", "self", ".", "labels", "[", "idx", "]", "\n", "data_s", "=", "self", ".", "data_s", "[", "idx", "]", "\n", "label_s", "=", "self", ".", "labels_s", "[", "idx", "]", "\n", "", "if", "self", ".", "random_flip", ":", "\n", "            ", "data_s", ",", "label_s", ",", "data", ",", "label", "=", "transform", ".", "rand_flip2", "(", "data_s", ",", "label_s", ",", "data", ",", "label", ")", "\n", "\n", "", "data_s", "=", "normalize_image", "(", "data_s", ")", "\n", "data_s", "=", "torch", ".", "from_numpy", "(", "data_s", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "data", "=", "normalize_image", "(", "data", ")", "\n", "data", "=", "torch", ".", "from_numpy", "(", "data", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "return", "data_s", ",", "label_s", ",", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.Loader.__len__": [[141, 143], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.normalize_image": [[16, 18], ["torch.utils.data"], "function", ["None"], ["def", "normalize_image", "(", "im", ")", ":", "\n", "    ", "return", "(", "im", "-", "BLU_MEAN", ")", "/", "BLU_STD", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.normalize_images": [[20, 24], ["enumerate", "BLU_WiCo.normalize_image"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image"], ["", "def", "normalize_images", "(", "imgs", ")", ":", "\n", "    ", "for", "i", ",", "im", "in", "enumerate", "(", "imgs", ")", ":", "\n", "        ", "imgs", "[", "i", "]", "=", "normalize_image", "(", "im", ")", "\n", "", "return", "imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.Index2Color": [[31, 35], ["numpy.asarray", "numpy.asarray"], "function", ["None"], ["", "def", "Index2Color", "(", "pred", ")", ":", "\n", "    ", "colormap", "=", "np", ".", "asarray", "(", "BLU_COLORMAP", ",", "dtype", "=", "'uint8'", ")", "\n", "x", "=", "np", ".", "asarray", "(", "pred", ",", "dtype", "=", "'int32'", ")", "\n", "return", "colormap", "[", "x", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.Colorls2Index": [[37, 41], ["enumerate", "BLU_WiCo.Color2Index"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Color2Index"], ["", "def", "Colorls2Index", "(", "ColorLabels", ")", ":", "\n", "    ", "for", "i", ",", "data", "in", "enumerate", "(", "ColorLabels", ")", ":", "\n", "        ", "ColorLabels", "[", "i", "]", "=", "Color2Index", "(", "data", ")", "\n", "", "return", "ColorLabels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.Color2Index": [[43, 49], ["ColorLabel.astype", "IndexMap.astype", "torch.utils.data"], "function", ["None"], ["", "def", "Color2Index", "(", "ColorLabel", ")", ":", "\n", "    ", "data", "=", "ColorLabel", ".", "astype", "(", "np", ".", "int32", ")", "\n", "idx", "=", "(", "data", "[", ":", ",", ":", ",", "0", "]", "*", "256", "+", "data", "[", ":", ",", ":", ",", "1", "]", ")", "*", "256", "+", "data", "[", ":", ",", ":", ",", "2", "]", "\n", "IndexMap", "=", "colormap2label", "[", "idx", "]", "\n", "IndexMap", "=", "IndexMap", "*", "(", "IndexMap", "<=", "num_classes", ")", "\n", "return", "IndexMap", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.read_RSimages": [[51, 78], ["print", "os.path.join", "os.listdir", "int", "print", "print", "len", "img_path.replace", "skimage.io.imread", "BLU_WiCo.Color2Index", "torch.utils.data.append", "labels.append", "data_list.append", "skimage.io.imread", "BLU_WiCo.rescale_image", "BLU_WiCo.rescale_image", "print", "os.path.join", "str", "len"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Color2Index", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_image"], ["", "def", "read_RSimages", "(", "data_dir", ",", "mode", ",", "rescale_ratio", "=", "False", ")", ":", "\n", "    ", "print", "(", "'Reading data from '", "+", "data_dir", "+", "':'", ")", "\n", "assert", "mode", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", "\n", "data_list", "=", "[", "]", "\n", "img_dir", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "mode", ",", "'image'", ")", "\n", "item_list", "=", "os", ".", "listdir", "(", "img_dir", ")", "\n", "for", "item", "in", "item_list", ":", "\n", "        ", "if", "(", "item", "[", "-", "4", ":", "]", "==", "'.png'", ")", ":", "data_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "item", ")", ")", "\n", "", "data_length", "=", "int", "(", "len", "(", "data_list", ")", ")", "\n", "count", "=", "0", "\n", "data", ",", "labels", "=", "[", "]", ",", "[", "]", "\n", "for", "it", "in", "data_list", ":", "\n", "# print(it)", "\n", "        ", "img_path", "=", "it", "\n", "mask_path", "=", "img_path", ".", "replace", "(", "'image'", ",", "'label'", ")", "\n", "img", "=", "io", ".", "imread", "(", "img_path", ")", "\n", "label", "=", "Color2Index", "(", "io", ".", "imread", "(", "mask_path", ")", ")", "\n", "if", "rescale_ratio", ":", "\n", "            ", "img", "=", "rescale_image", "(", "img", ",", "rescale_ratio", ",", "2", ")", "\n", "label", "=", "rescale_image", "(", "label", ",", "rescale_ratio", ",", "0", ")", "\n", "", "data", ".", "append", "(", "img", ")", "\n", "labels", ".", "append", "(", "label", ")", "\n", "count", "+=", "1", "\n", "if", "not", "count", "%", "10", ":", "print", "(", "'%d/%d images loaded.'", "%", "(", "count", ",", "data_length", ")", ")", "\n", "", "print", "(", "data", "[", "0", "]", ".", "shape", ")", "\n", "print", "(", "str", "(", "len", "(", "data", ")", ")", "+", "' '", "+", "mode", "+", "' images'", "+", "' loaded.'", ")", "\n", "return", "data", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.rescale_images": [[80, 85], ["rescaled_imgs.append", "BLU_WiCo.rescale_image", "torch.utils.data"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_image"], ["", "def", "rescale_images", "(", "imgs", ",", "scale", ",", "order", "=", "0", ")", ":", "\n", "    ", "rescaled_imgs", "=", "[", "]", "\n", "for", "im", "in", "imgs", ":", "\n", "        ", "rescaled_imgs", ".", "append", "(", "rescale_image", "(", "im", ",", "scale", ",", "order", ")", ")", "\n", "", "return", "rescaled_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.BLU_WiCo.rescale_image": [[87, 94], ["cv2.resize", "int", "int"], "function", ["None"], ["", "def", "rescale_image", "(", "img", ",", "scale", "=", "8", ",", "order", "=", "0", ")", ":", "\n", "    ", "flag", "=", "cv2", ".", "INTER_NEAREST", "\n", "if", "order", "==", "1", ":", "flag", "=", "cv2", ".", "INTER_LINEAR", "\n", "elif", "order", "==", "2", ":", "flag", "=", "cv2", ".", "INTER_AREA", "\n", "elif", "order", ">", "2", ":", "flag", "=", "cv2", ".", "INTER_CUBIC", "\n", "im_rescaled", "=", "cv2", ".", "resize", "(", "img", ",", "(", "int", "(", "img", ".", "shape", "[", "0", "]", "/", "scale", ")", ",", "int", "(", "img", ".", "shape", "[", "1", "]", "/", "scale", ")", ")", ",", "interpolation", "=", "flag", ")", "\n", "return", "im_rescaled", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Loader.__init__": [[117, 140], ["PD_WiCo.read_RSimages", "PD_WiCo.rescale_images", "PD_WiCo.rescale_images", "utils.data_padding_fixsize", "utils.slidding_crop_WC", "len", "len"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.read_RSimages", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_images", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_images", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.data_padding_fixsize", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.slidding_crop_WC"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "mode", ",", "random_crop", "=", "False", ",", "crop_nums", "=", "40", ",", "random_flip", "=", "False", ",", "sliding_crop", "=", "False", ",", "\n", "size_context", "=", "256", "*", "3", ",", "size_local", "=", "320", ",", "scale", "=", "4", ")", ":", "\n", "        ", "self", ".", "size_context", "=", "size_context", "\n", "self", ".", "size_local", "=", "size_local", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "crop_nums", "=", "crop_nums", "\n", "self", ".", "random_flip", "=", "random_flip", "\n", "self", ".", "random_crop", "=", "random_crop", "\n", "data", ",", "labels", "=", "read_RSimages", "(", "data_dir", ",", "mode", ")", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "labels", "=", "labels", "\n", "\n", "data_s", "=", "rescale_images", "(", "data", ",", "scale", ",", "2", ")", "\n", "labels_s", "=", "rescale_images", "(", "labels", ",", "scale", ",", "0", ")", "\n", "padding_size", "=", "(", "size_context", "-", "size_local", ")", "/", "scale", "/", "2", "\n", "self", ".", "data_s", ",", "self", ".", "labels_s", "=", "transform", ".", "data_padding_fixsize", "(", "data_s", ",", "labels_s", ",", "[", "padding_size", ",", "padding_size", "]", ")", "\n", "if", "sliding_crop", ":", "\n", "            ", "self", ".", "data_s", ",", "self", ".", "labels_s", ",", "self", ".", "data", ",", "self", ".", "labels", "=", "transform", ".", "slidding_crop_WC", "(", "self", ".", "data_s", ",", "self", ".", "labels_s", ",", "self", ".", "data", ",", "self", ".", "labels", ",", "size_context", ",", "size_local", ",", "scale", ")", "\n", "", "if", "self", ".", "random_crop", ":", "\n", "            ", "self", ".", "len", "=", "crop_nums", "*", "len", "(", "self", ".", "data", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "len", "=", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Loader.__getitem__": [[141, 159], ["PD_WiCo.normalize_image", "torch.from_numpy", "PD_WiCo.normalize_image", "torch.from_numpy", "int", "utils.random_crop2", "utils.rand_flip2", "torch.from_numpy.transpose", "torch.from_numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.random_crop2", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.transform.rand_flip2"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "random_crop", ":", "\n", "            ", "idx", "=", "int", "(", "idx", "/", "self", ".", "crop_nums", ")", "\n", "data_s", ",", "label_s", ",", "data", ",", "label", "=", "transform", ".", "random_crop2", "(", "self", ".", "data_s", "[", "idx", "]", ",", "self", ".", "labels_s", "[", "idx", "]", ",", "self", ".", "data", "[", "idx", "]", ",", "self", ".", "labels", "[", "idx", "]", ",", "self", ".", "size_context", ",", "self", ".", "size_local", ",", "self", ".", "scale", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "self", ".", "data", "[", "idx", "]", "\n", "label", "=", "self", ".", "labels", "[", "idx", "]", "\n", "data_s", "=", "self", ".", "data_s", "[", "idx", "]", "\n", "label_s", "=", "self", ".", "labels_s", "[", "idx", "]", "\n", "", "if", "self", ".", "random_flip", ":", "\n", "            ", "data_s", ",", "label_s", ",", "data", ",", "label", "=", "transform", ".", "rand_flip2", "(", "data_s", ",", "label_s", ",", "data", ",", "label", ")", "\n", "\n", "", "data_s", "=", "normalize_image", "(", "data_s", ")", "\n", "data_s", "=", "torch", ".", "from_numpy", "(", "data_s", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "data", "=", "normalize_image", "(", "data", ")", "\n", "data", "=", "torch", ".", "from_numpy", "(", "data", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "return", "data_s", ",", "label_s", ",", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Loader.__len__": [[160, 162], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image": [[21, 23], ["torch.utils.data"], "function", ["None"], ["def", "normalize_image", "(", "im", ")", ":", "\n", "    ", "return", "(", "im", "-", "PD_MEAN", ")", "/", "PD_STD", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_images": [[25, 29], ["enumerate", "PD_WiCo.normalize_image"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.normalize_image"], ["", "def", "normalize_images", "(", "imgs", ")", ":", "\n", "    ", "for", "i", ",", "im", "in", "enumerate", "(", "imgs", ")", ":", "\n", "        ", "imgs", "[", "i", "]", "=", "normalize_image", "(", "im", ")", "\n", "", "return", "imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Index2Color": [[36, 40], ["numpy.asarray", "numpy.asarray"], "function", ["None"], ["", "def", "Index2Color", "(", "pred", ")", ":", "\n", "    ", "colormap", "=", "np", ".", "asarray", "(", "PD_COLORMAP", ",", "dtype", "=", "'uint8'", ")", "\n", "x", "=", "np", ".", "asarray", "(", "pred", ",", "dtype", "=", "'int32'", ")", "\n", "return", "colormap", "[", "x", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Colorls2Index": [[42, 46], ["enumerate", "PD_WiCo.Color2Index"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Color2Index"], ["", "def", "Colorls2Index", "(", "ColorLabels", ")", ":", "\n", "    ", "for", "i", ",", "data", "in", "enumerate", "(", "ColorLabels", ")", ":", "\n", "        ", "ColorLabels", "[", "i", "]", "=", "Color2Index", "(", "data", ")", "\n", "", "return", "ColorLabels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Color2Index": [[48, 54], ["ColorLabel.astype", "IndexMap.astype", "torch.utils.data"], "function", ["None"], ["", "def", "Color2Index", "(", "ColorLabel", ")", ":", "\n", "    ", "data", "=", "ColorLabel", ".", "astype", "(", "np", ".", "int32", ")", "\n", "idx", "=", "(", "data", "[", ":", ",", ":", ",", "0", "]", "*", "256", "+", "data", "[", ":", ",", ":", ",", "1", "]", ")", "*", "256", "+", "data", "[", ":", ",", ":", ",", "2", "]", "\n", "IndexMap", "=", "colormap2label", "[", "idx", "]", "\n", "IndexMap", "=", "IndexMap", "*", "(", "IndexMap", "<=", "num_classes", ")", "\n", "return", "IndexMap", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.get_file_name": [[55, 67], ["os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "get_file_name", "(", "mode", "=", "'train'", ")", ":", "\n", "    ", "assert", "mode", "in", "[", "'train'", ",", "'val'", "]", "\n", "if", "mode", "==", "'train'", ":", "\n", "        ", "img_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'train'", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'numpy'", ",", "'train'", ")", "\n", "", "else", ":", "\n", "        ", "img_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'val'", ")", "\n", "pred_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'numpy'", ",", "'val'", ")", "\n", "\n", "", "data_list", "=", "os", ".", "listdir", "(", "img_path", ")", "\n", "numpy_path_list", "=", "[", "os", ".", "path", ".", "join", "(", "pred_path", ",", "it", ")", "for", "it", "in", "data_list", "]", "\n", "return", "numpy_path_list", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.read_RSimages": [[68, 100], ["print", "os.path.join", "os.path.join", "os.path.join", "os.listdir", "int", "print", "print", "len", "os.path.join", "os.path.join", "os.path.join", "skimage.io.imread", "skimage.io.imread", "numpy.concatenate", "PD_WiCo.Color2Index", "torch.utils.data.append", "labels.append", "data_list.append", "skimage.io.imread", "print", "numpy.expand_dims", "str", "len"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.Color2Index"], ["", "def", "read_RSimages", "(", "data_dir", ",", "mode", ")", ":", "\n", "    ", "print", "(", "'Reading data from '", "+", "data_dir", "+", "':'", ")", "\n", "assert", "mode", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", "\n", "data_list", "=", "[", "]", "\n", "img_dir", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "mode", ")", "\n", "dsm_dir", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "mode", ",", "'dsm'", ")", "\n", "mask_dir", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'groundtruth_noBoundary'", ")", "\n", "item_list", "=", "os", ".", "listdir", "(", "img_dir", ")", "\n", "for", "item", "in", "item_list", ":", "\n", "        ", "if", "(", "item", "[", "-", "4", ":", "]", "==", "'.tif'", ")", ":", "data_list", ".", "append", "(", "item", ")", "\n", "", "data_length", "=", "int", "(", "len", "(", "data_list", ")", ")", "\n", "count", "=", "0", "\n", "data", ",", "labels", "=", "[", "]", ",", "[", "]", "\n", "for", "it", "in", "data_list", ":", "\n", "# print(it)", "\n", "        ", "img_name", "=", "it", "\n", "dsm_name", "=", "'dsm'", "+", "it", "[", "3", ":", "-", "10", "]", "+", "'.jpg'", "\n", "mask_name", "=", "it", "[", ":", "-", "10", "]", "+", "'_label_noBoundary.tif'", "\n", "img_path", "=", "os", ".", "path", ".", "join", "(", "img_dir", ",", "img_name", ")", "\n", "dsm_path", "=", "os", ".", "path", ".", "join", "(", "dsm_dir", ",", "dsm_name", ")", "\n", "mask_path", "=", "os", ".", "path", ".", "join", "(", "mask_dir", ",", "mask_name", ")", "\n", "img", "=", "io", ".", "imread", "(", "img_path", ")", "\n", "dsm", "=", "io", ".", "imread", "(", "dsm_path", ")", "\n", "img", "=", "np", ".", "concatenate", "(", "(", "img", ",", "np", ".", "expand_dims", "(", "dsm", ",", "axis", "=", "2", ")", ")", ",", "axis", "=", "2", ")", "\n", "label", "=", "Color2Index", "(", "io", ".", "imread", "(", "mask_path", ")", ")", "\n", "data", ".", "append", "(", "img", ")", "\n", "labels", ".", "append", "(", "label", ")", "\n", "count", "+=", "1", "\n", "if", "not", "count", "%", "5", ":", "print", "(", "'%d/%d images loaded.'", "%", "(", "count", ",", "data_length", ")", ")", "\n", "", "print", "(", "data", "[", "0", "]", ".", "shape", ")", "\n", "print", "(", "str", "(", "len", "(", "data", ")", ")", "+", "' '", "+", "mode", "+", "' images'", "+", "' loaded.'", ")", "\n", "return", "data", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_images": [[101, 107], ["PD_WiCo.rescale_image", "rescaled_imgs.append", "torch.utils.data"], "function", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_image"], ["", "def", "rescale_images", "(", "imgs", ",", "scale", ",", "order", ")", ":", "\n", "    ", "rescaled_imgs", "=", "[", "]", "\n", "for", "im", "in", "imgs", ":", "\n", "        ", "im_r", "=", "rescale_image", "(", "im", ",", "scale", ",", "order", ")", "\n", "rescaled_imgs", ".", "append", "(", "im_r", ")", "\n", "", "return", "rescaled_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.datasets.PD_WiCo.rescale_image": [[108, 115], ["cv2.resize", "int", "int"], "function", ["None"], ["", "def", "rescale_image", "(", "img", ",", "scale", "=", "8", ",", "order", "=", "0", ")", ":", "\n", "    ", "flag", "=", "cv2", ".", "INTER_NEAREST", "\n", "if", "order", "==", "1", ":", "flag", "=", "cv2", ".", "INTER_LINEAR", "\n", "elif", "order", "==", "2", ":", "flag", "=", "cv2", ".", "INTER_AREA", "\n", "elif", "order", ">", "2", ":", "flag", "=", "cv2", ".", "INTER_CUBIC", "\n", "im_rescaled", "=", "cv2", ".", "resize", "(", "img", ",", "(", "int", "(", "img", ".", "shape", "[", "0", "]", "/", "scale", ")", ",", "int", "(", "img", ".", "shape", "[", "1", "]", "/", "scale", ")", ")", ",", "interpolation", "=", "flag", ")", "\n", "return", "im_rescaled", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.FCN_8s.FCN_res101.__init__": [[11, 36], ["torch.Module.__init__", "torchvision.models.resnet101", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "FCN_8s.FCN_res101.layer3.named_modules", "FCN_8s.FCN_res101.layer4.named_modules", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d.weight.data[].copy_", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "num_classes", "=", "7", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "FCN_101", ",", "self", ")", ".", "__init__", "(", ")", "\n", "resnet", "=", "models", ".", "resnet101", "(", "pretrained", ")", "\n", "newconv1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "if", "in_channels", ">", "3", ":", "\n", "          ", "newconv1", ".", "weight", ".", "data", "[", ":", ",", "3", ":", "in_channels", ",", ":", ",", ":", "]", ".", "copy_", "(", "resnet", ".", "conv1", ".", "weight", ".", "data", "[", ":", ",", "0", ":", "in_channels", "-", "3", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "self", ".", "layer0", "=", "nn", ".", "Sequential", "(", "newconv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ")", "\n", "self", ".", "maxpool", "=", "resnet", ".", "maxpool", "\n", "self", ".", "layer1", "=", "resnet", ".", "layer1", "\n", "self", ".", "layer2", "=", "resnet", ".", "layer2", "\n", "self", ".", "layer3", "=", "resnet", ".", "layer3", "\n", "self", ".", "layer4", "=", "resnet", ".", "layer4", "\n", "for", "n", ",", "m", "in", "self", ".", "layer3", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv2'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "", "", "for", "n", ",", "m", "in", "self", ".", "layer4", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv2'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "\n", "", "", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "2048", ",", "128", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ",", "momentum", "=", "0.95", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Conv2d", "(", "128", ",", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.FCN_8s.FCN_res101.forward": [[37, 50], ["FCN_8s.FCN_res101.size", "FCN_8s.FCN_res101.layer0", "FCN_8s.FCN_res101.maxpool", "FCN_8s.FCN_res101.layer1", "FCN_8s.FCN_res101.layer2", "FCN_8s.FCN_res101.layer3", "FCN_8s.FCN_res101.layer4", "FCN_8s.FCN_res101.head", "FCN_8s.FCN_res101.classifier", "torch.nn.functional.upsample", "torch.nn.functional.upsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "\n", "x", "=", "self", ".", "layer0", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "\n", "return", "F", ".", "upsample", "(", "x", ",", "x_size", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "#, F.upsample(x0, x_size[2:], mode='bilinear')#", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.FCN_8s.FCN_res50.__init__": [[52, 81], ["torch.Module.__init__", "torchvision.models.resnet50", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "FCN_8s.FCN_res50.layer3.named_modules", "FCN_8s.FCN_res50.layer4.named_modules", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d.weight.data[].copy_", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "num_classes", "=", "7", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "FCN_res50", ",", "self", ")", ".", "__init__", "(", ")", "\n", "resnet", "=", "models", ".", "resnet50", "(", "pretrained", ")", "\n", "newconv1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "if", "in_channels", ">", "3", ":", "\n", "          ", "newconv1", ".", "weight", ".", "data", "[", ":", ",", "3", ":", "in_channels", ",", ":", ",", ":", "]", ".", "copy_", "(", "resnet", ".", "conv1", ".", "weight", ".", "data", "[", ":", ",", "0", ":", "in_channels", "-", "3", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "self", ".", "layer0", "=", "nn", ".", "Sequential", "(", "newconv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ")", "\n", "self", ".", "maxpool", "=", "resnet", ".", "maxpool", "\n", "self", ".", "layer1", "=", "resnet", ".", "layer1", "\n", "self", ".", "layer2", "=", "resnet", ".", "layer2", "\n", "self", ".", "layer3", "=", "resnet", ".", "layer3", "\n", "self", ".", "layer4", "=", "resnet", ".", "layer4", "\n", "for", "n", ",", "m", "in", "self", ".", "layer3", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv2'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "", "", "for", "n", ",", "m", "in", "self", ".", "layer4", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv2'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "\n", "", "", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "2048", ",", "128", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ",", "momentum", "=", "0.95", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ",", "momentum", "=", "0.95", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "#nn.Dropout2d(0.5),", "\n", "nn", ".", "Conv2d", "(", "128", ",", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.FCN_8s.FCN_res50.forward": [[83, 96], ["FCN_8s.FCN_res50.size", "FCN_8s.FCN_res50.layer0", "FCN_8s.FCN_res50.maxpool", "FCN_8s.FCN_res50.layer1", "FCN_8s.FCN_res50.layer2", "FCN_8s.FCN_res50.layer3", "FCN_8s.FCN_res50.layer4", "FCN_8s.FCN_res50.head", "FCN_8s.FCN_res50.classifier", "torch.nn.functional.upsample", "torch.nn.functional.upsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "\n", "x", "=", "self", ".", "layer0", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "\n", "return", "F", ".", "upsample", "(", "x", ",", "x_size", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "#, F.upsample(x0, x_size[2:], mode='bilinear')#", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.FCN_8s.FCN_res34.__init__": [[98, 128], ["torch.Module.__init__", "torchvision.models.resnet34", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d.weight.data[].copy_", "torch.Sequential", "torch.Sequential", "FCN_8s.FCN_res34.layer3.named_modules", "FCN_8s.FCN_res34.layer4.named_modules", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d.weight.data[].copy_", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "num_classes", "=", "7", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "FCN_res34", ",", "self", ")", ".", "__init__", "(", ")", "\n", "resnet", "=", "models", ".", "resnet34", "(", "pretrained", ")", "\n", "newconv1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "newconv1", ".", "weight", ".", "data", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", ".", "copy_", "(", "resnet", ".", "conv1", ".", "weight", ".", "data", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", ")", "\n", "if", "in_channels", ">", "3", ":", "\n", "          ", "newconv1", ".", "weight", ".", "data", "[", ":", ",", "3", ":", "in_channels", ",", ":", ",", ":", "]", ".", "copy_", "(", "resnet", ".", "conv1", ".", "weight", ".", "data", "[", ":", ",", "0", ":", "in_channels", "-", "3", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "self", ".", "layer0", "=", "nn", ".", "Sequential", "(", "newconv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ")", "\n", "self", ".", "maxpool", "=", "resnet", ".", "maxpool", "\n", "self", ".", "layer1", "=", "resnet", ".", "layer1", "\n", "self", ".", "layer2", "=", "resnet", ".", "layer2", "\n", "self", ".", "layer3", "=", "resnet", ".", "layer3", "\n", "self", ".", "layer4", "=", "resnet", ".", "layer4", "\n", "for", "n", ",", "m", "in", "self", ".", "layer3", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv1'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "", "", "for", "n", ",", "m", "in", "self", ".", "layer4", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv1'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "\n", "", "", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "512", ",", "128", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ",", "momentum", "=", "0.95", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ",", "momentum", "=", "0.95", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.FCN_8s.FCN_res34.forward": [[130, 143], ["FCN_8s.FCN_res34.size", "FCN_8s.FCN_res34.layer0", "FCN_8s.FCN_res34.maxpool", "FCN_8s.FCN_res34.layer1", "FCN_8s.FCN_res34.layer2", "FCN_8s.FCN_res34.layer3", "FCN_8s.FCN_res34.layer4", "FCN_8s.FCN_res34.head", "FCN_8s.FCN_res34.classifier", "torch.nn.functional.upsample", "torch.nn.functional.upsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "\n", "x0", "=", "self", ".", "layer0", "(", "x", ")", "#size:1/2", "\n", "x", "=", "self", ".", "maxpool", "(", "x0", ")", "#size:1/4", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "#size:1/4", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "#size:1/8", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "#size:1/16", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "\n", "return", "F", ".", "upsample", "(", "x", ",", "x_size", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.FCN_8s.FCN_res18.__init__": [[145, 175], ["torch.Module.__init__", "torchvision.models.resnet18", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d.weight.data[].copy_", "torch.Sequential", "torch.Sequential", "FCN_8s.FCN_res18.layer3.named_modules", "FCN_8s.FCN_res18.layer4.named_modules", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d.weight.data[].copy_", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "num_classes", "=", "7", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "FCN_res18", ",", "self", ")", ".", "__init__", "(", ")", "\n", "resnet", "=", "models", ".", "resnet18", "(", "pretrained", ")", "\n", "newconv1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "newconv1", ".", "weight", ".", "data", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", ".", "copy_", "(", "resnet", ".", "conv1", ".", "weight", ".", "data", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", ")", "\n", "if", "in_channels", ">", "3", ":", "\n", "          ", "newconv1", ".", "weight", ".", "data", "[", ":", ",", "3", ":", "in_channels", ",", ":", ",", ":", "]", ".", "copy_", "(", "resnet", ".", "conv1", ".", "weight", ".", "data", "[", ":", ",", "0", ":", "in_channels", "-", "3", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "self", ".", "layer0", "=", "nn", ".", "Sequential", "(", "newconv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ")", "\n", "self", ".", "maxpool", "=", "resnet", ".", "maxpool", "\n", "self", ".", "layer1", "=", "resnet", ".", "layer1", "\n", "self", ".", "layer2", "=", "resnet", ".", "layer2", "\n", "self", ".", "layer3", "=", "resnet", ".", "layer3", "\n", "self", ".", "layer4", "=", "resnet", ".", "layer4", "\n", "for", "n", ",", "m", "in", "self", ".", "layer3", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv1'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "", "", "for", "n", ",", "m", "in", "self", ".", "layer4", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv1'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "\n", "", "", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "512", ",", "128", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ",", "momentum", "=", "0.95", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ",", "momentum", "=", "0.95", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.FCN_8s.FCN_res18.forward": [[177, 190], ["FCN_8s.FCN_res18.size", "FCN_8s.FCN_res18.layer0", "FCN_8s.FCN_res18.maxpool", "FCN_8s.FCN_res18.layer1", "FCN_8s.FCN_res18.layer2", "FCN_8s.FCN_res18.layer3", "FCN_8s.FCN_res18.layer4", "FCN_8s.FCN_res18.head", "FCN_8s.FCN_res18.classifier", "torch.nn.functional.upsample", "torch.nn.functional.upsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "\n", "x0", "=", "self", ".", "layer0", "(", "x", ")", "#size:1/2", "\n", "x", "=", "self", ".", "maxpool", "(", "x0", ")", "#size:1/4", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "#size:1/4", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "#size:1/8", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "#size:1/16", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "\n", "return", "F", ".", "upsample", "(", "x", ",", "x_size", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.FCN_8s.conv3x3": [[7, 9], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.FCN_res50.__init__": [[26, 45], ["torch.Module.__init__", "torchvision.models.resnet50", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "WiCoNet.FCN_res50.layer3.named_modules", "WiCoNet.FCN_res50.layer4.named_modules", "torch.Conv2d.weight.data[].copy_"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "num_classes", "=", "7", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "FCN_res50", ",", "self", ")", ".", "__init__", "(", ")", "\n", "resnet", "=", "models", ".", "resnet50", "(", "pretrained", ")", "\n", "newconv1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "if", "in_channels", ">", "3", ":", "\n", "            ", "newconv1", ".", "weight", ".", "data", "[", ":", ",", "3", ":", "in_channels", ",", ":", ",", ":", "]", ".", "copy_", "(", "resnet", ".", "conv1", ".", "weight", ".", "data", "[", ":", ",", "0", ":", "in_channels", "-", "3", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "self", ".", "layer0", "=", "nn", ".", "Sequential", "(", "newconv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ")", "\n", "self", ".", "maxpool", "=", "resnet", ".", "maxpool", "\n", "self", ".", "layer1", "=", "resnet", ".", "layer1", "\n", "self", ".", "layer2", "=", "resnet", ".", "layer2", "\n", "self", ".", "layer3", "=", "resnet", ".", "layer3", "\n", "self", ".", "layer4", "=", "resnet", ".", "layer4", "\n", "for", "n", ",", "m", "in", "self", ".", "layer3", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv2'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "", "", "for", "n", ",", "m", "in", "self", ".", "layer4", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'conv2'", "in", "n", "or", "'downsample.0'", "in", "n", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Mlp.__init__": [[48, 55], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "WiCoNet.Mlp._init_weights"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Mlp._init_weights"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Mlp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "args", "[", "'D'", "]", ",", "args", "[", "'mlp_dim'", "]", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "args", "[", "'mlp_dim'", "]", ",", "args", "[", "'D'", "]", ")", "\n", "self", ".", "act_fn", "=", "torch", ".", "nn", ".", "functional", ".", "gelu", "# torch.nn.functional.relu", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "args", "[", "'dropout_rate'", "]", ")", "\n", "self", ".", "_init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Mlp._init_weights": [[56, 61], ["torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc1", ".", "weight", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc2", ".", "weight", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "fc1", ".", "bias", ",", "std", "=", "1e-6", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "fc2", ".", "bias", ",", "std", "=", "1e-6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Mlp.forward": [[62, 69], ["WiCoNet.Mlp.fc1", "WiCoNet.Mlp.act_fn", "WiCoNet.Mlp.dropout", "WiCoNet.Mlp.fc2", "WiCoNet.Mlp.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "act_fn", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Block.__init__": [[72, 79], ["torch.Module.__init__", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "WiCoNet.Mlp", "torch.LayerNorm", "torch.LayerNorm", "WiCoNet.Attention"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "attention_norm", "=", "nn", ".", "LayerNorm", "(", "args", "[", "'D'", "]", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "ffn_norm", "=", "nn", ".", "LayerNorm", "(", "args", "[", "'D'", "]", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "ffn", "=", "Mlp", "(", ")", "\n", "self", ".", "norm", "=", "nn", ".", "LayerNorm", "(", "args", "[", "'D'", "]", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "attn", "=", "Attention", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Block.forward": [[80, 93], ["WiCoNet.Block.attention_norm", "WiCoNet.Block.norm", "WiCoNet.Block.attn", "WiCoNet.Block.ffn_norm", "WiCoNet.Block.ffn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "identity", "=", "x1", "\n", "x1", "=", "self", ".", "attention_norm", "(", "x1", ")", "\n", "x2", "=", "self", ".", "norm", "(", "x2", ")", "\n", "x1", "=", "self", ".", "attn", "(", "x1", ",", "x2", ")", "\n", "x1", "=", "x1", "+", "identity", "\n", "\n", "identity", "=", "x1", "\n", "x1", "=", "self", ".", "ffn_norm", "(", "x1", ")", "\n", "x1", "=", "self", ".", "ffn", "(", "x1", ")", "\n", "x1", "=", "x1", "+", "identity", "\n", "\n", "return", "x1", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Encoder.__init__": [[96, 103], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.LayerNorm", "torch.LayerNorm", "range", "WiCoNet.Block", "WiCoNet.Encoder.layer.append"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "encoder_norm", "=", "nn", ".", "LayerNorm", "(", "args", "[", "'D'", "]", ",", "eps", "=", "1e-6", ")", "\n", "for", "_", "in", "range", "(", "args", "[", "'L'", "]", ")", ":", "\n", "            ", "layer", "=", "Block", "(", ")", "\n", "self", ".", "layer", ".", "append", "(", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Encoder.forward": [[104, 109], ["WiCoNet.Encoder.encoder_norm", "layer_block"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "for", "layer_block", "in", "self", ".", "layer", ":", "\n", "            ", "x1", "=", "layer_block", "(", "x1", ",", "x2", ")", "\n", "", "encoded", "=", "self", ".", "encoder_norm", "(", "x1", ")", "\n", "return", "encoded", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Attention.__init__": [[112, 127], ["torch.Module.__init__", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_attention_heads", "=", "args", "[", "'n'", "]", "\n", "self", ".", "attention_head_size", "=", "int", "(", "args", "[", "'D'", "]", "/", "self", ".", "num_attention_heads", ")", "\n", "self", ".", "all_head_size", "=", "self", ".", "num_attention_heads", "*", "self", ".", "attention_head_size", "\n", "\n", "self", ".", "query", "=", "nn", ".", "Linear", "(", "args", "[", "'D'", "]", ",", "self", ".", "all_head_size", ")", "\n", "self", ".", "key", "=", "nn", ".", "Linear", "(", "args", "[", "'D'", "]", ",", "self", ".", "all_head_size", ")", "\n", "self", ".", "value", "=", "nn", ".", "Linear", "(", "args", "[", "'D'", "]", ",", "self", ".", "all_head_size", ")", "\n", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "args", "[", "'D'", "]", ",", "args", "[", "'D'", "]", ")", "\n", "self", ".", "attn_dropout", "=", "nn", ".", "Dropout", "(", "args", "[", "'dropout_rate'", "]", ")", "\n", "self", ".", "proj_dropout", "=", "nn", ".", "Dropout", "(", "args", "[", "'dropout_rate'", "]", ")", "\n", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Attention.transpose_for_scores": [[128, 132], ["x.view.view.view", "x.view.view.permute", "x.view.view.size"], "methods", ["None"], ["", "def", "transpose_for_scores", "(", "self", ",", "x", ")", ":", "\n", "        ", "new_x_shape", "=", "x", ".", "size", "(", ")", "[", ":", "-", "1", "]", "+", "(", "self", ".", "num_attention_heads", ",", "self", ".", "attention_head_size", ")", "\n", "x", "=", "x", ".", "view", "(", "*", "new_x_shape", ")", "\n", "return", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Attention.forward": [[133, 155], ["WiCoNet.Attention.query", "WiCoNet.Attention.key", "WiCoNet.Attention.value", "WiCoNet.Attention.transpose_for_scores", "WiCoNet.Attention.transpose_for_scores", "WiCoNet.Attention.transpose_for_scores", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "WiCoNet.Attention.softmax", "WiCoNet.Attention.attn_dropout", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "context_layer.view.view.permute().contiguous", "context_layer.view.view.view", "WiCoNet.Attention.out", "WiCoNet.Attention.proj_dropout", "WiCoNet.Attention.transpose", "math.sqrt", "context_layer.view.view.permute", "context_layer.view.view.size"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.utils.AverageMeter.value", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Attention.transpose_for_scores", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Attention.transpose_for_scores", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Attention.transpose_for_scores"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "mixed_query_layer", "=", "self", ".", "query", "(", "x1", ")", "\n", "mixed_key_layer", "=", "self", ".", "key", "(", "x2", ")", "\n", "mixed_value_layer", "=", "self", ".", "value", "(", "x2", ")", "\n", "\n", "query_layer", "=", "self", ".", "transpose_for_scores", "(", "mixed_query_layer", ")", "\n", "key_layer", "=", "self", ".", "transpose_for_scores", "(", "mixed_key_layer", ")", "\n", "value_layer", "=", "self", ".", "transpose_for_scores", "(", "mixed_value_layer", ")", "\n", "\n", "attention_scores", "=", "torch", ".", "matmul", "(", "query_layer", ",", "key_layer", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ")", "\n", "attention_scores", "=", "attention_scores", "/", "math", ".", "sqrt", "(", "self", ".", "attention_head_size", ")", "\n", "\n", "attention_probs", "=", "self", ".", "softmax", "(", "attention_scores", ")", "\n", "attention_probs", "=", "self", ".", "attn_dropout", "(", "attention_probs", ")", "\n", "\n", "context_layer", "=", "torch", ".", "matmul", "(", "attention_probs", ",", "value_layer", ")", "\n", "context_layer", "=", "context_layer", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "new_context_layer_shape", "=", "context_layer", ".", "size", "(", ")", "[", ":", "-", "2", "]", "+", "(", "self", ".", "all_head_size", ",", ")", "\n", "context_layer", "=", "context_layer", ".", "view", "(", "*", "new_context_layer_shape", ")", "\n", "attention_output", "=", "self", ".", "out", "(", "context_layer", ")", "\n", "attention_output", "=", "self", ".", "proj_dropout", "(", "attention_output", ")", "\n", "return", "attention_output", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Embeddings.__init__": [[158, 165], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Parameter", "torch.Parameter", "torch.Dropout", "torch.Dropout", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "hidden_size", "=", "args", "[", "'D'", "]", ",", "img_size", "=", "args", "[", "'input_size'", "]", ")", ":", "\n", "        ", "super", "(", "Embeddings", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_patches", "=", "img_size", "*", "img_size", "\n", "k_size", "=", "1", "\n", "self", ".", "patch_embeddings", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", "=", "hidden_size", ",", "kernel_size", "=", "k_size", ",", "stride", "=", "k_size", ")", "\n", "self", ".", "position_embeddings", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "n_patches", ",", "hidden_size", ")", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "args", "[", "'dropout_rate'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Embeddings.forward": [[166, 173], ["WiCoNet.Embeddings.patch_embeddings", "x.flatten().transpose.flatten().transpose.flatten().transpose", "WiCoNet.Embeddings.dropout", "x.flatten().transpose.flatten().transpose.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "patch_embeddings", "(", "x", ")", "# (B, hidden, n_patches^(1/2), n_patches^(1/2))", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "# (B, n_patches, hidden)", "\n", "\n", "embeddings", "=", "x", "+", "self", ".", "position_embeddings", "\n", "embeddings", "=", "self", ".", "dropout", "(", "embeddings", ")", "\n", "return", "embeddings", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet._EncoderBlock.__init__": [[175, 188], ["torch.Module.__init__", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "WiCoNet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "WiCoNet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.conv3x3", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "downsample", "=", "True", ")", ":", "\n", "        ", "super", "(", "_EncoderBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "layers", "=", "[", "\n", "conv3x3", "(", "in_channels", ",", "out_channels", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "conv3x3", "(", "out_channels", ",", "out_channels", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "]", "\n", "self", ".", "encode", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet._EncoderBlock.forward": [[189, 194], ["WiCoNet._EncoderBlock.encode", "WiCoNet._EncoderBlock.maxpool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "", "x", "=", "self", ".", "encode", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Transformer.__init__": [[196, 201], ["torch.Module.__init__", "WiCoNet.Embeddings", "WiCoNet.Embeddings", "WiCoNet.Encoder"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels1", ",", "in_channels2", ",", "feat_size1", ",", "feat_size2", ",", "hidden_size", "=", "args", "[", "'D'", "]", ")", ":", "\n", "        ", "super", "(", "Transformer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embed1", "=", "Embeddings", "(", "in_channels1", ",", "hidden_size", ",", "feat_size1", ")", "\n", "self", ".", "embed2", "=", "Embeddings", "(", "in_channels2", ",", "hidden_size", ",", "feat_size2", ")", "\n", "self", ".", "encoder", "=", "Encoder", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.Transformer.forward": [[202, 211], ["WiCoNet.Transformer.embed1", "WiCoNet.Transformer.embed2", "WiCoNet.Transformer.encoder", "encoded.contiguous().view.contiguous().view.size", "encoded.contiguous().view.contiguous().view.permute", "encoded.contiguous().view.contiguous().view.contiguous().view", "int", "int", "numpy.sqrt", "numpy.sqrt", "encoded.contiguous().view.contiguous().view.contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_l", ",", "x_g", ")", ":", "\n", "        ", "embed1", "=", "self", ".", "embed1", "(", "x_l", ")", "\n", "embed2", "=", "self", ".", "embed2", "(", "x_g", ")", "# (B, n_patch, hidden//2)", "\n", "encoded", "=", "self", ".", "encoder", "(", "embed1", ",", "embed2", ")", "\n", "B", ",", "n_patch", ",", "hidden", "=", "encoded", ".", "size", "(", ")", "\n", "h", ",", "w", "=", "int", "(", "np", ".", "sqrt", "(", "n_patch", ")", ")", ",", "int", "(", "np", ".", "sqrt", "(", "n_patch", ")", ")", "\n", "encoded", "=", "encoded", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "encoded", "=", "encoded", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "hidden", ",", "h", ",", "w", ")", "\n", "return", "encoded", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.ContextEncoder.__init__": [[214, 221], ["torch.Module.__init__", "WiCoNet._EncoderBlock", "WiCoNet._EncoderBlock", "WiCoNet._EncoderBlock", "WiCoNet._EncoderBlock"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "ContextEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "Enc0", "=", "_EncoderBlock", "(", "in_channels", ",", "64", ",", "downsample", "=", "False", ")", "\n", "self", ".", "Enc1", "=", "_EncoderBlock", "(", "64", ",", "128", ")", "\n", "self", ".", "Enc2", "=", "_EncoderBlock", "(", "128", ",", "256", ")", "\n", "self", ".", "Enc3", "=", "_EncoderBlock", "(", "256", ",", "512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.ContextEncoder.forward": [[222, 231], ["x.size", "WiCoNet.ContextEncoder.Enc0", "WiCoNet.ContextEncoder.Enc1", "WiCoNet.ContextEncoder.Enc2", "WiCoNet.ContextEncoder.Enc3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "\n", "enc0", "=", "self", ".", "Enc0", "(", "x", ")", "\n", "enc1", "=", "self", ".", "Enc1", "(", "enc0", ")", "\n", "enc2", "=", "self", ".", "Enc2", "(", "enc1", ")", "\n", "enc3", "=", "self", ".", "Enc3", "(", "enc2", ")", "\n", "\n", "return", "enc3", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__": [[233, 246], ["torch.Module.__init__", "WiCoNet.ContextEncoder", "WiCoNet.FCN_res50", "torch.Sequential", "torch.Sequential", "WiCoNet.Transformer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "utils.misc.initialize_weights", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "WiCoNet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "WiCoNet.conv1x1", "WiCoNet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "WiCoNet.conv1x1"], "methods", ["home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.__init__", "home.repos.pwc.inspect_result.ggsDing_WiCNet.utils.misc.initialize_weights", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.conv1x1", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.conv1x1", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.conv1x1", "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.conv1x1"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "num_classes", "=", "7", ",", "size_context", "=", "1024", ",", "size_local", "=", "512", ",", "scale", "=", "4", ")", ":", "\n", "        ", "super", "(", "WiCoNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "feat_size1", "=", "size_local", "//", "8", "\n", "feat_size2", "=", "size_context", "//", "scale", "//", "8", "\n", "self", ".", "context_branch", "=", "ContextEncoder", "(", "in_channels", ",", "num_classes", ")", "\n", "self", ".", "local_branch", "=", "FCN_res50", "(", "in_channels", ",", "num_classes", ",", "pretrained", "=", "True", ")", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "2048", ",", "512", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ",", "momentum", "=", "0.95", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "transformer", "=", "Transformer", "(", "512", ",", "512", ",", "feat_size1", ",", "feat_size2", ")", "\n", "\n", "self", ".", "classifier_aux", "=", "nn", ".", "Sequential", "(", "conv1x1", "(", "512", ",", "64", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "conv1x1", "(", "64", ",", "num_classes", ")", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "conv1x1", "(", "512", ",", "64", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "conv1x1", "(", "64", ",", "num_classes", ")", ")", "\n", "initialize_weights", "(", "self", ".", "classifier", ",", "self", ".", "classifier_aux", ",", "self", ".", "head", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.WiCoNet.forward": [[248, 265], ["WiCoNet.WiCoNet.size", "x_s.size", "WiCoNet.WiCoNet.context_branch", "WiCoNet.WiCoNet.classifier_aux", "WiCoNet.WiCoNet.local_branch.layer0", "WiCoNet.WiCoNet.local_branch.maxpool", "WiCoNet.WiCoNet.local_branch.layer1", "WiCoNet.WiCoNet.local_branch.layer2", "WiCoNet.WiCoNet.local_branch.layer3", "WiCoNet.WiCoNet.local_branch.layer4", "WiCoNet.WiCoNet.head", "WiCoNet.WiCoNet.transformer", "WiCoNet.WiCoNet.classifier", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_s", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "xs_size", "=", "x_s", ".", "size", "(", ")", "\n", "enc3", "=", "self", ".", "context_branch", "(", "x_s", ")", "# 1/16", "\n", "aux", "=", "self", ".", "classifier_aux", "(", "enc3", ")", "\n", "\n", "x", "=", "self", ".", "local_branch", ".", "layer0", "(", "x", ")", "# 1/2, 64", "\n", "x", "=", "self", ".", "local_branch", ".", "maxpool", "(", "x", ")", "# 1/4, 64", "\n", "x", "=", "self", ".", "local_branch", ".", "layer1", "(", "x", ")", "# 1/4, 256", "\n", "x", "=", "self", ".", "local_branch", ".", "layer2", "(", "x", ")", "# 1/8, 512", "\n", "x", "=", "self", ".", "local_branch", ".", "layer3", "(", "x", ")", "# 1/8, 1024", "\n", "x", "=", "self", ".", "local_branch", ".", "layer4", "(", "x", ")", "# 1/8, 2048", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "# 1/8, 512", "\n", "\n", "x", "=", "self", ".", "transformer", "(", "x", ",", "enc3", ")", "\n", "out", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "F", ".", "upsample", "(", "out", ",", "x_size", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", ",", "F", ".", "upsample", "(", "aux", ",", "xs_size", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.conv1x1": [[17, 19], ["torch.Conv2d"], "function", ["None"], ["def", "conv1x1", "(", "in_planes", ",", "out_planes", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ggsDing_WiCNet.models.WiCoNet.conv3x3": [[21, 23], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]]}