{"home.repos.pwc.inspect_result.thuiar_CRL.None.config.Param.__init__": [[8, 13], ["argparse.ArgumentParser", "config.Param.all_param", "config.Param.parse_known_args"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.None.config.Param.all_param"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", "=", "self", ".", "all_param", "(", "parser", ")", "\n", "all_args", ",", "unknown", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "self", ".", "args", "=", "all_args", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.None.config.Param.all_param": [[14, 80], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "methods", ["None"], ["", "def", "all_param", "(", "self", ",", "parser", ")", ":", "\n", "\n", "##################################common parameters####################################", "\n", "        ", "parser", ".", "add_argument", "(", "\"--gpu\"", ",", "default", "=", "0", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--dataname\"", ",", "default", "=", "'FewRel'", ",", "type", "=", "str", ",", "help", "=", "\"Use TACRED or FewRel datasets.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--task_name\"", ",", "default", "=", "'FewRel'", ",", "type", "=", "str", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--max_length\"", ",", "default", "=", "256", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--this_name\"", ",", "default", "=", "\"continual\"", ",", "type", "=", "str", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--device\"", ",", "default", "=", "\"cuda\"", ",", "type", "=", "str", ")", "\n", "\n", "###############################   training ################################################", "\n", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "default", "=", "16", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--learning_rate\"", ",", "default", "=", "5e-6", ",", "type", "=", "float", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--total_round\"", ",", "default", "=", "5", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--rel_per_task\"", ",", "default", "=", "4", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--pattern\"", ",", "default", "=", "\"entity_marker\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--encoder_output_size\"", ",", "default", "=", "768", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--vocab_size\"", ",", "default", "=", "30522", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--marker_size\"", ",", "default", "=", "4", ",", "type", "=", "int", ")", "\n", "\n", "# Temperature parameter in CL and CR", "\n", "parser", ".", "add_argument", "(", "\"--temp\"", ",", "default", "=", "0.1", ",", "type", "=", "float", ")", "\n", "\n", "# The projection head outputs dimensions", "\n", "parser", ".", "add_argument", "(", "\"--feat_dim\"", ",", "default", "=", "64", ",", "type", "=", "int", ")", "\n", "\n", "# Temperature parameter in KL", "\n", "parser", ".", "add_argument", "(", "\"--kl_temp\"", ",", "default", "=", "10", ",", "type", "=", "float", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--num_workers\"", ",", "default", "=", "0", ",", "type", "=", "int", ")", "\n", "\n", "# epoch1", "\n", "parser", ".", "add_argument", "(", "\"--step1_epochs\"", ",", "default", "=", "10", ",", "type", "=", "int", ")", "\n", "\n", "# epoch2", "\n", "parser", ".", "add_argument", "(", "\"--step2_epochs\"", ",", "default", "=", "10", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "default", "=", "2021", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--max_grad_norm\"", ",", "default", "=", "10", ",", "type", "=", "float", ")", "\n", "\n", "# Memory size", "\n", "parser", ".", "add_argument", "(", "\"--num_protos\"", ",", "default", "=", "20", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--optim\"", ",", "default", "=", "'adam'", ",", "type", "=", "str", ")", "\n", "\n", "# dataset path", "\n", "parser", ".", "add_argument", "(", "\"--data_path\"", ",", "default", "=", "'datasets/'", ",", "type", "=", "str", ")", "\n", "\n", "# bert-base-uncased weights path", "\n", "parser", ".", "add_argument", "(", "\"--bert_path\"", ",", "default", "=", "\"datasets/bert-base-uncased\"", ",", "type", "=", "str", ")", "\n", "\n", "return", "parser", "", "", "", ""]], "home.repos.pwc.inspect_result.thuiar_CRL.None.run_continual.run": [[5, 12], ["methods.utils.setup_seed", "print", "print", "methods.manager.Manager", "methods.manager.Manager.train", "str"], "function", ["home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.setup_seed", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.train"], ["def", "run", "(", "args", ")", ":", "\n", "    ", "setup_seed", "(", "args", ".", "seed", ")", "\n", "print", "(", "\"hyper-parameter configurations:\"", ")", "\n", "print", "(", "str", "(", "args", ".", "__dict__", ")", ")", "\n", "\n", "manager", "=", "Manager", "(", "args", ")", "\n", "manager", ".", "train", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.data_set.__init__": [[6, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "config", "=", "None", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "bert", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.data_set.__len__": [[11, 13], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.data_set.__getitem__": [[14, 16], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "(", "self", ".", "data", "[", "idx", "]", ",", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.data_set.collate_fn": [[17, 26], ["torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "def", "collate_fn", "(", "self", ",", "data", ")", ":", "\n", "\n", "        ", "label", "=", "torch", ".", "tensor", "(", "[", "item", "[", "0", "]", "[", "'relation'", "]", "for", "item", "in", "data", "]", ")", "\n", "tokens", "=", "[", "torch", ".", "tensor", "(", "item", "[", "0", "]", "[", "'tokens'", "]", ")", "for", "item", "in", "data", "]", "\n", "ind", "=", "torch", ".", "tensor", "(", "[", "item", "[", "1", "]", "for", "item", "in", "data", "]", ")", "\n", "return", "(", "\n", "label", ",", "\n", "tokens", ",", "\n", "ind", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.get_data_loader": [[28, 47], ["data_loader.data_set", "torch.utils.data.DataLoader", "min", "min", "len", "len"], "function", ["None"], ["", "", "def", "get_data_loader", "(", "config", ",", "data", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ",", "batch_size", "=", "None", ")", ":", "\n", "\n", "    ", "dataset", "=", "data_set", "(", "data", ",", "config", ")", "\n", "\n", "if", "batch_size", "==", "None", ":", "\n", "        ", "batch_size", "=", "min", "(", "config", ".", "batch_size", ",", "len", "(", "data", ")", ")", "\n", "", "else", ":", "\n", "        ", "batch_size", "=", "min", "(", "batch_size", ",", "len", "(", "data", ")", ")", "\n", "\n", "", "data_loader", "=", "DataLoader", "(", "\n", "dataset", "=", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "shuffle", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "config", ".", "num_workers", ",", "\n", "collate_fn", "=", "dataset", ".", "collate_fn", ",", "\n", "drop_last", "=", "drop_last", ")", "\n", "\n", "return", "data_loader", "", "", ""]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler.__init__": [[13, 52], ["sampler.data_sampler.set_path", "os.path.join", "sampler.get_tokenizer", "sampler.data_sampler._read_relations", "list", "random.shuffle", "numpy.argsort", "sampler.data_sampler._read_data", "os.path.exists", "os.mkdir", "os.path.join", "random.seed", "range", "len", "os.path.exists", "os.mkdir", "len", "str"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler.set_path", "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.get_tokenizer", "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler._read_relations", "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler._read_data"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "set_path", "(", "args", ")", "\n", "self", ".", "args", "=", "args", "\n", "temp_name", "=", "[", "args", ".", "dataname", ",", "args", ".", "seed", "]", "\n", "file_name", "=", "\"{}.pkl\"", ".", "format", "(", "\n", "\"-\"", ".", "join", "(", "[", "str", "(", "x", ")", "for", "x", "in", "temp_name", "]", ")", "\n", ")", "\n", "mid_dir", "=", "\"datasets/\"", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "mid_dir", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "mid_dir", ")", "\n", "", "for", "temp_p", "in", "[", "\"_process_path\"", "]", ":", "\n", "            ", "mid_dir", "=", "os", ".", "path", ".", "join", "(", "mid_dir", ",", "temp_p", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "mid_dir", ")", ":", "\n", "                ", "os", ".", "mkdir", "(", "mid_dir", ")", "\n", "", "", "self", ".", "save_data_path", "=", "os", ".", "path", ".", "join", "(", "mid_dir", ",", "file_name", ")", "\n", "\n", "self", ".", "tokenizer", "=", "get_tokenizer", "(", "args", ")", "\n", "\n", "# read relation data", "\n", "self", ".", "id2rel", ",", "self", ".", "rel2id", "=", "self", ".", "_read_relations", "(", "args", ".", "relation_file", ")", "\n", "\n", "# random sampling", "\n", "self", ".", "seed", "=", "seed", "\n", "if", "self", ".", "seed", "is", "not", "None", ":", "\n", "            ", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "", "self", ".", "shuffle_index", "=", "list", "(", "range", "(", "len", "(", "self", ".", "id2rel", ")", ")", ")", "\n", "random", ".", "shuffle", "(", "self", ".", "shuffle_index", ")", "\n", "self", ".", "shuffle_index", "=", "np", ".", "argsort", "(", "self", ".", "shuffle_index", ")", "\n", "\n", "# regenerate data", "\n", "self", ".", "training_dataset", ",", "self", ".", "valid_dataset", ",", "self", ".", "test_dataset", "=", "self", ".", "_read_data", "(", "self", ".", "args", ".", "data_file", ")", "\n", "\n", "# generate the task number", "\n", "self", ".", "batch", "=", "0", "\n", "self", ".", "task_length", "=", "len", "(", "self", ".", "id2rel", ")", "//", "self", ".", "args", ".", "rel_per_task", "\n", "\n", "# record relations", "\n", "self", ".", "seen_relations", "=", "[", "]", "\n", "self", ".", "history_test_data", "=", "{", "}", "\n", "", "def", "set_path", "(", "self", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler.set_path": [[52, 68], ["os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "set_path", "(", "self", ",", "args", ")", ":", "\n", "        ", "use_marker", "=", "\"\"", "\n", "if", "args", ".", "dataname", "in", "[", "'FewRel'", "]", ":", "\n", "            ", "args", ".", "data_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "\"data_with{}_marker.json\"", ".", "format", "(", "use_marker", ")", ")", "\n", "args", ".", "relation_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "\"id2rel.json\"", ")", "\n", "args", ".", "num_of_relation", "=", "80", "\n", "args", ".", "num_of_train", "=", "420", "\n", "args", ".", "num_of_val", "=", "140", "\n", "args", ".", "num_of_test", "=", "140", "\n", "", "elif", "args", ".", "dataname", "in", "[", "'TACRED'", "]", ":", "\n", "            ", "args", ".", "data_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "\"data_with{}_marker_tacred.json\"", ".", "format", "(", "use_marker", ")", ")", "\n", "args", ".", "relation_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "\"id2rel_tacred.json\"", ")", "\n", "args", ".", "num_of_relation", "=", "40", "\n", "args", ".", "num_of_train", "=", "420", "\n", "args", ".", "num_of_val", "=", "140", "\n", "args", ".", "num_of_test", "=", "140", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler.set_seed": [[69, 76], ["list", "random.shuffle", "numpy.argsort", "random.seed", "range", "len"], "methods", ["None"], ["", "", "def", "set_seed", "(", "self", ",", "seed", ")", ":", "\n", "        ", "self", ".", "seed", "=", "seed", "\n", "if", "self", ".", "seed", "!=", "None", ":", "\n", "            ", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "", "self", ".", "shuffle_index", "=", "list", "(", "range", "(", "len", "(", "self", ".", "id2rel", ")", ")", ")", "\n", "random", ".", "shuffle", "(", "self", ".", "shuffle_index", ")", "\n", "self", ".", "shuffle_index", "=", "np", ".", "argsort", "(", "self", ".", "shuffle_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler.__iter__": [[77, 79], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler.__next__": [[80, 102], ["StopIteration", "current_relations.append", "sampler.data_sampler.seen_relations.append"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "\n", "        ", "if", "self", ".", "batch", "==", "self", ".", "task_length", ":", "\n", "            ", "raise", "StopIteration", "(", ")", "\n", "\n", "", "indexs", "=", "self", ".", "shuffle_index", "[", "self", ".", "args", ".", "rel_per_task", "*", "self", ".", "batch", ":", "self", ".", "args", ".", "rel_per_task", "*", "(", "self", ".", "batch", "+", "1", ")", "]", "\n", "self", ".", "batch", "+=", "1", "\n", "\n", "current_relations", "=", "[", "]", "\n", "cur_training_data", "=", "{", "}", "\n", "cur_valid_data", "=", "{", "}", "\n", "cur_test_data", "=", "{", "}", "\n", "\n", "for", "index", "in", "indexs", ":", "\n", "            ", "current_relations", ".", "append", "(", "self", ".", "id2rel", "[", "index", "]", ")", "\n", "self", ".", "seen_relations", ".", "append", "(", "self", ".", "id2rel", "[", "index", "]", ")", "\n", "cur_training_data", "[", "self", ".", "id2rel", "[", "index", "]", "]", "=", "self", ".", "training_dataset", "[", "index", "]", "\n", "cur_valid_data", "[", "self", ".", "id2rel", "[", "index", "]", "]", "=", "self", ".", "valid_dataset", "[", "index", "]", "\n", "cur_test_data", "[", "self", ".", "id2rel", "[", "index", "]", "]", "=", "self", ".", "test_dataset", "[", "index", "]", "\n", "self", ".", "history_test_data", "[", "self", ".", "id2rel", "[", "index", "]", "]", "=", "self", ".", "test_dataset", "[", "index", "]", "\n", "\n", "", "return", "cur_training_data", ",", "cur_valid_data", ",", "cur_test_data", ",", "current_relations", ",", "self", ".", "history_test_data", ",", "self", ".", "seen_relations", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler._read_data": [[103, 147], ["os.path.isfile", "json.load", "json.load.keys", "open", "pickle.load", "open", "random.shuffle", "enumerate", "open", "pickle.dump", "range", "range", "range", "random.seed", "sampler.data_sampler.tokenizer.encode", "train_dataset[].append", "test_dataset[].append", "train_dataset[].append", "val_dataset[].append", "test_dataset[].append", "len"], "methods", ["None"], ["", "def", "_read_data", "(", "self", ",", "file", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "self", ".", "save_data_path", ")", ":", "\n", "            ", "with", "open", "(", "self", ".", "save_data_path", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "datas", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "train_dataset", ",", "val_dataset", ",", "test_dataset", "=", "datas", "\n", "return", "train_dataset", ",", "val_dataset", ",", "test_dataset", "\n", "", "else", ":", "\n", "            ", "data", "=", "json", ".", "load", "(", "open", "(", "file", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", ")", "\n", "train_dataset", "=", "[", "[", "]", "for", "i", "in", "range", "(", "self", ".", "args", ".", "num_of_relation", ")", "]", "\n", "val_dataset", "=", "[", "[", "]", "for", "i", "in", "range", "(", "self", ".", "args", ".", "num_of_relation", ")", "]", "\n", "test_dataset", "=", "[", "[", "]", "for", "i", "in", "range", "(", "self", ".", "args", ".", "num_of_relation", ")", "]", "\n", "for", "relation", "in", "data", ".", "keys", "(", ")", ":", "\n", "                ", "rel_samples", "=", "data", "[", "relation", "]", "\n", "if", "self", ".", "seed", "!=", "None", ":", "\n", "                    ", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "", "random", ".", "shuffle", "(", "rel_samples", ")", "\n", "count", "=", "0", "\n", "count1", "=", "0", "\n", "for", "i", ",", "sample", "in", "enumerate", "(", "rel_samples", ")", ":", "\n", "                    ", "tokenized_sample", "=", "{", "}", "\n", "tokenized_sample", "[", "'relation'", "]", "=", "self", ".", "rel2id", "[", "sample", "[", "'relation'", "]", "]", "\n", "tokenized_sample", "[", "'tokens'", "]", "=", "self", ".", "tokenizer", ".", "encode", "(", "' '", ".", "join", "(", "sample", "[", "'tokens'", "]", ")", ",", "\n", "padding", "=", "'max_length'", ",", "\n", "truncation", "=", "True", ",", "\n", "max_length", "=", "self", ".", "args", ".", "max_length", ")", "\n", "if", "self", ".", "args", ".", "task_name", "==", "'FewRel'", ":", "\n", "                        ", "if", "i", "<", "self", ".", "args", ".", "num_of_train", ":", "\n", "                            ", "train_dataset", "[", "self", ".", "rel2id", "[", "relation", "]", "]", ".", "append", "(", "tokenized_sample", ")", "\n", "", "elif", "i", "<", "self", ".", "args", ".", "num_of_train", "+", "self", ".", "args", ".", "num_of_val", ":", "\n", "                            ", "val_dataset", "[", "self", ".", "rel2id", "[", "relation", "]", "]", ".", "append", "(", "tokenized_sample", ")", "\n", "", "else", ":", "\n", "                            ", "test_dataset", "[", "self", ".", "rel2id", "[", "relation", "]", "]", ".", "append", "(", "tokenized_sample", ")", "\n", "", "", "else", ":", "\n", "                        ", "if", "i", "<", "len", "(", "rel_samples", ")", "//", "5", "and", "count", "<=", "40", ":", "\n", "                            ", "count", "+=", "1", "\n", "test_dataset", "[", "self", ".", "rel2id", "[", "relation", "]", "]", ".", "append", "(", "tokenized_sample", ")", "\n", "", "else", ":", "\n", "                            ", "count1", "+=", "1", "\n", "train_dataset", "[", "self", ".", "rel2id", "[", "relation", "]", "]", ".", "append", "(", "tokenized_sample", ")", "\n", "if", "count1", ">=", "320", ":", "\n", "                                ", "break", "\n", "", "", "", "", "", "with", "open", "(", "self", ".", "save_data_path", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "pickle", ".", "dump", "(", "(", "train_dataset", ",", "val_dataset", ",", "test_dataset", ")", ",", "f", ")", "\n", "", "return", "train_dataset", ",", "val_dataset", ",", "test_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.data_sampler._read_relations": [[148, 154], ["json.load", "enumerate", "open"], "methods", ["None"], ["", "", "def", "_read_relations", "(", "self", ",", "file", ")", ":", "\n", "        ", "id2rel", "=", "json", ".", "load", "(", "open", "(", "file", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", ")", "\n", "rel2id", "=", "{", "}", "\n", "for", "i", ",", "x", "in", "enumerate", "(", "id2rel", ")", ":", "\n", "            ", "rel2id", "[", "x", "]", "=", "i", "\n", "", "return", "id2rel", ",", "rel2id", "", "", "", ""]], "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.sampler.get_tokenizer": [[6, 9], ["transformers.BertTokenizer.from_pretrained"], "function", ["None"], ["def", "get_tokenizer", "(", "args", ")", ":", "\n", "    ", "tokenizer", "=", "BertTokenizer", ".", "from_pretrained", "(", "args", ".", "bert_path", ",", "additional_special_tokens", "=", "[", "\"[E11]\"", ",", "\"[E12]\"", ",", "\"[E21]\"", ",", "\"[E22]\"", "]", ")", "\n", "return", "tokenizer", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.model.Encoder.__init__": [[7, 17], ["torch.Module.__init__", "backbone.Bert_Encoder", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.methods.backbone.Bert_Encoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "Bert_Encoder", "(", "args", ")", "\n", "self", ".", "output_size", "=", "self", ".", "encoder", ".", "out_dim", "\n", "dim_in", "=", "self", ".", "output_size", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "dim_in", ",", "dim_in", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "dim_in", ",", "args", ".", "feat_dim", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.model.Encoder.bert_forward": [[18, 23], ["model.Encoder.encoder", "model.Encoder.head", "torch.normalize", "torch.normalize", "torch.normalize"], "methods", ["None"], ["", "def", "bert_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "encoder", "(", "x", ")", "\n", "xx", "=", "self", ".", "head", "(", "out", ")", "\n", "xx", "=", "F", ".", "normalize", "(", "xx", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "return", "out", ",", "xx", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.__init__": [[15, 19], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.methods.backbone.Bert_Encoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "id2rel", "=", "None", "\n", "self", ".", "rel2id", "=", "None", "\n", "", "def", "get_proto", "(", "self", ",", "args", ",", "encoder", ",", "mem_set", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.get_proto": [[19, 38], ["dataloaders.data_loader.get_data_loader", "encoder.eval", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "manager.Manager.lbs.append", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "encoder.bert_forward", "labels.item", "x.to"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.get_data_loader", "home.repos.pwc.inspect_result.thuiar_CRL.methods.model.Encoder.bert_forward"], ["", "def", "get_proto", "(", "self", ",", "args", ",", "encoder", ",", "mem_set", ")", ":", "\n", "# aggregate the prototype set for further use.", "\n", "        ", "data_loader", "=", "get_data_loader", "(", "args", ",", "mem_set", ",", "False", ",", "False", ",", "1", ")", "\n", "\n", "features", "=", "[", "]", "\n", "\n", "encoder", ".", "eval", "(", ")", "\n", "for", "step", ",", "batch_data", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "            ", "labels", ",", "tokens", ",", "ind", "=", "batch_data", "\n", "tokens", "=", "torch", ".", "stack", "(", "[", "x", ".", "to", "(", "args", ".", "device", ")", "for", "x", "in", "tokens", "]", ",", "dim", "=", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "feature", ",", "rep", "=", "encoder", ".", "bert_forward", "(", "tokens", ")", "\n", "", "features", ".", "append", "(", "feature", ")", "\n", "self", ".", "lbs", ".", "append", "(", "labels", ".", "item", "(", ")", ")", "\n", "", "features", "=", "torch", ".", "cat", "(", "features", ",", "dim", "=", "0", ")", "\n", "\n", "proto", "=", "torch", ".", "mean", "(", "features", ",", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "proto", ",", "features", "\n", "# Use K-Means to select what samples to save, similar to at_least = 0", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.select_data": [[39, 65], ["dataloaders.data_loader.get_data_loader", "encoder.eval", "enumerate", "numpy.concatenate", "min", "sklearn.cluster.KMeans().fit_transform", "range", "numpy.stack", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "numpy.concatenate.append", "len", "numpy.argmin", "mem_set.append", "torch.from_numpy.append", "torch.from_numpy.append", "torch.from_numpy.append", "torch.from_numpy.append", "torch.from_numpy.mean", "torch.from_numpy.mean", "torch.from_numpy.mean", "torch.from_numpy.mean", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "encoder.bert_forward", "feature.detach().cpu", "sklearn.cluster.KMeans", "x.to", "feature.detach"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.get_data_loader", "home.repos.pwc.inspect_result.thuiar_CRL.methods.model.Encoder.bert_forward"], ["", "def", "select_data", "(", "self", ",", "args", ",", "encoder", ",", "sample_set", ")", ":", "\n", "        ", "data_loader", "=", "get_data_loader", "(", "args", ",", "sample_set", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ",", "batch_size", "=", "1", ")", "\n", "features", "=", "[", "]", "\n", "encoder", ".", "eval", "(", ")", "\n", "for", "step", ",", "batch_data", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "            ", "labels", ",", "tokens", ",", "ind", "=", "batch_data", "\n", "tokens", "=", "torch", ".", "stack", "(", "[", "x", ".", "to", "(", "args", ".", "device", ")", "for", "x", "in", "tokens", "]", ",", "dim", "=", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "feature", ",", "rp", "=", "encoder", ".", "bert_forward", "(", "tokens", ")", "\n", "", "features", ".", "append", "(", "feature", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "\n", "", "features", "=", "np", ".", "concatenate", "(", "features", ")", "\n", "num_clusters", "=", "min", "(", "args", ".", "num_protos", ",", "len", "(", "sample_set", ")", ")", "\n", "distances", "=", "KMeans", "(", "n_clusters", "=", "num_clusters", ",", "random_state", "=", "0", ")", ".", "fit_transform", "(", "features", ")", "\n", "\n", "mem_set", "=", "[", "]", "\n", "current_feat", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "num_clusters", ")", ":", "\n", "            ", "sel_index", "=", "np", ".", "argmin", "(", "distances", "[", ":", ",", "k", "]", ")", "\n", "instance", "=", "sample_set", "[", "sel_index", "]", "\n", "mem_set", ".", "append", "(", "instance", ")", "\n", "current_feat", ".", "append", "(", "features", "[", "sel_index", "]", ")", "\n", "\n", "", "current_feat", "=", "np", ".", "stack", "(", "current_feat", ",", "axis", "=", "0", ")", "\n", "current_feat", "=", "torch", ".", "from_numpy", "(", "current_feat", ")", "\n", "return", "mem_set", ",", "current_feat", ",", "current_feat", ".", "mean", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.get_optimizer": [[66, 88], ["print", "manager.Manager.get_optimizer.set_param"], "methods", ["None"], ["", "def", "get_optimizer", "(", "self", ",", "args", ",", "encoder", ")", ":", "\n", "        ", "print", "(", "'Use {} optim!'", ".", "format", "(", "args", ".", "optim", ")", ")", "\n", "def", "set_param", "(", "module", ",", "lr", ",", "decay", "=", "0", ")", ":", "\n", "            ", "parameters_to_optimize", "=", "list", "(", "module", ".", "named_parameters", "(", ")", ")", "\n", "no_decay", "=", "[", "'undecay'", "]", "\n", "parameters_to_optimize", "=", "[", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "parameters_to_optimize", "\n", "if", "not", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "0.0", ",", "'lr'", ":", "lr", "}", ",", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "parameters_to_optimize", "\n", "if", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "0.0", ",", "'lr'", ":", "lr", "}", "\n", "]", "\n", "return", "parameters_to_optimize", "\n", "", "params", "=", "set_param", "(", "encoder", ",", "args", ".", "learning_rate", ")", "\n", "\n", "if", "args", ".", "optim", "==", "'adam'", ":", "\n", "            ", "pytorch_optim", "=", "optim", ".", "Adam", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "optimizer", "=", "pytorch_optim", "(", "\n", "params", "\n", ")", "\n", "return", "optimizer", "\n", "", "def", "train_simple_model", "(", "self", ",", "args", ",", "encoder", ",", "training_data", ",", "epochs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.train_simple_model": [[88, 117], ["dataloaders.data_loader.get_data_loader", "encoder.train", "manager.Manager.get_optimizer", "range", "tqdm.tqdm.tqdm", "enumerate", "print", "manager.Manager.train_simple_model.train_data"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.get_data_loader", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.train", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.get_optimizer"], ["", "def", "train_simple_model", "(", "self", ",", "args", ",", "encoder", ",", "training_data", ",", "epochs", ")", ":", "\n", "\n", "        ", "data_loader", "=", "get_data_loader", "(", "args", ",", "training_data", ",", "shuffle", "=", "True", ")", "\n", "encoder", ".", "train", "(", ")", "\n", "\n", "optimizer", "=", "self", ".", "get_optimizer", "(", "args", ",", "encoder", ")", "\n", "def", "train_data", "(", "data_loader_", ",", "name", "=", "\"\"", ",", "is_mem", "=", "False", ")", ":", "\n", "            ", "losses", "=", "[", "]", "\n", "td", "=", "tqdm", "(", "data_loader_", ",", "desc", "=", "name", ")", "\n", "for", "step", ",", "batch_data", "in", "enumerate", "(", "td", ")", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "labels", ",", "tokens", ",", "ind", "=", "batch_data", "\n", "labels", "=", "labels", ".", "to", "(", "args", ".", "device", ")", "\n", "tokens", "=", "torch", ".", "stack", "(", "[", "x", ".", "to", "(", "args", ".", "device", ")", "for", "x", "in", "tokens", "]", ",", "dim", "=", "0", ")", "\n", "hidden", ",", "reps", "=", "encoder", ".", "bert_forward", "(", "tokens", ")", "\n", "loss", "=", "self", ".", "moment", ".", "loss", "(", "reps", ",", "labels", ")", "\n", "losses", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "td", ".", "set_postfix", "(", "loss", "=", "np", ".", "array", "(", "losses", ")", ".", "mean", "(", ")", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "encoder", ".", "parameters", "(", ")", ",", "args", ".", "max_grad_norm", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "# update moemnt", "\n", "if", "is_mem", ":", "\n", "                    ", "self", ".", "moment", ".", "update_mem", "(", "ind", ",", "reps", ".", "detach", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "moment", ".", "update", "(", "ind", ",", "reps", ".", "detach", "(", ")", ")", "\n", "", "", "print", "(", "f\"{name} loss is {np.array(losses).mean()}\"", ")", "\n", "", "for", "epoch_i", "in", "range", "(", "epochs", ")", ":", "\n", "            ", "train_data", "(", "data_loader", ",", "\"init_train_{}\"", ".", "format", "(", "epoch_i", ")", ",", "is_mem", "=", "False", ")", "\n", "", "", "def", "train_mem_model", "(", "self", ",", "args", ",", "encoder", ",", "mem_data", ",", "proto_mem", ",", "epochs", ",", "seen_relations", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.train_mem_model": [[117, 192], ["dataloaders.data_loader.get_data_loader", "encoder.train", "manager.Manager.get_optimizer", "range", "len", "len", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "utils.dot_dist", "dist.to.to.to", "tqdm.tqdm.tqdm", "enumerate", "print", "manager.Manager.train_simple_model.train_data"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.get_data_loader", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.train", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.get_optimizer", "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.dot_dist"], ["", "", "def", "train_mem_model", "(", "self", ",", "args", ",", "encoder", ",", "mem_data", ",", "proto_mem", ",", "epochs", ",", "seen_relations", ")", ":", "\n", "        ", "history_nums", "=", "len", "(", "seen_relations", ")", "-", "args", ".", "rel_per_task", "\n", "if", "len", "(", "proto_mem", ")", ">", "0", ":", "\n", "\n", "            ", "proto_mem", "=", "F", ".", "normalize", "(", "proto_mem", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "dist", "=", "dot_dist", "(", "proto_mem", ",", "proto_mem", ")", "\n", "dist", "=", "dist", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "", "mem_loader", "=", "get_data_loader", "(", "args", ",", "mem_data", ",", "shuffle", "=", "True", ")", "\n", "encoder", ".", "train", "(", ")", "\n", "temp_rel2id", "=", "[", "self", ".", "rel2id", "[", "x", "]", "for", "x", "in", "seen_relations", "]", "\n", "map_relid2tempid", "=", "{", "k", ":", "v", "for", "v", ",", "k", "in", "enumerate", "(", "temp_rel2id", ")", "}", "\n", "map_tempid2relid", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "map_relid2tempid", ".", "items", "(", ")", "}", "\n", "optimizer", "=", "self", ".", "get_optimizer", "(", "args", ",", "encoder", ")", "\n", "def", "train_data", "(", "data_loader_", ",", "name", "=", "\"\"", ",", "is_mem", "=", "False", ")", ":", "\n", "            ", "losses", "=", "[", "]", "\n", "kl_losses", "=", "[", "]", "\n", "td", "=", "tqdm", "(", "data_loader_", ",", "desc", "=", "name", ")", "\n", "for", "step", ",", "batch_data", "in", "enumerate", "(", "td", ")", ":", "\n", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "labels", ",", "tokens", ",", "ind", "=", "batch_data", "\n", "labels", "=", "labels", ".", "to", "(", "args", ".", "device", ")", "\n", "tokens", "=", "torch", ".", "stack", "(", "[", "x", ".", "to", "(", "args", ".", "device", ")", "for", "x", "in", "tokens", "]", ",", "dim", "=", "0", ")", "\n", "zz", ",", "reps", "=", "encoder", ".", "bert_forward", "(", "tokens", ")", "\n", "hidden", "=", "reps", "\n", "\n", "\n", "need_ratio_compute", "=", "ind", "<", "history_nums", "*", "args", ".", "num_protos", "\n", "total_need", "=", "need_ratio_compute", ".", "sum", "(", ")", "\n", "\n", "if", "total_need", ">", "0", ":", "\n", "# Knowledge Distillation for Relieve Forgetting", "\n", "                    ", "need_ind", "=", "ind", "[", "need_ratio_compute", "]", "\n", "need_labels", "=", "labels", "[", "need_ratio_compute", "]", "\n", "temp_labels", "=", "[", "map_relid2tempid", "[", "x", ".", "item", "(", ")", "]", "for", "x", "in", "need_labels", "]", "\n", "gold_dist", "=", "dist", "[", "temp_labels", "]", "\n", "current_proto", "=", "self", ".", "moment", ".", "get_mem_proto", "(", ")", "[", ":", "history_nums", "]", "\n", "this_dist", "=", "dot_dist", "(", "hidden", "[", "need_ratio_compute", "]", ",", "current_proto", ".", "to", "(", "args", ".", "device", ")", ")", "\n", "loss1", "=", "self", ".", "kl_div_loss", "(", "gold_dist", ",", "this_dist", ",", "t", "=", "args", ".", "kl_temp", ")", "\n", "loss1", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "", "else", ":", "\n", "                    ", "loss1", "=", "0.0", "\n", "\n", "#  Contrastive Replay", "\n", "", "cl_loss", "=", "self", ".", "moment", ".", "loss", "(", "reps", ",", "labels", ",", "is_mem", "=", "True", ",", "mapping", "=", "map_relid2tempid", ")", "\n", "\n", "if", "isinstance", "(", "loss1", ",", "float", ")", ":", "\n", "                    ", "kl_losses", ".", "append", "(", "loss1", ")", "\n", "", "else", ":", "\n", "                    ", "kl_losses", ".", "append", "(", "loss1", ".", "item", "(", ")", ")", "\n", "", "loss", "=", "cl_loss", "\n", "if", "isinstance", "(", "loss", ",", "float", ")", ":", "\n", "                    ", "losses", ".", "append", "(", "loss", ")", "\n", "td", ".", "set_postfix", "(", "loss", "=", "np", ".", "array", "(", "losses", ")", ".", "mean", "(", ")", ",", "kl_loss", "=", "np", ".", "array", "(", "kl_losses", ")", ".", "mean", "(", ")", ")", "\n", "# update moemnt", "\n", "if", "is_mem", ":", "\n", "                        ", "self", ".", "moment", ".", "update_mem", "(", "ind", ",", "reps", ".", "detach", "(", ")", ",", "hidden", ".", "detach", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "self", ".", "moment", ".", "update", "(", "ind", ",", "reps", ".", "detach", "(", ")", ")", "\n", "", "continue", "\n", "", "losses", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "td", ".", "set_postfix", "(", "loss", "=", "np", ".", "array", "(", "losses", ")", ".", "mean", "(", ")", ",", "kl_loss", "=", "np", ".", "array", "(", "kl_losses", ")", ".", "mean", "(", ")", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "encoder", ".", "parameters", "(", ")", ",", "args", ".", "max_grad_norm", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# update moemnt", "\n", "if", "is_mem", ":", "\n", "                    ", "self", ".", "moment", ".", "update_mem", "(", "ind", ",", "reps", ".", "detach", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "moment", ".", "update", "(", "ind", ",", "reps", ".", "detach", "(", ")", ")", "\n", "", "", "print", "(", "f\"{name} loss is {np.array(losses).mean()}\"", ")", "\n", "", "for", "epoch_i", "in", "range", "(", "epochs", ")", ":", "\n", "            ", "train_data", "(", "mem_loader", ",", "\"memory_train_{}\"", ".", "format", "(", "epoch_i", ")", ",", "is_mem", "=", "True", ")", "\n", "", "", "def", "kl_div_loss", "(", "self", ",", "x1", ",", "x2", ",", "t", "=", "10", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.kl_div_loss": [[192, 198], ["torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.kl_div", "torch.kl_div", "torch.kl_div", "torch.kl_div"], "methods", ["None"], ["", "", "def", "kl_div_loss", "(", "self", ",", "x1", ",", "x2", ",", "t", "=", "10", ")", ":", "\n", "\n", "        ", "batch_dist", "=", "F", ".", "softmax", "(", "t", "*", "x1", ",", "dim", "=", "1", ")", "\n", "temp_dist", "=", "F", ".", "log_softmax", "(", "t", "*", "x2", ",", "dim", "=", "1", ")", "\n", "loss", "=", "F", ".", "kl_div", "(", "temp_dist", ",", "batch_dist", ",", "reduction", "=", "\"batchmean\"", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.evaluate_strict_model": [[199, 224], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "dataloaders.data_loader.get_data_loader", "encoder.eval", "len", "enumerate", "labels.to.to.to", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "encoder.bert_forward", "seen_sim.cpu().data.numpy.cpu().data.numpy.cpu().data.numpy", "numpy.max", "logits[].cpu().data.numpy", "enumerate", "map_relid2tempid.items", "utils.osdist", "x.to", "x.item", "seen_sim.cpu().data.numpy.cpu().data.numpy.cpu", "logits[].cpu"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.get_data_loader", "home.repos.pwc.inspect_result.thuiar_CRL.methods.model.Encoder.bert_forward", "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.osdist"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "evaluate_strict_model", "(", "self", ",", "args", ",", "encoder", ",", "test_data", ",", "protos4eval", ",", "featrues4eval", ",", "seen_relations", ")", ":", "\n", "        ", "data_loader", "=", "get_data_loader", "(", "args", ",", "test_data", ",", "batch_size", "=", "1", ")", "\n", "encoder", ".", "eval", "(", ")", "\n", "n", "=", "len", "(", "test_data", ")", "\n", "temp_rel2id", "=", "[", "self", ".", "rel2id", "[", "x", "]", "for", "x", "in", "seen_relations", "]", "\n", "map_relid2tempid", "=", "{", "k", ":", "v", "for", "v", ",", "k", "in", "enumerate", "(", "temp_rel2id", ")", "}", "\n", "map_tempid2relid", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "map_relid2tempid", ".", "items", "(", ")", "}", "\n", "correct", "=", "0", "\n", "for", "step", ",", "batch_data", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "            ", "labels", ",", "tokens", ",", "ind", "=", "batch_data", "\n", "labels", "=", "labels", ".", "to", "(", "args", ".", "device", ")", "\n", "tokens", "=", "torch", ".", "stack", "(", "[", "x", ".", "to", "(", "args", ".", "device", ")", "for", "x", "in", "tokens", "]", ",", "dim", "=", "0", ")", "\n", "hidden", ",", "reps", "=", "encoder", ".", "bert_forward", "(", "tokens", ")", "\n", "labels", "=", "[", "map_relid2tempid", "[", "x", ".", "item", "(", ")", "]", "for", "x", "in", "labels", "]", "\n", "logits", "=", "-", "osdist", "(", "hidden", ",", "protos4eval", ")", "\n", "seen_relation_ids", "=", "[", "self", ".", "rel2id", "[", "relation", "]", "for", "relation", "in", "seen_relations", "]", "\n", "seen_relation_ids", "=", "[", "map_relid2tempid", "[", "x", "]", "for", "x", "in", "seen_relation_ids", "]", "\n", "seen_sim", "=", "logits", "[", ":", ",", "seen_relation_ids", "]", "\n", "seen_sim", "=", "seen_sim", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "max_smi", "=", "np", ".", "max", "(", "seen_sim", ",", "axis", "=", "1", ")", "\n", "label_smi", "=", "logits", "[", ":", ",", "labels", "]", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "if", "label_smi", ">=", "max_smi", ":", "\n", "                ", "correct", "+=", "1", "\n", "", "", "return", "correct", "/", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.train": [[225, 326], ["range", "random.seed", "dataloaders.sampler.data_sampler", "model.Encoder().to", "len", "enumerate", "print", "utils.Moment", "manager.Manager.moment.init_moment", "manager.Manager.train_simple_model", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack.to.clone", "manager.Manager.evaluate_strict_model", "manager.Manager.evaluate_strict_model", "print", "print", "print", "print", "test_cur.append", "test_total.append", "print", "print", "model.Encoder", "history_relation.append", "len", "manager.Manager.moment.init_moment", "manager.Manager.train_mem_model", "manager.Manager.select_data", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "proto_mem.append", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack.to", "torch.stack.to", "torch.stack.to", "torch.stack.to", "manager.Manager.select_data", "manager.Manager.get_proto", "torch.stack.to.append", "featrues4eval.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack.to", "torch.stack.to", "torch.stack.to", "torch.stack.to"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.init_moment", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.train_simple_model", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.evaluate_strict_model", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.evaluate_strict_model", "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.init_moment", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.train_mem_model", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.select_data", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.select_data", "home.repos.pwc.inspect_result.thuiar_CRL.methods.manager.Manager.get_proto"], ["", "def", "train", "(", "self", ",", "args", ")", ":", "\n", "# set training batch", "\n", "        ", "for", "i", "in", "range", "(", "args", ".", "total_round", ")", ":", "\n", "            ", "test_cur", "=", "[", "]", "\n", "test_total", "=", "[", "]", "\n", "# set random seed", "\n", "random", ".", "seed", "(", "args", ".", "seed", "+", "i", "*", "100", ")", "\n", "\n", "# sampler setup", "\n", "sampler", "=", "data_sampler", "(", "args", "=", "args", ",", "seed", "=", "args", ".", "seed", "+", "i", "*", "100", ")", "\n", "self", ".", "id2rel", "=", "sampler", ".", "id2rel", "\n", "self", ".", "rel2id", "=", "sampler", ".", "rel2id", "\n", "# encoder setup", "\n", "encoder", "=", "Encoder", "(", "args", "=", "args", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# initialize memory and prototypes", "\n", "num_class", "=", "len", "(", "sampler", ".", "id2rel", ")", "\n", "memorized_samples", "=", "{", "}", "\n", "\n", "# load data and start computation", "\n", "\n", "history_relation", "=", "[", "]", "\n", "proto4repaly", "=", "[", "]", "\n", "for", "steps", ",", "(", "training_data", ",", "valid_data", ",", "test_data", ",", "current_relations", ",", "historic_test_data", ",", "seen_relations", ")", "in", "enumerate", "(", "sampler", ")", ":", "\n", "\n", "                ", "print", "(", "current_relations", ")", "\n", "# Initial", "\n", "train_data_for_initial", "=", "[", "]", "\n", "for", "relation", "in", "current_relations", ":", "\n", "                    ", "history_relation", ".", "append", "(", "relation", ")", "\n", "train_data_for_initial", "+=", "training_data", "[", "relation", "]", "\n", "# train model", "\n", "# no memory. first train with current task", "\n", "", "self", ".", "moment", "=", "Moment", "(", "args", ")", "\n", "self", ".", "moment", ".", "init_moment", "(", "args", ",", "encoder", ",", "train_data_for_initial", ",", "is_memory", "=", "False", ")", "\n", "self", ".", "train_simple_model", "(", "args", ",", "encoder", ",", "train_data_for_initial", ",", "args", ".", "step1_epochs", ")", "\n", "\n", "# repaly", "\n", "if", "len", "(", "memorized_samples", ")", ">", "0", ":", "\n", "# select current task sample", "\n", "                    ", "for", "relation", "in", "current_relations", ":", "\n", "                        ", "memorized_samples", "[", "relation", "]", ",", "_", ",", "_", "=", "self", ".", "select_data", "(", "args", ",", "encoder", ",", "training_data", "[", "relation", "]", ")", "\n", "\n", "", "train_data_for_memory", "=", "[", "]", "\n", "for", "relation", "in", "history_relation", ":", "\n", "                        ", "train_data_for_memory", "+=", "memorized_samples", "[", "relation", "]", "\n", "\n", "", "self", ".", "moment", ".", "init_moment", "(", "args", ",", "encoder", ",", "train_data_for_memory", ",", "is_memory", "=", "True", ")", "\n", "self", ".", "train_mem_model", "(", "args", ",", "encoder", ",", "train_data_for_memory", ",", "proto4repaly", ",", "args", ".", "step2_epochs", ",", "seen_relations", ")", "\n", "\n", "", "feat_mem", "=", "[", "]", "\n", "proto_mem", "=", "[", "]", "\n", "\n", "for", "relation", "in", "current_relations", ":", "\n", "                    ", "memorized_samples", "[", "relation", "]", ",", "feat", ",", "temp_proto", "=", "self", ".", "select_data", "(", "args", ",", "encoder", ",", "training_data", "[", "relation", "]", ")", "\n", "feat_mem", ".", "append", "(", "feat", ")", "\n", "proto_mem", ".", "append", "(", "temp_proto", ")", "\n", "\n", "", "feat_mem", "=", "torch", ".", "cat", "(", "feat_mem", ",", "dim", "=", "0", ")", "\n", "temp_proto", "=", "torch", ".", "stack", "(", "proto_mem", ",", "dim", "=", "0", ")", "\n", "\n", "protos4eval", "=", "[", "]", "\n", "featrues4eval", "=", "[", "]", "\n", "self", ".", "lbs", "=", "[", "]", "\n", "for", "relation", "in", "history_relation", ":", "\n", "                    ", "if", "relation", "not", "in", "current_relations", ":", "\n", "\n", "                        ", "protos", ",", "featrues", "=", "self", ".", "get_proto", "(", "args", ",", "encoder", ",", "memorized_samples", "[", "relation", "]", ")", "\n", "protos4eval", ".", "append", "(", "protos", ")", "\n", "featrues4eval", ".", "append", "(", "featrues", ")", "\n", "\n", "", "", "if", "protos4eval", ":", "\n", "\n", "                    ", "protos4eval", "=", "torch", ".", "cat", "(", "protos4eval", ",", "dim", "=", "0", ")", ".", "detach", "(", ")", "\n", "protos4eval", "=", "torch", ".", "cat", "(", "[", "protos4eval", ",", "temp_proto", ".", "to", "(", "args", ".", "device", ")", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "else", ":", "\n", "                    ", "protos4eval", "=", "temp_proto", ".", "to", "(", "args", ".", "device", ")", "\n", "", "proto4repaly", "=", "protos4eval", ".", "clone", "(", ")", "\n", "\n", "test_data_1", "=", "[", "]", "\n", "for", "relation", "in", "current_relations", ":", "\n", "                    ", "test_data_1", "+=", "test_data", "[", "relation", "]", "\n", "\n", "", "test_data_2", "=", "[", "]", "\n", "for", "relation", "in", "seen_relations", ":", "\n", "                    ", "test_data_2", "+=", "historic_test_data", "[", "relation", "]", "\n", "\n", "", "cur_acc", "=", "self", ".", "evaluate_strict_model", "(", "args", ",", "encoder", ",", "test_data_1", ",", "protos4eval", ",", "featrues4eval", ",", "seen_relations", ")", "\n", "total_acc", "=", "self", ".", "evaluate_strict_model", "(", "args", ",", "encoder", ",", "test_data_2", ",", "protos4eval", ",", "featrues4eval", ",", "seen_relations", ")", "\n", "\n", "print", "(", "f'Restart Num {i+1}'", ")", "\n", "print", "(", "f'task--{steps + 1}:'", ")", "\n", "print", "(", "f'current test acc:{cur_acc}'", ")", "\n", "print", "(", "f'history test acc:{total_acc}'", ")", "\n", "test_cur", ".", "append", "(", "cur_acc", ")", "\n", "test_total", ".", "append", "(", "total_acc", ")", "\n", "\n", "print", "(", "test_cur", ")", "\n", "print", "(", "test_total", ")", "\n", "del", "self", ".", "moment", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.__init__": [[10, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", "->", "None", ":", "\n", "\n", "        ", "self", ".", "labels", "=", "None", "\n", "self", ".", "mem_labels", "=", "None", "\n", "self", ".", "memlen", "=", "0", "\n", "self", ".", "sample_k", "=", "500", "\n", "self", ".", "temperature", "=", "args", ".", "temp", "\n", "", "def", "get_mem_proto", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.get_mem_proto": [[17, 20], ["utils.Moment._compute_centroids_ind"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment._compute_centroids_ind"], ["", "def", "get_mem_proto", "(", "self", ")", ":", "\n", "        ", "c", "=", "self", ".", "_compute_centroids_ind", "(", ")", "\n", "return", "c", "\n", "", "def", "_compute_centroids_ind", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment._compute_centroids_ind": [[20, 33], ["len", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "enumerate", "torch.normalize", "torch.normalize", "torch.normalize", "x.item", "cinds.append", "feats.size", "numpy.where", "feats[].mean", "x.item", "utils.Moment.mem_labels.cpu().numpy", "utils.Moment.mem_labels.cpu"], "methods", ["None"], ["", "def", "_compute_centroids_ind", "(", "self", ")", ":", "\n", "        ", "cinds", "=", "[", "]", "\n", "for", "x", "in", "self", ".", "mem_labels", ":", "\n", "            ", "if", "x", ".", "item", "(", ")", "not", "in", "cinds", ":", "\n", "                ", "cinds", ".", "append", "(", "x", ".", "item", "(", ")", ")", "\n", "\n", "", "", "num", "=", "len", "(", "cinds", ")", "\n", "feats", "=", "self", ".", "mem_features", "\n", "centroids", "=", "torch", ".", "zeros", "(", "(", "num", ",", "feats", ".", "size", "(", "1", ")", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "feats", ".", "device", ")", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "cinds", ")", ":", "\n", "            ", "ind", "=", "np", ".", "where", "(", "self", ".", "mem_labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "==", "c", ")", "[", "0", "]", "\n", "centroids", "[", "i", ",", ":", "]", "=", "F", ".", "normalize", "(", "feats", "[", "ind", ",", ":", "]", ".", "mean", "(", "dim", "=", "0", ")", ",", "p", "=", "2", ",", "dim", "=", "0", ")", "\n", "", "return", "centroids", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.update": [[34, 36], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "ind", ",", "feature", ",", "init", "=", "False", ")", ":", "\n", "        ", "self", ".", "features", "[", "ind", "]", "=", "feature", "\n", "", "def", "update_mem", "(", "self", ",", "ind", ",", "feature", ",", "hidden", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.update_mem": [[36, 40], ["None"], "methods", ["None"], ["", "def", "update_mem", "(", "self", ",", "ind", ",", "feature", ",", "hidden", "=", "None", ")", ":", "\n", "        ", "self", ".", "mem_features", "[", "ind", "]", "=", "feature", "\n", "if", "hidden", "is", "not", "None", ":", "\n", "            ", "self", ".", "hidden_features", "[", "ind", "]", "=", "hidden", "\n", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.init_moment": [[40, 73], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "encoder.eval", "len", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "dataloaders.data_loader.get_data_loader", "tqdm.tqdm.tqdm", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.to", "torch.cat.to", "torch.cat.to", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "dataloaders.data_loader.get_data_loader", "tqdm.tqdm.tqdm", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.to", "torch.cat.to", "torch.cat.to", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "encoder.bert_forward", "utils.Moment.update", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "encoder.bert_forward", "utils.Moment.update_mem", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "reps.detach", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "reps.detach", "hidden.detach", "x.to", "x.to"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.get_data_loader", "home.repos.pwc.inspect_result.thuiar_CRL.dataloaders.data_loader.get_data_loader", "home.repos.pwc.inspect_result.thuiar_CRL.methods.model.Encoder.bert_forward", "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.update", "home.repos.pwc.inspect_result.thuiar_CRL.methods.model.Encoder.bert_forward", "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.update_mem"], ["", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "init_moment", "(", "self", ",", "args", ",", "encoder", ",", "datasets", ",", "is_memory", "=", "False", ")", ":", "\n", "        ", "encoder", ".", "eval", "(", ")", "\n", "datalen", "=", "len", "(", "datasets", ")", "\n", "if", "not", "is_memory", ":", "\n", "            ", "self", ".", "features", "=", "torch", ".", "zeros", "(", "datalen", ",", "args", ".", "feat_dim", ")", ".", "cuda", "(", ")", "\n", "data_loader", "=", "get_data_loader", "(", "args", ",", "datasets", ")", "\n", "td", "=", "tqdm", "(", "data_loader", ")", "\n", "lbs", "=", "[", "]", "\n", "for", "step", ",", "batch_data", "in", "enumerate", "(", "td", ")", ":", "\n", "\n", "                ", "labels", ",", "tokens", ",", "ind", "=", "batch_data", "\n", "tokens", "=", "torch", ".", "stack", "(", "[", "x", ".", "to", "(", "args", ".", "device", ")", "for", "x", "in", "tokens", "]", ",", "dim", "=", "0", ")", "\n", "_", ",", "reps", "=", "encoder", ".", "bert_forward", "(", "tokens", ")", "\n", "self", ".", "update", "(", "ind", ",", "reps", ".", "detach", "(", ")", ")", "\n", "lbs", ".", "append", "(", "labels", ")", "\n", "", "lbs", "=", "torch", ".", "cat", "(", "lbs", ")", "\n", "self", ".", "labels", "=", "lbs", ".", "to", "(", "args", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "memlen", "=", "datalen", "\n", "self", ".", "mem_features", "=", "torch", ".", "zeros", "(", "datalen", ",", "args", ".", "feat_dim", ")", ".", "cuda", "(", ")", "\n", "self", ".", "hidden_features", "=", "torch", ".", "zeros", "(", "datalen", ",", "args", ".", "encoder_output_size", ")", ".", "cuda", "(", ")", "\n", "lbs", "=", "[", "]", "\n", "data_loader", "=", "get_data_loader", "(", "args", ",", "datasets", ")", "\n", "td", "=", "tqdm", "(", "data_loader", ")", "\n", "for", "step", ",", "batch_data", "in", "enumerate", "(", "td", ")", ":", "\n", "                ", "labels", ",", "tokens", ",", "ind", "=", "batch_data", "\n", "tokens", "=", "torch", ".", "stack", "(", "[", "x", ".", "to", "(", "args", ".", "device", ")", "for", "x", "in", "tokens", "]", ",", "dim", "=", "0", ")", "\n", "hidden", ",", "reps", "=", "encoder", ".", "bert_forward", "(", "tokens", ")", "\n", "self", ".", "update_mem", "(", "ind", ",", "reps", ".", "detach", "(", ")", ",", "hidden", ".", "detach", "(", ")", ")", "\n", "lbs", ".", "append", "(", "labels", ")", "\n", "", "lbs", "=", "torch", ".", "cat", "(", "lbs", ")", "\n", "self", ".", "mem_labels", "=", "lbs", ".", "to", "(", "args", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.Moment.loss": [[74, 107], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "list", "range", "len", "random.sample", "[].detach", "labels.unsqueeze().repeat", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "len", "labels.unsqueeze", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "", "def", "loss", "(", "self", ",", "x", ",", "labels", ",", "is_mem", "=", "False", ",", "mapping", "=", "None", ")", ":", "\n", "\n", "        ", "if", "is_mem", ":", "\n", "            ", "ct_x", "=", "self", ".", "mem_features", "\n", "ct_y", "=", "self", ".", "mem_labels", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "sample_k", "is", "not", "None", ":", "\n", "# sample some instances", "\n", "                ", "idx", "=", "list", "(", "range", "(", "len", "(", "self", ".", "features", ")", ")", ")", "\n", "if", "len", "(", "idx", ")", ">", "self", ".", "sample_k", ":", "\n", "                    ", "sample_id", "=", "random", ".", "sample", "(", "idx", ",", "self", ".", "sample_k", ")", "\n", "", "else", ":", "\n", "                    ", "sample_id", "=", "idx", "\n", "", "ct_x", "=", "self", ".", "features", "[", "sample_id", "]", "\n", "ct_y", "=", "self", ".", "labels", "[", "sample_id", "]", "\n", "", "else", ":", "\n", "                ", "ct_x", "=", "self", ".", "features", "\n", "ct_y", "=", "self", ".", "labels", "\n", "\n", "", "", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ")", "if", "x", ".", "is_cuda", "else", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "dot_product_tempered", "=", "torch", ".", "mm", "(", "x", ",", "ct_x", ".", "T", ")", "/", "self", ".", "temperature", "# n * m", "\n", "# Minus max for numerical stability with exponential. Same done in cross entropy. Epsilon added to avoid log(0)", "\n", "exp_dot_tempered", "=", "(", "\n", "torch", ".", "exp", "(", "dot_product_tempered", "-", "torch", ".", "max", "(", "dot_product_tempered", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", ".", "detach", "(", ")", ")", "+", "1e-5", "\n", ")", "\n", "mask_combined", "=", "(", "labels", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "ct_y", ".", "shape", "[", "0", "]", ")", "==", "ct_y", ")", ".", "to", "(", "device", ")", "# n*m", "\n", "cardinality_per_samples", "=", "torch", ".", "sum", "(", "mask_combined", ",", "dim", "=", "1", ")", "\n", "\n", "log_prob", "=", "-", "torch", ".", "log", "(", "exp_dot_tempered", "/", "(", "torch", ".", "sum", "(", "exp_dot_tempered", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ")", ")", "\n", "supervised_contrastive_loss_per_sample", "=", "torch", ".", "sum", "(", "log_prob", "*", "mask_combined", ",", "dim", "=", "1", ")", "/", "cardinality_per_samples", "\n", "supervised_contrastive_loss", "=", "torch", ".", "mean", "(", "supervised_contrastive_loss_per_sample", ")", "\n", "\n", "return", "supervised_contrastive_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.dot_dist": [[108, 110], ["torch.matmul", "torch.matmul", "torch.matmul", "x2.t"], "function", ["None"], ["", "", "def", "dot_dist", "(", "x1", ",", "x2", ")", ":", "\n", "    ", "return", "torch", ".", "matmul", "(", "x1", ",", "x2", ".", "t", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.osdist": [[111, 123], ["pairwise_distances_squared.clamp", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.matmul", "torch.matmul", "torch.matmul", "c.t", "c.t"], "function", ["None"], ["", "def", "osdist", "(", "x", ",", "c", ")", ":", "\n", "    ", "pairwise_distances_squared", "=", "torch", ".", "sum", "(", "x", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "torch", ".", "sum", "(", "c", ".", "t", "(", ")", "**", "2", ",", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "-", "2.0", "*", "torch", ".", "matmul", "(", "x", ",", "c", ".", "t", "(", ")", ")", "\n", "\n", "error_mask", "=", "pairwise_distances_squared", "<=", "0.0", "\n", "\n", "pairwise_distances", "=", "pairwise_distances_squared", ".", "clamp", "(", "min", "=", "1e-16", ")", "#.sqrt()", "\n", "\n", "pairwise_distances", "=", "torch", ".", "mul", "(", "pairwise_distances", ",", "~", "error_mask", ")", "\n", "\n", "return", "pairwise_distances", "\n", "", "def", "setup_seed", "(", "seed", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.utils.setup_seed": [[123, 129], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed"], "function", ["None"], ["", "def", "setup_seed", "(", "seed", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "", "", ""]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.backbone.Bert_Encoder.__init__": [[8, 32], ["torch.Module.__init__", "transformers.BertModel.from_pretrained().cuda", "transformers.BertConfig.from_pretrained", "torch.LayerNorm", "torch.LayerNorm", "Exception", "backbone.Bert_Encoder.encoder.resize_token_embeddings", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "transformers.BertModel.from_pretrained"], "methods", ["home.repos.pwc.inspect_result.thuiar_CRL.methods.backbone.Bert_Encoder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "out_token", "=", "False", ")", ":", "\n", "        ", "super", "(", "Bert_Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# load model", "\n", "self", ".", "encoder", "=", "BertModel", ".", "from_pretrained", "(", "config", ".", "bert_path", ")", ".", "cuda", "(", ")", "\n", "self", ".", "bert_config", "=", "BertConfig", ".", "from_pretrained", "(", "config", ".", "bert_path", ")", "\n", "\n", "# the dimension for the final outputs", "\n", "self", ".", "output_size", "=", "config", ".", "encoder_output_size", "\n", "self", ".", "out_dim", "=", "self", ".", "output_size", "\n", "\n", "# find which encoding is used", "\n", "if", "config", ".", "pattern", "in", "[", "'standard'", ",", "'entity_marker'", "]", ":", "\n", "            ", "self", ".", "pattern", "=", "config", ".", "pattern", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Wrong encoding.'", ")", "\n", "\n", "", "if", "self", ".", "pattern", "==", "'entity_marker'", ":", "\n", "            ", "self", ".", "encoder", ".", "resize_token_embeddings", "(", "config", ".", "vocab_size", "+", "config", ".", "marker_size", ")", "\n", "self", ".", "linear_transform", "=", "nn", ".", "Linear", "(", "self", ".", "bert_config", ".", "hidden_size", "*", "2", ",", "self", ".", "output_size", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "linear_transform", "=", "nn", ".", "Linear", "(", "self", ".", "bert_config", ".", "hidden_size", ",", "self", ".", "output_size", ",", "bias", "=", "True", ")", "\n", "\n", "", "self", ".", "layer_normalization", "=", "nn", ".", "LayerNorm", "(", "[", "self", ".", "output_size", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.backbone.Bert_Encoder.get_output_size": [[34, 36], ["None"], "methods", ["None"], ["", "def", "get_output_size", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "output_size", "\n", "\n"]], "home.repos.pwc.inspect_result.thuiar_CRL.methods.backbone.Bert_Encoder.forward": [[37, 75], ["range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "backbone.Bert_Encoder.view", "backbone.Bert_Encoder.linear_transform", "backbone.Bert_Encoder.encoder", "inputs[].cpu().numpy", "e11.append", "e21.append", "backbone.Bert_Encoder.encoder", "len", "backbone.Bert_Encoder.append", "inputs.size", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "backbone.Bert_Encoder.size", "inputs[].cpu", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.argwhere", "numpy.argwhere", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "# generate representation under a certain encoding strategy", "\n", "        ", "if", "self", ".", "pattern", "==", "'standard'", ":", "\n", "# in the standard mode, the representation is generated according to", "\n", "#  the representation of[CLS] mark.", "\n", "            ", "output", "=", "self", ".", "encoder", "(", "inputs", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "# in the entity_marker mode, the representation is generated from the representations of", "\n", "#  marks [E11] and [E21] of the head and tail entities.", "\n", "            ", "e11", "=", "[", "]", "\n", "e21", "=", "[", "]", "\n", "# for each sample in the batch, acquire the positions of its [E11] and [E21]", "\n", "for", "i", "in", "range", "(", "inputs", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "                ", "tokens", "=", "inputs", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "e11", ".", "append", "(", "np", ".", "argwhere", "(", "tokens", "==", "30522", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "e21", ".", "append", "(", "np", ".", "argwhere", "(", "tokens", "==", "30524", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "\n", "# input the sample to BERT", "\n", "", "tokens_output", "=", "self", ".", "encoder", "(", "inputs", ")", "[", "0", "]", "# [B,N] --> [B,N,H]", "\n", "output", "=", "[", "]", "\n", "# for each sample in the batch, acquire its representations for [E11] and [E21]", "\n", "for", "i", "in", "range", "(", "len", "(", "e11", ")", ")", ":", "\n", "                ", "if", "inputs", ".", "device", ".", "type", "in", "[", "'cuda'", "]", ":", "\n", "                    ", "instance_output", "=", "torch", ".", "index_select", "(", "tokens_output", ",", "0", ",", "torch", ".", "tensor", "(", "i", ")", ".", "cuda", "(", ")", ")", "\n", "instance_output", "=", "torch", ".", "index_select", "(", "instance_output", ",", "1", ",", "torch", ".", "tensor", "(", "[", "e11", "[", "i", "]", ",", "e21", "[", "i", "]", "]", ")", ".", "cuda", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "instance_output", "=", "torch", ".", "index_select", "(", "tokens_output", ",", "0", ",", "torch", ".", "tensor", "(", "i", ")", ")", "\n", "instance_output", "=", "torch", ".", "index_select", "(", "instance_output", ",", "1", ",", "torch", ".", "tensor", "(", "[", "e11", "[", "i", "]", ",", "e21", "[", "i", "]", "]", ")", ")", "\n", "", "output", ".", "append", "(", "instance_output", ")", "# [B,N] --> [B,2,H]", "\n", "# for each sample in the batch, concatenate the representations of [E11] and [E21], and reshape", "\n", "", "output", "=", "torch", ".", "cat", "(", "output", ",", "dim", "=", "0", ")", "\n", "output", "=", "output", ".", "view", "(", "output", ".", "size", "(", ")", "[", "0", "]", ",", "-", "1", ")", "# [B,N] --> [B,H*2]", "\n", "\n", "output", "=", "self", ".", "linear_transform", "(", "output", ")", "\n", "\n", "\n", "\n", "", "return", "output", "", "", "", ""]]}