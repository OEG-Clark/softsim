{"home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.conf.srcs_in_process": [[83, 85], ["None"], "function", ["None"], ["def", "srcs_in_process", "(", "idx", ")", ":", "\n", "    ", "return", "[", "src", "[", "0", "]", "for", "src", "in", "SOURCES", "if", "src", "[", "1", "]", "==", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.conf.index_in_process": [[87, 89], ["enumerate"], "function", ["None"], ["", "def", "index_in_process", "(", "pidx", ")", ":", "\n", "    ", "return", "[", "idx", "for", "idx", ",", "src", "in", "enumerate", "(", "SOURCES", ")", "if", "src", "[", "1", "]", "==", "pidx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.__init__": [[13, 28], ["torch.device", "model.Encoder().to", "model.AttentionDecoder().to", "torch.optim.Adam", "torch.optim.Adam", "torch.nn.MSELoss", "network.Network.encoder.parameters", "network.Network.decoder.parameters", "model.Encoder", "model.AttentionDecoder"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "pidx", ":", "int", ",", "gidx", ":", "int", ",", "n_features", ":", "int", ",", "n_hiddens", ":", "int", ")", ":", "\n", "        ", "self", ".", "n_features", "=", "n_features", "\n", "self", ".", "pidx", "=", "pidx", "\n", "self", ".", "gidx", "=", "gidx", "\n", "self", ".", "gpu", "=", "torch", ".", "device", "(", "'cuda:{}'", ".", "format", "(", "gidx", "-", "1", ")", ")", "\n", "\n", "self", ".", "encoder", "=", "model", ".", "Encoder", "(", "n_inputs", "=", "n_features", ",", "n_hiddens", "=", "n_hiddens", ")", ".", "to", "(", "self", ".", "gpu", ")", "\n", "self", ".", "decoder", "=", "model", ".", "AttentionDecoder", "(", "n_hiddens", "=", "n_hiddens", ",", "n_features", "=", "n_features", ")", ".", "to", "(", "self", ".", "gpu", ")", "\n", "\n", "self", ".", "model_fn", "=", "'checkpoints/SWaT-P{}'", ".", "format", "(", "pidx", ")", "\n", "\n", "self", ".", "encoder_optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "encoder", ".", "parameters", "(", ")", ",", "amsgrad", "=", "True", ")", "\n", "self", ".", "decoder_optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "decoder", ".", "parameters", "(", ")", ",", "amsgrad", "=", "True", ")", "\n", "\n", "self", ".", "mse_loss", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.train": [[29, 43], ["torch.utils.data.DataLoader", "network.Network.encoder_optimizer.zero_grad", "network.Network.decoder_optimizer.zero_grad", "network.Network.infer", "network.Network.mse_loss", "network.Network.backward", "network.Network.item", "network.Network.encoder_optimizer.step", "network.Network.decoder_optimizer.step"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.infer"], ["", "def", "train", "(", "self", ",", "dataset", ",", "batch_size", ")", "->", "float", ":", "\n", "        ", "epoch_loss", "=", "0", "\n", "for", "batch", "in", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", ":", "\n", "            ", "self", ".", "encoder_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "decoder_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "answer", ",", "guess", "=", "self", ".", "infer", "(", "batch", ")", "\n", "loss", "=", "self", ".", "mse_loss", "(", "guess", ",", "answer", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "epoch_loss", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "self", ".", "encoder_optimizer", ".", "step", "(", ")", "\n", "self", ".", "decoder_optimizer", ".", "step", "(", ")", "\n", "", "return", "epoch_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.eval": [[44, 62], ["torch.utils.data.DataLoader", "network.Network.infer", "torch.norm", "torch.sum().item", "len", "db.swat_time_to_nanosec", "torch.abs().cpu().numpy", "fields.update", "DB.write", "torch.sum", "conf.EVAL_MEASUREMENT.format", "torch.abs().cpu", "enumerate", "torch.norm.cpu().tolist", "torch.abs", "torch.norm.cpu"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.infer", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.swat_time_to_nanosec", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.write"], ["", "def", "eval", "(", "self", ",", "dataset", ",", "batch_size", ",", "db_write", ":", "bool", ")", "->", "float", ":", "\n", "        ", "epoch_loss", "=", "0", "\n", "n_datapoints", "=", "0", "\n", "for", "batch", "in", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", ":", "\n", "            ", "ts", "=", "[", "swat_time_to_nanosec", "(", "t", ")", "for", "t", "in", "batch", "[", "'ts'", "]", "]", "\n", "attack", "=", "batch", "[", "'attack'", "]", "\n", "\n", "answer", ",", "guess", "=", "self", ".", "infer", "(", "batch", ")", "\n", "distance", "=", "torch", ".", "norm", "(", "guess", "-", "answer", ",", "p", "=", "conf", ".", "EVALUATION_NORM_P", ",", "dim", "=", "1", ")", "\n", "epoch_loss", "+=", "torch", ".", "sum", "(", "distance", ")", ".", "item", "(", ")", "\n", "n_datapoints", "+=", "len", "(", "ts", ")", "\n", "\n", "if", "db_write", ":", "# write all distances to influxDB", "\n", "                ", "col_dist", "=", "torch", ".", "abs", "(", "guess", "-", "answer", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "fields", "=", "{", "k", ":", "col_dist", "[", ":", ",", "i", "]", "for", "i", ",", "k", "in", "enumerate", "(", "conf", ".", "P_SRCS", "[", "self", ".", "pidx", "-", "1", "]", ")", "}", "\n", "fields", ".", "update", "(", "{", "'distance'", ":", "distance", ".", "cpu", "(", ")", ".", "tolist", "(", ")", "}", ")", "\n", "DB", ".", "write", "(", "conf", ".", "EVAL_MEASUREMENT", ".", "format", "(", "self", ".", "pidx", ")", ",", "{", "'attack'", ":", "attack", "}", ",", "fields", ",", "ts", ")", "\n", "", "", "return", "epoch_loss", "/", "n_datapoints", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.infer": [[63, 70], ["batch[].to", "batch[].to", "batch[].to", "network.Network.encoder", "network.Network.decoder"], "methods", ["None"], ["", "def", "infer", "(", "self", ",", "batch", ")", ":", "\n", "        ", "given", "=", "batch", "[", "'given'", "]", ".", "to", "(", "self", ".", "gpu", ")", "\n", "predict", "=", "batch", "[", "'predict'", "]", ".", "to", "(", "self", ".", "gpu", ")", "\n", "answer", "=", "batch", "[", "'answer'", "]", ".", "to", "(", "self", ".", "gpu", ")", "\n", "encoder_outs", ",", "context", "=", "self", ".", "encoder", "(", "given", ")", "\n", "guess", "=", "self", ".", "decoder", "(", "encoder_outs", ",", "context", ",", "predict", ")", "\n", "return", "answer", ",", "guess", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.load": [[71, 79], ["torch.load", "network.Network.encoder.load_state_dict", "network.Network.decoder.load_state_dict", "network.Network.encoder_optimizer.load_state_dict", "network.Network.decoder_optimizer.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.load"], ["", "def", "load", "(", "self", ",", "idx", ":", "int", ")", "->", "float", ":", "\n", "        ", "fn", "=", "self", ".", "model_fn", "+", "'-{}.net'", ".", "format", "(", "idx", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "fn", ")", "\n", "self", ".", "encoder", ".", "load_state_dict", "(", "checkpoint", "[", "'model_encoder'", "]", ")", "\n", "self", ".", "decoder", ".", "load_state_dict", "(", "checkpoint", "[", "'model_decoder'", "]", ")", "\n", "self", ".", "encoder_optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_encoder'", "]", ")", "\n", "self", ".", "decoder_optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_decoder'", "]", ")", "\n", "return", "checkpoint", "[", "'min_loss'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.save": [[80, 91], ["torch.save", "network.Network.encoder.state_dict", "network.Network.decoder.state_dict", "network.Network.encoder_optimizer.state_dict", "network.Network.decoder_optimizer.state_dict"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.save"], ["", "def", "save", "(", "self", ",", "idx", ":", "int", ",", "min_loss", ":", "float", ")", "->", "None", ":", "\n", "        ", "fn", "=", "self", ".", "model_fn", "+", "'-{}.net'", ".", "format", "(", "idx", ")", "\n", "torch", ".", "save", "(", "\n", "{", "\n", "'min_loss'", ":", "min_loss", ",", "\n", "'model_encoder'", ":", "self", ".", "encoder", ".", "state_dict", "(", ")", ",", "\n", "'model_decoder'", ":", "self", ".", "decoder", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_encoder'", ":", "self", ".", "encoder_optimizer", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_decoder'", ":", "self", ".", "decoder_optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "\n", "fn", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.train_mode": [[93, 96], ["network.Network.encoder.train", "network.Network.decoder.train"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.train", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.train"], ["", "def", "train_mode", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "encoder", ".", "train", "(", ")", "\n", "self", ".", "decoder", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.eval_mode": [[97, 100], ["network.Network.encoder.eval", "network.Network.decoder.eval"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.eval", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.eval"], ["", "def", "eval_mode", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.parser.Normalizer.__init__": [[18, 26], ["pandas.read_csv", "df[].describe", "print"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "# Mean and standard dev are calculated from the normal dataset", "\n", "        ", "self", ".", "LR", "=", "{", "}", "\n", "df", "=", "pd", ".", "read_csv", "(", "NORMAL", ")", "\n", "for", "col", "in", "conf", ".", "ALL_SRCS", ":", "\n", "            ", "desc", "=", "df", "[", "col", "]", ".", "describe", "(", ")", "\n", "self", ".", "LR", "[", "col", "]", "=", "(", "desc", "[", "'min'", "]", ",", "desc", "[", "'max'", "]", ")", "\n", "print", "(", "f'{col:>10}: {self.LR[col][0]:10.6} - {self.LR[col][1]:10.6}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.parser.Normalizer.normalize": [[27, 35], ["float", "sys.exit"], "methods", ["None"], ["", "", "def", "normalize", "(", "self", ",", "dic", ":", "Dict", ",", "col", ":", "str", ")", "->", "float", ":", "\n", "        ", "if", "col", "not", "in", "conf", ".", "ALL_SRCS", ":", "\n", "            ", "sys", ".", "exit", "(", "'[FAILED] Invalid column name: {}'", ".", "format", "(", "col", ")", ")", "\n", "", "cv", "=", "float", "(", "dic", "[", "col", "]", ")", "\n", "if", "col", "in", "conf", ".", "DIGITAL_SRCS", ":", "\n", "            ", "return", "cv", "/", "2", "# 0, 0.5, 1", "\n", "", "L", ",", "R", "=", "self", ".", "LR", "[", "col", "]", "\n", "return", "(", "cv", "-", "L", ")", "/", "(", "R", "-", "L", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.parser.attack_window_p": [[37, 42], ["None"], "function", ["None"], ["", "", "def", "attack_window_p", "(", "w", ")", ":", "\n", "    ", "for", "att_p", "in", "w", ":", "\n", "        ", "if", "att_p", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.parser.data_generator": [[44, 73], ["parser.Normalizer", "open", "csv.reader", "list", "collections.deque", "collections.deque", "map", "collections.deque", "list", "dict", "q_ts.append", "range", "q_attack.append", "next", "range", "map", "zip", "datetime.datetime.strptime", "q_signals[].append", "len", "x.strip", "numpy.array", "numpy.array", "x.strip", "dic[].strip().upper", "datetime.timedelta", "range", "parser.attack_window_p", "parser.Normalizer.normalize", "dic[].strip"], "function", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.parser.attack_window_p", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.parser.Normalizer.normalize"], ["", "def", "data_generator", "(", "filename", ":", "str", ")", ":", "\n", "    ", "normalizer", "=", "Normalizer", "(", ")", "\n", "with", "open", "(", "filename", ")", "as", "fh", ":", "\n", "        ", "reader", "=", "csv", ".", "reader", "(", "fh", ",", "delimiter", "=", "','", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "header", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "strip", "(", ")", ",", "next", "(", "reader", ")", ")", ")", "\n", "q_ts", ":", "deque", "=", "deque", "(", "maxlen", "=", "conf", ".", "WINDOW_SIZE", ")", "\n", "q_signals", ":", "List", "[", "deque", "]", "=", "[", "deque", "(", "maxlen", "=", "conf", ".", "WINDOW_SIZE", ")", "for", "_", "in", "range", "(", "conf", ".", "N_PROCESS", ")", "]", "\n", "q_attack", ":", "deque", "=", "deque", "(", "maxlen", "=", "conf", ".", "WINDOW_SIZE", ")", "\n", "for", "line", "in", "reader", ":", "\n", "            ", "line", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "strip", "(", ")", ",", "line", ")", ")", "\n", "dic", "=", "dict", "(", "zip", "(", "header", ",", "line", ")", ")", "# make a map from header's field names", "\n", "q_ts", ".", "append", "(", "datetime", ".", "strptime", "(", "dic", "[", "conf", ".", "HEADER_STRING_TIMESTAMP", "]", ",", "conf", ".", "SWaT_TIME_FORMAT", ")", ")", "\n", "for", "pidx", "in", "range", "(", "conf", ".", "N_PROCESS", ")", ":", "\n", "                ", "q_signals", "[", "pidx", "]", ".", "append", "(", "\n", "np", ".", "array", "(", "[", "normalizer", ".", "normalize", "(", "dic", ",", "\n", "x", ")", "for", "x", "in", "conf", ".", "P_SRCS", "[", "pidx", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", ")", "\n", "", "q_attack", ".", "append", "(", "True", "if", "dic", "[", "conf", ".", "HEADER_STRING_NORMAL_OR_ATTACK", "]", ".", "strip", "(", ")", ".", "upper", "(", ")", "==", "'ATTACK'", "else", "False", ")", "\n", "if", "len", "(", "q_ts", ")", "==", "conf", ".", "WINDOW_SIZE", ":", "\n", "                ", "if", "q_ts", "[", "0", "]", "+", "timedelta", "(", "seconds", "=", "conf", ".", "WINDOW_SIZE", "-", "1", ")", "!=", "q_ts", "[", "-", "1", "]", ":", "\n", "                    ", "continue", "\n", "", "signals_window", "=", "[", "np", ".", "array", "(", "q_signals", "[", "pidx", "]", ")", "for", "pidx", "in", "range", "(", "conf", ".", "N_PROCESS", ")", "]", "\n", "split_window", "=", "[", "\n", "(", "w", "[", ":", "conf", ".", "WINDOW_GIVEN", "]", ",", "\n", "w", "[", "conf", ".", "WINDOW_GIVEN", ":", "conf", ".", "WINDOW_GIVEN", "+", "conf", ".", "WINDOW_PREDICT", "]", ",", "\n", "w", "[", "-", "1", "]", ")", "for", "w", "in", "signals_window", "\n", "]", "\n", "yield", "q_ts", "[", "conf", ".", "WINDOW_GIVEN", "]", ",", "split_window", ",", "attack_window_p", "(", "q_attack", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.parser.main": [[75, 108], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "print", "print", "print", "print", "print", "parser.data_generator", "range", "print", "print", "range", "next", "range", "open", "pickle.dump", "picks[].append"], "function", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.parser.data_generator"], ["", "", "", "", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Preprocessor for the SWaT dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'csv_file'", ",", "help", "=", "'data filename'", ")", "\n", "parser", ".", "add_argument", "(", "'out_file'", ",", "help", "=", "'preprocessed filename'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "print", "(", "f'* loading {args.csv_file}'", ")", "\n", "print", "(", "f'* collecting a window size: {conf.WINDOW_SIZE}'", ")", "\n", "print", "(", "f'\\t- {conf.WINDOW_GIVEN} for training'", ")", "\n", "print", "(", "f'\\t- {conf.WINDOW_PREDICT} for prediction'", ")", "\n", "print", "(", "f'\\t- 1 for the answer'", ")", "\n", "\n", "g", "=", "data_generator", "(", "args", ".", "csv_file", ")", "\n", "lines", "=", "0", "\n", "lines_attack", "=", "0", "\n", "picks", "=", "[", "[", "]", "for", "_", "in", "range", "(", "conf", ".", "N_PROCESS", ")", "]", "\n", "while", "True", ":", "\n", "        ", "try", ":", "\n", "            ", "ts", ",", "window", ",", "is_attack", "=", "next", "(", "g", ")", "\n", "for", "pidx", "in", "range", "(", "conf", ".", "N_PROCESS", ")", ":", "\n", "                ", "given", ",", "prediction", ",", "answer", "=", "window", "[", "pidx", "]", "\n", "picks", "[", "pidx", "]", ".", "append", "(", "[", "ts", ",", "given", ",", "prediction", ",", "answer", ",", "is_attack", "]", ")", "\n", "", "lines", "+=", "1", "\n", "if", "is_attack", ":", "\n", "                ", "lines_attack", "+=", "1", "\n", "", "", "except", "StopIteration", ":", "\n", "            ", "break", "\n", "", "", "for", "pidx", "in", "range", "(", "conf", ".", "N_PROCESS", ")", ":", "\n", "        ", "out_filename", "=", "'{}-P{}.dat'", ".", "format", "(", "args", ".", "out_file", ",", "pidx", "+", "1", ")", "\n", "with", "open", "(", "out_filename", ",", "\"wb\"", ")", "as", "fh", ":", "\n", "            ", "pickle", ".", "dump", "(", "picks", "[", "pidx", "]", ",", "fh", ")", "\n", "", "print", "(", "f'* writing to {out_filename}'", ")", "\n", "", "print", "(", "f'* {lines:,} data-points have been written ({lines_attack:,} attack windows)'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.judge.Smooth.__init__": [[16, 27], ["collections.deque", "collections.deque", "collections.deque", "len", "judge.Smooth.push"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.judge.Smooth.push"], ["    ", "def", "__init__", "(", "self", ",", "start", ":", "datetime", ",", "pidx", ":", "int", ",", "n_aggregate", ":", "int", ",", "n_cutoff", ":", "int", ")", ":", "\n", "        ", "self", ".", "db_cursor", "=", "start", "\n", "self", ".", "pidx", "=", "pidx", "\n", "assert", "n_aggregate", ">", "n_cutoff", "*", "2", "\n", "self", ".", "n_aggregate", "=", "n_aggregate", "\n", "self", ".", "n_cutoff", "=", "n_cutoff", "\n", "self", ".", "bucket", ":", "deque", "=", "deque", "(", "maxlen", "=", "n_aggregate", ")", "\n", "self", ".", "moving_avg", ":", "deque", "=", "deque", "(", "maxlen", "=", "n_aggregate", ")", "\n", "self", ".", "buffer", ":", "deque", "=", "deque", "(", "maxlen", "=", "FETCH_SIZE", ")", "\n", "while", "len", "(", "self", ".", "bucket", ")", "<", "n_aggregate", ":", "\n", "            ", "self", ".", "push", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.judge.Smooth.fetch_to_buffer": [[28, 46], ["DB.read().json", "print", "DB.read", "datetime.datetime.timedelta", "conf.EVAL_MEASUREMENT.format", "dict", "judge.Smooth.buffer.append", "datetime.datetime.datetime.strptime", "datetime.datetime.timedelta", "zip"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.read"], ["", "", "def", "fetch_to_buffer", "(", "self", ")", "->", "int", ":", "\n", "        ", "r", "=", "DB", ".", "read", "(", "conf", ".", "EVAL_MEASUREMENT", ".", "format", "(", "self", ".", "pidx", ")", ",", "self", ".", "db_cursor", ",", "seconds", "=", "FETCH_SIZE", ")", ".", "json", "(", ")", "\n", "count", "=", "0", "\n", "last_time_str", "=", "''", "\n", "for", "statement", "in", "r", "[", "'results'", "]", ":", "\n", "            ", "for", "s", "in", "statement", "[", "'series'", "]", ":", "\n", "                ", "cols", "=", "s", "[", "'columns'", "]", "\n", "for", "v", "in", "s", "[", "'values'", "]", ":", "\n", "                    ", "v_dict", "=", "dict", "(", "zip", "(", "cols", ",", "v", ")", ")", "\n", "self", ".", "buffer", ".", "append", "(", "v_dict", ")", "\n", "last_time_str", "=", "v_dict", "[", "'time'", "]", "\n", "count", "+=", "1", "\n", "", "", "", "if", "last_time_str", "!=", "''", ":", "\n", "            ", "self", ".", "db_cursor", "=", "datetime", ".", "strptime", "(", "last_time_str", ",", "\n", "conf", ".", "INFLUX_RETURN_TIME_FORMAT", ")", "+", "timedelta", "(", "hours", "=", "9", "\n", ")", "+", "timedelta", "(", "seconds", "=", "1", ")", "\n", "", "print", "(", "f'\\t- fetched {count:,} datapoints'", ")", "\n", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.judge.Smooth.push": [[47, 54], ["judge.Smooth.bucket.append", "judge.Smooth.buffer.popleft", "judge.Smooth.fetch_to_buffer"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.judge.Smooth.fetch_to_buffer"], ["", "def", "push", "(", "self", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "try", ":", "\n", "                ", "self", ".", "bucket", ".", "append", "(", "self", ".", "buffer", ".", "popleft", "(", ")", ")", "\n", "break", "\n", "", "except", "IndexError", ":", "# when buffer is empty", "\n", "                ", "self", ".", "fetch_to_buffer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.judge.Smooth.check": [[55, 68], ["numpy.array", "numpy.delete", "judge.Smooth.moving_avg.append", "numpy.sum", "len", "numpy.array", "min", "numpy.delete.argsort", "datetime.datetime.datetime.strptime", "datetime.datetime.timedelta", "numpy.percentile", "numpy.percentile"], "methods", ["None"], ["", "", "", "def", "check", "(", "self", ",", "high", ":", "int", ",", "low", ":", "int", ",", "ratio", ":", "int", ")", ":", "\n", "        ", "dist_window", "=", "np", ".", "array", "(", "[", "v", "[", "'distance'", "]", "for", "v", "in", "self", ".", "bucket", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "dist_window", "=", "np", ".", "delete", "(", "dist_window", ",", "dist_window", ".", "argsort", "(", ")", "[", "-", "self", ".", "n_cutoff", ":", "]", ")", "\n", "self", ".", "moving_avg", ".", "append", "(", "np", ".", "sum", "(", "dist_window", ")", ")", "\n", "sus", "=", "0", "\n", "# write = True", "\n", "if", "len", "(", "self", ".", "moving_avg", ")", "==", "self", ".", "n_aggregate", ":", "\n", "            ", "avg_win", "=", "np", ".", "array", "(", "self", ".", "moving_avg", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "sus", "=", "min", "(", "np", ".", "percentile", "(", "avg_win", ",", "high", ")", "/", "np", ".", "percentile", "(", "avg_win", ",", "low", ")", "/", "ratio", ",", "1.0", ")", "\n", "# i_high = abs(avg_win - np.percentile(avg_win, high, interpolation='lower')).argmin()", "\n", "# i_low = abs(avg_win - np.percentile(avg_win, low, interpolation='lower')).argmin()", "\n", "# write = i_high > i_low", "\n", "", "return", "datetime", ".", "strptime", "(", "self", ".", "bucket", "[", "-", "1", "]", "[", "'time'", "]", ",", "'%Y-%m-%dT%H:%M:%SZ'", ")", "+", "timedelta", "(", "hours", "=", "9", ")", ",", "self", ".", "bucket", "[", "-", "1", "]", "[", "'attack'", "]", ",", "sus", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.judge.main": [[70, 120], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "configparser.ConfigParser", "configparser.ConfigParser.read", "int", "int", "int", "int", "int", "datetime.datetime", "DB.clear", "judge.Smooth", "conf.JUDGE_MEASUREMENT.format", "judge.Smooth.check", "ts_buffer.append", "att_buffer.append", "sus_buffer.append", "judge.Smooth.push", "print", "DB.write", "conf.JUDGE_MEASUREMENT.format", "db.datetime_to_nanosec"], "function", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.read", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.clear", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.judge.Smooth.check", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.judge.Smooth.push", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.write", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.datetime_to_nanosec"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Judge'", ")", "\n", "parser", ".", "add_argument", "(", "'--process'", ",", "type", "=", "int", ",", "help", "=", "'Process index (1-6)'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "config", "=", "configparser", ".", "ConfigParser", "(", ")", "\n", "config", ".", "read", "(", "'config.ini'", ")", "\n", "\n", "judge_conf", "=", "config", "[", "'judge'", "]", "\n", "n_aggregate", "=", "int", "(", "judge_conf", "[", "'Aggregate'", "]", ")", "\n", "n_cutoff", "=", "int", "(", "judge_conf", "[", "'Cutoff'", "]", ")", "\n", "\n", "high_percentile", "=", "int", "(", "judge_conf", "[", "'HighPercentile'", "]", ")", "\n", "low_percentile", "=", "int", "(", "judge_conf", "[", "'LowPercentile'", "]", ")", "\n", "alert_ratio", "=", "int", "(", "judge_conf", "[", "'AlertRatio'", "]", ")", "\n", "\n", "start", "=", "datetime", "(", "2015", ",", "12", ",", "28", ",", "10", ",", "1", ",", "30", ")", "\n", "pidx", "=", "args", ".", "process", "\n", "assert", "1", "<=", "pidx", "<=", "6", "\n", "\n", "DB", ".", "clear", "(", "conf", ".", "JUDGE_MEASUREMENT", ".", "format", "(", "pidx", ")", ")", "\n", "\n", "judge", "=", "Smooth", "(", "start", ",", "pidx", ",", "n_aggregate", ",", "n_cutoff", ")", "\n", "ts_buffer", "=", "[", "]", "\n", "att_buffer", "=", "[", "]", "\n", "sus_buffer", "=", "[", "]", "\n", "count", "=", "0", "\n", "while", "True", ":", "\n", "        ", "current", ",", "att", ",", "suspicious", "=", "judge", ".", "check", "(", "high_percentile", ",", "low_percentile", ",", "alert_ratio", ")", "\n", "if", "current", ".", "second", "==", "0", "and", "current", ".", "minute", "==", "0", ":", "\n", "            ", "print", "(", "f'* {current}'", ")", "\n", "", "ts_buffer", ".", "append", "(", "current", ")", "\n", "att_buffer", ".", "append", "(", "att", ")", "\n", "sus_buffer", ".", "append", "(", "suspicious", ")", "\n", "count", "+=", "1", "\n", "if", "count", ">=", "FETCH_SIZE", ":", "\n", "            ", "DB", ".", "write", "(", "\n", "conf", ".", "JUDGE_MEASUREMENT", ".", "format", "(", "pidx", ")", ",", "\n", "{", "'attack'", ":", "att_buffer", "}", ",", "\n", "{", "\n", "'suspicious'", ":", "sus_buffer", ",", "\n", "'mark'", ":", "[", "1.0", "]", "*", "count", "\n", "}", ",", "\n", "[", "datetime_to_nanosec", "(", "ts", ")", "for", "ts", "in", "ts_buffer", "]", "\n", ")", "\n", "count", "=", "0", "\n", "ts_buffer", "=", "[", "]", "\n", "att_buffer", "=", "[", "]", "\n", "sus_buffer", "=", "[", "]", "\n", "", "judge", ".", "push", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.extract_anomaly_probs.dig": [[12, 45], ["datetime.datetime", "print", "buffer[].keys", "range", "len", "DB.read().json", "set", "range", "range", "datetime.datetime.strptime", "datetime.timedelta", "range", "DB.read", "len", "conf.JUDGE_MEASUREMENT.format", "str", "datetime.datetime.strptime", "datetime.timedelta"], "function", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.read"], ["def", "dig", "(", ")", "->", "Dict", ":", "\n", "    ", "db_cursor", "=", "datetime", "(", "2015", ",", "12", ",", "28", ",", "10", ",", "1", ",", "30", ")", "\n", "aggregate", "=", "{", "}", "\n", "while", "True", ":", "\n", "        ", "try", ":", "\n", "            ", "fetched", "=", "[", "\n", "DB", ".", "read", "(", "conf", ".", "JUDGE_MEASUREMENT", ".", "format", "(", "pidx", "+", "1", ")", ",", "\n", "db_cursor", ",", "\n", "seconds", "=", "FETCH_SIZE", ")", ".", "json", "(", ")", "for", "pidx", "in", "range", "(", "5", ")", "\n", "]", "\n", "count", "=", "0", "\n", "last_time_str", "=", "''", "\n", "buffer", ":", "List", "[", "Dict", "]", "=", "[", "{", "}", "for", "_", "in", "range", "(", "5", ")", "]", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "                ", "for", "statement", "in", "fetched", "[", "i", "]", "[", "'results'", "]", ":", "\n", "                    ", "for", "s", "in", "statement", "[", "'series'", "]", ":", "\n", "                        ", "for", "v", "in", "s", "[", "'values'", "]", ":", "\n", "                            ", "last_time_str", "=", "str", "(", "\n", "datetime", ".", "strptime", "(", "v", "[", "0", "]", ",", "\n", "conf", ".", "INFLUX_RETURN_TIME_FORMAT", ")", "+", "timedelta", "(", "hours", "=", "9", ")", "\n", ")", "\n", "buffer", "[", "i", "]", "[", "last_time_str", "]", "=", "v", "[", "-", "1", "]", "\n", "count", "+=", "1", "\n", "", "", "", "", "if", "last_time_str", "!=", "''", ":", "\n", "                ", "db_cursor", "=", "datetime", ".", "strptime", "(", "last_time_str", ",", "conf", ".", "DATETIME_BASIC_TIME_FORMAT", ")", "+", "timedelta", "(", "seconds", "=", "1", ")", "\n", "", "", "except", "Exception", ":", "\n", "            ", "break", "\n", "", "print", "(", "db_cursor", ")", "\n", "assert", "len", "(", "set", "(", "[", "len", "(", "b", ")", "for", "b", "in", "buffer", "]", ")", ")", "==", "1", "# the lengths of fetched row from all processes are the same", "\n", "dates", "=", "buffer", "[", "0", "]", ".", "keys", "(", ")", "\n", "for", "d", "in", "dates", ":", "\n", "            ", "aggregate", "[", "d", "]", "=", "[", "buffer", "[", "i", "]", "[", "d", "]", "for", "i", "in", "range", "(", "5", ")", "]", "\n", "", "", "return", "aggregate", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.extract_anomaly_probs.main": [[47, 53], ["extract_anomaly_probs.dig", "print", "open", "pickle.dump", "print", "len"], "function", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.extract_anomaly_probs.dig"], ["", "def", "main", "(", ")", ":", "\n", "    ", "anomaly_probs", "=", "dig", "(", ")", "\n", "print", "(", "f'# of extracted timestamps: {len(anomaly_probs)}'", ")", "\n", "with", "open", "(", "conf", ".", "ANOMALY_PROBS_PICKLE", ",", "'wb'", ")", "as", "fh", ":", "\n", "        ", "pickle", ".", "dump", "(", "anomaly_probs", ",", "fh", ",", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "print", "(", "'SUCCESS: pickled anomaly probs'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.swat_dataset.SWaTDataset.__init__": [[10, 13], ["open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.load"], ["    ", "def", "__init__", "(", "self", ",", "pickle_jar", ":", "str", ")", ":", "\n", "        ", "with", "open", "(", "pickle_jar", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "picks", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.swat_dataset.SWaTDataset.__len__": [[14, 16], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "picks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.swat_dataset.SWaTDataset.__getitem__": [[17, 25], ["[].strftime", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "{", "\n", "'ts'", ":", "self", ".", "picks", "[", "idx", "]", "[", "0", "]", ".", "strftime", "(", "conf", ".", "SWaT_TIME_FORMAT", ")", ",", "\n", "'given'", ":", "torch", ".", "from_numpy", "(", "self", ".", "picks", "[", "idx", "]", "[", "1", "]", ")", ",", "\n", "'predict'", ":", "torch", ".", "from_numpy", "(", "self", ".", "picks", "[", "idx", "]", "[", "2", "]", ")", ",", "\n", "'answer'", ":", "torch", ".", "from_numpy", "(", "self", ".", "picks", "[", "idx", "]", "[", "3", "]", ")", ",", "\n", "'attack'", ":", "torch", ".", "tensor", "(", "1", "if", "self", ".", "picks", "[", "idx", "]", "[", "4", "]", "else", "0", ",", "\n", "dtype", "=", "torch", ".", "uint8", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.Encoder.__init__": [[9, 16], ["torch.nn.Module.__init__", "torch.nn.LSTMCell", "torch.nn.LSTMCell", "torch.nn.LSTMCell", "torch.nn.LSTMCell", "torch.nn.LSTMCell", "torch.nn.LSTMCell", "torch.nn.LSTMCell", "torch.nn.LSTMCell"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_inputs", ",", "n_hiddens", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_hiddens", "=", "n_hiddens", "\n", "self", ".", "lstm1", "=", "nn", ".", "LSTMCell", "(", "input_size", "=", "n_inputs", ",", "hidden_size", "=", "n_hiddens", ")", "\n", "self", ".", "lstm2", "=", "nn", ".", "LSTMCell", "(", "input_size", "=", "n_hiddens", ",", "hidden_size", "=", "n_hiddens", ")", "\n", "self", ".", "lstm3", "=", "nn", ".", "LSTMCell", "(", "input_size", "=", "n_hiddens", ",", "hidden_size", "=", "n_hiddens", ")", "\n", "self", ".", "lstm4", "=", "nn", ".", "LSTMCell", "(", "input_size", "=", "n_hiddens", ",", "hidden_size", "=", "n_hiddens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.Encoder.init_hidden_and_cell_state": [[17, 27], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "init_hidden_and_cell_state", "(", "self", ",", "batch_size", ",", "dev", ")", ":", "\n", "        ", "return", "(", "\n", "torch", ".", "zeros", "(", "(", "batch_size", ",", "\n", "self", ".", "n_hiddens", ")", ",", "\n", "dtype", "=", "torch", ".", "float", ",", "\n", "device", "=", "dev", ")", ",", "\n", "torch", ".", "zeros", "(", "(", "batch_size", ",", "\n", "self", ".", "n_hiddens", ")", ",", "\n", "dtype", "=", "torch", ".", "float", ",", "\n", "device", "=", "dev", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.Encoder.forward": [[29, 47], ["x.transpose.transpose.size", "torch.device", "torch.device", "torch.device", "torch.device", "model.Encoder.init_hidden_and_cell_state", "model.Encoder.init_hidden_and_cell_state", "model.Encoder.init_hidden_and_cell_state", "model.Encoder.init_hidden_and_cell_state", "x.transpose.transpose.view", "x.transpose.transpose.transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Encoder.lstm1", "model.Encoder.lstm2", "model.Encoder.lstm3", "model.Encoder.lstm4", "encoder_outs.append", "x.transpose.transpose.get_device", "hc4[].unsqueeze"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.Encoder.init_hidden_and_cell_state", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.Encoder.init_hidden_and_cell_state", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.Encoder.init_hidden_and_cell_state", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.Encoder.init_hidden_and_cell_state"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "x_gpu", "=", "torch", ".", "device", "(", "'cuda:{}'", ".", "format", "(", "x", ".", "get_device", "(", ")", ")", ")", "\n", "hc1", "=", "self", ".", "init_hidden_and_cell_state", "(", "batch_size", ",", "x_gpu", ")", "\n", "hc2", "=", "self", ".", "init_hidden_and_cell_state", "(", "batch_size", ",", "x_gpu", ")", "\n", "hc3", "=", "self", ".", "init_hidden_and_cell_state", "(", "batch_size", ",", "x_gpu", ")", "\n", "hc4", "=", "self", ".", "init_hidden_and_cell_state", "(", "batch_size", ",", "x_gpu", ")", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "conf", ".", "WINDOW_GIVEN", ",", "-", "1", ")", "\n", "x", "=", "x", ".", "transpose", "(", "0", ",", "1", ")", "# (batch, seq, params) -> (seq, batch, params)", "\n", "encoder_outs", "=", "[", "]", "\n", "for", "point", "in", "x", ":", "\n", "            ", "hc1", "=", "self", ".", "lstm1", "(", "point", ",", "hc1", ")", "\n", "hc2", "=", "self", ".", "lstm2", "(", "hc1", "[", "0", "]", ",", "hc2", ")", "\n", "hc3", "=", "self", ".", "lstm3", "(", "hc2", "[", "0", "]", ",", "hc3", ")", "\n", "hc4", "=", "self", ".", "lstm4", "(", "hc3", "[", "0", "]", ",", "hc4", ")", "\n", "encoder_outs", ".", "append", "(", "hc4", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ")", "\n", "", "out", "=", "torch", ".", "cat", "(", "encoder_outs", ",", "dim", "=", "1", ")", "# (B, seq, hiddens)", "\n", "return", "out", ",", "hc4", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.AttentionDecoder.__init__": [[50, 58], ["torch.nn.Module.__init__", "torch.nn.LSTMCell", "torch.nn.LSTMCell", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_hiddens", ",", "n_features", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_hiddens", "=", "n_hiddens", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTMCell", "(", "input_size", "=", "n_hiddens", ",", "hidden_size", "=", "n_hiddens", ")", "\n", "self", ".", "extend", "=", "nn", ".", "Linear", "(", "n_features", ",", "n_hiddens", ")", "\n", "self", ".", "attn", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "n_hiddens", "*", "2", ",", "conf", ".", "WINDOW_GIVEN", ")", ",", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", ")", "\n", "self", ".", "attn_combine", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "n_hiddens", "*", "2", ",", "n_hiddens", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "n_hiddens", ",", "n_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.AttentionDecoder.init_cell_state": [[59, 61], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "init_cell_state", "(", "self", ",", "batch_size", ",", "dev", ")", ":", "\n", "        ", "return", "torch", ".", "zeros", "(", "(", "batch_size", ",", "self", ".", "n_hiddens", ")", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "dev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.AttentionDecoder.forward": [[62, 78], ["predict.transpose.transpose.size", "torch.device", "torch.device", "torch.device", "torch.device", "predict.transpose.transpose.transpose", "model.AttentionDecoder.init_cell_state", "range", "model.AttentionDecoder.out", "model.AttentionDecoder.extend", "model.AttentionDecoder.attn", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "model.AttentionDecoder.attn_combine", "model.AttentionDecoder.lstm", "predict.transpose.transpose.get_device", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.AttentionDecoder.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.bmm.squeeze", "torch.bmm.squeeze"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.AttentionDecoder.init_cell_state"], ["", "def", "forward", "(", "self", ",", "encoder_outs", ",", "context", ",", "predict", ")", ":", "\n", "        ", "batch_size", "=", "predict", ".", "size", "(", "0", ")", "\n", "x_gpu", "=", "torch", ".", "device", "(", "'cuda:{}'", ".", "format", "(", "predict", ".", "get_device", "(", ")", ")", ")", "\n", "predict", "=", "predict", ".", "transpose", "(", "0", ",", "1", ")", "# (batch, seq, params) -> (seq, batch, params)", "\n", "h_i", "=", "context", "\n", "c_i", "=", "self", ".", "init_cell_state", "(", "batch_size", ",", "x_gpu", ")", "\n", "for", "idx", "in", "range", "(", "conf", ".", "WINDOW_PREDICT", ")", ":", "\n", "            ", "inp", "=", "self", ".", "extend", "(", "predict", "[", "idx", "]", ")", "\n", "# input:(B, params -> hiddens), c_i:(B, hiddens) => attn_weights:(B, window-size given)", "\n", "attn_weights", "=", "self", ".", "attn", "(", "torch", ".", "cat", "(", "(", "inp", ",", "context", ")", ",", "dim", "=", "1", ")", ")", "\n", "# BMM of attn_weights (B, 1, windows given) and encoding outputs (B, seq, hiddens) -> (B, 1, hiddens)", "\n", "attn_applied", "=", "torch", ".", "bmm", "(", "attn_weights", ".", "unsqueeze", "(", "1", ")", ",", "encoder_outs", ")", "\n", "attn_combine", "=", "self", ".", "attn_combine", "(", "torch", ".", "cat", "(", "(", "inp", ",", "attn_applied", ".", "squeeze", "(", "1", ")", ")", ",", "dim", "=", "1", ")", ")", "\n", "h_i", ",", "c_i", "=", "self", ".", "lstm", "(", "attn_combine", ",", "(", "h_i", ",", "c_i", ")", ")", "\n", "# h_i : (B, hiddens), self.out : (B, hiddens) -> (B, # of features)", "\n", "", "return", "self", ".", "out", "(", "h_i", ")", "# (B, n_outs, # of features)", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.model.main": [[80, 83], ["print", "print", "model.Encoder", "model.AttentionDecoder"], "function", ["None"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "Encoder", "(", "10", ",", "conf", ".", "N_HIDDEN_CELLS", ")", ")", "\n", "print", "(", "AttentionDecoder", "(", "conf", ".", "N_HIDDEN_CELLS", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.test_dataset.test_parsed_dataset": [[8, 28], ["range", "swat_dataset.SWaTDataset", "enumerate", "torch.utils.data.DataLoader", "type", "given.size", "torch.Size", "batch[].size", "torch.Size", "batch[].size", "torch.Size", "[].item", "len", "len", "len", "given.numpy", "given.numpy"], "function", ["None"], ["def", "test_parsed_dataset", "(", ")", ":", "\n", "    ", "BATCH_SIZE", "=", "5", "\n", "N_SAMPLES", "=", "20", "\n", "for", "datatype", "in", "[", "'normal'", ",", "'attack'", "]", ":", "\n", "        ", "for", "pidx", "in", "range", "(", "conf", ".", "N_PROCESS", ")", ":", "\n", "            ", "dataset", "=", "SWaTDataset", "(", "'dat/{}-P{}.dat'", ".", "format", "(", "datatype", ",", "pidx", "+", "1", ")", ")", "\n", "for", "idx", ",", "batch", "in", "enumerate", "(", "DataLoader", "(", "dataset", ",", "batch_size", "=", "BATCH_SIZE", ",", "shuffle", "=", "True", ")", ")", ":", "\n", "                ", "assert", "type", "(", "batch", "[", "'ts'", "]", "[", "0", "]", ")", "==", "str", "\n", "\n", "given", "=", "batch", "[", "'given'", "]", "\n", "assert", "given", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "BATCH_SIZE", ",", "conf", ".", "WINDOW_GIVEN", ",", "len", "(", "conf", ".", "P_SRCS", "[", "pidx", "]", ")", "]", ")", "\n", "if", "datatype", "==", "'normal'", ":", "\n", "                    ", "assert", "not", "(", "given", ".", "numpy", "(", ")", ">", "1.0", ")", ".", "any", "(", ")", "\n", "assert", "not", "(", "given", ".", "numpy", "(", ")", "<", "0.0", ")", ".", "any", "(", ")", "\n", "\n", "", "assert", "batch", "[", "'predict'", "]", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "BATCH_SIZE", ",", "conf", ".", "WINDOW_PREDICT", ",", "len", "(", "conf", ".", "P_SRCS", "[", "pidx", "]", ")", "]", ")", "\n", "assert", "batch", "[", "'answer'", "]", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "BATCH_SIZE", ",", "len", "(", "conf", ".", "P_SRCS", "[", "pidx", "]", ")", "]", ")", "\n", "assert", "batch", "[", "'attack'", "]", "[", "0", "]", ".", "item", "(", ")", "in", "[", "0", ",", "1", "]", "\n", "if", "idx", ">=", "N_SAMPLES", ":", "\n", "                    ", "break", "\n", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.measure_extractor.main": [[10, 31], ["open", "print", "open.close", "open", "pickle.load", "print", "open", "csv.reader", "next", "str", "print", "datetime.datetime.strptime", "len", "line[].strip"], "function", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.network.Network.load"], ["def", "main", "(", ")", ":", "\n", "    ", "with", "open", "(", "conf", ".", "ANOMALY_PROBS_PICKLE", ",", "'rb'", ")", "as", "fh", ":", "\n", "        ", "anomaly_probs", "=", "pickle", ".", "load", "(", "fh", ")", "\n", "print", "(", "f'{len(anomaly_probs):,} rows loaded'", ")", "\n", "\n", "", "detection", "=", "open", "(", "'dat/detection'", ",", "'w'", ")", "\n", "\n", "with", "open", "(", "'dat/SWaT_Attack.csv'", ")", "as", "fh", ":", "\n", "        ", "reader", "=", "csv", ".", "reader", "(", "fh", ",", "delimiter", "=", "','", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "next", "(", "reader", ")", "# remove header", "\n", "\n", "lines", "=", "0", "\n", "for", "line", "in", "reader", ":", "\n", "            ", "d", "=", "str", "(", "datetime", ".", "strptime", "(", "line", "[", "0", "]", ".", "strip", "(", ")", ",", "conf", ".", "SWaT_TIME_FORMAT", ")", ")", "\n", "measure", "=", "[", "'1'", "if", "p", ">", "THRESHOLD", "else", "'0'", "for", "p", "in", "anomaly_probs", "[", "d", "]", "]", "if", "d", "in", "anomaly_probs", "else", "[", "'0'", "]", "*", "5", "\n", "measure", "=", "[", "'1'", "if", "'1'", "in", "measure", "else", "'0'", "]", "+", "measure", "\n", "print", "(", "','", ".", "join", "(", "measure", ")", ",", "file", "=", "detection", ")", "\n", "lines", "+=", "1", "\n", "", "", "print", "(", "f'{lines:,} lines out'", ")", "\n", "\n", "detection", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.__init__": [[12, 15], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "db_name", ":", "str", ")", ":", "\n", "        ", "self", ".", "url", "=", "'http://localhost:8086'", "\n", "self", ".", "db_name", "=", "db_name", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.write": [[16, 47], ["zip", "db.InfluxDB.equal_pair", "db.InfluxDB.write_request", "len", "len", "print", "print", "tags.values", "fields.values", "db.InfluxDB.equal_pair", "len", "db.InfluxDB.write_request", "set", "len", "len", "len", "len", "len", "tag_and_fields.values"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.equal_pair", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.write_request", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.equal_pair", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.write_request"], ["", "def", "write", "(", "self", ",", "measurement", ":", "str", ",", "tags", ":", "Dict", ",", "fields", ":", "Dict", ",", "timestamp", ":", "List", ")", "->", "None", ":", "\n", "        ", "assert", "measurement", "!=", "''", "\n", "assert", "fields", "and", "len", "(", "fields", ")", ">", "0", "\n", "\n", "tag_and_fields", "=", "{", "**", "tags", ",", "**", "fields", "}", "\n", "try", ":", "\n", "            ", "assert", "len", "(", "set", "(", "[", "len", "(", "x", ")", "for", "x", "in", "tag_and_fields", ".", "values", "(", ")", "]", "+", "[", "len", "(", "timestamp", ")", "]", ")", ")", "==", "1", "\n", "", "except", "TypeError", ":", "\n", "            ", "print", "(", "f'[FAILED] FIELDS: {fields}'", ")", "\n", "print", "(", "f'[FAILED] TIMESTAMPS: {timestamp}'", ")", "\n", "raise", "\n", "\n", "", "msg", "=", "''", "\n", "lines", "=", "0", "\n", "for", "x", "in", "zip", "(", "*", "(", "tags", ".", "values", "(", ")", ")", ",", "*", "(", "fields", ".", "values", "(", ")", ")", ",", "timestamp", ")", ":", "\n", "            ", "msg", "+=", "measurement", "\n", "if", "tags", ":", "\n", "                ", "msg", "+=", "','", "\n", "msg", "+=", "self", ".", "equal_pair", "(", "x", ",", "tags", ",", "0", ",", "len", "(", "tags", ")", ")", "\n", "", "msg", "+=", "' '", "\n", "msg", "+=", "self", ".", "equal_pair", "(", "x", ",", "fields", ",", "len", "(", "tags", ")", ",", "len", "(", "tags", ")", "+", "len", "(", "fields", ")", ")", "\n", "if", "x", "[", "-", "1", "]", "is", "not", "None", ":", "\n", "                ", "msg", "+=", "' {}'", ".", "format", "(", "x", "[", "-", "1", "]", ")", "\n", "", "msg", "+=", "'\\n'", "\n", "lines", "+=", "1", "\n", "if", "lines", ">=", "InfluxDB", ".", "BUFFER_SIZE", ":", "\n", "                ", "self", ".", "write_request", "(", "msg", ")", "\n", "lines", "=", "0", "\n", "msg", "=", "''", "\n", "", "", "if", "lines", ">", "0", ":", "\n", "            ", "self", ".", "write_request", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.write_request": [[48, 55], ["requests.post", "requests.post.raise_for_status", "print"], "methods", ["None"], ["", "", "def", "write_request", "(", "self", ",", "msg", ")", ":", "\n", "        ", "r", "=", "requests", ".", "post", "(", "'{}/write?db={}'", ".", "format", "(", "self", ".", "url", ",", "self", ".", "db_name", ")", ",", "msg", ")", "\n", "try", ":", "\n", "            ", "r", ".", "raise_for_status", "(", ")", "\n", "", "except", "(", "TypeError", ",", "AssertionError", ")", ":", "\n", "            ", "print", "(", "f'[FAILED] message: {msg}'", ")", "\n", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.equal_pair": [[56, 59], ["zip", "keys.keys"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "equal_pair", "(", "x", ",", "keys", ",", "L", ",", "R", ")", ":", "\n", "        ", "return", "','", ".", "join", "(", "[", "'{}={}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "zip", "(", "keys", ".", "keys", "(", ")", ",", "x", "[", "L", ":", "R", "]", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.clear": [[60, 64], ["requests.post", "requests.post.raise_for_status"], "methods", ["None"], ["", "def", "clear", "(", "self", ",", "measurement", ":", "str", ")", ":", "\n", "        ", "msg", "=", "{", "'q'", ":", "'DROP SERIES FROM {}'", ".", "format", "(", "measurement", ")", "}", "\n", "r", "=", "requests", ".", "post", "(", "'{}/query?db={}'", ".", "format", "(", "self", ".", "url", ",", "self", ".", "db_name", ")", ",", "msg", ")", "\n", "r", ".", "raise_for_status", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.InfluxDB.read": [[65, 77], ["requests.post", "requests.post.raise_for_status", "db.datetime_to_nanosec", "db.datetime_to_nanosec", "datetime.datetime.timedelta"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.datetime_to_nanosec", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.datetime_to_nanosec"], ["", "def", "read", "(", "self", ",", "measurement", ":", "str", ",", "start", ":", "datetime", ",", "seconds", ":", "int", ")", ":", "\n", "        ", "query", "=", "{", "\n", "'q'", ":", "\n", "'SELECT * FROM {} WHERE time >= {} and time < {}'", ".", "format", "(", "\n", "measurement", ",", "\n", "datetime_to_nanosec", "(", "start", ")", ",", "\n", "datetime_to_nanosec", "(", "start", "+", "timedelta", "(", "seconds", "=", "seconds", ")", ")", "\n", ")", "\n", "}", "\n", "r", "=", "requests", ".", "post", "(", "'{}/query?db={}'", ".", "format", "(", "self", ".", "url", ",", "self", ".", "db_name", ")", ",", "query", ")", "\n", "r", ".", "raise_for_status", "(", ")", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.swat_time_to_nanosec": [[79, 81], ["int", "datetime.datetime.strptime().timestamp", "datetime.datetime.strptime"], "function", ["None"], ["", "", "def", "swat_time_to_nanosec", "(", "t", ":", "str", ")", "->", "int", ":", "\n", "    ", "return", "int", "(", "datetime", ".", "strptime", "(", "t", ",", "conf", ".", "SWaT_TIME_FORMAT", ")", ".", "timestamp", "(", ")", "*", "1_000_000_000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.None.db.datetime_to_nanosec": [[83, 85], ["int", "t.timestamp"], "function", ["None"], ["", "def", "datetime_to_nanosec", "(", "t", ":", "datetime", ")", "->", "int", ":", "\n", "    ", "return", "int", "(", "t", ".", "timestamp", "(", ")", "*", "1_000_000_000", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.__init__": [[5, 9], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "first", ",", "last", ",", "name", ")", ":", "\n", "        ", "self", ".", "_first_timestamp", "=", "first", "\n", "self", ".", "_last_timestamp", "=", "last", "\n", "self", ".", "_name", "=", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.set_time": [[10, 13], ["None"], "methods", ["None"], ["", "def", "set_time", "(", "self", ",", "first", ",", "last", ")", ":", "\n", "        ", "self", ".", "_first_timestamp", "=", "first", "\n", "self", ".", "_last_timestamp", "=", "last", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time": [[14, 16], ["None"], "methods", ["None"], ["", "def", "get_time", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_first_timestamp", ",", "self", ".", "_last_timestamp", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.set_name": [[17, 19], ["None"], "methods", ["None"], ["", "def", "set_name", "(", "self", ",", "str", ")", ":", "\n", "        ", "self", ".", "_name", "=", "str", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_name": [[20, 22], ["None"], "methods", ["None"], ["", "def", "get_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_name", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.__eq__": [[23, 25], ["other.get_time", "other.get_time"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time"], ["", "def", "__eq__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "self", ".", "_first_timestamp", "==", "other", ".", "get_time", "(", ")", "[", "0", "]", "and", "self", ".", "_last_timestamp", "==", "other", ".", "get_time", "(", ")", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.__init__": [[28, 30], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.unixtime_to_string": [[31, 33], ["datetime.datetime.fromtimestamp().strftime", "datetime.datetime.fromtimestamp"], "methods", ["None"], ["", "def", "unixtime_to_string", "(", "self", ",", "unixtime", ")", ":", "\n", "        ", "return", "datetime", ".", "datetime", ".", "fromtimestamp", "(", "unixtime", ")", ".", "strftime", "(", "'%Y-%m-%d %I:%M:%S %p'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.string_to_unixtime": [[34, 36], ["time.mktime", "datetime.datetime.strptime().timetuple", "datetime.datetime.strptime"], "methods", ["None"], ["", "def", "string_to_unixtime", "(", "self", ",", "str", ")", ":", "\n", "        ", "return", "time", ".", "mktime", "(", "datetime", ".", "datetime", ".", "strptime", "(", "str", ",", "\" %d/%m/%Y %I:%M:%S %p\"", ")", ".", "timetuple", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.index_to_string": [[37, 42], ["Evaluation.TimeConvertor.unixtime_to_string", "Evaluation.TimeConvertor.unixtime_to_string"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.unixtime_to_string", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.unixtime_to_string"], ["", "def", "index_to_string", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "idx", ">=", "298837", ":", "\n", "            ", "return", "self", ".", "unixtime_to_string", "(", "idx", "+", "1451264400", "+", "81", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "unixtime_to_string", "(", "idx", "+", "1451264400", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation.__init__": [[45, 52], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_prediction", "=", "[", "]", "#list", "\n", "self", ".", "_ground_truth", "=", "[", "]", "#list", "\n", "\n", "self", ".", "_set_prediction", "=", "False", "\n", "self", ".", "_set_ground_truth", "=", "False", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation.set_prediction": [[53, 56], ["Evaluation.Evaluation._head_tail_index"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._head_tail_index"], ["", "def", "set_prediction", "(", "self", ",", "prediction", ")", ":", "\n", "        ", "self", ".", "_prediction", "=", "self", ".", "_head_tail_index", "(", "prediction", ")", "\n", "self", ".", "_set_prediction", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._head_tail_index": [[57, 75], ["range", "len", "return_list.append", "return_list.append", "len", "len"], "methods", ["None"], ["", "def", "_head_tail_index", "(", "self", ",", "prediction", ")", ":", "\n", "        ", "return_list", "=", "[", "]", "\n", "start_idx", "=", "-", "1", "\n", "\n", "if", "prediction", "[", "0", "]", "==", "1", ":", "\n", "            ", "start_idx", "=", "0", "\n", "\n", "", "for", "idx", "in", "range", "(", "1", ",", "len", "(", "prediction", ")", ")", ":", "\n", "            ", "if", "prediction", "[", "idx", "]", "==", "1", "and", "prediction", "[", "idx", "-", "1", "]", "==", "0", ":", "\n", "                ", "start_idx", "=", "idx", "\n", "\n", "", "if", "prediction", "[", "idx", "]", "==", "0", "and", "prediction", "[", "idx", "-", "1", "]", "==", "1", ":", "\n", "                ", "return_list", ".", "append", "(", "[", "start_idx", ",", "idx", "-", "1", "]", ")", "\n", "\n", "", "", "if", "prediction", "[", "len", "(", "prediction", ")", "-", "1", "]", "==", "1", ":", "\n", "            ", "return_list", ".", "append", "(", "[", "start_idx", ",", "len", "(", "prediction", ")", "-", "1", "]", ")", "\n", "\n", "", "return", "return_list", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation.get_n_predictions": [[77, 79], ["len"], "methods", ["None"], ["", "def", "get_n_predictions", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_prediction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation.set_ground_truth": [[80, 86], ["Evaluation.Evaluation._ground_truth.append", "Evaluation.Single_Period", "str"], "methods", ["None"], ["", "def", "set_ground_truth", "(", "self", ",", "ground_truth_list", ")", ":", "\n", "        ", "self", ".", "_ground_truth", "=", "[", "]", "\n", "for", "single_answer", "in", "ground_truth_list", ":", "\n", "            ", "self", ".", "_ground_truth", ".", "append", "(", "Single_Period", "(", "single_answer", "[", "0", "]", ",", "single_answer", "[", "1", "]", ",", "str", "(", "single_answer", "[", "2", "]", ")", ")", ")", "\n", "\n", "", "self", ".", "_set_ground_truth", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._extend_single_truth": [[88, 103], ["range", "len", "single_list[].set_time", "max", "min", "len", "single_list[].get_time", "single_list[].get_time", "single_list[].get_time", "single_list[].get_time", "single_list[].get_time", "single_list[].get_time"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.set_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time"], ["", "def", "_extend_single_truth", "(", "self", ",", "single_list", ",", "extend_head", ",", "extend_tail", ")", ":", "\n", "        ", "for", "idx", "in", "range", "(", "len", "(", "single_list", ")", ")", ":", "\n", "            ", "if", "idx", "!=", "0", ":", "\n", "                ", "first", "=", "max", "(", "single_list", "[", "idx", "]", ".", "get_time", "(", ")", "[", "0", "]", "-", "extend_head", ",", "single_list", "[", "idx", "-", "1", "]", ".", "get_time", "(", ")", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "first", "=", "single_list", "[", "idx", "]", ".", "get_time", "(", ")", "[", "0", "]", "-", "extend_head", "\n", "\n", "", "if", "first", "<", "0", ":", "\n", "                ", "first", "=", "0", "\n", "\n", "", "if", "idx", "!=", "len", "(", "single_list", ")", "-", "1", ":", "\n", "                ", "last", "=", "min", "(", "single_list", "[", "idx", "]", ".", "get_time", "(", ")", "[", "1", "]", "+", "extend_tail", ",", "single_list", "[", "idx", "+", "1", "]", ".", "get_time", "(", ")", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "last", "=", "single_list", "[", "idx", "]", ".", "get_time", "(", ")", "[", "1", "]", "+", "extend_tail", "\n", "", "single_list", "[", "idx", "]", ".", "set_time", "(", "first", ",", "last", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation.extend_ground_truth": [[105, 107], ["Evaluation.Evaluation._extend_single_truth"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._extend_single_truth"], ["", "", "def", "extend_ground_truth", "(", "self", ",", "extend_head", ",", "extend_tail", ")", ":", "\n", "        ", "self", ".", "_extend_single_truth", "(", "self", ".", "_ground_truth", ",", "extend_head", ",", "extend_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._is_intersection": [[109, 114], ["None"], "methods", ["None"], ["", "def", "_is_intersection", "(", "self", ",", "prediction_term", ",", "attack_term", ")", ":", "\n", "        ", "if", "prediction_term", "[", "1", "]", ">=", "attack_term", "[", "0", "]", "and", "attack_term", "[", "1", "]", ">=", "prediction_term", "[", "0", "]", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._find_hit_lists": [[116, 135], ["range", "range", "range", "len", "hit_ground_truth.append", "len", "hit_prediction.append", "len", "range", "len", "Evaluation.Evaluation._intersect_len", "float"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._intersect_len"], ["", "", "def", "_find_hit_lists", "(", "self", ",", "intersect_ratio", ",", "multi_hit", "=", "True", ")", ":", "\n", "        ", "hit_ground_truth", "=", "[", "]", "\n", "hit_prediction", "=", "[", "]", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "_ground_truth", ")", ")", ":", "\n", "            ", "hit_ground_truth", ".", "append", "(", "False", ")", "\n", "", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "_prediction", ")", ")", ":", "\n", "            ", "hit_prediction", ".", "append", "(", "False", ")", "\n", "\n", "", "for", "idx_gt", "in", "range", "(", "len", "(", "self", ".", "_ground_truth", ")", ")", ":", "\n", "            ", "for", "idx_pr", "in", "range", "(", "len", "(", "self", ".", "_prediction", ")", ")", ":", "\n", "                ", "length", "=", "self", ".", "_intersect_len", "(", "self", ".", "_ground_truth", "[", "idx_gt", "]", ",", "self", ".", "_prediction", "[", "idx_pr", "]", ")", "\n", "term_len", "=", "self", ".", "_prediction", "[", "idx_pr", "]", "[", "1", "]", "-", "self", ".", "_prediction", "[", "idx_pr", "]", "[", "0", "]", "+", "1", "\n", "if", "float", "(", "length", "/", "term_len", ")", ">=", "intersect_ratio", ":", "\n", "                    ", "if", "multi_hit", "==", "True", "or", "hit_prediction", "[", "idx_pr", "]", "==", "False", ":", "\n", "                        ", "hit_ground_truth", "[", "idx_gt", "]", "=", "True", "\n", "", "hit_prediction", "[", "idx_pr", "]", "=", "True", "\n", "\n", "", "", "", "return", "hit_prediction", ",", "hit_ground_truth", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation.detected_attacks": [[137, 171], ["range", "range", "range", "range", "print", "print", "print", "print", "len", "hit_ground_truth.append", "len", "hit_prediction.append", "len", "range", "len", "len", "Evaluation.Evaluation._intersect_len", "str", "str", "Evaluation.Evaluation._ground_truth[].get_time", "float", "Evaluation.Evaluation._ground_truth[].get_name", "Evaluation.Evaluation._ground_truth[].get_name", "len", "round", "str", "float", "len"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._intersect_len", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_name", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_name"], ["", "def", "detected_attacks", "(", "self", ",", "intersect_ratio", ",", "multi_hit", "=", "True", ")", ":", "\n", "        ", "assert", "(", "self", ".", "_set_ground_truth", "==", "True", "and", "self", ".", "_set_prediction", "==", "True", ")", "\n", "\n", "hit_ground_truth", "=", "[", "]", "\n", "hit_prediction", "=", "[", "]", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "_ground_truth", ")", ")", ":", "\n", "            ", "hit_ground_truth", ".", "append", "(", "False", ")", "\n", "", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "_prediction", ")", ")", ":", "\n", "            ", "hit_prediction", ".", "append", "(", "False", ")", "\n", "\n", "", "for", "idx_gt", "in", "range", "(", "len", "(", "self", ".", "_ground_truth", ")", ")", ":", "\n", "            ", "for", "idx_pr", "in", "range", "(", "len", "(", "self", ".", "_prediction", ")", ")", ":", "\n", "                ", "length", "=", "self", ".", "_intersect_len", "(", "self", ".", "_ground_truth", "[", "idx_gt", "]", ".", "get_time", "(", ")", ",", "self", ".", "_prediction", "[", "idx_pr", "]", ")", "\n", "term_len", "=", "self", ".", "_prediction", "[", "idx_pr", "]", "[", "1", "]", "-", "self", ".", "_prediction", "[", "idx_pr", "]", "[", "0", "]", "+", "1", "\n", "if", "float", "(", "length", "/", "term_len", ")", ">=", "intersect_ratio", ":", "\n", "                    ", "if", "multi_hit", "==", "True", "or", "hit_prediction", "[", "idx_pr", "]", "==", "False", ":", "\n", "                        ", "hit_ground_truth", "[", "idx_gt", "]", "=", "True", "\n", "", "hit_prediction", "[", "idx_pr", "]", "=", "True", "\n", "\n", "", "", "", "found_cnt", "=", "0", "\n", "found_str", "=", "' - Found: '", "\n", "notfound_str", "=", "' - Not Found: '", "\n", "for", "idx", "in", "range", "(", "len", "(", "hit_ground_truth", ")", ")", ":", "\n", "            ", "if", "hit_ground_truth", "[", "idx", "]", "==", "True", ":", "\n", "                ", "found_str", "+=", "self", ".", "_ground_truth", "[", "idx", "]", ".", "get_name", "(", ")", "+", "', '", "\n", "found_cnt", "+=", "1", "\n", "", "else", ":", "\n", "                ", "notfound_str", "+=", "self", ".", "_ground_truth", "[", "idx", "]", ".", "get_name", "(", ")", "+", "', '", "\n", "\n", "", "", "print", "(", "'#Found attacks: '", "+", "str", "(", "found_cnt", ")", "+", "'/'", "+", "str", "(", "len", "(", "self", ".", "_ground_truth", ")", ")", ")", "\n", "print", "(", "'Detecting Ratio: '", "+", "str", "(", "round", "(", "float", "(", "found_cnt", ")", "/", "len", "(", "self", ".", "_ground_truth", ")", ",", "2", ")", ")", ")", "\n", "print", "(", "found_str", "[", ":", "-", "2", "]", ")", "\n", "print", "(", "notfound_str", "[", ":", "-", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation.false_alarm": [[173, 196], ["Evaluation.TimeConvertor", "print", "Evaluation.Evaluation._non_attack_time", "print", "print", "print", "fa_list.append", "str", "len", "float", "Evaluation.TimeConvertor.index_to_string", "Evaluation.TimeConvertor.index_to_string", "str", "str", "round", "str"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._non_attack_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.index_to_string", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.index_to_string"], ["", "def", "false_alarm", "(", "self", ",", "intersect_ratio", ",", "multi_hit", "=", "True", ")", ":", "\n", "        ", "assert", "(", "self", ".", "_set_ground_truth", "==", "True", "and", "self", ".", "_set_prediction", "==", "True", ")", "\n", "\n", "tc", "=", "TimeConvertor", "(", ")", "\n", "fa_list", "=", "[", "]", "\n", "\n", "cnt", "=", "0", ";", "\n", "sum", "=", "0.0", ";", "\n", "for", "prediction_term", "in", "self", ".", "_prediction", ":", "\n", "            ", "non_attack_time", "=", "self", ".", "_non_attack_time", "(", "prediction_term", ",", "self", ".", "_ground_truth", ",", "multi_hit", ")", "\n", "if", "1", "-", "float", "(", "non_attack_time", ")", "/", "(", "prediction_term", "[", "1", "]", "-", "prediction_term", "[", "0", "]", "+", "1", ")", "<=", "intersect_ratio", ":", "\n", "                ", "fa_list", ".", "append", "(", "[", "tc", ".", "index_to_string", "(", "prediction_term", "[", "0", "]", ")", ",", "tc", ".", "index_to_string", "(", "prediction_term", "[", "1", "]", ")", "]", ")", "\n", "cnt", "+=", "1", "\n", "sum", "+=", "non_attack_time", "\n", "\n", "#print('[False alarm]')", "\n", "", "", "print", "(", "'#False alarm: '", "+", "str", "(", "cnt", ")", "+", "'/'", "+", "str", "(", "len", "(", "self", ".", "_prediction", ")", ")", ")", "\n", "if", "cnt", "==", "0", ":", "\n", "            ", "print", "(", "' - Total (Average) time: 0 (0)'", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "' - Total (Average) time: '", "+", "str", "(", "sum", ")", "+", "' ('", "+", "str", "(", "round", "(", "sum", "/", "cnt", ",", "2", ")", ")", "+", "')'", ")", "\n", "", "for", "fa", "in", "fa_list", ":", "\n", "            ", "print", "(", "'   '", "+", "fa", "[", "0", "]", "+", "' ~ '", "+", "fa", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._intersect_len": [[198, 212], ["None"], "methods", ["None"], ["", "", "def", "_intersect_len", "(", "self", ",", "index1", ",", "index2", ")", ":", "\n", "        ", "if", "index1", "[", "1", "]", "<", "index2", "[", "0", "]", "or", "index2", "[", "1", "]", "<", "index1", "[", "0", "]", ":", "\n", "            ", "return", "-", "1", "# no intersection", "\n", "\n", "", "if", "index1", "[", "0", "]", "<", "index2", "[", "0", "]", ":", "\n", "            ", "if", "index1", "[", "1", "]", "<", "index2", "[", "1", "]", ":", "\n", "                ", "return", "index1", "[", "1", "]", "-", "index2", "[", "0", "]", "+", "1", "\n", "", "else", ":", "\n", "                ", "return", "index2", "[", "1", "]", "-", "index2", "[", "0", "]", "+", "1", "\n", "", "", "else", ":", "\n", "            ", "if", "index1", "[", "1", "]", "<", "index2", "[", "1", "]", ":", "\n", "                ", "return", "index1", "[", "1", "]", "-", "index1", "[", "0", "]", "+", "1", "\n", "", "else", ":", "\n", "                ", "return", "index2", "[", "1", "]", "-", "index1", "[", "0", "]", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._non_attack_time": [[213, 225], ["range", "len", "ground_truth[].get_time", "Evaluation.Evaluation._intersect_len"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._intersect_len"], ["", "", "", "def", "_non_attack_time", "(", "self", ",", "detect_term", ",", "ground_truth", ",", "multi_hit", ")", ":", "\n", "        ", "non_attack_time", "=", "detect_term", "[", "1", "]", "-", "detect_term", "[", "0", "]", "+", "1", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "ground_truth", ")", ")", ":", "\n", "            ", "attack_term", "=", "ground_truth", "[", "idx", "]", ".", "get_time", "(", ")", "\n", "coocurrence", "=", "self", ".", "_intersect_len", "(", "detect_term", ",", "attack_term", ")", "\n", "if", "coocurrence", "!=", "-", "1", ":", "\n", "                ", "non_attack_time", "-=", "coocurrence", "\n", "if", "multi_hit", "==", "False", ":", "\n", "                    ", "break", "\n", "\n", "", "", "", "return", "non_attack_time", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.__init__": [[231, 234], ["Evaluation.__init__"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "Evaluation", ".", "__init__", "(", "self", ")", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.set_prediction": [[236, 241], ["range", "len", "Evaluation.Evaluation_SWaT_Process._prediction.append", "Evaluation.Evaluation_SWaT_Process._head_tail_index"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._head_tail_index"], ["", "def", "set_prediction", "(", "self", ",", "prediction_lists", ")", ":", "\n", "        ", "for", "idx", "in", "range", "(", "len", "(", "prediction_lists", ")", ")", ":", "\n", "            ", "self", ".", "_prediction", ".", "append", "(", "self", ".", "_head_tail_index", "(", "prediction_lists", "[", "idx", "]", ")", ")", "\n", "\n", "", "self", ".", "_set_prediction", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.set_ground_truth": [[243, 253], ["Evaluation.Evaluation_SWaT_Process._ground_truth.append", "Evaluation.Evaluation_SWaT_Process._ground_truth[].append", "Evaluation.Single_Period", "str"], "methods", ["None"], ["", "def", "set_ground_truth", "(", "self", ",", "ground_truth_lists", ")", ":", "\n", "        ", "self", ".", "_ground_truth", "=", "[", "]", "\n", "list_idx", "=", "0", "\n", "\n", "for", "single_list", "in", "ground_truth_lists", ":", "\n", "            ", "self", ".", "_ground_truth", ".", "append", "(", "[", "]", ")", "\n", "for", "single_answer", "in", "single_list", ":", "\n", "                ", "self", ".", "_ground_truth", "[", "list_idx", "]", ".", "append", "(", "Single_Period", "(", "single_answer", "[", "0", "]", ",", "single_answer", "[", "1", "]", ",", "str", "(", "single_answer", "[", "2", "]", ")", ")", ")", "\n", "", "list_idx", "+=", "1", "\n", "", "self", ".", "_set_ground_truth", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.extend_ground_truth": [[255, 258], ["Evaluation.Evaluation_SWaT_Process._extend_single_truth"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._extend_single_truth"], ["", "def", "extend_ground_truth", "(", "self", ",", "extend_head", ",", "extend_tail", ")", ":", "\n", "        ", "for", "single_list", "in", "self", ".", "_ground_truth", ":", "\n", "            ", "self", ".", "_extend_single_truth", "(", "single_list", ",", "extend_head", ",", "extend_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.get_n_predictions": [[259, 261], ["len"], "methods", ["None"], ["", "", "def", "get_n_predictions", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_prediction", "[", "idx", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process._detected_attack_2lists": [[262, 284], ["range", "range", "range", "len", "hit_ground_truth.append", "len", "hit_prediction.append", "len", "range", "len", "Evaluation.Evaluation_SWaT_Process._intersect_len", "ground_truth[].get_time", "float"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._intersect_len", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_time"], ["", "def", "_detected_attack_2lists", "(", "self", ",", "gt_pid", ",", "prd_pid", ",", "intersect_ratio", ",", "multi_hit", ")", ":", "\n", "        ", "ground_truth", "=", "self", ".", "_ground_truth", "[", "gt_pid", "]", "\n", "prediction", "=", "self", ".", "_prediction", "[", "prd_pid", "]", "\n", "\n", "hit_ground_truth", "=", "[", "]", "\n", "hit_prediction", "=", "[", "]", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "ground_truth", ")", ")", ":", "\n", "            ", "hit_ground_truth", ".", "append", "(", "False", ")", "\n", "", "for", "idx", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "            ", "hit_prediction", ".", "append", "(", "False", ")", "\n", "\n", "", "for", "idx_gt", "in", "range", "(", "len", "(", "ground_truth", ")", ")", ":", "\n", "            ", "for", "idx_pr", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "                ", "length", "=", "self", ".", "_intersect_len", "(", "ground_truth", "[", "idx_gt", "]", ".", "get_time", "(", ")", ",", "prediction", "[", "idx_pr", "]", ")", "\n", "term_len", "=", "prediction", "[", "idx_pr", "]", "[", "1", "]", "-", "prediction", "[", "idx_pr", "]", "[", "0", "]", "+", "1", "\n", "if", "float", "(", "length", "/", "term_len", ")", ">=", "intersect_ratio", ":", "\n", "                    ", "if", "multi_hit", "==", "True", "or", "hit_prediction", "[", "idx_pr", "]", "==", "False", ":", "\n", "                        ", "hit_ground_truth", "[", "idx_gt", "]", "=", "True", "\n", "", "hit_prediction", "[", "idx_pr", "]", "=", "True", "\n", "\n", "", "", "", "return", "hit_ground_truth", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.detected_attacks": [[285, 315], ["range", "range", "print", "print", "print", "len", "min", "Evaluation.Evaluation_SWaT_Process._detected_attack_2lists", "range", "print_buf_list.append", "len", "len", "len", "len", "str", "str", "len", "print", "str", "[].get_name", "len", "round", "[].get_name", "str", "float", "len"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process._detected_attack_2lists", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_name", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Single_Period.get_name"], ["", "def", "detected_attacks", "(", "self", ",", "pid", ",", "preceding_len", ",", "intersect_ratio", ",", "multi_hit", "=", "True", ")", ":", "\n", "        ", "assert", "(", "self", ".", "_set_ground_truth", "==", "True", "and", "self", ".", "_set_prediction", "==", "True", ")", "\n", "assert", "(", "pid", ">=", "0", "and", "pid", "<", "len", "(", "self", ".", "_ground_truth", ")", ")", "\n", "\n", "print_buf_list", "=", "[", "]", "\n", "prev_hit_list", "=", "[", "False", "]", "*", "len", "(", "self", ".", "_ground_truth", "[", "pid", "]", ")", "\n", "for", "i", "in", "range", "(", "pid", ",", "min", "(", "pid", "+", "preceding_len", "+", "1", ",", "len", "(", "self", ".", "_prediction", ")", ")", ")", ":", "\n", "            ", "print_buf", "=", "''", "\n", "hit_list", "=", "self", ".", "_detected_attack_2lists", "(", "pid", ",", "i", ",", "intersect_ratio", ",", "multi_hit", ")", "\n", "print_buf", "+=", "' - Found at Process #'", "+", "str", "(", "i", ")", "+", "': '", "\n", "for", "j", "in", "range", "(", "len", "(", "prev_hit_list", ")", ")", ":", "\n", "                ", "if", "hit_list", "[", "j", "]", "==", "True", "and", "prev_hit_list", "[", "j", "]", "==", "False", ":", "\n", "                    ", "prev_hit_list", "[", "j", "]", "=", "True", "\n", "print_buf", "+=", "self", ".", "_ground_truth", "[", "pid", "]", "[", "j", "]", ".", "get_name", "(", ")", "+", "', '", "\n", "", "", "print_buf_list", ".", "append", "(", "print_buf", ")", "\n", "\n", "", "found_cnt", "=", "0", "\n", "notfound_str", "=", "' - Not Found: '", "\n", "for", "idx", "in", "range", "(", "len", "(", "prev_hit_list", ")", ")", ":", "\n", "            ", "if", "prev_hit_list", "[", "idx", "]", "==", "True", ":", "\n", "                ", "found_cnt", "+=", "1", "\n", "", "else", ":", "\n", "                ", "notfound_str", "+=", "self", ".", "_ground_truth", "[", "pid", "]", "[", "idx", "]", ".", "get_name", "(", ")", "+", "', '", "\n", "\n", "", "", "print", "(", "'#Found attacks: '", "+", "str", "(", "found_cnt", ")", "+", "'/'", "+", "str", "(", "len", "(", "self", ".", "_ground_truth", "[", "pid", "]", ")", ")", ")", "\n", "print", "(", "' - Detecting Ratio: '", "+", "str", "(", "round", "(", "float", "(", "found_cnt", ")", "/", "len", "(", "self", ".", "_ground_truth", "[", "pid", "]", ")", ",", "2", ")", ")", ")", "\n", "for", "line", "in", "print_buf_list", ":", "\n", "            ", "if", "len", "(", "line", ")", "!=", "24", ":", "\n", "                ", "print", "(", "line", "[", ":", "-", "2", "]", ")", "\n", "", "", "print", "(", "notfound_str", "[", ":", "-", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process._false_alarm_2lists": [[317, 338], ["range", "range", "len", "ground_truth.append", "Evaluation.Evaluation_SWaT_Process._non_attack_time"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation._non_attack_time"], ["", "def", "_false_alarm_2lists", "(", "self", ",", "gt_pid", ",", "prd_pid", ",", "non_attack_times", ",", "multi_hit", ")", ":", "\n", "        ", "prediction", "=", "self", ".", "_prediction", "[", "prd_pid", "]", "\n", "\n", "#process\uac04 \uc911\ubcf5\ub418\ub294 \uacf5\uaca9 \ub9ac\uc2a4\ud2b8 \uc81c\uac70", "\n", "ground_truth", "=", "[", "]", "\n", "for", "term", "in", "self", ".", "_ground_truth", "[", "gt_pid", "]", ":", "\n", "            ", "exist", "=", "False", "\n", "for", "idx", "in", "range", "(", "gt_pid", "+", "1", ",", "prd_pid", "+", "1", ")", ":", "\n", "                ", "for", "term2", "in", "self", ".", "_ground_truth", "[", "idx", "]", ":", "\n", "                    ", "if", "term", "==", "term2", ":", "\n", "                        ", "exist", "=", "True", "\n", "break", "\n", "", "", "if", "exist", "==", "True", ":", "\n", "                    ", "break", "\n", "", "", "if", "exist", "==", "False", ":", "\n", "                ", "ground_truth", ".", "append", "(", "term", ")", "\n", "\n", "", "", "for", "idx", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "            ", "org_term", "=", "prediction", "[", "idx", "]", "[", "1", "]", "-", "prediction", "[", "idx", "]", "[", "0", "]", "+", "1", "\n", "if", "multi_hit", "==", "True", "or", "org_term", "==", "non_attack_times", "[", "idx", "]", ":", "\n", "                ", "non_attack_times", "[", "idx", "]", "-=", "org_term", "-", "self", ".", "_non_attack_time", "(", "prediction", "[", "idx", "]", ",", "ground_truth", ",", "multi_hit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.false_alarm": [[340, 370], ["Evaluation.TimeConvertor", "range", "range", "print", "non_attack_times.append", "max", "Evaluation.Evaluation_SWaT_Process._false_alarm_2lists", "len", "print", "print", "print", "fa_list.append", "str", "len", "float", "Evaluation.TimeConvertor.index_to_string", "Evaluation.TimeConvertor.index_to_string", "str", "str", "round", "str"], "methods", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process._false_alarm_2lists", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.index_to_string", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.TimeConvertor.index_to_string"], ["", "", "", "def", "false_alarm", "(", "self", ",", "pid", ",", "preceding_len", ",", "intersect_ratio", ",", "multi_hit", "=", "True", ")", ":", "\n", "        ", "assert", "(", "self", ".", "_set_ground_truth", "==", "True", "and", "self", ".", "_set_prediction", "==", "True", ")", "\n", "\n", "fa_list", "=", "[", "]", "\n", "tc", "=", "TimeConvertor", "(", ")", "\n", "\n", "cnt", "=", "0", ";", "\n", "sum", "=", "0.0", ";", "\n", "non_attack_times", "=", "[", "]", "\n", "for", "prediction_term", "in", "self", ".", "_prediction", "[", "pid", "]", ":", "\n", "            ", "val", "=", "prediction_term", "[", "1", "]", "-", "prediction_term", "[", "0", "]", "+", "1", "\n", "non_attack_times", ".", "append", "(", "prediction_term", "[", "1", "]", "-", "prediction_term", "[", "0", "]", "+", "1", ")", "\n", "\n", "", "for", "idx", "in", "range", "(", "pid", ",", "max", "(", "-", "1", ",", "pid", "-", "preceding_len", "-", "1", ")", ",", "-", "1", ")", ":", "\n", "            ", "self", ".", "_false_alarm_2lists", "(", "idx", ",", "pid", ",", "non_attack_times", ",", "multi_hit", ")", "\n", "\n", "", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "_prediction", "[", "pid", "]", ")", ")", ":", "\n", "            ", "if", "1", "-", "float", "(", "non_attack_times", "[", "idx", "]", ")", "/", "(", "self", ".", "_prediction", "[", "pid", "]", "[", "idx", "]", "[", "1", "]", "-", "self", ".", "_prediction", "[", "pid", "]", "[", "idx", "]", "[", "0", "]", "+", "1", ")", "<=", "intersect_ratio", ":", "\n", "                ", "fa_list", ".", "append", "(", "[", "tc", ".", "index_to_string", "(", "self", ".", "_prediction", "[", "pid", "]", "[", "idx", "]", "[", "0", "]", ")", ",", "tc", ".", "index_to_string", "(", "self", ".", "_prediction", "[", "pid", "]", "[", "idx", "]", "[", "1", "]", ")", "]", ")", "\n", "cnt", "+=", "1", "\n", "sum", "+=", "non_attack_times", "[", "idx", "]", "\n", "\n", "#print('[False alarm]')", "\n", "", "", "print", "(", "'#False alarm: '", "+", "str", "(", "cnt", ")", "+", "'/'", "+", "str", "(", "len", "(", "self", ".", "_prediction", "[", "pid", "]", ")", ")", ")", "\n", "if", "cnt", "==", "0", ":", "\n", "            ", "print", "(", "' - Total (Average) time: 0 (0)'", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "' - Total (Average) time: '", "+", "str", "(", "sum", ")", "+", "' ('", "+", "str", "(", "round", "(", "sum", "/", "cnt", ",", "2", ")", ")", "+", "')'", ")", "\n", "", "for", "fa", "in", "fa_list", ":", "\n", "            ", "print", "(", "'   '", "+", "fa", "[", "0", "]", "+", "' ~ '", "+", "fa", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.read_timeseries_file": [[373, 383], ["open", "open.readlines", "open.close", "list", "line.strip().split", "rbuf.append", "map", "zip", "line.strip", "int"], "function", ["None"], ["", "", "", "def", "read_timeseries_file", "(", "filename", ")", ":", "\n", "    ", "rbuf", "=", "[", "]", "\n", "\n", "f", "=", "open", "(", "filename", ",", "'r'", ",", "encoding", "=", "'utf-8'", ",", "newline", "=", "''", ")", "\n", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "        ", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "rbuf", ".", "append", "(", "int", "(", "i", ")", "for", "i", "in", "items", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "\n", "return", "list", "(", "map", "(", "list", ",", "zip", "(", "*", "rbuf", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.read_period_file": [[385, 400], ["open", "open.readlines", "open.close", "list", "line.strip().split", "tup.append", "tup.append", "tup.append", "rbuf.append", "int", "int", "str", "line.strip"], "function", ["None"], ["", "def", "read_period_file", "(", "filename", ")", ":", "\n", "    ", "rbuf", "=", "[", "]", "\n", "\n", "f", "=", "open", "(", "filename", ",", "'r'", ",", "encoding", "=", "'utf-8'", ",", "newline", "=", "''", ")", "\n", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "        ", "tup", "=", "[", "]", "\n", "items", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "#rbuf.append(list(int(i) for i in items))", "\n", "tup", ".", "append", "(", "int", "(", "items", "[", "0", "]", ")", ")", "\n", "tup", ".", "append", "(", "int", "(", "items", "[", "1", "]", ")", ")", "\n", "tup", ".", "append", "(", "str", "(", "items", "[", "2", "]", ")", ")", "\n", "rbuf", ".", "append", "(", "tup", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "\n", "return", "list", "(", "rbuf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.main": [[402, 496], ["open", "open.readlines", "open.close", "int", "int", "float", "float", "int", "range", "Evaluation.read_timeseries_file", "Evaluation.Evaluation", "Evaluation_SWaT_Process.set_prediction", "Evaluation_SWaT_Process.set_ground_truth", "Evaluation_SWaT_Process.extend_ground_truth", "print", "Evaluation_SWaT_Process.detected_attacks", "Evaluation_SWaT_Process.false_alarm", "print", "line.strip().split", "paramlist.append", "getopt.getopt", "len", "print", "len", "print", "len", "attack_lists.append", "len", "Evaluation.Evaluation_SWaT_Process", "Evaluation_SWaT_Process.set_prediction", "Evaluation_SWaT_Process.set_ground_truth", "Evaluation_SWaT_Process.extend_ground_truth", "range", "print", "sys.exit", "print", "sys.exit", "Evaluation.read_period_file", "print", "Evaluation_SWaT_Process.detected_attacks", "Evaluation_SWaT_Process.false_alarm", "print", "line.strip", "len"], "function", ["home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.read_timeseries_file", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.set_prediction", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.set_ground_truth", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.extend_ground_truth", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.detected_attacks", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.false_alarm", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.set_prediction", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.set_ground_truth", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.extend_ground_truth", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.read_period_file", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.detected_attacks", "home.repos.pwc.inspect_result.jukworks_swat-seq2seq.evaluation.Evaluation.Evaluation_SWaT_Process.false_alarm"], ["", "def", "main", "(", "argv", ")", ":", "\n", "    ", "directory", "=", "'./Attack_Data_Merging'", "\n", "attack_file", "=", "[", "directory", "+", "'/SWaT_Attack_all.csv'", ",", "\n", "directory", "+", "'/SWaT_Attack_pid0.csv'", ",", "\n", "directory", "+", "'/SWaT_Attack_pid1.csv'", ",", "\n", "directory", "+", "'/SWaT_Attack_pid2.csv'", ",", "\n", "directory", "+", "'/SWaT_Attack_pid3.csv'", ",", "\n", "directory", "+", "'/SWaT_Attack_pid4.csv'", ",", "\n", "directory", "+", "'/SWaT_Attack_pid5.csv'", "]", "\n", "predict_file", "=", "''", "\n", "extend_head", "=", "0", "\n", "extend_tail", "=", "0", "\n", "correct_ratio_d", "=", "0.0", "\n", "correct_ratio_f", "=", "0.5", "\n", "multi_hit", "=", "True", "\n", "preceding_process", "=", "0", "\n", "\n", "paramlist", "=", "[", "]", "\n", "paramfile", "=", "open", "(", "'parameters.cfg'", ",", "'r'", ",", "encoding", "=", "'utf-8'", ",", "newline", "=", "''", ")", "\n", "for", "line", "in", "paramfile", ".", "readlines", "(", ")", ":", "\n", "        ", "tokens", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'='", ")", "\n", "paramlist", ".", "append", "(", "tokens", "[", "1", "]", ")", "\n", "", "paramfile", ".", "close", "(", ")", "\n", "\n", "#attack_file = paramlist[0]", "\n", "extend_head", "=", "int", "(", "paramlist", "[", "0", "]", ")", "\n", "extend_tail", "=", "int", "(", "paramlist", "[", "1", "]", ")", "\n", "correct_ratio_d", "=", "float", "(", "paramlist", "[", "2", "]", ")", "\n", "correct_ratio_f", "=", "float", "(", "paramlist", "[", "3", "]", ")", "\n", "if", "paramlist", "[", "4", "]", "==", "'True'", ":", "\n", "        ", "multi_hit", "=", "True", "\n", "", "elif", "paramlist", "[", "4", "]", "==", "'False'", ":", "\n", "        ", "multi_hit", "=", "False", "\n", "", "preceding_process", "=", "int", "(", "paramlist", "[", "5", "]", ")", "\n", "\n", "try", ":", "\n", "        ", "opts", ",", "args", "=", "getopt", ".", "getopt", "(", "argv", ",", "\"hi:a:\"", ",", "[", "\"input file=\"", ",", "\"attack file=\"", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", ":", "\n", "        ", "print", "(", "'Error'", ")", "\n", "sys", ".", "exit", "(", "2", ")", "\n", "", "for", "opt", ",", "arg", "in", "opts", ":", "\n", "        ", "if", "opt", "==", "'-h'", ":", "\n", "            ", "print", "(", "'evaluation.py -i <input_file> -a <attack_file>'", ")", "\n", "sys", ".", "exit", "(", ")", "\n", "", "elif", "opt", "in", "(", "\"-i\"", ")", ":", "\n", "            ", "predict_file", "=", "arg", "\n", "", "elif", "opt", "in", "(", "\"-a\"", ")", ":", "\n", "            ", "attack_file", "=", "arg", "\n", "\n", "", "", "if", "len", "(", "predict_file", ")", "==", "0", ":", "\n", "        ", "print", "(", "'Error: Input the result file with option -i'", ")", "\n", "return", "\n", "\n", "", "if", "len", "(", "attack_file", ")", "==", "0", ":", "\n", "        ", "print", "(", "'Error: Input the attack file (ground truth) with option -a'", ")", "\n", "return", "\n", "\n", "", "head_str", "=", "[", "'Overall Result'", ",", "\n", "'Result for Process1'", ",", "\n", "'Result for Process2'", ",", "\n", "'Result for Process3'", ",", "\n", "'Result for Process4'", ",", "\n", "'Result for Process5'", ",", "\n", "'Result for Process6'", "]", "\n", "\n", "attack_lists", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "len", "(", "attack_file", ")", ")", ":", "\n", "        ", "attack_lists", ".", "append", "(", "read_period_file", "(", "attack_file", "[", "idx", "]", ")", ")", "\n", "", "predict_lists", "=", "read_timeseries_file", "(", "predict_file", ")", "\n", "\n", "eval", "=", "Evaluation", "(", ")", "\n", "eval", ".", "set_prediction", "(", "predict_lists", "[", "0", "]", ")", "\n", "eval", ".", "set_ground_truth", "(", "attack_lists", "[", "0", "]", ")", "\n", "eval", ".", "extend_ground_truth", "(", "extend_head", "=", "extend_head", ",", "extend_tail", "=", "extend_tail", ")", "\n", "\n", "print", "(", "head_str", "[", "0", "]", ")", "\n", "#print('#Predictions: ' + str(eval.get_n_predictions()))", "\n", "eval", ".", "detected_attacks", "(", "correct_ratio_d", ",", "multi_hit", ")", "\n", "eval", ".", "false_alarm", "(", "correct_ratio_f", ",", "multi_hit", ")", "\n", "print", "(", "''", ",", "flush", "=", "True", ")", "\n", "\n", "if", "len", "(", "predict_lists", ")", ">", "1", ":", "\n", "        ", "eval", "=", "Evaluation_SWaT_Process", "(", ")", "\n", "eval", ".", "set_prediction", "(", "predict_lists", "[", "1", ":", "]", ")", "\n", "eval", ".", "set_ground_truth", "(", "attack_lists", "[", "1", ":", "]", ")", "\n", "eval", ".", "extend_ground_truth", "(", "extend_head", "=", "extend_head", ",", "extend_tail", "=", "extend_tail", ")", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "predict_lists", ")", "-", "1", ")", ":", "\n", "            ", "print", "(", "head_str", "[", "idx", "+", "1", "]", ")", "\n", "#print('#Predictions: ' + str(eval.get_n_predictions(idx)))", "\n", "eval", ".", "detected_attacks", "(", "idx", ",", "preceding_process", ",", "correct_ratio_d", ",", "multi_hit", ")", "\n", "eval", ".", "false_alarm", "(", "idx", ",", "preceding_process", ",", "correct_ratio_f", ",", "multi_hit", ")", "\n", "\n", "print", "(", "''", ",", "flush", "=", "True", ")", "\n", "\n"]]}