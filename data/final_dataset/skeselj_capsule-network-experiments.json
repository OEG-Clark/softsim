{"home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_model.AlexNet.__init__": [[10, 28], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "AlexNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "4", ",", "padding", "=", "5", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "192", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "192", ",", "384", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "384", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_model.AlexNet.forward": [[29, 34], ["cnn_model.AlexNet.features", "cnn_model.AlexNet.view", "cnn_model.AlexNet.classifier", "cnn_model.AlexNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_model.LeNet.__init__": [[36, 43], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "6", ",", "5", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "5", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "16", "*", "5", "*", "5", ",", "120", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "84", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_model.LeNet.forward": [[44, 54], ["torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "cnn_model.LeNet.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cnn_model.LeNet.fc3", "cnn_model.LeNet.conv1", "cnn_model.LeNet.conv2", "cnn_model.LeNet.size", "cnn_model.LeNet.fc1", "cnn_model.LeNet.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc3", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_model.smallnet": [[55, 63], ["cnn_model.AlexNet", "cnn_model.AlexNet"], "function", ["None"], ["", "", "def", "smallnet", "(", "in_channels", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "in_channels", "==", "3", ":", "\n", "        ", "model", "=", "AlexNet", "(", "**", "kwargs", ")", "\n", "", "elif", "in_channels", "==", "1", ":", "\n", "        ", "model", "=", "AlexNet", "(", "in_channels", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.classes": [[96, 101], ["None"], "function", ["None"], ["", "def", "classes", "(", "dataset", ")", ":", "\n", "    ", "if", "dataset", "in", "[", "'mnist'", ",", "'fashion'", ",", "'cifar10'", ",", "'svhn'", "]", ":", "\n", "        ", "return", "10", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "", "", "num_classes", "=", "classes", "(", "args", ".", "dataset", ")", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.reset_meters": [[118, 122], ["meter_accuracy.reset", "meter_loss.reset", "confusion_meter.reset"], "function", ["None"], ["def", "reset_meters", "(", ")", ":", "\n", "    ", "meter_accuracy", ".", "reset", "(", ")", "\n", "meter_loss", ".", "reset", "(", ")", "\n", "confusion_meter", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.embedding": [[138, 146], ["train.process", "torch.autograd.Variable().cuda", "model", "all_metadata.append", "all_label_img.append", "enumerate", "process.cpu", "all_mat[].append", "torch.autograd.Variable", "vec.data.cpu().view", "vec.size", "vec.data.cpu"], "function", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.process"], ["def", "embedding", "(", "sample", ",", "all_mat", ",", "all_metadata", ",", "all_label_img", ")", ":", "\n", "    ", "processed", "=", "process", "(", "sample", "[", "0", "]", ")", "\n", "data", "=", "Variable", "(", "processed", ")", ".", "cuda", "(", ")", "\n", "_", ",", "_", ",", "vecs", "=", "model", "(", "data", ",", "save_vecs", "=", "True", ")", "\n", "all_metadata", ".", "append", "(", "sample", "[", "1", "]", ")", "\n", "all_label_img", ".", "append", "(", "processed", ".", "cpu", "(", ")", ")", "\n", "for", "j", ",", "vec", "in", "enumerate", "(", "vecs", ")", ":", "\n", "        ", "all_mat", "[", "j", "]", ".", "append", "(", "vec", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "vec", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.on_start": [[147, 150], ["None"], "function", ["None"], ["", "", "def", "on_start", "(", "state", ")", ":", "\n", "    ", "if", "args", ".", "loading_epoch", "is", "not", "None", ":", "\n", "        ", "state", "[", "'epoch'", "]", "=", "args", ".", "loading_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.on_sample": [[151, 153], ["state[].append"], "function", ["None"], ["", "", "def", "on_sample", "(", "state", ")", ":", "\n", "    ", "state", "[", "'sample'", "]", ".", "append", "(", "state", "[", "'train'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.on_start_epoch": [[154, 158], ["train.reset_meters", "tqdm.tqdm"], "function", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.reset_meters"], ["", "def", "on_start_epoch", "(", "state", ")", ":", "\n", "    ", "reset_meters", "(", ")", "\n", "if", "args", ".", "track", ":", "\n", "        ", "state", "[", "'iterator'", "]", "=", "tqdm", "(", "state", "[", "'iterator'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.on_forward": [[159, 163], ["meter_accuracy.add", "meter_loss.add", "confusion_meter.add", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "", "def", "on_forward", "(", "state", ")", ":", "\n", "    ", "meter_accuracy", ".", "add", "(", "state", "[", "'output'", "]", ".", "data", ",", "torch", ".", "LongTensor", "(", "state", "[", "'sample'", "]", "[", "1", "]", ")", ")", "\n", "meter_loss", ".", "add", "(", "state", "[", "'loss'", "]", ".", "data", "[", "0", "]", ")", "\n", "confusion_meter", ".", "add", "(", "state", "[", "'output'", "]", ".", "data", ",", "torch", ".", "LongTensor", "(", "state", "[", "'sample'", "]", "[", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.on_end_epoch": [[164, 293], ["train.reset_meters", "engine.test", "torch.save", "torch.save", "open", "open.write", "open.close", "print", "train_loss_logger.log", "writer.add_scalar", "train_error_logger.log", "writer.add_scalar", "utils.get_iterator", "print", "test_loss_logger.log", "writer.add_scalar", "test_accuracy_logger.log", "writer.add_scalar", "confusion_logger.log", "iter", "collections.defaultdict", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.repeat", "writer.add_embedding", "torchvision.utils.make_grid", "writer.add_image", "ground_truth_logger.log", "torchvision.utils.make_grid", "writer.add_image", "reconstruction_logger.log", "torchvision.utils.make_grid", "writer.add_image", "perturbation_sample_logger.log", "iter", "torchvision.utils.make_grid", "writer.add_image", "all_reconstruction_logger.log", "open", "open.write", "open.close", "model.state_dict", "confusion_meter.value", "utils.get_iterator", "next", "train.embedding", "torch.cat", "torch.cat", "writer.add_embedding", "torchvision.utils.make_grid.numpy", "torchvision.utils.make_grid.numpy", "torchvision.utils.make_grid.numpy", "utils.get_iterator", "int", "train.process", "model", "classes.max", "torch.cat", "torch.cat", "cat.repeat.max", "cats.append", "torch.cat", "torch.cat", "torchvision.utils.make_grid.numpy", "meter_loss.value", "meter_accuracy.value", "meter_loss.value", "meter_loss.value", "meter_accuracy.value", "meter_accuracy.value", "meter_loss.value", "meter_accuracy.value", "meter_loss.value", "meter_loss.value", "meter_accuracy.value", "meter_accuracy.value", "train.process", "model", "list", "int", "int", "torch.autograd.Variable().cuda", "all_reconstructions.cpu().view", "good_samples.append", "bad_samples.append", "cat.repeat.size", "cat.repeat.repeat", "torch.autograd.Variable().cuda", "reconstruction.cpu().view_as", "process.size", "perturbations.cpu().view", "range", "torch.ones", "torch.ones", "range", "len", "len", "len", "len", "all_mat[].size", "torch.autograd.Variable", "all_reconstructions.cpu", "torch.autograd.Variable", "reconstruction.cpu", "perturbations.cpu"], "function", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.reset_meters", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.get_iterator", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.get_iterator", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.embedding", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.get_iterator", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.process", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.process"], ["", "def", "on_end_epoch", "(", "state", ")", ":", "\n", "# train", "\n", "    ", "msg", "=", "'[%s] [Epoch %d] Training Loss: %.4f (Accuracy: %.2f%%)'", "%", "(", "\n", "visdom_env", ",", "state", "[", "'epoch'", "]", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "if", "args", ".", "log_dir", "!=", "''", ":", "\n", "        ", "f", "=", "open", "(", "log_path", "+", "'/train.txt'", ",", "'a'", ")", "\n", "f", ".", "write", "(", "msg", "+", "\"\\n\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "if", "args", ".", "track", ":", "\n", "        ", "print", "(", "msg", ")", "\n", "train_loss_logger", ".", "log", "(", "state", "[", "'epoch'", "]", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "writer", ".", "add_scalar", "(", "\"train/loss\"", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ",", "state", "[", "'epoch'", "]", ")", "\n", "train_error_logger", ".", "log", "(", "state", "[", "'epoch'", "]", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "writer", ".", "add_scalar", "(", "\"train/accuracy\"", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ",", "state", "[", "'epoch'", "]", ")", "\n", "", "reset_meters", "(", ")", "\n", "# test", "\n", "engine", ".", "test", "(", "processor", ",", "get_iterator", "(", "args", ".", "dataset", ",", "False", ",", "args", ".", "batch_size", ",", "trans", "=", "args", ".", "transform", ")", ")", "\n", "msg", "=", "'[%s] [Epoch %d] Testing Loss: %.4f (Accuracy: %.2f%%)'", "%", "(", "\n", "visdom_env", ",", "state", "[", "'epoch'", "]", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "if", "args", ".", "track", ":", "\n", "        ", "print", "(", "msg", ")", "\n", "test_loss_logger", ".", "log", "(", "state", "[", "'epoch'", "]", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "writer", ".", "add_scalar", "(", "\"test/loss\"", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ",", "state", "[", "'epoch'", "]", ")", "\n", "test_accuracy_logger", ".", "log", "(", "state", "[", "'epoch'", "]", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "writer", ".", "add_scalar", "(", "\"test/accuracy\"", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ",", "state", "[", "'epoch'", "]", ")", "\n", "confusion_logger", ".", "log", "(", "confusion_meter", ".", "value", "(", ")", ")", "\n", "# reconstructions", "\n", "reconstruction_iter", "=", "iter", "(", "get_iterator", "(", "args", ".", "dataset", ",", "False", ",", "trans", "=", "args", ".", "transform", ")", ")", "# False sets value of train mode", "\n", "all_mat", "=", "defaultdict", "(", "list", ")", "\n", "all_metadata", "=", "[", "]", "\n", "all_label_img", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "3", "if", "args", ".", "test", "else", "100", ")", ":", "# Accumulate more examples for embedding", "\n", "            ", "test_sample", "=", "next", "(", "reconstruction_iter", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "ground_truth", "=", "process", "(", "test_sample", "[", "0", "]", ")", "\n", "_", ",", "reconstruction", ",", "perturbations", "=", "model", "(", "Variable", "(", "ground_truth", ")", ".", "cuda", "(", ")", ",", "perturb", "=", "state", "[", "'epoch'", "]", "%", "args", ".", "batch_size", ")", "\n", "reconstruction", "=", "reconstruction", ".", "cpu", "(", ")", ".", "view_as", "(", "ground_truth", ")", ".", "data", "\n", "size", "=", "list", "(", "ground_truth", ".", "size", "(", ")", ")", "\n", "size", "[", "0", "]", "=", "16", "*", "11", "\n", "perturbation", "=", "perturbations", ".", "cpu", "(", ")", ".", "view", "(", "size", ")", ".", "data", "\n", "", "embedding", "(", "test_sample", ",", "all_mat", ",", "all_metadata", ",", "all_label_img", ")", "\n", "", "all_metadata", "=", "torch", ".", "cat", "(", "all_metadata", ")", "\n", "all_label_img", "=", "torch", ".", "cat", "(", "all_label_img", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "num_routing_iterations", ")", ":", "\n", "            ", "all_mat", "[", "j", "]", "=", "torch", ".", "cat", "(", "all_mat", "[", "j", "]", ")", "\n", "writer", ".", "add_embedding", "(", "\n", "all_mat", "[", "j", "]", ",", "\n", "metadata", "=", "all_metadata", ",", "\n", "label_img", "=", "all_label_img", ",", "\n", "global_step", "=", "state", "[", "'epoch'", "]", "*", "100", "+", "j", "+", "1", ",", "\n", "tag", "=", "\"Ep {} Iter {}\"", ".", "format", "(", "state", "[", "'epoch'", "]", ",", "j", "+", "1", ")", ",", "\n", ")", "\n", "", "combined_mat", "=", "torch", ".", "cat", "(", "[", "all_mat", "[", "j", "]", "for", "j", "in", "range", "(", "args", ".", "num_routing_iterations", ")", "]", ")", "\n", "combined_metadata", "=", "torch", ".", "cat", "(", "[", "torch", ".", "ones", "(", "all_mat", "[", "j", "]", ".", "size", "(", "0", ")", ")", "*", "(", "j", "+", "1", ")", "for", "j", "in", "range", "(", "args", ".", "num_routing_iterations", ")", "]", ")", "\n", "combined_label_img", "=", "all_label_img", ".", "repeat", "(", "args", ".", "num_routing_iterations", ",", "1", ",", "1", ",", "1", ")", "\n", "writer", ".", "add_embedding", "(", "\n", "combined_mat", ",", "\n", "metadata", "=", "combined_metadata", ",", "\n", "label_img", "=", "combined_label_img", ",", "\n", "global_step", "=", "state", "[", "'epoch'", "]", "*", "100", ",", "\n", "tag", "=", "\"Ep {} Comb\"", ".", "format", "(", "state", "[", "'epoch'", "]", ")", ",", "\n", ")", "\n", "\n", "gt_image", "=", "make_grid", "(", "ground_truth", ",", "nrow", "=", "int", "(", "args", ".", "batch_size", "**", "0.5", ")", ",", "normalize", "=", "True", ",", "range", "=", "(", "0", ",", "1", ")", ")", "\n", "writer", ".", "add_image", "(", "\"groundtruth\"", ",", "gt_image", ",", "state", "[", "'epoch'", "]", ")", "\n", "ground_truth_logger", ".", "log", "(", "gt_image", ".", "numpy", "(", ")", ")", "\n", "r_image", "=", "make_grid", "(", "reconstruction", ",", "nrow", "=", "int", "(", "args", ".", "batch_size", "**", "0.5", ")", ",", "normalize", "=", "True", ",", "range", "=", "(", "0", ",", "1", ")", ")", "\n", "writer", ".", "add_image", "(", "\"reconstruction\"", ",", "r_image", ",", "state", "[", "'epoch'", "]", ")", "\n", "reconstruction_logger", ".", "log", "(", "r_image", ".", "numpy", "(", ")", ")", "\n", "p_image", "=", "make_grid", "(", "perturbation", ",", "nrow", "=", "11", ",", "normalize", "=", "True", ",", "range", "=", "(", "0", ",", "1", ")", ")", "\n", "writer", ".", "add_image", "(", "\"perturbation\"", ",", "p_image", ",", "state", "[", "'epoch'", "]", ")", "\n", "perturbation_sample_logger", ".", "log", "(", "p_image", ".", "numpy", "(", ")", ")", "\n", "\n", "# fig 3: all reconstructions across all target classes", "\n", "num_good", ",", "num_bad", "=", "1", ",", "1", "\n", "good_samples", ",", "bad_samples", "=", "[", "]", ",", "[", "]", "\n", "for", "sample", "in", "iter", "(", "get_iterator", "(", "args", ".", "dataset", ",", "False", ",", "1", ")", ")", ":", "\n", "            ", "img", ",", "true_lbl", "=", "sample", "\n", "true_lbl", "=", "int", "(", "true_lbl", "[", "0", "]", ")", "\n", "\n", "if", "len", "(", "good_samples", ")", "==", "num_good", "and", "len", "(", "bad_samples", ")", "==", "num_bad", ":", "\n", "                ", "break", "\n", "\n", "", "ground_truth", "=", "process", "(", "img", ")", "\n", "\n", "classes", ",", "reconstruction", ",", "all_reconstructions", "=", "model", "(", "Variable", "(", "ground_truth", ")", ".", "cuda", "(", ")", ",", "all_reconstructions", "=", "True", ")", "\n", "\n", "# get prediction", "\n", "_", ",", "max_length_indices", "=", "classes", ".", "max", "(", "dim", "=", "1", ")", "\n", "pred_lbl", "=", "max_length_indices", ".", "data", "[", "0", "]", "\n", "\n", "# for the given image, get all reconstructions for each class ", "\n", "all_reconstructions", "=", "all_reconstructions", ".", "cpu", "(", ")", ".", "view", "(", "num_classes", ",", "img_channels", ",", "img_width", ",", "img_width", ")", ".", "data", "# reconstructions: [torch.FloatTensor of size 10x1x28x28]", "\n", "candidate", "=", "(", "ground_truth", ",", "true_lbl", ",", "pred_lbl", ",", "all_reconstructions", ")", "\n", "\n", "# collect good samples", "\n", "if", "len", "(", "good_samples", ")", "<", "num_good", "and", "true_lbl", "==", "pred_lbl", ":", "\n", "                ", "good_samples", ".", "append", "(", "candidate", ")", "\n", "\n", "", "if", "len", "(", "bad_samples", ")", "<", "num_bad", "and", "true_lbl", "!=", "pred_lbl", ":", "\n", "                ", "bad_samples", ".", "append", "(", "candidate", ")", "\n", "\n", "", "", "cats", "=", "[", "]", "\n", "for", "sample", "in", "good_samples", "+", "bad_samples", ":", "\n", "            ", "ground_truth", ",", "true_lbl", ",", "pred_lbl", ",", "all_reconstructions", "=", "sample", "\n", "cat", "=", "torch", ".", "cat", "(", "[", "ground_truth", ",", "all_reconstructions", "]", ")", "\n", "maximum", "=", "cat", ".", "max", "(", ")", "\n", "if", "cat", ".", "size", "(", "1", ")", "==", "1", ":", "\n", "                ", "cat", "=", "cat", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "", "cat", "[", "true_lbl", "+", "1", ",", "1", ",", "-", "2", ":", "]", "=", "maximum", "\n", "cat", "[", "true_lbl", "+", "1", ",", "1", ",", ":", "2", "]", "=", "maximum", "\n", "cat", "[", "true_lbl", "+", "1", ",", "1", ",", ":", ",", "-", "2", ":", "]", "=", "maximum", "\n", "cat", "[", "true_lbl", "+", "1", ",", "1", ",", ":", ",", ":", "2", "]", "=", "maximum", "\n", "if", "pred_lbl", "!=", "true_lbl", ":", "\n", "                ", "cat", "[", "pred_lbl", "+", "1", ",", "0", ",", "-", "2", ":", "]", "=", "maximum", "\n", "cat", "[", "pred_lbl", "+", "1", ",", "0", ",", ":", "2", "]", "=", "maximum", "\n", "cat", "[", "pred_lbl", "+", "1", ",", "0", ",", ":", ",", "-", "2", ":", "]", "=", "maximum", "\n", "cat", "[", "pred_lbl", "+", "1", ",", "0", ",", ":", ",", ":", "2", "]", "=", "maximum", "\n", "", "cats", ".", "append", "(", "cat", ")", "\n", "", "image", "=", "make_grid", "(", "torch", ".", "cat", "(", "cats", ")", ",", "nrow", "=", "1", "+", "num_classes", ",", "normalize", "=", "True", ",", "range", "=", "(", "0", ",", "1", ")", ")", "\n", "writer", ".", "add_image", "(", "\"reconstruction_all\"", ",", "image", ",", "state", "[", "'epoch'", "]", ")", "\n", "all_reconstruction_logger", ".", "log", "(", "image", ".", "numpy", "(", ")", ")", "\n", "\n", "", "if", "args", ".", "log_dir", "!=", "''", ":", "\n", "        ", "f", "=", "open", "(", "log_path", "+", "'/test.txt'", ",", "'a'", ")", "\n", "f", ".", "write", "(", "msg", "+", "\"\\n\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_path", "+", "'/epoch_%d.pt'", "%", "state", "[", "'epoch'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.process": [[306, 317], ["data.permute.unsqueeze", "torch.max", "torch.max", "data.permute.float", "data.permute.permute"], "function", ["None"], ["def", "process", "(", "data", ")", ":", "\n", "    ", "if", "args", ".", "dataset", "in", "[", "'mnist'", ",", "'fashion'", "]", ":", "\n", "        ", "data", "=", "data", ".", "unsqueeze", "(", "1", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'cifar10'", ":", "\n", "        ", "data", "=", "data", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'svhn'", ":", "\n", "        ", "pass", "# explicit", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "", "assert", "torch", ".", "max", "(", "data", ")", ">", "2", "# To ensure everything needs to be scaled down", "\n", "return", "data", ".", "float", "(", ")", "/", "255.0", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.train.processor": [[318, 331], ["utils.augmentation", "torch.LongTensor", "torch.LongTensor", "torch.sparse.torch.eye().index_select", "torch.sparse.torch.eye().index_select", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "capsule_loss", "train.process", "model", "model", "torch.sparse.torch.eye", "torch.sparse.torch.eye", "torch.autograd.Variable", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.augmentation", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.process"], ["", "def", "processor", "(", "sample", ")", ":", "\n", "    ", "data", ",", "labels", ",", "training", "=", "sample", "\n", "data", "=", "augmentation", "(", "process", "(", "data", ")", ")", "\n", "labels", "=", "torch", ".", "LongTensor", "(", "labels", ")", "\n", "labels", "=", "torch", ".", "sparse", ".", "torch", ".", "eye", "(", "num_classes", ")", ".", "index_select", "(", "dim", "=", "0", ",", "index", "=", "labels", ")", "\n", "data", "=", "Variable", "(", "data", ")", ".", "cuda", "(", ")", "\n", "labels", "=", "Variable", "(", "labels", ")", ".", "cuda", "(", ")", "\n", "if", "training", ":", "\n", "        ", "classes", ",", "reconstruction", "=", "model", "(", "data", ",", "labels", ")", "\n", "", "else", ":", "\n", "        ", "classes", ",", "reconstruction", "=", "model", "(", "data", ")", "\n", "", "loss", "=", "capsule_loss", "(", "data", ",", "labels", ",", "classes", ",", "reconstruction", ")", "\n", "return", "loss", ",", "classes", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.classes": [[71, 76], ["None"], "function", ["None"], ["", "def", "classes", "(", "dataset", ")", ":", "\n", "    ", "if", "dataset", "in", "[", "'mnist'", ",", "'fashion'", ",", "'cifar10'", ",", "'svhn'", "]", ":", "\n", "        ", "return", "10", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "", "", "num_classes", "=", "classes", "(", "args", ".", "dataset", ")", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.reset_meters": [[89, 93], ["meter_accuracy.reset", "meter_loss.reset", "confusion_meter.reset"], "function", ["None"], ["def", "reset_meters", "(", ")", ":", "\n", "    ", "meter_accuracy", ".", "reset", "(", ")", "\n", "meter_loss", ".", "reset", "(", ")", "\n", "confusion_meter", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.on_sample": [[105, 107], ["state[].append"], "function", ["None"], ["def", "on_sample", "(", "state", ")", ":", "\n", "    ", "state", "[", "'sample'", "]", ".", "append", "(", "state", "[", "'train'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.on_start_epoch": [[108, 112], ["cnn_train.reset_meters", "tqdm.tqdm"], "function", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.reset_meters"], ["", "def", "on_start_epoch", "(", "state", ")", ":", "\n", "    ", "reset_meters", "(", ")", "\n", "if", "args", ".", "track", ":", "\n", "        ", "state", "[", "'iterator'", "]", "=", "tqdm", "(", "state", "[", "'iterator'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.on_forward": [[113, 117], ["meter_accuracy.add", "meter_loss.add", "confusion_meter.add", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "", "def", "on_forward", "(", "state", ")", ":", "\n", "    ", "meter_accuracy", ".", "add", "(", "state", "[", "'output'", "]", ".", "data", ",", "torch", ".", "LongTensor", "(", "state", "[", "'sample'", "]", "[", "1", "]", ")", ")", "\n", "meter_loss", ".", "add", "(", "state", "[", "'loss'", "]", ".", "data", "[", "0", "]", ")", "\n", "confusion_meter", ".", "add", "(", "state", "[", "'output'", "]", ".", "data", ",", "torch", ".", "LongTensor", "(", "state", "[", "'sample'", "]", "[", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.on_end_epoch": [[118, 144], ["cnn_train.reset_meters", "engine.test", "open", "open.write", "open.close", "print", "train_loss_logger.log", "train_error_logger.log", "utils.get_iterator", "print", "test_loss_logger.log", "test_accuracy_logger.log", "confusion_logger.log", "open", "open.write", "open.close", "confusion_meter.value", "meter_loss.value", "meter_accuracy.value", "meter_loss.value", "meter_accuracy.value", "meter_loss.value", "meter_accuracy.value", "meter_loss.value", "meter_accuracy.value"], "function", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.reset_meters", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.get_iterator"], ["", "def", "on_end_epoch", "(", "state", ")", ":", "\n", "# train", "\n", "    ", "msg", "=", "'[%s] [Epoch %d] Training Loss: %.4f (Accuracy: %.2f%%)'", "%", "(", "\n", "visdom_env", ",", "state", "[", "'epoch'", "]", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "if", "args", ".", "log_dir", "!=", "''", ":", "\n", "        ", "f", "=", "open", "(", "log_path", "+", "'/train.txt'", ",", "'a'", ")", "\n", "f", ".", "write", "(", "msg", "+", "\"\\n\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "if", "args", ".", "track", ":", "\n", "        ", "print", "(", "msg", ")", "\n", "train_loss_logger", ".", "log", "(", "state", "[", "'epoch'", "]", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "train_error_logger", ".", "log", "(", "state", "[", "'epoch'", "]", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "", "reset_meters", "(", ")", "\n", "# test", "\n", "engine", ".", "test", "(", "processor", ",", "get_iterator", "(", "args", ".", "dataset", ",", "False", ",", "args", ".", "batch_size", ",", "trans", "=", "args", ".", "transform", ")", ")", "\n", "msg", "=", "'[%s] [Epoch %d] Testing Loss: %.4f (Accuracy: %.2f%%)'", "%", "(", "\n", "visdom_env", ",", "state", "[", "'epoch'", "]", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "if", "args", ".", "track", ":", "\n", "        ", "print", "(", "msg", ")", "\n", "test_loss_logger", ".", "log", "(", "state", "[", "'epoch'", "]", ",", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "test_accuracy_logger", ".", "log", "(", "state", "[", "'epoch'", "]", ",", "meter_accuracy", ".", "value", "(", ")", "[", "0", "]", ")", "\n", "confusion_logger", ".", "log", "(", "confusion_meter", ".", "value", "(", ")", ")", "\n", "", "if", "args", ".", "log_dir", "!=", "''", ":", "\n", "        ", "f", "=", "open", "(", "log_path", "+", "'/test.txt'", ",", "'a'", ")", "\n", "f", ".", "write", "(", "msg", "+", "\"\\n\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.process": [[155, 166], ["data.permute.unsqueeze", "torch.max", "torch.max", "data.permute.float", "data.permute.permute"], "function", ["None"], ["def", "process", "(", "data", ")", ":", "\n", "    ", "if", "args", ".", "dataset", "in", "[", "'mnist'", ",", "'fashion'", "]", ":", "\n", "        ", "data", "=", "data", ".", "unsqueeze", "(", "1", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'cifar10'", ":", "\n", "        ", "data", "=", "data", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'svhn'", ":", "\n", "        ", "pass", "# explicit", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "", "assert", "torch", ".", "max", "(", "data", ")", ">", "2", "# To ensure everything needs to be scaled down", "\n", "return", "data", ".", "float", "(", ")", "/", "255.0", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.processor": [[167, 177], ["utils.augmentation", "torch.LongTensor", "torch.LongTensor", "torch.sparse.torch.eye().index_select", "torch.sparse.torch.eye().index_select", "torch.autograd.Variable().cuda", "torch.softmax", "torch.autograd.Variable().cuda", "capsule_loss", "cnn_train.process", "model().cuda", "torch.sparse.torch.eye", "torch.sparse.torch.eye", "torch.autograd.Variable", "torch.autograd.Variable", "model"], "function", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.augmentation", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.softmax", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.cnn_train.process"], ["", "def", "processor", "(", "sample", ")", ":", "\n", "    ", "data", ",", "labels", ",", "training", "=", "sample", "\n", "data", "=", "augmentation", "(", "process", "(", "data", ")", ")", "\n", "labels", "=", "torch", ".", "LongTensor", "(", "labels", ")", "\n", "labels", "=", "torch", ".", "sparse", ".", "torch", ".", "eye", "(", "num_classes", ")", ".", "index_select", "(", "dim", "=", "0", ",", "index", "=", "labels", ")", "\n", "data", "=", "Variable", "(", "data", ")", ".", "cuda", "(", ")", "\n", "classes", "=", "F", ".", "softmax", "(", "model", "(", "data", ")", ".", "cuda", "(", ")", ",", "dim", "=", "1", ")", "\n", "labels", "=", "Variable", "(", "labels", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "loss", "=", "capsule_loss", "(", "classes", ",", "labels", ")", "\n", "return", "loss", ",", "classes", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.model.CapsuleLayer.__init__": [[16, 30], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.nn.Conv2d", "torch.nn.Conv2d", "range"], "methods", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_capsules", ",", "num_route_nodes", ",", "num_iterations", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "None", ",", "stride", "=", "None", ")", ":", "\n", "        ", "super", "(", "CapsuleLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_capsules", "=", "num_capsules", "\n", "self", ".", "num_route_nodes", "=", "num_route_nodes", "\n", "self", ".", "num_iterations", "=", "num_iterations", "\n", "\n", "if", "num_route_nodes", "!=", "-", "1", ":", "# real capsule layer", "\n", "            ", "self", ".", "route_weights", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "num_capsules", ",", "num_route_nodes", ",", "in_channels", ",", "out_channels", ")", ")", "\n", "", "else", ":", "# just convolution", "\n", "            ", "self", ".", "capsules", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "0", ")", "for", "_", "in", "range", "(", "num_capsules", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.model.CapsuleLayer.squash": [[31, 35], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "", "def", "squash", "(", "self", ",", "tensor", ",", "dim", "=", "-", "1", ")", ":", "# take a vector and scale it to have length in [0,1)", "\n", "        ", "squared_norm", "=", "(", "tensor", "**", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "scale", "=", "squared_norm", "/", "(", "1", "+", "squared_norm", ")", "\n", "return", "scale", "*", "tensor", "/", "torch", ".", "sqrt", "(", "squared_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.model.CapsuleLayer.forward": [[36, 58], ["torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.CapsuleLayer.squash", "utils.softmax", "model.CapsuleLayer.squash", "capsule().view", "torch.autograd.Variable", "torch.autograd.Variable", "vecs.append", "x.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "capsule", "priors.size"], "methods", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.model.CapsuleLayer.squash", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.softmax", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.model.CapsuleLayer.squash"], ["", "def", "forward", "(", "self", ",", "x", ",", "save_vecs", "=", "False", ")", ":", "# x size = batches, maps, side, side", "\n", "        ", "if", "save_vecs", ":", "\n", "            ", "vecs", "=", "[", "]", "\n", "", "if", "self", ".", "num_route_nodes", "!=", "-", "1", ":", "# real capsule layer", "\n", "            ", "priors", "=", "x", "[", "None", ",", ":", ",", ":", ",", "None", ",", ":", "]", "@", "self", ".", "route_weights", "[", ":", ",", "None", ",", ":", ",", ":", ",", ":", "]", "\n", "logits", "=", "Variable", "(", "torch", ".", "zeros", "(", "*", "priors", ".", "size", "(", ")", ")", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_iterations", ")", ":", "\n", "                ", "probs", "=", "softmax", "(", "logits", ",", "dim", "=", "2", ")", "# probs = c, logits = b (froom paper)", "\n", "outputs", "=", "self", ".", "squash", "(", "(", "probs", "*", "priors", ")", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", ")", "\n", "if", "save_vecs", ":", "\n", "                    ", "vecs", ".", "append", "(", "outputs", ")", "\n", "", "if", "i", "!=", "self", ".", "num_iterations", "-", "1", ":", "\n", "                    ", "delta_logits", "=", "(", "priors", "*", "outputs", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "logits", "=", "logits", "+", "delta_logits", "\n", "", "", "", "else", ":", "# takes input from convolution", "\n", "            ", "outputs", "=", "[", "capsule", "(", "x", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ",", "1", ")", "for", "capsule", "in", "self", ".", "capsules", "]", "\n", "outputs", "=", "torch", ".", "cat", "(", "outputs", ",", "dim", "=", "-", "1", ")", "\n", "outputs", "=", "self", ".", "squash", "(", "outputs", ")", "\n", "", "if", "save_vecs", ":", "\n", "            ", "return", "vecs", "\n", "", "else", ":", "\n", "            ", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.model.CapsuleNet.__init__": [[61, 81], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.CapsuleLayer", "model.CapsuleLayer", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "int"], "methods", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_channels", ",", "num_classes", "=", "10", ",", "num_iterations", "=", "3", ",", "img_width", "=", "28", ",", "kernel_size", "=", "9", ")", ":", "\n", "        ", "super", "(", "CapsuleNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "img_channels", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ")", "\n", "self", ".", "primary_capsules", "=", "CapsuleLayer", "(", "num_capsules", "=", "8", ",", "num_route_nodes", "=", "-", "1", ",", "num_iterations", "=", "num_iterations", ",", "in_channels", "=", "256", ",", "out_channels", "=", "32", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "2", ")", "\n", "self", ".", "digit_capsules", "=", "CapsuleLayer", "(", "num_capsules", "=", "num_classes", ",", "num_route_nodes", "=", "32", "*", "int", "(", "(", "(", "img_width", "-", "2", "*", "(", "kernel_size", "-", "1", ")", ")", "/", "2", ")", "**", "2", ")", ",", "num_iterations", "=", "num_iterations", ",", "in_channels", "=", "8", ",", "out_channels", "=", "16", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "16", "*", "num_classes", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "img_channels", "*", "img_width", "**", "2", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.model.CapsuleNet.forward": [[83, 134], ["x.view().transpose.view().transpose.size", "torch.relu", "torch.relu", "model.CapsuleNet.primary_capsules", "model.CapsuleNet.digit_capsules", "x.view().transpose.view().transpose.view().transpose", "torch.softmax", "torch.softmax", "model.CapsuleNet.decoder", "tuple", "model.CapsuleNet.conv1", "torch.softmax.max", "torch.autograd.Variable().cuda().index_select", "torch.autograd.Variable().cuda().index_select", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ret.append", "vec.repeat.repeat.repeat", "range", "model.CapsuleNet.decoder", "ret.append", "ret.append", "x.view().transpose.view().transpose.view", "x.view().transpose.view().transpose.size", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.autograd.Variable().cuda().index_select", "torch.autograd.Variable().cuda().index_select", "torch.cat.append", "torch.cat.append", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "x.view().transpose.view().transpose.size", "enumerate", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable", "torch.autograd.Variable", "model.CapsuleNet.decoder", "len", "vec.repeat.repeat.view().transpose", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "x.view().transpose.view().transpose.size", "vec.repeat.repeat.view", "torch.sparse.torch.eye", "torch.sparse.torch.eye", "torch.sparse.torch.eye", "torch.sparse.torch.eye", "torch.autograd.Variable", "torch.autograd.Variable", "torch.sparse.torch.eye", "torch.sparse.torch.eye", "torch.sparse.torch.eye", "torch.sparse.torch.eye", "len"], "methods", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.softmax", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.softmax"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "all_reconstructions", "=", "False", ",", "perturb", "=", "None", ",", "save_vecs", "=", "False", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ",", "inplace", "=", "True", ")", "\n", "x", "=", "self", ".", "primary_capsules", "(", "x", ")", "\n", "vecs", "=", "self", ".", "digit_capsules", "(", "x", ",", "save_vecs", "=", "save_vecs", ")", "\n", "if", "save_vecs", ":", "\n", "            ", "x", "=", "vecs", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "x", "=", "vecs", "\n", "", "x", "=", "x", ".", "view", "(", "self", ".", "num_classes", ",", "batch_size", ",", "16", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "classes", "=", "(", "x", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "**", "0.5", "\n", "classes", "=", "F", ".", "softmax", "(", "classes", ",", "dim", "=", "1", ")", "\n", "if", "y", "is", "None", ":", "\n", "# In all batches, get the most active capsule.", "\n", "            ", "_", ",", "max_length_indices", "=", "classes", ".", "max", "(", "dim", "=", "1", ")", "\n", "y", "=", "Variable", "(", "torch", ".", "sparse", ".", "torch", ".", "eye", "(", "self", ".", "num_classes", ")", ")", ".", "cuda", "(", ")", ".", "index_select", "(", "dim", "=", "0", ",", "index", "=", "Variable", "(", "max_length_indices", ".", "data", ")", ")", "\n", "y_was_none", "=", "True", "\n", "", "else", ":", "\n", "            ", "y_was_none", "=", "False", "\n", "\n", "", "reconstruction", "=", "self", ".", "decoder", "(", "(", "x", "*", "y", "[", ":", ",", ":", ",", "None", "]", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "ret", "=", "[", "classes", ",", "reconstruction", "]", "\n", "\n", "if", "all_reconstructions", ":", "\n", "            ", "reconstructions", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_classes", ")", ":", "\n", "                ", "index", "=", "torch", ".", "cuda", ".", "LongTensor", "(", "1", ")", "\n", "index", "[", "0", "]", "=", "i", "\n", "mask", "=", "Variable", "(", "torch", ".", "sparse", ".", "torch", ".", "eye", "(", "self", ".", "num_classes", ")", ")", ".", "cuda", "(", ")", ".", "index_select", "(", "dim", "=", "0", ",", "index", "=", "Variable", "(", "index", ")", ")", "\n", "reconstructions", ".", "append", "(", "self", ".", "decoder", "(", "(", "x", "*", "mask", "[", ":", ",", ":", ",", "None", "]", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ")", "\n", "", "reconstructions", "=", "torch", ".", "cat", "(", "reconstructions", ",", "dim", "=", "0", ")", "\n", "ret", ".", "append", "(", "reconstructions", ")", "\n", "\n", "", "if", "y_was_none", "and", "perturb", "is", "not", "None", ":", "\n", "            ", "r", "=", "torch", ".", "arange", "(", "-", "5", ",", "6", ",", "1", ")", "/", "20", "# -0.25,-0.20,...,0.25", "\n", "index", "=", "max_length_indices", ".", "data", "[", "perturb", "]", "\n", "x", "=", "x", "[", "perturb", ":", "perturb", "+", "1", "]", "# 1 x 10 x 16", "\n", "y", "=", "y", "[", "perturb", ":", "perturb", "+", "1", "]", "# 1 x 10", "\n", "vec", "=", "(", "x", "*", "y", "[", ":", ",", ":", ",", "None", "]", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# 1 x 160", "\n", "vec", "=", "vec", ".", "repeat", "(", "len", "(", "r", ")", "*", "16", ",", "1", ")", "\n", "for", "feature_index", "in", "range", "(", "16", ")", ":", "\n", "                ", "for", "i", ",", "val", "in", "enumerate", "(", "r", ")", ":", "\n", "                    ", "vec", "[", "len", "(", "r", ")", "*", "feature_index", "+", "i", ",", "16", "*", "index", "+", "feature_index", "]", "=", "val", "\n", "", "", "perturbations", "=", "self", ".", "decoder", "(", "vec", ")", "\n", "ret", ".", "append", "(", "perturbations", ")", "\n", "\n", "", "if", "save_vecs", ":", "\n", "            ", "ret", ".", "append", "(", "[", "vec", ".", "view", "(", "self", ".", "num_classes", ",", "batch_size", ",", "16", ")", ".", "transpose", "(", "0", ",", "1", ")", "for", "vec", "in", "vecs", "]", ")", "\n", "\n", "", "return", "tuple", "(", "ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.model.CapsuleLoss.__init__": [[136, 139], ["torch.nn.Module.__init__", "torch.nn.MSELoss", "torch.nn.MSELoss"], "methods", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CapsuleLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reconstruction_loss", "=", "nn", ".", "MSELoss", "(", "size_average", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.model.CapsuleLoss.forward": [[140, 147], ["margin_loss.sum.sum.sum", "model.CapsuleLoss.reconstruction_loss", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "labels", ",", "classes", ",", "reconstructions", ")", ":", "\n", "        ", "left", "=", "F", ".", "relu", "(", "0.9", "-", "classes", ",", "inplace", "=", "True", ")", "**", "2", "\n", "right", "=", "F", ".", "relu", "(", "classes", "-", "0.1", ",", "inplace", "=", "True", ")", "**", "2", "\n", "margin_loss", "=", "labels", "*", "left", "+", "0.5", "*", "(", "1.", "-", "labels", ")", "*", "right", "\n", "margin_loss", "=", "margin_loss", ".", "sum", "(", ")", "\n", "reconstruction_loss", "=", "self", ".", "reconstruction_loss", "(", "reconstructions", ",", "images", ")", "\n", "return", "(", "margin_loss", "+", "0.0005", "*", "reconstruction_loss", ")", "/", "images", ".", "size", "(", "0", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.__init__": [[60, 63], ["numpy.random.seed"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "seed", "=", "17724", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.__getitem__": [[63, 65], ["getitem"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "getitem", "(", "self", ".", "dataset", ",", "index", ")", "\n", "", "def", "__getattr__", "(", "self", ",", "attr", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.__getattr__": [[65, 70], ["getattr", "utils.AffinelyTransformed.affinely_transformed", "utils.torchify"], "methods", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.affinely_transformed", "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.torchify"], ["", "def", "__getattr__", "(", "self", ",", "attr", ")", ":", "\n", "        ", "content", "=", "getattr", "(", "self", ".", "dataset", ",", "attr", ")", "\n", "if", "\"data\"", "in", "attr", "and", "\"labels\"", "not", "in", "attr", ":", "# data, not labels", "\n", "            ", "content", "=", "self", ".", "affinely_transformed", "(", "torchify", "(", "content", ")", ")", "\n", "", "return", "content", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.__len__": [[70, 72], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "", "def", "affinely_transformed", "(", "self", ",", "content", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.AffinelyTransformed.affinely_transformed": [[72, 104], ["numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.repeat", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.affine_grid", "torch.affine_grid", "torch.affine_grid", "content.float.float.float", "content.float.float.size", "content.float.float.size", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "len", "utils.AffinelyTransformed.affinely_transformed.affine"], "methods", ["None"], ["", "def", "affinely_transformed", "(", "self", ",", "content", ")", ":", "\n", "        ", "n_samples", ",", "img_w", "=", "content", ".", "size", "(", "0", ")", ",", "content", ".", "size", "(", "2", ")", "# 2 guaranteed to not be channel", "\n", "angle_max", ",", "shear_max", ",", "disp_max", ",", "scale", "=", "20", "/", "360", ",", "0.1", ",", "1", ",", "1.5", "\n", "angles", "=", "np", ".", "random", ".", "uniform", "(", "-", "angle_max", ",", "angle_max", ",", "n_samples", ")", "\n", "shears", "=", "np", ".", "random", ".", "uniform", "(", "-", "shear_max", ",", "shear_max", ",", "n_samples", ")", "\n", "disps", "=", "np", ".", "random", ".", "uniform", "(", "-", "disp_max", ",", "disp_max", ",", "(", "n_samples", ",", "2", ")", ")", "\n", "scales", "=", "np", ".", "repeat", "(", "[", "scale", "]", ",", "(", "n_samples", ")", ")", "\n", "thetas", "=", "torch", ".", "FloatTensor", "(", "\n", "[", "[", "[", "(", "1", "+", "math", ".", "cos", "(", "angles", "[", "i", "]", ")", ")", "/", "scales", "[", "i", "]", ",", "math", ".", "sin", "(", "angles", "[", "i", "]", ")", ",", "disps", "[", "i", ",", "0", "]", "]", ",", "[", "shears", "[", "i", "]", "-", "math", ".", "sin", "(", "angles", "[", "i", "]", ")", ",", "(", "1", "+", "math", ".", "cos", "(", "angles", "[", "i", "]", ")", ")", "/", "scales", "[", "i", "]", ",", "disps", "[", "i", ",", "1", "]", "]", "]", "for", "i", "in", "range", "(", "n_samples", ")", "]", ")", "\n", "grids", "=", "F", ".", "affine_grid", "(", "thetas", ",", "size", "=", "torch", ".", "Size", "(", "(", "n_samples", ",", "1", ",", "img_w", ",", "img_w", ")", ")", ")", "\n", "\n", "content", "=", "content", ".", "float", "(", ")", "\n", "def", "affine", "(", "layer", ")", ":", "\n", "            ", "assert", "layer", ".", "size", "(", ")", "[", "1", "]", "==", "layer", ".", "size", "(", ")", "[", "2", "]", "\n", "layer", "=", "F", ".", "grid_sample", "(", "layer", ".", "unsqueeze", "(", "1", ")", ",", "grids", ")", "\n", "layer", "=", "layer", ".", "squeeze", "(", ")", ".", "data", "\n", "return", "layer", "\n", "", "if", "len", "(", "content", ".", "size", "(", ")", ")", "==", "3", ":", "\n", "            ", "return", "affine", "(", "content", ")", "\n", "", "else", ":", "\n", "            ", "assert", "len", "(", "content", ".", "size", "(", ")", ")", "==", "4", "\n", "if", "content", ".", "size", "(", "1", ")", "==", "3", ":", "\n", "                ", "for", "dim", "in", "range", "(", "3", ")", ":", "\n", "                    ", "content", "[", ":", ",", "dim", ",", ":", ",", ":", "]", "=", "affine", "(", "content", "[", ":", ",", "dim", ",", ":", ",", ":", "]", ")", "\n", "", "", "elif", "content", ".", "size", "(", "3", ")", "==", "3", ":", "\n", "                ", "for", "dim", "in", "range", "(", "3", ")", ":", "\n", "                    ", "content", "[", ":", ",", ":", ",", ":", ",", "dim", "]", "=", "affine", "(", "content", "[", ":", ",", ":", ",", ":", ",", "dim", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "raise", "ValueError", "\n", "", "return", "content", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.softmax": [[12, 19], ["input.transpose", "torch.softmax", "F.softmax.view().transpose", "input.transpose.contiguous().view", "len", "input.transpose.size", "F.softmax.view", "len", "input.size", "input.transpose.contiguous", "input.size", "input.transpose.size"], "function", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.softmax"], ["def", "softmax", "(", "input", ",", "dim", "=", "1", ")", ":", "\n", "    ", "transposed_input", "=", "input", ".", "transpose", "(", "dim", ",", "len", "(", "input", ".", "size", "(", ")", ")", "-", "1", ")", "\n", "softmaxed_output", "=", "F", ".", "softmax", "(", "transposed_input", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "transposed_input", ".", "size", "(", "-", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "return", "softmaxed_output", ".", "view", "(", "*", "transposed_input", ".", "size", "(", ")", ")", ".", "transpose", "(", "dim", ",", "len", "(", "input", ".", "size", "(", ")", ")", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.augmentation": [[21, 34], ["x.size", "numpy.random.randint", "slice", "slice", "slice", "slice", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.float", "max", "max", "max", "max", "x.size"], "function", ["None"], ["", "def", "augmentation", "(", "x", ",", "max_shift", "=", "2", ")", ":", "# translation by up to 2px in each direction", "\n", "    ", "_", ",", "_", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "\n", "h_shift", ",", "w_shift", "=", "np", ".", "random", ".", "randint", "(", "-", "max_shift", ",", "max_shift", "+", "1", ",", "size", "=", "2", ")", "\n", "source_height_slice", "=", "slice", "(", "max", "(", "0", ",", "h_shift", ")", ",", "h_shift", "+", "height", ")", "\n", "source_width_slice", "=", "slice", "(", "max", "(", "0", ",", "w_shift", ")", ",", "w_shift", "+", "width", ")", "\n", "target_height_slice", "=", "slice", "(", "max", "(", "0", ",", "-", "h_shift", ")", ",", "-", "h_shift", "+", "height", ")", "\n", "target_width_slice", "=", "slice", "(", "max", "(", "0", ",", "-", "w_shift", ")", ",", "-", "w_shift", "+", "width", ")", "\n", "\n", "shifted_image", "=", "torch", ".", "zeros", "(", "*", "x", ".", "size", "(", ")", ")", "\n", "shifted_image", "[", ":", ",", ":", ",", "source_height_slice", ",", "source_width_slice", "]", "=", "x", "[", ":", ",", ":", ",", "target_height_slice", ",", "target_width_slice", "]", "\n", "return", "shifted_image", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.torchify": [[41, 58], ["type", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "print", "print", "type", "torch.cat", "torch.cat", "torch.cat", "print", "torch.typename", "torch.typename", "torch.typename", "print", "torch.typename", "torch.typename", "torch.typename", "torch.cat.size", "torchify().unsqueeze", "len", "enumerate", "torch.typename", "torch.typename", "torch.typename", "x.size", "utils.torchify"], "function", ["home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.torchify"], ["def", "torchify", "(", "x", ",", "verbose", "=", "False", ",", "index", "=", "None", ",", "top_call", "=", "True", ")", ":", "\n", "    ", "if", "type", "(", "x", ")", "is", "np", ".", "ndarray", ":", "\n", "        ", "if", "verbose", "and", "(", "index", "==", "0", "or", "index", "==", "None", ")", ":", "\n", "            ", "print", "(", "\"numpy array of shape {}\"", ".", "format", "(", "x", ".", "shape", ")", ")", "\n", "", "ret", "=", "torch", ".", "from_numpy", "(", "x", ")", "\n", "", "elif", "type", "(", "x", ")", "is", "list", ":", "\n", "        ", "if", "verbose", "and", "(", "index", "==", "0", "or", "index", "==", "None", ")", ":", "\n", "            ", "print", "(", "\"list (length {}) of\"", ".", "format", "(", "len", "(", "x", ")", ")", ")", "\n", "", "ret", "=", "torch", ".", "cat", "(", "[", "torchify", "(", "y", ",", "index", "=", "i", ",", "top_call", "=", "False", ")", ".", "unsqueeze", "(", "0", ")", "for", "i", ",", "y", "in", "enumerate", "(", "x", ")", "]", ")", "\n", "", "else", ":", "\n", "        ", "assert", "\"Tensor\"", "in", "torch", ".", "typename", "(", "x", ")", "\n", "if", "verbose", "and", "(", "index", "==", "0", "or", "index", "==", "None", ")", ":", "\n", "            ", "print", "(", "\"{} of size {}\"", ".", "format", "(", "torch", ".", "typename", "(", "x", ")", ",", "x", ".", "size", "(", ")", ")", ")", "\n", "", "ret", "=", "x", "\n", "", "if", "verbose", "and", "top_call", ":", "\n", "        ", "print", "(", "\"Final result: {} of size {}\"", ".", "format", "(", "torch", ".", "typename", "(", "ret", ")", ",", "ret", ".", "size", "(", ")", ")", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.skeselj_capsule-network-experiments.None.utils.get_iterator": [[107, 136], ["torchnet.dataset.TensorDataset", "tnt.dataset.TensorDataset.parallel", "torchvision.datasets.MNIST", "utils.AffinelyTransformed", "getattr", "getattr", "torchvision.datasets.FashionMNIST", "torchvision.datasets.CIFAR10", "torchvision.datasets.SVHN"], "function", ["None"], ["", "", "", "def", "get_iterator", "(", "dataset_name", ",", "mode", ",", "batch_size", "=", "100", ",", "trans", "=", "False", ",", "test", "=", "False", ")", ":", "\n", "    ", "if", "dataset_name", "==", "\"mnist\"", ":", "\n", "        ", "dataset", "=", "MNIST", "(", "root", "=", "'./data/mnist'", ",", "download", "=", "True", ",", "train", "=", "mode", ")", "\n", "", "elif", "dataset_name", "==", "\"fashion\"", ":", "\n", "        ", "dataset", "=", "FashionMNIST", "(", "root", "=", "'./data/fashion'", ",", "download", "=", "True", ",", "train", "=", "mode", ")", "\n", "", "elif", "dataset_name", "==", "\"cifar10\"", ":", "\n", "        ", "dataset", "=", "CIFAR10", "(", "root", "=", "\"./data/cifar10\"", ",", "download", "=", "True", ",", "train", "=", "mode", ")", "\n", "", "elif", "dataset_name", "==", "\"svhn\"", ":", "\n", "        ", "dataset", "=", "SVHN", "(", "root", "=", "\"./data/svhn\"", ",", "download", "=", "True", ",", "split", "=", "(", "\"train\"", "if", "mode", "else", "\"test\"", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "\n", "", "if", "trans", ":", "\n", "        ", "dataset", "=", "AffinelyTransformed", "(", "dataset", ")", "\n", "\n", "", "if", "dataset_name", "in", "[", "\"mnist\"", ",", "\"fashion\"", ",", "\"cifar10\"", "]", ":", "\n", "        ", "data", "=", "getattr", "(", "dataset", ",", "'train_data'", "if", "mode", "else", "'test_data'", ")", "\n", "labels", "=", "getattr", "(", "dataset", ",", "'train_labels'", "if", "mode", "else", "'test_labels'", ")", "\n", "", "elif", "dataset_name", "==", "\"svhn\"", ":", "\n", "        ", "data", "=", "dataset", ".", "data", "\n", "labels", "=", "dataset", ".", "labels", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "", "if", "test", ":", "\n", "        ", "data", "=", "data", "[", ":", "batch_size", "]", "\n", "labels", "=", "labels", "[", ":", "batch_size", "]", "\n", "", "tensor_dataset", "=", "tnt", ".", "dataset", ".", "TensorDataset", "(", "[", "data", ",", "labels", "]", ")", "\n", "\n", "return", "tensor_dataset", ".", "parallel", "(", "batch_size", "=", "batch_size", ",", "num_workers", "=", "4", ",", "shuffle", "=", "mode", ")", "\n", "", ""]]}