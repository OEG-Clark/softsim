{"home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_4x.eval": [[67, 102], ["model.eval", "os.path.join", "os.path.join", "range", "print", "os.path.join", "os.path.join", "os.path.join", "LR_image.__len__", "time.time", "PIL.Image.open().convert", "PIL.Image.open().convert", "time.time", "chop_forward.clip", "PIL.Image.fromarray().save", "numpy.array().astype", "eval_4x.rgb2ycbcr", "numpy.array().astype", "eval_4x.rgb2ycbcr", "eval_4x.PSNR", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "os.path.join", "os.listdir", "dataset.is_image_file", "torch.no_grad", "torch.no_grad", "eval_4x.chop_forward", "PIL.Image.open", "PIL.Image.open", "PIL.Image.fromarray", "numpy.array", "numpy.array", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.rgb2ycbcr", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.rgb2ycbcr", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.PSNR", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward"], ["def", "eval", "(", ")", ":", "\n", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "LR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'LR'", ")", "\n", "HR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'HR'", ")", "\n", "LR_image", "=", "[", "join", "(", "LR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "HR_image", "=", "[", "join", "(", "HR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "HR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "SR_image", "=", "[", "join", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'SR'", ")", ",", "x", ")", "for", "x", "in", "listdir", "(", "HR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "count", "=", "0", "\n", "avg_psnr_predicted", "=", "0.0", "\n", "\n", "for", "i", "in", "range", "(", "LR_image", ".", "__len__", "(", ")", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "target", "=", "Image", ".", "open", "(", "HR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR", "=", "Image", ".", "open", "(", "LR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "chop_forward", "(", "LR", ",", "model", ",", "opt", ".", "upscale_factor", ",", "opt", ".", "stride", ",", "opt", ".", "patch_size", ")", "\n", "\n", "", "t1", "=", "time", ".", "time", "(", ")", "\n", "#print(\"===> Processing: %s || Timer: %.4f sec.\" % (str(i), (t1 - t0)))", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clip", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "SR_image", "[", "i", "]", ")", "\n", "\n", "GT", "=", "np", ".", "array", "(", "target", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "GT_Y", "=", "rgb2ycbcr", "(", "GT", ")", "\n", "prediction", "=", "np", ".", "array", "(", "prediction", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "prediction_Y", "=", "rgb2ycbcr", "(", "prediction", ")", "\n", "psnr_predicted", "=", "PSNR", "(", "prediction_Y", ",", "GT_Y", ",", "shave_border", "=", "opt", ".", "upscale_factor", ")", "\n", "avg_psnr_predicted", "+=", "psnr_predicted", "\n", "count", "+=", "1", "\n", "\n", "", "print", "(", "\"PSNR_predicted=\"", ",", "avg_psnr_predicted", "/", "count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_4x.modcrop": [[103, 110], ["img.crop.crop"], "function", ["None"], ["", "def", "modcrop", "(", "img", ",", "modulo", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img", ".", "size", "\n", "ih", "=", "ih", "-", "(", "ih", "%", "modulo", ")", "\n", "iw", "=", "iw", "-", "(", "iw", "%", "modulo", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "0", ",", "ih", ",", "iw", ")", ")", "\n", "#y, cb, cr = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_4x.rgb2ycbcr": [[112, 129], ["img.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        float32, [0, 255]\n        float32, [0, 255]\n    '''", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# convert", "\n", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "\n", "return", "rlt", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_4x.PSNR": [[130, 138], ["math.sqrt", "numpy.mean", "math.log10"], "function", ["None"], ["", "def", "PSNR", "(", "pred", ",", "gt", ",", "shave_border", ")", ":", "\n", "    ", "pred", "=", "pred", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "gt", "=", "gt", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "imdff", "=", "pred", "-", "gt", "\n", "rmse", "=", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "if", "rmse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_4x.chop_forward": [[145, 169], ["transform().unsqueeze", "img_splitter.split_img_tensor", "torch.TensorDataset", "torch.DataLoader", "enumerate", "img_splitter.merge_img_tensor", "SR.data[].numpy().transpose.data[].numpy().transpose", "torch.autograd.Variable().cuda", "range", "transform", "torch.no_grad", "torch.no_grad", "network", "out_box.append", "SR.data[].numpy().transpose.data[].numpy", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.split_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.merge_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["def", "chop_forward", "(", "img", ",", "network", ",", "scale", ",", "stride", ",", "patch_size", ")", ":", "\n", "\n", "    ", "channel_swap", "=", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img_patch", "=", "img_splitter", ".", "split_img_tensor", "(", "img", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "img_patch", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "out_box", "=", "[", "]", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "input", "=", "Variable", "(", "batch", "[", "0", "]", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "network", "(", "input", ")", "\n", "\n", "", "for", "j", "in", "range", "(", "prediction", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_box", ".", "append", "(", "prediction", "[", "j", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "", "SR", "=", "img_splitter", ".", "merge_img_tensor", "(", "out_box", ")", "\n", "SR", "=", "SR", ".", "data", "[", "0", "]", ".", "numpy", "(", ")", ".", "transpose", "(", "channel_swap", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_4x.eval": [[60, 127], ["utils_logger.logger_info", "logging.getLogger", "model.eval", "model.named_parameters", "sum", "logging.getLogger.info", "collections.OrderedDict", "logging.getLogger.info", "logging.getLogger.info", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "range", "logging.getLogger.info", "map", "os.path.join", "os.path.join", "LR_image.__len__", "os.path.splitext", "logging.getLogger.info", "PIL.Image.open().convert", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "test_results[].append", "numpy.rot90", "numpy.rot90", "numpy.rot90", "numpy.fliplr", "numpy.rot90", "numpy.rot90", "numpy.rot90", "prediction.clip.clip", "PIL.Image.fromarray().save", "model.parameters", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "torch.no_grad", "torch.no_grad", "AIM_ensemble_4x.chop_forward", "AIM_ensemble_4x.chop_forward", "AIM_ensemble_4x.chop_forward", "AIM_ensemble_4x.chop_forward", "AIM_ensemble_4x.chop_forward", "AIM_ensemble_4x.chop_forward", "AIM_ensemble_4x.chop_forward", "AIM_ensemble_4x.chop_forward", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "sum", "len", "x.numel", "PIL.Image.open", "PIL.Image.fromarray", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_info", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward"], ["def", "eval", "(", ")", ":", "\n", "    ", "utils_logger", ".", "logger_info", "(", "'AIM-track'", ",", "log_path", "=", "'AIM-track.log'", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'AIM-track'", ")", "\n", "model", ".", "eval", "(", ")", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "v", ".", "requires_grad", "=", "False", "\n", "\n", "# number of parameters", "\n", "", "number_parameters", "=", "sum", "(", "map", "(", "lambda", "x", ":", "x", ".", "numel", "(", ")", ",", "model", ".", "parameters", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "'Params number: {}'", ".", "format", "(", "number_parameters", ")", ")", "\n", "\n", "LR_filename", "=", "opt", ".", "image_dataset", "\n", "LR_image", "=", "[", "join", "(", "LR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "SR_image", "=", "[", "join", "(", "opt", ".", "image_output", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "# record PSNR, runtime", "\n", "test_results", "=", "OrderedDict", "(", ")", "\n", "test_results", "[", "'runtime'", "]", "=", "[", "]", "\n", "\n", "logger", ".", "info", "(", "opt", ".", "image_dataset", ")", "\n", "logger", ".", "info", "(", "opt", ".", "image_output", ")", "\n", "idx", "=", "0", "\n", "\n", "start", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "end", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "\n", "for", "i", "in", "range", "(", "LR_image", ".", "__len__", "(", ")", ")", ":", "\n", "\n", "        ", "idx", "+=", "1", "\n", "img_name", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "LR_image", "[", "i", "]", ")", "\n", "logger", ".", "info", "(", "'{:->4d}--> {:>10s}'", ".", "format", "(", "idx", ",", "img_name", "+", "ext", ")", ")", "\n", "\n", "LR", "=", "Image", ".", "open", "(", "LR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR_90", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_90", ")", "\n", "LR_180", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_180", ")", "\n", "LR_270", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_270", ")", "\n", "LR_f", "=", "LR", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_90f", "=", "LR_90", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_180f", "=", "LR_180", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_270f", "=", "LR_270", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred", ",", "time", "=", "chop_forward", "(", "LR", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_90", ",", "time_90", "=", "chop_forward", "(", "LR_90", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_180", ",", "time_180", "=", "chop_forward", "(", "LR_180", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_270", ",", "time_270", "=", "chop_forward", "(", "LR_270", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_f", ",", "time_f", "=", "chop_forward", "(", "LR_f", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_90f", ",", "time_90f", "=", "chop_forward", "(", "LR_90f", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_180f", ",", "time_180f", "=", "chop_forward", "(", "LR_180f", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_270f", ",", "time_270f", "=", "chop_forward", "(", "LR_270f", ",", "model", ",", "start", ",", "end", ")", "\n", "\n", "", "compute_time", "=", "time", "+", "time_90", "+", "time_180", "+", "time_270", "+", "time_f", "+", "time_90f", "+", "time_180f", "+", "time_270f", "\n", "test_results", "[", "'runtime'", "]", ".", "append", "(", "compute_time", ")", "# milliseconds", "\n", "pred_90", "=", "np", ".", "rot90", "(", "pred_90", ",", "3", ")", "\n", "pred_180", "=", "np", ".", "rot90", "(", "pred_180", ",", "2", ")", "\n", "pred_270", "=", "np", ".", "rot90", "(", "pred_270", ",", "1", ")", "\n", "pred_f", "=", "np", ".", "fliplr", "(", "pred_f", ")", "\n", "pred_90f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_90f", ")", ",", "3", ")", "\n", "pred_180f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_180f", ")", ",", "2", ")", "\n", "pred_270f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_270f", ")", ",", "1", ")", "\n", "prediction", "=", "(", "pred", "+", "pred_90", "+", "pred_180", "+", "pred_270", "+", "pred_f", "+", "pred_90f", "+", "pred_180f", "+", "pred_270f", ")", "*", "255.0", "/", "8.0", "\n", "prediction", "=", "prediction", ".", "clip", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "SR_image", "[", "i", "]", ")", "\n", "\n", "", "ave_runtime", "=", "sum", "(", "test_results", "[", "'runtime'", "]", ")", "/", "len", "(", "test_results", "[", "'runtime'", "]", ")", "/", "1000.0", "\n", "logger", ".", "info", "(", "'------> Average runtime of ({}) is : {:.6f} seconds'", ".", "format", "(", "opt", ".", "image_dataset", ",", "ave_runtime", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_4x.modcrop": [[130, 137], ["img.crop.crop"], "function", ["None"], ["", "def", "modcrop", "(", "img", ",", "modulo", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img", ".", "size", "\n", "ih", "=", "ih", "-", "(", "ih", "%", "modulo", ")", "\n", "iw", "=", "iw", "-", "(", "iw", "%", "modulo", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "0", ",", "ih", ",", "iw", ")", ")", "\n", "#y, cb, cr = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_4x.rgb2ycbcr": [[139, 156], ["img.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        float32, [0, 255]\n        float32, [0, 255]\n    '''", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# convert", "\n", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "\n", "return", "rlt", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_4x.PSNR": [[157, 165], ["math.sqrt", "numpy.mean", "math.log10"], "function", ["None"], ["", "def", "PSNR", "(", "pred", ",", "gt", ",", "shave_border", ")", ":", "\n", "    ", "pred", "=", "pred", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "gt", "=", "gt", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "imdff", "=", "pred", "-", "gt", "\n", "rmse", "=", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "if", "rmse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_4x.chop_forward": [[172, 201], ["transform().unsqueeze", "img_splitter.split_img_tensor", "torch.TensorDataset", "torch.DataLoader", "enumerate", "img_splitter.merge_img_tensor", "SR.data[].numpy().transpose.data[].numpy().transpose", "torch.autograd.Variable().to", "start.record", "end.record", "torch.cuda.synchronize", "torch.cuda.synchronize", "start.elapsed_time", "range", "transform", "torch.no_grad", "torch.no_grad", "network", "out_box.append", "SR.data[].numpy().transpose.data[].numpy", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.split_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.merge_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["def", "chop_forward", "(", "img", ",", "network", ",", "start", ",", "end", ")", ":", "\n", "\n", "    ", "channel_swap", "=", "(", "1", ",", "2", ",", "0", ")", "\n", "run_time", "=", "0", "\n", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img_patch", "=", "img_splitter", ".", "split_img_tensor", "(", "img", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "img_patch", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "out_box", "=", "[", "]", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "input", "=", "Variable", "(", "batch", "[", "0", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "start", ".", "record", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "network", "(", "input", ")", "\n", "", "end", ".", "record", "(", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "run_time", "+=", "start", ".", "elapsed_time", "(", "end", ")", "\n", "\n", "for", "j", "in", "range", "(", "prediction", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_box", ".", "append", "(", "prediction", "[", "j", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "", "SR", "=", "img_splitter", ".", "merge_img_tensor", "(", "out_box", ")", "\n", "SR", "=", "SR", ".", "data", "[", "0", "]", ".", "numpy", "(", ")", ".", "transpose", "(", "channel_swap", ")", "\n", "\n", "return", "SR", ",", "run_time", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.__init__": [[13, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "patch_size", ",", "scale_factor", ",", "stride", ")", ":", "\n", "        ", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "height", "=", "0", "\n", "self", ".", "width", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.split_img_tensor": [[20, 45], ["img_tensor.size", "min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.size", "torch.zeros.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "min", "min", "patch_box.append"], "methods", ["None"], ["", "def", "split_img_tensor", "(", "self", ",", "img_tensor", ")", ":", "\n", "# resize image and convert them into tensor", "\n", "        ", "batch", ",", "channel", ",", "height", ",", "width", "=", "img_tensor", ".", "size", "(", ")", "\n", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "\n", "side", "=", "min", "(", "height", ",", "width", ",", "self", ".", "patch_size", ")", "\n", "delta", "=", "self", ".", "patch_size", "-", "side", "\n", "Z", "=", "torch", ".", "zeros", "(", "[", "batch", ",", "channel", ",", "height", "+", "delta", ",", "width", "+", "delta", "]", ")", "\n", "Z", "[", ":", ",", ":", ",", "delta", "//", "2", ":", "height", "+", "delta", "//", "2", ",", "delta", "//", "2", ":", "width", "+", "delta", "//", "2", "]", "=", "img_tensor", "\n", "batch", ",", "channel", ",", "new_height", ",", "new_width", "=", "Z", ".", "size", "(", ")", "\n", "\n", "patch_box", "=", "[", "]", "\n", "\n", "# split image into over-lapping pieces", "\n", "for", "i", "in", "range", "(", "0", ",", "new_height", ",", "self", ".", "stride", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "0", ",", "new_width", ",", "self", ".", "stride", ")", ":", "\n", "                ", "x", "=", "min", "(", "new_height", ",", "i", "+", "self", ".", "patch_size", ")", "\n", "y", "=", "min", "(", "new_width", ",", "j", "+", "self", ".", "patch_size", ")", "\n", "part", "=", "Z", "[", ":", ",", ":", ",", "x", "-", "self", ".", "patch_size", ":", "x", ",", "y", "-", "self", ".", "patch_size", ":", "y", "]", "\n", "\n", "patch_box", ".", "append", "(", "part", ")", "\n", "\n", "", "", "patch_tensor", "=", "torch", ".", "cat", "(", "patch_box", ",", "dim", "=", "0", ")", "\n", "return", "patch_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.merge_img_tensor": [[46, 76], ["copy.copy", "min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "range", "min", "min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "copy.copy.pop"], "methods", ["None"], ["", "def", "merge_img_tensor", "(", "self", ",", "list_img_tensor", ")", ":", "\n", "        ", "img_tensors", "=", "copy", ".", "copy", "(", "list_img_tensor", ")", "\n", "\n", "patch_size", "=", "self", ".", "patch_size", "*", "self", ".", "scale_factor", "\n", "stride", "=", "self", ".", "stride", "*", "self", ".", "scale_factor", "\n", "height", "=", "self", ".", "height", "*", "self", ".", "scale_factor", "\n", "width", "=", "self", ".", "width", "*", "self", ".", "scale_factor", "\n", "side", "=", "min", "(", "height", ",", "width", ",", "patch_size", ")", "\n", "delta", "=", "patch_size", "-", "side", "\n", "new_height", "=", "delta", "+", "height", "\n", "new_width", "=", "delta", "+", "width", "\n", "out", "=", "torch", ".", "zeros", "(", "(", "1", ",", "3", ",", "new_height", ",", "new_width", ")", ")", "\n", "mask", "=", "torch", ".", "zeros", "(", "(", "1", ",", "3", ",", "new_height", ",", "new_width", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "new_height", ",", "stride", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "0", ",", "new_width", ",", "stride", ")", ":", "\n", "                ", "x", "=", "min", "(", "new_height", ",", "i", "+", "patch_size", ")", "\n", "y", "=", "min", "(", "new_width", ",", "j", "+", "patch_size", ")", "\n", "mask_patch", "=", "torch", ".", "zeros", "(", "(", "1", ",", "3", ",", "new_height", ",", "new_width", ")", ")", "\n", "out_patch", "=", "torch", ".", "zeros", "(", "(", "1", ",", "3", ",", "new_height", ",", "new_width", ")", ")", "\n", "mask_patch", "[", ":", ",", ":", ",", "(", "x", "-", "patch_size", ")", ":", "x", ",", "(", "y", "-", "patch_size", ")", ":", "y", "]", "=", "1.0", "\n", "out_patch", "[", ":", ",", ":", ",", "(", "x", "-", "patch_size", ")", ":", "x", ",", "(", "y", "-", "patch_size", ")", ":", "y", "]", "=", "img_tensors", ".", "pop", "(", "0", ")", "\n", "mask", "=", "mask", "+", "mask_patch", "\n", "out", "=", "out", "+", "out_patch", "\n", "\n", "", "", "out", "=", "out", "/", "mask", "\n", "\n", "out", "=", "out", "[", ":", ",", ":", ",", "delta", "//", "2", ":", "new_height", "-", "delta", "//", "2", ",", "delta", "//", "2", ":", "new_width", "-", "delta", "//", "2", "]", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolder.__init__": [[79, 88], ["torch.Dataset.__init__", "os.path.join", "os.path.join", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "HR_dir", ",", "LR_dir", ",", "patch_size", ",", "upscale_factor", ",", "data_augmentation", ",", "\n", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "DatasetFromFolder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hr_image_filenames", "=", "[", "join", "(", "HR_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "HR_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "lr_image_filenames", "=", "[", "join", "(", "LR_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "upscale_factor", "=", "upscale_factor", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "data_augmentation", "=", "data_augmentation", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolder.__getitem__": [[89, 108], ["dataset.load_img", "dataset.load_img", "dataset.get_patch", "dataset.augment", "dataset.DatasetFromFolder.transform", "dataset.DatasetFromFolder.transform"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.get_patch", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.augment", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "target", "=", "load_img", "(", "self", ".", "hr_image_filenames", "[", "index", "]", ")", "\n", "name", "=", "self", ".", "hr_image_filenames", "[", "index", "]", "\n", "#lr_name = name[:39]+'LR/'+name[42:-4]+'x4.png'", "\n", "#lr_name = name[:39]+'LR_16x/'+name[42:]", "\n", "lr_name", "=", "name", "[", ":", "32", "]", "+", "'LR_16x/'", "+", "name", "[", "35", ":", "]", "\n", "input", "=", "load_img", "(", "lr_name", ")", "\n", "\n", "input", ",", "target", ",", "=", "get_patch", "(", "input", ",", "target", ",", "self", ".", "patch_size", ",", "self", ".", "upscale_factor", ")", "\n", "\n", "if", "self", ".", "data_augmentation", ":", "\n", "            ", "input", ",", "target", ",", "_", "=", "augment", "(", "input", ",", "target", ")", "\n", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "input", "=", "self", ".", "transform", "(", "input", ")", "\n", "target", "=", "self", ".", "transform", "(", "target", ")", "\n", "\n", "", "return", "input", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolder.__len__": [[109, 111], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "hr_image_filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__init__": [[114, 119], ["torch.Dataset.__init__", "os.path.join", "os.listdir", "dataset.is_image_file"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "lr_dir", ",", "upscale_factor", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "DatasetFromFolderEval", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "image_filenames", "=", "[", "join", "(", "lr_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "lr_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "upscale_factor", "=", "upscale_factor", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__getitem__": [[120, 131], ["dataset.load_img", "os.path.split", "dataset.rescale_img", "dataset.DatasetFromFolderEval.transform"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.rescale_img", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "input", "=", "load_img", "(", "self", ".", "image_filenames", "[", "index", "]", ")", "\n", "_", ",", "file", "=", "os", ".", "path", ".", "split", "(", "self", ".", "image_filenames", "[", "index", "]", ")", "\n", "\n", "bicubic", "=", "rescale_img", "(", "input", ",", "self", ".", "upscale_factor", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "#input = self.transform(input)", "\n", "            ", "bicubic", "=", "self", ".", "transform", "(", "bicubic", ")", "\n", "\n", "", "return", "bicubic", ",", "file", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__len__": [[132, 134], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_filenames", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file": [[12, 14], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "[", "\".png\"", ",", "\".jpg\"", ",", "\".jpeg\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.load_img": [[16, 20], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["", "def", "load_img", "(", "filepath", ")", ":", "\n", "    ", "img", "=", "Image", ".", "open", "(", "filepath", ")", ".", "convert", "(", "'RGB'", ")", "\n", "# y, _, _ = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.rescale_img": [[22, 27], ["tuple", "img_in.resize.resize", "int"], "function", ["None"], ["", "def", "rescale_img", "(", "img_in", ",", "scale", ")", ":", "\n", "    ", "size_in", "=", "img_in", ".", "size", "\n", "new_size_in", "=", "tuple", "(", "[", "int", "(", "x", "*", "scale", ")", "for", "x", "in", "size_in", "]", ")", "\n", "img_in", "=", "img_in", ".", "resize", "(", "new_size_in", ",", "resample", "=", "Image", ".", "BICUBIC", ")", "\n", "return", "img_in", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.get_patch": [[29, 52], ["img_in.crop.crop", "img_tar.crop.crop", "random.randrange", "random.randrange"], "function", ["None"], ["", "def", "get_patch", "(", "img_in", ",", "img_tar", ",", "patch_size", ",", "scale", ",", "ix", "=", "-", "1", ",", "iy", "=", "-", "1", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img_in", ".", "size", "\n", "#(th, tw) = (scale * ih, scale * iw)", "\n", "\n", "patch_mult", "=", "scale", "# if len(scale) > 1 else 1", "\n", "tp", "=", "patch_mult", "*", "patch_size", "\n", "ip", "=", "tp", "//", "scale", "\n", "\n", "if", "ix", "==", "-", "1", ":", "\n", "        ", "ix", "=", "random", ".", "randrange", "(", "0", ",", "iw", "-", "ip", "+", "1", ")", "\n", "", "if", "iy", "==", "-", "1", ":", "\n", "        ", "iy", "=", "random", ".", "randrange", "(", "0", ",", "ih", "-", "ip", "+", "1", ")", "\n", "\n", "", "(", "tx", ",", "ty", ")", "=", "(", "scale", "*", "ix", ",", "scale", "*", "iy", ")", "\n", "\n", "img_in", "=", "img_in", ".", "crop", "(", "(", "iy", ",", "ix", ",", "iy", "+", "ip", ",", "ix", "+", "ip", ")", ")", "\n", "img_tar", "=", "img_tar", ".", "crop", "(", "(", "ty", ",", "tx", ",", "ty", "+", "tp", ",", "tx", "+", "tp", ")", ")", "\n", "#img_bic = img_bic.crop((ty, tx, ty + tp, tx + tp))", "\n", "\n", "#info_patch = {", "\n", "#    'ix': ix, 'iy': iy, 'ip': ip, 'tx': tx, 'ty': ty, 'tp': tp}", "\n", "\n", "return", "img_in", ",", "img_tar", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.augment": [[54, 76], ["PIL.ImageOps.flip", "PIL.ImageOps.flip", "random.random", "random.random", "PIL.ImageOps.mirror", "PIL.ImageOps.mirror", "random.random", "img_in.rotate.rotate", "img_tar.rotate.rotate"], "function", ["None"], ["", "def", "augment", "(", "img_in", ",", "img_tar", ",", "flip_h", "=", "True", ",", "rot", "=", "True", ")", ":", "\n", "    ", "info_aug", "=", "{", "'flip_h'", ":", "False", ",", "'flip_v'", ":", "False", ",", "'trans'", ":", "False", "}", "\n", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", "and", "flip_h", ":", "\n", "        ", "img_in", "=", "ImageOps", ".", "flip", "(", "img_in", ")", "\n", "img_tar", "=", "ImageOps", ".", "flip", "(", "img_tar", ")", "\n", "#img_bic = ImageOps.flip(img_bic)", "\n", "info_aug", "[", "'flip_h'", "]", "=", "True", "\n", "\n", "", "if", "rot", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "img_in", "=", "ImageOps", ".", "mirror", "(", "img_in", ")", "\n", "img_tar", "=", "ImageOps", ".", "mirror", "(", "img_tar", ")", "\n", "#img_bic = ImageOps.mirror(img_bic)", "\n", "info_aug", "[", "'flip_v'", "]", "=", "True", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "img_in", "=", "img_in", ".", "rotate", "(", "180", ")", "\n", "img_tar", "=", "img_tar", ".", "rotate", "(", "180", ")", "\n", "#img_bic = img_bic.rotate(180)", "\n", "info_aug", "[", "'trans'", "]", "=", "True", "\n", "\n", "", "", "return", "img_in", ",", "img_tar", ",", "info_aug", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform": [[6, 9], ["torchvision.transforms.Compose", "torchvision.transforms.ToTensor"], "function", ["None"], ["def", "transform", "(", ")", ":", "\n", "    ", "return", "Compose", "(", "[", "\n", "ToTensor", "(", ")", ",", "\n", "#Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.get_training_set": [[18, 23], ["os.path.join", "os.path.join", "dataset.DatasetFromFolder", "data.transform"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["", "def", "get_training_set", "(", "data_dir", ",", "upscale_factor", ",", "patch_size", ",", "data_augmentation", ")", ":", "\n", "    ", "hr_dir", "=", "join", "(", "data_dir", ",", "'HR'", ")", "\n", "lr_dir", "=", "join", "(", "data_dir", ",", "'LR_16x'", ")", "\n", "return", "DatasetFromFolder", "(", "hr_dir", ",", "lr_dir", ",", "patch_size", ",", "upscale_factor", ",", "data_augmentation", ",", "\n", "transform", "=", "transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.get_eval_set": [[24, 27], ["dataset.DatasetFromFolderEval", "data.transform"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["", "def", "get_eval_set", "(", "lr_dir", ",", "upscale_factor", ")", ":", "\n", "    ", "return", "DatasetFromFolderEval", "(", "lr_dir", ",", "upscale_factor", ",", "\n", "transform", "=", "transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_16x.eval": [[77, 112], ["model.eval", "os.path.join", "os.path.join", "range", "print", "os.path.join", "os.path.join", "os.path.join", "LR_image.__len__", "time.time", "PIL.Image.open().convert", "PIL.Image.open().convert", "time.time", "chop_forward.clip", "PIL.Image.fromarray().save", "numpy.array().astype", "eval_16x.rgb2ycbcr", "numpy.array().astype", "eval_16x.rgb2ycbcr", "eval_16x.PSNR", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "os.path.join", "os.listdir", "dataset.is_image_file", "torch.no_grad", "torch.no_grad", "torch.no_grad", "eval_16x.chop_forward", "PIL.Image.open", "PIL.Image.open", "PIL.Image.fromarray", "numpy.array", "numpy.array", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.rgb2ycbcr", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.rgb2ycbcr", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.PSNR", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward"], ["def", "eval", "(", ")", ":", "\n", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "LR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'LR'", ")", "\n", "HR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'HR'", ")", "\n", "LR_image", "=", "[", "join", "(", "LR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "HR_image", "=", "[", "join", "(", "HR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "HR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "SR_image", "=", "[", "join", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'SR'", ")", ",", "x", ")", "for", "x", "in", "listdir", "(", "HR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "count", "=", "0", "\n", "avg_psnr_predicted", "=", "0.0", "\n", "\n", "for", "i", "in", "range", "(", "LR_image", ".", "__len__", "(", ")", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "target", "=", "Image", ".", "open", "(", "HR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR", "=", "Image", ".", "open", "(", "LR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "chop_forward", "(", "LR", ",", "model", ",", "opt", ".", "upscale_factor", ",", "opt", ".", "stride", ",", "opt", ".", "patch_size", ")", "\n", "\n", "", "t1", "=", "time", ".", "time", "(", ")", "\n", "#print(\"===> Processing: %s || Timer: %.4f sec.\" % (str(i), (t1 - t0)))", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clip", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "SR_image", "[", "i", "]", ")", "\n", "\n", "GT", "=", "np", ".", "array", "(", "target", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "GT_Y", "=", "rgb2ycbcr", "(", "GT", ")", "\n", "prediction", "=", "np", ".", "array", "(", "prediction", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "prediction_Y", "=", "rgb2ycbcr", "(", "prediction", ")", "\n", "psnr_predicted", "=", "PSNR", "(", "prediction_Y", ",", "GT_Y", ",", "shave_border", "=", "opt", ".", "upscale_factor", ")", "\n", "avg_psnr_predicted", "+=", "psnr_predicted", "\n", "count", "+=", "1", "\n", "\n", "", "print", "(", "\"PSNR_predicted=\"", ",", "avg_psnr_predicted", "/", "count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_16x.modcrop": [[113, 120], ["img.crop.crop"], "function", ["None"], ["", "def", "modcrop", "(", "img", ",", "modulo", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img", ".", "size", "\n", "ih", "=", "ih", "-", "(", "ih", "%", "modulo", ")", "\n", "iw", "=", "iw", "-", "(", "iw", "%", "modulo", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "0", ",", "ih", ",", "iw", ")", ")", "\n", "#y, cb, cr = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_16x.rgb2ycbcr": [[122, 139], ["img.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        float32, [0, 255]\n        float32, [0, 255]\n    '''", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# convert", "\n", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "\n", "return", "rlt", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_16x.PSNR": [[140, 148], ["math.sqrt", "numpy.mean", "math.log10"], "function", ["None"], ["", "def", "PSNR", "(", "pred", ",", "gt", ",", "shave_border", ")", ":", "\n", "    ", "pred", "=", "pred", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "gt", "=", "gt", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "imdff", "=", "pred", "-", "gt", "\n", "rmse", "=", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "if", "rmse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.eval_16x.chop_forward": [[155, 179], ["transform().unsqueeze", "img_splitter.split_img_tensor", "torch.TensorDataset", "torch.DataLoader", "enumerate", "img_splitter.merge_img_tensor", "SR.data[].numpy().transpose.data[].numpy().transpose", "torch.autograd.Variable().cuda", "range", "transform", "torch.no_grad", "torch.no_grad", "torch.no_grad", "network", "out_box.append", "SR.data[].numpy().transpose.data[].numpy", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.split_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.merge_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["def", "chop_forward", "(", "img", ",", "network", ",", "scale", ",", "stride", ",", "patch_size", ")", ":", "\n", "\n", "    ", "channel_swap", "=", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img_patch", "=", "img_splitter", ".", "split_img_tensor", "(", "img", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "img_patch", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "out_box", "=", "[", "]", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "input", "=", "Variable", "(", "batch", "[", "0", "]", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "network", "(", "input", ")", "\n", "\n", "", "for", "j", "in", "range", "(", "prediction", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_box", ".", "append", "(", "prediction", "[", "j", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "", "SR", "=", "img_splitter", ".", "merge_img_tensor", "(", "out_box", ")", "\n", "SR", "=", "SR", ".", "data", "[", "0", "]", ".", "numpy", "(", ")", ".", "transpose", "(", "channel_swap", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_print.__init__": [[56, 59], ["open"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "log_path", "=", "\"default.log\"", ")", ":", "\n", "        ", "self", ".", "terminal", "=", "sys", ".", "stdout", "\n", "self", ".", "log", "=", "open", "(", "log_path", ",", "'a'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_print.write": [[60, 63], ["utils_logger.logger_print.terminal.write", "utils_logger.logger_print.log.write"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_print.write", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_print.write"], ["", "def", "write", "(", "self", ",", "message", ")", ":", "\n", "        ", "self", ".", "terminal", ".", "write", "(", "message", ")", "\n", "self", ".", "log", ".", "write", "(", "message", ")", "# write the message", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_print.flush": [[64, 66], ["None"], "methods", ["None"], ["", "def", "flush", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.log": [[14, 16], ["print", "datetime.datetime.now().strftime", "datetime.datetime.now"], "function", ["None"], ["def", "log", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "print", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y-%m-%d %H:%M:%S:\"", ")", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_info": [[26, 46], ["logging.getLogger", "logging.getLogger.hasHandlers", "print", "print", "logging.Formatter", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.getLogger.setLevel", "logging.getLogger.addHandler", "logging.StreamHandler", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler"], "function", ["None"], ["def", "logger_info", "(", "logger_name", ",", "log_path", "=", "'default_logger.log'", ")", ":", "\n", "    ", "''' set up logger\n    modified by Kai Zhang (github: https://github.com/cszn)\n    '''", "\n", "log", "=", "logging", ".", "getLogger", "(", "logger_name", ")", "\n", "if", "log", ".", "hasHandlers", "(", ")", ":", "\n", "        ", "print", "(", "'LogHandlers exist!'", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'LogHandlers setup!'", ")", "\n", "level", "=", "logging", ".", "INFO", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s.%(msecs)03d : %(message)s'", ",", "datefmt", "=", "'%y-%m-%d %H:%M:%S'", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "log_path", ",", "mode", "=", "'a'", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "log", ".", "setLevel", "(", "level", ")", "\n", "log", ".", "addHandler", "(", "fh", ")", "\n", "# print(len(log.handlers))", "\n", "\n", "sh", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "sh", ".", "setFormatter", "(", "formatter", ")", "\n", "log", ".", "addHandler", "(", "sh", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ABPN_v3.__init__": [[6, 61], ["torch.Module.__init__", "model.ConvBlock", "model.Space_attention", "model.ConvBlock", "model.UpBlock", "model.DownBlock", "model.Time_attention", "model.UpBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.ConvBlock", "model.ConvBlock", "model.UpBlock", "torch.Conv2d", "torch.Conv2d", "model.ABPN_v3.modules", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dim", ")", ":", "\n", "        ", "super", "(", "ABPN_v3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "kernel_size", "=", "10", "\n", "pad", "=", "1", "\n", "stride", "=", "8", "\n", "\n", "self", ".", "feat1", "=", "ConvBlock", "(", "input_dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "SA0", "=", "Space_attention", "(", "2", "*", "dim", ",", "2", "*", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "self", ".", "feat2", "=", "ConvBlock", "(", "2", "*", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "# BP 1", "\n", "self", ".", "up1", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "down1", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA1", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP 2", "\n", "self", ".", "up2", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "down2", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA2", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP 3", "\n", "self", ".", "weight_up1", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up3", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down1", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down3", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA3", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP 4", "\n", "self", ".", "weight_up2", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up4", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down2", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down4", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA4", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP5", "\n", "self", ".", "weight_up3", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up5", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down3", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down5", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA5", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP6", "\n", "self", ".", "weight_up4", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up6", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "# reconstruction", "\n", "self", ".", "SR_conv1", "=", "ConvBlock", "(", "6", "*", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "SR_conv2", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "LR_conv1", "=", "ConvBlock", "(", "5", "*", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "LR_conv2", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SR_conv3", "=", "nn", ".", "Conv2d", "(", "dim", ",", "input_dim", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ABPN_v3.forward": [[62, 104], ["torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.ABPN_v3.feat1", "model.ABPN_v3.SA0", "model.ABPN_v3.feat2", "model.ABPN_v3.up1", "model.ABPN_v3.down1", "model.ABPN_v3.SA1", "model.ABPN_v3.up2", "model.ABPN_v3.down2", "model.ABPN_v3.SA2", "model.ABPN_v3.down3", "model.ABPN_v3.SA3", "model.ABPN_v3.down4", "model.ABPN_v3.SA4", "model.ABPN_v3.down5", "model.ABPN_v3.SA5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.ABPN_v3.SR_conv1", "model.ABPN_v3.SR_conv2", "model.ABPN_v3.LR_conv1", "model.ABPN_v3.LR_conv2", "model.ABPN_v3.SR_conv3", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.ABPN_v3.up3", "model.ABPN_v3.weight_up1", "model.ABPN_v3.weight_down1", "model.ABPN_v3.up4", "model.ABPN_v3.weight_up2", "model.ABPN_v3.weight_down2", "model.ABPN_v3.up5", "model.ABPN_v3.weight_up3", "model.ABPN_v3.weight_down3", "model.ABPN_v3.up6", "model.ABPN_v3.weight_up4"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# feature extraction", "\n", "        ", "bic_x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bicubic'", ")", "\n", "feat_x", "=", "self", ".", "feat1", "(", "bic_x", ")", "\n", "SA0", "=", "self", ".", "SA0", "(", "feat_x", ")", "\n", "feat_x", "=", "self", ".", "feat2", "(", "SA0", ")", "\n", "# BP 1", "\n", "up1", "=", "self", ".", "up1", "(", "feat_x", ")", "\n", "down1", "=", "self", ".", "down1", "(", "up1", ")", "\n", "down1", "=", "self", ".", "SA1", "(", "feat_x", ",", "down1", ")", "\n", "# BP 2", "\n", "up2", "=", "self", ".", "up2", "(", "down1", ")", "\n", "down2", "=", "self", ".", "down2", "(", "up2", ")", "\n", "down2", "=", "self", ".", "SA2", "(", "down1", ",", "down2", ")", "\n", "# BP 3", "\n", "up3", "=", "self", ".", "up3", "(", "down2", ")", "+", "self", ".", "weight_up1", "(", "up1", ")", "\n", "down3", "=", "self", ".", "down3", "(", "up3", ")", "\n", "down3", "=", "self", ".", "SA3", "(", "self", ".", "weight_down1", "(", "down1", ")", ",", "down3", ")", "\n", "# BP 4", "\n", "up4", "=", "self", ".", "up4", "(", "down3", ")", "+", "self", ".", "weight_up2", "(", "up2", ")", "\n", "down4", "=", "self", ".", "down4", "(", "up4", ")", "\n", "down4", "=", "self", ".", "SA4", "(", "self", ".", "weight_down2", "(", "down2", ")", ",", "down4", ")", "\n", "# BP 5", "\n", "up5", "=", "self", ".", "up5", "(", "down4", ")", "+", "self", ".", "weight_up3", "(", "up3", ")", "\n", "down5", "=", "self", ".", "down5", "(", "up5", ")", "\n", "down5", "=", "self", ".", "SA5", "(", "self", ".", "weight_down3", "(", "down3", ")", ",", "down5", ")", "\n", "# BP 6", "\n", "up6", "=", "self", ".", "up6", "(", "down5", ")", "+", "self", ".", "weight_up4", "(", "up4", ")", "\n", "# reconstruction", "\n", "HR_feat", "=", "torch", ".", "cat", "(", "(", "up1", ",", "up2", ",", "up3", ",", "up4", ",", "up5", ",", "up6", ")", ",", "1", ")", "\n", "LR_feat", "=", "torch", ".", "cat", "(", "(", "down1", ",", "down2", ",", "down3", ",", "down4", ",", "down5", ")", ",", "1", ")", "\n", "HR_feat", "=", "self", ".", "SR_conv1", "(", "HR_feat", ")", "\n", "HR_feat", "=", "self", ".", "SR_conv2", "(", "HR_feat", ")", "\n", "LR_feat", "=", "self", ".", "LR_conv1", "(", "LR_feat", ")", "\n", "LR_feat", "=", "self", ".", "LR_conv2", "(", "LR_feat", ")", "\n", "SR_res", "=", "self", ".", "SR_conv3", "(", "HR_feat", "+", "LR_feat", ")", "\n", "bic_x", "=", "F", ".", "interpolate", "(", "bic_x", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "SR", "=", "bic_x", "+", "SR_res", "\n", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ABPN_v5.__init__": [[107, 193], ["torch.Module.__init__", "model.ConvBlock", "model.Space_attention", "model.ConvBlock", "model.UpBlock", "model.DownBlock", "model.Time_attention", "model.UpBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.ConvBlock", "model.ConvBlock", "model.UpBlock", "torch.Conv2d", "torch.Conv2d", "model.ConvBlock", "model.Space_attention", "torch.Conv2d", "torch.Conv2d", "model.ABPN_v5.modules", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dim", ")", ":", "\n", "        ", "super", "(", "ABPN_v5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "kernel_size", "=", "6", "\n", "pad", "=", "1", "\n", "stride", "=", "4", "\n", "\n", "self", ".", "feat1", "=", "ConvBlock", "(", "input_dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "SA0", "=", "Space_attention", "(", "2", "*", "dim", ",", "2", "*", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "self", ".", "feat2", "=", "ConvBlock", "(", "2", "*", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "# BP 1", "\n", "self", ".", "up1", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "down1", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA1", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP 2", "\n", "self", ".", "up2", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "down2", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA2", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP 3", "\n", "self", ".", "weight_up1", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up3", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down1", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down3", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA3", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP 4", "\n", "self", ".", "weight_up2", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up4", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down2", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down4", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA4", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP5", "\n", "self", ".", "weight_up3", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up5", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down3", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down5", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA5", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP6", "\n", "self", ".", "weight_up4", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up6", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down4", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down6", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA6", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP7", "\n", "self", ".", "weight_up5", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up7", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down5", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down7", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA7", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP8", "\n", "self", ".", "weight_up6", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up8", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down6", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down8", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA8", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP9", "\n", "self", ".", "weight_up7", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up9", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down7", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down9", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA9", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP10", "\n", "self", ".", "weight_up8", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up10", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down8", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down10", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA10", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# reconstruction", "\n", "self", ".", "SR_conv1", "=", "ConvBlock", "(", "10", "*", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "SR_conv2", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "LR_conv1", "=", "ConvBlock", "(", "9", "*", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "LR_conv2", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SR_conv3", "=", "nn", ".", "Conv2d", "(", "dim", ",", "input_dim", ",", "3", ",", "1", ",", "1", ")", "\n", "# BP final", "\n", "self", ".", "final_feat1", "=", "ConvBlock", "(", "input_dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "final_SA0", "=", "Space_attention", "(", "2", "*", "dim", ",", "2", "*", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "self", ".", "final_feat2", "=", "nn", ".", "Conv2d", "(", "2", "*", "dim", ",", "input_dim", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ABPN_v5.forward": [[194, 260], ["torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.ABPN_v5.feat1", "model.ABPN_v5.SA0", "model.ABPN_v5.feat2", "model.ABPN_v5.up1", "model.ABPN_v5.down1", "model.ABPN_v5.SA1", "model.ABPN_v5.up2", "model.ABPN_v5.down2", "model.ABPN_v5.SA2", "model.ABPN_v5.down3", "model.ABPN_v5.SA3", "model.ABPN_v5.down4", "model.ABPN_v5.SA4", "model.ABPN_v5.down5", "model.ABPN_v5.SA5", "model.ABPN_v5.down6", "model.ABPN_v5.SA6", "model.ABPN_v5.down7", "model.ABPN_v5.SA7", "model.ABPN_v5.down8", "model.ABPN_v5.SA8", "model.ABPN_v5.down9", "model.ABPN_v5.SA9", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.ABPN_v5.SR_conv1", "model.ABPN_v5.SR_conv2", "model.ABPN_v5.LR_conv1", "model.ABPN_v5.LR_conv2", "model.ABPN_v5.SR_conv3", "model.ABPN_v5.final_feat1", "model.ABPN_v5.final_SA0", "model.ABPN_v5.final_feat2", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.ABPN_v5.up3", "model.ABPN_v5.weight_up1", "model.ABPN_v5.weight_down1", "model.ABPN_v5.up4", "model.ABPN_v5.weight_up2", "model.ABPN_v5.weight_down2", "model.ABPN_v5.up5", "model.ABPN_v5.weight_up3", "model.ABPN_v5.weight_down3", "model.ABPN_v5.up6", "model.ABPN_v5.weight_up4", "model.ABPN_v5.weight_down4", "model.ABPN_v5.up7", "model.ABPN_v5.weight_up5", "model.ABPN_v5.weight_down5", "model.ABPN_v5.up8", "model.ABPN_v5.weight_up6", "model.ABPN_v5.weight_down6", "model.ABPN_v5.up9", "model.ABPN_v5.weight_up7", "model.ABPN_v5.weight_down7", "model.ABPN_v5.up10", "model.ABPN_v5.weight_up8", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# feature extraction", "\n", "        ", "bic_x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bicubic'", ")", "\n", "feat_x", "=", "self", ".", "feat1", "(", "x", ")", "\n", "SA0", "=", "self", ".", "SA0", "(", "feat_x", ")", "\n", "feat_x", "=", "self", ".", "feat2", "(", "SA0", ")", "\n", "# BP 1", "\n", "up1", "=", "self", ".", "up1", "(", "feat_x", ")", "\n", "down1", "=", "self", ".", "down1", "(", "up1", ")", "\n", "down1", "=", "self", ".", "SA1", "(", "feat_x", ",", "down1", ")", "\n", "# BP 2", "\n", "up2", "=", "self", ".", "up2", "(", "down1", ")", "\n", "down2", "=", "self", ".", "down2", "(", "up2", ")", "\n", "down2", "=", "self", ".", "SA2", "(", "down1", ",", "down2", ")", "\n", "# BP 3", "\n", "up3", "=", "self", ".", "up3", "(", "down2", ")", "+", "self", ".", "weight_up1", "(", "up1", ")", "\n", "down3", "=", "self", ".", "down3", "(", "up3", ")", "\n", "down3", "=", "self", ".", "SA3", "(", "self", ".", "weight_down1", "(", "down1", ")", ",", "down3", ")", "\n", "# BP 4", "\n", "up4", "=", "self", ".", "up4", "(", "down3", ")", "+", "self", ".", "weight_up2", "(", "up2", ")", "\n", "down4", "=", "self", ".", "down4", "(", "up4", ")", "\n", "down4", "=", "self", ".", "SA4", "(", "self", ".", "weight_down2", "(", "down2", ")", ",", "down4", ")", "\n", "# BP 5", "\n", "up5", "=", "self", ".", "up5", "(", "down4", ")", "+", "self", ".", "weight_up3", "(", "up3", ")", "\n", "down5", "=", "self", ".", "down5", "(", "up5", ")", "\n", "down5", "=", "self", ".", "SA5", "(", "self", ".", "weight_down3", "(", "down3", ")", ",", "down5", ")", "\n", "# BP 6", "\n", "up6", "=", "self", ".", "up6", "(", "down5", ")", "+", "self", ".", "weight_up4", "(", "up4", ")", "\n", "down6", "=", "self", ".", "down6", "(", "up6", ")", "\n", "down6", "=", "self", ".", "SA6", "(", "self", ".", "weight_down4", "(", "down4", ")", ",", "down6", ")", "\n", "# BP 7", "\n", "up7", "=", "self", ".", "up7", "(", "down6", ")", "+", "self", ".", "weight_up5", "(", "up5", ")", "\n", "down7", "=", "self", ".", "down7", "(", "up7", ")", "\n", "down7", "=", "self", ".", "SA7", "(", "self", ".", "weight_down5", "(", "down5", ")", ",", "down7", ")", "\n", "# BP 8", "\n", "up8", "=", "self", ".", "up8", "(", "down7", ")", "+", "self", ".", "weight_up6", "(", "up6", ")", "\n", "down8", "=", "self", ".", "down8", "(", "up8", ")", "\n", "down8", "=", "self", ".", "SA8", "(", "self", ".", "weight_down6", "(", "down6", ")", ",", "down8", ")", "\n", "# BP 9", "\n", "up9", "=", "self", ".", "up9", "(", "down8", ")", "+", "self", ".", "weight_up7", "(", "up7", ")", "\n", "down9", "=", "self", ".", "down9", "(", "up9", ")", "\n", "down9", "=", "self", ".", "SA9", "(", "self", ".", "weight_down7", "(", "down7", ")", ",", "down9", ")", "\n", "# BP 10", "\n", "up10", "=", "self", ".", "up10", "(", "down9", ")", "+", "self", ".", "weight_up8", "(", "up8", ")", "\n", "# reconstruction", "\n", "HR_feat", "=", "torch", ".", "cat", "(", "(", "up1", ",", "up2", ",", "up3", ",", "up4", ",", "up5", ",", "up6", ",", "up7", ",", "up8", ",", "up9", ",", "up10", ")", ",", "1", ")", "\n", "LR_feat", "=", "torch", ".", "cat", "(", "(", "down1", ",", "down2", ",", "down3", ",", "down4", ",", "down5", ",", "down6", ",", "down7", ",", "down8", ",", "down9", ")", ",", "1", ")", "\n", "HR_feat", "=", "self", ".", "SR_conv1", "(", "HR_feat", ")", "\n", "HR_feat", "=", "self", ".", "SR_conv2", "(", "HR_feat", ")", "\n", "LR_feat", "=", "self", ".", "LR_conv1", "(", "LR_feat", ")", "\n", "LR_feat", "=", "self", ".", "LR_conv2", "(", "LR_feat", ")", "\n", "SR_res", "=", "self", ".", "SR_conv3", "(", "HR_feat", "+", "LR_feat", ")", "\n", "\n", "SR", "=", "bic_x", "+", "SR_res", "\n", "\n", "LR_res", "=", "x", "-", "F", ".", "interpolate", "(", "SR", ",", "scale_factor", "=", "0.25", ",", "mode", "=", "'bicubic'", ")", "\n", "LR_res", "=", "self", ".", "final_feat1", "(", "LR_res", ")", "\n", "LR_SA", "=", "self", ".", "final_SA0", "(", "LR_res", ")", "\n", "LR_res", "=", "self", ".", "final_feat2", "(", "LR_SA", ")", "\n", "\n", "SR_res", "=", "F", ".", "interpolate", "(", "LR_res", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "\n", "SR", "=", "SR", "+", "SR_res", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ABPN_v6.__init__": [[263, 338], ["torch.Module.__init__", "model.ConvBlock", "model.Space_attention", "model.ConvBlock", "model.UpBlock", "model.DownBlock", "model.Time_attention", "model.UpBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.UpBlock", "model.ConvBlock", "model.DownBlock", "model.Time_attention", "model.ConvBlock", "model.ConvBlock", "model.ConvBlock", "model.UpBlock", "torch.Conv2d", "torch.Conv2d", "model.ConvBlock", "model.Space_attention", "torch.Conv2d", "torch.Conv2d", "model.ABPN_v6.modules", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dim", ")", ":", "\n", "        ", "super", "(", "ABPN_v6", ",", "self", ")", ".", "__init__", "(", ")", "\n", "kernel_size", "=", "10", "\n", "pad", "=", "1", "\n", "stride", "=", "8", "\n", "\n", "self", ".", "feat1", "=", "ConvBlock", "(", "input_dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "SA0", "=", "Space_attention", "(", "2", "*", "dim", ",", "2", "*", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "self", ".", "feat2", "=", "ConvBlock", "(", "2", "*", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "# BP 1", "\n", "self", ".", "up1", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "down1", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA1", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP 2", "\n", "self", ".", "up2", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "down2", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA2", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP 3", "\n", "self", ".", "weight_up1", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up3", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down1", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down3", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA3", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP 4", "\n", "self", ".", "weight_up2", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up4", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down2", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down4", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA4", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP5", "\n", "self", ".", "weight_up3", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up5", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down3", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down5", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA5", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP6", "\n", "self", ".", "weight_up4", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up6", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "\n", "self", ".", "weight_down4", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down6", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA6", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP7", "\n", "self", ".", "weight_up5", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up7", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down5", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down7", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA7", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# BP8", "\n", "self", ".", "weight_up6", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "up8", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "weight_down6", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "down8", "=", "DownBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SA8", "=", "Time_attention", "(", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "# reconstruction", "\n", "self", ".", "SR_conv1", "=", "ConvBlock", "(", "8", "*", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "SR_conv2", "=", "ConvBlock", "(", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "LR_conv1", "=", "ConvBlock", "(", "8", "*", "dim", ",", "dim", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "LR_conv2", "=", "UpBlock", "(", "dim", ",", "dim", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "self", ".", "SR_conv3", "=", "nn", ".", "Conv2d", "(", "dim", ",", "input_dim", ",", "3", ",", "1", ",", "1", ")", "\n", "# BP final", "\n", "self", ".", "final_feat1", "=", "ConvBlock", "(", "input_dim", ",", "2", "*", "dim", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "final_SA0", "=", "Space_attention", "(", "2", "*", "dim", ",", "2", "*", "dim", ",", "1", ",", "1", ",", "0", ",", "1", ")", "\n", "self", ".", "final_feat2", "=", "nn", ".", "Conv2d", "(", "2", "*", "dim", ",", "input_dim", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ABPN_v6.forward": [[339, 399], ["torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.ABPN_v6.feat1", "model.ABPN_v6.SA0", "model.ABPN_v6.feat2", "model.ABPN_v6.up1", "model.ABPN_v6.down1", "model.ABPN_v6.SA1", "model.ABPN_v6.up2", "model.ABPN_v6.down2", "model.ABPN_v6.SA2", "model.ABPN_v6.down3", "model.ABPN_v6.SA3", "model.ABPN_v6.down4", "model.ABPN_v6.SA4", "model.ABPN_v6.down5", "model.ABPN_v6.SA5", "model.ABPN_v6.down6", "model.ABPN_v6.SA6", "model.ABPN_v6.down7", "model.ABPN_v6.SA7", "model.ABPN_v6.down8", "model.ABPN_v6.SA8", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.ABPN_v6.SR_conv1", "model.ABPN_v6.SR_conv2", "model.ABPN_v6.LR_conv1", "model.ABPN_v6.LR_conv2", "model.ABPN_v6.SR_conv3", "model.ABPN_v6.final_feat1", "model.ABPN_v6.final_SA0", "model.ABPN_v6.final_feat2", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.ABPN_v6.up3", "model.ABPN_v6.weight_up1", "model.ABPN_v6.weight_down1", "model.ABPN_v6.up4", "model.ABPN_v6.weight_up2", "model.ABPN_v6.weight_down2", "model.ABPN_v6.up5", "model.ABPN_v6.weight_up3", "model.ABPN_v6.weight_down3", "model.ABPN_v6.up6", "model.ABPN_v6.weight_up4", "model.ABPN_v6.weight_down4", "model.ABPN_v6.up7", "model.ABPN_v6.weight_up5", "model.ABPN_v6.weight_down5", "model.ABPN_v6.up8", "model.ABPN_v6.weight_up6", "model.ABPN_v6.weight_down6", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# feature extraction", "\n", "        ", "bic_x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bicubic'", ")", "\n", "feat_x", "=", "self", ".", "feat1", "(", "x", ")", "\n", "SA0", "=", "self", ".", "SA0", "(", "feat_x", ")", "\n", "feat_x", "=", "self", ".", "feat2", "(", "SA0", ")", "\n", "# BP 1", "\n", "up1", "=", "self", ".", "up1", "(", "feat_x", ")", "\n", "down1", "=", "self", ".", "down1", "(", "up1", ")", "\n", "down1", "=", "self", ".", "SA1", "(", "feat_x", ",", "down1", ")", "\n", "# BP 2", "\n", "up2", "=", "self", ".", "up2", "(", "down1", ")", "\n", "down2", "=", "self", ".", "down2", "(", "up2", ")", "\n", "down2", "=", "self", ".", "SA2", "(", "down1", ",", "down2", ")", "\n", "# BP 3", "\n", "up3", "=", "self", ".", "up3", "(", "down2", ")", "+", "self", ".", "weight_up1", "(", "up1", ")", "\n", "down3", "=", "self", ".", "down3", "(", "up3", ")", "\n", "down3", "=", "self", ".", "SA3", "(", "self", ".", "weight_down1", "(", "down1", ")", ",", "down3", ")", "\n", "# BP 4", "\n", "up4", "=", "self", ".", "up4", "(", "down3", ")", "+", "self", ".", "weight_up2", "(", "up2", ")", "\n", "down4", "=", "self", ".", "down4", "(", "up4", ")", "\n", "down4", "=", "self", ".", "SA4", "(", "self", ".", "weight_down2", "(", "down2", ")", ",", "down4", ")", "\n", "# BP 5", "\n", "up5", "=", "self", ".", "up5", "(", "down4", ")", "+", "self", ".", "weight_up3", "(", "up3", ")", "\n", "down5", "=", "self", ".", "down5", "(", "up5", ")", "\n", "down5", "=", "self", ".", "SA5", "(", "self", ".", "weight_down3", "(", "down3", ")", ",", "down5", ")", "\n", "# BP 6", "\n", "up6", "=", "self", ".", "up6", "(", "down5", ")", "+", "self", ".", "weight_up4", "(", "up4", ")", "\n", "down6", "=", "self", ".", "down6", "(", "up6", ")", "\n", "down6", "=", "self", ".", "SA6", "(", "self", ".", "weight_down4", "(", "down4", ")", ",", "down6", ")", "\n", "# BP 7", "\n", "up7", "=", "self", ".", "up7", "(", "down6", ")", "+", "self", ".", "weight_up5", "(", "up5", ")", "\n", "down7", "=", "self", ".", "down7", "(", "up7", ")", "\n", "down7", "=", "self", ".", "SA7", "(", "self", ".", "weight_down5", "(", "down5", ")", ",", "down7", ")", "\n", "# BP 8", "\n", "up8", "=", "self", ".", "up8", "(", "down7", ")", "+", "self", ".", "weight_up6", "(", "up6", ")", "\n", "down8", "=", "self", ".", "down8", "(", "up8", ")", "\n", "down8", "=", "self", ".", "SA8", "(", "self", ".", "weight_down6", "(", "down6", ")", ",", "down8", ")", "\n", "# reconstruction", "\n", "HR_feat", "=", "torch", ".", "cat", "(", "(", "up1", ",", "up2", ",", "up3", ",", "up4", ",", "up5", ",", "up6", ",", "up7", ",", "up8", ")", ",", "1", ")", "\n", "LR_feat", "=", "torch", ".", "cat", "(", "(", "down1", ",", "down2", ",", "down3", ",", "down4", ",", "down5", ",", "down6", ",", "down7", ",", "down8", ")", ",", "1", ")", "\n", "HR_feat", "=", "self", ".", "SR_conv1", "(", "HR_feat", ")", "\n", "HR_feat", "=", "self", ".", "SR_conv2", "(", "HR_feat", ")", "\n", "LR_feat", "=", "self", ".", "LR_conv1", "(", "LR_feat", ")", "\n", "LR_feat", "=", "self", ".", "LR_conv2", "(", "LR_feat", ")", "\n", "SR_res", "=", "self", ".", "SR_conv3", "(", "HR_feat", "+", "LR_feat", ")", "\n", "\n", "SR", "=", "bic_x", "+", "SR_res", "\n", "\n", "LR_res", "=", "x", "-", "F", ".", "interpolate", "(", "SR", ",", "scale_factor", "=", "0.125", ",", "mode", "=", "'bicubic'", ")", "\n", "LR_res", "=", "self", ".", "final_feat1", "(", "LR_res", ")", "\n", "LR_SA", "=", "self", ".", "final_SA0", "(", "LR_res", ")", "\n", "LR_res", "=", "self", ".", "final_feat2", "(", "LR_SA", ")", "\n", "\n", "SR_res", "=", "F", ".", "interpolate", "(", "LR_res", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "\n", "SR", "=", "SR", "+", "SR_res", "\n", "\n", "return", "SR", "\n", "############################################################################################", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ConvBlock.__init__": [[404, 410], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ConvBlock.forward": [[411, 415], ["model.ConvBlock.conv", "model.ConvBlock.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "return", "self", ".", "act", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.DeconvBlock.__init__": [[418, 424], ["super().__init__", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "DeconvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "deconv", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.DeconvBlock.forward": [[425, 429], ["model.DeconvBlock.deconv", "model.DeconvBlock.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "deconv", "(", "x", ")", "\n", "\n", "return", "self", ".", "act", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.UpBlock.__init__": [[432, 440], ["super().__init__", "model.DeconvBlock", "model.ConvBlock", "model.DeconvBlock", "model.ConvBlock", "model.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ")", ":", "\n", "        ", "super", "(", "UpBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "DeconvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3", "=", "DeconvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "local_weight1", "=", "ConvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "local_weight2", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.UpBlock.forward": [[441, 448], ["model.UpBlock.conv1", "model.UpBlock.conv2", "model.UpBlock.conv3", "model.UpBlock.local_weight2", "model.UpBlock.local_weight1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hr", "=", "self", ".", "conv1", "(", "x", ")", "\n", "lr", "=", "self", ".", "conv2", "(", "hr", ")", "\n", "residue", "=", "self", ".", "local_weight1", "(", "x", ")", "-", "lr", "\n", "h_residue", "=", "self", ".", "conv3", "(", "residue", ")", "\n", "hr_weight", "=", "self", ".", "local_weight2", "(", "hr", ")", "\n", "return", "hr_weight", "+", "h_residue", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.DownBlock.__init__": [[451, 459], ["super().__init__", "model.ConvBlock", "model.DeconvBlock", "model.ConvBlock", "model.ConvBlock", "model.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ")", ":", "\n", "        ", "super", "(", "DownBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "ConvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2", "=", "DeconvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "local_weight1", "=", "ConvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "local_weight2", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.DownBlock.forward": [[460, 467], ["model.DownBlock.conv1", "model.DownBlock.conv2", "model.DownBlock.conv3", "model.DownBlock.local_weight2", "model.DownBlock.local_weight1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "lr", "=", "self", ".", "conv1", "(", "x", ")", "\n", "hr", "=", "self", ".", "conv2", "(", "lr", ")", "\n", "residue", "=", "self", ".", "local_weight1", "(", "x", ")", "-", "hr", "\n", "l_residue", "=", "self", ".", "conv3", "(", "residue", ")", "\n", "lr_weight", "=", "self", ".", "local_weight2", "(", "lr", ")", "\n", "return", "lr_weight", "+", "l_residue", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ResnetBlock.__init__": [[470, 477], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv2d", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv2d", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act1", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "act2", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.ResnetBlock.forward": [[478, 487], ["model.ResnetBlock.conv1", "model.ResnetBlock.act1", "model.ResnetBlock.conv2", "model.ResnetBlock.act2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "act1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "out", "+", "x", "\n", "out", "=", "self", ".", "act2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Space_attention.__init__": [[490, 512], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", ":", "\n", "        ", "super", "(", "Space_attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "scale", "=", "scale", "\n", "# downscale = scale + 4", "\n", "\n", "self", ".", "K", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "Q", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "V", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "self", ".", "scale", "+", "2", ",", "stride", "=", "self", ".", "scale", ",", "padding", "=", "1", ")", "\n", "#self.bn = nn.BatchNorm2d(output_size)", "\n", "if", "kernel_size", "==", "1", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Space_attention.forward": [[514, 547], ["x.size", "model.Space_attention.K", "model.Space_attention.Q", "model.Space_attention.V", "model.Space_attention.view", "V_reshape.permute.permute.permute", "model.Space_attention.view", "model.Space_attention.view", "K_reshape.permute.permute.permute", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous.view", "model.Space_attention.local_weight", "model.Space_attention.pool", "model.Space_attention.pool", "torch.matmul.permute", "torch.matmul.permute", "x.size", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "K", "=", "self", ".", "K", "(", "x", ")", "\n", "Q", "=", "self", ".", "Q", "(", "x", ")", "\n", "# Q = F.interpolate(Q, scale_factor=1 / self.scale, mode='bicubic')", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "Q", "=", "self", ".", "pool", "(", "Q", ")", "\n", "", "else", ":", "\n", "            ", "Q", "=", "Q", "\n", "", "V", "=", "self", ".", "V", "(", "x", ")", "\n", "# V = F.interpolate(V, scale_factor=1 / self.scale, mode='bicubic')", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "V", "=", "self", ".", "pool", "(", "V", ")", "\n", "", "else", ":", "\n", "            ", "V", "=", "V", "\n", "", "V_reshape", "=", "V", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "V_reshape", "=", "V_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "# if self.type == 'softmax':", "\n", "Q_reshape", "=", "Q", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "\n", "K_reshape", "=", "K", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "K_reshape", "=", "K_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "KQ", "=", "torch", ".", "matmul", "(", "K_reshape", ",", "Q_reshape", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "KQ", ",", "dim", "=", "-", "1", ")", "\n", "\n", "vector", "=", "torch", ".", "matmul", "(", "attention", ",", "V_reshape", ")", "\n", "vector_reshape", "=", "vector", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "O", "=", "vector_reshape", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "x", ".", "size", "(", "2", ")", "//", "self", ".", "stride", ",", "x", ".", "size", "(", "3", ")", "//", "self", ".", "stride", ")", "\n", "W", "=", "self", ".", "local_weight", "(", "O", ")", "\n", "output", "=", "x", "+", "W", "\n", "#output = self.bn(output)", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Space_attention_v2.__init__": [[549, 569], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", ":", "\n", "        ", "super", "(", "Space_attention_v2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "scale", "=", "scale", "\n", "# downscale = scale + 4", "\n", "\n", "self", ".", "K", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "Q", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "V", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "self", ".", "scale", "+", "2", ",", "stride", "=", "self", ".", "scale", ",", "padding", "=", "1", ")", "\n", "#self.bn = nn.BatchNorm2d(output_size)", "\n", "if", "kernel_size", "==", "1", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Space_attention_v2.forward": [[571, 604], ["x.size", "model.Space_attention_v2.K", "model.Space_attention_v2.Q", "model.Space_attention_v2.V", "model.Space_attention_v2.view", "V_reshape.permute.permute.permute", "model.Space_attention_v2.view", "model.Space_attention_v2.view", "K_reshape.permute.permute.permute", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous.view", "model.Space_attention_v2.local_weight", "model.Space_attention_v2.pool", "model.Space_attention_v2.pool", "torch.matmul.permute", "torch.matmul.permute", "x.size", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "K", "=", "self", ".", "K", "(", "x", ")", "\n", "Q", "=", "self", ".", "Q", "(", "x", ")", "\n", "# Q = F.interpolate(Q, scale_factor=1 / self.scale, mode='bicubic')", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "Q", "=", "self", ".", "pool", "(", "Q", ")", "\n", "", "else", ":", "\n", "            ", "Q", "=", "Q", "\n", "", "V", "=", "self", ".", "V", "(", "x", ")", "\n", "# V = F.interpolate(V, scale_factor=1 / self.scale, mode='bicubic')", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "V", "=", "self", ".", "pool", "(", "V", ")", "\n", "", "else", ":", "\n", "            ", "V", "=", "V", "\n", "", "V_reshape", "=", "V", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "V_reshape", "=", "V_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "# if self.type == 'softmax':", "\n", "Q_reshape", "=", "Q", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "\n", "K_reshape", "=", "K", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "K_reshape", "=", "K_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "QV", "=", "torch", ".", "matmul", "(", "Q_reshape", ",", "V_reshape", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "QV", ",", "dim", "=", "-", "1", ")", "\n", "\n", "vector", "=", "torch", ".", "matmul", "(", "K_reshape", ",", "attention", ")", "\n", "vector_reshape", "=", "vector", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "O", "=", "vector_reshape", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "x", ".", "size", "(", "2", ")", "//", "self", ".", "stride", ",", "x", ".", "size", "(", "3", ")", "//", "self", ".", "stride", ")", "\n", "W", "=", "self", ".", "local_weight", "(", "O", ")", "\n", "output", "=", "x", "+", "W", "\n", "#output = self.bn(output)", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Time_attention.__init__": [[606, 628], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", ":", "\n", "        ", "super", "(", "Time_attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "scale", "=", "scale", "\n", "# downscale = scale + 4", "\n", "\n", "self", ".", "K", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "Q", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "V", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "self", ".", "scale", "+", "2", ",", "stride", "=", "self", ".", "scale", ",", "padding", "=", "1", ")", "\n", "#self.bn = nn.BatchNorm2d(output_size)", "\n", "if", "kernel_size", "==", "1", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Time_attention.forward": [[630, 664], ["x.size", "model.Time_attention.K", "model.Time_attention.Q", "model.Time_attention.V", "model.Time_attention.view", "V_reshape.permute.permute.permute", "model.Time_attention.view", "model.Time_attention.view", "K_reshape.permute.permute.permute", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous.view", "model.Time_attention.local_weight", "model.Time_attention.pool", "model.Time_attention.pool", "torch.matmul.permute", "torch.matmul.permute", "x.size", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "K", "=", "self", ".", "K", "(", "x", ")", "\n", "Q", "=", "self", ".", "Q", "(", "x", ")", "\n", "# Q = F.interpolate(Q, scale_factor=1 / self.scale, mode='bicubic')", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "Q", "=", "self", ".", "pool", "(", "Q", ")", "\n", "", "else", ":", "\n", "            ", "Q", "=", "Q", "\n", "", "V", "=", "self", ".", "V", "(", "y", ")", "\n", "# V = F.interpolate(V, scale_factor=1 / self.scale, mode='bicubic')", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "V", "=", "self", ".", "pool", "(", "V", ")", "\n", "", "else", ":", "\n", "            ", "V", "=", "V", "\n", "#attention = x", "\n", "", "V_reshape", "=", "V", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "V_reshape", "=", "V_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "# if self.type == 'softmax':", "\n", "Q_reshape", "=", "Q", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "\n", "K_reshape", "=", "K", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "K_reshape", "=", "K_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "KQ", "=", "torch", ".", "matmul", "(", "K_reshape", ",", "Q_reshape", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "KQ", ",", "dim", "=", "-", "1", ")", "\n", "vector", "=", "torch", ".", "matmul", "(", "attention", ",", "V_reshape", ")", "\n", "vector_reshape", "=", "vector", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "O", "=", "vector_reshape", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "x", ".", "size", "(", "2", ")", "//", "self", ".", "stride", ",", "x", ".", "size", "(", "3", ")", "//", "self", ".", "stride", ")", "\n", "W", "=", "self", ".", "local_weight", "(", "O", ")", "\n", "output", "=", "y", "+", "W", "\n", "#output = self.bn(output)", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Time_attention_v2.__init__": [[666, 686], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", ":", "\n", "        ", "super", "(", "Time_attention_v2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "scale", "=", "scale", "\n", "# downscale = scale + 4", "\n", "\n", "self", ".", "K", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "Q", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "V", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "self", ".", "scale", "+", "2", ",", "stride", "=", "self", ".", "scale", ",", "padding", "=", "1", ")", "\n", "#self.bn = nn.BatchNorm2d(output_size)", "\n", "if", "kernel_size", "==", "1", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Time_attention_v2.forward": [[688, 722], ["x.size", "model.Time_attention_v2.K", "model.Time_attention_v2.Q", "model.Time_attention_v2.V", "model.Time_attention_v2.view", "V_reshape.permute.permute.permute", "model.Time_attention_v2.view", "model.Time_attention_v2.view", "K_reshape.permute.permute.permute", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous.view", "model.Time_attention_v2.local_weight", "model.Time_attention_v2.pool", "model.Time_attention_v2.pool", "torch.matmul.permute", "torch.matmul.permute", "x.size", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "K", "=", "self", ".", "K", "(", "x", ")", "\n", "Q", "=", "self", ".", "Q", "(", "x", ")", "\n", "# Q = F.interpolate(Q, scale_factor=1 / self.scale, mode='bicubic')", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "Q", "=", "self", ".", "pool", "(", "Q", ")", "\n", "", "else", ":", "\n", "            ", "Q", "=", "Q", "\n", "", "V", "=", "self", ".", "V", "(", "y", ")", "\n", "# V = F.interpolate(V, scale_factor=1 / self.scale, mode='bicubic')", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "V", "=", "self", ".", "pool", "(", "V", ")", "\n", "", "else", ":", "\n", "            ", "V", "=", "V", "\n", "#attention = x", "\n", "", "V_reshape", "=", "V", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "V_reshape", "=", "V_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "# if self.type == 'softmax':", "\n", "Q_reshape", "=", "Q", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "\n", "K_reshape", "=", "K", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "K_reshape", "=", "K_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "QV", "=", "torch", ".", "matmul", "(", "Q_reshape", ",", "V_reshape", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "QV", ",", "dim", "=", "-", "1", ")", "\n", "vector", "=", "torch", ".", "matmul", "(", "K_reshape", ",", "attention", ")", "\n", "vector_reshape", "=", "vector", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "O", "=", "vector_reshape", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "x", ".", "size", "(", "2", ")", "//", "self", ".", "stride", ",", "x", ".", "size", "(", "3", ")", "//", "self", ".", "stride", ")", "\n", "W", "=", "self", ".", "local_weight", "(", "O", ")", "\n", "output", "=", "y", "+", "W", "\n", "#output = self.bn(output)", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Space_Time_Attention.__init__": [[724, 741], ["super().__init__", "model.Space_attention", "model.Space_attention", "model.ResnetBlock", "model.ResnetBlock", "model.Time_attention"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", ":", "\n", "        ", "super", "(", "Space_Time_Attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "# First Space Attention", "\n", "self", ".", "SA_x1", "=", "Space_attention", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", "\n", "self", ".", "SA_y1", "=", "Space_attention", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", "\n", "self", ".", "resblock_x1", "=", "ResnetBlock", "(", "output_size", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "resblock_y1", "=", "ResnetBlock", "(", "output_size", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "# First Time Attention", "\n", "self", ".", "TA_y1", "=", "Time_attention", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Space_Time_Attention.forward": [[742, 752], ["model.Space_Time_Attention.SA_x1", "model.Space_Time_Attention.SA_y1", "model.Space_Time_Attention.resblock_x1", "model.Space_Time_Attention.TA_y1", "model.Space_Time_Attention.resblock_y1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "# First Space attention", "\n", "        ", "x1", "=", "self", ".", "SA_x1", "(", "x", ")", "\n", "y1", "=", "self", ".", "SA_y1", "(", "y", ")", "\n", "x1", "=", "self", ".", "resblock_x1", "(", "x1", ")", "\n", "# First Time attention", "\n", "y1", "=", "self", ".", "TA_y1", "(", "x1", ",", "y1", ")", "\n", "y1", "=", "self", ".", "resblock_y1", "(", "y1", ")", "\n", "\n", "return", "x1", ",", "y1", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Space_Time_Attention_v2.__init__": [[755, 772], ["super().__init__", "model.Space_attention_v2", "model.Space_attention_v2", "model.ResnetBlock", "model.ResnetBlock", "model.Time_attention_v2"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", ":", "\n", "        ", "super", "(", "Space_Time_Attention_v2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "# First Space Attention", "\n", "self", ".", "SA_x1", "=", "Space_attention_v2", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", "\n", "self", ".", "SA_y1", "=", "Space_attention_v2", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", "\n", "self", ".", "resblock_x1", "=", "ResnetBlock", "(", "output_size", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "resblock_y1", "=", "ResnetBlock", "(", "output_size", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "# First Time Attention", "\n", "self", ".", "TA_y1", "=", "Time_attention_v2", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.model.Space_Time_Attention_v2.forward": [[773, 783], ["model.Space_Time_Attention_v2.SA_x1", "model.Space_Time_Attention_v2.SA_y1", "model.Space_Time_Attention_v2.resblock_x1", "model.Space_Time_Attention_v2.TA_y1", "model.Space_Time_Attention_v2.resblock_y1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "# First Space attention", "\n", "        ", "x1", "=", "self", ".", "SA_x1", "(", "x", ")", "\n", "y1", "=", "self", ".", "SA_y1", "(", "y", ")", "\n", "x1", "=", "self", ".", "resblock_x1", "(", "x1", ")", "\n", "# First Time attention", "\n", "y1", "=", "self", ".", "TA_y1", "(", "x1", ",", "y1", ")", "\n", "y1", "=", "self", ".", "resblock_y1", "(", "y1", ")", "\n", "\n", "return", "x1", ",", "y1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_8x.eval": [[60, 121], ["utils_logger.logger_info", "logging.getLogger", "model.eval", "model.named_parameters", "sum", "logging.getLogger.info", "collections.OrderedDict", "logging.getLogger.info", "logging.getLogger.info", "range", "map", "os.path.join", "os.path.join", "LR_image.__len__", "os.path.splitext", "logging.getLogger.info", "PIL.Image.open().convert", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "numpy.rot90", "numpy.rot90", "numpy.rot90", "numpy.fliplr", "numpy.rot90", "numpy.rot90", "numpy.rot90", "prediction.clip.clip", "PIL.Image.fromarray().save", "model.parameters", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "torch.no_grad", "torch.no_grad", "demo_8x.chop_forward", "demo_8x.chop_forward", "demo_8x.chop_forward", "demo_8x.chop_forward", "demo_8x.chop_forward", "demo_8x.chop_forward", "demo_8x.chop_forward", "demo_8x.chop_forward", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "x.numel", "PIL.Image.open", "PIL.Image.fromarray", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_info", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward"], ["def", "eval", "(", ")", ":", "\n", "    ", "utils_logger", ".", "logger_info", "(", "'AIM-track'", ",", "log_path", "=", "'AIM-track.log'", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'AIM-track'", ")", "\n", "model", ".", "eval", "(", ")", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "v", ".", "requires_grad", "=", "False", "\n", "\n", "# number of parameters", "\n", "", "number_parameters", "=", "sum", "(", "map", "(", "lambda", "x", ":", "x", ".", "numel", "(", ")", ",", "model", ".", "parameters", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "'Params number: {}'", ".", "format", "(", "number_parameters", ")", ")", "\n", "\n", "LR_filename", "=", "opt", ".", "image_dataset", "\n", "LR_image", "=", "[", "join", "(", "LR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "SR_image", "=", "[", "join", "(", "opt", ".", "image_output", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "# record PSNR, runtime", "\n", "test_results", "=", "OrderedDict", "(", ")", "\n", "test_results", "[", "'runtime'", "]", "=", "[", "]", "\n", "\n", "logger", ".", "info", "(", "opt", ".", "image_dataset", ")", "\n", "logger", ".", "info", "(", "opt", ".", "image_output", ")", "\n", "idx", "=", "0", "\n", "\n", "\n", "for", "i", "in", "range", "(", "LR_image", ".", "__len__", "(", ")", ")", ":", "\n", "\n", "        ", "idx", "+=", "1", "\n", "img_name", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "LR_image", "[", "i", "]", ")", "\n", "logger", ".", "info", "(", "'{:->4d}--> {:>10s}'", ".", "format", "(", "idx", ",", "img_name", "+", "ext", ")", ")", "\n", "\n", "LR", "=", "Image", ".", "open", "(", "LR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR_90", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_90", ")", "\n", "LR_180", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_180", ")", "\n", "LR_270", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_270", ")", "\n", "LR_f", "=", "LR", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_90f", "=", "LR_90", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_180f", "=", "LR_180", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_270f", "=", "LR_270", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred", "=", "chop_forward", "(", "LR", ",", "model", ")", "\n", "pred_90", "=", "chop_forward", "(", "LR_90", ",", "model", ")", "\n", "pred_180", "=", "chop_forward", "(", "LR_180", ",", "model", ")", "\n", "pred_270", "=", "chop_forward", "(", "LR_270", ",", "model", ")", "\n", "pred_f", "=", "chop_forward", "(", "LR_f", ",", "model", ")", "\n", "pred_90f", "=", "chop_forward", "(", "LR_90f", ",", "model", ")", "\n", "pred_180f", "=", "chop_forward", "(", "LR_180f", ",", "model", ")", "\n", "pred_270f", "=", "chop_forward", "(", "LR_270f", ",", "model", ")", "\n", "\n", "\n", "", "pred_90", "=", "np", ".", "rot90", "(", "pred_90", ",", "3", ")", "\n", "pred_180", "=", "np", ".", "rot90", "(", "pred_180", ",", "2", ")", "\n", "pred_270", "=", "np", ".", "rot90", "(", "pred_270", ",", "1", ")", "\n", "pred_f", "=", "np", ".", "fliplr", "(", "pred_f", ")", "\n", "pred_90f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_90f", ")", ",", "3", ")", "\n", "pred_180f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_180f", ")", ",", "2", ")", "\n", "pred_270f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_270f", ")", ",", "1", ")", "\n", "prediction", "=", "(", "pred", "+", "pred_90", "+", "pred_180", "+", "pred_270", "+", "pred_f", "+", "pred_90f", "+", "pred_180f", "+", "pred_270f", ")", "*", "255.0", "/", "8.0", "\n", "prediction", "=", "prediction", ".", "clip", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "SR_image", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_8x.modcrop": [[125, 132], ["img.crop.crop"], "function", ["None"], ["", "", "def", "modcrop", "(", "img", ",", "modulo", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img", ".", "size", "\n", "ih", "=", "ih", "-", "(", "ih", "%", "modulo", ")", "\n", "iw", "=", "iw", "-", "(", "iw", "%", "modulo", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "0", ",", "ih", ",", "iw", ")", ")", "\n", "#y, cb, cr = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_8x.rgb2ycbcr": [[134, 151], ["img.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        float32, [0, 255]\n        float32, [0, 255]\n    '''", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# convert", "\n", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "\n", "return", "rlt", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_8x.PSNR": [[152, 160], ["math.sqrt", "numpy.mean", "math.log10"], "function", ["None"], ["", "def", "PSNR", "(", "pred", ",", "gt", ",", "shave_border", ")", ":", "\n", "    ", "pred", "=", "pred", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "gt", "=", "gt", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "imdff", "=", "pred", "-", "gt", "\n", "rmse", "=", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "if", "rmse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_8x.chop_forward": [[167, 192], ["transform().unsqueeze", "img_splitter.split_img_tensor", "torch.TensorDataset", "torch.DataLoader", "enumerate", "img_splitter.merge_img_tensor", "SR.data[].numpy().transpose.data[].numpy().transpose", "torch.autograd.Variable().to", "range", "transform", "torch.no_grad", "torch.no_grad", "network", "out_box.append", "SR.data[].numpy().transpose.data[].numpy", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.split_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.merge_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["def", "chop_forward", "(", "img", ",", "network", ")", ":", "\n", "\n", "    ", "channel_swap", "=", "(", "1", ",", "2", ",", "0", ")", "\n", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img_patch", "=", "img_splitter", ".", "split_img_tensor", "(", "img", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "img_patch", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "out_box", "=", "[", "]", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "input", "=", "Variable", "(", "batch", "[", "0", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "network", "(", "input", ")", "\n", "\n", "\n", "", "for", "j", "in", "range", "(", "prediction", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_box", ".", "append", "(", "prediction", "[", "j", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "", "SR", "=", "img_splitter", ".", "merge_img_tensor", "(", "out_box", ")", "\n", "SR", "=", "SR", ".", "data", "[", "0", "]", ".", "numpy", "(", ")", ".", "transpose", "(", "channel_swap", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_16x.eval": [[57, 124], ["utils_logger.logger_info", "logging.getLogger", "model.eval", "model.named_parameters", "sum", "logging.getLogger.info", "os.path.join", "collections.OrderedDict", "logging.getLogger.info", "logging.getLogger.info", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "range", "logging.getLogger.info", "map", "os.path.join", "os.path.join", "LR_image.__len__", "os.path.splitext", "logging.getLogger.info", "PIL.Image.open().convert", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "test_results[].append", "numpy.rot90", "numpy.rot90", "numpy.rot90", "numpy.fliplr", "numpy.rot90", "numpy.rot90", "numpy.rot90", "prediction.clip.clip", "PIL.Image.fromarray().save", "model.parameters", "os.listdir", "dataset.is_image_file", "os.path.join", "os.listdir", "dataset.is_image_file", "torch.no_grad", "torch.no_grad", "AIM_ensemble_16x.chop_forward", "AIM_ensemble_16x.chop_forward", "AIM_ensemble_16x.chop_forward", "AIM_ensemble_16x.chop_forward", "AIM_ensemble_16x.chop_forward", "AIM_ensemble_16x.chop_forward", "AIM_ensemble_16x.chop_forward", "AIM_ensemble_16x.chop_forward", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "sum", "len", "x.numel", "PIL.Image.open", "PIL.Image.fromarray", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_info", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward"], ["def", "eval", "(", ")", ":", "\n", "    ", "utils_logger", ".", "logger_info", "(", "'AIM-track'", ",", "log_path", "=", "'AIM-track.log'", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'AIM-track'", ")", "\n", "model", ".", "eval", "(", ")", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "v", ".", "requires_grad", "=", "False", "\n", "\n", "# number of parameters", "\n", "", "number_parameters", "=", "sum", "(", "map", "(", "lambda", "x", ":", "x", ".", "numel", "(", ")", ",", "model", ".", "parameters", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "'Params number: {}'", ".", "format", "(", "number_parameters", ")", ")", "\n", "\n", "LR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'LR'", ")", "\n", "LR_image", "=", "[", "join", "(", "LR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "SR_image", "=", "[", "join", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'SR'", ")", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "# record PSNR, runtime", "\n", "test_results", "=", "OrderedDict", "(", ")", "\n", "test_results", "[", "'runtime'", "]", "=", "[", "]", "\n", "\n", "logger", ".", "info", "(", "opt", ".", "image_dataset", ")", "\n", "logger", ".", "info", "(", "opt", ".", "image_output", ")", "\n", "idx", "=", "0", "\n", "\n", "start", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "end", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "\n", "for", "i", "in", "range", "(", "LR_image", ".", "__len__", "(", ")", ")", ":", "\n", "\n", "        ", "idx", "+=", "1", "\n", "img_name", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "LR_image", "[", "i", "]", ")", "\n", "logger", ".", "info", "(", "'{:->4d}--> {:>10s}'", ".", "format", "(", "idx", ",", "img_name", "+", "ext", ")", ")", "\n", "\n", "LR", "=", "Image", ".", "open", "(", "LR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR_90", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_90", ")", "\n", "LR_180", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_180", ")", "\n", "LR_270", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_270", ")", "\n", "LR_f", "=", "LR", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_90f", "=", "LR_90", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_180f", "=", "LR_180", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_270f", "=", "LR_270", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred", ",", "time", "=", "chop_forward", "(", "LR", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_90", ",", "time_90", "=", "chop_forward", "(", "LR_90", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_180", ",", "time_180", "=", "chop_forward", "(", "LR_180", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_270", ",", "time_270", "=", "chop_forward", "(", "LR_270", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_f", ",", "time_f", "=", "chop_forward", "(", "LR_f", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_90f", ",", "time_90f", "=", "chop_forward", "(", "LR_90f", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_180f", ",", "time_180f", "=", "chop_forward", "(", "LR_180f", ",", "model", ",", "start", ",", "end", ")", "\n", "pred_270f", ",", "time_270f", "=", "chop_forward", "(", "LR_270f", ",", "model", ",", "start", ",", "end", ")", "\n", "\n", "", "compute_time", "=", "time", "+", "time_90", "+", "time_180", "+", "time_270", "+", "time_f", "+", "time_90f", "+", "time_180f", "+", "time_270f", "\n", "test_results", "[", "'runtime'", "]", ".", "append", "(", "compute_time", ")", "# milliseconds", "\n", "pred_90", "=", "np", ".", "rot90", "(", "pred_90", ",", "3", ")", "\n", "pred_180", "=", "np", ".", "rot90", "(", "pred_180", ",", "2", ")", "\n", "pred_270", "=", "np", ".", "rot90", "(", "pred_270", ",", "1", ")", "\n", "pred_f", "=", "np", ".", "fliplr", "(", "pred_f", ")", "\n", "pred_90f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_90f", ")", ",", "3", ")", "\n", "pred_180f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_180f", ")", ",", "2", ")", "\n", "pred_270f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_270f", ")", ",", "1", ")", "\n", "prediction", "=", "(", "pred", "+", "pred_90", "+", "pred_180", "+", "pred_270", "+", "pred_f", "+", "pred_90f", "+", "pred_180f", "+", "pred_270f", ")", "*", "255.0", "/", "8.0", "\n", "prediction", "=", "prediction", ".", "clip", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "SR_image", "[", "i", "]", ")", "\n", "\n", "", "ave_runtime", "=", "sum", "(", "test_results", "[", "'runtime'", "]", ")", "/", "len", "(", "test_results", "[", "'runtime'", "]", ")", "/", "1000.0", "\n", "logger", ".", "info", "(", "'------> Average runtime of ({}) is : {:.6f} seconds'", ".", "format", "(", "opt", ".", "image_dataset", ",", "ave_runtime", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_16x.modcrop": [[127, 134], ["img.crop.crop"], "function", ["None"], ["", "def", "modcrop", "(", "img", ",", "modulo", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img", ".", "size", "\n", "ih", "=", "ih", "-", "(", "ih", "%", "modulo", ")", "\n", "iw", "=", "iw", "-", "(", "iw", "%", "modulo", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "0", ",", "ih", ",", "iw", ")", ")", "\n", "#y, cb, cr = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_16x.rgb2ycbcr": [[136, 153], ["img.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        float32, [0, 255]\n        float32, [0, 255]\n    '''", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# convert", "\n", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "\n", "return", "rlt", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_16x.PSNR": [[154, 162], ["math.sqrt", "numpy.mean", "math.log10"], "function", ["None"], ["", "def", "PSNR", "(", "pred", ",", "gt", ",", "shave_border", ")", ":", "\n", "    ", "pred", "=", "pred", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "gt", "=", "gt", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "imdff", "=", "pred", "-", "gt", "\n", "rmse", "=", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "if", "rmse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.AIM_ensemble_16x.chop_forward": [[169, 198], ["transform().unsqueeze", "img_splitter.split_img_tensor", "torch.TensorDataset", "torch.DataLoader", "enumerate", "img_splitter.merge_img_tensor", "SR.data[].numpy().transpose.data[].numpy().transpose", "torch.autograd.Variable().to", "start.record", "end.record", "torch.cuda.synchronize", "torch.cuda.synchronize", "start.elapsed_time", "range", "transform", "torch.no_grad", "torch.no_grad", "network", "out_box.append", "SR.data[].numpy().transpose.data[].numpy", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.split_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.merge_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["def", "chop_forward", "(", "img", ",", "network", ",", "start", ",", "end", ")", ":", "\n", "\n", "    ", "channel_swap", "=", "(", "1", ",", "2", ",", "0", ")", "\n", "run_time", "=", "0", "\n", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img_patch", "=", "img_splitter", ".", "split_img_tensor", "(", "img", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "img_patch", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "out_box", "=", "[", "]", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "input", "=", "Variable", "(", "batch", "[", "0", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "start", ".", "record", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "network", "(", "input", ")", "\n", "", "end", ".", "record", "(", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "run_time", "+=", "start", ".", "elapsed_time", "(", "end", ")", "\n", "\n", "for", "j", "in", "range", "(", "prediction", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_box", ".", "append", "(", "prediction", "[", "j", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "", "SR", "=", "img_splitter", ".", "merge_img_tensor", "(", "out_box", ")", "\n", "SR", "=", "SR", ".", "data", "[", "0", "]", ".", "numpy", "(", ")", ".", "transpose", "(", "channel_swap", ")", "\n", "\n", "return", "SR", ",", "run_time", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_16x.eval": [[55, 116], ["utils_logger.logger_info", "logging.getLogger", "model.eval", "model.named_parameters", "sum", "logging.getLogger.info", "collections.OrderedDict", "logging.getLogger.info", "logging.getLogger.info", "range", "map", "os.path.join", "os.path.join", "LR_image.__len__", "os.path.splitext", "logging.getLogger.info", "PIL.Image.open().convert", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "numpy.rot90", "numpy.rot90", "numpy.rot90", "numpy.fliplr", "numpy.rot90", "numpy.rot90", "numpy.rot90", "prediction.clip.clip", "PIL.Image.fromarray().save", "model.parameters", "os.listdir", "dataset.is_image_file", "os.path.join", "os.listdir", "dataset.is_image_file", "torch.no_grad", "torch.no_grad", "demo_16x.chop_forward", "demo_16x.chop_forward", "demo_16x.chop_forward", "demo_16x.chop_forward", "demo_16x.chop_forward", "demo_16x.chop_forward", "demo_16x.chop_forward", "demo_16x.chop_forward", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "x.numel", "PIL.Image.open", "PIL.Image.fromarray", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_info", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward"], ["def", "eval", "(", ")", ":", "\n", "    ", "utils_logger", ".", "logger_info", "(", "'AIM-track'", ",", "log_path", "=", "'AIM-track.log'", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'AIM-track'", ")", "\n", "model", ".", "eval", "(", ")", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "v", ".", "requires_grad", "=", "False", "\n", "\n", "# number of parameters", "\n", "", "number_parameters", "=", "sum", "(", "map", "(", "lambda", "x", ":", "x", ".", "numel", "(", ")", ",", "model", ".", "parameters", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "'Params number: {}'", ".", "format", "(", "number_parameters", ")", ")", "\n", "\n", "LR_filename", "=", "opt", ".", "image_dataset", "\n", "LR_image", "=", "[", "join", "(", "LR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "SR_image", "=", "[", "join", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'SR'", ")", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "# record PSNR, runtime", "\n", "test_results", "=", "OrderedDict", "(", ")", "\n", "test_results", "[", "'runtime'", "]", "=", "[", "]", "\n", "\n", "logger", ".", "info", "(", "opt", ".", "image_dataset", ")", "\n", "logger", ".", "info", "(", "opt", ".", "image_output", ")", "\n", "idx", "=", "0", "\n", "\n", "\n", "for", "i", "in", "range", "(", "LR_image", ".", "__len__", "(", ")", ")", ":", "\n", "\n", "        ", "idx", "+=", "1", "\n", "img_name", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "LR_image", "[", "i", "]", ")", "\n", "logger", ".", "info", "(", "'{:->4d}--> {:>10s}'", ".", "format", "(", "idx", ",", "img_name", "+", "ext", ")", ")", "\n", "\n", "LR", "=", "Image", ".", "open", "(", "LR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR_90", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_90", ")", "\n", "LR_180", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_180", ")", "\n", "LR_270", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_270", ")", "\n", "LR_f", "=", "LR", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_90f", "=", "LR_90", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_180f", "=", "LR_180", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_270f", "=", "LR_270", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred", "=", "chop_forward", "(", "LR", ",", "model", ")", "\n", "pred_90", "=", "chop_forward", "(", "LR_90", ",", "model", ")", "\n", "pred_180", "=", "chop_forward", "(", "LR_180", ",", "model", ")", "\n", "pred_270", "=", "chop_forward", "(", "LR_270", ",", "model", ")", "\n", "pred_f", "=", "chop_forward", "(", "LR_f", ",", "model", ")", "\n", "pred_90f", "=", "chop_forward", "(", "LR_90f", ",", "model", ")", "\n", "pred_180f", "=", "chop_forward", "(", "LR_180f", ",", "model", ")", "\n", "pred_270f", "=", "chop_forward", "(", "LR_270f", ",", "model", ")", "\n", "\n", "\n", "", "pred_90", "=", "np", ".", "rot90", "(", "pred_90", ",", "3", ")", "\n", "pred_180", "=", "np", ".", "rot90", "(", "pred_180", ",", "2", ")", "\n", "pred_270", "=", "np", ".", "rot90", "(", "pred_270", ",", "1", ")", "\n", "pred_f", "=", "np", ".", "fliplr", "(", "pred_f", ")", "\n", "pred_90f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_90f", ")", ",", "3", ")", "\n", "pred_180f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_180f", ")", ",", "2", ")", "\n", "pred_270f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_270f", ")", ",", "1", ")", "\n", "prediction", "=", "(", "pred", "+", "pred_90", "+", "pred_180", "+", "pred_270", "+", "pred_f", "+", "pred_90f", "+", "pred_180f", "+", "pred_270f", ")", "*", "255.0", "/", "8.0", "\n", "prediction", "=", "prediction", ".", "clip", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "SR_image", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_16x.modcrop": [[120, 127], ["img.crop.crop"], "function", ["None"], ["", "", "def", "modcrop", "(", "img", ",", "modulo", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img", ".", "size", "\n", "ih", "=", "ih", "-", "(", "ih", "%", "modulo", ")", "\n", "iw", "=", "iw", "-", "(", "iw", "%", "modulo", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "0", ",", "ih", ",", "iw", ")", ")", "\n", "#y, cb, cr = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_16x.rgb2ycbcr": [[129, 146], ["img.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        float32, [0, 255]\n        float32, [0, 255]\n    '''", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# convert", "\n", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "\n", "return", "rlt", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_16x.PSNR": [[147, 155], ["math.sqrt", "numpy.mean", "math.log10"], "function", ["None"], ["", "def", "PSNR", "(", "pred", ",", "gt", ",", "shave_border", ")", ":", "\n", "    ", "pred", "=", "pred", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "gt", "=", "gt", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "imdff", "=", "pred", "-", "gt", "\n", "rmse", "=", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "if", "rmse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_16x.chop_forward": [[162, 188], ["transform().unsqueeze", "img_splitter.split_img_tensor", "torch.TensorDataset", "torch.DataLoader", "enumerate", "img_splitter.merge_img_tensor", "SR.data[].numpy().transpose.data[].numpy().transpose", "torch.autograd.Variable().to", "range", "transform", "torch.no_grad", "torch.no_grad", "network", "out_box.append", "SR.data[].numpy().transpose.data[].numpy", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.split_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.merge_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["def", "chop_forward", "(", "img", ",", "network", ")", ":", "\n", "\n", "    ", "channel_swap", "=", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img_patch", "=", "img_splitter", ".", "split_img_tensor", "(", "img", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "img_patch", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "out_box", "=", "[", "]", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "input", "=", "Variable", "(", "batch", "[", "0", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "network", "(", "input", ")", "\n", "\n", "\n", "", "for", "j", "in", "range", "(", "prediction", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_box", ".", "append", "(", "prediction", "[", "j", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "", "SR", "=", "img_splitter", ".", "merge_img_tensor", "(", "out_box", ")", "\n", "SR", "=", "SR", ".", "data", "[", "0", "]", ".", "numpy", "(", ")", ".", "transpose", "(", "channel_swap", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Relabel.__init__": [[23, 26], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "olabel", ",", "nlabel", ")", ":", "\n", "        ", "self", ".", "olabel", "=", "olabel", "\n", "self", ".", "nlabel", "=", "nlabel", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Relabel.__call__": [[27, 31], ["isinstance"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "assert", "isinstance", "(", "tensor", ",", "torch", ".", "LongTensor", ")", ",", "'tensor needs to be LongTensor'", "\n", "tensor", "[", "tensor", "==", "self", ".", "olabel", "]", "=", "self", ".", "nlabel", "\n", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.ToLabel.__call__": [[35, 39], ["numpy.array", "torch.from_numpy().long().unsqueeze", "torch.from_numpy().long", "torch.from_numpy"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "image", ")", ":", "\n", "        ", "arr", "=", "np", ".", "array", "(", "image", ")", "\n", "label_arr", "=", "torch", ".", "from_numpy", "(", "arr", ")", ".", "long", "(", ")", ".", "unsqueeze", "(", "0", ")", "\n", "return", "label_arr", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__init__": [[43, 47], ["data_transform.colormap", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.colormap"], ["    ", "def", "__init__", "(", "self", ",", "n", "=", "22", ")", ":", "\n", "        ", "self", ".", "cmap", "=", "colormap", "(", "256", ")", "\n", "self", ".", "cmap", "[", "n", "]", "=", "self", ".", "cmap", "[", "-", "1", "]", "\n", "self", ".", "cmap", "=", "torch", ".", "from_numpy", "(", "self", ".", "cmap", "[", ":", "n", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.Colorize.__call__": [[48, 60], ["gray_image.size", "torch.ByteTensor().fill_", "range", "len", "torch.ByteTensor"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "gray_image", ")", ":", "\n", "        ", "size", "=", "gray_image", ".", "size", "(", ")", "\n", "color_image", "=", "torch", ".", "ByteTensor", "(", "3", ",", "size", "[", "1", "]", ",", "size", "[", "2", "]", ")", ".", "fill_", "(", "0", ")", "\n", "\n", "for", "label", "in", "range", "(", "1", ",", "len", "(", "self", ".", "cmap", ")", ")", ":", "\n", "            ", "mask", "=", "gray_image", "[", "0", "]", "==", "label", "\n", "\n", "color_image", "[", "0", "]", "[", "mask", "]", "=", "self", ".", "cmap", "[", "label", "]", "[", "0", "]", "\n", "color_image", "[", "1", "]", "[", "mask", "]", "=", "self", ".", "cmap", "[", "label", "]", "[", "1", "]", "\n", "color_image", "[", "2", "]", "[", "mask", "]", "=", "self", ".", "cmap", "[", "label", "]", "[", "2", "]", "\n", "\n", "", "return", "color_image", "", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data_transform.colormap": [[6, 20], ["numpy.zeros().astype", "numpy.arange", "numpy.zeros", "numpy.arange", "numpy.array", "numpy.zeros"], "function", ["None"], ["def", "colormap", "(", "n", ")", ":", "\n", "    ", "cmap", "=", "np", ".", "zeros", "(", "[", "n", ",", "3", "]", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "for", "i", "in", "np", ".", "arange", "(", "n", ")", ":", "\n", "        ", "r", ",", "g", ",", "b", "=", "np", ".", "zeros", "(", "3", ")", "\n", "\n", "for", "j", "in", "np", ".", "arange", "(", "8", ")", ":", "\n", "            ", "r", "=", "r", "+", "(", "1", "<<", "(", "7", "-", "j", ")", ")", "*", "(", "(", "i", "&", "(", "1", "<<", "(", "3", "*", "j", ")", ")", ")", ">>", "(", "3", "*", "j", ")", ")", "\n", "g", "=", "g", "+", "(", "1", "<<", "(", "7", "-", "j", ")", ")", "*", "(", "(", "i", "&", "(", "1", "<<", "(", "3", "*", "j", "+", "1", ")", ")", ")", ">>", "(", "3", "*", "j", "+", "1", ")", ")", "\n", "b", "=", "b", "+", "(", "1", "<<", "(", "7", "-", "j", ")", ")", "*", "(", "(", "i", "&", "(", "1", "<<", "(", "3", "*", "j", "+", "2", ")", ")", ")", ">>", "(", "3", "*", "j", "+", "2", ")", ")", "\n", "\n", "", "cmap", "[", "i", ",", ":", "]", "=", "np", ".", "array", "(", "[", "r", ",", "g", ",", "b", "]", ")", "\n", "\n", "", "return", "cmap", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.main_4x.train": [[50, 82], ["model.train", "enumerate", "print", "optimizer.zero_grad", "time.time", "model", "L1_criterion", "time.time", "L1_criterion.backward", "optimizer.step", "writer.add_scalar", "print", "torch.autograd.Variable", "torch.autograd.Variable", "input.cuda.cuda", "target.cuda.cuda", "L1_criterion.item", "len", "len"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.main_16x.train"], ["def", "train", "(", "epoch", ",", "writer", ")", ":", "\n", "    ", "epoch_loss", "=", "0", "\n", "model", ".", "train", "(", ")", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "training_data_loader", ",", "1", ")", ":", "\n", "        ", "input", ",", "target", "=", "Variable", "(", "batch", "[", "0", "]", ")", ",", "Variable", "(", "batch", "[", "1", "]", ")", "\n", "if", "cuda", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "target", "=", "target", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "prediction", "=", "model", "(", "input", ")", "\n", "\n", "# Reconstruction loss", "\n", "loss", "=", "L1_criterion", "(", "prediction", ",", "target", ")", "\n", "#loss_feat = L1_criterion(SR_feat, HR_feat) / HR_feat.size(0)", "\n", "#loss = loss_recons + kl_div", "\n", "\n", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "epoch_loss", "+=", "loss", ".", "data", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Logs", "\n", "writer", ".", "add_scalar", "(", "'loss/train/reconstruction'", ",", "loss", ".", "item", "(", ")", ",", "epoch", ",", "iteration", ")", "\n", "print", "(", "\"===> Epoch[{}]({}/{}): Loss: {:.4f} || Timer: {:.4f} sec.\"", ".", "format", "(", "epoch", ",", "iteration", ",", "\n", "len", "(", "training_data_loader", ")", ",", "loss", ".", "data", ",", "\n", "(", "t1", "-", "t0", ")", ")", ")", "\n", "\n", "", "print", "(", "\"===> Epoch {} Complete: Avg. Loss: {:.4f}\"", ".", "format", "(", "epoch", ",", "epoch_loss", "/", "len", "(", "training_data_loader", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.main_4x.print_network": [[84, 90], ["net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.main_4x.checkpoint": [[92, 97], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "model.state_dict"], "function", ["None"], ["", "def", "checkpoint", "(", "epoch", ")", ":", "\n", "    ", "model_out_path", "=", "opt", ".", "save_folder", "+", "opt", ".", "model_type", "+", "\"_epoch_{}.pth\"", ".", "format", "(", "\n", "epoch", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_out_path", ")", "\n", "print", "(", "\"Checkpoint saved to {}\"", ".", "format", "(", "model_out_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.main_16x.train": [[52, 78], ["model.train", "enumerate", "optimizer.zero_grad", "time.time", "model", "L1_criterion", "time.time", "L1_criterion.backward", "optimizer.step", "torch.autograd.Variable", "torch.autograd.Variable", "input.cuda.cuda", "target.cuda.cuda", "print", "len"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.main_16x.train"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "epoch_loss", "=", "0", "\n", "model", ".", "train", "(", ")", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "training_data_loader", ",", "1", ")", ":", "\n", "        ", "input", ",", "target", "=", "Variable", "(", "batch", "[", "0", "]", ")", ",", "Variable", "(", "batch", "[", "1", "]", ")", "\n", "if", "cuda", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "target", "=", "target", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "prediction", "=", "model", "(", "input", ")", "\n", "\n", "# Reconstruction loss", "\n", "loss", "=", "L1_criterion", "(", "prediction", ",", "target", ")", "\n", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "epoch_loss", "+=", "loss", ".", "data", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "iteration", "%", "10", "==", "0", ":", "\n", "            ", "print", "(", "\"===> Epoch[{}]({}/{}): Loss_recon: {:.4f} || Timer: {:.4f} sec.\"", ".", "format", "(", "epoch", ",", "iteration", ",", "\n", "len", "(", "training_data_loader", ")", ",", "loss", ".", "data", ",", "\n", "(", "t1", "-", "t0", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.main_16x.print_network": [[82, 88], ["net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "", "", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.main_16x.checkpoint": [[90, 95], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "model.state_dict"], "function", ["None"], ["", "def", "checkpoint", "(", "epoch", ")", ":", "\n", "    ", "model_out_path", "=", "opt", ".", "save_folder", "+", "opt", ".", "model_type", "+", "\"_epoch_{}.pth\"", ".", "format", "(", "\n", "epoch", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_out_path", ")", "\n", "print", "(", "\"Checkpoint saved to {}\"", ".", "format", "(", "model_out_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.eval": [[58, 119], ["utils_logger.logger_info", "logging.getLogger", "model.eval", "model.named_parameters", "sum", "logging.getLogger.info", "collections.OrderedDict", "logging.getLogger.info", "logging.getLogger.info", "range", "map", "os.path.join", "os.path.join", "LR_image.__len__", "os.path.splitext", "logging.getLogger.info", "PIL.Image.open().convert", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "Image.open().convert.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "LR.transpose.transpose", "numpy.rot90", "numpy.rot90", "numpy.rot90", "numpy.fliplr", "numpy.rot90", "numpy.rot90", "numpy.rot90", "prediction.clip.clip", "PIL.Image.fromarray().save", "model.parameters", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "torch.no_grad", "torch.no_grad", "demo_4x.chop_forward", "demo_4x.chop_forward", "demo_4x.chop_forward", "demo_4x.chop_forward", "demo_4x.chop_forward", "demo_4x.chop_forward", "demo_4x.chop_forward", "demo_4x.chop_forward", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "x.numel", "PIL.Image.open", "PIL.Image.fromarray", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.utils_logger.logger_info", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward"], ["def", "eval", "(", ")", ":", "\n", "    ", "utils_logger", ".", "logger_info", "(", "'AIM-track'", ",", "log_path", "=", "'AIM-track.log'", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'AIM-track'", ")", "\n", "model", ".", "eval", "(", ")", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "v", ".", "requires_grad", "=", "False", "\n", "\n", "# number of parameters", "\n", "", "number_parameters", "=", "sum", "(", "map", "(", "lambda", "x", ":", "x", ".", "numel", "(", ")", ",", "model", ".", "parameters", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "'Params number: {}'", ".", "format", "(", "number_parameters", ")", ")", "\n", "\n", "LR_filename", "=", "opt", ".", "image_dataset", "\n", "LR_image", "=", "[", "join", "(", "LR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "SR_image", "=", "[", "join", "(", "opt", ".", "image_output", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "# record PSNR, runtime", "\n", "test_results", "=", "OrderedDict", "(", ")", "\n", "test_results", "[", "'runtime'", "]", "=", "[", "]", "\n", "\n", "logger", ".", "info", "(", "opt", ".", "image_dataset", ")", "\n", "logger", ".", "info", "(", "opt", ".", "image_output", ")", "\n", "idx", "=", "0", "\n", "\n", "\n", "for", "i", "in", "range", "(", "LR_image", ".", "__len__", "(", ")", ")", ":", "\n", "\n", "        ", "idx", "+=", "1", "\n", "img_name", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "LR_image", "[", "i", "]", ")", "\n", "logger", ".", "info", "(", "'{:->4d}--> {:>10s}'", ".", "format", "(", "idx", ",", "img_name", "+", "ext", ")", ")", "\n", "\n", "LR", "=", "Image", ".", "open", "(", "LR_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR_90", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_90", ")", "\n", "LR_180", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_180", ")", "\n", "LR_270", "=", "LR", ".", "transpose", "(", "Image", ".", "ROTATE_270", ")", "\n", "LR_f", "=", "LR", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_90f", "=", "LR_90", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_180f", "=", "LR_180", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "LR_270f", "=", "LR_270", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred", "=", "chop_forward", "(", "LR", ",", "model", ")", "\n", "pred_90", "=", "chop_forward", "(", "LR_90", ",", "model", ")", "\n", "pred_180", "=", "chop_forward", "(", "LR_180", ",", "model", ")", "\n", "pred_270", "=", "chop_forward", "(", "LR_270", ",", "model", ")", "\n", "pred_f", "=", "chop_forward", "(", "LR_f", ",", "model", ")", "\n", "pred_90f", "=", "chop_forward", "(", "LR_90f", ",", "model", ")", "\n", "pred_180f", "=", "chop_forward", "(", "LR_180f", ",", "model", ")", "\n", "pred_270f", "=", "chop_forward", "(", "LR_270f", ",", "model", ")", "\n", "\n", "\n", "", "pred_90", "=", "np", ".", "rot90", "(", "pred_90", ",", "3", ")", "\n", "pred_180", "=", "np", ".", "rot90", "(", "pred_180", ",", "2", ")", "\n", "pred_270", "=", "np", ".", "rot90", "(", "pred_270", ",", "1", ")", "\n", "pred_f", "=", "np", ".", "fliplr", "(", "pred_f", ")", "\n", "pred_90f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_90f", ")", ",", "3", ")", "\n", "pred_180f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_180f", ")", ",", "2", ")", "\n", "pred_270f", "=", "np", ".", "rot90", "(", "np", ".", "fliplr", "(", "pred_270f", ")", ",", "1", ")", "\n", "prediction", "=", "(", "pred", "+", "pred_90", "+", "pred_180", "+", "pred_270", "+", "pred_f", "+", "pred_90f", "+", "pred_180f", "+", "pred_270f", ")", "*", "255.0", "/", "8.0", "\n", "prediction", "=", "prediction", ".", "clip", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "SR_image", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.modcrop": [[124, 131], ["img.crop.crop"], "function", ["None"], ["", "", "def", "modcrop", "(", "img", ",", "modulo", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img", ".", "size", "\n", "ih", "=", "ih", "-", "(", "ih", "%", "modulo", ")", "\n", "iw", "=", "iw", "-", "(", "iw", "%", "modulo", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "0", ",", "ih", ",", "iw", ")", ")", "\n", "#y, cb, cr = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.rgb2ycbcr": [[133, 150], ["img.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        float32, [0, 255]\n        float32, [0, 255]\n    '''", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# convert", "\n", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "\n", "return", "rlt", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.PSNR": [[151, 159], ["math.sqrt", "numpy.mean", "math.log10"], "function", ["None"], ["", "def", "PSNR", "(", "pred", ",", "gt", ",", "shave_border", ")", ":", "\n", "    ", "pred", "=", "pred", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "gt", "=", "gt", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "imdff", "=", "pred", "-", "gt", "\n", "rmse", "=", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "if", "rmse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.demo_4x.chop_forward": [[166, 191], ["transform().unsqueeze", "img_splitter.split_img_tensor", "torch.TensorDataset", "torch.DataLoader", "enumerate", "img_splitter.merge_img_tensor", "SR.data[].numpy().transpose.data[].numpy().transpose", "torch.autograd.Variable().to", "range", "transform", "torch.no_grad", "torch.no_grad", "network", "out_box.append", "SR.data[].numpy().transpose.data[].numpy", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.split_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.prepare_images.ImageSplitter.merge_img_tensor", "home.repos.pwc.inspect_result.Holmes-Alan_ABPN.None.data.transform"], ["def", "chop_forward", "(", "img", ",", "network", ")", ":", "\n", "\n", "    ", "channel_swap", "=", "(", "1", ",", "2", ",", "0", ")", "\n", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img_patch", "=", "img_splitter", ".", "split_img_tensor", "(", "img", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "img_patch", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "out_box", "=", "[", "]", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "input", "=", "Variable", "(", "batch", "[", "0", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "prediction", "=", "network", "(", "input", ")", "\n", "\n", "\n", "", "for", "j", "in", "range", "(", "prediction", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_box", ".", "append", "(", "prediction", "[", "j", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "", "SR", "=", "img_splitter", ".", "merge_img_tensor", "(", "out_box", ")", "\n", "SR", "=", "SR", ".", "data", "[", "0", "]", ".", "numpy", "(", ")", ".", "transpose", "(", "channel_swap", ")", "\n", "\n", "return", "SR", "\n", "\n"]]}