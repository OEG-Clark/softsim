{"home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.main.main": [[48, 193], ["parser.parse_args", "UIC.util.create_logger", "UIC.util.create_logger.info", "UIC.util.create_logger.info", "UIC.util.create_logger.info", "UIC.util.create_logger.info", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "numpy.random.seed", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel.cuda", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.CrossEntropyLoss", "time.time", "torchvision.Normalize", "UIC.dataset.DatasetGivenLabels", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "UIC.util.create_logger.info", "main.compute_labels", "copy.copy", "sklearn.metrics.cluster.normalized_mutual_info_score", "UIC.util.create_logger.info", "range", "os.path.join", "UIC.util.create_logger.info", "filter", "os.path.isfile", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "UIC.transform.color_distortion", "torchvision.ToTensor", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "len", "UIC.util.create_logger.info", "time.time", "enumerate", "numpy.zeros", "enumerate", "UIC.dataset.DatasetGivenLabels", "UIC.sampler.UnifLabelSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "time.time", "main.train", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "copy.copy", "torch.optim.lr_scheduler.CosineAnnealingLR.step", "time.strftime", "torch.nn.DataParallel.parameters", "UIC.util.create_logger.info", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel.load_state_dict", "torch.optim.SGD.load_state_dict", "UIC.util.create_logger.info", "UIC.util.create_logger.info", "torchvision.Compose", "images_lists[].append", "len", "UIC.util.create_logger.info", "numpy.argmax", "numpy.random.shuffle", "len", "int", "UIC.util.create_logger.info", "UIC.util.create_logger.info", "os.path.join", "time.localtime", "os.path.isfile", "range", "enumerate", "torchvision.Compose", "len", "sklearn.metrics.cluster.normalized_mutual_info_score", "UIC.util.create_logger.info", "sklearn.metrics.cluster.normalized_mutual_info_score", "UIC.util.create_logger.info", "torch.nn.DataParallel.state_dict", "torch.optim.SGD.state_dict", "time.time", "sorted", "time.time", "len", "len", "len", "str", "dict().items", "len", "len", "time.time", "int", "dict", "vars"], "function", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.create_logger", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.main.compute_labels", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.transform.color_distortion", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.train"], ["def", "main", "(", ")", ":", "\n", "# log-file setting", "\n", "    ", "global", "args", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "log_file_name", "=", "args", ".", "save_name", "+", "time", ".", "strftime", "(", "'%Y-%m-%d-%H-%M-%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", "+", "'.log'", "\n", "global", "logger", "\n", "logger", "=", "create_logger", "(", "os", ".", "path", ".", "join", "(", "args", ".", "exp", ",", "log_file_name", ")", ")", "\n", "logger", ".", "info", "(", "\"============ Initialized logger ============\"", ")", "\n", "logger", ".", "info", "(", "\"\\n\"", ".", "join", "(", "\"%s: %s\"", "%", "(", "k", ",", "str", "(", "v", ")", ")", "\n", "for", "k", ",", "v", "in", "sorted", "(", "dict", "(", "vars", "(", "args", ")", ")", ".", "items", "(", ")", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"The experiment will be stored in %s\\n\"", "%", "args", ".", "exp", ")", "\n", "logger", ".", "info", "(", "\"\"", ")", "\n", "\n", "# fix random seeds", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "# CNN", "\n", "if", "args", ".", "verbose", ":", "\n", "        ", "logger", ".", "info", "(", "'Architecture: {}'", ".", "format", "(", "args", ".", "arch", ")", ")", "\n", "# extra mlp head & random gaussian bluring augmentation", "\n", "", "model", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "out", "=", "args", ".", "nmb_cluster", ",", "extra_mlp", "=", "True", ",", "random_gblur", "=", "True", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# create optimizer", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", ",", "\n", "lr", "=", "args", ".", "lr", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "10", "**", "args", ".", "wd", ",", "\n", ")", "\n", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "optimizer", ",", "T_max", "=", "args", ".", "epochs", ",", "eta_min", "=", "0", ",", "last_epoch", "=", "-", "1", ")", "\n", "\n", "# define loss function", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "# optionally resume from a checkpoint", "\n", "start_epoch", "=", "0", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "args", ".", "resume", ")", ":", "\n", "            ", "logger", ".", "info", "(", "\"=> loading checkpoint '{}'\"", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "logger", ".", "info", "(", "\"=> loaded checkpoint '{}' (epoch {})\"", "\n", ".", "format", "(", "args", ".", "resume", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "logger", ".", "info", "(", "\"=> no checkpoint found at '{}'\"", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "\n", "", "", "end", "=", "time", ".", "time", "(", ")", "\n", "# preprocessing of data", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "tra", "=", "[", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "color_distortion", "(", "s", "=", "1.0", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", "\n", "tra_test", "=", "[", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", "\n", "\n", "# load the data", "\n", "dataset", "=", "DatasetGivenLabels", "(", "args", ".", "data", ",", "transform", "=", "transforms", ".", "Compose", "(", "tra_test", ")", ",", "suffix", "=", "args", ".", "suffix", ")", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "\n", "batch_size", "=", "args", ".", "batch", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "\n", "shuffle", "=", "False", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "# initialize labels", "\n", "logger", ".", "info", "(", "'initializing labels'", ")", "\n", "labels", "=", "compute_labels", "(", "dataloader", ",", "model", ",", "args", ".", "nmb_cluster", ",", "len", "(", "dataset", ")", ",", "init_via_forward", "=", "(", "args", ".", "resume", "and", "os", ".", "path", ".", "isfile", "(", "args", ".", "resume", ")", ")", ")", "\n", "history_labels", "=", "cp", ".", "copy", "(", "labels", ")", "\n", "nmi", "=", "normalized_mutual_info_score", "(", "labels", ",", "dataset", ".", "gt", ")", "\n", "logger", ".", "info", "(", "'NMI against gt assignment: {0:.3f}'", ".", "format", "(", "nmi", ")", ")", "\n", "\n", "if", "args", ".", "verbose", ":", "logger", ".", "info", "(", "'Load dataset: {0:.2f} s'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "end", ")", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "        ", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "# re-arrange labels to avoid empty classes", "\n", "images_lists", "=", "[", "[", "]", "for", "_", "in", "range", "(", "args", ".", "nmb_cluster", ")", "]", "\n", "for", "i", ",", "label_item", "in", "enumerate", "(", "labels", ")", ":", "\n", "            ", "images_lists", "[", "int", "(", "label_item", ")", "]", ".", "append", "(", "i", ")", "\n", "", "empty_list", "=", "[", "i", "for", "i", ",", "item", "in", "enumerate", "(", "images_lists", ")", "if", "len", "(", "item", ")", "==", "0", "]", "\n", "if", "len", "(", "empty_list", ")", ">", "0", ":", "\n", "            ", "logger", ".", "info", "(", "'empty class number: {}'", ".", "format", "(", "len", "(", "empty_list", ")", ")", ")", "\n", "", "for", "empty_idx", "in", "empty_list", ":", "\n", "            ", "max_idx", "=", "np", ".", "argmax", "(", "[", "len", "(", "item", ")", "for", "item", "in", "images_lists", "]", ")", "\n", "max_item", "=", "images_lists", "[", "max_idx", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "max_item", ")", "\n", "images_lists", "[", "empty_idx", "]", "=", "max_item", "[", "len", "(", "max_item", ")", "//", "2", ":", "]", "\n", "images_lists", "[", "max_idx", "]", "=", "max_item", "[", ":", "len", "(", "max_item", ")", "//", "2", "]", "\n", "", "labels", "=", "np", ".", "zeros", "(", "len", "(", "labels", ")", ")", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "images_lists", ")", ":", "\n", "            ", "for", "j", "in", "item", ":", "\n", "                ", "labels", "[", "j", "]", "=", "i", "\n", "\n", "# balanced sampling dataloader", "\n", "", "", "train_dataset", "=", "DatasetGivenLabels", "(", "args", ".", "data", ",", "labels", ",", "transform", "=", "transforms", ".", "Compose", "(", "tra", ")", ",", "suffix", "=", "args", ".", "suffix", ")", "\n", "sampler", "=", "UnifLabelSampler", "(", "int", "(", "len", "(", "train_dataset", ")", ")", ",", "images_lists", ")", "\n", "train_dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "batch_size", "=", "args", ".", "batch", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "\n", "sampler", "=", "sampler", ",", "\n", "pin_memory", "=", "True", ",", "\n", ")", "\n", "\n", "# train network and update pseudo labels", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "loss", "=", "train", "(", "train_dataloader", ",", "model", ",", "criterion", ",", "optimizer", ",", "epoch", ",", "labels", ",", "label_update", "=", "True", ")", "\n", "\n", "# logger.info log", "\n", "if", "args", ".", "verbose", ":", "\n", "            ", "logger", ".", "info", "(", "'###### Epoch [{0}] ###### \\n'", "\n", "'Time: {1:.3f} s\\n'", "\n", "'ConvNet loss: {2:.3f}'", "\n", ".", "format", "(", "epoch", ",", "time", ".", "time", "(", ")", "-", "end", ",", "loss", ")", ")", "\n", "try", ":", "\n", "                ", "nmi", "=", "normalized_mutual_info_score", "(", "labels", ",", "history_labels", ")", "\n", "logger", ".", "info", "(", "'NMI against previous assignment: {0:.3f}'", ".", "format", "(", "nmi", ")", ")", "\n", "nmi", "=", "normalized_mutual_info_score", "(", "labels", ",", "dataset", ".", "gt", ")", "\n", "logger", ".", "info", "(", "'NMI against gt assignment: {0:.3f}'", ".", "format", "(", "nmi", ")", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "logger", ".", "info", "(", "'####################### \\n'", ")", "\n", "\n", "# save running checkpoint", "\n", "", "torch", ".", "save", "(", "{", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'arch'", ":", "args", ".", "arch", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", "}", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "exp", ",", "'checkpoint_latest.pth.tar'", ")", ")", "\n", "history_labels", "=", "cp", ".", "copy", "(", "labels", ")", "\n", "lr_scheduler", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.main.train": [[194, 239], ["UIC.util.AverageMeter", "UIC.util.AverageMeter", "UIC.util.AverageMeter", "UIC.util.AverageMeter", "UIC.util.AverageMeter", "model.train", "time.time", "enumerate", "UIC.util.AverageMeter.update", "model", "crit", "UIC.util.AverageMeter.update", "opt.zero_grad", "crit.backward", "opt.step", "UIC.util.AverageMeter.update", "time.time", "inputs.cuda", "targets.cuda", "model.argmax().data.cpu().numpy", "zip", "crit.item", "inputs.size", "logger.info", "time.time", "int", "time.time", "model.argmax().data.cpu", "len", "model.argmax"], "function", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.train", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update"], ["", "", "def", "train", "(", "loader", ",", "model", ",", "crit", ",", "opt", ",", "epoch", ",", "labels", ",", "label_update", "=", "True", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "forward_time", "=", "AverageMeter", "(", ")", "\n", "backward_time", "=", "AverageMeter", "(", ")", "\n", "\n", "# switch to train mode", "\n", "model", ".", "train", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "inputs", ",", "targets", ",", "index", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "inputs", ",", "targets", "=", "inputs", ".", "cuda", "(", ")", ",", "targets", ".", "cuda", "(", ")", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "\n", "# labels updated", "\n", "if", "label_update", ":", "\n", "            ", "predict", "=", "outputs", ".", "argmax", "(", "dim", "=", "1", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "for", "index_item", ",", "pred", "in", "zip", "(", "index", ",", "predict", ")", ":", "\n", "                ", "labels", "[", "index_item", "]", "=", "int", "(", "pred", ")", "\n", "\n", "", "", "loss", "=", "crit", "(", "outputs", ",", "targets", ")", "\n", "\n", "# record loss", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "if", "args", ".", "verbose", "and", "(", "i", "%", "100", ")", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "'Epoch: [{0}][{1}/{2}]\\t'", "\n", "'LR: {3}\\t'", "\n", "'Time: {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "\n", "'Data: {data_time.val:.3f} ({data_time.avg:.3f})\\t'", "\n", "'Loss: {loss.val:.4f} ({loss.avg:.4f})'", "\n", ".", "format", "(", "epoch", ",", "i", ",", "len", "(", "loader", ")", ",", "opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "batch_time", "=", "batch_time", ",", "\n", "data_time", "=", "data_time", ",", "loss", "=", "losses", ")", ")", "\n", "\n", "", "", "return", "losses", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.main.compute_labels": [[240, 276], ["UIC.util.AverageMeter", "UIC.util.AverageMeter", "time.time", "logger.info", "model.eval", "enumerate", "torch.cat.numpy", "model.train", "numpy.array", "UIC.util.AverageMeter.update", "inputs.cuda.cuda", "UIC.util.AverageMeter.update", "model.argmax().cpu", "time.time", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "logger.info", "int", "time.time", "time.time", "model.argmax", "numpy.random.uniform", "range", "len"], "function", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.train", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update"], ["", "def", "compute_labels", "(", "dataloader", ",", "model", ",", "class_num", ",", "data_len", ",", "init_via_forward", "=", "False", ")", ":", "\n", "    ", "'''Pre-generate pseudo labels via network forward or uniformly assignment'''", "\n", "if", "args", ".", "verbose", ":", "\n", "        ", "logger", ".", "info", "(", "'Compute labels'", ")", "\n", "", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "init_via_forward", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "label_list", "=", "[", "]", "\n", "for", "i", ",", "inputs", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "inputs", "=", "inputs", ".", "cuda", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "output", "=", "model", "(", "inputs", ")", "\n", "", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "label", "=", "output", ".", "argmax", "(", "dim", "=", "1", ")", ".", "cpu", "(", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "label_list", "=", "label", "\n", "", "else", ":", "\n", "                ", "label_list", "=", "torch", ".", "cat", "(", "[", "label_list", ",", "label", "]", ",", "dim", "=", "0", ")", "\n", "", "if", "args", ".", "verbose", "and", "(", "i", "%", "100", ")", "==", "0", ":", "\n", "                ", "logger", ".", "info", "(", "'{0}/{1}\\t'", "\n", "'Time: {batch_time.val:.3f} ({batch_time.avg:.3f})'", "\n", "'Data: {data_time.val:.3f} ({data_time.avg:.3f})\\t'", "\n", ".", "format", "(", "i", ",", "len", "(", "dataloader", ")", ",", "batch_time", "=", "batch_time", ",", "data_time", "=", "data_time", ")", ")", "\n", "", "end", "=", "time", ".", "time", "(", ")", "\n", "", "label_list", "=", "label_list", ".", "numpy", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "        ", "label_list", "=", "np", ".", "array", "(", "[", "int", "(", "np", ".", "random", ".", "uniform", "(", "0", ",", "class_num", ")", ")", "for", "_", "in", "range", "(", "data_len", ")", "]", ")", "\n", "\n", "", "return", "label_list", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.main": [[39, 159], ["parser.parse_args", "UIC.util.create_logger", "UIC.util.create_logger.info", "UIC.util.create_logger.info", "UIC.util.create_logger.info", "UIC.util.create_logger.info", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "numpy.random.seed", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel.parameters", "torch.nn.DataParallel.linear.parameters", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel.load_state_dict", "torch.nn.DataParallel.cuda", "torch.CrossEntropyLoss", "os.path.join", "os.path.join", "torchvision.Normalize", "torchvision.ImageFolder", "torchvision.ImageFolder", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "range", "os.path.join", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "filter", "time.time", "eval_linear.train", "eval_linear.validate", "max", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.optim.lr_scheduler.StepLR.step", "time.strftime", "torchvision.Resize", "torchvision.TenCrop", "torchvision.Lambda", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Compose", "torchvision.Compose", "int", "torch.nn.DataParallel.module.linear.parameters", "os.path.join", "time.localtime", "torch.nn.DataParallel.state_dict", "torch.optim.SGD.state_dict", "time.time", "sorted", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "str", "dict().items", "transforms.Normalize.", "dict", "vars", "torchvision.ToTensor"], "function", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.create_logger", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.train", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.validate"], ["def", "main", "(", ")", ":", "\n", "    ", "global", "args", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "log_file_name", "=", "args", ".", "save_name", "+", "time", ".", "strftime", "(", "'%Y-%m-%d-%H-%M-%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", "+", "'.log'", "\n", "global", "logger", "\n", "logger", "=", "create_logger", "(", "os", ".", "path", ".", "join", "(", "args", ".", "exp", ",", "log_file_name", ")", ")", "\n", "logger", ".", "info", "(", "\"============ Initialized logger ============\"", ")", "\n", "logger", ".", "info", "(", "\"\\n\"", ".", "join", "(", "\"%s: %s\"", "%", "(", "k", ",", "str", "(", "v", ")", ")", "\n", "for", "k", ",", "v", "in", "sorted", "(", "dict", "(", "vars", "(", "args", ")", ")", ".", "items", "(", ")", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"The experiment will be stored in %s\\n\"", "%", "args", ".", "exp", ")", "\n", "logger", ".", "info", "(", "\"\"", ")", "\n", "\n", "# fix random seeds", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "best_prec1", "=", "0", "\n", "\n", "# network defined", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "model", ")", "\n", "model", "=", "models", ".", "__dict__", "[", "checkpoint", "[", "'arch'", "]", "]", "(", "out", "=", "args", ".", "nmb_cluster", ",", "linear_eval", "=", "True", ",", "extra_mlp", "=", "True", ")", "\n", "\n", "# freeze the features layers", "\n", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "", "for", "param", "in", "model", ".", "linear", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "True", "\n", "\n", "# load model", "\n", "", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ",", "strict", "=", "False", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# define loss function", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "# train & val dataloader", "\n", "traindir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data", ",", "'train'", ")", "\n", "valdir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data", ",", "'val'", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "transformations_train", "=", "[", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", "\n", "if", "args", ".", "tencrops", ":", "\n", "        ", "transformations_val", "=", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "TenCrop", "(", "224", ")", ",", "\n", "transforms", ".", "Lambda", "(", "lambda", "crops", ":", "torch", ".", "stack", "(", "[", "normalize", "(", "transforms", ".", "ToTensor", "(", ")", "(", "crop", ")", ")", "for", "crop", "in", "crops", "]", ")", ")", ",", "\n", "]", "\n", "", "else", ":", "\n", "        ", "transformations_val", "=", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", "\n", "", "train_dataset", "=", "datasets", ".", "ImageFolder", "(", "\n", "traindir", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transformations_train", ")", "\n", ")", "\n", "val_dataset", "=", "datasets", ".", "ImageFolder", "(", "\n", "valdir", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transformations_val", ")", "\n", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "\n", "pin_memory", "=", "True", "\n", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "val_dataset", ",", "\n", "batch_size", "=", "int", "(", "args", ".", "batch_size", "//", "2", ")", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "4", "\n", ")", "\n", "\n", "# optimizer", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "model", ".", "module", ".", "linear", ".", "parameters", "(", ")", ")", ",", "\n", "args", ".", "lr", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "10", "**", "args", ".", "weight_decay", "if", "args", ".", "weight_decay", "!=", "0", "else", "0", "\n", ")", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "\n", "optimizer", ",", "\n", "step_size", "=", "args", ".", "step_size", ",", "\n", "gamma", "=", "0.1", ",", "\n", "last_epoch", "=", "-", "1", "\n", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "# train for one epoch", "\n", "train", "(", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ",", "epoch", ")", "\n", "\n", "# evaluate on validation set", "\n", "prec1", ",", "prec5", ",", "loss", "=", "validate", "(", "val_loader", ",", "model", ",", "criterion", ")", "\n", "\n", "# remember best prec@1 and save checkpoint", "\n", "is_best", "=", "prec1", ">", "best_prec1", "\n", "best_prec1", "=", "max", "(", "prec1", ",", "best_prec1", ")", "\n", "if", "is_best", ":", "\n", "            ", "filename", "=", "'model_best.pth.tar'", "\n", "", "else", ":", "\n", "            ", "filename", "=", "'checkpoint_latest.pth.tar'", "\n", "", "torch", ".", "save", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'arch'", ":", "'resnet50'", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'prec5'", ":", "prec5", ",", "\n", "'best_prec1'", ":", "best_prec1", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "os", ".", "path", ".", "join", "(", "args", ".", "exp", ",", "filename", ")", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.accuracy": [[160, 174], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].float().sum", "res.append", "correct[].float().sum.mul_", "target.view", "correct[].float"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\" Computes the precision@k for the specified values of k \"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "float", "(", ")", ".", "sum", "(", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.train": [[175, 220], ["UIC.util.AverageMeter", "UIC.util.AverageMeter", "UIC.util.AverageMeter", "UIC.util.AverageMeter", "UIC.util.AverageMeter", "model.eval", "time.time", "enumerate", "UIC.util.AverageMeter.update", "model", "criterion", "eval_linear.accuracy", "UIC.util.AverageMeter.update", "UIC.util.AverageMeter.update", "UIC.util.AverageMeter.update", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "UIC.util.AverageMeter.update", "time.time", "input.cuda", "target.cuda", "criterion.item", "input.size", "prec1.item", "input.size", "prec5.item", "input.size", "logger.info", "time.time", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.accuracy", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update"], ["", "def", "train", "(", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "\n", "# freeze also batch norm layers", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "# measure data loading time", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# compute output", "\n", "input_cu", ",", "target_cu", "=", "input", ".", "cuda", "(", ")", ",", "target", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "input_cu", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target_cu", ")", "\n", "# measure accuracy and record loss", "\n", "prec1", ",", "prec5", "=", "accuracy", "(", "output", ".", "data", ",", "target_cu", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "args", ".", "verbose", "and", "i", "%", "100", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "'Epoch: [{0}][{1}/{2}]\\t'", "\n", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "\n", "'Data {data_time.val:.3f} ({data_time.avg:.3f})\\t'", "\n", "'lr {3}\\t'", "\n", "'Loss {loss.val:.4f} ({loss.avg:.4f})\\t'", "\n", "'Prec@1 {top1.val:.3f} ({top1.avg:.3f})\\t'", "\n", "'Prec@5 {top5.val:.3f} ({top5.avg:.3f})'", "\n", ".", "format", "(", "epoch", ",", "i", ",", "len", "(", "train_loader", ")", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "batch_time", "=", "batch_time", ",", "data_time", "=", "data_time", ",", "loss", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.validate": [[222, 266], ["UIC.util.AverageMeter", "UIC.util.AverageMeter", "UIC.util.AverageMeter", "UIC.util.AverageMeter", "model.eval", "torch.Softmax().cuda", "time.time", "logger.info", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "torch.Softmax", "model", "eval_linear.accuracy", "UIC.util.AverageMeter.update", "UIC.util.AverageMeter.update", "criterion", "UIC.util.AverageMeter.update", "UIC.util.AverageMeter.update", "time.time", "len", "input.view().contiguous.size", "input.view().contiguous.view().contiguous", "input.view().contiguous.cuda", "target.cuda", "nn.Softmax().cuda.", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "prec1.item", "input.view().contiguous.size", "prec5.item", "input.view().contiguous.size", "criterion.item", "input.view().contiguous.size", "torch.squeeze.view", "torch.squeeze.view().mean", "time.time", "input.view().contiguous.view", "int", "torch.squeeze.view"], "function", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.None.eval_linear.accuracy", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update"], ["", "", "", "def", "validate", "(", "val_loader", ",", "model", ",", "criterion", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "\n", "# switch to evaluate mode", "\n", "model", ".", "eval", "(", ")", "\n", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", ".", "cuda", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "            ", "if", "args", ".", "tencrops", ":", "\n", "                ", "bs", ",", "ncrops", ",", "c", ",", "h", ",", "w", "=", "input", ".", "size", "(", ")", "\n", "input", "=", "input", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ".", "contiguous", "(", ")", "\n", "", "input_cu", ",", "target_cu", "=", "input", ".", "cuda", "(", ")", ",", "target", ".", "cuda", "(", ")", "\n", "\n", "output", "=", "model", "(", "input_cu", ")", "\n", "if", "args", ".", "tencrops", ":", "\n", "                ", "output_central", "=", "output", ".", "view", "(", "bs", ",", "ncrops", ",", "-", "1", ")", "[", ":", ",", "int", "(", "ncrops", "/", "2", "-", "1", ")", ",", ":", "]", "\n", "output", "=", "softmax", "(", "output", ")", "\n", "output", "=", "torch", ".", "squeeze", "(", "output", ".", "view", "(", "bs", ",", "ncrops", ",", "-", "1", ")", ".", "mean", "(", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "output_central", "=", "output", "\n", "\n", "", "prec1", ",", "prec5", "=", "accuracy", "(", "output", ".", "data", ",", "target_cu", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "loss", "=", "criterion", "(", "output_central", ",", "target_cu", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "'Validation: [{0}/{1}]\\t'", "\n", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "\n", "'Loss {loss.val:.4f} ({loss.avg:.4f})\\t'", "\n", "'Prec@1 {top1.val:.3f} ({top1.avg:.3f})\\t'", "\n", "'Prec@5 {top5.val:.3f} ({top5.avg:.3f})'", "\n", ".", "format", "(", "i", ",", "len", "(", "val_loader", ")", ",", "batch_time", "=", "batch_time", ",", "\n", "loss", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n", "return", "top1", ".", "avg", ",", "top5", ".", "avg", ",", "losses", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.dataset.DatasetGivenLabels.__init__": [[17, 36], ["os.listdir", "os.listdir", "os.listdir", "os.listdir", "dir_list.sort", "enumerate", "os.isdir", "os.isdir", "os.join", "os.join", "dataset.listdir", "os.join", "os.join", "dir_list.append", "range", "len"], "methods", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.dataset.listdir", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.dataset.listdir", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.dataset.listdir", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.dataset.listdir", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.dataset.listdir"], ["def", "__init__", "(", "self", ",", "root", ",", "labels", "=", "None", ",", "transform", "=", "None", ",", "suffix", "=", "'.jpg'", ")", ":", "\n", "        ", "dir_list", "=", "[", "]", "\n", "for", "dir_item", "in", "os", ".", "listdir", "(", "root", ")", ":", "\n", "            ", "if", "osp", ".", "isdir", "(", "osp", ".", "join", "(", "root", ",", "dir_item", ")", ")", ":", "\n", "                ", "dir_list", ".", "append", "(", "dir_item", ")", "\n", "", "", "dir_list", ".", "sort", "(", ")", "\n", "\n", "imagedirs", "=", "[", "]", "\n", "gt", "=", "[", "]", "\n", "for", "label_id", ",", "dir_item", "in", "enumerate", "(", "dir_list", ")", ":", "\n", "            ", "sub_folder", "=", "osp", ".", "join", "(", "root", ",", "dir_item", ")", "\n", "imagedirs_item", "=", "listdir", "(", "sub_folder", ",", "suffix", "=", "suffix", ")", "\n", "imagedirs", "+=", "imagedirs_item", "\n", "gt", "+=", "[", "label_id", "for", "_", "in", "range", "(", "len", "(", "imagedirs_item", ")", ")", "]", "\n", "\n", "", "self", ".", "transform", "=", "transform", "\n", "self", ".", "imgs", "=", "imagedirs", "\n", "self", ".", "gt", "=", "gt", "\n", "self", ".", "labels", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.dataset.DatasetGivenLabels.__getitem__": [[37, 48], ["open", "PIL.Image.open", "dataset.DatasetGivenLabels.convert", "dataset.DatasetGivenLabels.transform", "int"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "imgs", "[", "index", "]", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "labels", "is", "None", ":", "\n", "            ", "return", "img", "\n", "", "return", "img", ",", "int", "(", "self", ".", "labels", "[", "index", "]", ")", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.dataset.DatasetGivenLabels.__len__": [[49, 51], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.dataset.listdir": [[6, 14], ["os.walk", "os.walk", "f.endswith", "list_path.append", "os.join"], "function", ["None"], ["def", "listdir", "(", "folder", ",", "suffix", ")", ":", "\n", "    ", "\"\"\" Output the path of files in the folder with specific suffix\"\"\"", "\n", "list_path", "=", "[", "]", "\n", "for", "root", ",", "_", ",", "files", "in", "os", ".", "walk", "(", "folder", ",", "followlinks", "=", "True", ")", ":", "\n", "        ", "for", "f", "in", "files", ":", "\n", "            ", "if", "f", ".", "endswith", "(", "suffix", ")", ":", "\n", "                ", "list_path", ".", "append", "(", "osp", ".", "join", "(", "root", ",", "f", ")", ")", "\n", "", "", "", "return", "list_path", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.sampler.UnifLabelSampler.__init__": [[11, 15], ["sampler.UnifLabelSampler.generate_indexes_epoch"], "methods", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.sampler.UnifLabelSampler.generate_indexes_epoch"], ["def", "__init__", "(", "self", ",", "N", ",", "images_lists", ")", ":", "\n", "        ", "self", ".", "N", "=", "N", "\n", "self", ".", "images_lists", "=", "images_lists", "\n", "self", ".", "indexes", "=", "self", ".", "generate_indexes_epoch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.sampler.UnifLabelSampler.generate_indexes_epoch": [[16, 30], ["numpy.zeros", "range", "numpy.random.shuffle", "res[].astype", "int", "len", "numpy.random.choice", "len", "len", "len"], "methods", ["None"], ["", "def", "generate_indexes_epoch", "(", "self", ")", ":", "\n", "        ", "size_per_pseudolabel", "=", "int", "(", "self", ".", "N", "/", "len", "(", "self", ".", "images_lists", ")", ")", "+", "1", "\n", "res", "=", "np", ".", "zeros", "(", "size_per_pseudolabel", "*", "len", "(", "self", ".", "images_lists", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "images_lists", ")", ")", ":", "\n", "            ", "indexes", "=", "np", ".", "random", ".", "choice", "(", "\n", "self", ".", "images_lists", "[", "i", "]", ",", "\n", "size_per_pseudolabel", ",", "\n", "replace", "=", "(", "len", "(", "self", ".", "images_lists", "[", "i", "]", ")", "<=", "size_per_pseudolabel", ")", "\n", ")", "\n", "res", "[", "i", "*", "size_per_pseudolabel", ":", "(", "i", "+", "1", ")", "*", "size_per_pseudolabel", "]", "=", "indexes", "\n", "\n", "", "np", ".", "random", ".", "shuffle", "(", "res", ")", "\n", "return", "res", "[", ":", "self", ".", "N", "]", ".", "astype", "(", "'int'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.sampler.UnifLabelSampler.__iter__": [[31, 33], ["iter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "self", ".", "indexes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.sampler.UnifLabelSampler.__len__": [[34, 36], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "N", "", "", "", ""]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.transform.color_distortion": [[3, 10], ["torchvision.ColorJitter", "torchvision.RandomApply", "torchvision.RandomGrayscale", "torchvision.Compose"], "function", ["None"], ["def", "color_distortion", "(", "s", "=", "1.0", ")", ":", "\n", "    ", "\"\"\" A strong data transformation following SimCLR \"\"\"", "\n", "color_jitter", "=", "transforms", ".", "ColorJitter", "(", "0.8", "*", "s", ",", "0.8", "*", "s", ",", "0.8", "*", "s", ",", "0.2", "*", "s", ")", "\n", "rnd_color_jitter", "=", "transforms", ".", "RandomApply", "(", "[", "color_jitter", "]", ",", "p", "=", "0.8", ")", "\n", "rnd_gray", "=", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", "\n", "color_distort", "=", "transforms", ".", "Compose", "(", "[", "rnd_color_jitter", ",", "rnd_gray", "]", ")", "\n", "return", "color_distort", "", "", ""]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.__init__": [[7, 9], ["util.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.reset": [[10, 15], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.AverageMeter.update": [[16, 21], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.LogFormatter.__init__": [[23, 25], ["time.time"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.LogFormatter.format": [[26, 37], ["round", "record.getMessage", "message.replace.replace.replace", "time.strftime", "datetime.timedelta", "len"], "methods", ["None"], ["", "def", "format", "(", "self", ",", "record", ")", ":", "\n", "        ", "elapsed_seconds", "=", "round", "(", "record", ".", "created", "-", "self", ".", "start_time", ")", "\n", "\n", "prefix", "=", "\"%s - %s - %s\"", "%", "(", "\n", "record", ".", "levelname", ",", "\n", "time", ".", "strftime", "(", "'%x %X'", ")", ",", "\n", "timedelta", "(", "seconds", "=", "elapsed_seconds", ")", "\n", ")", "\n", "message", "=", "record", ".", "getMessage", "(", ")", "\n", "message", "=", "message", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "(", "len", "(", "prefix", ")", "+", "3", ")", ")", "\n", "return", "\"%s - %s\"", "%", "(", "prefix", ",", "message", ")", "if", "message", "else", "''", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.UIC.util.create_logger": [[39, 72], ["util.LogFormatter", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.StreamHandler.setFormatter", "logging.getLogger", "logging.getLogger.setLevel", "logging.getLogger.addHandler", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "time.time"], "function", ["None"], ["", "", "def", "create_logger", "(", "filepath", ")", ":", "\n", "    ", "\"\"\" Create a logger.\n        Use a different log file for each process.\n    \"\"\"", "\n", "# create log formatter", "\n", "log_formatter", "=", "LogFormatter", "(", ")", "\n", "\n", "# create file handler and set level to debug", "\n", "if", "filepath", "is", "not", "None", ":", "\n", "        ", "file_handler", "=", "logging", ".", "FileHandler", "(", "filepath", ",", "\"a\"", ")", "\n", "file_handler", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "file_handler", ".", "setFormatter", "(", "log_formatter", ")", "\n", "\n", "# create console handler and set level to info", "\n", "", "console_handler", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console_handler", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "console_handler", ".", "setFormatter", "(", "log_formatter", ")", "\n", "\n", "# create logger and set level to debug", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "logger", ".", "handlers", "=", "[", "]", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "logger", ".", "propagate", "=", "False", "\n", "if", "filepath", "is", "not", "None", ":", "\n", "        ", "logger", ".", "addHandler", "(", "file_handler", ")", "\n", "", "logger", ".", "addHandler", "(", "console_handler", ")", "\n", "\n", "# reset logger elapsed time", "\n", "def", "reset_time", "(", ")", ":", "\n", "        ", "log_formatter", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "", "logger", ".", "reset_time", "=", "reset_time", "\n", "\n", "return", "logger", "", "", ""]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.GBlur.__init__": [[13, 25], ["torch.Module.__init__", "int", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet.__init__"], ["def", "__init__", "(", "self", ",", "kernel_size", "=", "23", ",", "channel", "=", "3", ",", "sigma_range", "=", "(", "0.1", ",", "2.0", ")", ",", "dim", "=", "2", ")", ":", "\n", "        ", "super", "(", "GBlur", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channel", "=", "channel", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "pad", "=", "int", "(", "kernel_size", "/", "2", ")", "\n", "self", ".", "sigma_range", "=", "sigma_range", "\n", "\n", "self", ".", "kernel_size", "=", "[", "kernel_size", "]", "*", "dim", "\n", "self", ".", "meshgrids", "=", "torch", ".", "meshgrid", "(", "\n", "[", "\n", "torch", ".", "arange", "(", "size", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "for", "size", "in", "self", ".", "kernel_size", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.GBlur.forward": [[28, 43], ["zip", "kernel.repeat().cuda.repeat().cuda.view", "kernel.repeat().cuda.repeat().cuda.repeat().cuda", "torch.nn.functional.conv2d", "torch.nn.functional.conv2d", "random.random", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "random.random", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "kernel.repeat().cuda.repeat().cuda.size", "kernel.repeat().cuda.repeat().cuda.repeat", "math.sqrt", "kernel.repeat().cuda.repeat().cuda.dim"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "p", "=", "0.5", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", ">", "p", ":", "\n", "            ", "return", "x", "\n", "", "sigma", "=", "random", ".", "random", "(", ")", "*", "(", "self", ".", "sigma_range", "[", "1", "]", "-", "self", ".", "sigma_range", "[", "0", "]", ")", "+", "self", ".", "sigma_range", "[", "0", "]", "\n", "self", ".", "sigma", "=", "[", "sigma", "]", "*", "self", ".", "dim", "\n", "kernel", "=", "1", "\n", "for", "size", ",", "std", ",", "mgrid", "in", "zip", "(", "self", ".", "kernel_size", ",", "self", ".", "sigma", ",", "self", ".", "meshgrids", ")", ":", "\n", "            ", "mean", "=", "(", "size", "-", "1", ")", "/", "2", "\n", "kernel", "*=", "1", "/", "(", "std", "*", "math", ".", "sqrt", "(", "2", "*", "math", ".", "pi", ")", ")", "*", "torch", ".", "exp", "(", "-", "(", "(", "mgrid", "-", "mean", ")", "/", "std", ")", "**", "2", "/", "2", ")", "\n", "", "kernel", "=", "kernel", "/", "torch", ".", "sum", "(", "kernel", ")", "\n", "kernel", "=", "kernel", ".", "view", "(", "1", ",", "1", ",", "*", "kernel", ".", "size", "(", ")", ")", "\n", "kernel", "=", "kernel", ".", "repeat", "(", "self", ".", "channel", ",", "*", "[", "1", "]", "*", "(", "kernel", ".", "dim", "(", ")", "-", "1", ")", ")", ".", "cuda", "(", ")", "\n", "x", "=", "F", ".", "conv2d", "(", "x", ",", "weight", "=", "kernel", ",", "groups", "=", "self", ".", "channel", ",", "padding", "=", "self", ".", "pad", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.BasicBlock.__init__": [[56, 79], ["torch.Module.__init__", "isinstance", "resnet50.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet50.conv3x3", "norm_layer", "ValueError", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet.__init__", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv3x3", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "# if dilation > 1:", "\n", "#     raise NotImplementedError(\"Dilation > 1 not supported in BasicBlock\")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "if", "isinstance", "(", "dilation", ",", "int", ")", ":", "\n", "            ", "dilation1", "=", "dilation2", "=", "dilation", "\n", "", "else", ":", "\n", "            ", "assert", "isinstance", "(", "dilation", ",", "(", "list", ",", "tuple", ")", ")", "and", "len", "(", "dilation", ")", "==", "2", "\n", "dilation1", ",", "dilation2", "=", "dilation", "\n", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ",", "dilation", "=", "dilation1", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "dilation", "=", "dilation2", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.BasicBlock.forward": [[80, 97], ["resnet50.BasicBlock.conv1", "resnet50.BasicBlock.bn1", "resnet50.BasicBlock.relu", "resnet50.BasicBlock.conv2", "resnet50.BasicBlock.bn2", "resnet50.BasicBlock.relu", "resnet50.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.Bottleneck.__init__": [[101, 117], ["torch.Module.__init__", "resnet50.conv1x1", "norm_layer", "resnet50.conv3x3", "norm_layer", "resnet50.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet.__init__", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv1x1", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv3x3", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.Bottleneck.forward": [[118, 139], ["resnet50.Bottleneck.conv1", "resnet50.Bottleneck.bn1", "resnet50.Bottleneck.relu", "resnet50.Bottleneck.conv2", "resnet50.Bottleneck.bn2", "resnet50.Bottleneck.relu", "resnet50.Bottleneck.conv3", "resnet50.Bottleneck.bn3", "resnet50.Bottleneck.relu", "resnet50.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet.__init__": [[142, 222], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet50.ResNet._make_layer", "resnet50.ResNet._make_layer", "resnet50.ResNet._make_layer", "resnet50.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "resnet50.ResNet.modules", "len", "ValueError", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "isinstance", "resnet50.ResNet.modules", "resnet50.GBlur", "resnet50.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet50.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "isinstance", "int", "m.weight.data.normal_", "m.bias.data.zero_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet.__init__", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet._make_layer", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet._make_layer", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet._make_layer", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet._make_layer", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv1x1", "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv1x1"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ",", "dim", "=", "3", ",", "extra_mlp", "=", "False", ",", "gblur", "=", "False", ",", "\n", "linear_eval", "=", "False", ",", "width_mult", "=", "1", ",", "input_size", "=", "224", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# settings", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "self", ".", "extra_mlp", "=", "extra_mlp", "\n", "self", ".", "linear_eval", "=", "linear_eval", "\n", "self", ".", "inplanes", "=", "64", "*", "width_mult", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "\n", "# network backbone", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "dim", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", "*", "width_mult", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", "*", "width_mult", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", "*", "width_mult", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", "*", "width_mult", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "# linear layer", "\n", "# extra mlp layer is utilized to further boost the performance", "\n", "if", "extra_mlp", ":", "\n", "            ", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "conv1x1", "(", "512", "*", "width_mult", "*", "block", ".", "expansion", ",", "2048", ")", ",", "\n", "norm_layer", "(", "2048", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "conv1x1", "(", "2048", ",", "2048", ")", ",", "\n", "norm_layer", "(", "2048", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "2048", ",", "num_classes", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "width_mult", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "", "if", "self", ".", "linear_eval", ":", "\n", "            ", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "width_mult", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "# initialization", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n", "#random gaussian bluring", "\n", "", "", "", "if", "gblur", ":", "\n", "            ", "self", ".", "gblur", "=", "GBlur", "(", "kernel_size", "=", "int", "(", "(", "input_size", "*", "0.1", ")", "//", "2", "+", "1", ")", ",", "channel", "=", "dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "gblur", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet._make_layer": [[223, 247], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "isinstance", "block", "layers.append", "resnet50.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv1x1"], ["", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "first_block_dilation", "=", "previous_dilation", "if", "isinstance", "(", "block", ",", "Bottleneck", ")", "else", "(", "previous_dilation", ",", "self", ".", "dilation", ")", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "first_block_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.ResNet.forward": [[248, 286], ["resnet50.ResNet.conv1", "resnet50.ResNet.bn1", "resnet50.ResNet.relu", "resnet50.ResNet.maxpool", "resnet50.ResNet.layer1", "resnet50.ResNet.layer2", "resnet50.ResNet.layer3", "resnet50.ResNet.layer4", "resnet50.ResNet.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet50.ResNet.fc", "resnet50.ResNet.linear", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "resnet50.ResNet.head", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "resnet50.ResNet.conv1", "resnet50.ResNet.bn1", "resnet50.ResNet.relu", "resnet50.ResNet.maxpool", "resnet50.ResNet.layer1", "resnet50.ResNet.layer2", "resnet50.ResNet.layer3", "resnet50.ResNet.layer4", "resnet50.ResNet.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet50.ResNet.detach", "resnet50.ResNet.gblur", "resnet50.ResNet.head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "self", ".", "linear_eval", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "if", "self", ".", "gblur", ":", "\n", "                    ", "x", "=", "self", ".", "gblur", "(", "x", ")", "\n", "", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "if", "self", ".", "extra_mlp", ":", "\n", "                ", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "if", "self", ".", "extra_mlp", ":", "\n", "                    ", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "x", ".", "detach", "(", ")", "\n", "", "x", "=", "self", ".", "linear", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv3x3": [[44, 48], ["torch.Conv2d"], "function", ["None"], ["", "", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.conv1x1": [[49, 52], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50._resnet": [[287, 290], ["resnet50.ResNet"], "function", ["None"], ["", "", "def", "_resnet", "(", "block", ",", "layers", ",", "out", "=", "1000", ",", "dim", "=", "3", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "block", ",", "layers", ",", "num_classes", "=", "out", ",", "dim", "=", "dim", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50.resnet50": [[291, 295], ["resnet50._resnet"], "function", ["home.repos.pwc.inspect_result.HIK-LAB_Unsupervised-Image-Classification.models.resnet50._resnet"], ["", "def", "resnet50", "(", "out", "=", "1000", ",", "extra_mlp", "=", "False", ",", "random_gblur", "=", "False", ",", "linear_eval", "=", "False", ",", "dim", "=", "3", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "_resnet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "out", "=", "out", ",", "dim", "=", "dim", ",", "extra_mlp", "=", "extra_mlp", ",", "gblur", "=", "random_gblur", ",", "linear_eval", "=", "linear_eval", ",", "width_mult", "=", "1", ",", "**", "kwargs", ")", "\n", "", ""]]}