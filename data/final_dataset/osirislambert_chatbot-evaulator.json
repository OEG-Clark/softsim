{"home.repos.pwc.inspect_result.osirislambert_chatbot-evaulator.None.load_neutral.load_non_neutral": [[10, 19], ["tqdm.tqdm", "dataset.drop", "range", "deleted.append", "model"], "function", ["None"], ["def", "load_non_neutral", "(", "model", ",", "dataset", ")", ":", "\n", "    ", "deleted", "=", "[", "]", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "dataset", ".", "shape", "[", "0", "]", ")", ")", ":", "\n", "# Here iloc[i,1], you need to set sentence at second column", "\n", "        ", "if", "model", "(", "dataset", ".", "iloc", "[", "i", "]", ".", "sentence1", ")", "[", "0", "]", "[", "'label'", "]", "==", "'Neutral'", ":", "\n", "            ", "deleted", ".", "append", "(", "i", ")", "\n", "", "", "df", "=", "dataset", ".", "drop", "(", "deleted", ")", "\n", "# dataset.to_csv('non_neutral.csv', header=None, index=None)", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.osirislambert_chatbot-evaulator.None.load_neutral.load_neutral": [[21, 30], ["tqdm.tqdm", "dataset.drop", "range", "deleted.append", "model"], "function", ["None"], ["", "def", "load_neutral", "(", "model", ",", "dataset", ")", ":", "\n", "    ", "deleted", "=", "[", "]", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "dataset", ".", "shape", "[", "0", "]", ")", ")", ":", "\n", "# Here iloc[i,1], you need to set sentence at second column", "\n", "        ", "if", "model", "(", "dataset", ".", "iloc", "[", "i", "]", ".", "sentence1", ")", "[", "0", "]", "[", "'label'", "]", "==", "'Non-Neutral'", ":", "\n", "            ", "deleted", ".", "append", "(", "i", ")", "\n", "", "", "df", "=", "dataset", ".", "drop", "(", "deleted", ")", "\n", "# dataset.to_csv('neutral.csv', header=None, index=None)", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.osirislambert_chatbot-evaulator.None.chatbot.chatbot.__init__": [[7, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "tokenizer", ",", "model", ")", ":", "\n", "        ", "self", ".", "tokenizer", "=", "tokenizer", "\n", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.osirislambert_chatbot-evaulator.None.chatbot.chatbot.generate_response": [[11, 29], ["chatbot.chatbot.tokenizer.encode", "chatbot.chatbot.tokenizer.decode", "len", "chatbot.chatbot.model.generate", "torch.unsqueeze", "print", "chatbot.chatbot.model.generate"], "methods", ["None"], ["", "def", "generate_response", "(", "self", ",", "user_utterance", ")", ":", "\n", "        ", "in_tensor", "=", "self", ".", "tokenizer", ".", "encode", "(", "user_utterance", "+", "self", ".", "tokenizer", ".", "eos_token", ",", "return_tensors", "=", "'pt'", ")", "\n", "if", "len", "(", "in_tensor", "[", "0", "]", ")", "<", "128", ":", "\n", "            ", "out_tensor", "=", "self", ".", "model", ".", "generate", "(", "in_tensor", ",", "\n", "#do_sample=True,", "\n", "max_length", "=", "128", ",", "\n", "#top_p=0.92,", "\n", "pad_token_id", "=", "self", ".", "tokenizer", ".", "eos_token_id", ")", "\n", "", "else", ":", "\n", "            ", "s", "=", "torch", ".", "unsqueeze", "(", "in_tensor", "[", "0", "]", "[", "-", "127", ":", "]", ",", "dim", "=", "0", ")", "\n", "print", "(", "s", ")", "\n", "out_tensor", "=", "self", ".", "model", ".", "generate", "(", "s", ",", "\n", "#do_sample=True,", "\n", "max_length", "=", "128", ",", "\n", "#top_p=0.92,", "\n", "pad_token_id", "=", "self", ".", "tokenizer", ".", "eos_token_id", ")", "\n", "", "out_utterance", "=", "self", ".", "tokenizer", ".", "decode", "(", "out_tensor", "[", "0", "]", ",", "skip_special_tokens", "=", "True", ")", "\n", "return", "out_utterance", "\n", "\n"]], "home.repos.pwc.inspect_result.osirislambert_chatbot-evaulator.None.chatbot.chatbot.generate_response_gpt": [[31, 51], ["chatbot.chatbot.tokenizer.encode", "len", "chatbot.chatbot.model.generate", "chatbot.chatbot.tokenizer.decode", "torch.unsqueeze", "print", "chatbot.chatbot.model.generate", "chatbot.chatbot.tokenizer.decode"], "methods", ["None"], ["", "def", "generate_response_gpt", "(", "self", ",", "user_utterance", ")", ":", "\n", "        ", "in_tensor", "=", "self", ".", "tokenizer", ".", "encode", "(", "user_utterance", "+", "self", ".", "tokenizer", ".", "eos_token", ",", "return_tensors", "=", "'pt'", ")", "\n", "if", "len", "(", "in_tensor", "[", "0", "]", ")", "<", "128", ":", "\n", "            ", "out_tensor", "=", "self", ".", "model", ".", "generate", "(", "in_tensor", ",", "\n", "#do_sample=True,", "\n", "max_length", "=", "128", ",", "\n", "#top_p=0.92,", "\n", "pad_token_id", "=", "self", ".", "tokenizer", ".", "eos_token_id", ")", "\n", "out_utterance", "=", "self", ".", "tokenizer", ".", "decode", "(", "out_tensor", "[", ":", ",", "in_tensor", ".", "shape", "[", "-", "1", "]", ":", "]", "[", "0", "]", ",", "skip_special_tokens", "=", "True", ")", "\n", "\n", "", "else", ":", "\n", "            ", "s", "=", "torch", ".", "unsqueeze", "(", "in_tensor", "[", "0", "]", "[", "-", "127", ":", "]", ",", "dim", "=", "0", ")", "\n", "print", "(", "s", ")", "\n", "out_tensor", "=", "self", ".", "model", ".", "generate", "(", "s", ",", "\n", "#do_sample=True,", "\n", "max_length", "=", "128", ",", "\n", "#top_p=0.92,", "\n", "pad_token_id", "=", "self", ".", "tokenizer", ".", "eos_token_id", ")", "\n", "out_utterance", "=", "self", ".", "tokenizer", ".", "decode", "(", "out_tensor", "[", ":", ",", "s", ".", "shape", "[", "-", "1", "]", ":", "]", "[", "0", "]", ",", "skip_special_tokens", "=", "True", ")", "\n", "", "return", "out_utterance", "\n", "\n"]], "home.repos.pwc.inspect_result.osirislambert_chatbot-evaulator.None.load_emotion.load_emotion": [[10, 27], ["dataset.iterrows", "nnc_model", "ec_model", "ec_model"], "function", ["None"], ["def", "load_emotion", "(", "ec_model", ",", "nnc_model", ",", "dataset", ",", "compare_col_name", "=", "'sentence2'", ")", ":", "\n", "\t", "score", "=", "0", "\n", "ct", "=", "0", "\n", "for", "idx", ",", "row", "in", "dataset", ".", "iterrows", "(", ")", ":", "\n", "\t\t", "label_nn", "=", "nnc_model", "(", "row", "[", "compare_col_name", "]", ")", "[", "0", "]", "[", "'label'", "]", "# row['sentence2'] ==> system response", "\n", "# if system utterance is neutral => get 0.5 point", "\n", "if", "label_nn", "==", "'Neutral'", ":", "\n", "\t\t\t", "score", "+=", "0.5", "\n", "", "else", ":", "\n", "\t\t\t", "label_user", "=", "ec_model", "(", "row", "[", "'sentence1'", "]", ")", "[", "0", "]", "[", "'label'", "]", "# row['sentence1'] ==> user response", "\n", "label_sys", "=", "ec_model", "(", "row", "[", "compare_col_name", "]", ")", "[", "0", "]", "[", "'label'", "]", "\n", "# if user and system are both pos/neg => get 1.0 point", "\n", "if", "label_user", "==", "label_sys", ":", "\n", "\t\t\t\t", "score", "+=", "1", "\n", "# if not => get 0 point", "\n", "", "", "ct", "+=", "1", "\n", "", "return", "score", "/", "ct", "\n", "\n"]], "home.repos.pwc.inspect_result.osirislambert_chatbot-evaulator.None.load_emotion.check_dialog_level_score": [[30, 54], ["df.iterrows", "conver.append", "sum", "len", "sum", "len", "max_total.append", "min_total.append", "nnc", "max", "min", "ec", "ec"], "function", ["None"], ["", "def", "check_dialog_level_score", "(", "compare_column_name", ")", ":", "\n", "    ", "max_total", "=", "[", "]", "\n", "min_total", "=", "[", "]", "\n", "conver", "=", "[", "]", "\n", "for", "idx", ",", "row", "in", "df", ".", "iterrows", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "label_nn", "=", "nnc", "(", "row", "[", "compare_column_name", "]", ")", "[", "0", "]", "[", "'label'", "]", "\n", "if", "label_nn", "==", "'Neutral'", ":", "\n", "                ", "score", "=", "0.5", "\n", "", "else", ":", "\n", "                ", "label_user", "=", "ec", "(", "row", "[", "'user'", "]", ")", "[", "0", "]", "[", "'label'", "]", "# row['sentence1'] ==> user response", "\n", "label_sys", "=", "ec", "(", "row", "[", "compare_column_name", "]", ")", "[", "0", "]", "[", "'label'", "]", "\n", "# if user and system are both pos/neg => get 1.0 point", "\n", "if", "label_user", "==", "label_sys", ":", "\n", "                    ", "score", "=", "1", "\n", "", "else", ":", "\n", "                    ", "score", "=", "0", "\n", "", "", "conver", ".", "append", "(", "score", ")", "\n", "", "except", ":", "\n", "            ", "max_total", ".", "append", "(", "max", "(", "conver", ")", ")", "\n", "min_total", ".", "append", "(", "min", "(", "conver", ")", ")", "\n", "conver", "=", "[", "]", "\n", "continue", "\n", "", "", "return", "sum", "(", "max_total", ")", "/", "len", "(", "max_total", ")", ",", "sum", "(", "min_total", ")", "/", "len", "(", "min_total", ")", "\n", "\n"]]}