{"home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_famnist": [[9, 19], ["keras.datasets.fashion_mnist.load_data", "x_train.reshape.reshape", "y_train.reshape.reshape", "x_test.reshape.reshape", "y_test.reshape.reshape"], "function", ["home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_data"], ["def", "load_famnist", "(", ")", ":", "\n", "    ", "(", "x_train", ",", "y_train", ")", ",", "(", "x_test", ",", "y_test", ")", "=", "fashion_mnist", ".", "load_data", "(", ")", "\n", "x_train", "=", "x_train", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ",", "1", ")", "\n", "y_train", "=", "y_train", ".", "reshape", "(", "y_train", ".", "shape", "[", "0", "]", ",", ")", "\n", "x_test", "=", "x_test", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ",", "1", ")", "\n", "y_test", "=", "y_test", ".", "reshape", "(", "y_test", ".", "shape", "[", "0", "]", ",", ")", "\n", "x_train", "=", "x_train", "/", "255.", "\n", "x_test", "=", "x_test", "/", "255.", "\n", "# print(x_train.shape, y_train.shape, x_test.shape, y_test.shape)", "\n", "return", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_mnist": [[20, 30], ["keras.datasets.mnist.load_data", "x_train.reshape.reshape", "y_train.reshape.reshape", "x_test.reshape.reshape", "y_test.reshape.reshape"], "function", ["home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_data"], ["", "def", "load_mnist", "(", ")", ":", "\n", "    ", "(", "x_train", ",", "y_train", ")", ",", "(", "x_test", ",", "y_test", ")", "=", "mnist", ".", "load_data", "(", ")", "\n", "x_train", "=", "x_train", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ",", "1", ")", "\n", "y_train", "=", "y_train", ".", "reshape", "(", "y_train", ".", "shape", "[", "0", "]", ",", ")", "\n", "x_test", "=", "x_test", ".", "reshape", "(", "-", "1", ",", "28", ",", "28", ",", "1", ")", "\n", "y_test", "=", "y_test", ".", "reshape", "(", "y_test", ".", "shape", "[", "0", "]", ",", ")", "\n", "x_train", "=", "x_train", "/", "255.", "\n", "x_test", "=", "x_test", "/", "255.", "\n", "# print(x_train.shape, y_train.shape, x_test.shape, y_test.shape)", "\n", "return", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_cifar10": [[31, 41], ["keras.datasets.cifar10.load_data", "x_train.reshape.reshape", "y_train.reshape.reshape", "x_test.reshape.reshape", "y_test.reshape.reshape"], "function", ["home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_data"], ["", "def", "load_cifar10", "(", ")", ":", "\n", "    ", "(", "x_train", ",", "y_train", ")", ",", "(", "x_test", ",", "y_test", ")", "=", "cifar10", ".", "load_data", "(", ")", "\n", "x_train", "=", "x_train", ".", "reshape", "(", "-", "1", ",", "32", ",", "32", ",", "3", ")", "\n", "y_train", "=", "y_train", ".", "reshape", "(", "y_train", ".", "shape", "[", "0", "]", ",", ")", "\n", "x_test", "=", "x_test", ".", "reshape", "(", "-", "1", ",", "32", ",", "32", ",", "3", ")", "\n", "y_test", "=", "y_test", ".", "reshape", "(", "y_test", ".", "shape", "[", "0", "]", ",", ")", "\n", "x_train", "=", "x_train", "/", "255.", "\n", "x_test", "=", "x_test", "/", "255.", "\n", "# print(x_train.shape, y_train.shape, x_test.shape, y_test.shape)", "\n", "return", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_imdb": [[42, 48], ["keras.datasets.imdb.load_data", "keras.preprocessing.sequence.pad_sequences", "keras.preprocessing.sequence.pad_sequences"], "function", ["home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_data"], ["", "def", "load_imdb", "(", ")", ":", "\n", "    ", "config", "=", "[", "5000", ",", "500", "]", "\n", "(", "x_train", ",", "y_train", ")", ",", "(", "x_test", ",", "y_test", ")", "=", "imdb", ".", "load_data", "(", "num_words", "=", "config", "[", "0", "]", ")", "\n", "x_train", "=", "pad_sequences", "(", "x_train", ",", "maxlen", "=", "config", "[", "1", "]", ")", "\n", "x_test", "=", "pad_sequences", "(", "x_test", ",", "maxlen", "=", "config", "[", "1", "]", ")", "\n", "return", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_data": [[49, 60], ["data_pre.load_famnist", "data_pre.load_mnist", "data_pre.load_cifar10", "data_pre.load_imdb"], "function", ["home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_famnist", "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_mnist", "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_cifar10", "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.load_imdb"], ["", "def", "load_data", "(", "data_name", ")", ":", "\n", "    ", "if", "data_name", "==", "'famnist'", ":", "\n", "        ", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "=", "load_famnist", "(", ")", "\n", "", "elif", "data_name", "==", "'mnist'", ":", "\n", "        ", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "=", "load_mnist", "(", ")", "\n", "", "elif", "data_name", "==", "'cifar10'", ":", "\n", "        ", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "=", "load_cifar10", "(", ")", "\n", "", "else", ":", "\n", "        ", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "=", "load_imdb", "(", ")", "\n", "\n", "", "return", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.data_pre.get_imb_data": [[62, 105], ["range", "int", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.random.shuffle", "len", "len", "min_x_train.append", "min_y_train.append", "maj_x_train.append", "maj_y_train.append", "len", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "range", "len"], "function", ["None"], ["", "def", "get_imb_data", "(", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "imb_rate", ",", "min_class", ",", "maj_class", ")", ":", "\n", "    ", "maj_x_train", "=", "[", "]", "\n", "maj_y_train", "=", "[", "]", "\n", "min_x_train", "=", "[", "]", "\n", "min_y_train", "=", "[", "]", "\n", "#     print(min_class, maj_class)", "\n", "for", "i", "in", "range", "(", "len", "(", "y_train", ")", ")", ":", "\n", "        ", "if", "y_train", "[", "i", "]", "in", "min_class", ":", "\n", "            ", "min_x_train", ".", "append", "(", "x_train", "[", "i", "]", ")", "\n", "min_y_train", ".", "append", "(", "0", ")", "\n", "\n", "", "if", "y_train", "[", "i", "]", "in", "maj_class", ":", "\n", "            ", "maj_x_train", ".", "append", "(", "x_train", "[", "i", "]", ")", "\n", "maj_y_train", ".", "append", "(", "1", ")", "\n", "#", "\n", "", "", "min_len", "=", "int", "(", "len", "(", "maj_y_train", ")", "*", "imb_rate", ")", "\n", "new_x_train", "=", "maj_x_train", "+", "min_x_train", "[", ":", "min_len", "]", "\n", "new_y_train", "=", "maj_y_train", "+", "min_y_train", "[", ":", "min_len", "]", "\n", "#     print(len(new_y_train),len(new_y_train))", "\n", "#     print(len(maj_x_train))", "\n", "new_x_test", "=", "[", "]", "\n", "new_y_test", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "y_test", ")", ")", ":", "\n", "        ", "if", "y_test", "[", "i", "]", "in", "min_class", ":", "\n", "            ", "new_x_test", ".", "append", "(", "x_test", "[", "i", "]", ")", "\n", "new_y_test", ".", "append", "(", "0", ")", "\n", "", "if", "y_test", "[", "i", "]", "in", "maj_class", ":", "\n", "            ", "new_x_test", ".", "append", "(", "x_test", "[", "i", "]", ")", "\n", "new_y_test", ".", "append", "(", "1", ")", "\n", "\n", "", "", "new_x_train", "=", "np", ".", "array", "(", "new_x_train", ")", "\n", "new_y_train", "=", "np", ".", "array", "(", "new_y_train", ")", "\n", "new_x_test", "=", "np", ".", "array", "(", "new_x_test", ")", "\n", "new_y_test", "=", "np", ".", "array", "(", "new_y_test", ")", "\n", "\n", "idx", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "new_y_train", ")", ")", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "idx", ")", "\n", "\n", "new_x_train", "=", "new_x_train", "[", "idx", "]", "\n", "new_y_train", "=", "new_y_train", "[", "idx", "]", "\n", "\n", "return", "new_x_train", ",", "new_y_train", ",", "new_x_test", ",", "new_y_test", "\n", "", ""]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.train_model.ClassifyProcessor.process_observation": [[54, 60], ["observation.reshape", "numpy.array"], "methods", ["None"], ["    ", "def", "process_observation", "(", "self", ",", "observation", ")", ":", "\n", "        ", "if", "args", ".", "model", "==", "'text'", ":", "\n", "            ", "return", "observation", "\n", "", "img", "=", "observation", ".", "reshape", "(", "INPUT_SHAPE", ")", "\n", "processed_observation", "=", "np", ".", "array", "(", "img", ")", "\n", "return", "processed_observation", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.train_model.ClassifyProcessor.process_state_batch": [[61, 67], ["batch.reshape.reshape.reshape", "batch.reshape.reshape.reshape", "batch.reshape.reshape.astype"], "methods", ["None"], ["", "def", "process_state_batch", "(", "self", ",", "batch", ")", ":", "\n", "        ", "if", "args", ".", "model", "==", "'text'", ":", "\n", "            ", "return", "batch", ".", "reshape", "(", "(", "-", "1", ",", "INPUT_SHAPE", "[", "1", "]", ")", ")", "\n", "", "batch", "=", "batch", ".", "reshape", "(", "(", "-", "1", ",", ")", "+", "INPUT_SHAPE", ")", "\n", "processed_batch", "=", "batch", ".", "astype", "(", "'float32'", ")", "/", "1.", "\n", "return", "processed_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.train_model.ClassifyProcessor.process_reward": [[68, 70], ["numpy.clip"], "methods", ["None"], ["", "def", "process_reward", "(", "self", ",", "reward", ")", ":", "\n", "        ", "return", "np", ".", "clip", "(", "reward", ",", "-", "1.", ",", "1.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.ICMDP_Env.ClassifyEnv.__init__": [[13, 28], ["numpy.arange", "len", "gym.spaces.Discrete", "print", "set"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mode", ",", "imb_rate", ",", "trainx", ",", "trainy", ",", ")", ":", "# mode means training or testing", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "self", ".", "imb_rate", "=", "imb_rate", "\n", "\n", "self", ".", "Env_data", "=", "trainx", "\n", "self", ".", "Answer", "=", "trainy", "\n", "self", ".", "id", "=", "np", ".", "arange", "(", "trainx", ".", "shape", "[", "0", "]", ")", "\n", "\n", "self", ".", "game_len", "=", "self", ".", "Env_data", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "num_classes", "=", "len", "(", "set", "(", "self", ".", "Answer", ")", ")", "\n", "self", ".", "action_space", "=", "spaces", ".", "Discrete", "(", "self", ".", "num_classes", ")", "\n", "print", "(", "self", ".", "action_space", ")", "\n", "self", ".", "step_ind", "=", "0", "\n", "self", ".", "y_pred", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.ICMDP_Env.ClassifyEnv.seed": [[29, 32], ["gym.utils.seeding.np_random"], "methods", ["None"], ["", "def", "seed", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "np_random", ",", "seed", "=", "seeding", ".", "np_random", "(", "seed", ")", "\n", "return", "[", "seed", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.ICMDP_Env.ClassifyEnv.step": [[33, 59], ["ICMDP_Env.ClassifyEnv.y_pred.append", "ICMDP_Env.ClassifyEnv.My_metrics", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.ICMDP_Env.ClassifyEnv.My_metrics"], ["", "def", "step", "(", "self", ",", "a", ")", ":", "\n", "        ", "self", ".", "y_pred", ".", "append", "(", "a", ")", "\n", "y_true_cur", "=", "[", "]", "\n", "info", "=", "{", "}", "\n", "terminal", "=", "False", "\n", "if", "a", "==", "self", ".", "Answer", "[", "self", ".", "id", "[", "self", ".", "step_ind", "]", "]", ":", "\n", "            ", "if", "self", ".", "Answer", "[", "self", ".", "id", "[", "self", ".", "step_ind", "]", "]", "==", "0", ":", "\n", "                ", "reward", "=", "1.", "\n", "", "else", ":", "\n", "                ", "reward", "=", "1.", "*", "self", ".", "imb_rate", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "Answer", "[", "self", ".", "id", "[", "self", ".", "step_ind", "]", "]", "==", "0", ":", "\n", "                ", "reward", "=", "-", "1.", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "                    ", "terminal", "=", "True", "\n", "", "", "else", ":", "\n", "                ", "reward", "=", "-", "1.", "*", "self", ".", "imb_rate", "\n", "", "", "self", ".", "step_ind", "+=", "1", "\n", "\n", "if", "self", ".", "step_ind", "==", "self", ".", "game_len", "-", "1", ":", "\n", "            ", "y_true_cur", "=", "self", ".", "Answer", "[", "self", ".", "id", "]", "\n", "info", "[", "'gmean'", "]", ",", "info", "[", "'fmeasure'", "]", "=", "self", ".", "My_metrics", "(", "np", ".", "array", "(", "self", ".", "y_pred", ")", ",", "\n", "np", ".", "array", "(", "y_true_cur", "[", ":", "self", ".", "step_ind", "]", ")", ")", "\n", "terminal", "=", "True", "\n", "\n", "", "return", "self", ".", "Env_data", "[", "self", ".", "id", "[", "self", ".", "step_ind", "]", "]", ",", "reward", ",", "terminal", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.ICMDP_Env.ClassifyEnv.My_metrics": [[60, 86], ["sklearn.metrics.confusion_matrix", "print", "print", "numpy.array", "numpy.sqrt", "print", "print", "print", "sklearn.metrics.classification_report"], "methods", ["None"], ["", "def", "My_metrics", "(", "self", ",", "y_pre", ",", "y_true", ")", ":", "\n", "        ", "confusion_mat", "=", "confusion_matrix", "(", "y_true", ",", "y_pre", ")", "\n", "print", "(", "'\\n'", ")", "\n", "print", "(", "classification_report", "(", "y_true", ",", "y_pre", ")", ")", "\n", "conM", "=", "np", ".", "array", "(", "confusion_mat", ",", "dtype", "=", "'float'", ")", "\n", "TP", "=", "conM", "[", "1", "]", "[", "1", "]", "\n", "TN", "=", "conM", "[", "0", "]", "[", "0", "]", "\n", "FN", "=", "conM", "[", "1", "]", "[", "0", "]", "\n", "FP", "=", "conM", "[", "0", "]", "[", "1", "]", "\n", "TPrate", "=", "TP", "/", "(", "TP", "+", "FN", ")", "# \u771f\u9633\u6027\u7387", "\n", "TNrate", "=", "TN", "/", "(", "TN", "+", "FP", ")", "# \u771f\u9634\u6027\u7387", "\n", "FPrate", "=", "FP", "/", "(", "TN", "+", "FP", ")", "# \u5047\u9633\u6027\u7387", "\n", "FNrate", "=", "FN", "/", "(", "TP", "+", "FN", ")", "# \u5047\u9634\u6027\u7387", "\n", "PPvalue", "=", "TP", "/", "(", "TP", "+", "FP", ")", "# \u9633\u6027\u9884\u6d4b\u503c", "\n", "NPvalue", "=", "TN", "/", "(", "TN", "+", "FN", ")", "# \u5047\u6027\u9884\u6d4b\u503c", "\n", "\n", "G_mean", "=", "np", ".", "sqrt", "(", "TPrate", "*", "TNrate", ")", "\n", "\n", "Recall", "=", "TPrate", "=", "TP", "/", "(", "TP", "+", "FN", ")", "\n", "Precision", "=", "PPvalue", "=", "TP", "/", "(", "TP", "+", "FP", ")", "\n", "F_measure", "=", "2", "*", "Recall", "*", "Precision", "/", "(", "Recall", "+", "Precision", ")", "\n", "print", "(", "confusion_mat", ")", "\n", "res", "=", "'G-mean:{}, F_measure:{}\\n'", ".", "format", "(", "G_mean", ",", "F_measure", ")", "\n", "print", "(", "res", ")", "\n", "print", "(", ")", "\n", "return", "G_mean", ",", "F_measure", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.ICMDP_Env.ClassifyEnv.reset": [[88, 94], ["numpy.random.shuffle"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "self", ".", "id", ")", "\n", "", "self", ".", "step_ind", "=", "0", "\n", "self", ".", "y_pred", "=", "[", "]", "\n", "return", "self", ".", "Env_data", "[", "self", ".", "id", "[", "self", ".", "step_ind", "]", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.get_model.get_text_model": [[10, 19], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.layers.Embedding", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense"], "function", ["None"], ["def", "get_text_model", "(", "input_shape", ",", "output", ")", ":", "\n", "    ", "top_words", ",", "max_words", "=", "input_shape", "\n", "model", "=", "Sequential", "(", ")", "\n", "model", ".", "add", "(", "Embedding", "(", "top_words", ",", "128", ",", "input_length", "=", "max_words", ")", ")", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "250", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "output", ")", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.linenus_DRL-For-imbalanced-Classification.None.get_model.get_image_model": [[21, 34], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense"], "function", ["None"], ["", "def", "get_image_model", "(", "in_shape", ",", "output", ")", ":", "\n", "    ", "model", "=", "Sequential", "(", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "32", ",", "(", "5", ",", "5", ")", ",", "padding", "=", "'Same'", ",", "input_shape", "=", "in_shape", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "32", ",", "(", "5", ",", "5", ")", ",", "padding", "=", "'Same'", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "256", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "output", ")", ")", "\n", "return", "model", "\n", "\n"]]}