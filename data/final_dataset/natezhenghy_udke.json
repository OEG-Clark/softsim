{"home.repos.pwc.inspect_result.natezhenghy_udke.None.test_udke.main": [[27, 123], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "utils.utils_option.parse", "utils.utils_image.mkdirs", "utils.utils_option.save", "utils.utils_option.dict_to_nonedict", "utils.utils_logger.logger_info", "logging.getLogger", "random.randint", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "data.select_dataset.define_Dataset", "models.model.Model", "models.model.Model.init", "tqdm.tqdm", "prettytable.PrettyTable", "avg_psnrs.items", "logging.getLogger.info", "prettytable.PrettyTable", "avg_ssims.items", "logging.getLogger.info", "prettytable.PrettyTable", "avg_psnrs_k.items", "logging.getLogger.info", "os.path.join", "os.path.join", "test_loaders.append", "tqdm.tqdm", "round", "round", "round", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "argparse.ArgumentParser.parse_args", "torch.utils.data.DataLoader", "models.model.Model.feed_data", "models.model.Model.test", "models.model.Model.cal_metrics", "models.model.Model.save_visuals", "avg_psnrs[].append", "avg_ssims[].append", "avg_psnrs_k[].append", "tags.append", "opt[].items", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.parse", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.mkdirs", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.save", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.dict_to_nonedict", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_logger.logger_info", "home.repos.pwc.inspect_result.natezhenghy_udke.data.select_dataset.define_Dataset", "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.init", "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.feed_data", "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.test", "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.cal_metrics", "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.save_visuals"], ["def", "main", "(", "json_path", ":", "str", "=", "'options/test_udke.json'", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'-opt'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "json_path", ",", "\n", "help", "=", "'Path to option JSON file.'", ")", "\n", "\n", "opt", "=", "option", ".", "parse", "(", "parser", ".", "parse_args", "(", ")", ".", "opt", ",", "is_train", "=", "True", ")", "\n", "util", ".", "mkdirs", "(", "\n", "(", "path", "for", "key", ",", "path", "in", "opt", "[", "'path'", "]", ".", "items", "(", ")", "if", "'pretrained'", "not", "in", "key", ")", ")", "\n", "\n", "option", ".", "save", "(", "opt", ")", "\n", "\n", "opt", ":", "option", ".", "NoneDict", "=", "option", ".", "dict_to_nonedict", "(", "opt", ")", "# type: ignore", "\n", "\n", "# logger", "\n", "logger_name", "=", "'train'", "\n", "utils_logger", ".", "logger_info", "(", "\n", "logger_name", ",", "os", ".", "path", ".", "join", "(", "opt", "[", "'path'", "]", "[", "'log'", "]", ",", "logger_name", "+", "'.log'", ")", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "logger_name", ")", "\n", "\n", "seed", "=", "random", ".", "randint", "(", "1", ",", "10000", ")", "\n", "\n", "# data", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "\n", "opt_data_test", "=", "opt", "[", "\"data\"", "]", "[", "\"test\"", "]", "\n", "test_sets", ":", "List", "[", "DatasetIR", "]", "=", "define_Dataset", "(", "opt_data_test", ")", "\n", "test_loaders", ":", "List", "[", "DataLoader", "]", "=", "[", "]", "\n", "for", "test_set", "in", "test_sets", ":", "\n", "        ", "test_loaders", ".", "append", "(", "\n", "DataLoader", "(", "test_set", ",", "\n", "batch_size", "=", "1", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "\n", "pin_memory", "=", "True", ")", ")", "\n", "\n", "# model", "\n", "", "model", "=", "Model", "(", "opt", ")", "\n", "model", ".", "init", "(", ")", "\n", "\n", "avg_psnrs", "=", "{", "}", "\n", "avg_ssims", "=", "{", "}", "\n", "avg_psnrs_k", "=", "{", "}", "\n", "tags", "=", "[", "]", "\n", "test_index", "=", "0", "\n", "for", "test_loader", "in", "tqdm", "(", "test_loaders", ")", ":", "\n", "        ", "test_set", ":", "DatasetIR", "=", "test_loader", ".", "dataset", "# type: ignore", "\n", "avg_psnr", "=", "0.", "\n", "avg_ssim", "=", "0.", "\n", "avg_psnr_k", "=", "0.", "\n", "for", "test_data", "in", "tqdm", "(", "test_loader", ")", ":", "\n", "            ", "test_index", "+=", "1", "\n", "model", ".", "feed_data", "(", "test_data", ")", "\n", "model", ".", "test", "(", ")", "\n", "psnr", ",", "ssim", ",", "psnr_k", "=", "model", ".", "cal_metrics", "(", ")", "\n", "avg_psnr", "+=", "psnr", "\n", "avg_ssim", "+=", "ssim", "\n", "avg_psnr_k", "+=", "psnr_k", "\n", "\n", "model", ".", "save_visuals", "(", "test_set", ".", "tag", ")", "\n", "", "avg_psnr", "=", "round", "(", "avg_psnr", "/", "len", "(", "test_loader", ")", ",", "2", ")", "\n", "avg_ssim", "=", "round", "(", "avg_ssim", "*", "100", "/", "len", "(", "test_loader", ")", ",", "2", ")", "\n", "avg_psnr_k", "=", "round", "(", "avg_psnr_k", "/", "len", "(", "test_loader", ")", ",", "2", ")", "\n", "\n", "name", "=", "test_set", ".", "name", "\n", "\n", "if", "name", "in", "avg_psnrs", ":", "\n", "            ", "avg_psnrs", "[", "name", "]", ".", "append", "(", "avg_psnr", ")", "\n", "avg_ssims", "[", "name", "]", ".", "append", "(", "avg_ssim", ")", "\n", "avg_psnrs_k", "[", "name", "]", ".", "append", "(", "avg_psnr_k", ")", "\n", "", "else", ":", "\n", "            ", "avg_psnrs", "[", "name", "]", "=", "[", "avg_psnr", "]", "\n", "avg_ssims", "[", "name", "]", "=", "[", "avg_ssim", "]", "\n", "avg_psnrs_k", "[", "name", "]", "=", "[", "avg_psnr_k", "]", "\n", "", "if", "test_set", ".", "tag", "not", "in", "tags", ":", "\n", "            ", "tags", ".", "append", "(", "test_set", ".", "tag", ")", "\n", "", "", "header", "=", "[", "'Dataset'", "]", "+", "tags", "\n", "t", "=", "PrettyTable", "(", "header", ")", "\n", "for", "key", ",", "value", "in", "avg_psnrs", ".", "items", "(", ")", ":", "\n", "        ", "t", ".", "add_row", "(", "[", "key", "]", "+", "value", ")", "\n", "", "logger", ".", "info", "(", "f\"Test PSNR:\\n{t}\"", ")", "\n", "\n", "t", "=", "PrettyTable", "(", "header", ")", "\n", "for", "key", ",", "value", "in", "avg_ssims", ".", "items", "(", ")", ":", "\n", "        ", "t", ".", "add_row", "(", "[", "key", "]", "+", "value", ")", "\n", "", "logger", ".", "info", "(", "f\"Test SSIM:\\n{t}\"", ")", "\n", "\n", "t", "=", "PrettyTable", "(", "header", ")", "\n", "for", "key", ",", "value", "in", "avg_psnrs_k", ".", "items", "(", ")", ":", "\n", "        ", "t", ".", "add_row", "(", "[", "key", "]", "+", "value", ")", "\n", "", "logger", ".", "info", "(", "f\"Test Kernel PSNR:\\n{t}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.is_image_file": [[27, 29], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ":", "str", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.get_image_paths": [[38, 43], ["sorted", "utils_image._get_paths_from_images"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image._get_paths_from_images"], ["def", "get_image_paths", "(", "dataroot", ":", "str", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "paths", "=", "None", "# return None if dataroot is None", "\n", "if", "dataroot", "is", "not", "None", ":", "\n", "        ", "paths", "=", "sorted", "(", "_get_paths_from_images", "(", "dataroot", ")", ")", "\n", "", "return", "paths", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image._get_paths_from_images": [[45, 55], ["os.path.isdir", "sorted", "os.walk", "sorted", "utils_image.is_image_file", "os.path.join", "images.append"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.is_image_file"], ["", "def", "_get_paths_from_images", "(", "path", ":", "str", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isdir", "(", "path", ")", ",", "'{:s} is not a valid directory'", ".", "format", "(", "path", ")", "\n", "images", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "for", "dirpath", ",", "_", ",", "fnames", "in", "sorted", "(", "os", ".", "walk", "(", "path", ")", ")", ":", "\n", "        ", "for", "fname", "in", "sorted", "(", "fnames", ")", ":", "\n", "            ", "if", "is_image_file", "(", "fname", ")", ":", "\n", "                ", "img_path", "=", "os", ".", "path", ".", "join", "(", "dirpath", ",", "fname", ")", "\n", "images", ".", "append", "(", "img_path", ")", "\n", "", "", "", "assert", "images", ",", "'{:s} has no valid image file'", ".", "format", "(", "path", ")", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.mkdir": [[64, 66], ["os.makedirs"], "function", ["None"], ["def", "mkdir", "(", "path", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "path", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.mkdirs": [[68, 74], ["isinstance", "utils_image.mkdir", "utils_image.mkdir"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.mkdir", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.mkdir"], ["", "def", "mkdirs", "(", "paths", ")", ":", "\n", "    ", "if", "isinstance", "(", "paths", ",", "str", ")", ":", "\n", "        ", "mkdir", "(", "paths", ")", "\n", "", "else", ":", "\n", "        ", "for", "path", "in", "paths", ":", "\n", "            ", "mkdir", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.imread_uint": [[87, 100], ["cv2.imread", "numpy.expand_dims", "cv2.imread", "cv2.cvtColor", "cv2.cvtColor"], "function", ["None"], ["def", "imread_uint", "(", "path", ":", "str", ",", "n_channels", ":", "int", "=", "3", ")", "->", "'npt.NDArray[np.float64]'", ":", "\n", "#  input: path", "\n", "# output: HxWx3(RGB or GGG), or HxWx1 (G)", "\n", "    ", "if", "n_channels", "==", "1", ":", "\n", "        ", "img", "=", "cv2", ".", "imread", "(", "path", ",", "0", ")", "# cv2.IMREAD_GRAYSCALE", "\n", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "# HxWx1", "\n", "", "elif", "n_channels", "==", "3", ":", "\n", "        ", "img", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "# BGR or G", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "            ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_GRAY2RGB", ")", "# GGG", "\n", "", "else", ":", "\n", "            ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "# RGB", "\n", "", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.imsave": [[105, 110], ["numpy.squeeze", "cv2.imwrite"], "function", ["None"], ["", "def", "imsave", "(", "img", ":", "'npt.NDArray[np.float64]'", ",", "img_path", ":", "str", ")", ":", "\n", "    ", "img", "=", "np", ".", "squeeze", "(", "img", ")", "\n", "if", "img", ".", "ndim", "==", "3", ":", "\n", "        ", "img", "=", "img", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "", "cv2", ".", "imwrite", "(", "img_path", ",", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.uint2single": [[127, 130], ["numpy.float32"], "function", ["None"], ["def", "uint2single", "(", "img", ")", ":", "\n", "\n", "    ", "return", "np", ".", "float32", "(", "img", "/", "255.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.uint2tensor3": [[138, 143], ["torch.from_numpy().permute().float().div", "numpy.expand_dims", "torch.from_numpy().permute().float", "torch.from_numpy().permute", "torch.from_numpy", "numpy.ascontiguousarray"], "function", ["None"], ["", "def", "uint2tensor3", "(", "img", ")", ":", "\n", "    ", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "np", ".", "ascontiguousarray", "(", "img", ")", ")", ".", "permute", "(", "\n", "2", ",", "0", ",", "1", ")", ".", "float", "(", ")", ".", "div", "(", "255.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.tensor2uint": [[146, 151], ["tensor.data.squeeze().float().clamp_().cpu().numpy", "numpy.uint8", "numpy.transpose", "tensor.data.squeeze().float().clamp_().cpu", "tensor.data.squeeze().float().clamp_", "tensor.data.squeeze().float", "tensor.data.squeeze"], "function", ["None"], ["", "def", "tensor2uint", "(", "tensor", ")", ":", "\n", "    ", "img", "=", "tensor", ".", "data", ".", "squeeze", "(", ")", ".", "float", "(", ")", ".", "clamp_", "(", "0", ",", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "img", ".", "ndim", "==", "3", ":", "\n", "        ", "img", "=", "np", ".", "transpose", "(", "img", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "", "return", "np", ".", "uint8", "(", "(", "img", "*", "255.0", ")", ".", "round", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.single2tensor3": [[159, 161], ["torch.from_numpy().permute().float", "torch.from_numpy().permute", "torch.from_numpy", "numpy.ascontiguousarray"], "function", ["None"], ["", "def", "single2tensor3", "(", "img", ")", ":", "\n", "    ", "return", "torch", ".", "from_numpy", "(", "np", ".", "ascontiguousarray", "(", "img", ")", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.save_d": [[163, 191], ["np.where.mean().numpy", "numpy.where", "numpy.where", "utils_image.save_d.merge_images"], "function", ["None"], ["", "def", "save_d", "(", "d", ":", "torch", ".", "Tensor", ",", "path", ":", "str", ")", ":", "\n", "    ", "def", "merge_images", "(", "image_batch", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "\"\"\"\n            d: C_out, C_in, d_size, d_size\n        \"\"\"", "\n", "h", ",", "w", "=", "image_batch", ".", "shape", "[", "-", "2", "]", ",", "image_batch", ".", "shape", "[", "-", "1", "]", "\n", "img", "=", "np", ".", "zeros", "(", "(", "int", "(", "h", "*", "8", "+", "7", ")", ",", "int", "(", "w", "*", "8", "+", "7", ")", ")", ")", "\n", "for", "idx", ",", "im", "in", "enumerate", "(", "image_batch", ")", ":", "\n", "            ", "i", "=", "idx", "%", "8", "*", "(", "h", "+", "1", ")", "\n", "j", "=", "idx", "//", "8", "*", "(", "w", "+", "1", ")", "\n", "\n", "img", "[", "j", ":", "j", "+", "h", ",", "i", ":", "i", "+", "w", "]", "=", "im", "\n", "", "img", "=", "cv2", ".", "resize", "(", "img", ",", "\n", "dsize", "=", "(", "256", ",", "256", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "return", "img", "\n", "\n", "", "d", "=", "d", ".", "mean", "(", "0", ")", ".", "numpy", "(", ")", "\n", "d", "=", "np", ".", "where", "(", "d", ">", "np", ".", "quantile", "(", "d", ",", "0.75", ")", ",", "0", ",", "d", ")", "\n", "d", "=", "np", ".", "where", "(", "d", "<", "np", ".", "quantile", "(", "d", ",", "0.25", ")", ",", "0", ",", "d", ")", "\n", "\n", "im_merged", "=", "merge_images", "(", "d", ")", "\n", "im_merged", "=", "np", ".", "absolute", "(", "im_merged", ")", "\n", "plt", ".", "imsave", "(", "path", ",", "\n", "im_merged", ",", "\n", "cmap", "=", "'Greys'", ",", "\n", "vmin", "=", "im_merged", ".", "min", "(", ")", ",", "\n", "vmax", "=", "im_merged", ".", "max", "(", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_logger.logger_info": [[19, 40], ["logging.getLogger", "logging.getLogger.hasHandlers", "print", "print", "logging.Formatter", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.getLogger.setLevel", "logging.getLogger.addHandler", "logging.StreamHandler", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler"], "function", ["None"], ["def", "logger_info", "(", "logger_name", ",", "log_path", "=", "'default_logger.log'", ")", ":", "\n", "    ", "''' set up logger\n    modified by Kai Zhang (github: https://github.com/cszn)\n    '''", "\n", "log", "=", "logging", ".", "getLogger", "(", "logger_name", ")", "\n", "if", "log", ".", "hasHandlers", "(", ")", ":", "\n", "        ", "print", "(", "'LogHandlers exist!'", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'LogHandlers setup!'", ")", "\n", "level", "=", "logging", ".", "INFO", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s.%(msecs)03d : %(message)s'", ",", "\n", "datefmt", "=", "'%y-%m-%d %H:%M:%S'", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "log_path", ",", "mode", "=", "'a'", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "log", ".", "setLevel", "(", "level", ")", "\n", "log", ".", "addHandler", "(", "fh", ")", "\n", "# print(len(log.handlers))", "\n", "\n", "sh", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "sh", ".", "setFormatter", "(", "formatter", ")", "\n", "log", ".", "addHandler", "(", "sh", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.NoneDict.__getitem__": [[120, 122], ["dict.get"], "methods", ["None"], ["    ", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "        ", "return", "dict", ".", "get", "(", "self", ",", "key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.get_timestamp": [[19, 21], ["datetime.datetime.now().strftime", "datetime.datetime.now"], "function", ["None"], ["def", "get_timestamp", "(", ")", ":", "\n", "    ", "return", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'_%y%m%d_%H%M%S'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.parse": [[23, 93], ["opt[].items", "os.path.join", "os.path.join", "os.path.join", "os.path.exists", "os.makedirs", "print", "open", "commentjson.load", "shutil.rmtree", "os.path.join", "os.path.join", "os.path.join", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "str"], "function", ["None"], ["", "def", "parse", "(", "opt_path", ",", "is_train", "=", "True", ")", ":", "\n", "\n", "# ----------------------------------------", "\n", "# initialize opt", "\n", "# ----------------------------------------", "\n", "    ", "with", "open", "(", "opt_path", ")", "as", "file", ":", "\n", "        ", "opt", "=", "commentjson", ".", "load", "(", "file", ")", "\n", "\n", "", "opt", "[", "'opt_path'", "]", "=", "opt_path", "\n", "opt", "[", "'is_train'", "]", "=", "is_train", "\n", "\n", "# ----------------------------------------", "\n", "# data", "\n", "# ----------------------------------------", "\n", "if", "'scale'", "not", "in", "opt", "[", "'data'", "]", ":", "\n", "        ", "opt", "[", "'data'", "]", "[", "'scale'", "]", "=", "1", "\n", "\n", "# ----------------------------------------", "\n", "# datasets", "\n", "# ----------------------------------------", "\n", "", "for", "phase", "in", "[", "'test'", "]", ":", "\n", "        ", "dataset", "=", "opt", "[", "'data'", "]", "[", "phase", "]", "\n", "dataset", "[", "'type'", "]", "=", "opt", "[", "'data'", "]", "[", "'type'", "]", "\n", "dataset", "[", "'phase'", "]", "=", "phase", "\n", "dataset", "[", "'scale'", "]", "=", "opt", "[", "'data'", "]", "[", "'scale'", "]", "# broadcast", "\n", "dataset", "[", "'n_channels'", "]", "=", "opt", "[", "'data'", "]", "[", "'n_channels'", "]", "# broadcast", "\n", "if", "'k_size'", "in", "opt", "[", "'data'", "]", ":", "\n", "            ", "dataset", "[", "'k_size'", "]", "=", "opt", "[", "'data'", "]", "[", "'k_size'", "]", "# broadcast", "\n", "", "if", "'dataroot_H'", "in", "dataset", "and", "dataset", "[", "'dataroot_H'", "]", "is", "not", "None", ":", "\n", "            ", "dataset", "[", "'dataroot_H'", "]", "=", "os", ".", "path", ".", "expanduser", "(", "dataset", "[", "'dataroot_H'", "]", ")", "\n", "", "if", "'dataroot_L'", "in", "dataset", "and", "dataset", "[", "'dataroot_L'", "]", "is", "not", "None", ":", "\n", "            ", "dataset", "[", "'dataroot_L'", "]", "=", "os", ".", "path", ".", "expanduser", "(", "dataset", "[", "'dataroot_L'", "]", ")", "\n", "\n", "# ----------------------------------------", "\n", "# path", "\n", "# ----------------------------------------", "\n", "", "", "for", "key", ",", "path", "in", "opt", "[", "'path'", "]", ".", "items", "(", ")", ":", "\n", "        ", "if", "path", "and", "key", "in", "opt", "[", "'path'", "]", ":", "\n", "            ", "opt", "[", "'path'", "]", "[", "key", "]", "=", "os", ".", "path", ".", "expanduser", "(", "path", ")", "\n", "\n", "", "", "path_task", "=", "os", ".", "path", ".", "join", "(", "opt", "[", "'path'", "]", "[", "'root'", "]", ",", "opt", "[", "'task'", "]", ")", "\n", "opt", "[", "'path'", "]", "[", "'task'", "]", "=", "path_task", "\n", "opt", "[", "'path'", "]", "[", "'log'", "]", "=", "path_task", "\n", "opt", "[", "'path'", "]", "[", "'options'", "]", "=", "os", ".", "path", ".", "join", "(", "path_task", ",", "'options'", ")", "\n", "opt", "[", "'path'", "]", "[", "'writer'", "]", "=", "os", ".", "path", ".", "join", "(", "path_task", ",", "'tensorboard'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "opt", "[", "'path'", "]", "[", "'writer'", "]", ")", ":", "\n", "        ", "shutil", ".", "rmtree", "(", "opt", "[", "'path'", "]", "[", "'writer'", "]", ")", "\n", "", "os", ".", "makedirs", "(", "opt", "[", "'path'", "]", "[", "'writer'", "]", ",", "exist_ok", "=", "True", ")", "\n", "\n", "if", "is_train", ":", "\n", "        ", "opt", "[", "'path'", "]", "[", "'models'", "]", "=", "os", ".", "path", ".", "join", "(", "path_task", ",", "'models'", ")", "\n", "opt", "[", "'path'", "]", "[", "'images'", "]", "=", "os", ".", "path", ".", "join", "(", "path_task", ",", "'images'", ")", "\n", "", "else", ":", "# test", "\n", "        ", "opt", "[", "'path'", "]", "[", "'images'", "]", "=", "os", ".", "path", ".", "join", "(", "path_task", ",", "'test_images'", ")", "\n", "\n", "# ----------------------------------------", "\n", "# network", "\n", "# ----------------------------------------", "\n", "", "opt", "[", "'netG'", "]", "[", "'type'", "]", "=", "opt", "[", "'data'", "]", "[", "'type'", "]", "\n", "opt", "[", "'netG'", "]", "[", "'in_nc'", "]", "=", "opt", "[", "'netG'", "]", "[", "'out_nc'", "]", "=", "opt", "[", "'data'", "]", "[", "'n_channels'", "]", "\n", "opt", "[", "'netG'", "]", "[", "'scale'", "]", "=", "opt", "[", "'data'", "]", "[", "'scale'", "]", "\n", "\n", "# ----------------------------------------", "\n", "# GPU devices", "\n", "# ----------------------------------------", "\n", "gpu_list", "=", "','", ".", "join", "(", "str", "(", "x", ")", "for", "x", "in", "opt", "[", "'gpu_ids'", "]", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "gpu_list", "\n", "print", "(", "'export CUDA_VISIBLE_DEVICES='", "+", "gpu_list", ")", "\n", "\n", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.save": [[102, 110], ["os.path.split", "os.path.splitext", "os.path.join", "open", "json.dump", "utils_option.get_timestamp"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.get_timestamp"], ["def", "save", "(", "opt", ")", ":", "\n", "    ", "opt_path", "=", "opt", "[", "'opt_path'", "]", "\n", "opt_path_copy", "=", "opt", "[", "'path'", "]", "[", "'options'", "]", "\n", "dirname", ",", "filename_ext", "=", "os", ".", "path", ".", "split", "(", "opt_path", ")", "\n", "filename", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "filename_ext", ")", "\n", "dump_path", "=", "os", ".", "path", ".", "join", "(", "opt_path_copy", ",", "filename", "+", "get_timestamp", "(", ")", "+", "ext", ")", "\n", "with", "open", "(", "dump_path", ",", "'w'", ")", "as", "dump_file", ":", "\n", "        ", "json", ".", "dump", "(", "opt", ",", "dump_file", ",", "indent", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.dict_to_nonedict": [[124, 134], ["isinstance", "dict", "opt.items", "utils_option.NoneDict", "isinstance", "utils_option.dict_to_nonedict", "utils_option.dict_to_nonedict"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.dict_to_nonedict", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_option.dict_to_nonedict"], ["", "", "def", "dict_to_nonedict", "(", "opt", ")", ":", "\n", "    ", "if", "isinstance", "(", "opt", ",", "dict", ")", ":", "\n", "        ", "new_opt", "=", "dict", "(", ")", "\n", "for", "key", ",", "sub_opt", "in", "opt", ".", "items", "(", ")", ":", "\n", "            ", "new_opt", "[", "key", "]", "=", "dict_to_nonedict", "(", "sub_opt", ")", "\n", "", "return", "NoneDict", "(", "**", "new_opt", ")", "\n", "", "elif", "isinstance", "(", "opt", ",", "list", ")", ":", "\n", "        ", "return", "[", "dict_to_nonedict", "(", "sub_opt", ")", "for", "sub_opt", "in", "opt", "]", "\n", "", "else", ":", "\n", "        ", "return", "opt", "\n", "", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.select_network.init_net": [[4, 15], ["models.network_sr.UDKE"], "function", ["None"], ["def", "init_net", "(", "opt", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "UDKE", ":", "\n", "    ", "opt_net", "=", "opt", "[", "'netG'", "]", "\n", "\n", "netG", "=", "UDKE", "(", "n_iter", "=", "opt_net", "[", "'n_iter'", "]", ",", "\n", "in_nc", "=", "opt_net", "[", "'in_nc'", "]", ",", "\n", "nc_x", "=", "opt_net", "[", "'nc_x'", "]", ",", "\n", "out_nc", "=", "opt_net", "[", "'out_nc'", "]", ",", "\n", "nb", "=", "opt_net", "[", "'nb'", "]", ",", "\n", "k_size", "=", "opt", "[", "'data'", "]", "[", "'k_size'", "]", ")", "\n", "\n", "return", "netG", "\n", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.HeadNet.__init__": [[17, 21], ["torch.Module.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k_size", ":", "int", ")", ":", "\n", "        ", "super", "(", "HeadNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "head_k", "=", "torch", ".", "zeros", "(", "1", ",", "1", ",", "1", ",", "k_size", ",", "k_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.HeadNet.forward": [[22, 31], ["torch.upsample", "torch.upsample", "torch.upsample", "network_sr.HeadNet.head_k.repeat().to", "network_sr.HeadNet.head_k.repeat", "torch.upsample.size"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.upsample", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.upsample", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.upsample"], ["", "def", "forward", "(", "\n", "self", ",", "\n", "y", ":", "torch", ".", "Tensor", ",", "\n", "sf", ":", "int", "=", "2", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "x", "=", "F", ".", "upsample", "(", "y", ",", "scale_factor", "=", "sf", ",", "mode", "=", "'bicubic'", ")", "\n", "d", "=", "None", "\n", "k", "=", "self", ".", "head_k", ".", "repeat", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ",", "1", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "\n", "return", "x", ",", "d", ",", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.BodyNet.__init__": [[34, 53], ["torch.Module.__init__", "network_sr.NetX", "network_sr.SolveFFT", "network_sr.NetK", "network_sr.SolveLS"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_nc", ":", "int", ",", "nc_x", ":", "List", "[", "int", "]", ",", "nc_d", ":", "List", "[", "int", "]", ",", "\n", "nc_k", ":", "List", "[", "int", "]", ",", "out_nc", ":", "int", ",", "nb", ":", "int", ",", "\n", "multi_stage", ":", "bool", ")", "->", "None", ":", "\n", "        ", "super", "(", "BodyNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "net_x", ":", "nn", ".", "Module", "=", "NetX", "(", "in_nc", "=", "in_nc", ",", "\n", "nc_x", "=", "nc_x", ",", "\n", "out_nc", "=", "out_nc", ",", "\n", "nb", "=", "nb", ")", "\n", "self", ".", "solve_fft", "=", "SolveFFT", "(", ")", "\n", "\n", "self", ".", "net_d", ":", "Optional", "[", "nn", ".", "Module", "]", "=", "None", "\n", "\n", "self", ".", "net_k", ":", "Optional", "[", "nn", ".", "Module", "]", "=", "None", "\n", "self", ".", "net_k", "=", "NetK", "(", "nc_k", "=", "nc_k", ")", "\n", "\n", "self", ".", "solve_ls", "=", "SolveLS", "(", ")", "\n", "\n", "self", ".", "multi_stage", "=", "multi_stage", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.BodyNet.normalize_k": [[54, 60], ["k.sum().unsqueeze().unsqueeze().unsqueeze().unsqueeze", "k.sum().unsqueeze().unsqueeze().unsqueeze", "k.sum().unsqueeze().unsqueeze", "k.sum().unsqueeze", "k.sum"], "methods", ["None"], ["", "def", "normalize_k", "(", "self", ",", "k", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n            k: N, 1, 1, k_size, k_size\n        \"\"\"", "\n", "return", "k", "/", "k", ".", "sum", "(", "dim", "=", "[", "1", ",", "2", ",", "3", ",", "4", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "\n", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "+", "1e-10", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.BodyNet.forward": [[61, 115], ["network_sr.BodyNet.net_x", "utils.rfft", "utils.p2o", "network_sr.BodyNet.solve_fft", "network_sr.BodyNet.size", "network_sr.BodyNet.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network_sr.BodyNet.solve_ls", "network_sr.BodyNet.normalize_k", "k.view.view.view", "network_sr.BodyNet.net_k", "k.view.view.view", "utils.rfft.unsqueeze", "dx.unsqueeze", "y.unsqueeze", "k.view.view.size", "k.view.view.size", "k.view.view.size", "k.view.view.size", "k.view.view.size", "k.view.view.size", "k.view.view.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "k.view.view.size", "k.view.view.size", "k.view.view.size", "beta_x.sqrt", "k.view.view.size", "k.view.view.size", "beta_k.sqrt"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.rfft", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.p2o", "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.BodyNet.normalize_k"], ["", "def", "forward", "(", "self", ",", "\n", "k", ":", "torch", ".", "Tensor", ",", "\n", "x", ":", "torch", ".", "Tensor", ",", "\n", "d", ":", "torch", ".", "Tensor", ",", "\n", "y", ":", "torch", ".", "Tensor", ",", "\n", "y_", ":", "torch", ".", "Tensor", ",", "\n", "alpha_k", ":", "torch", ".", "Tensor", ",", "\n", "beta_k", ":", "torch", ".", "Tensor", ",", "\n", "alpha_x", ":", "torch", ".", "Tensor", ",", "\n", "beta_x", ":", "torch", ".", "Tensor", ",", "\n", "stage", ":", "int", ",", "\n", "sf", ":", "int", "=", "1", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n            x: N, C_in, H, W or N, C_out, H, W\n            d: N, C_out, C_in, d_size, d_size\n            k: N, 1, 1, k_size, k_size\n            y_: N, C_out, 1, H, W, 2\n            y: N, C_out, H, W\n            alpha/beta: 1, 1, 1, 1\n            reg: float\n        \"\"\"", "\n", "onesided", "=", "sf", "==", "1", "\n", "\n", "# x", "\n", "# solve x", "\n", "if", "stage", "!=", "0", "or", "True", ":", "\n", "            ", "x_", "=", "rfft", "(", "x", ",", "onesided", "=", "onesided", ")", "\n", "k_", "=", "p2o", "(", "k", ",", "x", ".", "shape", "[", "-", "2", ":", "]", ",", "onesided", "=", "onesided", ")", "\n", "x", "=", "self", ".", "solve_fft", "(", "x_", ".", "unsqueeze", "(", "2", ")", ",", "k_", ",", "y_", ",", "alpha_x", ",", "sf", "=", "sf", ")", "\n", "# net x", "\n", "", "beta_x", "=", "(", "1", "/", "beta_x", ".", "sqrt", "(", ")", ")", ".", "repeat", "(", "1", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "x", "=", "self", ".", "net_x", "(", "torch", ".", "cat", "(", "[", "x", ",", "beta_x", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n", "# k", "\n", "if", "self", ".", "multi_stage", ":", "\n", "# solve k", "\n", "            ", "dx", "=", "x", "\n", "\n", "k", "=", "self", ".", "solve_ls", "(", "dx", ".", "unsqueeze", "(", "2", ")", ",", "\n", "k", ",", "\n", "y", ".", "unsqueeze", "(", "2", ")", ",", "\n", "alpha_k", ",", "\n", "sf", "=", "sf", ",", "\n", "stage", "=", "stage", ")", "\n", "k", "=", "self", ".", "normalize_k", "(", "k", ")", "\n", "\n", "# net k", "\n", "beta_k", "=", "(", "1", "/", "beta_k", ".", "sqrt", "(", ")", ")", ".", "repeat", "(", "1", ",", "1", ",", "k", ".", "size", "(", "3", ")", ",", "k", ".", "size", "(", "4", ")", ")", "\n", "size_k", "=", "[", "k", ".", "size", "(", "1", ")", ",", "k", ".", "size", "(", "2", ")", "]", "\n", "k", "=", "k", ".", "view", "(", "k", ".", "size", "(", "0", ")", ",", "k", ".", "size", "(", "1", ")", "*", "k", ".", "size", "(", "2", ")", ",", "k", ".", "size", "(", "3", ")", ",", "k", ".", "size", "(", "4", ")", ")", "\n", "k", "=", "self", ".", "net_k", "(", "torch", ".", "cat", "(", "[", "k", ",", "beta_k", "]", ",", "dim", "=", "1", ")", ")", "\n", "k", "=", "k", ".", "view", "(", "k", ".", "size", "(", "0", ")", ",", "size_k", "[", "0", "]", ",", "size_k", "[", "1", "]", ",", "k", ".", "size", "(", "2", ")", ",", "k", ".", "size", "(", "3", ")", ")", "\n", "\n", "", "return", "k", ",", "x", ",", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.NetX.__init__": [[118, 169], ["torch.Module.__init__", "models.conv", "models.sequential", "models.sequential", "models.sequential", "models.sequential", "models.sequential", "models.sequential", "models.sequential", "models.conv", "models.downsample_strideconv", "models.downsample_strideconv", "models.downsample_strideconv", "models.upsample_convtranspose", "models.upsample_convtranspose", "models.upsample_convtranspose", "models.ResBlock", "models.ResBlock", "models.ResBlock", "models.ResBlock", "models.ResBlock", "models.ResBlock", "models.ResBlock", "range", "range", "range", "range", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.downsample_strideconv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.downsample_strideconv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.downsample_strideconv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.upsample_convtranspose", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.upsample_convtranspose", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.upsample_convtranspose"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_nc", ":", "int", "=", "65", ",", "\n", "nc_x", ":", "List", "[", "int", "]", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "out_nc", ":", "int", "=", "64", ",", "\n", "nb", ":", "int", "=", "2", ")", ":", "\n", "        ", "super", "(", "NetX", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "m_head", "=", "B", ".", "conv", "(", "in_nc", ",", "nc_x", "[", "0", "]", ",", "bias", "=", "False", ",", "mode", "=", "'C'", ")", "\n", "in_nc", "=", "nc_x", "[", "0", "]", "\n", "\n", "self", ".", "m_down1", "=", "B", ".", "sequential", "(", "\n", "*", "[", "\n", "B", ".", "ResBlock", "(", "in_nc", ",", "in_nc", ",", "bias", "=", "False", ",", "mode", "=", "'CRC'", ")", "\n", "for", "_", "in", "range", "(", "nb", ")", "\n", "]", ",", "B", ".", "downsample_strideconv", "(", "in_nc", ",", "nc_x", "[", "1", "]", ",", "bias", "=", "False", ",", "mode", "=", "'2'", ")", ")", "\n", "self", ".", "m_down2", "=", "B", ".", "sequential", "(", "\n", "*", "[", "\n", "B", ".", "ResBlock", "(", "nc_x", "[", "1", "]", ",", "nc_x", "[", "1", "]", ",", "bias", "=", "False", ",", "mode", "=", "'CRC'", ")", "\n", "for", "_", "in", "range", "(", "nb", ")", "\n", "]", ",", "B", ".", "downsample_strideconv", "(", "nc_x", "[", "1", "]", ",", "nc_x", "[", "2", "]", ",", "bias", "=", "False", ",", "mode", "=", "'2'", ")", ")", "\n", "self", ".", "m_down3", "=", "B", ".", "sequential", "(", "\n", "*", "[", "\n", "B", ".", "ResBlock", "(", "nc_x", "[", "2", "]", ",", "nc_x", "[", "2", "]", ",", "bias", "=", "False", ",", "mode", "=", "'CRC'", ")", "\n", "for", "_", "in", "range", "(", "nb", ")", "\n", "]", ",", "B", ".", "downsample_strideconv", "(", "nc_x", "[", "2", "]", ",", "nc_x", "[", "3", "]", ",", "bias", "=", "False", ",", "mode", "=", "'2'", ")", ")", "\n", "\n", "self", ".", "m_body", "=", "B", ".", "sequential", "(", "*", "[", "\n", "B", ".", "ResBlock", "(", "nc_x", "[", "-", "1", "]", ",", "nc_x", "[", "-", "1", "]", ",", "bias", "=", "False", ",", "mode", "=", "'CRC'", ")", "\n", "for", "_", "in", "range", "(", "nb", ")", "\n", "]", ")", "\n", "\n", "self", ".", "m_up3", "=", "B", ".", "sequential", "(", "\n", "B", ".", "upsample_convtranspose", "(", "nc_x", "[", "3", "]", ",", "nc_x", "[", "2", "]", ",", "bias", "=", "False", ",", "mode", "=", "'2'", ")", ",", "\n", "*", "[", "\n", "B", ".", "ResBlock", "(", "nc_x", "[", "2", "]", ",", "nc_x", "[", "2", "]", ",", "bias", "=", "False", ",", "mode", "=", "'CRC'", ")", "\n", "for", "_", "in", "range", "(", "nb", ")", "\n", "]", ")", "\n", "self", ".", "m_up2", "=", "B", ".", "sequential", "(", "\n", "B", ".", "upsample_convtranspose", "(", "nc_x", "[", "2", "]", ",", "nc_x", "[", "1", "]", ",", "bias", "=", "False", ",", "mode", "=", "'2'", ")", ",", "\n", "*", "[", "\n", "B", ".", "ResBlock", "(", "nc_x", "[", "1", "]", ",", "nc_x", "[", "1", "]", ",", "bias", "=", "False", ",", "mode", "=", "'CRC'", ")", "\n", "for", "_", "in", "range", "(", "nb", ")", "\n", "]", ")", "\n", "self", ".", "m_up1", "=", "B", ".", "sequential", "(", "\n", "B", ".", "upsample_convtranspose", "(", "nc_x", "[", "1", "]", ",", "nc_x", "[", "0", "]", ",", "bias", "=", "False", ",", "mode", "=", "'2'", ")", ",", "\n", "*", "[", "\n", "B", ".", "ResBlock", "(", "nc_x", "[", "0", "]", ",", "nc_x", "[", "0", "]", ",", "bias", "=", "False", ",", "mode", "=", "'CRC'", ")", "\n", "for", "_", "in", "range", "(", "nb", ")", "\n", "]", ")", "\n", "\n", "self", ".", "m_tail", "=", "B", ".", "conv", "(", "nc_x", "[", "0", "]", ",", "out_nc", ",", "bias", "=", "False", ",", "mode", "=", "'C'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.NetX.forward": [[170, 190], ["int", "int", "torch.pad", "torch.pad", "torch.pad", "network_sr.NetX.m_head", "network_sr.NetX.m_down1", "network_sr.NetX.m_down2", "network_sr.NetX.m_down3", "network_sr.NetX.m_body", "network_sr.NetX.m_up3", "network_sr.NetX.m_up2", "network_sr.NetX.m_up1", "network_sr.NetX.m_tail", "network_sr.NetX.size", "math.ceil", "math.ceil"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", ":", "\n", "# padding", "\n", "        ", "h", ",", "w", "=", "x", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "paddingBottom", "=", "int", "(", "ceil", "(", "h", "/", "8", ")", "*", "8", "-", "h", ")", "\n", "paddingRight", "=", "int", "(", "ceil", "(", "w", "/", "8", ")", "*", "8", "-", "w", ")", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "0", ",", "paddingRight", ",", "0", ",", "paddingBottom", "]", ",", "mode", "=", "'circular'", ")", "\n", "\n", "x", "=", "self", ".", "m_head", "(", "x", ")", "\n", "x1", "=", "x", "\n", "x2", "=", "self", ".", "m_down1", "(", "x1", ")", "\n", "x3", "=", "self", ".", "m_down2", "(", "x2", ")", "\n", "x4", "=", "self", ".", "m_down3", "(", "x3", ")", "\n", "x", "=", "self", ".", "m_body", "(", "x4", ")", "\n", "x", "=", "self", ".", "m_up3", "(", "x", "+", "x4", ")", "\n", "x", "=", "self", ".", "m_up2", "(", "x", "+", "x3", ")", "\n", "x", "=", "self", ".", "m_up1", "(", "x", "+", "x2", ")", "\n", "x", "=", "self", ".", "m_tail", "(", "x", "+", "x1", ")", "\n", "\n", "x", "=", "x", "[", "...", ",", ":", "h", ",", ":", "w", "]", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.SolveFFT.__init__": [[193, 195], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "SolveFFT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.SolveFFT.forward": [[196, 247], ["alpha.unsqueeze.unsqueeze.unsqueeze", "torch.conj", "torch.conj", "torch.conj", "torch.conj", "torch.conj", "torch.conj", "torch.conj", "torch.conj", "torch.conj", "torch.mean().unsqueeze.sum", "torch.mean().unsqueeze.sum", "torch.mean().unsqueeze.sum", "torch.mean().unsqueeze.sum", "torch.mean().unsqueeze.sum", "torch.mean().unsqueeze.sum", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "q_.repeat.repeat.repeat", "x_.squeeze.squeeze.mean", "x_.squeeze.squeeze.squeeze", "utils.irfft", "utils.irfft", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "list", "utils.splits", "utils.splits", "torch.mean().unsqueeze.squeeze", "torch.mean().unsqueeze.squeeze", "torch.mean().unsqueeze.squeeze", "torch.mean().unsqueeze.squeeze", "torch.mean().unsqueeze.squeeze", "torch.mean().unsqueeze.squeeze"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.irfft", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.irfft", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.splits", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.splits"], ["", "def", "forward", "(", "self", ",", "\n", "x_", ":", "torch", ".", "Tensor", ",", "\n", "d_", ":", "torch", ".", "Tensor", ",", "\n", "y_", ":", "torch", ".", "Tensor", ",", "\n", "alpha", ":", "torch", ".", "Tensor", ",", "\n", "HW", ":", "Optional", "[", "'npt.NDArray[np.float64]'", "]", "=", "None", ",", "\n", "sf", ":", "int", "=", "1", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n            x_: agg - N, 1, C_in, H, W\n                not agg - N, C_out, 1, H, W\n            d_: agg - N, C_out, C_in, H, W\n                not agg - N, 1, 1, H, W\n            y_: N, C_out, 1, H, W\n            alpha: N, 1, 1, 1\n        \"\"\"", "\n", "\n", "onesided", "=", "sf", "==", "1", "\n", "\n", "# alpha: N, 1, 1, 1, 1", "\n", "alpha", "=", "alpha", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "_d", "=", "torch", ".", "conj", "(", "d_", ")", "\n", "_dd_", "=", "_d", "*", "d_", "\n", "z_", "=", "y_", "*", "d_", "+", "alpha", "*", "x_", "\n", "_dz_", "=", "_d", "*", "z_", "\n", "if", "x_", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "            ", "_dd_", "=", "_dd_", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "\n", "_dz_", "=", "_dz_", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "\n", "", "if", "sf", ">", "1", ":", "\n", "            ", "_dz_", "=", "torch", ".", "mean", "(", "splits", "(", "_dz_", ".", "squeeze", "(", "2", ")", ",", "sf", ")", ",", "\n", "dim", "=", "-", "1", ",", "\n", "keepdim", "=", "False", ")", ".", "unsqueeze", "(", "2", ")", "\n", "_dd_", "=", "torch", ".", "mean", "(", "splits", "(", "_dd_", ".", "squeeze", "(", "2", ")", ",", "sf", ")", ",", "\n", "dim", "=", "-", "1", ",", "\n", "keepdim", "=", "False", ")", ".", "unsqueeze", "(", "2", ")", "\n", "", "_dd_a", "=", "_dd_", "+", "alpha", "\n", "q_", "=", "_dz_", "/", "_dd_a", "\n", "\n", "if", "sf", ">", "1", ":", "\n", "            ", "q_", "=", "q_", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "sf", ",", "sf", ")", "\n", "", "d_q_", "=", "d_", "*", "q_", "\n", "x_", "=", "(", "z_", "-", "d_q_", ")", "/", "alpha", "\n", "if", "x_", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "            ", "x_", "=", "x_", ".", "mean", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "x_", "=", "x_", ".", "squeeze", "(", "2", ")", "\n", "", "if", "onesided", ":", "\n", "            ", "x", "=", "irfft", "(", "x_", ",", "onesided", "=", "True", ",", "s", "=", "list", "(", "HW", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "irfft", "(", "x_", ",", "onesided", "=", "False", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.NetD.__init__": [[250, 283], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "nc_d", ":", "List", "[", "int", "]", "=", "[", "16", "]", ",", "\n", "out_nc", ":", "int", "=", "1", ",", "\n", "expand", ":", "int", "=", "1", ")", ":", "\n", "        ", "super", "(", "NetD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "out_nc", "*", "nc_d", "[", "0", "]", "+", "1", ",", "\n", "out_nc", "*", "nc_d", "[", "0", "]", "*", "expand", ",", "\n", "3", ",", "\n", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_nc", "*", "nc_d", "[", "0", "]", "*", "expand", ",", "\n", "out_nc", "*", "nc_d", "[", "0", "]", ",", "\n", "3", ",", "\n", "padding", "=", "1", ")", ")", "\n", "self", ".", "mlp2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "out_nc", "*", "nc_d", "[", "0", "]", ",", "\n", "out_nc", "*", "nc_d", "[", "0", "]", "*", "expand", ",", "\n", "3", ",", "\n", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_nc", "*", "nc_d", "[", "0", "]", "*", "expand", ",", "\n", "out_nc", "*", "nc_d", "[", "0", "]", ",", "\n", "3", ",", "\n", "padding", "=", "1", ")", ")", "\n", "self", ".", "mlp3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "out_nc", "*", "nc_d", "[", "0", "]", ",", "\n", "out_nc", "*", "nc_d", "[", "0", "]", "*", "expand", ",", "\n", "3", ",", "\n", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_nc", "*", "nc_d", "[", "0", "]", "*", "expand", ",", "\n", "out_nc", "*", "nc_d", "[", "0", "]", ",", "\n", "3", ",", "\n", "padding", "=", "1", ")", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.NetD.forward": [[284, 290], ["network_sr.NetD.relu", "network_sr.NetD.relu", "network_sr.NetD.mlp", "network_sr.NetD.mlp2", "network_sr.NetD.mlp3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "d", ")", ":", "\n", "        ", "d1", "=", "d", "\n", "d", "=", "self", ".", "relu", "(", "self", ".", "mlp", "(", "d", ")", ")", "\n", "d", "=", "self", ".", "relu", "(", "self", ".", "mlp2", "(", "d", ")", ")", "\n", "d", "=", "self", ".", "mlp3", "(", "d", ")", "+", "d1", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.NetK.__init__": [[293, 305], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nc_k", ":", "List", "[", "int", "]", "=", "[", "16", "]", ",", "expand", ":", "int", "=", "1", ")", ":", "\n", "        ", "super", "(", "NetK", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", "+", "1", ",", "nc_k", "[", "0", "]", "*", "expand", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "nc_k", "[", "0", "]", "*", "expand", ",", "nc_k", "[", "0", "]", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "self", ".", "mlp2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "nc_k", "[", "0", "]", ",", "nc_k", "[", "0", "]", "*", "expand", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "nc_k", "[", "0", "]", "*", "expand", ",", "nc_k", "[", "0", "]", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "self", ".", "mlp3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "nc_k", "[", "0", "]", ",", "nc_k", "[", "0", "]", "*", "expand", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "nc_k", "[", "0", "]", "*", "expand", ",", "1", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.NetK.forward": [[306, 320], ["int", "int", "torch.pad", "torch.pad", "torch.pad", "network_sr.NetK.relu", "network_sr.NetK.relu", "network_sr.NetK.mlp3", "k1[].unsqueeze", "network_sr.NetK.relu", "network_sr.NetK.size", "network_sr.NetK.mlp", "network_sr.NetK.mlp2", "math.ceil", "math.ceil"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "k", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "h", ",", "w", "=", "k", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "paddingBottom", "=", "int", "(", "ceil", "(", "h", "/", "2", ")", "*", "2", "-", "h", ")", "\n", "paddingRight", "=", "int", "(", "ceil", "(", "w", "/", "2", ")", "*", "2", "-", "w", ")", "\n", "k", "=", "F", ".", "pad", "(", "k", ",", "[", "0", ",", "paddingRight", ",", "0", ",", "paddingBottom", "]", ",", "mode", "=", "'circular'", ")", "\n", "\n", "k1", "=", "k", "\n", "k", "=", "self", ".", "relu", "(", "self", ".", "mlp", "(", "k", ")", ")", "\n", "k", "=", "self", ".", "relu", "(", "self", ".", "mlp2", "(", "k", ")", ")", "\n", "k", "=", "self", ".", "mlp3", "(", "k", ")", "\n", "k", "+=", "k1", "[", ":", ",", "0", ",", ":", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", "\n", "k", "=", "self", ".", "relu", "(", "k", ")", "\n", "k", "=", "k", "[", "...", ",", ":", "h", ",", ":", "w", "]", "\n", "return", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.LUSolve.forward": [[323, 329], ["torch.lu", "torch.lu", "torch.lu", "torch.lu", "torch.lu", "torch.lu", "torch.lu", "torch.lu", "torch.lu", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "ctx.save_for_backward"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "A", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "l", ",", "u", "=", "torch", ".", "lu", "(", "A", ")", "\n", "d", "=", "torch", ".", "lu_solve", "(", "b", ",", "l", ",", "u", ")", "# D = Q-1 @ P", "\n", "ctx", ".", "save_for_backward", "(", "l", ",", "u", ",", "d", ")", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.LUSolve.backward": [[330, 337], ["torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve", "torch.lu_solve.matmul", "torch.lu_solve.matmul", "torch.lu_solve.matmul", "d.transpose"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "dldd", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "l", ",", "u", ",", "d", "=", "ctx", ".", "saved_tensors", "\n", "dldp", "=", "torch", ".", "lu_solve", "(", "dldd", ",", "l", ",", "u", ")", "\n", "dldq", "=", "-", "dldp", ".", "matmul", "(", "d", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "return", "dldq", ",", "dldp", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.CholeskySolve.forward": [[340, 346], ["torch.cholesky", "torch.cholesky", "torch.cholesky", "torch.cholesky", "torch.cholesky", "torch.cholesky", "torch.cholesky", "torch.cholesky", "torch.cholesky", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "ctx.save_for_backward"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "q", ":", "torch", ".", "Tensor", ",", "p", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "l", "=", "torch", ".", "cholesky", "(", "q", ")", "\n", "d", "=", "torch", ".", "cholesky_solve", "(", "p", ",", "l", ")", "# D = Q-1 @ P", "\n", "ctx", ".", "save_for_backward", "(", "l", ",", "d", ")", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.CholeskySolve.backward": [[347, 354], ["torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve", "torch.cholesky_solve.matmul", "torch.cholesky_solve.matmul", "torch.cholesky_solve.matmul", "d.transpose"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "dldd", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "l", ",", "d", "=", "ctx", ".", "saved_tensors", "\n", "dldp", "=", "torch", ".", "cholesky_solve", "(", "dldd", ",", "l", ")", "\n", "dldq", "=", "-", "dldp", ".", "matmul", "(", "d", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "return", "dldq", ",", "dldp", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.LSTSQSolveUniversal.forward": [[357, 362], ["ctx.save_for_backward", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "A", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ",", "N", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "d", "=", "torch", ".", "linalg", ".", "lstsq", "(", "A", ",", "b", ",", "driver", "=", "'gelsd'", ")", "[", "0", "]", "\n", "ctx", ".", "save_for_backward", "(", "A", ",", "d", ",", "N", ")", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.LSTSQSolveUniversal.backward": [[363, 375], ["torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "dldp.matmul", "dldq.repeat().view", "dldp.repeat().view", "dldd.repeat().view", "d.transpose", "dldq.repeat", "dldp.repeat", "dldd.repeat", "N.item", "N.item", "N.item"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "dldd", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "A", ",", "d", ",", "N", "=", "ctx", ".", "saved_tensors", "\n", "dldp", "=", "torch", ".", "linalg", ".", "lstsq", "(", "A", ",", "\n", "dldd", ".", "repeat", "(", "N", ".", "item", "(", ")", ",", "1", ",", "1", ")", ".", "view", "(", "1", ",", "-", "1", ",", "1", ")", ",", "\n", "driver", "=", "'gelsd'", ")", "[", "0", "]", "\n", "dldq", "=", "-", "dldp", ".", "matmul", "(", "d", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "dldq", ",", "dldp", "=", "dldq", ".", "repeat", "(", "N", ".", "item", "(", ")", ",", "1", ",", "\n", "1", ")", ".", "view", "(", "1", ",", "-", "1", ",", "dldq", ".", "shape", "[", "2", "]", ")", ",", "dldp", ".", "repeat", "(", "\n", "N", ".", "item", "(", ")", ",", "1", ",", "\n", "dldp", ".", "shape", "[", "2", "]", ")", ".", "view", "(", "1", ",", "-", "1", ",", "1", ")", "\n", "return", "dldq", ",", "dldp", ",", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.LSTSQSolve.forward": [[378, 383], ["ctx.save_for_backward", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "A", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "d", "=", "torch", ".", "linalg", ".", "lstsq", "(", "A", ",", "b", ",", "driver", "=", "'gelsd'", ")", "[", "0", "]", "\n", "ctx", ".", "save_for_backward", "(", "A", ",", "d", ")", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.LSTSQSolve.backward": [[384, 391], ["torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "torch.linalg.lstsq", "dldp.matmul", "d.transpose"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "dldd", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "A", ",", "d", "=", "ctx", ".", "saved_tensors", "\n", "dldp", "=", "torch", ".", "linalg", ".", "lstsq", "(", "A", ",", "dldd", ",", "driver", "=", "'gelsd'", ")", "[", "0", "]", "\n", "dldq", "=", "-", "dldp", ".", "matmul", "(", "d", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "return", "dldq", ",", "dldp", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.SolveLS.__init__": [[394, 407], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimize_memory", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", "SolveLS", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cholesky_solve", ":", "Callable", "[", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ",", "\n", "torch", ".", "Tensor", "]", "=", "CholeskySolve", ".", "apply", "\n", "self", ".", "lu_solve", ":", "Callable", "[", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ",", "\n", "torch", ".", "Tensor", "]", "=", "LUSolve", ".", "apply", "\n", "self", ".", "lstsq_solve", ":", "Callable", "[", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ",", "\n", "torch", ".", "Tensor", "]", "=", "LSTSQSolve", ".", "apply", "\n", "self", ".", "lstsqu_solve", ":", "Callable", "[", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ",", "\n", "torch", ".", "Tensor", "]", "=", "LSTSQSolveUniversal", ".", "apply", "\n", "self", ".", "optimize_memory", "=", "optimize_memory", "\n", "self", ".", "mosaicing", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.SolveLS.forward": [[408, 469], ["torch.unfold", "torch.unfold", "torch.unfold", "torch.unfold.view().permute().reshape", "y_unfold.reshape", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "x.squeeze", "F.unfold.view().permute().reshape.permute", "torch.diag().unsqueeze().to", "torch.diag().unsqueeze().to", "torch.diag().unsqueeze().to", "torch.diag().unsqueeze().to", "torch.diag().unsqueeze().to", "torch.diag().unsqueeze().to", "torch.diag().unsqueeze().to", "torch.diag().unsqueeze().to", "torch.diag().unsqueeze().to", "alpha.squeeze", "F.unfold.view().permute().reshape.permute", "d.view.view.reshape", "alpha.squeeze", "torch.unfold.view().permute", "xtx.view.view.view", "xty.view.view.view", "network_sr.SolveLS.lstsqu_solve().cuda", "d.view.view.view().repeat", "network_sr.SolveLS.lstsq_solve().cuda", "d.view.view.view", "torch.diag().unsqueeze", "torch.diag().unsqueeze", "torch.diag().unsqueeze", "torch.diag().unsqueeze", "torch.diag().unsqueeze", "torch.diag().unsqueeze", "torch.diag().unsqueeze", "torch.diag().unsqueeze", "torch.diag().unsqueeze", "torch.unfold.view", "network_sr.SolveLS.lstsqu_solve", "d.view.view.view", "network_sr.SolveLS.lstsq_solve", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "xtx.view.view.cpu", "xty.view.view.cpu", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "xtx.view.view.cpu", "xty.view.view.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "x", ":", "torch", ".", "Tensor", ",", "\n", "d", ":", "torch", ".", "Tensor", ",", "\n", "y", ":", "torch", ".", "Tensor", ",", "\n", "alpha", ":", "torch", ".", "Tensor", ",", "\n", "sf", ":", "int", "=", "1", ",", "\n", "stage", ":", "int", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n            x (dictionary): N, 1, C_in, H, W\n            x (kernel): N, C_out, 1, H, W\n            d: N, C_out, C_in, D, D\n            y: N, C_out, 1, H, W\n\n            alpha: N, 1, 1, 1\n            reg: float\n        \"\"\"", "\n", "N", ",", "C_out", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "\n", "D", "=", "d", ".", "shape", "[", "-", "1", "]", "\n", "\n", "offset", "=", "1", "if", "sf", "in", "[", "2", ",", "3", "]", "else", "3", "\n", "# N, C_out * D ** 2, H_crop * W_crop", "\n", "x_offset", "=", "x", ".", "squeeze", "(", "2", ")", "[", "...", ",", "offset", ":", ",", "offset", ":", "]", "\n", "H_offset", ",", "W_offset", "=", "x_offset", ".", "shape", "[", "-", "2", ":", "]", "\n", "H_crop", "=", "(", "H_offset", "-", "D", ")", "//", "sf", "+", "1", "\n", "W_crop", "=", "(", "W_offset", "-", "D", ")", "//", "sf", "+", "1", "\n", "x_unfold", "=", "F", ".", "unfold", "(", "x_offset", ",", "(", "D", ",", "D", ")", ",", "stride", "=", "sf", ")", "\n", "\n", "# N, C_out * H_crop * W_crop, D ** 2", "\n", "x_final", "=", "x_unfold", ".", "view", "(", "N", ",", "C_out", ",", "D", "**", "2", ",", "\n", "-", "1", ")", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", ".", "reshape", "(", "N", ",", "-", "1", ",", "D", "**", "2", ")", "\n", "\n", "left_offset", "=", "2", "if", "sf", "in", "[", "3", ",", "4", "]", "else", "3", "\n", "# N, C_out, 1, H_crop, W_crop", "\n", "y_unfold", "=", "y", "[", "...", ",", "left_offset", ":", "H_crop", "+", "left_offset", ",", "\n", "left_offset", ":", "W_crop", "+", "left_offset", "]", "\n", "\n", "# N, C_out * H_crop * W_crop, 1", "\n", "y_final", "=", "y_unfold", ".", "reshape", "(", "N", ",", "C_out", "*", "H_crop", "*", "W_crop", ",", "1", ")", "\n", "\n", "# reg", "\n", "xtx", "=", "torch", ".", "bmm", "(", "x_final", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ",", "x_final", ")", "\n", "xtx", "+=", "torch", ".", "diag", "(", "torch", ".", "ones", "(", "xtx", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "\n", "alpha", ".", "device", ")", "*", "alpha", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "xty", "=", "torch", ".", "bmm", "(", "x_final", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ",", "y_final", ")", "\n", "xty", "+=", "d", ".", "reshape", "(", "N", ",", "-", "1", ",", "1", ")", "*", "alpha", ".", "squeeze", "(", "-", "1", ")", "\n", "try", ":", "\n", "            ", "if", "stage", "==", "0", ":", "\n", "                ", "xtx", "=", "xtx", ".", "view", "(", "1", ",", "-", "1", ",", "xtx", ".", "shape", "[", "2", "]", ")", "\n", "xty", "=", "xty", ".", "view", "(", "1", ",", "-", "1", ",", "xty", ".", "shape", "[", "2", "]", ")", "\n", "d", "=", "self", ".", "lstsqu_solve", "(", "xtx", ".", "cpu", "(", ")", ",", "xty", ".", "cpu", "(", ")", ",", "\n", "torch", ".", "tensor", "(", "N", ")", ")", ".", "cuda", "(", ")", "\n", "d", "=", "d", ".", "view", "(", "1", ",", "1", ",", "1", ",", "D", ",", "D", ")", ".", "repeat", "(", "N", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "d", "=", "self", ".", "lstsq_solve", "(", "xtx", ".", "cpu", "(", ")", ",", "xty", ".", "cpu", "(", ")", ")", ".", "cuda", "(", ")", "\n", "d", "=", "d", ".", "view", "(", "N", ",", "1", ",", "1", ",", "D", ",", "D", ")", "\n", "", "", "except", ":", "\n", "            ", "pass", "\n", "\n", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.SolveLS.forward_conv": [[470, 585], ["network_sr.SolveLS.cal_xtx", "utils.unfold5d", "xtx_unfold.view.view.view", "xtx.reshape.reshape.flip", "xtx.reshape.reshape.permute", "xtx.reshape.reshape.reshape", "network_sr.SolveLS.cal_xty", "xty.permute.permute.reshape", "xty.permute.permute.permute", "xtx_unfold_raw.view.view.view", "list", "xtx_unfold_raw.view.view.new_zeros", "xtx_unfold_raw.view.view.view", "range", "xtx_unfold.view.view.view", "alpha.squeeze().squeeze", "alpha.squeeze", "d.view().permute.view().permute.reshape().permute", "network_sr.SolveLS.lstsq_solve", "d.view().permute.view().permute.view().permute", "range", "range", "range", "alpha.squeeze", "d.view().permute.view().permute.reshape", "d.view().permute.view().permute.view", "network_sr.SolveLS.lu_solve", "d.view().permute.view().permute.view().permute", "range", "range", "d.view().permute.view().permute.view"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.SolveLS.cal_xtx", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.unfold5d", "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.SolveLS.cal_xty"], ["", "def", "forward_conv", "(", "self", ",", "\n", "x", ":", "torch", ".", "Tensor", ",", "\n", "d", ":", "torch", ".", "Tensor", ",", "\n", "y", ":", "torch", ".", "Tensor", ",", "\n", "alpha", ":", "torch", ".", "Tensor", ",", "\n", "sf", ":", "int", "=", "1", ",", "\n", "solve_kernel", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n            x (dictionary): N, 1, C_in, H, W\n            x (kernel): N, C_out, 1, H, W\n            d: N, C_out, C_in, D, D\n            y: N, C_out, 1, H, W\n\n            alpha: N, 1, 1, 1\n            reg: float\n        \"\"\"", "\n", "N", ",", "_", ",", "C_in", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "alpha", "=", "alpha", "*", "H", "*", "W", "\n", "\n", "if", "not", "solve_kernel", ":", "\n", "            ", "C_out", "=", "y", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "C_out", "=", "1", "\n", "\n", "", "D", "=", "d", ".", "shape", "[", "-", "1", "]", "\n", "\n", "# solve xtx", "\n", "# conv", "\n", "# xtx_raw: N, sf ** 2 * C_in, C_in, 2 * D - 1, 2 * D - 1", "\n", "xtx_raw", "=", "self", ".", "cal_xtx", "(", "x", ",", "D", ",", "sf", "=", "sf", ")", "\n", "\n", "# unfold", "\n", "# xtx_unfold_raw: N, sf ** 2 * C_in, C_in * D ** 2, D ** 2", "\n", "xtx_unfold_raw", "=", "unfold5d", "(", "xtx_raw", ",", "D", ")", "\n", "\n", "if", "sf", ">", "1", ":", "\n", "# xtx_unfold_raw: N, sf ** 2, C_in, C_in * D ** 2, D, D", "\n", "            ", "xtx_unfold_raw", "=", "xtx_unfold_raw", ".", "view", "(", "N", ",", "sf", "**", "2", ",", "C_in", ",", "C_in", "*", "D", "**", "2", ",", "\n", "D", ",", "D", ")", "\n", "xtx_unfold_shape", "=", "list", "(", "xtx_unfold_raw", ".", "shape", ")", "\n", "\n", "xtx_unfold_shape", "[", "1", "]", "=", "1", "\n", "\n", "# xtx_unfold_new: N, 1, C_in, C_in * D ** 2, D, D", "\n", "xtx_unfold", "=", "xtx_unfold_raw", ".", "new_zeros", "(", "xtx_unfold_shape", ")", "\n", "xtx_unfold_raw", "=", "xtx_unfold_raw", ".", "view", "(", "N", ",", "sf", ",", "sf", ",", "C_in", ",", "C_in", "*", "D", "**", "2", ",", "\n", "D", ",", "D", ")", "\n", "\n", "offset", "=", "(", "(", "D", "-", "1", ")", "//", "2", ")", "%", "sf", "\n", "\n", "for", "i", "in", "range", "(", "sf", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "sf", ")", ":", "\n", "                    ", "i_index", "=", "(", "-", "i", "+", "offset", "+", "sf", ")", "%", "sf", "\n", "j_index", "=", "(", "-", "j", "+", "offset", "+", "sf", ")", "%", "sf", "\n", "xtx_unfold", "[", ":", ",", "0", ",", ":", ",", ":", ",", "i", ":", ":", "sf", ",", "\n", "j", ":", ":", "sf", "]", "=", "xtx_unfold_raw", "[", ":", ",", "i_index", ",", "\n", "j_index", ",", ":", ",", ":", ",", "i", ":", ":", "sf", ",", "\n", "j", ":", ":", "sf", "]", "\n", "# xtx_unfold_new: N, C_in, C_in * D ** 2, D ** 2", "\n", "", "", "xtx_unfold", "=", "xtx_unfold", ".", "view", "(", "N", ",", "C_in", ",", "C_in", "*", "D", "**", "2", ",", "D", "**", "2", ")", "\n", "", "else", ":", "\n", "# N, sf ** 2 * C_in, C_in * D ** 2, D ** 2", "\n", "            ", "xtx_unfold", "=", "xtx_unfold_raw", "\n", "\n", "# xtx: N, C_in, C_in, D ** 2, D ** 2", "\n", "", "xtx", "=", "xtx_unfold", ".", "view", "(", "N", ",", "C_in", ",", "C_in", ",", "D", "**", "2", ",", "D", "**", "2", ")", "\n", "\n", "# flip", "\n", "# xtx: not changed", "\n", "xtx", "=", "xtx", ".", "flip", "(", "dims", "=", "(", "-", "1", ",", ")", ")", "\n", "\n", "# permute", "\n", "# xtx: N, C_in, d ** 2, C_in,  D ** 2", "\n", "xtx", "=", "xtx", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ")", "\n", "\n", "# reshape", "\n", "# xtx: N, C_in * d ** 2, C_in * D ** 2", "\n", "xtx", "=", "xtx", ".", "reshape", "(", "-", "1", ",", "C_in", "*", "D", "**", "2", ",", "C_in", "*", "D", "**", "2", ")", "\n", "\n", "# add xtx", "\n", "xtx", "[", ":", ",", "range", "(", "C_in", "*", "D", "**", "2", ")", ",", "\n", "range", "(", "C_in", "*", "\n", "D", "**", "2", ")", "]", "=", "xtx", "[", ":", ",", "range", "(", "C_in", "*", "D", "**", "2", ")", ",", "\n", "range", "(", "C_in", "*", "\n", "D", "**", "2", ")", "]", "+", "alpha", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "# solve xty", "\n", "# xty: N, C_out, C_in, D, D", "\n", "xty", "=", "self", ".", "cal_xty", "(", "x", ",", "y", ",", "D", ",", "sf", "=", "sf", ")", "\n", "\n", "# reshape", "\n", "# xty: N, C_out, C_in * D ** 2", "\n", "xty", "=", "xty", ".", "reshape", "(", "N", ",", "C_out", ",", "C_in", "*", "D", "**", "2", ")", "\n", "\n", "# permute", "\n", "# xty: N, C_in * D ** 2, C_out", "\n", "xty", "=", "xty", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "# reg xty", "\n", "xty", "+=", "alpha", ".", "squeeze", "(", "-", "1", ")", "*", "d", ".", "reshape", "(", "N", ",", "C_out", ",", "C_in", "*", "D", "**", "2", ")", ".", "permute", "(", "\n", "0", ",", "2", ",", "1", ")", "\n", "\n", "# solve", "\n", "try", ":", "\n", "            ", "d", "=", "self", ".", "lstsq_solve", "(", "xtx", ",", "xty", ")", "\n", "d", "=", "d", ".", "view", "(", "N", ",", "C_in", ",", "D", ",", "D", ",", "C_out", ")", ".", "permute", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", "\n", "\n", "", "except", "RuntimeError", ":", "\n", "            ", "try", ":", "\n", "                ", "d", "=", "self", ".", "lu_solve", "(", "xtx", ",", "xty", ")", "\n", "d", "=", "d", ".", "view", "(", "N", ",", "C_in", ",", "D", ",", "D", ",", "C_out", ")", ".", "permute", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", "\n", "", "except", "RuntimeError", ":", "\n", "                ", "pass", "\n", "# TODO END", "\n", "\n", "", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.SolveLS.cal_xtx": [[586, 634], ["x.view", "utils.conv3d", "x.view", "utils.conv2d", "xtx.unsqueeze.unsqueeze.unsqueeze", "list", "x.view.new_zeros", "range", "x.squeeze", "range", "x_kernel[].squeeze"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv3d", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv2d"], ["", "def", "cal_xtx", "(", "self", ",", "\n", "x", ":", "torch", ".", "Tensor", ",", "\n", "d_size", ":", "int", ",", "\n", "sf", ":", "int", "=", "1", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n            x (dn): N, 1, C_in, H, W\n            x (sr): N, C_out, 1, H, W\n            d_size: kernel (d) size\n        \"\"\"", "\n", "N", ",", "C_out", ",", "C_in", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "\n", "padding", "=", "d_size", "-", "1", "\n", "\n", "if", "x", ".", "shape", "[", "1", "]", "==", "1", ":", "# solve d", "\n", "            ", "x_kernel", "=", "x", ".", "view", "(", "N", ",", "C_in", ",", "1", ",", "1", ",", "H", ",", "W", ")", "\n", "\n", "x_kernel_split", "=", "x_kernel", "\n", "\n", "# x: N, 1, C_in, H, W", "\n", "# x_kernel: N, 1, C_in, H, W -> N, sf ** 2 * C_in, 1, 1, H, W", "\n", "# xtx: N, sf ** 2 * C_in, C_in, 2 * d - 1, 2 * d - 1", "\n", "xtx", "=", "conv3d", "(", "x", ",", "x_kernel_split", ",", "padding", ",", "sample_wise", "=", "True", ")", "\n", "", "else", ":", "# solve K", "\n", "            ", "x_kernel", "=", "x", ".", "view", "(", "N", ",", "1", ",", "C_out", ",", "H", ",", "W", ")", "\n", "\n", "if", "sf", ">", "1", ":", "\n", "                ", "zeros_shape", "=", "list", "(", "x_kernel", ".", "shape", ")", "\n", "zeros_shape", "[", "1", "]", "=", "zeros_shape", "[", "1", "]", "*", "sf", "**", "2", "\n", "x_kernel_split", "=", "x_kernel", ".", "new_zeros", "(", "zeros_shape", ")", "\n", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "sf", ")", ":", "\n", "                    ", "for", "j", "in", "range", "(", "sf", ")", ":", "\n", "                        ", "x_kernel_split", "[", ":", ",", "count", ",", ":", ",", "i", ":", ":", "sf", ",", "\n", "j", ":", ":", "sf", "]", "=", "x_kernel", "[", ":", ",", ":", ",", ":", ",", "i", ":", ":", "sf", ",", "\n", "j", ":", ":", "sf", "]", ".", "squeeze", "(", ")", "\n", "count", "+=", "1", "\n", "", "", "", "else", ":", "\n", "                ", "x_kernel_split", "=", "x_kernel", "\n", "\n", "# N, 1, 1, d_size, d_size", "\n", "", "xtx", "=", "conv2d", "(", "x", ".", "squeeze", "(", "2", ")", ",", "\n", "x_kernel_split", ",", "\n", "padding", "=", "padding", ",", "\n", "sample_wise", "=", "True", ")", "\n", "\n", "xtx", "=", "xtx", ".", "unsqueeze", "(", "2", ")", "\n", "", "return", "xtx", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.SolveLS.cal_xty": [[635, 660], ["utils.conv3d", "y.view", "utils.upsample", "utils.conv2d", "xty.unsqueeze.unsqueeze.unsqueeze", "y.unsqueeze", "x.squeeze"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv3d", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.upsample", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv2d"], ["", "def", "cal_xty", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "y", ":", "torch", ".", "Tensor", ",", "D", ":", "int", ",", "sf", ":", "int", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n            x: N, 1, C_in, H, W; or\n            N, C_out, 1, H, W\n            d_size: kernel (d) size\n            y: N, C_out, 1, H, W\n        \"\"\"", "\n", "N", ",", "C_out", ",", "_", ",", "H", ",", "W", "=", "y", ".", "shape", "\n", "padding", "=", "(", "D", "-", "1", ")", "//", "2", "\n", "if", "x", ".", "shape", "[", "1", "]", "==", "1", ":", "# solve d", "\n", "# N, C_out, C_in, D, D", "\n", "            ", "xty", "=", "conv3d", "(", "x", ",", "y", ".", "unsqueeze", "(", "3", ")", ",", "padding", ",", "sample_wise", "=", "True", ")", "\n", "", "else", ":", "# solve k", "\n", "# N, 1, C_out, H, W", "\n", "            ", "y_kernel", "=", "y", ".", "view", "(", "N", ",", "1", ",", "C_out", ",", "H", ",", "W", ")", "\n", "y_kernel", "=", "upsample", "(", "y_kernel", ",", "sf", ",", "mode", "=", "'zero'", ")", "\n", "\n", "# N, 1, D, D", "\n", "xty", "=", "conv2d", "(", "x", ".", "squeeze", "(", "2", ")", ",", "\n", "y_kernel", ",", "\n", "padding", "=", "padding", ",", "\n", "sample_wise", "=", "True", ")", "\n", "xty", "=", "xty", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "return", "xty", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.TailNet.__init__": [[663, 665], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "TailNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.TailNet.forward": [[666, 678], ["utils.conv2d", "torch.pad", "torch.pad", "torch.pad", "d.size"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv2d"], ["", "def", "forward", "(", "self", ",", "x", ",", "d", ")", ":", "\n", "        ", "if", "d", "is", "not", "None", ":", "\n", "            ", "y", "=", "conv2d", "(", "F", ".", "pad", "(", "x", ",", "[", "\n", "(", "d", ".", "size", "(", "-", "1", ")", "-", "1", ")", "//", "2", ",", "\n", "]", "*", "4", ",", "mode", "=", "'circular'", ")", ",", "\n", "d", ",", "\n", "sample_wise", "=", "True", ")", "\n", "\n", "", "else", ":", "\n", "            ", "y", "=", "x", "\n", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.HyPaNet.__init__": [[681, 691], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Softplus", "torch.Softplus", "torch.Softplus"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_nc", "=", "1", ",", "\n", "nc", "=", "256", ",", "\n", "out_nc", "=", "8", ",", "\n", ")", ":", "\n", "        ", "super", "(", "HyPaNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_nc", ",", "nc", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "nc", ",", "out_nc", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "nn", ".", "Softplus", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.HyPaNet.forward": [[692, 696], ["network_sr.HyPaNet.mlp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "(", "x", "-", "0.098", ")", "/", "0.0566", "\n", "x", "=", "self", ".", "mlp", "(", "x", ")", "+", "1e-6", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.UDKE.__init__": [[699, 724], ["torch.Module.__init__", "network_sr.HeadNet", "network_sr.BodyNet", "network_sr.TailNet", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "network_sr.UDKE.hypa_list.append", "network_sr.HyPaNet"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "n_iter", ":", "int", "=", "1", ",", "\n", "in_nc", ":", "int", "=", "1", ",", "\n", "nc_x", ":", "List", "[", "int", "]", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "nb", ":", "int", "=", "1", ",", "\n", "k_size", ":", "int", "=", "25", ",", "\n", "**", "kargs", ":", "Any", ")", ":", "\n", "        ", "super", "(", "UDKE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "head", ":", "nn", ".", "Module", "=", "HeadNet", "(", "k_size", "=", "k_size", ")", "\n", "\n", "self", ".", "body", ":", "nn", ".", "Module", "=", "BodyNet", "(", "in_nc", "=", "in_nc", "+", "1", ",", "\n", "nc_x", "=", "nc_x", ",", "\n", "nc_d", "=", "nc_x", ",", "\n", "nc_k", "=", "nc_x", ",", "\n", "out_nc", "=", "in_nc", ",", "\n", "nb", "=", "nb", ",", "\n", "multi_stage", "=", "n_iter", ">", "1", ")", "\n", "self", ".", "tail", "=", "TailNet", "(", ")", "\n", "\n", "self", ".", "hypa_list", ":", "nn", ".", "ModuleList", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "n_iter", ")", ":", "\n", "            ", "self", ".", "hypa_list", ".", "append", "(", "HyPaNet", "(", "in_nc", "=", "1", ",", "out_nc", "=", "6", ")", ")", "\n", "\n", "", "self", ".", "n_iter", "=", "n_iter", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.network_sr.UDKE.forward": [[725, 758], ["utils.rfft().unsqueeze", "network_sr.UDKE.head", "range", "hypas[].unsqueeze", "hypas[].unsqueeze", "hypas[].unsqueeze", "hypas[].unsqueeze", "network_sr.UDKE.body", "network_sr.UDKE.tail", "dxs.append", "ks.append", "utils.rfft", "utils.upsample"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.rfft", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.upsample"], ["", "def", "forward", "(", "self", ",", "y", ":", "torch", ".", "Tensor", ",", "sigma", ":", "torch", ".", "Tensor", ",", "sf", ":", "int", "=", "1", ")", ":", "\n", "        ", "onesided", "=", "sf", "==", "1", "\n", "\n", "# prepare y_", "\n", "y_", "=", "rfft", "(", "upsample", "(", "y", ",", "sf", ")", ",", "onesided", "=", "onesided", ")", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "# head_net", "\n", "x", ",", "d", ",", "k", "=", "self", ".", "head", "(", "y", ",", "sf", "=", "sf", ")", "\n", "\n", "dxs", "=", "[", "]", "\n", "ks", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_iter", ")", ":", "\n", "            ", "hypas", "=", "self", ".", "hypa_list", "[", "i", "]", "(", "sigma", ")", "\n", "alpha_x", "=", "hypas", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "-", "1", ")", "\n", "beta_x", "=", "hypas", "[", ":", ",", "1", "]", ".", "unsqueeze", "(", "-", "1", ")", "\n", "alpha_k", "=", "hypas", "[", ":", ",", "4", "]", ".", "unsqueeze", "(", "-", "1", ")", "\n", "beta_k", "=", "hypas", "[", ":", ",", "5", "]", ".", "unsqueeze", "(", "-", "1", ")", "\n", "k", ",", "x", ",", "d", "=", "self", ".", "body", "(", "k", "=", "k", ",", "\n", "x", "=", "x", ",", "\n", "d", "=", "d", ",", "\n", "y", "=", "y", ",", "\n", "y_", "=", "y_", ",", "\n", "alpha_k", "=", "alpha_k", ",", "\n", "beta_k", "=", "beta_k", ",", "\n", "alpha_x", "=", "alpha_x", ",", "\n", "beta_x", "=", "beta_x", ",", "\n", "stage", "=", "i", ",", "\n", "sf", "=", "sf", ")", "\n", "dx", "=", "self", ".", "tail", "(", "x", ",", "d", ")", "\n", "dxs", ".", "append", "(", "dx", ")", "\n", "ks", ".", "append", "(", "k", ")", "\n", "", "return", "dxs", ",", "ks", ",", "d", "\n", "", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.__init__": [[14, 25], ["torch.device", "torch.device", "torch.device", "torch.device", "models.select_network.init_net().to", "torch.nn.parallel.DataParallel", "torch.nn.parallel.DataParallel", "model.Model.netG.eval", "models.select_network.init_net"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.select_network.init_net"], ["    ", "def", "__init__", "(", "self", ",", "opt", ":", "Dict", "[", "str", ",", "Any", "]", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "self", ".", "save_dir", "=", "opt", "[", "'path'", "]", "[", "'models'", "]", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\n", "'cuda'", "if", "opt", "[", "'gpu_ids'", "]", "is", "not", "None", "else", "'cpu'", ")", "\n", "\n", "self", ".", "netG", "=", "init_net", "(", "opt", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "netG", "=", "DataParallel", "(", "self", ".", "netG", ")", "\n", "self", ".", "netG", ".", "eval", "(", ")", "\n", "\n", "self", ".", "metrics", ":", "Dict", "[", "str", ",", "Any", "]", "=", "{", "'psnr'", ":", "0", ",", "'ssim'", ":", "0", ",", "'psnr_k'", ":", "0", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.init": [[26, 29], ["model.Model.load_model"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.load_model"], ["", "def", "init", "(", "self", ")", ":", "\n", "        ", "self", ".", "opt_test", "=", "self", ".", "opt", "[", "'test'", "]", "\n", "self", ".", "load_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.feed_data": [[30, 37], ["data[].to", "data[].to", "data[].to", "data[].to", "[].item"], "methods", ["None"], ["", "def", "feed_data", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "Any", "]", ")", ":", "\n", "        ", "self", ".", "y", "=", "data", "[", "'y'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "y_gt", "=", "data", "[", "'y_gt'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "k_gt", "=", "data", "[", "'k_gt'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "sigma", "=", "data", "[", "'sigma'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "sf", "=", "data", "[", "'sf'", "]", "[", "0", "]", ".", "item", "(", ")", "\n", "self", ".", "path", "=", "data", "[", "'path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.test": [[38, 42], ["model.Model.prepare_visuals", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.Model.netG"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.prepare_visuals"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "dx", ",", "self", ".", "k", ",", "self", ".", "d", "=", "self", ".", "netG", "(", "self", ".", "y", ",", "self", ".", "sigma", ",", "self", ".", "sf", ")", "\n", "", "self", ".", "prepare_visuals", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.prepare_visuals": [[43, 54], ["utils.utils_image.tensor2uint", "utils.utils_image.tensor2uint", "utils.utils_image.tensor2uint", "utils.utils_image.tensor2uint", "utils.utils_image.tensor2uint", "model.Model.y[].detach().float().cpu", "model.Model.dx[].detach().float().cpu", "model.Model.y_gt[].detach().float().cpu", "model.Model.k[].detach().float().cpu", "model.Model.k_gt[].detach().float().cpu", "model.Model.y[].detach().float", "model.Model.dx[].detach().float", "model.Model.y_gt[].detach().float", "model.Model.k[].detach().float", "model.Model.k_gt[].detach().float", "model.Model.y[].detach", "model.Model.dx[].detach", "model.Model.y_gt[].detach", "model.Model.k[].detach", "model.Model.k_gt[].detach"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.tensor2uint", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.tensor2uint", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.tensor2uint", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.tensor2uint", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.tensor2uint"], ["", "def", "prepare_visuals", "(", "self", ")", ":", "\n", "        ", "self", ".", "out_dict", ":", "Dict", "[", "str", ",", "Any", "]", "=", "{", "}", "\n", "self", ".", "out_dict", "[", "'y'", "]", "=", "util", ".", "tensor2uint", "(", "self", ".", "y", "[", "0", "]", ".", "detach", "(", ")", ".", "float", "(", ")", ".", "cpu", "(", ")", ")", "\n", "self", ".", "out_dict", "[", "'dx'", "]", "=", "util", ".", "tensor2uint", "(", "\n", "self", ".", "dx", "[", "0", "]", ".", "detach", "(", ")", ".", "float", "(", ")", ".", "cpu", "(", ")", ")", "\n", "self", ".", "out_dict", "[", "'y_gt'", "]", "=", "util", ".", "tensor2uint", "(", "\n", "self", ".", "y_gt", "[", "0", "]", ".", "detach", "(", ")", ".", "float", "(", ")", ".", "cpu", "(", ")", ")", "\n", "self", ".", "out_dict", "[", "'path'", "]", "=", "self", ".", "path", "[", "0", "]", "\n", "self", ".", "out_dict", "[", "'k'", "]", "=", "util", ".", "tensor2uint", "(", "self", ".", "k", "[", "0", "]", ".", "detach", "(", ")", ".", "float", "(", ")", ".", "cpu", "(", ")", ")", "\n", "self", ".", "out_dict", "[", "'k_gt'", "]", "=", "util", ".", "tensor2uint", "(", "\n", "self", ".", "k_gt", "[", "0", "]", ".", "detach", "(", ")", ".", "float", "(", ")", ".", "cpu", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.cal_metrics": [[55, 66], ["skimage.metrics.peak_signal_noise_ratio", "skimage.metrics.structural_similarity", "skimage.metrics.peak_signal_noise_ratio"], "methods", ["None"], ["", "def", "cal_metrics", "(", "self", ")", ":", "\n", "        ", "self", ".", "metrics", "[", "'psnr'", "]", "=", "peak_signal_noise_ratio", "(", "self", ".", "out_dict", "[", "'dx'", "]", ",", "\n", "self", ".", "out_dict", "[", "'y_gt'", "]", ")", "\n", "self", ".", "metrics", "[", "'ssim'", "]", "=", "structural_similarity", "(", "self", ".", "out_dict", "[", "'dx'", "]", ",", "\n", "self", ".", "out_dict", "[", "'y_gt'", "]", ",", "\n", "multichannel", "=", "True", ")", "\n", "self", ".", "metrics", "[", "'psnr_k'", "]", "=", "peak_signal_noise_ratio", "(", "\n", "self", ".", "out_dict", "[", "'k'", "]", ",", "self", ".", "out_dict", "[", "'k_gt'", "]", ")", "\n", "\n", "return", "self", ".", "metrics", "[", "'psnr'", "]", ",", "self", ".", "metrics", "[", "'ssim'", "]", ",", "self", ".", "metrics", "[", "\n", "'psnr_k'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.save_visuals": [[67, 85], ["os.path.join", "os.makedirs", "os.path.join", "utils.utils_image.imsave", "utils.utils_image.imsave", "utils.utils_image.imsave", "utils.utils_image.imsave", "utils.utils_image.imsave", "os.path.splitext", "os.path.join.replace", "os.path.join.replace", "os.path.join.replace", "os.path.join.replace", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.imsave", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.imsave", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.imsave", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.imsave", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.imsave"], ["", "def", "save_visuals", "(", "self", ",", "tag", ":", "str", ")", ":", "\n", "        ", "y_img", "=", "self", ".", "out_dict", "[", "'y'", "]", "\n", "y_gt_img", "=", "self", ".", "out_dict", "[", "'y_gt'", "]", "\n", "dx_img", "=", "self", ".", "out_dict", "[", "'dx'", "]", "\n", "path", "=", "self", ".", "out_dict", "[", "'path'", "]", "\n", "\n", "img_name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "path", ")", ")", "[", "0", "]", "\n", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opt", "[", "'path'", "]", "[", "'images'", "]", ",", "img_name", ")", "\n", "os", ".", "makedirs", "(", "img_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "save_img_path", "=", "os", ".", "path", ".", "join", "(", "img_dir", ",", "f\"{img_name:s}_{tag}.png\"", ")", "\n", "util", ".", "imsave", "(", "dx_img", ",", "save_img_path", ")", "\n", "util", ".", "imsave", "(", "y_img", ",", "save_img_path", ".", "replace", "(", "'.png'", ",", "'_y.png'", ")", ")", "\n", "util", ".", "imsave", "(", "y_gt_img", ",", "save_img_path", ".", "replace", "(", "'.png'", ",", "'_y_gt.png'", ")", ")", "\n", "util", ".", "imsave", "(", "self", ".", "out_dict", "[", "'k_gt'", "]", ",", "\n", "save_img_path", ".", "replace", "(", "'.png'", ",", "'_k_gt.png'", ")", ")", "\n", "util", ".", "imsave", "(", "self", ".", "out_dict", "[", "'k'", "]", ",", "\n", "save_img_path", ".", "replace", "(", "'.png'", ",", "'_k.png'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.model.Model.load_model": [[86, 119], ["os.path.join", "print", "isinstance", "network.head.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "network.body.net_x.load_state_dict", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "network.hypa_list.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "os.path.exists", "print", "network.body.net_k.load_state_dict", "os.path.join", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "load_model", "(", "self", ")", ":", "\n", "        ", "load_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opt", "[", "'path'", "]", "[", "'root'", "]", ",", "\n", "self", ".", "opt", "[", "'path'", "]", "[", "'pretrained_netG'", "]", ")", "\n", "\n", "print", "(", "f'Loading model from {load_path}'", ")", "\n", "\n", "network", "=", "self", ".", "netG", "\n", "\n", "if", "isinstance", "(", "network", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "network", "=", "network", ".", "module", "\n", "\n", "# load head", "\n", "", "network", ".", "head", ".", "load_state_dict", "(", "# type: ignore", "\n", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "load_path", ",", "'models'", ",", "'head.pth'", ")", ")", ",", "\n", "strict", "=", "True", ")", "\n", "\n", "# load x", "\n", "state_dict_x", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "load_path", ",", "'models'", ",", "'x.pth'", ")", ")", "\n", "network", ".", "body", ".", "net_x", ".", "load_state_dict", "(", "# type: ignore", "\n", "state_dict_x", ",", "strict", "=", "False", ")", "\n", "\n", "# load k", "\n", "path_k", "=", "os", ".", "path", ".", "join", "(", "load_path", ",", "'models'", ",", "'k.pth'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "path_k", ")", "and", "network", ".", "body", ".", "net_k", "is", "not", "None", ":", "\n", "            ", "print", "(", "'load kernel net'", ")", "\n", "network", ".", "body", ".", "net_k", ".", "load_state_dict", "(", "# type: ignore", "\n", "torch", ".", "load", "(", "path_k", ")", ",", "strict", "=", "True", ")", "\n", "\n", "# load hypa", "\n", "", "state_dict_hypa", "=", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "load_path", ",", "'models'", ",", "'hypa.pth'", ")", ")", "\n", "network", ".", "hypa_list", ".", "load_state_dict", "(", "# type: ignore", "\n", "state_dict_hypa", ",", "strict", "=", "True", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.PixelUnShuffle.__init__": [[167, 170], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["def", "__init__", "(", "self", ",", "upscale_factor", ")", ":", "\n", "        ", "super", "(", "PixelUnShuffle", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upscale_factor", "=", "upscale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.PixelUnShuffle.forward": [[171, 173], ["basicblock.pixel_unshuffle"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.pixel_unshuffle"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "pixel_unshuffle", "(", "input", ",", "self", ".", "upscale_factor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.PixelUnShuffle.extra_repr": [[174, 176], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'upscale_factor={}'", ".", "format", "(", "self", ".", "upscale_factor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ConditionalBatchNorm2d.__init__": [[183, 191], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Embedding", "torch.Embedding", "torch.Embedding", "basicblock.ConditionalBatchNorm2d.embed.weight.data[].normal_", "basicblock.ConditionalBatchNorm2d.embed.weight.data[].zero_"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_features", ",", "affine", "=", "False", ")", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "num_features", "*", "2", ")", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", ":", "num_features", "]", ".", "normal_", "(", "\n", "1", ",", "0.02", ")", "# Initialise scale at N(1, 0.02)", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", "num_features", ":", "]", ".", "zero_", "(", "\n", ")", "# Initialise bias at 0", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ConditionalBatchNorm2d.forward": [[193, 199], ["basicblock.ConditionalBatchNorm2d.bn", "basicblock.ConditionalBatchNorm2d.embed().chunk", "beta.view", "basicblock.ConditionalBatchNorm2d.embed", "gamma.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "out", "=", "self", ".", "bn", "(", "x", ")", "\n", "gamma", ",", "beta", "=", "self", ".", "embed", "(", "y", ")", ".", "chunk", "(", "2", ",", "1", ")", "\n", "out", "=", "gamma", ".", "view", "(", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "*", "out", "+", "beta", ".", "view", "(", "\n", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ConcatBlock.__init__": [[205, 208], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "submodule", ")", ":", "\n", "        ", "super", "(", "ConcatBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sub", "=", "submodule", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ConcatBlock.forward": [[209, 212], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "basicblock.ConcatBlock.sub"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "torch", ".", "cat", "(", "(", "x", ",", "self", ".", "sub", "(", "x", ")", ")", ",", "dim", "=", "1", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ConcatBlock.__repr__": [[213, 215], ["basicblock.ConcatBlock.sub.__repr__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ShortcutBlock.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sub", ".", "__repr__", "(", ")", "+", "'concat'", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ShortcutBlock.__init__": [[221, 225], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "submodule", ")", ":", "\n", "        ", "super", "(", "ShortcutBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "sub", "=", "submodule", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ShortcutBlock.forward": [[226, 229], ["basicblock.ShortcutBlock.sub"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "x", "+", "self", ".", "sub", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ShortcutBlock.__repr__": [[230, 235], ["basicblock.ShortcutBlock.sub.__repr__().replace", "basicblock.ShortcutBlock.sub.__repr__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ShortcutBlock.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "tmpstr", "=", "'Identity + \\n|'", "\n", "modstr", "=", "self", ".", "sub", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n|'", ")", "\n", "tmpstr", "=", "tmpstr", "+", "modstr", "\n", "return", "tmpstr", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ResBlock.__init__": [[241, 258], ["torch.Module.__init__", "basicblock.conv", "mode[].lower"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'CRC'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "in_channels", "==", "out_channels", ",", "'Only support in_channels==out_channels.'", "\n", "if", "mode", "[", "0", "]", "in", "[", "'R'", ",", "'L'", "]", ":", "\n", "            ", "mode", "=", "mode", "[", "0", "]", ".", "lower", "(", ")", "+", "mode", "[", "1", ":", "]", "\n", "\n", "", "self", ".", "res", "=", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "\n", "padding", ",", "bias", ",", "mode", ",", "negative_slope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ResBlock.forward": [[259, 262], ["basicblock.ResBlock.res"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "res", "(", "x", ")", "\n", "return", "x", "+", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.IMDBlock.__init__": [[284, 316], ["torch.Module.__init__", "int", "int", "basicblock.conv", "basicblock.conv", "basicblock.conv", "basicblock.conv", "basicblock.conv"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'CL'", ",", "\n", "d_rate", "=", "0.25", ",", "\n", "negative_slope", "=", "0.05", ")", ":", "\n", "        ", "super", "(", "IMDBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "d_nc", "=", "int", "(", "in_channels", "*", "d_rate", ")", "\n", "self", ".", "r_nc", "=", "int", "(", "in_channels", "-", "self", ".", "d_nc", ")", "\n", "\n", "assert", "mode", "[", "0", "]", "==", "'C'", ",", "'convolutional layer first'", "\n", "\n", "self", ".", "conv1", "=", "conv", "(", "in_channels", ",", "in_channels", ",", "kernel_size", ",", "stride", ",", "\n", "padding", ",", "bias", ",", "mode", ",", "negative_slope", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "self", ".", "r_nc", ",", "in_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", ",", "mode", ",", "negative_slope", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "self", ".", "r_nc", ",", "in_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", ",", "mode", ",", "negative_slope", ")", "\n", "self", ".", "conv4", "=", "conv", "(", "self", ".", "r_nc", ",", "self", ".", "d_nc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", ",", "mode", "[", "0", "]", ",", "negative_slope", ")", "\n", "self", ".", "conv1x1", "=", "conv", "(", "self", ".", "d_nc", "*", "4", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "bias", ",", "\n", "mode", "=", "mode", "[", "0", "]", ",", "\n", "negative_slope", "=", "negative_slope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.IMDBlock.forward": [[317, 324], ["torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "basicblock.IMDBlock.conv4", "basicblock.IMDBlock.conv1x1", "basicblock.IMDBlock.conv1", "basicblock.IMDBlock.conv2", "basicblock.IMDBlock.conv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "d1", ",", "r1", "=", "torch", ".", "split", "(", "self", ".", "conv1", "(", "x", ")", ",", "(", "self", ".", "d_nc", ",", "self", ".", "r_nc", ")", ",", "dim", "=", "1", ")", "\n", "d2", ",", "r2", "=", "torch", ".", "split", "(", "self", ".", "conv2", "(", "r1", ")", ",", "(", "self", ".", "d_nc", ",", "self", ".", "r_nc", ")", ",", "dim", "=", "1", ")", "\n", "d3", ",", "r3", "=", "torch", ".", "split", "(", "self", ".", "conv3", "(", "r2", ")", ",", "(", "self", ".", "d_nc", ",", "self", ".", "r_nc", ")", ",", "dim", "=", "1", ")", "\n", "d4", "=", "self", ".", "conv4", "(", "r3", ")", "\n", "res", "=", "self", ".", "conv1x1", "(", "torch", ".", "cat", "(", "(", "d1", ",", "d2", ",", "d3", ",", "d4", ")", ",", "dim", "=", "1", ")", ")", "\n", "return", "x", "+", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.CALayer.__init__": [[330, 339], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", "=", "64", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "conv_fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "reduction", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.CALayer.forward": [[340, 344], ["basicblock.CALayer.avg_pool", "basicblock.CALayer.conv_fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_fc", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.RCABlock.__init__": [[350, 368], ["torch.Module.__init__", "basicblock.conv", "basicblock.CALayer", "mode[].lower"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'CRC'", ",", "\n", "reduction", "=", "16", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "RCABlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "in_channels", "==", "out_channels", ",", "'Only support in_channels==out_channels.'", "\n", "if", "mode", "[", "0", "]", "in", "[", "'R'", ",", "'L'", "]", ":", "\n", "            ", "mode", "=", "mode", "[", "0", "]", ".", "lower", "(", ")", "+", "mode", "[", "1", ":", "]", "\n", "\n", "", "self", ".", "res", "=", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "\n", "padding", ",", "bias", ",", "mode", ",", "negative_slope", ")", "\n", "self", ".", "ca", "=", "CALayer", "(", "out_channels", ",", "reduction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.RCABlock.forward": [[369, 373], ["basicblock.RCABlock.res", "basicblock.RCABlock.ca"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "res", "(", "x", ")", "\n", "res", "=", "self", ".", "ca", "(", "res", ")", "\n", "return", "res", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.RCAGroup.__init__": [[379, 402], ["torch.Module.__init__", "RG.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "basicblock.RCABlock", "basicblock.conv", "mode[].lower", "range"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'CRC'", ",", "\n", "reduction", "=", "16", ",", "\n", "nb", "=", "12", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "RCAGroup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "in_channels", "==", "out_channels", ",", "'Only support in_channels==out_channels.'", "\n", "if", "mode", "[", "0", "]", "in", "[", "'R'", ",", "'L'", "]", ":", "\n", "            ", "mode", "=", "mode", "[", "0", "]", ".", "lower", "(", ")", "+", "mode", "[", "1", ":", "]", "\n", "\n", "", "RG", "=", "[", "\n", "RCABlock", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", ",", "mode", ",", "reduction", ",", "negative_slope", ")", "for", "_", "in", "range", "(", "nb", ")", "\n", "]", "\n", "RG", ".", "append", "(", "conv", "(", "out_channels", ",", "out_channels", ",", "mode", "=", "'C'", ")", ")", "\n", "self", ".", "rg", "=", "nn", ".", "Sequential", "(", "\n", "*", "RG", ")", "# self.rg = ShortcutBlock(nn.Sequential(*RG))", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.RCAGroup.forward": [[403, 406], ["basicblock.RCAGroup.rg"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "rg", "(", "x", ")", "\n", "return", "res", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ResidualDenseBlock_5C.__init__": [[413, 434], ["torch.Module.__init__", "basicblock.conv", "basicblock.conv", "basicblock.conv", "basicblock.conv", "basicblock.conv"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "nc", "=", "64", ",", "\n", "gc", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'CR'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "ResidualDenseBlock_5C", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# gc: growth channel", "\n", "self", ".", "conv1", "=", "conv", "(", "nc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", ",", "mode", ",", "\n", "negative_slope", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "nc", "+", "gc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", ",", "\n", "mode", ",", "negative_slope", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "nc", "+", "2", "*", "gc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", ",", "\n", "mode", ",", "negative_slope", ")", "\n", "self", ".", "conv4", "=", "conv", "(", "nc", "+", "3", "*", "gc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", ",", "\n", "mode", ",", "negative_slope", ")", "\n", "self", ".", "conv5", "=", "conv", "(", "nc", "+", "4", "*", "gc", ",", "nc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", ",", "\n", "mode", "[", ":", "-", "1", "]", ",", "negative_slope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.ResidualDenseBlock_5C.forward": [[435, 442], ["basicblock.ResidualDenseBlock_5C.conv1", "basicblock.ResidualDenseBlock_5C.conv2", "basicblock.ResidualDenseBlock_5C.conv3", "basicblock.ResidualDenseBlock_5C.conv4", "basicblock.ResidualDenseBlock_5C.conv5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "basicblock.ResidualDenseBlock_5C.mul_"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x2", "=", "self", ".", "conv2", "(", "torch", ".", "cat", "(", "(", "x", ",", "x1", ")", ",", "1", ")", ")", "\n", "x3", "=", "self", ".", "conv3", "(", "torch", ".", "cat", "(", "(", "x", ",", "x1", ",", "x2", ")", ",", "1", ")", ")", "\n", "x4", "=", "self", ".", "conv4", "(", "torch", ".", "cat", "(", "(", "x", ",", "x1", ",", "x2", ",", "x3", ")", ",", "1", ")", ")", "\n", "x5", "=", "self", ".", "conv5", "(", "torch", ".", "cat", "(", "(", "x", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ",", "1", ")", ")", "\n", "return", "x5", ".", "mul_", "(", "0.2", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.RRDB.__init__": [[449, 466], ["torch.Module.__init__", "basicblock.ResidualDenseBlock_5C", "basicblock.ResidualDenseBlock_5C", "basicblock.ResidualDenseBlock_5C"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "nc", "=", "64", ",", "\n", "gc", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'CR'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "RRDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "RDB1", "=", "ResidualDenseBlock_5C", "(", "nc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", ",", "mode", ",", "negative_slope", ")", "\n", "self", ".", "RDB2", "=", "ResidualDenseBlock_5C", "(", "nc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", ",", "mode", ",", "negative_slope", ")", "\n", "self", ".", "RDB3", "=", "ResidualDenseBlock_5C", "(", "nc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", ",", "mode", ",", "negative_slope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.RRDB.forward": [[467, 472], ["basicblock.RRDB.RDB1", "basicblock.RRDB.RDB2", "basicblock.RRDB.RDB3", "basicblock.RRDB.mul_"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "RDB1", "(", "x", ")", "\n", "out", "=", "self", ".", "RDB2", "(", "out", ")", "\n", "out", "=", "self", ".", "RDB3", "(", "out", ")", "\n", "return", "out", ".", "mul_", "(", "0.2", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.Unsqueeze.__init__": [[604, 607], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "axis", ")", ":", "\n", "        ", "super", "(", "Unsqueeze", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "axis", "=", "axis", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.Unsqueeze.forward": [[608, 610], ["x.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "unsqueeze", "(", "self", ".", "axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.Squeeze.__init__": [[613, 616], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "axis", ")", ":", "\n", "        ", "super", "(", "Squeeze", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "axis", "=", "axis", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.Squeeze.forward": [[617, 619], ["x.squeeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "squeeze", "(", "self", ".", "axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.MergeAxis.__init__": [[622, 625], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "axis", ")", ":", "\n", "        ", "super", "(", "MergeAxis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "axis", "=", "axis", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.MergeAxis.forward": [[626, 640], ["enumerate", "x.view.view.view", "shape.append", "shape.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shape", "=", "[", "]", "\n", "shape_merged", "=", "1", "\n", "for", "dim", ",", "s", "in", "enumerate", "(", "x", ".", "shape", ")", ":", "\n", "            ", "if", "dim", "not", "in", "self", ".", "axis", ":", "\n", "                ", "if", "shape_merged", ">", "1", ":", "\n", "                    ", "shape", ".", "append", "(", "shape_merged", ")", "\n", "shape_merged", "=", "-", "1", "\n", "", "shape", ".", "append", "(", "s", ")", "\n", "", "else", ":", "\n", "                ", "shape_merged", "*=", "s", "\n", "", "", "x", "=", "x", ".", "view", "(", "shape", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.SplitAxis.__init__": [[643, 647], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "axis", ",", "target", ")", ":", "\n", "        ", "super", "(", "SplitAxis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "axis", "=", "axis", "\n", "self", ".", "target", "=", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.SplitAxis.forward": [[648, 658], ["enumerate", "x.view.view.view", "shape.append", "shape.extend"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shape", "=", "[", "]", "\n", "for", "dim", ",", "s", "in", "enumerate", "(", "x", ".", "shape", ")", ":", "\n", "            ", "if", "dim", "!=", "self", ".", "axis", ":", "\n", "                ", "shape", ".", "append", "(", "s", ")", "\n", "", "else", ":", "\n", "                ", "shape", ".", "extend", "(", "self", ".", "target", ")", "\n", "", "", "x", "=", "x", ".", "view", "(", "shape", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.Permute.__init__": [[661, 664], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "axis", ")", ":", "\n", "        ", "super", "(", "Permute", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "axis", "=", "axis", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.Permute.forward": [[665, 667], ["x.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "permute", "(", "self", ".", "axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.NonLocalBlock2D.__init__": [[794, 864], ["torch.Module.__init__", "basicblock.conv", "basicblock.conv", "downsample_block", "downsample_block", "basicblock.conv", "basicblock.conv", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "nc", "=", "64", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "True", ",", "\n", "act_mode", "=", "'B'", ",", "\n", "downsample", "=", "False", ",", "\n", "downsample_mode", "=", "'maxpool'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "\n", "        ", "super", "(", "NonLocalBlock2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inter_nc", "=", "nc", "//", "2", "\n", "self", ".", "inter_nc", "=", "inter_nc", "\n", "self", ".", "W", "=", "conv", "(", "inter_nc", ",", "\n", "nc", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "'C'", "+", "act_mode", ")", "\n", "self", ".", "theta", "=", "conv", "(", "nc", ",", "\n", "inter_nc", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "'C'", ")", "\n", "\n", "if", "downsample", ":", "\n", "            ", "if", "downsample_mode", "==", "'avgpool'", ":", "\n", "                ", "downsample_block", "=", "downsample_avgpool", "\n", "", "elif", "downsample_mode", "==", "'maxpool'", ":", "\n", "                ", "downsample_block", "=", "downsample_maxpool", "\n", "", "elif", "downsample_mode", "==", "'strideconv'", ":", "\n", "                ", "downsample_block", "=", "downsample_strideconv", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", "\n", "'downsample mode [{:s}] is not found'", ".", "format", "(", "\n", "downsample_mode", ")", ")", "\n", "", "self", ".", "phi", "=", "downsample_block", "(", "nc", ",", "\n", "inter_nc", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "'2'", ")", "\n", "self", ".", "g", "=", "downsample_block", "(", "nc", ",", "\n", "inter_nc", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "'2'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "phi", "=", "conv", "(", "nc", ",", "\n", "inter_nc", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "'C'", ")", "\n", "self", ".", "g", "=", "conv", "(", "nc", ",", "\n", "inter_nc", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "'C'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.NonLocalBlock2D.forward": [[865, 889], ["x.size", "basicblock.NonLocalBlock2D.g().view", "g_x.permute.permute.permute", "basicblock.NonLocalBlock2D.theta().view", "theta_x.permute.permute.permute", "basicblock.NonLocalBlock2D.phi().view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "y.view.view.permute().contiguous", "y.view.view.view", "basicblock.NonLocalBlock2D.W", "basicblock.NonLocalBlock2D.g", "basicblock.NonLocalBlock2D.theta", "basicblock.NonLocalBlock2D.phi", "y.view.view.permute", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "'''\n        :param x: (b, c, t, h, w)\n        :return:\n        '''", "\n", "\n", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "g_x", "=", "self", ".", "g", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "inter_nc", ",", "-", "1", ")", "\n", "g_x", "=", "g_x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "theta_x", "=", "self", ".", "theta", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "inter_nc", ",", "-", "1", ")", "\n", "theta_x", "=", "theta_x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "phi_x", "=", "self", ".", "phi", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "inter_nc", ",", "-", "1", ")", "\n", "f", "=", "torch", ".", "matmul", "(", "theta_x", ",", "phi_x", ")", "\n", "f_div_C", "=", "F", ".", "softmax", "(", "f", ",", "dim", "=", "-", "1", ")", "\n", "\n", "y", "=", "torch", ".", "matmul", "(", "f_div_C", ",", "g_x", ")", "\n", "y", "=", "y", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "y", "=", "y", ".", "view", "(", "batch_size", ",", "self", ".", "inter_nc", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "W_y", "=", "self", ".", "W", "(", "y", ")", "\n", "z", "=", "W_y", "+", "x", "\n", "\n", "return", "z", "\n", "", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential": [[13, 35], ["torch.Sequential", "len", "isinstance", "isinstance", "NotImplementedError", "module.children", "isinstance", "modules.append", "modules.append", "basicblock.conv", "basicblock.conv"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["def", "sequential", "(", "*", "args", ")", ":", "\n", "    ", "\"\"\"Advanced nn.Sequential.\n\n    Args:\n        nn.Sequential, nn.Module\n\n    Returns:\n        nn.Sequential\n    \"\"\"", "\n", "if", "len", "(", "args", ")", "==", "1", ":", "\n", "        ", "if", "isinstance", "(", "args", "[", "0", "]", ",", "OrderedDict", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\n", "'sequential does not support OrderedDict input.'", ")", "\n", "", "return", "args", "[", "0", "]", "# No sequential is needed.", "\n", "", "modules", "=", "[", "]", "\n", "for", "module", "in", "args", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "Sequential", ")", ":", "\n", "            ", "for", "submodule", "in", "module", ".", "children", "(", ")", ":", "\n", "                ", "modules", ".", "append", "(", "submodule", ")", "\n", "", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "Module", ")", ":", "\n", "            ", "modules", ".", "append", "(", "module", ")", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv": [[60, 126], ["basicblock.sequential", "L.append", "torch.Conv2d", "L.append", "torch.ConvTranspose2d", "L.append", "torch.BatchNorm2d", "L.append", "torch.InstanceNorm2d", "L.append", "torch.ReLU", "L.append", "torch.ReLU", "L.append", "torch.LeakyReLU", "L.append", "torch.LeakyReLU", "L.append", "torch.PixelShuffle", "L.append", "torch.PixelShuffle", "L.append", "torch.PixelShuffle", "L.append", "torch.Upsample", "L.append", "torch.Upsample", "L.append", "torch.Upsample", "L.append", "torch.MaxPool2d", "L.append", "NotImplementedError", "torch.AvgPool2d"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential"], ["def", "conv", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'CBR'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "    ", "L", "=", "[", "]", "\n", "for", "t", "in", "mode", ":", "\n", "        ", "if", "t", "==", "'C'", ":", "\n", "            ", "L", ".", "append", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "bias", "=", "bias", ")", ")", "\n", "", "elif", "t", "==", "'T'", ":", "\n", "            ", "L", ".", "append", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "bias", "=", "bias", ")", ")", "\n", "", "elif", "t", "==", "'B'", ":", "\n", "            ", "L", ".", "append", "(", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ",", "\n", "momentum", "=", "0.9", ",", "\n", "eps", "=", "1e-04", ",", "\n", "affine", "=", "True", ")", ")", "\n", "", "elif", "t", "==", "'I'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "InstanceNorm2d", "(", "out_channels", ",", "affine", "=", "True", ")", ")", "\n", "", "elif", "t", "==", "'R'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "", "elif", "t", "==", "'r'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ")", "\n", "", "elif", "t", "==", "'L'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "negative_slope", ",", "inplace", "=", "True", ")", ")", "\n", "", "elif", "t", "==", "'l'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "negative_slope", ",", "\n", "inplace", "=", "False", ")", ")", "\n", "", "elif", "t", "==", "'2'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "upscale_factor", "=", "2", ")", ")", "\n", "", "elif", "t", "==", "'3'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "upscale_factor", "=", "3", ")", ")", "\n", "", "elif", "t", "==", "'4'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "upscale_factor", "=", "4", ")", ")", "\n", "", "elif", "t", "==", "'U'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", ")", "\n", "", "elif", "t", "==", "'u'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "3", ",", "mode", "=", "'nearest'", ")", ")", "\n", "", "elif", "t", "==", "'v'", ":", "\n", "            ", "L", ".", "append", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'nearest'", ")", ")", "\n", "", "elif", "t", "==", "'M'", ":", "\n", "            ", "L", ".", "append", "(", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "0", ")", ")", "\n", "", "elif", "t", "==", "'A'", ":", "\n", "            ", "L", ".", "append", "(", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'Undefined type: '", ".", "format", "(", "t", ")", ")", "\n", "", "", "return", "sequential", "(", "*", "L", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.pixel_unshuffle": [[131, 154], ["input.size", "input.contiguous().view", "input.contiguous().view.permute().contiguous", "input_view.permute().contiguous.view", "input.contiguous", "input.contiguous().view.permute"], "function", ["None"], ["", "def", "pixel_unshuffle", "(", "input", ",", "upscale_factor", ")", ":", "\n", "    ", "r\"\"\"Rearranges elements in a Tensor of shape :math:`(C, rH, rW)` to a\n    tensor of shape :math:`(*, r^2C, H, W)`.\n\n    Authors:\n        Zhaoyi Yan, https://github.com/Zhaoyi-Yan\n        Kai Zhang, https://github.com/cszn/FFDNet\n\n    Date:\n        01/Jan/2019\n    \"\"\"", "\n", "batch_size", ",", "channels", ",", "in_height", ",", "in_width", "=", "input", ".", "size", "(", ")", "\n", "\n", "out_height", "=", "in_height", "//", "upscale_factor", "\n", "out_width", "=", "in_width", "//", "upscale_factor", "\n", "\n", "input_view", "=", "input", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "channels", ",", "out_height", ",", "\n", "upscale_factor", ",", "out_width", ",", "\n", "upscale_factor", ")", "\n", "\n", "channels", "*=", "upscale_factor", "**", "2", "\n", "unshuffle_out", "=", "input_view", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "5", ",", "2", ",", "4", ")", ".", "contiguous", "(", ")", "\n", "return", "unshuffle_out", ".", "view", "(", "batch_size", ",", "channels", ",", "out_height", ",", "out_width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.upsample_wavelet": [[489, 510], ["torch.Conv2d", "basicblock.SplitAxis", "torch.ConvTranspose3d", "torch.Tensor().permute().div().view().unsqueeze().unsqueeze", "torch.Tensor().permute().div().view().unsqueeze().unsqueeze", "torch.Tensor().permute().div().view().unsqueeze().unsqueeze", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "basicblock.Squeeze", "basicblock.sequential", "len", "torch.Tensor().permute().div().view().unsqueeze", "torch.Tensor().permute().div().view().unsqueeze", "torch.Tensor().permute().div().view().unsqueeze", "torch.Tensor().permute().div().view", "torch.Tensor().permute().div().view", "torch.Tensor().permute().div().view", "torch.Tensor().permute().div", "torch.Tensor().permute().div", "torch.Tensor().permute().div", "torch.Tensor().permute", "torch.Tensor().permute", "torch.Tensor().permute", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential"], ["def", "upsample_wavelet", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "2", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'2R'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "    ", "assert", "len", "(", "mode", ")", "<", "4", "and", "mode", "[", "0", "]", "in", "[", "\n", "'2'", "\n", "]", ",", "'mode examples: 2, 2R, 2BR, 3, ..., 4BR.'", "\n", "\n", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", "*", "4", ",", "3", ",", "padding", "=", "1", ")", "\n", "split", "=", "SplitAxis", "(", "axis", "=", "1", ",", "target", "=", "[", "4", ",", "-", "1", "]", ")", "\n", "up", "=", "nn", ".", "ConvTranspose3d", "(", "4", ",", "1", ",", "(", "1", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "bias", "=", "False", ")", "\n", "weight", "=", "torch", ".", "Tensor", "(", "[", "[", "1", ",", "-", "1", ",", "-", "1", ",", "1", "]", ",", "[", "1", ",", "-", "1", ",", "1", ",", "-", "1", "]", ",", "[", "1", ",", "1", ",", "-", "1", ",", "-", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "1", "]", "]", ")", ".", "permute", "(", "1", ",", "0", ")", ".", "div", "(", "4", ")", ".", "view", "(", "\n", "4", ",", "2", ",", "2", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "up", ".", "weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "weight", ",", "requires_grad", "=", "True", ")", "\n", "squeeze", "=", "Squeeze", "(", "axis", "=", "1", ")", "\n", "return", "sequential", "(", "conv", ",", "split", ",", "up", ",", "squeeze", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.upsample_pixelshuffle": [[515, 535], ["basicblock.conv", "len", "int"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["", "def", "upsample_pixelshuffle", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "3", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'2R'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "    ", "assert", "len", "(", "mode", ")", "<", "4", "and", "mode", "[", "0", "]", "in", "[", "\n", "'2'", ",", "'3'", ",", "'4'", "\n", "]", ",", "'mode examples: 2, 2R, 2BR, 3, ..., 4BR.'", "\n", "up1", "=", "conv", "(", "in_channels", ",", "\n", "out_channels", "*", "(", "int", "(", "mode", "[", "0", "]", ")", "**", "2", ")", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "'C'", "+", "mode", ",", "\n", "negative_slope", "=", "negative_slope", ")", "\n", "return", "up1", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.upsample_upconv": [[540, 567], ["mode.replace.replace", "basicblock.conv", "len"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["", "def", "upsample_upconv", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "3", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'2R'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "    ", "assert", "len", "(", "mode", ")", "<", "4", "and", "mode", "[", "0", "]", "in", "[", "\n", "'2'", ",", "'3'", ",", "'4'", "\n", "]", ",", "'mode examples: 2, 2R, 2BR, 3, ..., 4BR'", "\n", "if", "mode", "[", "0", "]", "==", "'2'", ":", "\n", "        ", "uc", "=", "'UC'", "\n", "", "elif", "mode", "[", "0", "]", "==", "'3'", ":", "\n", "        ", "uc", "=", "'uC'", "\n", "", "elif", "mode", "[", "0", "]", "==", "'4'", ":", "\n", "        ", "uc", "=", "'vC'", "\n", "", "mode", "=", "mode", ".", "replace", "(", "mode", "[", "0", "]", ",", "uc", ")", "\n", "up1", "=", "conv", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "mode", ",", "\n", "negative_slope", "=", "negative_slope", ")", "\n", "return", "up1", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.upsample_convtranspose": [[572, 589], ["int", "int", "mode.replace.replace", "basicblock.conv", "len"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["", "def", "upsample_convtranspose", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "3", ",", "\n", "kernel_size", "=", "2", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'2R'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "    ", "assert", "len", "(", "mode", ")", "<", "4", "and", "mode", "[", "0", "]", "in", "[", "\n", "'2'", ",", "'3'", ",", "'4'", "\n", "]", ",", "'mode examples: 2, 2R, 2BR, 3, ..., 4BR.'", "\n", "kernel_size", "=", "int", "(", "mode", "[", "0", "]", ")", "\n", "stride", "=", "int", "(", "mode", "[", "0", "]", ")", "\n", "mode", "=", "mode", ".", "replace", "(", "mode", "[", "0", "]", ",", "'T'", ")", "\n", "up1", "=", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", ",", "\n", "mode", ",", "negative_slope", ")", "\n", "return", "up1", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.downsample_wavelet": [[672, 692], ["basicblock.Unsqueeze", "torch.Conv3d", "torch.Tensor().unsqueeze().unsqueeze", "torch.Tensor().unsqueeze().unsqueeze", "torch.Tensor().unsqueeze().unsqueeze", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "basicblock.MergeAxis", "torch.Conv2d", "basicblock.sequential", "len", "torch.Tensor().unsqueeze", "torch.Tensor().unsqueeze", "torch.Tensor().unsqueeze", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential"], ["", "", "def", "downsample_wavelet", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "2", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'2R'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "    ", "assert", "len", "(", "mode", ")", "<", "4", "and", "mode", "[", "0", "]", "in", "[", "\n", "'2'", "\n", "]", ",", "'mode examples: 2, 2R, 2BR, 3, ..., 4BR.'", "\n", "unsqueeze", "=", "Unsqueeze", "(", "axis", "=", "1", ")", "\n", "down", "=", "nn", ".", "Conv3d", "(", "1", ",", "4", ",", "(", "1", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "bias", "=", "False", ")", "\n", "weight", "=", "torch", ".", "Tensor", "(", "[", "[", "[", "1", ",", "1", "]", ",", "[", "1", ",", "1", "]", "]", ",", "[", "[", "-", "1", ",", "-", "1", "]", ",", "[", "1", ",", "1", "]", "]", ",", "\n", "[", "[", "-", "1", ",", "1", "]", ",", "[", "-", "1", ",", "1", "]", "]", ",", "\n", "[", "[", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "1", "]", "]", "]", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "down", ".", "weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "weight", ",", "requires_grad", "=", "True", ")", "\n", "merge", "=", "MergeAxis", "(", "axis", "=", "[", "1", ",", "2", "]", ")", "\n", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "*", "4", ",", "out_channels", ",", "3", ",", "padding", "=", "1", ")", "\n", "return", "sequential", "(", "unsqueeze", ",", "down", ",", "merge", ",", "conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.downsample_strideconv": [[697, 714], ["int", "int", "mode.replace.replace", "basicblock.conv", "len"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv"], ["", "def", "downsample_strideconv", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "2", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'2R'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "    ", "assert", "len", "(", "mode", ")", "<", "4", "and", "mode", "[", "0", "]", "in", "[", "\n", "'2'", ",", "'3'", ",", "'4'", "\n", "]", ",", "'mode examples: 2, 2R, 2BR, 3, ..., 4BR.'", "\n", "kernel_size", "=", "int", "(", "mode", "[", "0", "]", ")", "\n", "stride", "=", "int", "(", "mode", "[", "0", "]", ")", "\n", "mode", "=", "mode", ".", "replace", "(", "mode", "[", "0", "]", ",", "'C'", ")", "\n", "down1", "=", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", ",", "\n", "mode", ",", "negative_slope", ")", "\n", "return", "down1", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.downsample_maxpool": [[719, 746], ["int", "int", "mode.replace.replace", "basicblock.conv", "basicblock.conv", "basicblock.sequential", "len"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential"], ["", "def", "downsample_maxpool", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'2R'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "    ", "assert", "len", "(", "mode", ")", "<", "4", "and", "mode", "[", "0", "]", "in", "[", "\n", "'2'", ",", "'3'", "\n", "]", ",", "'mode examples: 2, 2R, 2BR, 3, ..., 3BR.'", "\n", "kernel_size_pool", "=", "int", "(", "mode", "[", "0", "]", ")", "\n", "stride_pool", "=", "int", "(", "mode", "[", "0", "]", ")", "\n", "mode", "=", "mode", ".", "replace", "(", "mode", "[", "0", "]", ",", "'MC'", ")", "\n", "pool", "=", "conv", "(", "kernel_size", "=", "kernel_size_pool", ",", "\n", "stride", "=", "stride_pool", ",", "\n", "mode", "=", "mode", "[", "0", "]", ",", "\n", "negative_slope", "=", "negative_slope", ")", "\n", "pool_tail", "=", "conv", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "mode", "[", "1", ":", "]", ",", "\n", "negative_slope", "=", "negative_slope", ")", "\n", "return", "sequential", "(", "pool", ",", "pool_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.downsample_avgpool": [[751, 778], ["int", "int", "mode.replace.replace", "basicblock.conv", "basicblock.conv", "basicblock.sequential", "len"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.conv", "home.repos.pwc.inspect_result.natezhenghy_udke.models.basicblock.sequential"], ["", "def", "downsample_avgpool", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "mode", "=", "'2R'", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "    ", "assert", "len", "(", "mode", ")", "<", "4", "and", "mode", "[", "0", "]", "in", "[", "\n", "'2'", ",", "'3'", "\n", "]", ",", "'mode examples: 2, 2R, 2BR, 3, ..., 3BR.'", "\n", "kernel_size_pool", "=", "int", "(", "mode", "[", "0", "]", ")", "\n", "stride_pool", "=", "int", "(", "mode", "[", "0", "]", ")", "\n", "mode", "=", "mode", ".", "replace", "(", "mode", "[", "0", "]", ",", "'AC'", ")", "\n", "pool", "=", "conv", "(", "kernel_size", "=", "kernel_size_pool", ",", "\n", "stride", "=", "stride_pool", ",", "\n", "mode", "=", "mode", "[", "0", "]", ",", "\n", "negative_slope", "=", "negative_slope", ")", "\n", "pool_tail", "=", "conv", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias", ",", "\n", "mode", "=", "mode", "[", "1", ":", "]", ",", "\n", "negative_slope", "=", "negative_slope", ")", "\n", "return", "sequential", "(", "pool", ",", "pool_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.rfft": [[7, 12], ["torch.fft.rfft2", "torch.fft.rfft2", "torch.fft.fft2", "torch.fft.fft2"], "function", ["None"], ["def", "rfft", "(", "x", ":", "torch", ".", "Tensor", ",", "onesided", ":", "bool", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "onesided", ":", "\n", "        ", "return", "torch", ".", "fft", ".", "rfft2", "(", "x", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "fft", ".", "fft2", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.irfft": [[14, 21], ["torch.fft.irfft2", "torch.fft.irfft2", "torch.real", "torch.real", "torch.fft.ifft2", "torch.fft.ifft2"], "function", ["None"], ["", "", "def", "irfft", "(", "x", ":", "torch", ".", "Tensor", ",", "\n", "onesided", ":", "bool", ",", "\n", "s", ":", "Optional", "[", "List", "[", "int", "]", "]", "=", "None", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "onesided", ":", "\n", "        ", "return", "torch", ".", "fft", ".", "irfft2", "(", "x", ",", "s", "=", "s", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "real", "(", "torch", ".", "fft", ".", "ifft2", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.cdiv": [[23, 29], ["torch.stack", "torch.stack"], "function", ["None"], ["", "", "def", "cdiv", "(", "x", ":", "torch", ".", "Tensor", ",", "y", ":", "torch", ".", "Tensor", ")", ":", "\n", "# complex division", "\n", "    ", "a", ",", "b", "=", "x", "[", "...", ",", "0", "]", ",", "x", "[", "...", ",", "1", "]", "\n", "c", ",", "d", "=", "y", "[", "...", ",", "0", "]", ",", "y", "[", "...", ",", "1", "]", "\n", "cd2", "=", "c", "**", "2", "+", "d", "**", "2", "\n", "return", "torch", ".", "stack", "(", "[", "(", "a", "*", "c", "+", "b", "*", "d", ")", "/", "cd2", ",", "(", "b", "*", "c", "-", "a", "*", "d", ")", "/", "cd2", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.csum": [[31, 36], ["torch.stack", "torch.stack", "img.expand_as"], "function", ["None"], ["", "def", "csum", "(", "x", ":", "torch", ".", "Tensor", ",", "y", ":", "torch", ".", "Tensor", ")", ":", "\n", "# complex + real", "\n", "    ", "real", "=", "x", "[", "...", ",", "0", "]", "+", "y", "\n", "img", "=", "x", "[", "...", ",", "1", "]", "\n", "return", "torch", ".", "stack", "(", "[", "real", ",", "img", ".", "expand_as", "(", "real", ")", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.cabs2": [[38, 40], ["None"], "function", ["None"], ["", "def", "cabs2", "(", "x", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "return", "x", "[", "...", ",", "0", "]", "**", "2", "+", "x", "[", "...", ",", "1", "]", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.cmul": [[42, 56], ["torch.stack", "torch.stack"], "function", ["None"], ["", "def", "cmul", "(", "t1", ",", "t2", ")", ":", "\n", "    ", "'''complex multiplication\n\n    Args:\n        t1: NxCxHxWx2, complex tensor\n        t2: NxCxHxWx2\n\n    Returns:\n        output: NxCxHxWx2\n    '''", "\n", "real1", ",", "imag1", "=", "t1", "[", "...", ",", "0", "]", ",", "t1", "[", "...", ",", "1", "]", "\n", "real2", ",", "imag2", "=", "t2", "[", "...", ",", "0", "]", ",", "t2", "[", "...", ",", "1", "]", "\n", "return", "torch", ".", "stack", "(", "\n", "[", "real1", "*", "real2", "-", "imag1", "*", "imag2", ",", "real1", "*", "imag2", "+", "imag1", "*", "real2", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.cconj": [[58, 70], ["t.clone"], "function", ["None"], ["", "def", "cconj", "(", "t", ",", "inplace", "=", "False", ")", ":", "\n", "    ", "'''complex's conjugation\n\n    Args:\n        t: NxCxHxWx2\n\n    Returns:\n        output: NxCxHxWx2\n    '''", "\n", "c", "=", "t", ".", "clone", "(", ")", "if", "not", "inplace", "else", "t", "\n", "c", "[", "...", ",", "1", "]", "*=", "-", "1", "\n", "return", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.p2o": [[72, 94], ["torch.pad", "utils.roll", "utils.rfft", "rfft.size", "rfft.size"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.roll", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.rfft"], ["", "def", "p2o", "(", "psf", ":", "torch", ".", "Tensor", ",", "shape", ":", "Tuple", "[", "int", ",", "int", "]", ",", "onesided", ":", "bool", "=", "True", ")", ":", "\n", "    ", "'''\n    Convert point-spread function to optical transfer function.\n    otf = p2o(psf) computes the Fast Fourier Transform (FFT) of the\n    point-spread function (PSF) array and creates the optical transfer\n    function (OTF) array that is not influenced by the PSF off-centering.\n\n    Args:\n        psf: NxCxhxw\n        shape: [H, W]\n\n    Returns:\n        otf: NxCxHxWx2\n    '''", "\n", "kernel_size", "=", "(", "psf", ".", "size", "(", "-", "2", ")", ",", "psf", ".", "size", "(", "-", "1", ")", ")", "\n", "psf", "=", "F", ".", "pad", "(", "psf", ",", "\n", "[", "0", ",", "shape", "[", "1", "]", "-", "kernel_size", "[", "1", "]", ",", "0", ",", "shape", "[", "0", "]", "-", "kernel_size", "[", "0", "]", "]", ")", "\n", "\n", "psf", "=", "roll", "(", "psf", ",", "kernel_size", ")", "\n", "psf", "=", "rfft", "(", "psf", ",", "onesided", "=", "onesided", ")", "\n", "\n", "return", "psf", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.roll": [[96, 102], ["zip", "torch.roll", "torch.roll", "int"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.roll", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.roll"], ["", "def", "roll", "(", "psf", ",", "kernel_size", ",", "reverse", "=", "False", ")", ":", "\n", "    ", "for", "axis", ",", "axis_size", "in", "zip", "(", "[", "-", "2", ",", "-", "1", "]", ",", "kernel_size", ")", ":", "\n", "        ", "psf", "=", "torch", ".", "roll", "(", "psf", ",", "\n", "int", "(", "axis_size", "/", "2", ")", "*", "(", "-", "1", "if", "not", "reverse", "else", "1", ")", ",", "\n", "dims", "=", "axis", ")", "\n", "", "return", "psf", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv2d": [[104, 140], ["isinstance", "input.view", "weight.view", "torch.nn.functional.pad", "torch.conv2d", "F.conv2d.view", "torch.conv2d", "input.size", "input.size", "weight.size", "weight.size", "weight.size", "input.size", "weight.size", "F.conv2d.size", "F.conv2d.size", "torch.nn.functional.pad", "input.size", "input.size", "weight.size", "weight.size", "input.size"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv2d", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv2d"], ["", "def", "conv2d", "(", "input", ",", "weight", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "sample_wise", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n        sample_wise=False, normal conv2d:\n            input - (N, C_in, H_in, W_in)\n            weight - (C_out, C_in, H_k, W_k)\n        sample_wise=True, sample-wise conv2d:\n            input - (N, C_in, H_in, W_in)\n            weight - (N, C_out, C_in, H_k, W_k)\n    \"\"\"", "\n", "if", "isinstance", "(", "padding", ",", "int", ")", ":", "\n", "        ", "padding", "=", "[", "padding", "]", "*", "4", "\n", "", "if", "sample_wise", ":", "\n", "# input - (N, C_in, H_in, W_in) -> (1, N * C_in, H_in, W_in)", "\n", "        ", "input_sw", "=", "input", ".", "view", "(", "1", ",", "\n", "input", ".", "size", "(", "0", ")", "*", "input", ".", "size", "(", "1", ")", ",", "input", ".", "size", "(", "2", ")", ",", "\n", "input", ".", "size", "(", "3", ")", ")", "\n", "\n", "# weight - (N, C_out, C_in, H_k, W_k) -> (N * C_out, C_in, H_k, W_k)", "\n", "weight_sw", "=", "weight", ".", "view", "(", "\n", "weight", ".", "size", "(", "0", ")", "*", "weight", ".", "size", "(", "1", ")", ",", "weight", ".", "size", "(", "2", ")", ",", "weight", ".", "size", "(", "3", ")", ",", "\n", "weight", ".", "size", "(", "4", ")", ")", "\n", "\n", "# group-wise convolution, group_size==batch_size", "\n", "input_sw", "=", "pad", "(", "input_sw", ",", "padding", ",", "mode", "=", "'circular'", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "input_sw", ",", "\n", "weight_sw", ",", "\n", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "input", ".", "size", "(", "0", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "weight", ".", "size", "(", "1", ")", ",", "out", ".", "size", "(", "2", ")", ",", "out", ".", "size", "(", "3", ")", ")", "\n", "", "else", ":", "\n", "        ", "out", "=", "F", ".", "conv2d", "(", "pad", "(", "input", ",", "padding", ",", "mode", "=", "'circular'", ")", ",", "\n", "weight", ",", "\n", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv3d": [[142, 179], ["isinstance", "input.view", "weight.view", "torch.conv3d", "F.conv3d.view", "torch.conv3d", "input.size", "input.size", "input.size", "weight.size", "weight.size", "weight.size", "weight.size", "torch.nn.functional.pad", "input.size", "weight.size", "F.conv3d.size", "F.conv3d.size", "F.conv3d.size", "torch.nn.functional.pad", "input.size", "input.size", "weight.size", "weight.size", "input.size"], "function", ["home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv3d", "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.conv3d"], ["", "def", "conv3d", "(", "input", ",", "weight", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "sample_wise", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n        sample_wise=False, normal conv3d:\n            input - (N, C_in, D_in, H_in, W_in)\n            weight - (C_out, C_in, D_k, H_k, W_k)\n        sample_wise=True, sample-wise conv3d:\n            input - (N, C_in, D_in, H_in, W_in)\n            weight - (N, C_out, C_in, D_k, H_k, W_k)\n    \"\"\"", "\n", "if", "isinstance", "(", "padding", ",", "int", ")", ":", "\n", "        ", "padding", "=", "[", "padding", "]", "*", "4", "+", "[", "0", ",", "0", "]", "\n", "", "if", "sample_wise", ":", "\n", "# input - (N, C_in, D_in, H_in, W_in) -> (1, N * C_in, D_in, H_in, W_in)", "\n", "        ", "input_sw", "=", "input", ".", "view", "(", "1", ",", "\n", "input", ".", "size", "(", "0", ")", "*", "input", ".", "size", "(", "1", ")", ",", "input", ".", "size", "(", "2", ")", ",", "\n", "input", ".", "size", "(", "3", ")", ",", "input", ".", "size", "(", "4", ")", ")", "\n", "\n", "# weight - (N, C_out, C_in, D_k, H_k, W_k) -> (N * C_out, C_in, D_k, H_k, W_k)", "\n", "weight_sw", "=", "weight", ".", "view", "(", "\n", "weight", ".", "size", "(", "0", ")", "*", "weight", ".", "size", "(", "1", ")", ",", "weight", ".", "size", "(", "2", ")", ",", "weight", ".", "size", "(", "3", ")", ",", "\n", "weight", ".", "size", "(", "4", ")", ",", "weight", ".", "size", "(", "5", ")", ")", "\n", "\n", "# group-wise convolution, group_size==batch_size", "\n", "out", "=", "F", ".", "conv3d", "(", "pad", "(", "input_sw", ",", "padding", ",", "mode", "=", "'circular'", ")", ",", "\n", "weight_sw", ",", "\n", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "input", ".", "size", "(", "0", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "weight", ".", "size", "(", "1", ")", ",", "out", ".", "size", "(", "2", ")", ",", "out", ".", "size", "(", "3", ")", ",", "\n", "out", ".", "size", "(", "4", ")", ")", "\n", "", "else", ":", "\n", "        ", "out", "=", "F", ".", "conv3d", "(", "pad", "(", "input", ",", "padding", ",", "mode", "=", "'circular'", ")", ",", "\n", "weight", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.unfold5d": [[181, 188], ["x.view", "torch.unfold", "x_unfold.view.view", "x.size", "x.size", "x.size", "x.size", "x.size", "x_unfold.view.size", "x_unfold.view.size", "x.size", "x.size"], "function", ["None"], ["", "def", "unfold5d", "(", "x", ",", "kernel_size", ")", ":", "\n", "    ", "\"\"\"perform 2D unfold on (the last 2 dimensions of) 5D Tensor\"\"\"", "\n", "x_reshape", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", "*", "x", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ",", "x", ".", "size", "(", "4", ")", ")", "\n", "x_unfold", "=", "F", ".", "unfold", "(", "x_reshape", ",", "kernel_size", ")", "\n", "x_unfold", "=", "x_unfold", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "x_unfold", ".", "size", "(", "1", ")", ",", "\n", "x_unfold", ".", "size", "(", "2", ")", ")", "\n", "return", "x_unfold", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.splits": [[190, 201], ["torch.stack", "torch.stack", "torch.cat", "torch.cat", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk"], "function", ["None"], ["", "def", "splits", "(", "a", ":", "torch", ".", "Tensor", ",", "sf", ":", "int", ")", ":", "\n", "    ", "'''split a into sfxsf distinct blocks\n    Args:\n        a: NxCxWxH\n        sf: split factor\n    Returns:\n        b: NxCx(W/sf)x(H/sf)x(sf^2)\n    '''", "\n", "b", "=", "torch", ".", "stack", "(", "torch", ".", "chunk", "(", "a", ",", "sf", ",", "dim", "=", "2", ")", ",", "dim", "=", "4", ")", "\n", "b", "=", "torch", ".", "cat", "(", "torch", ".", "chunk", "(", "b", ",", "sf", ",", "dim", "=", "3", ")", ",", "dim", "=", "4", ")", "\n", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.models.utils.upsample": [[203, 221], ["list", "torch.zeros().type_as", "torch.zeros().type_as", "z[].copy_", "torch.zeros", "torch.zeros", "range", "range", "z[].copy_"], "function", ["None"], ["", "def", "upsample", "(", "x", ":", "torch", ".", "Tensor", ",", "sf", ":", "int", "=", "3", ",", "mode", ":", "str", "=", "'zero'", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "'''s-fold upsampler\n    Upsampling the spatial size by filling the new entries with zeros\n    x: tensor image, NxCxWxH\n    '''", "\n", "if", "sf", "==", "1", ":", "\n", "        ", "return", "x", "\n", "", "shape", "=", "list", "(", "x", ".", "shape", ")", "\n", "shape", "[", "-", "1", "]", "=", "shape", "[", "-", "1", "]", "*", "sf", "\n", "shape", "[", "-", "2", "]", "=", "shape", "[", "-", "2", "]", "*", "sf", "\n", "z", "=", "torch", ".", "zeros", "(", "shape", ")", ".", "type_as", "(", "x", ")", "\n", "if", "mode", "==", "'zero'", ":", "\n", "        ", "z", "[", "...", ",", "0", ":", ":", "sf", ",", "0", ":", ":", "sf", "]", ".", "copy_", "(", "x", ")", "\n", "", "elif", "mode", "==", "'replicate'", ":", "\n", "        ", "for", "i", "in", "range", "(", "sf", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "sf", ")", ":", "\n", "                ", "z", "[", "...", ",", "i", ":", ":", "sf", ",", "j", ":", ":", "sf", "]", ".", "copy_", "(", "x", ")", "\n", "", "", "", "return", "z", "\n", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_sr.DatasetSR.__init__": [[15, 22], ["dataset_ir.DatasetIR.__init__", "glob.glob.glob"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt_dataset", ":", "Dict", "[", "str", ",", "Any", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "opt_dataset", ")", "\n", "self", ".", "kernel_size", "=", "opt_dataset", "[", "'k_size'", "]", "\n", "self", ".", "tag", "=", "f\"{self.sigma}\"", "\n", "\n", "self", ".", "kernel_paths", "=", "glob", "(", "f\"kernels/{opt_dataset['phase']}/*/*.mat\"", ")", "\n", "self", ".", "sf", "=", "opt_dataset", "[", "'sf'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_sr.DatasetSR.__getitem__": [[23, 65], ["utils.imread_uint", "random.choice", "scipy.ndimage.filters.correlate", "utils.single2tensor3().unsqueeze", "torch.FloatTensor().unsqueeze().unsqueeze", "range", "scipy.io.loadmat", "numpy.expand_dims", "utils.uint2single", "numpy.random.normal", "utils.uint2tensor3", "utils.single2tensor3", "len", "utils.single2tensor3", "torch.FloatTensor().unsqueeze", "int", "int", "numpy.expand_dims", "numpy.float32", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.imread_uint", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.uint2single", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.uint2tensor3", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.single2tensor3", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.single2tensor3"], ["", "def", "__getitem__", "(", "self", ",", "index", ":", "int", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "# -------------------------------------", "\n", "# get H image", "\n", "# -------------------------------------", "\n", "        ", "img_index", "=", "index", "\n", "\n", "H_path", "=", "self", ".", "paths_H", "[", "img_index", "]", "\n", "img_H", "=", "util", ".", "imread_uint", "(", "H_path", ",", "self", ".", "n_channels", ")", "\n", "\n", "img_H", "=", "img_H", "[", "...", ",", ":", "int", "(", "img_H", ".", "shape", "[", "-", "3", "]", "//", "self", ".", "sf", "*", "\n", "self", ".", "sf", ")", ",", ":", "int", "(", "img_H", ".", "shape", "[", "-", "2", "]", "//", "self", ".", "sf", "*", "\n", "self", ".", "sf", ")", ",", ":", "]", "\n", "# kernel", "\n", "kernel_index", "=", "random", ".", "choice", "(", "range", "(", "len", "(", "self", ".", "kernel_paths", ")", ")", ")", "\n", "kernel_path", "=", "self", ".", "kernel_paths", "[", "kernel_index", "]", "\n", "k", "=", "loadmat", "(", "kernel_path", ")", "[", "'kernel'", "]", "\n", "\n", "# noise level", "\n", "noise_level", "=", "self", ".", "sigma", "/", "255.0", "\n", "\n", "# generate image", "\n", "img_L", "=", "ndimage", ".", "filters", ".", "correlate", "(", "img_H", ",", "\n", "np", ".", "expand_dims", "(", "k", ",", "axis", "=", "2", ")", ",", "\n", "mode", "=", "'wrap'", ")", "\n", "img_L", "=", "img_L", "[", ":", ":", "self", ".", "sf", ",", ":", ":", "self", ".", "sf", ",", "...", "]", "\n", "img_L", "=", "util", ".", "uint2single", "(", "img_L", ")", "+", "np", ".", "random", ".", "normal", "(", "\n", "0", ",", "noise_level", ",", "img_L", ".", "shape", ")", "\n", "\n", "k", "=", "util", ".", "single2tensor3", "(", "np", ".", "expand_dims", "(", "float32", "(", "k", ")", ",", "\n", "axis", "=", "2", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img_H", ",", "img_L", "=", "util", ".", "uint2tensor3", "(", "img_H", ")", ",", "util", ".", "single2tensor3", "(", "img_L", ")", "\n", "noise_level", "=", "torch", ".", "FloatTensor", "(", "[", "noise_level", "\n", "]", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "self", ".", "count", "+=", "1", "\n", "return", "{", "\n", "'y'", ":", "img_L", ",", "\n", "'y_gt'", ":", "img_H", ",", "\n", "'k_gt'", ":", "k", ",", "\n", "'sigma'", ":", "noise_level", ",", "\n", "'sf'", ":", "self", ".", "sf", ",", "\n", "'path'", ":", "H_path", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_sr.DatasetSR.__len__": [[67, 69], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "paths_H", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.data.select_dataset.define_Dataset": [[14, 28], ["glob.glob", "copy.deepcopy", "os.path.join", "datasets.append", "data.dataset_sr.DatasetSR"], "function", ["None"], ["def", "define_Dataset", "(", "opt_dataset", ")", ":", "\n", "    ", "datasets", "=", "[", "]", "\n", "paths", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "opt_dataset", "[", "'dataroot_H'", "]", ",", "'*'", ")", ")", "\n", "sigmas", "=", "opt_dataset", "[", "'sigma'", "]", "\n", "sfs", "=", "opt_dataset", "[", "'sf'", "]", "\n", "opt_dataset_sub", "=", "deepcopy", "(", "opt_dataset", ")", "\n", "for", "path", "in", "paths", ":", "\n", "        ", "for", "sigma", "in", "sigmas", ":", "\n", "            ", "for", "sf", "in", "sfs", ":", "\n", "                ", "opt_dataset_sub", "[", "'dataroot_H'", "]", "=", "path", "\n", "opt_dataset_sub", "[", "'sigma'", "]", "=", "sigma", "\n", "opt_dataset_sub", "[", "'sf'", "]", "=", "sf", "\n", "datasets", ".", "append", "(", "DatasetSR", "(", "opt_dataset_sub", ")", ")", "\n", "", "", "", "return", "datasets", "\n", "", ""]], "home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__": [[8, 20], ["torch.Dataset.__init__", "utils.get_image_paths", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__init__", "home.repos.pwc.inspect_result.natezhenghy_udke.utils.utils_image.get_image_paths"], ["    ", "def", "__init__", "(", "self", ",", "opt_dataset", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "opt", "=", "opt_dataset", "\n", "self", ".", "n_channels", ":", "int", "=", "opt_dataset", "[", "'n_channels'", "]", "\n", "self", ".", "patch_size", ":", "int", "=", "self", ".", "opt", "[", "'H_size'", "]", "\n", "\n", "self", ".", "sigma", ":", "Union", "[", "List", "[", "int", "]", ",", "int", "]", "=", "opt_dataset", "[", "'sigma'", "]", "\n", "\n", "self", ".", "paths_H", "=", "util", ".", "get_image_paths", "(", "opt_dataset", "[", "'dataroot_H'", "]", ")", "\n", "self", ".", "count", ":", "int", "=", "0", "\n", "self", ".", "name", ":", "str", "=", "os", ".", "path", ".", "basename", "(", "opt_dataset", "[", "'dataroot_H'", "]", ")", "\n", "self", ".", "tag", ":", "str", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.natezhenghy_udke.data.dataset_ir.DatasetIR.__len__": [[21, 24], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\n", "        ", "return", "len", "(", "self", ".", "paths_H", ")", "", "", "", ""]]}