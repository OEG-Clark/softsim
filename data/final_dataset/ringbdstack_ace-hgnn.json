{"home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.__init__": [[7, 14], ["pandas.DataFrame"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "actions", ",", "joint", ",", "start", ",", "learning_rate", "=", "0.85", ",", "reward_decay", "=", "0.9", ",", "e_greedy", "=", "0.9", ")", ":", "\n", "        ", "self", ".", "actions", "=", "actions", "# actions of this agent", "\n", "self", ".", "joint_actions", "=", "joint", "\n", "self", ".", "lr", "=", "learning_rate", "\n", "self", ".", "gamma", "=", "reward_decay", "\n", "self", ".", "epsilon", "=", "e_greedy", "\n", "self", ".", "q_table", "=", "pd", ".", "DataFrame", "(", "columns", "=", "self", ".", "joint_actions", ",", "dtype", "=", "np", ".", "float64", ")", "# Q Table should use joint actions", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.update_epsilon": [[15, 21], ["None"], "methods", ["None"], ["", "def", "update_epsilon", "(", "self", ")", ":", "\n", "        ", "'''Execute epsilon decay. The minimum epsilon is set to 0.1.'''", "\n", "if", "self", ".", "epsilon", ">", "0.1", ":", "\n", "            ", "self", ".", "epsilon", "*=", "0.999", "\n", "", "else", ":", "\n", "            ", "self", ".", "epsilon", "=", "0.1", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.choose_action": [[22, 33], ["QLearning.QLearningTable.check_state_exist", "numpy.random.uniform", "pandas.Series", "numpy.random.choice", "numpy.random.choice", "numpy.max"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.check_state_exist"], ["", "", "def", "choose_action", "(", "self", ",", "observation", ",", "pi", ")", ":", "\n", "        ", "self", ".", "check_state_exist", "(", "observation", ")", "\n", "# action selection", "\n", "if", "np", ".", "random", ".", "uniform", "(", ")", ">", "self", ".", "epsilon", ":", "\n", "# choose best action", "\n", "            ", "state_action", "=", "pd", ".", "Series", "(", "pi", ")", "\n", "action", "=", "np", ".", "random", ".", "choice", "(", "state_action", "[", "state_action", "==", "np", ".", "max", "(", "state_action", ")", "]", ".", "index", ")", "\n", "", "else", ":", "\n", "# choose random action", "\n", "            ", "action", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "actions", ")", "\n", "", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.learn": [[35, 49], ["QLearning.QLearningTable.check_state_exist", "QLearning.QLearningTable.compute_nashq"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.check_state_exist", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.compute_nashq"], ["", "def", "learn", "(", "self", ",", "s", ",", "a", ",", "r", ",", "s_", ",", "pis", ",", "done", "=", "False", ")", ":", "\n", "        ", "'''\n        update Q table using formula Q(s, a) += alpha * (R + gamma \n        * max_a' Q(s', a') - Q(s, a))\n        '''", "\n", "self", ".", "check_state_exist", "(", "s_", ")", "\n", "q_predict", "=", "self", ".", "q_table", ".", "loc", "[", "s", "]", "[", "a", "]", "\n", "if", "not", "done", ":", "\n", "# Calculate nashq", "\n", "            ", "nashQ", "=", "self", ".", "compute_nashq", "(", "s_", ",", "pis", "[", "0", "]", ",", "pis", "[", "1", "]", ")", "\n", "q_target", "=", "r", "+", "self", ".", "gamma", "*", "nashQ", "\n", "", "else", ":", "\n", "            ", "q_target", "=", "r", "\n", "", "self", ".", "q_table", ".", "loc", "[", "s", "]", "[", "a", "]", "+=", "self", ".", "lr", "*", "(", "q_target", "-", "q_predict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.compute_nashq": [[50, 58], ["None"], "methods", ["None"], ["", "def", "compute_nashq", "(", "self", ",", "state", ",", "pi1", ",", "pi2", ")", ":", "\n", "        ", "\"\"\"\n            compute nash q value\n        \"\"\"", "\n", "nashq", "=", "0", "\n", "for", "(", "action1", ",", "action2", ")", "in", "self", ".", "joint_actions", ":", "\n", "            ", "nashq", "+=", "pi1", "[", "action1", "]", "*", "pi2", "[", "action2", "]", "*", "self", ".", "q_table", ".", "loc", "[", "state", "]", "[", "(", "action1", ",", "action2", ")", "]", "\n", "", "return", "nashq", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.check_state_exist": [[59, 67], ["QLearning.QLearningTable.q_table.append", "pandas.Series", "len"], "methods", ["None"], ["", "def", "check_state_exist", "(", "self", ",", "state", ")", ":", "\n", "        ", "if", "state", "not", "in", "self", ".", "q_table", ".", "index", ":", "\n", "# append new state to q table", "\n", "            ", "self", ".", "q_table", "=", "self", ".", "q_table", ".", "append", "(", "\n", "pd", ".", "Series", "(", "\n", "[", "0", "]", "*", "len", "(", "self", ".", "joint_actions", ")", ",", "\n", "index", "=", "self", ".", "q_table", ".", "columns", ",", "\n", "name", "=", "state", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.Nash": [[71, 103], ["Agent1.check_state_exist", "Agent2.check_state_exist", "nashpy.Game", "nashpy.Game.lemke_howson_enumeration", "list", "q_1.append", "q_2.append", "numpy.array", "numpy.array", "numpy.repeat", "numpy.repeat", "row_q_1.append", "row_q_2.append", "len", "len", "len", "len", "len", "len", "any", "any", "numpy.isnan", "numpy.isnan"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.check_state_exist", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.check_state_exist"], ["", "", "", "def", "Nash", "(", "state", ",", "Agent1", ",", "Agent2", ")", ":", "\n", "    ", "'''Calculate nash equilibrium on current state and Q(s) as rewards.'''", "\n", "Agent1", ".", "check_state_exist", "(", "state", ")", "\n", "Agent2", ".", "check_state_exist", "(", "state", ")", "\n", "q_1", ",", "q_2", "=", "[", "]", ",", "[", "]", "\n", "for", "action1", "in", "Agent1", ".", "actions", ":", "\n", "        ", "row_q_1", ",", "row_q_2", "=", "[", "]", ",", "[", "]", "\n", "for", "action2", "in", "Agent2", ".", "actions", ":", "\n", "            ", "joint_action", "=", "(", "action1", ",", "action2", ")", "\n", "row_q_1", ".", "append", "(", "Agent1", ".", "q_table", ".", "loc", "[", "state", "]", "[", "joint_action", "]", ")", "\n", "row_q_2", ".", "append", "(", "Agent2", ".", "q_table", ".", "loc", "[", "state", "]", "[", "joint_action", "]", ")", "\n", "", "q_1", ".", "append", "(", "row_q_1", ")", "\n", "q_2", ".", "append", "(", "row_q_2", ")", "\n", "\n", "", "game", "=", "nashpy", ".", "Game", "(", "np", ".", "array", "(", "q_1", ")", ",", "np", ".", "array", "(", "q_2", ")", ")", "\n", "equilibria", "=", "game", ".", "lemke_howson_enumeration", "(", ")", "\n", "eq_list", "=", "list", "(", "equilibria", ")", "\n", "\n", "pi", "=", "None", "\n", "for", "eq", "in", "eq_list", ":", "\n", "        ", "if", "eq", "[", "0", "]", ".", "shape", "==", "(", "len", "(", "Agent1", ".", "actions", ")", ",", ")", "and", "eq", "[", "1", "]", ".", "shape", "==", "(", "len", "(", "Agent2", ".", "actions", ")", ",", ")", ":", "\n", "            ", "if", "any", "(", "np", ".", "isnan", "(", "eq", "[", "0", "]", ")", ")", "is", "False", "and", "any", "(", "np", ".", "isnan", "(", "eq", "[", "1", "]", ")", ")", "is", "False", ":", "\n", "                ", "pi", "=", "eq", "\n", "break", "\n", "", "", "", "if", "pi", "is", "None", ":", "\n", "        ", "pi1", "=", "np", ".", "repeat", "(", "\n", "1.0", "/", "len", "(", "Agent1", ".", "actions", ")", ",", "len", "(", "Agent1", ".", "actions", ")", ")", "\n", "pi2", "=", "np", ".", "repeat", "(", "\n", "1.0", "/", "len", "(", "Agent2", ".", "actions", ")", ",", "len", "(", "Agent2", ".", "actions", ")", ")", "\n", "pi", "=", "(", "pi1", ",", "pi2", ")", "\n", "\n", "", "return", "pi", "[", "0", "]", ",", "pi", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.train.train": [[23, 198], ["numpy.random.seed", "torch.manual_seed", "int", "logging.getLogger().setLevel", "logging.info", "logging.info", "warnings.filterwarnings", "utils.data_utils.load_data", "range", "env.Env", "QLearning.QLearningTable", "QLearning.QLearningTable", "Model", "Model", "logging.info", "torch.optim.lr_scheduler.StepLR", "sum", "logging.info", "time.time", "hgnn.to.init_metric_dict", "range", "logging.info", "logging.info", "logging.info", "logging.info", "torch.set_default_dtype", "int", "torch.cuda.manual_seed", "int", "logging.basicConfig", "os.path.join", "int", "logging.info", "len", "len", "len", "range", "str", "getattr", "str", "hgnn.to.to", "ace.to.to", "utils.data_utils.load_data.items", "time.time", "hgnn.to.train", "ace.to.train", "optimizer.zero_grad", "hgnn.to.train_with_RL", "train_metric_record.append", "train_metrics[].backward", "optimizer.step", "torch.optim.lr_scheduler.StepLR.step", "hgnn.to.eval", "hgnn.to.encode", "hgnn.to.compute_metrics", "numpy.save", "hasattr", "json.dump", "torch.save", "numpy.save", "numpy.save", "numpy.save", "logging.info", "logging.info", "int", "str", "logging.getLogger", "datetime.datetime.now", "os.path.join", "utils.train_utils.get_dir_name", "len", "joint_actions.append", "list", "list", "hgnn.to.parameters", "int", "float", "numpy.prod", "int", "torch.is_tensor", "float", "list", "logging.info", "hgnn.to.eval", "hgnn.to.encode", "hgnn.to.compute_metrics", "val_metric_record.append", "hgnn.to.has_improved", "os.path.join", "embeddings.cpu.cpu().detach().numpy", "os.path.join", "pickle.dump", "print", "vars", "open", "hgnn.to.state_dict", "os.path.join", "os.path.join", "numpy.array", "os.path.join", "numpy.array", "os.path.join", "numpy.array", "data[].max", "range", "range", "p.size", "hgnn.to.parameters", "data[].to", "numpy.array", "numpy.array", "print", "print", "hgnn.to.parameters", "torch.nn.utils.clip_grad_norm_", "logging.info", "hgnn.to.compute_metrics", "hgnn.encode.cpu", "time.time", "utils.train_utils.format_metrics", "utils.train_utils.format_metrics", "hgnn.to.encoder.att_adj.cpu().to_dense", "open", "os.path.join", "logging.FileHandler", "logging.StreamHandler", "len", "len", "abs", "abs", "numpy.save", "all", "logging.info", "embeddings.cpu.cpu().detach", "os.path.join", "utils.train_utils.format_metrics", "os.path.join", "embeddings.cpu.detach().numpy", "hgnn.to.encoder.att_adj.cpu", "max", "min", "max", "min", "utils.train_utils.format_metrics", "embeddings.cpu.cpu", "torch.optim.lr_scheduler.StepLR.get_lr", "time.time", "embeddings.cpu.detach"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.init_metric_dict", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.train.train", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.train.train", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.train_with_RL", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.att_layers.SpecialSpmmFunction.backward", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.RiemannianAdam.step", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.RiemannianAdam.step", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.train_utils.get_dir_name", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.has_improved", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.train_utils.format_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.train_utils.format_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.train_utils.format_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.train_utils.format_metrics"], ["def", "train", "(", "args", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "int", "(", "args", ".", "double_precision", ")", ":", "\n", "        ", "torch", ".", "set_default_dtype", "(", "torch", ".", "float64", ")", "\n", "", "if", "int", "(", "args", ".", "cuda", ")", ">=", "0", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "", "args", ".", "device", "=", "'cuda:'", "+", "str", "(", "args", ".", "cuda", ")", "if", "int", "(", "args", ".", "cuda", ")", ">=", "0", "else", "'cpu'", "\n", "args", ".", "patience", "=", "args", ".", "epochs", "if", "not", "args", ".", "patience", "else", "int", "(", "args", ".", "patience", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "if", "args", ".", "save", ":", "\n", "        ", "if", "not", "args", ".", "save_dir", ":", "\n", "            ", "dt", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "date", "=", "f\"{dt.year}_{dt.month}_{dt.day}\"", "\n", "models_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "environ", "[", "'LOG_DIR'", "]", ",", "args", ".", "task", ",", "date", ")", "\n", "save_dir", "=", "get_dir_name", "(", "models_dir", ")", "\n", "", "else", ":", "\n", "            ", "save_dir", "=", "args", ".", "save_dir", "\n", "", "logging", ".", "basicConfig", "(", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "\n", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'log.txt'", ")", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "\n", "]", ")", "\n", "\n", "", "logging", ".", "info", "(", "f'Using: {args.device}'", ")", "\n", "logging", ".", "info", "(", "\"Using seed {}.\"", ".", "format", "(", "args", ".", "seed", ")", ")", "\n", "warnings", ".", "filterwarnings", "(", "action", "=", "'ignore'", ")", "\n", "\n", "# Load data", "\n", "data", "=", "load_data", "(", "args", ",", "os", ".", "path", ".", "join", "(", "os", ".", "environ", "[", "'DATAPATH'", "]", ",", "args", ".", "dataset", ")", ")", "\n", "args", ".", "n_nodes", ",", "args", ".", "feat_dim", "=", "data", "[", "'features'", "]", ".", "shape", "\n", "if", "args", ".", "task", "==", "'nc'", ":", "\n", "        ", "Model", "=", "NCModel", "\n", "args", ".", "n_classes", "=", "int", "(", "data", "[", "'labels'", "]", ".", "max", "(", ")", "+", "1", ")", "\n", "logging", ".", "info", "(", "f'Num classes: {args.n_classes}'", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "nb_false_edges", "=", "len", "(", "data", "[", "'train_edges_false'", "]", ")", "\n", "args", ".", "nb_edges", "=", "len", "(", "data", "[", "'train_edges'", "]", ")", "\n", "if", "args", ".", "task", "==", "'lp'", ":", "\n", "            ", "Model", "=", "LPModel", "\n", "\n", "", "", "if", "not", "args", ".", "lr_reduce_freq", ":", "\n", "        ", "args", ".", "lr_reduce_freq", "=", "args", ".", "epochs", "\n", "\n", "# Model and optimizer", "\n", "# Initialize RL environment", "\n", "", "lr_q", "=", "args", ".", "lr_q", "# RL Learning Rate", "\n", "action_space1", "=", "[", "'reject'", ",", "'accept'", "]", "# HGNN action space", "\n", "action_space2", "=", "[", "# ACE  action space", "\n", "'r, r'", ",", "'r, a'", ",", "\n", "'a, r'", ",", "'a, a'", "\n", "]", "\n", "joint_actions", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "action_space1", ")", ")", ":", "# Joint action space", "\n", "        ", "for", "j", "in", "range", "(", "len", "(", "action_space2", ")", ")", ":", "\n", "            ", "joint_actions", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "", "env", "=", "Env", "(", "theta", "=", "args", ".", "theta", ",", "initial_c", "=", "args", ".", "c", ")", "\n", "Agent1", "=", "QLearningTable", "(", "actions", "=", "list", "(", "range", "(", "len", "(", "action_space1", ")", ")", ")", ",", "joint", "=", "joint_actions", ",", "start", "=", "args", ".", "start_q", ",", "learning_rate", "=", "lr_q", ")", "\n", "Agent2", "=", "QLearningTable", "(", "actions", "=", "list", "(", "range", "(", "len", "(", "action_space2", ")", ")", ")", ",", "joint", "=", "joint_actions", ",", "start", "=", "args", ".", "start_q", ",", "learning_rate", "=", "lr_q", ")", "\n", "\n", "hgnn", "=", "Model", "(", "args", ")", "# Agent1 HGNN", "\n", "ace", "=", "Model", "(", "args", ")", "# Agent2 ACE", "\n", "logging", ".", "info", "(", "str", "(", "hgnn", ")", ")", "\n", "optimizer", "=", "getattr", "(", "optimizers", ",", "args", ".", "optimizer", ")", "(", "params", "=", "hgnn", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "\n", "optimizer", ",", "\n", "step_size", "=", "int", "(", "args", ".", "lr_reduce_freq", ")", ",", "\n", "gamma", "=", "float", "(", "args", ".", "gamma", ")", "\n", ")", "\n", "tot_params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "hgnn", ".", "parameters", "(", ")", "]", ")", "\n", "logging", ".", "info", "(", "f\"Total number of parameters: {tot_params}\"", ")", "\n", "if", "args", ".", "cuda", "is", "not", "None", "and", "int", "(", "args", ".", "cuda", ")", ">=", "0", ":", "\n", "        ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "str", "(", "args", ".", "cuda", ")", "\n", "hgnn", "=", "hgnn", ".", "to", "(", "args", ".", "device", ")", "\n", "ace", "=", "ace", ".", "to", "(", "args", ".", "device", ")", "\n", "for", "x", ",", "val", "in", "data", ".", "items", "(", ")", ":", "\n", "            ", "if", "torch", ".", "is_tensor", "(", "data", "[", "x", "]", ")", ":", "\n", "                ", "data", "[", "x", "]", "=", "data", "[", "x", "]", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Train model", "\n", "", "", "", "t_total", "=", "time", ".", "time", "(", ")", "\n", "counter", "=", "0", "\n", "best_val_metrics", "=", "hgnn", ".", "init_metric_dict", "(", ")", "\n", "best_test_metrics", "=", "None", "\n", "best_emb", "=", "None", "\n", "val_metric_record", "=", "[", "]", "\n", "train_metric_record", "=", "[", "]", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "t", "=", "time", ".", "time", "(", ")", "\n", "hgnn", ".", "train", "(", ")", "\n", "ace", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# train model with RL and return Agent1's train metrics", "\n", "# Terminate mechanism", "\n", "if", "epoch", ">", "args", ".", "start_q", "+", "30", ":", "\n", "            ", "r1", "=", "np", ".", "array", "(", "env", ".", "c1_record", ")", "[", "-", "30", ":", "-", "1", ",", "0", "]", "\n", "r2", "=", "np", ".", "array", "(", "env", ".", "c1_record", ")", "[", "-", "30", ":", "-", "1", ",", "1", "]", "\n", "if", "abs", "(", "max", "(", "r1", ")", "-", "min", "(", "r1", ")", ")", "<=", "0.03", "and", "not", "env", ".", "stop", "[", "0", "]", ":", "\n", "                ", "env", ".", "stop", "[", "0", "]", "=", "True", "\n", "print", "(", "\"Layer1 RL terminate at {:.3f}.\"", ".", "format", "(", "env", ".", "c1_record", "[", "-", "1", "]", "[", "0", "]", ")", ")", "\n", "counter", "=", "args", ".", "patience", "//", "2", "\n", "", "if", "abs", "(", "max", "(", "r2", ")", "-", "min", "(", "r2", ")", ")", "<=", "0.03", "and", "not", "env", ".", "stop", "[", "1", "]", ":", "\n", "                ", "env", ".", "stop", "[", "1", "]", "=", "True", "\n", "print", "(", "\"Layer2 RL terminate at {:.3f}.\"", ".", "format", "(", "env", ".", "c1_record", "[", "-", "1", "]", "[", "1", "]", ")", ")", "\n", "counter", "=", "args", ".", "patience", "//", "2", "\n", "\n", "", "", "train_metrics", "=", "hgnn", ".", "train_with_RL", "(", "env", ",", "Agent1", ",", "Agent2", ",", "data", ",", "epoch", ",", "ace", ")", "\n", "train_metric_record", ".", "append", "(", "train_metrics", "[", "hgnn", ".", "key_param", "]", ")", "\n", "train_metrics", "[", "'loss'", "]", ".", "backward", "(", ")", "\n", "if", "args", ".", "grad_clip", "is", "not", "None", ":", "\n", "            ", "max_norm", "=", "float", "(", "args", ".", "grad_clip", ")", "\n", "all_params", "=", "list", "(", "hgnn", ".", "parameters", "(", ")", ")", "\n", "for", "param", "in", "all_params", ":", "\n", "                ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "param", ",", "max_norm", ")", "\n", "", "", "optimizer", ".", "step", "(", ")", "\n", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "args", ".", "log_freq", "==", "0", ":", "\n", "            ", "logging", ".", "info", "(", "\" \"", ".", "join", "(", "[", "'Epoch: {:04d}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "\n", "'lr: {}'", ".", "format", "(", "lr_scheduler", ".", "get_lr", "(", ")", "[", "0", "]", ")", ",", "\n", "format_metrics", "(", "train_metrics", ",", "'train'", ")", ",", "\n", "'time: {:.4f}s'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "t", ")", "\n", "]", ")", ")", "\n", "", "if", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_freq", "==", "0", ":", "\n", "            ", "hgnn", ".", "eval", "(", ")", "\n", "embeddings", "=", "hgnn", ".", "encode", "(", "data", "[", "'features'", "]", ",", "data", "[", "'adj_train_norm'", "]", ")", "\n", "val_metrics", "=", "hgnn", ".", "compute_metrics", "(", "embeddings", ",", "data", ",", "'val'", ")", "\n", "val_metric_record", ".", "append", "(", "val_metrics", "[", "hgnn", ".", "key_param", "]", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "args", ".", "log_freq", "==", "0", ":", "\n", "                ", "logging", ".", "info", "(", "\" \"", ".", "join", "(", "[", "'Epoch: {:04d}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "format_metrics", "(", "val_metrics", ",", "'val'", ")", "]", ")", ")", "\n", "\n", "", "if", "hgnn", ".", "has_improved", "(", "best_val_metrics", ",", "val_metrics", ")", ":", "\n", "                ", "best_test_metrics", "=", "hgnn", ".", "compute_metrics", "(", "embeddings", ",", "data", ",", "'test'", ")", "\n", "best_emb", "=", "embeddings", ".", "cpu", "(", ")", "\n", "if", "args", ".", "save", ":", "\n", "                    ", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'embeddings.npy'", ")", ",", "best_emb", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "best_val_metrics", "=", "val_metrics", "\n", "counter", "=", "0", "\n", "", "else", ":", "\n", "                ", "counter", "+=", "1", "\n", "if", "counter", ">=", "args", ".", "patience", "and", "epoch", ">", "args", ".", "min_epochs", "and", "all", "(", "env", ".", "stop", ")", ":", "\n", "                    ", "logging", ".", "info", "(", "\"Early stopping\"", ")", "\n", "break", "\n", "\n", "", "", "", "", "logging", ".", "info", "(", "\"Optimization Finished!\"", ")", "\n", "logging", ".", "info", "(", "\"Total time elapsed: {:.4f}s\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "t_total", ")", ")", "\n", "if", "not", "best_test_metrics", ":", "\n", "        ", "hgnn", ".", "eval", "(", ")", "\n", "best_emb", "=", "hgnn", ".", "encode", "(", "data", "[", "'features'", "]", ",", "data", "[", "'adj_train_norm'", "]", ")", "\n", "best_test_metrics", "=", "hgnn", ".", "compute_metrics", "(", "best_emb", ",", "data", ",", "'test'", ")", "\n", "", "logging", ".", "info", "(", "\" \"", ".", "join", "(", "[", "\"Val set results:\"", ",", "format_metrics", "(", "best_val_metrics", ",", "'val'", ")", "]", ")", ")", "\n", "logging", ".", "info", "(", "\" \"", ".", "join", "(", "[", "\"Test set results:\"", ",", "format_metrics", "(", "best_test_metrics", ",", "'test'", ")", "]", ")", ")", "\n", "if", "args", ".", "save", ":", "\n", "# Save embeddings and attentions", "\n", "        ", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'embeddings.npy'", ")", ",", "best_emb", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "if", "hasattr", "(", "hgnn", ".", "encoder", ",", "'att_adj'", ")", ":", "\n", "            ", "filename", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "args", ".", "dataset", "+", "'_att_adj.p'", ")", "\n", "pickle", ".", "dump", "(", "hgnn", ".", "encoder", ".", "att_adj", ".", "cpu", "(", ")", ".", "to_dense", "(", ")", ",", "open", "(", "filename", ",", "'wb'", ")", ")", "\n", "print", "(", "'Dumped attention adj: '", "+", "filename", ")", "\n", "\n", "# Save model", "\n", "", "json", ".", "dump", "(", "vars", "(", "args", ")", ",", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'config.json'", ")", ",", "'w'", ")", ")", "\n", "torch", ".", "save", "(", "hgnn", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'model.pth'", ")", ")", "\n", "\n", "# Save curvature record and figures", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'curv1.npy'", ")", ",", "np", ".", "array", "(", "env", ".", "c1_record", ")", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'curv2.npy'", ")", ",", "np", ".", "array", "(", "env", ".", "c2_record", ")", ")", "\n", "\n", "# Save acc record", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'metric_record.npy'", ")", ",", "np", ".", "array", "(", "[", "train_metric_record", ",", "val_metric_record", "]", ")", ")", "\n", "\n", "logging", ".", "info", "(", "\"Agent1: {}, Agent2: {}\"", ".", "format", "(", "env", ".", "c1", ",", "env", ".", "c2", ")", ")", "\n", "logging", ".", "info", "(", "f\"Saved model in {save_dir}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.env.Env.__init__": [[4, 17], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["    ", "def", "__init__", "(", "self", ",", "theta", ",", "initial_c", ")", ":", "\n", "        ", "super", "(", "Env", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c1", "=", "[", "initial_c", "]", "*", "2", "\n", "self", ".", "c1_record", "=", "[", "self", ".", "c1", "[", ":", "]", "]", "\n", "self", ".", "c2", "=", "[", "initial_c", "]", "*", "2", "\n", "self", ".", "c2_record", "=", "[", "self", ".", "c2", "[", ":", "]", "]", "\n", "self", ".", "acc1_record", "=", "[", "0.0", "]", "\n", "self", ".", "acc2_record", "=", "[", "0.0", "]", "\n", "self", ".", "r1_record", "=", "[", "0.0", "]", "\n", "self", ".", "theta", "=", "theta", "\n", "self", ".", "embedding1", "=", "None", "\n", "self", ".", "embedding2", "=", "None", "\n", "self", ".", "stop", "=", "[", "False", ",", "False", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.env.Env.get_observation": [[18, 22], ["format"], "methods", ["None"], ["", "def", "get_observation", "(", "self", ")", ":", "\n", "        ", "select_num", "=", "', '", ".", "join", "(", "[", "format", "(", "num", ",", "'.3f'", ")", "for", "num", "in", "self", ".", "c1", "]", ")", "\n", "observation", "=", "select_num", "\n", "return", "observation", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.env.Env.step": [[23, 68], ["env.Env.c1_record.append", "env.Env.c2_record.append", "hgnn.encode", "hgnn.compute_metrics", "env.Env.acc1_record.append", "env.Env.r1_record.append", "ace.mapping", "ace.compute_metrics", "env.Env.acc2_record.append", "hgnn.encode.clone().detach", "hgnn.change_curv", "hgnn.change_curv", "ace.estimation", "hgnn.encode.clone", "abs", "abs"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.mapping", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.change_curv", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.change_curv", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.estimation"], ["", "def", "step", "(", "self", ",", "actions", ",", "hgnn", ",", "data", ",", "ace", ")", ":", "\n", "        ", "'''\n        Get reward and next state based on current state and action;\n        Train model at the same time\n        '''", "\n", "last_c2", "=", "self", ".", "c2_record", "[", "-", "1", "]", "\n", "last_c1", "=", "self", ".", "c1_record", "[", "-", "1", "]", "\n", "\n", "if", "actions", "[", "0", "]", "==", "1", ":", "\n", "            ", "hgnn", ".", "change_curv", "(", "last_c2", ")", "\n", "self", ".", "c1", "=", "last_c2", "\n", "", "else", ":", "\n", "            ", "hgnn", ".", "change_curv", "(", "last_c1", ")", "\n", "self", ".", "c1", "=", "last_c1", "\n", "", "self", ".", "c1_record", ".", "append", "(", "self", ".", "c1", "[", ":", "]", ")", "\n", "\n", "# c' = 1 / (theta * abs(k) + (1-theta) * 1/c)", "\n", "action_1", "=", "actions", "[", "1", "]", "//", "2", "if", "not", "self", ".", "stop", "[", "0", "]", "else", "0", "\n", "action_2", "=", "actions", "[", "1", "]", "%", "2", "if", "not", "self", ".", "stop", "[", "1", "]", "else", "0", "\n", "if", "action_1", "+", "action_2", ">", "0", ":", "\n", "            ", "kappa", "=", "ace", ".", "estimation", "(", "self", ".", "embedding2", ")", "\n", "if", "action_1", "==", "1", ":", "\n", "                ", "self", ".", "c2", "[", "0", "]", "=", "1", "/", "(", "(", "1", "-", "self", ".", "theta", ")", "/", "self", ".", "c2", "[", "0", "]", "+", "self", ".", "theta", "*", "abs", "(", "kappa", ")", ")", "\n", "", "if", "action_2", "==", "1", ":", "\n", "                ", "self", ".", "c2", "[", "1", "]", "=", "1", "/", "(", "(", "1", "-", "self", ".", "theta", ")", "/", "self", ".", "c2", "[", "1", "]", "+", "self", ".", "theta", "*", "abs", "(", "kappa", ")", ")", "\n", "", "", "self", ".", "c2_record", ".", "append", "(", "self", ".", "c2", "[", ":", "]", ")", "\n", "\n", "# HGNN Agent", "\n", "embeddings1", "=", "hgnn", ".", "encode", "(", "data", "[", "'features'", "]", ",", "data", "[", "'adj_train_norm'", "]", ")", "\n", "train_metrics1", "=", "hgnn", ".", "compute_metrics", "(", "embeddings1", ",", "data", ",", "'train'", ")", "\n", "curr_acc1", "=", "train_metrics1", "[", "hgnn", ".", "key_param", "]", "\n", "reward1", "=", "100", "*", "(", "curr_acc1", "-", "self", ".", "acc1_record", "[", "-", "1", "]", ")", "\n", "self", ".", "acc1_record", ".", "append", "(", "curr_acc1", ")", "\n", "self", ".", "r1_record", ".", "append", "(", "reward1", ")", "\n", "\n", "# ACE Agent", "\n", "self", ".", "embeddings2", "=", "ace", ".", "mapping", "(", "self", ".", "embedding1", ",", "self", ".", "c1_record", "[", "-", "2", "]", ",", "self", ".", "c2", ")", "\n", "train_metrics2", "=", "ace", ".", "compute_metrics", "(", "self", ".", "embeddings2", ",", "data", ",", "'train'", ")", "\n", "curr_acc2", "=", "train_metrics2", "[", "ace", ".", "key_param", "]", "\n", "reward2", "=", "100", "*", "(", "curr_acc2", "-", "self", ".", "acc2_record", "[", "-", "1", "]", ")", "\n", "self", ".", "acc2_record", ".", "append", "(", "curr_acc2", ")", "\n", "\n", "self", ".", "embedding1", "=", "embeddings1", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "\n", "return", "(", "reward1", ",", "reward2", ")", ",", "train_metrics1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_data": [[17, 45], ["random.seed", "data_utils.load_paths", "time.time", "data_utils.process", "print", "data_utils.load_data_nc", "time.time", "data_utils.load_data_lp", "print", "data_utils.augment", "time.time", "data_utils.mask_edges", "print", "time.time", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_paths", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.process", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_data_nc", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_data_lp", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.augment", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.mask_edges"], ["def", "load_data", "(", "args", ",", "datapath", ")", ":", "\n", "    ", "random", ".", "seed", "(", "args", ".", "split_seed", ")", "\n", "load_paths", "(", "args", ".", "dataset", ",", "datapath", ")", "\n", "if", "args", ".", "task", "==", "'nc'", ":", "\n", "        ", "data", "=", "load_data_nc", "(", "args", ".", "dataset", ",", "args", ".", "use_feats", ",", "datapath", ",", "args", ".", "split_seed", ")", "\n", "", "else", ":", "\n", "        ", "start", "=", "time", ".", "time", "(", ")", "\n", "data", "=", "load_data_lp", "(", "args", ".", "dataset", ",", "args", ".", "use_feats", ",", "datapath", ")", "\n", "print", "(", "\"Data loading finish...time: {}s.\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "adj", "=", "data", "[", "'adj_train'", "]", "\n", "if", "args", ".", "task", "==", "'lp'", ":", "\n", "            ", "start", "=", "time", ".", "time", "(", ")", "\n", "adj_train", ",", "train_edges", ",", "train_edges_false", ",", "val_edges", ",", "val_edges_false", ",", "test_edges", ",", "test_edges_false", "=", "mask_edges", "(", "\n", "adj", ",", "args", ".", "val_prop", ",", "args", ".", "test_prop", ",", "args", ".", "split_seed", "\n", ")", "\n", "print", "(", "\"Edge masking finish...time: {}s.\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "data", "[", "'adj_train'", "]", "=", "adj_train", "\n", "data", "[", "'train_edges'", "]", ",", "data", "[", "'train_edges_false'", "]", "=", "train_edges", ",", "train_edges_false", "\n", "data", "[", "'val_edges'", "]", ",", "data", "[", "'val_edges_false'", "]", "=", "val_edges", ",", "val_edges_false", "\n", "data", "[", "'test_edges'", "]", ",", "data", "[", "'test_edges_false'", "]", "=", "test_edges", ",", "test_edges_false", "\n", "", "", "start", "=", "time", ".", "time", "(", ")", "\n", "data", "[", "'adj_train_norm'", "]", ",", "data", "[", "'features'", "]", "=", "process", "(", "\n", "data", "[", "'adj_train'", "]", ",", "data", "[", "'features'", "]", ",", "args", ".", "normalize_adj", ",", "args", ".", "normalize_feats", "\n", ")", "\n", "print", "(", "\"Processing finish...time: {}s.\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "if", "args", ".", "dataset", "==", "'airport'", ":", "\n", "        ", "data", "[", "'features'", "]", "=", "augment", "(", "data", "[", "'adj_train'", "]", ",", "data", "[", "'features'", "]", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_paths": [[46, 59], ["print", "time.time", "os.path.join", "numpy.load().item", "time.time", "print", "os.path.join", "numpy.load().tolist", "numpy.load", "numpy.load"], "function", ["None"], ["", "def", "load_paths", "(", "dataset", ",", "data_path", ")", ":", "\n", "    ", "print", "(", "'start loading paths...'", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "dict_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'paths.npy'", ")", "\n", "if", "dataset", "in", "[", "'pubmed'", ",", "'ppi'", "]", ":", "\n", "        ", "global", "NODELIST", "\n", "nodes_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'nodes0.npy'", ")", "\n", "NODELIST", "=", "np", ".", "load", "(", "nodes_path", ")", ".", "tolist", "(", ")", "\n", "", "paths_dict", "=", "np", ".", "load", "(", "dict_path", ")", ".", "item", "(", ")", "\n", "global", "PATHDICT", "\n", "PATHDICT", "=", "paths_dict", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Loaded in {:.4f} seconds.'", ".", "format", "(", "end", "-", "start", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.process": [[64, 74], ["scipy.isspmatrix", "torch.Tensor", "data_utils.sparse_mx_to_torch_sparse_tensor", "numpy.array", "data_utils.normalize", "data_utils.normalize", "normalize.todense", "scipy.eye"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.sparse_mx_to_torch_sparse_tensor", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.normalize", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.normalize"], ["", "def", "process", "(", "adj", ",", "features", ",", "normalize_adj", ",", "normalize_feats", ")", ":", "\n", "    ", "if", "sp", ".", "isspmatrix", "(", "features", ")", ":", "\n", "        ", "features", "=", "np", ".", "array", "(", "features", ".", "todense", "(", ")", ")", "\n", "", "if", "normalize_feats", ":", "\n", "        ", "features", "=", "normalize", "(", "features", ")", "\n", "", "features", "=", "torch", ".", "Tensor", "(", "features", ")", "\n", "if", "normalize_adj", ":", "\n", "        ", "adj", "=", "normalize", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "", "adj", "=", "sparse_mx_to_torch_sparse_tensor", "(", "adj", ")", "\n", "return", "adj", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.normalize": [[76, 84], ["numpy.array", "numpy.power().flatten", "scipy.diags", "sp.diags.dot", "r_mat_inv.dot.sum", "numpy.power", "numpy.isinf"], "function", ["None"], ["", "def", "normalize", "(", "mx", ")", ":", "\n", "    ", "\"\"\"Row-normalize sparse matrix.\"\"\"", "\n", "rowsum", "=", "np", ".", "array", "(", "mx", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "sp", ".", "diags", "(", "r_inv", ")", "\n", "mx", "=", "r_mat_inv", ".", "dot", "(", "mx", ")", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.sparse_mx_to_torch_sparse_tensor": [[86, 95], ["sparse_mx.tocoo.tocoo", "torch.from_numpy", "torch.Tensor", "torch.Size", "torch.sparse.FloatTensor", "numpy.vstack().astype", "numpy.vstack"], "function", ["None"], ["", "def", "sparse_mx_to_torch_sparse_tensor", "(", "sparse_mx", ")", ":", "\n", "    ", "\"\"\"Convert a scipy sparse matrix to a torch sparse tensor.\"\"\"", "\n", "sparse_mx", "=", "sparse_mx", ".", "tocoo", "(", ")", "\n", "indices", "=", "torch", ".", "from_numpy", "(", "\n", "np", ".", "vstack", "(", "(", "sparse_mx", ".", "row", ",", "sparse_mx", ".", "col", ")", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", ")", "\n", "values", "=", "torch", ".", "Tensor", "(", "sparse_mx", ".", "data", ")", "\n", "shape", "=", "torch", ".", "Size", "(", "sparse_mx", ".", "shape", ")", "\n", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "indices", ",", "values", ",", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.augment": [[97, 104], ["numpy.squeeze", "torch.tensor().squeeze", "torch.ones", "torch.cat", "numpy.sum().astype", "torch.cat.size", "torch.tensor", "numpy.sum", "numpy.eye"], "function", ["None"], ["", "def", "augment", "(", "adj", ",", "features", ",", "normalize_feats", "=", "True", ")", ":", "\n", "    ", "deg", "=", "np", ".", "squeeze", "(", "np", ".", "sum", "(", "adj", ",", "axis", "=", "0", ")", ".", "astype", "(", "int", ")", ")", "\n", "deg", "[", "deg", ">", "5", "]", "=", "5", "\n", "deg_onehot", "=", "torch", ".", "tensor", "(", "np", ".", "eye", "(", "6", ")", "[", "deg", "]", ",", "dtype", "=", "torch", ".", "float", ")", ".", "squeeze", "(", ")", "\n", "const_f", "=", "torch", ".", "ones", "(", "features", ".", "size", "(", "0", ")", ",", "1", ")", "\n", "features", "=", "torch", ".", "cat", "(", "(", "features", ",", "deg_onehot", ",", "const_f", ")", ",", "dim", "=", "1", ")", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.mask_edges": [[109, 130], ["numpy.random.seed", "scipy.triu().nonzero", "numpy.array", "numpy.random.shuffle", "scipy.triu().nonzero", "numpy.array", "numpy.random.shuffle", "len", "int", "int", "numpy.concatenate", "scipy.csr_matrix", "list", "list", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "scipy.triu", "zip", "scipy.triu", "zip", "numpy.ones", "scipy.csr_matrix", "adj.toarray"], "function", ["None"], ["", "def", "mask_edges", "(", "adj", ",", "val_prop", ",", "test_prop", ",", "seed", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "# get tp edges", "\n", "x", ",", "y", "=", "sp", ".", "triu", "(", "adj", ")", ".", "nonzero", "(", ")", "\n", "pos_edges", "=", "np", ".", "array", "(", "list", "(", "zip", "(", "x", ",", "y", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "pos_edges", ")", "\n", "# get tn edges", "\n", "x", ",", "y", "=", "sp", ".", "triu", "(", "sp", ".", "csr_matrix", "(", "1.", "-", "adj", ".", "toarray", "(", ")", ")", ")", ".", "nonzero", "(", ")", "\n", "neg_edges", "=", "np", ".", "array", "(", "list", "(", "zip", "(", "x", ",", "y", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "neg_edges", ")", "\n", "\n", "m_pos", "=", "len", "(", "pos_edges", ")", "\n", "n_val", "=", "int", "(", "m_pos", "*", "val_prop", ")", "\n", "n_test", "=", "int", "(", "m_pos", "*", "test_prop", ")", "\n", "val_edges", ",", "test_edges", ",", "train_edges", "=", "pos_edges", "[", ":", "n_val", "]", ",", "pos_edges", "[", "n_val", ":", "n_test", "+", "n_val", "]", ",", "pos_edges", "[", "n_test", "+", "n_val", ":", "]", "\n", "val_edges_false", ",", "test_edges_false", "=", "neg_edges", "[", ":", "n_val", "]", ",", "neg_edges", "[", "n_val", ":", "n_test", "+", "n_val", "]", "\n", "train_edges_false", "=", "np", ".", "concatenate", "(", "[", "neg_edges", ",", "val_edges", ",", "test_edges", "]", ",", "axis", "=", "0", ")", "\n", "adj_train", "=", "sp", ".", "csr_matrix", "(", "(", "np", ".", "ones", "(", "train_edges", ".", "shape", "[", "0", "]", ")", ",", "(", "train_edges", "[", ":", ",", "0", "]", ",", "train_edges", "[", ":", ",", "1", "]", ")", ")", ",", "shape", "=", "adj", ".", "shape", ")", "\n", "adj_train", "=", "adj_train", "+", "adj_train", ".", "T", "\n", "return", "adj_train", ",", "torch", ".", "LongTensor", "(", "train_edges", ")", ",", "torch", ".", "LongTensor", "(", "train_edges_false", ")", ",", "torch", ".", "LongTensor", "(", "val_edges", ")", ",", "torch", ".", "LongTensor", "(", "val_edges_false", ")", ",", "torch", ".", "LongTensor", "(", "test_edges", ")", ",", "torch", ".", "LongTensor", "(", "\n", "test_edges_false", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.split_data": [[132, 150], ["random.seed", "dict", "range", "enumerate", "range", "numpy.max", "label_dict[].append", "random.shuffle", "round", "round", "len", "len"], "function", ["None"], ["", "def", "split_data", "(", "labels", ",", "val_prop", ",", "test_prop", ",", "seed", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "num_class", "=", "np", ".", "max", "(", "labels", ")", "+", "1", "\n", "label_dict", "=", "dict", "(", ")", "\n", "for", "i", "in", "range", "(", "num_class", ")", ":", "\n", "        ", "label_dict", "[", "i", "]", "=", "[", "]", "\n", "", "for", "i", ",", "l", "in", "enumerate", "(", "labels", ")", ":", "\n", "        ", "label_dict", "[", "l", "]", ".", "append", "(", "i", ")", "\n", "", "idx_train", ",", "idx_val", ",", "idx_test", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "num_class", ")", ":", "\n", "        ", "random", ".", "shuffle", "(", "label_dict", "[", "i", "]", ")", "\n", "num_val", "=", "round", "(", "val_prop", "*", "len", "(", "label_dict", "[", "i", "]", ")", ")", "\n", "num_test", "=", "round", "(", "test_prop", "*", "len", "(", "label_dict", "[", "i", "]", ")", ")", "\n", "idx_val", "+=", "label_dict", "[", "i", "]", "[", ":", "num_val", "]", "\n", "idx_test", "+=", "label_dict", "[", "i", "]", "[", "num_val", ":", "num_val", "+", "num_test", "]", "\n", "idx_train", "+=", "label_dict", "[", "i", "]", "[", "num_val", "+", "num_test", ":", "]", "\n", "\n", "", "return", "idx_val", ",", "idx_test", ",", "idx_train", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.bin_feat": [[152, 155], ["numpy.digitize", "np.digitize.min"], "function", ["None"], ["", "def", "bin_feat", "(", "feat", ",", "bins", ")", ":", "\n", "    ", "digitized", "=", "np", ".", "digitize", "(", "feat", ",", "bins", ")", "\n", "return", "digitized", "-", "digitized", ".", "min", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_data_lp": [[160, 177], ["data_utils.load_citation_data", "data_utils.load_ppi_data", "data_utils.load_webkb_data", "data_utils.load_synthetic_data", "data_utils.load_data_airport", "FileNotFoundError"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_citation_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_ppi_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.webkb.load_webkb.load_webkb_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_synthetic_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_data_airport"], ["", "def", "load_data_lp", "(", "dataset", ",", "use_feats", ",", "data_path", ")", ":", "\n", "    ", "if", "dataset", "in", "[", "'cora'", ",", "'pubmed'", ",", "\"citeseer\"", "]", ":", "\n", "        ", "adj", ",", "features", "=", "load_citation_data", "(", "dataset", ",", "use_feats", ",", "data_path", ")", "[", ":", "2", "]", "\n", "# elif dataset == 'citeseer':", "\n", "#     adj, features = load_citeseer_data(dataset, use_feats, data_path)[:2]", "\n", "", "elif", "dataset", "==", "'ppi'", ":", "\n", "        ", "adj", ",", "features", "=", "load_ppi_data", "(", "dataset", ",", "use_feats", ",", "data_path", ")", "[", ":", "2", "]", "\n", "", "elif", "dataset", "==", "'webkb'", ":", "\n", "        ", "adj", ",", "features", "=", "load_webkb_data", "(", "dataset", ",", "use_feats", ",", "data_path", ")", "[", ":", "2", "]", "\n", "", "elif", "dataset", "==", "'disease_lp'", ":", "\n", "        ", "adj", ",", "features", "=", "load_synthetic_data", "(", "dataset", ",", "use_feats", ",", "data_path", ")", "[", ":", "2", "]", "\n", "", "elif", "dataset", "==", "'airport'", ":", "\n", "        ", "adj", ",", "features", "=", "load_data_airport", "(", "dataset", ",", "data_path", ",", "return_label", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'Dataset {} is not supported.'", ".", "format", "(", "dataset", ")", ")", "\n", "", "data", "=", "{", "'adj_train'", ":", "adj", ",", "'features'", ":", "features", "}", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_data_nc": [[182, 209], ["torch.LongTensor", "data_utils.load_citation_data", "data_utils.load_ppi_data", "data_utils.split_data", "data_utils.load_webkb_data", "data_utils.split_data", "data_utils.split_data", "data_utils.load_synthetic_data", "data_utils.load_data_airport", "FileNotFoundError"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_citation_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_ppi_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.split_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.webkb.load_webkb.load_webkb_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.split_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.split_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_synthetic_data", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_data_airport"], ["", "def", "load_data_nc", "(", "dataset", ",", "use_feats", ",", "data_path", ",", "split_seed", ")", ":", "\n", "    ", "if", "dataset", "in", "[", "'cora'", ",", "'pubmed'", ",", "\"citeseer\"", "]", ":", "\n", "        ", "adj", ",", "features", ",", "labels", ",", "idx_train", ",", "idx_val", ",", "idx_test", "=", "load_citation_data", "(", "\n", "dataset", ",", "use_feats", ",", "data_path", ",", "split_seed", "\n", ")", "\n", "", "elif", "dataset", "==", "'ppi'", ":", "\n", "        ", "adj", ",", "features", ",", "labels", "=", "load_ppi_data", "(", "dataset", ",", "use_feats", ",", "data_path", ")", "\n", "val_prop", ",", "test_prop", "=", "0.15", ",", "0.15", "\n", "idx_val", ",", "idx_test", ",", "idx_train", "=", "split_data", "(", "labels", ",", "val_prop", ",", "test_prop", ",", "seed", "=", "split_seed", ")", "\n", "", "elif", "dataset", "==", "'webkb'", ":", "\n", "        ", "adj", ",", "features", ",", "labels", "=", "load_webkb_data", "(", "dataset", ",", "use_feats", ",", "data_path", ")", "\n", "val_prop", ",", "test_prop", "=", "0.15", ",", "0.15", "\n", "idx_val", ",", "idx_test", ",", "idx_train", "=", "split_data", "(", "labels", ",", "val_prop", ",", "test_prop", ",", "seed", "=", "split_seed", ")", "\n", "", "else", ":", "\n", "        ", "if", "dataset", "==", "'disease_nc'", ":", "\n", "            ", "adj", ",", "features", ",", "labels", "=", "load_synthetic_data", "(", "dataset", ",", "use_feats", ",", "data_path", ")", "\n", "val_prop", ",", "test_prop", "=", "0.10", ",", "0.60", "\n", "", "elif", "dataset", "==", "'airport'", ":", "\n", "            ", "adj", ",", "features", ",", "labels", "=", "load_data_airport", "(", "dataset", ",", "data_path", ",", "return_label", "=", "True", ")", "\n", "val_prop", ",", "test_prop", "=", "0.15", ",", "0.15", "\n", "", "else", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "'Dataset {} is not supported.'", ".", "format", "(", "dataset", ")", ")", "\n", "", "idx_val", ",", "idx_test", ",", "idx_train", "=", "split_data", "(", "labels", ",", "val_prop", ",", "test_prop", ",", "seed", "=", "split_seed", ")", "\n", "\n", "", "labels", "=", "torch", ".", "LongTensor", "(", "labels", ")", "\n", "data", "=", "{", "'adj_train'", ":", "adj", ",", "'features'", ":", "features", ",", "'labels'", ":", "labels", ",", "'idx_train'", ":", "idx_train", ",", "'idx_val'", ":", "idx_val", ",", "'idx_test'", ":", "idx_test", "}", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_citation_data": [[214, 258], ["range", "tuple", "data_utils.parse_index_file", "numpy.sort", "scipy.vstack().tolil", "numpy.vstack", "numpy.argmax", "np.sort.tolist", "list", "range", "networkx.adjacency_matrix", "networkx.from_dict_of_lists", "print", "print", "len", "os.path.join", "scipy.csr_matrix", "numpy.zeros", "range", "len", "networkx.from_dict_of_lists", "scipy.eye", "nx.from_dict_of_lists.size", "nx.from_dict_of_lists.number_of_nodes", "open", "scipy.vstack", "len", "len", "os.path.join", "objects.append", "objects.append", "np.sort.max", "np.sort.min", "pickle.load", "pickle.load", "np.sort.min", "np.sort.min"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.parse_index_file"], ["", "def", "load_citation_data", "(", "dataset_str", ",", "use_feats", ",", "data_path", ",", "split_seed", "=", "None", ")", ":", "\n", "    ", "names", "=", "[", "'x'", ",", "'y'", ",", "'tx'", ",", "'ty'", ",", "'allx'", ",", "'ally'", ",", "'graph'", "]", "\n", "objects", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "names", ")", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"ind.{}.{}\"", ".", "format", "(", "dataset_str", ",", "names", "[", "i", "]", ")", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "if", "sys", ".", "version_info", ">", "(", "3", ",", "0", ")", ":", "\n", "                ", "objects", ".", "append", "(", "pkl", ".", "load", "(", "f", ",", "encoding", "=", "'latin1'", ")", ")", "\n", "", "else", ":", "\n", "                ", "objects", ".", "append", "(", "pkl", ".", "load", "(", "f", ")", ")", "\n", "\n", "", "", "", "x", ",", "y", ",", "tx", ",", "ty", ",", "allx", ",", "ally", ",", "graph", "=", "tuple", "(", "objects", ")", "\n", "test_idx_reorder", "=", "parse_index_file", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"ind.{}.test.index\"", ".", "format", "(", "dataset_str", ")", ")", ")", "\n", "test_idx_range", "=", "np", ".", "sort", "(", "test_idx_reorder", ")", "\n", "\n", "if", "dataset_str", "==", "'citeseer'", ":", "\n", "        ", "test_idx_len", "=", "test_idx_range", ".", "max", "(", ")", "-", "test_idx_range", ".", "min", "(", ")", "+", "1", "\n", "tx_ext", "=", "sp", ".", "csr_matrix", "(", "(", "test_idx_len", ",", "tx", ".", "shape", "[", "1", "]", ")", ")", "\n", "tx_ext", "[", "test_idx_range", "-", "test_idx_range", ".", "min", "(", ")", ",", ":", "]", "=", "tx", "\n", "ty_ext", "=", "np", ".", "zeros", "(", "(", "test_idx_len", ",", "ty", ".", "shape", "[", "1", "]", ")", ")", "\n", "ty_ext", "[", "test_idx_range", "-", "test_idx_range", ".", "min", "(", ")", ",", ":", "]", "=", "ty", "\n", "tx", ",", "ty", "=", "tx_ext", ",", "ty_ext", "\n", "\n", "", "features", "=", "sp", ".", "vstack", "(", "(", "allx", ",", "tx", ")", ")", ".", "tolil", "(", ")", "\n", "features", "[", "test_idx_reorder", ",", ":", "]", "=", "features", "[", "test_idx_range", ",", ":", "]", "\n", "\n", "labels", "=", "np", ".", "vstack", "(", "(", "ally", ",", "ty", ")", ")", "\n", "labels", "[", "test_idx_reorder", ",", ":", "]", "=", "labels", "[", "test_idx_range", ",", ":", "]", "\n", "labels", "=", "np", ".", "argmax", "(", "labels", ",", "1", ")", "\n", "\n", "idx_test", "=", "test_idx_range", ".", "tolist", "(", ")", "\n", "idx_train", "=", "list", "(", "range", "(", "len", "(", "y", ")", ")", ")", "\n", "idx_val", "=", "range", "(", "len", "(", "y", ")", ",", "len", "(", "y", ")", "+", "500", ")", "\n", "\n", "adj", "=", "nx", ".", "adjacency_matrix", "(", "nx", ".", "from_dict_of_lists", "(", "graph", ")", ")", "\n", "\n", "if", "not", "use_feats", ":", "\n", "        ", "features", "=", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", "\n", "", "graph", "=", "nx", ".", "from_dict_of_lists", "(", "graph", ")", "\n", "global", "G", "\n", "G", "=", "graph", "\n", "print", "(", "'number of edges:'", ",", "graph", ".", "size", "(", ")", ")", "\n", "print", "(", "'number of nodes:'", ",", "graph", ".", "number_of_nodes", "(", ")", ")", "\n", "\n", "return", "adj", ",", "features", ",", "labels", ",", "idx_train", ",", "idx_val", ",", "idx_test", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.parse_index_file": [[260, 265], ["open", "index.append", "int", "line.strip"], "function", ["None"], ["", "def", "parse_index_file", "(", "filename", ")", ":", "\n", "    ", "index", "=", "[", "]", "\n", "for", "line", "in", "open", "(", "filename", ")", ":", "\n", "        ", "index", ".", "append", "(", "int", "(", "line", ".", "strip", "(", ")", ")", ")", "\n", "", "return", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_synthetic_data": [[267, 306], ["print", "set", "print", "numpy.zeros", "numpy.load", "open", "f.readlines", "line.rstrip().split", "edges.append", "len", "set.add", "set.add", "len", "scipy.load_npz", "scipy.eye", "os.path.join", "scipy.csr_matrix", "os.path.join", "list", "len", "len", "os.path.join", "line.rstrip"], "function", ["None"], ["", "def", "load_synthetic_data", "(", "dataset_str", ",", "use_feats", ",", "data_path", ")", ":", "\n", "    ", "object_to_idx", "=", "{", "}", "\n", "idx_counter", "=", "0", "\n", "edges", "=", "[", "]", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"{}.edges.csv\"", ".", "format", "(", "dataset_str", ")", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "all_edges", "=", "f", ".", "readlines", "(", ")", "\n", "", "for", "line", "in", "all_edges", ":", "\n", "        ", "n1", ",", "n2", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", "','", ")", "\n", "if", "n1", "in", "object_to_idx", ":", "\n", "            ", "i", "=", "object_to_idx", "[", "n1", "]", "\n", "", "else", ":", "\n", "            ", "i", "=", "idx_counter", "\n", "object_to_idx", "[", "n1", "]", "=", "i", "\n", "idx_counter", "+=", "1", "\n", "", "if", "n2", "in", "object_to_idx", ":", "\n", "            ", "j", "=", "object_to_idx", "[", "n2", "]", "\n", "", "else", ":", "\n", "            ", "j", "=", "idx_counter", "\n", "object_to_idx", "[", "n2", "]", "=", "j", "\n", "idx_counter", "+=", "1", "\n", "", "edges", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "print", "(", "'number of edges:'", ",", "len", "(", "edges", ")", ")", "\n", "node_set", "=", "set", "(", ")", "\n", "for", "line", "in", "edges", ":", "\n", "        ", "n1", ",", "n2", "=", "line", "[", "0", "]", ",", "line", "[", "1", "]", "\n", "node_set", ".", "add", "(", "n1", ")", "\n", "node_set", ".", "add", "(", "n2", ")", "\n", "", "print", "(", "'number of nodes:'", ",", "len", "(", "list", "(", "node_set", ")", ")", ")", "\n", "\n", "adj", "=", "np", ".", "zeros", "(", "(", "len", "(", "object_to_idx", ")", ",", "len", "(", "object_to_idx", ")", ")", ")", "\n", "for", "i", ",", "j", "in", "edges", ":", "\n", "        ", "adj", "[", "i", ",", "j", "]", "=", "1.", "\n", "adj", "[", "j", ",", "i", "]", "=", "1.", "\n", "", "if", "use_feats", ":", "\n", "        ", "features", "=", "sp", ".", "load_npz", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"{}.feats.npz\"", ".", "format", "(", "dataset_str", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "features", "=", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", "\n", "", "labels", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"{}.labels.npy\"", ".", "format", "(", "dataset_str", ")", ")", ")", "\n", "return", "sp", ".", "csr_matrix", "(", "adj", ")", ",", "features", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_data_airport": [[308, 322], ["pickle.load", "print", "print", "networkx.adjacency_matrix", "numpy.array", "open", "pkl.load.size", "pkl.load.number_of_nodes", "data_utils.bin_feat", "os.path.join", "scipy.csr_matrix", "scipy.csr_matrix", "pkl.load.nodes"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.bin_feat"], ["", "def", "load_data_airport", "(", "dataset_str", ",", "data_path", ",", "return_label", "=", "False", ")", ":", "\n", "    ", "graph", "=", "pkl", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "dataset_str", "+", "'.p'", ")", ",", "'rb'", ")", ")", "\n", "print", "(", "'number of edges:'", ",", "graph", ".", "size", "(", ")", ")", "\n", "print", "(", "'number of nodes:'", ",", "graph", ".", "number_of_nodes", "(", ")", ")", "\n", "adj", "=", "nx", ".", "adjacency_matrix", "(", "graph", ")", "\n", "features", "=", "np", ".", "array", "(", "[", "graph", ".", "node", "[", "u", "]", "[", "'feat'", "]", "for", "u", "in", "graph", ".", "nodes", "(", ")", "]", ")", "\n", "if", "return_label", ":", "\n", "        ", "label_idx", "=", "4", "\n", "labels", "=", "features", "[", ":", ",", "label_idx", "]", "\n", "features", "=", "features", "[", ":", ",", ":", "label_idx", "]", "\n", "labels", "=", "bin_feat", "(", "labels", ",", "bins", "=", "[", "7.0", "/", "7", ",", "8.0", "/", "7", ",", "9.0", "/", "7", "]", ")", "\n", "return", "sp", ".", "csr_matrix", "(", "adj", ")", ",", "features", ",", "labels", "\n", "", "else", ":", "\n", "        ", "return", "sp", ".", "csr_matrix", "(", "adj", ")", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_citeseer_data": [[324, 335], ["torch.load", "features_citeseer.numpy", "sadj_citeseer.to_dense().numpy", "networkx.from_numpy_matrix", "print", "print", "labels_citeseer.numpy", "nx.from_numpy_matrix.size", "nx.from_numpy_matrix.number_of_nodes", "scipy.csr_matrix", "sadj_citeseer.to_dense"], "function", ["None"], ["", "", "def", "load_citeseer_data", "(", "dataset", ",", "use_feats", ",", "data_path", ")", ":", "\n", "    ", "features_citeseer", ",", "sadj_citeseer", ",", "labels_citeseer", "=", "torch", ".", "load", "(", "\"citeseer.pt\"", ")", "\n", "features", "=", "features_citeseer", ".", "numpy", "(", ")", "\n", "adj", "=", "sadj_citeseer", ".", "to_dense", "(", ")", ".", "numpy", "(", ")", "\n", "graph", "=", "nx", ".", "from_numpy_matrix", "(", "adj", ")", "\n", "global", "G", "\n", "G", "=", "graph", "\n", "print", "(", "'number of edges:'", ",", "graph", ".", "size", "(", ")", ")", "\n", "print", "(", "'number of nodes:'", ",", "graph", ".", "number_of_nodes", "(", ")", ")", "\n", "labels", "=", "labels_citeseer", ".", "numpy", "(", ")", "\n", "return", "sp", ".", "csr_matrix", "(", "adj", ")", ",", "features", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_ppi_data": [[337, 352], ["numpy.load", "numpy.loadtxt", "numpy.loadtxt", "numpy.zeros", "networkx.from_numpy_matrix", "print", "print", "nx.from_numpy_matrix.size", "nx.from_numpy_matrix.number_of_nodes", "scipy.csr_matrix", "len", "len", "int", "int", "int", "int", "list", "list", "list", "list"], "function", ["None"], ["", "def", "load_ppi_data", "(", "dataset", ",", "use_feats", ",", "data_path", ")", ":", "\n", "    ", "features_ppi", "=", "np", ".", "load", "(", "data_path", "+", "\"/features.npy\"", ")", "\n", "edges", "=", "np", ".", "loadtxt", "(", "data_path", "+", "\"/edges.txt\"", ")", "\n", "labels", "=", "np", ".", "loadtxt", "(", "data_path", "+", "\"/node2label.txt\"", ",", "delimiter", "=", "\" \"", ")", "\n", "labels", "=", "labels", "[", ":", ",", "1", "]", "\n", "adj", "=", "np", ".", "zeros", "(", "(", "len", "(", "features_ppi", ")", ",", "len", "(", "features_ppi", ")", ")", ")", "\n", "for", "item", "in", "edges", ":", "\n", "        ", "adj", "[", "int", "(", "list", "(", "item", ")", "[", "0", "]", ")", ",", "int", "(", "list", "(", "item", ")", "[", "1", "]", ")", "]", "=", "1.", "\n", "adj", "[", "int", "(", "list", "(", "item", ")", "[", "1", "]", ")", ",", "int", "(", "list", "(", "item", ")", "[", "0", "]", ")", "]", "=", "1.", "\n", "", "graph", "=", "nx", ".", "from_numpy_matrix", "(", "adj", ")", "\n", "global", "G", "\n", "G", "=", "graph", "\n", "print", "(", "'number of edges:'", ",", "graph", ".", "size", "(", ")", ")", "\n", "print", "(", "'number of nodes:'", ",", "graph", ".", "number_of_nodes", "(", ")", ")", "\n", "return", "sp", ".", "csr_matrix", "(", "adj", ")", ",", "features_ppi", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.data_utils.load_webkb_data": [[354, 374], ["print", "numpy.genfromtxt", "scipy.csr_matrix", "gat_utils.encode_onehot", "numpy.array", "numpy.genfromtxt", "numpy.array().reshape", "scipy.coo_matrix", "gat_utils.normalize_features", "gat_utils.normalize_adj", "networkx.from_numpy_matrix", "print", "print", "gat_utils.normalize_adj.multiply", "numpy.array", "nx.from_numpy_matrix.size", "nx.from_numpy_matrix.number_of_nodes", "numpy.dtype", "enumerate", "numpy.array", "numpy.ones", "gat_utils.normalize_adj.T.multiply", "scipy.eye", "gat_utils.normalize_adj.todense", "list", "map", "np.genfromtxt.flatten"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.gat_utils.encode_onehot", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.gat_utils.normalize_features", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.gat_utils.normalize_adj"], ["", "def", "load_webkb_data", "(", "dataset", ",", "use_feats", "=", "\"True\"", ",", "data_path", "=", "\"./data/\"", ")", ":", "\n", "    ", "dataset", "=", "\"webkb\"", "\n", "print", "(", "'Loading {} dataset...'", ".", "format", "(", "dataset", ")", ")", "\n", "idx_features_labels", "=", "np", ".", "genfromtxt", "(", "\"{}/{}.content\"", ".", "format", "(", "data_path", ",", "dataset", ")", ",", "dtype", "=", "np", ".", "dtype", "(", "str", ")", ")", "\n", "features", "=", "sp", ".", "csr_matrix", "(", "idx_features_labels", "[", ":", ",", "1", ":", "-", "1", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "labels", "=", "encode_onehot", "(", "idx_features_labels", "[", ":", ",", "-", "1", "]", ")", "\n", "idx", "=", "np", ".", "array", "(", "idx_features_labels", "[", ":", ",", "0", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "idx_map", "=", "{", "j", ":", "i", "for", "i", ",", "j", "in", "enumerate", "(", "idx", ")", "}", "\n", "edges_unordered", "=", "np", ".", "genfromtxt", "(", "\"{}/{}.cites\"", ".", "format", "(", "data_path", ",", "dataset", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "edges", "=", "np", ".", "array", "(", "list", "(", "map", "(", "idx_map", ".", "get", ",", "edges_unordered", ".", "flatten", "(", ")", ")", ")", ",", "dtype", "=", "np", ".", "int32", ")", ".", "reshape", "(", "edges_unordered", ".", "shape", ")", "\n", "adj", "=", "sp", ".", "coo_matrix", "(", "(", "np", ".", "ones", "(", "edges", ".", "shape", "[", "0", "]", ")", ",", "(", "edges", "[", ":", ",", "0", "]", ",", "edges", "[", ":", ",", "1", "]", ")", ")", ",", "shape", "=", "(", "labels", ".", "shape", "[", "0", "]", ",", "labels", ".", "shape", "[", "0", "]", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj", "=", "adj", "+", "adj", ".", "T", ".", "multiply", "(", "adj", ".", "T", ">", "adj", ")", "-", "adj", ".", "multiply", "(", "adj", ".", "T", ">", "adj", ")", "\n", "features", "=", "normalize_features", "(", "features", ")", "\n", "adj", "=", "normalize_adj", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "graph", "=", "nx", ".", "from_numpy_matrix", "(", "np", ".", "array", "(", "adj", ".", "todense", "(", ")", ")", ")", "\n", "global", "G", "\n", "G", "=", "graph", "\n", "print", "(", "'number of edges:'", ",", "graph", ".", "size", "(", ")", ")", "\n", "print", "(", "'number of nodes:'", ",", "graph", ".", "number_of_nodes", "(", ")", ")", "\n", "return", "adj", ",", "features", ",", "labels", "\n", "", ""]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.hyperbolicity.hyperbolicity_sample": [[14, 37], ["time.time", "tqdm.tqdm", "print", "max", "range", "time.time", "numpy.random.choice", "G.nodes", "networkx.shortest_path_length", "networkx.shortest_path_length", "networkx.shortest_path_length", "networkx.shortest_path_length", "networkx.shortest_path_length", "networkx.shortest_path_length", "s.append", "s.append", "s.append", "s.sort", "hyps.append", "time.time"], "function", ["None"], ["def", "hyperbolicity_sample", "(", "G", ",", "num_samples", "=", "50000", ")", ":", "\n", "    ", "curr_time", "=", "time", ".", "time", "(", ")", "\n", "hyps", "=", "[", "]", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "num_samples", ")", ")", ":", "\n", "        ", "curr_time", "=", "time", ".", "time", "(", ")", "\n", "node_tuple", "=", "np", ".", "random", ".", "choice", "(", "G", ".", "nodes", "(", ")", ",", "4", ",", "replace", "=", "False", ")", "\n", "s", "=", "[", "]", "\n", "try", ":", "\n", "            ", "d01", "=", "nx", ".", "shortest_path_length", "(", "G", ",", "source", "=", "node_tuple", "[", "0", "]", ",", "target", "=", "node_tuple", "[", "1", "]", ",", "weight", "=", "None", ")", "\n", "d23", "=", "nx", ".", "shortest_path_length", "(", "G", ",", "source", "=", "node_tuple", "[", "2", "]", ",", "target", "=", "node_tuple", "[", "3", "]", ",", "weight", "=", "None", ")", "\n", "d02", "=", "nx", ".", "shortest_path_length", "(", "G", ",", "source", "=", "node_tuple", "[", "0", "]", ",", "target", "=", "node_tuple", "[", "2", "]", ",", "weight", "=", "None", ")", "\n", "d13", "=", "nx", ".", "shortest_path_length", "(", "G", ",", "source", "=", "node_tuple", "[", "1", "]", ",", "target", "=", "node_tuple", "[", "3", "]", ",", "weight", "=", "None", ")", "\n", "d03", "=", "nx", ".", "shortest_path_length", "(", "G", ",", "source", "=", "node_tuple", "[", "0", "]", ",", "target", "=", "node_tuple", "[", "3", "]", ",", "weight", "=", "None", ")", "\n", "d12", "=", "nx", ".", "shortest_path_length", "(", "G", ",", "source", "=", "node_tuple", "[", "1", "]", ",", "target", "=", "node_tuple", "[", "2", "]", ",", "weight", "=", "None", ")", "\n", "s", ".", "append", "(", "d01", "+", "d23", ")", "\n", "s", ".", "append", "(", "d02", "+", "d13", ")", "\n", "s", ".", "append", "(", "d03", "+", "d12", ")", "\n", "s", ".", "sort", "(", ")", "\n", "hyps", ".", "append", "(", "(", "s", "[", "-", "1", "]", "-", "s", "[", "-", "2", "]", ")", "/", "2", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "continue", "\n", "", "", "print", "(", "'Time for hyp: '", ",", "time", ".", "time", "(", ")", "-", "curr_time", ")", "\n", "return", "max", "(", "hyps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.Artanh.forward": [[31, 37], ["x.clamp.clamp.clamp", "ctx.save_for_backward", "x.clamp.clamp.double", "torch.log_().sub_().mul_().to", "torch.log_().sub_().mul_", "torch.log_().sub_", "torch.log_", "torch.log_"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "clamp", "(", "-", "1", "+", "1e-15", ",", "1", "-", "1e-15", ")", "\n", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "z", "=", "x", ".", "double", "(", ")", "\n", "return", "(", "torch", ".", "log_", "(", "(", "1", "+", "z", ")", ".", "clamp_min", "(", "1e-15", ")", ")", ".", "sub_", "(", "torch", ".", "log_", "(", "(", "1", "-", "z", ")", ".", "clamp_min", "(", "1e-15", ")", ")", ")", ")", ".", "mul_", "(", "0.5", ")", ".", "to", "(", "x", ".", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.Artanh.backward": [[38, 42], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "input", ",", "=", "ctx", ".", "saved_tensors", "\n", "return", "grad_output", "/", "(", "1", "-", "input", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.Arsinh.forward": [[45, 50], ["ctx.save_for_backward", "x.double", "torch.sqrt_", "x.double.pow"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "z", "=", "x", ".", "double", "(", ")", "\n", "return", "(", "z", "+", "torch", ".", "sqrt_", "(", "1", "+", "z", ".", "pow", "(", "2", ")", ")", ")", ".", "clamp_min_", "(", "1e-15", ")", ".", "log_", "(", ")", ".", "to", "(", "x", ".", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.Arsinh.backward": [[51, 55], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "input", ",", "=", "ctx", ".", "saved_tensors", "\n", "return", "grad_output", "/", "(", "1", "+", "input", "**", "2", ")", "**", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.Arcosh.forward": [[58, 64], ["x.clamp.clamp.clamp", "ctx.save_for_backward", "x.clamp.clamp.double", "torch.sqrt_", "x.clamp.double.pow"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "clamp", "(", "min", "=", "1.0", "+", "1e-15", ")", "\n", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "z", "=", "x", ".", "double", "(", ")", "\n", "return", "(", "z", "+", "torch", ".", "sqrt_", "(", "z", ".", "pow", "(", "2", ")", "-", "1", ")", ")", ".", "clamp_min_", "(", "1e-15", ")", ".", "log_", "(", ")", ".", "to", "(", "x", ".", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.Arcosh.backward": [[65, 69], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "input", ",", "=", "ctx", ".", "saved_tensors", "\n", "return", "grad_output", "/", "(", "input", "**", "2", "-", "1", ")", "**", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.cosh": [[6, 8], ["x.clamp().cosh", "x.clamp"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.cosh"], ["def", "cosh", "(", "x", ",", "clamp", "=", "15", ")", ":", "\n", "    ", "return", "x", ".", "clamp", "(", "-", "clamp", ",", "clamp", ")", ".", "cosh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.sinh": [[10, 12], ["x.clamp().sinh", "x.clamp"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.sinh"], ["", "def", "sinh", "(", "x", ",", "clamp", "=", "15", ")", ":", "\n", "    ", "return", "x", ".", "clamp", "(", "-", "clamp", ",", "clamp", ")", ".", "sinh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.tanh": [[14, 16], ["x.clamp().tanh", "x.clamp"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.tanh"], ["", "def", "tanh", "(", "x", ",", "clamp", "=", "15", ")", ":", "\n", "    ", "return", "x", ".", "clamp", "(", "-", "clamp", ",", "clamp", ")", ".", "tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.arcosh": [[18, 20], ["Arcosh.apply"], "function", ["None"], ["", "def", "arcosh", "(", "x", ")", ":", "\n", "    ", "return", "Arcosh", ".", "apply", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.arsinh": [[22, 24], ["Arsinh.apply"], "function", ["None"], ["", "def", "arsinh", "(", "x", ")", ":", "\n", "    ", "return", "Arsinh", ".", "apply", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.artanh": [[26, 28], ["Artanh.apply"], "function", ["None"], ["", "def", "artanh", "(", "x", ")", ":", "\n", "    ", "return", "Artanh", ".", "apply", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.gat_utils.encode_onehot": [[6, 14], ["sorted", "list", "list", "numpy.array", "list", "map", "set", "numpy.identity", "enumerate", "list().index", "len", "list"], "function", ["None"], ["def", "encode_onehot", "(", "labels", ")", ":", "\n", "# The classes must be sorted before encoding to enable static class encoding.", "\n", "# In other words, make sure the first class always maps to index 0.", "\n", "    ", "classes", "=", "sorted", "(", "list", "(", "set", "(", "labels", ")", ")", ")", "\n", "classes_dict", "=", "{", "c", ":", "np", ".", "identity", "(", "len", "(", "classes", ")", ")", "[", "i", ",", ":", "]", "for", "i", ",", "c", "in", "enumerate", "(", "classes", ")", "}", "\n", "labels_onehot", "=", "list", "(", "map", "(", "classes_dict", ".", "get", ",", "labels", ")", ")", "# np.array(, dtype=np.int32)", "\n", "labels_index", "=", "list", "(", "list", "(", "i", ")", ".", "index", "(", "1", ")", "for", "i", "in", "labels_onehot", ")", "\n", "return", "np", ".", "array", "(", "labels_index", ",", "dtype", "=", "np", ".", "int32", ")", "# labels_onehot", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.gat_utils.normalize_adj": [[16, 23], ["numpy.array", "numpy.power().flatten", "scipy.diags", "mx.dot().transpose().dot", "mx.sum", "numpy.power", "numpy.isinf", "mx.dot().transpose", "mx.dot"], "function", ["None"], ["", "def", "normalize_adj", "(", "mx", ")", ":", "\n", "    ", "\"\"\"Row-normalize sparse matrix\"\"\"", "\n", "rowsum", "=", "np", ".", "array", "(", "mx", ".", "sum", "(", "1", ")", ")", "\n", "r_inv_sqrt", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "r_inv_sqrt", "[", "np", ".", "isinf", "(", "r_inv_sqrt", ")", "]", "=", "0.", "\n", "r_mat_inv_sqrt", "=", "sp", ".", "diags", "(", "r_inv_sqrt", ")", "\n", "return", "mx", ".", "dot", "(", "r_mat_inv_sqrt", ")", ".", "transpose", "(", ")", ".", "dot", "(", "r_mat_inv_sqrt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.gat_utils.normalize_features": [[25, 33], ["numpy.array", "numpy.power().flatten", "scipy.diags", "sp.diags.dot", "r_mat_inv.dot.sum", "numpy.power", "numpy.isinf"], "function", ["None"], ["", "def", "normalize_features", "(", "mx", ")", ":", "\n", "    ", "\"\"\"Row-normalize sparse matrix\"\"\"", "\n", "rowsum", "=", "np", ".", "array", "(", "mx", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "sp", ".", "diags", "(", "r_inv", ")", "\n", "mx", "=", "r_mat_inv", ".", "dot", "(", "mx", ")", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.gat_utils.accuracy": [[35, 40], ["[].type_as", "[].type_as.eq().double", "correct.sum.sum", "len", "[].type_as.eq", "output.max"], "function", ["None"], ["", "def", "accuracy", "(", "output", ",", "labels", ")", ":", "\n", "    ", "preds", "=", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "type_as", "(", "labels", ")", "\n", "correct", "=", "preds", ".", "eq", "(", "labels", ")", ".", "double", "(", ")", "\n", "correct", "=", "correct", ".", "sum", "(", ")", "\n", "return", "correct", "/", "len", "(", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.train_utils.format_metrics": [[9, 13], ["metrics.items"], "function", ["None"], ["def", "format_metrics", "(", "metrics", ",", "split", ")", ":", "\n", "    ", "\"\"\"Format metric in metric dict for logging.\"\"\"", "\n", "return", "\" \"", ".", "join", "(", "\n", "[", "\"{}_{}: {:.4f}\"", ".", "format", "(", "split", ",", "metric_name", ",", "metric_val", ")", "for", "metric_name", ",", "metric_val", "in", "metrics", ".", "items", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.train_utils.get_dir_name": [[15, 46], ["os.path.exists", "os.path.join", "os.makedirs", "numpy.array().astype", "os.path.join", "os.makedirs", "len", "str", "numpy.array", "np.array().astype.max", "os.listdir", "os.path.isdir", "os.path.join"], "function", ["None"], ["", "def", "get_dir_name", "(", "models_dir", ")", ":", "\n", "    ", "\"\"\"Gets a directory to save the model.\n\n    If the directory already exists, then append a new integer to the end of\n    it. This method is useful so that we don't overwrite existing models\n    when launching new jobs.\n\n    Args:\n        models_dir: The directory where all the models are.\n\n    Returns:\n        The name of a new directory to save the training logs and model weights.\n    \"\"\"", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "models_dir", ")", ":", "\n", "        ", "save_dir", "=", "os", ".", "path", ".", "join", "(", "models_dir", ",", "'0'", ")", "\n", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "else", ":", "\n", "        ", "existing_dirs", "=", "np", ".", "array", "(", "\n", "[", "\n", "d", "\n", "for", "d", "in", "os", ".", "listdir", "(", "models_dir", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "models_dir", ",", "d", ")", ")", "\n", "]", "\n", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "if", "len", "(", "existing_dirs", ")", ">", "0", ":", "\n", "            ", "dir_id", "=", "str", "(", "existing_dirs", ".", "max", "(", ")", "+", "1", ")", "\n", "", "else", ":", "\n", "            ", "dir_id", "=", "\"1\"", "\n", "", "save_dir", "=", "os", ".", "path", ".", "join", "(", "models_dir", ",", "dir_id", ")", "\n", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "return", "save_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.train_utils.add_flags_from_config": [[48, 93], ["isinstance", "x.lower", "train_utils.add_flags_from_config", "isinstance", "print", "str", "add_flags_from_config.add_argument", "type", "len", "add_flags_from_config.add_argument", "add_flags_from_config.add_argument", "train_utils.add_flags_from_config.OrNone"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.train_utils.add_flags_from_config"], ["", "def", "add_flags_from_config", "(", "parser", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\"\n    Adds a flag (and default value) to an ArgumentParser for each parameter in a config\n    \"\"\"", "\n", "\n", "def", "OrNone", "(", "default", ")", ":", "\n", "        ", "def", "func", "(", "x", ")", ":", "\n", "# Convert \"none\" to proper None object", "\n", "            ", "if", "x", ".", "lower", "(", ")", "==", "\"none\"", ":", "\n", "                ", "return", "None", "\n", "# If default is None (and x is not None), return x without conversion as str", "\n", "", "elif", "default", "is", "None", ":", "\n", "                ", "return", "str", "(", "x", ")", "\n", "# Otherwise, default has non-None type; convert x to that type", "\n", "", "else", ":", "\n", "                ", "return", "type", "(", "default", ")", "(", "x", ")", "\n", "\n", "", "", "return", "func", "\n", "\n", "", "for", "param", "in", "config_dict", ":", "\n", "        ", "default", ",", "description", "=", "config_dict", "[", "param", "]", "\n", "try", ":", "\n", "            ", "if", "isinstance", "(", "default", ",", "dict", ")", ":", "\n", "                ", "parser", "=", "add_flags_from_config", "(", "parser", ",", "default", ")", "\n", "", "elif", "isinstance", "(", "default", ",", "list", ")", ":", "\n", "                ", "if", "len", "(", "default", ")", ">", "0", ":", "\n", "# pass a list as argument", "\n", "                    ", "parser", ".", "add_argument", "(", "\n", "f\"--{param}\"", ",", "\n", "action", "=", "\"append\"", ",", "\n", "type", "=", "type", "(", "default", "[", "0", "]", ")", ",", "\n", "default", "=", "default", ",", "\n", "help", "=", "description", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "pass", "\n", "parser", ".", "add_argument", "(", "f\"--{param}\"", ",", "action", "=", "\"append\"", ",", "default", "=", "default", ",", "help", "=", "description", ")", "\n", "", "", "else", ":", "\n", "                ", "pass", "\n", "parser", ".", "add_argument", "(", "f\"--{param}\"", ",", "type", "=", "OrNone", "(", "default", ")", ",", "default", "=", "default", ",", "help", "=", "description", ")", "\n", "", "", "except", "argparse", ".", "ArgumentError", ":", "\n", "            ", "print", "(", "\n", "f\"Could not add flag for param {param} because it was already present.\"", "\n", ")", "\n", "", "", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.eval_utils.acc_f1": [[3, 11], ["[].type_as", "sklearn.metrics.accuracy_score", "sklearn.metrics.f1_score", "preds.cpu.cpu", "labels.cpu.cpu", "output.max"], "function", ["None"], ["def", "acc_f1", "(", "output", ",", "labels", ",", "average", "=", "'binary'", ")", ":", "\n", "    ", "preds", "=", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "type_as", "(", "labels", ")", "\n", "if", "preds", ".", "is_cuda", ":", "\n", "        ", "preds", "=", "preds", ".", "cpu", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", "\n", "", "accuracy", "=", "accuracy_score", "(", "preds", ",", "labels", ")", "\n", "f1", "=", "f1_score", "(", "preds", ",", "labels", ",", "average", "=", "average", ")", "\n", "return", "accuracy", ",", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.att_layers.DenseAtt.__init__": [[9, 14], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "dropout", ")", ":", "\n", "        ", "super", "(", "DenseAtt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "2", "*", "in_features", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.att_layers.DenseAtt.forward": [[15, 29], ["x.size", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "x_left.expand.expand.expand", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "x_right.expand.expand.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "att_layers.DenseAtt.linear().squeeze", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "adj.to_dense", "att_layers.DenseAtt.linear"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "n", "=", "x", ".", "size", "(", "0", ")", "\n", "# n x 1 x d", "\n", "x_left", "=", "torch", ".", "unsqueeze", "(", "x", ",", "1", ")", "\n", "x_left", "=", "x_left", ".", "expand", "(", "-", "1", ",", "n", ",", "-", "1", ")", "\n", "# 1 x n x d", "\n", "x_right", "=", "torch", ".", "unsqueeze", "(", "x", ",", "0", ")", "\n", "x_right", "=", "x_right", ".", "expand", "(", "n", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "x_cat", "=", "torch", ".", "cat", "(", "(", "x_left", ",", "x_right", ")", ",", "dim", "=", "2", ")", "\n", "att_adj", "=", "self", ".", "linear", "(", "x_cat", ")", ".", "squeeze", "(", ")", "\n", "att_adj", "=", "torch", ".", "sigmoid", "(", "att_adj", ")", "\n", "att_adj", "=", "torch", ".", "mul", "(", "adj", ".", "to_dense", "(", ")", ",", "att_adj", ")", "\n", "return", "att_adj", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.att_layers.SpecialSpmmFunction.forward": [[34, 41], ["torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "ctx.save_for_backward", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "indices", ",", "values", ",", "shape", ",", "b", ")", ":", "\n", "        ", "assert", "indices", ".", "requires_grad", "==", "False", "\n", "a", "=", "torch", ".", "sparse_coo_tensor", "(", "indices", ",", "values", ",", "shape", ")", "\n", "ctx", ".", "save_for_backward", "(", "a", ",", "b", ")", "\n", "ctx", ".", "N", "=", "shape", "[", "0", "]", "\n", "return", "torch", ".", "matmul", "(", "a", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.att_layers.SpecialSpmmFunction.backward": [[42, 53], ["grad_output.matmul", "a.t().matmul", "b.t", "grad_output.matmul.view", "a._indices", "a.t", "a._indices"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "a", ",", "b", "=", "ctx", ".", "saved_tensors", "\n", "grad_values", "=", "grad_b", "=", "None", "\n", "if", "ctx", ".", "needs_input_grad", "[", "1", "]", ":", "\n", "            ", "grad_a_dense", "=", "grad_output", ".", "matmul", "(", "b", ".", "t", "(", ")", ")", "\n", "edge_idx", "=", "a", ".", "_indices", "(", ")", "[", "0", ",", ":", "]", "*", "ctx", ".", "N", "+", "a", ".", "_indices", "(", ")", "[", "1", ",", ":", "]", "\n", "grad_values", "=", "grad_a_dense", ".", "view", "(", "-", "1", ")", "[", "edge_idx", "]", "\n", "", "if", "ctx", ".", "needs_input_grad", "[", "3", "]", ":", "\n", "            ", "grad_b", "=", "a", ".", "t", "(", ")", ".", "matmul", "(", "grad_output", ")", "\n", "", "return", "None", ",", "grad_values", ",", "None", ",", "grad_b", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.att_layers.SpecialSpmm.forward": [[56, 58], ["SpecialSpmmFunction.apply"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "indices", ",", "values", ",", "shape", ",", "b", ")", ":", "\n", "        ", "return", "SpecialSpmmFunction", ".", "apply", "(", "indices", ",", "values", ",", "shape", ",", "b", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.layers.Linear.__init__": [[34, 39], ["torch.nn.modules.module.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "dropout", ",", "act", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "Linear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "in_features", ",", "out_features", ",", "use_bias", ")", "\n", "self", ".", "act", "=", "act", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.layers.Linear.forward": [[40, 45], ["layers.Linear.linear.forward", "torch.dropout", "torch.dropout", "torch.dropout", "layers.Linear.act"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hidden", "=", "self", ".", "linear", ".", "forward", "(", "x", ")", "\n", "hidden", "=", "F", ".", "dropout", "(", "hidden", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "out", "=", "self", ".", "act", "(", "hidden", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.layers.FermiDiracDecoder.__init__": [[50, 54], ["torch.nn.modules.module.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "r", ",", "t", ")", ":", "\n", "        ", "super", "(", "FermiDiracDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "r", "=", "r", "\n", "self", ".", "t", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.layers.FermiDiracDecoder.forward": [[55, 58], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "dist", ")", ":", "\n", "        ", "probs", "=", "1.", "/", "(", "torch", ".", "exp", "(", "(", "dist", "-", "self", ".", "r", ")", "/", "self", ".", "t", ")", "+", "1.0", ")", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.layers.get_dim_act": [[11, 27], ["getattr"], "function", ["None"], ["def", "get_dim_act", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Helper function to get dimension and activation at every layer.\n    :param args:\n    :return:\n    \"\"\"", "\n", "if", "not", "args", ".", "act", ":", "\n", "        ", "act", "=", "lambda", "x", ":", "x", "\n", "", "else", ":", "\n", "        ", "act", "=", "getattr", "(", "F", ",", "args", ".", "act", ")", "\n", "", "acts", "=", "[", "act", "]", "*", "(", "args", ".", "num_layers", "-", "1", ")", "\n", "dims", "=", "[", "args", ".", "feat_dim", "]", "+", "(", "[", "args", ".", "dim", "]", "*", "(", "args", ".", "num_layers", "-", "1", ")", ")", "\n", "if", "args", ".", "task", "in", "[", "'lp'", ",", "'rec'", ",", "'nc'", "]", ":", "\n", "        ", "dims", "+=", "[", "args", ".", "dim", "]", "\n", "acts", "+=", "[", "act", "]", "\n", "", "return", "dims", ",", "acts", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HyperbolicGraphConvolution.__init__": [[49, 56], ["torch.Module.__init__", "hyp_layers.HypLinear", "hyp_layers.HypAgg", "hyp_layers.HypAct"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "manifold", ",", "in_features", ",", "out_features", ",", "c_in", ",", "c_out", ",", "dropout", ",", "act", ",", "use_bias", ",", "use_att", ",", "local_agg", ")", ":", "\n", "        ", "super", "(", "HyperbolicGraphConvolution", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear", "=", "HypLinear", "(", "manifold", ",", "in_features", ",", "out_features", ",", "c_in", ",", "dropout", ",", "use_bias", ")", "\n", "self", ".", "agg", "=", "HypAgg", "(", "manifold", ",", "c_in", ",", "out_features", ",", "dropout", ",", "use_att", ",", "local_agg", ")", "\n", "self", ".", "hyp_act", "=", "HypAct", "(", "manifold", ",", "c_in", ",", "c_out", ",", "act", ")", "\n", "self", ".", "adj_att", "=", "None", "\n", "self", ".", "embeddings", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HyperbolicGraphConvolution.forward": [[57, 65], ["hyp_layers.HyperbolicGraphConvolution.linear.forward", "hyp_layers.HyperbolicGraphConvolution.agg.forward", "hyp_layers.HyperbolicGraphConvolution.hyp_act.forward"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x", ",", "adj", "=", "input", "\n", "h", "=", "self", ".", "linear", ".", "forward", "(", "x", ")", "\n", "h", ",", "self", ".", "adj_att", "=", "self", ".", "agg", ".", "forward", "(", "h", ",", "adj", ")", "\n", "h", "=", "self", ".", "hyp_act", ".", "forward", "(", "h", ")", "\n", "output", "=", "h", ",", "adj", "\n", "self", ".", "embeddings", "=", "h", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypLinear.__init__": [[72, 83], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "hyp_layers.HypLinear.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypLinear.reset_parameters"], ["def", "__init__", "(", "self", ",", "manifold", ",", "in_features", ",", "out_features", ",", "c", ",", "dropout", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "HypLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "manifold", "=", "manifold", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "c", "=", "c", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "use_bias", "=", "use_bias", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_features", ")", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_features", ",", "in_features", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypLinear.reset_parameters": [[84, 87], ["torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "math.sqrt"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "init", ".", "xavier_uniform_", "(", "self", ".", "weight", ",", "gain", "=", "math", ".", "sqrt", "(", "2", ")", ")", "\n", "init", ".", "constant_", "(", "self", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypLinear.forward": [[88, 99], ["torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "hyp_layers.HypLinear.manifold.mobius_matvec", "hyp_layers.HypLinear.manifold.proj", "hyp_layers.HypLinear.manifold.proj_tan0", "hyp_layers.HypLinear.manifold.expmap0", "hyp_layers.HypLinear.manifold.proj", "hyp_layers.HypLinear.manifold.mobius_add", "hyp_layers.HypLinear.manifold.proj", "hyp_layers.HypLinear.bias.view"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.mobius_matvec", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.mobius_add", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "drop_weight", "=", "F", ".", "dropout", "(", "self", ".", "weight", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "mv", "=", "self", ".", "manifold", ".", "mobius_matvec", "(", "drop_weight", ",", "x", ",", "self", ".", "c", ")", "\n", "res", "=", "self", ".", "manifold", ".", "proj", "(", "mv", ",", "self", ".", "c", ")", "\n", "if", "self", ".", "use_bias", ":", "\n", "            ", "bias", "=", "self", ".", "manifold", ".", "proj_tan0", "(", "self", ".", "bias", ".", "view", "(", "1", ",", "-", "1", ")", ",", "self", ".", "c", ")", "\n", "hyp_bias", "=", "self", ".", "manifold", ".", "expmap0", "(", "bias", ",", "self", ".", "c", ")", "\n", "hyp_bias", "=", "self", ".", "manifold", ".", "proj", "(", "hyp_bias", ",", "self", ".", "c", ")", "\n", "res", "=", "self", ".", "manifold", ".", "mobius_add", "(", "res", ",", "hyp_bias", ",", "c", "=", "self", ".", "c", ")", "\n", "res", "=", "self", ".", "manifold", ".", "proj", "(", "res", ",", "self", ".", "c", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypLinear.extra_repr": [[100, 103], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'in_features={}, out_features={}, c={}'", ".", "format", "(", "\n", "self", ".", "in_features", ",", "self", ".", "out_features", ",", "self", ".", "c", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAgg.__init__": [[111, 122], ["torch.nn.modules.module.Module.__init__", "layers.att_layers.DenseAtt"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "manifold", ",", "c", ",", "in_features", ",", "dropout", ",", "use_att", ",", "local_agg", ")", ":", "\n", "        ", "super", "(", "HypAgg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "manifold", "=", "manifold", "\n", "self", ".", "c", "=", "c", "\n", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "local_agg", "=", "local_agg", "\n", "self", ".", "use_att", "=", "use_att", "\n", "if", "self", ".", "use_att", ":", "\n", "            ", "self", ".", "att", "=", "DenseAtt", "(", "in_features", ",", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAgg.forward": [[123, 143], ["hyp_layers.HypAgg.manifold.logmap0", "hyp_layers.HypAgg.manifold.proj", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "hyp_layers.HypAgg.manifold.expmap0", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "hyp_layers.HypAgg.att", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "hyp_layers.HypAgg.manifold.proj", "hyp_layers.HypAgg.att", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "x.size", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "hyp_layers.HypAgg.unsqueeze", "hyp_layers.HypAgg.manifold.expmap", "hyp_layers.HypAgg.manifold.logmap", "hyp_layers.HypAgg.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x_tangent", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c", ")", "\n", "if", "self", ".", "use_att", ":", "\n", "            ", "if", "self", ".", "local_agg", ":", "\n", "                ", "x_local_tangent", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "x", ".", "size", "(", "0", ")", ")", ":", "\n", "                    ", "x_local_tangent", ".", "append", "(", "self", ".", "manifold", ".", "logmap", "(", "x", "[", "i", "]", ",", "x", ",", "c", "=", "self", ".", "c", ")", ")", "\n", "", "x_local_tangent", "=", "torch", ".", "stack", "(", "x_local_tangent", ",", "dim", "=", "0", ")", "\n", "adj_att", "=", "self", ".", "att", "(", "x_tangent", ",", "adj", ")", "\n", "att_rep", "=", "adj_att", ".", "unsqueeze", "(", "-", "1", ")", "*", "x_local_tangent", "\n", "support_t", "=", "torch", ".", "sum", "(", "adj_att", ".", "unsqueeze", "(", "-", "1", ")", "*", "x_local_tangent", ",", "dim", "=", "1", ")", "\n", "output", "=", "self", ".", "manifold", ".", "proj", "(", "self", ".", "manifold", ".", "expmap", "(", "x", ",", "support_t", ",", "c", "=", "self", ".", "c", ")", ",", "c", "=", "self", ".", "c", ")", "\n", "return", "output", ",", "adj_att", "\n", "", "else", ":", "\n", "                ", "adj_att", "=", "self", ".", "att", "(", "x_tangent", ",", "adj", ")", "\n", "support_t", "=", "torch", ".", "matmul", "(", "adj_att", ",", "x_tangent", ")", "\n", "", "", "else", ":", "\n", "            ", "support_t", "=", "torch", ".", "spmm", "(", "adj", ",", "x_tangent", ")", "\n", "", "output", "=", "self", ".", "manifold", ".", "proj", "(", "self", ".", "manifold", ".", "expmap0", "(", "support_t", ",", "c", "=", "self", ".", "c", ")", ",", "c", "=", "self", ".", "c", ")", "\n", "return", "output", ",", "adj_att", "if", "self", ".", "use_att", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAgg.extra_repr": [[144, 146], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'c={}'", ".", "format", "(", "self", ".", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.__init__": [[153, 159], ["torch.nn.modules.module.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "manifold", ",", "c_in", ",", "c_out", ",", "act", ")", ":", "\n", "        ", "super", "(", "HypAct", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "manifold", "=", "manifold", "\n", "self", ".", "c_in", "=", "c_in", "\n", "self", ".", "c_out", "=", "c_out", "\n", "self", ".", "act", "=", "act", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward": [[160, 164], ["hyp_layers.HypAct.act", "hyp_layers.HypAct.manifold.proj_tan0", "hyp_layers.HypAct.manifold.proj", "hyp_layers.HypAct.manifold.logmap0", "hyp_layers.HypAct.manifold.expmap0"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap0"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "xt", "=", "self", ".", "act", "(", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c_in", ")", ")", "\n", "xt", "=", "self", ".", "manifold", ".", "proj_tan0", "(", "xt", ",", "c", "=", "self", ".", "c_out", ")", "\n", "return", "self", ".", "manifold", ".", "proj", "(", "self", ".", "manifold", ".", "expmap0", "(", "xt", ",", "c", "=", "self", ".", "c_out", ")", ",", "c", "=", "self", ".", "c_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.extra_repr": [[165, 168], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'c_in={}, c_out={}'", ".", "format", "(", "\n", "self", ".", "c_in", ",", "self", ".", "c_out", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.get_dim_act_curv": [[13, 42], ["getattr", "curvatures.append", "curvatures.append", "torch.Parameter", "torch.Parameter", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "range", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "range", "curv.to"], "function", ["None"], ["def", "get_dim_act_curv", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Helper function to get dimension and activation at every layer.\n    :param args:\n    :return:\n    \"\"\"", "\n", "if", "not", "args", ".", "act", ":", "\n", "        ", "act", "=", "lambda", "x", ":", "x", "\n", "", "else", ":", "\n", "        ", "act", "=", "getattr", "(", "F", ",", "args", ".", "act", ")", "\n", "", "acts", "=", "[", "act", "]", "*", "(", "args", ".", "num_layers", "-", "1", ")", "\n", "dims", "=", "[", "args", ".", "feat_dim", "]", "+", "(", "[", "args", ".", "dim", "]", "*", "(", "args", ".", "num_layers", "-", "1", ")", ")", "\n", "if", "args", ".", "task", "in", "[", "'lp'", ",", "'rec'", ",", "'nc'", "]", ":", "\n", "        ", "dims", "+=", "[", "args", ".", "dim", "]", "\n", "acts", "+=", "[", "act", "]", "\n", "n_curvatures", "=", "args", ".", "num_layers", "\n", "", "else", ":", "\n", "        ", "n_curvatures", "=", "args", ".", "num_layers", "-", "1", "\n", "", "if", "args", ".", "c", "is", "None", ":", "\n", "# create list of trainable curvature parameters", "\n", "        ", "curvatures", "=", "[", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "1.", "]", ")", ")", "for", "_", "in", "range", "(", "n_curvatures", ")", "]", "\n", "curvatures", ".", "append", "(", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "1.", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "# fixed curvature", "\n", "        ", "curvatures", "=", "[", "torch", ".", "tensor", "(", "[", "args", ".", "c", "]", ")", "for", "_", "in", "range", "(", "n_curvatures", ")", "]", "\n", "curvatures", ".", "append", "(", "torch", ".", "tensor", "(", "[", "args", ".", "c", "]", ")", ")", "\n", "if", "not", "args", ".", "cuda", "==", "-", "1", ":", "\n", "            ", "curvatures", "=", "[", "curv", ".", "to", "(", "args", ".", "device", ")", "for", "curv", "in", "curvatures", "]", "\n", "", "", "return", "dims", ",", "acts", ",", "curvatures", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.OptimMixin.__init__": [[10, 13], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "stabilize", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "_stabilize", "=", "stabilize", "\n", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.OptimMixin.stabilize_group": [[14, 16], ["None"], "methods", ["None"], ["", "def", "stabilize_group", "(", "self", ",", "group", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.OptimMixin.stabilize": [[17, 22], ["radam.OptimMixin.stabilize_group"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.RiemannianAdam.stabilize_group"], ["", "def", "stabilize", "(", "self", ")", ":", "\n", "        ", "\"\"\"Stabilize parameters if they are off-manifold due to numerical reasons\n        \"\"\"", "\n", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "self", ".", "stabilize_group", "(", "group", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.RiemannianAdam.step": [[75, 161], ["closure", "torch.no_grad", "isinstance", "manifold.egrad2rgrad.add_", "manifold.egrad2rgrad", "exp_avg.mul_().add_", "exp_avg_sq.mul_().add_", "manifold.proj", "manifold.ptransp", "radam.copy_or_set_", "exp_avg.set_", "radam.RiemannianAdam.stabilize_group", "RuntimeError", "len", "torch.zeros_like", "torch.zeros_like", "manifold.inner", "torch.max", "max_exp_avg_sq.sqrt().add_", "exp_avg_sq.sqrt().add_", "manifold.expmap", "torch.zeros_like", "exp_avg.mul_", "exp_avg_sq.mul_", "max_exp_avg_sq.sqrt", "exp_avg_sq.sqrt"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.egrad2rgrad", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.ptransp", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.copy_or_set_", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.RiemannianAdam.stabilize_group", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.inner", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap"], ["def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "        ", "\"\"\"Performs a single optimization step.\n        Arguments\n        ---------\n        closure : callable (optional)\n            A closure that reevaluates the model\n            and returns the loss.\n        \"\"\"", "\n", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "                ", "if", "\"step\"", "not", "in", "group", ":", "\n", "                    ", "group", "[", "\"step\"", "]", "=", "0", "\n", "", "betas", "=", "group", "[", "\"betas\"", "]", "\n", "weight_decay", "=", "group", "[", "\"weight_decay\"", "]", "\n", "eps", "=", "group", "[", "\"eps\"", "]", "\n", "learning_rate", "=", "group", "[", "\"lr\"", "]", "\n", "amsgrad", "=", "group", "[", "\"amsgrad\"", "]", "\n", "for", "point", "in", "group", "[", "\"params\"", "]", ":", "\n", "                    ", "grad", "=", "point", ".", "grad", "\n", "if", "grad", "is", "None", ":", "\n", "                        ", "continue", "\n", "", "if", "isinstance", "(", "point", ",", "(", "ManifoldParameter", ")", ")", ":", "\n", "                        ", "manifold", "=", "point", ".", "manifold", "\n", "c", "=", "point", ".", "c", "\n", "", "else", ":", "\n", "                        ", "manifold", "=", "_default_manifold", "\n", "c", "=", "None", "\n", "", "if", "grad", ".", "is_sparse", ":", "\n", "                        ", "raise", "RuntimeError", "(", "\n", "\"Riemannian Adam does not support sparse gradients yet (PR is welcome)\"", "\n", ")", "\n", "\n", "", "state", "=", "self", ".", "state", "[", "point", "]", "\n", "\n", "# State initialization", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                        ", "state", "[", "\"step\"", "]", "=", "0", "\n", "# Exponential moving average of gradient values", "\n", "state", "[", "\"exp_avg\"", "]", "=", "torch", ".", "zeros_like", "(", "point", ")", "\n", "# Exponential moving average of squared gradient values", "\n", "state", "[", "\"exp_avg_sq\"", "]", "=", "torch", ".", "zeros_like", "(", "point", ")", "\n", "if", "amsgrad", ":", "\n", "# Maintains max of all exp. moving avg. of sq. grad. values", "\n", "                            ", "state", "[", "\"max_exp_avg_sq\"", "]", "=", "torch", ".", "zeros_like", "(", "point", ")", "\n", "# make local variables for easy access", "\n", "", "", "exp_avg", "=", "state", "[", "\"exp_avg\"", "]", "\n", "exp_avg_sq", "=", "state", "[", "\"exp_avg_sq\"", "]", "\n", "# actual step", "\n", "grad", ".", "add_", "(", "weight_decay", ",", "point", ")", "\n", "grad", "=", "manifold", ".", "egrad2rgrad", "(", "point", ",", "grad", ",", "c", ")", "\n", "exp_avg", ".", "mul_", "(", "betas", "[", "0", "]", ")", ".", "add_", "(", "1", "-", "betas", "[", "0", "]", ",", "grad", ")", "\n", "exp_avg_sq", ".", "mul_", "(", "betas", "[", "1", "]", ")", ".", "add_", "(", "\n", "1", "-", "betas", "[", "1", "]", ",", "manifold", ".", "inner", "(", "point", ",", "c", ",", "grad", ",", "keepdim", "=", "True", ")", "\n", ")", "\n", "if", "amsgrad", ":", "\n", "                        ", "max_exp_avg_sq", "=", "state", "[", "\"max_exp_avg_sq\"", "]", "\n", "# Maintains the maximum of all 2nd moment running avg. till now", "\n", "torch", ".", "max", "(", "max_exp_avg_sq", ",", "exp_avg_sq", ",", "out", "=", "max_exp_avg_sq", ")", "\n", "# Use the max. for normalizing running avg. of gradient", "\n", "denom", "=", "max_exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "eps", ")", "\n", "", "else", ":", "\n", "                        ", "denom", "=", "exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "eps", ")", "\n", "", "group", "[", "\"step\"", "]", "+=", "1", "\n", "bias_correction1", "=", "1", "-", "betas", "[", "0", "]", "**", "group", "[", "\"step\"", "]", "\n", "bias_correction2", "=", "1", "-", "betas", "[", "1", "]", "**", "group", "[", "\"step\"", "]", "\n", "step_size", "=", "(", "\n", "learning_rate", "*", "bias_correction2", "**", "0.5", "/", "bias_correction1", "\n", ")", "\n", "\n", "# copy the state, we need it for retraction", "\n", "# get the direction for ascend", "\n", "direction", "=", "exp_avg", "/", "denom", "\n", "# transport the exponential averaging to the new point", "\n", "new_point", "=", "manifold", ".", "proj", "(", "manifold", ".", "expmap", "(", "-", "step_size", "*", "direction", ",", "point", ",", "c", ")", ",", "c", ")", "\n", "exp_avg_new", "=", "manifold", ".", "ptransp", "(", "point", ",", "new_point", ",", "exp_avg", ",", "c", ")", "\n", "# use copy only for user facing point", "\n", "copy_or_set_", "(", "point", ",", "new_point", ")", "\n", "exp_avg", ".", "set_", "(", "exp_avg_new", ")", "\n", "\n", "group", "[", "\"step\"", "]", "+=", "1", "\n", "", "if", "self", ".", "_stabilize", "is", "not", "None", "and", "group", "[", "\"step\"", "]", "%", "self", ".", "_stabilize", "==", "0", ":", "\n", "                    ", "self", ".", "stabilize_group", "(", "group", ")", "\n", "", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.RiemannianAdam.stabilize_group": [[162, 175], ["torch.no_grad", "radam.copy_or_set_", "exp_avg.set_", "isinstance", "manifold.proj", "manifold.proj_tan"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.copy_or_set_", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "stabilize_group", "(", "self", ",", "group", ")", ":", "\n", "        ", "for", "p", "in", "group", "[", "\"params\"", "]", ":", "\n", "            ", "if", "not", "isinstance", "(", "p", ",", "ManifoldParameter", ")", ":", "\n", "                ", "continue", "\n", "", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "if", "not", "state", ":", "# due to None grads", "\n", "                ", "continue", "\n", "", "manifold", "=", "p", ".", "manifold", "\n", "c", "=", "p", ".", "c", "\n", "exp_avg", "=", "state", "[", "\"exp_avg\"", "]", "\n", "copy_or_set_", "(", "p", ",", "manifold", ".", "proj", "(", "p", ",", "c", ")", ")", "\n", "exp_avg", ".", "set_", "(", "manifold", ".", "proj_tan", "(", "exp_avg", ",", "u", ",", "c", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.copy_or_set_": [[24, 43], ["dest.stride", "source.stride", "dest.copy_", "dest.set_"], "function", ["None"], ["", "", "", "def", "copy_or_set_", "(", "dest", ",", "source", ")", ":", "\n", "    ", "\"\"\"\n    A workaround to respect strides of :code:`dest` when copying :code:`source`\n    (https://github.com/geoopt/geoopt/issues/70)\n    Parameters\n    ----------\n    dest : torch.Tensor\n        Destination tensor where to store new data\n    source : torch.Tensor\n        Source data to put in the new tensor\n    Returns\n    -------\n    dest\n        torch.Tensor, modified inplace\n    \"\"\"", "\n", "if", "dest", ".", "stride", "(", ")", "!=", "source", ".", "stride", "(", ")", ":", "\n", "        ", "return", "dest", ".", "copy_", "(", "source", ")", "\n", "", "else", ":", "\n", "        ", "return", "dest", ".", "set_", "(", "source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.__init__": [[26, 49], ["torch.Module.__init__", "getattr", "getattr", "getattr", "getattr", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "base_models.BaseModel.c[].to", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "BaseModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "manifold_name", "=", "args", ".", "manifold", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "if", "args", ".", "c", "is", "not", "None", ":", "\n", "            ", "self", ".", "c", "=", "[", "torch", ".", "tensor", "(", "[", "args", ".", "c", "]", ")", "]", "*", "2", "\n", "if", "not", "args", ".", "cuda", "==", "-", "1", ":", "\n", "                ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "c", ")", ")", ":", "# 'item' use copy not ref", "\n", "                    ", "self", ".", "c", "[", "i", "]", "=", "self", ".", "c", "[", "i", "]", ".", "to", "(", "args", ".", "device", ")", "\n", "", "", "", "else", ":", "\n", "# c is None (should not appear in this branch)", "\n", "            ", "self", ".", "c", "=", "[", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "1.", "]", ")", ")", "]", "*", "2", "\n", "\n", "", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "self", ".", "manifold_name", ")", "(", ")", "\n", "if", "self", ".", "manifold", ".", "name", "==", "'Hyperboloid'", ":", "\n", "            ", "args", ".", "feat_dim", "=", "args", ".", "feat_dim", "+", "1", "\n", "", "self", ".", "nnodes", "=", "args", ".", "n_nodes", "\n", "self", ".", "encoder", "=", "getattr", "(", "encoders", ",", "args", ".", "model", ")", "(", "self", ".", "c", ",", "args", ")", "\n", "self", ".", "mlp", "=", "getattr", "(", "encoders", ",", "'MLP'", ")", "(", "self", ".", "c", ",", "args", ",", "mapping", "=", "True", ")", "\n", "self", ".", "args", "=", "args", "\n", "from", "utils", ".", "data_utils", "import", "G", ",", "PATHDICT", ",", "NODELIST", "\n", "global", "GRAPH", ",", "PATHS", ",", "NODES", "\n", "GRAPH", ",", "PATHS", ",", "NODES", "=", "G", ",", "PATHDICT", ",", "NODELIST", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.encode": [[50, 56], ["base_models.BaseModel.encoder.encode", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.encode"], ["", "def", "encode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "if", "self", ".", "manifold", ".", "name", "==", "'Hyperboloid'", ":", "\n", "            ", "o", "=", "torch", ".", "zeros_like", "(", "x", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "o", "[", ":", ",", "0", ":", "1", "]", ",", "x", "]", ",", "dim", "=", "1", ")", "\n", "", "h", "=", "self", ".", "encoder", ".", "encode", "(", "x", ",", "adj", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.mapping": [[57, 69], ["base_models.BaseModel.manifold.logmap0", "base_models.BaseModel.manifold.logmap0", "base_models.BaseModel.manifold.expmap0", "base_models.BaseModel.manifold.expmap0", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap0"], ["", "def", "mapping", "(", "self", ",", "x", ",", "last_c", ",", "c", ")", ":", "\n", "        ", "'''Project embeddings with the curvature c.'''", "\n", "for", "item", "in", "c", ":", "\n", "            ", "if", "item", "<", "1e-1", ":", "\n", "                ", "item", "=", "1e-1", "\n", "", "", "emb1", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "last_c", "[", "0", "]", ")", "\n", "emb2", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "last_c", "[", "1", "]", ")", "\n", "emb1", "=", "self", ".", "manifold", ".", "expmap0", "(", "emb1", ",", "c", "[", "0", "]", ")", "\n", "emb2", "=", "self", ".", "manifold", ".", "expmap0", "(", "emb2", ",", "c", "[", "1", "]", ")", "\n", "emb_tmp", "=", "torch", ".", "add", "(", "emb1", ",", "emb2", ")", "\n", "h", "=", "torch", ".", "div", "(", "emb_tmp", ",", "2", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.find_distance": [[70, 80], ["range", "base_models.BaseModel.manifold.sqdist().data.cpu().item", "len", "len", "base_models.BaseModel.manifold.sqdist().data.cpu", "base_models.BaseModel.manifold.sqdist"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.sqdist"], ["", "def", "find_distance", "(", "self", ",", "embedding", ",", "x", ",", "y", ")", ":", "\n", "        ", "dis", "=", "0", "\n", "if", "x", ">", "y", ":", "\n", "            ", "x", ",", "y", "=", "y", ",", "x", "\n", "", "hashkey", "=", "x", "*", "len", "(", "GRAPH", ".", "nodes", ")", "+", "y", "\n", "route", "=", "PATHS", "[", "hashkey", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "route", ")", "-", "1", ")", ":", "\n", "            ", "k_dis", "=", "self", ".", "manifold", ".", "sqdist", "(", "embedding", "[", "route", "[", "i", "]", "]", ",", "embedding", "[", "route", "[", "i", "+", "1", "]", "]", ",", "self", ".", "c", "[", "1", "]", ")", ".", "data", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "dis", "+=", "k_dis", "\n", "", "return", "dis", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.estimation": [[82, 119], ["random.sample", "numpy.mean", "list", "random.choice", "range", "len", "random.choice", "random.choice", "random.choice", "p_list.append", "pp_list.append", "list", "list", "list", "random.choice", "random.choice", "base_models.BaseModel.find_distance", "base_models.BaseModel.find_distance", "base_models.BaseModel.find_distance", "base_models.BaseModel.find_distance", "numpy.mean", "list"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.find_distance", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.find_distance", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.find_distance", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.find_distance"], ["", "def", "estimation", "(", "self", ",", "embedding", ")", ":", "\n", "        ", "pp_list", "=", "[", "]", "\n", "global", "NODES", "\n", "if", "NODES", "==", "None", ":", "\n", "            ", "NODES", "=", "list", "(", "GRAPH", ".", "nodes", ")", "\n", "", "nodes_list", "=", "random", ".", "sample", "(", "NODES", ",", "100", ")", "\n", "nodes", "=", "0", "\n", "while", "nodes", "<", "10", ":", "\n", "            ", "node", "=", "random", ".", "choice", "(", "nodes_list", ")", "\n", "if", "len", "(", "list", "(", "GRAPH", ".", "adj", "[", "node", "]", ")", ")", "<", "2", ":", "\n", "                ", "continue", "\n", "\n", "", "iters", "=", "0", "\n", "p_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "args", ".", "niter", ")", ":", "\n", "                ", "b", "=", "random", ".", "choice", "(", "list", "(", "GRAPH", ".", "adj", "[", "node", "]", ")", ")", "\n", "c", "=", "random", ".", "choice", "(", "list", "(", "GRAPH", ".", "adj", "[", "node", "]", ")", ")", "\n", "while", "b", "==", "c", ":", "\n", "                    ", "c", "=", "random", ".", "choice", "(", "list", "(", "GRAPH", ".", "adj", "[", "node", "]", ")", ")", "\n", "", "a", "=", "random", ".", "choice", "(", "nodes_list", ")", "\n", "while", "a", "in", "[", "node", ",", "b", ",", "c", "]", ":", "\n", "                    ", "a", "=", "random", ".", "choice", "(", "nodes_list", ")", "\n", "", "try", ":", "\n", "                    ", "d_am", "=", "self", ".", "find_distance", "(", "embedding", ",", "a", ",", "node", ")", "\n", "d_bc", "=", "self", ".", "find_distance", "(", "embedding", ",", "b", ",", "c", ")", "\n", "d_ab", "=", "self", ".", "find_distance", "(", "embedding", ",", "a", ",", "b", ")", "\n", "d_ac", "=", "self", ".", "find_distance", "(", "embedding", ",", "a", ",", "c", ")", "\n", "", "except", "KeyError", ":", "\n", "                    ", "continue", "\n", "", "p", "=", "(", "d_am", "/", "2", ")", "+", "(", "(", "d_bc", "*", "d_bc", ")", "/", "(", "8", "*", "d_am", ")", ")", "-", "(", "(", "d_ab", "*", "d_ab", "+", "d_ac", "*", "d_ac", ")", "/", "(", "2", "*", "d_am", ")", ")", "\n", "p_list", ".", "append", "(", "p", ")", "\n", "iters", "+=", "1", "\n", "\n", "", "if", "p_list", "!=", "[", "]", ":", "\n", "                ", "pp_list", ".", "append", "(", "np", ".", "mean", "(", "p_list", ")", ")", "\n", "nodes", "+=", "1", "\n", "", "", "return", "np", ".", "mean", "(", "pp_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.compute_metrics": [[120, 122], ["None"], "methods", ["None"], ["", "def", "compute_metrics", "(", "self", ",", "embeddings", ",", "data", ",", "split", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.init_metric_dict": [[123, 125], ["None"], "methods", ["None"], ["", "def", "init_metric_dict", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.BaseModel.has_improved": [[126, 128], ["None"], "methods", ["None"], ["", "def", "has_improved", "(", "self", ",", "m1", ",", "m2", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.NCModel.__init__": [[135, 149], ["base_models.BaseModel.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "base_models.NCModel.weights.to"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "NCModel", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "self", ".", "key_param", "=", "'acc'", "\n", "self", ".", "decoder", "=", "model2decoder", "[", "args", ".", "model", "]", "(", "self", ".", "c", ",", "args", ")", "\n", "if", "args", ".", "n_classes", ">", "2", ":", "\n", "            ", "self", ".", "f1_average", "=", "'micro'", "\n", "", "else", ":", "\n", "            ", "self", ".", "f1_average", "=", "'binary'", "\n", "", "if", "args", ".", "pos_weight", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "self", ".", "weights", "=", "torch", ".", "Tensor", "(", "[", "1.", "]", "*", "args", ".", "n_classes", ")", "\n", "", "if", "not", "args", ".", "cuda", "==", "-", "1", ":", "\n", "            ", "self", ".", "weights", "=", "self", ".", "weights", ".", "to", "(", "args", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.NCModel.decode": [[150, 153], ["base_models.NCModel.decoder.decode", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.LinearDecoder.decode"], ["", "", "def", "decode", "(", "self", ",", "h", ",", "adj", ",", "idx", ")", ":", "\n", "        ", "output", "=", "self", ".", "decoder", ".", "decode", "(", "h", ",", "adj", ")", "\n", "return", "F", ".", "log_softmax", "(", "output", "[", "idx", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.NCModel.compute_metrics": [[154, 162], ["base_models.NCModel.decode", "torch.nll_loss", "torch.nll_loss", "torch.nll_loss", "utils.eval_utils.acc_f1"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.LinearDecoder.decode", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.eval_utils.acc_f1"], ["", "def", "compute_metrics", "(", "self", ",", "embeddings", ",", "data", ",", "split", ")", ":", "\n", "        ", "embeddings", "[", "embeddings", "!=", "embeddings", "]", "=", "1e-8", "\n", "idx", "=", "data", "[", "f'idx_{split}'", "]", "\n", "output", "=", "self", ".", "decode", "(", "embeddings", ",", "data", "[", "'adj_train_norm'", "]", ",", "idx", ")", "\n", "loss", "=", "F", ".", "nll_loss", "(", "output", ",", "data", "[", "'labels'", "]", "[", "idx", "]", ",", "self", ".", "weights", ")", "\n", "acc", ",", "f1", "=", "acc_f1", "(", "output", ",", "data", "[", "'labels'", "]", "[", "idx", "]", ",", "average", "=", "self", ".", "f1_average", ")", "\n", "metrics", "=", "{", "'loss'", ":", "loss", ",", "'acc'", ":", "acc", ",", "'f1'", ":", "f1", "}", "\n", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.NCModel.train_with_RL": [[163, 190], ["env.get_observation", "QLearning.Nash", "Agent1.choose_action", "Agent2.choose_action", "env.step", "env.get_observation", "QLearning.Nash", "Agent1.learn", "Agent2.learn", "base_models.NCModel.encode", "base_models.NCModel.compute_metrics", "env.acc1_record.append", "env.r1_record.append", "env.c1_record.append", "env.acc2_record.append", "env.c2_record.append", "Agent1.update_epsilon", "Agent2.update_epsilon"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.env.Env.get_observation", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.Nash", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.choose_action", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.choose_action", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.RiemannianAdam.step", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.env.Env.get_observation", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.Nash", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.learn", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.learn", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.update_epsilon", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.update_epsilon"], ["", "def", "train_with_RL", "(", "self", ",", "env", ",", "Agent1", ",", "Agent2", ",", "data", ",", "epoch", ",", "ace", ")", ":", "\n", "        ", "if", "epoch", ">=", "self", ".", "args", ".", "start_q", ":", "\n", "            ", "observation", "=", "env", ".", "get_observation", "(", ")", "\n", "pi1", ",", "pi2", "=", "Nash", "(", "observation", ",", "Agent1", ",", "Agent2", ")", "\n", "action1", "=", "Agent1", ".", "choose_action", "(", "observation", ",", "pi1", ")", "\n", "action2", "=", "Agent2", ".", "choose_action", "(", "observation", ",", "pi2", ")", "\n", "actions", "=", "(", "action1", ",", "action2", ")", "\n", "\n", "rewards", ",", "train_metrics", "=", "env", ".", "step", "(", "(", "action1", ",", "action2", ")", ",", "self", ",", "data", ",", "ace", ")", "\n", "observation_", "=", "env", ".", "get_observation", "(", ")", "\n", "pi1", ",", "pi2", "=", "Nash", "(", "observation_", ",", "Agent1", ",", "Agent2", ")", "\n", "pis", "=", "(", "pi1", ",", "pi2", ")", "\n", "Agent1", ".", "learn", "(", "observation", ",", "actions", ",", "rewards", "[", "0", "]", ",", "observation_", ",", "pis", ")", "\n", "Agent2", ".", "learn", "(", "observation", ",", "actions", ",", "rewards", "[", "1", "]", ",", "observation_", ",", "pis", ")", "\n", "if", "self", ".", "args", ".", "epsilon_decay", "==", "1", ":", "\n", "                ", "Agent1", ".", "update_epsilon", "(", ")", "\n", "Agent2", ".", "update_epsilon", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "embeddings", "=", "self", ".", "encode", "(", "data", "[", "'features'", "]", ",", "data", "[", "'adj_train_norm'", "]", ")", "\n", "env", ".", "embedding1", "=", "env", ".", "embedding2", "=", "embeddings", "\n", "train_metrics", "=", "self", ".", "compute_metrics", "(", "embeddings", ",", "data", ",", "'train'", ")", "\n", "env", ".", "acc1_record", ".", "append", "(", "train_metrics", "[", "self", ".", "key_param", "]", ")", "\n", "env", ".", "r1_record", ".", "append", "(", "0.0", ")", "\n", "env", ".", "c1_record", ".", "append", "(", "env", ".", "c1", "[", ":", "]", ")", "\n", "env", ".", "acc2_record", ".", "append", "(", "train_metrics", "[", "self", ".", "key_param", "]", ")", "\n", "env", ".", "c2_record", ".", "append", "(", "env", ".", "c1", "[", ":", "]", ")", "\n", "", "return", "train_metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.NCModel.change_curv": [[191, 205], ["base_models.NCModel.encoder.change_curv", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "range", "len", "base_models.NCModel.c[].to", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.change_curv"], ["", "def", "change_curv", "(", "self", ",", "curv", ")", ":", "\n", "        ", "'''\n        Change curvature everywhere in the model.\n        '''", "\n", "for", "item", "in", "curv", ":", "\n", "            ", "if", "item", "<", "1e-1", ":", "\n", "                ", "item", "=", "1e-1", "\n", "", "", "self", ".", "c", "=", "[", "torch", ".", "tensor", "(", "[", "c", "]", ")", ".", "float", "(", ")", "for", "c", "in", "curv", "]", "\n", "if", "not", "self", ".", "args", ".", "cuda", "==", "-", "1", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "c", ")", ")", ":", "\n", "                ", "self", ".", "c", "[", "i", "]", "=", "self", ".", "c", "[", "i", "]", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "", "self", ".", "encoder", ".", "c", "=", "self", ".", "c", "\n", "self", ".", "encoder", ".", "change_curv", "(", "self", ".", "c", ")", "\n", "self", ".", "decoder", ".", "c", "=", "self", ".", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.NCModel.init_metric_dict": [[206, 208], ["None"], "methods", ["None"], ["", "def", "init_metric_dict", "(", "self", ")", ":", "\n", "        ", "return", "{", "'acc'", ":", "-", "1", ",", "'f1'", ":", "-", "1", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.NCModel.has_improved": [[209, 211], ["None"], "methods", ["None"], ["", "def", "has_improved", "(", "self", ",", "m1", ",", "m2", ")", ":", "\n", "        ", "return", "m1", "[", "\"f1\"", "]", "<", "m2", "[", "\"f1\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.__init__": [[218, 224], ["base_models.BaseModel.__init__", "layers.layers.FermiDiracDecoder"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "LPModel", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "self", ".", "dc", "=", "FermiDiracDecoder", "(", "r", "=", "args", ".", "r", ",", "t", "=", "args", ".", "t", ")", "\n", "self", ".", "nb_false_edges", "=", "args", ".", "nb_false_edges", "\n", "self", ".", "nb_edges", "=", "args", ".", "nb_edges", "\n", "self", ".", "key_param", "=", "'ap'", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.decode": [[225, 234], ["base_models.LPModel.manifold.sqdist", "base_models.LPModel.dc.forward", "base_models.LPModel.manifold.normalize"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.sqdist", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.normalize"], ["", "def", "decode", "(", "self", ",", "h", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "manifold_name", "==", "'Euclidean'", ":", "\n", "            ", "h", "=", "self", ".", "manifold", ".", "normalize", "(", "h", ")", "\n", "", "emb_in", "=", "h", "[", "idx", "[", ":", ",", "0", "]", ",", ":", "]", "\n", "emb_out", "=", "h", "[", "idx", "[", ":", ",", "1", "]", ",", ":", "]", "\n", "# decode curvature using last layer's", "\n", "sqdist", "=", "self", ".", "manifold", ".", "sqdist", "(", "emb_in", ",", "emb_out", ",", "self", ".", "c", "[", "1", "]", ")", "\n", "probs", "=", "self", ".", "dc", ".", "forward", "(", "sqdist", ")", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.compute_metrics": [[235, 255], ["torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "base_models.LPModel.decode", "base_models.LPModel.decode", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "sklearn.metrics.roc_auc_score", "sklearn.metrics.average_precision_score", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "pos_scores.cpu.cpu.cpu", "neg_scores.cpu.cpu.cpu", "list", "list", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "pos_scores.cpu.cpu.data.numpy", "neg_scores.cpu.cpu.data.numpy", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.LinearDecoder.decode", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.LinearDecoder.decode"], ["", "def", "compute_metrics", "(", "self", ",", "embeddings", ",", "data", ",", "split", ")", ":", "\n", "        ", "if", "torch", ".", "isnan", "(", "embeddings", ")", ".", "any", "(", ")", ":", "\n", "            ", "embeddings", "[", "embeddings", "!=", "embeddings", "]", "=", "1e-8", "\n", "", "if", "split", "==", "'train'", ":", "\n", "            ", "edges_false", "=", "data", "[", "f'{split}_edges_false'", "]", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "nb_false_edges", ",", "self", ".", "nb_edges", ")", "]", "\n", "", "else", ":", "\n", "            ", "edges_false", "=", "data", "[", "f'{split}_edges_false'", "]", "\n", "", "pos_scores", "=", "self", ".", "decode", "(", "embeddings", ",", "data", "[", "f'{split}_edges'", "]", ")", "\n", "neg_scores", "=", "self", ".", "decode", "(", "embeddings", ",", "edges_false", ")", "\n", "loss", "=", "F", ".", "binary_cross_entropy", "(", "pos_scores", ",", "torch", ".", "ones_like", "(", "pos_scores", ")", ")", "\n", "loss", "+=", "F", ".", "binary_cross_entropy", "(", "neg_scores", ",", "torch", ".", "zeros_like", "(", "neg_scores", ")", ")", "\n", "if", "pos_scores", ".", "is_cuda", ":", "\n", "            ", "pos_scores", "=", "pos_scores", ".", "cpu", "(", ")", "\n", "neg_scores", "=", "neg_scores", ".", "cpu", "(", ")", "\n", "", "labels", "=", "[", "1", "]", "*", "pos_scores", ".", "shape", "[", "0", "]", "+", "[", "0", "]", "*", "neg_scores", ".", "shape", "[", "0", "]", "\n", "preds", "=", "list", "(", "pos_scores", ".", "data", ".", "numpy", "(", ")", ")", "+", "list", "(", "neg_scores", ".", "data", ".", "numpy", "(", ")", ")", "\n", "roc", "=", "roc_auc_score", "(", "labels", ",", "preds", ")", "\n", "ap", "=", "average_precision_score", "(", "labels", ",", "preds", ")", "\n", "metrics", "=", "{", "'loss'", ":", "loss", ",", "'roc'", ":", "roc", ",", "'ap'", ":", "ap", "}", "\n", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.train_with_RL": [[257, 284], ["env.get_observation", "QLearning.Nash", "Agent1.choose_action", "Agent2.choose_action", "env.step", "env.get_observation", "QLearning.Nash", "Agent1.learn", "Agent2.learn", "base_models.LPModel.encode", "base_models.LPModel.compute_metrics", "env.acc1_record.append", "env.r1_record.append", "env.c1_record.append", "env.acc2_record.append", "env.c2_record.append", "Agent1.update_epsilon", "Agent2.update_epsilon"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.env.Env.get_observation", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.Nash", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.choose_action", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.choose_action", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.optimizers.radam.RiemannianAdam.step", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.env.Env.get_observation", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.Nash", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.learn", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.learn", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.update_epsilon", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.None.QLearning.QLearningTable.update_epsilon"], ["", "def", "train_with_RL", "(", "self", ",", "env", ",", "Agent1", ",", "Agent2", ",", "data", ",", "epoch", ",", "ace", ")", ":", "\n", "        ", "if", "epoch", ">=", "self", ".", "args", ".", "start_q", ":", "\n", "            ", "observation", "=", "env", ".", "get_observation", "(", ")", "\n", "pi1", ",", "pi2", "=", "Nash", "(", "observation", ",", "Agent1", ",", "Agent2", ")", "\n", "action1", "=", "Agent1", ".", "choose_action", "(", "observation", ",", "pi1", ")", "\n", "action2", "=", "Agent2", ".", "choose_action", "(", "observation", ",", "pi2", ")", "\n", "actions", "=", "(", "action1", ",", "action2", ")", "\n", "\n", "rewards", ",", "train_metrics", "=", "env", ".", "step", "(", "(", "action1", ",", "action2", ")", ",", "self", ",", "data", ",", "ace", ")", "\n", "observation_", "=", "env", ".", "get_observation", "(", ")", "\n", "pi1", ",", "pi2", "=", "Nash", "(", "observation_", ",", "Agent1", ",", "Agent2", ")", "\n", "pis", "=", "(", "pi1", ",", "pi2", ")", "\n", "Agent1", ".", "learn", "(", "observation", ",", "actions", ",", "rewards", "[", "0", "]", ",", "observation_", ",", "pis", ")", "\n", "Agent2", ".", "learn", "(", "observation", ",", "actions", ",", "rewards", "[", "1", "]", ",", "observation_", ",", "pis", ")", "\n", "if", "self", ".", "args", ".", "epsilon_decay", "==", "1", ":", "\n", "                ", "Agent1", ".", "update_epsilon", "(", ")", "\n", "Agent2", ".", "update_epsilon", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "embeddings", "=", "self", ".", "encode", "(", "data", "[", "'features'", "]", ",", "data", "[", "'adj_train_norm'", "]", ")", "\n", "env", ".", "embedding1", "=", "env", ".", "embedding2", "=", "embeddings", "\n", "train_metrics", "=", "self", ".", "compute_metrics", "(", "embeddings", ",", "data", ",", "'train'", ")", "\n", "env", ".", "acc1_record", ".", "append", "(", "train_metrics", "[", "self", ".", "key_param", "]", ")", "\n", "env", ".", "r1_record", ".", "append", "(", "0.0", ")", "\n", "env", ".", "c1_record", ".", "append", "(", "env", ".", "c1", "[", ":", "]", ")", "\n", "env", ".", "acc2_record", ".", "append", "(", "train_metrics", "[", "self", ".", "key_param", "]", ")", "\n", "env", ".", "c2_record", ".", "append", "(", "env", ".", "c1", "[", ":", "]", ")", "\n", "", "return", "train_metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.change_curv": [[285, 298], ["base_models.LPModel.encoder.change_curv", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "range", "len", "base_models.LPModel.c[].to", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.change_curv"], ["", "def", "change_curv", "(", "self", ",", "curv", ")", ":", "\n", "        ", "'''\n        Change curvature everywhere in the model.\n        '''", "\n", "for", "item", "in", "curv", ":", "\n", "            ", "if", "item", "<", "1e-1", ":", "\n", "                ", "item", "=", "1e-1", "\n", "", "", "self", ".", "c", "=", "[", "torch", ".", "tensor", "(", "[", "c", "]", ")", ".", "float", "(", ")", "for", "c", "in", "curv", "]", "\n", "if", "not", "self", ".", "args", ".", "cuda", "==", "-", "1", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "c", ")", ")", ":", "\n", "                ", "self", ".", "c", "[", "i", "]", "=", "self", ".", "c", "[", "i", "]", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "", "self", ".", "encoder", ".", "c", "=", "self", ".", "c", "\n", "self", ".", "encoder", ".", "change_curv", "(", "self", ".", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.init_metric_dict": [[299, 301], ["None"], "methods", ["None"], ["", "def", "init_metric_dict", "(", "self", ")", ":", "\n", "        ", "return", "{", "'roc'", ":", "-", "1", ",", "'ap'", ":", "-", "1", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.base_models.LPModel.has_improved": [[302, 304], ["None"], "methods", ["None"], ["", "def", "has_improved", "(", "self", ",", "m1", ",", "m2", ")", ":", "\n", "        ", "return", "0.5", "*", "(", "m1", "[", "'roc'", "]", "+", "m1", "[", "'ap'", "]", ")", "<", "0.5", "*", "(", "m2", "[", "'roc'", "]", "+", "m2", "[", "'ap'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Encoder.__init__": [[19, 22], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c", "=", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Encoder.change_curv": [[23, 25], ["None"], "methods", ["None"], ["", "def", "change_curv", "(", "self", ",", "c", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Encoder.encode": [[26, 33], ["encoders.Encoder.layers.forward", "encoders.Encoder.layers.forward"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward"], ["", "def", "encode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "if", "self", ".", "encode_graph", ":", "\n", "            ", "input", "=", "(", "x", ",", "adj", ")", "\n", "output", ",", "_", "=", "self", ".", "layers", ".", "forward", "(", "input", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "layers", ".", "forward", "(", "x", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.MLP.__init__": [[39, 54], ["encoders.Encoder.__init__", "layers.layers.get_dim_act", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "dims.pop", "layers.append", "len", "layers.layers.Linear"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.layers.get_dim_act"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ",", "mapping", "=", "False", ")", ":", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "assert", "args", ".", "num_layers", ">", "0", "\n", "dims", ",", "acts", "=", "get_dim_act", "(", "args", ")", "\n", "if", "mapping", ":", "\n", "            ", "dims", "[", "0", "]", "=", "args", ".", "dim", "*", "2", "\n", "dims", ".", "pop", "(", ")", "\n", "", "dropout", "=", "0", "if", "mapping", "else", "args", ".", "dropout", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dims", ")", "-", "1", ")", ":", "\n", "            ", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "layers", ".", "append", "(", "Linear", "(", "in_dim", ",", "out_dim", ",", "dropout", ",", "act", ",", "args", ".", "bias", ")", ")", "\n", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "encode_graph", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.HGCN.__init__": [[63, 81], ["encoders.Encoder.__init__", "layers.get_dim_act_curv", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "getattr", "hgc_layers.append", "len", "layers.HyperbolicGraphConvolution"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.get_dim_act_curv"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ")", ":", "\n", "        ", "super", "(", "HGCN", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "assert", "args", ".", "num_layers", "==", "2", "\n", "dims", ",", "acts", ",", "self", ".", "curvatures", "=", "hyp_layers", ".", "get_dim_act_curv", "(", "args", ")", "\n", "hgc_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dims", ")", "-", "1", ")", ":", "\n", "            ", "c_in", ",", "c_out", "=", "self", ".", "curvatures", "[", "i", "]", ",", "self", ".", "curvatures", "[", "i", "+", "1", "]", "\n", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "hgc_layers", ".", "append", "(", "\n", "hyp_layers", ".", "HyperbolicGraphConvolution", "(", "\n", "self", ".", "manifold", ",", "in_dim", ",", "out_dim", ",", "c_in", ",", "c_out", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ",", "args", ".", "use_att", ",", "args", ".", "local_agg", "\n", ")", "\n", ")", "\n", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "hgc_layers", ")", "\n", "self", ".", "encode_graph", "=", "True", "\n", "self", ".", "args", "=", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.HGCN.change_curv": [[82, 96], ["enumerate", "encoders.HGCN.curvatures.append"], "methods", ["None"], ["", "def", "change_curv", "(", "self", ",", "c", ")", ":", "\n", "        ", "'''\n        changing curvature in each layer. parameter c should be on GPU.\n        '''", "\n", "args", "=", "self", ".", "args", "\n", "self", ".", "curvatures", "=", "c", "[", ":", "]", "\n", "if", "args", ".", "task", "in", "[", "'lp'", ",", "'nc'", "]", ":", "\n", "            ", "self", ".", "curvatures", ".", "append", "(", "c", "[", "-", "1", "]", ")", "\n", "", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "            ", "c_in", ",", "c_out", "=", "self", ".", "curvatures", "[", "i", "]", ",", "self", ".", "curvatures", "[", "i", "+", "1", "]", "\n", "layer", ".", "linear", ".", "c", "=", "c_in", "\n", "layer", ".", "agg", ".", "c", "=", "c_in", "\n", "layer", ".", "hyp_act", ".", "c_in", "=", "c_in", "\n", "layer", ".", "hyp_act", ".", "c_out", "=", "c_out", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.HGCN.encode": [[98, 103], ["encoders.HGCN.manifold.proj_tan0", "encoders.HGCN.manifold.expmap0", "encoders.HGCN.manifold.proj", "encoders.Encoder.encode"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.encode"], ["", "", "def", "encode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x_tan", "=", "self", ".", "manifold", ".", "proj_tan0", "(", "x", ",", "self", ".", "curvatures", "[", "0", "]", ")", "\n", "x_hyp", "=", "self", ".", "manifold", ".", "expmap0", "(", "x_tan", ",", "c", "=", "self", ".", "curvatures", "[", "0", "]", ")", "\n", "x_hyp", "=", "self", ".", "manifold", ".", "proj", "(", "x_hyp", ",", "c", "=", "self", ".", "curvatures", "[", "0", "]", ")", "\n", "return", "super", "(", "HGCN", ",", "self", ")", ".", "encode", "(", "x_hyp", ",", "adj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.__init__": [[113, 141], ["encoders.Encoder.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "manifolds.ManifoldParameter", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.Sequential", "torch.Sequential", "torch.Sequential", "getattr", "encoders.Shallow.manifold.init_weights", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "list", "layers.layers.get_dim_act", "range", "numpy.load", "range", "layers.append", "len", "layers.layers.Linear"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.init_weights", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.layers.get_dim_act"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ")", ":", "\n", "        ", "super", "(", "Shallow", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "self", ".", "use_feats", "=", "args", ".", "use_feats", "\n", "weights", "=", "torch", ".", "Tensor", "(", "args", ".", "n_nodes", ",", "args", ".", "dim", ")", "\n", "if", "not", "args", ".", "pretrained_embeddings", ":", "\n", "            ", "weights", "=", "self", ".", "manifold", ".", "init_weights", "(", "weights", ",", "self", ".", "c", ")", "\n", "trainable", "=", "True", "\n", "", "else", ":", "\n", "            ", "weights", "=", "torch", ".", "Tensor", "(", "np", ".", "load", "(", "args", ".", "pretrained_embeddings", ")", ")", "\n", "assert", "weights", ".", "shape", "[", "0", "]", "==", "args", ".", "n_nodes", ",", "\"The embeddings you passed seem to be for another dataset.\"", "\n", "trainable", "=", "False", "\n", "", "self", ".", "lt", "=", "manifolds", ".", "ManifoldParameter", "(", "weights", ",", "trainable", ",", "self", ".", "manifold", ",", "self", ".", "c", ")", "\n", "self", ".", "all_nodes", "=", "torch", ".", "LongTensor", "(", "list", "(", "range", "(", "args", ".", "n_nodes", ")", ")", ")", "\n", "layers", "=", "[", "]", "\n", "if", "args", ".", "pretrained_embeddings", "is", "not", "None", "and", "args", ".", "num_layers", ">", "0", ":", "\n", "# MLP layers after pre-trained embeddings", "\n", "            ", "dims", ",", "acts", "=", "get_dim_act", "(", "args", ")", "\n", "if", "self", ".", "use_feats", ":", "\n", "                ", "dims", "[", "0", "]", "=", "args", ".", "feat_dim", "+", "weights", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "dims", "[", "0", "]", "=", "weights", ".", "shape", "[", "1", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "dims", ")", "-", "1", ")", ":", "\n", "                ", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "layers", ".", "append", "(", "Linear", "(", "in_dim", ",", "out_dim", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ")", ")", "\n", "", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "encode_graph", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.change_curv": [[142, 147], ["None"], "methods", ["None"], ["", "def", "change_curv", "(", "self", ",", "c", ")", ":", "\n", "        ", "'''\n        changing curvature in each layer. parameter c should be on GPU.\n        '''", "\n", "self", ".", "lt", ".", "c", "=", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.encode": [[148, 153], ["encoders.Encoder.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.encoders.Shallow.encode"], ["", "def", "encode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "h", "=", "self", ".", "lt", "[", "self", ".", "all_nodes", ",", ":", "]", "\n", "if", "self", ".", "use_feats", ":", "\n", "            ", "h", "=", "torch", ".", "cat", "(", "(", "h", ",", "x", ")", ",", "1", ")", "\n", "", "return", "super", "(", "Shallow", ",", "self", ")", ".", "encode", "(", "h", ",", "adj", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.Decoder.__init__": [[14, 17], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c", "=", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.Decoder.decode": [[18, 25], ["decoders.Decoder.cls.forward", "decoders.Decoder.cls.forward"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.layers.hyp_layers.HypAct.forward"], ["", "def", "decode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "if", "self", ".", "decode_adj", ":", "\n", "            ", "input", "=", "(", "x", ",", "adj", ")", "\n", "probs", ",", "_", "=", "self", ".", "cls", ".", "forward", "(", "input", ")", "\n", "", "else", ":", "\n", "            ", "probs", "=", "self", ".", "cls", ".", "forward", "(", "x", ")", "\n", "", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.LinearDecoder.__init__": [[33, 41], ["decoders.Decoder.__init__", "layers.layers.Linear", "getattr"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ")", ":", "\n", "        ", "super", "(", "LinearDecoder", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "self", ".", "input_dim", "=", "args", ".", "dim", "\n", "self", ".", "output_dim", "=", "args", ".", "n_classes", "\n", "self", ".", "bias", "=", "args", ".", "bias", "\n", "self", ".", "cls", "=", "Linear", "(", "self", ".", "input_dim", ",", "self", ".", "output_dim", ",", "args", ".", "dropout", ",", "lambda", "x", ":", "x", ",", "self", ".", "bias", ")", "\n", "self", ".", "decode_adj", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.LinearDecoder.decode": [[42, 45], ["decoders.LinearDecoder.manifold.proj_tan0", "decoders.Decoder.decode", "decoders.LinearDecoder.manifold.logmap0"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.LinearDecoder.decode", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap0"], ["", "def", "decode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "h", "=", "self", ".", "manifold", ".", "proj_tan0", "(", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c", "[", "1", "]", ")", ",", "c", "=", "self", ".", "c", "[", "1", "]", ")", "\n", "return", "super", "(", "LinearDecoder", ",", "self", ")", ".", "decode", "(", "h", ",", "adj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.models.decoders.LinearDecoder.extra_repr": [[46, 49], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'in_features={}, out_features={}, bias={}, c={}'", ".", "format", "(", "\n", "self", ".", "input_dim", ",", "self", ".", "output_dim", ",", "self", ".", "bias", ",", "self", ".", "c", "[", "0", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.webkb.load_webkb.load_webkb_data": [[9, 31], ["print", "numpy.genfromtxt", "scipy.csr_matrix", "utils.gat_utils.encode_onehot", "numpy.array", "numpy.genfromtxt", "numpy.array().reshape", "scipy.coo_matrix", "print", "sp.coo_matrix.multiply", "sp.csr_matrix.todense", "numpy.dtype", "enumerate", "numpy.array", "numpy.ones", "sp.coo_matrix.T.multiply", "list", "map", "np.genfromtxt.flatten"], "function", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.gat_utils.encode_onehot"], ["def", "load_webkb_data", "(", "dataset", "=", "\"cornell\"", ",", "use_feats", "=", "\"True\"", ",", "data_path", "=", "\"./data/\"", ")", ":", "\n", "    ", "dataset", "=", "\"cornell\"", "\n", "print", "(", "'Loading {} dataset...'", ".", "format", "(", "dataset", ")", ")", "\n", "idx_features_labels", "=", "np", ".", "genfromtxt", "(", "\"cornell.content\"", ".", "format", "(", "data_path", ",", "dataset", ")", ",", "dtype", "=", "np", ".", "dtype", "(", "str", ")", ")", "\n", "features", "=", "sp", ".", "csr_matrix", "(", "idx_features_labels", "[", ":", ",", "1", ":", "-", "1", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "labels", "=", "encode_onehot", "(", "idx_features_labels", "[", ":", ",", "-", "1", "]", ")", "\n", "\n", "# build graph", "\n", "idx", "=", "np", ".", "array", "(", "idx_features_labels", "[", ":", ",", "0", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "idx_map", "=", "{", "j", ":", "i", "for", "i", ",", "j", "in", "enumerate", "(", "idx", ")", "}", "\n", "edges_unordered", "=", "np", ".", "genfromtxt", "(", "\"cornell.cites\"", ".", "format", "(", "path", ",", "dataset", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "edges", "=", "np", ".", "array", "(", "list", "(", "map", "(", "idx_map", ".", "get", ",", "edges_unordered", ".", "flatten", "(", ")", ")", ")", ",", "\n", "dtype", "=", "np", ".", "int32", ")", ".", "reshape", "(", "edges_unordered", ".", "shape", ")", "\n", "adj", "=", "sp", ".", "coo_matrix", "(", "(", "np", ".", "ones", "(", "edges", ".", "shape", "[", "0", "]", ")", ",", "(", "edges", "[", ":", ",", "0", "]", ",", "edges", "[", ":", ",", "1", "]", ")", ")", ",", "\n", "shape", "=", "(", "labels", ".", "shape", "[", "0", "]", ",", "labels", ".", "shape", "[", "0", "]", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "# build symmetric adjacency matrix", "\n", "adj", "=", "adj", "+", "adj", ".", "T", ".", "multiply", "(", "adj", ".", "T", ">", "adj", ")", "-", "adj", ".", "multiply", "(", "adj", ".", "T", ">", "adj", ")", "\n", "\n", "print", "(", "'Dataset has {} nodes, {} edges, {} features.'", ".", "format", "(", "adj", ".", "shape", "[", "0", "]", ",", "edges", ".", "shape", "[", "0", "]", ",", "features", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "return", "features", ".", "todense", "(", ")", ",", "adj", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.__init__": [[11, 14], ["manifolds.base.Manifold.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Euclidean", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "'Euclidean'", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.normalize": [[15, 19], ["p.size", "p.view().renorm_", "p.view"], "methods", ["None"], ["", "def", "normalize", "(", "self", ",", "p", ")", ":", "\n", "        ", "dim", "=", "p", ".", "size", "(", "-", "1", ")", "\n", "p", ".", "view", "(", "-", "1", ",", "dim", ")", ".", "renorm_", "(", "2", ",", "0", ",", "1.", ")", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.sqdist": [[20, 22], ["None"], "methods", ["None"], ["", "def", "sqdist", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "return", "(", "p1", "-", "p2", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.egrad2rgrad": [[23, 25], ["None"], "methods", ["None"], ["", "def", "egrad2rgrad", "(", "self", ",", "p", ",", "dp", ",", "c", ")", ":", "\n", "        ", "return", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.proj": [[26, 28], ["None"], "methods", ["None"], ["", "def", "proj", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.proj_tan": [[29, 31], ["None"], "methods", ["None"], ["", "def", "proj_tan", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.proj_tan0": [[32, 34], ["None"], "methods", ["None"], ["", "def", "proj_tan0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.expmap": [[35, 37], ["None"], "methods", ["None"], ["", "def", "expmap", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "p", "+", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.logmap": [[38, 40], ["None"], "methods", ["None"], ["", "def", "logmap", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "return", "p2", "-", "p1", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.expmap0": [[41, 43], ["None"], "methods", ["None"], ["", "def", "expmap0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.logmap0": [[44, 46], ["None"], "methods", ["None"], ["", "def", "logmap0", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.mobius_add": [[47, 49], ["None"], "methods", ["None"], ["", "def", "mobius_add", "(", "self", ",", "x", ",", "y", ",", "c", ",", "dim", "=", "-", "1", ")", ":", "\n", "        ", "return", "x", "+", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.mobius_matvec": [[50, 53], ["m.transpose"], "methods", ["None"], ["", "def", "mobius_matvec", "(", "self", ",", "m", ",", "x", ",", "c", ")", ":", "\n", "        ", "mx", "=", "x", "@", "m", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.init_weights": [[54, 57], ["w.data.uniform_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "w", ",", "c", ",", "irange", "=", "1e-5", ")", ":", "\n", "        ", "w", ".", "data", ".", "uniform_", "(", "-", "irange", ",", "irange", ")", "\n", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.inner": [[58, 62], ["None"], "methods", ["None"], ["", "def", "inner", "(", "self", ",", "p", ",", "c", ",", "u", ",", "v", "=", "None", ",", "keepdim", "=", "False", ")", ":", "\n", "        ", "if", "v", "is", "None", ":", "\n", "            ", "v", "=", "u", "\n", "", "return", "(", "u", "*", "v", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "keepdim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.ptransp": [[63, 65], ["None"], "methods", ["None"], ["", "def", "ptransp", "(", "self", ",", "x", ",", "y", ",", "v", ",", "c", ")", ":", "\n", "        ", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.euclidean.Euclidean.ptransp0": [[66, 68], ["None"], "methods", ["None"], ["", "def", "ptransp0", "(", "self", ",", "x", ",", "v", ",", "c", ")", ":", "\n", "        ", "return", "x", "+", "v", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.__init__": [[11, 14], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "10e-8", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.sqdist": [[15, 18], ["None"], "methods", ["None"], ["", "def", "sqdist", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "\"\"\"Squared distance between pairs of points.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.egrad2rgrad": [[19, 22], ["None"], "methods", ["None"], ["", "def", "egrad2rgrad", "(", "self", ",", "p", ",", "dp", ",", "c", ")", ":", "\n", "        ", "\"\"\"Converts Euclidean Gradient to Riemannian Gradients.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.proj": [[23, 26], ["None"], "methods", ["None"], ["", "def", "proj", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "\"\"\"Projects point p on the manifold.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.proj_tan": [[27, 30], ["None"], "methods", ["None"], ["", "def", "proj_tan", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "\"\"\"Projects u on the tangent space of p.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.proj_tan0": [[31, 34], ["None"], "methods", ["None"], ["", "def", "proj_tan0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "\"\"\"Projects u on the tangent space of the origin.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.expmap": [[35, 38], ["None"], "methods", ["None"], ["", "def", "expmap", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "\"\"\"Exponential map of u at point p.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.logmap": [[39, 42], ["None"], "methods", ["None"], ["", "def", "logmap", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "\"\"\"Logarithmic map of point p1 at point p2.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.expmap0": [[43, 46], ["None"], "methods", ["None"], ["", "def", "expmap0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "\"\"\"Exponential map of u at the origin.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.logmap0": [[47, 50], ["None"], "methods", ["None"], ["", "def", "logmap0", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "\"\"\"Logarithmic map of point p at the origin.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.mobius_add": [[51, 54], ["None"], "methods", ["None"], ["", "def", "mobius_add", "(", "self", ",", "x", ",", "y", ",", "c", ",", "dim", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"Adds points x and y.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.mobius_matvec": [[55, 58], ["None"], "methods", ["None"], ["", "def", "mobius_matvec", "(", "self", ",", "m", ",", "x", ",", "c", ")", ":", "\n", "        ", "\"\"\"Performs hyperboic martrix-vector multiplication.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.init_weights": [[59, 62], ["None"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "w", ",", "c", ",", "irange", "=", "1e-5", ")", ":", "\n", "        ", "\"\"\"Initializes random weigths on the manifold.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.inner": [[63, 66], ["None"], "methods", ["None"], ["", "def", "inner", "(", "self", ",", "p", ",", "c", ",", "u", ",", "v", "=", "None", ",", "keepdim", "=", "False", ")", ":", "\n", "        ", "\"\"\"Inner product for tangent vectors at point x.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.ptransp": [[67, 70], ["None"], "methods", ["None"], ["", "def", "ptransp", "(", "self", ",", "x", ",", "y", ",", "u", ",", "c", ")", ":", "\n", "        ", "\"\"\"Parallel transport of u from x to y.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.Manifold.ptransp0": [[71, 74], ["None"], "methods", ["None"], ["", "def", "ptransp0", "(", "self", ",", "x", ",", "u", ",", "c", ")", ":", "\n", "        ", "\"\"\"Parallel transport of u from the origin to y.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.ManifoldParameter.__new__": [[80, 82], ["torch.nn.Parameter.__new__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.ManifoldParameter.__new__"], ["def", "__new__", "(", "cls", ",", "data", ",", "requires_grad", ",", "manifold", ",", "c", ")", ":", "\n", "        ", "return", "Parameter", ".", "__new__", "(", "cls", ",", "data", ",", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.ManifoldParameter.__init__": [[83, 86], ["None"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "data", ",", "requires_grad", ",", "manifold", ",", "c", ")", ":", "\n", "        ", "self", ".", "c", "=", "c", "\n", "self", ".", "manifold", "=", "manifold", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.ManifoldParameter.__repr__": [[87, 89], ["torch.nn.Parameter.__repr__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.base.ManifoldParameter.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'{} Parameter containing:\\n'", ".", "format", "(", "self", ".", "manifold", ".", "name", ")", "+", "super", "(", "Parameter", ",", "self", ")", ".", "__repr__", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.__init__": [[18, 24], ["manifolds.base.Manifold.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Hyperboloid", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "'Hyperboloid'", "\n", "self", ".", "eps", "=", "{", "torch", ".", "float32", ":", "1e-7", ",", "torch", ".", "float64", ":", "1e-15", "}", "\n", "self", ".", "min_norm", "=", "1e-15", "\n", "self", ".", "max_norm", "=", "1e6", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.minkowski_dot": [[25, 30], ["torch.sum", "res.view.view.view"], "methods", ["None"], ["", "def", "minkowski_dot", "(", "self", ",", "x", ",", "y", ",", "keepdim", "=", "True", ")", ":", "\n", "        ", "res", "=", "torch", ".", "sum", "(", "x", "*", "y", ",", "dim", "=", "-", "1", ")", "-", "2", "*", "x", "[", "...", ",", "0", "]", "*", "y", "[", "...", ",", "0", "]", "\n", "if", "keepdim", ":", "\n", "            ", "res", "=", "res", ".", "view", "(", "res", ".", "shape", "+", "(", "1", ",", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.minkowski_norm": [[31, 34], ["hyperboloid.Hyperboloid.minkowski_dot", "torch.sqrt", "torch.clamp"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.minkowski_dot"], ["", "def", "minkowski_norm", "(", "self", ",", "u", ",", "keepdim", "=", "True", ")", ":", "\n", "        ", "dot", "=", "self", ".", "minkowski_dot", "(", "u", ",", "u", ",", "keepdim", "=", "keepdim", ")", "\n", "return", "torch", ".", "sqrt", "(", "torch", ".", "clamp", "(", "dot", ",", "min", "=", "self", ".", "eps", "[", "u", ".", "dtype", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.sqdist": [[35, 42], ["hyperboloid.Hyperboloid.minkowski_dot", "torch.clamp", "torch.clamp", "utils.math_utils.arcosh"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.minkowski_dot", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.arcosh"], ["", "def", "sqdist", "(", "self", ",", "x", ",", "y", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "prod", "=", "self", ".", "minkowski_dot", "(", "x", ",", "y", ")", "\n", "theta", "=", "torch", ".", "clamp", "(", "-", "prod", "/", "K", ",", "min", "=", "1.0", "+", "self", ".", "eps", "[", "x", ".", "dtype", "]", ")", "\n", "sqdist", "=", "K", "*", "arcosh", "(", "theta", ")", "**", "2", "\n", "# clamp distance to avoid nans in Fermi-Dirac decoder", "\n", "return", "torch", ".", "clamp", "(", "sqdist", ",", "max", "=", "50.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.proj": [[43, 53], ["x.narrow", "torch.ones_like", "torch.zeros_like", "torch.sqrt", "x.size", "torch.norm", "torch.clamp"], "methods", ["None"], ["", "def", "proj", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "d", "=", "x", ".", "size", "(", "-", "1", ")", "-", "1", "\n", "y", "=", "x", ".", "narrow", "(", "-", "1", ",", "1", ",", "d", ")", "\n", "y_sqnorm", "=", "torch", ".", "norm", "(", "y", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "**", "2", "\n", "mask", "=", "torch", ".", "ones_like", "(", "x", ")", "\n", "mask", "[", ":", ",", "0", "]", "=", "0", "\n", "vals", "=", "torch", ".", "zeros_like", "(", "x", ")", "\n", "vals", "[", ":", ",", "0", ":", "1", "]", "=", "torch", ".", "sqrt", "(", "torch", ".", "clamp", "(", "K", "+", "y_sqnorm", ",", "min", "=", "self", ".", "eps", "[", "x", ".", "dtype", "]", ")", ")", "\n", "return", "vals", "+", "mask", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.proj_tan": [[54, 63], ["torch.sum", "torch.ones_like", "torch.zeros_like", "x.size", "torch.clamp", "x.narrow", "u.narrow"], "methods", ["None"], ["", "def", "proj_tan", "(", "self", ",", "u", ",", "x", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "d", "=", "x", ".", "size", "(", "1", ")", "-", "1", "\n", "ux", "=", "torch", ".", "sum", "(", "x", ".", "narrow", "(", "-", "1", ",", "1", ",", "d", ")", "*", "u", ".", "narrow", "(", "-", "1", ",", "1", ",", "d", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "mask", "=", "torch", ".", "ones_like", "(", "u", ")", "\n", "mask", "[", ":", ",", "0", "]", "=", "0", "\n", "vals", "=", "torch", ".", "zeros_like", "(", "u", ")", "\n", "vals", "[", ":", ",", "0", ":", "1", "]", "=", "ux", "/", "torch", ".", "clamp", "(", "x", "[", ":", ",", "0", ":", "1", "]", ",", "min", "=", "self", ".", "eps", "[", "x", ".", "dtype", "]", ")", "\n", "return", "vals", "+", "mask", "*", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.proj_tan0": [[64, 69], ["u.narrow", "torch.zeros_like"], "methods", ["None"], ["", "def", "proj_tan0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "narrowed", "=", "u", ".", "narrow", "(", "-", "1", ",", "0", ",", "1", ")", "\n", "vals", "=", "torch", ".", "zeros_like", "(", "u", ")", "\n", "vals", "[", ":", ",", "0", ":", "1", "]", "=", "narrowed", "\n", "return", "u", "-", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.expmap": [[70, 79], ["hyperboloid.Hyperboloid.minkowski_norm", "torch.clamp", "torch.clamp", "hyperboloid.Hyperboloid.proj", "utils.math_utils.cosh", "utils.math_utils.sinh"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.minkowski_norm", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.cosh", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.sinh"], ["", "def", "expmap", "(", "self", ",", "u", ",", "x", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "sqrtK", "=", "K", "**", "0.5", "\n", "normu", "=", "self", ".", "minkowski_norm", "(", "u", ")", "\n", "normu", "=", "torch", ".", "clamp", "(", "normu", ",", "max", "=", "self", ".", "max_norm", ")", "\n", "theta", "=", "normu", "/", "sqrtK", "\n", "theta", "=", "torch", ".", "clamp", "(", "theta", ",", "min", "=", "self", ".", "min_norm", ")", "\n", "result", "=", "cosh", "(", "theta", ")", "*", "x", "+", "sinh", "(", "theta", ")", "*", "u", "/", "theta", "\n", "return", "self", ".", "proj", "(", "result", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.logmap": [[80, 89], ["hyperboloid.Hyperboloid.minkowski_norm", "torch.clamp", "hyperboloid.Hyperboloid.proj_tan", "torch.clamp", "hyperboloid.Hyperboloid.sqdist", "hyperboloid.Hyperboloid.minkowski_dot"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.minkowski_norm", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.sqdist", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.minkowski_dot"], ["", "def", "logmap", "(", "self", ",", "x", ",", "y", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "xy", "=", "torch", ".", "clamp", "(", "self", ".", "minkowski_dot", "(", "x", ",", "y", ")", "+", "K", ",", "max", "=", "-", "self", ".", "eps", "[", "x", ".", "dtype", "]", ")", "-", "K", "\n", "u", "=", "y", "+", "xy", "*", "x", "*", "c", "\n", "normu", "=", "self", ".", "minkowski_norm", "(", "u", ")", "\n", "normu", "=", "torch", ".", "clamp", "(", "normu", ",", "min", "=", "self", ".", "min_norm", ")", "\n", "dist", "=", "self", ".", "sqdist", "(", "x", ",", "y", ",", "c", ")", "**", "0.5", "\n", "result", "=", "dist", "*", "u", "/", "normu", "\n", "return", "self", ".", "proj_tan", "(", "result", ",", "x", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.expmap0": [[90, 102], ["u.narrow().view", "torch.norm", "torch.clamp", "torch.ones_like", "hyperboloid.Hyperboloid.proj", "u.size", "utils.math_utils.cosh", "u.narrow", "utils.math_utils.sinh"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.cosh", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.sinh"], ["", "def", "expmap0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "sqrtK", "=", "K", "**", "0.5", "\n", "d", "=", "u", ".", "size", "(", "-", "1", ")", "-", "1", "\n", "x", "=", "u", ".", "narrow", "(", "-", "1", ",", "1", ",", "d", ")", ".", "view", "(", "-", "1", ",", "d", ")", "\n", "x_norm", "=", "torch", ".", "norm", "(", "x", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "x_norm", "=", "torch", ".", "clamp", "(", "x_norm", ",", "min", "=", "self", ".", "min_norm", ")", "\n", "theta", "=", "x_norm", "/", "sqrtK", "\n", "res", "=", "torch", ".", "ones_like", "(", "u", ")", "\n", "res", "[", ":", ",", "0", ":", "1", "]", "=", "sqrtK", "*", "cosh", "(", "theta", ")", "\n", "res", "[", ":", ",", "1", ":", "]", "=", "sqrtK", "*", "sinh", "(", "theta", ")", "*", "x", "/", "x_norm", "\n", "return", "self", ".", "proj", "(", "res", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.logmap0": [[103, 114], ["x.narrow().view", "torch.norm", "torch.clamp", "torch.zeros_like", "torch.clamp", "x.size", "x.narrow", "utils.math_utils.arcosh"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.arcosh"], ["", "def", "logmap0", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "sqrtK", "=", "K", "**", "0.5", "\n", "d", "=", "x", ".", "size", "(", "-", "1", ")", "-", "1", "\n", "y", "=", "x", ".", "narrow", "(", "-", "1", ",", "1", ",", "d", ")", ".", "view", "(", "-", "1", ",", "d", ")", "\n", "y_norm", "=", "torch", ".", "norm", "(", "y", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "y_norm", "=", "torch", ".", "clamp", "(", "y_norm", ",", "min", "=", "self", ".", "min_norm", ")", "\n", "res", "=", "torch", ".", "zeros_like", "(", "x", ")", "\n", "theta", "=", "torch", ".", "clamp", "(", "x", "[", ":", ",", "0", ":", "1", "]", "/", "sqrtK", ",", "min", "=", "1.0", "+", "self", ".", "eps", "[", "x", ".", "dtype", "]", ")", "\n", "res", "[", ":", ",", "1", ":", "]", "=", "sqrtK", "*", "arcosh", "(", "theta", ")", "*", "y", "/", "y_norm", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.mobius_add": [[115, 119], ["hyperboloid.Hyperboloid.logmap0", "hyperboloid.Hyperboloid.ptransp0", "hyperboloid.Hyperboloid.expmap"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.ptransp0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap"], ["", "def", "mobius_add", "(", "self", ",", "x", ",", "y", ",", "c", ")", ":", "\n", "        ", "u", "=", "self", ".", "logmap0", "(", "y", ",", "c", ")", "\n", "v", "=", "self", ".", "ptransp0", "(", "x", ",", "u", ",", "c", ")", "\n", "return", "self", ".", "expmap", "(", "v", ",", "x", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.mobius_matvec": [[120, 124], ["hyperboloid.Hyperboloid.logmap0", "hyperboloid.Hyperboloid.expmap0", "m.transpose"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap0"], ["", "def", "mobius_matvec", "(", "self", ",", "m", ",", "x", ",", "c", ")", ":", "\n", "        ", "u", "=", "self", ".", "logmap0", "(", "x", ",", "c", ")", "\n", "mu", "=", "u", "@", "m", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "return", "self", ".", "expmap0", "(", "mu", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.ptransp": [[125, 132], ["hyperboloid.Hyperboloid.logmap", "hyperboloid.Hyperboloid.logmap", "torch.clamp", "hyperboloid.Hyperboloid.proj_tan", "hyperboloid.Hyperboloid.sqdist", "hyperboloid.Hyperboloid.minkowski_dot"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.sqdist", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.minkowski_dot"], ["", "def", "ptransp", "(", "self", ",", "x", ",", "y", ",", "u", ",", "c", ")", ":", "\n", "        ", "logxy", "=", "self", ".", "logmap", "(", "x", ",", "y", ",", "c", ")", "\n", "logyx", "=", "self", ".", "logmap", "(", "y", ",", "x", ",", "c", ")", "\n", "sqdist", "=", "torch", ".", "clamp", "(", "self", ".", "sqdist", "(", "x", ",", "y", ",", "c", ")", ",", "min", "=", "self", ".", "min_norm", ")", "\n", "alpha", "=", "self", ".", "minkowski_dot", "(", "logxy", ",", "u", ")", "/", "sqdist", "\n", "res", "=", "u", "-", "alpha", "*", "(", "logxy", "+", "logyx", ")", "\n", "return", "self", ".", "proj_tan", "(", "res", ",", "y", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.ptransp0": [[133, 147], ["x.narrow", "x.narrow", "torch.clamp", "torch.ones_like", "hyperboloid.Hyperboloid.proj_tan", "x.size", "torch.norm", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan"], ["", "def", "ptransp0", "(", "self", ",", "x", ",", "u", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "sqrtK", "=", "K", "**", "0.5", "\n", "x0", "=", "x", ".", "narrow", "(", "-", "1", ",", "0", ",", "1", ")", "\n", "d", "=", "x", ".", "size", "(", "-", "1", ")", "-", "1", "\n", "y", "=", "x", ".", "narrow", "(", "-", "1", ",", "1", ",", "d", ")", "\n", "y_norm", "=", "torch", ".", "clamp", "(", "torch", ".", "norm", "(", "y", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "min", "=", "self", ".", "min_norm", ")", "\n", "y_normalized", "=", "y", "/", "y_norm", "\n", "v", "=", "torch", ".", "ones_like", "(", "x", ")", "\n", "v", "[", ":", ",", "0", ":", "1", "]", "=", "-", "y_norm", "\n", "v", "[", ":", ",", "1", ":", "]", "=", "(", "sqrtK", "-", "x0", ")", "*", "y_normalized", "\n", "alpha", "=", "torch", ".", "sum", "(", "y_normalized", "*", "u", "[", ":", ",", "1", ":", "]", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "/", "sqrtK", "\n", "res", "=", "u", "-", "alpha", "*", "v", "\n", "return", "self", ".", "proj_tan", "(", "res", ",", "x", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.hyperboloid.Hyperboloid.to_poincare": [[148, 153], ["x.size", "x.narrow"], "methods", ["None"], ["", "def", "to_poincare", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "sqrtK", "=", "K", "**", "0.5", "\n", "d", "=", "x", ".", "size", "(", "-", "1", ")", "-", "1", "\n", "return", "sqrtK", "*", "x", ".", "narrow", "(", "-", "1", ",", "1", ",", "d", ")", "/", "(", "x", "[", ":", ",", "0", ":", "1", "]", "+", "sqrtK", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__": [[19, 24], ["manifolds.base.Manifold.__init__"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", ")", ":", "\n", "        ", "super", "(", "PoincareBall", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "'PoincareBall'", "\n", "self", ".", "min_norm", "=", "1e-15", "\n", "self", ".", "eps", "=", "{", "torch", ".", "float32", ":", "4e-3", ",", "torch", ".", "float64", ":", "1e-5", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.sqdist": [[25, 32], ["utils.math_utils.artanh", "poincare.PoincareBall.mobius_add().norm", "poincare.PoincareBall.mobius_add"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.artanh", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.mobius_add"], ["", "def", "sqdist", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "dist_c", "=", "artanh", "(", "\n", "sqrt_c", "*", "self", ".", "mobius_add", "(", "-", "p1", ",", "p2", ",", "c", ",", "dim", "=", "-", "1", ")", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "False", ")", "\n", ")", "\n", "dist", "=", "dist_c", "*", "2", "/", "sqrt_c", "\n", "return", "dist", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x": [[33, 36], ["torch.sum", "x.data.pow"], "methods", ["None"], ["", "def", "_lambda_x", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "x_sqnorm", "=", "torch", ".", "sum", "(", "x", ".", "data", ".", "pow", "(", "2", ")", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "return", "2", "/", "(", "1.", "-", "c", "*", "x_sqnorm", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.egrad2rgrad": [[37, 41], ["poincare.PoincareBall._lambda_x", "poincare.PoincareBall.pow"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x"], ["", "def", "egrad2rgrad", "(", "self", ",", "p", ",", "dp", ",", "c", ")", ":", "\n", "        ", "lambda_p", "=", "self", ".", "_lambda_x", "(", "p", ",", "c", ")", "\n", "dp", "/=", "lambda_p", ".", "pow", "(", "2", ")", "\n", "return", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj": [[42, 48], ["torch.clamp_min", "torch.where", "x.norm"], "methods", ["None"], ["", "def", "proj", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "norm", "=", "torch", ".", "clamp_min", "(", "x", ".", "norm", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ",", "p", "=", "2", ")", ",", "self", ".", "min_norm", ")", "\n", "maxnorm", "=", "(", "1", "-", "self", ".", "eps", "[", "x", ".", "dtype", "]", ")", "/", "(", "c", "**", "0.5", ")", "\n", "cond", "=", "norm", ">", "maxnorm", "\n", "projected", "=", "x", "/", "norm", "*", "maxnorm", "\n", "return", "torch", ".", "where", "(", "cond", ",", "projected", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan": [[49, 51], ["None"], "methods", ["None"], ["", "def", "proj_tan", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.proj_tan0": [[52, 54], ["None"], "methods", ["None"], ["", "def", "proj_tan0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap": [[55, 65], ["u.norm().clamp_min", "poincare.PoincareBall.mobius_add", "u.norm", "utils.math_utils.tanh", "poincare.PoincareBall._lambda_x"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.mobius_add", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.tanh", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x"], ["", "def", "expmap", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "u_norm", "=", "u", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "True", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "second_term", "=", "(", "\n", "tanh", "(", "sqrt_c", "/", "2", "*", "self", ".", "_lambda_x", "(", "p", ",", "c", ")", "*", "u_norm", ")", "\n", "*", "u", "\n", "/", "(", "sqrt_c", "*", "u_norm", ")", "\n", ")", "\n", "gamma_1", "=", "self", ".", "mobius_add", "(", "p", ",", "second_term", ",", "c", ")", "\n", "return", "gamma_1", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap": [[66, 72], ["poincare.PoincareBall.mobius_add", "poincare.PoincareBall.norm().clamp_min", "poincare.PoincareBall._lambda_x", "poincare.PoincareBall.norm", "utils.math_utils.artanh"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.mobius_add", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.artanh"], ["", "def", "logmap", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "sub", "=", "self", ".", "mobius_add", "(", "-", "p1", ",", "p2", ",", "c", ")", "\n", "sub_norm", "=", "sub", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "True", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "lam", "=", "self", ".", "_lambda_x", "(", "p1", ",", "c", ")", "\n", "sqrt_c", "=", "c", "**", "0.5", "\n", "return", "2", "/", "sqrt_c", "/", "lam", "*", "artanh", "(", "sqrt_c", "*", "sub_norm", ")", "*", "sub", "/", "sub_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.expmap0": [[73, 78], ["torch.clamp_min", "u.norm", "utils.math_utils.tanh"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.tanh"], ["", "def", "expmap0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "u_norm", "=", "torch", ".", "clamp_min", "(", "u", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "True", ")", ",", "self", ".", "min_norm", ")", "\n", "gamma_1", "=", "tanh", "(", "sqrt_c", "*", "u_norm", ")", "*", "u", "/", "(", "sqrt_c", "*", "u_norm", ")", "\n", "return", "gamma_1", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.logmap0": [[79, 84], ["p.norm().clamp_min", "p.norm", "utils.math_utils.artanh"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.artanh"], ["", "def", "logmap0", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "p_norm", "=", "p", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "True", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "scale", "=", "1.", "/", "sqrt_c", "*", "artanh", "(", "sqrt_c", "*", "p_norm", ")", "/", "p_norm", "\n", "return", "scale", "*", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.mobius_add": [[85, 92], ["x.pow().sum", "y.pow().sum", "denom.clamp_min", "x.pow", "y.pow"], "methods", ["None"], ["", "def", "mobius_add", "(", "self", ",", "x", ",", "y", ",", "c", ",", "dim", "=", "-", "1", ")", ":", "\n", "        ", "x2", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "y2", "=", "y", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "xy", "=", "(", "x", "*", "y", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "num", "=", "(", "1", "+", "2", "*", "c", "*", "xy", "+", "c", "*", "y2", ")", "*", "x", "+", "(", "1", "-", "c", "*", "x2", ")", "*", "y", "\n", "denom", "=", "1", "+", "2", "*", "c", "*", "xy", "+", "c", "**", "2", "*", "x2", "*", "y2", "\n", "return", "num", "/", "denom", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.mobius_matvec": [[93, 103], ["x.norm().clamp_min", "mx.norm().clamp_min", "torch.zeros", "torch.where", "m.transpose", "x.norm", "mx.norm", "utils.math_utils.tanh", "utils.math_utils.artanh"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.tanh", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.utils.math_utils.artanh"], ["", "def", "mobius_matvec", "(", "self", ",", "m", ",", "x", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "x_norm", "=", "x", ".", "norm", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ",", "p", "=", "2", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "mx", "=", "x", "@", "m", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "mx_norm", "=", "mx", ".", "norm", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ",", "p", "=", "2", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "res_c", "=", "tanh", "(", "mx_norm", "/", "x_norm", "*", "artanh", "(", "sqrt_c", "*", "x_norm", ")", ")", "*", "mx", "/", "(", "mx_norm", "*", "sqrt_c", ")", "\n", "cond", "=", "(", "mx", "==", "0", ")", ".", "prod", "(", "-", "1", ",", "keepdim", "=", "True", ",", "dtype", "=", "torch", ".", "uint8", ")", "\n", "res_0", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "res_c", ".", "dtype", ",", "device", "=", "res_c", ".", "device", ")", "\n", "res", "=", "torch", ".", "where", "(", "cond", ",", "res_0", ",", "res_c", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.init_weights": [[104, 107], ["w.data.uniform_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "w", ",", "c", ",", "irange", "=", "1e-5", ")", ":", "\n", "        ", "w", ".", "data", ".", "uniform_", "(", "-", "irange", ",", "irange", ")", "\n", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._gyration": [[108, 119], ["u.pow().sum", "v.pow().sum", "u.pow", "v.pow", "d.clamp_min"], "methods", ["None"], ["", "def", "_gyration", "(", "self", ",", "u", ",", "v", ",", "w", ",", "c", ",", "dim", ":", "int", "=", "-", "1", ")", ":", "\n", "        ", "u2", "=", "u", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "v2", "=", "v", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "uv", "=", "(", "u", "*", "v", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "uw", "=", "(", "u", "*", "w", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "vw", "=", "(", "v", "*", "w", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "c2", "=", "c", "**", "2", "\n", "a", "=", "-", "c2", "*", "uw", "*", "v2", "+", "c", "*", "vw", "+", "2", "*", "c2", "*", "uv", "*", "vw", "\n", "b", "=", "-", "c2", "*", "vw", "*", "u2", "-", "c", "*", "uw", "\n", "d", "=", "1", "+", "2", "*", "c", "*", "uv", "+", "c2", "*", "u2", "*", "v2", "\n", "return", "w", "+", "2", "*", "(", "a", "*", "u", "+", "b", "*", "v", ")", "/", "d", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.inner": [[120, 125], ["poincare.PoincareBall._lambda_x"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x"], ["", "def", "inner", "(", "self", ",", "x", ",", "c", ",", "u", ",", "v", "=", "None", ",", "keepdim", "=", "False", ")", ":", "\n", "        ", "if", "v", "is", "None", ":", "\n", "            ", "v", "=", "u", "\n", "", "lambda_x", "=", "self", ".", "_lambda_x", "(", "x", ",", "c", ")", "\n", "return", "lambda_x", "**", "2", "*", "(", "u", "*", "v", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "keepdim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.ptransp": [[126, 130], ["poincare.PoincareBall._lambda_x", "poincare.PoincareBall._lambda_x", "poincare.PoincareBall._gyration"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._gyration"], ["", "def", "ptransp", "(", "self", ",", "x", ",", "y", ",", "u", ",", "c", ")", ":", "\n", "        ", "lambda_x", "=", "self", ".", "_lambda_x", "(", "x", ",", "c", ")", "\n", "lambda_y", "=", "self", ".", "_lambda_x", "(", "y", ",", "c", ")", "\n", "return", "self", ".", "_gyration", "(", "y", ",", "-", "x", ",", "u", ",", "c", ")", "*", "lambda_x", "/", "lambda_y", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.ptransp_": [[131, 135], ["poincare.PoincareBall._lambda_x", "poincare.PoincareBall._lambda_x", "poincare.PoincareBall._gyration"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x", "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._gyration"], ["", "def", "ptransp_", "(", "self", ",", "x", ",", "y", ",", "u", ",", "c", ")", ":", "\n", "        ", "lambda_x", "=", "self", ".", "_lambda_x", "(", "x", ",", "c", ")", "\n", "lambda_y", "=", "self", ".", "_lambda_x", "(", "y", ",", "c", ")", "\n", "return", "self", ".", "_gyration", "(", "y", ",", "-", "x", ",", "u", ",", "c", ")", "*", "lambda_x", "/", "lambda_y", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.ptransp0": [[136, 139], ["poincare.PoincareBall._lambda_x", "poincare.PoincareBall.clamp_min"], "methods", ["home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall._lambda_x"], ["", "def", "ptransp0", "(", "self", ",", "x", ",", "u", ",", "c", ")", ":", "\n", "        ", "lambda_x", "=", "self", ".", "_lambda_x", "(", "x", ",", "c", ")", "\n", "return", "2", "*", "u", "/", "lambda_x", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ringbdstack_ace-hgnn.manifolds.poincare.PoincareBall.to_hyperboloid": [[140, 145], ["torch.norm", "torch.cat"], "methods", ["None"], ["", "def", "to_hyperboloid", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "K", "=", "1.", "/", "c", "\n", "sqrtK", "=", "K", "**", "0.5", "\n", "sqnorm", "=", "torch", ".", "norm", "(", "x", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "**", "2", "\n", "return", "sqrtK", "*", "torch", ".", "cat", "(", "[", "K", "+", "sqnorm", ",", "2", "*", "sqrtK", "*", "x", "]", ",", "dim", "=", "1", ")", "/", "(", "K", "-", "sqnorm", ")", "\n", "\n"]]}