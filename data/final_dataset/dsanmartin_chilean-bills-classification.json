{"home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.randomLines": [[5, 15], ["range", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "drops.append"], "function", ["None"], ["def", "randomLines", "(", "imshape", ",", "slant", ",", "drop_length", ",", "N", "=", "1500", ")", ":", "\n", "    ", "drops", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "if", "slant", "<", "0", ":", "\n", "            ", "x", "=", "np", ".", "random", ".", "randint", "(", "slant", ",", "imshape", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "imshape", "[", "1", "]", "-", "slant", ")", "\n", "y", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "imshape", "[", "0", "]", "-", "drop_length", ")", "\n", "drops", ".", "append", "(", "(", "x", ",", "y", ")", ")", "\n", "", "", "return", "drops", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.addLines": [[16, 29], ["image.copy", "numpy.random.randint", "dataset.randomLines", "cv2.line"], "function", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.randomLines"], ["", "def", "addLines", "(", "image", ",", "slant_extreme", "=", "10", ",", "drop_length", "=", "20", ",", "drop_width", "=", "2", ",", "drop_color", "=", "(", "200", ",", "200", ",", "200", ")", ")", ":", "\n", "    ", "new_img", "=", "image", ".", "copy", "(", ")", "\n", "imshape", "=", "new_img", ".", "shape", "\n", "slant", "=", "np", ".", "random", ".", "randint", "(", "-", "slant_extreme", ",", "slant_extreme", ")", "\n", "line_drops", "=", "randomLines", "(", "imshape", ",", "slant", ",", "drop_length", ")", "\n", "for", "line_drop", "in", "line_drops", ":", "\n", "        ", "cv2", ".", "line", "(", "\n", "new_img", ",", "\n", "(", "line_drop", "[", "0", "]", ",", "line_drop", "[", "1", "]", ")", ",", "\n", "(", "line_drop", "[", "0", "]", "+", "slant", ",", "line_drop", "[", "1", "]", "+", "drop_length", ")", ",", "\n", "drop_color", ",", "drop_width", "\n", ")", "\n", "", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.generateShadowCoordinates": [[30, 39], ["range", "range", "numpy.array", "vertices_list.append", "vertex.append", "numpy.random.uniform", "numpy.random.uniform"], "function", ["None"], ["", "def", "generateShadowCoordinates", "(", "imshape", ",", "no_of_shadows", "=", "1", ",", "poly_dim", "=", "10", ")", ":", "\n", "    ", "vertices_list", "=", "[", "]", "\n", "for", "index", "in", "range", "(", "no_of_shadows", ")", ":", "\n", "        ", "vertex", "=", "[", "]", "\n", "for", "dimensions", "in", "range", "(", "poly_dim", ")", ":", "## Dimensionality of the shadow polygon", "\n", "            ", "vertex", ".", "append", "(", "(", "imshape", "[", "1", "]", "*", "np", ".", "random", ".", "uniform", "(", ")", ",", "imshape", "[", "0", "]", "//", "3", "+", "imshape", "[", "0", "]", "*", "np", ".", "random", ".", "uniform", "(", ")", ")", ")", "\n", "", "vertices", "=", "np", ".", "array", "(", "[", "vertex", "]", ",", "dtype", "=", "np", ".", "int32", ")", "## single shadow vertices ", "\n", "vertices_list", ".", "append", "(", "vertices", ")", "\n", "", "return", "vertices_list", "## List of shadow vertices", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.addShadow": [[40, 55], ["image.copy", "cv2.cvtColor", "numpy.zeros_like", "dataset.generateShadowCoordinates", "cv2.cvtColor", "len", "cv2.cvtColor", "numpy.random.randint", "cv2.fillPoly", "len", "cv2.cvtColor"], "function", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.generateShadowCoordinates"], ["", "def", "addShadow", "(", "image", ",", "no_of_shadows", "=", "1", ")", ":", "\n", "    ", "new_img", "=", "image", ".", "copy", "(", ")", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "2", ":", "\n", "        ", "new_img", "=", "cv2", ".", "cvtColor", "(", "new_img", ",", "cv2", ".", "COLOR_GRAY2RGB", ")", "\n", "", "image_HLS", "=", "cv2", ".", "cvtColor", "(", "new_img", ",", "cv2", ".", "COLOR_RGB2HLS", ")", "## Conversion to HLS", "\n", "mask", "=", "np", ".", "zeros_like", "(", "new_img", ")", "\n", "imshape", "=", "image", ".", "shape", "\n", "vertices_list", "=", "generateShadowCoordinates", "(", "imshape", ",", "no_of_shadows", ",", "np", ".", "random", ".", "randint", "(", "3", ",", "30", ")", ")", "#3 getting list of shadow vertices", "\n", "for", "vertices", "in", "vertices_list", ":", "\n", "        ", "cv2", ".", "fillPoly", "(", "mask", ",", "vertices", ",", "255", ")", "## adding all shadow polygons on empty mask, single 255 denotes only red channel", "\n", "", "image_HLS", "[", ":", ",", ":", ",", "1", "]", "[", "mask", "[", ":", ",", ":", ",", "0", "]", "==", "255", "]", "=", "image_HLS", "[", ":", ",", ":", ",", "1", "]", "[", "mask", "[", ":", ",", ":", ",", "0", "]", "==", "255", "]", "*", "0.5", "## if red channel is hot, image's \"Lightness\" channel's brightness is lowered ", "\n", "new_img", "=", "cv2", ".", "cvtColor", "(", "image_HLS", ",", "cv2", ".", "COLOR_HLS2RGB", ")", "## Conversion to RGB", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "2", ":", "\n", "        ", "new_img", "=", "cv2", ".", "cvtColor", "(", "image_HLS", ",", "cv2", ".", "COLOR_RGB2GRAY", ")", "\n", "", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.addNoise": [[56, 65], ["image.copy", "image.copy", "numpy.random.randint", "numpy.random.randint", "cv2.randn", "len"], "function", ["None"], ["", "def", "addNoise", "(", "image", ",", "max_mean", "=", "100", ",", "max_std", "=", "100", ")", ":", "\n", "    ", "new_img", "=", "image", ".", "copy", "(", ")", "\n", "rand_n", "=", "image", ".", "copy", "(", ")", "\n", "chs", "=", "3", "if", "len", "(", "image", ".", "shape", ")", "==", "3", "else", "1", "\n", "mean", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "max_mean", ",", "chs", ")", "\n", "std", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "max_std", ",", "chs", ")", "\n", "cv2", ".", "randn", "(", "rand_n", ",", "mean", ",", "std", ")", "\n", "new_img", "+=", "rand_n", "\n", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.addBlur": [[66, 95], ["image.copy", "cv2.blur", "cv2.GaussianBlur", "cv2.medianBlur", "cv2.bilateralFilter"], "function", ["None"], ["", "def", "addBlur", "(", "image", ",", "kind", "=", "'avg'", ",", "**", "kwargs", ")", ":", "\n", "    ", "img_cp", "=", "image", ".", "copy", "(", ")", "\n", "\n", "if", "kind", "==", "'avg'", ":", "# Average", "\n", "        ", "k_size", "=", "(", "10", ",", "10", ")", "\n", "if", "'k_size'", "in", "kwargs", ":", "\n", "            ", "k_size", "=", "kwargs", "[", "'k_size'", "]", "\n", "", "new_img", "=", "cv2", ".", "blur", "(", "img_cp", ",", "k_size", ")", "\n", "\n", "", "elif", "kind", "==", "'gauss'", ":", "# Gaussian", "\n", "        ", "k_size", ",", "sigmaX", ",", "sigmaY", "=", "(", "5", ",", "5", ")", ",", "0", ",", "0", "# k_size odd numbers", "\n", "if", "'k_size'", "in", "kwargs", ":", "k_size", "=", "kwargs", "[", "'k_size'", "]", "\n", "if", "'sigmaX'", "in", "kwargs", ":", "sigmaX", "=", "kwargs", "[", "'sigmaX'", "]", "\n", "if", "'sigmaY'", "in", "kwargs", ":", "sigmaY", "=", "kwargs", "[", "'sigmaY'", "]", "\n", "new_img", "=", "cv2", ".", "GaussianBlur", "(", "img_cp", ",", "k_size", ",", "sigmaX", ",", "sigmaY", ")", "\n", "\n", "", "elif", "kind", "==", "'med'", ":", "# Median", "\n", "        ", "k_size", "=", "1", "\n", "if", "'k_size'", "in", "kwargs", "and", "kwargs", "[", "'k_size'", "]", "in", "[", "1", ",", "3", ",", "4", ",", "5", "]", ":", "k_size", "=", "kwargs", "[", "'k_size'", "]", "# Only 1, 3, 4, 5", "\n", "new_img", "=", "cv2", ".", "medianBlur", "(", "img_cp", ",", "k_size", ")", "\n", "\n", "", "elif", "kind", "==", "'bi'", ":", "# Bilateral", "\n", "        ", "d", ",", "color", ",", "space", "=", "5", ",", "75", ",", "75", "\n", "if", "'d'", "in", "kwargs", ":", "d", "=", "kwargs", "[", "'d'", "]", "\n", "if", "'color'", "in", "kwargs", ":", "color", "=", "kwargs", "[", "'color'", "]", "\n", "if", "'space'", "in", "kwargs", ":", "space", "=", "kwargs", "[", "'space'", "]", "\n", "new_img", "=", "cv2", ".", "bilateralFilter", "(", "img_cp", ",", "d", ",", "color", ",", "space", ")", "\n", "\n", "", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.addInv": [[96, 100], ["image.copy", "cv2.bitwise_not"], "function", ["None"], ["", "def", "addInv", "(", "image", ")", ":", "\n", "    ", "img_cp", "=", "image", ".", "copy", "(", ")", "\n", "new_img", "=", "cv2", ".", "bitwise_not", "(", "img_cp", ")", "\n", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.addLightColor": [[101, 109], ["image.copy", "numpy.array().astype", "cv2.LUT", "numpy.array", "numpy.arange"], "function", ["None"], ["", "def", "addLightColor", "(", "image", ",", "gamma", "=", "1.0", ",", "color", "=", "100", ")", ":", "\n", "    ", "img_cp", "=", "image", ".", "copy", "(", ")", "\n", "inv_gamma", "=", "1.0", "/", "gamma", "\n", "img_cp", "=", "(", "color", "-", "img_cp", ")", "\n", "table", "=", "np", ".", "array", "(", "[", "(", "(", "i", "/", "255.0", ")", "**", "inv_gamma", ")", "*", "255", "\n", "for", "i", "in", "np", ".", "arange", "(", "0", ",", "256", ")", "]", ")", ".", "astype", "(", "\"uint8\"", ")", "\n", "new_img", "=", "cv2", ".", "LUT", "(", "img_cp", ",", "table", ")", "\n", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.hueImage": [[110, 122], ["image.copy", "cv2.cvtColor", "numpy.where", "cv2.cvtColor", "len", "cv2.cvtColor", "len", "cv2.cvtColor"], "function", ["None"], ["", "def", "hueImage", "(", "image", ",", "saturation", "=", "100", ")", ":", "\n", "    ", "new_img", "=", "image", ".", "copy", "(", ")", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "2", ":", "\n", "        ", "new_img", "=", "cv2", ".", "cvtColor", "(", "new_img", ",", "cv2", ".", "COLOR_GRAY2RGB", ")", "\n", "", "new_img", "=", "cv2", ".", "cvtColor", "(", "new_img", ",", "cv2", ".", "COLOR_RGB2HSV", ")", "\n", "v", "=", "new_img", "[", ":", ",", ":", ",", "2", "]", "\n", "v", "=", "np", ".", "where", "(", "v", "<=", "255", "+", "saturation", ",", "v", "-", "saturation", ",", "255", ")", "\n", "new_img", "[", ":", ",", ":", ",", "2", "]", "=", "v", "\n", "new_img", "=", "cv2", ".", "cvtColor", "(", "new_img", ",", "cv2", ".", "COLOR_HSV2BGR", ")", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "2", ":", "\n", "        ", "new_img", "=", "cv2", ".", "cvtColor", "(", "new_img", ",", "cv2", ".", "COLOR_RGB2GRAY", ")", "\n", "", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.drawRectangles": [[123, 134], ["image.copy", "range", "numpy.random.randint", "cv2.rectangle", "len", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "np.random.randint.tolist"], "function", ["None"], ["", "def", "drawRectangles", "(", "image", ",", "shapes", "=", "3", ")", ":", "\n", "    ", "new_img", "=", "image", ".", "copy", "(", ")", "\n", "shape", "=", "image", ".", "shape", "\n", "line_type", "=", "cv2", ".", "LINE_AA", "\n", "chs", "=", "3", "if", "len", "(", "image", ".", "shape", ")", "==", "3", "else", "1", "\n", "for", "i", "in", "range", "(", "shapes", ")", ":", "\n", "        ", "rand_color", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "chs", ")", "\n", "pt1", "=", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "shape", "[", "1", "]", "+", "1", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "shape", "[", "0", "]", "+", "1", ")", ")", "\n", "pt2", "=", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "shape", "[", "1", "]", "+", "1", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "shape", "[", "0", "]", "+", "1", ")", ")", "\n", "cv2", ".", "rectangle", "(", "new_img", ",", "pt1", ",", "pt2", ",", "rand_color", ".", "tolist", "(", ")", ",", "-", "1", ",", "line_type", ",", "0", ")", "\n", "", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.drawEllipses": [[135, 149], ["image.copy", "range", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "cv2.ellipse", "len", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "np.random.randint.tolist"], "function", ["None"], ["", "def", "drawEllipses", "(", "image", ",", "shapes", "=", "3", ")", ":", "\n", "    ", "new_img", "=", "image", ".", "copy", "(", ")", "\n", "line_type", "=", "cv2", ".", "LINE_AA", "\n", "chs", "=", "3", "if", "len", "(", "image", ".", "shape", ")", "==", "3", "else", "1", "\n", "for", "i", "in", "range", "(", "shapes", ")", ":", "\n", "        ", "rand_color", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "chs", ")", "\n", "ct", "=", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "new_img", ".", "shape", "[", "1", "]", "+", "1", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "new_img", ".", "shape", "[", "0", "]", "+", "1", ")", ")", "\n", "ax", "=", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "new_img", ".", "shape", "[", "1", "]", "//", "2", "+", "1", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "new_img", ".", "shape", "[", "0", "]", "//", "2", "+", "1", ")", ")", "\n", "angle", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "361", ")", "\n", "st_ang", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "361", ")", "\n", "en_ang", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "361", ")", "\n", "cv2", ".", "ellipse", "(", "new_img", ",", "ct", ",", "ax", ",", "angle", ",", "st_ang", ",", "en_ang", ",", "\n", "rand_color", ".", "tolist", "(", ")", ",", "-", "1", ",", "line_type", ",", "0", ")", "\n", "", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.drawCircles": [[150, 160], ["image.copy", "range", "numpy.random.randint", "numpy.random.randint", "cv2.circle", "len", "numpy.random.randint", "numpy.random.randint", "np.random.randint.tolist"], "function", ["None"], ["", "def", "drawCircles", "(", "image", ",", "shapes", "=", "3", ",", "max_rad", "=", "50", ")", ":", "\n", "    ", "new_img", "=", "image", ".", "copy", "(", ")", "\n", "line_type", "=", "cv2", ".", "LINE_AA", "\n", "chs", "=", "3", "if", "len", "(", "image", ".", "shape", ")", "==", "3", "else", "1", "\n", "for", "i", "in", "range", "(", "shapes", ")", ":", "\n", "        ", "rand_color", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "chs", ")", "\n", "pt1", "=", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "new_img", ".", "shape", "[", "1", "]", "+", "1", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "new_img", ".", "shape", "[", "0", "]", "+", "1", ")", ")", "\n", "rad", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "max_rad", ")", "\n", "cv2", ".", "circle", "(", "new_img", ",", "pt1", ",", "rad", ",", "rand_color", ".", "tolist", "(", ")", ",", "-", "1", ",", "line_type", ",", "0", ")", "\n", "", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.imageLaplacian": [[161, 169], ["image.copy", "cv2.Laplacian"], "function", ["None"], ["", "def", "imageLaplacian", "(", "image", ",", "k_size", "=", "100", ")", ":", "\n", "    ", "new_img", "=", "image", ".", "copy", "(", ")", "\n", "ddepth", "=", "cv2", ".", "CV_8U", "\n", "#kernel_size = np.random.randint(0, max_k)", "\n", "#new_img = cv2.cvtColor(new_img, cv2.COLOR_BGR2GRAY)", "\n", "new_img", "=", "cv2", ".", "Laplacian", "(", "new_img", ",", "ddepth", ",", "k_size", ")", "\n", "#new_img = cv2.convertScaleAbs(new_img)", "\n", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.addCanvas": [[170, 208], ["image.copy", "numpy.random.randint", "numpy.zeros", "cv2.resize", "numpy.random.randint", "numpy.random.randint", "numpy.copy", "numpy.random.randint", "numpy.random.uniform", "cv2.getRotationMatrix2D", "cv2.warpAffine", "len", "numpy.array", "np.array.tolist", "numpy.sum", "numpy.array"], "function", ["None"], ["", "def", "addCanvas", "(", "image", ",", "height", ",", "width", ")", ":", "\n", "    ", "new", "=", "image", ".", "copy", "(", ")", "\n", "rand_color", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "3", ")", "\n", "shape", "=", "(", "height", ",", "width", ",", "3", ")", "\n", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "2", ":", "\n", "        ", "shape", "=", "shape", "[", ":", "2", "]", "\n", "rand_color", "=", "np", ".", "array", "(", "[", "np", ".", "sum", "(", "rand_color", "*", "np", ".", "array", "(", "[", "0.2989", ",", "0.5870", ",", "0.1140", "]", ")", ")", "]", ")", "\n", "\n", "", "canvas", "=", "np", ".", "zeros", "(", "shape", ",", "np", ".", "uint8", ")", "\n", "canvas", "[", ":", "]", "=", "rand_color", "\n", "\n", "# Resize image", "\n", "res", "=", "cv2", ".", "resize", "(", "new", ",", "None", ",", "fx", "=", ".15", ",", "fy", "=", ".15", ",", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "# Random position", "\n", "x_offset", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "\n", "y_offset", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "\n", "\n", "new", "=", "np", ".", "copy", "(", "canvas", ")", "\n", "\n", "new", "[", "y_offset", ":", "y_offset", "+", "res", ".", "shape", "[", "0", "]", ",", "x_offset", ":", "x_offset", "+", "res", ".", "shape", "[", "1", "]", "]", "=", "res", "\n", "\n", "# Image size", "\n", "(", "h", ",", "w", ")", "=", "new", ".", "shape", "[", ":", "2", "]", "\n", "center", "=", "(", "w", "//", "2", ",", "h", "//", "2", ")", "# Center", "\n", "\n", "# Random angle and scale", "\n", "angle", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "360", ")", "\n", "scale", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.25", ",", "high", "=", "2.0", ")", "\n", "\n", "# Rotation matrix", "\n", "M", "=", "cv2", ".", "getRotationMatrix2D", "(", "center", ",", "angle", ",", "scale", ")", "\n", "\n", "# New random sample", "\n", "new_img", "=", "cv2", ".", "warpAffine", "(", "new", ",", "M", ",", "(", "w", ",", "h", ")", ",", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "borderValue", "=", "rand_color", ".", "tolist", "(", ")", ")", "\n", "\n", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.randomSample": [[209, 228], ["image.copy", "numpy.random.choice", "dataset.addCanvas", "numpy.random.choice", "numpy.random.uniform", "fig", "numpy.random.uniform", "tran"], "function", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.addCanvas"], ["", "def", "randomSample", "(", "image", ",", "height", ",", "width", ",", "max_fig", "=", "1", ",", "max_tran", "=", "1", ",", "thr", "=", ".1", ")", ":", "\n", "    ", "new", "=", "image", ".", "copy", "(", ")", "\n", "\n", "figs", "=", "[", "drawRectangles", ",", "drawEllipses", ",", "drawCircles", "]", "\n", "figs_c", "=", "np", ".", "random", ".", "choice", "(", "figs", ",", "max_fig", ",", "replace", "=", "False", ")", "\n", "\n", "for", "fig", "in", "figs_c", ":", "\n", "        ", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<=", "thr", ":", "new", "=", "fig", "(", "new", ")", "\n", "\n", "# Add Canvas", "\n", "", "new", "=", "addCanvas", "(", "new", ",", "height", ",", "width", ")", "\n", "\n", "trans", "=", "[", "addLines", ",", "addNoise", ",", "addBlur", ",", "addInv", ",", "addLightColor", ",", "hueImage", ",", "imageLaplacian", "]", "\n", "trans_c", "=", "np", ".", "random", ".", "choice", "(", "trans", ",", "max_tran", ",", "replace", "=", "False", ")", "\n", "\n", "for", "tran", "in", "trans_c", ":", "\n", "        ", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<=", "thr", ":", "new", "=", "tran", "(", "new", ")", "\n", "\n", "", "return", "new", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.createDataset": [[229, 248], ["sum", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "len", "int", "range", "range", "X.reshape.reshape", "dataset.randomSample", "dataset.randomSample"], "function", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.randomSample", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.randomSample"], ["", "def", "createDataset", "(", "data_anv", ",", "data_rev", ",", "prop_anv", ",", "threshold", ",", "bills_per_class", ",", "height", ",", "width", ",", "color", ")", ":", "\n", "    ", "N", "=", "sum", "(", "bills_per_class", ")", "\n", "if", "color", ":", "X", "=", "np", ".", "zeros", "(", "(", "N", ",", "height", ",", "width", ",", "3", ")", ",", "np", ".", "uint8", ")", "\n", "else", ":", "X", "=", "np", ".", "zeros", "(", "(", "N", ",", "height", ",", "width", ")", ")", "\n", "y", "=", "np", ".", "zeros", "(", "N", ",", "dtype", "=", "int", ")", "\n", "n", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "bills_per_class", ")", ")", ":", "\n", "        ", "n_anv", "=", "int", "(", "prop_anv", "[", "i", "]", "*", "bills_per_class", "[", "i", "]", ")", "\n", "n_rev", "=", "(", "bills_per_class", "[", "i", "]", "-", "n_anv", ")", "\n", "for", "a", "in", "range", "(", "n_anv", ")", ":", "\n", "            ", "X", "[", "n", "]", "=", "randomSample", "(", "data_anv", "[", "i", "]", ",", "height", ",", "width", ",", "thr", "=", "threshold", "[", "i", "]", ")", "\n", "y", "[", "n", "]", "=", "i", "\n", "n", "+=", "1", "\n", "", "for", "r", "in", "range", "(", "n_rev", ")", ":", "\n", "            ", "X", "[", "n", "]", "=", "randomSample", "(", "data_rev", "[", "i", "]", ",", "height", ",", "width", ",", "thr", "=", "threshold", "[", "i", "]", ")", "\n", "y", "[", "n", "]", "=", "i", "\n", "n", "+=", "1", "\n", "", "", "if", "not", "color", ":", "X", "=", "X", ".", "reshape", "(", "N", ",", "height", ",", "width", ",", "1", ")", "# For Keras Convolution", "\n", "return", "X", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.saveDataset": [[249, 251], ["numpy.savez_compressed"], "function", ["None"], ["", "def", "saveDataset", "(", "X", ",", "y", ",", "path", ")", ":", "\n", "    ", "np", ".", "savez_compressed", "(", "path", "+", "'data'", ",", "X", "=", "X", ",", "y", "=", "y", ")", "\n", "#np.save(path + 'X', X)", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.loadBills": [[254, 270], ["list", "list", "cv2.cvtColor", "cv2.cvtColor", "list.append", "list.append", "cv2.imread", "cv2.imread"], "function", ["None"], ["", "def", "loadBills", "(", "bills", ",", "path", ",", "ext", ",", "color", ")", ":", "\n", "    ", "data_anv", "=", "list", "(", ")", "\n", "data_rev", "=", "list", "(", ")", "\n", "\n", "TRAN_COLOR", "=", "cv2", ".", "COLOR_BGR2RGB", "if", "color", "else", "cv2", ".", "COLOR_BGR2GRAY", "\n", "\n", "# Load bills pictures", "\n", "for", "bill", "in", "bills", ":", "\n", "        ", "path_anv", "=", "path", "+", "bill", "+", "'/anverso'", "+", "ext", "\n", "path_rev", "=", "path", "+", "bill", "+", "'/reverso'", "+", "ext", "\n", "load_anv", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "path_anv", ",", "1", ")", ",", "TRAN_COLOR", ")", "\n", "load_rev", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "path_rev", ",", "1", ")", ",", "TRAN_COLOR", ")", "\n", "data_anv", ".", "append", "(", "load_anv", ")", "\n", "data_rev", ".", "append", "(", "load_rev", ")", "\n", "\n", "", "return", "data_anv", ",", "data_rev", "\n", "", ""]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.post.plotAcc": [[12, 26], ["matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.legend", "numpy.arange", "numpy.arange", "matplotlib.show", "matplotlib.savefig", "matplotlib.close", "len", "len"], "function", ["None"], ["def", "plotAcc", "(", "acc", ",", "val_acc", ",", "path", "=", "None", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "len", "(", "acc", ")", ")", ",", "acc", ",", "'b-*'", ",", "label", "=", "'Acc'", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "len", "(", "val_acc", ")", ")", ",", "val_acc", ",", "'r-x'", ",", "label", "=", "'Val Acc'", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'Accuracy'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "if", "path", "is", "None", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "savefig", "(", "path", "+", "'acc_plot.png'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.post.plotLoss": [[27, 41], ["matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.legend", "numpy.arange", "numpy.arange", "matplotlib.show", "matplotlib.savefig", "matplotlib.close", "len", "len"], "function", ["None"], ["", "def", "plotLoss", "(", "loss", ",", "val_loss", ",", "path", "=", "None", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "len", "(", "loss", ")", ")", ",", "loss", ",", "'b-*'", ",", "label", "=", "'Loss'", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "len", "(", "val_loss", ")", ")", ",", "val_loss", ",", "'r-x'", ",", "label", "=", "'Val Loss'", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "if", "path", "is", "None", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "savefig", "(", "path", "+", "'loss_plot.png'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.post.plot_confusion_matrix": [[42, 105], ["sklearn.metrics.confusion_matrix", "print", "matplotlib.figure", "plt.figure.add_subplot", "fig.add_subplot.imshow", "fig.add_subplot.figure.colorbar", "fig.add_subplot.set", "matplotlib.setp", "range", "print", "print", "numpy.savetxt", "fig.add_subplot.get_xticklabels", "sklearn.metrics.confusion_matrix.max", "range", "matplotlib.show", "matplotlib.savefig", "matplotlib.close", "sklearn.utils.multiclass.unique_labels", "sklearn.metrics.confusion_matrix.astype", "numpy.arange", "numpy.arange", "fig.add_subplot.text", "sklearn.metrics.confusion_matrix.sum", "format"], "function", ["None"], ["", "def", "plot_confusion_matrix", "(", "y_true", ",", "y_pred", ",", "classes", ",", "\n", "normalize", "=", "False", ",", "\n", "title", "=", "None", ",", "\n", "cmap", "=", "plt", ".", "cm", ".", "Blues", ",", "\n", "path", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    This function prints and plots the confusion matrix.\n    Normalization can be applied by setting `normalize=True`.\n    \"\"\"", "\n", "if", "not", "title", ":", "\n", "        ", "if", "normalize", ":", "\n", "            ", "title", "=", "'Normalized confusion matrix'", "\n", "", "else", ":", "\n", "            ", "title", "=", "'Confusion matrix, without normalization'", "\n", "\n", "# Compute confusion matrix", "\n", "", "", "cm", "=", "confusion_matrix", "(", "y_true", ",", "y_pred", ")", "\n", "# Only use the labels that appear in the data", "\n", "classes", "=", "classes", "[", "unique_labels", "(", "y_true", ",", "y_pred", ")", "]", "\n", "if", "normalize", ":", "\n", "        ", "cm", "=", "cm", ".", "astype", "(", "'float'", ")", "/", "cm", ".", "sum", "(", "axis", "=", "1", ")", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "print", "(", "\"Normalized confusion matrix\"", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Confusion matrix, without normalization'", ")", "\n", "\n", "", "if", "path", "is", "not", "None", ":", "\n", "#np.save(path + 'cm.npy', cm)", "\n", "        ", "np", ".", "savetxt", "(", "path", "+", "'cm.txt'", ",", "cm", ",", "delimiter", "=", "','", ",", "fmt", "=", "'%d'", ")", "\n", "", "print", "(", "cm", ")", "\n", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "#fig, ax = plt.subplots()", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ")", "\n", "im", "=", "ax", ".", "imshow", "(", "cm", ",", "interpolation", "=", "'nearest'", ",", "cmap", "=", "cmap", ")", "\n", "ax", ".", "figure", ".", "colorbar", "(", "im", ",", "ax", "=", "ax", ")", "\n", "# We want to show all ticks...", "\n", "ax", ".", "set", "(", "xticks", "=", "np", ".", "arange", "(", "cm", ".", "shape", "[", "1", "]", ")", ",", "\n", "yticks", "=", "np", ".", "arange", "(", "cm", ".", "shape", "[", "0", "]", ")", ",", "\n", "# ... and label them with the respective list entries", "\n", "xticklabels", "=", "classes", ",", "yticklabels", "=", "classes", ",", "\n", "title", "=", "title", ",", "\n", "ylabel", "=", "'True label'", ",", "\n", "xlabel", "=", "'Predicted label'", ")", "\n", "\n", "# Rotate the tick labels and set their alignment.", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "rotation", "=", "45", ",", "ha", "=", "\"right\"", ",", "\n", "rotation_mode", "=", "\"anchor\"", ")", "\n", "\n", "# Loop over data dimensions and create text annotations.", "\n", "fmt", "=", "'.2f'", "if", "normalize", "else", "'d'", "\n", "thresh", "=", "cm", ".", "max", "(", ")", "/", "2.", "\n", "for", "i", "in", "range", "(", "cm", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "cm", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "ax", ".", "text", "(", "j", ",", "i", ",", "format", "(", "cm", "[", "i", ",", "j", "]", ",", "fmt", ")", ",", "\n", "ha", "=", "\"center\"", ",", "va", "=", "\"center\"", ",", "\n", "color", "=", "\"white\"", "if", "cm", "[", "i", ",", "j", "]", ">", "thresh", "else", "\"black\"", ")", "\n", "#fig.tight_layout()", "\n", "", "", "if", "path", "is", "None", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "savefig", "(", "path", "+", "'confusion_matrix.png'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.post.main": [[106, 156], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "print", "post.plotLoss", "post.plotAcc", "print", "numpy.load", "print", "numpy.load", "numpy.argmax", "numpy.argmax", "print", "sklearn.metrics.classification_report", "json.dump", "print", "post.plot_confusion_matrix", "open", "json.load", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "open", "sklearn.metrics.classification_report", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.post.plotLoss", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.post.plotAcc", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.post.plot_confusion_matrix"], ["", "def", "main", "(", ")", ":", "\n", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--dir'", ",", "'-d'", ",", "help", "=", "\"Input directory.\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "input_dir", "=", "args", ".", "dir", "\n", "\n", "print", "(", "\"Loading history...\"", ")", "\n", "\n", "# Show loss function", "\n", "with", "open", "(", "input_dir", "+", "'history.json'", ")", "as", "json_file", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "json_file", ")", "\n", "loss", "=", "np", ".", "array", "(", "data", "[", "'loss'", "]", ")", "\n", "val_loss", "=", "np", ".", "array", "(", "data", "[", "'val_loss'", "]", ")", "\n", "acc", "=", "np", ".", "array", "(", "data", "[", "'acc'", "]", ")", "\n", "val_acc", "=", "np", ".", "array", "(", "data", "[", "'val_acc'", "]", ")", "\n", "\n", "", "plotLoss", "(", "loss", ",", "val_loss", ",", "input_dir", ")", "\n", "plotAcc", "(", "acc", ",", "val_acc", ",", "input_dir", ")", "\n", "\n", "\n", "print", "(", "\"Loading testing data...\"", ")", "\n", "# Load test data", "\n", "test", "=", "np", ".", "load", "(", "input_dir", "+", "'test.npz'", ")", "\n", "#X_test = test['X']", "\n", "y_test", "=", "test", "[", "'y'", "]", "\n", "\n", "# Load model", "\n", "#model = load_model(input_dir  + 'model.h5')", "\n", "\n", "print", "(", "\"Loading predition...\"", ")", "\n", "# Prediction", "\n", "#pred = model.predict(X_test)", "\n", "pred", "=", "np", ".", "load", "(", "input_dir", "+", "'prediction.npz'", ")", "\n", "\n", "# Softmax output to categorical", "\n", "y_pred", "=", "np", ".", "argmax", "(", "pred", "[", "'y_pred'", "]", ",", "axis", "=", "1", ",", "out", "=", "None", ")", "\n", "y_real", "=", "np", ".", "argmax", "(", "y_test", ",", "axis", "=", "1", ",", "out", "=", "None", ")", "\n", "\n", "print", "(", "\"Evaluation\"", ")", "\n", "# Show results", "\n", "#print('Accuracy score: %f' % accuracy_score(y_real, y_pred))", "\n", "#print('F1 score: %f' % f1_score(y_real, y_pred, average='macro'))", "\n", "names_", "=", "[", "'1000'", ",", "'2000'", ",", "'5000'", ",", "'10000'", ",", "'20000'", "]", "\n", "\n", "report", "=", "classification_report", "(", "y_real", ",", "y_pred", ",", "target_names", "=", "names_", ",", "digits", "=", "6", ",", "output_dict", "=", "True", ")", "\n", "json", ".", "dump", "(", "report", ",", "open", "(", "input_dir", "+", "'class_report.json'", ",", "'w'", ")", ")", "\n", "print", "(", "classification_report", "(", "y_real", ",", "y_pred", ",", "target_names", "=", "names_", ",", "digits", "=", "6", ")", ")", "\n", "plot_confusion_matrix", "(", "y_real", ",", "y_pred", ",", "np", ".", "arange", "(", "5", ")", ",", "path", "=", "input_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.preprocessing.rescale": [[7, 9], ["None"], "function", ["None"], ["def", "rescale", "(", "X", ")", ":", "\n", "    ", "return", "X", "/", "255.0", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.preprocessing.dataSplit": [[10, 20], ["sklearn.model_selection.train_test_split", "sklearn.model_selection.train_test_split", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "keras.utils.np_utils.to_categorical", "numpy.savez_compressed"], "function", ["None"], ["", "def", "dataSplit", "(", "X", ",", "y", ",", "test_size", "=", "0.33", ",", "path", "=", "'./'", ")", ":", "\n", "    ", "X_tr", ",", "X_test", ",", "y_tr", ",", "y_test", "=", "train_test_split", "(", "X", ",", "y", ",", "test_size", "=", "test_size", ",", "random_state", "=", "SEED", ",", "stratify", "=", "y", ")", "\n", "X_train", ",", "X_val", ",", "y_train", ",", "y_val", "=", "train_test_split", "(", "X_tr", ",", "y_tr", ",", "test_size", "=", "test_size", ",", "random_state", "=", "SEED", ",", "stratify", "=", "y_tr", ")", "\n", "y_train", "=", "np_utils", ".", "to_categorical", "(", "y_train", ")", "\n", "y_test", "=", "np_utils", ".", "to_categorical", "(", "y_test", ")", "\n", "y_val", "=", "np_utils", ".", "to_categorical", "(", "y_val", ")", "\n", "\n", "np", ".", "savez_compressed", "(", "path", "+", "'test'", ",", "X", "=", "X_test", ",", "y", "=", "y_test", ")", "\n", "\n", "return", "X_train", ",", "y_train", ",", "X_val", ",", "y_val", ",", "X_test", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.experiment.main": [[32, 85], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "datetime.datetime.today().strftime", "pathlib.Path().mkdir", "numpy.load", "preprocessing.rescale", "alexnet.Alexnet", "alexnet.Alexnet.compile", "preprocessing.dataSplit", "alexnet.Alexnet.fit", "alexnet.Alexnet.predict", "alexnet.Alexnet.evaluate", "alexnet.Alexnet.saveParameters", "print", "alexnet.Alexnet.save", "datetime.datetime.today", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.preprocessing.rescale", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.compile", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.preprocessing.dataSplit", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.fit", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.predict", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.evaluate", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.saveParameters", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.save"], ["def", "main", "(", ")", ":", "\n", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--dir'", ",", "'-d'", ",", "help", "=", "\"Input directory.\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--lrate'", ",", "'-l'", ",", "help", "=", "\"SGD learning rate.\"", ",", "type", "=", "float", ",", "default", "=", "LR", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "'-m'", ",", "help", "=", "\"SGD momentum.\"", ",", "type", "=", "float", ",", "default", "=", "MOM", ")", "\n", "parser", ".", "add_argument", "(", "'--decay'", ",", "'-y'", ",", "help", "=", "\"SGD decay.\"", ",", "type", "=", "float", ",", "default", "=", "DEC", ")", "\n", "parser", ".", "add_argument", "(", "'--nesterov'", ",", "'-n'", ",", "help", "=", "\"SGD nesterov.\"", ",", "type", "=", "int", ",", "default", "=", "NES", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "'-e'", ",", "help", "=", "\"Number of epochs.\"", ",", "type", "=", "int", ",", "default", "=", "EPOCHS", ")", "\n", "parser", ".", "add_argument", "(", "'--batch'", ",", "'-b'", ",", "help", "=", "\"Batch size.\"", ",", "type", "=", "int", ",", "default", "=", "BATCH", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "'-v'", ",", "help", "=", "\"Show training info.\"", ",", "type", "=", "int", ",", "default", "=", "VERBOSE", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "input_dir", "=", "args", ".", "dir", "\n", "lr", "=", "args", ".", "lrate", "\n", "mom", "=", "args", ".", "momentum", "\n", "dec", "=", "args", ".", "decay", "\n", "nes", "=", "args", ".", "nesterov", "\n", "epochs", "=", "args", ".", "epochs", "\n", "batch", "=", "args", ".", "batch", "\n", "verbose", "=", "args", ".", "verbose", "\n", "\n", "# Experiment ID", "\n", "folder", "=", "datetime", ".", "today", "(", ")", ".", "strftime", "(", "'%Y%m%d%H%M%S'", ")", "\n", "\n", "# Output folder", "\n", "output_dir", "=", "DIR_OUT", "+", "folder", "+", "'/'", "\n", "pathlib", ".", "Path", "(", "output_dir", ")", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "# Load dataset", "\n", "data", "=", "np", ".", "load", "(", "input_dir", "+", "'data.npz'", ")", "\n", "X", "=", "data", "[", "'X'", "]", "\n", "y", "=", "data", "[", "'y'", "]", "\n", "\n", "Xr", "=", "rescale", "(", "X", ")", "\n", "\n", "# Model", "\n", "model", "=", "Alexnet", "(", "X", "[", "0", "]", ".", "shape", ",", "output_dir", ",", "NEURONS", ")", "\n", "model", ".", "compile", "(", "lr", ",", "mom", ",", "dec", ",", "nes", ")", "\n", "\n", "X_train", ",", "y_train", ",", "X_val", ",", "y_val", ",", "X_test", ",", "y_test", "=", "dataSplit", "(", "Xr", ",", "y", ",", "path", "=", "output_dir", ")", "\n", "\n", "hist", "=", "model", ".", "fit", "(", "X_train", ",", "y_train", ",", "X_val", ",", "y_val", ",", "epochs", ",", "batch", ",", "verbose", ")", "\n", "\n", "y_pred", "=", "model", ".", "predict", "(", "X_test", ")", "\n", "\n", "eva", "=", "model", ".", "evaluate", "(", "X_test", ",", "y_test", ")", "\n", "\n", "model", ".", "saveParameters", "(", "{", "'id'", ":", "folder", ",", "'input_dir'", ":", "input_dir", ",", "'neurons'", ":", "NEURONS", ",", "'lr'", ":", "lr", ",", "'mom'", ":", "mom", ",", "'dec'", ":", "dec", ",", "'nes'", ":", "nes", ",", "'epochs'", ":", "epochs", ",", "'batch'", ":", "batch", "}", ")", "\n", "\n", "print", "(", "folder", ")", "\n", "\n", "model", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.__init__": [[16, 23], ["alexnet.Alexnet.createModel"], "methods", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.createModel"], ["    ", "def", "__init__", "(", "self", ",", "input_shape", ",", "output_dir", ",", "neurons", ",", "n_classes", "=", "5", ",", "l2_reg", "=", "0.", ",", "weights", "=", "None", ")", ":", "\n", "        ", "self", ".", "input_shape", "=", "input_shape", "\n", "self", ".", "output_dir", "=", "output_dir", "\n", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "l2_reg", "=", "l2_reg", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "model", "=", "self", ".", "createModel", "(", "neurons", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.createModel": [[25, 85], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.layers.convolutional.Conv2D", "keras.layers.normalization.BatchNormalization", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.convolutional.Conv2D", "keras.layers.normalization.BatchNormalization", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.convolutional.ZeroPadding2D", "keras.layers.convolutional.Conv2D", "keras.layers.normalization.BatchNormalization", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.convolutional.ZeroPadding2D", "keras.layers.convolutional.Conv2D", "keras.layers.normalization.BatchNormalization", "keras.layers.core.Activation", "keras.layers.convolutional.ZeroPadding2D", "keras.layers.convolutional.Conv2D", "keras.layers.normalization.BatchNormalization", "keras.layers.core.Activation", "keras.layers.convolutional.MaxPooling2D", "keras.layers.core.Flatten", "keras.layers.core.Dense", "keras.layers.normalization.BatchNormalization", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.normalization.BatchNormalization", "keras.layers.core.Activation", "keras.layers.core.Dropout", "keras.layers.core.Dense", "keras.layers.normalization.BatchNormalization", "keras.layers.core.Activation", "keras.models.Sequential.load_weights", "keras.regularizers.l2"], "methods", ["None"], ["", "def", "createModel", "(", "self", ",", "neurons", ")", ":", "\n", "\n", "# Initialize model", "\n", "    \t", "alexnet", "=", "Sequential", "(", ")", "\n", "\n", "# Layer 1", "\n", "alexnet", ".", "add", "(", "Conv2D", "(", "neurons", "[", "0", "]", ",", "(", "11", ",", "11", ")", ",", "input_shape", "=", "self", ".", "input_shape", ",", "\n", "padding", "=", "'same'", ",", "kernel_regularizer", "=", "l2", "(", "self", ".", "l2_reg", ")", ")", ")", "\n", "alexnet", ".", "add", "(", "BatchNormalization", "(", ")", ")", "\n", "alexnet", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "alexnet", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "# Layer 2", "\n", "alexnet", ".", "add", "(", "Conv2D", "(", "neurons", "[", "1", "]", ",", "(", "5", ",", "5", ")", ",", "padding", "=", "'same'", ")", ")", "\n", "alexnet", ".", "add", "(", "BatchNormalization", "(", ")", ")", "\n", "alexnet", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "alexnet", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "# Layer 3", "\n", "alexnet", ".", "add", "(", "ZeroPadding2D", "(", "(", "1", ",", "1", ")", ")", ")", "\n", "alexnet", ".", "add", "(", "Conv2D", "(", "neurons", "[", "2", "]", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ")", ")", "\n", "alexnet", ".", "add", "(", "BatchNormalization", "(", ")", ")", "\n", "alexnet", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "alexnet", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "# Layer 4", "\n", "alexnet", ".", "add", "(", "ZeroPadding2D", "(", "(", "1", ",", "1", ")", ")", ")", "\n", "alexnet", ".", "add", "(", "Conv2D", "(", "neurons", "[", "3", "]", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ")", ")", "\n", "alexnet", ".", "add", "(", "BatchNormalization", "(", ")", ")", "\n", "alexnet", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "\n", "# Layer 5", "\n", "alexnet", ".", "add", "(", "ZeroPadding2D", "(", "(", "1", ",", "1", ")", ")", ")", "\n", "alexnet", ".", "add", "(", "Conv2D", "(", "neurons", "[", "4", "]", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ")", ")", "\n", "alexnet", ".", "add", "(", "BatchNormalization", "(", ")", ")", "\n", "alexnet", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "alexnet", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "# Layer 6", "\n", "alexnet", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "alexnet", ".", "add", "(", "Dense", "(", "neurons", "[", "5", "]", ")", ")", "\n", "alexnet", ".", "add", "(", "BatchNormalization", "(", ")", ")", "\n", "alexnet", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "alexnet", ".", "add", "(", "Dropout", "(", "0.5", ")", ")", "\n", "\n", "# Layer 7", "\n", "alexnet", ".", "add", "(", "Dense", "(", "neurons", "[", "6", "]", ")", ")", "\n", "alexnet", ".", "add", "(", "BatchNormalization", "(", ")", ")", "\n", "alexnet", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "alexnet", ".", "add", "(", "Dropout", "(", "0.5", ")", ")", "\n", "\n", "# Layer 8", "\n", "alexnet", ".", "add", "(", "Dense", "(", "self", ".", "n_classes", ")", ")", "\n", "alexnet", ".", "add", "(", "BatchNormalization", "(", ")", ")", "\n", "alexnet", ".", "add", "(", "Activation", "(", "'softmax'", ")", ")", "\n", "\n", "if", "self", ".", "weights", "is", "not", "None", ":", "\n", "    \t\t", "alexnet", ".", "load_weights", "(", "self", ".", "weights", ")", "\n", "\n", "", "return", "alexnet", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.compile": [[87, 92], ["keras.optimizers.SGD", "alexnet.Alexnet.model.compile"], "methods", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.compile"], ["", "def", "compile", "(", "self", ",", "lr", "=", "0.1", ",", "momentum", "=", "0.0", ",", "decay", "=", "0.0", ",", "nesterov", "=", "False", ")", ":", "\n", "        ", "sgd", "=", "SGD", "(", "lr", "=", "lr", ",", "momentum", "=", "momentum", ",", "decay", "=", "decay", ",", "nesterov", "=", "nesterov", ")", "\n", "self", ".", "model", ".", "compile", "(", "optimizer", "=", "sgd", ",", "\n", "loss", "=", "losses", ".", "categorical_crossentropy", ",", "\n", "metrics", "=", "[", "'accuracy'", ",", "metrics", ".", "categorical_accuracy", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.fit": [[93, 101], ["alexnet.Alexnet.model.fit", "json.dump", "open"], "methods", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.fit"], ["", "def", "fit", "(", "self", ",", "X_train", ",", "y_train", ",", "X_val", ",", "y_val", ",", "epochs", "=", "10", ",", "batch_size", "=", "10", ",", "verbose", "=", "1", ",", "save", "=", "True", ")", ":", "\n", "        ", "hist", "=", "self", ".", "model", ".", "fit", "(", "X_train", ",", "y_train", ",", "epochs", "=", "epochs", ",", "\n", "batch_size", "=", "batch_size", ",", "verbose", "=", "verbose", ",", "\n", "validation_data", "=", "(", "X_val", ",", "y_val", ")", ")", "\n", "if", "save", ":", "\n", "            ", "json", ".", "dump", "(", "hist", ".", "history", ",", "open", "(", "self", ".", "output_dir", "+", "'history.json'", ",", "'w'", ")", ")", "\n", "\n", "", "return", "hist", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.predict": [[102, 107], ["alexnet.Alexnet.model.predict", "numpy.savez_compressed"], "methods", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.predict"], ["", "def", "predict", "(", "self", ",", "X", ",", "save", "=", "True", ")", ":", "\n", "        ", "pred", "=", "self", ".", "model", ".", "predict", "(", "X", ")", "\n", "if", "save", ":", "\n", "            ", "np", ".", "savez_compressed", "(", "self", ".", "output_dir", "+", "'prediction'", ",", "y_pred", "=", "pred", ")", "\n", "", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.evaluate": [[108, 119], ["alexnet.Alexnet.model.evaluate", "json.dump", "open"], "methods", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.evaluate"], ["", "def", "evaluate", "(", "self", ",", "X", ",", "y", ",", "save", "=", "True", ")", ":", "\n", "        ", "eva", "=", "self", ".", "model", ".", "evaluate", "(", "X", ",", "y", ")", "\n", "if", "save", ":", "\n", "            ", "out", "=", "{", "\n", "'test_loss'", ":", "eva", "[", "0", "]", ",", "\n", "'test_acc'", ":", "eva", "[", "1", "]", ",", "\n", "'test_cat_acc'", ":", "eva", "[", "2", "]", "\n", "}", "\n", "json", ".", "dump", "(", "out", ",", "open", "(", "self", ".", "output_dir", "+", "'evaluation.json'", ",", "'w'", ")", ")", "\n", "\n", "", "return", "eva", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.summary": [[120, 126], ["alexnet.Alexnet.model.summary", "open", "alexnet.Alexnet.model.summary", "fh.write"], "methods", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.summary", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.summary"], ["", "def", "summary", "(", "self", ",", "save", "=", "False", ")", ":", "\n", "        ", "if", "save", ":", "\n", "            ", "with", "open", "(", "self", ".", "output_dir", "+", "'summary.txt'", ",", "'w'", ")", "as", "fh", ":", "\n", "                ", "self", ".", "model", ".", "summary", "(", "print_fn", "=", "lambda", "x", ":", "fh", ".", "write", "(", "x", "+", "'\\n'", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "self", ".", "model", ".", "summary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.save": [[127, 132], ["alexnet.Alexnet.model.save_weights", "alexnet.Alexnet.model.save"], "methods", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.save"], ["", "", "def", "save", "(", "self", ",", "only_weights", "=", "True", ")", ":", "\n", "        ", "if", "only_weights", ":", "\n", "            ", "self", ".", "model", ".", "save_weights", "(", "self", ".", "output_dir", "+", "'model_weights.h5'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "model", ".", "save", "(", "self", ".", "output_dir", "+", "'model.h5'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.alexnet.Alexnet.saveParameters": [[133, 135], ["json.dump", "open"], "methods", ["None"], ["", "", "def", "saveParameters", "(", "self", ",", "params", ")", ":", "\n", "        ", "json", ".", "dump", "(", "params", ",", "open", "(", "self", ".", "output_dir", "+", "'parameters.json'", ",", "'w'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.pre.main": [[27, 62], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "datetime.datetime.today().strftime", "pathlib.Path().mkdir", "dataset.loadBills", "dataset.createDataset", "dataset.saveDataset", "print", "open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.close", "datetime.datetime.today", "pathlib.Path", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.loadBills", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.createDataset", "home.repos.pwc.inspect_result.dsanmartin_chilean-bills-classification.None.dataset.saveDataset"], ["def", "main", "(", ")", ":", "\n", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--width'", ",", "'-w'", ",", "help", "=", "\"Image width.\"", ",", "type", "=", "int", ",", "default", "=", "WIDTH", ")", "\n", "parser", ".", "add_argument", "(", "'--height'", ",", "'-t'", ",", "help", "=", "\"Image height.\"", ",", "type", "=", "int", ",", "default", "=", "HEIGHT", ")", "\n", "parser", ".", "add_argument", "(", "'--color'", ",", "'-c'", ",", "help", "=", "\"Image color. 0: grayscale, 1: color.\"", ",", "type", "=", "int", ",", "default", "=", "COLOR", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "folder", "=", "datetime", ".", "today", "(", ")", ".", "strftime", "(", "'%Y%m%d%H%M%S'", ")", "\n", "output", "=", "ARRAY_DIR", "+", "folder", "+", "'/'", "\n", "pathlib", ".", "Path", "(", "output", ")", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "# Load bills", "\n", "data_anv", ",", "data_rev", "=", "loadBills", "(", "BILLS", ",", "BILLS_DIR", ",", "EXT", ",", "args", ".", "color", ")", "\n", "\n", "# Create dataset", "\n", "pa", "=", "[", ".5", "]", "*", "5", "# Number of heads", "\n", "th", "=", "[", ".1", "]", "*", "5", "# Threshold", "\n", "bc", "=", "[", "10", "]", "*", "5", "# Number of bills per class", "\n", "X", ",", "y", "=", "createDataset", "(", "data_anv", ",", "data_rev", ",", "pa", ",", "th", ",", "bc", ",", "args", ".", "height", ",", "args", ".", "width", ",", "args", ".", "color", ")", "\n", "\n", "# Save", "\n", "saveDataset", "(", "X", ",", "y", ",", "output", ")", "\n", "\n", "print", "(", "folder", ")", "\n", "\n", "info", "=", "open", "(", "output", "+", "'info.txt'", ",", "'w'", ")", "\n", "info", ".", "write", "(", "\"ID: {0}\\n\"", ".", "format", "(", "folder", ")", ")", "\n", "info", ".", "write", "(", "\"Width: {0}\\n\"", ".", "format", "(", "args", ".", "width", ")", ")", "\n", "info", ".", "write", "(", "\"Heigth: {0}\\n\"", ".", "format", "(", "args", ".", "height", ")", ")", "\n", "info", ".", "write", "(", "\"Color: {0}\\n\"", ".", "format", "(", "args", ".", "color", ")", ")", "\n", "info", ".", "write", "(", "\"Bills per class: {0}\\n\"", ".", "format", "(", "\", \"", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "bc", "]", ")", ")", ")", "\n", "info", ".", "write", "(", "\"Heads %: {0}\\n\"", ".", "format", "(", "\", \"", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "pa", "]", ")", ")", ")", "\n", "info", ".", "write", "(", "\"Thresholds %: {0}\"", ".", "format", "(", "\", \"", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "th", "]", ")", ")", ")", "\n", "info", ".", "close", "(", ")", "\n", "\n"]]}