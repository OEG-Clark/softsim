{"home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.code.main.main_eval": [[7, 13], ["tests.test.Test_Process", "load_pickle", "tests.test.Test_Process.evaluation"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.test.Test_Process.evaluation"], ["# test option", "\n", "    ", "test_process", "=", "Test_Process", "(", "cfg", ",", "dict_DB", ")", "\n", "datalist", "=", "load_pickle", "(", "cfg", ".", "dir", "[", "'out'", "]", "+", "'test_'", "+", "cfg", ".", "dataset_name", "+", "'/pickle/datalist'", ")", "\n", "test_process", ".", "evaluation", "(", "datalist", ",", "mode", "=", "'test'", ",", "dataset_name", "=", "cfg", ".", "dataset_name", ")", "\n", "\n", "", "def", "main_test", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "# test option", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.code.main.main_test": [[14, 19], ["tests.test.Test_Process", "tests.test.Test_Process.run"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run"], ["    ", "test_process", "=", "Test_Process", "(", "cfg", ",", "dict_DB", ")", "\n", "test_process", ".", "run", "(", "dict_DB", "[", "'H_Net'", "]", ",", "dict_DB", "[", "'S_Net'", "]", ",", "\n", "mode", "=", "'test'", ",", "dataset_name", "=", "cfg", ".", "dataset_name", ")", "\n", "\n", "", "def", "main_train", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "# paparation for training", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.code.main.main_train": [[20, 26], ["tests.test.Test_Process", "trains.train.Train_Process", "trains.train.Train_Process.run"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run"], ["    ", "dict_DB", "=", "prepare_training_data_using_snet", "(", "cfg", ",", "dict_DB", ")", "\n", "\n", "# train option", "\n", "dict_DB", "[", "'test_process'", "]", "=", "Test_Process", "(", "cfg", ",", "dict_DB", ")", "\n", "train_process", "=", "Train_Process", "(", "cfg", ",", "dict_DB", ")", "\n", "train_process", ".", "run", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.code.main.main": [[15, 27], ["options.config.Config", "dict", "libs.prepare.prepare_visualization", "libs.prepare.prepare_dataloader", "main.run_line_generator"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_visualization", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_dataloader", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.code.main.run_line_generator"], ["test_process", ".", "run", "(", "dict_DB", "[", "'H_Net'", "]", ",", "dict_DB", "[", "'S_Net'", "]", ",", "\n", "mode", "=", "'test'", ",", "dataset_name", "=", "cfg", ".", "dataset_name", ")", "\n", "\n", "", "def", "main_train", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "# paparation for training", "\n", "    ", "dict_DB", "=", "prepare_training_data_using_snet", "(", "cfg", ",", "dict_DB", ")", "\n", "\n", "# train option", "\n", "dict_DB", "[", "'test_process'", "]", "=", "Test_Process", "(", "cfg", ",", "dict_DB", ")", "\n", "train_process", "=", "Train_Process", "(", "cfg", ",", "dict_DB", ")", "\n", "train_process", ".", "run", "(", ")", "\n", "\n", "", "def", "main", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.code.main.run_line_generator": [[10, 14], ["libs.line_generator.generate_line", "libs.line_generator.generate_line.run"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run"], ["test_process", ".", "evaluation", "(", "datalist", ",", "mode", "=", "'test'", ",", "dataset_name", "=", "cfg", ".", "dataset_name", ")", "\n", "\n", "", "def", "main_test", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "# test option", "\n", "    ", "test_process", "=", "Test_Process", "(", "cfg", ",", "dict_DB", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.trains.train.Train_Process.__init__": [[7, 24], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "dict_DB", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "\n", "self", ".", "dataloader", "=", "dict_DB", "[", "'trainloader'", "]", "\n", "self", ".", "s_net", "=", "dict_DB", "[", "'S_Net'", "]", "\n", "self", ".", "h_net", "=", "dict_DB", "[", "'H_Net'", "]", "\n", "self", ".", "optimizer", "=", "dict_DB", "[", "'optimizer'", "]", "\n", "self", ".", "scheduler", "=", "dict_DB", "[", "'scheduler'", "]", "\n", "self", ".", "loss_fn", "=", "dict_DB", "[", "'loss_fn'", "]", "\n", "self", ".", "visualize", "=", "dict_DB", "[", "'visualize'", "]", "\n", "self", ".", "generator", "=", "dict_DB", "[", "'generator'", "]", "\n", "\n", "self", ".", "test_process", "=", "dict_DB", "[", "'test_process'", "]", "\n", "\n", "self", ".", "eval_func", "=", "dict_DB", "[", "'eval_func'", "]", "\n", "self", ".", "val_result", "=", "dict_DB", "[", "'val_result'", "]", "\n", "\n", "self", ".", "logfile", "=", "dict_DB", "[", "'logfile'", "]", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.trains.train.Train_Process.training": [[26, 87], ["train.Train_Process.s_net.train", "print", "logger", "enumerate", "logger", "print", "save_model", "batch[].cuda", "batch[].cuda", "batch[].cuda", "train.Train_Process.s_net.forward_for_cls", "train.Train_Process.s_net.forward_for_reg", "dict", "train.Train_Process.loss_fn", "train.Train_Process.optimizer.zero_grad", "loss[].backward", "train.Train_Process.optimizer.step", "loss[].item", "loss[].item", "loss[].item", "loss[].item", "print", "train.Train_Process.visualize.display_for_train_reg", "torch.arange().cuda", "logger", "torch.arange", "loss[].item", "loss[].item", "loss[].item", "loss[].item"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.forward_for_cls", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.forward_for_reg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.display_for_train_reg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger"], ["self", ".", "batch_size", "=", "cfg", ".", "batch_size", "[", "'img'", "]", "\n", "self", ".", "max_iter", "=", "cfg", ".", "max_iter", "\n", "\n", "self", ".", "count", "=", "dict", "(", ")", "\n", "self", ".", "count", "[", "'tot'", "]", "=", "np", ".", "zeros", "(", "11", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "self", ".", "count", "[", "'node'", "]", "=", "np", ".", "zeros", "(", "11", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "self", ".", "count", "[", "'edge'", "]", "=", "np", ".", "zeros", "(", "11", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "self", ".", "dataset_name", "=", "self", ".", "cfg", ".", "dataset_name", ".", "replace", "(", "'_Hard'", ",", "''", ")", "\n", "\n", "", "def", "training", "(", "self", ")", ":", "\n", "        ", "loss_t", "=", "{", "'sum'", ":", "0", ",", "'score'", ":", "0", ",", "'node_loss'", ":", "0", ",", "'edge_loss'", ":", "0", "}", "\n", "\n", "# train start", "\n", "self", ".", "s_net", ".", "eval", "(", ")", "\n", "self", ".", "h_net", ".", "train", "(", ")", "\n", "print", "(", "'train start'", ")", "\n", "logger", "(", "'train start\\n'", ",", "self", ".", "logfile", ")", "\n", "\n", "for", "case", "in", "range", "(", "self", ".", "cfg", ".", "case_num", ")", ":", "\n", "            ", "rmdir", "(", "path", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/display/'", "+", "str", "(", "case", ")", ")", "\n", "\n", "", "for", "i", ",", "batch", "in", "enumerate", "(", "self", ".", "dataloader", ")", ":", "\n", "\n", "# load data", "\n", "            ", "img", "=", "batch", "[", "'img'", "]", ".", "cuda", "(", ")", "\n", "a_idx", "=", "batch", "[", "'a_idx'", "]", ".", "cuda", "(", ")", "\n", "d_idx", "=", "batch", "[", "'d_idx'", "]", ".", "cuda", "(", ")", "\n", "img_name", "=", "batch", "[", "'img_name'", "]", "[", "0", "]", "\n", "\n", "# H_Net training data generator", "\n", "self", ".", "generator", ".", "update_batch", "(", "a_idx", ",", "d_idx", ",", "\n", "img_name", "=", "img_name", ",", "dataset_name", "=", "'{}_train'", ".", "format", "(", "self", ".", "dataset_name", ")", ",", "\n", "pickle_dir", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'preprocess/{}_train/pickle/'", ".", "format", "(", "self", ".", "dataset_name", ")", ")", "\n", "\n", "train_data1", ",", "train_data2", "=", "self", ".", "generator", ".", "run_for_training_data", "(", "a_idx", ",", "d_idx", ")", "\n", "self", ".", "count", "[", "'node'", "]", "+=", "train_data1", "[", "'node_count'", "]", "\n", "self", ".", "count", "[", "'edge'", "]", "+=", "train_data2", "[", "'edge_count'", "]", "\n", "self", ".", "count", "[", "'tot'", "]", "=", "(", "self", ".", "count", "[", "'node'", "]", "+", "self", ".", "count", "[", "'edge'", "]", ")", "\n", "\n", "# model", "\n", "self", ".", "h_net", ".", "forward_encoder", "(", "img", ",", "train_data2", ",", "is_training", "=", "True", ")", "\n", "out1", "=", "self", ".", "h_net", ".", "forward_node_score", "(", "train_data1", ",", "is_training", "=", "True", ")", "\n", "out2", "=", "self", ".", "h_net", ".", "forward_edge_score", "(", "train_data2", ",", "is_training", "=", "True", ")", "\n", "out_f", "=", "dict", "(", "out1", ",", "**", "out2", ")", "\n", "\n", "# loss", "\n", "loss", ",", "node_loss", ",", "edge_loss", "=", "self", ".", "loss_fn", "(", "\n", "out", "=", "out_f", ",", "\n", "train_data1", "=", "train_data1", ",", "\n", "train_data2", "=", "train_data2", ")", "\n", "\n", "# optimize", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "loss_t", "[", "'sum'", "]", "+=", "loss", ".", "item", "(", ")", "\n", "loss_t", "[", "'node_loss'", "]", "+=", "node_loss", ".", "item", "(", ")", "\n", "loss_t", "[", "'edge_loss'", "]", "+=", "edge_loss", ".", "item", "(", ")", "\n", "\n", "# display", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.trains.train.Train_Process.validation": [[88, 108], ["train.Train_Process.test_process.run", "logger", "save_model_max_upper", "save_model_max_upper", "logger", "save_model_max_upper", "save_model_max_upper"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model_max_upper", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model_max_upper", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model_max_upper", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model_max_upper"], ["if", "i", "%", "self", ".", "cfg", ".", "disp_step", "==", "0", ":", "\n", "                ", "print", "(", "'img iter %d'", "%", "i", ")", "\n", "self", ".", "visualize", ".", "display_for_train_node_score", "(", "batch", ",", "out_f", ",", "train_data1", ",", "i", ")", "\n", "self", ".", "visualize", ".", "display_for_train_edge_score", "(", "batch", ",", "out_f", ",", "train_data2", ",", "i", ")", "\n", "if", "i", "%", "self", ".", "cfg", ".", "disp_step", "==", "0", ":", "\n", "                    ", "logger", "(", "\"Loss : %5f, node_Loss : %5f, edge_Loss : %5f\\n\"", "\n", "%", "(", "loss", ".", "item", "(", ")", ",", "node_loss", ".", "item", "(", ")", ",", "edge_loss", ".", "item", "(", ")", ")", ",", "self", ".", "logfile", ")", "\n", "\n", "# logger", "\n", "", "", "", "logger", "(", "\"Average Loss : %5f %5f %5f\\n\"", "\n", "%", "(", "loss_t", "[", "'sum'", "]", "/", "i", ",", "loss_t", "[", "'node_loss'", "]", "/", "i", ",", "loss_t", "[", "'edge_loss'", "]", "/", "i", ")", ",", "self", ".", "logfile", ")", "\n", "print", "(", "\"Average Loss : %5f %5f %5f\\n\"", "\n", "%", "(", "loss_t", "[", "'sum'", "]", "/", "i", ",", "loss_t", "[", "'node_loss'", "]", "/", "i", ",", "loss_t", "[", "'edge_loss'", "]", "/", "i", ")", ")", "\n", "\n", "label_list", "=", "[", "'tot'", ",", "'node'", ",", "'edge'", "]", "\n", "for", "name", "in", "label_list", ":", "\n", "            ", "logger", "(", "\"%s label distribution\\n%s\\n\"", "%", "(", "name", ",", "np", ".", "round", "(", "(", "self", ".", "count", "[", "name", "]", "/", "np", ".", "sum", "(", "self", ".", "count", "[", "name", "]", ")", ")", ",", "3", ")", "*", "100", ")", ",", "self", ".", "logfile", ")", "\n", "print", "(", "\"%s label distribution\\n%s\\n\"", "%", "(", "name", ",", "np", ".", "round", "(", "(", "self", ".", "count", "[", "name", "]", "/", "np", ".", "sum", "(", "self", ".", "count", "[", "name", "]", ")", ")", ",", "3", ")", "*", "100", ")", ")", "\n", "\n", "# save model", "\n", "", "self", ".", "ckpt", "=", "{", "'epoch'", ":", "self", ".", "epoch", ",", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.trains.train.Train_Process.run": [[109, 119], ["range", "print", "logger", "train.Train_Process.training", "train.Train_Process.scheduler.step", "train.Train_Process.validation"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.trains.train.Train_Process.training", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.trains.train.Train_Process.validation"], ["'model'", ":", "self", ".", "h_net", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ",", "\n", "'val_result'", ":", "self", ".", "val_result", "}", "\n", "\n", "save_model", "(", "checkpoint", "=", "self", ".", "ckpt", ",", "\n", "param", "=", "'checkpoint_final'", ",", "\n", "path", "=", "self", ".", "cfg", ".", "dir", "[", "'weight'", "]", ")", "\n", "\n", "", "def", "validation", "(", "self", ")", ":", "\n", "        ", "metric", "=", "self", ".", "test_process", ".", "run", "(", "self", ".", "h_net", ",", "self", ".", "s_net", ",", "mode", "=", "'val'", ",", "dataset_name", "=", "self", ".", "cfg", ".", "dataset_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Train_Dataset_SEL.__init__": [[11, 42], ["load_pickle", "torchvision.Compose", "torchvision.Normalize", "np.float32", "load_pickle", "load_pickle", "os.path.join", "np.float32", "np.float32", "name.replace().zfill", "torchvision.Resize", "torchvision.ToTensor", "name.replace"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "datalist", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "datalist", "=", "load_pickle", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SEL'", "]", ",", "'data/'", ",", "datalist", ")", ")", "\n", "self", ".", "img_list", "=", "datalist", "[", "'img_path'", "]", "\n", "\n", "# image transform", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "cfg", ".", "height", ",", "cfg", ".", "width", ")", ",", "\n", "interpolation", "=", "2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "cfg", ".", "mean", ",", "std", "=", "cfg", ".", "std", ")", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "self", ".", "cfg", ".", "size", ")", "\n", "\n", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "self", ".", "c_num", "=", "candidates", ".", "shape", "[", "0", "]", "\n", "\n", "# hough space", "\n", "self", ".", "max_dist", "=", "self", ".", "cfg", ".", "max_dist", "\n", "hough_space", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'hough_space'", ")", "\n", "self", ".", "hough_space", "=", "hough_space", "\n", "self", ".", "hough_h", ",", "self", ".", "hough_w", "=", "self", ".", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "self", ".", "hough_space_idx", "=", "self", ".", "hough_space", "[", "'idx'", "]", "[", "self", ".", "hough_h", "//", "3", ":", "self", ".", "hough_h", "//", "3", "*", "2", "]", "\n", "self", ".", "outlier_mask", "=", "(", "self", ".", "hough_space_idx", "!=", "-", "1", ")", "\n", "self", ".", "angle_list", "=", "np", ".", "float32", "(", "self", ".", "hough_space", "[", "'angle_list'", "]", ")", "/", "90", "\n", "self", ".", "dist_list", "=", "np", ".", "float32", "(", "self", ".", "hough_space", "[", "'dist_list'", "]", ")", "/", "self", ".", "max_dist", "\n", "\n", "# gaussian weight", "\n", "self", ".", "sigma_a", "=", "1.0", "\n", "self", ".", "sigma_d", "=", "1.5", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Train_Dataset_SEL.transform": [[43, 48], ["cv2.resize", "len", "np.expand_dims"], "methods", ["None"], ["self", ".", "mean_d", "=", "0", "\n", "\n", "", "def", "transform", "(", "self", ",", "img", ",", "interpolation", ")", ":", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ",", "interpolation", "=", "interpolation", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Train_Dataset_SEL.get_image": [[49, 62], ["PIL.Image.open().convert", "img.transpose.transpose.crop", "dataset_sel.Train_Dataset_SEL.transform", "img.transpose.transpose.transpose", "PIL.Image.open", "int", "int", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.transform"], ["return", "img", "\n", "\n", "", "def", "get_image", "(", "self", ",", "idx", ",", "flip", "=", "0", ")", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SEL_img'", "]", ",", "self", ".", "img_list", "[", "idx", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "flip", "==", "1", ":", "\n", "            ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "", "size", "=", "[", "img", ".", "size", "[", "1", "]", ",", "img", ".", "size", "[", "0", "]", "]", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "self", ".", "cfg", ".", "crop_size", ",", "int", "(", "size", "[", "1", "]", ")", ",", "int", "(", "size", "[", "0", "]", ")", ")", ")", "\n", "\n", "# transform", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Train_Dataset_SEL.get_edge_map": [[63, 77], ["np.zeros", "range", "np.float32", "cv2.line", "cv2.line"], "methods", ["None"], ["return", "img", "\n", "\n", "", "def", "get_edge_map", "(", "self", ",", "line_pts", ",", "scale_factor", "=", "1", ")", ":", "\n", "        ", "line_pts", "=", "np", ".", "concatenate", "(", "line_pts", ")", "\n", "edge_map", "=", "np", ".", "zeros", "(", "(", "self", ".", "height", "//", "scale_factor", ",", "self", ".", "width", "//", "scale_factor", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "for", "i", "in", "range", "(", "line_pts", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "endpts", "=", "line_pts", "[", "i", "]", "/", "(", "self", ".", "size", "-", "1", ")", "*", "(", "self", ".", "size", "//", "scale_factor", "-", "1", ")", "\n", "pt_1", "=", "(", "endpts", "[", "0", "]", ",", "endpts", "[", "1", "]", ")", "\n", "pt_2", "=", "(", "endpts", "[", "2", "]", ",", "endpts", "[", "3", "]", ")", "\n", "edge_map", "=", "cv2", ".", "line", "(", "edge_map", ",", "pt_1", ",", "pt_2", ",", "255", ",", "2", ")", "\n", "\n", "", "return", "np", ".", "float32", "(", "edge_map", "/", "255", ")", "\n", "\n", "", "def", "get_transformed_label", "(", "self", ",", "idx", ",", "flip", ")", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Train_Dataset_SEL.get_transformed_label": [[79, 122], ["load_pickle", "np.concatenate", "len", "np.zeros", "np.zeros", "range", "float", "float", "np.array", "np.array", "os.path.join", "np.exp", "np.max", "np.maximum", "np.square", "np.square"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["        ", "data", "=", "load_pickle", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", ",", "self", ".", "img_list", "[", "idx", "]", "[", ":", "-", "4", "]", ")", ")", "\n", "mul_data", "=", "data", "[", "flip", "]", "[", "'mul'", "]", "\n", "\n", "# gtlines", "\n", "gtlines", "=", "np", ".", "concatenate", "(", "mul_data", "[", "'pts'", "]", ")", "\n", "\n", "# mul line", "\n", "line_num", "=", "len", "(", "mul_data", "[", "'region_idx'", "]", ")", "\n", "\n", "# idx", "\n", "a_idx", "=", "np", ".", "array", "(", "mul_data", "[", "'angle_idx'", "]", ")", "\n", "d_idx", "=", "np", ".", "array", "(", "mul_data", "[", "'dist_idx'", "]", ")", "\n", "\n", "return", "gtlines", ",", "a_idx", ",", "d_idx", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "flip", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "\n", "img", "=", "self", ".", "get_image", "(", "idx", ",", "flip", ")", "\n", "\n", "gtlines", ",", "a_idx", ",", "d_idx", "=", "self", ".", "get_transformed_label", "(", "idx", ",", "flip", ")", "\n", "\n", "return", "{", "'img_rgb'", ":", "img", ",", "\n", "'img'", ":", "self", ".", "normalize", "(", "img", ")", ",", "\n", "'gtlines'", ":", "gtlines", ",", "\n", "'a_idx'", ":", "a_idx", ",", "\n", "'d_idx'", ":", "d_idx", ",", "\n", "'pri_gt'", ":", "gtlines", ",", "\n", "'mul_gt'", ":", "gtlines", ",", "\n", "'img_name'", ":", "self", ".", "img_list", "[", "idx", "]", "}", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_list", ")", "\n", "\n", "", "", "class", "Test_Dataset_SEL", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "cfg", ",", "datalist", "=", "'test'", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "# load datalist", "\n", "self", ".", "datalist", "=", "load_pickle", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SEL'", "]", ",", "'data/'", ",", "datalist", ")", ")", "\n", "self", ".", "img_list", "=", "self", ".", "datalist", "[", "'img_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Train_Dataset_SEL.__getitem__": [[123, 138], ["random.randint", "dataset_sel.Train_Dataset_SEL.get_image", "dataset_sel.Train_Dataset_SEL.get_transformed_label", "dataset_sel.Train_Dataset_SEL.normalize"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Train_Dataset_SL5K.get_transformed_label"], ["# image transform", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "cfg", ".", "height", ",", "cfg", ".", "width", ")", ",", "\n", "interpolation", "=", "2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "cfg", ".", "mean", ",", "std", "=", "cfg", ".", "std", ")", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "[", "cfg", ".", "width", ",", "cfg", ".", "height", ",", "cfg", ".", "width", ",", "cfg", ".", "height", "]", ")", "\n", "\n", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "self", ".", "c_num", "=", "candidates", ".", "shape", "[", "0", "]", "\n", "\n", "# gaussian weight", "\n", "self", ".", "sigma_a", "=", "1.0", "\n", "self", ".", "sigma_d", "=", "1.5", "\n", "\n", "self", ".", "mean_d", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Train_Dataset_SEL.__len__": [[139, 141], ["len"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "img", ",", "interpolation", ")", ":", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL.__init__": [[143, 161], ["load_pickle", "torchvision.Compose", "torchvision.Normalize", "np.float32", "load_pickle", "os.path.join", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["return", "img", "\n", "\n", "", "def", "get_image", "(", "self", ",", "idx", ",", "flip", "=", "0", ")", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SEL_img'", "]", ",", "self", ".", "img_list", "[", "idx", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "flip", "==", "1", ":", "\n", "            ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "", "size", "=", "[", "img", ".", "size", "[", "1", "]", ",", "img", ".", "size", "[", "0", "]", "]", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "self", ".", "cfg", ".", "crop_size", ",", "int", "(", "size", "[", "1", "]", ")", ",", "int", "(", "size", "[", "0", "]", ")", ")", ")", "\n", "\n", "# transform", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "img", "\n", "\n", "", "def", "get_gtlines", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "mul_gt", "=", "self", ".", "datalist", "[", "'multiple'", "]", "[", "idx", "]", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL.transform": [[162, 167], ["cv2.resize", "len", "np.expand_dims"], "methods", ["None"], ["pri_gt_idx", "=", "self", ".", "datalist", "[", "'primary'", "]", "[", "idx", "]", "\n", "pri_gt", "=", "mul_gt", "[", "pri_gt_idx", "==", "1", "]", "\n", "\n", "return", "pri_gt", ",", "mul_gt", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL.get_image": [[168, 181], ["PIL.Image.open().convert", "img.transpose.transpose.crop", "dataset_sel.Test_Dataset_SEL.transform", "img.transpose.transpose.transpose", "PIL.Image.open", "int", "int", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.transform"], ["\n", "        ", "img", "=", "self", ".", "get_image", "(", "idx", ")", "\n", "pri_gt", ",", "mul_gt", "=", "self", ".", "get_gtlines", "(", "idx", ")", "\n", "return", "{", "'img_rgb'", ":", "img", ",", "\n", "'img'", ":", "self", ".", "normalize", "(", "img", ")", ",", "\n", "'pri_gt'", ":", "pri_gt", ",", "\n", "'mul_gt'", ":", "mul_gt", ",", "\n", "'img_name'", ":", "self", ".", "img_list", "[", "idx", "]", "}", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_list", ")", "\n", "\n", "", "", "class", "Test_Dataset_SEL_Hard", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "cfg", ",", "datalist", "=", "'test'", ")", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL.get_gtlines": [[182, 188], ["None"], "methods", ["None"], ["        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "# load datalist", "\n", "self", ".", "datalist", "=", "load_pickle", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SEL_Hard'", "]", ",", "'data/'", ",", "datalist", ")", ")", "\n", "self", ".", "img_list", "=", "self", ".", "datalist", "[", "'img_path'", "]", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL.__getitem__": [[189, 199], ["dataset_sel.Test_Dataset_SEL.get_image", "dataset_sel.Test_Dataset_SEL.get_gtlines", "dataset_sel.Test_Dataset_SEL.normalize"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Test_Dataset_SL5K.get_gtlines"], ["\n", "# image transform", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "cfg", ".", "height", ",", "cfg", ".", "width", ")", ",", "\n", "interpolation", "=", "2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "cfg", ".", "mean", ",", "std", "=", "cfg", ".", "std", ")", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "[", "cfg", ".", "width", ",", "cfg", ".", "height", ",", "cfg", ".", "width", ",", "cfg", ".", "height", "]", ")", "\n", "\n", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "self", ".", "c_num", "=", "candidates", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL.__len__": [[200, 202], ["len"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "img", ",", "interpolation", ")", ":", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL_Hard.__init__": [[204, 222], ["load_pickle", "torchvision.Compose", "torchvision.Normalize", "np.float32", "load_pickle", "os.path.join", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["return", "img", "\n", "\n", "", "def", "get_image", "(", "self", ",", "idx", ",", "flip", "=", "0", ")", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SEL_Hard_img'", "]", ",", "self", ".", "img_list", "[", "idx", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "flip", "==", "1", ":", "\n", "            ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "", "size", "=", "[", "img", ".", "size", "[", "1", "]", ",", "img", ".", "size", "[", "0", "]", "]", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "self", ".", "cfg", ".", "crop_size", ",", "int", "(", "size", "[", "1", "]", ")", ",", "int", "(", "size", "[", "0", "]", ")", ")", ")", "\n", "\n", "# transform", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "img", "\n", "\n", "", "def", "get_gtlines", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "mul_gt", "=", "self", ".", "datalist", "[", "'multiple'", "]", "[", "idx", "]", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL_Hard.transform": [[223, 228], ["cv2.resize", "len", "np.expand_dims"], "methods", ["None"], ["pri_gt", "=", "self", ".", "datalist", "[", "'primary'", "]", "[", "idx", "]", "\n", "\n", "return", "pri_gt", ",", "mul_gt", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL_Hard.get_image": [[229, 242], ["PIL.Image.open().convert", "img.transpose.transpose.crop", "dataset_sel.Test_Dataset_SEL_Hard.transform", "img.transpose.transpose.transpose", "PIL.Image.open", "int", "int", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.transform"], ["        ", "img", "=", "self", ".", "get_image", "(", "idx", ")", "\n", "pri_gt", ",", "mul_gt", "=", "self", ".", "get_gtlines", "(", "idx", ")", "\n", "\n", "return", "{", "'img_rgb'", ":", "img", ",", "\n", "'img'", ":", "self", ".", "normalize", "(", "img", ")", ",", "\n", "'pri_gt'", ":", "pri_gt", ",", "\n", "'mul_gt'", ":", "mul_gt", ",", "\n", "'img_name'", ":", "self", ".", "img_list", "[", "idx", "]", "}", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_list", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL_Hard.get_gtlines": [[243, 249], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL_Hard.__getitem__": [[250, 260], ["dataset_sel.Test_Dataset_SEL_Hard.get_image", "dataset_sel.Test_Dataset_SEL_Hard.get_gtlines", "dataset_sel.Test_Dataset_SEL_Hard.normalize"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Test_Dataset_SL5K.get_gtlines"], []], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sel.Test_Dataset_SEL_Hard.__len__": [[261, 263], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Train_Dataset_SL5K.__init__": [[10, 42], ["load_pickle", "torchvision.Compose", "torchvision.Normalize", "np.float32", "load_pickle", "load_pickle", "np.float32", "np.float32", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "datalist", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "self", ".", "img_list", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'datalist'", ")", "\n", "\n", "# image transform", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "cfg", ".", "height", ",", "cfg", ".", "width", ")", ",", "\n", "interpolation", "=", "2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "cfg", ".", "mean", ",", "std", "=", "cfg", ".", "std", ")", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "self", ".", "cfg", ".", "size", ")", "\n", "\n", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "self", ".", "c_num", "=", "candidates", ".", "shape", "[", "0", "]", "\n", "\n", "# hough space", "\n", "self", ".", "max_dist", "=", "self", ".", "cfg", ".", "max_dist", "\n", "hough_space", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'hough_space'", ")", "\n", "self", ".", "hough_space", "=", "hough_space", "\n", "self", ".", "hough_h", ",", "self", ".", "hough_w", "=", "self", ".", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "self", ".", "hough_space_idx", "=", "self", ".", "hough_space", "[", "'idx'", "]", "[", "self", ".", "hough_h", "//", "3", ":", "self", ".", "hough_h", "//", "3", "*", "2", "]", "\n", "self", ".", "outlier_mask", "=", "(", "self", ".", "hough_space_idx", "!=", "-", "1", ")", "\n", "self", ".", "angle_list", "=", "np", ".", "float32", "(", "self", ".", "hough_space", "[", "'angle_list'", "]", ")", "/", "90", "\n", "self", ".", "dist_list", "=", "np", ".", "float32", "(", "self", ".", "hough_space", "[", "'dist_list'", "]", ")", "/", "self", ".", "max_dist", "\n", "\n", "# gaussian weight", "\n", "self", ".", "sigma_a", "=", "1.0", "\n", "self", ".", "sigma_d", "=", "1.5", "\n", "\n", "self", ".", "mean_d", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Train_Dataset_SL5K.transform": [[43, 48], ["cv2.resize", "len", "np.expand_dims"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "img", ",", "interpolation", ")", ":", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ",", "interpolation", "=", "interpolation", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Train_Dataset_SL5K.get_image": [[49, 62], ["PIL.Image.open().convert", "img.transpose.transpose.crop", "dataset_sl5k.Train_Dataset_SL5K.transform", "img.transpose.transpose.transpose", "PIL.Image.open", "int", "int", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.transform"], ["", "def", "get_image", "(", "self", ",", "idx", ",", "flip", "=", "0", ")", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SL5K_img'", "]", ",", "'train'", ",", "self", ".", "img_list", "[", "idx", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "flip", "==", "1", ":", "\n", "            ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "", "size", "=", "[", "img", ".", "size", "[", "1", "]", ",", "img", ".", "size", "[", "0", "]", "]", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "self", ".", "cfg", ".", "crop_size", ",", "int", "(", "size", "[", "1", "]", ")", ",", "int", "(", "size", "[", "0", "]", ")", ")", ")", "\n", "\n", "# transform", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Train_Dataset_SL5K.get_edge_map": [[63, 74], ["np.concatenate", "np.zeros", "range", "np.float32", "cv2.line"], "methods", ["None"], ["", "def", "get_edge_map", "(", "self", ",", "line_pts", ",", "scale_factor", "=", "1", ")", ":", "\n", "        ", "line_pts", "=", "np", ".", "concatenate", "(", "line_pts", ")", "\n", "edge_map", "=", "np", ".", "zeros", "(", "(", "self", ".", "height", "//", "scale_factor", ",", "self", ".", "width", "//", "scale_factor", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "for", "i", "in", "range", "(", "line_pts", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "endpts", "=", "line_pts", "[", "i", "]", "/", "(", "self", ".", "size", "-", "1", ")", "*", "(", "self", ".", "size", "//", "scale_factor", "-", "1", ")", "\n", "pt_1", "=", "(", "endpts", "[", "0", "]", ",", "endpts", "[", "1", "]", ")", "\n", "pt_2", "=", "(", "endpts", "[", "2", "]", ",", "endpts", "[", "3", "]", ")", "\n", "edge_map", "=", "cv2", ".", "line", "(", "edge_map", ",", "pt_1", ",", "pt_2", ",", "255", ",", "2", ")", "\n", "\n", "", "return", "np", ".", "float32", "(", "edge_map", "/", "255", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Train_Dataset_SL5K.get_transformed_label": [[75, 88], ["load_pickle", "np.concatenate", "np.array", "np.array", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["", "def", "get_transformed_label", "(", "self", ",", "idx", ",", "flip", ")", ":", "\n", "# load data", "\n", "        ", "data", "=", "load_pickle", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", ",", "self", ".", "img_list", "[", "idx", "]", "[", ":", "-", "4", "]", ")", ")", "\n", "mul_data", "=", "data", "[", "flip", "]", "[", "'mul'", "]", "\n", "\n", "# gtlines", "\n", "gtlines", "=", "np", ".", "concatenate", "(", "mul_data", "[", "'pts'", "]", ")", "\n", "\n", "# idx", "\n", "a_idx", "=", "np", ".", "array", "(", "mul_data", "[", "'angle_idx'", "]", ")", "\n", "d_idx", "=", "np", ".", "array", "(", "mul_data", "[", "'dist_idx'", "]", ")", "\n", "\n", "return", "gtlines", ",", "a_idx", ",", "d_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Train_Dataset_SL5K.__getitem__": [[89, 101], ["random.randint", "dataset_sl5k.Train_Dataset_SL5K.get_image", "dataset_sl5k.Train_Dataset_SL5K.get_transformed_label", "dataset_sl5k.Train_Dataset_SL5K.normalize"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Train_Dataset_SL5K.get_transformed_label"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "flip", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "\n", "img", "=", "self", ".", "get_image", "(", "idx", ",", "flip", ")", "\n", "mul_gt", ",", "a_idx", ",", "d_idx", "=", "self", ".", "get_transformed_label", "(", "idx", ",", "flip", ")", "\n", "\n", "return", "{", "'img_rgb'", ":", "img", ",", "\n", "'img'", ":", "self", ".", "normalize", "(", "img", ")", ",", "\n", "'a_idx'", ":", "a_idx", ",", "\n", "'d_idx'", ":", "d_idx", ",", "\n", "'mul_gt'", ":", "mul_gt", ",", "\n", "'img_name'", ":", "self", ".", "img_list", "[", "idx", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Train_Dataset_SL5K.__len__": [[102, 104], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Test_Dataset_SL5K.__init__": [[106, 130], ["load_pickle", "torchvision.Compose", "torchvision.Normalize", "np.float32", "load_pickle", "os.path.join", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "datalist", "=", "'test'", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "# load datalist", "\n", "self", ".", "datalist", "=", "load_pickle", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SL5K'", "]", ",", "'data/'", ",", "datalist", ")", ")", "\n", "self", ".", "img_list", "=", "self", ".", "datalist", "[", "'img_name'", "]", "\n", "\n", "# image transform", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "cfg", ".", "height", ",", "cfg", ".", "width", ")", ",", "\n", "interpolation", "=", "2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "cfg", ".", "mean", ",", "std", "=", "cfg", ".", "std", ")", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "[", "cfg", ".", "width", ",", "cfg", ".", "height", ",", "cfg", ".", "width", ",", "cfg", ".", "height", "]", ")", "\n", "\n", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "self", ".", "c_num", "=", "candidates", ".", "shape", "[", "0", "]", "\n", "\n", "# gaussian weight", "\n", "self", ".", "sigma_a", "=", "1.0", "\n", "self", ".", "sigma_d", "=", "1.5", "\n", "\n", "self", ".", "mean_d", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Test_Dataset_SL5K.transform": [[131, 136], ["cv2.resize", "len", "np.expand_dims"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "img", ",", "interpolation", ")", ":", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ",", "interpolation", "=", "interpolation", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Test_Dataset_SL5K.get_image": [[137, 150], ["PIL.Image.open().convert", "img.transpose.transpose.crop", "dataset_sl5k.Test_Dataset_SL5K.transform", "img.transpose.transpose.transpose", "PIL.Image.open", "int", "int", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.transform"], ["", "def", "get_image", "(", "self", ",", "idx", ",", "flip", "=", "0", ")", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SL5K_img'", "]", ",", "'val'", ",", "self", ".", "img_list", "[", "idx", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "flip", "==", "1", ":", "\n", "            ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "", "size", "=", "[", "img", ".", "size", "[", "1", "]", ",", "img", ".", "size", "[", "0", "]", "]", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "self", ".", "cfg", ".", "crop_size", ",", "int", "(", "size", "[", "1", "]", ")", ",", "int", "(", "size", "[", "0", "]", ")", ")", ")", "\n", "\n", "# transform", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Test_Dataset_SL5K.get_gtlines": [[151, 155], ["None"], "methods", ["None"], ["", "def", "get_gtlines", "(", "self", ",", "idx", ")", ":", "\n", "        ", "mul_gt", "=", "self", ".", "datalist", "[", "'multiple'", "]", "[", "idx", "]", "\n", "\n", "return", "mul_gt", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Test_Dataset_SL5K.__getitem__": [[156, 164], ["dataset_sl5k.Test_Dataset_SL5K.get_image", "dataset_sl5k.Test_Dataset_SL5K.get_gtlines", "dataset_sl5k.Test_Dataset_SL5K.normalize"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Test_Dataset_SL5K.get_gtlines"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "img", "=", "self", ".", "get_image", "(", "idx", ")", "\n", "mul_gt", "=", "self", ".", "get_gtlines", "(", "idx", ")", "\n", "return", "{", "'img_rgb'", ":", "img", ",", "\n", "'img'", ":", "self", ".", "normalize", "(", "img", ")", ",", "\n", "'mul_gt'", ":", "mul_gt", ",", "\n", "'img_name'", ":", "self", ".", "img_list", "[", "idx", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset_sl5k.Test_Dataset_SL5K.__len__": [[165, 167], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_list", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_train.__init__": [[11, 27], ["load_pickle", "torchvision.Compose", "torchvision.Normalize", "np.float32", "os.path.join", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "datalist", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "self", ".", "datalist", "=", "load_pickle", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", ",", "'data/'", ",", "datalist", ")", ")", "\n", "try", ":", "\n", "            ", "self", ".", "imglist", "=", "self", ".", "datalist", "[", "'img_path'", "]", "\n", "", "except", ":", "\n", "            ", "self", ".", "imglist", "=", "self", ".", "datalist", "[", "'img_name'", "]", "\n", "# image transform", "\n", "", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "cfg", ".", "height", ",", "cfg", ".", "width", ")", ",", "\n", "interpolation", "=", "2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "cfg", ".", "mean", ",", "std", "=", "cfg", ".", "std", ")", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "[", "cfg", ".", "width", ",", "cfg", ".", "height", ",", "cfg", ".", "width", ",", "cfg", ".", "height", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_train.transform": [[28, 33], ["cv2.resize", "len", "np.expand_dims"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "img", ",", "interpolation", ")", ":", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ",", "interpolation", "=", "interpolation", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_train.get_image": [[34, 47], ["PIL.Image.open().convert.crop", "dataset.Dataset_train.transform", "PIL.Image.open().convert", "PIL.Image.open().convert", "int", "int", "PIL.Image.open", "os.path.join", "PIL.Image.open", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.transform"], ["", "def", "get_image", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "cfg", ".", "dataset_name", "==", "'SEL'", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "+", "'_img'", "]", ",", "self", ".", "imglist", "[", "idx", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "", "elif", "self", ".", "cfg", ".", "dataset_name", "==", "'SL5K'", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "+", "'_img'", "]", ",", "'train'", ",", "self", ".", "imglist", "[", "idx", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "", "size", "=", "[", "img", ".", "size", "[", "1", "]", ",", "img", ".", "size", "[", "0", "]", "]", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "self", ".", "cfg", ".", "crop_size", ",", "int", "(", "size", "[", "1", "]", ")", ",", "int", "(", "size", "[", "0", "]", ")", ")", ")", "\n", "\n", "# transform", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_train.get_label": [[48, 52], ["None"], "methods", ["None"], ["", "def", "get_label", "(", "self", ",", "idx", ")", ":", "\n", "        ", "label", "=", "{", "'mul_gt'", ":", "[", "]", "}", "\n", "label", "[", "'mul_gt'", "]", "=", "self", ".", "datalist", "[", "'multiple'", "]", "[", "idx", "]", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_train.__getitem__": [[53, 61], ["dataset.Dataset_train.get_image", "dataset.Dataset_train.get_label", "dataset.Dataset_train.normalize"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_label"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img", "=", "self", ".", "get_image", "(", "idx", ")", "\n", "label", "=", "self", ".", "get_label", "(", "idx", ")", "\n", "\n", "return", "{", "'img_rgb'", ":", "img", ",", "\n", "'img'", ":", "self", ".", "normalize", "(", "img", ")", ",", "\n", "'label'", ":", "label", ",", "\n", "'img_name'", ":", "self", ".", "imglist", "[", "idx", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_train.__len__": [[62, 64], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imglist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.__init__": [[67, 83], ["load_pickle", "torchvision.Compose", "torchvision.Normalize", "np.float32", "os.path.join", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "datalist", "=", "'test'", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "self", ".", "datalist", "=", "load_pickle", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", ",", "'data/'", ",", "datalist", ")", ")", "\n", "try", ":", "\n", "            ", "self", ".", "imglist", "=", "self", ".", "datalist", "[", "'img_path'", "]", "\n", "", "except", ":", "\n", "            ", "self", ".", "imglist", "=", "self", ".", "datalist", "[", "'img_name'", "]", "\n", "# image transform", "\n", "", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "cfg", ".", "height", ",", "cfg", ".", "width", ")", ",", "\n", "interpolation", "=", "2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "cfg", ".", "mean", ",", "std", "=", "cfg", ".", "std", ")", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "[", "cfg", ".", "width", ",", "cfg", ".", "height", ",", "cfg", ".", "width", ",", "cfg", ".", "height", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.transform": [[84, 89], ["cv2.resize", "len", "np.expand_dims"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "img", ",", "interpolation", ")", ":", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ",", "interpolation", "=", "interpolation", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_image": [[90, 103], ["PIL.Image.open().convert.crop", "dataset.Dataset_test.transform", "PIL.Image.open().convert", "PIL.Image.open().convert", "int", "int", "PIL.Image.open", "os.path.join", "PIL.Image.open", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.transform"], ["", "def", "get_image", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "cfg", ".", "dataset_name", "==", "'SEL'", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "+", "'_img'", "]", ",", "self", ".", "imglist", "[", "idx", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "", "elif", "self", ".", "cfg", ".", "dataset_name", "==", "'SL5K'", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "+", "'_img'", "]", ",", "'val'", ",", "self", ".", "imglist", "[", "idx", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "", "size", "=", "[", "img", ".", "size", "[", "1", "]", ",", "img", ".", "size", "[", "0", "]", "]", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "self", ".", "cfg", ".", "crop_size", ",", "int", "(", "size", "[", "1", "]", ")", ",", "int", "(", "size", "[", "0", "]", ")", ")", ")", "\n", "\n", "# transform", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_label": [[104, 108], ["None"], "methods", ["None"], ["", "def", "get_label", "(", "self", ",", "idx", ")", ":", "\n", "        ", "label", "=", "{", "'pri_gt'", ":", "[", "]", ",", "'mul_gt'", ":", "[", "]", "}", "\n", "label", "[", "'mul_gt'", "]", "=", "self", ".", "datalist", "[", "'multiple'", "]", "[", "idx", "]", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.__getitem__": [[109, 117], ["dataset.Dataset_test.get_image", "dataset.Dataset_test.get_label", "dataset.Dataset_test.normalize"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.get_label"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img", "=", "self", ".", "get_image", "(", "idx", ")", "\n", "label", "=", "self", ".", "get_label", "(", "idx", ")", "\n", "\n", "return", "{", "'img_rgb'", ":", "img", ",", "\n", "'img'", ":", "self", ".", "normalize", "(", "img", ")", ",", "\n", "'label'", ":", "label", ",", "\n", "'img_name'", ":", "self", ".", "imglist", "[", "idx", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.datasets.dataset.Dataset_test.__len__": [[118, 120], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imglist", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.__init__": [[13, 36], ["numpy.array", "numpy.array", "numpy.array", "to_tensor", "to_tensor", "to_tensor", "post_process_clique.Maximum_clique.encode_bitlist", "post_process_clique.Maximum_clique.decode_bitlist", "post_process_clique.Maximum_clique.encode_edge_idx", "post_process_clique.Maximum_clique.match_bitlist_with_edge", "load_pickle", "load_pickle", "load_pickle"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.encode_bitlist", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.decode_bitlist", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.encode_edge_idx", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.match_bitlist_with_edge", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "visualize", "=", "None", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "visualize", "=", "visualize", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "self", ".", "center", "=", "np", ".", "array", "(", "self", ".", "cfg", ".", "center_pt", ")", "\n", "self", ".", "max_dist", "=", "self", ".", "cfg", ".", "max_dist", "\n", "\n", "self", ".", "mean", "=", "np", ".", "array", "(", "[", "cfg", ".", "mean", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "std", "=", "np", ".", "array", "(", "[", "cfg", ".", "std", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "self", ".", "candidates", "=", "to_tensor", "(", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", ")", "\n", "self", ".", "cand_angle", "=", "to_tensor", "(", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'angle'", ")", ")", "\n", "self", ".", "cand_dist", "=", "to_tensor", "(", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'dist'", ")", ")", "\n", "\n", "self", ".", "tau", "=", "0.5", "\n", "self", ".", "MIN_VAL", "=", "-", "1000", "\n", "\n", "self", ".", "encode_bitlist", "(", ")", "\n", "self", ".", "decode_bitlist", "(", ")", "\n", "self", ".", "encode_edge_idx", "(", ")", "\n", "self", ".", "match_bitlist_with_edge", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.encode_bitlist": [[37, 58], ["torch.LongTensor().cuda", "range", "torch.zeros().cuda", "range", "torch.cat", "torch.LongTensor", "torch.sum", "torch.zeros"], "methods", ["None"], ["", "def", "encode_bitlist", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_node", "=", "self", ".", "cfg", ".", "max_iter", "\n", "num_clique", "=", "2", "**", "self", ".", "num_node", "\n", "\n", "bitlist", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "num_clique", ")", ":", "\n", "\n", "            ", "k", "=", "i", "\n", "bit", "=", "torch", ".", "zeros", "(", "(", "1", ",", "self", ".", "num_node", ")", ",", "dtype", "=", "torch", ".", "int64", ")", ".", "cuda", "(", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "num_node", ")", ":", "\n", "                ", "rest", "=", "k", "%", "2", "\n", "k", "//=", "2", "\n", "bit", "[", "0", ",", "j", "]", "=", "rest", "\n", "if", "k", "==", "0", ":", "\n", "                    ", "break", "\n", "", "", "if", "torch", ".", "sum", "(", "bit", ")", "==", "1", ":", "# case of node", "\n", "                ", "continue", "\n", "", "bitlist", "=", "torch", ".", "cat", "(", "(", "bitlist", ",", "bit", ")", ")", "\n", "\n", "", "self", ".", "bitlist", "=", "bitlist", "\n", "self", ".", "num_clique", "=", "self", ".", "bitlist", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.decode_bitlist": [[59, 77], ["torch.zeros().cuda", "range", "range", "print", "print", "torch.zeros"], "methods", ["None"], ["", "def", "decode_bitlist", "(", "self", ")", ":", "\n", "\n", "        ", "check", "=", "torch", ".", "zeros", "(", "(", "2", "**", "self", ".", "num_node", ")", ",", "dtype", "=", "torch", ".", "int64", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_clique", ")", ":", "\n", "\n", "            ", "bit", "=", "self", ".", "bitlist", "[", "i", "]", "\n", "k", "=", "1", "\n", "m", "=", "0", "\n", "for", "j", "in", "range", "(", "self", ".", "num_node", ")", ":", "\n", "                ", "m", "+=", "(", "k", "*", "bit", "[", "j", "]", ")", "\n", "k", "*=", "2", "\n", "", "check", "[", "m", "]", "=", "1", "\n", "\n", "", "idx", "=", "(", "check", "==", "0", ")", ".", "nonzero", "(", ")", "\n", "if", "idx", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "            ", "print", "(", "'Successfully encoded'", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"error code : {}\"", ".", "format", "(", "idx", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.encode_edge_idx": [[78, 89], ["torch.zeros().cuda", "range", "torch.max", "range", "torch.zeros"], "methods", ["None"], ["", "", "def", "encode_edge_idx", "(", "self", ")", ":", "\n", "\n", "        ", "edge_idx", "=", "torch", ".", "zeros", "(", "(", "self", ".", "num_node", ",", "self", ".", "num_node", ")", ",", "dtype", "=", "torch", ".", "int64", ")", ".", "cuda", "(", ")", "\n", "k", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "num_node", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "num_node", ")", ":", "\n", "                ", "edge_idx", "[", "i", ",", "j", "]", "=", "k", "\n", "k", "+=", "1", "\n", "\n", "", "", "self", ".", "edge_idx", "=", "edge_idx", "\n", "self", ".", "edge_max_num", "=", "torch", ".", "max", "(", "edge_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.match_bitlist_with_edge": [[90, 107], ["torch.LongTensor().cuda", "range", "torch.sum", "bit.nonzero", "torch.zeros().cuda", "range", "torch.cat", "torch.LongTensor", "range", "torch.zeros"], "methods", ["None"], ["", "def", "match_bitlist_with_edge", "(", "self", ")", ":", "\n", "\n", "        ", "clique_idxlist", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_clique", ")", ":", "\n", "\n", "            ", "bit", "=", "self", ".", "bitlist", "[", "i", "]", "\n", "nodelist", "=", "bit", ".", "nonzero", "(", ")", "\n", "num_node", "=", "nodelist", ".", "shape", "[", "0", "]", "\n", "idx_check", "=", "torch", ".", "zeros", "(", "(", "1", ",", "self", ".", "edge_max_num", "+", "1", ")", ",", "dtype", "=", "torch", ".", "int64", ")", ".", "cuda", "(", ")", "\n", "for", "j", "in", "range", "(", "num_node", ")", ":", "\n", "                ", "for", "k", "in", "range", "(", "j", "+", "1", ",", "num_node", ")", ":", "\n", "                    ", "idx_check", "[", "0", ",", "self", ".", "edge_idx", "[", "nodelist", "[", "j", ",", "0", "]", ",", "nodelist", "[", "k", ",", "0", "]", "]", "]", "=", "1", "\n", "\n", "", "", "clique_idxlist", "=", "torch", ".", "cat", "(", "(", "clique_idxlist", ",", "idx_check", ")", ")", "\n", "\n", "", "self", ".", "clique_idxlist", "=", "clique_idxlist", "\n", "self", ".", "clique_idxnum", "=", "torch", ".", "sum", "(", "clique_idxlist", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.run": [[108, 124], ["torch.sum", "torch.argmax", "torch.argmax().view", "torch.argmax().view", "post_process_clique.Maximum_clique.bitlist[].nonzero", "torch.argmax", "torch.argmax"], "methods", ["None"], ["", "def", "run", "(", "self", ")", ":", "\n", "\n", "        ", "clique_energy", "=", "torch", ".", "sum", "(", "(", "self", ".", "edge_score", "*", "self", ".", "clique_idxlist", ")", ",", "dim", "=", "1", ")", "\n", "\n", "idx_max", "=", "torch", ".", "argmax", "(", "clique_energy", ")", "\n", "if", "clique_energy", "[", "idx_max", "]", ">", "self", ".", "tau", ":", "\n", "            ", "mul_idx", "=", "self", ".", "bitlist", "[", "idx_max", "]", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "pri_idx", "=", "torch", ".", "argmax", "(", "self", ".", "node_score", "[", "mul_idx", "]", ")", ".", "view", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "mul_idx", "=", "(", "self", ".", "node_idx", "==", "self", ".", "pri_node_idx", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "pri_idx", "=", "torch", ".", "argmax", "(", "self", ".", "node_score", "[", "mul_idx", "]", ")", ".", "view", "(", "1", ")", "\n", "\n", "", "return", "{", "'cls_pri_pts'", ":", "self", ".", "node_pts", "[", "mul_idx", "[", "pri_idx", "]", "]", ",", "\n", "'cls_mul_pts'", ":", "self", ".", "node_pts", "[", "mul_idx", "]", ",", "\n", "'cls_idx'", ":", "self", ".", "node_idx", "[", "mul_idx", "]", ",", "\n", "'cls_pri_idx'", ":", "pri_idx", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.update": [[125, 140], ["post_process_clique.Maximum_clique.edge_score.view", "torch.argmax"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "batch", ",", "out", ",", "mode", ",", "dataset_name", ",", "pair_data", "=", "None", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n", "self", ".", "img_name", "=", "batch", "[", "'img_name'", "]", "[", "0", "]", "\n", "\n", "self", ".", "node_score", "=", "out", "[", "'node_score'", "]", "[", ":", ",", "0", "]", "\n", "self", ".", "edge_score", "=", "out", "[", "'edge_score'", "]", "[", ":", ",", "0", "]", "\n", "idx", "=", "(", "self", ".", "edge_score", "<=", "self", ".", "tau", ")", "\n", "self", ".", "edge_score", "[", "idx", "]", "=", "self", ".", "MIN_VAL", "\n", "self", ".", "edge_score", "=", "self", ".", "edge_score", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "self", ".", "node_idx", "=", "out", "[", "'center_idx'", "]", "\n", "self", ".", "node_pts", "=", "self", ".", "candidates", "[", "self", ".", "node_idx", "]", "\n", "self", ".", "pri_node_idx", "=", "self", ".", "node_idx", "[", "torch", ".", "argmax", "(", "self", ".", "node_score", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.run_for_reg": [[142, 173], ["reg_angle.clone", "range", "numpy.float32", "mul_pts[].reshape", "post_process_clique.Maximum_clique.convert_to_line", "line_pts.append"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.convert_to_line"], ["", "def", "run_for_reg", "(", "self", ",", "out", ",", "out_cls", ")", ":", "\n", "\n", "# out hough line", "\n", "        ", "idx", "=", "out_cls", "[", "'cls_idx'", "]", "\n", "cls_angle", "=", "self", ".", "cand_angle", "[", "idx", "]", "\n", "cls_dist", "=", "self", ".", "cand_dist", "[", "idx", "]", "\n", "\n", "angle_offset", "=", "out", "[", "'offset'", "]", "[", "0", ",", ":", ",", "0", "]", "\n", "dist_offset", "=", "out", "[", "'offset'", "]", "[", "0", ",", ":", ",", "1", "]", "\n", "\n", "reg_angle", "=", "(", "cls_angle", "+", "angle_offset", "*", "self", ".", "cfg", ".", "max_offset_a", ")", "\n", "reg_angle2", "=", "reg_angle", ".", "clone", "(", ")", "\n", "reg_angle2", "[", "reg_angle", "<", "-", "90", "]", "+=", "180", "\n", "reg_angle2", "[", "reg_angle", ">", "90", "]", "-=", "180", "\n", "\n", "cls_dist", "[", "reg_angle", "<", "-", "90", "]", "*=", "-", "1", "\n", "cls_dist", "[", "reg_angle", ">", "90", "]", "*=", "-", "1", "\n", "dist_offset", "[", "reg_angle", "<", "-", "90", "]", "=", "0", "\n", "dist_offset", "[", "reg_angle", ">", "90", "]", "=", "0", "\n", "reg_dist2", "=", "(", "cls_dist", "+", "dist_offset", "*", "self", ".", "cfg", ".", "max_offset_d", ")", "\n", "\n", "line_pts", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "reg_angle2", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_pts", "=", "self", ".", "convert_to_line", "(", "reg_angle2", "[", "i", "]", ",", "reg_dist2", "[", "i", "]", ")", "\n", "if", "out_pts", ".", "shape", "[", "0", "]", "==", "4", ":", "\n", "                ", "line_pts", ".", "append", "(", "out_pts", ")", "\n", "", "", "mul_pts", "=", "np", ".", "float32", "(", "line_pts", ")", "\n", "pri_pts", "=", "mul_pts", "[", "out_cls", "[", "'cls_pri_idx'", "]", "]", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "\n", "return", "{", "'reg_pri_pts'", ":", "pri_pts", ",", "\n", "'reg_mul_pts'", ":", "mul_pts", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process_clique.Maximum_clique.convert_to_line": [[174, 189], ["to_np2", "to_np2", "numpy.tan", "find_endpoints_from_line_eq", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.find_endpoints_from_line_eq"], ["", "def", "convert_to_line", "(", "self", ",", "angle", ",", "dist", ")", ":", "\n", "        ", "angle", "=", "to_np2", "(", "angle", ")", "\n", "dist", "=", "to_np2", "(", "dist", ")", "\n", "a", "=", "np", ".", "tan", "(", "angle", "/", "180", "*", "math", ".", "pi", ")", "\n", "\n", "if", "angle", "!=", "-", "90", ":", "\n", "            ", "b", "=", "-", "1", "\n", "c", "=", "dist", "*", "np", ".", "sqrt", "(", "a", "**", "2", "+", "b", "**", "2", ")", "-", "(", "a", "*", "self", ".", "center", "[", "0", "]", "+", "b", "*", "self", ".", "center", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "a", "=", "1", "\n", "b", "=", "0", "\n", "c", "=", "dist", "+", "self", ".", "center", "[", "0", "]", "\n", "\n", "", "line_pts", "=", "find_endpoints_from_line_eq", "(", "line_eq", "=", "[", "a", ",", "b", ",", "c", "]", ",", "size", "=", "[", "self", ".", "width", "-", "1", ",", "self", ".", "height", "-", "1", "]", ")", "\n", "return", "line_pts", "\n", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process.Post_Process_hough_to_line.__init__": [[9, 21], ["numpy.array", "load_pickle", "to_tensor", "to_tensor", "load_pickle", "load_pickle"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", "=", "None", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "self", ".", "center", "=", "np", ".", "array", "(", "self", ".", "cfg", ".", "center_pt", ")", "\n", "self", ".", "max_dist", "=", "self", ".", "cfg", ".", "max_dist", "\n", "\n", "self", ".", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "self", ".", "cand_angle", "=", "to_tensor", "(", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'angle'", ")", ")", "\n", "self", ".", "cand_dist", "=", "to_tensor", "(", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'dist'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process.Post_Process_hough_to_line.convert_to_line": [[22, 37], ["to_np2", "to_np2", "numpy.tan", "find_endpoints_from_line_eq", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.find_endpoints_from_line_eq"], ["", "def", "convert_to_line", "(", "self", ",", "angle", ",", "dist", ")", ":", "\n", "        ", "angle", "=", "to_np2", "(", "angle", ")", "\n", "dist", "=", "to_np2", "(", "dist", ")", "\n", "a", "=", "np", ".", "tan", "(", "angle", "/", "180", "*", "math", ".", "pi", ")", "\n", "\n", "if", "angle", "!=", "-", "90", ":", "\n", "            ", "b", "=", "-", "1", "\n", "c", "=", "dist", "*", "np", ".", "sqrt", "(", "a", "**", "2", "+", "b", "**", "2", ")", "-", "(", "a", "*", "self", ".", "center", "[", "0", "]", "+", "b", "*", "self", ".", "center", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "a", "=", "1", "\n", "b", "=", "0", "\n", "c", "=", "dist", "+", "self", ".", "center", "[", "0", "]", "\n", "\n", "", "line_pts", "=", "find_endpoints_from_line_eq", "(", "line_eq", "=", "[", "a", ",", "b", ",", "c", "]", ",", "size", "=", "[", "self", ".", "width", "-", "1", ",", "self", ".", "height", "-", "1", "]", ")", "\n", "return", "line_pts", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process.Post_Process_hough_to_line.run_for_cls": [[38, 42], ["to_np"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "run_for_cls", "(", "self", ",", "out", ")", ":", "\n", "\n", "        ", "line_pts", "=", "self", ".", "candidates", "[", "to_np", "(", "out", "[", "'center_idx'", "]", ")", "]", "\n", "return", "line_pts", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process.Post_Process_hough_to_line.run_for_reg": [[43, 72], ["reg_angle.clone", "range", "numpy.float32", "post_process.Post_Process_hough_to_line.convert_to_line", "numpy.float32.append"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.convert_to_line"], ["", "def", "run_for_reg", "(", "self", ",", "out", ",", "out_cls", ")", ":", "\n", "\n", "# out hough line", "\n", "        ", "idx", "=", "out_cls", "[", "'center_idx'", "]", "\n", "cls_angle", "=", "self", ".", "cand_angle", "[", "idx", "]", "\n", "cls_dist", "=", "self", ".", "cand_dist", "[", "idx", "]", "\n", "\n", "angle_offset", "=", "out", "[", "'offset'", "]", "[", "0", ",", ":", ",", "0", "]", "\n", "dist_offset", "=", "out", "[", "'offset'", "]", "[", "0", ",", ":", ",", "1", "]", "\n", "\n", "reg_angle", "=", "(", "cls_angle", "+", "angle_offset", "*", "self", ".", "cfg", ".", "max_offset_a", ")", "\n", "reg_angle2", "=", "reg_angle", ".", "clone", "(", ")", "\n", "reg_angle2", "[", "reg_angle", "<", "-", "90", "]", "+=", "180", "\n", "reg_angle2", "[", "reg_angle", ">", "90", "]", "-=", "180", "\n", "\n", "\n", "cls_dist", "[", "reg_angle", "<", "-", "90", "]", "*=", "-", "1", "\n", "cls_dist", "[", "reg_angle", ">", "90", "]", "*=", "-", "1", "\n", "dist_offset", "[", "reg_angle", "<", "-", "90", "]", "=", "0", "\n", "dist_offset", "[", "reg_angle", ">", "90", "]", "=", "0", "\n", "reg_dist2", "=", "(", "cls_dist", "+", "dist_offset", "*", "self", ".", "cfg", ".", "max_offset_d", ")", "\n", "\n", "line_pts", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "reg_angle2", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_pts", "=", "self", ".", "convert_to_line", "(", "reg_angle2", "[", "i", "]", ",", "reg_dist2", "[", "i", "]", ")", "\n", "if", "out_pts", ".", "shape", "[", "0", "]", "==", "4", ":", "\n", "                ", "line_pts", ".", "append", "(", "out_pts", ")", "\n", "", "", "line_pts", "=", "np", ".", "float32", "(", "line_pts", ")", "\n", "return", "line_pts", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process.Post_Process_hough_to_line.update_data": [[73, 76], ["None"], "methods", ["None"], ["", "def", "update_data", "(", "self", ",", "batch", ")", ":", "\n", "\n", "        ", "self", ".", "batch", "=", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.__init__": [[15, 38], ["numpy.array", "numpy.array", "numpy.zeros", "numpy.array", "load_pickle", "to_tensor", "to_tensor", "load_pickle", "load_pickle"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "self", ".", "mean", "=", "np", ".", "array", "(", "[", "cfg", ".", "mean", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "std", "=", "np", ".", "array", "(", "[", "cfg", ".", "std", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "self", ".", "line", "=", "np", ".", "zeros", "(", "(", "cfg", ".", "height", ",", "3", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "self", ".", "line", "[", ":", ",", ":", ",", ":", "]", "=", "255", "\n", "\n", "self", ".", "show", "=", "{", "}", "\n", "\n", "# result", "\n", "self", ".", "center", "=", "np", ".", "array", "(", "self", ".", "cfg", ".", "center_pt", ")", "\n", "self", ".", "max_dist", "=", "self", ".", "cfg", ".", "max_dist", "\n", "self", ".", "top_k", "=", "20", "\n", "self", ".", "minimum_score", "=", "0.5", "\n", "# load", "\n", "self", ".", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "hough_space", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'hough_space'", ")", "\n", "self", ".", "hough_h", ",", "self", ".", "hough_w", "=", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "self", ".", "angle_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "hough_space", "[", "'angle_list'", "]", ")", ")", "/", "90", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.update_org_image": [[39, 42], ["cv2.imread", "cv2.imread", "cv2.imread", "cv2.imread"], "methods", ["None"], ["self", ".", "dist_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "hough_space", "[", "'dist_list'", "]", ")", ")", "/", "self", ".", "max_dist", "\n", "\n", "", "def", "update_org_image", "(", "self", ",", "path", ",", "name", "=", "'org_img'", ")", ":", "\n", "        ", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.update_image": [[43, 47], ["to_np", "to_np.permute", "numpy.uint8"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n", "", "def", "update_image", "(", "self", ",", "img", ",", "name", "=", "'img'", ")", ":", "\n", "        ", "img", "=", "to_np", "(", "img", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "img", "=", "np", ".", "uint8", "(", "(", "img", "*", "self", ".", "std", "+", "self", ".", "mean", ")", "*", "255", ")", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.update_label": [[48, 52], ["to_np", "numpy.repeat", "numpy.expand_dims", "numpy.uint8"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n", "", "def", "update_label", "(", "self", ",", "label", ",", "name", "=", "'label'", ")", ":", "\n", "        ", "label", "=", "to_np", "(", "label", ")", "\n", "label", "=", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "uint8", "(", "label", "!=", "0", ")", "*", "255", ",", "axis", "=", "2", ")", ",", "3", ",", "2", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.update_image_name": [[53, 55], ["None"], "methods", ["None"], ["self", ".", "show", "[", "name", "]", "=", "label", "\n", "\n", "", "def", "update_image_name", "(", "self", ",", "img_name", ")", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.edge_map_to_rgb_image": [[56, 60], ["numpy.repeat", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "numpy.uint8", "to_np2", "cv2.resize.permute", "cv2.resize.permute"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2"], ["        ", "self", ".", "show", "[", "'img_name'", "]", "=", "img_name", "\n", "\n", "", "def", "edge_map_to_rgb_image", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "=", "np", ".", "repeat", "(", "np", ".", "uint8", "(", "to_np2", "(", "data", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "*", "255", ")", ")", ",", "3", ",", "2", ")", "\n", "data", "=", "cv2", ".", "resize", "(", "data", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.draw_text": [[61, 67], ["numpy.ascontiguousarray", "cv2.rectangle", "cv2.rectangle", "cv2.rectangle", "cv2.rectangle", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "numpy.copy", "str", "str"], "methods", ["None"], ["return", "data", "\n", "\n", "", "def", "draw_text", "(", "self", ",", "pred", ",", "label", ",", "name", ",", "ref_name", "=", "'img'", ",", "color", "=", "(", "255", ",", "0", ",", "0", ")", ")", ":", "\n", "        ", "img", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "copy", "(", "self", ".", "show", "[", "ref_name", "]", ")", ")", "\n", "cv2", ".", "rectangle", "(", "img", ",", "(", "1", ",", "1", ")", ",", "(", "250", ",", "120", ")", ",", "color", ",", "1", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "'pred : '", "+", "str", "(", "pred", ")", ",", "(", "10", ",", "50", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "color", ",", "2", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "'label : '", "+", "str", "(", "label", ")", ",", "(", "10", ",", "100", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "color", ",", "2", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.draw_lines_cv": [[68, 77], ["numpy.ascontiguousarray", "range", "numpy.copy", "cv2.line", "cv2.line", "cv2.line", "cv2.line"], "methods", ["None"], ["self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n", "", "def", "draw_lines_cv", "(", "self", ",", "data", ",", "name", ",", "ref_name", "=", "'img'", ",", "color", "=", "(", "255", ",", "0", ",", "0", ")", ",", "s", "=", "2", ")", ":", "\n", "        ", "img", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "copy", "(", "self", ".", "show", "[", "ref_name", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pts", "=", "data", "[", "i", "]", "\n", "pt_1", "=", "(", "pts", "[", "0", "]", ",", "pts", "[", "1", "]", ")", "\n", "pt_2", "=", "(", "pts", "[", "2", "]", ",", "pts", "[", "3", "]", ")", "\n", "img", "=", "cv2", ".", "line", "(", "img", ",", "pt_1", ",", "pt_2", ",", "color", ",", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.draw_lane_points_cv": [[78, 86], ["numpy.ascontiguousarray", "range", "numpy.copy", "len", "range", "cv2.circle", "cv2.circle", "cv2.circle", "cv2.circle", "int", "int"], "methods", ["None"], ["", "self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n", "", "def", "draw_lane_points_cv", "(", "self", ",", "data_x", ",", "data_y", ",", "name", ",", "ref_name", "=", "'org_img'", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "s", "=", "4", ")", ":", "\n", "        ", "img", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "copy", "(", "self", ".", "show", "[", "ref_name", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "data_x", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "data_x", "[", "i", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "pts", "=", "(", "int", "(", "data_x", "[", "i", "]", "[", "j", "]", ")", ",", "int", "(", "data_y", "[", "i", "]", "[", "j", "]", ")", ")", "\n", "img", "=", "cv2", ".", "circle", "(", "img", ",", "pts", ",", "s", ",", "color", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.display_saveimg": [[87, 101], ["range", "mkdir", "cv2.imwrite", "cv2.imwrite", "cv2.imwrite", "cv2.imwrite", "numpy.zeros", "len", "numpy.concatenate", "visualize.Visualize_cv.show.keys"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir"], ["", "", "self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n", "", "def", "display_saveimg", "(", "self", ",", "dir_name", ",", "file_name", ",", "list", ")", ":", "\n", "# boundary line", "\n", "        ", "if", "self", ".", "show", "[", "list", "[", "0", "]", "]", ".", "shape", "[", "0", "]", "!=", "self", ".", "line", ".", "shape", "[", "0", "]", ":", "\n", "            ", "self", ".", "line", "=", "np", ".", "zeros", "(", "(", "self", ".", "show", "[", "list", "[", "0", "]", "]", ".", "shape", "[", "0", "]", ",", "3", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "self", ".", "line", "[", ":", ",", ":", ",", ":", "]", "=", "255", "\n", "", "disp", "=", "self", ".", "line", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "list", ")", ")", ":", "\n", "            ", "if", "list", "[", "i", "]", "not", "in", "self", ".", "show", ".", "keys", "(", ")", ":", "\n", "                ", "continue", "\n", "", "disp", "=", "np", ".", "concatenate", "(", "(", "disp", ",", "self", ".", "show", "[", "list", "[", "i", "]", "]", ",", "self", ".", "line", ")", ",", "axis", "=", "1", ")", "\n", "\n", "", "mkdir", "(", "dir_name", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.display_for_train_node_score": [[104, 139], ["visualize.Visualize_cv.update_image", "visualize.Visualize_cv.update_image_name", "range", "to_np", "line_pts[].append", "numpy.float32", "numpy.concatenate", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_text", "visualize.Visualize_cv.display_saveimg", "visualize.Visualize_cv.display_saveimg", "numpy.round", "numpy.round", "to_np2", "to_np2", "str", "str", "str", "str", "int", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image_name", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.draw_text", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2"], ["", "def", "display_for_train_node_score", "(", "self", ",", "batch", ",", "out", ",", "train_data", ",", "idx", ")", ":", "\n", "\n", "        ", "self", ".", "update_image", "(", "batch", "[", "'img'", "]", "[", "0", "]", ")", "\n", "self", ".", "update_image_name", "(", "batch", "[", "'img_name'", "]", "[", "0", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "train_data", "[", "'node_idx_set'", "]", ".", "shape", "[", "0", "]", ",", "3", ")", ":", "\n", "\n", "            ", "line_pts", "=", "{", "'out'", ":", "[", "]", ",", "'node'", ":", "[", "]", ",", "'gt'", ":", "[", "]", "}", "\n", "\n", "# out masked line", "\n", "node_idx", "=", "to_np", "(", "train_data", "[", "'node_idx_set'", "]", "[", "i", ":", "i", "+", "1", ",", "0", "]", ")", "\n", "out_pts", "=", "self", ".", "candidates", "[", "node_idx", ",", ":", "]", "\n", "line_pts", "[", "'node'", "]", ".", "append", "(", "out_pts", ")", "\n", "\n", "# to numpy", "\n", "line_pts", "[", "'gt'", "]", "=", "np", ".", "float32", "(", "batch", "[", "'mul_gt'", "]", "[", "0", "]", ")", "\n", "line_pts", "[", "'node'", "]", "=", "np", ".", "concatenate", "(", "line_pts", "[", "'node'", "]", ")", "\n", "\n", "# draw lines", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'gt'", "]", ",", "name", "=", "'gt'", ")", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'node'", "]", ",", "name", "=", "'node'", ")", "\n", "\n", "self", ".", "draw_text", "(", "pred", "=", "np", ".", "round", "(", "to_np2", "(", "out", "[", "'node_score'", "]", "[", "i", ",", "0", "]", ")", ",", "3", ")", ",", "\n", "label", "=", "np", ".", "round", "(", "to_np2", "(", "train_data", "[", "'gt_node_score'", "]", "[", "i", ",", "0", "]", ")", ",", "3", ")", ",", "\n", "name", "=", "'node'", ",", "ref_name", "=", "'node'", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "\n", "# save result", "\n", "self", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/display/'", ",", "\n", "file_name", "=", "str", "(", "idx", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_node.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'node'", ",", "'gt'", "]", ")", "\n", "if", "self", ".", "cfg", ".", "disp_train_per_case", "==", "True", ":", "\n", "                ", "self", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/display/'", "+", "str", "(", "int", "(", "train_data", "[", "'node_case'", "]", "[", "i", "]", ")", ")", "+", "'/'", ",", "\n", "file_name", "=", "str", "(", "idx", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_node.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'node'", ",", "'gt'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.display_for_train_edge_score": [[141, 180], ["visualize.Visualize_cv.update_image", "visualize.Visualize_cv.update_image_name", "range", "to_np", "line_pts[].append", "to_np", "line_pts[].append", "numpy.float32", "numpy.concatenate", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_text", "visualize.Visualize_cv.display_saveimg", "visualize.Visualize_cv.display_saveimg", "numpy.round", "numpy.round", "to_np2", "to_np2", "str", "str", "str", "str", "int", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image_name", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.draw_text", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2"], ["", "", "", "def", "display_for_train_edge_score", "(", "self", ",", "batch", ",", "out", ",", "train_data", ",", "idx", ")", ":", "\n", "\n", "        ", "self", ".", "update_image", "(", "batch", "[", "'img'", "]", "[", "0", "]", ")", "\n", "self", ".", "update_image_name", "(", "batch", "[", "'img_name'", "]", "[", "0", "]", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "train_data", "[", "'edge_idx_set'", "]", ".", "shape", "[", "0", "]", ",", "3", ")", ":", "\n", "\n", "            ", "line_pts", "=", "{", "'out'", ":", "[", "]", ",", "'edge'", ":", "[", "]", ",", "'gt'", ":", "[", "]", "}", "\n", "\n", "# out masked line", "\n", "idx1", "=", "to_np", "(", "train_data", "[", "'edge_idx_set'", "]", "[", "i", ":", "i", "+", "1", ",", "0", "]", ")", "\n", "out_pts", "=", "self", ".", "candidates", "[", "idx1", ",", ":", "]", "\n", "line_pts", "[", "'edge'", "]", ".", "append", "(", "out_pts", ")", "\n", "idx2", "=", "to_np", "(", "train_data", "[", "'edge_idx_set'", "]", "[", "i", ":", "i", "+", "1", ",", "1", "]", ")", "\n", "out_pts", "=", "self", ".", "candidates", "[", "idx2", ",", ":", "]", "\n", "line_pts", "[", "'edge'", "]", ".", "append", "(", "out_pts", ")", "\n", "\n", "# to numpy", "\n", "line_pts", "[", "'gt'", "]", "=", "np", ".", "float32", "(", "batch", "[", "'mul_gt'", "]", "[", "0", "]", ")", "\n", "line_pts", "[", "'edge'", "]", "=", "np", ".", "concatenate", "(", "line_pts", "[", "'edge'", "]", ")", "\n", "\n", "# draw lines", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'gt'", "]", ",", "name", "=", "'gt'", ")", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'edge'", "]", ",", "name", "=", "'edge'", ")", "\n", "\n", "self", ".", "draw_text", "(", "pred", "=", "np", ".", "round", "(", "to_np2", "(", "out", "[", "'edge_score'", "]", "[", "i", ",", "0", "]", ")", ",", "3", ")", ",", "\n", "label", "=", "np", ".", "round", "(", "to_np2", "(", "train_data", "[", "'gt_edge_score'", "]", "[", "i", ",", "0", "]", ")", ",", "3", ")", ",", "\n", "name", "=", "'edge'", ",", "ref_name", "=", "'edge'", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "\n", "# save result", "\n", "self", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/display/'", ",", "\n", "file_name", "=", "str", "(", "idx", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_edge.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'edge'", ",", "'gt'", "]", ")", "\n", "if", "self", ".", "cfg", ".", "disp_train_per_case", "==", "True", ":", "\n", "                ", "self", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/display/'", "+", "str", "(", "int", "(", "train_data", "[", "'edge_case'", "]", "[", "i", "]", ")", ")", "+", "'/'", ",", "\n", "file_name", "=", "str", "(", "idx", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_edge.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'edge'", ",", "'gt'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.display_for_test": [[161, 183], ["to_np", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.display_saveimg", "numpy.expand_dims", "numpy.expand_dims", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg"], ["line_pts", "[", "'edge'", "]", "=", "np", ".", "concatenate", "(", "line_pts", "[", "'edge'", "]", ")", "\n", "\n", "# draw lines", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'gt'", "]", ",", "name", "=", "'gt'", ")", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'edge'", "]", ",", "name", "=", "'edge'", ")", "\n", "\n", "self", ".", "draw_text", "(", "pred", "=", "np", ".", "round", "(", "to_np2", "(", "out", "[", "'edge_score'", "]", "[", "i", ",", "0", "]", ")", ",", "3", ")", ",", "\n", "label", "=", "np", ".", "round", "(", "to_np2", "(", "train_data", "[", "'gt_edge_score'", "]", "[", "i", ",", "0", "]", ")", ",", "3", ")", ",", "\n", "name", "=", "'edge'", ",", "ref_name", "=", "'edge'", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "\n", "# save result", "\n", "self", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/display/'", ",", "\n", "file_name", "=", "str", "(", "idx", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_edge.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'edge'", ",", "'gt'", "]", ")", "\n", "if", "self", ".", "cfg", ".", "disp_train_per_case", "==", "True", ":", "\n", "                ", "self", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/display/'", "+", "str", "(", "int", "(", "train_data", "[", "'edge_case'", "]", "[", "i", "]", ")", ")", "+", "'/'", ",", "\n", "file_name", "=", "str", "(", "idx", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_edge.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'edge'", ",", "'gt'", "]", ")", "\n", "\n", "\n", "\n", "", "", "", "def", "display_for_test", "(", "self", ",", "out", ",", "mul_gt", ",", "idx", ",", "mode", ",", "dataset_name", ")", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.convert_to_line": [[184, 199], ["to_np2", "to_np2", "numpy.tan", "find_endpoints_from_line_eq", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.find_endpoints_from_line_eq"], ["\n", "        ", "line_pts", "=", "{", "'out'", ":", "[", "]", ",", "'out_score'", ":", "[", "]", ",", "'out_mask'", ":", "[", "]", ",", "'out_updated'", ":", "[", "]", ",", "'out_updated_idx'", ":", "[", "]", ",", "\n", "'gt'", ":", "[", "]", "}", "\n", "\n", "# high score line", "\n", "idx_score", "=", "(", "out", "[", "'score'", "]", "[", "0", "]", ">", "self", ".", "minimum_score", ")", ".", "nonzero", "(", ")", "[", ":", ",", "1", "]", "\n", "idx_score", "=", "to_np", "(", "idx_score", ")", "\n", "line_pts", "[", "'out_score'", "]", "=", "self", ".", "candidates", "[", "idx_score", "]", "\n", "\n", "# out center line", "\n", "out_pts", "=", "self", ".", "candidates", "[", "to_np", "(", "out", "[", "'center_idx'", "]", ")", "]", "\n", "line_pts", "[", "'out_center'", "]", "=", "out_pts", "\n", "\n", "\n", "\n", "# to np", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.__init__": [[237, 256], ["numpy.array", "numpy.array", "numpy.zeros", "load_pickle"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "mode", "=", "''", ")", ":", "\n", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "self", ".", "mean", "=", "np", ".", "array", "(", "[", "cfg", ".", "mean", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "std", "=", "np", ".", "array", "(", "[", "cfg", ".", "std", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "self", ".", "line", "=", "np", ".", "zeros", "(", "(", "cfg", ".", "height", ",", "3", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "self", ".", "line", "[", ":", ",", ":", ",", ":", "]", "=", "255", "\n", "\n", "self", ".", "param", "=", "{", "'linewidth'", ":", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", "]", ",", "\n", "'color'", ":", "[", "'yellow'", ",", "'red'", ",", "'lime'", "]", "}", "\n", "\n", "self", ".", "show", "=", "{", "}", "\n", "\n", "self", ".", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.update_image": [[257, 261], ["to_np", "to_np.permute", "numpy.uint8"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "update_image", "(", "self", ",", "img", ",", "name", "=", "'img'", ")", ":", "\n", "        ", "img", "=", "to_np", "(", "img", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "img", "=", "np", ".", "uint8", "(", "(", "img", "*", "self", ".", "std", "+", "self", ".", "mean", ")", "*", "255", ")", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.update_image_name": [[262, 264], ["None"], "methods", ["None"], ["", "def", "update_image_name", "(", "self", ",", "img_name", ")", ":", "\n", "        ", "self", ".", "show", "[", "'img_name'", "]", "=", "img_name", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.draw_lines_cv": [[266, 275], ["numpy.ascontiguousarray", "range", "numpy.copy", "cv2.line", "cv2.line", "cv2.line", "cv2.line"], "methods", ["None"], ["", "def", "draw_lines_cv", "(", "self", ",", "data", ",", "name", ",", "ref_name", "=", "'img'", ",", "color", "=", "(", "255", ",", "0", ",", "0", ")", ",", "s", "=", "2", ")", ":", "\n", "        ", "img", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "copy", "(", "self", ".", "show", "[", "ref_name", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pts", "=", "data", "[", "i", "]", "\n", "pt_1", "=", "(", "pts", "[", "0", "]", ",", "pts", "[", "1", "]", ")", "\n", "pt_2", "=", "(", "pts", "[", "2", "]", ",", "pts", "[", "3", "]", ")", "\n", "img", "=", "cv2", ".", "line", "(", "img", ",", "pt_1", ",", "pt_2", ",", "color", ",", "s", ")", "\n", "\n", "", "self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.draw_text": [[276, 282], ["numpy.ascontiguousarray", "cv2.rectangle", "cv2.rectangle", "cv2.rectangle", "cv2.rectangle", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.putText", "numpy.copy", "str", "str"], "methods", ["None"], ["", "def", "draw_text", "(", "self", ",", "pred", ",", "label", ",", "name", ",", "ref_name", "=", "'img'", ",", "color", "=", "(", "255", ",", "0", ",", "0", ")", ")", ":", "\n", "        ", "img", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "copy", "(", "self", ".", "show", "[", "ref_name", "]", ")", ")", "\n", "cv2", ".", "rectangle", "(", "img", ",", "(", "1", ",", "1", ")", ",", "(", "250", ",", "120", ")", ",", "color", ",", "1", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "'pred : '", "+", "str", "(", "pred", ")", ",", "(", "10", ",", "50", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "color", ",", "2", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "'label : '", "+", "str", "(", "label", ")", ",", "(", "10", ",", "100", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "color", ",", "2", ")", "\n", "self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.display_saveimg": [[284, 298], ["range", "mkdir", "cv2.imwrite", "cv2.imwrite", "cv2.imwrite", "cv2.imwrite", "numpy.zeros", "len", "numpy.concatenate", "visualize.Visualize_graph.show.keys"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir"], ["", "def", "display_saveimg", "(", "self", ",", "dir_name", ",", "file_name", ",", "list", ")", ":", "\n", "# boundary line", "\n", "        ", "if", "self", ".", "show", "[", "list", "[", "0", "]", "]", ".", "shape", "[", "0", "]", "!=", "self", ".", "line", ".", "shape", "[", "0", "]", ":", "\n", "            ", "self", ".", "line", "=", "np", ".", "zeros", "(", "(", "self", ".", "show", "[", "list", "[", "0", "]", "]", ".", "shape", "[", "0", "]", ",", "3", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "self", ".", "line", "[", ":", ",", ":", ",", ":", "]", "=", "255", "\n", "", "disp", "=", "self", ".", "line", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "list", ")", ")", ":", "\n", "            ", "if", "list", "[", "i", "]", "not", "in", "self", ".", "show", ".", "keys", "(", ")", ":", "\n", "                ", "continue", "\n", "", "disp", "=", "np", ".", "concatenate", "(", "(", "disp", ",", "self", ".", "show", "[", "list", "[", "i", "]", "]", ",", "self", ".", "line", ")", ",", "axis", "=", "1", ")", "\n", "\n", "", "mkdir", "(", "dir_name", ")", "\n", "cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", ",", "disp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.update_batch": [[299, 307], ["visualize.Visualize_graph.update_image", "visualize.Visualize_graph.update_image_name", "visualize.Visualize_graph.draw_lines_cv", "visualize.Visualize_graph.draw_lines_cv"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image_name", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv"], ["", "def", "update_batch", "(", "self", ",", "batch", ",", "mode", ",", "dataset_name", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "self", ".", "dataset_name", "=", "dataset_name", "\n", "self", ".", "batch", "=", "batch", "\n", "self", ".", "update_image", "(", "self", ".", "batch", "[", "'img'", "]", "[", "0", "]", ")", "\n", "self", ".", "update_image_name", "(", "self", ".", "batch", "[", "'img_name'", "]", "[", "0", "]", ")", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "self", ".", "batch", "[", "'mul_gt'", "]", "[", "0", "]", ",", "name", "=", "'gt'", ",", "color", "=", "(", "255", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "self", ".", "batch", "[", "'pri_gt'", "]", "[", "0", "]", ",", "name", "=", "'gt'", ",", "ref_name", "=", "'gt'", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.display_post_process": [[308, 327], ["visualize.Visualize_graph.draw_lines_cv", "visualize.Visualize_graph.draw_lines_cv", "visualize.Visualize_graph.draw_text", "visualize.Visualize_graph.display_saveimg"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.draw_text", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg"], ["", "def", "display_post_process", "(", "self", ",", "out", ",", "visit", ",", "score", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "\n", "        ", "self", ".", "draw_lines_cv", "(", "data", "=", "out", "[", "visit", "==", "1", "]", ",", "\n", "name", "=", "'post'", ",", "\n", "ref_name", "=", "'img'", ",", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "out", "[", "visit", "==", "2", "]", ",", "\n", "name", "=", "'post'", ",", "\n", "ref_name", "=", "'post'", ")", "\n", "\n", "self", ".", "draw_text", "(", "pred", "=", "score", ",", "label", "=", "1", ",", "\n", "name", "=", "'post'", ",", "ref_name", "=", "'post'", ",", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "self", ".", "display_saveimg", "(", "dir_name", "=", "dir_name", ",", "\n", "file_name", "=", "file_name", ",", "\n", "list", "=", "[", "'img'", ",", "'post'", ",", "'gt'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.display_adj_similarity_map_for_vertex": [[328, 360], ["numpy.round", "range", "to_np", "range", "visualize.Visualize_graph.Colormap", "visualize.Visualize_graph.draw_lines_cv", "visualize.Visualize_graph.draw_lines_cv", "visualize.Visualize_graph.draw_text", "visualize.Visualize_graph.display_saveimg", "to_np", "numpy.expand_dims", "numpy.expand_dims", "str", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.Colormap", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.draw_text", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "display_adj_similarity_map_for_vertex", "(", "self", ",", "out", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "        ", "pair_idx_set", "=", "out", "[", "'pair_idx_set'", "]", "\n", "score", "=", "np", ".", "round", "(", "to_np", "(", "out", "[", "'edge_score'", "]", "[", ":", ",", "0", "]", ")", ",", "3", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "out", "[", "'pair_idx_set'", "]", ".", "shape", "[", "0", "]", ",", "3", ")", ":", "\n", "            ", "if", "(", "pair_idx_set", "[", "i", ",", "0", "]", "!=", "pair_idx_set", "[", "i", ",", "1", "]", ")", "==", "True", ":", "\n", "                ", "continue", "\n", "", "for", "k", "in", "range", "(", "4", ")", ":", "\n", "\n", "                ", "sim_map", "=", "out", "[", "'sim_map'", "]", "[", "i", "]", "\n", "\n", "# sim_map", "\n", "out_map", "=", "self", ".", "Colormap", "(", "img", "=", "self", ".", "show", "[", "'img'", "]", ",", "\n", "mask", "=", "to_np", "(", "sim_map", "[", "k", ",", "0", "]", ")", ")", "\n", "self", ".", "show", "[", "'sim_map'", "]", "=", "out_map", "\n", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "np", ".", "expand_dims", "(", "self", ".", "candidates", "[", "pair_idx_set", "[", "i", ",", "0", "]", "]", ",", "0", ")", ",", "\n", "name", "=", "'sim_map'", ",", "\n", "ref_name", "=", "'sim_map'", ",", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "np", ".", "expand_dims", "(", "self", ".", "candidates", "[", "pair_idx_set", "[", "i", ",", "1", "]", "]", ",", "0", ")", ",", "\n", "name", "=", "'sim_map'", ",", "\n", "ref_name", "=", "'sim_map'", ",", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "self", ".", "draw_text", "(", "pred", "=", "score", "[", "i", "]", ",", "label", "=", "1", ",", "\n", "name", "=", "'sim_map'", ",", "ref_name", "=", "'sim_map'", ",", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "self", ".", "display_saveimg", "(", "dir_name", "=", "dir_name", ",", "\n", "file_name", "=", "file_name", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_'", "+", "str", "(", "k", ")", "+", "'.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'sim_map'", ",", "'gt'", "]", ")", "\n", "# break", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.display_adj_similarity_map_for_edge": [[362, 399], ["numpy.round", "range", "to_np", "range", "visualize.Visualize_graph.Colormap", "visualize.Visualize_graph.draw_lines_cv", "visualize.Visualize_graph.draw_text", "visualize.Visualize_graph.display_saveimg", "to_np", "numpy.expand_dims", "str", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.Colormap", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.draw_text", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "", "", "def", "display_adj_similarity_map_for_edge", "(", "self", ",", "out", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "        ", "pair_idx_set", "=", "out", "[", "'edge_idx_set'", "]", "\n", "score", "=", "np", ".", "round", "(", "to_np", "(", "out", "[", "'edge_score'", "]", "[", ":", ",", "0", "]", ")", ",", "3", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "            ", "step", "=", "1", "\n", "", "else", ":", "\n", "            ", "step", "=", "10", "\n", "\n", "", "for", "i", "in", "range", "(", "0", ",", "out", "[", "'edge_idx_set'", "]", ".", "shape", "[", "0", "]", ",", "step", ")", ":", "\n", "            ", "if", "(", "pair_idx_set", "[", "i", ",", "0", "]", "==", "pair_idx_set", "[", "i", ",", "1", "]", ")", "==", "True", ":", "\n", "                ", "continue", "\n", "", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "\n", "                ", "sim_map", "=", "out", "[", "'sim_map'", "]", "[", "i", "]", "\n", "\n", "# sim_map", "\n", "out_map", "=", "self", ".", "Colormap", "(", "img", "=", "self", ".", "show", "[", "'img'", "]", ",", "\n", "mask", "=", "to_np", "(", "sim_map", "[", "k", ",", "0", "]", ")", ")", "\n", "self", ".", "show", "[", "'sim_map'", "]", "=", "out_map", "\n", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "np", ".", "expand_dims", "(", "self", ".", "candidates", "[", "pair_idx_set", "[", "i", ",", "k", "]", "]", ",", "0", ")", ",", "\n", "name", "=", "'sim_map'", ",", "\n", "ref_name", "=", "'sim_map'", ",", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "# self.draw_lines_cv(data=np.expand_dims(self.candidates[pair_idx_set[i, 1]], 0),", "\n", "#                    name='sim_map',", "\n", "#                    ref_name='sim_map',", "\n", "#                    color=(0, 255, 0))", "\n", "self", ".", "draw_text", "(", "pred", "=", "score", "[", "i", "]", ",", "label", "=", "1", ",", "\n", "name", "=", "'sim_map'", ",", "ref_name", "=", "'sim_map'", ",", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "self", ".", "display_saveimg", "(", "dir_name", "=", "dir_name", ",", "\n", "file_name", "=", "file_name", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_'", "+", "str", "(", "k", ")", "+", "'.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'sim_map'", ",", "'gt'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.display_edge_score": [[400, 425], ["numpy.round", "range", "to_np", "visualize.Visualize_graph.draw_lines_cv", "visualize.Visualize_graph.draw_text", "visualize.Visualize_graph.display_saveimg", "to_np", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.draw_text", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "", "", "def", "display_edge_score", "(", "self", ",", "out", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "        ", "pair_idx_set", "=", "out", "[", "'edge_idx_set'", "]", "\n", "score", "=", "np", ".", "round", "(", "to_np", "(", "out", "[", "'edge_score'", "]", "[", ":", ",", "0", "]", ")", ",", "3", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "            ", "step", "=", "1", "\n", "", "else", ":", "\n", "            ", "step", "=", "10", "\n", "\n", "", "for", "i", "in", "range", "(", "0", ",", "out", "[", "'edge_idx_set'", "]", ".", "shape", "[", "0", "]", ",", "step", ")", ":", "\n", "            ", "if", "(", "pair_idx_set", "[", "i", ",", "0", "]", "==", "pair_idx_set", "[", "i", ",", "1", "]", ")", "==", "True", ":", "\n", "                ", "continue", "\n", "\n", "", "self", ".", "draw_lines_cv", "(", "data", "=", "self", ".", "candidates", "[", "to_np", "(", "pair_idx_set", "[", "i", ",", ":", "]", ")", "]", ",", "\n", "name", "=", "'edge_score'", ",", "\n", "ref_name", "=", "'img'", ",", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "self", ".", "draw_text", "(", "pred", "=", "score", "[", "i", "]", ",", "label", "=", "1", ",", "\n", "name", "=", "'edge_score'", ",", "ref_name", "=", "'edge_score'", ",", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "self", ".", "display_saveimg", "(", "dir_name", "=", "dir_name", ",", "\n", "file_name", "=", "file_name", "+", "'_'", "+", "str", "(", "i", ")", "+", "'.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'edge_score'", ",", "'gt'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_graph.Colormap": [[427, 436], ["cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "numpy.uint8", "cv2.applyColorMap", "cv2.applyColorMap", "cv2.applyColorMap", "cv2.applyColorMap", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize"], "methods", ["None"], ["", "", "def", "Colormap", "(", "self", ",", "img", ",", "mask", ",", "alpha", "=", "0.5", ")", ":", "\n", "\n", "        ", "mask", "=", "cv2", ".", "resize", "(", "mask", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n", "mask", "=", "np", ".", "uint8", "(", "cv2", ".", "resize", "(", "mask", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "*", "255", ")", "\n", "mask", "=", "cv2", ".", "applyColorMap", "(", "mask", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "\n", "out", "=", "img", "*", "alpha", "+", "mask", "*", "(", "1", "-", "alpha", ")", "\n", "\n", "return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.display_for_train_reg": [[102, 160], ["visualize.Visualize_cv.update_image", "visualize.Visualize_cv.update_image_name", "to_np", "to_np", "to_np", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.draw_lines_cv", "visualize.Visualize_cv.display_saveimg", "visualize.Visualize_cv.process_for_reg", "numpy.array", "visualize.Visualize_cv.process_for_reg", "numpy.array", "visualize.Visualize_cv.process_for_reg", "numpy.array", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image_name", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.process_for_reg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.process_for_reg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.process_for_reg"], ["cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", ",", "disp", ")", "\n", "\n", "", "def", "display_for_train_node_score", "(", "self", ",", "batch", ",", "out", ",", "train_data", ",", "idx", ")", ":", "\n", "\n", "        ", "self", ".", "update_image", "(", "batch", "[", "'img'", "]", "[", "0", "]", ")", "\n", "self", ".", "update_image_name", "(", "batch", "[", "'img_name'", "]", "[", "0", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "train_data", "[", "'node_idx_set'", "]", ".", "shape", "[", "0", "]", ",", "3", ")", ":", "\n", "\n", "            ", "line_pts", "=", "{", "'out'", ":", "[", "]", ",", "'node'", ":", "[", "]", ",", "'gt'", ":", "[", "]", "}", "\n", "\n", "# out masked line", "\n", "node_idx", "=", "to_np", "(", "train_data", "[", "'node_idx_set'", "]", "[", "i", ":", "i", "+", "1", ",", "0", "]", ")", "\n", "out_pts", "=", "self", ".", "candidates", "[", "node_idx", ",", ":", "]", "\n", "line_pts", "[", "'node'", "]", ".", "append", "(", "out_pts", ")", "\n", "\n", "# to numpy", "\n", "line_pts", "[", "'gt'", "]", "=", "np", ".", "float32", "(", "batch", "[", "'mul_gt'", "]", "[", "0", "]", ")", "\n", "line_pts", "[", "'node'", "]", "=", "np", ".", "concatenate", "(", "line_pts", "[", "'node'", "]", ")", "\n", "\n", "# draw lines", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'gt'", "]", ",", "name", "=", "'gt'", ")", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'node'", "]", ",", "name", "=", "'node'", ")", "\n", "\n", "self", ".", "draw_text", "(", "pred", "=", "np", ".", "round", "(", "to_np2", "(", "out", "[", "'node_score'", "]", "[", "i", ",", "0", "]", ")", ",", "3", ")", ",", "\n", "label", "=", "np", ".", "round", "(", "to_np2", "(", "train_data", "[", "'gt_node_score'", "]", "[", "i", ",", "0", "]", ")", ",", "3", ")", ",", "\n", "name", "=", "'node'", ",", "ref_name", "=", "'node'", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "\n", "# save result", "\n", "self", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/display/'", ",", "\n", "file_name", "=", "str", "(", "idx", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_node.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'node'", ",", "'gt'", "]", ")", "\n", "if", "self", ".", "cfg", ".", "disp_train_per_case", "==", "True", ":", "\n", "                ", "self", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/display/'", "+", "str", "(", "int", "(", "train_data", "[", "'node_case'", "]", "[", "i", "]", ")", ")", "+", "'/'", ",", "\n", "file_name", "=", "str", "(", "idx", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'_node.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'node'", ",", "'gt'", "]", ")", "\n", "\n", "\n", "", "", "", "def", "display_for_train_edge_score", "(", "self", ",", "batch", ",", "out", ",", "train_data", ",", "idx", ")", ":", "\n", "\n", "        ", "self", ".", "update_image", "(", "batch", "[", "'img'", "]", "[", "0", "]", ")", "\n", "self", ".", "update_image_name", "(", "batch", "[", "'img_name'", "]", "[", "0", "]", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "train_data", "[", "'edge_idx_set'", "]", ".", "shape", "[", "0", "]", ",", "3", ")", ":", "\n", "\n", "            ", "line_pts", "=", "{", "'out'", ":", "[", "]", ",", "'edge'", ":", "[", "]", ",", "'gt'", ":", "[", "]", "}", "\n", "\n", "# out masked line", "\n", "idx1", "=", "to_np", "(", "train_data", "[", "'edge_idx_set'", "]", "[", "i", ":", "i", "+", "1", ",", "0", "]", ")", "\n", "out_pts", "=", "self", ".", "candidates", "[", "idx1", ",", ":", "]", "\n", "line_pts", "[", "'edge'", "]", ".", "append", "(", "out_pts", ")", "\n", "idx2", "=", "to_np", "(", "train_data", "[", "'edge_idx_set'", "]", "[", "i", ":", "i", "+", "1", ",", "1", "]", ")", "\n", "out_pts", "=", "self", ".", "candidates", "[", "idx2", ",", ":", "]", "\n", "line_pts", "[", "'edge'", "]", ".", "append", "(", "out_pts", ")", "\n", "\n", "# to numpy", "\n", "line_pts", "[", "'gt'", "]", "=", "np", ".", "float32", "(", "batch", "[", "'mul_gt'", "]", "[", "0", "]", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.process_for_reg": [[201, 224], ["reg_angle.clone", "range", "numpy.float32", "visualize.Visualize_cv.convert_to_line", "numpy.float32.append"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.convert_to_line"], ["            ", "line_pts", "[", "'out_mask'", "]", "=", "np", ".", "float32", "(", "line_pts", "[", "'out_mask'", "]", ")", "\n", "", "else", ":", "\n", "            ", "line_pts", "[", "'out_mask'", "]", "=", "np", ".", "concatenate", "(", "line_pts", "[", "'out_mask'", "]", ")", "\n", "\n", "# draw lines", "\n", "", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'out_center'", "]", ",", "name", "=", "'center'", ")", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "line_pts", "[", "'out_score'", "]", ",", "name", "=", "'out_score'", ")", "\n", "self", ".", "draw_lines_cv", "(", "data", "=", "out", "[", "'cls_mul_pts'", "]", ",", "name", "=", "'out_cls'", ")", "\n", "\n", "if", "'reg_mul_pts'", "in", "out", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "draw_lines_cv", "(", "data", "=", "out", "[", "'reg_mul_pts'", "]", ",", "name", "=", "'out_reg'", ")", "\n", "\n", "", "self", ".", "draw_lines_cv", "(", "data", "=", "mul_gt", ",", "name", "=", "'gt'", ",", "color", "=", "(", "255", ",", "0", ",", "0", ")", ")", "\n", "\n", "self", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "mode", "+", "'_'", "+", "dataset_name", "+", "'/display/'", ",", "\n", "file_name", "=", "str", "(", "idx", ")", "+", "'.jpg'", ",", "\n", "list", "=", "[", "'img'", ",", "'center'", ",", "'out_score'", ",", "'out_cls'", ",", "'out_reg'", ",", "'gt'", "]", ")", "\n", "\n", "", "def", "convert_to_line", "(", "self", ",", "angle", ",", "dist", ")", ":", "\n", "        ", "angle", "=", "to_np2", "(", "angle", ")", "*", "90", "\n", "dist", "=", "to_np2", "(", "dist", ")", "*", "self", ".", "max_dist", "\n", "a", "=", "np", ".", "tan", "(", "angle", "/", "180", "*", "math", ".", "pi", ")", "\n", "\n", "if", "angle", "!=", "-", "90", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.__init__": [[9, 20], ["numpy.array", "numpy.array", "numpy.zeros"], "methods", ["None"], ["import", "numpy", "as", "np", "\n", "\n", "from", "libs", ".", "utils", "import", "*", "\n", "\n", "class", "Visualize_cv", "(", "object", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image": [[30, 34], ["to_np", "to_np.permute", "numpy.uint8"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["self", ".", "center", "=", "np", ".", "array", "(", "self", ".", "cfg", ".", "center_pt", ")", "\n", "self", ".", "max_dist", "=", "self", ".", "cfg", ".", "max_dist", "\n", "self", ".", "top_k", "=", "20", "\n", "self", ".", "minimum_score", "=", "0.5", "\n", "# load", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_label": [[35, 39], ["to_np", "numpy.repeat", "numpy.expand_dims", "numpy.uint8"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["self", ".", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "hough_space", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'hough_space'", ")", "\n", "self", ".", "hough_h", ",", "self", ".", "hough_w", "=", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "self", ".", "angle_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "hough_space", "[", "'angle_list'", "]", ")", ")", "/", "90", "\n", "self", ".", "dist_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "hough_space", "[", "'dist_list'", "]", ")", ")", "/", "self", ".", "max_dist", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image_name": [[40, 42], ["None"], "methods", ["None"], ["\n", "", "def", "update_org_image", "(", "self", ",", "path", ",", "name", "=", "'org_img'", ")", ":", "\n", "        ", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv": [[43, 52], ["numpy.ascontiguousarray", "range", "numpy.copy", "cv2.line"], "methods", ["None"], ["self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n", "", "def", "update_image", "(", "self", ",", "img", ",", "name", "=", "'img'", ")", ":", "\n", "        ", "img", "=", "to_np", "(", "img", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "img", "=", "np", ".", "uint8", "(", "(", "img", "*", "self", ".", "std", "+", "self", ".", "mean", ")", "*", "255", ")", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n", "", "def", "update_label", "(", "self", ",", "label", ",", "name", "=", "'label'", ")", ":", "\n", "        ", "label", "=", "to_np", "(", "label", ")", "\n", "label", "=", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "uint8", "(", "label", "!=", "0", ")", "*", "255", ",", "axis", "=", "2", ")", ",", "3", ",", "2", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg": [[53, 60], ["range", "mkdir", "cv2.imwrite", "len", "numpy.concatenate", "visualize.Visualize.show[].split"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir"], ["self", ".", "show", "[", "name", "]", "=", "label", "\n", "\n", "", "def", "update_image_name", "(", "self", ",", "img_name", ")", ":", "\n", "        ", "self", ".", "show", "[", "'img_name'", "]", "=", "img_name", "\n", "\n", "", "def", "edge_map_to_rgb_image", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "=", "np", ".", "repeat", "(", "np", ".", "uint8", "(", "to_np2", "(", "data", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "*", "255", ")", ")", ",", "3", ",", "2", ")", "\n", "data", "=", "cv2", ".", "resize", "(", "data", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_gtlines": [[62, 76], ["visualize.Visualize.draw_lines_cv", "numpy.copy", "visualize.Visualize.display_saveimg", "visualize.Visualize.draw_lines_cv", "visualize.Visualize.draw_lines_cv"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv"], ["\n", "", "def", "draw_text", "(", "self", ",", "pred", ",", "label", ",", "name", ",", "ref_name", "=", "'img'", ",", "color", "=", "(", "255", ",", "0", ",", "0", ")", ")", ":", "\n", "        ", "img", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "copy", "(", "self", ".", "show", "[", "ref_name", "]", ")", ")", "\n", "cv2", ".", "rectangle", "(", "img", ",", "(", "1", ",", "1", ")", ",", "(", "250", ",", "120", ")", ",", "color", ",", "1", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "'pred : '", "+", "str", "(", "pred", ")", ",", "(", "10", ",", "50", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "color", ",", "2", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "'label : '", "+", "str", "(", "label", ")", ",", "(", "10", ",", "100", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "color", ",", "2", ")", "\n", "self", ".", "show", "[", "name", "]", "=", "img", "\n", "\n", "", "def", "draw_lines_cv", "(", "self", ",", "data", ",", "name", ",", "ref_name", "=", "'img'", ",", "color", "=", "(", "255", ",", "0", ",", "0", ")", ",", "s", "=", "2", ")", ":", "\n", "        ", "img", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "copy", "(", "self", ".", "show", "[", "ref_name", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pts", "=", "data", "[", "i", "]", "\n", "pt_1", "=", "(", "pts", "[", "0", "]", ",", "pts", "[", "1", "]", ")", "\n", "pt_2", "=", "(", "pts", "[", "2", "]", ",", "pts", "[", "3", "]", ")", "\n", "img", "=", "cv2", ".", "line", "(", "img", ",", "pt_1", ",", "pt_2", ",", "color", ",", "s", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.__init__": [[14, 86], ["torch.Module.__init__", "np.float32", "np.int32", "load_pickle", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "Separated_Region", "Separated_Region.run", "dict", "load_pickle", "load_pickle", "load_pickle", "np.array", "to_tensor().type", "model_snet.Model.inlier_mask[].nonzero", "vgg16", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model_snet.Model.line_mask[].view().type", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "to_tensor().view", "to_tensor().view", "to_tensor", "to_tensor", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "to_tensor", "np.float32", "np.float32", "model_snet.Model.line_mask[].view", "to_tensor", "to_tensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# cfg", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "self", ".", "max_dist", "=", "self", ".", "cfg", ".", "max_dist", "\n", "self", ".", "sf", "=", "cfg", ".", "scale_factor", "\n", "\n", "# candidates", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "self", ".", "cfg", ".", "size", ")", "\n", "self", ".", "sf", "=", "self", ".", "cfg", ".", "scale_factor", "\n", "self", ".", "seg_size", "=", "np", ".", "int32", "(", "self", ".", "size", "/", "self", ".", "sf", "[", "1", "]", ")", "\n", "\n", "# load candidate lines", "\n", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "self", ".", "c_num", "=", "candidates", ".", "shape", "[", "0", "]", "\n", "c_idx", "=", "torch", ".", "arange", "(", "self", ".", "c_num", ")", "\n", "\n", "# generate line mask", "\n", "sep_region", "=", "Separated_Region", "(", "cfg", ")", "\n", "line_data", "=", "sep_region", ".", "run", "(", "c_idx", ")", "\n", "self", ".", "line_mask", "=", "line_data", "[", "'line_mask'", "]", "\n", "self", ".", "line_n", "=", "dict", "(", ")", "\n", "for", "sf", "in", "self", ".", "sf", ":", "\n", "            ", "n", ",", "h", ",", "w", ",", "_", "=", "self", ".", "line_mask", "[", "sf", "]", ".", "shape", "\n", "self", ".", "line_mask", "[", "sf", "]", "=", "self", ".", "line_mask", "[", "sf", "]", ".", "view", "(", "1", ",", "1", ",", "n", ",", "h", ",", "w", ")", ".", "type", "(", "torch", ".", "float", ")", "\n", "self", ".", "line_n", "[", "sf", "]", "=", "torch", ".", "sum", "(", "self", ".", "line_mask", "[", "sf", "]", ",", "dim", "=", "[", "3", ",", "4", "]", ")", "\n", "\n", "", "angle", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'angle'", ")", "\n", "dist", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'dist'", ")", "\n", "hough_space", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'hough_space'", ")", "\n", "\n", "self", ".", "cluster_num", "=", "self", ".", "cfg", ".", "cluster_num", "\n", "self", ".", "angle", "=", "to_tensor", "(", "angle", ")", ".", "view", "(", "1", ",", "1", ",", "self", ".", "c_num", ")", "/", "90", "\n", "self", ".", "dist", "=", "to_tensor", "(", "dist", ")", ".", "view", "(", "1", ",", "1", ",", "self", ".", "c_num", ")", "/", "self", ".", "max_dist", "\n", "self", ".", "center", "=", "np", ".", "array", "(", "self", ".", "cfg", ".", "center_pt", ")", "\n", "self", ".", "hough_space", "=", "hough_space", "\n", "self", ".", "hough_h", ",", "self", ".", "hough_w", "=", "self", ".", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "self", ".", "hough_space_idx", "=", "to_tensor", "(", "self", ".", "hough_space", "[", "'idx'", "]", "[", "self", ".", "hough_h", "//", "3", ":", "self", ".", "hough_h", "//", "3", "*", "2", "]", ")", ".", "type", "(", "torch", ".", "long", ")", "\n", "self", ".", "inlier_mask", "=", "(", "self", ".", "hough_space_idx", "!=", "-", "1", ")", ".", "view", "(", "1", ",", "1", ",", "self", ".", "hough_h", "//", "3", ",", "self", ".", "hough_w", ")", "\n", "self", ".", "inlier_mask2", "=", "(", "self", ".", "hough_space_idx", "!=", "-", "1", ")", ".", "view", "(", "1", ",", "1", ",", "self", ".", "hough_h", "//", "3", ",", "self", ".", "hough_w", ")", ".", "type", "(", "torch", ".", "float", ")", "\n", "self", ".", "hough_cand_idx", "=", "self", ".", "inlier_mask", "[", "0", ",", "0", "]", ".", "nonzero", "(", ")", "\n", "self", ".", "angle_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "self", ".", "hough_space", "[", "'angle_list'", "]", ")", ")", "/", "90", "\n", "self", ".", "dist_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "self", ".", "hough_space", "[", "'dist_list'", "]", ")", ")", "/", "self", ".", "max_dist", "\n", "\n", "self", ".", "ca", "=", "2", "\n", "self", ".", "cd", "=", "2", "\n", "self", ".", "ua", "=", "1", "\n", "self", ".", "ud", "=", "1", "\n", "self", ".", "pa", "=", "1", "\n", "self", ".", "pd", "=", "1", "\n", "\n", "self", ".", "c_sq", "=", "1", "\n", "\n", "# model", "\n", "self", ".", "encoder", "=", "vgg16", "(", "pretrained", "=", "True", ")", "\n", "\n", "# filter", "\n", "self", ".", "feat_squeeze", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "32", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n", "self", ".", "squeeze", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv1d", "(", "64", ",", "self", ".", "c_sq", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "self", ".", "squeeze2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.extract_line_feat": [[87, 92], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "feat_map.view"], "methods", ["None"], ["nn", ".", "Conv1d", "(", "64", ",", "2", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n", "", "def", "extract_line_feat", "(", "self", ",", "feat_map", ",", "idx", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "feat_map", ".", "shape", "\n", "line_feat", "=", "torch", ".", "sum", "(", "self", ".", "line_mask", "[", "idx", "]", "*", "feat_map", ".", "view", "(", "b", ",", "c", ",", "1", ",", "h", ",", "w", ")", ",", "dim", "=", "(", "3", ",", "4", ")", ")", "/", "self", ".", "line_n", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.selection_and_removal": [[93, 128], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "np.maximum", "np.minimum", "np.maximum", "np.minimum", "to_tensor().type().reshape", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros.nonzero", "torch.zeros.nonzero", "torch.zeros.nonzero", "torch.zeros.nonzero", "torch.zeros.nonzero", "torch.zeros.nonzero", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "to_np", "to_np", "to_tensor().type", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "to_np", "to_np", "to_tensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor"], ["return", "line_feat", "\n", "\n", "", "def", "selection_and_removal", "(", "self", ",", "score", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "sort", "(", "score", ",", "descending", "=", "True", ")", "[", "1", "]", "[", ":", ",", "0", "]", "\n", "\n", "a_idx", ",", "d_idx", "=", "(", "self", ".", "hough_space_idx", "==", "idx", "[", ":", ",", "0", "]", ")", ".", "nonzero", "(", ")", "[", "0", "]", "\n", "\n", "cluster", "=", "{", "}", "\n", "cluster", "[", "'angle'", "]", "=", "self", ".", "angle_list", "[", "a_idx", "]", "\n", "cluster", "[", "'dist'", "]", "=", "self", ".", "dist_list", "[", "d_idx", "]", "\n", "\n", "a_idx", "+=", "self", ".", "hough_h", "//", "3", "\n", "\n", "h", ",", "w", "=", "self", ".", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "check", "=", "torch", ".", "zeros", "(", "(", "h", ",", "w", ")", ",", "dtype", "=", "torch", ".", "int64", ")", "\n", "x1", "=", "np", ".", "maximum", "(", "to_np", "(", "a_idx", ")", "-", "self", ".", "ca", ",", "0", ")", "\n", "x2", "=", "np", ".", "minimum", "(", "to_np", "(", "a_idx", ")", "+", "self", ".", "ca", "+", "1", ",", "h", ")", "\n", "y1", "=", "np", ".", "maximum", "(", "to_np", "(", "d_idx", ")", "-", "self", ".", "cd", ",", "0", ")", "\n", "y2", "=", "np", ".", "minimum", "(", "to_np", "(", "d_idx", ")", "+", "self", ".", "cd", "+", "1", ",", "w", ")", "\n", "\n", "region_idx", "=", "to_tensor", "(", "self", ".", "hough_space", "[", "'idx'", "]", "[", "x1", ":", "x2", ",", "y1", ":", "y2", "]", ")", ".", "type", "(", "torch", ".", "long", ")", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "check", "[", "x1", ":", "x2", ",", "y1", ":", "y2", "]", "=", "1", "\n", "region_a_idx", "=", "check", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "region_d_idx", "=", "check", ".", "nonzero", "(", ")", "[", ":", ",", "1", "]", "\n", "\n", "mask", "=", "torch", ".", "zeros", "(", "(", "1", ",", "1", ",", "self", ".", "c_num", ")", ")", ".", "cuda", "(", ")", "\n", "mask", "[", ":", ",", ":", ",", "region_idx", "]", "=", "1", "\n", "\n", "cluster", "[", "'a_idx'", "]", "=", "region_a_idx", "\n", "cluster", "[", "'d_idx'", "]", "=", "region_d_idx", "\n", "cluster", "[", "'ca_idx'", "]", "=", "a_idx", "\n", "cluster", "[", "'cd_idx'", "]", "=", "d_idx", "\n", "cluster", "[", "'center_idx'", "]", "=", "idx", "[", ":", ",", "0", "]", "\n", "cluster", "[", "'cluster_idx'", "]", "=", "region_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.initialize": [[129, 132], ["torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["return", "mask", ",", "cluster", ",", "score", "[", "0", ",", "0", ",", "idx", "[", ":", ",", "0", "]", "]", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "self", ".", "center_mask", "=", "torch", ".", "ones", "(", "(", "1", ",", "1", ",", "self", ".", "c_num", ")", ")", ".", "cuda", "(", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.forward_for_cls": [[133, 149], ["model_snet.Model.encoder", "model_snet.Model.feat_squeeze", "model_snet.Model.feat_squeeze", "model_snet.Model.extract_line_feat", "model_snet.Model.extract_line_feat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_snet.Model.squeeze"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.extract_line_feat", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.extract_line_feat"], ["self", ".", "visit_mask", "=", "torch", ".", "ones", "(", "(", "1", ",", "1", ",", "self", ".", "c_num", ")", ")", ".", "cuda", "(", ")", "\n", "\n", "", "def", "forward_for_cls", "(", "self", ",", "img", ",", "is_training", "=", "True", ")", ":", "\n", "\n", "# Feature extraction", "\n", "        ", "feat1", ",", "feat2", "=", "self", ".", "encoder", "(", "img", ")", "\n", "sq_feat1", "=", "self", ".", "feat_squeeze", "(", "feat1", ")", "\n", "sq_feat2", "=", "self", ".", "feat_squeeze", "(", "feat2", ")", "\n", "\n", "# Line feature extraction", "\n", "l_feat1", "=", "self", ".", "extract_line_feat", "(", "sq_feat1", ",", "self", ".", "sf", "[", "0", "]", ")", "\n", "l_feat2", "=", "self", ".", "extract_line_feat", "(", "sq_feat2", ",", "self", ".", "sf", "[", "1", "]", ")", "\n", "\n", "self", ".", "l_feat", "=", "torch", ".", "cat", "(", "(", "l_feat1", ",", "l_feat2", ")", ",", "dim", "=", "1", ")", "# [b, c', n] -> [b, 2c', n]", "\n", "score", "=", "self", ".", "squeeze", "(", "self", ".", "l_feat", ")", "# [b, 2c', n] -> [b, 1, n]", "\n", "\n", "return", "{", "'score'", ":", "score", "}", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.forward_for_reg": [[151, 155], ["model_snet.Model.squeeze2", "model_snet.Model.permute"], "methods", ["None"], ["\n", "", "def", "forward_for_reg", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "offset", "=", "self", ".", "squeeze2", "(", "self", ".", "l_feat", "[", ":", ",", ":", ",", "idx", "]", ")", "# [b, 2c', n] -> [b, 1, n]", "\n", "return", "{", "'offset'", ":", "offset", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "}", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function_MSE.__init__": [[9, 13], ["torch.Module.__init__", "torch.MSELoss", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Loss_Function_MSE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mse_loss", "=", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "weight", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function_MSE.forward": [[14, 20], ["loss.Loss_Function_MSE.balanced_MSE_loss", "loss.Loss_Function_MSE.balanced_MSE_loss"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function.balanced_MSE_loss", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function.balanced_MSE_loss"], ["", "def", "forward", "(", "self", ",", "out", ",", "train_data1", ",", "train_data2", ")", ":", "\n", "        ", "node_pos_loss", ",", "node_neg_loss", "=", "self", ".", "balanced_MSE_loss", "(", "out", "[", "'node_score'", "]", ",", "train_data1", "[", "'gt_node_score'", "]", ",", "tau", "=", "0", ")", "\n", "edge_pos_loss", ",", "edge_neg_loss", "=", "self", ".", "balanced_MSE_loss", "(", "out", "[", "'edge_score'", "]", ",", "train_data2", "[", "'gt_edge_score'", "]", ",", "tau", "=", "0", ")", "\n", "\n", "return", "node_pos_loss", "+", "node_neg_loss", "+", "edge_pos_loss", "+", "edge_neg_loss", ",", "node_pos_loss", "+", "node_neg_loss", ",", "edge_pos_loss", "+", "edge_neg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function_MSE.balanced_MSE_loss": [[21, 34], ["torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "loss.Loss_Function_MSE.mse_loss", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "loss.Loss_Function_MSE.mse_loss", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["None"], ["", "def", "balanced_MSE_loss", "(", "self", ",", "out", ",", "gt", ",", "tau", ")", ":", "\n", "        ", "neg_idx", "=", "(", "gt", "[", ":", ",", ":", "]", "<=", "tau", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "pos_idx", "=", "(", "gt", "[", ":", ",", ":", "]", ">", "tau", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "\n", "if", "neg_idx", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "            ", "neg_loss", "=", "torch", ".", "FloatTensor", "(", "[", "0", "]", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "neg_loss", "=", "self", ".", "mse_loss", "(", "out", "[", "neg_idx", ",", ":", "]", ",", "gt", "[", "neg_idx", ",", ":", "]", ")", "\n", "", "if", "pos_idx", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "            ", "pos_loss", "=", "torch", ".", "FloatTensor", "(", "[", "0", "]", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "pos_loss", "=", "self", ".", "mse_loss", "(", "out", "[", "pos_idx", ",", ":", "]", ",", "gt", "[", "pos_idx", ",", ":", "]", ")", "\n", "", "return", "pos_loss", ",", "neg_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Regression2.__init__": [[14, 18], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size1", ",", "size2", "=", "256", ")", ":", "\n", "        ", "super", "(", "Regression2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "size1", ",", "size2", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "size2", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Regression2.forward": [[19, 28], ["x.view.view.view", "model_hnet.Regression2.linear1", "torch.relu", "torch.relu", "torch.relu", "model_hnet.Regression2.linear2", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "out", "=", "self", ".", "linear1", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "linear2", "(", "out", ")", "\n", "out", "=", "F", ".", "sigmoid", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Regression3.__init__": [[30, 34], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size1", ",", "size2", "=", "256", ")", ":", "\n", "        ", "super", "(", "Regression3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "size1", ",", "size2", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "size2", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Regression3.forward": [[35, 44], ["x.view.view.view", "model_hnet.Regression3.linear1", "torch.relu", "torch.relu", "torch.relu", "model_hnet.Regression3.linear2", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "out", "=", "self", ".", "linear1", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "linear2", "(", "out", ")", "\n", "out", "=", "F", ".", "sigmoid", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Regression.__init__": [[46, 49], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", "=", "256", ")", ":", "\n", "        ", "super", "(", "Regression", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "channel", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Regression.forward": [[50, 55], ["model_hnet.Regression.linear", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "linear", "(", "x", ")", "\n", "out", "=", "F", ".", "sigmoid", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.__init__": [[57, 79], ["torch.Module.__init__", "np.float32", "vgg16", "model_hnet.Regression2", "model_hnet.Regression3", "Inter_Region", "Adjacent_Region"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# cfg", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "self", ".", "cfg", ".", "size", ")", "\n", "self", ".", "scale_factor", "=", "self", ".", "cfg", ".", "scale_factor", "\n", "self", ".", "feat_c", "=", "512", "\n", "self", ".", "sq_c", "=", "256", "\n", "self", ".", "region_num_list", "=", "[", "2", ",", "3", ",", "4", "]", "\n", "\n", "# model", "\n", "self", ".", "encoder", "=", "vgg16", "(", "pretrained", "=", "True", ")", "\n", "\n", "self", ".", "regression2", "=", "Regression2", "(", "size1", "=", "self", ".", "feat_c", "*", "4", ")", "\n", "self", ".", "regression3", "=", "Regression3", "(", "size1", "=", "self", ".", "feat_c", ")", "\n", "\n", "# module", "\n", "self", ".", "inter_region", "=", "Inter_Region", "(", "cfg", ")", "\n", "self", ".", "adj_region", "=", "Adjacent_Region", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.global_region_pooling": [[81, 97], ["torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "region_feat[].permute().contiguous", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "region_feat[].permute", "feat_map.view"], "methods", ["None"], ["", "def", "global_region_pooling", "(", "self", ",", "feat_map", ",", "mask", ")", ":", "\n", "        ", "ep", "=", "1e-7", "\n", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "feat_map", ".", "shape", "\n", "\n", "n", "=", "torch", ".", "sum", "(", "mask", "!=", "0", ",", "dim", "=", "(", "3", ",", "4", ")", ",", "keepdim", "=", "True", ")", ".", "type", "(", "torch", ".", "float", ")", "\n", "weight", "=", "(", "n", "/", "(", "torch", ".", "sum", "(", "n", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "+", "ep", ")", ")", "\n", "\n", "idx1", "=", "(", "n", "==", "0", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "idx2", "=", "(", "n", "==", "0", ")", ".", "nonzero", "(", ")", "[", ":", ",", "2", "]", "\n", "\n", "n", "[", "idx1", ",", ":", ",", "idx2", "]", "+=", "1", "\n", "\n", "region_feat", "=", "torch", ".", "sum", "(", "mask", "*", "feat_map", ".", "view", "(", "b", ",", "c", ",", "1", ",", "h", ",", "w", ")", ",", "dim", "=", "(", "3", ",", "4", ")", ",", "keepdim", "=", "True", ")", "/", "n", "\n", "region_feat", "=", "region_feat", "*", "weight", "\n", "return", "region_feat", "[", ":", ",", ":", ",", ":", ",", "0", ",", "0", "]", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.line_pooling": [[98, 102], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "line_feat[].permute().contiguous", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "line_feat[].permute"], "methods", ["None"], ["", "def", "line_pooling", "(", "self", ",", "feat_map", ",", "line_mask", ",", "mode", "=", "'node'", ")", ":", "\n", "        ", "num", "=", "torch", ".", "sum", "(", "line_mask", ",", "dim", "=", "(", "2", ",", "3", ")", ",", "keepdim", "=", "True", ")", "\n", "line_feat", "=", "torch", ".", "sum", "(", "line_mask", "*", "feat_map", ",", "dim", "=", "(", "2", ",", "3", ")", ",", "keepdim", "=", "True", ")", "/", "num", "\n", "return", "line_feat", "[", ":", ",", ":", ",", ":", ",", "0", "]", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.forward_encoder": [[104, 115], ["model_hnet.Model.encoder", "dict", "model_hnet.Model.inter_region.update_for_visualize", "model_hnet.Model.adj_region.update_for_visualize"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.update_for_visualize", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.update_for_visualize"], ["", "def", "forward_encoder", "(", "self", ",", "img", ",", "edge_data", ",", "is_training", "=", "False", ")", ":", "\n", "\n", "        ", "feat1", ",", "feat2", "=", "self", ".", "encoder", "(", "img", ")", "\n", "\n", "self", ".", "feat", "=", "dict", "(", ")", "\n", "self", ".", "feat", "[", "self", ".", "scale_factor", "[", "0", "]", "]", "=", "feat1", "\n", "self", ".", "feat", "[", "self", ".", "scale_factor", "[", "1", "]", "]", "=", "feat2", "\n", "\n", "if", "edge_data", "is", "not", "None", ":", "\n", "            ", "self", ".", "inter_region", ".", "update_for_visualize", "(", "img", ",", "edge_data", "[", "'edge_idx_set'", "]", ")", "\n", "self", ".", "adj_region", ".", "update_for_visualize", "(", "img", ",", "edge_data", "[", "'edge_idx_set'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.forward_node_score": [[116, 151], ["torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "[].permute", "[].permute", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "model_hnet.Model.line_pooling", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_hnet.Model.global_region_pooling", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_hnet.Model.regression3", "model_hnet.Model.regression2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "[].permute.view", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.line_pooling", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.global_region_pooling"], ["", "", "def", "forward_node_score", "(", "self", ",", "data", ",", "is_training", "=", "False", ")", ":", "\n", "        ", "temp_line_feat", "=", "torch", ".", "FloatTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "temp_node_score", "=", "torch", ".", "FloatTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "sf", "in", "self", ".", "scale_factor", ":", "\n", "# get feat map", "\n", "            ", "feat_map", "=", "self", ".", "feat", "[", "sf", "]", "\n", "_", ",", "c", ",", "_", ",", "_", "=", "feat_map", ".", "shape", "\n", "\n", "# get preprocessed data", "\n", "idx", "=", "data", "[", "'node_idx_set'", "]", "\n", "l_mask", "=", "data", "[", "'line_data'", "]", "[", "'line_mask'", "]", "[", "sf", "]", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "r_mask", "=", "data", "[", "'line_data'", "]", "[", "'region_mask'", "]", "[", "sf", "]", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "b", ",", "_", ",", "h", ",", "w", "=", "l_mask", ".", "shape", "\n", "buffer", "=", "torch", ".", "zeros", "(", "(", "b", ",", "2", ",", "self", ".", "feat_c", ")", ",", "dtype", "=", "torch", ".", "float", ")", ".", "cuda", "(", ")", "\n", "\n", "# line pooling", "\n", "line_feat", "=", "self", ".", "line_pooling", "(", "feat_map", ",", "l_mask", ",", "mode", "=", "'node'", ")", "\n", "temp_line_feat", "=", "torch", ".", "cat", "(", "(", "temp_line_feat", ",", "line_feat", ")", ",", "dim", "=", "1", ")", "\n", "\n", "# inter region correlation", "\n", "inter_feat", "=", "self", ".", "global_region_pooling", "(", "feat_map", ",", "r_mask", ".", "view", "(", "b", ",", "1", ",", "2", ",", "h", ",", "w", ")", ")", "\n", "inter_feat", "=", "torch", ".", "cat", "(", "(", "inter_feat", ",", "buffer", ")", ",", "dim", "=", "1", ")", "\n", "\n", "node_score", "=", "self", ".", "regression3", "(", "line_feat", ")", "\n", "alpha", "=", "self", ".", "regression2", "(", "inter_feat", ")", "\n", "tot_node_score", "=", "node_score", "*", "alpha", "\n", "temp_node_score", "=", "torch", ".", "cat", "(", "(", "temp_node_score", ",", "tot_node_score", ")", ",", "dim", "=", "1", ")", "\n", "\n", "", "tot_node_score", "=", "torch", ".", "mean", "(", "temp_node_score", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "if", "is_training", "==", "True", ":", "\n", "            ", "return", "{", "'node_score'", ":", "tot_node_score", "}", "\n", "", "else", ":", "\n", "            ", "return", "{", "'node_score'", ":", "tot_node_score", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.forward_edge_score": [[152, 192], ["torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "[].permute", "[].permute", "[].permute", "[].permute", "model_hnet.Model.line_pooling", "model_hnet.Model.line_pooling", "model_hnet.Model.inter_region.get_inter_mask", "model_hnet.Model.global_region_pooling", "model_hnet.Model.regression3", "model_hnet.Model.regression3", "model_hnet.Model.regression2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "model_hnet.Model.view"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.line_pooling", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.line_pooling", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.get_inter_mask", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_hnet.Model.global_region_pooling"], ["", "", "def", "forward_edge_score", "(", "self", ",", "data", ",", "is_training", "=", "False", ")", ":", "\n", "\n", "        ", "temp_edge_score", "=", "torch", ".", "FloatTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "sf", "in", "self", ".", "scale_factor", ":", "\n", "# get feat map", "\n", "            ", "feat_map", "=", "self", ".", "feat", "[", "sf", "]", "\n", "_", ",", "c", ",", "_", ",", "_", "=", "feat_map", ".", "shape", "\n", "\n", "# get preprocessed data", "\n", "edge_idx", "=", "data", "[", "'edge_idx_set'", "]", "\n", "r_mask1", "=", "data", "[", "'line_data1'", "]", "[", "'region_mask'", "]", "[", "sf", "]", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "r_mask2", "=", "data", "[", "'line_data2'", "]", "[", "'region_mask'", "]", "[", "sf", "]", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "l_mask1", "=", "data", "[", "'line_data1'", "]", "[", "'line_mask'", "]", "[", "sf", "]", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "l_mask2", "=", "data", "[", "'line_data2'", "]", "[", "'line_mask'", "]", "[", "sf", "]", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "b", ",", "_", ",", "h", ",", "w", "=", "r_mask1", ".", "shape", "\n", "\n", "# line pooling", "\n", "line_feat1", "=", "self", ".", "line_pooling", "(", "feat_map", ",", "l_mask1", ")", "\n", "line_feat2", "=", "self", ".", "line_pooling", "(", "feat_map", ",", "l_mask2", ")", "\n", "\n", "# inter region correlation", "\n", "inter_mask", "=", "self", ".", "inter_region", ".", "get_inter_mask", "(", "r_mask1", ",", "r_mask2", ")", "\n", "inter_feat", "=", "self", ".", "global_region_pooling", "(", "feat_map", ",", "inter_mask", ".", "view", "(", "b", ",", "1", ",", "4", ",", "h", ",", "w", ")", ")", "\n", "\n", "node_score1", "=", "self", ".", "regression3", "(", "line_feat1", ")", "\n", "node_score2", "=", "self", ".", "regression3", "(", "line_feat2", ")", "\n", "alpha", "=", "self", ".", "regression2", "(", "inter_feat", ")", "\n", "\n", "tot_node_score", "=", "(", "node_score1", "+", "node_score2", ")", "/", "2", "\n", "edge_score", "=", "tot_node_score", "*", "alpha", "\n", "\n", "temp_edge_score", "=", "torch", ".", "cat", "(", "(", "temp_edge_score", ",", "edge_score", ")", ",", "dim", "=", "1", ")", "\n", "\n", "", "tot_edge_score", "=", "torch", ".", "mean", "(", "temp_edge_score", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "if", "is_training", "==", "True", ":", "\n", "            ", "return", "{", "'edge_score'", ":", "tot_edge_score", "}", "\n", "", "else", ":", "\n", "            ", "return", "{", "'edge_score'", ":", "tot_edge_score", "}", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.backbone.vgg16_bn.__init__": [[8, 15], ["torch.Module.__init__", "list", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torchvision.models.vgg16_bn().features.children", "torchvision.models.vgg16_bn().features.children", "torchvision.models.vgg16_bn().features.children", "torchvision.models.vgg16_bn().features.children", "torchvision.models.vgg16_bn", "torchvision.models.vgg16_bn", "torchvision.models.vgg16_bn", "torchvision.models.vgg16_bn"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "super", "(", "vgg16_bn", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "model", "=", "list", "(", "torchvision", ".", "models", ".", "vgg16_bn", "(", "pretrained", "=", "pretrained", ")", ".", "features", ".", "children", "(", ")", ")", "\n", "\n", "model", "=", "model", "[", ":", "33", "]", "+", "model", "[", "34", ":", "43", "]", "\n", "\n", "self", ".", "model", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "model", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.backbone.vgg16_bn.forward": [[16, 20], ["backbone.vgg16_bn.model1", "backbone.vgg16_bn.model2"], "methods", ["None"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.backbone.vgg16.__init__": [[22, 39], ["torch.Module.__init__", "torchvision.vgg16", "torchvision.vgg16", "vgg_feature_layers.index", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list", "torchvision.vgg16.features.children", "torchvision.vgg16.features.children"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "vgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "model", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "vgg_feature_layers", "=", "[", "'conv1_1'", ",", "'relu1_1'", ",", "'conv1_2'", ",", "'relu1_2'", ",", "\n", "'pool1'", ",", "'conv2_1'", ",", "'relu2_1'", ",", "'conv2_2'", ",", "\n", "'relu2_2'", ",", "'pool2'", ",", "'conv3_1'", ",", "'relu3_1'", ",", "\n", "'conv3_2'", ",", "'relu3_2'", ",", "'conv3_3'", ",", "'relu3_3'", ",", "\n", "'pool3'", ",", "'conv4_1'", ",", "'relu4_1'", ",", "'conv4_2'", ",", "\n", "'relu4_2'", ",", "'conv4_3'", ",", "'relu4_3'", "]", "\n", "\n", "last_layer", "=", "'relu4_3'", "\n", "last_layer_idx", "=", "vgg_feature_layers", ".", "index", "(", "last_layer", ")", "\n", "\n", "self", ".", "model1", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "model", ".", "features", ".", "children", "(", ")", ")", "[", ":", "last_layer_idx", "+", "1", "]", ")", "\n", "self", ".", "model2", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "model", ".", "features", ".", "children", "(", ")", ")", "[", "last_layer_idx", "+", "1", ":", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.backbone.vgg16.forward": [[40, 45], ["backbone.vgg16.model1", "backbone.vgg16.model2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out1", "=", "self", ".", "model1", "(", "x", ")", "\n", "out2", "=", "self", ".", "model2", "(", "out1", ")", "\n", "\n", "return", "out1", ",", "out2", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.backbone.resnet.__init__": [[48, 89], ["torch.Module.__init__", "torchvision.models.resnet18", "torchvision.models.resnet18", "torchvision.models.resnet18", "torchvision.models.resnet18", "torchvision.models.resnet34", "torchvision.models.resnet34", "torchvision.models.resnet34", "torchvision.models.resnet34", "torchvision.models.resnet50", "torchvision.models.resnet50", "torchvision.models.resnet50", "torchvision.models.resnet50", "torchvision.models.resnet101", "torchvision.models.resnet101", "torchvision.models.resnet101", "torchvision.models.resnet101", "torchvision.models.resnet152", "torchvision.models.resnet152", "torchvision.models.resnet152", "torchvision.models.resnet152", "torchvision.models.resnext50_32x4d", "torchvision.models.resnext50_32x4d", "torchvision.models.resnext50_32x4d", "torchvision.models.resnext50_32x4d", "torchvision.models.resnext101_32x8d", "torchvision.models.resnext101_32x8d", "torchvision.models.resnext101_32x8d", "torchvision.models.resnext101_32x8d", "torchvision.models.wide_resnet50_2", "torchvision.models.wide_resnet50_2", "torchvision.models.wide_resnet50_2", "torchvision.models.wide_resnet50_2", "torchvision.models.wide_resnet101_2", "torchvision.models.wide_resnet101_2", "torchvision.models.wide_resnet101_2", "torchvision.models.wide_resnet101_2"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "super", "(", "resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "layers", "==", "'18'", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "resnet18", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "elif", "layers", "==", "'34'", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "resnet34", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "elif", "layers", "==", "'50'", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "elif", "layers", "==", "'101'", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "elif", "layers", "==", "'152'", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "resnet152", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "elif", "layers", "==", "'50next'", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "resnext50_32x4d", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "elif", "layers", "==", "'101next'", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "resnext101_32x8d", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "elif", "layers", "==", "'50wide'", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "wide_resnet50_2", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "elif", "layers", "==", "'101wide'", ":", "\n", "            ", "model", "=", "torchvision", ".", "models", ".", "wide_resnet101_2", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "self", ".", "conv1", "=", "model", ".", "conv1", "\n", "self", ".", "bn1", "=", "model", ".", "bn1", "\n", "self", ".", "relu", "=", "model", ".", "relu", "\n", "self", ".", "maxpool", "=", "model", ".", "maxpool", "\n", "self", ".", "layer1", "=", "model", ".", "layer1", "\n", "self", ".", "layer2", "=", "model", ".", "layer2", "\n", "self", ".", "layer3", "=", "model", ".", "layer3", "\n", "self", ".", "layer4", "=", "model", ".", "layer4", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.backbone.resnet.forward": [[90, 102], ["backbone.resnet.conv1", "backbone.resnet.bn1", "backbone.resnet.relu", "backbone.resnet.maxpool", "backbone.resnet.layer1", "backbone.resnet.layer2", "backbone.resnet.layer3", "backbone.resnet.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "layer4", "(", "x3", ")", "\n", "\n", "return", "x2", ",", "x3", ",", "x4", "\n", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function.__init__": [[7, 14], ["torch.Module.__init__", "torch.MSELoss", "torch.MSELoss", "torch.BCELoss", "torch.BCELoss", "torch.MSELoss", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__"], ["\n", "class", "Loss_Function_MSE", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Loss_Function_MSE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mse_loss", "=", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "weight", "=", "1", "\n", "\n", "", "def", "forward", "(", "self", ",", "out", ",", "train_data1", ",", "train_data2", ")", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function.forward": [[16, 25], ["loss.Loss_Function.balanced_BCE_loss", "loss.Loss_Function.balanced_MSE_loss", "loss.Loss_Function.balanced_MSE_loss"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function.balanced_BCE_loss", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function.balanced_MSE_loss", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function.balanced_MSE_loss"], ["edge_pos_loss", ",", "edge_neg_loss", "=", "self", ".", "balanced_MSE_loss", "(", "out", "[", "'edge_score'", "]", ",", "train_data2", "[", "'gt_edge_score'", "]", ",", "tau", "=", "0", ")", "\n", "\n", "return", "node_pos_loss", "+", "node_neg_loss", "+", "edge_pos_loss", "+", "edge_neg_loss", ",", "node_pos_loss", "+", "node_neg_loss", ",", "edge_pos_loss", "+", "edge_neg_loss", "\n", "\n", "", "def", "balanced_MSE_loss", "(", "self", ",", "out", ",", "gt", ",", "tau", ")", ":", "\n", "        ", "neg_idx", "=", "(", "gt", "[", ":", ",", ":", "]", "<=", "tau", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "pos_idx", "=", "(", "gt", "[", ":", ",", ":", "]", ">", "tau", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "\n", "if", "neg_idx", ".", "shape", "[", "0", "]", "==", "0", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function.balanced_BCE_loss": [[26, 36], ["loss.Loss_Function.loss_bce", "loss.Loss_Function.loss_bce"], "methods", ["None"], ["            ", "neg_loss", "=", "torch", ".", "FloatTensor", "(", "[", "0", "]", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "neg_loss", "=", "self", ".", "mse_loss", "(", "out", "[", "neg_idx", ",", ":", "]", ",", "gt", "[", "neg_idx", ",", ":", "]", ")", "\n", "", "if", "pos_idx", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "            ", "pos_loss", "=", "torch", ".", "FloatTensor", "(", "[", "0", "]", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "pos_loss", "=", "self", ".", "mse_loss", "(", "out", "[", "pos_idx", ",", ":", "]", ",", "gt", "[", "pos_idx", ",", ":", "]", ")", "\n", "", "return", "pos_loss", ",", "neg_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.loss.Loss_Function.balanced_MSE_loss": [[37, 47], ["loss.Loss_Function.loss_mse", "loss.Loss_Function.loss_mse"], "methods", ["None"], []], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward_graph.Forward_Model.__init__": [[5, 9], ["Separated_Region"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "\n", "self", ".", "sep_region", "=", "Separated_Region", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward_graph.Forward_Model.generate_node": [[10, 49], ["torch.LongTensor().cuda", "torch.LongTensor().cuda", "model.initialize", "model.forward_for_cls", "out[].clone", "range", "dict", "out_temp[].unsqueeze", "forward_graph.Forward_Model.sep_region.run", "model.selection_and_removal", "torch.cat", "torch.cat", "torch.LongTensor", "torch.LongTensor", "center_idx.clone"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.initialize", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.forward_for_cls", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.selection_and_removal"], ["", "def", "generate_node", "(", "self", ",", "img", ",", "model", ",", "max_iter", ")", ":", "\n", "        ", "out_temp", "=", "{", "}", "\n", "out_temp", "[", "'center_idx'", "]", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "out_temp", "[", "'cluster_idx'", "]", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "model", ".", "initialize", "(", ")", "\n", "out", "=", "model", ".", "forward_for_cls", "(", "img", ",", "is_training", "=", "False", ")", "\n", "score", "=", "out", "[", "'score'", "]", ".", "clone", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "max_iter", ")", ":", "\n", "\n", "# Clustering", "\n", "            ", "score_temp", "=", "score", "*", "model", ".", "visit_mask", "\n", "cluster_mask", ",", "cluster", ",", "max_score", "=", "model", ".", "selection_and_removal", "(", "score_temp", ")", "\n", "\n", "center_idx", "=", "cluster", "[", "'center_idx'", "]", "\n", "cluster_idx", "=", "cluster", "[", "'cluster_idx'", "]", "\n", "\n", "if", "self", ".", "cfg", ".", "constrain_max_score", "==", "True", ":", "\n", "                ", "if", "i", ">=", "2", "and", "max_score", "<", "0.5", ":", "\n", "                    ", "break", "\n", "\n", "", "", "if", "i", "==", "0", ":", "\n", "                ", "out_temp", "[", "'primary_idx'", "]", "=", "center_idx", ".", "clone", "(", ")", "\n", "\n", "", "out_temp", "[", "'center_idx'", "]", "=", "torch", ".", "cat", "(", "(", "out_temp", "[", "'center_idx'", "]", ",", "center_idx", ")", ",", "dim", "=", "0", ")", "\n", "out_temp", "[", "'cluster_idx'", "]", "=", "torch", ".", "cat", "(", "(", "out_temp", "[", "'cluster_idx'", "]", ",", "cluster_idx", ")", ",", "dim", "=", "0", ")", "\n", "model", ".", "center_mask", "[", ":", ",", ":", ",", "center_idx", "]", "=", "0", "\n", "model", ".", "visit_mask", "[", ":", ",", ":", ",", "cluster_idx", "]", "=", "0", "\n", "\n", "\n", "", "node_data", "=", "dict", "(", ")", "\n", "node_idx_set", "=", "out_temp", "[", "'center_idx'", "]", ".", "unsqueeze", "(", "1", ")", "\n", "node_data", "[", "'node_idx_set'", "]", "=", "node_idx_set", "\n", "node_data", "[", "'line_data'", "]", "=", "self", ".", "sep_region", ".", "run", "(", "node_idx_set", "[", ":", ",", "0", "]", ")", "\n", "\n", "out_temp", "[", "'score'", "]", "=", "score", "\n", "\n", "return", "out_temp", ",", "node_data", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward_graph.Forward_Model.generate_edge": [[50, 74], ["range", "to_tensor().unsqueeze", "to_tensor().unsqueeze", "dict", "torch.cat", "forward_graph.Forward_Model.sep_region.run", "forward_graph.Forward_Model.sep_region.run", "range", "to_tensor().unsqueeze.append", "to_tensor().unsqueeze.append", "to_tensor", "to_tensor", "int", "int", "np.array", "np.array"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor"], ["", "def", "generate_edge", "(", "self", ",", "out", ")", ":", "\n", "\n", "        ", "node", "=", "out", "[", "'center_idx'", "]", "\n", "\n", "num", "=", "node", ".", "shape", "[", "0", "]", "\n", "idx_set1", "=", "[", "]", "\n", "idx_set2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "num", ")", ":", "\n", "# for j in range(i, num):", "\n", "                ", "idx_set1", ".", "append", "(", "int", "(", "node", "[", "i", "]", ")", ")", "\n", "idx_set2", ".", "append", "(", "int", "(", "node", "[", "j", "]", ")", ")", "\n", "", "", "idx_set1", "=", "to_tensor", "(", "np", ".", "array", "(", "idx_set1", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "idx_set2", "=", "to_tensor", "(", "np", ".", "array", "(", "idx_set2", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "edge_data", "=", "dict", "(", ")", "\n", "edge_idx_set", "=", "torch", ".", "cat", "(", "(", "idx_set1", ",", "idx_set2", ")", ",", "dim", "=", "1", ")", "\n", "edge_data", "[", "'num'", "]", "=", "(", "num", ")", "*", "(", "num", "-", "1", ")", "//", "2", "\n", "edge_data", "[", "'line_data1'", "]", "=", "self", ".", "sep_region", ".", "run", "(", "edge_idx_set", "[", ":", ",", "0", "]", ")", "\n", "edge_data", "[", "'line_data2'", "]", "=", "self", ".", "sep_region", ".", "run", "(", "edge_idx_set", "[", ":", ",", "1", "]", ")", "\n", "edge_data", "[", "'edge_idx_set'", "]", "=", "edge_idx_set", "\n", "\n", "\n", "return", "edge_data", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.test_for_preparation.Test_Process_for_preparation.__init__": [[6, 19], ["to_tensor", "load_pickle", "numpy.float32"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "dict_DB", ")", ":", "\n", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "\n", "self", ".", "trainloader", "=", "dict_DB", "[", "'trainloader'", "]", "\n", "self", ".", "testloader", "=", "dict_DB", "[", "'testloader'", "]", "\n", "\n", "self", ".", "forward_model", "=", "dict_DB", "[", "'forward_model'", "]", "\n", "self", ".", "post_process", "=", "dict_DB", "[", "'post_process'", "]", "\n", "self", ".", "size", "=", "to_tensor", "(", "np", ".", "float32", "(", "cfg", ".", "size", ")", ")", "\n", "self", ".", "visualize", "=", "dict_DB", "[", "'visualize'", "]", "\n", "\n", "self", ".", "candidates", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.test_for_preparation.Test_Process_for_preparation.run": [[20, 65], ["print", "logger", "torch.no_grad", "s_net.eval", "enumerate", "save_pickle", "test_for_preparation.Test_Process_for_preparation.batch[].cuda", "test_for_preparation.Test_Process_for_preparation.forward_model.generate_node", "to_tensor", "datalist.append", "test_for_preparation.Test_Process_for_preparation.visualize.update_image", "test_for_preparation.Test_Process_for_preparation.visualize.update_image_name", "test_for_preparation.Test_Process_for_preparation.visualize.display_for_test", "os.path.split", "save_pickle", "print", "to_np"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward_graph.Forward_Model.generate_node", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image_name", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.display_for_test", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "run", "(", "self", ",", "s_net", ",", "mode", "=", "'val'", ",", "dataset_name", "=", "'SEL'", ",", "max_iter", "=", "None", ")", ":", "\n", "        ", "print", "(", "'preprocess start: generating training data for H-Net'", ")", "\n", "logger", "(", "'train start\\n'", ",", "self", ".", "logfile", ")", "\n", "\n", "result", "=", "{", "'out'", ":", "{", "'pri'", ":", "[", "]", ",", "'mul'", ":", "[", "]", "}", ",", "\n", "'gt'", ":", "{", "'pri'", ":", "[", "]", ",", "'mul'", ":", "[", "]", "}", ",", "\n", "'name'", ":", "[", "]", "}", "\n", "datalist", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "s_net", ".", "eval", "(", ")", "\n", "for", "i", ",", "self", ".", "batch", "in", "enumerate", "(", "self", ".", "trainloader", ")", ":", "# load batch data", "\n", "\n", "                ", "img", "=", "self", ".", "batch", "[", "'img'", "]", ".", "cuda", "(", ")", "\n", "img_name", "=", "self", ".", "batch", "[", "'img_name'", "]", "[", "0", "]", "\n", "mul_gt", "=", "self", ".", "batch", "[", "'mul_gt'", "]", "[", "0", "]", "\n", "\n", "out", ",", "_", "=", "self", ".", "forward_model", ".", "generate_node", "(", "img", ",", "s_net", ",", "max_iter", ")", "\n", "out", "[", "'cls_mul_pts'", "]", "=", "self", ".", "candidates", "[", "to_np", "(", "out", "[", "'center_idx'", "]", ")", "]", "\n", "# visualize", "\n", "if", "self", ".", "cfg", ".", "disp_test_result", "==", "True", ":", "\n", "                    ", "self", ".", "visualize", ".", "update_image", "(", "self", ".", "batch", "[", "'img'", "]", "[", "0", "]", ")", "\n", "self", ".", "visualize", ".", "update_image_name", "(", "self", ".", "batch", "[", "'img_name'", "]", "[", "0", "]", ")", "\n", "self", ".", "visualize", ".", "display_for_test", "(", "out", "=", "out", ",", "mul_gt", "=", "mul_gt", ",", "idx", "=", "i", ",", "\n", "mode", "=", "mode", ",", "dataset_name", "=", "dataset_name", ")", "\n", "\n", "# record output data", "\n", "", "result", "[", "'out'", "]", "[", "'cls_idx'", "]", "=", "(", "out", "[", "'score'", "]", "[", "0", ",", "0", "]", ">", "0.5", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "result", "[", "'out'", "]", "[", "'center_idx'", "]", "=", "out", "[", "'center_idx'", "]", "\n", "result", "[", "'out'", "]", "[", "'cluster_idx'", "]", "=", "out", "[", "'cluster_idx'", "]", "\n", "result", "[", "'out'", "]", "[", "'mul'", "]", "=", "to_tensor", "(", "out", "[", "'cls_mul_pts'", "]", ")", "\n", "result", "[", "'gt'", "]", "[", "'mul'", "]", "=", "mul_gt", "\n", "result", "[", "'name'", "]", "=", "img_name", "\n", "datalist", ".", "append", "(", "img_name", ")", "\n", "\n", "# save pickle", "\n", "if", "self", ".", "cfg", ".", "save_pickle", "==", "True", ":", "\n", "                    ", "dir", ",", "name", "=", "os", ".", "path", ".", "split", "(", "img_name", ")", "\n", "save_pickle", "(", "dir_name", "=", "'{}preprocess/{}/pickle/'", ".", "format", "(", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", ",", "dataset_name", ")", ",", "file_name", "=", "name", "[", ":", "-", "4", "]", ",", "data", "=", "result", ")", "\n", "", "if", "i", "%", "50", "==", "0", ":", "\n", "                    ", "print", "(", "'image %d ---> %s done!'", "%", "(", "i", ",", "img_name", ")", ")", "\n", "\n", "# save pickle", "\n", "", "", "", "if", "self", ".", "cfg", ".", "save_pickle", "==", "True", ":", "\n", "            ", "save_pickle", "(", "dir_name", "=", "'{}preprocess/{}/pickle/'", ".", "format", "(", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", ",", "dataset_name", ")", ",", "file_name", "=", "'datalist'", ",", "data", "=", "datalist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.test.Test_Process.__init__": [[6, 20], ["to_tensor", "dict_DB.keys", "numpy.float32"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "dict_DB", ")", ":", "\n", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "\n", "self", ".", "trainloader", "=", "dict_DB", "[", "'trainloader'", "]", "\n", "self", ".", "testloader", "=", "dict_DB", "[", "'testloader'", "]", "\n", "\n", "if", "'model'", "in", "dict_DB", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "model", "=", "dict_DB", "[", "'H_Net'", "]", "\n", "\n", "", "self", ".", "forward_model", "=", "dict_DB", "[", "'forward_model'", "]", "\n", "self", ".", "post_process", "=", "dict_DB", "[", "'post_process'", "]", "\n", "self", ".", "eval_line", "=", "dict_DB", "[", "'eval_line'", "]", "\n", "self", ".", "visualize", "=", "dict_DB", "[", "'visualize'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.test.Test_Process.run": [[21, 77], ["test.Test_Process.evaluation", "torch.no_grad", "s_net.eval", "enumerate", "save_pickle", "test.Test_Process.batch[].cuda", "test.Test_Process.forward_model.run_for_cls", "test.Test_Process.post_process.update_data", "test.Test_Process.post_process.run_for_cls", "test.Test_Process.forward_model.run_for_reg", "test.Test_Process.post_process.run_for_reg", "dict", "to_tensor", "to_tensor", "datalist.append", "test.Test_Process.visualize.update_image", "test.Test_Process.visualize.update_image_name", "test.Test_Process.visualize.display_for_test", "os.path.split", "save_pickle", "print", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.test.Test_Process.evaluation", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward.Forward_Model.run_for_cls", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.post_processes.post_process.Post_Process_hough_to_line.update_data", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward.Forward_Model.run_for_cls", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward.Forward_Model.run_for_reg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward.Forward_Model.run_for_reg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image_name", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize_cv.display_for_test", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle"], ["", "def", "run", "(", "self", ",", "h_net", ",", "s_net", ",", "mode", "=", "'val'", ",", "dataset_name", "=", "'SEL'", ")", ":", "\n", "        ", "result", "=", "{", "'out'", ":", "{", "'pri'", ":", "[", "]", ",", "'mul'", ":", "[", "]", "}", ",", "\n", "'gt'", ":", "{", "'pri'", ":", "[", "]", ",", "'mul'", ":", "[", "]", "}", ",", "\n", "'name'", ":", "[", "]", "}", "\n", "datalist", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "s_net", ".", "eval", "(", ")", "\n", "h_net", ".", "eval", "(", ")", "\n", "\n", "for", "i", ",", "self", ".", "batch", "in", "enumerate", "(", "self", ".", "testloader", ")", ":", "# load batch data", "\n", "\n", "                ", "img", "=", "self", ".", "batch", "[", "'img'", "]", ".", "cuda", "(", ")", "\n", "img_name", "=", "self", ".", "batch", "[", "'img_name'", "]", "[", "0", "]", "\n", "mul_gt", "=", "self", ".", "batch", "[", "'mul_gt'", "]", "[", "0", "]", "\n", "\n", "out_s", ",", "node_data", "=", "self", ".", "forward_model", ".", "generate_node", "(", "img", ",", "s_net", ",", "self", ".", "cfg", ".", "max_iter", ")", "\n", "edge_data", "=", "self", ".", "forward_model", ".", "generate_edge", "(", "out_s", ")", "\n", "\n", "h_net", ".", "forward_encoder", "(", "img", ",", "edge_data", ",", "is_training", "=", "False", ")", "\n", "out_h1", "=", "h_net", ".", "forward_node_score", "(", "node_data", ",", "is_training", "=", "False", ")", "\n", "out_h2", "=", "h_net", ".", "forward_edge_score", "(", "edge_data", ",", "is_training", "=", "False", ")", "\n", "\n", "out", "=", "dict", "(", "out_s", ",", "**", "out_h1", ",", "**", "out_h2", ")", "\n", "self", ".", "post_process", ".", "update", "(", "self", ".", "batch", ",", "out", ",", "mode", ",", "dataset_name", ",", "i", ")", "\n", "out_cls", "=", "self", ".", "post_process", ".", "run", "(", ")", "\n", "out_reg", "=", "s_net", ".", "forward_for_reg", "(", "idx", "=", "out_cls", "[", "'cls_idx'", "]", ")", "\n", "out_reg", "=", "self", ".", "post_process", ".", "run_for_reg", "(", "out_reg", ",", "out_cls", ")", "\n", "out_f", "=", "dict", "(", "out", ",", "**", "out_cls", ",", "**", "out_reg", ")", "\n", "\n", "# visualize", "\n", "if", "self", ".", "cfg", ".", "disp_test_result", "==", "True", ":", "\n", "                    ", "self", ".", "visualize", ".", "update_image", "(", "self", ".", "batch", "[", "'img'", "]", "[", "0", "]", ")", "\n", "self", ".", "visualize", ".", "update_image_name", "(", "self", ".", "batch", "[", "'img_name'", "]", "[", "0", "]", ")", "\n", "self", ".", "visualize", ".", "display_for_test", "(", "out", "=", "out_f", ",", "mul_gt", "=", "mul_gt", ",", "idx", "=", "i", ",", "\n", "mode", "=", "mode", ",", "dataset_name", "=", "dataset_name", ")", "\n", "\n", "# record output data", "\n", "", "result", "[", "'out'", "]", "[", "'pri_cls'", "]", "=", "out_f", "[", "'cls_pri_pts'", "]", "\n", "result", "[", "'out'", "]", "[", "'mul_cls'", "]", "=", "out_f", "[", "'cls_mul_pts'", "]", "\n", "result", "[", "'out'", "]", "[", "'pri_reg'", "]", "=", "to_tensor", "(", "out_f", "[", "'reg_pri_pts'", "]", ")", "\n", "result", "[", "'out'", "]", "[", "'mul_reg'", "]", "=", "to_tensor", "(", "out_f", "[", "'reg_mul_pts'", "]", ")", "\n", "result", "[", "'gt'", "]", "[", "'mul'", "]", "=", "mul_gt", "\n", "result", "[", "'name'", "]", "=", "img_name", "\n", "datalist", ".", "append", "(", "img_name", ")", "\n", "\n", "# save pickle", "\n", "if", "self", ".", "cfg", ".", "save_pickle", "==", "True", ":", "\n", "                    ", "dir", ",", "name", "=", "os", ".", "path", ".", "split", "(", "img_name", ")", "\n", "save_pickle", "(", "dir_name", "=", "'{}{}_{}/pickle/'", ".", "format", "(", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", ",", "mode", ",", "dataset_name", ")", ",", "file_name", "=", "name", "[", ":", "-", "4", "]", ",", "data", "=", "result", ")", "\n", "", "if", "i", "%", "50", "==", "0", ":", "\n", "                    ", "print", "(", "'image %d ---> %s done!'", "%", "(", "i", ",", "img_name", ")", ")", "\n", "\n", "# save pickle", "\n", "", "", "", "if", "self", ".", "cfg", ".", "save_pickle", "==", "True", ":", "\n", "            ", "save_pickle", "(", "dir_name", "=", "'{}{}_{}/pickle/'", ".", "format", "(", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", ",", "mode", ",", "dataset_name", ")", ",", "\n", "file_name", "=", "'datalist'", ",", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.test.Test_Process.evaluation": [[78, 94], ["dict", "test.Test_Process.eval_line.measure_EA_score", "test.Test_Process.eval_line.measure_AUC_PRF"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.Evaluation_Semantic_Line.measure_EA_score", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.Evaluation_Semantic_Line.measure_AUC_PRF"], ["data", "=", "datalist", ")", "\n", "\n", "# evaluation", "\n", "", "return", "self", ".", "evaluation", "(", "datalist", ",", "mode", ",", "dataset_name", ")", "\n", "\n", "", "def", "evaluation", "(", "self", ",", "datalist", ",", "mode", ",", "dataset_name", ")", ":", "\n", "        ", "metric", "=", "dict", "(", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "eval_semantic_line", "==", "True", ":", "\n", "            ", "hiou", "=", "self", ".", "eval_line", ".", "measure_HIoU", "(", "datalist", ",", "mode", ",", "dataset_name", ",", "with_reg", "=", "True", ")", "\n", "ea_p1", ",", "ea_r1", ",", "ea_f1", "=", "self", ".", "eval_line", ".", "measure_EA_score", "(", "datalist", ",", "mode", ",", "dataset_name", ",", "with_reg", "=", "False", ")", "\n", "ea_p2", ",", "ea_r2", ",", "ea_f2", "=", "self", ".", "eval_line", ".", "measure_EA_score", "(", "datalist", ",", "mode", ",", "dataset_name", ",", "with_reg", "=", "True", ")", "\n", "auc_p", ",", "auc_r", ",", "auc_f", "=", "self", ".", "eval_line", ".", "measure_AUC_PRF", "(", "datalist", ",", "mode", ",", "dataset_name", ",", "with_reg", "=", "True", ")", "\n", "\n", "metric", "[", "'hiou'", "]", "=", "hiou", "\n", "\n", "metric", "[", "'ea_p1'", "]", "=", "ea_p1", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward.Forward_Model.__init__": [[6, 17], ["load_pickle", "to_tensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "\n", "hough_space", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'hough_space'", ")", "\n", "self", ".", "hough_h", ",", "self", ".", "hough_w", "=", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "self", ".", "hough_space_idx_all", "=", "hough_space", "[", "'idx'", "]", "\n", "self", ".", "hough_space_idx", "=", "to_tensor", "(", "hough_space", "[", "'idx'", "]", "[", "self", ".", "hough_h", "//", "3", ":", "self", ".", "hough_h", "//", "3", "*", "2", "]", ")", "\n", "\n", "self", ".", "cluster_num", "=", "cfg", ".", "cluster_num", "\n", "self", ".", "da", "=", "1", "\n", "self", ".", "dd", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward.Forward_Model.run_for_cls": [[18, 48], ["torch.LongTensor().cuda", "torch.LongTensor().cuda", "model.initialize", "model.forward_for_cls", "out[].clone", "range", "model.selection_and_removal", "torch.cat", "torch.cat", "torch.LongTensor", "torch.LongTensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.initialize", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.forward_for_cls", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.selection_and_removal"], ["", "def", "run_for_cls", "(", "self", ",", "img", ",", "model", ")", ":", "\n", "        ", "out_temp", "=", "{", "}", "\n", "out_temp", "[", "'center_idx'", "]", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "out_temp", "[", "'cluster_idx'", "]", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "model", ".", "initialize", "(", ")", "\n", "out", "=", "model", ".", "forward_for_cls", "(", "img", ",", "is_training", "=", "False", ")", "\n", "prob", "=", "out", "[", "'prob'", "]", ".", "clone", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "cfg", ".", "max_iter", ")", ":", "\n", "\n", "# Clustering", "\n", "            ", "prob_temp", "=", "prob", "*", "model", ".", "visit_mask", "\n", "cluster_mask", ",", "cluster", ",", "max_prob", "=", "model", ".", "selection_and_removal", "(", "prob_temp", ")", "\n", "\n", "center_idx", "=", "cluster", "[", "'center_idx'", "]", "\n", "cluster_idx", "=", "cluster", "[", "'cluster_idx'", "]", "\n", "\n", "if", "self", ".", "cfg", ".", "constrain_max_prob", "==", "True", ":", "\n", "                ", "if", "i", ">=", "2", "and", "max_prob", "<", "0.7", ":", "\n", "                    ", "break", "\n", "\n", "", "", "out_temp", "[", "'center_idx'", "]", "=", "torch", ".", "cat", "(", "(", "out_temp", "[", "'center_idx'", "]", ",", "center_idx", ")", ",", "dim", "=", "0", ")", "\n", "out_temp", "[", "'cluster_idx'", "]", "=", "torch", ".", "cat", "(", "(", "out_temp", "[", "'cluster_idx'", "]", ",", "cluster_idx", ")", ",", "dim", "=", "0", ")", "\n", "model", ".", "center_mask", "[", ":", ",", ":", ",", "center_idx", "]", "=", "0", "\n", "model", ".", "visit_mask", "[", ":", ",", ":", ",", "cluster_idx", "]", "=", "0", "\n", "\n", "", "out_temp", "[", "'prob'", "]", "=", "prob", "\n", "out_temp", "[", "'l_feat'", "]", "=", "out", "[", "'l_feat'", "]", "\n", "return", "out_temp", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.tests.forward.Forward_Model.run_for_reg": [[49, 53], ["model.forward_for_reg"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.networks.model_snet.Model.forward_for_reg"], ["", "def", "run_for_reg", "(", "self", ",", "out_cls", ",", "model", ")", ":", "\n", "        ", "idx", "=", "out_cls", "[", "'center_idx'", "]", "\n", "out", "=", "model", ".", "forward_for_reg", "(", "out_cls", "[", "'l_feat'", "]", ",", "idx", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.eval_EA_score.eval_EA_score_pickle": [[7, 40], ["load_pickle", "numpy.zeros", "numpy.zeros", "range", "print", "print", "print", "logger", "len", "load_pickle", "numpy.int32().tolist", "range", "np.zeros.mean", "np.zeros.mean", "f.mean", "to_np", "evaluation_DHT.utils.caculate_precision", "evaluation_DHT.utils.caculate_recall", "numpy.int32", "pred.tolist", "pred.tolist", "np.zeros.mean", "np.zeros.mean", "f.mean", "to_np"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.caculate_precision", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.caculate_recall", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["def", "eval_EA_score_pickle", "(", "cfg", ",", "pred_path", ",", "gt_path", ",", "dataset_name", ",", "logfile", ")", ":", "\n", "    ", "datalist", "=", "load_pickle", "(", "pred_path", "+", "'test_'", "+", "dataset_name", "+", "'/pickle/datalist'", ")", "\n", "\n", "total_precision", "=", "np", ".", "zeros", "(", "99", ")", "\n", "total_recall", "=", "np", ".", "zeros", "(", "99", ")", "\n", "nums_precision", "=", "0", "\n", "nums_recall", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "datalist", ")", ")", ":", "\n", "        ", "filename", "=", "datalist", "[", "i", "]", "\n", "data", "=", "load_pickle", "(", "pred_path", "+", "'test_'", "+", "dataset_name", "+", "'/pickle/'", "+", "filename", "[", ":", "-", "4", "]", ")", "\n", "\n", "pred", "=", "to_np", "(", "data", "[", "'out'", "]", "[", "'mul'", "]", ")", "[", ":", ",", "[", "1", ",", "0", ",", "3", ",", "2", "]", "]", "\n", "gt", "=", "np", ".", "int32", "(", "(", "to_np", "(", "data", "[", "'gt'", "]", "[", "'mul'", "]", ")", "[", ":", ",", "[", "1", ",", "0", ",", "3", ",", "2", "]", "]", "+", "1", ")", ")", ".", "tolist", "(", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "100", ")", ":", "\n", "            ", "p", ",", "num_p", "=", "caculate_precision", "(", "pred", ".", "tolist", "(", ")", ",", "gt", ",", "thresh", "=", "i", "*", "0.01", ")", "\n", "r", ",", "num_r", "=", "caculate_recall", "(", "pred", ".", "tolist", "(", ")", ",", "gt", ",", "thresh", "=", "i", "*", "0.01", ")", "\n", "total_precision", "[", "i", "-", "1", "]", "+=", "p", "\n", "total_recall", "[", "i", "-", "1", "]", "+=", "r", "\n", "", "nums_precision", "+=", "num_p", "\n", "nums_recall", "+=", "num_r", "\n", "\n", "", "total_recall", "=", "total_recall", "/", "nums_recall", "\n", "total_precision", "=", "total_precision", "/", "nums_precision", "\n", "f", "=", "2", "*", "total_recall", "*", "total_precision", "/", "(", "total_recall", "+", "total_precision", ")", "\n", "\n", "print", "(", "'Mean P:'", ",", "total_precision", ".", "mean", "(", ")", ")", "\n", "print", "(", "'Mean R:'", ",", "total_recall", ".", "mean", "(", ")", ")", "\n", "print", "(", "'Mean F:'", ",", "f", ".", "mean", "(", ")", ")", "\n", "logger", "(", "'Mean P: %5f\\n'", "\n", "'Mean R: %5f\\n'", "\n", "'Mean F: %5f\\n'", "%", "(", "total_precision", ".", "mean", "(", ")", ",", "total_recall", ".", "mean", "(", ")", ",", "f", ".", "mean", "(", ")", ")", ",", "logfile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.eval_EA_score.eval_EA_score_npy": [[42, 88], ["sorted", "numpy.zeros", "numpy.zeros", "print", "print", "print", "logger", "os.listdir", "load_pickle", "numpy.load", "range", "np.zeros.mean", "np.zeros.mean", "f.mean", "os.path.join", "numpy.int32().tolist", "open", "open.readlines", "evaluation_DHT.utils.caculate_precision", "evaluation_DHT.utils.caculate_recall", "os.path.join", "np.load.tolist", "np.load.tolist", "np.zeros.mean", "np.zeros.mean", "f.mean", "numpy.int32", "int", "int", "int", "int", "float", "float", "float", "float", "filename.split", "l.rstrip().split", "l.rstrip().split", "l.rstrip().split", "l.rstrip().split", "l.rstrip", "l.rstrip", "l.rstrip", "l.rstrip"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.caculate_precision", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.caculate_recall"], ["", "def", "eval_EA_score_npy", "(", "cfg", ",", "pred_path", ",", "gt_path", ",", "dataset_name", ",", "logfile", ")", ":", "\n", "    ", "pred_path", "=", "pred_path", "+", "'visualize_'", "+", "dataset_name", "+", "'/visualize_test/'", "\n", "filenames", "=", "sorted", "(", "os", ".", "listdir", "(", "pred_path", ")", ")", "\n", "\n", "total_precision", "=", "np", ".", "zeros", "(", "99", ")", "\n", "total_recall", "=", "np", ".", "zeros", "(", "99", ")", "\n", "nums_precision", "=", "0", "\n", "nums_recall", "=", "0", "\n", "k", "=", "0", "\n", "\n", "if", "dataset_name", "==", "'SEL_Hard'", ":", "\n", "        ", "data", "=", "load_pickle", "(", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "'SEL_Hard'", "]", "+", "'data/test'", ")", "\n", "\n", "", "for", "filename", "in", "filenames", ":", "\n", "\n", "        ", "if", "filename", "==", "'0198.npy'", ":", "\n", "            ", "filename", "=", "filename", "\n", "\n", "", "if", "'npy'", "not", "in", "filename", ":", "\n", "# print('no npy %s' % filename)", "\n", "            ", "continue", "\n", "", "pred", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "pred_path", ",", "filename", ")", ")", "\n", "\n", "if", "dataset_name", "==", "'SEL_Hard'", ":", "\n", "            ", "gt", "=", "np", ".", "int32", "(", "(", "data", "[", "'multiple'", "]", "[", "k", "]", "[", ":", ",", "[", "1", ",", "0", ",", "3", ",", "2", "]", "]", "+", "1", ")", ")", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "            ", "gt_txt", "=", "open", "(", "os", ".", "path", ".", "join", "(", "gt_path", ",", "filename", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "'.txt'", ")", ")", "\n", "gt_coords", "=", "gt_txt", ".", "readlines", "(", ")", "\n", "gt", "=", "[", "[", "int", "(", "float", "(", "l", ".", "rstrip", "(", ")", ".", "split", "(", "', '", ")", "[", "1", "]", ")", ")", ",", "int", "(", "float", "(", "l", ".", "rstrip", "(", ")", ".", "split", "(", "', '", ")", "[", "0", "]", ")", ")", ",", "int", "(", "float", "(", "l", ".", "rstrip", "(", ")", ".", "split", "(", "', '", ")", "[", "3", "]", ")", ")", ",", "int", "(", "float", "(", "l", ".", "rstrip", "(", ")", ".", "split", "(", "', '", ")", "[", "2", "]", ")", ")", "]", "for", "l", "in", "gt_coords", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "1", ",", "100", ")", ":", "\n", "            ", "p", ",", "num_p", "=", "caculate_precision", "(", "pred", ".", "tolist", "(", ")", ",", "gt", ",", "thresh", "=", "i", "*", "0.01", ")", "\n", "r", ",", "num_r", "=", "caculate_recall", "(", "pred", ".", "tolist", "(", ")", ",", "gt", ",", "thresh", "=", "i", "*", "0.01", ")", "\n", "total_precision", "[", "i", "-", "1", "]", "+=", "p", "\n", "total_recall", "[", "i", "-", "1", "]", "+=", "r", "\n", "", "nums_precision", "+=", "num_p", "\n", "nums_recall", "+=", "num_r", "\n", "\n", "k", "+=", "1", "\n", "\n", "", "total_recall", "=", "total_recall", "/", "nums_recall", "\n", "total_precision", "=", "total_precision", "/", "nums_precision", "\n", "f", "=", "2", "*", "total_recall", "*", "total_precision", "/", "(", "total_recall", "+", "total_precision", ")", "\n", "\n", "print", "(", "'Mean P:'", ",", "total_precision", ".", "mean", "(", ")", ")", "\n", "print", "(", "'Mean R:'", ",", "total_recall", ".", "mean", "(", ")", ")", "\n", "print", "(", "'Mean F:'", ",", "f", ".", "mean", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.metric.sa_metric": [[5, 10], ["numpy.abs", "min", "max"], "function", ["None"], ["def", "sa_metric", "(", "angle_p", ",", "angle_g", ")", ":", "\n", "    ", "d_angle", "=", "np", ".", "abs", "(", "angle_p", "-", "angle_g", ")", "\n", "d_angle", "=", "min", "(", "d_angle", ",", "np", ".", "pi", "-", "d_angle", ")", "\n", "d_angle", "=", "d_angle", "*", "2", "/", "np", ".", "pi", "\n", "return", "max", "(", "0", ",", "(", "1", "-", "d_angle", ")", ")", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.metric.se_metric": [[11, 17], ["numpy.sqrt", "max", "max", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "def", "se_metric", "(", "coord_p", ",", "coord_g", ",", "size", "=", "(", "400", ",", "400", ")", ")", ":", "\n", "    ", "c_p", "=", "[", "(", "coord_p", "[", "0", "]", "+", "coord_p", "[", "2", "]", ")", "/", "2", ",", "(", "coord_p", "[", "1", "]", "+", "coord_p", "[", "3", "]", ")", "/", "2", "]", "\n", "c_g", "=", "[", "(", "coord_g", "[", "0", "]", "+", "coord_g", "[", "2", "]", ")", "/", "2", ",", "(", "coord_g", "[", "1", "]", "+", "coord_g", "[", "3", "]", ")", "/", "2", "]", "\n", "d_coord", "=", "np", ".", "abs", "(", "c_p", "[", "0", "]", "-", "c_g", "[", "0", "]", ")", "**", "2", "+", "np", ".", "abs", "(", "c_p", "[", "1", "]", "-", "c_g", "[", "1", "]", ")", "**", "2", "\n", "d_coord", "=", "np", ".", "sqrt", "(", "d_coord", ")", "/", "max", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", "\n", "return", "max", "(", "0", ",", "(", "1", "-", "d_coord", ")", ")", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.metric.EA_metric": [[18, 22], ["metric.se_metric", "metric.sa_metric", "l_pred.angle", "l_gt.angle"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.metric.se_metric", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.metric.sa_metric", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.Line.angle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.Line.angle"], ["", "def", "EA_metric", "(", "l_pred", ",", "l_gt", ",", "size", "=", "(", "400", ",", "400", ")", ")", ":", "\n", "    ", "se", "=", "se_metric", "(", "l_pred", ".", "coord", ",", "l_gt", ".", "coord", ",", "size", "=", "size", ")", "\n", "sa", "=", "sa_metric", "(", "l_pred", ".", "angle", "(", ")", ",", "l_gt", ".", "angle", "(", ")", ")", "\n", "return", "sa", "*", "se", "\n", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.Line.__init__": [[5, 13], ["isinstance", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "coordinates", "=", "[", "0", ",", "0", ",", "1", ",", "1", "]", ")", ":", "\n", "        ", "\"\"\"\n        coordinates: [y0, x0, y1, x1]\n        \"\"\"", "\n", "assert", "isinstance", "(", "coordinates", ",", "list", ")", "\n", "assert", "len", "(", "coordinates", ")", "==", "4", "\n", "assert", "coordinates", "[", "0", "]", "!=", "coordinates", "[", "2", "]", "or", "coordinates", "[", "1", "]", "!=", "coordinates", "[", "3", "]", "\n", "self", ".", "__coordinates", "=", "coordinates", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.Line.coord": [[14, 17], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "coord", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__coordinates", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.Line.length": [[18, 23], ["numpy.array", "numpy.array", "numpy.sqrt"], "methods", ["None"], ["", "@", "property", "\n", "def", "length", "(", "self", ")", ":", "\n", "        ", "start", "=", "np", ".", "array", "(", "self", ".", "coord", "[", ":", "2", "]", ")", "\n", "end", "=", "np", ".", "array", "(", "self", ".", "coord", "[", "2", ":", ":", "]", ")", "\n", "return", "np", ".", "sqrt", "(", "(", "(", "start", "-", "end", ")", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.Line.angle": [[24, 29], ["numpy.arctan"], "methods", ["None"], ["", "def", "angle", "(", "self", ")", ":", "\n", "        ", "y0", ",", "x0", ",", "y1", ",", "x1", "=", "self", ".", "coord", "\n", "if", "x0", "==", "x1", ":", "\n", "            ", "return", "-", "np", ".", "pi", "/", "2", "\n", "", "return", "np", ".", "arctan", "(", "(", "y0", "-", "y1", ")", "/", "(", "x0", "-", "x1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.Line.rescale": [[30, 34], ["numpy.array", "numpy.array", "numpy.round().astype().tolist", "numpy.round().astype", "numpy.round"], "methods", ["None"], ["", "def", "rescale", "(", "self", ",", "rh", ",", "rw", ")", ":", "\n", "        ", "coor", "=", "np", ".", "array", "(", "self", ".", "__coordinates", ")", "\n", "r", "=", "np", ".", "array", "(", "[", "rh", ",", "rw", ",", "rh", ",", "rw", "]", ")", "\n", "self", ".", "__coordinates", "=", "np", ".", "round", "(", "coor", "*", "r", ")", ".", "astype", "(", "np", ".", "int", ")", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.Line.__repr__": [[35, 37], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "coord", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.get_boundary_point": [[39, 85], ["numpy.tan", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["None"], ["", "", "def", "get_boundary_point", "(", "y", ",", "x", ",", "angle", ",", "H", ",", "W", ")", ":", "\n", "    ", "'''\n    Given point y,x with angle, return a two point in image boundary with shape [H, W]\n    return point:[x, y]\n    '''", "\n", "point1", "=", "None", "\n", "point2", "=", "None", "\n", "\n", "if", "angle", "==", "-", "np", ".", "pi", "/", "2", ":", "\n", "        ", "point1", "=", "(", "x", ",", "0", ")", "\n", "point2", "=", "(", "x", ",", "H", "-", "1", ")", "\n", "", "elif", "angle", "==", "0.0", ":", "\n", "        ", "point1", "=", "(", "0", ",", "y", ")", "\n", "point2", "=", "(", "W", "-", "1", ",", "y", ")", "\n", "", "else", ":", "\n", "        ", "k", "=", "np", ".", "tan", "(", "angle", ")", "\n", "if", "y", "-", "k", "*", "x", ">=", "0", "and", "y", "-", "k", "*", "x", "<", "H", ":", "#left", "\n", "            ", "if", "point1", "==", "None", ":", "\n", "                ", "point1", "=", "(", "0", ",", "int", "(", "y", "-", "k", "*", "x", ")", ")", "\n", "", "elif", "point2", "==", "None", ":", "\n", "                ", "point2", "=", "(", "0", ",", "int", "(", "y", "-", "k", "*", "x", ")", ")", "\n", "if", "point2", "==", "point1", ":", "point2", "=", "None", "\n", "# print(point1, point2)", "\n", "", "", "if", "k", "*", "(", "W", "-", "1", ")", "+", "y", "-", "k", "*", "x", ">=", "0", "and", "k", "*", "(", "W", "-", "1", ")", "+", "y", "-", "k", "*", "x", "<", "H", ":", "#right", "\n", "            ", "if", "point1", "==", "None", ":", "\n", "                ", "point1", "=", "(", "W", "-", "1", ",", "int", "(", "k", "*", "(", "W", "-", "1", ")", "+", "y", "-", "k", "*", "x", ")", ")", "\n", "", "elif", "point2", "==", "None", ":", "\n", "                ", "point2", "=", "(", "W", "-", "1", ",", "int", "(", "k", "*", "(", "W", "-", "1", ")", "+", "y", "-", "k", "*", "x", ")", ")", "\n", "if", "point2", "==", "point1", ":", "point2", "=", "None", "\n", "# print(point1, point2)", "\n", "", "", "if", "x", "-", "y", "/", "k", ">=", "0", "and", "x", "-", "y", "/", "k", "<", "W", ":", "#top", "\n", "            ", "if", "point1", "==", "None", ":", "\n", "                ", "point1", "=", "(", "int", "(", "x", "-", "y", "/", "k", ")", ",", "0", ")", "\n", "", "elif", "point2", "==", "None", ":", "\n", "                ", "point2", "=", "(", "int", "(", "x", "-", "y", "/", "k", ")", ",", "0", ")", "\n", "if", "point2", "==", "point1", ":", "point2", "=", "None", "\n", "# print(point1, point2)", "\n", "", "", "if", "x", "-", "y", "/", "k", "+", "(", "H", "-", "1", ")", "/", "k", ">=", "0", "and", "x", "-", "y", "/", "k", "+", "(", "H", "-", "1", ")", "/", "k", "<", "W", ":", "#bottom", "\n", "            ", "if", "point1", "==", "None", ":", "\n", "                ", "point1", "=", "(", "int", "(", "x", "-", "y", "/", "k", "+", "(", "H", "-", "1", ")", "/", "k", ")", ",", "H", "-", "1", ")", "\n", "", "elif", "point2", "==", "None", ":", "\n", "                ", "point2", "=", "(", "int", "(", "x", "-", "y", "/", "k", "+", "(", "H", "-", "1", ")", "/", "k", ")", ",", "H", "-", "1", ")", "\n", "if", "point2", "==", "point1", ":", "point2", "=", "None", "\n", "# print(int(x-y/k+(H-1)/k), H-1)", "\n", "", "", "if", "point2", "==", "None", ":", "point2", "=", "point1", "\n", "", "return", "point1", ",", "point2", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.reverse_mapping": [[7, 28], ["int", "numpy.cos", "numpy.sin", "numpy.round", "b_points.append", "numpy.arctan", "numpy.round", "evaluation_DHT.basic_ops.get_boundary_point", "numpy.sqrt", "int", "b_points.append", "int", "int"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.basic_ops.get_boundary_point"], ["def", "reverse_mapping", "(", "point_list", ",", "numAngle", ",", "numRho", ",", "size", "=", "(", "32", ",", "32", ")", ")", ":", "\n", "    ", "H", ",", "W", "=", "size", "\n", "irho", "=", "int", "(", "np", ".", "sqrt", "(", "H", "*", "H", "+", "W", "*", "W", ")", "+", "1", ")", "/", "(", "(", "numRho", "-", "1", ")", ")", "\n", "itheta", "=", "np", ".", "pi", "/", "numAngle", "\n", "b_points", "=", "[", "]", "\n", "\n", "for", "(", "thetai", ",", "ri", ")", "in", "point_list", ":", "\n", "        ", "theta", "=", "thetai", "*", "itheta", "\n", "r", "=", "ri", "-", "numRho", "//", "2", "\n", "cosi", "=", "np", ".", "cos", "(", "theta", ")", "/", "irho", "\n", "sini", "=", "np", ".", "sin", "(", "theta", ")", "/", "irho", "\n", "if", "sini", "==", "0", ":", "\n", "            ", "x", "=", "np", ".", "round", "(", "r", "/", "cosi", "+", "W", "/", "2", ")", "\n", "b_points", ".", "append", "(", "(", "0", ",", "int", "(", "x", ")", ",", "H", "-", "1", ",", "int", "(", "x", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "angle", "=", "np", ".", "arctan", "(", "-", "cosi", "/", "sini", ")", "\n", "y", "=", "np", ".", "round", "(", "r", "/", "sini", "+", "W", "*", "cosi", "/", "sini", "/", "2", "+", "H", "/", "2", ")", "\n", "p1", ",", "p2", "=", "get_boundary_point", "(", "int", "(", "y", ")", ",", "0", ",", "angle", ",", "H", ",", "W", ")", "\n", "if", "p1", "is", "not", "None", "and", "p2", "is", "not", "None", ":", "\n", "                ", "b_points", ".", "append", "(", "(", "p1", "[", "1", "]", ",", "p1", "[", "0", "]", ",", "p2", "[", "1", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "", "", "", "return", "b_points", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.visulize_mapping": [[29, 35], ["cv2.imread", "cv2.line"], "function", ["None"], ["", "def", "visulize_mapping", "(", "b_points", ",", "size", ",", "filename", ")", ":", "\n", "    ", "img", "=", "cv2", ".", "imread", "(", "filename", ")", "\n", "#img = cv2.resize(img, size)", "\n", "for", "(", "y1", ",", "x1", ",", "y2", ",", "x2", ")", "in", "b_points", ":", "\n", "        ", "img", "=", "cv2", ".", "line", "(", "img", ",", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "255", ",", "255", ",", "0", ")", ",", "thickness", "=", "3", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.caculate_precision": [[36, 49], ["len", "numpy.zeros", "enumerate", "evaluation_DHT.basic_ops.Line", "list", "evaluation_DHT.basic_ops.Line", "max", "list", "evaluation_DHT.metric.EA_metric"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.metric.EA_metric"], ["", "def", "caculate_precision", "(", "b_points", ",", "gt_coords", ",", "thresh", "=", "0.90", ")", ":", "\n", "    ", "N", "=", "len", "(", "b_points", ")", "\n", "if", "N", "==", "0", ":", "\n", "        ", "return", "0", ",", "0", "\n", "", "ea", "=", "np", ".", "zeros", "(", "N", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", ",", "coord_p", "in", "enumerate", "(", "b_points", ")", ":", "\n", "        ", "if", "coord_p", "[", "0", "]", "==", "coord_p", "[", "2", "]", "and", "coord_p", "[", "1", "]", "==", "coord_p", "[", "3", "]", ":", "\n", "            ", "continue", "\n", "", "l_pred", "=", "Line", "(", "list", "(", "coord_p", ")", ")", "\n", "for", "coord_g", "in", "gt_coords", ":", "\n", "            ", "l_gt", "=", "Line", "(", "list", "(", "coord_g", ")", ")", "\n", "ea", "[", "i", "]", "=", "max", "(", "ea", "[", "i", "]", ",", "EA_metric", "(", "l_pred", ",", "l_gt", ")", ")", "\n", "", "", "return", "(", "ea", ">=", "thresh", ")", ".", "sum", "(", ")", ",", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.caculate_recall": [[50, 63], ["len", "numpy.zeros", "enumerate", "evaluation_DHT.basic_ops.Line", "list", "evaluation_DHT.basic_ops.Line", "max", "list", "evaluation_DHT.metric.EA_metric"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.metric.EA_metric"], ["", "def", "caculate_recall", "(", "b_points", ",", "gt_coords", ",", "thresh", "=", "0.90", ")", ":", "\n", "    ", "N", "=", "len", "(", "gt_coords", ")", "\n", "if", "N", "==", "0", ":", "\n", "        ", "return", "1.0", ",", "0", "\n", "", "ea", "=", "np", ".", "zeros", "(", "N", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", ",", "coord_g", "in", "enumerate", "(", "gt_coords", ")", ":", "\n", "        ", "l_gt", "=", "Line", "(", "list", "(", "coord_g", ")", ")", "\n", "for", "coord_p", "in", "b_points", ":", "\n", "            ", "if", "coord_p", "[", "0", "]", "==", "coord_p", "[", "2", "]", "and", "coord_p", "[", "1", "]", "==", "coord_p", "[", "3", "]", ":", "\n", "                ", "continue", "\n", "", "l_pred", "=", "Line", "(", "list", "(", "coord_p", ")", ")", "\n", "ea", "[", "i", "]", "=", "max", "(", "ea", "[", "i", "]", ",", "EA_metric", "(", "l_pred", ",", "l_gt", ")", ")", "\n", "", "", "return", "(", "ea", ">=", "thresh", ")", ".", "sum", "(", ")", ",", "N", "\n", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.load_model.load_model_for_test": [[5, 19], ["networks.model_snet.Model", "networks.model_snet.Model.load_state_dict", "networks.model_snet.Model.cuda", "torch.load", "torch.load", "cfg.dataset_name.replace"], "function", ["None"], ["\n", "def", "load_model_for_test", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "    ", "dict_DB", "=", "load_model_snet", "(", "cfg", ",", "dict_DB", ")", "\n", "\n", "if", "cfg", ".", "run_mode", "==", "'test_paper'", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "cfg", ".", "dir", "[", "'paper_weight'", "]", "+", "'checkpoint_paper_H_Net_{}'", ".", "format", "(", "cfg", ".", "dataset_name", ".", "replace", "(", "'_Hard'", ",", "''", ")", ")", ")", "\n", "", "elif", "cfg", ".", "run_mode", "==", "'test'", ":", "\n", "# checkpoint = torch.load(cfg.dir['weight'] + 'checkpoint_final')", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "cfg", ".", "dir", "[", "'weight'", "]", "+", "'checkpoint_AUC_F_{}'", ".", "format", "(", "cfg", ".", "dataset_name", ".", "replace", "(", "'_Hard'", ",", "''", ")", ")", ")", "\n", "", "model", "=", "H_Net", "(", "cfg", "=", "cfg", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ",", "strict", "=", "False", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "dict_DB", "[", "'H_Net'", "]", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.load_model.load_model_for_train": [[20, 50], ["networks.model_snet.Model", "networks.model_snet.Model.cuda", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "Loss_Function", "torch.load", "networks.model_snet.Model.load_state_dict", "torch.optim.Adam.load_state_dict", "torch.optim.lr_scheduler.MultiStepLR", "networks.model_snet.Model.parameters"], "function", ["None"], ["return", "dict_DB", "\n", "\n", "", "def", "load_model_for_train", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "    ", "dict_DB", "=", "load_model_snet", "(", "cfg", ",", "dict_DB", ")", "\n", "\n", "model", "=", "H_Net", "(", "cfg", "=", "cfg", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "model", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "cfg", ".", "lr", ",", "\n", "weight_decay", "=", "cfg", ".", "weight_decay", ")", "\n", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", "=", "optimizer", ",", "\n", "milestones", "=", "cfg", ".", "milestones", ",", "\n", "gamma", "=", "cfg", ".", "gamma", ")", "\n", "\n", "if", "cfg", ".", "resume", "==", "False", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "cfg", ".", "dir", "[", "'weight'", "]", "+", "'checkpoint_final'", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ",", "strict", "=", "False", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", "=", "optimizer", ",", "\n", "milestones", "=", "cfg", ".", "milestones", ",", "\n", "gamma", "=", "cfg", ".", "gamma", ",", "\n", "last_epoch", "=", "checkpoint", "[", "'epoch'", "]", ")", "\n", "dict_DB", "[", "'epoch'", "]", "=", "checkpoint", "[", "'epoch'", "]", "+", "1", "\n", "dict_DB", "[", "'val_result'", "]", "=", "checkpoint", "[", "'val_result'", "]", "\n", "\n", "", "if", "cfg", ".", "loss_fn", "==", "'MSE'", ":", "\n", "        ", "loss_fn", "=", "Loss_Function_MSE", "(", ")", "\n", "\n", "", "dict_DB", "[", "'H_Net'", "]", "=", "model", "\n", "dict_DB", "[", "'optimizer'", "]", "=", "optimizer", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.load_model.load_model_snet": [[57, 69], ["networks.model_snet.Model", "networks.model_snet.Model.load_state_dict", "networks.model_snet.Model.cuda", "torch.load", "torch.load", "cfg.dataset_name.replace", "cfg.dataset_name.replace"], "function", ["None"], ["", "def", "load_model_snet", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "    ", "if", "cfg", ".", "run_mode", "==", "'test_paper'", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "cfg", ".", "dir", "[", "'paper_weight'", "]", "+", "'checkpoint_paper_S_Net_{}'", ".", "format", "(", "cfg", ".", "dataset_name", ".", "replace", "(", "'_Hard'", ",", "''", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "cfg", ".", "dir", "[", "'pretrained_snet'", "]", "+", "'checkpoint_EA_P_upper_R_0.86_'", ".", "format", "(", "cfg", ".", "dataset_name", ".", "replace", "(", "'_Hard'", ",", "''", ")", ")", ")", "\n", "", "model", "=", "S_Net", "(", "cfg", "=", "cfg", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ",", "strict", "=", "False", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "dict_DB", "[", "'S_Net'", "]", "=", "model", "\n", "\n", "return", "dict_DB", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model": [[4, 13], ["mkdir", "torch.save", "checkpoint[].state_dict", "checkpoint[].state_dict"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir"], ["def", "save_model", "(", "checkpoint", ",", "param", ",", "path", ")", ":", "\n", "\n", "    ", "mkdir", "(", "path", ")", "\n", "torch", ".", "save", "(", "{", "\n", "'epoch'", ":", "checkpoint", "[", "'epoch'", "]", ",", "\n", "'val_result'", ":", "checkpoint", "[", "'val_result'", "]", ",", "\n", "'model'", ":", "checkpoint", "[", "'model'", "]", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "checkpoint", "[", "'optimizer'", "]", ".", "state_dict", "(", ")", "}", ",", "\n", "path", "+", "param", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model_max": [[14, 22], ["save_model.save_model", "logger", "print"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger"], ["", "def", "save_model_max", "(", "checkpoint", ",", "path", ",", "max_val", ",", "val", ",", "logger", ",", "logfile", ",", "name", ",", "dataset_name", ")", ":", "\n", "    ", "if", "max_val", "<", "val", ":", "\n", "        ", "save_model", "(", "checkpoint", ",", "'checkpoint_max_'", "+", "name", "+", "'_'", "+", "dataset_name", ",", "path", ")", "\n", "max_val", "=", "val", "\n", "logger", "(", "\"Epoch %03d => %s max %s: %5f\\n\"", "%", "(", "checkpoint", "[", "'epoch'", "]", ",", "dataset_name", ",", "name", ",", "max_val", ")", ",", "logfile", ")", "\n", "print", "(", "'%s == > max %s'", "%", "(", "dataset_name", ",", "name", ")", ")", "\n", "\n", "", "return", "max_val", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model_max_upper": [[23, 32], ["mkdir", "save_model.save_model", "logger", "print"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.save_model.save_model", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger"], ["", "def", "save_model_max_upper", "(", "checkpoint", ",", "path", ",", "max_val", ",", "val", ",", "val2", ",", "thresd", ",", "logger", ",", "logfile", ",", "name", ",", "dataset_name", ")", ":", "\n", "    ", "mkdir", "(", "path", ")", "\n", "if", "max_val", "<", "val", "and", "val2", ">", "thresd", ":", "\n", "        ", "save_model", "(", "checkpoint", ",", "'checkpoint_max_'", "+", "name", "+", "'_'", "+", "dataset_name", ",", "path", ")", "\n", "max_val", "=", "val", "\n", "logger", "(", "\"Epoch %03d => %s max %s: %5f\\n\"", "%", "(", "checkpoint", "[", "'epoch'", "]", ",", "dataset_name", ",", "name", ",", "max_val", ")", ",", "logfile", ")", "\n", "print", "(", "'%s == > max %s'", "%", "(", "dataset_name", ",", "name", ")", ")", "\n", "\n", "", "return", "max_val", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.measure_IoU": [[6, 17], ["torch.sum().type", "torch.sum().type", "torch.sum", "torch.sum"], "function", ["None"], ["def", "measure_IoU", "(", "X1", ",", "X2", ")", ":", "\n", "    ", "X", "=", "X1", "+", "X2", "\n", "\n", "X_uni", "=", "torch", ".", "sum", "(", "X", "!=", "0", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "X_inter", "=", "torch", ".", "sum", "(", "X", "==", "2", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "\n", "iou", "=", "X_inter", "/", "X_uni", "\n", "\n", "check", "=", "(", "X_inter", ">", "0", ")", "\n", "\n", "return", "iou", ",", "check", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.non_maximum_suppression": [[18, 54], ["torch.argsort", "torch.zeros().cuda", "torch.zeros().cuda", "range", "torch.zeros().cuda", "modules.measure_IoU", "modules.measure_IoU", "modules.measure_IoU", "modules.measure_IoU", "torch.zeros", "torch.zeros", "mask[].unsqueeze", "mask[].unsqueeze", "mask[].unsqueeze", "mask[].unsqueeze", "torch.zeros"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU"], ["", "def", "non_maximum_suppression", "(", "score", ",", "mask", ",", "thresd", ")", ":", "\n", "\n", "    ", "num", "=", "mask", ".", "shape", "[", "0", "]", "\n", "\n", "sorted_idx", "=", "torch", ".", "argsort", "(", "score", ",", "descending", "=", "True", ")", "\n", "\n", "visit", "=", "torch", ".", "zeros", "(", "(", "num", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "nms_check_all", "=", "torch", ".", "zeros", "(", "(", "num", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "\n", "        ", "ref_idx", "=", "sorted_idx", "[", "i", "]", "\n", "\n", "if", "visit", "[", "ref_idx", "]", "==", "1", "or", "nms_check_all", "[", "ref_idx", "]", "==", "1", ":", "\n", "            ", "continue", "\n", "\n", "", "visit", "[", "ref_idx", "]", "=", "1", "\n", "max_miou", "=", "torch", ".", "zeros", "(", "(", "num", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "\n", "iou_1", ",", "check1", "=", "measure_IoU", "(", "mask", "[", "ref_idx", ",", "0", "]", ".", "unsqueeze", "(", "0", ")", ",", "mask", "[", ":", ",", "0", "]", ")", "\n", "iou_2", ",", "check2", "=", "measure_IoU", "(", "mask", "[", "ref_idx", ",", "1", "]", ".", "unsqueeze", "(", "0", ")", ",", "mask", "[", ":", ",", "1", "]", ")", "\n", "\n", "check", "=", "(", "check1", "*", "check2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_check", "=", "(", "max_miou", "<", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_miou", "[", "max_check", "==", "1", "]", "=", "(", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", "[", "max_check", "==", "1", "]", "\n", "\n", "iou_1", ",", "check1", "=", "measure_IoU", "(", "mask", "[", "ref_idx", ",", "1", "]", ".", "unsqueeze", "(", "0", ")", ",", "mask", "[", ":", ",", "0", "]", ")", "\n", "iou_2", ",", "check2", "=", "measure_IoU", "(", "mask", "[", "ref_idx", ",", "0", "]", ".", "unsqueeze", "(", "0", ")", ",", "mask", "[", ":", ",", "1", "]", ")", "\n", "\n", "check", "=", "(", "check1", "*", "check2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_check", "=", "(", "max_miou", "<", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_miou", "[", "max_check", "==", "1", "]", "=", "(", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", "[", "max_check", "==", "1", "]", "\n", "\n", "nms_check", "=", "(", "max_miou", ">", "thresd", ")", "*", "(", "max_miou", "<", "1", ")", "*", "(", "visit", "==", "0", ")", "\n", "nms_check_all", "[", "nms_check", "==", "1", "]", "=", "1", "\n", "\n", "", "return", "nms_check_all", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.divided_region_mask": [[55, 82], ["numpy.meshgrid", "torch.tensor().unsqueeze().cuda", "torch.tensor().unsqueeze().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "a.view.view", "b.view.view", "torch.cat", "int", "int", "numpy.linspace", "numpy.linspace", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.zeros", "torch.zeros", "torch.zeros().cuda.unsqueeze", "torch.zeros().cuda.unsqueeze", "torch.tensor", "torch.tensor", "line_pts[].view", "line_pts[].view"], "function", ["None"], ["", "def", "divided_region_mask", "(", "line_pts", ",", "size", ")", ":", "\n", "\n", "    ", "line_num", ",", "_", "=", "line_pts", ".", "shape", "\n", "width", ",", "height", "=", "int", "(", "size", "[", "0", "]", ")", ",", "int", "(", "size", "[", "1", "]", ")", "\n", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "0", ",", "width", "-", "1", ",", "width", ")", ",", "np", ".", "linspace", "(", "0", ",", "height", "-", "1", ",", "height", ")", ")", "# after x before", "\n", "X", "=", "torch", ".", "tensor", "(", "X", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "Y", "=", "torch", ".", "tensor", "(", "Y", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "\n", "check", "=", "(", "(", "line_pts", "[", ":", ",", "0", "]", "-", "line_pts", "[", ":", ",", "2", "]", ")", "==", "0", ")", ".", "type", "(", "torch", ".", "float", ")", "\n", "\n", "mask1", "=", "torch", ".", "zeros", "(", "(", "line_num", ",", "height", ",", "width", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "mask2", "=", "torch", ".", "zeros", "(", "(", "line_num", ",", "height", ",", "width", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "\n", "mask1", "[", "check", "==", "1", ",", ":", ",", ":", "]", "=", "(", "X", "<", "line_pts", "[", ":", ",", "0", "]", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", ")", ".", "type", "(", "torch", ".", "float", ")", "[", "check", "==", "1", ",", ":", ",", ":", "]", "\n", "mask2", "[", "check", "==", "1", ",", ":", ",", ":", "]", "=", "(", "X", ">=", "line_pts", "[", ":", ",", "0", "]", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", ")", ".", "type", "(", "torch", ".", "float", ")", "[", "check", "==", "1", ",", ":", ",", ":", "]", "\n", "\n", "a", "=", "(", "line_pts", "[", ":", ",", "1", "]", "-", "line_pts", "[", ":", ",", "3", "]", ")", "/", "(", "line_pts", "[", ":", ",", "0", "]", "-", "line_pts", "[", ":", ",", "2", "]", ")", "\n", "b", "=", "-", "1", "*", "a", "*", "line_pts", "[", ":", ",", "0", "]", "+", "line_pts", "[", ":", ",", "1", "]", "\n", "\n", "a", "=", "a", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", "\n", "b", "=", "b", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", "\n", "\n", "mask1", "[", "check", "==", "0", ",", ":", ",", ":", "]", "=", "(", "Y", "<", "a", "*", "X", "+", "b", ")", ".", "type", "(", "torch", ".", "float32", ")", "[", "check", "==", "0", ",", ":", ",", ":", "]", "\n", "mask2", "[", "check", "==", "0", ",", ":", ",", ":", "]", "=", "(", "Y", ">=", "a", "*", "X", "+", "b", ")", ".", "type", "(", "torch", ".", "float32", ")", "[", "check", "==", "0", ",", ":", ",", ":", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "mask1", ".", "unsqueeze", "(", "1", ")", ",", "mask2", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.find_endpoints": [[84, 125], ["numpy.float32", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append"], "function", ["None"], ["", "def", "find_endpoints", "(", "data", ",", "size", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "data", "[", "0", "]", ",", "data", "[", "1", "]", ",", "data", "[", "2", "]", ",", "data", "[", "3", "]", "\n", "\n", "pts", "=", "[", "]", "\n", "if", "x1", "-", "x2", "!=", "0", ":", "\n", "        ", "a", "=", "(", "y1", "-", "y2", ")", "/", "(", "x1", "-", "x2", ")", "\n", "b", "=", "-", "1", "\n", "c", "=", "-", "1", "*", "a", "*", "x1", "+", "y1", "\n", "# x = 0", "\n", "cx", "=", "0", "\n", "cy", "=", "a", "*", "0", "+", "c", "\n", "if", "cy", ">=", "0", "and", "cy", "<=", "size", "[", "1", "]", ":", "\n", "            ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "# x = size[0]", "\n", "", "cx", "=", "size", "[", "0", "]", "\n", "cy", "=", "a", "*", "size", "[", "0", "]", "+", "c", "\n", "if", "cy", ">=", "0", "and", "cy", "<=", "size", "[", "1", "]", ":", "\n", "            ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "# y = 0", "\n", "", "if", "y1", "!=", "y2", ":", "\n", "            ", "cx", "=", "(", "0", "-", "c", ")", "/", "a", "\n", "cy", "=", "0", "\n", "if", "cx", ">=", "0", "and", "cx", "<=", "size", "[", "0", "]", ":", "\n", "                ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "# y = size[1]", "\n", "", "cx", "=", "(", "size", "[", "1", "]", "-", "c", ")", "/", "a", "\n", "cy", "=", "size", "[", "1", "]", "\n", "if", "cx", ">=", "0", "and", "cx", "<=", "size", "[", "0", "]", ":", "\n", "                ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "", "", "", "else", ":", "\n", "        ", "if", "x1", ">=", "0", "and", "x1", "<=", "size", "[", "0", "]", ":", "\n", "            ", "pts", ".", "append", "(", "x1", ")", "\n", "pts", ".", "append", "(", "0", ")", "\n", "pts", ".", "append", "(", "x1", ")", "\n", "pts", ".", "append", "(", "size", "[", "1", "]", ")", "\n", "\n", "", "", "return", "np", ".", "float32", "(", "pts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.find_endpoints_from_line_eq": [[98, 142], ["numpy.float32", "numpy.unique().reshape", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "np.unique().reshape.append", "numpy.unique", "np.unique().reshape.reshape"], "function", ["None"], ["# x = size[0]", "\n", "", "cx", "=", "size", "[", "0", "]", "\n", "cy", "=", "a", "*", "size", "[", "0", "]", "+", "c", "\n", "if", "cy", ">=", "0", "and", "cy", "<=", "size", "[", "1", "]", ":", "\n", "            ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "# y = 0", "\n", "", "if", "y1", "!=", "y2", ":", "\n", "            ", "cx", "=", "(", "0", "-", "c", ")", "/", "a", "\n", "cy", "=", "0", "\n", "if", "cx", ">=", "0", "and", "cx", "<=", "size", "[", "0", "]", ":", "\n", "                ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "# y = size[1]", "\n", "", "cx", "=", "(", "size", "[", "1", "]", "-", "c", ")", "/", "a", "\n", "cy", "=", "size", "[", "1", "]", "\n", "if", "cx", ">=", "0", "and", "cx", "<=", "size", "[", "0", "]", ":", "\n", "                ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "", "", "", "else", ":", "\n", "        ", "if", "x1", ">=", "0", "and", "x1", "<=", "size", "[", "0", "]", ":", "\n", "            ", "pts", ".", "append", "(", "x1", ")", "\n", "pts", ".", "append", "(", "0", ")", "\n", "pts", ".", "append", "(", "x1", ")", "\n", "pts", ".", "append", "(", "size", "[", "1", "]", ")", "\n", "\n", "", "", "return", "np", ".", "float32", "(", "pts", ")", "\n", "\n", "", "def", "find_endpoints_from_line_eq", "(", "line_eq", ",", "size", ")", ":", "\n", "    ", "a", ",", "b", ",", "c", "=", "line_eq", "\n", "\n", "pts", "=", "[", "]", "\n", "if", "a", "==", "1", "and", "b", "==", "0", ":", "\n", "        ", "x1", "=", "c", "\n", "if", "x1", ">=", "0", "and", "x1", "<=", "size", "[", "0", "]", ":", "\n", "            ", "pts", ".", "append", "(", "x1", ")", "\n", "pts", ".", "append", "(", "0", ")", "\n", "pts", ".", "append", "(", "x1", ")", "\n", "pts", ".", "append", "(", "size", "[", "1", "]", ")", "\n", "\n", "", "", "else", ":", "\n", "# x = 0", "\n", "        ", "cx", "=", "0", "\n", "cy", "=", "a", "*", "0", "+", "c", "\n", "if", "cy", ">=", "0", "and", "cy", "<=", "size", "[", "1", "]", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.generate_line_mask": [[7, 24], ["range", "numpy.array", "numpy.zeros", "cv2.line", "np.array.append"], "function", ["None"], ["    ", "X", "=", "X1", "+", "X2", "\n", "\n", "X_uni", "=", "torch", ".", "sum", "(", "X", "!=", "0", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "X_inter", "=", "torch", ".", "sum", "(", "X", "==", "2", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "\n", "iou", "=", "X_inter", "/", "X_uni", "\n", "\n", "check", "=", "(", "X_inter", ">", "0", ")", "\n", "\n", "return", "iou", ",", "check", "\n", "\n", "", "def", "non_maximum_suppression", "(", "score", ",", "mask", ",", "thresd", ")", ":", "\n", "\n", "    ", "num", "=", "mask", ".", "shape", "[", "0", "]", "\n", "\n", "sorted_idx", "=", "torch", ".", "argsort", "(", "score", ",", "descending", "=", "True", ")", "\n", "\n", "visit", "=", "torch", ".", "zeros", "(", "(", "num", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_dataloader": [[4, 19], ["torch.utils.data.DataLoader", "Dataset_train", "Dataset_test"], "function", ["None"], ["from", "visualizes", ".", "visualize", "import", "*", "\n", "from", "tests", ".", "forward_graph", "import", "*", "\n", "from", "tests", ".", "test_for_preparation", "import", "*", "\n", "\n", "from", "evaluation", ".", "eval_func", "import", "*", "\n", "from", "evaluation", ".", "eval_hiou", "import", "*", "\n", "from", "evaluation", ".", "eval_line_detection", "import", "*", "\n", "\n", "from", "post_processes", ".", "post_process_clique", "import", "*", "\n", "\n", "from", "libs", ".", "generator_balance", "import", "*", "\n", "from", "libs", ".", "utils", "import", "_init_fn", "\n", "from", "libs", ".", "load_model", "import", "*", "\n", "\n", "def", "prepare_dataloader", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "# train dataloader", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_model": [[60, 71], ["Forward_Model", "load_model_for_test", "load_model_for_train"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.load_model.load_model_for_test", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.load_model.load_model_for_train"], ["return", "dict_DB", "\n", "\n", "", "def", "prepare_model", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "    ", "if", "'test'", "in", "cfg", ".", "run_mode", ":", "\n", "        ", "dict_DB", "=", "load_model_for_test", "(", "cfg", ",", "dict_DB", ")", "\n", "\n", "", "if", "'train'", "in", "cfg", ".", "run_mode", ":", "\n", "        ", "dict_DB", "=", "load_model_for_train", "(", "cfg", ",", "dict_DB", ")", "\n", "\n", "", "dict_DB", "[", "'forward_model'", "]", "=", "Forward_Model", "(", "cfg", "=", "cfg", ")", "\n", "\n", "return", "dict_DB", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_visualization": [[20, 24], ["Visualize"], "function", ["None"], ["    ", "if", "'SEL'", "in", "cfg", ".", "dataset_name", ":", "\n", "        ", "dataset", "=", "Train_Dataset_SEL", "(", "cfg", "=", "cfg", ",", "datalist", "=", "'train'", ")", "\n", "", "elif", "'SL5K'", "in", "cfg", ".", "dataset_name", ":", "\n", "        ", "dataset", "=", "Train_Dataset_SL5K", "(", "cfg", "=", "cfg", ",", "datalist", "=", "'train'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_evaluation": [[78, 84], ["Evaluation_Function", "Evaluation_HIoU", "Evaluation_Semantic_Line"], "function", ["None"], ["", "def", "prepare_evaluation", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "    ", "dict_DB", "[", "'eval_func'", "]", "=", "Evaluation_Function", "(", "cfg", "=", "cfg", ")", "\n", "dict_DB", "[", "'eval_hiou'", "]", "=", "Evaluation_HIoU", "(", "cfg", "=", "cfg", ")", "\n", "dict_DB", "[", "'eval_line'", "]", "=", "Evaluation_Semantic_Line", "(", "cfg", ",", "dict_DB", "[", "'eval_func'", "]", ",", "dict_DB", "[", "'eval_hiou'", "]", ")", "\n", "\n", "return", "dict_DB", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_post_processing": [[85, 89], ["Post_Process_hough_to_line"], "function", ["None"], ["", "def", "prepare_post_processing", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "    ", "dict_DB", "[", "'post_process'", "]", "=", "Maximum_clique", "(", "cfg", "=", "cfg", ",", "visualize", "=", "dict_DB", "[", "'visualize_graph'", "]", ")", "\n", "\n", "return", "dict_DB", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_generator": [[90, 94], ["Generate_Training_Data"], "function", ["None"], ["", "def", "prepare_generator", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "    ", "dict_DB", "[", "'generator'", "]", "=", "Generate_Training_Data", "(", "cfg", "=", "cfg", ")", "\n", "\n", "return", "dict_DB", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_training": [[91, 111], ["mkdir", "rmfile", "record_config"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.rmfile", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.record_config"], ["    ", "dict_DB", "[", "'generator'", "]", "=", "Generate_Training_Data", "(", "cfg", "=", "cfg", ")", "\n", "\n", "return", "dict_DB", "\n", "\n", "", "def", "prepare_training", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "\n", "    ", "logfile", "=", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/log/logfile.txt'", "\n", "mkdir", "(", "path", "=", "cfg", ".", "dir", "[", "'out'", "]", "+", "'train/log/'", ")", "\n", "\n", "if", "cfg", ".", "run_mode", "==", "'train'", "and", "cfg", ".", "resume", "==", "True", ":", "\n", "        ", "rmfile", "(", "path", "=", "logfile", ")", "\n", "val_result", "=", "{", "'HIoU'", ":", "0", ",", "'AUC_F'", ":", "0", "}", "\n", "\n", "dict_DB", "[", "'val_result'", "]", "=", "val_result", "\n", "dict_DB", "[", "'epoch'", "]", "=", "0", "\n", "\n", "record_config", "(", "cfg", ",", "logfile", ")", "\n", "\n", "\n", "", "dict_DB", "[", "'logfile'", "]", "=", "logfile", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.prepare.prepare_training_data_using_snet": [[114, 124], ["Test_Process_for_preparation", "cfg.dataset_name.replace", "mkdir", "len", "Test_Process_for_preparation.run", "os.listdir"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run"], ["", "def", "prepare_training_data_using_snet", "(", "cfg", ",", "dict_DB", ")", ":", "\n", "    ", "test_process", "=", "Test_Process_for_preparation", "(", "cfg", ",", "dict_DB", ")", "\n", "\n", "dataset_name", "=", "cfg", ".", "dataset_name", ".", "replace", "(", "'_Hard'", ",", "''", ")", "\n", "pickle_dir", "=", "cfg", ".", "dir", "[", "'out'", "]", "+", "'preprocess/{}_train/pickle/'", ".", "format", "(", "dataset_name", ")", "\n", "mkdir", "(", "pickle_dir", ")", "\n", "if", "len", "(", "os", ".", "listdir", "(", "pickle_dir", ")", ")", "==", "0", ":", "\n", "        ", "test_process", ".", "run", "(", "dict_DB", "[", "'S_Net'", "]", ",", "mode", "=", "'test'", ",", "dataset_name", "=", "'{}_train'", ".", "format", "(", "dataset_name", ")", ",", "max_iter", "=", "cfg", ".", "max_iter_train", ")", "\n", "\n", "", "return", "dict_DB", "\n", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.generator_balance.Generate_Training_Data.__init__": [[11, 37], ["np.array", "to_tensor", "load_pickle", "to_tensor", "to_tensor", "torch.arange", "Separated_Region", "load_pickle", "to_tensor", "to_tensor", "np.float32", "np.float32", "torch.max"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "self", ".", "max_dist", "=", "self", ".", "cfg", ".", "max_dist", "\n", "self", ".", "center", "=", "np", ".", "array", "(", "self", ".", "cfg", ".", "center_pt", ")", "\n", "\n", "self", ".", "candidates", "=", "to_tensor", "(", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", ")", "\n", "hough_space", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'hough_space'", ")", "\n", "self", ".", "hough_space", "=", "hough_space", "\n", "self", ".", "hough_h", ",", "self", ".", "hough_w", "=", "self", ".", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "self", ".", "hough_space_idx_all", "=", "to_tensor", "(", "self", ".", "hough_space", "[", "'idx'", "]", ")", "\n", "self", ".", "hough_space_idx", "=", "to_tensor", "(", "self", ".", "hough_space", "[", "'idx'", "]", "[", "self", ".", "hough_h", "//", "3", ":", "self", ".", "hough_h", "//", "3", "*", "2", "]", ")", "\n", "self", ".", "angle_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "self", ".", "hough_space", "[", "'angle_list'", "]", ")", ")", "/", "90", "\n", "self", ".", "dist_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "self", ".", "hough_space", "[", "'dist_list'", "]", ")", ")", "/", "self", ".", "max_dist", "\n", "\n", "self", ".", "cand_idx", "=", "torch", ".", "arange", "(", "0", ",", "torch", ".", "max", "(", "self", ".", "hough_space_idx", ")", "+", "1", ")", "\n", "self", ".", "cand_num", "=", "self", ".", "cand_idx", ".", "shape", "[", "0", "]", "\n", "self", ".", "cluster_num", "=", "self", ".", "cfg", ".", "cluster_num", "\n", "\n", "self", ".", "sigma_a", "=", "1.5", "\n", "self", ".", "sigma_d", "=", "1.5", "\n", "\n", "self", ".", "batch_size_cls", "=", "30", "\n", "\n", "self", ".", "sep_region", "=", "Separated_Region", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.generator_balance.Generate_Training_Data.run_for_training_data": [[38, 240], ["torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.FloatTensor().cuda", "torch.LongTensor().cuda", "torch.FloatTensor().cuda", "torch.LongTensor().cuda", "np.zeros", "np.zeros", "torch.zeros().cuda", "range", "torch.randperm", "torch.randperm", "dict", "generator_balance.Generate_Training_Data.sep_region.run", "torch.cat.view", "dict", "generator_balance.Generate_Training_Data.sep_region.run", "generator_balance.Generate_Training_Data.sep_region.run", "torch.cat.view", "range", "torch.LongTensor", "torch.LongTensor", "torch.FloatTensor", "torch.LongTensor", "torch.FloatTensor", "torch.LongTensor", "torch.zeros", "random.randint", "random.randint", "random.randint", "torch.cat", "torch.cat", "torch.cat", "torch.norm", "torch.randperm", "pos_idx_list1[].view", "torch.randperm", "pos_idx_list2[].view", "torch.norm", "torch.ones().cuda", "torch.zeros().cuda.clone", "torch.randperm", "range", "generator_balance.Generate_Training_Data.cand_idx[].cuda", "torch.randperm", "neg_idx_list[].view", "torch.randperm", "torch.cat", "torch.cat", "torch.cat", "torch.randperm", "torch.cat", "torch.randperm", "pos_idx_list[].view", "torch.randperm", "range", "torch.randperm", "pos_idx_list[].view", "torch.randperm", "neg_idx_list[].view", "torch.cat", "torch.FloatTensor().cuda", "torch.LongTensor().cuda", "int", "torch.randperm", "torch.ones", "torch.randperm", "range", "torch.randperm", "pos_idx_list[].view", "torch.FloatTensor().cuda", "torch.LongTensor().cuda", "int", "range", "generator_balance.Generate_Training_Data.cand_idx[].cuda", "torch.randperm", "neg_idx_list[].view", "torch.FloatTensor", "torch.LongTensor", "np.round", "float", "torch.FloatTensor", "torch.LongTensor", "np.round", "float"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run"], ["", "def", "run_for_training_data", "(", "self", ",", "a_idx", ",", "d_idx", ")", ":", "\n", "        ", "node_idx_set", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "edge_idx_set", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "node_score", "=", "torch", ".", "FloatTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "node_case", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "edge_score", "=", "torch", ".", "FloatTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "edge_case", "=", "torch", ".", "LongTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "node_count", "=", "np", ".", "zeros", "(", "11", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "edge_count", "=", "np", ".", "zeros", "(", "11", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "# gt idx & neg idx", "\n", "gt_num", "=", "a_idx", ".", "shape", "[", "1", "]", "\n", "\n", "# pos idx from detector", "\n", "check_pos", "=", "torch", ".", "zeros", "(", "self", ".", "cand_num", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "check_pos", "[", "self", ".", "detector_pos_idx", "]", "=", "1", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "batch_size_cls", ")", ":", "\n", "\n", "            ", "for", "cls", "in", "range", "(", "2", ")", ":", "\n", "                ", "flag", "=", "-", "1", "\n", "if", "cls", "==", "1", ":", "# different pos line", "\n", "                    ", "case", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "\n", "if", "case", "!=", "2", "and", "gt_num", ">", "1", ":", "# different pos line", "\n", "                        ", "rand_idx_list", "=", "torch", ".", "randperm", "(", "gt_num", ")", "[", ":", "2", "]", "\n", "gt_idx1", "=", "self", ".", "gt_grid_idx", "[", "'1'", "]", "[", "rand_idx_list", "[", "0", "]", "]", "\n", "gt_idx2", "=", "self", ".", "gt_grid_idx", "[", "'1'", "]", "[", "rand_idx_list", "[", "1", "]", "]", "\n", "hough_idx1", "=", "(", "self", ".", "hough_space_idx", "==", "gt_idx1", ")", ".", "nonzero", "(", ")", "\n", "hough_idx2", "=", "(", "self", ".", "hough_space_idx", "==", "gt_idx2", ")", ".", "nonzero", "(", ")", "\n", "dist", "=", "torch", ".", "norm", "(", "(", "hough_idx1", "-", "hough_idx2", ")", ".", "type", "(", "torch", ".", "float", ")", ")", "\n", "\n", "if", "dist", "<=", "3", ":", "\n", "                            ", "grid_size", "=", "'1'", "\n", "", "elif", "case", "==", "0", ":", "\n", "                            ", "grid_size", "=", "'5'", "\n", "", "elif", "case", "==", "1", ":", "\n", "                            ", "grid_size", "=", "'3'", "\n", "\n", "", "pos_idx_list1", "=", "self", ".", "gt_grid_idx", "[", "grid_size", "]", "[", "rand_idx_list", "[", "0", "]", "]", "\n", "pos_score_list1", "=", "self", ".", "gt_grid_score", "[", "grid_size", "]", "[", "rand_idx_list", "[", "0", "]", "]", "\n", "rand_idx", "=", "torch", ".", "randperm", "(", "pos_idx_list1", ".", "shape", "[", "0", "]", ")", "\n", "pos_idx1", "=", "pos_idx_list1", "[", "rand_idx", "[", "0", "]", "]", ".", "view", "(", "1", ",", "1", ")", "\n", "score1", "=", "pos_score_list1", "[", "rand_idx", "[", "0", "]", "]", "\n", "\n", "pos_idx_list2", "=", "self", ".", "gt_grid_idx", "[", "grid_size", "]", "[", "rand_idx_list", "[", "1", "]", "]", "\n", "pos_score_list2", "=", "self", ".", "gt_grid_score", "[", "grid_size", "]", "[", "rand_idx_list", "[", "1", "]", "]", "\n", "rand_idx", "=", "torch", ".", "randperm", "(", "pos_idx_list2", ".", "shape", "[", "0", "]", ")", "\n", "pos_idx2", "=", "pos_idx_list2", "[", "rand_idx", "[", "0", "]", "]", ".", "view", "(", "1", ",", "1", ")", "\n", "score2", "=", "pos_score_list2", "[", "rand_idx", "[", "0", "]", "]", "\n", "\n", "hough_idx1", "=", "(", "self", ".", "hough_space_idx", "==", "pos_idx1", ")", ".", "nonzero", "(", ")", "\n", "hough_idx2", "=", "(", "self", ".", "hough_space_idx", "==", "pos_idx2", ")", ".", "nonzero", "(", ")", "\n", "dist", "=", "torch", ".", "norm", "(", "(", "hough_idx1", "-", "hough_idx2", ")", ".", "type", "(", "torch", ".", "float", ")", ")", "\n", "\n", "if", "dist", "<=", "3", ":", "\n", "                            ", "continue", "\n", "\n", "", "else", ":", "\n", "                            ", "edge_idx", "=", "torch", ".", "cat", "(", "(", "pos_idx1", ",", "pos_idx2", ")", ",", "dim", "=", "1", ")", "\n", "score", "=", "(", "score1", "+", "score2", ")", "/", "2", "\n", "", "flag", "=", "'edge'", "\n", "\n", "", "elif", "case", "==", "2", "or", "gt_num", ">=", "1", ":", "\n", "                        ", "rand_idx_list", "=", "torch", ".", "randperm", "(", "gt_num", ")", "[", ":", "1", "]", "\n", "pos_idx_list", "=", "self", ".", "gt_grid_idx", "[", "'3'", "]", "[", "rand_idx_list", "[", "0", "]", "]", "\n", "pos_score_list", "=", "self", ".", "gt_grid_score", "[", "'3'", "]", "[", "rand_idx_list", "[", "0", "]", "]", "\n", "rand_idx", "=", "torch", ".", "randperm", "(", "pos_idx_list", ".", "shape", "[", "0", "]", ")", "\n", "node_idx", "=", "pos_idx_list", "[", "rand_idx", "[", "0", "]", "]", ".", "view", "(", "1", ",", "1", ")", "\n", "score", "=", "pos_score_list", "[", "rand_idx", "[", "0", "]", "]", "\n", "\n", "flag", "=", "'node'", "\n", "\n", "", "", "else", ":", "\n", "                    ", "case", "=", "random", ".", "randint", "(", "3", ",", "6", ")", "\n", "randomness", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "# randomness = 1", "\n", "if", "self", ".", "dataset_name", "==", "'test_SEL'", ":", "\n", "                        ", "randomness", "=", "1", "\n", "\n", "", "if", "randomness", "==", "0", ":", "\n", "                        ", "check", "=", "torch", ".", "ones", "(", "self", ".", "cand_num", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "                        ", "check", "=", "check_pos", ".", "clone", "(", ")", "\n", "\n", "", "if", "case", "==", "3", ":", "# two different lines", "\n", "\n", "                        ", "excluded_pos_idx", "=", "torch", ".", "randperm", "(", "gt_num", ")", "\n", "for", "j", "in", "range", "(", "gt_num", ")", ":", "\n", "                            ", "ep_idx", "=", "excluded_pos_idx", "[", "j", "]", "\n", "check", "[", "self", ".", "gt_grid_idx", "[", "'5'", "]", "[", "ep_idx", "]", "]", "=", "2", "\n", "\n", "", "neg_idx_list", "=", "self", ".", "cand_idx", "[", "check", "==", "1", "]", ".", "cuda", "(", ")", "\n", "rand_idx_list", "=", "torch", ".", "randperm", "(", "neg_idx_list", ".", "shape", "[", "0", "]", ")", "\n", "edge_idx", "=", "neg_idx_list", "[", "rand_idx_list", "[", ":", "2", "]", "]", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "flag", "=", "'edge'", "\n", "\n", "", "elif", "case", "==", "4", ":", "# two different lines with pos", "\n", "\n", "                        ", "rand_idx_list", "=", "torch", ".", "randperm", "(", "gt_num", ")", "\n", "pos_idx", "=", "rand_idx_list", "[", ":", "1", "]", "\n", "\n", "check", "[", "self", ".", "gt_grid_idx", "[", "'5'", "]", "[", "pos_idx", "]", "]", "=", "2", "\n", "\n", "excluded_pos_idx", "=", "rand_idx_list", "[", "1", ":", "]", "\n", "for", "j", "in", "range", "(", "gt_num", "-", "1", ")", ":", "\n", "                            ", "ep_idx", "=", "excluded_pos_idx", "[", "j", "]", "\n", "check", "[", "self", ".", "gt_grid_idx", "[", "'5'", "]", "[", "ep_idx", "]", "]", "=", "3", "\n", "\n", "", "pos_idx_list", "=", "(", "check", "==", "2", ")", ".", "nonzero", "(", ")", "\n", "rand_idx_list", "=", "torch", ".", "randperm", "(", "pos_idx_list", ".", "shape", "[", "0", "]", ")", "\n", "neg_idx1", "=", "pos_idx_list", "[", "rand_idx_list", "[", ":", "1", "]", "]", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "neg_idx_list", "=", "(", "check", "==", "1", ")", ".", "nonzero", "(", ")", "\n", "rand_idx_list", "=", "torch", ".", "randperm", "(", "neg_idx_list", ".", "shape", "[", "0", "]", ")", "\n", "neg_idx2", "=", "neg_idx_list", "[", "rand_idx_list", "[", ":", "1", "]", "]", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "edge_idx", "=", "torch", ".", "cat", "(", "(", "neg_idx1", ",", "neg_idx2", ")", ",", "dim", "=", "1", ")", "\n", "\n", "flag", "=", "'edge'", "\n", "\n", "", "elif", "case", "==", "5", ":", "# overlapping pos pair", "\n", "\n", "                        ", "rand_idx_list", "=", "torch", ".", "randperm", "(", "gt_num", ")", "\n", "pos_idx", "=", "rand_idx_list", "[", ":", "1", "]", "\n", "\n", "check", "[", "self", ".", "gt_grid_idx", "[", "'7'", "]", "[", "pos_idx", "]", "]", "=", "2", "\n", "\n", "excluded_pos_idx", "=", "rand_idx_list", "[", "1", ":", "]", "\n", "for", "j", "in", "range", "(", "gt_num", "-", "1", ")", ":", "\n", "                            ", "ep_idx", "=", "excluded_pos_idx", "[", "j", "]", "\n", "check", "[", "self", ".", "gt_grid_idx", "[", "'3'", "]", "[", "ep_idx", "]", "]", "=", "3", "\n", "\n", "", "pos_idx_list", "=", "(", "check", "==", "2", ")", ".", "nonzero", "(", ")", "\n", "rand_idx_list", "=", "torch", ".", "randperm", "(", "pos_idx_list", ".", "shape", "[", "0", "]", ")", "\n", "\n", "edge_idx", "=", "pos_idx_list", "[", "rand_idx_list", "[", ":", "2", "]", "]", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "flag", "=", "'edge'", "\n", "\n", "", "elif", "case", "==", "6", ":", "\n", "                        ", "for", "j", "in", "range", "(", "gt_num", ")", ":", "\n", "                            ", "check", "[", "self", ".", "gt_grid_idx", "[", "'7'", "]", "[", "j", "]", "]", "=", "2", "\n", "\n", "", "neg_idx_list", "=", "self", ".", "cand_idx", "[", "check", "==", "1", "]", ".", "cuda", "(", ")", "\n", "rand_idx_list", "=", "torch", ".", "randperm", "(", "neg_idx_list", ".", "shape", "[", "0", "]", ")", "\n", "node_idx", "=", "neg_idx_list", "[", "rand_idx_list", "[", ":", "1", "]", "]", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "flag", "=", "'node'", "\n", "\n", "", "score", "=", "0", "\n", "\n", "", "if", "flag", "==", "'node'", ":", "\n", "                    ", "if", "node_idx", ".", "shape", "[", "1", "]", "==", "0", ":", "\n", "                        ", "continue", "\n", "\n", "", "node_idx_set", "=", "torch", ".", "cat", "(", "(", "node_idx_set", ",", "node_idx", ")", ",", "dim", "=", "0", ")", "\n", "node_score", "=", "torch", ".", "cat", "(", "(", "node_score", ",", "torch", ".", "FloatTensor", "(", "[", "score", "]", ")", ".", "cuda", "(", ")", ")", ",", "dim", "=", "0", ")", "\n", "node_case", "=", "torch", ".", "cat", "(", "(", "node_case", ",", "torch", ".", "LongTensor", "(", "[", "case", "]", ")", ".", "cuda", "(", ")", ")", ",", "dim", "=", "0", ")", "\n", "node_count", "[", "int", "(", "np", ".", "round", "(", "float", "(", "score", ")", ",", "1", ")", "*", "10", ")", "]", "+=", "1", "\n", "", "elif", "flag", "==", "'edge'", ":", "\n", "                    ", "if", "edge_idx", ".", "shape", "[", "1", "]", "<", "2", ":", "\n", "                        ", "continue", "\n", "\n", "", "rand_flip", "=", "torch", ".", "randperm", "(", "2", ")", "\n", "edge_idx_set", "=", "torch", ".", "cat", "(", "(", "edge_idx_set", ",", "edge_idx", "[", ":", ",", "rand_flip", "]", ")", ",", "dim", "=", "0", ")", "\n", "edge_score", "=", "torch", ".", "cat", "(", "(", "edge_score", ",", "torch", ".", "FloatTensor", "(", "[", "score", "]", ")", ".", "cuda", "(", ")", ")", ",", "dim", "=", "0", ")", "\n", "edge_case", "=", "torch", ".", "cat", "(", "(", "edge_case", ",", "torch", ".", "LongTensor", "(", "[", "case", "]", ")", ".", "cuda", "(", ")", ")", ",", "dim", "=", "0", ")", "\n", "edge_count", "[", "int", "(", "np", ".", "round", "(", "float", "(", "score", ")", ",", "1", ")", "*", "10", ")", "]", "+=", "1", "\n", "\n", "# shuffle", "\n", "", "", "", "num", "=", "edge_case", ".", "shape", "[", "0", "]", "\n", "rand_idx_list", "=", "torch", ".", "randperm", "(", "num", ")", "\n", "edge_idx_set", "=", "edge_idx_set", "[", "rand_idx_list", "]", "\n", "edge_score", "=", "edge_score", "[", "rand_idx_list", "]", "\n", "edge_case", "=", "edge_case", "[", "rand_idx_list", "]", "\n", "\n", "num", "=", "node_case", ".", "shape", "[", "0", "]", "\n", "rand_idx_list", "=", "torch", ".", "randperm", "(", "num", ")", "\n", "node_idx_set", "=", "node_idx_set", "[", "rand_idx_list", "]", "\n", "node_score", "=", "node_score", "[", "rand_idx_list", "]", "\n", "node_case", "=", "node_case", "[", "rand_idx_list", "]", "\n", "\n", "\n", "node_data", "=", "dict", "(", ")", "\n", "node_data", "[", "'node_idx_set'", "]", "=", "node_idx_set", "\n", "node_data", "[", "'line_data'", "]", "=", "self", ".", "sep_region", ".", "run", "(", "node_idx_set", "[", ":", ",", "0", "]", ")", "\n", "node_data", "[", "'gt_node_score'", "]", "=", "node_score", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "node_data", "[", "'node_case'", "]", "=", "node_case", "\n", "node_data", "[", "'node_count'", "]", "=", "node_count", "\n", "\n", "\n", "edge_data", "=", "dict", "(", ")", "\n", "edge_data", "[", "'edge_idx_set'", "]", "=", "edge_idx_set", "\n", "edge_data", "[", "'line_data1'", "]", "=", "self", ".", "sep_region", ".", "run", "(", "edge_idx_set", "[", ":", ",", "0", "]", ")", "\n", "edge_data", "[", "'line_data2'", "]", "=", "self", ".", "sep_region", ".", "run", "(", "edge_idx_set", "[", ":", ",", "1", "]", ")", "\n", "edge_data", "[", "'gt_edge_score'", "]", "=", "edge_score", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "edge_data", "[", "'edge_case'", "]", "=", "edge_case", "\n", "edge_data", "[", "'edge_count'", "]", "=", "edge_count", "\n", "\n", "return", "node_data", ",", "edge_data", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.generator_balance.Generate_Training_Data.generate_grid": [[241, 259], ["range", "generator_balance.Generate_Training_Data.adjacent_grid_idx", "generator_balance.Generate_Training_Data.gt_grid_idx[].append", "generator_balance.Generate_Training_Data.gt_grid_score[].append", "generator_balance.Generate_Training_Data.adjacent_grid_idx", "generator_balance.Generate_Training_Data.gt_grid_idx[].append", "generator_balance.Generate_Training_Data.gt_grid_score[].append", "generator_balance.Generate_Training_Data.adjacent_grid_idx", "generator_balance.Generate_Training_Data.gt_grid_idx[].append", "generator_balance.Generate_Training_Data.gt_grid_score[].append", "generator_balance.Generate_Training_Data.adjacent_grid_idx", "generator_balance.Generate_Training_Data.gt_grid_idx[].append", "generator_balance.Generate_Training_Data.gt_grid_score[].append"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.adjacent_grid_idx", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.adjacent_grid_idx", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.adjacent_grid_idx", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.adjacent_grid_idx"], ["", "def", "generate_grid", "(", "self", ",", "a_idx", ",", "d_idx", ")", ":", "\n", "        ", "gt_num", "=", "a_idx", ".", "shape", "[", "1", "]", "\n", "\n", "self", ".", "gt_grid_idx", "=", "{", "'1'", ":", "[", "]", ",", "'3'", ":", "[", "]", ",", "'5'", ":", "[", "]", ",", "'7'", ":", "[", "]", ",", "'7_d'", ":", "[", "]", "}", "\n", "self", ".", "gt_grid_score", "=", "{", "'1'", ":", "[", "]", ",", "'3'", ":", "[", "]", ",", "'5'", ":", "[", "]", ",", "'7'", ":", "[", "]", ",", "'7_d'", ":", "[", "]", "}", "\n", "for", "i", "in", "range", "(", "gt_num", ")", ":", "\n", "            ", "region_idx", ",", "weight", "=", "self", ".", "adjacent_grid_idx", "(", "a_idx", "[", "0", ",", "i", "]", ",", "d_idx", "[", "0", ",", "i", "]", ",", "0", ",", "0", ")", "\n", "self", ".", "gt_grid_idx", "[", "'1'", "]", ".", "append", "(", "region_idx", ")", "\n", "self", ".", "gt_grid_score", "[", "'1'", "]", ".", "append", "(", "weight", ")", "\n", "region_idx", ",", "weight", "=", "self", ".", "adjacent_grid_idx", "(", "a_idx", "[", "0", ",", "i", "]", ",", "d_idx", "[", "0", ",", "i", "]", ",", "1", ",", "1", ")", "\n", "self", ".", "gt_grid_idx", "[", "'3'", "]", ".", "append", "(", "region_idx", ")", "\n", "self", ".", "gt_grid_score", "[", "'3'", "]", ".", "append", "(", "weight", ")", "\n", "region_idx", ",", "weight", "=", "self", ".", "adjacent_grid_idx", "(", "a_idx", "[", "0", ",", "i", "]", ",", "d_idx", "[", "0", ",", "i", "]", ",", "2", ",", "2", ")", "\n", "self", ".", "gt_grid_idx", "[", "'5'", "]", ".", "append", "(", "region_idx", ")", "\n", "self", ".", "gt_grid_score", "[", "'5'", "]", ".", "append", "(", "weight", ")", "\n", "region_idx", ",", "weight", "=", "self", ".", "adjacent_grid_idx", "(", "a_idx", "[", "0", ",", "i", "]", ",", "d_idx", "[", "0", ",", "i", "]", ",", "3", ",", "3", ")", "\n", "self", ".", "gt_grid_idx", "[", "'7'", "]", ".", "append", "(", "region_idx", ")", "\n", "self", ".", "gt_grid_score", "[", "'7'", "]", ".", "append", "(", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.generator_balance.Generate_Training_Data.adjacent_grid_idx": [[261, 278], ["np.maximum", "np.minimum", "np.maximum", "np.minimum", "torch.meshgrid", "torch.cat().view", "torch.exp", "to_tensor().type().reshape", "torch.arange().cuda", "torch.arange().cuda", "X.view", "Y.view", "to_np", "to_np", "torch.cat", "to_tensor().type", "to_np", "to_np", "torch.arange", "torch.arange", "to_tensor", "torch.pow", "torch.pow"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor"], ["", "", "def", "adjacent_grid_idx", "(", "self", ",", "a_idx", ",", "d_idx", ",", "da", ",", "dd", ")", ":", "\n", "        ", "h", ",", "w", "=", "self", ".", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "x1", "=", "np", ".", "maximum", "(", "to_np", "(", "a_idx", ")", "-", "da", ",", "0", ")", "\n", "x2", "=", "np", ".", "minimum", "(", "to_np", "(", "a_idx", ")", "+", "da", "+", "1", ",", "h", ")", "\n", "y1", "=", "np", ".", "maximum", "(", "to_np", "(", "d_idx", ")", "-", "dd", ",", "0", ")", "\n", "y2", "=", "np", ".", "minimum", "(", "to_np", "(", "d_idx", ")", "+", "dd", "+", "1", ",", "w", ")", "\n", "\n", "dx", "=", "x2", "-", "x1", "\n", "dy", "=", "y2", "-", "y1", "\n", "X", ",", "Y", "=", "torch", ".", "meshgrid", "(", "torch", ".", "arange", "(", "x1", ",", "x2", ")", ".", "cuda", "(", ")", ",", "torch", ".", "arange", "(", "y1", ",", "y2", ")", ".", "cuda", "(", ")", ")", "\n", "X", "=", "a_idx", "-", "X", ".", "view", "(", "dx", ",", "dy", ",", "1", ")", "\n", "Y", "=", "d_idx", "-", "Y", ".", "view", "(", "dx", ",", "dy", ",", "1", ")", "\n", "diff_idx", "=", "torch", ".", "cat", "(", "(", "X", ",", "Y", ")", ",", "dim", "=", "2", ")", ".", "view", "(", "-", "1", ",", "2", ")", "\n", "weight", "=", "torch", ".", "exp", "(", "-", "1", "*", "(", "torch", ".", "pow", "(", "diff_idx", ",", "2", ")", "[", ":", ",", "0", "]", "/", "(", "2", "*", "self", ".", "sigma_a", ")", "+", "torch", ".", "pow", "(", "diff_idx", ",", "2", ")", "[", ":", ",", "1", "]", "/", "(", "2", "*", "self", ".", "sigma_d", ")", ")", ")", "\n", "region_idx", "=", "to_tensor", "(", "self", ".", "hough_space", "[", "'idx'", "]", "[", "x1", ":", "x2", ",", "y1", ":", "y2", "]", ")", ".", "type", "(", "torch", ".", "long", ")", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "return", "region_idx", ",", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.generator_balance.Generate_Training_Data.update_batch": [[279, 289], ["load_pickle", "generator_balance.Generate_Training_Data.generate_grid"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.generate_grid"], ["", "def", "update_batch", "(", "self", ",", "a_idx", ",", "d_idx", ",", "img_name", ",", "dataset_name", ",", "pickle_dir", ",", "img", "=", "None", ",", "visualize", "=", "None", ")", ":", "\n", "        ", "self", ".", "img", "=", "img", "\n", "self", ".", "img_name", "=", "img_name", "\n", "self", ".", "visualize", "=", "visualize", "\n", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n", "pickle_path", "=", "pickle_dir", "+", "img_name", "[", ":", "-", "4", "]", "\n", "data", "=", "load_pickle", "(", "pickle_path", ")", "\n", "self", ".", "detector_pos_idx", "=", "data", "[", "'out'", "]", "[", "'cluster_idx'", "]", "\n", "self", ".", "generate_grid", "(", "a_idx", ",", "d_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils._init_fn": [[17, 24], ["numpy.random.seed", "random.seed", "torch.manual_seed"], "function", ["None"], ["sini", "=", "np", ".", "sin", "(", "theta", ")", "/", "irho", "\n", "if", "sini", "==", "0", ":", "\n", "            ", "x", "=", "np", ".", "round", "(", "r", "/", "cosi", "+", "W", "/", "2", ")", "\n", "b_points", ".", "append", "(", "(", "0", ",", "int", "(", "x", ")", ",", "H", "-", "1", ",", "int", "(", "x", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "angle", "=", "np", ".", "arctan", "(", "-", "cosi", "/", "sini", ")", "\n", "y", "=", "np", ".", "round", "(", "r", "/", "sini", "+", "W", "*", "cosi", "/", "sini", "/", "2", "+", "H", "/", "2", ")", "\n", "p1", ",", "p2", "=", "get_boundary_point", "(", "int", "(", "y", ")", ",", "0", ",", "angle", ",", "H", ",", "W", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_tensor": [[26, 28], ["torch.from_numpy().cuda", "torch.from_numpy"], "function", ["None"], ["                ", "b_points", ".", "append", "(", "(", "p1", "[", "1", "]", ",", "p1", "[", "0", "]", ",", "p2", "[", "1", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "", "", "", "return", "b_points", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np": [[32, 34], ["data.cpu().numpy", "data.cpu"], "function", ["None"], ["for", "(", "y1", ",", "x1", ",", "y2", ",", "x2", ")", "in", "b_points", ":", "\n", "        ", "img", "=", "cv2", ".", "line", "(", "img", ",", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "255", ",", "255", ",", "0", ")", ",", "thickness", "=", "3", ")", "\n", "", "return", "img", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_np2": [[35, 37], ["data.detach().cpu().numpy", "data.detach().cpu", "data.detach"], "function", ["None"], ["\n", "", "def", "caculate_precision", "(", "b_points", ",", "gt_coords", ",", "thresh", "=", "0.90", ")", ":", "\n", "    ", "N", "=", "len", "(", "b_points", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np": [[36, 38], ["numpy.repeat", "numpy.expand_dims"], "function", ["None"], ["", "def", "caculate_precision", "(", "b_points", ",", "gt_coords", ",", "thresh", "=", "0.90", ")", ":", "\n", "    ", "N", "=", "len", "(", "b_points", ")", "\n", "if", "N", "==", "0", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger": [[38, 42], ["open", "f.write", "f.close"], "function", ["None"], ["if", "N", "==", "0", ":", "\n", "        ", "return", "0", ",", "0", "\n", "", "ea", "=", "np", ".", "zeros", "(", "N", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", ",", "coord_p", "in", "enumerate", "(", "b_points", ")", ":", "\n", "        ", "if", "coord_p", "[", "0", "]", "==", "coord_p", "[", "2", "]", "and", "coord_p", "[", "1", "]", "==", "coord_p", "[", "3", "]", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.mkdir": [[45, 48], ["os.path.exists", "os.makedirs"], "function", ["None"], ["for", "coord_g", "in", "gt_coords", ":", "\n", "            ", "l_gt", "=", "Line", "(", "list", "(", "coord_g", ")", ")", "\n", "ea", "[", "i", "]", "=", "max", "(", "ea", "[", "i", "]", ",", "EA_metric", "(", "l_pred", ",", "l_gt", ")", ")", "\n", "", "", "return", "(", "ea", ">=", "thresh", ")", ".", "sum", "(", ")", ",", "N", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.rmfile": [[50, 53], ["os.path.exists", "os.remove"], "function", ["None"], ["", "def", "caculate_recall", "(", "b_points", ",", "gt_coords", ",", "thresh", "=", "0.90", ")", ":", "\n", "    ", "N", "=", "len", "(", "gt_coords", ")", "\n", "if", "N", "==", "0", ":", "\n", "        ", "return", "1.0", ",", "0", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.rmdir": [[55, 58], ["os.path.exists", "shutil.rmtree"], "function", ["None"], ["for", "i", ",", "coord_g", "in", "enumerate", "(", "gt_coords", ")", ":", "\n", "        ", "l_gt", "=", "Line", "(", "list", "(", "coord_g", ")", ")", "\n", "for", "coord_p", "in", "b_points", ":", "\n", "            ", "if", "coord_p", "[", "0", "]", "==", "coord_p", "[", "2", "]", "and", "coord_p", "[", "1", "]", "==", "coord_p", "[", "3", "]", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.save_pickle": [[55, 65], ["utils.mkdir", "open", "pickle.dump", "file_name.split"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir"], ["for", "i", ",", "coord_g", "in", "enumerate", "(", "gt_coords", ")", ":", "\n", "        ", "l_gt", "=", "Line", "(", "list", "(", "coord_g", ")", ")", "\n", "for", "coord_p", "in", "b_points", ":", "\n", "            ", "if", "coord_p", "[", "0", "]", "==", "coord_p", "[", "2", "]", "and", "coord_p", "[", "1", "]", "==", "coord_p", "[", "3", "]", ":", "\n", "                ", "continue", "\n", "", "l_pred", "=", "Line", "(", "list", "(", "coord_p", ")", ")", "\n", "ea", "[", "i", "]", "=", "max", "(", "ea", "[", "i", "]", ",", "EA_metric", "(", "l_pred", ",", "l_gt", ")", ")", "\n", "", "", "return", "(", "ea", ">=", "thresh", ")", ".", "sum", "(", ")", ",", "N", "\n", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.load_pickle": [[67, 72], ["open", "pickle.load"], "function", ["None"], []], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.create_test_dict": [[80, 91], ["torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor", "torch.FloatTensor"], "function", ["None"], []], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.create_forward_step": [[92, 99], ["step.append", "range", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.record_config": [[100, 124], ["utils.logger", "data.items", "getattr", "isinstance", "os.system", "cfg.__dir__", "value.items", "isinstance", "isinstance", "utils.logger", "isinstance", "utils.logger", "isinstance", "utils.logger", "isinstance", "os.path.join", "utils.logger", "isinstance", "utils.logger", "utils.logger"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.logger"], []], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.generate_datalist": [[125, 141], ["open", "open", "os.path.join", "line.strip().split", "imglist.append", "os.path.join", "line.strip().split", "imglist.append", "line.strip", "line.strip"], "function", ["None"], []], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.__init__": [[11, 47], ["torch.Module.__init__", "to_tensor", "to_tensor", "np.array", "np.float32", "load_pickle", "module_for_region_pooling.Separated_Region.generate_grid"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.generate_grid"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Separated_Region", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# cfg", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "self", ".", "max_dist", "=", "self", ".", "cfg", ".", "max_dist", "\n", "\n", "# candidates", "\n", "self", ".", "size", "=", "to_tensor", "(", "np", ".", "float32", "(", "self", ".", "cfg", ".", "size", ")", ")", "\n", "self", ".", "scale_factor", "=", "self", ".", "cfg", ".", "scale_factor", "\n", "self", ".", "dist", "=", "5", "\n", "\n", "self", ".", "candidates", "=", "to_tensor", "(", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", ")", "\n", "\n", "# generate grid", "\n", "self", ".", "grid", "=", "{", "}", "\n", "self", ".", "X", "=", "{", "}", "\n", "self", ".", "Y", "=", "{", "}", "\n", "for", "sf", "in", "self", ".", "scale_factor", ":", "\n", "            ", "self", ".", "generate_grid", "(", "sf", ",", "self", ".", "height", "//", "sf", ",", "self", ".", "width", "//", "sf", ")", "\n", "\n", "", "self", ".", "color_list", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", ",", "255", "]", ",", "\n", "[", "0", ",", "255", ",", "0", "]", ",", "\n", "[", "255", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "255", ",", "255", "]", ",", "\n", "[", "255", ",", "0", ",", "255", "]", ",", "\n", "[", "255", ",", "255", ",", "0", "]", ",", "\n", "[", "255", ",", "200", ",", "128", "]", ",", "\n", "[", "128", ",", "255", ",", "200", "]", ",", "\n", "[", "200", ",", "128", ",", "255", "]", ",", "\n", "[", "255", ",", "128", ",", "200", "]", ",", "\n", "[", "200", ",", "255", ",", "128", "]", ",", "\n", "[", "128", ",", "200", ",", "255", "]", "]", "]", ")", "\n", "\n", "self", ".", "dist", "=", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.generate_grid": [[48, 56], ["np.meshgrid", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "np.linspace", "np.linspace", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "module_for_region_pooling.Separated_Region.X[].view", "module_for_region_pooling.Separated_Region.Y[].view"], "methods", ["None"], ["", "def", "generate_grid", "(", "self", ",", "sf", ",", "height", ",", "width", ")", ":", "\n", "        ", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "0", ",", "width", "-", "1", ",", "width", ")", ",", "\n", "np", ".", "linspace", "(", "0", ",", "height", "-", "1", ",", "height", ")", ")", "\n", "\n", "self", ".", "X", "[", "sf", "]", "=", "torch", ".", "tensor", "(", "X", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "self", ".", "Y", "[", "sf", "]", "=", "torch", ".", "tensor", "(", "Y", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "self", ".", "grid", "[", "sf", "]", "=", "torch", ".", "cat", "(", "(", "self", ".", "X", "[", "sf", "]", ".", "view", "(", "1", ",", "height", ",", "width", ",", "1", ")", ",", "\n", "self", ".", "Y", "[", "sf", "]", ".", "view", "(", "1", ",", "height", ",", "width", ",", "1", ")", ")", ",", "dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.generate_flipped_grid": [[57, 80], ["module_for_region_pooling.Separated_Region.line_equation", "np.meshgrid", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "torch.tensor().view().cuda", "grid_X0.expand.expand.expand", "grid_Y0.expand.expand.expand", "line_eq.view.view.view", "module_for_region_pooling.point_flip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "np.linspace", "np.linspace", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "grid_X1.view", "grid_Y1.view", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.line_equation", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.point_flip"], ["", "def", "generate_flipped_grid", "(", "self", ")", ":", "\n", "        ", "num", "=", "self", ".", "line_pts", ".", "shape", "[", "0", "]", "\n", "\n", "h", ",", "w", "=", "self", ".", "height", "//", "self", ".", "sf", ",", "self", ".", "width", "//", "self", ".", "sf", "\n", "\n", "pts_norm", "=", "(", "self", ".", "line_pts", "/", "(", "self", ".", "size", "/", "self", ".", "sf", "-", "1", ")", "-", "0.5", ")", "*", "2", "# [-1, 1]", "\n", "self", ".", "line_pts_norm", "=", "pts_norm", "\n", "\n", "line_eq", ",", "check", "=", "self", ".", "line_equation", "(", "mode", "=", "'norm'", ")", "\n", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "w", ")", ",", "\n", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "h", ")", ")", "# after x before", "\n", "\n", "grid_X0", "=", "torch", ".", "tensor", "(", "X", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "view", "(", "1", ",", "h", ",", "w", ")", ".", "cuda", "(", ")", "\n", "grid_Y0", "=", "torch", ".", "tensor", "(", "Y", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "view", "(", "1", ",", "h", ",", "w", ")", ".", "cuda", "(", ")", "\n", "grid_X0", "=", "grid_X0", ".", "expand", "(", "num", ",", "h", ",", "w", ")", "\n", "grid_Y0", "=", "grid_Y0", ".", "expand", "(", "num", ",", "h", ",", "w", ")", "\n", "\n", "line_eq", "=", "line_eq", ".", "view", "(", "num", ",", "1", ",", "1", ",", "3", ")", "\n", "grid_X1", ",", "grid_Y1", "=", "point_flip", "(", "line_eq", ",", "check", ",", "pts_norm", ",", "grid_X0", ",", "grid_Y0", ")", "\n", "\n", "flipped_grid", "=", "torch", ".", "cat", "(", "(", "grid_X1", ".", "view", "(", "num", ",", "h", ",", "w", ",", "1", ")", ",", "grid_Y1", ".", "view", "(", "num", ",", "h", ",", "w", ",", "1", ")", ")", ",", "dim", "=", "3", ")", "\n", "return", "flipped_grid", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.line_equation": [[82, 97], ["torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "module_for_region_pooling.Separated_Region.line_pts_norm.clone", "module_for_region_pooling.Separated_Region.line_pts.clone", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "line_equation", "(", "self", ",", "mode", "=", "None", ")", ":", "\n", "\n", "        ", "if", "mode", "==", "'norm'", ":", "\n", "            ", "data", "=", "self", ".", "line_pts_norm", ".", "clone", "(", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "self", ".", "line_pts", ".", "clone", "(", ")", "\n", "\n", "# data: [N, 4] numpy array  x1, y1, x2, y2 (W, H, W, H)", "\n", "", "line_eq", "=", "torch", ".", "zeros", "(", "(", "data", ".", "shape", "[", "0", "]", ",", "3", ")", ")", ".", "cuda", "(", ")", "\n", "line_eq", "[", ":", ",", "0", "]", "=", "(", "data", "[", ":", ",", "1", "]", "-", "data", "[", ":", ",", "3", "]", ")", "/", "(", "data", "[", ":", ",", "0", "]", "-", "data", "[", ":", ",", "2", "]", ")", "\n", "line_eq", "[", ":", ",", "1", "]", "=", "-", "1", "\n", "line_eq", "[", ":", ",", "2", "]", "=", "-", "1", "*", "line_eq", "[", ":", ",", "0", "]", "*", "data", "[", ":", ",", "0", "]", "+", "data", "[", ":", ",", "1", "]", "\n", "check", "=", "(", "(", "data", "[", ":", ",", "0", "]", "-", "data", "[", ":", ",", "2", "]", ")", "==", "0", ")", "\n", "\n", "return", "line_eq", ",", "check", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.calculate_distance": [[98, 113], ["line_eq[].view", "line_eq[].view", "line_eq[].view", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "module_for_region_pooling.Separated_Region.line_pts[].view"], "methods", ["None"], ["", "def", "calculate_distance", "(", "self", ",", "line_eq", ",", "check", ")", ":", "# line-point distance", "\n", "\n", "        ", "num", "=", "line_eq", ".", "shape", "[", "0", "]", "\n", "a", "=", "line_eq", "[", ":", ",", "0", "]", ".", "view", "(", "num", ",", "1", ",", "1", ")", "\n", "b", "=", "line_eq", "[", ":", ",", "1", "]", ".", "view", "(", "num", ",", "1", ",", "1", ")", "\n", "c", "=", "line_eq", "[", ":", ",", "2", "]", ".", "view", "(", "num", ",", "1", ",", "1", ")", "\n", "\n", "dist", "=", "(", "self", ".", "grid", "[", "self", ".", "sf", "]", "[", ":", ",", ":", ",", ":", ",", "0", "]", "*", "a", "+", "self", ".", "grid", "[", "self", ".", "sf", "]", "[", ":", ",", ":", ",", ":", ",", "1", "]", "*", "b", "+", "c", ")", "/", "torch", ".", "sqrt", "(", "a", "*", "a", "+", "b", "*", "b", ")", "\n", "\n", "if", "True", "in", "check", ":", "\n", "            ", "dist", "[", "check", "==", "True", "]", "=", "(", "self", ".", "grid", "[", "self", ".", "sf", "]", "[", ":", ",", ":", ",", ":", ",", "0", "]", "-", "\n", "self", ".", "line_pts", "[", "check", "==", "True", ",", "0", "]", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "self", ".", "dist_map", "=", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.generate_region_mask": [[114, 120], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "generate_region_mask", "(", "self", ")", ":", "\n", "        ", "b", ",", "h", ",", "w", "=", "self", ".", "dist_map", ".", "shape", "\n", "region1", "=", "(", "0", "<", "self", ".", "dist_map", ")", ".", "view", "(", "b", ",", "h", ",", "w", ",", "1", ")", "\n", "region2", "=", "(", "self", ".", "dist_map", "<", "0", ")", ".", "view", "(", "b", ",", "h", ",", "w", ",", "1", ")", "\n", "\n", "# region1 = ((0 < self.dist_map) * (self.dist_map < self.cfg.region_dist)).view(b, h, w, 1)", "\n", "# region2 = ((-self.cfg.region_dist < self.dist_map) * (self.dist_map < 0)).view(b, h, w, 1)", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.generate_line_mask": [[121, 126], ["None"], "methods", ["None"], ["\n", "return", "torch", ".", "cat", "(", "(", "region1", ",", "region2", ")", ",", "dim", "=", "3", ")", "\n", "\n", "", "def", "generate_line_mask", "(", "self", ")", ":", "\n", "        ", "b", ",", "h", ",", "w", "=", "self", ".", "dist_map", ".", "shape", "\n", "line_mask", "=", "(", "(", "-", "1", "<=", "self", ".", "dist_map", ")", "*", "(", "self", ".", "dist_map", "<=", "1", ")", ")", ".", "view", "(", "b", ",", "h", ",", "w", ",", "1", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.generate_gaussian_weight_map": [[127, 133], ["torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp.view", "torch.exp.view", "torch.exp.view", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["None"], ["\n", "return", "line_mask", "\n", "\n", "", "def", "generate_gaussian_weight_map", "(", "self", ")", ":", "\n", "        ", "b", ",", "h", ",", "w", "=", "self", ".", "dist_map", ".", "shape", "\n", "dist_map", "=", "torch", ".", "abs", "(", "self", ".", "dist_map", ")", "\n", "weighted_map", "=", "torch", ".", "exp", "(", "-", "1", "*", "torch", ".", "pow", "(", "dist_map", ",", "2", ")", "/", "(", "2", "*", "self", ".", "cfg", ".", "adj_gaussian_sigma", ")", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.update": [[135, 139], ["None"], "methods", ["None"], ["return", "weighted_map", ".", "view", "(", "b", ",", "h", ",", "w", ",", "1", ")", "\n", "\n", "\n", "", "def", "update", "(", "self", ",", "line_pts", ",", "scale_factor", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.run": [[140, 166], ["module_for_region_pooling.Separated_Region.update", "module_for_region_pooling.Separated_Region.line_equation", "module_for_region_pooling.Separated_Region.calculate_distance", "module_for_region_pooling.Separated_Region.generate_line_mask", "module_for_region_pooling.Separated_Region.visualize_separate_region"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.update", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.line_equation", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.calculate_distance", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.generate_line_mask", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.visualize_separate_region"], ["        ", "self", ".", "line_pts", "=", "line_pts", "/", "(", "self", ".", "size", "-", "1", ")", "*", "(", "self", ".", "size", "//", "scale_factor", "-", "1", ")", "\n", "self", ".", "sf", "=", "scale_factor", "\n", "\n", "", "def", "run", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "output", "=", "{", "'region_mask'", ":", "{", "}", ",", "\n", "'line_mask'", ":", "{", "}", ",", "\n", "'grid'", ":", "{", "}", ",", "\n", "'weight'", ":", "{", "}", ",", "\n", "'dist_map'", ":", "{", "}", "}", "\n", "\n", "line_pts", "=", "self", ".", "candidates", "[", "idx", ",", ":", "]", "\n", "\n", "for", "sf", "in", "self", ".", "scale_factor", ":", "\n", "            ", "self", ".", "update", "(", "line_pts", ",", "sf", ")", "\n", "line_eq", ",", "check", "=", "self", ".", "line_equation", "(", ")", "\n", "self", ".", "calculate_distance", "(", "line_eq", ",", "check", ")", "\n", "region_mask", "=", "self", ".", "generate_region_mask", "(", ")", "\n", "line_mask", "=", "self", ".", "generate_line_mask", "(", ")", "\n", "weight", "=", "self", ".", "generate_gaussian_weight_map", "(", ")", "\n", "# grid = self.generate_flipped_grid()", "\n", "# dist_map = self.dist_map", "\n", "\n", "if", "self", ".", "cfg", ".", "disp_region_mask", "==", "True", ":", "\n", "\n", "                ", "if", "region_mask", ".", "shape", "[", "0", "]", "!=", "0", ":", "\n", "                    ", "self", ".", "visualize_separate_region", "(", "mask", "=", "region_mask", "[", "0", "]", ",", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.visualize_separate_region": [[168, 187], ["np.uint8", "np.uint8", "cv2.resize", "cv2.line", "mkdir", "cv2.imwrite", "to_3D_np", "to_3D_np", "to_np", "to_np"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'vis_check/region_mask/'", ",", "\n", "file_name", "=", "'region.jpg'", ")", "\n", "", "", "output", "[", "'region_mask'", "]", "[", "sf", "]", "=", "region_mask", "\n", "output", "[", "'line_mask'", "]", "[", "sf", "]", "=", "line_mask", "\n", "output", "[", "'weight'", "]", "[", "sf", "]", "=", "weight", "\n", "# output['grid'][sf] = grid", "\n", "# output['dist_map'][sf] = dist_map", "\n", "\n", "", "return", "output", "\n", "\n", "\n", "", "def", "visualize_separate_region", "(", "self", ",", "mask", ",", "line_pts", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "\n", "        ", "mask1", "=", "np", ".", "uint8", "(", "to_3D_np", "(", "to_np", "(", "mask", "[", ":", ",", ":", ",", "0", "]", ")", ")", "*", "255", ")", "\n", "mask1", "[", ":", ",", ":", ",", "[", "0", ",", "1", "]", "]", "=", "0", "\n", "mask2", "=", "np", ".", "uint8", "(", "to_3D_np", "(", "to_np", "(", "mask", "[", ":", ",", ":", ",", "1", "]", ")", ")", "*", "255", ")", "\n", "mask2", "[", ":", ",", ":", ",", "[", "0", ",", "2", "]", "]", "=", "0", "\n", "\n", "disp_mask", "=", "mask1", "+", "mask2", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.visualize_piece": [[188, 207], ["np.zeros", "range", "cv2.resize", "range", "mkdir", "cv2.imwrite", "np.uint8", "cv2.line", "to_3D_np", "to_np"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["\n", "mask", "=", "cv2", ".", "resize", "(", "disp_mask", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n", "\n", "pt_1", "=", "(", "line_pts", "[", "0", "]", ",", "line_pts", "[", "1", "]", ")", "\n", "pt_2", "=", "(", "line_pts", "[", "2", "]", ",", "line_pts", "[", "3", "]", ")", "\n", "\n", "mask", "=", "cv2", ".", "line", "(", "mask", ",", "pt_1", ",", "pt_2", ",", "(", "255", ",", "255", ",", "255", ")", ",", "3", ")", "\n", "\n", "mkdir", "(", "dir_name", ")", "\n", "cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", ",", "mask", ")", "\n", "\n", "", "def", "visualize_piece", "(", "self", ",", "mask", ",", "line_pts", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "        ", "h", ",", "w", ",", "b", "=", "mask", ".", "shape", "\n", "disp_mask", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "b", ")", ":", "\n", "            ", "temp_mask", "=", "to_3D_np", "(", "to_np", "(", "mask", "[", ":", ",", ":", ",", "i", "]", ")", ")", "*", "self", ".", "color_list", "[", ":", ",", "i", ":", "i", "+", "1", ",", ":", "]", "\n", "\n", "disp_mask", "+=", "temp_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.__init__": [[221, 236], ["torch.Module.__init__", "np.array", "np.array", "to_tensor", "np.array", "load_pickle"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Inter_Region", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# cfg", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "self", ".", "mean", "=", "np", ".", "array", "(", "[", "cfg", ".", "mean", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "std", "=", "np", ".", "array", "(", "[", "cfg", ".", "std", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "self", ".", "candidates", "=", "to_tensor", "(", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", ")", "\n", "\n", "self", ".", "color_list", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", ",", "255", "]", ",", "\n", "[", "0", ",", "0", ",", "128", "]", ",", "\n", "[", "0", ",", "255", ",", "0", "]", ",", "\n", "[", "0", ",", "128", ",", "0", "]", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.get_inter_mask": [[237, 255], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "module_for_region_pooling.Inter_Region.visualize_inter_region_all", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.visualize_inter_region_all"], ["", "def", "get_inter_mask", "(", "self", ",", "r_mask1", ",", "r_mask2", ")", ":", "\n", "        ", "b", ",", "_", ",", "h", ",", "w", "=", "r_mask1", ".", "shape", "\n", "\n", "out1", "=", "r_mask1", "*", "r_mask2", "\n", "out2", "=", "r_mask1", "*", "r_mask2", "[", ":", ",", "[", "1", ",", "0", "]", "]", "\n", "inter_mask", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "dim", "=", "1", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "disp_region_mask", "==", "True", ":", "\n", "            ", "for", "k", "in", "range", "(", "b", ")", ":", "\n", "                ", "temp_line_pts", "=", "torch", ".", "cat", "(", "(", "self", ".", "line_pts1", "[", "k", ":", "k", "+", "1", "]", ",", "self", ".", "line_pts2", "[", "k", ":", "k", "+", "1", "]", ")", ",", "dim", "=", "0", ")", "\n", "self", ".", "visualize_inter_region_all", "(", "mask", "=", "inter_mask", "[", "k", "]", ",", "\n", "line_pts", "=", "temp_line_pts", ",", "\n", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'vis_check/region_mask/'", ",", "\n", "file_name", "=", "'inter_region_all_'", "+", "str", "(", "k", ")", "+", "'.jpg'", ")", "\n", "\n", "# break", "\n", "\n", "", "", "return", "inter_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.forward_adj_inter_mask": [[256, 277], ["torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "module_for_region_pooling.Inter_Region.visualize_adj_region_all", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.visualize_adj_region_all"], ["", "def", "forward_adj_inter_mask", "(", "self", ",", "inter_mask", ")", ":", "\n", "        ", "idx", "=", "[", "[", "0", ",", "2", "]", ",", "[", "1", ",", "3", "]", ",", "[", "0", ",", "3", "]", ",", "[", "1", ",", "2", "]", "]", "\n", "b", ",", "_", ",", "h", ",", "w", "=", "inter_mask", ".", "shape", "\n", "adj_inter_mask", "=", "inter_mask", "[", ":", ",", "idx", ",", ":", ",", ":", "]", "\n", "\n", "n_mask", "=", "(", "torch", ".", "sum", "(", "adj_inter_mask", ",", "dim", "=", "(", "3", ",", "4", ")", ",", "keepdim", "=", "True", ")", "!=", "0", ")", "\n", "check", "=", "torch", ".", "mul", "(", "n_mask", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "n_mask", "[", ":", ",", ":", ",", "1", ":", "2", "]", ")", "\n", "\n", "\n", "if", "self", ".", "cfg", ".", "disp_region_mask", "==", "True", ":", "\n", "            ", "for", "k", "in", "range", "(", "b", ")", ":", "\n", "                ", "temp_line_pts", "=", "torch", ".", "cat", "(", "(", "self", ".", "line_pts1", "[", "k", ":", "k", "+", "1", "]", ",", "self", ".", "line_pts2", "[", "k", ":", "k", "+", "1", "]", ")", ",", "dim", "=", "0", ")", "\n", "\n", "self", ".", "visualize_adj_region_all", "(", "mask", "=", "adj_inter_mask", "[", "k", "]", "*", "check", "[", "k", "]", ",", "\n", "line_pts", "=", "temp_line_pts", ",", "\n", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'vis_check/region_mask/'", ",", "\n", "file_name", "=", "'adj_region_'", "+", "str", "(", "k", ")", "+", "'.jpg'", ")", "\n", "# break", "\n", "\n", "\n", "", "", "return", "adj_inter_mask", "*", "check", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.update_for_visualize": [[280, 285], ["to_np", "img[].permute", "np.uint8"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "update_for_visualize", "(", "self", ",", "img", ",", "pair_idx", ")", ":", "\n", "        ", "img", "=", "to_np", "(", "img", "[", "0", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "self", ".", "img", "=", "np", ".", "uint8", "(", "(", "img", "*", "self", ".", "std", "+", "self", ".", "mean", ")", "*", "255", ")", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "self", ".", "line_pts1", "=", "self", ".", "candidates", "[", "pair_idx", "[", ":", ",", "0", "]", "]", "\n", "self", ".", "line_pts2", "=", "self", ".", "candidates", "[", "pair_idx", "[", ":", ",", "1", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.visualize": [[287, 298], ["module_for_region_pooling.Inter_Region.Colormap", "np.ascontiguousarray", "range", "mkdir", "cv2.imwrite", "np.uint8", "np.uint8", "cv2.line", "to_np"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.Colormap", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "visualize", "(", "self", ",", "mask", ",", "line_pts", ",", "dir_name", ",", "file_name", ")", ":", "\n", "        ", "mask", "=", "self", ".", "Colormap", "(", "self", ".", "img", ",", "np", ".", "uint8", "(", "to_np", "(", "mask", ")", ")", ")", "\n", "mask", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "uint8", "(", "mask", ")", ")", "\n", "for", "i", "in", "range", "(", "line_pts", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pt_1", "=", "(", "line_pts", "[", "i", ",", "0", "]", ",", "line_pts", "[", "i", ",", "1", "]", ")", "\n", "pt_2", "=", "(", "line_pts", "[", "i", ",", "2", "]", ",", "line_pts", "[", "i", ",", "3", "]", ")", "\n", "\n", "mask", "=", "cv2", ".", "line", "(", "mask", ",", "pt_1", ",", "pt_2", ",", "(", "0", ",", "0", ",", "255", ")", ",", "3", ")", "\n", "\n", "", "mkdir", "(", "dir_name", ")", "\n", "cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.visualize_inter_region_all": [[299, 320], ["np.zeros", "range", "cv2.resize", "range", "mkdir", "cv2.imwrite", "np.uint8", "to_3D_np", "cv2.line", "to_np", "cv2.line"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "visualize_inter_region_all", "(", "self", ",", "mask", ",", "line_pts", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "        ", "b", ",", "h", ",", "w", "=", "mask", ".", "shape", "\n", "disp_mask", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "b", ")", ":", "\n", "            ", "temp_mask", "=", "to_3D_np", "(", "to_np", "(", "mask", "[", "i", ",", ":", ",", ":", "]", ")", ")", "*", "self", ".", "color_list", "[", ":", ",", "i", ":", "i", "+", "1", ",", ":", "]", "\n", "\n", "disp_mask", "+=", "temp_mask", "\n", "\n", "", "disp_mask", "=", "cv2", ".", "resize", "(", "np", ".", "uint8", "(", "disp_mask", ")", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "line_pts", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pt_1", "=", "(", "line_pts", "[", "i", ",", "0", "]", ",", "line_pts", "[", "i", ",", "1", "]", ")", "\n", "pt_2", "=", "(", "line_pts", "[", "i", ",", "2", "]", ",", "line_pts", "[", "i", ",", "3", "]", ")", "\n", "\n", "if", "i", "==", "0", ":", "\n", "                ", "disp_mask", "=", "cv2", ".", "line", "(", "disp_mask", ",", "pt_1", ",", "pt_2", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ")", "\n", "", "elif", "i", "==", "1", ":", "\n", "                ", "disp_mask", "=", "cv2", ".", "line", "(", "disp_mask", ",", "pt_1", ",", "pt_2", ",", "(", "0", ",", "255", ",", "0", ")", ",", "2", ")", "\n", "", "", "mkdir", "(", "dir_name", ")", "\n", "cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", ",", "disp_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.visualize_adj_region_all": [[321, 343], ["range", "np.zeros", "cv2.resize", "range", "mkdir", "cv2.imwrite", "to_3D_np", "to_3D_np", "np.uint8", "to_np", "to_np", "cv2.line", "str", "cv2.line"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "visualize_adj_region_all", "(", "self", ",", "mask", ",", "line_pts", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "        ", "b", ",", "_", ",", "h", ",", "w", "=", "mask", ".", "shape", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "            ", "disp_mask", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "3", ")", ")", "\n", "temp_mask", "=", "to_3D_np", "(", "to_np", "(", "mask", "[", "i", ",", "0", ",", ":", ",", ":", "]", ")", ")", "*", "self", ".", "color_list", "[", ":", ",", "i", ":", "i", "+", "1", ",", ":", "]", "\n", "disp_mask", "+=", "temp_mask", "\n", "temp_mask", "=", "to_3D_np", "(", "to_np", "(", "mask", "[", "i", ",", "1", ",", ":", ",", ":", "]", ")", ")", "*", "self", ".", "color_list", "[", ":", ",", "i", ":", "i", "+", "1", ",", ":", "]", "\n", "disp_mask", "+=", "temp_mask", "\n", "\n", "disp_mask", "=", "cv2", ".", "resize", "(", "np", ".", "uint8", "(", "disp_mask", ")", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n", "\n", "for", "j", "in", "range", "(", "line_pts", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "pt_1", "=", "(", "line_pts", "[", "j", ",", "0", "]", ",", "line_pts", "[", "j", ",", "1", "]", ")", "\n", "pt_2", "=", "(", "line_pts", "[", "j", ",", "2", "]", ",", "line_pts", "[", "j", ",", "3", "]", ")", "\n", "\n", "if", "j", "==", "0", ":", "\n", "                    ", "disp_mask", "=", "cv2", ".", "line", "(", "disp_mask", ",", "pt_1", ",", "pt_2", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ")", "\n", "", "elif", "j", "==", "1", ":", "\n", "                    ", "disp_mask", "=", "cv2", ".", "line", "(", "disp_mask", ",", "pt_1", ",", "pt_2", ",", "(", "0", ",", "255", ",", "0", ")", ",", "2", ")", "\n", "", "", "mkdir", "(", "dir_name", ")", "\n", "cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", "+", "'_'", "+", "str", "(", "i", ")", ",", "disp_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Inter_Region.Colormap": [[345, 354], ["cv2.resize", "np.uint8", "cv2.applyColorMap", "cv2.resize"], "methods", ["None"], ["", "", "def", "Colormap", "(", "self", ",", "img", ",", "mask", ",", "alpha", "=", "0.5", ")", ":", "\n", "\n", "        ", "mask", "=", "cv2", ".", "resize", "(", "mask", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n", "mask", "=", "np", ".", "uint8", "(", "cv2", ".", "resize", "(", "mask", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "*", "255", ")", "\n", "mask", "=", "cv2", ".", "applyColorMap", "(", "mask", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "\n", "out", "=", "img", "*", "alpha", "+", "mask", "*", "(", "1", "-", "alpha", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.__init__": [[357, 372], ["torch.Module.__init__", "np.array", "np.array", "to_tensor", "np.array", "load_pickle"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Adjacent_Region", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# cfg", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "self", ".", "mean", "=", "np", ".", "array", "(", "[", "cfg", ".", "mean", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "std", "=", "np", ".", "array", "(", "[", "cfg", ".", "std", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "self", ".", "candidates", "=", "to_tensor", "(", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'preprocess'", "]", "[", "self", ".", "cfg", ".", "dataset_name", "]", "+", "'candidates'", ")", ")", "\n", "\n", "self", ".", "color_list", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", ",", "125", "]", ",", "\n", "[", "0", ",", "125", ",", "0", "]", ",", "\n", "[", "125", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "125", ",", "125", "]", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.overlapping_regions": [[373, 388], ["torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "len", "mask1.type.type.view", "mask2.type.type.view", "mask1.type.type.type", "mask2.type.type.type"], "methods", ["None"], ["", "def", "overlapping_regions", "(", "self", ",", "mask1", ",", "mask2", ",", "grid", ")", ":", "\n", "        ", "b", ",", "h", ",", "w", ",", "_", "=", "grid", ".", "shape", "\n", "\n", "if", "len", "(", "mask1", ".", "shape", ")", "==", "3", ":", "\n", "            ", "mask1", "=", "mask1", ".", "view", "(", "b", ",", "1", ",", "h", ",", "w", ")", "\n", "mask2", "=", "mask2", ".", "view", "(", "b", ",", "1", ",", "h", ",", "w", ")", "\n", "\n", "", "if", "mask1", ".", "dtype", "!=", "torch", ".", "float32", ":", "\n", "            ", "mask1", "=", "mask1", ".", "type", "(", "torch", ".", "float", ")", "\n", "mask2", "=", "mask2", ".", "type", "(", "torch", ".", "float", ")", "\n", "\n", "# flip", "\n", "", "out1", "=", "F", ".", "grid_sample", "(", "mask1", ",", "grid", ",", "align_corners", "=", "True", ")", "\n", "out2", "=", "F", ".", "grid_sample", "(", "mask2", ",", "grid", ",", "align_corners", "=", "True", ")", "\n", "return", "(", "(", "out1", "*", "mask2", "+", "out2", "*", "mask1", ")", "!=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.get_similarity_map": [[390, 398], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "module_for_region_pooling.Adjacent_Region.overlap_mask.view", "module_for_region_pooling.Adjacent_Region.s_vec2.view().repeat", "module_for_region_pooling.Adjacent_Region.s_vec1.view().repeat", "module_for_region_pooling.Adjacent_Region.s_vec2.view", "module_for_region_pooling.Adjacent_Region.s_vec1.view"], "methods", ["None"], ["", "def", "get_similarity_map", "(", "self", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "self", ".", "s_vec1", ".", "shape", "\n", "\n", "s_vec", "=", "torch", ".", "cat", "(", "(", "self", ".", "s_vec2", ".", "view", "(", "b", ",", "1", ",", "c", ",", "h", ",", "w", ")", ".", "repeat", "(", "1", ",", "2", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "self", ".", "s_vec1", ".", "view", "(", "b", ",", "1", ",", "c", ",", "h", ",", "w", ")", ".", "repeat", "(", "1", ",", "2", ",", "1", ",", "1", ",", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n", "sim_data", "=", "s_vec", "*", "self", ".", "overlap_mask", ".", "view", "(", "b", ",", "4", ",", "1", ",", "h", ",", "w", ")", "\n", "return", "sim_data", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.get_overlap_mask": [[399, 416], ["torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "module_for_region_pooling.Adjacent_Region.overlapping_regions", "module_for_region_pooling.Adjacent_Region.overlapping_regions", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "module_for_region_pooling.Adjacent_Region.visualize", "str", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.overlapping_regions", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.overlapping_regions", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.visualize"], ["", "def", "get_overlap_mask", "(", "self", ")", ":", "\n", "        ", "b", ",", "_", ",", "h", ",", "w", "=", "self", ".", "inter_mask", ".", "shape", "\n", "self", ".", "overlap_mask", "=", "torch", ".", "BoolTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "out1", "=", "self", ".", "overlapping_regions", "(", "self", ".", "inter_mask", "[", ":", ",", "[", "0", ",", "1", "]", "]", ",", "self", ".", "inter_mask", "[", ":", ",", "[", "2", ",", "3", "]", "]", ",", "self", ".", "grid2", ")", "\n", "out2", "=", "self", ".", "overlapping_regions", "(", "self", ".", "inter_mask", "[", ":", ",", "[", "0", ",", "1", "]", "]", ",", "self", ".", "inter_mask", "[", ":", ",", "[", "3", ",", "2", "]", "]", ",", "self", ".", "grid1", ")", "\n", "self", ".", "overlap_mask", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "dim", "=", "1", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "disp_region_mask", "==", "True", ":", "\n", "            ", "for", "k", "in", "range", "(", "b", ")", ":", "\n", "                ", "temp_line_pts", "=", "torch", ".", "cat", "(", "(", "self", ".", "line_pts1", "[", "k", ":", "k", "+", "1", "]", ",", "self", ".", "line_pts2", "[", "k", ":", "k", "+", "1", "]", ")", ",", "dim", "=", "0", ")", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "\n", "                    ", "self", ".", "visualize", "(", "mask", "=", "self", ".", "overlap_mask", "[", "k", ",", "i", "]", ",", "\n", "line_pts", "=", "temp_line_pts", ",", "\n", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'vis_check/region_mask/'", ",", "\n", "file_name", "=", "'overlap_region_'", "+", "str", "(", "k", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'.jpg'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.forward_overlap_mask": [[418, 427], ["module_for_region_pooling.Adjacent_Region.get_overlap_mask"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.get_overlap_mask"], ["", "", "", "", "def", "forward_overlap_mask", "(", "self", ",", "inter_mask", ",", "grid1", ",", "grid2", ",", "weight1", "=", "None", ",", "weight2", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "grid1", "=", "grid1", "\n", "self", ".", "grid2", "=", "grid2", "\n", "self", ".", "inter_mask", "=", "inter_mask", "\n", "\n", "self", ".", "get_overlap_mask", "(", ")", "\n", "\n", "return", "self", ".", "overlap_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.forward_att_mask": [[428, 443], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "weight2.view", "weight1.view", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "module_for_region_pooling.Adjacent_Region.visualize_adj_region_all", "str"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.visualize_adj_region_all"], ["", "def", "forward_att_mask", "(", "self", ",", "adj_inter_mask", ",", "weight1", ",", "weight2", ")", ":", "\n", "        ", "b", ",", "_", ",", "h", ",", "w", "=", "weight1", ".", "shape", "\n", "att_mask1", "=", "adj_inter_mask", "[", ":", ",", ":", "2", "]", "*", "weight2", ".", "view", "(", "b", ",", "1", ",", "1", ",", "h", ",", "w", ")", "\n", "att_mask2", "=", "adj_inter_mask", "[", ":", ",", "2", ":", "]", "*", "weight1", ".", "view", "(", "b", ",", "1", ",", "1", ",", "h", ",", "w", ")", "\n", "att_mask", "=", "torch", ".", "cat", "(", "(", "att_mask1", ",", "att_mask2", ")", ",", "dim", "=", "1", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "disp_region_mask", "==", "True", ":", "\n", "            ", "for", "k", "in", "range", "(", "b", ")", ":", "\n", "                ", "temp_line_pts", "=", "torch", ".", "cat", "(", "(", "self", ".", "line_pts1", "[", "k", ":", "k", "+", "1", "]", ",", "self", ".", "line_pts2", "[", "k", ":", "k", "+", "1", "]", ")", ",", "dim", "=", "0", ")", "\n", "\n", "self", ".", "visualize_adj_region_all", "(", "mask", "=", "att_mask", "[", "k", "]", ",", "\n", "line_pts", "=", "temp_line_pts", ",", "\n", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'vis_check/region_mask/'", ",", "\n", "file_name", "=", "'att_adj_region_'", "+", "str", "(", "k", ")", "+", "'.jpg'", ")", "\n", "", "", "return", "att_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.forward_sim_map": [[445, 457], ["feat.expand.expand.expand", "module_for_region_pooling.Similarity_vector", "module_for_region_pooling.Similarity_vector", "module_for_region_pooling.Adjacent_Region.get_similarity_map", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Similarity_vector", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Similarity_vector", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.get_similarity_map"], ["", "def", "forward_sim_map", "(", "self", ",", "feat", ",", "grid1", ",", "grid2", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "feat", ".", "shape", "\n", "batch_size", "=", "grid1", ".", "shape", "[", "0", "]", "\n", "feat", "=", "feat", ".", "expand", "(", "batch_size", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "self", ".", "s_vec1", "=", "Similarity_vector", "(", "x", "=", "feat", ",", "grid", "=", "grid1", ")", "\n", "self", ".", "s_vec2", "=", "Similarity_vector", "(", "x", "=", "feat", ",", "grid", "=", "grid2", ")", "\n", "\n", "sim_data", "=", "self", ".", "get_similarity_map", "(", ")", "\n", "sim_map", "=", "torch", ".", "sum", "(", "sim_data", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "sim_data", ",", "sim_map", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.forward_sim_map_v2": [[458, 473], ["feat.expand.expand.expand", "Similarity_vector().view", "Similarity_vector().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum.view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "module_for_region_pooling.Similarity_vector", "module_for_region_pooling.Similarity_vector"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Similarity_vector", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Similarity_vector"], ["", "def", "forward_sim_map_v2", "(", "self", ",", "feat", ",", "r_mask1", ",", "r_mask2", ",", "grid1", ",", "grid2", ")", ":", "\n", "        ", "_", ",", "c", ",", "h", ",", "w", "=", "feat", ".", "shape", "\n", "b", ",", "_", ",", "_", ",", "_", "=", "r_mask1", ".", "shape", "\n", "batch_size", "=", "grid1", ".", "shape", "[", "0", "]", "\n", "feat", "=", "feat", ".", "expand", "(", "batch_size", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "self", ".", "s_vec1", "=", "Similarity_vector", "(", "x", "=", "feat", ",", "grid", "=", "grid1", ")", ".", "view", "(", "b", ",", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "self", ".", "s_vec2", "=", "Similarity_vector", "(", "x", "=", "feat", ",", "grid", "=", "grid2", ")", ".", "view", "(", "b", ",", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "s_vec", "=", "torch", ".", "cat", "(", "(", "self", ".", "s_vec1", ",", "self", ".", "s_vec2", ")", ",", "dim", "=", "1", ")", "\n", "r_mask1", "=", "torch", ".", "sum", "(", "r_mask1", ".", "view", "(", "b", ",", "2", ",", "1", ",", "h", ",", "w", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "r_mask2", "=", "torch", ".", "sum", "(", "r_mask2", ".", "view", "(", "b", ",", "2", ",", "1", ",", "h", ",", "w", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "r_mask", "=", "torch", ".", "cat", "(", "(", "r_mask1", ",", "r_mask2", ")", ",", "dim", "=", "1", ")", "\n", "sim_map", "=", "torch", ".", "sum", "(", "s_vec", "*", "r_mask", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "_", ",", "sim_map", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.update_for_visualize": [[474, 479], ["to_np", "img[].permute", "np.uint8"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "update_for_visualize", "(", "self", ",", "img", ",", "pair_idx", ")", ":", "\n", "        ", "img", "=", "to_np", "(", "img", "[", "0", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "self", ".", "img", "=", "np", ".", "uint8", "(", "(", "img", "*", "self", ".", "std", "+", "self", ".", "mean", ")", "*", "255", ")", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "self", ".", "line_pts1", "=", "self", ".", "candidates", "[", "pair_idx", "[", ":", ",", "0", "]", "]", "\n", "self", ".", "line_pts2", "=", "self", ".", "candidates", "[", "pair_idx", "[", ":", ",", "1", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.visualize": [[481, 492], ["module_for_region_pooling.Adjacent_Region.Colormap", "np.ascontiguousarray", "range", "mkdir", "cv2.imwrite", "np.uint8", "np.uint8", "cv2.line", "to_np"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.Colormap", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "visualize", "(", "self", ",", "mask", ",", "line_pts", ",", "dir_name", ",", "file_name", ")", ":", "\n", "        ", "mask", "=", "self", ".", "Colormap", "(", "self", ".", "img", ",", "np", ".", "uint8", "(", "to_np", "(", "mask", ")", ")", ")", "\n", "mask", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "uint8", "(", "mask", ")", ")", "\n", "for", "i", "in", "range", "(", "line_pts", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pt_1", "=", "(", "line_pts", "[", "i", ",", "0", "]", ",", "line_pts", "[", "i", ",", "1", "]", ")", "\n", "pt_2", "=", "(", "line_pts", "[", "i", ",", "2", "]", ",", "line_pts", "[", "i", ",", "3", "]", ")", "\n", "\n", "mask", "=", "cv2", ".", "line", "(", "mask", ",", "pt_1", ",", "pt_2", ",", "(", "0", ",", "0", ",", "255", ")", ",", "3", ")", "\n", "\n", "", "mkdir", "(", "dir_name", ")", "\n", "cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.visualize_adj_region_all": [[493, 515], ["range", "np.zeros", "cv2.resize", "range", "mkdir", "cv2.imwrite", "to_3D_np", "to_3D_np", "np.uint8", "to_np", "to_np", "cv2.line", "str", "cv2.line"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "visualize_adj_region_all", "(", "self", ",", "mask", ",", "line_pts", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "        ", "b", ",", "_", ",", "h", ",", "w", "=", "mask", ".", "shape", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "            ", "disp_mask", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "3", ")", ")", "\n", "temp_mask", "=", "to_3D_np", "(", "to_np", "(", "mask", "[", "i", ",", "0", ",", ":", ",", ":", "]", ")", ")", "*", "self", ".", "color_list", "[", ":", ",", "i", ":", "i", "+", "1", ",", ":", "]", "\n", "disp_mask", "+=", "temp_mask", "\n", "temp_mask", "=", "to_3D_np", "(", "to_np", "(", "mask", "[", "i", ",", "1", ",", ":", ",", ":", "]", ")", ")", "*", "self", ".", "color_list", "[", ":", ",", "i", ":", "i", "+", "1", ",", ":", "]", "\n", "disp_mask", "+=", "temp_mask", "\n", "\n", "disp_mask", "=", "cv2", ".", "resize", "(", "np", ".", "uint8", "(", "disp_mask", ")", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n", "\n", "for", "j", "in", "range", "(", "line_pts", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "pt_1", "=", "(", "line_pts", "[", "j", ",", "0", "]", ",", "line_pts", "[", "j", ",", "1", "]", ")", "\n", "pt_2", "=", "(", "line_pts", "[", "j", ",", "2", "]", ",", "line_pts", "[", "j", ",", "3", "]", ")", "\n", "\n", "if", "j", "==", "0", ":", "\n", "                    ", "disp_mask", "=", "cv2", ".", "line", "(", "disp_mask", ",", "pt_1", ",", "pt_2", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ")", "\n", "", "elif", "j", "==", "1", ":", "\n", "                    ", "disp_mask", "=", "cv2", ".", "line", "(", "disp_mask", ",", "pt_1", ",", "pt_2", ",", "(", "0", ",", "255", ",", "0", ")", ",", "2", ")", "\n", "", "", "mkdir", "(", "dir_name", ")", "\n", "cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", "+", "'_'", "+", "str", "(", "i", ")", ",", "disp_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Adjacent_Region.Colormap": [[516, 525], ["cv2.resize", "np.uint8", "cv2.applyColorMap", "cv2.resize"], "methods", ["None"], ["", "", "def", "Colormap", "(", "self", ",", "img", ",", "mask", ",", "alpha", "=", "0.5", ")", ":", "\n", "\n", "        ", "mask", "=", "cv2", ".", "resize", "(", "mask", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n", "mask", "=", "np", ".", "uint8", "(", "cv2", ".", "resize", "(", "mask", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "*", "255", ")", "\n", "mask", "=", "cv2", ".", "applyColorMap", "(", "mask", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "\n", "out", "=", "img", "*", "alpha", "+", "mask", "*", "(", "1", "-", "alpha", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Similarity_vector": [[526, 537], ["torch.grid_sample", "module_for_region_pooling.l2_normalization", "module_for_region_pooling.l2_normalization"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.l2_normalization", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.l2_normalization"], ["", "", "def", "Similarity_vector", "(", "x", ",", "grid", ")", ":", "\n", "# flip", "\n", "    ", "x_fold", "=", "F", ".", "grid_sample", "(", "x", ",", "grid", ",", "align_corners", "=", "True", ")", "\n", "\n", "# l2_normalization", "\n", "x", "=", "l2_normalization", "(", "x", ")", "\n", "x_fold", "=", "l2_normalization", "(", "x_fold", ")", "\n", "\n", "out", "=", "x", "*", "x_fold", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Similarity_map": [[539, 550], ["torch.grid_sample", "module_for_region_pooling.l2_normalization", "module_for_region_pooling.l2_normalization", "torch.sum", "torch.sum", "torch.sum"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.l2_normalization", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.l2_normalization"], ["", "def", "Similarity_map", "(", "x", ",", "grid", ")", ":", "\n", "# flip", "\n", "    ", "x_fold", "=", "F", ".", "grid_sample", "(", "x", ",", "grid", ",", "align_corners", "=", "True", ")", "\n", "\n", "# l2_normalization", "\n", "x", "=", "l2_normalization", "(", "x", ")", "\n", "x_fold", "=", "l2_normalization", "(", "x_fold", ")", "\n", "\n", "s_map", "=", "torch", ".", "sum", "(", "x", "*", "x_fold", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "s_map", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.l2_normalization": [[551, 555], ["torch.norm", "torch.norm", "torch.norm"], "function", ["None"], ["", "def", "l2_normalization", "(", "x", ")", ":", "\n", "    ", "ep", "=", "1e-5", "\n", "out", "=", "x", "/", "(", "torch", ".", "norm", "(", "x", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "ep", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.point_flip": [[210, 223], ["pts[].view"], "function", ["None"], ["for", "i", "in", "range", "(", "line_pts", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pt_1", "=", "(", "line_pts", "[", "i", ",", "0", "]", ",", "line_pts", "[", "i", ",", "1", "]", ")", "\n", "pt_2", "=", "(", "line_pts", "[", "i", ",", "2", "]", ",", "line_pts", "[", "i", ",", "3", "]", ")", "\n", "\n", "disp_mask", "=", "cv2", ".", "line", "(", "disp_mask", ",", "pt_1", ",", "pt_2", ",", "(", "255", ",", "255", ",", "255", ")", ",", "2", ")", "\n", "\n", "", "mkdir", "(", "dir_name", ")", "\n", "cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", ",", "disp_mask", ")", "\n", "\n", "\n", "", "", "class", "Inter_Region", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Inter_Region", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# cfg", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.calculate_edge_score": [[25, 31], ["torch.sum", "torch.sum"], "function", ["None"], ["nms_check_all", "=", "torch", ".", "zeros", "(", "(", "num", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "\n", "        ", "ref_idx", "=", "sorted_idx", "[", "i", "]", "\n", "\n", "if", "visit", "[", "ref_idx", "]", "==", "1", "or", "nms_check_all", "[", "ref_idx", "]", "==", "1", ":", "\n", "            ", "continue", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.candidate_line_filtering": [[32, 62], ["numpy.sqrt", "numpy.sum", "numpy.square", "abs", "abs", "abs", "abs"], "function", ["None"], ["\n", "", "visit", "[", "ref_idx", "]", "=", "1", "\n", "max_miou", "=", "torch", ".", "zeros", "(", "(", "num", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "\n", "iou_1", ",", "check1", "=", "measure_IoU", "(", "mask", "[", "ref_idx", ",", "0", "]", ".", "unsqueeze", "(", "0", ")", ",", "mask", "[", ":", ",", "0", "]", ")", "\n", "iou_2", ",", "check2", "=", "measure_IoU", "(", "mask", "[", "ref_idx", ",", "1", "]", ".", "unsqueeze", "(", "0", ")", ",", "mask", "[", ":", ",", "1", "]", ")", "\n", "\n", "check", "=", "(", "check1", "*", "check2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_check", "=", "(", "max_miou", "<", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_miou", "[", "max_check", "==", "1", "]", "=", "(", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", "[", "max_check", "==", "1", "]", "\n", "\n", "iou_1", ",", "check1", "=", "measure_IoU", "(", "mask", "[", "ref_idx", ",", "1", "]", ".", "unsqueeze", "(", "0", ")", ",", "mask", "[", ":", ",", "0", "]", ")", "\n", "iou_2", ",", "check2", "=", "measure_IoU", "(", "mask", "[", "ref_idx", ",", "0", "]", ".", "unsqueeze", "(", "0", ")", ",", "mask", "[", ":", ",", "1", "]", ")", "\n", "\n", "check", "=", "(", "check1", "*", "check2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_check", "=", "(", "max_miou", "<", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_miou", "[", "max_check", "==", "1", "]", "=", "(", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", "[", "max_check", "==", "1", "]", "\n", "\n", "nms_check", "=", "(", "max_miou", ">", "thresd", ")", "*", "(", "max_miou", "<", "1", ")", "*", "(", "visit", "==", "0", ")", "\n", "nms_check_all", "[", "nms_check", "==", "1", "]", "=", "1", "\n", "\n", "", "return", "nms_check_all", "\n", "\n", "", "def", "divided_region_mask", "(", "line_pts", ",", "size", ")", ":", "\n", "\n", "    ", "line_num", ",", "_", "=", "line_pts", ".", "shape", "\n", "width", ",", "height", "=", "int", "(", "size", "[", "0", "]", ")", ",", "int", "(", "size", "[", "1", "]", ")", "\n", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "0", ",", "width", "-", "1", ",", "width", ")", ",", "np", ".", "linspace", "(", "0", ",", "height", "-", "1", ",", "height", ")", ")", "# after x before", "\n", "X", "=", "torch", ".", "tensor", "(", "X", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "Y", "=", "torch", ".", "tensor", "(", "Y", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.line_equation": [[67, 77], ["torch.zeros().cuda", "torch.zeros"], "function", ["None"], ["mask2", "=", "torch", ".", "zeros", "(", "(", "line_num", ",", "height", ",", "width", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "\n", "mask1", "[", "check", "==", "1", ",", ":", ",", ":", "]", "=", "(", "X", "<", "line_pts", "[", ":", ",", "0", "]", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", ")", ".", "type", "(", "torch", ".", "float", ")", "[", "check", "==", "1", ",", ":", ",", ":", "]", "\n", "mask2", "[", "check", "==", "1", ",", ":", ",", ":", "]", "=", "(", "X", ">=", "line_pts", "[", ":", ",", "0", "]", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", ")", ".", "type", "(", "torch", ".", "float", ")", "[", "check", "==", "1", ",", ":", ",", ":", "]", "\n", "\n", "a", "=", "(", "line_pts", "[", ":", ",", "1", "]", "-", "line_pts", "[", ":", ",", "3", "]", ")", "/", "(", "line_pts", "[", ":", ",", "0", "]", "-", "line_pts", "[", ":", ",", "2", "]", ")", "\n", "b", "=", "-", "1", "*", "a", "*", "line_pts", "[", ":", ",", "0", "]", "+", "line_pts", "[", ":", ",", "1", "]", "\n", "\n", "a", "=", "a", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", "\n", "b", "=", "b", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.transform_theta_to_angle": [[78, 82], ["line_eq[].clone", "torch.atan"], "function", ["None"], ["mask1", "[", "check", "==", "0", ",", ":", ",", ":", "]", "=", "(", "Y", "<", "a", "*", "X", "+", "b", ")", ".", "type", "(", "torch", ".", "float32", ")", "[", "check", "==", "0", ",", ":", ",", ":", "]", "\n", "mask2", "[", "check", "==", "0", ",", ":", ",", ":", "]", "=", "(", "Y", ">=", "a", "*", "X", "+", "b", ")", ".", "type", "(", "torch", ".", "float32", ")", "[", "check", "==", "0", ",", ":", ",", ":", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "mask1", ".", "unsqueeze", "(", "1", ")", ",", "mask2", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.calculate_distance_from_center": [[84, 97], ["line_eq[].view", "line_eq[].view", "line_eq[].view", "torch.sqrt"], "function", ["None"], ["", "def", "find_endpoints", "(", "data", ",", "size", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "data", "[", "0", "]", ",", "data", "[", "1", "]", ",", "data", "[", "2", "]", ",", "data", "[", "3", "]", "\n", "\n", "pts", "=", "[", "]", "\n", "if", "x1", "-", "x2", "!=", "0", ":", "\n", "        ", "a", "=", "(", "y1", "-", "y2", ")", "/", "(", "x1", "-", "x2", ")", "\n", "b", "=", "-", "1", "\n", "c", "=", "-", "1", "*", "a", "*", "x1", "+", "y1", "\n", "# x = 0", "\n", "cx", "=", "0", "\n", "cy", "=", "a", "*", "0", "+", "c", "\n", "if", "cy", ">=", "0", "and", "cy", "<=", "size", "[", "1", "]", ":", "\n", "            ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.__init__": [[10, 34], ["np.float32", "np.array"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "dict_DB", ")", ":", "\n", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "dataloader", "=", "dict_DB", "[", "'dataloader'", "]", "\n", "self", ".", "visualize", "=", "dict_DB", "[", "'visualize'", "]", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "self", ".", "size", "=", "np", ".", "float32", "(", "[", "cfg", ".", "height", ",", "cfg", ".", "width", "]", ")", "\n", "\n", "# set outlier", "\n", "self", ".", "thresd1", "=", "200", "# threshold of length", "\n", "self", ".", "thresd2", "=", "20", "# threshold of distance from image boundary", "\n", "self", ".", "da", "=", "1", "\n", "self", ".", "dd", "=", "1", "\n", "\n", "self", ".", "scale_factor", "=", "self", ".", "cfg", ".", "scale_factor", "\n", "\n", "self", ".", "sampling_mode", "=", "self", ".", "cfg", ".", "sampling_mode", "\n", "self", ".", "min_angle_error", "=", "self", ".", "cfg", ".", "min_angle_error", "\n", "self", ".", "min_dist_error", "=", "self", ".", "cfg", ".", "min_dist_error", "\n", "\n", "self", ".", "center", "=", "np", ".", "array", "(", "[", "(", "self", ".", "width", "-", "1", ")", "/", "2", ",", "(", "self", ".", "height", "-", "1", ")", "/", "2", "]", ")", "\n", "self", ".", "max_dist", "=", "self", ".", "width", "//", "2", "-", "self", ".", "thresd2", "\n", "self", ".", "result", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.convert_to_line": [[36, 49], ["np.tan", "find_endpoints_from_line_eq", "np.sqrt"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.find_endpoints_from_line_eq"], ["", "def", "convert_to_line", "(", "self", ",", "angle", ",", "dist", ")", ":", "\n", "        ", "a", "=", "np", ".", "tan", "(", "angle", "/", "180", "*", "math", ".", "pi", ")", "\n", "\n", "if", "angle", "!=", "-", "90", ":", "\n", "            ", "b", "=", "-", "1", "\n", "c", "=", "dist", "*", "np", ".", "sqrt", "(", "a", "**", "2", "+", "b", "**", "2", ")", "-", "(", "a", "*", "self", ".", "center", "[", "0", "]", "+", "b", "*", "self", ".", "center", "[", "1", "]", ")", "\n", "\n", "", "else", ":", "\n", "            ", "a", "=", "1", "\n", "b", "=", "0", "\n", "c", "=", "self", ".", "center", "[", "0", "]", "+", "dist", "\n", "", "line_pts", "=", "find_endpoints_from_line_eq", "(", "line_eq", "=", "[", "a", ",", "b", ",", "c", "]", ",", "size", "=", "[", "self", ".", "width", "-", "1", ",", "self", ".", "height", "-", "1", "]", ")", "\n", "return", "line_pts", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.get_line_parameters": [[50, 55], ["line_equation", "transform_theta_to_angle", "calculate_distance_from_center"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.line_equation", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.transform_theta_to_angle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.modules.calculate_distance_from_center"], ["", "def", "get_line_parameters", "(", "self", ",", "candidates", ")", ":", "\n", "        ", "line_eq", ",", "check", "=", "line_equation", "(", "candidates", ")", "\n", "angle", "=", "transform_theta_to_angle", "(", "line_eq", ")", "\n", "dist", "=", "calculate_distance_from_center", "(", "line_eq", ",", "check", ",", "candidates", ",", "self", ".", "center", ")", "[", ":", ",", "0", ",", "0", "]", "\n", "return", "angle", ",", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.candidate_lines": [[56, 124], ["sorted", "len", "range", "np.concatenate", "np.float32", "print", "np.float32", "np.float32", "generate_line_mask", "np.ones", "len", "len", "range", "np.concatenate", "np.zeros", "line_generator.generate_line.visualize.draw_lines_cv", "line_generator.generate_line.visualize.display_saveimg", "to_tensor", "to_tensor", "to_tensor", "range", "range", "range", "len", "line_generator.generate_line.convert_to_line", "candidate_line_filtering", "np.flip", "np.flip", "np.int32", "to_tensor", "to_tensor", "int", "len", "len", "len", "temp[].append", "temp[].append", "temp[].append", "np.expand_dims"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.module_for_region_pooling.Separated_Region.generate_line_mask", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.convert_to_line", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.filtering.candidate_line_filtering", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor"], ["", "def", "candidate_lines", "(", "self", ",", "mode", "=", "'pri'", ")", ":", "\n", "\n", "        ", "temp", "=", "{", "'endpts'", ":", "[", "]", ",", "'angle'", ":", "[", "]", ",", "'dist'", ":", "[", "]", ",", "'idx'", ":", "0", "}", "\n", "\n", "if", "mode", "==", "'pri'", ":", "\n", "            ", "angle_step", "=", "3", "\n", "dist_step", "=", "5", "\n", "", "else", ":", "\n", "            ", "angle_step", "=", "5", "\n", "dist_step", "=", "10", "\n", "\n", "", "angle_list", "=", "[", "i", "for", "i", "in", "range", "(", "-", "90", ",", "90", ",", "angle_step", ")", "]", "\n", "dist_list1", "=", "[", "i", "for", "i", "in", "range", "(", "0", ",", "int", "(", "self", ".", "max_dist", ")", ",", "dist_step", ")", "]", "\n", "dist_list2", "=", "[", "-", "1", "*", "dist_list1", "[", "i", "]", "for", "i", "in", "range", "(", "0", ",", "len", "(", "dist_list1", ")", ")", "]", "\n", "dist_list", "=", "sorted", "(", "dist_list1", "+", "dist_list2", "[", "1", ":", "]", ")", "\n", "\n", "hough_space", "=", "{", "'idx'", ":", "[", "]", ",", "'angle_list'", ":", "[", "]", ",", "'dist_list'", ":", "[", "]", ",", "'angle_step'", ":", "[", "]", ",", "'dist_step'", ":", "[", "]", "}", "\n", "hough_space", "[", "'idx'", "]", "=", "-", "1", "*", "np", ".", "ones", "(", "(", "len", "(", "angle_list", ")", ",", "len", "(", "dist_list", ")", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "hough_space", "[", "'angle_list'", "]", "=", "angle_list", "\n", "hough_space", "[", "'dist_list'", "]", "=", "dist_list", "\n", "hough_space", "[", "'angle_step'", "]", "=", "angle_step", "\n", "hough_space", "[", "'dist_step'", "]", "=", "dist_step", "\n", "hough_space", "[", "'height'", "]", "=", "len", "(", "angle_list", ")", "*", "3", "\n", "hough_space", "[", "'width'", "]", "=", "len", "(", "dist_list", ")", "\n", "\n", "k", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "angle_list", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "dist_list", ")", ")", ":", "\n", "                ", "endpts", "=", "self", ".", "convert_to_line", "(", "angle_list", "[", "i", "]", ",", "dist_list", "[", "j", "]", ")", "\n", "check", "=", "candidate_line_filtering", "(", "pts", "=", "endpts", ",", "\n", "size", "=", "(", "self", ".", "height", ",", "self", ".", "width", ")", ",", "\n", "thresd_boundary", "=", "self", ".", "thresd2", ",", "\n", "thresd_length", "=", "self", ".", "thresd1", ")", "\n", "\n", "if", "check", "==", "0", ":", "\n", "                    ", "temp", "[", "'endpts'", "]", ".", "append", "(", "np", ".", "expand_dims", "(", "endpts", ",", "axis", "=", "0", ")", ")", "\n", "temp", "[", "'angle'", "]", ".", "append", "(", "angle_list", "[", "i", "]", ")", "\n", "temp", "[", "'dist'", "]", ".", "append", "(", "dist_list", "[", "j", "]", ")", "\n", "\n", "hough_space", "[", "'idx'", "]", "[", "i", ",", "j", "]", "=", "k", "\n", "k", "+=", "1", "\n", "\n", "", "", "", "hough_space", "[", "'idx'", "]", "=", "np", ".", "concatenate", "(", "(", "np", ".", "flip", "(", "hough_space", "[", "'idx'", "]", ",", "1", ")", ",", "\n", "hough_space", "[", "'idx'", "]", ",", "\n", "np", ".", "flip", "(", "hough_space", "[", "'idx'", "]", ",", "1", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "candidates", "=", "np", ".", "float32", "(", "np", ".", "concatenate", "(", "temp", "[", "'endpts'", "]", ")", ")", "\n", "print", "(", "'The number of candidate lines %d'", "%", "candidates", ".", "shape", "[", "0", "]", ")", "\n", "angle", "=", "np", ".", "float32", "(", "temp", "[", "'angle'", "]", ")", "\n", "dist", "=", "np", ".", "float32", "(", "temp", "[", "'dist'", "]", ")", "\n", "\n", "line_mask", "=", "generate_line_mask", "(", "line_pts", "=", "candidates", "/", "self", ".", "scale_factor", ",", "\n", "size", "=", "np", ".", "int32", "(", "self", ".", "size", "/", "self", ".", "scale_factor", ")", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "display", "==", "True", ":", "\n", "            ", "self", ".", "visualize", ".", "show", "[", "'img_name'", "]", "=", "'candidates.jpg'", "\n", "self", ".", "visualize", ".", "show", "[", "'zero'", "]", "=", "np", ".", "zeros", "(", "(", "self", ".", "height", ",", "self", ".", "width", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "self", ".", "visualize", ".", "draw_lines_cv", "(", "data", "=", "candidates", ",", "name", "=", "'candidates'", ",", "ref_name", "=", "'zero'", ",", "s", "=", "1", ")", "\n", "self", ".", "visualize", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", ",", "list", "=", "[", "'candidates'", "]", ")", "\n", "", "if", "mode", "==", "'mul'", ":", "\n", "            ", "self", ".", "mul_candidates", "=", "to_tensor", "(", "candidates", ")", "\n", "self", ".", "mul_line_mask", "=", "to_tensor", "(", "line_mask", ")", "\n", "self", ".", "mul_angle", ",", "self", ".", "mul_dist", "=", "to_tensor", "(", "angle", ")", ",", "to_tensor", "(", "dist", ")", "\n", "\n", "self", ".", "mul_hough_space", "=", "hough_space", "\n", "\n", "h", ",", "w", "=", "hough_space", "[", "'idx'", "]", ".", "shape", "\n", "self", ".", "mul_hough_space_idx", "=", "to_tensor", "(", "hough_space", "[", "'idx'", "]", "[", "h", "//", "3", ":", "h", "//", "3", "*", "2", ",", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.get_approximated_mul_lines": [[125, 274], ["line_generator.generate_line.get_line_parameters", "range", "to_tensor", "to_tensor", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.tan", "torch.tan", "torch.tan", "torch.tan", "np.ones", "range", "np.float32", "np.float32", "[].append", "[].append", "[].append", "[].cuda", "torch.tan", "torch.tan", "torch.tan", "torch.tan", "line_generator.generate_line.compute_inner_product", "torch.min", "torch.min", "torch.min", "torch.min", "to_np", "to_np", "[].append", "[].append", "[].append", "[].append", "[].append", "[].append", "np.concatenate.append", "np.concatenate.append", "temp_mul_angle_offset.append", "temp_mul_dist_offset.append", "temp_mul_idx.append", "print", "np.concatenate", "np.concatenate", "line_generator.generate_line.visualize.draw_lines_cv", "line_generator.generate_line.visualize.draw_lines_cv", "line_generator.generate_line.visualize.draw_lines_cv", "line_generator.generate_line.visualize.draw_lines_cv", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "to_np().reshape", "to_np", "to_np", "[].cuda", "[].cuda", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "line_generator.generate_line.adjacent_grid_idx", "line_generator.generate_line.adjacent_grid_offset", "to_np", "to_np", "to_np", "np.round", "to_np", "to_np", "to_np().reshape", "to_np().reshape", "np.round", "to_np", "to_np", "np.max", "np.max", "np.max", "np.max", "np.min", "np.min", "np.min", "np.min", "np.round", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "print", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "to_np", "to_np", "to_np", "np.round", "to_np", "to_np", "to_np", "np.round", "to_np", "to_np", "range", "np.float32", "line_generator.generate_line.visualize.draw_lines_cv", "to_np", "np.round", "to_np", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "to_np", "to_np", "to_np", "to_np", "len", "reg_angle.copy", "[].copy", "range", "to_np", "np.round", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "line_generator.generate_line.convert_to_line", "to_np", "np.round", "to_np", "np.float32.append", "to_np", "to_np"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.get_line_parameters", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.compute_inner_product", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.adjacent_grid_idx", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.adjacent_grid_offset", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.convert_to_line", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "", "def", "get_approximated_mul_lines", "(", "self", ")", ":", "\n", "\n", "        ", "result", "=", "{", "'mul'", ":", "{", "'pts'", ":", "[", "]", ",", "'angle_error'", ":", "[", "]", ",", "'dist_error'", ":", "[", "]", ",", "'region_idx'", ":", "[", "]", ",", "'diff_idx'", ":", "[", "]", ",", "\n", "'angle_idx'", ":", "[", "]", ",", "'dist_idx'", ":", "[", "]", ",", "'angle'", ":", "[", "]", ",", "'dist'", ":", "[", "]", ",", "\n", "'angle_offset'", ":", "[", "]", ",", "'dist_offset'", ":", "[", "]", "}", ",", "\n", "'exist'", ":", "[", "]", "}", "\n", "temp_mul", "=", "[", "]", "\n", "temp_mul_center", "=", "[", "]", "\n", "temp_mul_angle_offset", "=", "[", "]", "\n", "temp_mul_dist_offset", "=", "[", "]", "\n", "temp_mul_idx", "=", "[", "]", "\n", "\n", "gt_angle", ",", "gt_dist", "=", "self", ".", "get_line_parameters", "(", "self", ".", "mul_gt", ")", "\n", "for", "i", "in", "range", "(", "gt_angle", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "np", ".", "round", "(", "to_np", "(", "gt_angle", "[", "i", "]", ")", ",", "-", "1", ")", "==", "90", "and", "(", "self", ".", "mul_gt", "[", "i", "]", "[", "0", "]", "+", "self", ".", "mul_gt", "[", "i", "]", "[", "2", "]", ")", "/", "2", "<", "self", ".", "center", "[", "0", "]", "and", "gt_dist", "[", "i", "]", "<", "0", ":", "\n", "                ", "gt_dist", "[", "i", "]", "=", "gt_dist", "[", "i", "]", "*", "-", "1", "\n", "", "elif", "np", ".", "round", "(", "to_np", "(", "gt_angle", "[", "i", "]", ")", ",", "-", "1", ")", "==", "90", "and", "(", "self", ".", "mul_gt", "[", "i", "]", "[", "0", "]", "+", "self", ".", "mul_gt", "[", "i", "]", "[", "2", "]", ")", "/", "2", ">", "self", ".", "center", "[", "0", "]", "and", "gt_dist", "[", "i", "]", ">", "0", ":", "\n", "                ", "gt_dist", "[", "i", "]", "=", "gt_dist", "[", "i", "]", "*", "-", "1", "\n", "", "elif", "np", ".", "round", "(", "to_np", "(", "gt_angle", "[", "i", "]", ")", ",", "-", "1", ")", "==", "-", "90", "and", "(", "self", ".", "mul_gt", "[", "i", "]", "[", "0", "]", "+", "self", ".", "mul_gt", "[", "i", "]", "[", "2", "]", ")", "/", "2", "<", "self", ".", "center", "[", "0", "]", "and", "gt_dist", "[", "i", "]", ">", "0", ":", "\n", "                ", "gt_dist", "[", "i", "]", "=", "gt_dist", "[", "i", "]", "*", "-", "1", "\n", "", "elif", "np", ".", "round", "(", "to_np", "(", "gt_angle", "[", "i", "]", ")", ",", "-", "1", ")", "==", "-", "90", "and", "(", "self", ".", "mul_gt", "[", "i", "]", "[", "0", "]", "+", "self", ".", "mul_gt", "[", "i", "]", "[", "2", "]", ")", "/", "2", ">", "self", ".", "center", "[", "0", "]", "and", "gt_dist", "[", "i", "]", "<", "0", ":", "\n", "                ", "gt_dist", "[", "i", "]", "=", "gt_dist", "[", "i", "]", "*", "-", "1", "\n", "\n", "", "", "angle_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "self", ".", "mul_hough_space", "[", "'angle_list'", "]", ")", ")", "\n", "dist_list", "=", "to_tensor", "(", "np", ".", "float32", "(", "self", ".", "mul_hough_space", "[", "'dist_list'", "]", ")", ")", "\n", "\n", "\n", "self", ".", "angle_vx", "=", "torch", ".", "ones", "(", "angle_list", ".", "shape", "[", "0", "]", ")", ".", "cuda", "(", ")", "\n", "self", ".", "angle_vy", "=", "torch", ".", "tan", "(", "angle_list", "/", "180", "*", "math", ".", "pi", ")", "\n", "self", ".", "angle_vx", "[", "0", "]", "=", "0", "\n", "self", ".", "angle_vy", "[", "0", "]", "=", "1", "\n", "\n", "check", "=", "np", ".", "ones", "(", "self", ".", "mul_gt", ".", "shape", "[", "0", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "mul_gt", ".", "shape", "[", "0", "]", ")", ":", "\n", "\n", "            ", "result", "[", "'mul'", "]", "[", "'pts'", "]", ".", "append", "(", "to_np", "(", "self", ".", "mul_gt", "[", "i", "]", ")", ".", "reshape", "(", "1", ",", "4", ")", ")", "\n", "result", "[", "'mul'", "]", "[", "'angle'", "]", ".", "append", "(", "to_np", "(", "gt_angle", "[", "i", "]", ")", ")", "\n", "result", "[", "'mul'", "]", "[", "'dist'", "]", ".", "append", "(", "to_np", "(", "gt_dist", "[", "i", "]", ")", ")", "\n", "\n", "vx", "=", "torch", ".", "FloatTensor", "(", "[", "1", "]", ")", "[", "0", "]", ".", "cuda", "(", ")", "\n", "vy", "=", "torch", ".", "tan", "(", "gt_angle", "[", "i", "]", "/", "180", "*", "math", ".", "pi", ")", "\n", "if", "gt_angle", "[", "i", "]", "==", "-", "90", ":", "\n", "                ", "vx", "=", "torch", ".", "FloatTensor", "(", "[", "0", "]", ")", "[", "0", "]", ".", "cuda", "(", ")", "\n", "vy", "=", "torch", ".", "FloatTensor", "(", "[", "1", "]", ")", "[", "0", "]", ".", "cuda", "(", ")", "\n", "\n", "", "angle1", "=", "self", ".", "compute_inner_product", "(", "self", ".", "angle_vx", ",", "self", ".", "angle_vy", ",", "vx", ",", "vy", ")", "\n", "angle2", "=", "180", "-", "angle1", "\n", "angle_err", "=", "torch", ".", "min", "(", "angle1", ",", "angle2", ")", "\n", "\n", "if", "torch", ".", "argmin", "(", "angle_err", ")", "==", "0", ":", "\n", "                ", "self", ".", "check_vertical", "=", "1", "\n", "", "else", ":", "\n", "                ", "self", ".", "check_vertical", "=", "0", "\n", "\n", "", "if", "torch", ".", "argmin", "(", "angle_err", ")", "==", "0", ":", "\n", "\n", "                ", "if", "gt_angle", "[", "i", "]", ">", "0", "and", "gt_dist", "[", "i", "]", ">", "0", ":", "\n", "                    ", "dist_err", "=", "torch", ".", "abs", "(", "dist_list", "-", "gt_dist", "[", "i", "]", "*", "-", "1", ")", "\n", "", "elif", "gt_angle", "[", "i", "]", ">", "0", "and", "gt_dist", "[", "i", "]", "<", "0", ":", "\n", "                    ", "dist_err", "=", "torch", ".", "abs", "(", "dist_list", "-", "gt_dist", "[", "i", "]", "*", "-", "1", ")", "\n", "", "else", ":", "\n", "                    ", "dist_err", "=", "torch", ".", "abs", "(", "dist_list", "-", "gt_dist", "[", "i", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "dist_err", "=", "torch", ".", "abs", "(", "dist_list", "-", "gt_dist", "[", "i", "]", ")", "\n", "", "if", "dist_err", "[", "torch", ".", "argmin", "(", "dist_err", ")", "]", ">", "self", ".", "mul_hough_space", "[", "'dist_step'", "]", ":", "\n", "\n", "                ", "check", "[", "i", "]", "=", "0", "\n", "continue", "\n", "\n", "", "angle_idx", "=", "to_np", "(", "torch", ".", "argmin", "(", "angle_err", ")", "+", "self", ".", "mul_hough_space", "[", "'height'", "]", "//", "3", ")", "\n", "dist_dix", "=", "to_np", "(", "torch", ".", "argmin", "(", "dist_err", ")", ")", "\n", "\n", "# sampling", "\n", "\n", "if", "self", ".", "sampling_mode", "==", "'grid'", ":", "\n", "# compute edge score", "\n", "                ", "center_idx", "=", "self", ".", "mul_hough_space", "[", "'idx'", "]", "[", "angle_idx", ",", "dist_dix", "]", "\n", "\n", "idx", ",", "diff_idx", "=", "self", ".", "adjacent_grid_idx", "(", "angle_idx", ",", "dist_dix", ",", "\n", "self", ".", "da", ",", "self", ".", "dd", ",", "\n", "self", ".", "mul_hough_space", "[", "'idx'", "]", ")", "\n", "\n", "offset_a", ",", "offset_d", "=", "self", ".", "adjacent_grid_offset", "(", "idx", ",", "gt_angle", ",", "gt_dist", ",", "angle_list", ",", "dist_list", ",", "i", ")", "\n", "\n", "if", "torch", ".", "sum", "(", "torch", ".", "isnan", "(", "offset_a", ")", ")", "==", "True", ":", "\n", "                    ", "print", "(", "'nan error'", ")", "\n", "", "", "result", "[", "'mul'", "]", "[", "'angle_idx'", "]", ".", "append", "(", "to_np", "(", "torch", ".", "argmin", "(", "angle_err", ")", "+", "self", ".", "mul_hough_space", "[", "'height'", "]", "//", "3", ")", ")", "\n", "result", "[", "'mul'", "]", "[", "'dist_idx'", "]", ".", "append", "(", "to_np", "(", "torch", ".", "argmin", "(", "dist_err", ")", ")", ")", "\n", "\n", "result", "[", "'mul'", "]", "[", "'diff_idx'", "]", ".", "append", "(", "to_np", "(", "diff_idx", ")", ")", "\n", "result", "[", "'mul'", "]", "[", "'angle_offset'", "]", ".", "append", "(", "np", ".", "round", "(", "to_np", "(", "offset_a", ")", ",", "4", ")", ")", "\n", "result", "[", "'mul'", "]", "[", "'dist_offset'", "]", ".", "append", "(", "to_np", "(", "offset_d", ")", ")", "\n", "result", "[", "'mul'", "]", "[", "'region_idx'", "]", ".", "append", "(", "to_np", "(", "idx", ")", ")", "\n", "\n", "temp_mul", ".", "append", "(", "to_np", "(", "self", ".", "mul_candidates", "[", "idx", "]", ")", ".", "reshape", "(", "idx", ".", "shape", "[", "0", "]", ",", "4", ")", ")", "\n", "temp_mul_center", ".", "append", "(", "to_np", "(", "self", ".", "mul_candidates", "[", "center_idx", "]", ")", ".", "reshape", "(", "1", ",", "4", ")", ")", "\n", "temp_mul_angle_offset", ".", "append", "(", "np", ".", "round", "(", "to_np", "(", "offset_a", ")", ",", "4", ")", ")", "\n", "temp_mul_dist_offset", ".", "append", "(", "to_np", "(", "offset_d", ")", ")", "\n", "temp_mul_idx", ".", "append", "(", "to_np", "(", "idx", ")", ")", "\n", "\n", "if", "np", ".", "max", "(", "to_np", "(", "offset_a", ")", ")", ">", "self", ".", "max_offset_a", ":", "\n", "                ", "self", ".", "max_offset_a", "=", "np", ".", "max", "(", "np", ".", "round", "(", "to_np", "(", "offset_a", ")", ",", "4", ")", ")", "\n", "", "if", "np", ".", "max", "(", "to_np", "(", "offset_d", ")", ")", ">", "self", ".", "max_offset_d", ":", "\n", "                ", "self", ".", "max_offset_d", "=", "np", ".", "max", "(", "to_np", "(", "offset_d", ")", ")", "\n", "", "if", "np", ".", "min", "(", "to_np", "(", "offset_a", ")", ")", "<", "self", ".", "min_offset_a", ":", "\n", "                ", "self", ".", "min_offset_a", "=", "np", ".", "min", "(", "np", ".", "round", "(", "to_np", "(", "offset_a", ")", ",", "4", ")", ")", "\n", "", "if", "np", ".", "min", "(", "to_np", "(", "offset_d", ")", ")", "<", "self", ".", "min_offset_d", ":", "\n", "                ", "self", ".", "min_offset_d", "=", "np", ".", "min", "(", "to_np", "(", "offset_d", ")", ")", "\n", "\n", "", "", "result", "[", "'exist'", "]", "=", "check", "\n", "if", "temp_mul", "==", "[", "]", ":", "\n", "            ", "print", "(", "'no multiple line'", ")", "\n", "return", "None", "\n", "\n", "", "else", ":", "\n", "            ", "temp_mul", "=", "np", ".", "concatenate", "(", "temp_mul", ")", "\n", "temp_mul_center", "=", "np", ".", "concatenate", "(", "temp_mul_center", ")", "\n", "\n", "\n", "", "if", "self", ".", "cfg", ".", "display", "==", "True", ":", "\n", "            ", "self", ".", "visualize", ".", "draw_lines_cv", "(", "data", "=", "temp_mul", ",", "name", "=", "'gtlines'", ")", "\n", "self", ".", "visualize", ".", "draw_lines_cv", "(", "data", "=", "temp_mul_center", ",", "name", "=", "'overlap_center'", ",", "ref_name", "=", "'overlap'", ")", "\n", "self", ".", "visualize", ".", "draw_lines_cv", "(", "data", "=", "temp_mul", ",", "name", "=", "'overlap'", ",", "ref_name", "=", "'overlap'", ")", "\n", "self", ".", "visualize", ".", "draw_lines_cv", "(", "data", "=", "temp_mul", ",", "name", "=", "'overlap'", ",", "ref_name", "=", "'overlap'", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "display_offset_validation", "==", "True", ":", "\n", "                ", "if", "temp_mul", "!=", "[", "]", ":", "\n", "                    ", "line_pts", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "temp_mul_idx", ")", ")", ":", "\n", "\n", "                        ", "reg_angle", "=", "to_np", "(", "self", ".", "mul_angle", ")", "[", "temp_mul_idx", "[", "i", "]", "]", "+", "temp_mul_angle_offset", "[", "i", "]", "\n", "reg_angle2", "=", "reg_angle", ".", "copy", "(", ")", "\n", "reg_angle2", "[", "reg_angle", "<", "-", "90", "]", "+=", "180", "\n", "reg_angle2", "[", "reg_angle", ">", "90", "]", "-=", "180", "\n", "dist_list", "=", "to_np", "(", "self", ".", "mul_dist", ")", "[", "temp_mul_idx", "[", "i", "]", "]", ".", "copy", "(", ")", "\n", "dist_list", "[", "reg_angle", "<", "-", "90", "]", "*=", "-", "1", "\n", "dist_list", "[", "reg_angle", ">", "90", "]", "*=", "-", "1", "\n", "temp_mul_dist_offset", "[", "i", "]", "[", "reg_angle", "<", "-", "90", "]", "=", "0", "\n", "temp_mul_dist_offset", "[", "i", "]", "[", "reg_angle", ">", "90", "]", "=", "0", "\n", "reg_dist2", "=", "dist_list", "+", "temp_mul_dist_offset", "[", "i", "]", "\n", "\n", "for", "j", "in", "range", "(", "reg_angle", ".", "shape", "[", "0", "]", ")", ":", "\n", "                            ", "out_pts", "=", "self", ".", "convert_to_line", "(", "reg_angle2", "[", "j", "]", ",", "reg_dist2", "[", "j", "]", ")", "\n", "if", "out_pts", ".", "shape", "[", "0", "]", "==", "4", ":", "\n", "                                ", "line_pts", ".", "append", "(", "out_pts", ")", "\n", "", "", "", "line_pts", "=", "np", ".", "float32", "(", "line_pts", ")", "\n", "self", ".", "visualize", ".", "draw_lines_cv", "(", "data", "=", "line_pts", ",", "name", "=", "'offset'", ")", "\n", "", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.adjacent_grid_offset": [[275, 333], ["torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "range", "[].cuda", "torch.tan", "torch.tan", "torch.tan", "torch.tan", "line_generator.generate_line.compute_inner_product", "torch.min", "torch.min", "torch.min", "torch.min", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "[].cuda", "[].cuda", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "[].cuda", "print", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.compute_inner_product"], ["", "def", "adjacent_grid_offset", "(", "self", ",", "region_idx", ",", "gt_angle", ",", "gt_dist", ",", "angle_list", ",", "dist_list", ",", "data_idx", ")", ":", "\n", "        ", "temp_angle_err", "=", "torch", ".", "FloatTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "temp_dist_err", "=", "torch", ".", "FloatTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "region_idx", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "idx", "=", "(", "self", ".", "mul_hough_space_idx", "==", "region_idx", "[", "i", "]", ")", ".", "nonzero", "(", ")", "[", "0", "]", "\n", "\n", "x1", "=", "self", ".", "angle_vx", "[", "idx", "[", "0", "]", "]", "\n", "x2", "=", "torch", ".", "FloatTensor", "(", "[", "1", "]", ")", "[", "0", "]", ".", "cuda", "(", ")", "\n", "y1", "=", "self", ".", "angle_vy", "[", "idx", "[", "0", "]", "]", "\n", "y2", "=", "torch", ".", "tan", "(", "gt_angle", "[", "data_idx", "]", "/", "180", "*", "math", ".", "pi", ")", "\n", "\n", "if", "gt_angle", "[", "data_idx", "]", "==", "-", "90", ":", "\n", "                ", "x2", "=", "torch", ".", "FloatTensor", "(", "[", "0", "]", ")", "[", "0", "]", ".", "cuda", "(", ")", "\n", "y2", "=", "torch", ".", "FloatTensor", "(", "[", "1", "]", ")", "[", "0", "]", ".", "cuda", "(", ")", "\n", "", "angle1", "=", "self", ".", "compute_inner_product", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", "\n", "if", "torch", ".", "isnan", "(", "angle1", ")", "==", "True", ":", "\n", "                ", "angle1", "=", "torch", ".", "FloatTensor", "(", "[", "0", "]", ")", "[", "0", "]", ".", "cuda", "(", ")", "\n", "", "angle2", "=", "180", "-", "angle1", "\n", "angle_err", "=", "torch", ".", "min", "(", "angle1", ",", "angle2", ")", "\n", "\n", "# angle error", "\n", "\n", "flag", "=", "0", "\n", "flag2", "=", "0", "\n", "if", "angle_list", "[", "idx", "[", "0", "]", "]", "<", "0", "and", "gt_angle", "[", "data_idx", "]", ">", "0", ":", "\n", "                ", "if", "torch", ".", "abs", "(", "angle_list", "[", "idx", "[", "0", "]", "]", "-", "gt_angle", "[", "data_idx", "]", ")", ">", "90", ":", "\n", "                    ", "flag", "=", "-", "1", "\n", "flag2", "=", "1", "\n", "", "else", ":", "\n", "                    ", "flag", "=", "1", "\n", "", "", "elif", "angle_list", "[", "idx", "[", "0", "]", "]", "<=", "0", "and", "gt_angle", "[", "data_idx", "]", "<=", "0", ":", "\n", "                ", "if", "angle_list", "[", "idx", "[", "0", "]", "]", "-", "gt_angle", "[", "data_idx", "]", ">", "0", ":", "\n", "                    ", "flag", "=", "-", "1", "\n", "", "else", ":", "\n", "                    ", "flag", "=", "1", "\n", "", "", "elif", "angle_list", "[", "idx", "[", "0", "]", "]", ">=", "0", "and", "gt_angle", "[", "data_idx", "]", ">=", "0", ":", "\n", "                ", "if", "angle_list", "[", "idx", "[", "0", "]", "]", "-", "gt_angle", "[", "data_idx", "]", ">", "0", ":", "\n", "                    ", "flag", "=", "-", "1", "\n", "", "else", ":", "\n", "                    ", "flag", "=", "1", "\n", "", "", "elif", "angle_list", "[", "idx", "[", "0", "]", "]", ">", "0", "and", "gt_angle", "[", "data_idx", "]", "<", "0", ":", "\n", "                ", "if", "torch", ".", "abs", "(", "angle_list", "[", "idx", "[", "0", "]", "]", "-", "gt_angle", "[", "data_idx", "]", ")", ">", "90", ":", "\n", "                    ", "flag", "=", "1", "\n", "flag2", "=", "1", "\n", "", "else", ":", "\n", "                    ", "flag", "=", "-", "1", "\n", "", "", "if", "flag", "==", "0", ":", "\n", "                ", "print", "(", "'strong angle error'", ")", "\n", "", "angle_err", "*=", "flag", "\n", "\n", "dist_err", "=", "gt_dist", "[", "data_idx", "]", "-", "dist_list", "[", "idx", "[", "1", "]", "]", "\n", "if", "flag2", "==", "1", ":", "\n", "                ", "dist_err", "=", "0", "\n", "\n", "", "temp_angle_err", "=", "torch", ".", "cat", "(", "(", "temp_angle_err", ",", "torch", ".", "FloatTensor", "(", "[", "angle_err", "]", ")", ".", "cuda", "(", ")", ")", ")", "\n", "temp_dist_err", "=", "torch", ".", "cat", "(", "(", "temp_dist_err", ",", "torch", ".", "FloatTensor", "(", "[", "dist_err", "]", ")", ".", "cuda", "(", ")", ")", ")", "\n", "\n", "", "return", "temp_angle_err", ",", "temp_dist_err", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.compute_inner_product": [[334, 338], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.acos", "torch.acos", "torch.acos", "torch.acos"], "methods", ["None"], ["", "def", "compute_inner_product", "(", "self", ",", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "        ", "a", "=", "(", "(", "x1", "*", "x2", "+", "y1", "*", "y2", ")", "/", "(", "torch", ".", "sqrt", "(", "x1", "*", "x1", "+", "y1", "*", "y1", ")", "*", "torch", ".", "sqrt", "(", "x2", "*", "x2", "+", "y2", "*", "y2", ")", ")", ")", "\n", "b", "=", "torch", ".", "acos", "(", "a", ")", "/", "math", ".", "pi", "*", "180", "\n", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.adjacent_grid_idx": [[339, 359], ["np.maximum", "np.minimum", "np.maximum", "np.minimum", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "to_tensor().type().reshape", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "to_tensor", "X.view", "to_tensor", "Y.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "to_tensor().type", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "to_tensor"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor"], ["", "def", "adjacent_grid_idx", "(", "self", ",", "a_idx", ",", "d_idx", ",", "da", ",", "dd", ",", "hough_space_idx", ")", ":", "\n", "        ", "h", ",", "w", "=", "hough_space_idx", ".", "shape", "\n", "x1", "=", "np", ".", "maximum", "(", "a_idx", "-", "da", ",", "0", ")", "\n", "x2", "=", "np", ".", "minimum", "(", "a_idx", "+", "da", "+", "1", ",", "h", ")", "\n", "y1", "=", "np", ".", "maximum", "(", "d_idx", "-", "dd", ",", "0", ")", "\n", "y2", "=", "np", ".", "minimum", "(", "d_idx", "+", "dd", "+", "1", ",", "w", ")", "\n", "\n", "dx", "=", "x2", "-", "x1", "\n", "dy", "=", "y2", "-", "y1", "\n", "X", ",", "Y", "=", "torch", ".", "meshgrid", "(", "torch", ".", "arange", "(", "x1", ",", "x2", ")", ".", "cuda", "(", ")", ",", "\n", "torch", ".", "arange", "(", "y1", ",", "y2", ")", ".", "cuda", "(", ")", ")", "\n", "X", "=", "to_tensor", "(", "a_idx", ")", "-", "X", ".", "view", "(", "dx", ",", "dy", ",", "1", ")", "\n", "Y", "=", "to_tensor", "(", "d_idx", ")", "-", "Y", ".", "view", "(", "dx", ",", "dy", ",", "1", ")", "\n", "diff_idx", "=", "torch", ".", "cat", "(", "(", "X", ",", "Y", ")", ",", "dim", "=", "2", ")", ".", "view", "(", "-", "1", ",", "2", ")", "\n", "region_idx", "=", "to_tensor", "(", "hough_space_idx", "[", "x1", ":", "x2", ",", "y1", ":", "y2", "]", ")", ".", "type", "(", "torch", ".", "long", ")", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "diff_idx", "=", "diff_idx", "[", "(", "region_idx", "!=", "-", "1", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "]", "# exclude idx value -1", "\n", "region_idx", "=", "region_idx", "[", "(", "region_idx", "!=", "-", "1", ")", ".", "nonzero", "(", ")", "]", "[", ":", ",", "0", "]", "# exclude idx value -1", "\n", "\n", "return", "region_idx", ",", "diff_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.run": [[360, 417], ["print", "line_generator.generate_line.candidate_lines", "enumerate", "print", "save_pickle", "save_pickle", "save_pickle", "save_pickle", "batch[].cuda", "[].cuda", "range", "print", "print", "save_pickle", "line_generator.generate_line.visualize.update_image", "line_generator.generate_line.visualize.update_image_name", "np.copy", "np.copy", "line_generator.generate_line.visualize.draw_lines_cv", "np.copy", "line_generator.generate_line.get_approximated_mul_lines", "result.append", "line_generator.generate_line.visualize.display_saveimg", "save_pickle", "datalist.append", "to_np", "to_np", "to_np", "line_generator.generate_line.img.flip", "line_generator.generate_line.img_name.replace"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.candidate_lines", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.update_image_name", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.draw_lines_cv", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.line_generator.generate_line.get_approximated_mul_lines", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.visualizes.visualize.Visualize.display_saveimg", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "print", "(", "'start'", ")", "\n", "self", ".", "candidate_lines", "(", "mode", "=", "'mul'", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "save_pickle", "==", "True", ":", "\n", "            ", "save_pickle", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'pickle/'", ",", "file_name", "=", "'candidates'", ",", "data", "=", "to_np", "(", "self", ".", "mul_candidates", ")", ")", "\n", "save_pickle", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'pickle/'", ",", "file_name", "=", "'angle'", ",", "data", "=", "to_np", "(", "self", ".", "mul_angle", ")", ")", "\n", "save_pickle", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'pickle/'", ",", "file_name", "=", "'dist'", ",", "data", "=", "to_np", "(", "self", ".", "mul_dist", ")", ")", "\n", "save_pickle", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'pickle/'", ",", "file_name", "=", "'hough_space'", ",", "data", "=", "self", ".", "mul_hough_space", ")", "\n", "", "datalist", "=", "[", "]", "\n", "\n", "self", ".", "max_offset_a", "=", "-", "9999", "\n", "self", ".", "max_offset_d", "=", "-", "9999", "\n", "self", ".", "min_offset_a", "=", "9999", "\n", "self", ".", "min_offset_d", "=", "9999", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "self", ".", "dataloader", ")", ":", "\n", "            ", "self", ".", "img", "=", "batch", "[", "'img'", "]", ".", "cuda", "(", ")", "\n", "\n", "self", ".", "mul_gt", "=", "batch", "[", "'label'", "]", "[", "'mul_gt'", "]", "[", "0", "]", ".", "cuda", "(", ")", "\n", "self", ".", "img_name", "=", "batch", "[", "'img_name'", "]", "[", "0", "]", "\n", "\n", "result", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "0", ",", "2", ")", ":", "# 1: horizontal flip", "\n", "\n", "                ", "if", "j", "==", "1", "and", "self", ".", "cfg", ".", "data_flip", "==", "False", ":", "\n", "                    ", "continue", "\n", "", "if", "j", "==", "1", ":", "\n", "                    ", "self", ".", "img", "=", "self", ".", "img", ".", "flip", "(", "3", ")", "\n", "self", ".", "mul_gt", "[", ":", ",", "0", "]", "=", "self", ".", "width", "-", "1", "-", "self", ".", "mul_gt", "[", ":", ",", "0", "]", "\n", "self", ".", "mul_gt", "[", ":", ",", "2", "]", "=", "self", ".", "width", "-", "1", "-", "self", ".", "mul_gt", "[", ":", ",", "2", "]", "\n", "\n", "", "self", ".", "visualize", ".", "update_image", "(", "self", ".", "img", "[", "0", "]", ")", "\n", "self", ".", "visualize", ".", "update_image_name", "(", "self", ".", "img_name", ")", "\n", "\n", "self", ".", "visualize", ".", "show", "[", "'gtlines'", "]", "=", "np", ".", "copy", "(", "self", ".", "visualize", ".", "show", "[", "'img'", "]", ")", "\n", "self", ".", "visualize", ".", "show", "[", "'label'", "]", "=", "np", ".", "copy", "(", "self", ".", "visualize", ".", "show", "[", "'img'", "]", ")", "\n", "self", ".", "visualize", ".", "draw_lines_cv", "(", "data", "=", "self", ".", "mul_gt", ",", "name", "=", "'label'", ",", "ref_name", "=", "'label'", ",", "\n", "s", "=", "2", ",", "color", "=", "(", "0", ",", "0", ",", "255", ")", ")", "\n", "self", ".", "visualize", ".", "show", "[", "'overlap'", "]", "=", "np", ".", "copy", "(", "self", ".", "visualize", ".", "show", "[", "'label'", "]", ")", "\n", "\n", "result_mul", "=", "self", ".", "get_approximated_mul_lines", "(", ")", "\n", "result", ".", "append", "(", "result_mul", ")", "\n", "\n", "# save data", "\n", "", "if", "self", ".", "cfg", ".", "display", "==", "True", "and", "result_mul", "!=", "None", ":", "\n", "                ", "self", ".", "visualize", ".", "display_saveimg", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'display/'", ",", "\n", "list", "=", "[", "'img'", ",", "'overlap_center'", ",", "'gtlines'", ",", "'overlap'", ",", "'offset'", "]", ")", "\n", "", "if", "self", ".", "cfg", ".", "save_pickle", "==", "True", "and", "result_mul", "!=", "None", ":", "\n", "                ", "save_pickle", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'pickle/'", ",", "file_name", "=", "self", ".", "img_name", ".", "replace", "(", "'.jpg'", ",", "''", ")", ",", "data", "=", "result", ")", "\n", "datalist", ".", "append", "(", "self", ".", "img_name", ")", "\n", "", "print", "(", "'image %d ===> %s clear'", "%", "(", "i", ",", "self", ".", "img_name", ")", ")", "\n", "print", "(", "self", ".", "max_offset_a", ",", "self", ".", "max_offset_d", ",", "self", ".", "min_offset_a", ",", "self", ".", "min_offset_d", ")", "\n", "\n", "", "if", "self", ".", "cfg", ".", "save_pickle", "==", "True", ":", "\n", "            ", "save_pickle", "(", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'pickle/'", ",", "file_name", "=", "'datalist'", ",", "data", "=", "datalist", ")", "\n", "\n", "", "print", "(", "self", ".", "max_offset_a", ",", "self", ".", "max_offset_d", ",", "self", ".", "min_offset_a", ",", "self", ".", "min_offset_d", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_tensor2": [[29, 31], ["torch.from_numpy"], "function", ["None"], ["", "def", "visulize_mapping", "(", "b_points", ",", "size", ",", "filename", ")", ":", "\n", "    ", "img", "=", "cv2", ".", "imread", "(", "filename", ")", "\n", "#img = cv2.resize(img, size)", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.__init__": [[12, 46], ["torch.Module.__init__", "to_tensor", "np.zeros", "eval_hiou.Evaluation_HIoU.generate_grid", "np.array", "np.float32"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.generate_grid"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Evaluation_HIoU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# cfg", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "# candidates", "\n", "self", ".", "size", "=", "to_tensor", "(", "np", ".", "float32", "(", "self", ".", "cfg", ".", "size", ")", ")", "\n", "self", ".", "line_num", "=", "np", ".", "zeros", "(", "2", ")", "\n", "\n", "# generate grid", "\n", "self", ".", "grid", "=", "{", "}", "\n", "self", ".", "X", "=", "{", "}", "\n", "self", ".", "Y", "=", "{", "}", "\n", "self", ".", "generate_grid", "(", "self", ".", "cfg", ".", "sf_hiou", ",", "self", ".", "height", "//", "self", ".", "cfg", ".", "sf_hiou", ",", "self", ".", "width", "//", "self", ".", "cfg", ".", "sf_hiou", ")", "\n", "\n", "self", ".", "color_list", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", ",", "255", "]", ",", "\n", "[", "0", ",", "255", ",", "0", "]", ",", "\n", "[", "255", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "255", ",", "255", "]", ",", "\n", "[", "255", ",", "0", ",", "255", "]", ",", "\n", "[", "255", ",", "255", ",", "0", "]", ",", "\n", "[", "255", ",", "200", ",", "128", "]", ",", "\n", "[", "128", ",", "255", ",", "200", "]", ",", "\n", "[", "200", ",", "128", ",", "255", "]", ",", "\n", "[", "255", ",", "128", ",", "200", "]", ",", "\n", "[", "200", ",", "255", ",", "128", "]", ",", "\n", "[", "128", ",", "200", ",", "255", "]", ",", "\n", "[", "255", ",", "255", ",", "255", "]", ",", "\n", "[", "255", ",", "153", ",", "0", "]", ",", "\n", "[", "255", ",", "51", ",", "102", "]", "]", "]", ")", "\n", "\n", "self", ".", "dist", "=", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.generate_grid": [[47, 55], ["np.meshgrid", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "np.linspace", "np.linspace", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "eval_hiou.Evaluation_HIoU.X[].view", "eval_hiou.Evaluation_HIoU.Y[].view"], "methods", ["None"], ["", "def", "generate_grid", "(", "self", ",", "sf", ",", "height", ",", "width", ")", ":", "\n", "        ", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "0", ",", "width", "-", "1", ",", "width", ")", ",", "\n", "np", ".", "linspace", "(", "0", ",", "height", "-", "1", ",", "height", ")", ")", "\n", "\n", "self", ".", "X", "[", "sf", "]", "=", "torch", ".", "tensor", "(", "X", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "self", ".", "Y", "[", "sf", "]", "=", "torch", ".", "tensor", "(", "Y", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "self", ".", "grid", "[", "sf", "]", "=", "torch", ".", "cat", "(", "(", "self", ".", "X", "[", "sf", "]", ".", "view", "(", "1", ",", "height", ",", "width", ",", "1", ")", ",", "\n", "self", ".", "Y", "[", "sf", "]", ".", "view", "(", "1", ",", "height", ",", "width", ",", "1", ")", ")", ",", "dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.line_equation": [[57, 73], ["torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "eval_hiou.Evaluation_HIoU.line_pts_norm.clone", "eval_hiou.Evaluation_HIoU.line_pts.clone", "data.cuda().type.cuda().type.cuda().type", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "data.cuda().type.cuda().type.cuda"], "methods", ["None"], ["", "def", "line_equation", "(", "self", ",", "mode", "=", "None", ")", ":", "\n", "\n", "        ", "if", "mode", "==", "'norm'", ":", "\n", "            ", "data", "=", "self", ".", "line_pts_norm", ".", "clone", "(", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "self", ".", "line_pts", ".", "clone", "(", ")", "\n", "data", "=", "data", ".", "cuda", "(", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "\n", "# data: [N, 4] numpy array  x1, y1, x2, y2 (W, H, W, H)", "\n", "", "line_eq", "=", "torch", ".", "zeros", "(", "(", "data", ".", "shape", "[", "0", "]", ",", "3", ")", ")", ".", "cuda", "(", ")", "\n", "line_eq", "[", ":", ",", "0", "]", "=", "(", "data", "[", ":", ",", "1", "]", "-", "data", "[", ":", ",", "3", "]", ")", "/", "(", "data", "[", ":", ",", "0", "]", "-", "data", "[", ":", ",", "2", "]", ")", "\n", "line_eq", "[", ":", ",", "1", "]", "=", "-", "1", "\n", "line_eq", "[", ":", ",", "2", "]", "=", "(", "-", "1", "*", "line_eq", "[", ":", ",", "0", "]", "*", "data", "[", ":", ",", "0", "]", "+", "data", "[", ":", ",", "1", "]", ")", "\n", "check", "=", "(", "(", "data", "[", ":", ",", "0", "]", "-", "data", "[", ":", ",", "2", "]", ")", "==", "0", ")", "\n", "\n", "return", "line_eq", ",", "check", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.calculate_distance": [[74, 88], ["line_eq[].view", "line_eq[].view", "line_eq[].view", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "[].cuda().type", "eval_hiou.Evaluation_HIoU.line_pts[].view().cuda().type", "[].cuda", "eval_hiou.Evaluation_HIoU.line_pts[].view().cuda", "eval_hiou.Evaluation_HIoU.line_pts[].view"], "methods", ["None"], ["", "def", "calculate_distance", "(", "self", ",", "line_eq", ",", "check", ")", ":", "# line-point distance", "\n", "\n", "        ", "num", "=", "line_eq", ".", "shape", "[", "0", "]", "\n", "a", "=", "line_eq", "[", ":", ",", "0", "]", ".", "view", "(", "num", ",", "1", ",", "1", ")", "\n", "b", "=", "line_eq", "[", ":", ",", "1", "]", ".", "view", "(", "num", ",", "1", ",", "1", ")", "\n", "c", "=", "line_eq", "[", ":", ",", "2", "]", ".", "view", "(", "num", ",", "1", ",", "1", ")", "\n", "\n", "dist", "=", "(", "self", ".", "grid", "[", "self", ".", "sf", "]", "[", ":", ",", ":", ",", ":", ",", "0", "]", "*", "a", "+", "self", ".", "grid", "[", "self", ".", "sf", "]", "[", ":", ",", ":", ",", ":", ",", "1", "]", "*", "b", "+", "c", ")", "/", "torch", ".", "sqrt", "(", "a", "*", "a", "+", "b", "*", "b", ")", "\n", "\n", "if", "True", "in", "check", ":", "\n", "            ", "dist", "[", "check", "==", "True", "]", "=", "(", "self", ".", "grid", "[", "self", ".", "sf", "]", "[", ":", ",", ":", ",", ":", ",", "0", "]", ".", "cuda", "(", ")", ".", "type", "(", "torch", ".", "float32", ")", "-", "\n", "self", ".", "line_pts", "[", "check", "==", "True", ",", "0", "]", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", ".", "type", "(", "torch", ".", "float32", ")", ")", "\n", "", "self", ".", "dist_map", "=", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.generate_region_mask": [[89, 95], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "generate_region_mask", "(", "self", ")", ":", "\n", "        ", "b", ",", "h", ",", "w", "=", "self", ".", "dist_map", ".", "shape", "\n", "region1", "=", "(", "0", "<", "self", ".", "dist_map", ")", ".", "view", "(", "b", ",", "h", ",", "w", ",", "1", ")", "\n", "region2", "=", "(", "self", ".", "dist_map", "<", "0", ")", ".", "view", "(", "b", ",", "h", ",", "w", ",", "1", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "region1", ",", "region2", ")", ",", "dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.update": [[96, 100], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "line_pts", ",", "scale_factor", ")", ":", "\n", "\n", "        ", "self", ".", "line_pts", "=", "line_pts", "\n", "self", ".", "sf", "=", "scale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.update_dataset_name": [[101, 104], ["None"], "methods", ["None"], ["", "def", "update_dataset_name", "(", "self", ",", "dataset_name", ")", ":", "\n", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.preprocess": [[105, 127], ["eval_hiou.Evaluation_HIoU.update", "eval_hiou.Evaluation_HIoU.line_equation", "eval_hiou.Evaluation_HIoU.calculate_distance", "eval_hiou.Evaluation_HIoU.generate_region_mask", "eval_hiou.Evaluation_HIoU.visualize_separate_region"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.update", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.line_equation", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.calculate_distance", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.generate_region_mask", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.visualize_separate_region"], ["", "def", "preprocess", "(", "self", ",", "line_pts", ")", ":", "\n", "\n", "        ", "output", "=", "{", "'region_mask'", ":", "{", "}", ",", "\n", "'line_mask'", ":", "{", "}", ",", "\n", "'grid'", ":", "{", "}", ",", "\n", "'weight'", ":", "{", "}", "}", "\n", "\n", "self", ".", "update", "(", "line_pts", ",", "self", ".", "cfg", ".", "sf_hiou", ")", "\n", "line_eq", ",", "check", "=", "self", ".", "line_equation", "(", ")", "\n", "self", ".", "calculate_distance", "(", "line_eq", ",", "check", ")", "\n", "region_mask", "=", "self", ".", "generate_region_mask", "(", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "disp_hiou", "==", "True", ":", "\n", "\n", "            ", "if", "region_mask", ".", "shape", "[", "0", "]", "!=", "0", ":", "\n", "                ", "self", ".", "visualize_separate_region", "(", "mask", "=", "region_mask", "[", "0", "]", ",", "\n", "line_pts", "=", "line_pts", "[", "0", "]", ",", "\n", "dir_name", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'New_IoU/vis_check/region_mask/'", ",", "\n", "file_name", "=", "'region.jpg'", ")", "\n", "", "", "output", "[", "'region_mask'", "]", "=", "region_mask", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.measure_IoU": [[129, 138], ["torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum().type", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "measure_IoU", "(", "self", ",", "X1", ",", "X2", ")", ":", "\n", "        ", "X", "=", "X1", "+", "X2", "\n", "\n", "X_uni", "=", "torch", ".", "sum", "(", "X", "!=", "0", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "X_inter", "=", "torch", ".", "sum", "(", "X", "==", "2", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "\n", "iou", "=", "X_inter", "/", "X_uni", "\n", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.measure_hiou_metric": [[139, 158], ["len", "len", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "range", "range", "range", "eval_hiou.Evaluation_HIoU.measure_IoU", "score_table[].max", "score_table_T[].max", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU"], ["", "def", "measure_hiou_metric", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "\n", "        ", "m", "=", "len", "(", "pred", ")", "\n", "n", "=", "len", "(", "gt", ")", "\n", "score_table", "=", "torch", ".", "zeros", "(", "(", "m", ",", "n", ")", ",", "dtype", "=", "torch", ".", "float", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "            ", "score_table", "[", "i", ",", ":", "]", "=", "self", ".", "measure_IoU", "(", "pred", "[", "i", ":", "i", "+", "1", "]", ",", "gt", ")", "\n", "\n", "", "result", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "            ", "result", "+=", "score_table", "[", "i", "]", ".", "max", "(", ")", "\n", "", "score_table_T", "=", "score_table", ".", "T", "\n", "for", "j", "in", "range", "(", "n", ")", ":", "\n", "            ", "result", "+=", "score_table_T", "[", "j", "]", ".", "max", "(", ")", "\n", "", "result", "=", "result", "/", "(", "m", "+", "n", ")", "\n", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.generate_inter_region_mask": [[160, 177], ["region_mask[].clone", "range", "memory_region_mask[].permute", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "piece_mask.type", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "torch.BoolTensor().cuda", "range", "torch.cat.clone", "torch.cat.clone", "torch.cat.clone", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor"], "methods", ["None"], ["", "def", "generate_inter_region_mask", "(", "self", ",", "region_mask", ")", ":", "\n", "\n", "        ", "memory_region_mask", "=", "region_mask", "[", ":", "1", "]", ".", "clone", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "region_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "temp_region_mask", "=", "torch", ".", "BoolTensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "for", "j", "in", "range", "(", "2", ")", ":", "\n", "                ", "region", "=", "memory_region_mask", "*", "region_mask", "[", "i", ":", "i", "+", "1", ",", ":", ",", ":", ",", "j", ":", "j", "+", "1", "]", "\n", "temp_region_mask", "=", "torch", ".", "cat", "(", "(", "temp_region_mask", ",", "region", ")", ",", "dim", "=", "3", ")", "\n", "", "memory_region_mask", "=", "temp_region_mask", ".", "clone", "(", ")", "\n", "\n", "", "memory_region_mask", "=", "memory_region_mask", "[", "0", "]", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "area", "=", "torch", ".", "sum", "(", "memory_region_mask", ",", "dim", "=", "(", "1", ",", "2", ")", ")", "\n", "idx", "=", "(", "area", "!=", "0", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "piece_mask", "=", "memory_region_mask", "[", "idx", "]", "\n", "\n", "return", "piece_mask", ".", "type", "(", "torch", ".", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.visualize_separate_region": [[178, 197], ["np.uint8", "np.uint8", "cv2.resize", "cv2.line", "mkdir", "cv2.imwrite", "to_3D_np", "to_3D_np", "to_np", "to_np"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.libs.utils.to_3D_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "visualize_separate_region", "(", "self", ",", "mask", ",", "line_pts", ",", "dir_name", ",", "file_name", ")", ":", "\n", "\n", "\n", "        ", "mask1", "=", "np", ".", "uint8", "(", "to_3D_np", "(", "to_np", "(", "mask", "[", ":", ",", ":", ",", "0", "]", ")", ")", "*", "255", ")", "\n", "mask1", "[", ":", ",", ":", ",", "[", "0", ",", "1", "]", "]", "=", "0", "\n", "mask2", "=", "np", ".", "uint8", "(", "to_3D_np", "(", "to_np", "(", "mask", "[", ":", ",", ":", ",", "1", "]", ")", ")", "*", "255", ")", "\n", "mask2", "[", ":", ",", ":", ",", "[", "0", ",", "2", "]", "]", "=", "0", "\n", "\n", "disp_mask", "=", "mask1", "+", "mask2", "\n", "\n", "mask", "=", "cv2", ".", "resize", "(", "disp_mask", ",", "(", "self", ".", "width", ",", "self", ".", "height", ")", ")", "\n", "\n", "pt_1", "=", "(", "line_pts", "[", "0", "]", ",", "line_pts", "[", "1", "]", ")", "\n", "pt_2", "=", "(", "line_pts", "[", "2", "]", ",", "line_pts", "[", "3", "]", ")", "\n", "\n", "mask", "=", "cv2", ".", "line", "(", "mask", ",", "pt_1", ",", "pt_2", ",", "(", "255", ",", "255", ",", "255", ")", ",", "3", ")", "\n", "\n", "mkdir", "(", "dir_name", ")", "\n", "cv2", ".", "imwrite", "(", "dir_name", "+", "file_name", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run": [[199, 221], ["dict", "eval_hiou.Evaluation_HIoU.preprocess", "eval_hiou.Evaluation_HIoU.preprocess", "eval_hiou.Evaluation_HIoU.generate_inter_region_mask", "eval_hiou.Evaluation_HIoU.generate_inter_region_mask", "eval_hiou.Evaluation_HIoU.measure_hiou_metric", "eval_hiou.Evaluation_HIoU.visualize_inter_region", "eval_hiou.Evaluation_HIoU.visualize_result"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.preprocess", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.preprocess", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.generate_inter_region_mask", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.generate_inter_region_mask", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.measure_hiou_metric", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.visualize_inter_region", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.visualize_result"], ["", "def", "run", "(", "self", ",", "pred_pts", ",", "gt_pts", ",", "img_name", ")", ":", "\n", "\n", "        ", "result", "=", "dict", "(", ")", "\n", "self", ".", "img_name", "=", "img_name", "\n", "\n", "if", "pred_pts", ".", "shape", "[", "0", "]", "!=", "0", ":", "\n", "            ", "pred_mask", "=", "self", ".", "preprocess", "(", "pred_pts", ")", "\n", "gt_mask", "=", "self", ".", "preprocess", "(", "gt_pts", ")", "\n", "self", ".", "line_num", "[", ":", "]", "=", "pred_pts", ".", "shape", "[", "0", "]", ",", "gt_pts", ".", "shape", "[", "0", "]", "\n", "pred_inter_mask", "=", "self", ".", "generate_inter_region_mask", "(", "pred_mask", "[", "'region_mask'", "]", ")", "\n", "gt_inter_mask", "=", "self", ".", "generate_inter_region_mask", "(", "gt_mask", "[", "'region_mask'", "]", ")", "\n", "\n", "result", "[", "'IOU'", "]", "=", "self", ".", "measure_hiou_metric", "(", "pred_inter_mask", ",", "gt_inter_mask", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "disp_hiou", "==", "True", ":", "\n", "                ", "self", ".", "visualize_inter_region", "(", "pred_inter_mask", ",", "gt_inter_mask", ")", "\n", "self", ".", "visualize_result", "(", "pred_pts", ",", "gt_pts", ",", "result", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "result", "[", "'IOU'", "]", "=", "\"not_detection_image\"", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.visualize_result": [[223, 256], ["cv2.imread", "cv2.imread", "cv2.resize", "cv2.resize", "to_np", "range", "cv2.putText", "to_np", "range", "np.full", "np.concatenate", "mkdir", "cv2.imwrite", "cv2.line", "cv2.line"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir"], ["", "def", "visualize_result", "(", "self", ",", "pred_line", ",", "gt_line", ",", "output", ")", ":", "\n", "\n", "        ", "pred_img", "=", "cv2", ".", "imread", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "self", ".", "dataset_name", "+", "'_img'", "]", "+", "self", ".", "img_name", ")", "\n", "gt_img", "=", "cv2", ".", "imread", "(", "self", ".", "cfg", ".", "dir", "[", "'dataset'", "]", "[", "self", ".", "dataset_name", "+", "'_img'", "]", "+", "self", ".", "img_name", ")", "\n", "\n", "pred_img", "=", "cv2", ".", "resize", "(", "pred_img", ",", "(", "self", ".", "cfg", ".", "width", ",", "self", ".", "cfg", ".", "height", ")", ")", "\n", "gt_img", "=", "cv2", ".", "resize", "(", "gt_img", ",", "(", "self", ".", "cfg", ".", "width", ",", "self", ".", "cfg", ".", "height", ")", ")", "\n", "\n", "pred_line", "=", "to_np", "(", "pred_line", ")", "\n", "for", "i", "in", "range", "(", "pred_line", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pts", "=", "pred_line", "[", "i", "]", "\n", "pt_1", "=", "(", "pts", "[", "0", "]", ",", "pts", "[", "1", "]", ")", "\n", "pt_2", "=", "(", "pts", "[", "2", "]", ",", "pts", "[", "3", "]", ")", "\n", "pred_img", "=", "cv2", ".", "line", "(", "pred_img", ",", "pt_1", ",", "pt_2", ",", "(", "255", ",", "0", ",", "0", ")", ",", "2", ")", "\n", "\n", "\n", "", "cv2", ".", "putText", "(", "pred_img", ",", "\"IOU : {:01.4f}\"", ".", "format", "(", "output", "[", "'IOU'", "]", ")", ",", "(", "10", ",", "30", ")", ",", "\n", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "0.8", ",", "(", "0", ",", "0", ",", "255", ")", ",", "2", ",", "cv2", ".", "LINE_AA", ")", "\n", "\n", "gt_line", "=", "to_np", "(", "gt_line", ")", "\n", "for", "i", "in", "range", "(", "gt_line", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pts", "=", "gt_line", "[", "i", "]", "\n", "pt_1", "=", "(", "pts", "[", "0", "]", ",", "pts", "[", "1", "]", ")", "\n", "pt_2", "=", "(", "pts", "[", "2", "]", ",", "pts", "[", "3", "]", ")", "\n", "gt_img", "=", "cv2", ".", "line", "(", "gt_img", ",", "pt_1", ",", "pt_2", ",", "(", "255", ",", "0", ",", "0", ")", ",", "2", ")", "\n", "\n", "", "blank", "=", "np", ".", "full", "(", "(", "self", ".", "cfg", ".", "height", ",", "5", ",", "3", ")", ",", "255", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "total", "=", "np", ".", "concatenate", "(", "(", "pred_img", ",", "blank", ",", "gt_img", ")", ",", "axis", "=", "1", ")", "\n", "\n", "file_dir", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'New_IoU/vis/'", "\n", "mkdir", "(", "file_dir", ")", "\n", "\n", "cv2", ".", "imwrite", "(", "file_dir", "+", "self", ".", "img_name", "+", "'_total.jpg'", ",", "total", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.visualize_inter_region": [[258, 291], ["len", "len", "np.zeros", "np.zeros", "to_np", "to_np", "range", "range", "np.full", "np.concatenate", "mkdir", "cv2.imwrite", "pred[].reshape", "np.repeat", "gt[].reshape", "np.repeat"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir"], ["", "def", "visualize_inter_region", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "m", "=", "len", "(", "pred", ")", "\n", "n", "=", "len", "(", "gt", ")", "\n", "pred_vis", "=", "np", ".", "zeros", "(", "(", "self", ".", "cfg", ".", "width", ",", "self", ".", "cfg", ".", "height", ",", "3", ")", ")", "\n", "gt_vis", "=", "np", ".", "zeros", "(", "(", "self", ".", "cfg", ".", "width", ",", "self", ".", "cfg", ".", "height", ",", "3", ")", ")", "\n", "\n", "pred", "=", "to_np", "(", "pred", ")", "\n", "gt", "=", "to_np", "(", "gt", ")", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "            ", "if", "i", ">=", "self", ".", "color_list", ".", "shape", "[", "1", "]", ":", "\n", "                ", "continue", "\n", "\n", "", "tmp", "=", "pred", "[", "i", "]", ".", "reshape", "(", "(", "self", ".", "cfg", ".", "width", ",", "self", ".", "cfg", ".", "height", ",", "1", ")", ")", "\n", "tmp", "=", "np", ".", "repeat", "(", "tmp", ",", "3", ",", "axis", "=", "2", ")", "\n", "tmp", "=", "tmp", "*", "self", ".", "color_list", "[", ":", ",", "i", ",", ":", "]", "\n", "pred_vis", "+=", "tmp", "\n", "\n", "", "for", "j", "in", "range", "(", "n", ")", ":", "\n", "            ", "if", "j", ">=", "self", ".", "color_list", ".", "shape", "[", "1", "]", ":", "\n", "                ", "continue", "\n", "", "tmp", "=", "gt", "[", "j", "]", ".", "reshape", "(", "(", "self", ".", "cfg", ".", "width", ",", "self", ".", "cfg", ".", "height", ",", "1", ")", ")", "\n", "tmp", "=", "np", ".", "repeat", "(", "tmp", ",", "3", ",", "axis", "=", "2", ")", "\n", "tmp", "=", "tmp", "*", "self", ".", "color_list", "[", ":", ",", "j", ",", ":", "]", "\n", "gt_vis", "+=", "tmp", "\n", "\n", "", "blank", "=", "np", ".", "full", "(", "(", "self", ".", "cfg", ".", "height", ",", "5", ",", "3", ")", ",", "255", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "total", "=", "np", ".", "concatenate", "(", "(", "pred_vis", ",", "blank", ",", "gt_vis", ")", ",", "axis", "=", "1", ")", "\n", "\n", "file_dir", "=", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "'New_IoU/vis_segmap/'", "\n", "mkdir", "(", "file_dir", ")", "\n", "\n", "cv2", ".", "imwrite", "(", "file_dir", "+", "self", ".", "img_name", "+", "'_total.jpg'", ",", "total", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.__init__": [[13, 26], ["numpy.array", "numpy.array", "numpy.meshgrid", "torch.tensor().cuda", "torch.tensor().cuda", "numpy.linspace", "numpy.linspace", "torch.tensor", "torch.tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cfg", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "height", "=", "cfg", ".", "height", "\n", "self", ".", "width", "=", "cfg", ".", "width", "\n", "\n", "self", ".", "mean", "=", "np", ".", "array", "(", "[", "cfg", ".", "mean", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "std", "=", "np", ".", "array", "(", "[", "cfg", ".", "std", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "self", ".", "X", ",", "self", ".", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "0", ",", "self", ".", "width", "-", "1", ",", "self", ".", "width", ")", ",", "\n", "np", ".", "linspace", "(", "0", ",", "self", ".", "height", "-", "1", ",", "self", ".", "height", ")", ")", "\n", "self", ".", "X", "=", "torch", ".", "tensor", "(", "self", ".", "X", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "self", ".", "Y", "=", "torch", ".", "tensor", "(", "self", ".", "Y", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.measure_miou": [[27, 42], ["eval_func.divided_region_mask", "eval_func.divided_region_mask", "eval_func.measure_IoU_set", "measure_IoU_set.clone().permute().contiguous", "measure_IoU_set.clone().permute", "measure_IoU_set.clone"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.divided_region_mask", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.divided_region_mask", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU_set"], ["", "def", "measure_miou", "(", "self", ",", "out", ",", "gt", ")", ":", "\n", "\n", "\n", "### mask", "\n", "        ", "output_mask", "=", "divided_region_mask", "(", "line_pts", "=", "out", ",", "\n", "size", "=", "[", "self", ".", "width", ",", "self", ".", "height", "]", ")", "\n", "gt_mask", "=", "divided_region_mask", "(", "line_pts", "=", "gt", ",", "\n", "size", "=", "[", "self", ".", "width", ",", "self", ".", "height", "]", ")", "\n", "\n", "# miou", "\n", "precision_miou", "=", "measure_IoU_set", "(", "ref_mask", "=", "gt_mask", ",", "\n", "tar_mask", "=", "output_mask", ")", "\n", "recall_miou", "=", "precision_miou", ".", "clone", "(", ")", ".", "permute", "(", "1", ",", "0", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "precision_miou", ",", "recall_miou", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.matching": [[43, 83], ["torch.zeros().cuda", "torch.zeros().cuda", "range", "range", "torch.argmax", "torch.argmax", "torch.zeros", "torch.zeros", "[].view", "[].view", "[].view", "[].view", "[].view", "[].view"], "methods", ["None"], ["", "def", "matching", "(", "self", ",", "miou", ",", "idx", ")", ":", "\n", "\n", "        ", "out_num", ",", "gt_num", "=", "miou", "[", "'p'", "]", "[", "idx", "]", ".", "shape", "\n", "\n", "precision", "=", "torch", ".", "zeros", "(", "(", "out_num", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "recall", "=", "torch", ".", "zeros", "(", "(", "gt_num", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "out_num", ")", ":", "\n", "            ", "if", "gt_num", "==", "0", ":", "\n", "                ", "break", "\n", "\n", "", "max_idx", "=", "torch", ".", "argmax", "(", "miou", "[", "'p'", "]", "[", "idx", "]", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "miou", "[", "'p'", "]", "[", "idx", "]", ".", "view", "(", "-", "1", ")", "[", "max_idx", "]", "==", "-", "1", ":", "\n", "                ", "continue", "\n", "\n", "", "out_idx", "=", "max_idx", "//", "gt_num", "\n", "gt_idx", "=", "max_idx", "%", "gt_num", "\n", "\n", "precision", "[", "out_idx", "]", "=", "miou", "[", "'p'", "]", "[", "idx", "]", ".", "view", "(", "-", "1", ")", "[", "max_idx", "]", "\n", "miou", "[", "'p'", "]", "[", "idx", "]", "[", "out_idx", ",", ":", "]", "=", "-", "1", "\n", "miou", "[", "'p'", "]", "[", "idx", "]", "[", ":", ",", "gt_idx", "]", "=", "-", "1", "\n", "\n", "", "for", "i", "in", "range", "(", "gt_num", ")", ":", "\n", "            ", "if", "out_num", "==", "0", ":", "\n", "                ", "break", "\n", "\n", "", "max_idx", "=", "torch", ".", "argmax", "(", "miou", "[", "'r'", "]", "[", "idx", "]", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "miou", "[", "'r'", "]", "[", "idx", "]", ".", "view", "(", "-", "1", ")", "[", "max_idx", "]", "==", "-", "1", ":", "\n", "                ", "continue", "\n", "\n", "", "gt_idx", "=", "max_idx", "//", "out_num", "\n", "out_idx", "=", "max_idx", "%", "out_num", "\n", "\n", "recall", "[", "gt_idx", "]", "=", "miou", "[", "'r'", "]", "[", "idx", "]", ".", "view", "(", "-", "1", ")", "[", "max_idx", "]", "\n", "miou", "[", "'r'", "]", "[", "idx", "]", "[", "gt_idx", ",", ":", "]", "=", "-", "1", "\n", "miou", "[", "'r'", "]", "[", "idx", "]", "[", ":", ",", "out_idx", "]", "=", "-", "1", "\n", "\n", "", "return", "precision", ",", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.calculate_AUC": [[85, 116], ["numpy.float32", "torch.zeros", "range", "result.cpu().numpy.cpu().numpy.cpu().numpy", "numpy.linspace", "sklearn.metrics.auc", "result.cpu().numpy.cpu().numpy.cpu", "float", "float", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "calculate_AUC", "(", "self", ",", "miou", ",", "metric", ")", ":", "\n", "\n", "        ", "num", "=", "200", "\n", "\n", "thresds", "=", "np", ".", "float32", "(", "np", ".", "linspace", "(", "0", ",", "1", ",", "num", "+", "1", ")", ")", "\n", "\n", "result", "=", "torch", ".", "zeros", "(", "(", "num", "+", "1", ")", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "thresds", ".", "shape", "[", "0", "]", ")", ":", "\n", "\n", "            ", "thresd", "=", "thresds", "[", "i", "]", "\n", "\n", "correct", "=", "0", "\n", "error", "=", "0", "\n", "\n", "for", "j", "in", "miou", "[", "metric", "[", "0", "]", "]", ":", "\n", "\n", "                ", "if", "miou", "[", "metric", "[", "0", "]", "]", "[", "j", "]", ".", "shape", "[", "0", "]", "!=", "0", ":", "\n", "                    ", "is_correct", "=", "(", "miou", "[", "metric", "[", "0", "]", "]", "[", "j", "]", ">", "thresd", ")", "\n", "correct", "+=", "float", "(", "torch", ".", "sum", "(", "is_correct", ")", ")", "\n", "error", "+=", "float", "(", "torch", ".", "sum", "(", "is_correct", "==", "0", ")", ")", "\n", "\n", "\n", "", "", "if", "(", "correct", "+", "error", ")", "!=", "0", ":", "\n", "                ", "result", "[", "i", "]", "=", "correct", "/", "(", "correct", "+", "error", ")", "\n", "\n", "", "", "result", "=", "result", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "AUC", "=", "auc", "(", "thresds", "[", "10", ":", "191", "]", ",", "result", "[", "10", ":", "191", "]", ")", "/", "0.9", "\n", "\n", "return", "AUC", ",", "thresds", ",", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.divided_region_mask": [[118, 145], ["numpy.meshgrid", "torch.tensor().unsqueeze().cuda", "torch.tensor().unsqueeze().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "a.view.view", "b.view.view", "torch.cat", "int", "int", "numpy.linspace", "numpy.linspace", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.zeros", "torch.zeros", "torch.zeros().cuda.unsqueeze", "torch.zeros().cuda.unsqueeze", "torch.tensor", "torch.tensor", "line_pts[].view", "line_pts[].view"], "function", ["None"], ["", "", "def", "divided_region_mask", "(", "line_pts", ",", "size", ")", ":", "\n", "\n", "    ", "line_num", ",", "_", "=", "line_pts", ".", "shape", "\n", "width", ",", "height", "=", "int", "(", "size", "[", "0", "]", ")", ",", "int", "(", "size", "[", "1", "]", ")", "\n", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "0", ",", "width", "-", "1", ",", "width", ")", ",", "np", ".", "linspace", "(", "0", ",", "height", "-", "1", ",", "height", ")", ")", "# after x before", "\n", "X", "=", "torch", ".", "tensor", "(", "X", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "Y", "=", "torch", ".", "tensor", "(", "Y", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "False", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "\n", "check", "=", "(", "(", "line_pts", "[", ":", ",", "0", "]", "-", "line_pts", "[", ":", ",", "2", "]", ")", "==", "0", ")", ".", "type", "(", "torch", ".", "float", ")", "\n", "\n", "mask1", "=", "torch", ".", "zeros", "(", "(", "line_num", ",", "height", ",", "width", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "mask2", "=", "torch", ".", "zeros", "(", "(", "line_num", ",", "height", ",", "width", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "\n", "mask1", "[", "check", "==", "1", ",", ":", ",", ":", "]", "=", "(", "X", "<", "line_pts", "[", ":", ",", "0", "]", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", ")", ".", "type", "(", "torch", ".", "float", ")", "[", "check", "==", "1", ",", ":", ",", ":", "]", "\n", "mask2", "[", "check", "==", "1", ",", ":", ",", ":", "]", "=", "(", "X", ">=", "line_pts", "[", ":", ",", "0", "]", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", ")", ".", "type", "(", "torch", ".", "float", ")", "[", "check", "==", "1", ",", ":", ",", ":", "]", "\n", "\n", "a", "=", "(", "line_pts", "[", ":", ",", "1", "]", "-", "line_pts", "[", ":", ",", "3", "]", ")", "/", "(", "line_pts", "[", ":", ",", "0", "]", "-", "line_pts", "[", ":", ",", "2", "]", ")", "\n", "b", "=", "-", "1", "*", "a", "*", "line_pts", "[", ":", ",", "0", "]", "+", "line_pts", "[", ":", ",", "1", "]", "\n", "\n", "a", "=", "a", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", "\n", "b", "=", "b", ".", "view", "(", "line_num", ",", "1", ",", "1", ")", "\n", "\n", "mask1", "[", "check", "==", "0", ",", ":", ",", ":", "]", "=", "(", "Y", "<", "a", "*", "X", "+", "b", ")", ".", "type", "(", "torch", ".", "float32", ")", "[", "check", "==", "0", ",", ":", ",", ":", "]", "\n", "mask2", "[", "check", "==", "0", ",", ":", ",", ":", "]", "=", "(", "Y", ">=", "a", "*", "X", "+", "b", ")", ".", "type", "(", "torch", ".", "float32", ")", "[", "check", "==", "0", ",", ":", ",", ":", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "mask1", ".", "unsqueeze", "(", "1", ")", ",", "mask2", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU_set": [[146, 168], ["torch.zeros().cuda", "range", "eval_func.measure_IoU", "eval_func.measure_IoU", "eval_func.measure_IoU", "eval_func.measure_IoU", "torch.zeros", "tar_mask[].unsqueeze", "tar_mask[].unsqueeze", "tar_mask[].unsqueeze", "tar_mask[].unsqueeze"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU"], ["", "def", "measure_IoU_set", "(", "ref_mask", ",", "tar_mask", ")", ":", "\n", "    ", "ref_num", "=", "ref_mask", ".", "shape", "[", "0", "]", "\n", "tar_num", "=", "tar_mask", ".", "shape", "[", "0", "]", "\n", "\n", "miou", "=", "torch", ".", "zeros", "(", "(", "tar_num", ",", "ref_num", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "tar_num", ")", ":", "\n", "        ", "iou_1", ",", "check1", "=", "measure_IoU", "(", "tar_mask", "[", "i", ",", "0", "]", ".", "unsqueeze", "(", "0", ")", ",", "ref_mask", "[", ":", ",", "0", "]", ")", "\n", "iou_2", ",", "check2", "=", "measure_IoU", "(", "tar_mask", "[", "i", ",", "1", "]", ".", "unsqueeze", "(", "0", ")", ",", "ref_mask", "[", ":", ",", "1", "]", ")", "\n", "\n", "check", "=", "(", "check1", "*", "check2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_check", "=", "(", "miou", "[", "i", "]", "<", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "miou", "[", "i", "]", "[", "max_check", "==", "1", "]", "=", "(", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", "[", "max_check", "==", "1", "]", "\n", "\n", "iou_1", ",", "check1", "=", "measure_IoU", "(", "tar_mask", "[", "i", ",", "1", "]", ".", "unsqueeze", "(", "0", ")", ",", "ref_mask", "[", ":", ",", "0", "]", ")", "\n", "iou_2", ",", "check2", "=", "measure_IoU", "(", "tar_mask", "[", "i", ",", "0", "]", ".", "unsqueeze", "(", "0", ")", ",", "ref_mask", "[", ":", ",", "1", "]", ")", "\n", "\n", "check", "=", "(", "check1", "*", "check2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "max_check", "=", "(", "miou", "[", "i", "]", "<", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "miou", "[", "i", "]", "[", "max_check", "==", "1", "]", "=", "(", "check", "*", "(", "iou_1", "+", "iou_2", ")", "/", "2", ")", "[", "max_check", "==", "1", "]", "\n", "\n", "", "return", "miou", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.measure_IoU": [[169, 180], ["torch.sum().type", "torch.sum().type", "torch.sum", "torch.sum"], "function", ["None"], ["", "def", "measure_IoU", "(", "X1", ",", "X2", ")", ":", "\n", "    ", "X", "=", "X1", "+", "X2", "\n", "\n", "X_uni", "=", "torch", ".", "sum", "(", "X", "!=", "0", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "X_inter", "=", "torch", ".", "sum", "(", "X", "==", "2", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "\n", "\n", "iou", "=", "X_inter", "/", "X_uni", "\n", "\n", "check", "=", "(", "X_inter", ">", "0", ")", "\n", "\n", "return", "iou", ",", "check", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.draw_plot": [[181, 209], ["numpy.arange", "matplotlib.subplot", "plt.subplot.xaxis.set_tick_params", "plt.subplot.yaxis.set_tick_params", "plt.subplot.set_xticks", "plt.subplot.set_ylabel", "matplotlib.xlim", "matplotlib.ylim", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.legend", "plt.legend.get_frame().set_edgecolor", "matplotlib.savefig", "matplotlib.close", "plt.legend.get_frame"], "function", ["None"], ["", "def", "draw_plot", "(", "data", ",", "path", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "metric", "=", "data", "\n", "\n", "step", "=", "np", ".", "arange", "(", "0", ",", "201", ",", "10", ")", "\n", "x1", "=", "x1", "[", "step", "]", "\n", "y1", "=", "y1", "[", "step", "]", "\n", "plt", ".", "rcParams", "[", "'figure.figsize'", "]", "=", "(", "11.3", ",", "11.3", ")", "\n", "\n", "plt", ".", "rcParams", "[", "'font.family'", "]", "=", "'serif'", "\n", "plt", ".", "rcParams", "[", "'font.serif'", "]", "=", "[", "'Times New Roman'", "]", "+", "plt", ".", "rcParams", "[", "'font.serif'", "]", "\n", "plt", ".", "rcParams", "[", "'axes.grid'", "]", "=", "True", "\n", "ax", "=", "plt", ".", "subplot", "(", ")", "\n", "size", "=", "35", "\n", "ax", ".", "xaxis", ".", "set_tick_params", "(", "labelsize", "=", "size", ")", "\n", "ax", ".", "yaxis", ".", "set_tick_params", "(", "labelsize", "=", "size", ")", "\n", "ax", ".", "set_xticks", "(", "[", "0.1", ",", "0.3", ",", "0.5", ",", "0.7", ",", "0.9", "]", ")", "\n", "ax", ".", "set_ylabel", "(", "'Times New Roman'", ")", "\n", "\n", "plt", ".", "xlim", "(", "0.05", ",", "0.95", ")", "\n", "plt", ".", "ylim", "(", "0", ",", "1", ")", "\n", "plt", ".", "plot", "(", "x1", ",", "y1", ",", "label", "=", "\"Model\"", ",", "color", "=", "'deepskyblue'", ",", "linewidth", "=", "3", ")", "\n", "plt", ".", "xlabel", "(", "'Threshold (\\u03C4)'", ",", "fontsize", "=", "size", ")", "\n", "legend", "=", "plt", ".", "legend", "(", "loc", "=", "3", ",", "prop", "=", "{", "'size'", ":", "size", "}", ")", "\n", "legend", ".", "get_frame", "(", ")", ".", "set_edgecolor", "(", "'black'", ")", "\n", "\n", "# plt.show()", "\n", "plt", ".", "savefig", "(", "path", "+", "metric", "+", "'.png'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.Evaluation_Semantic_Line.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "eval_func", ",", "eval_hiou", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "eval_func", "=", "eval_func", "\n", "self", ".", "eval_hiou", "=", "eval_hiou", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.Evaluation_Semantic_Line.measure_AUC_PRF": [[15, 52], ["len", "eval_line_detection.create_eval_dict", "range", "eval_line_detection.Evaluation_Semantic_Line.eval_func.calculate_AUC", "eval_line_detection.Evaluation_Semantic_Line.eval_func.calculate_AUC", "print", "print", "print", "load_pickle", "[].cuda", "sklearn.metrics.auc", "torch.zeros().cuda", "torch.zeros().cuda", "eval_line_detection.Evaluation_Semantic_Line.eval_func.measure_miou", "eval_line_detection.Evaluation_Semantic_Line.eval_func.matching", "np.isnan().nonzero", "torch.zeros", "torch.zeros", "np.isnan"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.create_eval_dict", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.calculate_AUC", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.calculate_AUC", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.measure_miou", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.matching"], ["", "def", "measure_AUC_PRF", "(", "self", ",", "datalist", ",", "mode", "=", "'test'", ",", "dataset_name", "=", "'SEL'", ",", "with_reg", "=", "True", ")", ":", "\n", "        ", "num", "=", "len", "(", "datalist", ")", "\n", "miou", ",", "match", "=", "create_eval_dict", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "            ", "data", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "mode", "+", "'_'", "+", "dataset_name", "+", "'/pickle/'", "+", "datalist", "[", "i", "]", "[", ":", "-", "4", "]", ")", "\n", "if", "with_reg", "==", "False", ":", "\n", "                ", "out", "=", "data", "[", "'out'", "]", "[", "'mul_cls'", "]", "\n", "", "elif", "with_reg", "==", "True", ":", "\n", "                ", "out", "=", "data", "[", "'out'", "]", "[", "'mul_reg'", "]", "\n", "", "gt", "=", "data", "[", "'gt'", "]", "[", "'mul'", "]", ".", "cuda", "(", ")", "\n", "out_num", "=", "out", ".", "shape", "[", "0", "]", "\n", "gt_num", "=", "gt", ".", "shape", "[", "0", "]", "\n", "\n", "if", "gt_num", "==", "0", ":", "\n", "                ", "match", "[", "'r'", "]", "[", "i", "]", "=", "torch", ".", "zeros", "(", "gt_num", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "", "elif", "out_num", "==", "0", ":", "\n", "                ", "match", "[", "'p'", "]", "[", "i", "]", "=", "torch", ".", "zeros", "(", "out_num", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "                ", "miou", "[", "'p'", "]", "[", "i", "]", ",", "miou", "[", "'r'", "]", "[", "i", "]", "=", "self", ".", "eval_func", ".", "measure_miou", "(", "out", ",", "gt", ")", "\n", "match", "[", "'p'", "]", "[", "i", "]", ",", "match", "[", "'r'", "]", "[", "i", "]", "=", "self", ".", "eval_func", ".", "matching", "(", "miou", ",", "i", ")", "\n", "\n", "# performance", "\n", "", "", "auc_p", ",", "thresds", ",", "precision", "=", "self", ".", "eval_func", ".", "calculate_AUC", "(", "miou", "=", "match", ",", "metric", "=", "'precision'", ")", "\n", "auc_r", ",", "_", ",", "recall", "=", "self", ".", "eval_func", ".", "calculate_AUC", "(", "miou", "=", "match", ",", "metric", "=", "'recall'", ")", "\n", "try", ":", "\n", "            ", "f", "=", "2", "*", "precision", "*", "recall", "/", "(", "precision", "+", "recall", ")", "# F1-score", "\n", "", "except", ":", "\n", "            ", "f", "=", "0", "\n", "", "f", "[", "np", ".", "isnan", "(", "f", ")", ".", "nonzero", "(", ")", "[", "0", "]", "]", "=", "0", "\n", "auc_f", "=", "auc", "(", "thresds", "[", "10", ":", "191", "]", ",", "f", "[", "10", ":", "191", "]", ")", "/", "0.9", "\n", "\n", "print", "(", "'F1-score : %f'", "%", "(", "auc_f", ")", ")", "\n", "print", "(", "'%s ==> AUC_P %5f / AUC_R %5f / AUC_F %5f'", "%", "(", "dataset_name", ",", "auc_p", ",", "auc_r", ",", "auc_f", ")", ")", "\n", "print", "(", "'%s ==> AUC_P %5f / AUC_R %5f'", "%", "(", "dataset_name", ",", "auc_p", ",", "auc_r", ")", ")", "\n", "\n", "return", "auc_p", ",", "auc_r", ",", "auc_f", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.Evaluation_Semantic_Line.measure_AUC_A": [[54, 74], ["len", "eval_line_detection.create_eval_dict", "range", "eval_line_detection.Evaluation_Semantic_Line.eval_func.calculate_AUC", "print", "load_pickle", "[].cuda", "eval_line_detection.Evaluation_Semantic_Line.eval_func.measure_miou"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.create_eval_dict", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.calculate_AUC", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_func.Evaluation_Function.measure_miou"], ["", "def", "measure_AUC_A", "(", "self", ",", "datalist", ",", "mode", "=", "'test'", ",", "dataset_name", "=", "'SEL'", ",", "with_reg", "=", "True", ")", ":", "\n", "        ", "num", "=", "len", "(", "datalist", ")", "\n", "miou", ",", "match", "=", "create_eval_dict", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "            ", "data", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "mode", "+", "'_'", "+", "dataset_name", "+", "'/pickle/'", "+", "datalist", "[", "i", "]", "[", ":", "-", "4", "]", ")", "\n", "if", "with_reg", "==", "False", ":", "\n", "                ", "out", "=", "data", "[", "'out'", "]", "[", "'pri_cls'", "]", "\n", "", "elif", "with_reg", "==", "True", ":", "\n", "                ", "out", "=", "data", "[", "'out'", "]", "[", "'pri_reg'", "]", "\n", "", "gt", "=", "data", "[", "'gt'", "]", "[", "'pri'", "]", ".", "cuda", "(", ")", "\n", "\n", "miou", "[", "'a'", "]", "[", "i", "]", ",", "_", "=", "self", ".", "eval_func", ".", "measure_miou", "(", "out", ",", "gt", ")", "\n", "\n", "# performance", "\n", "", "auc_a", ",", "_", ",", "_", "=", "self", ".", "eval_func", ".", "calculate_AUC", "(", "miou", "=", "miou", ",", "metric", "=", "'accuracy'", ")", "\n", "\n", "print", "(", "'%s ==> AUC_A %5f'", "%", "(", "dataset_name", ",", "auc_a", ")", ")", "\n", "\n", "return", "auc_a", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.Evaluation_Semantic_Line.measure_EA_score": [[75, 114], ["len", "np.zeros", "np.zeros", "range", "print", "print", "print", "np.zeros.mean", "np.zeros.mean", "f.mean", "load_pickle", "to_np", "np.int32().tolist", "range", "np.zeros.mean", "np.zeros.mean", "f.mean", "evaluation_DHT.utils.caculate_precision", "evaluation_DHT.utils.caculate_recall", "np.int32", "to_np.tolist", "to_np.tolist", "np.isnan().nonzero", "to_np", "np.isnan"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.caculate_precision", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation_DHT.utils.caculate_recall", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np"], ["", "def", "measure_EA_score", "(", "self", ",", "datalist", ",", "mode", "=", "'test'", ",", "dataset_name", "=", "'SEL'", ",", "with_reg", "=", "True", ")", ":", "\n", "        ", "num", "=", "len", "(", "datalist", ")", "\n", "\n", "total_precision", "=", "np", ".", "zeros", "(", "99", ")", "\n", "total_recall", "=", "np", ".", "zeros", "(", "99", ")", "\n", "nums_precision", "=", "0", "\n", "nums_recall", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "            ", "data", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "mode", "+", "'_'", "+", "dataset_name", "+", "'/pickle/'", "+", "datalist", "[", "i", "]", "[", ":", "-", "4", "]", ")", "\n", "\n", "if", "with_reg", "==", "False", ":", "\n", "                ", "pred", "=", "data", "[", "'out'", "]", "[", "'mul_cls'", "]", "[", ":", ",", "[", "1", ",", "0", ",", "3", ",", "2", "]", "]", "\n", "", "elif", "with_reg", "==", "True", ":", "\n", "                ", "pred", "=", "data", "[", "'out'", "]", "[", "'mul_reg'", "]", "[", ":", ",", "[", "1", ",", "0", ",", "3", ",", "2", "]", "]", "\n", "", "pred", "=", "to_np", "(", "pred", ")", "\n", "gt", "=", "np", ".", "int32", "(", "to_np", "(", "data", "[", "'gt'", "]", "[", "'mul'", "]", ")", "[", ":", ",", "[", "1", ",", "0", ",", "3", ",", "2", "]", "]", ")", ".", "tolist", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "100", ")", ":", "\n", "                ", "p", ",", "num_p", "=", "caculate_precision", "(", "pred", ".", "tolist", "(", ")", ",", "gt", ",", "thresh", "=", "i", "*", "0.01", ")", "\n", "r", ",", "num_r", "=", "caculate_recall", "(", "pred", ".", "tolist", "(", ")", ",", "gt", ",", "thresh", "=", "i", "*", "0.01", ")", "\n", "total_precision", "[", "i", "-", "1", "]", "+=", "p", "\n", "total_recall", "[", "i", "-", "1", "]", "+=", "r", "\n", "", "nums_precision", "+=", "num_p", "\n", "nums_recall", "+=", "num_r", "\n", "\n", "", "total_recall", "=", "total_recall", "/", "nums_recall", "\n", "total_precision", "=", "total_precision", "/", "nums_precision", "\n", "f", "=", "2", "*", "total_recall", "*", "total_precision", "/", "(", "total_recall", "+", "total_precision", ")", "\n", "f", "[", "np", ".", "isnan", "(", "f", ")", ".", "nonzero", "(", ")", "[", "0", "]", "]", "=", "0", "\n", "print", "(", "'Mean P:'", ",", "total_precision", ".", "mean", "(", ")", ")", "\n", "print", "(", "'Mean R:'", ",", "total_recall", ".", "mean", "(", ")", ")", "\n", "print", "(", "'Mean F:'", ",", "f", ".", "mean", "(", ")", ")", "\n", "\n", "mean_p", "=", "total_precision", ".", "mean", "(", ")", "\n", "mean_r", "=", "total_recall", ".", "mean", "(", ")", "\n", "mean_f", "=", "f", ".", "mean", "(", ")", "\n", "\n", "return", "mean_p", ",", "mean_r", ",", "mean_f", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.Evaluation_Semantic_Line.measure_HIoU": [[115, 139], ["len", "eval_line_detection.Evaluation_Semantic_Line.eval_hiou.update_dataset_name", "range", "print", "load_pickle", "[].cuda", "eval_line_detection.Evaluation_Semantic_Line.eval_hiou.run", "type"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.update_dataset_name", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_hiou.Evaluation_HIoU.run"], ["", "def", "measure_HIoU", "(", "self", ",", "datalist", ",", "mode", "=", "'test'", ",", "dataset_name", "=", "'SEL'", ",", "with_reg", "=", "True", ")", ":", "\n", "        ", "num", "=", "len", "(", "datalist", ")", "\n", "\n", "IOU_total", ",", "F_total", "=", "0", ",", "0", "\n", "N", "=", "0", "\n", "self", ".", "eval_hiou", ".", "update_dataset_name", "(", "dataset_name", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "            ", "data", "=", "load_pickle", "(", "self", ".", "cfg", ".", "dir", "[", "'out'", "]", "+", "mode", "+", "'_'", "+", "dataset_name", "+", "'/pickle/'", "+", "datalist", "[", "i", "]", "[", ":", "-", "4", "]", ")", "\n", "if", "with_reg", "==", "False", ":", "\n", "                ", "out", "=", "data", "[", "'out'", "]", "[", "'mul_cls'", "]", "\n", "", "elif", "with_reg", "==", "True", ":", "\n", "                ", "out", "=", "data", "[", "'out'", "]", "[", "'mul_reg'", "]", "\n", "", "gt", "=", "data", "[", "'gt'", "]", "[", "'mul'", "]", ".", "cuda", "(", ")", "\n", "\n", "result", "=", "self", ".", "eval_hiou", ".", "run", "(", "out", ",", "gt", ",", "datalist", "[", "i", "]", ")", "\n", "if", "type", "(", "result", "[", "'IOU'", "]", ")", "==", "str", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "IOU_total", "+=", "result", "[", "'IOU'", "]", "\n", "N", "+=", "1", "\n", "\n", "", "", "IOU_avg", "=", "IOU_total", "/", "N", "\n", "print", "(", "'Avg HIoU : {}'", ".", "format", "(", "IOU_avg", ")", ")", "\n", "return", "IOU_avg", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.evaluation.eval_line_detection.create_eval_dict": [[140, 151], ["None"], "function", ["None"], ["", "", "def", "create_eval_dict", "(", ")", ":", "\n", "# a : accuracy / p : precision / r : recall", "\n", "\n", "    ", "miou", "=", "{", "'a'", ":", "{", "}", ",", "\n", "'p'", ":", "{", "}", ",", "\n", "'r'", ":", "{", "}", "}", "\n", "\n", "match", "=", "{", "'p'", ":", "{", "}", ",", "\n", "'r'", ":", "{", "}", "}", "\n", "\n", "return", "miou", ",", "match", "\n", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.__init__": [[5, 15], ["config.Config.settings_for_system", "config.Config.settings_for_path", "config.Config.settings_for_image_processing", "config.Config.settings_for_preprocessing", "config.Config.settings_for_dataloading", "config.Config.settings_for_visualization", "config.Config.settings_for_save"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_system", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_path", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_image_processing", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_preprocessing", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_dataloading", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_visualization", "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_save"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "settings_for_system", "(", ")", "\n", "self", ".", "settings_for_path", "(", ")", "\n", "\n", "self", ".", "settings_for_image_processing", "(", ")", "\n", "self", ".", "settings_for_dataloading", "(", ")", "\n", "self", ".", "settings_for_training", "(", ")", "\n", "self", ".", "settings_for_evaluation", "(", ")", "\n", "self", ".", "settings_for_hyperparam", "(", ")", "\n", "self", ".", "settings_for_thresd", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_system": [[16, 23], ["None"], "methods", ["None"], ["self", ".", "settings_for_visualization", "(", ")", "\n", "self", ".", "settings_for_save", "(", ")", "\n", "\n", "", "def", "settings_for_system", "(", "self", ")", ":", "\n", "        ", "self", ".", "gpu_id", "=", "\"0\"", "\n", "self", ".", "seed", "=", "123", "\n", "\n", "# GPU setting", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_path": [[24, 32], ["dict", "config.Config.settings_dataset_path", "os.path.dirname", "os.getcwd"], "methods", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_dataset_path"], ["os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "self", ".", "gpu_id", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "\n", "", "def", "settings_for_path", "(", "self", ")", ":", "\n", "        ", "self", ".", "dir", "=", "dict", "(", ")", "\n", "self", ".", "dir", "[", "'head'", "]", "=", "'--system root'", "# need to modify", "\n", "self", ".", "dir", "[", "'proj'", "]", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "getcwd", "(", ")", ")", "+", "'/'", "\n", "self", ".", "dir", "[", "'preprocess'", "]", "=", "dict", "(", ")", "\n", "self", ".", "dir", "[", "'preprocess'", "]", "[", "'SEL'", "]", "=", "self", ".", "dir", "[", "'head'", "]", "+", "'--preprocessed_data root /SEL/pickle/'", "# need to modify", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_dataset_path": [[33, 44], ["dict"], "methods", ["None"], ["self", ".", "dir", "[", "'preprocess'", "]", "[", "'SEL_Hard'", "]", "=", "'--preprocessed_data root /SEL_Hard/pickle/'", "# need to modify", "\n", "self", ".", "dir", "[", "'preprocess'", "]", "[", "'SL5K'", "]", "=", "self", ".", "dir", "[", "'head'", "]", "+", "'--preprocessed_data root /SL5K/pickle/'", "# need to modify", "\n", "\n", "self", ".", "settings_dataset_path", "(", ")", "\n", "\n", "self", ".", "dir", "[", "'pretrained_snet'", "]", "=", "self", ".", "dir", "[", "'head'", "]", "+", "'--Pretrained snet PATH'", "# need to modify", "\n", "\n", "self", ".", "dir", "[", "'out'", "]", "=", "self", ".", "dir", "[", "'proj'", "]", "+", "'output_hnet_{}/'", ".", "format", "(", "self", ".", "dataset_name", ")", "\n", "self", ".", "dir", "[", "'weight'", "]", "=", "self", ".", "dir", "[", "'out'", "]", "+", "'train/weight/'", "\n", "self", ".", "dir", "[", "'paper_weight'", "]", "=", "self", ".", "dir", "[", "'head'", "]", "+", "'--paper_weight root'", "# need to modify", "\n", "\n", "", "def", "settings_dataset_path", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_image_processing": [[45, 55], ["None"], "methods", ["None"], ["        ", "self", ".", "dataset_name", "=", "'SL5K'", "# ['SEL', 'SEL_Hard', 'SL5K']  # SL5K --> Nankai", "\n", "\n", "self", ".", "dir", "[", "'dataset'", "]", "=", "dict", "(", ")", "\n", "self", ".", "dir", "[", "'dataset'", "]", "[", "'SEL'", "]", "=", "self", ".", "dir", "[", "'head'", "]", "+", "'--dataset root /SEL/'", "\n", "self", ".", "dir", "[", "'dataset'", "]", "[", "'SEL_Hard'", "]", "=", "self", ".", "dir", "[", "'head'", "]", "+", "'--dataset root /SEL_Hard/'", "\n", "self", ".", "dir", "[", "'dataset'", "]", "[", "'SL5K'", "]", "=", "self", ".", "dir", "[", "'head'", "]", "+", "'--dataset root /SL5K/'", "\n", "self", ".", "dir", "[", "'dataset'", "]", "[", "'SEL_img'", "]", "=", "self", ".", "dir", "[", "'dataset'", "]", "[", "'SEL'", "]", "+", "'ICCV2017_JTLEE_images/'", "\n", "self", ".", "dir", "[", "'dataset'", "]", "[", "'SEL_Hard_img'", "]", "=", "self", ".", "dir", "[", "'dataset'", "]", "[", "'SEL_Hard'", "]", "+", "'images/'", "\n", "self", ".", "dir", "[", "'dataset'", "]", "[", "'SL5K_img'", "]", "=", "self", ".", "dir", "[", "'dataset'", "]", "[", "'SL5K'", "]", "\n", "\n", "", "def", "settings_for_image_processing", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_training": [[66, 82], ["None"], "methods", ["None"], ["", "def", "settings_for_training", "(", "self", ")", ":", "\n", "        ", "self", ".", "run_mode", "=", "'test_paper'", "# ['train', 'test', 'eval', 'test_paper']", "\n", "self", ".", "resume", "=", "False", "\n", "\n", "self", ".", "epochs", "=", "500", "\n", "self", ".", "batch_size", "=", "{", "'img'", ":", "1", "}", "\n", "self", ".", "max_iter", "=", "8", "\n", "self", ".", "max_iter_train", "=", "10", "\n", "self", ".", "max_num", "=", "10", "\n", "self", ".", "case_num", "=", "7", "\n", "\n", "# optimizer", "\n", "self", ".", "lr", "=", "1e-5", "\n", "self", ".", "milestones", "=", "[", "60", ",", "120", ",", "180", ",", "240", "]", "\n", "self", ".", "weight_decay", "=", "5e-4", "\n", "self", ".", "gamma", "=", "0.5", "\n", "self", ".", "loss_fn", "=", "'MSE'", "# ['BCE', 'MSE']", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_dataloading": [[56, 61], ["None"], "methods", ["None"], ["        ", "self", ".", "org_height", "=", "400", "\n", "self", ".", "org_width", "=", "400", "\n", "self", ".", "height", "=", "400", "\n", "self", ".", "width", "=", "400", "\n", "self", ".", "size", "=", "[", "self", ".", "width", ",", "self", ".", "height", ",", "self", ".", "width", ",", "self", ".", "height", "]", "\n", "self", ".", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_evaluation": [[96, 100], ["None"], "methods", ["None"], ["        ", "self", ".", "epoch_eval", "=", "-", "1", "\n", "self", ".", "eval_semantic_line", "=", "True", "\n", "\n", "self", ".", "sf_hiou", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_visualization": [[62, 65], ["None"], "methods", ["None"], ["self", ".", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "self", ".", "center_pt", "=", "[", "(", "self", ".", "width", "-", "1", ")", "/", "2", ",", "(", "self", ".", "height", "-", "1", ")", "/", "2", "]", "\n", "self", ".", "max_dist", "=", "self", ".", "width", "//", "2", "-", "20", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_save": [[66, 68], ["None"], "methods", ["None"], ["", "def", "settings_for_training", "(", "self", ")", ":", "\n", "        ", "self", ".", "run_mode", "=", "'test_paper'", "# ['train', 'test', 'eval', 'test_paper']", "\n", "self", ".", "resume", "=", "False", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_hyperparam": [[112, 119], ["None"], "methods", ["None"], ["self", ".", "disp_hiou", "=", "False", "\n", "\n", "", "def", "settings_for_save", "(", "self", ")", ":", "\n", "        ", "self", ".", "save_pickle", "=", "True", "\n", "\n", "", "def", "settings_for_hyperparam", "(", "self", ")", ":", "\n", "        ", "self", ".", "cluster_num", "=", "9", "\n", "self", ".", "max_offset_a", "=", "10", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_thresd": [[120, 122], ["None"], "methods", ["None"], ["self", ".", "max_offset_d", "=", "20", "\n", "self", ".", "region_dist", "=", "10", "# ['3', 'self.max_dist']", "\n", "self", ".", "adj_gaussian_sigma", "=", "10.0", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.options.config.Config.settings_for_preprocessing": [[69, 75], ["None"], "methods", ["None"], ["\n", "self", ".", "epochs", "=", "500", "\n", "self", ".", "batch_size", "=", "{", "'img'", ":", "1", "}", "\n", "self", ".", "max_iter", "=", "8", "\n", "self", ".", "max_iter_train", "=", "10", "\n", "self", ".", "max_num", "=", "10", "\n", "self", ".", "case_num", "=", "7", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomCrop.__init__": [[10, 15], ["isinstance", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomCrop.__call__": [[16, 30], ["list", "random.randint", "random.randint", "min", "min", "max", "max", "list.append"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "h", ",", "w", "=", "img_group", "[", "0", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "\n", "out_images", "=", "list", "(", ")", "\n", "h1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "h", "-", "th", ")", ")", "\n", "w1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "w", "-", "tw", ")", ")", "\n", "h2", "=", "min", "(", "h1", "+", "th", ",", "h", ")", "\n", "w2", "=", "min", "(", "w1", "+", "tw", ",", "w", ")", "\n", "\n", "for", "img", "in", "img_group", ":", "\n", "            ", "assert", "(", "img", ".", "shape", "[", "0", "]", "==", "h", "and", "img", ".", "shape", "[", "1", "]", "==", "w", ")", "\n", "out_images", ".", "append", "(", "img", "[", "h1", ":", "h2", ",", "w1", ":", "w2", ",", "...", "]", ")", "\n", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomCropRatio.__init__": [[32, 37], ["isinstance", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomCropRatio.__call__": [[38, 52], ["list", "random.randint", "random.randint", "min", "min", "max", "max", "list.append"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "h", ",", "w", "=", "img_group", "[", "0", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "tw", ",", "th", "=", "self", ".", "size", "\n", "\n", "out_images", "=", "list", "(", ")", "\n", "h1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "h", "-", "th", ")", ")", "\n", "w1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "w", "-", "tw", ")", ")", "\n", "h2", "=", "min", "(", "h1", "+", "th", ",", "h", ")", "\n", "w2", "=", "min", "(", "w1", "+", "tw", ",", "w", ")", "\n", "\n", "for", "img", "in", "img_group", ":", "\n", "            ", "assert", "(", "img", ".", "shape", "[", "0", "]", "==", "h", "and", "img", ".", "shape", "[", "1", "]", "==", "w", ")", "\n", "out_images", ".", "append", "(", "img", "[", "h1", ":", "h2", ",", "w1", ":", "w2", ",", "...", "]", ")", "\n", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupCenterCrop.__init__": [[55, 60], ["isinstance", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupCenterCrop.__call__": [[61, 75], ["list", "max", "max", "min", "min", "int", "int", "list.append"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "h", ",", "w", "=", "img_group", "[", "0", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "\n", "out_images", "=", "list", "(", ")", "\n", "h1", "=", "max", "(", "0", ",", "int", "(", "(", "h", "-", "th", ")", "/", "2", ")", ")", "\n", "w1", "=", "max", "(", "0", ",", "int", "(", "(", "w", "-", "tw", ")", "/", "2", ")", ")", "\n", "h2", "=", "min", "(", "h1", "+", "th", ",", "h", ")", "\n", "w2", "=", "min", "(", "w1", "+", "tw", ",", "w", ")", "\n", "\n", "for", "img", "in", "img_group", ":", "\n", "            ", "assert", "(", "img", ".", "shape", "[", "0", "]", "==", "h", "and", "img", ".", "shape", "[", "1", "]", "==", "w", ")", "\n", "out_images", ".", "append", "(", "img", "[", "h1", ":", "h2", ",", "w1", ":", "w2", ",", "...", "]", ")", "\n", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomPad.__init__": [[78, 84], ["isinstance", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "padding", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "self", ".", "padding", "=", "padding", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomPad.__call__": [[85, 102], ["list", "random.randint", "random.randint", "max", "max", "zip", "len", "len", "max", "max", "list.append", "cv2.copyMakeBorder", "len", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "assert", "(", "len", "(", "self", ".", "padding", ")", "==", "len", "(", "img_group", ")", ")", "\n", "h", ",", "w", "=", "img_group", "[", "0", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "\n", "out_images", "=", "list", "(", ")", "\n", "h1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "th", "-", "h", ")", ")", "\n", "w1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "tw", "-", "w", ")", ")", "\n", "h2", "=", "max", "(", "th", "-", "h", "-", "h1", ",", "0", ")", "\n", "w2", "=", "max", "(", "tw", "-", "w", "-", "w1", ",", "0", ")", "\n", "\n", "for", "img", ",", "padding", "in", "zip", "(", "img_group", ",", "self", ".", "padding", ")", ":", "\n", "            ", "assert", "(", "img", ".", "shape", "[", "0", "]", "==", "h", "and", "img", ".", "shape", "[", "1", "]", "==", "w", ")", "\n", "out_images", ".", "append", "(", "cv2", ".", "copyMakeBorder", "(", "img", ",", "h1", ",", "h2", ",", "w1", ",", "w2", ",", "cv2", ".", "BORDER_CONSTANT", ",", "value", "=", "padding", ")", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", ">", "len", "(", "out_images", "[", "-", "1", "]", ".", "shape", ")", ":", "\n", "                ", "out_images", "[", "-", "1", "]", "=", "out_images", "[", "-", "1", "]", "[", "...", ",", "np", ".", "newaxis", "]", "# single channel image", "\n", "", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupCenterPad.__init__": [[105, 111], ["isinstance", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "padding", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "self", ".", "padding", "=", "padding", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupCenterPad.__call__": [[112, 129], ["list", "max", "max", "max", "max", "zip", "len", "len", "int", "int", "list.append", "cv2.copyMakeBorder", "len", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "assert", "(", "len", "(", "self", ".", "padding", ")", "==", "len", "(", "img_group", ")", ")", "\n", "h", ",", "w", "=", "img_group", "[", "0", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "\n", "out_images", "=", "list", "(", ")", "\n", "h1", "=", "max", "(", "0", ",", "int", "(", "(", "th", "-", "h", ")", "/", "2", ")", ")", "\n", "w1", "=", "max", "(", "0", ",", "int", "(", "(", "tw", "-", "w", ")", "/", "2", ")", ")", "\n", "h2", "=", "max", "(", "th", "-", "h", "-", "h1", ",", "0", ")", "\n", "w2", "=", "max", "(", "tw", "-", "w", "-", "w1", ",", "0", ")", "\n", "\n", "for", "img", ",", "padding", "in", "zip", "(", "img_group", ",", "self", ".", "padding", ")", ":", "\n", "            ", "assert", "(", "img", ".", "shape", "[", "0", "]", "==", "h", "and", "img", ".", "shape", "[", "1", "]", "==", "w", ")", "\n", "out_images", ".", "append", "(", "cv2", ".", "copyMakeBorder", "(", "img", ",", "h1", ",", "h2", ",", "w1", ",", "w2", ",", "cv2", ".", "BORDER_CONSTANT", ",", "value", "=", "padding", ")", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", ">", "len", "(", "out_images", "[", "-", "1", "]", ".", "shape", ")", ":", "\n", "                ", "out_images", "[", "-", "1", "]", "=", "out_images", "[", "-", "1", "]", "[", "...", ",", "np", ".", "newaxis", "]", "# single channel image", "\n", "", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupConcerPad.__init__": [[132, 138], ["isinstance", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "padding", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "self", ".", "padding", "=", "padding", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupConcerPad.__call__": [[139, 156], ["list", "max", "max", "zip", "len", "len", "list.append", "cv2.copyMakeBorder", "len", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "assert", "(", "len", "(", "self", ".", "padding", ")", "==", "len", "(", "img_group", ")", ")", "\n", "h", ",", "w", "=", "img_group", "[", "0", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "\n", "out_images", "=", "list", "(", ")", "\n", "h1", "=", "0", "\n", "w1", "=", "0", "\n", "h2", "=", "max", "(", "th", "-", "h", "-", "h1", ",", "0", ")", "\n", "w2", "=", "max", "(", "tw", "-", "w", "-", "w1", ",", "0", ")", "\n", "\n", "for", "img", ",", "padding", "in", "zip", "(", "img_group", ",", "self", ".", "padding", ")", ":", "\n", "            ", "assert", "(", "img", ".", "shape", "[", "0", "]", "==", "h", "and", "img", ".", "shape", "[", "1", "]", "==", "w", ")", "\n", "out_images", ".", "append", "(", "cv2", ".", "copyMakeBorder", "(", "img", ",", "h1", ",", "h2", ",", "w1", ",", "w2", ",", "cv2", ".", "BORDER_CONSTANT", ",", "value", "=", "padding", ")", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", ">", "len", "(", "out_images", "[", "-", "1", "]", ".", "shape", ")", ":", "\n", "                ", "out_images", "[", "-", "1", "]", "=", "out_images", "[", "-", "1", "]", "[", "...", ",", "np", ".", "newaxis", "]", "# single channel image", "\n", "", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomScaleNew.__init__": [[158, 161], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", "=", "(", "976", ",", "208", ")", ",", "interpolation", "=", "(", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_NEAREST", ")", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomScaleNew.__call__": [[162, 171], ["list", "zip", "len", "len", "list.append", "cv2.resize", "len", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "assert", "(", "len", "(", "self", ".", "interpolation", ")", "==", "len", "(", "img_group", ")", ")", "\n", "scale_w", ",", "scale_h", "=", "self", ".", "size", "[", "0", "]", "*", "1.0", "/", "1640", ",", "self", ".", "size", "[", "1", "]", "*", "1.0", "/", "350", "\n", "out_images", "=", "list", "(", ")", "\n", "for", "img", ",", "interpolation", "in", "zip", "(", "img_group", ",", "self", ".", "interpolation", ")", ":", "\n", "            ", "out_images", ".", "append", "(", "cv2", ".", "resize", "(", "img", ",", "None", ",", "fx", "=", "scale_w", ",", "fy", "=", "scale_h", ",", "interpolation", "=", "interpolation", ")", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", ">", "len", "(", "out_images", "[", "-", "1", "]", ".", "shape", ")", ":", "\n", "                ", "out_images", "[", "-", "1", "]", "=", "out_images", "[", "-", "1", "]", "[", "...", ",", "np", ".", "newaxis", "]", "# single channel image", "\n", "", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomScale.__init__": [[175, 178], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", "=", "(", "0.5", ",", "1.5", ")", ",", "interpolation", "=", "(", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_NEAREST", ")", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomScale.__call__": [[179, 188], ["random.uniform", "list", "zip", "len", "len", "list.append", "cv2.resize", "len", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "assert", "(", "len", "(", "self", ".", "interpolation", ")", "==", "len", "(", "img_group", ")", ")", "\n", "scale", "=", "random", ".", "uniform", "(", "self", ".", "size", "[", "0", "]", ",", "self", ".", "size", "[", "1", "]", ")", "\n", "out_images", "=", "list", "(", ")", "\n", "for", "img", ",", "interpolation", "in", "zip", "(", "img_group", ",", "self", ".", "interpolation", ")", ":", "\n", "            ", "out_images", ".", "append", "(", "cv2", ".", "resize", "(", "img", ",", "None", ",", "fx", "=", "scale", ",", "fy", "=", "scale", ",", "interpolation", "=", "interpolation", ")", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", ">", "len", "(", "out_images", "[", "-", "1", "]", ".", "shape", ")", ":", "\n", "                ", "out_images", "[", "-", "1", "]", "=", "out_images", "[", "-", "1", "]", "[", "...", ",", "np", ".", "newaxis", "]", "# single channel image", "\n", "", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomMultiScale.__init__": [[190, 193], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", "=", "(", "0.5", ",", "1.5", ")", ",", "interpolation", "=", "(", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_NEAREST", ")", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomMultiScale.__call__": [[194, 204], ["list", "len", "len", "zip", "list.append", "cv2.resize", "len", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "assert", "(", "len", "(", "self", ".", "interpolation", ")", "==", "len", "(", "img_group", ")", ")", "\n", "scales", "=", "[", "0.5", ",", "1.0", ",", "1.5", "]", "# random.uniform(self.size[0], self.size[1])", "\n", "out_images", "=", "list", "(", ")", "\n", "for", "scale", "in", "scales", ":", "\n", "            ", "for", "img", ",", "interpolation", "in", "zip", "(", "img_group", ",", "self", ".", "interpolation", ")", ":", "\n", "                ", "out_images", ".", "append", "(", "cv2", ".", "resize", "(", "img", ",", "None", ",", "fx", "=", "scale", ",", "fy", "=", "scale", ",", "interpolation", "=", "interpolation", ")", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", ">", "len", "(", "out_images", "[", "-", "1", "]", ".", "shape", ")", ":", "\n", "                    ", "out_images", "[", "-", "1", "]", "=", "out_images", "[", "-", "1", "]", "[", "...", ",", "np", ".", "newaxis", "]", "# single channel image", "\n", "", "", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomScaleRatio.__init__": [[206, 210], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", "=", "(", "680", ",", "762", ",", "562", ",", "592", ")", ",", "interpolation", "=", "(", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_NEAREST", ")", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "self", ".", "origin_id", "=", "[", "0", ",", "1360", ",", "580", ",", "768", ",", "255", ",", "300", ",", "680", ",", "710", ",", "312", ",", "1509", ",", "800", ",", "1377", ",", "880", ",", "910", ",", "1188", ",", "128", ",", "960", ",", "1784", ",", "1414", ",", "1150", ",", "512", ",", "1162", ",", "950", ",", "750", ",", "1575", ",", "708", ",", "2111", ",", "1848", ",", "1071", ",", "1204", ",", "892", ",", "639", ",", "2040", ",", "1524", ",", "832", ",", "1122", ",", "1224", ",", "2295", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomScaleRatio.__call__": [[211, 230], ["random.randint", "random.randint", "list", "list.append", "cv2.resize", "origin_label.astype.astype.astype", "new_label.astype.astype.astype", "range", "list.append", "len", "len", "cv2.resize", "numpy.ones", "numpy.unique"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "assert", "(", "len", "(", "self", ".", "interpolation", ")", "==", "len", "(", "img_group", ")", ")", "\n", "w_scale", "=", "random", ".", "randint", "(", "self", ".", "size", "[", "0", "]", ",", "self", ".", "size", "[", "1", "]", ")", "\n", "h_scale", "=", "random", ".", "randint", "(", "self", ".", "size", "[", "2", "]", ",", "self", ".", "size", "[", "3", "]", ")", "\n", "h", ",", "w", ",", "_", "=", "img_group", "[", "0", "]", ".", "shape", "\n", "out_images", "=", "list", "(", ")", "\n", "out_images", ".", "append", "(", "cv2", ".", "resize", "(", "img_group", "[", "0", "]", ",", "None", ",", "fx", "=", "w_scale", "*", "1.0", "/", "w", ",", "fy", "=", "h_scale", "*", "1.0", "/", "h", ",", "interpolation", "=", "self", ".", "interpolation", "[", "0", "]", ")", ")", "# fx=w_scale*1.0/w, fy=h_scale*1.0/h", "\n", "### process label map ###", "\n", "origin_label", "=", "cv2", ".", "resize", "(", "img_group", "[", "1", "]", ",", "None", ",", "fx", "=", "w_scale", "*", "1.0", "/", "w", ",", "fy", "=", "h_scale", "*", "1.0", "/", "h", ",", "interpolation", "=", "self", ".", "interpolation", "[", "1", "]", ")", "\n", "origin_label", "=", "origin_label", ".", "astype", "(", "int", ")", "\n", "label", "=", "origin_label", "[", ":", ",", ":", ",", "0", "]", "*", "5", "+", "origin_label", "[", ":", ",", ":", ",", "1", "]", "*", "3", "+", "origin_label", "[", ":", ",", ":", ",", "2", "]", "\n", "new_label", "=", "np", ".", "ones", "(", "label", ".", "shape", ")", "*", "100", "\n", "new_label", "=", "new_label", ".", "astype", "(", "int", ")", "\n", "for", "cnt", "in", "range", "(", "37", ")", ":", "\n", "            ", "new_label", "=", "(", "label", "==", "self", ".", "origin_id", "[", "cnt", "]", ")", "*", "(", "cnt", "-", "100", ")", "+", "new_label", "\n", "", "new_label", "=", "(", "label", "==", "self", ".", "origin_id", "[", "37", "]", ")", "*", "(", "36", "-", "100", ")", "+", "new_label", "\n", "assert", "(", "100", "not", "in", "np", ".", "unique", "(", "new_label", ")", ")", "\n", "out_images", ".", "append", "(", "new_label", ")", "\n", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomRotation.__init__": [[232, 236], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "degree", "=", "(", "-", "10", ",", "10", ")", ",", "interpolation", "=", "(", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_NEAREST", ")", ",", "padding", "=", "None", ")", ":", "\n", "        ", "self", ".", "degree", "=", "degree", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "self", ".", "padding", "=", "padding", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomRotation.__call__": [[237, 253], ["random.random", "len", "len", "random.uniform", "cv2.getRotationMatrix2D", "list", "zip", "list.append", "cv2.warpAffine", "len", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "assert", "(", "len", "(", "self", ".", "interpolation", ")", "==", "len", "(", "img_group", ")", ")", "\n", "v", "=", "random", ".", "random", "(", ")", "\n", "if", "v", "<", "0.5", ":", "\n", "            ", "degree", "=", "random", ".", "uniform", "(", "self", ".", "degree", "[", "0", "]", ",", "self", ".", "degree", "[", "1", "]", ")", "\n", "h", ",", "w", "=", "img_group", "[", "0", "]", ".", "shape", "[", "0", ":", "2", "]", "\n", "center", "=", "(", "w", "/", "2", ",", "h", "/", "2", ")", "\n", "map_matrix", "=", "cv2", ".", "getRotationMatrix2D", "(", "center", ",", "degree", ",", "1.0", ")", "\n", "out_images", "=", "list", "(", ")", "\n", "for", "img", ",", "interpolation", ",", "padding", "in", "zip", "(", "img_group", ",", "self", ".", "interpolation", ",", "self", ".", "padding", ")", ":", "\n", "                ", "out_images", ".", "append", "(", "cv2", ".", "warpAffine", "(", "img", ",", "map_matrix", ",", "(", "w", ",", "h", ")", ",", "flags", "=", "interpolation", ",", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "borderValue", "=", "padding", ")", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", ">", "len", "(", "out_images", "[", "-", "1", "]", ".", "shape", ")", ":", "\n", "                    ", "out_images", "[", "-", "1", "]", "=", "out_images", "[", "-", "1", "]", "[", "...", ",", "np", ".", "newaxis", "]", "# single channel image", "\n", "", "", "return", "out_images", "\n", "", "else", ":", "\n", "            ", "return", "img_group", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomBlur.__init__": [[256, 258], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "applied", ")", ":", "\n", "        ", "self", ".", "applied", "=", "applied", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomBlur.__call__": [[259, 273], ["random.random", "len", "len", "zip", "out_images.append", "cv2.GaussianBlur", "len", "len", "random.uniform"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "assert", "(", "len", "(", "self", ".", "applied", ")", "==", "len", "(", "img_group", ")", ")", "\n", "v", "=", "random", ".", "random", "(", ")", "\n", "if", "v", "<", "0.5", ":", "\n", "            ", "out_images", "=", "[", "]", "\n", "for", "img", ",", "a", "in", "zip", "(", "img_group", ",", "self", ".", "applied", ")", ":", "\n", "                ", "if", "a", ":", "\n", "                    ", "img", "=", "cv2", ".", "GaussianBlur", "(", "img", ",", "(", "5", ",", "5", ")", ",", "random", ".", "uniform", "(", "1e-6", ",", "0.6", ")", ")", "\n", "", "out_images", ".", "append", "(", "img", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", ">", "len", "(", "out_images", "[", "-", "1", "]", ".", "shape", ")", ":", "\n", "                    ", "out_images", "[", "-", "1", "]", "=", "out_images", "[", "-", "1", "]", "[", "...", ",", "np", ".", "newaxis", "]", "# single channel image", "\n", "", "", "return", "out_images", "\n", "", "else", ":", "\n", "            ", "return", "img_group", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomHorizontalFlip.__init__": [[279, 281], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "is_flow", "=", "False", ")", ":", "\n", "        ", "self", ".", "is_flow", "=", "is_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupRandomHorizontalFlip.__call__": [[282, 292], ["random.random", "numpy.fliplr", "range", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ",", "is_flow", "=", "False", ")", ":", "\n", "        ", "v", "=", "random", ".", "random", "(", ")", "\n", "if", "v", "<", "0.5", ":", "\n", "            ", "out_images", "=", "[", "np", ".", "fliplr", "(", "img", ")", "for", "img", "in", "img_group", "]", "\n", "if", "self", ".", "is_flow", ":", "\n", "                ", "for", "i", "in", "range", "(", "0", ",", "len", "(", "out_images", ")", ",", "2", ")", ":", "\n", "                    ", "out_images", "[", "i", "]", "=", "-", "out_images", "[", "i", "]", "# invert flow pixel values when flipping", "\n", "", "", "return", "out_images", "\n", "", "else", ":", "\n", "            ", "return", "img_group", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__init__": [[295, 298], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.transforms.GroupNormalize.__call__": [[299, 315], ["list", "zip", "list.append", "len", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "out_images", "=", "list", "(", ")", "\n", "for", "img", ",", "m", ",", "s", "in", "zip", "(", "img_group", ",", "self", ".", "mean", ",", "self", ".", "std", ")", ":", "\n", "            ", "if", "len", "(", "m", ")", "==", "1", ":", "\n", "                ", "img", "=", "img", "-", "np", ".", "array", "(", "m", ")", "# single channel image", "\n", "img", "=", "img", "/", "np", ".", "array", "(", "s", ")", "\n", "", "else", ":", "\n", "                ", "img", "=", "img", "-", "np", ".", "array", "(", "m", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", "...", "]", "\n", "img", "=", "img", "/", "np", ".", "array", "(", "s", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", "...", "]", "\n", "", "out_images", ".", "append", "(", "img", ")", "\n", "\n", "# cv2.imshow('img', (out_images[0] + np.array(self.mean[0])[np.newaxis, np.newaxis, ...]).astype(np.uint8))", "\n", "# cv2.imshow('label', (out_images[1] * 100).astype(np.uint8))", "\n", "# print(np.unique(out_images[1]))", "\n", "# cv2.waitKey()", "\n", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.filtering.candidate_line_filtering": [[3, 29], ["numpy.sqrt", "numpy.sum", "numpy.square", "abs", "abs", "abs", "abs"], "function", ["None"], ["def", "candidate_line_filtering", "(", "pts", ",", "size", ",", "thresd_boundary", ",", "thresd_length", ")", ":", "\n", "# exclude outlier line: 1. short length", "\n", "#                       2. distance from image boundary", "\n", "\n", "    ", "check", "=", "0", "\n", "\n", "pt_1", "=", "pts", "[", ":", "2", "]", "\n", "pt_2", "=", "pts", "[", "2", ":", "]", "\n", "\n", "length", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "pt_1", "-", "pt_2", ")", ")", ")", "\n", "\n", "# short length", "\n", "if", "length", "<", "thresd_length", ":", "\n", "        ", "check", "+=", "1", "\n", "\n", "# boundary", "\n", "", "if", "(", "pt_1", "[", "0", "]", "<", "thresd_boundary", "and", "pt_2", "[", "0", "]", "<", "thresd_boundary", ")", ":", "\n", "        ", "check", "+=", "1", "\n", "", "if", "(", "pt_1", "[", "1", "]", "<", "thresd_boundary", "and", "pt_2", "[", "1", "]", "<", "thresd_boundary", ")", ":", "\n", "        ", "check", "+=", "1", "\n", "", "if", "(", "abs", "(", "pt_1", "[", "0", "]", "-", "size", "[", "1", "]", ")", "<", "thresd_boundary", "and", "abs", "(", "pt_2", "[", "0", "]", "-", "size", "[", "1", "]", ")", "<", "thresd_boundary", ")", ":", "\n", "        ", "check", "+=", "1", "\n", "", "if", "(", "abs", "(", "pt_1", "[", "1", "]", "-", "size", "[", "0", "]", ")", "<", "thresd_boundary", "and", "abs", "(", "pt_2", "[", "1", "]", "-", "size", "[", "0", "]", ")", "<", "thresd_boundary", ")", ":", "\n", "        ", "check", "+=", "1", "\n", "\n", "", "return", "check", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_tensor": [[5, 7], ["torch.from_numpy().cuda", "torch.from_numpy"], "function", ["None"], ["def", "to_tensor", "(", "data", ")", ":", "\n", "    ", "return", "torch", ".", "from_numpy", "(", "data", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.to_np": [[8, 10], ["data.cpu().numpy", "data.cpu"], "function", ["None"], ["", "def", "to_np", "(", "data", ")", ":", "\n", "    ", "return", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.convertor.find_endpoints": [[12, 61], ["numpy.float32", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append", "pts.append"], "function", ["None"], ["", "def", "find_endpoints", "(", "data", ",", "size", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "data", "[", "0", "]", ",", "data", "[", "1", "]", ",", "data", "[", "2", "]", ",", "data", "[", "3", "]", "\n", "\n", "pts", "=", "[", "]", "\n", "if", "x1", "-", "x2", "!=", "0", ":", "\n", "        ", "a", "=", "(", "y1", "-", "y2", ")", "/", "(", "x1", "-", "x2", ")", "\n", "\n", "b", "=", "-", "1", "\n", "c", "=", "-", "1", "*", "a", "*", "x1", "+", "y1", "\n", "\n", "# x = 0", "\n", "cx", "=", "0", "\n", "cy", "=", "a", "*", "0", "+", "c", "\n", "\n", "if", "cy", ">=", "0", "and", "cy", "<=", "size", "[", "1", "]", ":", "\n", "            ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "\n", "# x = size[0]", "\n", "", "cx", "=", "size", "[", "0", "]", "\n", "cy", "=", "a", "*", "size", "[", "0", "]", "+", "c", "\n", "if", "cy", ">=", "0", "and", "cy", "<=", "size", "[", "1", "]", ":", "\n", "            ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "\n", "# y = 0", "\n", "\n", "", "if", "y1", "!=", "y2", ":", "\n", "\n", "            ", "cx", "=", "(", "0", "-", "c", ")", "/", "a", "\n", "cy", "=", "0", "\n", "if", "cx", ">=", "0", "and", "cx", "<=", "size", "[", "0", "]", ":", "\n", "                ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "\n", "# y = size[1]", "\n", "", "cx", "=", "(", "size", "[", "1", "]", "-", "c", ")", "/", "a", "\n", "cy", "=", "size", "[", "1", "]", "\n", "if", "cx", ">=", "0", "and", "cx", "<=", "size", "[", "0", "]", ":", "\n", "                ", "pts", ".", "append", "(", "cx", ")", "\n", "pts", ".", "append", "(", "cy", ")", "\n", "", "", "", "else", ":", "\n", "        ", "if", "x1", ">=", "0", "and", "x1", "<=", "size", "[", "0", "]", ":", "\n", "            ", "pts", ".", "append", "(", "x1", ")", "\n", "pts", ".", "append", "(", "0", ")", "\n", "pts", ".", "append", "(", "x1", ")", "\n", "pts", ".", "append", "(", "size", "[", "1", "]", ")", "\n", "\n", "", "", "return", "np", ".", "float32", "(", "pts", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir": [[4, 7], ["os.path.exists", "os.makedirs"], "function", ["None"], ["def", "mkdir", "(", "path", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "==", "False", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.save_pickle": [[9, 19], ["record.mkdir", "open", "pickle.dump"], "function", ["home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.mkdir"], ["", "", "def", "save_pickle", "(", "dir_name", ",", "file_name", ",", "data", ")", ":", "\n", "\n", "    ", "'''\n    :param file_path: ...\n    :param data:\n    :return:\n    '''", "\n", "mkdir", "(", "dir_name", ")", "\n", "with", "open", "(", "dir_name", "+", "file_name", "+", "'.pickle'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "data", ",", "f", ",", "protocol", "=", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.record.load_pickle": [[21, 26], ["open", "pickle.load"], "function", ["None"], ["", "", "def", "load_pickle", "(", "file_path", ")", ":", "\n", "    ", "with", "open", "(", "file_path", "+", "'.pickle'", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.score.overlap_score": [[3, 14], ["torch.sum", "torch.sum"], "function", ["None"], ["def", "overlap_score", "(", "ref_mask", ",", "tar_mask", ")", ":", "\n", "\n", "    ", "'''\n    :param ref_img: HxW\n    :return:\n    '''", "\n", "\n", "score", "=", "ref_mask", "*", "tar_mask", "\n", "score", "=", "torch", ".", "sum", "(", "score", ",", "dim", "=", "(", "1", ",", "2", ")", ")", "/", "torch", ".", "sum", "(", "ref_mask", ",", "dim", "=", "(", "0", ",", "1", ")", ")", "\n", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.dongkwonjin_Semantic-Line-MWCS.utils.mask.line_mask": [[5, 22], ["range", "numpy.array", "numpy.zeros", "cv2.line", "np.array.append"], "function", ["None"], ["def", "line_mask", "(", "line_pts", ",", "size", ")", ":", "\n", "# pts - [n, 4]", "\n", "    ", "num", "=", "line_pts", ".", "shape", "[", "0", "]", "\n", "\n", "data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "\n", "        ", "pt_1", "=", "line_pts", "[", "i", ",", "0", "]", ",", "line_pts", "[", "i", ",", "1", "]", "\n", "pt_2", "=", "line_pts", "[", "i", ",", "2", "]", ",", "line_pts", "[", "i", ",", "3", "]", "\n", "\n", "line_mask", "=", "np", ".", "zeros", "(", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ",", "np", ".", "int32", ")", "\n", "line_mask", "=", "cv2", ".", "line", "(", "line_mask", ",", "pt_1", ",", "pt_2", ",", "1", ",", "2", ")", "\n", "\n", "data", ".", "append", "(", "line_mask", ")", "\n", "\n", "", "data", "=", "np", ".", "array", "(", "data", ")", "\n", "return", "data", "\n", "\n"]]}