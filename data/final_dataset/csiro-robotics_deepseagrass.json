{"home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.data_loader.DataGenerator.__init__": [[18, 27], ["data_loader.DataGenerator.on_epoch_end"], "methods", ["home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference_289x260.DataGenerator.on_epoch_end"], ["def", "__init__", "(", "self", ",", "images_paths", ",", "labels", ",", "train_path", ",", "batch_size", "=", "32", ",", "num_classes", "=", "4", ",", "shuffle", "=", "False", ",", "augment", "=", "False", ",", "validate", "=", "False", ")", ":", "\n", "        ", "self", ".", "labels", "=", "labels", "# array of labels", "\n", "self", ".", "images_paths", "=", "images_paths", "# array of image paths", "\n", "self", ".", "batch_size", "=", "batch_size", "# batch size", "\n", "self", ".", "train_path", "=", "train_path", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "shuffle", "=", "shuffle", "# shuffle bool", "\n", "self", ".", "augment", "=", "augment", "# augment data bool", "\n", "self", ".", "on_epoch_end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.data_loader.DataGenerator.__len__": [[28, 31], ["int", "numpy.floor", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "'Denotes the number of batches per epoch'", "\n", "return", "int", "(", "np", ".", "floor", "(", "len", "(", "self", ".", "images_paths", ")", "/", "self", ".", "batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.data_loader.DataGenerator.on_epoch_end": [[32, 37], ["numpy.arange", "len", "numpy.random.shuffle"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ")", ":", "\n", "        ", "'Updates indexes after each epoch'", "\n", "self", ".", "indexes", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "images_paths", ")", ")", "\n", "if", "self", ".", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "self", ".", "indexes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.data_loader.DataGenerator.__getitem__": [[38, 55], ["numpy.array", "data_loader.DataGenerator.astype", "numpy.array", "tensorflow.keras.utils.to_categorical", "cv2.cvtColor", "data_loader.DataGenerator.augmentor", "cv2.imread", "tensorflow.keras.applications.vgg16.preprocess_input", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.data_loader.DataGenerator.augmentor"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "'Generate one batch of data'", "\n", "\n", "indexes", "=", "self", ".", "indexes", "[", "index", "*", "self", ".", "batch_size", ":", "(", "index", "+", "1", ")", "*", "self", ".", "batch_size", "]", "\n", "\n", "images", "=", "[", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "train_path", ",", "self", ".", "images_paths", "[", "k", "]", ")", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "for", "k", "in", "indexes", "]", "\n", "\n", "# Preprocess and augment data", "\n", "if", "self", ".", "augment", "==", "True", ":", "\n", "            ", "images", "=", "self", ".", "augmentor", "(", "images", ")", "\n", "\n", "", "images", "=", "np", ".", "array", "(", "images", ")", "\n", "images", "=", "images", ".", "astype", "(", "np", ".", "float32", ")", "\n", "images", "=", "np", ".", "array", "(", "[", "preprocess_input", "(", "img", ")", "for", "img", "in", "images", "]", ")", "\n", "labels", "=", "[", "self", ".", "labels", "[", "k", "]", "for", "k", "in", "indexes", "]", "\n", "labels", "=", "to_categorical", "(", "labels", ",", "num_classes", "=", "self", ".", "num_classes", ",", "dtype", "=", "'int8'", ")", "\n", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.data_loader.DataGenerator.augmentor": [[56, 79], ["imgaug.Sequential", "imgaug.Sequential", "imgaug.Sequential.augment_images", "imgaug.Sometimes", "imgaug.Sometimes", "imgaug.Sometimes", "imgaug.Sometimes", "often", "sometimes", "sometimes", "sometimes", "imgaug.WithChannels", "imgaug.WithChannels", "imgaug.LinearContrast", "imgaug.LinearContrast", "imgaug.AddToBrightness", "imgaug.AddToBrightness", "imgaug.GaussianBlur", "imgaug.GaussianBlur", "imgaug.Add", "imgaug.Add"], "methods", ["None"], ["", "def", "augmentor", "(", "self", ",", "images", ")", ":", "\n", "        ", "'Apply data augmentation'", "\n", "sometimes", "=", "lambda", "aug", ":", "iaa", ".", "Sometimes", "(", "0.5", ",", "aug", ")", "\n", "often", "=", "lambda", "aug", ":", "iaa", ".", "Sometimes", "(", "0.7", ",", "aug", ")", "\n", "\n", "seq", "=", "iaa", ".", "Sequential", "(", "[", "\n", "# Best Augmentation Strategy: Colour Augmentation", "\n", "often", "(", "\n", "iaa", ".", "WithChannels", "(", "0", ",", "iaa", ".", "Add", "(", "(", "-", "30", ",", "30", ")", ")", ")", "# RGB = 0,1,2", "\n", ")", ",", "\n", "sometimes", "(", "\n", "iaa", ".", "LinearContrast", "(", "(", "0.5", ",", "2.0", ")", ")", "\n", ")", ",", "\n", "sometimes", "(", "\n", "iaa", ".", "AddToBrightness", "(", "(", "-", "30", ",", "30", ")", ")", "\n", ")", ",", "\n", "sometimes", "(", "\n", "iaa", ".", "GaussianBlur", "(", "sigma", "=", "(", "0", ",", "0.5", ")", ")", "\n", ")", "\n", "\n", "]", ",", "random_order", "=", "True", ")", "# apply augmenters in random order", "\n", "\n", "return", "seq", ".", "augment_images", "(", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.data_loader.loadData": [[80, 110], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "range", "range", "data_loader.DataGenerator", "data_loader.DataGenerator", "len", "range", "len", "range", "len", "numpy.append", "numpy.append", "len", "numpy.append", "numpy.append", "len", "len", "os.listdir", "os.path.join", "os.listdir", "os.path.join", "os.path.join", "re.match", "f.endswith", "os.path.join", "re.match", "f.endswith"], "function", ["None"], ["", "", "def", "loadData", "(", "CLASSES", ",", "TRAIN_PATH", ",", "VAL_PATH", ",", "BATCH_SIZE", ")", ":", "\n", "    ", "'Loads data into generator object'", "\n", "train_images_array", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "train_labels_array", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "val_images_array", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "val_labels_array", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "\n", "# Need to obtain the image_paths and labels for the dataset", "\n", "for", "category", "in", "range", "(", "len", "(", "CLASSES", ")", ")", ":", "\n", "        ", "img_list", "=", "[", "f", "for", "f", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "TRAIN_PATH", ",", "CLASSES", "[", "category", "]", ")", ")", "if", "(", "re", ".", "match", "(", "r'^(?![\\._]).*$'", ",", "f", ")", "and", "f", ".", "endswith", "(", "\".jpg\"", ")", ")", "]", "# filter out the apple files", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "img_list", ")", ")", ":", "\n", "            ", "train_images_array", "=", "np", ".", "append", "(", "train_images_array", ",", "os", ".", "path", ".", "join", "(", "CLASSES", "[", "category", "]", ",", "img_list", "[", "i", "]", ")", ")", "\n", "train_labels_array", "=", "np", ".", "append", "(", "train_labels_array", ",", "category", ")", "\n", "\n", "", "", "for", "category", "in", "range", "(", "len", "(", "CLASSES", ")", ")", ":", "\n", "        ", "img_list", "=", "[", "f", "for", "f", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "VAL_PATH", ",", "CLASSES", "[", "category", "]", ")", ")", "if", "(", "re", ".", "match", "(", "r'^(?![\\._]).*$'", ",", "f", ")", "and", "f", ".", "endswith", "(", "\".jpg\"", ")", ")", "]", "# filter out the apple files", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "img_list", ")", ")", ":", "\n", "            ", "val_images_array", "=", "np", ".", "append", "(", "val_images_array", ",", "os", ".", "path", ".", "join", "(", "CLASSES", "[", "category", "]", ",", "img_list", "[", "i", "]", ")", ")", "\n", "val_labels_array", "=", "np", ".", "append", "(", "val_labels_array", ",", "category", ")", "\n", "\n", "# Use this if you want to dynamically split the train/validation sets:", "\n", "# train_images_array, val_images_array, train_labels_array, val_labels_array = train_test_split(train_images_array, train_labels_array, test_size=0.2, random_state=42)", "\n", "\n", "# Now create the generators", "\n", "", "", "train_data", "=", "DataGenerator", "(", "train_images_array", ",", "train_labels_array", ",", "TRAIN_PATH", ",", "batch_size", "=", "BATCH_SIZE", ",", "num_classes", "=", "len", "(", "CLASSES", ")", ",", "augment", "=", "True", ",", "shuffle", "=", "True", ")", "\n", "val_data", "=", "DataGenerator", "(", "val_images_array", ",", "val_labels_array", ",", "VAL_PATH", ",", "batch_size", "=", "BATCH_SIZE", ",", "num_classes", "=", "len", "(", "CLASSES", ")", ",", "augment", "=", "False", ",", "shuffle", "=", "True", ")", "\n", "\n", "return", "train_data", ",", "val_data", "", "", ""]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference.DataGenerator.__init__": [[34, 42], ["inference.DataGenerator.on_epoch_end"], "methods", ["home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference_289x260.DataGenerator.on_epoch_end"], ["def", "__init__", "(", "self", ",", "images_paths", ",", "labels", ",", "batch_size", "=", "1", ",", "image_dimensions", "=", "(", "2600", ",", "4624", ",", "3", ")", ",", "shuffle", "=", "False", ",", "augment", "=", "False", ")", ":", "\n", "        ", "self", ".", "labels", "=", "labels", "# array of labels", "\n", "self", ".", "images_paths", "=", "images_paths", "# array of image paths", "\n", "self", ".", "dim", "=", "image_dimensions", "# image dimensions", "\n", "self", ".", "batch_size", "=", "batch_size", "# batch size", "\n", "self", ".", "shuffle", "=", "shuffle", "# shuffle bool", "\n", "self", ".", "augment", "=", "augment", "# augment data bool", "\n", "self", ".", "on_epoch_end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference.DataGenerator.__len__": [[43, 46], ["int", "numpy.floor", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "'Denotes the number of batches per epoch'", "\n", "return", "int", "(", "np", ".", "floor", "(", "len", "(", "self", ".", "images_paths", ")", "/", "self", ".", "batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference.DataGenerator.on_epoch_end": [[47, 52], ["numpy.arange", "len", "numpy.random.shuffle"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ")", ":", "\n", "        ", "'Updates indexes after each epoch'", "\n", "self", ".", "indexes", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "images_paths", ")", ")", "\n", "if", "self", ".", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "self", ".", "indexes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference.DataGenerator.__getitem__": [[53, 67], ["numpy.array", "numpy.array.astype", "numpy.array", "tensorflow.keras.utils.to_categorical", "cv2.cvtColor", "cv2.imread", "tensorflow.keras.applications.vgg16.preprocess_input", "os.path.join"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "'Generate one batch of data'", "\n", "# selects indices of data for next batch (chooses an image using 'index' provided by shuffling the dataset at the end of each pass)", "\n", "indexes", "=", "self", ".", "indexes", "[", "index", "*", "self", ".", "batch_size", ":", "(", "index", "+", "1", ")", "*", "self", ".", "batch_size", "]", "\n", "\n", "images", "=", "[", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "TEST_PATH", ",", "self", ".", "images_paths", "[", "k", "]", ")", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "for", "k", "in", "indexes", "]", "\n", "images", "=", "np", ".", "array", "(", "images", ")", "\n", "images", "=", "images", ".", "astype", "(", "np", ".", "float32", ")", "\n", "images", "=", "np", ".", "array", "(", "[", "preprocess_input", "(", "img", ")", "for", "img", "in", "images", "]", ")", "\n", "\n", "labels", "=", "[", "self", ".", "labels", "[", "k", "]", "for", "k", "in", "indexes", "]", "\n", "labels", "=", "to_categorical", "(", "labels", ",", "num_classes", "=", "NUM_CLASSES", ",", "dtype", "=", "'int8'", ")", "\n", "\n", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference.loadData": [[68, 84], ["range", "inference.DataGenerator", "len", "len", "range", "numpy.asarray", "numpy.asarray", "test_images_array.append", "test_labels_array.append", "os.listdir", "os.path.join", "os.path.join", "re.match", "f.endswith"], "function", ["None"], ["", "", "def", "loadData", "(", ")", ":", "\n", "    ", "'Loads data into generator object'", "\n", "test_images_array", "=", "[", "]", "\n", "test_labels_array", "=", "[", "]", "\n", "\n", "# Need to obtain the image_paths and labels for the dataset", "\n", "for", "category", "in", "range", "(", "len", "(", "CLASSES", ")", ")", ":", "\n", "        ", "img_list", "=", "[", "f", "for", "f", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "TEST_PATH", ",", "CLASSES", "[", "category", "]", ")", ")", "if", "(", "re", ".", "match", "(", "r'^(?![\\._]).*$'", ",", "f", ")", "and", "f", ".", "endswith", "(", "\".jpg\"", ")", ")", "]", "# filter out the apple files", "\n", "num_img", "=", "len", "(", "img_list", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_img", ")", ":", "\n", "            ", "test_images_array", ".", "append", "(", "os", ".", "path", ".", "join", "(", "CLASSES", "[", "category", "]", ",", "img_list", "[", "i", "]", ")", ")", "\n", "test_labels_array", ".", "append", "(", "category", ")", "\n", "\n", "", "", "test_data", "=", "DataGenerator", "(", "np", ".", "asarray", "(", "test_images_array", ")", ",", "np", ".", "asarray", "(", "test_labels_array", ")", ",", "batch_size", "=", "1", ",", "augment", "=", "False", ",", "shuffle", "=", "False", ")", "\n", "return", "test_data", ",", "test_images_array", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference_289x260.DataGenerator.__init__": [[34, 42], ["inference_289x260.DataGenerator.on_epoch_end"], "methods", ["home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference_289x260.DataGenerator.on_epoch_end"], ["def", "__init__", "(", "self", ",", "images_paths", ",", "labels", ",", "batch_size", "=", "1", ",", "image_dimensions", "=", "(", "2600", ",", "4624", ",", "3", ")", ",", "shuffle", "=", "False", ",", "augment", "=", "False", ")", ":", "\n", "        ", "self", ".", "labels", "=", "labels", "# array of labels", "\n", "self", ".", "images_paths", "=", "images_paths", "# array of image paths", "\n", "self", ".", "dim", "=", "image_dimensions", "# image dimensions", "\n", "self", ".", "batch_size", "=", "batch_size", "# batch size", "\n", "self", ".", "shuffle", "=", "shuffle", "# shuffle bool", "\n", "self", ".", "augment", "=", "augment", "# augment data bool", "\n", "self", ".", "on_epoch_end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference_289x260.DataGenerator.__len__": [[43, 46], ["int", "numpy.floor", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "'Denotes the number of batches per epoch'", "\n", "return", "int", "(", "np", ".", "floor", "(", "len", "(", "self", ".", "images_paths", ")", "/", "self", ".", "batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference_289x260.DataGenerator.on_epoch_end": [[47, 52], ["numpy.arange", "len", "numpy.random.shuffle"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ")", ":", "\n", "        ", "'Updates indexes after each epoch'", "\n", "self", ".", "indexes", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "images_paths", ")", ")", "\n", "if", "self", ".", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "self", ".", "indexes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference_289x260.DataGenerator.__getitem__": [[53, 67], ["numpy.array", "numpy.array.astype", "numpy.array", "tensorflow.keras.utils.to_categorical", "cv2.cvtColor", "cv2.imread", "tensorflow.keras.applications.vgg16.preprocess_input", "os.path.join"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "'Generate one batch of data'", "\n", "# selects indices of data for next batch (chooses an image using 'index' provided by shuffling the dataset at the end of each pass)", "\n", "indexes", "=", "self", ".", "indexes", "[", "index", "*", "self", ".", "batch_size", ":", "(", "index", "+", "1", ")", "*", "self", ".", "batch_size", "]", "\n", "\n", "images", "=", "[", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "TEST_PATH", ",", "self", ".", "images_paths", "[", "k", "]", ")", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "for", "k", "in", "indexes", "]", "\n", "images", "=", "np", ".", "array", "(", "images", ")", "\n", "images", "=", "images", ".", "astype", "(", "np", ".", "float32", ")", "\n", "images", "=", "np", ".", "array", "(", "[", "preprocess_input", "(", "img", ")", "for", "img", "in", "images", "]", ")", "\n", "\n", "labels", "=", "[", "self", ".", "labels", "[", "k", "]", "for", "k", "in", "indexes", "]", "\n", "labels", "=", "to_categorical", "(", "labels", ",", "num_classes", "=", "NUM_CLASSES", ",", "dtype", "=", "'int8'", ")", "\n", "\n", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.csiro-robotics_deepseagrass.None.inference_289x260.loadData": [[68, 84], ["range", "inference_289x260.DataGenerator", "len", "len", "range", "numpy.asarray", "numpy.asarray", "test_images_array.append", "test_labels_array.append", "os.listdir", "os.path.join", "os.path.join", "re.match", "f.endswith"], "function", ["None"], ["", "", "def", "loadData", "(", ")", ":", "\n", "    ", "'Loads data into generator object'", "\n", "test_images_array", "=", "[", "]", "\n", "test_labels_array", "=", "[", "]", "\n", "\n", "# Need to obtain the image_paths and labels for the dataset", "\n", "for", "category", "in", "range", "(", "len", "(", "CLASSES", ")", ")", ":", "\n", "        ", "img_list", "=", "[", "f", "for", "f", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "TEST_PATH", ",", "CLASSES", "[", "category", "]", ")", ")", "if", "(", "re", ".", "match", "(", "r'^(?![\\._]).*$'", ",", "f", ")", "and", "f", ".", "endswith", "(", "\".jpg\"", ")", ")", "]", "# filter out the apple files", "\n", "num_img", "=", "len", "(", "img_list", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_img", ")", ":", "\n", "            ", "test_images_array", ".", "append", "(", "os", ".", "path", ".", "join", "(", "CLASSES", "[", "category", "]", ",", "img_list", "[", "i", "]", ")", ")", "\n", "test_labels_array", ".", "append", "(", "category", ")", "\n", "\n", "", "", "test_data", "=", "DataGenerator", "(", "np", ".", "asarray", "(", "test_images_array", ")", ",", "np", ".", "asarray", "(", "test_labels_array", ")", ",", "batch_size", "=", "1", ",", "augment", "=", "False", ",", "shuffle", "=", "False", ")", "\n", "return", "test_data", ",", "test_images_array", "\n", "\n"]]}