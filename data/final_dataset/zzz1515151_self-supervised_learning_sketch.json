{"home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_cnn.accuracy": [[125, 139], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_cnn.train": [[145, 190], ["train_model_loss.reset", "train_acc.reset", "network.train", "next", "utils.logger.logger.info", "enumerate", "utils.logger.logger.info", "train_cnn.test", "writer.add_scalars", "writer.add_scalars", "tqdm.tqdm", "batch[].cuda", "batch[].cuda", "optimizer.zero_grad", "network", "loss", "loss.backward", "optimizer.step", "train_model_loss.update", "train_acc.update", "dloader_train", "loss.item", "utils.logger.logger.info", "utils.logger.logger.info", "utils.logger.logger.info", "train_cnn.accuracy", "len", "loss.item"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.train", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.test", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.update", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.update", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.accuracy"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "train_model_loss", ".", "reset", "(", ")", "\n", "train_acc", ".", "reset", "(", ")", "\n", "network", ".", "train", "(", ")", "\n", "\n", "lr", "=", "next", "(", "(", "lr", "for", "(", "max_epoch", ",", "lr", ")", "in", "lr_protocol", "if", "max_epoch", ">", "epoch", ")", ",", "lr_protocol", "[", "-", "1", "]", "[", "1", "]", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "logger", ".", "info", "(", "\"Setting learning rate to: {}\"", ".", "format", "(", "lr", ")", ")", "\n", "\n", "for", "idx", ",", "batch", "in", "enumerate", "(", "tqdm", "(", "dloader_train", "(", "epoch", ")", ")", ")", ":", "\n", "#start = time.time()", "\n", "\n", "        ", "data", "=", "batch", "[", "0", "]", ".", "cuda", "(", ")", "\n", "target", "=", "batch", "[", "1", "]", ".", "cuda", "(", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "output", "=", "network", "(", "data", ")", "\n", "#fc_output = network(data, [\"fc_block\"])", "\n", "#writer.add_histogram(\"train\", fc_output.data, epoch * len(dloader_train) + idx)", "\n", "\n", "loss_total", "=", "loss", "(", "output", ",", "target", ")", "\n", "\n", "loss_total", ".", "backward", "(", ")", "\n", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "train_model_loss", ".", "update", "(", "loss_total", ".", "item", "(", ")", ")", "\n", "train_acc", ".", "update", "(", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "if", "(", "idx", "+", "1", ")", "%", "config", "[", "\"display_step\"", "]", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\"==> Iteration [{}][{}/{}]:\"", ".", "format", "(", "epoch", "+", "1", ",", "idx", "+", "1", ",", "len", "(", "dloader_train", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"current loss:{}\"", ".", "format", "(", "loss_total", ".", "item", "(", ")", ")", ")", "\n", "#logger.info(\"grad norm:{}\".format(total_grad_norm))", "\n", "logger", ".", "info", "(", "\"loss: {}  acc: {}\"", ".", "format", "(", "train_model_loss", ".", "avg", ",", "train_acc", ".", "avg", ")", ")", "\n", "", "", "logger", ".", "info", "(", "\"Begin Evaluating\"", ")", "\n", "test", "(", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "\"loss\"", ",", "{", "\n", "\"train_loss\"", ":", "train_model_loss", ".", "avg", ",", "\n", "\"test_loss\"", ":", "test_model_loss", ".", "avg", "\n", "}", ",", "epoch", "+", "1", ")", "\n", "writer", ".", "add_scalars", "(", "\"acc\"", ",", "{", "\n", "\"train_acc\"", ":", "train_acc", ".", "avg", ",", "\n", "\"test_acc\"", ":", "test_acc", ".", "avg", "\n", "}", ",", "epoch", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_cnn.test": [[192, 207], ["test_model_loss.reset", "test_acc.reset", "network.eval", "enumerate", "utils.logger.logger.info", "utils.logger.logger.info", "tqdm.tqdm", "batch[].cuda", "batch[].cuda", "network", "loss", "test_model_loss.update", "test_acc.update", "dloader_test", "loss.item", "train_cnn.accuracy"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.update", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.update", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.accuracy"], ["", "def", "test", "(", "epoch", ")", ":", "\n", "    ", "test_model_loss", ".", "reset", "(", ")", "\n", "test_acc", ".", "reset", "(", ")", "\n", "network", ".", "eval", "(", ")", "\n", "for", "idx", ",", "batch", "in", "enumerate", "(", "tqdm", "(", "dloader_test", "(", "epoch", ")", ")", ")", ":", "\n", "        ", "data", "=", "batch", "[", "0", "]", ".", "cuda", "(", ")", "\n", "target", "=", "batch", "[", "1", "]", ".", "cuda", "(", ")", "\n", "output", "=", "network", "(", "data", ")", "\n", "#fc_output = network(data, [\"fc_block\"]) ", "\n", "#writer.add_histogram(\"test\", fc_output.data, epoch * len(dloader_test) + idx)       ", "\n", "loss_total", "=", "loss", "(", "output", ",", "target", ")", "\n", "test_model_loss", ".", "update", "(", "loss_total", ".", "item", "(", ")", ")", "\n", "test_acc", ".", "update", "(", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "", "logger", ".", "info", "(", "\"==> Evaluation Result: \"", ")", "\n", "logger", ".", "info", "(", "\"loss: {}  acc:{}\"", ".", "format", "(", "test_model_loss", ".", "avg", ",", "test_acc", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.accuracy": [[116, 130], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.train": [[137, 182], ["train_model_loss.reset", "train_acc.reset", "network.train", "next", "utils.logger.logger.info", "enumerate", "utils.logger.logger.info", "train_tcn.test", "writer.add_scalars", "writer.add_scalars", "tqdm.tqdm", "batch[].cuda", "batch[].cuda", "optimizer.zero_grad", "network", "loss", "loss.backward", "optimizer.step", "train_model_loss.update", "train_acc.update", "trainloader", "loss.item", "utils.logger.logger.info", "utils.logger.logger.info", "utils.logger.logger.info", "train_tcn.accuracy", "len", "loss.item"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.train", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.test", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.update", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.update", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.accuracy"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "train_model_loss", ".", "reset", "(", ")", "\n", "train_acc", ".", "reset", "(", ")", "\n", "network", ".", "train", "(", ")", "\n", "\n", "lr", "=", "next", "(", "(", "lr", "for", "(", "max_epoch", ",", "lr", ")", "in", "lr_protocol", "if", "max_epoch", ">", "epoch", ")", ",", "lr_protocol", "[", "-", "1", "]", "[", "1", "]", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "logger", ".", "info", "(", "\"Setting learning rate to: {}\"", ".", "format", "(", "lr", ")", ")", "\n", "\n", "for", "idx", ",", "batch", "in", "enumerate", "(", "tqdm", "(", "trainloader", "(", "epoch", ")", ")", ")", ":", "\n", "#start = time.time()", "\n", "\n", "        ", "data", "=", "batch", "[", "0", "]", ".", "cuda", "(", ")", "\n", "target", "=", "batch", "[", "1", "]", ".", "cuda", "(", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "output", "=", "network", "(", "data", ")", "\n", "#fc_output = network(data, [\"fc_block\"])", "\n", "#writer.add_histogram(\"train\", fc_output.data, epoch * len(dloader_train) + idx)", "\n", "\n", "loss_total", "=", "loss", "(", "output", ",", "target", ")", "\n", "\n", "loss_total", ".", "backward", "(", ")", "\n", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "train_model_loss", ".", "update", "(", "loss_total", ".", "item", "(", ")", ")", "\n", "train_acc", ".", "update", "(", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "if", "(", "idx", "+", "1", ")", "%", "config", "[", "\"display_step\"", "]", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\"==> Iteration [{}][{}/{}]:\"", ".", "format", "(", "epoch", "+", "1", ",", "idx", "+", "1", ",", "len", "(", "trainloader", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"current loss:{}\"", ".", "format", "(", "loss_total", ".", "item", "(", ")", ")", ")", "\n", "#logger.info(\"grad norm:{}\".format(total_grad_norm))", "\n", "logger", ".", "info", "(", "\"loss: {}  acc: {}\"", ".", "format", "(", "train_model_loss", ".", "avg", ",", "train_acc", ".", "avg", ")", ")", "\n", "", "", "logger", ".", "info", "(", "\"Begin Evaluating\"", ")", "\n", "test", "(", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "\"loss\"", ",", "{", "\n", "\"train_loss\"", ":", "train_model_loss", ".", "avg", ",", "\n", "\"test_loss\"", ":", "test_model_loss", ".", "avg", "\n", "}", ",", "epoch", "+", "1", ")", "\n", "writer", ".", "add_scalars", "(", "\"acc\"", ",", "{", "\n", "\"train_acc\"", ":", "train_acc", ".", "avg", ",", "\n", "\"test_acc\"", ":", "test_acc", ".", "avg", "\n", "}", ",", "epoch", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.test": [[183, 198], ["test_model_loss.reset", "test_acc.reset", "network.eval", "enumerate", "utils.logger.logger.info", "utils.logger.logger.info", "tqdm.tqdm", "batch[].cuda", "batch[].cuda", "network", "loss", "test_model_loss.update", "test_acc.update", "testloader", "loss.item", "train_tcn.accuracy"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.update", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.update", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.train_tcn.accuracy"], ["", "def", "test", "(", "epoch", ")", ":", "\n", "    ", "test_model_loss", ".", "reset", "(", ")", "\n", "test_acc", ".", "reset", "(", ")", "\n", "network", ".", "eval", "(", ")", "\n", "for", "idx", ",", "batch", "in", "enumerate", "(", "tqdm", "(", "testloader", "(", "epoch", ")", ")", ")", ":", "\n", "        ", "data", "=", "batch", "[", "0", "]", ".", "cuda", "(", ")", "\n", "target", "=", "batch", "[", "1", "]", ".", "cuda", "(", ")", "\n", "output", "=", "network", "(", "data", ")", "\n", "#fc_output = network(data, [\"fc_block\"]) ", "\n", "#writer.add_histogram(\"test\", fc_output.data, epoch * len(dloader_test) + idx)       ", "\n", "loss_total", "=", "loss", "(", "output", ",", "target", ")", "\n", "test_model_loss", ".", "update", "(", "loss_total", ".", "item", "(", ")", ")", "\n", "test_acc", ".", "update", "(", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "", "logger", ".", "info", "(", "\"==> Evaluation Result: \"", ")", "\n", "logger", ".", "info", "(", "\"loss: {}  acc:{}\"", ".", "format", "(", "test_model_loss", ".", "avg", ",", "test_acc", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.TCN.TCN.__init__": [[7, 20], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "len"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.DataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", "TCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "is_feature_extractor", "=", "opt", "[", "\"is_feature_extractor\"", "]", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Conv2d", "(", "1", ",", "opt", "[", "\"num_filters\"", "]", ",", "[", "window_size", ",", "4", "]", ",", "padding", "=", "(", "window_size", "-", "1", ",", "0", ")", ")", "\n", "for", "window_size", "in", "opt", "[", "\"window_sizes\"", "]", "\n", "]", ")", "\n", "\n", "#self.bn = nn.BatchNorm1d(opt[\"num_filters\"] * len(opt[\"window_sizes\"]))", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "opt", "[", "\"num_filters\"", "]", "*", "len", "(", "opt", "[", "\"window_sizes\"", "]", ")", ",", "4096", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "4096", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "4096", ",", "opt", "[", "\"num_classes\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.TCN.TCN.forward": [[21, 40], ["torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu.view", "TCN.TCN.fc1", "TCN.TCN.bn", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "xs.append", "torch.relu.size", "TCN.TCN.fc2", "conv", "torch.max_pool1d.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "unsqueeze", "(", "x", ",", "1", ")", "\n", "xs", "=", "[", "]", "\n", "for", "conv", "in", "self", ".", "convs", ":", "\n", "            ", "x2", "=", "F", ".", "relu", "(", "conv", "(", "x", ")", ")", "\n", "x2", "=", "torch", ".", "squeeze", "(", "x2", ",", "-", "1", ")", "\n", "x2", "=", "F", ".", "max_pool1d", "(", "x2", ",", "x2", ".", "size", "(", "2", ")", ")", "\n", "xs", ".", "append", "(", "x2", ")", "\n", "", "x", "=", "torch", ".", "cat", "(", "xs", ",", "2", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "if", "not", "self", ".", "is_feature_extractor", ":", "\n", "            ", "logits", "=", "self", ".", "fc2", "(", "x", ")", "\n", "return", "logits", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.AlexNet.Flatten.__init__": [[9, 11], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.DataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.AlexNet.Flatten.forward": [[12, 14], ["feat.view", "feat.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", ".", "view", "(", "feat", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.AlexNet.AlexNet.__init__": [[16, 88], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "AlexNet.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "len", "len"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.DataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", "AlexNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "num_classes", "=", "opt", "[", "'num_classes'", "]", "\n", "\n", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "11", ",", "stride", "=", "4", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "pool1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "192", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "192", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "pool2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "192", ",", "384", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "384", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "conv4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "384", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "conv5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "pool5", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n", "num_pool5_feats", "=", "6", "*", "6", "*", "256", "\n", "fc_block", "=", "nn", ".", "Sequential", "(", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "num_pool5_feats", ",", "4096", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "4096", ",", "num_classes", ")", ",", "\n", ")", "\n", "\n", "self", ".", "_feature_blocks", "=", "nn", ".", "ModuleList", "(", "[", "\n", "conv1", ",", "\n", "pool1", ",", "\n", "conv2", ",", "\n", "pool2", ",", "\n", "conv3", ",", "\n", "conv4", ",", "\n", "conv5", ",", "\n", "pool5", ",", "\n", "fc_block", ",", "\n", "classifier", ",", "\n", "]", ")", "\n", "self", ".", "all_feat_names", "=", "[", "\n", "'conv1'", ",", "\n", "'pool1'", ",", "\n", "'conv2'", ",", "\n", "'pool2'", ",", "\n", "'conv3'", ",", "\n", "'conv4'", ",", "\n", "'conv5'", ",", "\n", "'pool5'", ",", "\n", "'fc_block'", ",", "\n", "'classifier'", ",", "\n", "]", "\n", "assert", "(", "len", "(", "self", ".", "all_feat_names", ")", "==", "len", "(", "self", ".", "_feature_blocks", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.AlexNet.AlexNet._parse_out_keys_arg": [[89, 106], ["enumerate", "max", "len", "ValueError", "ValueError", "AlexNet.AlexNet.all_feat_names.index", "ValueError"], "methods", ["None"], ["", "def", "_parse_out_keys_arg", "(", "self", ",", "out_feat_keys", ")", ":", "\n", "\n", "# By default return the features of the last layer / module.", "\n", "        ", "out_feat_keys", "=", "[", "self", ".", "all_feat_names", "[", "-", "1", "]", ",", "]", "if", "out_feat_keys", "is", "None", "else", "out_feat_keys", "\n", "\n", "if", "len", "(", "out_feat_keys", ")", "==", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'Empty list of output feature keys.'", ")", "\n", "", "for", "f", ",", "key", "in", "enumerate", "(", "out_feat_keys", ")", ":", "\n", "            ", "if", "key", "not", "in", "self", ".", "all_feat_names", ":", "\n", "                ", "raise", "ValueError", "(", "'Feature with name {0} does not exist. Existing features: {1}.'", ".", "format", "(", "key", ",", "self", ".", "all_feat_names", ")", ")", "\n", "", "elif", "key", "in", "out_feat_keys", "[", ":", "f", "]", ":", "\n", "                ", "raise", "ValueError", "(", "'Duplicate output feature key: {0}.'", ".", "format", "(", "key", ")", ")", "\n", "\n", "# Find the highest output feature in `out_feat_keys", "\n", "", "", "max_out_feat", "=", "max", "(", "[", "self", ".", "all_feat_names", ".", "index", "(", "key", ")", "for", "key", "in", "out_feat_keys", "]", ")", "\n", "\n", "return", "out_feat_keys", ",", "max_out_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.AlexNet.AlexNet.forward": [[107, 134], ["AlexNet.AlexNet._parse_out_keys_arg", "range", "len", "len", "out_feat_keys.index"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.AlexNet.AlexNet._parse_out_keys_arg"], ["", "def", "forward", "(", "self", ",", "x", ",", "out_feat_keys", "=", "None", ")", ":", "\n", "        ", "\"\"\"Forward an image `x` through the network and return the asked output features.\n\n        Args:\n          x: input image.\n          out_feat_keys: a list/tuple with the feature names of the features\n                that the function should return. By default the last feature of\n                the network is returned.\n\n        Return:\n            out_feats: If multiple output features were asked then `out_feats`\n                is a list with the asked output features placed in the same\n                order as in `out_feat_keys`. If a single output feature was\n                asked then `out_feats` is that output feature (and not a list).\n        \"\"\"", "\n", "out_feat_keys", ",", "max_out_feat", "=", "self", ".", "_parse_out_keys_arg", "(", "out_feat_keys", ")", "\n", "out_feats", "=", "[", "None", "]", "*", "len", "(", "out_feat_keys", ")", "\n", "\n", "feat", "=", "x", "\n", "for", "f", "in", "range", "(", "max_out_feat", "+", "1", ")", ":", "\n", "            ", "feat", "=", "self", ".", "_feature_blocks", "[", "f", "]", "(", "feat", ")", "\n", "key", "=", "self", ".", "all_feat_names", "[", "f", "]", "\n", "if", "key", "in", "out_feat_keys", ":", "\n", "                ", "out_feats", "[", "out_feat_keys", ".", "index", "(", "key", ")", "]", "=", "feat", "\n", "\n", "", "", "out_feats", "=", "out_feats", "[", "0", "]", "if", "len", "(", "out_feats", ")", "==", "1", "else", "out_feats", "\n", "return", "out_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.AlexNet.AlexNet.get_L1filters": [[135, 143], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "scalars.view().expand_as", "scalars.view"], "methods", ["None"], ["", "def", "get_L1filters", "(", "self", ")", ":", "\n", "        ", "convlayer", "=", "self", ".", "_feature_blocks", "[", "0", "]", "[", "0", "]", "\n", "batchnorm", "=", "self", ".", "_feature_blocks", "[", "0", "]", "[", "1", "]", "\n", "filters", "=", "convlayer", ".", "weight", ".", "data", "\n", "scalars", "=", "(", "batchnorm", ".", "weight", ".", "data", "/", "torch", ".", "sqrt", "(", "batchnorm", ".", "running_var", "+", "1e-05", ")", ")", "\n", "filters", "=", "(", "filters", "*", "scalars", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", ".", "expand_as", "(", "filters", ")", ")", ".", "cpu", "(", ")", ".", "clone", "(", ")", "\n", "\n", "return", "filters", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.None.AlexNet.create_model": [[144, 146], ["AlexNet.AlexNet"], "function", ["None"], ["", "", "def", "create_model", "(", "opt", ")", ":", "\n", "    ", "return", "AlexNet", "(", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.__init__": [[3, 5], ["AverageMeter.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.reset": [[6, 11], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0.0", "\n", "self", ".", "sum", "=", "0.0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.AverageMeter.AverageMeter.update": [[12, 17], ["float"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "float", "(", "val", "*", "n", ")", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "", "", "", ""]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.create_trainval_list.label2idx": [[5, 11], ["enumerate"], "function", ["None"], ["def", "label2idx", "(", "labels", ")", ":", "\n", "    ", "label2idxs", "=", "{", "}", "\n", "for", "idx", ",", "label", "in", "enumerate", "(", "labels", ")", ":", "\n", "        ", "if", "not", "label", "in", "label2idxs", ":", "\n", "            ", "label2idxs", "[", "label", "]", "=", "idx", "\n", "", "", "return", "label2idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.create_trainval_list.get_file_list": [[12, 29], ["os.path.exists", "os.listdir", "create_trainval_list.label2idx", "os.path.join", "os.path.isdir", "os.path.join", "os.listdir", "labels.append", "os.path.join", "image_info.append"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.create_trainval_list.label2idx"], ["", "def", "get_file_list", "(", "dataset_root", ")", ":", "\n", "    ", "'''get classes'''", "\n", "assert", "os", ".", "path", ".", "exists", "(", "dataset_root", ")", ",", "\"{} does not exist\"", ".", "format", "(", "dataset_root", ")", "\n", "labels", "=", "[", "]", "\n", "for", "class_name", "in", "os", ".", "listdir", "(", "dataset_root", ")", ":", "\n", "        ", "class_path", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "class_name", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "class_path", ")", ":", "\n", "            ", "labels", ".", "append", "(", "class_name", ")", "\n", "", "", "\"\"\"class to idx\"\"\"", "\n", "label2idxs", "=", "label2idx", "(", "labels", ")", "\n", "image_info", "=", "[", "]", "\n", "for", "class_name", "in", "labels", ":", "\n", "        ", "class_path", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "class_name", ")", "\n", "for", "file_name", "in", "os", ".", "listdir", "(", "class_path", ")", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "class_path", ",", "file_name", ")", "\n", "image_info", ".", "append", "(", "[", "file_path", ",", "label2idxs", "[", "class_name", "]", "]", ")", "\n", "", "", "return", "image_info", ",", "label2idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.logger.logger.__init__": [[8, 15], ["logging.getLogger", "logger.logger.logger.setLevel", "logging.FileHandler", "logging.StreamHandler", "logger.logger.logger.addHandler", "logger.logger.logger.addHandler"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "logger_path", ")", ":", "\n", "\t\t", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "self", ".", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "self", ".", "logfile", "=", "logging", ".", "FileHandler", "(", "logger_path", ")", "\n", "self", ".", "logdisplay", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "self", ".", "logger", ".", "addHandler", "(", "self", ".", "logfile", ")", "\n", "self", ".", "logger", ".", "addHandler", "(", "self", ".", "logdisplay", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.utils.logger.logger.get_logger": [[16, 18], ["None"], "methods", ["None"], ["", "def", "get_logger", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "logger", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.SketchDataset.__init__": [[44, 68], ["split.lower", "dataloader_image._get_filenames_and_classes", "random.seed", "random.shuffle", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Resize", "torchvision.Resize", "torchvision.Resize", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke._get_filenames_and_classes"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "split", ",", "resize", ")", ":", "\n", "\n", "        ", "self", ".", "split", "=", "split", ".", "lower", "(", ")", "\n", "assert", "(", "self", ".", "split", "==", "'train'", "or", "self", ".", "split", "==", "'test'", ")", "\n", "if", "resize", ":", "\n", "            ", "transforms_list", "=", "[", "\n", "transforms", ".", "Resize", "(", "299", ")", ",", "\n", "lambda", "x", ":", "np", ".", "asarray", "(", "x", ")", ",", "\n", "]", "\n", "", "else", ":", "\n", "            ", "transforms_list", "=", "[", "\n", "lambda", "x", ":", "np", ".", "asarray", "(", "x", ")", ",", "\n", "]", "\n", "\n", "", "_NUM_VALIDATION", "=", "345000", "\n", "_RANDOM_SEED", "=", "0", "\n", "photo_filenames", ",", "_", "=", "_get_filenames_and_classes", "(", "root", ")", "\n", "random", ".", "seed", "(", "_RANDOM_SEED", ")", "\n", "random", ".", "shuffle", "(", "photo_filenames", ")", "\n", "if", "self", ".", "split", "==", "\"train\"", ":", "\n", "            ", "self", ".", "image_list", "=", "photo_filenames", "[", "_NUM_VALIDATION", ":", "]", "\n", "", "elif", "self", ".", "split", "==", "\"test\"", ":", "\n", "            ", "self", ".", "image_list", "=", "photo_filenames", "[", ":", "_NUM_VALIDATION", "]", "\n", "", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "transforms_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.SketchDataset.__getitem__": [[70, 74], ["PIL.Image.open", "dataloader_image.SketchDataset.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "self", ".", "image_list", "[", "index", "]", ")", "\n", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.SketchDataset.__len__": [[75, 77], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.DataLoader.__init__": [[97, 118], ["torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "len", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "x.transpose().astype", "x.numpy", "x.transpose"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "dataset", ",", "\n", "signal_type", ",", "\n", "batch_size", "=", "1", ",", "\n", "unsupervised", "=", "True", ",", "\n", "epoch_size", "=", "None", ",", "\n", "num_workers", "=", "0", ",", "\n", "shuffle", "=", "True", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "signal_type", "=", "signal_type", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "epoch_size", "=", "epoch_size", "if", "epoch_size", "is", "not", "None", "else", "len", "(", "dataset", ")", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "unsupervised", "=", "unsupervised", "\n", "self", ".", "num_workers", "=", "num_workers", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "#numpy to tensor               ", "\n", "]", ")", "\n", "self", ".", "inv_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "lambda", "x", ":", "x", ".", "numpy", "(", ")", "*", "255.0", ",", "\n", "lambda", "x", ":", "x", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.DataLoader.get_iterator": [[121, 179], ["random.seed", "torchnet.dataset.ListDataset", "torchnet.dataset.ListDataset.parallel", "torch.utils.data.dataloader.default_collate", "torch.utils.data.dataloader.default_collate", "batch[].size", "batch[].view", "batch[].view", "dataloader_image.DataLoader.transform", "range", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "ValueError", "len", "len", "len", "dataloader_image.DataLoader.transform", "dataloader_image.DataLoader.transform", "dataloader_image.DataLoader.transform", "dataloader_image.DataLoader.transform", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "dataloader_image.rotate_img", "dataloader_image.rotate_img", "dataloader_image.rotate_img", "dataloader_image.rotate_img", "len", "dataloader_image.DataLoader.transform", "dataloader_image.DataLoader.transform", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "quickdraw_transform.deform_xy"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.rotate_img", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.rotate_img", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.rotate_img", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.rotate_img", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.deform_xy"], ["", "def", "get_iterator", "(", "self", ",", "epoch", "=", "0", ")", ":", "\n", "        ", "rand_seed", "=", "epoch", "*", "self", ".", "epoch_size", "\n", "random", ".", "seed", "(", "rand_seed", ")", "\n", "if", "self", ".", "unsupervised", ":", "\n", "            ", "if", "self", ".", "signal_type", "==", "'rotation'", ":", "\n", "\n", "                ", "def", "_load_function", "(", "idx", ")", ":", "\n", "                    ", "idx", "=", "idx", "%", "len", "(", "self", ".", "dataset", ")", "\n", "img0", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "transformed_imgs", "=", "[", "\n", "\n", "self", ".", "transform", "(", "rotate_img", "(", "img0", ",", "0", ")", ")", ",", "\n", "# 90", "\n", "self", ".", "transform", "(", "rotate_img", "(", "img0", ",", "90", ")", ")", ",", "\n", "# 180", "\n", "self", ".", "transform", "(", "rotate_img", "(", "img0", ",", "180", ")", ")", ",", "\n", "# 270 ", "\n", "self", ".", "transform", "(", "rotate_img", "(", "img0", ",", "270", ")", ")", ",", "\n", "]", "\n", "transform_labels", "=", "torch", ".", "LongTensor", "(", "[", "0", ",", "1", ",", "2", ",", "3", "]", ")", "#labels                ", "\n", "return", "torch", ".", "stack", "(", "transformed_imgs", ",", "dim", "=", "0", ")", ",", "transform_labels", "\n", "", "", "elif", "self", ".", "signal_type", "==", "'deformation'", ":", "\n", "                ", "def", "_load_function", "(", "idx", ")", ":", "\n", "                    ", "idx", "=", "idx", "%", "len", "(", "self", ".", "dataset", ")", "\n", "img0", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "transformed_imgs", "=", "[", "\n", "\n", "self", ".", "transform", "(", "img0", ")", ",", "\n", "\n", "self", ".", "transform", "(", "deform_xy", "(", "img0", ",", "2.1", ",", "0", ",", "1", ",", "-", "4.1", ",", "0", ",", "1", ")", ")", ",", "\n", "]", "\n", "transform_labels", "=", "torch", ".", "LongTensor", "(", "[", "0", ",", "1", "]", ")", "#labels                ", "\n", "return", "torch", ".", "stack", "(", "transformed_imgs", ",", "dim", "=", "0", ")", ",", "transform_labels", "\n", "", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'signal must be rotation or deformation'", ")", "\n", "\n", "", "def", "_collate_fun", "(", "batch", ")", ":", "\n", "                ", "batch", "=", "default_collate", "(", "batch", ")", "\n", "assert", "(", "len", "(", "batch", ")", "==", "2", ")", "\n", "batch_size", ",", "transform_num", ",", "channels", ",", "height", ",", "width", "=", "batch", "[", "0", "]", ".", "size", "(", ")", "\n", "batch", "[", "0", "]", "=", "batch", "[", "0", "]", ".", "view", "(", "[", "batch_size", "*", "transform_num", ",", "channels", ",", "height", ",", "width", "]", ")", "\n", "batch", "[", "1", "]", "=", "batch", "[", "1", "]", ".", "view", "(", "[", "batch_size", "*", "transform_num", "]", ")", "\n", "return", "batch", "\n", "", "", "else", ":", "\n", "\n", "            ", "def", "_load_function", "(", "idx", ")", ":", "\n", "                ", "idx", "=", "idx", "%", "len", "(", "self", ".", "dataset", ")", "\n", "img", ",", "categorical_label", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "return", "img", ",", "categorical_label", "\n", "", "_collate_fun", "=", "default_collate", "\n", "\n", "", "tnt_dataset", "=", "tnt", ".", "dataset", ".", "ListDataset", "(", "elem_list", "=", "range", "(", "self", ".", "epoch_size", ")", ",", "\n", "load", "=", "_load_function", ")", "\n", "data_loader", "=", "tnt_dataset", ".", "parallel", "(", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "collate_fn", "=", "_collate_fun", ",", "num_workers", "=", "self", ".", "num_workers", ",", "\n", "shuffle", "=", "self", ".", "shuffle", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.DataLoader.__call__": [[180, 182], ["dataloader_image.DataLoader.get_iterator"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.DataLoader.get_iterator"], ["", "def", "__call__", "(", "self", ",", "epoch", "=", "0", ")", ":", "\n", "        ", "return", "self", ".", "get_iterator", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.DataLoader.__len__": [[183, 185], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "epoch_size", "//", "self", ".", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image._get_filenames_and_classes": [[23, 41], ["os.listdir", "os.path.join", "os.path.isdir", "os.listdir", "sorted", "directories.append", "class_names.append", "os.path.join", "photo_filenames.append"], "function", ["None"], ["def", "_get_filenames_and_classes", "(", "dataset_dir", ")", ":", "\n", "\n", "    ", "quickdraw_root", "=", "dataset_dir", "\n", "directories", "=", "[", "]", "\n", "class_names", "=", "[", "]", "\n", "for", "filename", "in", "os", ".", "listdir", "(", "quickdraw_root", ")", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "quickdraw_root", ",", "filename", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "            ", "directories", ".", "append", "(", "path", ")", "\n", "class_names", ".", "append", "(", "filename", ")", "\n", "\n", "", "", "photo_filenames", "=", "[", "]", "\n", "for", "directory", "in", "directories", ":", "\n", "        ", "for", "filename", "in", "os", ".", "listdir", "(", "directory", ")", ":", "\n", "            ", "path", "=", "os", ".", "path", ".", "join", "(", "directory", ",", "filename", ")", "\n", "photo_filenames", ".", "append", "(", "path", ")", "\n", "\n", "", "", "return", "photo_filenames", ",", "sorted", "(", "class_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_image.rotate_img": [[78, 89], ["numpy.flipud().copy", "numpy.fliplr().copy", "numpy.flipud", "numpy.transpose", "ValueError", "numpy.transpose", "numpy.fliplr", "numpy.flipud().copy", "numpy.flipud", "numpy.flipud"], "function", ["None"], ["", "", "def", "rotate_img", "(", "img", ",", "rot", ")", ":", "\n", "    ", "if", "rot", "==", "0", ":", "# 0 degrees rotation", "\n", "        ", "return", "img", "\n", "", "elif", "rot", "==", "90", ":", "# 90 degrees rotation", "\n", "        ", "return", "np", ".", "flipud", "(", "np", ".", "transpose", "(", "img", ",", "(", "1", ",", "0", ",", "2", ")", ")", ")", ".", "copy", "(", ")", "\n", "", "elif", "rot", "==", "180", ":", "# 90 degrees rotation", "\n", "        ", "return", "np", ".", "fliplr", "(", "np", ".", "flipud", "(", "img", ")", ")", ".", "copy", "(", ")", "\n", "", "elif", "rot", "==", "270", ":", "# 270 degrees rotation / or -90", "\n", "        ", "return", "np", ".", "transpose", "(", "np", ".", "flipud", "(", "img", ")", ".", "copy", "(", ")", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'rotation should be 0, 90, 180, or 270 degrees'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.coordinate_transform_utils.get_new_idx": [[7, 12], ["numpy.sin", "numpy.sin"], "function", ["None"], ["def", "get_new_idx", "(", "x", ",", "a", "=", "0.", ",", "b", "=", "0.5", ",", "lam", "=", "1.0", ")", ":", "\n", "\n", "    ", "g", "=", "(", "2", "*", "b", "-", "2", "*", "a", ")", "*", "x", "+", "2", "*", "a", "\n", "f", "=", "x", "+", "0.5", "*", "lam", "*", "x", "*", "(", "np", ".", "sin", "(", "g", ")", "-", "np", ".", "sin", "(", "2", "*", "b", ")", ")", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.coordinate_transform_utils.center_norm": [[15, 26], ["numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max"], "function", ["None"], ["", "def", "center_norm", "(", "coord", ")", ":", "\n", "\n", "    ", "x_min", ",", "x_max", "=", "np", ".", "min", "(", "coord", "[", ":", ",", "0", "]", ")", ",", "np", ".", "max", "(", "coord", "[", ":", ",", "0", "]", ")", "\n", "y_min", ",", "y_max", "=", "np", ".", "min", "(", "coord", "[", ":", ",", "1", "]", ")", ",", "np", ".", "max", "(", "coord", "[", ":", ",", "1", "]", ")", "\n", "x_range", "=", "x_max", "-", "x_min", "\n", "y_range", "=", "y_max", "-", "y_min", "\n", "max_range", "=", "np", ".", "max", "(", "[", "x_range", ",", "y_range", "]", ")", "\n", "\n", "coord", "[", ":", ",", "0", "]", "=", "(", "coord", "[", ":", ",", "0", "]", "-", "x_min", "+", "(", "max_range", "-", "x_range", ")", "/", "2.0", ")", "/", "max_range", "\n", "coord", "[", ":", ",", "1", "]", "=", "(", "coord", "[", ":", ",", "1", "]", "-", "y_min", "+", "(", "max_range", "-", "y_range", ")", "/", "2.0", ")", "/", "max_range", "\n", "return", "coord", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.coordinate_transform_utils.coordinate_transform_utils": [[29, 35], ["coordinate_transform_utils.get_new_idx", "coordinate_transform_utils.get_new_idx", "coordinate_transform_utils.center_norm"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.get_new_idx", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.get_new_idx", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.coordinate_transform_utils.center_norm"], ["", "def", "coordinate_transform_utils", "(", "coord", ",", "a_x", "=", "0.", ",", "b_x", "=", "0.5", ",", "c_x", "=", "1.0", ",", "a_y", "=", "0.", ",", "b_y", "=", "0.5", ",", "c_y", "=", "1.0", ")", ":", "\n", "\n", "    ", "coord", "[", ":", ",", "0", "]", "=", "get_new_idx", "(", "coord", "[", ":", ",", "0", "]", "/", "255.0", ",", "a_x", ",", "b_x", ",", "c_x", ")", "\n", "coord", "[", ":", ",", "1", "]", "=", "get_new_idx", "(", "coord", "[", ":", ",", "1", "]", "/", "255.0", ",", "a_y", ",", "b_y", ",", "c_y", ")", "\n", "coord", "=", "center_norm", "(", "coord", ")", "\n", "return", "coord", "\n", "", ""]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.repeat_channel": [[5, 12], ["numpy.repeat().reshape", "list", "numpy.repeat"], "function", ["None"], ["def", "repeat_channel", "(", "img", ")", ":", "\n", "    ", "\"\"\"\n\n    \"\"\"", "\n", "new_shape", "=", "list", "(", "img", ".", "shape", ")", "+", "[", "3", "]", "\n", "img", "=", "np", ".", "repeat", "(", "img", ",", "3", ")", ".", "reshape", "(", "new_shape", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.get_new_idx": [[13, 18], ["numpy.sin", "numpy.sin"], "function", ["None"], ["", "def", "get_new_idx", "(", "x", ",", "lam", "=", "1.0", ",", "a", "=", "0.", ",", "b", "=", "0.5", ")", ":", "\n", "\n", "    ", "g", "=", "(", "2", "*", "b", "-", "2", "*", "a", ")", "*", "x", "+", "2", "*", "a", "\n", "f", "=", "x", "+", "0.5", "*", "lam", "*", "x", "*", "(", "np", ".", "sin", "(", "g", ")", "-", "np", ".", "sin", "(", "2", "*", "b", ")", ")", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.dfx": [[19, 25], ["numpy.cos", "numpy.sin", "numpy.sin"], "function", ["None"], ["", "def", "dfx", "(", "x", ",", "lam", ",", "a", ",", "b", ")", ":", "\n", "    ", "\"\"\"\n    \"\"\"", "\n", "g", "=", "(", "2", "*", "b", "-", "2", "*", "a", ")", "*", "x", "+", "2", "*", "a", "\n", "df", "=", "1", "+", "0.5", "*", "lam", "*", "(", "np", ".", "sin", "(", "g", ")", "-", "np", ".", "sin", "(", "2", "*", "b", ")", ")", "+", "lam", "*", "x", "*", "(", "b", "-", "a", ")", "*", "np", ".", "cos", "(", "g", ")", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.check_param": [[26, 35], ["numpy.linspace", "quickdraw_transform.dfx", "print", "numpy.min", "print", "numpy.min"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.dfx"], ["", "def", "check_param", "(", "lam", ",", "a", ",", "b", ")", ":", "\n", "\n", "    ", "xs", "=", "np", ".", "linspace", "(", "0.", ",", "1.", ",", "100", ")", "\n", "df", "=", "dfx", "(", "xs", ",", "lam", ",", "a", ",", "b", ")", "\n", "if", "np", ".", "min", "(", "df", ")", "<", "0", ":", "\n", "        ", "print", "(", "'The param is Not valid, df_min={:.4f}, please check.'", ".", "format", "(", "np", ".", "min", "(", "df", ")", ")", ")", "\n", "return", "False", "\n", "", "print", "(", "'The param is Valid!'", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.deform_x": [[36, 53], ["quickdraw_transform.get_new_idx", "numpy.floor().astype", "sorted", "numpy.zeros_like", "enumerate", "numpy.arange", "float", "numpy.floor", "set", "set", "list", "range"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.get_new_idx"], ["", "def", "deform_x", "(", "img_arr", ",", "lam", ",", "a", ",", "b", ")", ":", "\n", "\n", "    ", "height", ",", "width", "=", "img_arr", ".", "shape", "\n", "idxs", "=", "np", ".", "arange", "(", "width", ")", "/", "float", "(", "width", "-", "1", ")", "\n", "new_idxs", "=", "get_new_idx", "(", "idxs", ",", "lam", ",", "a", ",", "b", ")", "\n", "new_idxs", "=", "np", ".", "floor", "(", "new_idxs", "*", "(", "width", "-", "1", ")", ")", ".", "astype", "(", "int", ")", "\n", "lost_idxs", "=", "sorted", "(", "set", "(", "list", "(", "range", "(", "width", ")", ")", ")", "-", "set", "(", "new_idxs", ")", ")", "\n", "\n", "\n", "new_img", "=", "np", ".", "zeros_like", "(", "img_arr", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "i", ",", "new_idx", "in", "enumerate", "(", "new_idxs", ")", ":", "\n", "        ", "new_img", "[", ":", ",", "new_idx", "]", "|=", "img_arr", "[", ":", ",", "i", "]", "\n", "\n", "\n", "", "for", "lost_idx", "in", "lost_idxs", ":", "\n", "        ", "new_img", "[", ":", ",", "lost_idx", "]", "|=", "new_img", "[", ":", ",", "lost_idx", "-", "1", "]", "\n", "", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.deform_y": [[55, 73], ["quickdraw_transform.get_new_idx", "numpy.floor().astype", "sorted", "numpy.zeros_like", "enumerate", "numpy.arange", "float", "numpy.floor", "set", "set", "list", "range"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.get_new_idx"], ["", "def", "deform_y", "(", "img_arr", ",", "lam", ",", "a", ",", "b", ")", ":", "\n", "\n", "    ", "height", ",", "width", "=", "img_arr", ".", "shape", "\n", "idxs", "=", "np", ".", "arange", "(", "height", ")", "/", "float", "(", "height", "-", "1", ")", "\n", "new_idxs", "=", "get_new_idx", "(", "idxs", ",", "lam", ",", "a", ",", "b", ")", "\n", "new_idxs", "=", "np", ".", "floor", "(", "new_idxs", "*", "(", "height", "-", "1", ")", ")", ".", "astype", "(", "int", ")", "\n", "lost_idxs", "=", "sorted", "(", "set", "(", "list", "(", "range", "(", "height", ")", ")", ")", "-", "set", "(", "new_idxs", ")", ")", "\n", "\n", "\n", "new_img", "=", "np", ".", "zeros_like", "(", "img_arr", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "i", ",", "new_idx", "in", "enumerate", "(", "new_idxs", ")", ":", "\n", "        ", "new_img", "[", "new_idx", "]", "|=", "img_arr", "[", "i", "]", "\n", "\n", "\n", "", "for", "lost_idx", "in", "lost_idxs", ":", "\n", "        ", "new_img", "[", "lost_idx", "]", "|=", "new_img", "[", "lost_idx", "-", "1", "]", "\n", "\n", "", "return", "new_img", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.deform_xy": [[74, 83], ["quickdraw_transform.repeat_channel", "len", "quickdraw_transform.deform_x", "quickdraw_transform.deform_y"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.repeat_channel", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.deform_x", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.deform_y"], ["", "def", "deform_xy", "(", "img_arr", ",", "lam1", ",", "a1", ",", "b1", ",", "lam2", ",", "a2", ",", "b2", ")", ":", "\n", "    ", "if", "len", "(", "img_arr", ".", "shape", ")", "==", "3", ":", "\n", "        ", "img_arr", "=", "img_arr", "[", ":", ",", ":", ",", "0", "]", "\n", "", "if", "a1", "!=", "b1", ":", "\n", "        ", "img_arr", "=", "deform_x", "(", "img_arr", ",", "lam1", ",", "a1", ",", "b1", ")", "\n", "", "if", "a2", "!=", "b2", ":", "\n", "        ", "img_arr", "=", "deform_y", "(", "img_arr", ",", "lam2", ",", "a2", ",", "b2", ")", "\n", "", "img_arr", "=", "repeat_channel", "(", "img_arr", ")", "\n", "return", "img_arr", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.quickdraw_transform.erase": [[85, 103], ["numpy.zeros", "numpy.concatenate", "numpy.zeros", "numpy.concatenate", "numpy.zeros", "numpy.concatenate", "numpy.zeros", "numpy.concatenate"], "function", ["None"], ["", "def", "erase", "(", "image", ",", "part", ")", ":", "\n", "    ", "assert", "(", "image", ".", "shape", "[", "0", "]", "%", "2", "==", "0", "and", "image", ".", "shape", "[", "1", "]", "%", "2", "==", "0", ")", "\n", "\n", "if", "part", "==", "0", ":", "\n", "        ", "zero_part", "=", "np", ".", "zeros", "(", "[", "image", ".", "shape", "[", "0", "]", "//", "2", ",", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "2", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "return", "np", ".", "concatenate", "(", "(", "image", "[", "0", ":", "image", ".", "shape", "[", "0", "]", "//", "2", ",", ":", "]", ",", "zero_part", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "if", "part", "==", "1", ":", "\n", "        ", "zero_part", "=", "np", ".", "zeros", "(", "[", "image", ".", "shape", "[", "0", "]", ",", "image", ".", "shape", "[", "1", "]", "//", "2", ",", "image", ".", "shape", "[", "2", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "return", "np", ".", "concatenate", "(", "(", "zero_part", ",", "image", "[", ":", ",", "image", ".", "shape", "[", "1", "]", "//", "2", ":", "]", ")", ",", "axis", "=", "1", ")", "\n", "\n", "", "if", "part", "==", "2", ":", "\n", "        ", "zero_part", "=", "np", ".", "zeros", "(", "[", "image", ".", "shape", "[", "0", "]", "//", "2", ",", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "2", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "return", "np", ".", "concatenate", "(", "(", "zero_part", ",", "image", "[", "image", ".", "shape", "[", "0", "]", "//", "2", ":", ",", ":", "]", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "if", "part", "==", "3", ":", "\n", "        ", "zero_part", "=", "np", ".", "zeros", "(", "[", "image", ".", "shape", "[", "0", "]", ",", "image", ".", "shape", "[", "1", "]", "//", "2", ",", "image", ".", "shape", "[", "2", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "return", "np", ".", "concatenate", "(", "(", "image", "[", ":", ",", "0", ":", "image", ".", "shape", "[", "1", "]", "//", "2", "]", ",", "zero_part", ")", ",", "axis", "=", "1", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.RNNDataset.__init__": [[48, 69], ["split.lower", "dataloader_stroke._get_filenames_and_classes", "random.seed", "random.shuffle", "len"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke._get_filenames_and_classes"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "split", ")", ":", "\n", "        ", "\"\"\"\n        args:\n            root:\n            split:\n        return:\n            a pytorch dataset instance \n        \"\"\"", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "split", "=", "split", ".", "lower", "(", ")", "\n", "assert", "(", "self", ".", "split", "==", "\"train\"", "or", "self", ".", "split", "==", "\"test\"", ")", "\n", "_NUM_VALIDATION", "=", "345000", "\n", "_RANDOM_SEED", "=", "0", "\n", "photo_filenames", ",", "_", "=", "_get_filenames_and_classes", "(", "self", ".", "root", ")", "\n", "random", ".", "seed", "(", "_RANDOM_SEED", ")", "\n", "random", ".", "shuffle", "(", "photo_filenames", ")", "\n", "assert", "(", "len", "(", "photo_filenames", ")", "==", "345", "*", "10000", ")", "\n", "if", "self", ".", "split", "==", "\"train\"", ":", "\n", "            ", "self", ".", "image_list", "=", "photo_filenames", "[", "_NUM_VALIDATION", ":", "]", "\n", "", "elif", "self", ".", "split", "==", "\"test\"", ":", "\n", "            ", "self", ".", "image_list", "=", "photo_filenames", "[", ":", "_NUM_VALIDATION", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.RNNDataset.__getitem__": [[71, 77], ["numpy.load", "numpy.load"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "stroke", "=", "np", ".", "load", "(", "self", ".", "image_list", "[", "index", "]", ",", "encoding", "=", "\"bytes\"", ")", "\n", "if", "stroke", ".", "shape", "[", "0", "]", "==", "2", ":", "\n", "            ", "return", "stroke", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "return", "stroke", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.RNNDataset.__len__": [[78, 80], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.DataLoader.__init__": [[128, 145], ["torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "len", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "dataset", ",", "\n", "signal_type", ",", "\n", "batch_size", "=", "1", ",", "\n", "epoch_size", "=", "None", ",", "\n", "num_workers", "=", "1", ",", "\n", "shuffle", "=", "True", ",", "\n", "size", "=", "(", "256", ",", "256", ")", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "signal_type", "=", "signal_type", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "epoch_size", "=", "epoch_size", "if", "epoch_size", "is", "not", "None", "else", "len", "(", "dataset", ")", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "num_workers", "=", "num_workers", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "lambda", "x", ":", "torch", ".", "FloatTensor", "(", "x", ")", "#numpy to tensor                       ", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.DataLoader.get_iterator": [[147, 197], ["random.seed", "torchnet.dataset.ListDataset", "torchnet.dataset.ListDataset.parallel", "torch.utils.data.dataloader.default_collate", "torch.utils.data.dataloader.default_collate", "batch[].size", "batch[].view", "batch[].view", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "ValueError", "len", "range", "len", "dataloader_stroke.DataLoader.transform", "dataloader_stroke.DataLoader.transform", "dataloader_stroke.DataLoader.transform", "dataloader_stroke.DataLoader.transform", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "dataloader_stroke.rotate_rnn", "dataloader_stroke.rotate_rnn", "dataloader_stroke.rotate_rnn", "dataloader_stroke.rotate_rnn", "len", "dataloader_stroke.DataLoader.transform", "dataloader_stroke.DataLoader.transform", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "dataloader_stroke.rotate_rnn", "dataloader_stroke.transform_rnn"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.rotate_rnn", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.rotate_rnn", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.rotate_rnn", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.rotate_rnn", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.rotate_rnn", "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.transform_rnn"], ["", "def", "get_iterator", "(", "self", ",", "epoch", "=", "0", ")", ":", "\n", "        ", "rand_seed", "=", "epoch", "*", "self", ".", "epoch_size", "\n", "random", ".", "seed", "(", "rand_seed", ")", "\n", "if", "self", ".", "signal_type", "==", "'rotation'", ":", "\n", "\n", "            ", "def", "_load_function", "(", "idx", ")", ":", "\n", "                ", "idx", "=", "idx", "%", "len", "(", "self", ".", "dataset", ")", "\n", "stroke", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "rotated_strokes", "=", "[", "\n", "\n", "self", ".", "transform", "(", "rotate_rnn", "(", "stroke", ",", "0", ",", "self", ".", "size", ")", ")", ",", "\n", "# 90", "\n", "self", ".", "transform", "(", "rotate_rnn", "(", "stroke", ",", "90", ",", "self", ".", "size", ")", ")", ",", "\n", "# 180", "\n", "self", ".", "transform", "(", "rotate_rnn", "(", "stroke", ",", "180", ",", "self", ".", "size", ")", ")", ",", "\n", "# 270", "\n", "self", ".", "transform", "(", "rotate_rnn", "(", "stroke", ",", "270", ",", "self", ".", "size", ")", ")", ",", "\n", "]", "\n", "rotation_labels", "=", "torch", ".", "LongTensor", "(", "[", "0", ",", "1", ",", "2", ",", "3", "]", ")", "#labels ", "\n", "return", "torch", ".", "stack", "(", "rotated_strokes", ",", "dim", "=", "0", ")", ",", "rotation_labels", "\n", "", "", "elif", "self", ".", "signal_type", "==", "'deformation'", ":", "\n", "            ", "def", "_load_function", "(", "idx", ")", ":", "\n", "                ", "idx", "=", "idx", "%", "len", "(", "self", ".", "dataset", ")", "\n", "stroke", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "rotated_strokes", "=", "[", "\n", "\n", "self", ".", "transform", "(", "rotate_rnn", "(", "stroke", ",", "0", ",", "self", ".", "size", ")", ")", ",", "\n", "\n", "self", ".", "transform", "(", "transform_rnn", "(", "stroke", ",", "2.1", ",", "0", ",", "1", ",", "-", "4.1", ",", "0", ",", "1", ")", ")", "\n", "]", "\n", "rotation_labels", "=", "torch", ".", "LongTensor", "(", "[", "0", ",", "1", "]", ")", "#labels ", "\n", "return", "torch", ".", "stack", "(", "rotated_strokes", ",", "dim", "=", "0", ")", ",", "rotation_labels", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'signal must be rotation or deformation'", ")", "\n", "", "def", "_collate_fun", "(", "batch", ")", ":", "\n", "            ", "batch", "=", "default_collate", "(", "batch", ")", "\n", "assert", "(", "len", "(", "batch", ")", "==", "2", ")", "\n", "batch_size", ",", "rotations", ",", "time_step", ",", "input_dim", "=", "batch", "[", "0", "]", ".", "size", "(", ")", "\n", "#batch_size * 100 * 4", "\n", "batch", "[", "0", "]", "=", "batch", "[", "0", "]", ".", "view", "(", "[", "batch_size", "*", "rotations", ",", "time_step", ",", "input_dim", "]", ")", "\n", "batch", "[", "1", "]", "=", "batch", "[", "1", "]", ".", "view", "(", "[", "batch_size", "*", "rotations", "]", ")", "\n", "return", "batch", "\n", "\n", "", "tnt_dataset", "=", "tnt", ".", "dataset", ".", "ListDataset", "(", "elem_list", "=", "range", "(", "self", ".", "epoch_size", ")", ",", "load", "=", "_load_function", ")", "\n", "data_loader", "=", "tnt_dataset", ".", "parallel", "(", "batch_size", "=", "self", ".", "batch_size", ",", "collate_fn", "=", "_collate_fun", ",", "num_workers", "=", "self", ".", "num_workers", ",", "shuffle", "=", "self", ".", "shuffle", ")", "\n", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.DataLoader.__call__": [[198, 200], ["dataloader_stroke.DataLoader.get_iterator"], "methods", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.DataLoader.get_iterator"], ["", "def", "__call__", "(", "self", ",", "epoch", "=", "0", ")", ":", "\n", "        ", "return", "self", ".", "get_iterator", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.DataLoader.__len__": [[201, 203], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "epoch_size", "//", "self", ".", "batch_size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke._get_filenames_and_classes": [[18, 45], ["os.listdir", "os.path.join", "os.path.isdir", "os.listdir", "sorted", "directories.append", "class_names.append", "os.path.join", "photo_filenames.append"], "function", ["None"], ["def", "_get_filenames_and_classes", "(", "dataset_dir", ")", ":", "\n", "    ", "\"\"\"Returns a list of filenames and inferred class names.\n\n    Args:\n      dataset_dir: A directory containing a set of subdirectories representing\n        class names. Each subdirectory should contain PNG or JPG encoded images.\n\n    Returns:\n      A list of image file paths, relative to `dataset_dir` and the list of\n      subdirectories, representing class names.\n    \"\"\"", "\n", "quickdraw_root", "=", "dataset_dir", "\n", "directories", "=", "[", "]", "\n", "class_names", "=", "[", "]", "\n", "for", "filename", "in", "os", ".", "listdir", "(", "quickdraw_root", ")", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "quickdraw_root", ",", "filename", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "            ", "directories", ".", "append", "(", "path", ")", "\n", "class_names", ".", "append", "(", "filename", ")", "\n", "\n", "", "", "photo_filenames", "=", "[", "]", "\n", "for", "directory", "in", "directories", ":", "\n", "        ", "for", "filename", "in", "os", ".", "listdir", "(", "directory", ")", ":", "\n", "            ", "path", "=", "os", ".", "path", ".", "join", "(", "directory", ",", "filename", ")", "\n", "photo_filenames", ".", "append", "(", "path", ")", "\n", "\n", "", "", "return", "photo_filenames", ",", "sorted", "(", "class_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.rotate_rnn": [[81, 110], ["numpy.array().astype", "numpy.array().astype", "len", "numpy.array", "numpy.array().astype", "range", "len", "numpy.array", "numpy.array().astype", "ValueError", "range", "len", "numpy.array", "len", "range", "len", "numpy.array", "len", "range", "len", "len"], "function", ["None"], ["", "", "def", "rotate_rnn", "(", "stroke", ",", "rot", ",", "size", ")", ":", "\n", "    ", "w", "=", "size", "[", "0", "]", "-", "1", "\n", "h", "=", "size", "[", "1", "]", "-", "1", "\n", "if", "rot", "==", "0", ":", "\n", "        ", "stroke_0", "=", "[", "[", "point", "[", "0", "]", "/", "h", ",", "point", "[", "1", "]", "/", "w", ",", "point", "[", "2", "]", ",", "point", "[", "3", "]", "]", "for", "point", "in", "stroke", "if", "not", "point", "[", "2", "]", "==", "point", "[", "3", "]", "]", "\n", "if", "not", "len", "(", "stroke_0", ")", "==", "100", ":", "\n", "            ", "stroke_0", "+=", "[", "[", "0.", ",", "0.", ",", "0.", ",", "0.", "]", "for", "i", "in", "range", "(", "100", "-", "len", "(", "stroke_0", ")", ")", "]", "\n", "", "return", "np", ".", "array", "(", "stroke_0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "elif", "rot", "==", "90", ":", "\n", "        ", "stroke_90", "=", "[", "[", "(", "h", "-", "point", "[", "1", "]", ")", "/", "h", ",", "point", "[", "0", "]", "/", "w", ",", "point", "[", "2", "]", ",", "point", "[", "3", "]", "]", "for", "point", "in", "stroke", "if", "not", "point", "[", "2", "]", "==", "point", "[", "3", "]", "]", "\n", "if", "not", "len", "(", "stroke_90", ")", "==", "100", ":", "\n", "            ", "stroke_90", "+=", "[", "[", "0.", ",", "0.", ",", "0.", ",", "0.", "]", "for", "i", "in", "range", "(", "100", "-", "len", "(", "stroke_90", ")", ")", "]", "\n", "", "return", "np", ".", "array", "(", "stroke_90", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "elif", "rot", "==", "180", ":", "\n", "        ", "stroke_180", "=", "[", "[", "(", "w", "-", "point", "[", "0", "]", ")", "/", "h", ",", "(", "h", "-", "point", "[", "1", "]", ")", "/", "w", ",", "point", "[", "2", "]", ",", "point", "[", "3", "]", "]", "for", "point", "in", "stroke", "if", "not", "point", "[", "2", "]", "==", "point", "[", "3", "]", "]", "\n", "if", "not", "len", "(", "stroke_180", ")", "==", "100", ":", "\n", "            ", "stroke_180", "+=", "[", "[", "0.", ",", "0.", ",", "0.", ",", "0.", "]", "for", "i", "in", "range", "(", "100", "-", "len", "(", "stroke_180", ")", ")", "]", "\n", "", "return", "np", ".", "array", "(", "stroke_180", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "elif", "rot", "==", "270", ":", "\n", "        ", "stroke_270", "=", "[", "[", "point", "[", "1", "]", "/", "h", ",", "(", "w", "-", "point", "[", "0", "]", ")", "/", "w", ",", "point", "[", "2", "]", ",", "point", "[", "3", "]", "]", "for", "point", "in", "stroke", "if", "not", "point", "[", "2", "]", "==", "point", "[", "3", "]", "]", "\n", "if", "not", "len", "(", "stroke_270", ")", "==", "100", ":", "\n", "            ", "stroke_270", "+=", "[", "[", "0.", ",", "0.", ",", "0.", ",", "0.", "]", "for", "i", "in", "range", "(", "100", "-", "len", "(", "stroke_270", ")", ")", "]", "\n", "", "return", "np", ".", "array", "(", "stroke_270", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'rotation should be 0, 90, 180, or 270 degrees'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.dataloader_stroke.transform_rnn": [[111, 119], ["numpy.array", "coordinate_transform_utils.coordinate_transform_utils", "np.vstack.astype", "numpy.array", "numpy.vstack", "range"], "function", ["home.repos.pwc.inspect_result.zzz1515151_self-supervised_learning_sketch.dataloader.coordinate_transform_utils.coordinate_transform_utils"], ["", "", "def", "transform_rnn", "(", "stroke", ",", "a_x", "=", "0.", ",", "b_x", "=", "0.5", ",", "c_x", "=", "1.0", ",", "a_y", "=", "0.", ",", "b_y", "=", "0.5", ",", "c_y", "=", "1.0", ")", ":", "\n", "    ", "stroke", "=", "np", ".", "array", "(", "[", "[", "point", "[", "0", "]", ",", "point", "[", "1", "]", ",", "point", "[", "2", "]", ",", "point", "[", "3", "]", "]", "for", "point", "in", "stroke", "if", "not", "point", "[", "2", "]", "==", "point", "[", "3", "]", "]", ")", "\n", "stroke", "=", "coordinate_transform_utils", "(", "stroke", ",", "a_x", ",", "b_x", ",", "c_x", ",", "a_y", ",", "b_y", ",", "c_y", ")", "\n", "if", "not", "stroke", ".", "shape", "[", "0", "]", "==", "100", ":", "\n", "        ", "stroke_rest", "=", "np", ".", "array", "(", "[", "[", "0.", ",", "0.", ",", "0.", ",", "0.", "]", "for", "i", "in", "range", "(", "100", "-", "stroke", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "stroke", "=", "np", ".", "vstack", "(", "(", "stroke", ",", "stroke_rest", ")", ")", "\n", "", "return", "stroke", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]]}