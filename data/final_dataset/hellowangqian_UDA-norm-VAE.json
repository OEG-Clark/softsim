{"home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.TwoModalDataset.__init__": [[20, 25], ["train_vae_feat_digits_zNorm.TwoModalDataset.load_mat", "numpy.zeros_like", "numpy.ones_like"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.load_mat"], ["    ", "def", "__init__", "(", "self", ",", "phase", "=", "'train'", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "        ", "self", ".", "phase", "=", "phase", "\n", "self", ".", "load_mat", "(", "sourceDomainIndex", ",", "targetDomainIndex", ",", "trialIndex", ")", "\n", "self", ".", "pseudo_label_B", "=", "np", ".", "ones_like", "(", "self", ".", "label_B", ")", "*", "-", "1", "# this will be dynamically updated during training", "\n", "self", ".", "pseudo_score_B", "=", "np", ".", "zeros_like", "(", "self", ".", "label_B", ")", "\n", "", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.TwoModalDataset.load_mat": [[25, 48], ["sklearn.preprocessing.normalize", "sklearn.preprocessing.normalize", "sklearn.preprocessing.normalize", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "str", "str"], "methods", ["None"], ["", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "# load features and labels", "\n", "        ", "data_dir", "=", "'./digits_features/'", "\n", "source", "=", "domainSet", "[", "sourceDomainIndex", "]", "\n", "target", "=", "domainSet", "[", "targetDomainIndex", "]", "\n", "if", "sourceDomainIndex", "==", "0", ":", "\n", "            ", "data", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "'digits-MCD-'", "+", "source", "+", "'-'", "+", "target", "+", "'-trial'", "+", "str", "(", "trialIndex", ")", "+", "'-numIter-5-bs-64lr0.002'", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "'digits-MCD-'", "+", "source", "+", "'-'", "+", "target", "+", "'-trial'", "+", "str", "(", "trialIndex", ")", "+", "'-numIter-10-bs-64lr0.002'", ")", "\n", "", "if", "sourceDomainIndex", "==", "1", ":", "\n", "            ", "factor", "=", "5", "\n", "", "else", ":", "\n", "            ", "factor", "=", "10", "\n", "", "feature_A", "=", "data", "[", "'feat_train'", "]", "[", ":", ":", "factor", ",", ":", "]", "\n", "self", ".", "feature_A", "=", "normalize", "(", "feature_A", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_A", "=", "data", "[", "'labels_train'", "]", "[", "0", "]", "[", ":", ":", "factor", "]", "\n", "self", ".", "num_class", "=", "10", "\n", "feature_B", "=", "data", "[", "'feat_target_train'", "]", "\n", "self", ".", "feature_B", "=", "normalize", "(", "feature_B", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_B", "=", "data", "[", "'labels_target_train'", "]", "[", "0", "]", "\n", "feature_test", "=", "data", "[", "'feat_test'", "]", "\n", "self", ".", "feature_test", "=", "normalize", "(", "feature_test", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_test", "=", "data", "[", "'labels_test'", "]", "[", "0", "]", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.TwoModalDataset.__len__": [[48, 55], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'train'", ":", "#or self.phase == 'val':", "\n", "            ", "return", "self", ".", "feature_A", ".", "shape", "[", "0", "]", "\n", "", "if", "self", ".", "phase", "==", "'target_train'", ":", "\n", "            ", "return", "self", ".", "feature_B", ".", "shape", "[", "0", "]", "\n", "", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "return", "self", ".", "feature_test", ".", "shape", "[", "0", "]", "\n", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.TwoModalDataset.__getitem__": [[55, 69], ["numpy.argwhere", "len", "numpy.random.choice", "numpy.random.randint", "len", "numpy.ones_like"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "return", "self", ".", "feature_test", "[", "idx", ",", ":", "]", ",", "self", ".", "label_test", "[", "idx", "]", "\n", "", "if", "self", ".", "phase", "==", "'target_train'", ":", "\n", "            ", "return", "self", ".", "feature_B", "[", "idx", ",", ":", "]", ",", "self", ".", "label_B", "[", "idx", "]", "\n", "# return a pair of regular and xray image features, which are paired randomly", "\n", "", "label", "=", "self", ".", "label_A", "[", "idx", "]", "\n", "indicesB_this_label", "=", "np", ".", "argwhere", "(", "self", ".", "pseudo_label_B", "==", "label", ")", "\n", "if", "len", "(", "indicesB_this_label", ")", ">", "0", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "choice", "(", "indicesB_this_label", "[", ":", ",", "0", "]", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "self", ".", "pseudo_label_B", "[", "idx_B", "]", "\n", "", "else", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "label_B", ")", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "np", ".", "ones_like", "(", "self", ".", "label_A", "[", "idx", "]", ")", "*", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.test_model": [[71, 115], ["time.time", "numpy.zeros", "numpy.zeros", "enumerate", "range", "numpy.mean", "print", "features.to.to", "labels.cpu().detach().numpy.to", "len", "time.time", "torch.set_grad_enabled", "numpy.argmax", "numpy.exp", "model.predict", "model.eval", "model", "preds.cpu().detach().numpy.cpu().detach().numpy", "labels.cpu().detach().numpy.cpu().detach().numpy", "numpy.concatenate", "numpy.concatenate", "numpy.max", "np.zeros.sum", "np.zeros.sum", "preds.cpu().detach().numpy.cpu().detach", "labels.cpu().detach().numpy.cpu().detach", "preds.cpu().detach().numpy.cpu", "labels.cpu().detach().numpy.cpu"], "function", ["None"], ["", "", "", "def", "test_model", "(", "model", ",", "dataset", ",", "dataloader", ",", "device", ",", "model_type", "=", "'knn'", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "num_class", "=", "dataset", ".", "num_class", "\n", "running_corrects", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "num_sample_per_class", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "# Iterate over data.", "\n", "for", "index", ",", "(", "features", ",", "labels", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "        ", "features", "=", "features", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "# zero the parameter gradients", "\n", "# forward", "\n", "# track history if only in train", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "if", "model_type", "==", "'knn'", ":", "\n", "                ", "preds", "=", "model", ".", "predict", "(", "features", ")", "\n", "", "if", "model_type", "==", "'mlp'", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "preds", "=", "model", "(", "features", ")", "\n", "preds", "=", "preds", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "index", "==", "0", ":", "\n", "                ", "outputs_test", "=", "preds", "\n", "labels_test", "=", "labels", "\n", "", "else", ":", "\n", "                ", "outputs_test", "=", "np", ".", "concatenate", "(", "(", "outputs_test", ",", "preds", ")", ",", "0", ")", "\n", "labels_test", "=", "np", ".", "concatenate", "(", "(", "labels_test", ",", "labels", ")", ",", "0", ")", "\n", "", "", "if", "model_type", "==", "'mlp'", ":", "\n", "            ", "preds", "=", "np", ".", "argmax", "(", "outputs_test", ",", "1", ")", "\n", "scores", "=", "np", ".", "exp", "(", "np", ".", "max", "(", "outputs_test", ",", "1", ")", ")", "\n", "", "if", "model_type", "==", "'knn'", ":", "\n", "            ", "preds", "=", "outputs_test", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "labels_test", ")", ")", ":", "\n", "        ", "num_sample_per_class", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "if", "preds", "[", "i", "]", "==", "labels_test", "[", "i", "]", ":", "\n", "            ", "running_corrects", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "\n", "", "", "acc_per_class", "=", "running_corrects", "/", "num_sample_per_class", "\n", "acc", "=", "np", ".", "mean", "(", "acc_per_class", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "#print('Testing complete in {:.0f}m {:.0f}s'.format(time_elapsed // 60, time_elapsed % 60))", "\n", "print", "(", "'per-image acc:{:2.4f}; per-class acc:{:2.4f}'", ".", "format", "(", "running_corrects", ".", "sum", "(", ")", "/", "num_sample_per_class", ".", "sum", "(", ")", ",", "acc", ")", ")", "\n", "return", "preds", ",", "scores", ",", "acc_per_class", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.loss_fn": [[116, 127], ["torch.nn.MSELoss", "torch.sqrt", "distance.sum.sum", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "xS.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "log_varS.exp", "log_varT[].exp", "meanS.pow", "meanT[].pow", "torch.sqrt", "torch.sqrt", "log_varS[].exp", "log_varT[].exp"], "function", ["None"], ["", "def", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", ":", "\n", "    ", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "False", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "reconstruction_loss", "=", "criterion", "(", "recon_xS", ",", "xS", ")", "+", "criterion", "(", "recon_xT", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "\n", "cross_reconstruction_loss", "=", "criterion", "(", "recon_xS2", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "+", "criterion", "(", "recon_xT2", "[", "mask", ",", ":", "]", ",", "xS", "[", "mask", ",", ":", "]", ")", "\n", "KLD", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varS", "-", "meanS", ".", "pow", "(", "2", ")", "-", "log_varS", ".", "exp", "(", ")", ")", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varT", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ".", "pow", "(", "2", ")", "-", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "\n", "distance", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "(", "meanS", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ")", "**", "2", ",", "dim", "=", "1", ")", "+", "torch", ".", "sum", "(", "(", "torch", ".", "sqrt", "(", "log_varS", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "-", "torch", ".", "sqrt", "(", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", ")", "**", "2", ",", "dim", "=", "1", ")", ")", "\n", "distance", "=", "distance", ".", "sum", "(", ")", "\n", "weight", "=", "epoch", "*", "5e-4", "\n", "#print(f'{reconstruction_loss:1.4f}, {cross_reconstruction_loss:1.4f}')", "\n", "return", "(", "reconstruction_loss", "+", "cross_reconstruction_loss", ")", "/", "xS", ".", "size", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.train_classifier": [[128, 157], ["classifier.train", "vae.eval", "numpy.zeros", "numpy.zeros", "range", "enumerate", "scheduler_cls.step", "train_vae_feat_digits_zNorm.generate_z", "torch.cat", "torch.cat", "classifier", "classifier.lossfunction", "optimizer_cls.zero_grad", "classifier.lossfunction.backward", "optimizer_cls.step", "xS.to", "xT.to", "yS.to", "yT.to"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.generate_z"], ["", "def", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", ":", "\n", "    ", "device", "=", "args", ".", "device", "\n", "classifier", ".", "train", "(", ")", "\n", "vae", ".", "eval", "(", ")", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", "datasets", "[", "'train'", "]", ".", "num_class", ")", ")", "\n", "acc", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_cls", ")", ":", "\n", "#print(f'Classifier training epoch {epoch:d}/{args.num_epochs_cls:d}')", "\n", "        ", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloaders", "[", "'train'", "]", ")", ":", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "#x,y = next_batch(vae,batch_size=1024)", "\n", "recon_xS", ",", "recon_xT", "=", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "xT", "=", "xT", "[", "mask", ",", ":", "]", "\n", "yT", "=", "yT", "[", "mask", "]", "\n", "recon_xT", "=", "recon_xT", "[", "mask", ",", ":", "]", "\n", "xtrain", "=", "torch", ".", "cat", "(", "(", "xS", ",", "xT", ",", "recon_xS", ",", "recon_xT", ")", ",", "dim", "=", "0", ")", "\n", "ytrain", "=", "torch", ".", "cat", "(", "(", "yS", ",", "yT", ",", "yS", ",", "yT", ")", ",", "dim", "=", "0", ")", "\n", "output", "=", "classifier", "(", "xtrain", ")", "\n", "loss_cls", "=", "classifier", ".", "lossfunction", "(", "output", ",", "ytrain", ")", "\n", "optimizer_cls", ".", "zero_grad", "(", ")", "\n", "loss_cls", ".", "backward", "(", ")", "\n", "optimizer_cls", ".", "step", "(", ")", "\n", "# test", "\n", "", "scheduler_cls", ".", "step", "(", ")", "\n", "#print(f'epoch:{epoch:02d} ',end='')", "\n", "#preds,scores,acc_per_class[epoch,],acc[epoch] = test_model(classifier, datasets['test'], dataloaders['test'],device,model_type='mlp')", "\n", "#scipy.io.savemat('./results/'+args.filename+'.mat',mdict={'acc_per_class':acc_per_class,'acc':acc})", "\n", "", "return", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.train_vae": [[158, 180], ["vae.train", "range", "collections.defaultdict", "enumerate", "scheduler.step", "vae", "vae", "train_vae_feat_digits_zNorm.loss_fn", "optimizer.zero_grad", "loss_fn.backward", "optimizer.step", "collections.defaultdict", "xS.to", "xT.to", "yS.to", "yT.to", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.loss_fn"], ["", "def", "train_vae", "(", "vae", ",", "dataloader", ",", "args", ",", "optimizer", ",", "scheduler", ")", ":", "\n", "############################################################", "\n", "# train CVAE", "\n", "############################################################", "\n", "    ", "device", "=", "args", ".", "device", "\n", "vae", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_vae", ")", ":", "\n", "\n", "        ", "tracker_epoch", "=", "defaultdict", "(", "lambda", ":", "defaultdict", "(", "dict", ")", ")", "\n", "\n", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "loss", "=", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "", "return", "vae", "\n", "############################################################", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.generate_z": [[184, 189], ["vae.eval", "vae", "vae", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["None"], ["", "def", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", ":", "\n", "    ", "vae", ".", "eval", "(", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "return", "recon_xS2", ",", "recon_xT2", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_feat_digits_zNorm.main": [[190, 260], ["torch.manual_seed", "torch.cuda.is_available", "torch.device", "time.time", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "numpy.zeros", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "range", "torch.cuda.manual_seed", "train_vae_feat_digits_zNorm.TwoModalDataset", "train_classifier.parameters", "train_vae.parameters", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_feat_digits_zNorm.train_classifier", "print", "train_vae_feat_digits_zNorm.test_model", "train_vae_feat_digits_zNorm.test_model", "numpy.zeros", "numpy.int32", "range", "print", "torch.cuda.is_available", "len", "models_zNorm.Classifier", "models_zNorm.VAE", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_feat_digits_zNorm.train_vae", "train_classifier.parameters", "numpy.ones_like", "thisClassFlag.sum", "train_vae.parameters", "models_zNorm.Classifier", "len", "models_zNorm.VAE", "len", "sorted", "numpy.int32", "min"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_classifier", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.test_model", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.test_model", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_vae"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "args", ".", "device", "=", "device", "\n", "ts", "=", "time", ".", "time", "(", ")", "\n", "datasets", "=", "{", "x", ":", "TwoModalDataset", "(", "phase", "=", "x", ",", "sourceDomainIndex", "=", "args", ".", "sourceDomainIndex", ",", "targetDomainIndex", "=", "args", ".", "targetDomainIndex", ",", "trialIndex", "=", "args", ".", "trialIndex", ")", "for", "x", "in", "[", "'train'", ",", "'target_train'", ",", "'test'", "]", "}", "\n", "dataloaders", "=", "{", "}", "\n", "dataloaders", "[", "'train'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'target_train'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'target_train'", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'test'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'test'", "]", ",", "batch_size", "=", "len", "(", "datasets", "[", "'test'", "]", ")", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ")", "\n", "# define a classifier", "\n", "classifier", "=", "Classifier", "(", "input_dim", "=", "100", ",", "num_labels", "=", "10", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "num_epochs_cls", "=", "50", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_iter", ",", "10", ")", ")", "\n", "# define the VAE", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "for", "iter", "in", "range", "(", "args", ".", "num_iter", "+", "5", ")", ":", "\n", "\n", "        ", "if", "iter", ">", "0", ":", "\n", "# define VAE", "\n", "            ", "args", ".", "encoder_layer_sizes", "[", "0", "]", "=", "100", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "# train VAE", "\n", "vae", "=", "train_vae", "(", "vae", ",", "dataloaders", "[", "'train'", "]", ",", "args", ",", "optimizer_vae", ",", "scheduler_vae", ")", "\n", "# train a classifier", "\n", "", "classifier", "=", "Classifier", "(", "input_dim", "=", "100", ",", "num_labels", "=", "10", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "classifier", "=", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", "\n", "# classify target samples", "\n", "print", "(", "f'Iter {iter:02d}: '", ",", "end", "=", "''", ")", "\n", "pseudo_labels", ",", "scores", ",", "acc_per_class", ",", "acc_per_image", "=", "test_model", "(", "classifier", ",", "datasets", "[", "'target_train'", "]", ",", "dataloaders", "[", "'target_train'", "]", ",", "device", ",", "model_type", "=", "'mlp'", ")", "\n", "test_model", "(", "classifier", ",", "datasets", "[", "'test'", "]", ",", "dataloaders", "[", "'test'", "]", ",", "device", ",", "model_type", "=", "'mlp'", ")", "\n", "# update pseudo-labels", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "=", "-", "1", "*", "np", ".", "ones_like", "(", "pseudo_labels", ")", "\n", "#'''", "\n", "trustable", "=", "np", ".", "zeros", "(", "(", "len", "(", "pseudo_labels", ")", ",", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "numSelected", "=", "np", ".", "int32", "(", "(", "iter", "+", "1", ")", "/", "args", ".", "num_iter", "*", "len", "(", "pseudo_labels", ")", "/", "10", ")", "\n", "for", "iCls", "in", "range", "(", "10", ")", ":", "\n", "            ", "thisClassFlag", "=", "pseudo_labels", "==", "iCls", "\n", "numThisClass", "=", "thisClassFlag", ".", "sum", "(", ")", "\n", "\n", "if", "numThisClass", ">", "0", ":", "\n", "                ", "threshold", "=", "sorted", "(", "scores", "[", "thisClassFlag", "]", ",", "reverse", "=", "True", ")", "[", "min", "(", "numThisClass", "-", "1", ",", "numSelected", ")", "]", "\n", "trustable", "=", "trustable", "+", "np", ".", "int32", "(", "(", "scores", ">=", "threshold", ")", "&", "thisClassFlag", ")", "\n", "", "", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "[", "trustable", "==", "1", "]", "=", "pseudo_labels", "[", "trustable", "==", "1", "]", "\n", "print", "(", "(", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", ">", "-", "1", ")", ".", "sum", "(", ")", ")", "\n", "#'''", "\n", "#datasets['train'].pseudo_label_B[scores>0.9-iter*0.1] = pseudo_labels[scores>0.9-iter*0.1]        ", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_score_B", "=", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.TwoModalDataset.__init__": [[20, 25], ["train_vae_office10_zNorm.TwoModalDataset.load_mat", "numpy.zeros_like", "numpy.ones_like"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.load_mat"], ["    ", "def", "__init__", "(", "self", ",", "phase", "=", "'train'", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "        ", "self", ".", "phase", "=", "phase", "\n", "self", ".", "load_mat", "(", "sourceDomainIndex", ",", "targetDomainIndex", ",", "trialIndex", ")", "\n", "self", ".", "pseudo_label_B", "=", "np", ".", "ones_like", "(", "self", ".", "label_B", ")", "*", "-", "1", "# this will be dynamically updated during training", "\n", "self", ".", "pseudo_score_B", "=", "np", ".", "zeros_like", "(", "self", ".", "label_B", ")", "\n", "", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.TwoModalDataset.load_mat": [[25, 38], ["scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "data_A[].astype", "sklearn.preprocessing.normalize", "len", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "data_B[].astype", "sklearn.preprocessing.normalize", "data_A[].squeeze().astype", "numpy.unique", "data_B[].squeeze().astype", "data_A[].squeeze", "data_B[].squeeze"], "methods", ["None"], ["", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "# load features and labels", "\n", "        ", "data_dir", "=", "'../data/Office10/decaf/'", "\n", "# data_dir = 'E:\\DomainAdaptation\\OfficeHomeDataset_10072016/'", "\n", "data_A", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "domainSet", "[", "sourceDomainIndex", "]", "+", "'_decaf.mat'", ")", "\n", "feature_A", "=", "data_A", "[", "'feas'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "feature_A", "=", "normalize", "(", "feature_A", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_A", "=", "data_A", "[", "'labels'", "]", ".", "squeeze", "(", ")", ".", "astype", "(", "np", ".", "int64", ")", "-", "1", "\n", "self", ".", "num_class", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "label_A", ")", ")", "\n", "data_B", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "domainSet", "[", "targetDomainIndex", "]", "+", "'_decaf.mat'", ")", "\n", "feature_B", "=", "data_B", "[", "'feas'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "feature_B", "=", "normalize", "(", "feature_B", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_B", "=", "data_B", "[", "'labels'", "]", ".", "squeeze", "(", ")", ".", "astype", "(", "np", ".", "int64", ")", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.TwoModalDataset.__len__": [[39, 44], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'train'", ":", "#or self.phase == 'val':", "\n", "            ", "return", "self", ".", "feature_A", ".", "shape", "[", "0", "]", "\n", "", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "return", "self", ".", "feature_B", ".", "shape", "[", "0", "]", "\n", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.TwoModalDataset.__getitem__": [[44, 58], ["numpy.argwhere", "len", "numpy.random.choice", "numpy.random.randint", "len", "numpy.ones_like"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "idx_B", "=", "idx", "\n", "return", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_B", "[", "idx_B", "]", "\n", "# return a pair of regular and xray image features, which are paired randomly", "\n", "", "label", "=", "self", ".", "label_A", "[", "idx", "]", "\n", "#indicesB_this_label = np.argwhere((self.pseudo_label_B==label) & (self.pseudo_score_B > -1))", "\n", "indicesB_this_label", "=", "np", ".", "argwhere", "(", "self", ".", "pseudo_label_B", "==", "label", ")", "\n", "if", "len", "(", "indicesB_this_label", ")", ">", "0", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "choice", "(", "indicesB_this_label", "[", ":", ",", "0", "]", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "self", ".", "pseudo_label_B", "[", "idx_B", "]", "\n", "", "else", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "label_B", ")", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "np", ".", "ones_like", "(", "self", ".", "label_A", "[", "idx", "]", ")", "*", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.test_model": [[60, 104], ["time.time", "numpy.zeros", "numpy.zeros", "enumerate", "range", "numpy.mean", "print", "features.to.to", "labels.cpu().detach().numpy.to", "len", "time.time", "torch.set_grad_enabled", "numpy.argmax", "numpy.exp", "model.predict", "model.eval", "model", "preds.cpu().detach().numpy.cpu().detach().numpy", "labels.cpu().detach().numpy.cpu().detach().numpy", "numpy.concatenate", "numpy.concatenate", "numpy.max", "np.zeros.sum", "np.zeros.sum", "preds.cpu().detach().numpy.cpu().detach", "labels.cpu().detach().numpy.cpu().detach", "preds.cpu().detach().numpy.cpu", "labels.cpu().detach().numpy.cpu"], "function", ["None"], ["", "", "", "def", "test_model", "(", "model", ",", "dataset", ",", "dataloader", ",", "device", ",", "model_type", "=", "'knn'", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "num_class", "=", "dataset", ".", "num_class", "\n", "running_corrects", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "num_sample_per_class", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "# Iterate over data.", "\n", "for", "index", ",", "(", "features", ",", "labels", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "        ", "features", "=", "features", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "# zero the parameter gradients", "\n", "# forward", "\n", "# track history if only in train", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "if", "model_type", "==", "'knn'", ":", "\n", "                ", "preds", "=", "model", ".", "predict", "(", "features", ")", "\n", "", "if", "model_type", "==", "'mlp'", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "preds", "=", "model", "(", "features", ")", "\n", "preds", "=", "preds", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "index", "==", "0", ":", "\n", "                ", "outputs_test", "=", "preds", "\n", "labels_test", "=", "labels", "\n", "", "else", ":", "\n", "                ", "outputs_test", "=", "np", ".", "concatenate", "(", "(", "outputs_test", ",", "preds", ")", ",", "0", ")", "\n", "labels_test", "=", "np", ".", "concatenate", "(", "(", "labels_test", ",", "labels", ")", ",", "0", ")", "\n", "", "", "if", "model_type", "==", "'mlp'", ":", "\n", "            ", "preds", "=", "np", ".", "argmax", "(", "outputs_test", ",", "1", ")", "\n", "scores", "=", "np", ".", "exp", "(", "np", ".", "max", "(", "outputs_test", ",", "1", ")", ")", "\n", "", "if", "model_type", "==", "'knn'", ":", "\n", "            ", "preds", "=", "outputs_test", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "labels_test", ")", ")", ":", "\n", "        ", "num_sample_per_class", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "if", "preds", "[", "i", "]", "==", "labels_test", "[", "i", "]", ":", "\n", "            ", "running_corrects", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "\n", "", "", "acc_per_class", "=", "running_corrects", "/", "num_sample_per_class", "\n", "acc", "=", "np", ".", "mean", "(", "acc_per_class", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "#print('Testing complete in {:.0f}m {:.0f}s'.format(time_elapsed // 60, time_elapsed % 60))", "\n", "print", "(", "'per-image acc:{:2.4f}; per-class acc:{:2.4f}'", ".", "format", "(", "running_corrects", ".", "sum", "(", ")", "/", "num_sample_per_class", ".", "sum", "(", ")", ",", "acc", ")", ")", "\n", "return", "preds", ",", "scores", ",", "acc_per_class", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.loss_fn": [[105, 116], ["torch.nn.MSELoss", "torch.sqrt", "distance.sum.sum", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "xS.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "log_varS.exp", "log_varT[].exp", "meanS.pow", "meanT[].pow", "torch.sqrt", "torch.sqrt", "log_varS[].exp", "log_varT[].exp"], "function", ["None"], ["", "def", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", ":", "\n", "    ", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "False", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "reconstruction_loss", "=", "criterion", "(", "recon_xS", ",", "xS", ")", "+", "criterion", "(", "recon_xT", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "\n", "cross_reconstruction_loss", "=", "criterion", "(", "recon_xS2", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "+", "criterion", "(", "recon_xT2", "[", "mask", ",", ":", "]", ",", "xS", "[", "mask", ",", ":", "]", ")", "\n", "KLD", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varS", "-", "meanS", ".", "pow", "(", "2", ")", "-", "log_varS", ".", "exp", "(", ")", ")", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varT", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ".", "pow", "(", "2", ")", "-", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "\n", "distance", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "(", "meanS", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ")", "**", "2", ",", "dim", "=", "1", ")", "+", "torch", ".", "sum", "(", "(", "torch", ".", "sqrt", "(", "log_varS", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "-", "torch", ".", "sqrt", "(", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", ")", "**", "2", ",", "dim", "=", "1", ")", ")", "\n", "distance", "=", "distance", ".", "sum", "(", ")", "\n", "weight", "=", "epoch", "*", "5e-4", "\n", "#print(f'{reconstruction_loss:1.4f}, {cross_reconstruction_loss:1.4f}, {distance:1.4f},{KLD:1.4f}')", "\n", "return", "(", "reconstruction_loss", "+", "cross_reconstruction_loss", ")", "/", "xS", ".", "size", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.train_classifier": [[117, 146], ["classifier.train", "vae.eval", "numpy.zeros", "numpy.zeros", "range", "enumerate", "scheduler_cls.step", "train_vae_office10_zNorm.generate_z", "torch.cat", "torch.cat", "classifier", "classifier.lossfunction", "optimizer_cls.zero_grad", "classifier.lossfunction.backward", "optimizer_cls.step", "xS.to", "xT.to", "yS.to", "yT.to"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.generate_z"], ["", "def", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", ":", "\n", "    ", "device", "=", "args", ".", "device", "\n", "classifier", ".", "train", "(", ")", "\n", "vae", ".", "eval", "(", ")", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", "datasets", "[", "'train'", "]", ".", "num_class", ")", ")", "\n", "acc", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_cls", ")", ":", "\n", "#print(f'Classifier training epoch {epoch:d}/{args.num_epochs_cls:d}')", "\n", "        ", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloaders", "[", "'train'", "]", ")", ":", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "#x,y = next_batch(vae,batch_size=1024)", "\n", "recon_xS", ",", "recon_xT", "=", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "xT", "=", "xT", "[", "mask", ",", ":", "]", "\n", "yT", "=", "yT", "[", "mask", "]", "\n", "recon_xT", "=", "recon_xT", "[", "mask", ",", ":", "]", "\n", "xtrain", "=", "torch", ".", "cat", "(", "(", "xS", ",", "xT", ",", "recon_xS", ",", "recon_xT", ")", ",", "dim", "=", "0", ")", "\n", "ytrain", "=", "torch", ".", "cat", "(", "(", "yS", ",", "yT", ",", "yS", ",", "yT", ")", ",", "dim", "=", "0", ")", "\n", "output", "=", "classifier", "(", "xtrain", ")", "\n", "loss_cls", "=", "classifier", ".", "lossfunction", "(", "output", ",", "ytrain", ")", "\n", "optimizer_cls", ".", "zero_grad", "(", ")", "\n", "loss_cls", ".", "backward", "(", ")", "\n", "optimizer_cls", ".", "step", "(", ")", "\n", "# test", "\n", "", "scheduler_cls", ".", "step", "(", ")", "\n", "#print(f'epoch:{epoch:02d} ',end='')", "\n", "#preds,scores,acc_per_class[epoch,],acc[epoch] = test_model(classifier, datasets['test'], dataloaders['test'],device,model_type='mlp')", "\n", "#scipy.io.savemat('./results/'+args.filename+'.mat',mdict={'acc_per_class':acc_per_class,'acc':acc})", "\n", "", "return", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.train_vae": [[147, 169], ["vae.train", "range", "collections.defaultdict", "enumerate", "scheduler.step", "vae", "vae", "train_vae_office10_zNorm.loss_fn", "optimizer.zero_grad", "loss_fn.backward", "optimizer.step", "collections.defaultdict", "xS.to", "xT.to", "yS.to", "yT.to", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.loss_fn"], ["", "def", "train_vae", "(", "vae", ",", "dataloader", ",", "args", ",", "optimizer", ",", "scheduler", ")", ":", "\n", "############################################################", "\n", "# train CVAE", "\n", "############################################################", "\n", "    ", "device", "=", "args", ".", "device", "\n", "vae", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_vae", ")", ":", "\n", "\n", "        ", "tracker_epoch", "=", "defaultdict", "(", "lambda", ":", "defaultdict", "(", "dict", ")", ")", "\n", "\n", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "loss", "=", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "", "return", "vae", "\n", "############################################################", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.generate_z": [[172, 177], ["vae.eval", "vae", "vae", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["None"], ["", "def", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", ":", "\n", "    ", "vae", ".", "eval", "(", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "return", "recon_xS2", ",", "recon_xT2", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office10_zNorm.main": [[178, 245], ["torch.manual_seed", "torch.cuda.is_available", "torch.device", "time.time", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "numpy.zeros", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "range", "torch.cuda.manual_seed", "train_vae_office10_zNorm.TwoModalDataset", "train_classifier.parameters", "train_vae.parameters", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_office10_zNorm.train_classifier", "print", "train_vae_office10_zNorm.test_model", "numpy.zeros", "numpy.int32", "range", "print", "torch.cuda.is_available", "len", "len", "models_zNorm.Classifier", "models_zNorm.VAE", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_office10_zNorm.train_vae", "train_classifier.parameters", "numpy.ones_like", "thisClassFlag.sum", "train_vae.parameters", "models_zNorm.Classifier", "len", "models_zNorm.VAE", "len", "sorted", "numpy.int32", "min"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_classifier", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.test_model", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_vae"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "args", ".", "device", "=", "device", "\n", "ts", "=", "time", ".", "time", "(", ")", "\n", "datasets", "=", "{", "x", ":", "TwoModalDataset", "(", "phase", "=", "x", ",", "sourceDomainIndex", "=", "args", ".", "sourceDomainIndex", ",", "targetDomainIndex", "=", "args", ".", "targetDomainIndex", ",", "trialIndex", "=", "args", ".", "trialIndex", ")", "for", "x", "in", "[", "'train'", ",", "'test'", "]", "}", "\n", "dataloaders", "=", "{", "}", "\n", "dataloaders", "[", "'train'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'trainall'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "len", "(", "datasets", "[", "'train'", "]", ")", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'test'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'test'", "]", ",", "batch_size", "=", "len", "(", "datasets", "[", "'test'", "]", ")", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ")", "\n", "# define a classifier", "\n", "classifier", "=", "Classifier", "(", "input_dim", "=", "4096", ",", "num_labels", "=", "10", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "num_epochs_cls", "=", "50", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_iter", ",", "10", ")", ")", "\n", "# define the VAE", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "for", "iter", "in", "range", "(", "args", ".", "num_iter", "+", "5", ")", ":", "\n", "        ", "if", "iter", ">", "0", ":", "\n", "# define VAE", "\n", "            ", "args", ".", "encoder_layer_sizes", "[", "0", "]", "=", "4096", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "# train VAE", "\n", "vae", "=", "train_vae", "(", "vae", ",", "dataloaders", "[", "'train'", "]", ",", "args", ",", "optimizer_vae", ",", "scheduler_vae", ")", "\n", "# train a classifier", "\n", "", "classifier", "=", "Classifier", "(", "input_dim", "=", "4096", ",", "num_labels", "=", "10", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "classifier", "=", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", "\n", "# classify target samples", "\n", "print", "(", "f'Iter {iter:02d}: '", ",", "end", "=", "''", ")", "\n", "pseudo_labels", ",", "scores", ",", "acc_per_class", ",", "acc_per_image", "=", "test_model", "(", "classifier", ",", "datasets", "[", "'test'", "]", ",", "dataloaders", "[", "'test'", "]", ",", "device", ",", "model_type", "=", "'mlp'", ")", "\n", "# update pseudo-labels,", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "=", "-", "1", "*", "np", ".", "ones_like", "(", "pseudo_labels", ")", "\n", "#'''", "\n", "trustable", "=", "np", ".", "zeros", "(", "(", "len", "(", "pseudo_labels", ")", ",", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "numSelected", "=", "np", ".", "int32", "(", "(", "iter", "+", "1", ")", "/", "args", ".", "num_iter", "*", "len", "(", "pseudo_labels", ")", "/", "10", ")", "\n", "for", "iCls", "in", "range", "(", "10", ")", ":", "\n", "            ", "thisClassFlag", "=", "pseudo_labels", "==", "iCls", "\n", "numThisClass", "=", "thisClassFlag", ".", "sum", "(", ")", "\n", "if", "numThisClass", ">", "0", ":", "\n", "                ", "threshold", "=", "sorted", "(", "scores", "[", "thisClassFlag", "]", ",", "reverse", "=", "True", ")", "[", "min", "(", "numThisClass", "-", "1", ",", "numSelected", ")", "]", "\n", "trustable", "=", "trustable", "+", "np", ".", "int32", "(", "(", "scores", ">=", "threshold", ")", "&", "thisClassFlag", ")", "\n", "", "", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "[", "trustable", "==", "1", "]", "=", "pseudo_labels", "[", "trustable", "==", "1", "]", "\n", "print", "(", "(", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", ">", "-", "1", ")", ".", "sum", "(", ")", ")", "\n", "#'''", "\n", "#datasets['train'].pseudo_label_B[scores>0.9-iter*0.1] = pseudo_labels[scores>0.9-iter*0.1]        ", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_score_B", "=", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.TwoModalDataset.__init__": [[32, 51], ["torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.USPS", "torchvision.datasets.USPS", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "train_zNorm_DTN_digits.TwoModalDataset.update_dataset", "numpy.ones_like", "len"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.TwoModalDataset.update_dataset"], ["    ", "def", "__init__", "(", "self", ",", "phase", "=", "'train'", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "        ", "data_dir", "=", "'../data/Digits/'", "\n", "self", ".", "datasets", "=", "{", "}", "\n", "self", ".", "datasets", "[", "'mnist-train'", "]", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "data_dir", "+", "'mnist/'", ",", "download", "=", "True", ",", "train", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "self", ".", "datasets", "[", "'mnist-test'", "]", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "data_dir", "+", "'mnist/'", ",", "download", "=", "True", ",", "train", "=", "False", ",", "transform", "=", "test_transform", ")", "\n", "self", ".", "datasets", "[", "'usps-train'", "]", "=", "torchvision", ".", "datasets", ".", "USPS", "(", "data_dir", "+", "'usps/'", ",", "download", "=", "True", ",", "train", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "self", ".", "datasets", "[", "'usps-test'", "]", "=", "torchvision", ".", "datasets", ".", "USPS", "(", "data_dir", "+", "'usps/'", ",", "download", "=", "True", ",", "train", "=", "False", ",", "transform", "=", "test_transform", ")", "\n", "self", ".", "datasets", "[", "'svhn-train'", "]", "=", "torchvision", ".", "datasets", ".", "SVHN", "(", "data_dir", "+", "'svhn/'", ",", "download", "=", "False", ",", "split", "=", "'train'", ",", "transform", "=", "train_transform", ")", "\n", "self", ".", "datasets", "[", "'svhn-test'", "]", "=", "torchvision", ".", "datasets", ".", "SVHN", "(", "data_dir", "+", "'svhn/'", ",", "download", "=", "False", ",", "split", "=", "'test'", ",", "transform", "=", "test_transform", ")", "\n", "self", ".", "phase", "=", "phase", "\n", "\n", "self", ".", "sourceTrainDataset", "=", "self", ".", "datasets", "[", "domainSet", "[", "sourceDomainIndex", "]", "+", "'-train'", "]", "\n", "self", ".", "num_class", "=", "10", "#len(np.unique(self.sourceTrainDataset.targets))", "\n", "self", ".", "targetTrainDataset", "=", "self", ".", "datasets", "[", "domainSet", "[", "targetDomainIndex", "]", "+", "'-train'", "]", "\n", "#self.targetLabels = self.targetTrainDataset.targets", "\n", "self", ".", "pseudoTargetLabels", "=", "np", ".", "ones_like", "(", "(", "len", "(", "self", ".", "targetTrainDataset", ")", ",", ")", ")", "*", "-", "1", "\n", "self", ".", "sourceTestDataset", "=", "self", ".", "datasets", "[", "domainSet", "[", "sourceDomainIndex", "]", "+", "'-test'", "]", "\n", "self", ".", "testDataset", "=", "self", ".", "datasets", "[", "domainSet", "[", "targetDomainIndex", "]", "+", "'-test'", "]", "\n", "self", ".", "update_dataset", "(", "self", ".", "pseudoTargetLabels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.TwoModalDataset.__len__": [[52, 59], ["len", "len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'train'", ":", "#or self.phase == 'val':", "\n", "            ", "return", "len", "(", "self", ".", "sourceTrainDataset", ")", "\n", "", "if", "self", ".", "phase", "==", "'target_train'", ":", "\n", "            ", "return", "len", "(", "self", ".", "targetTrainDataset", ")", "\n", "", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "return", "len", "(", "self", ".", "testDataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.TwoModalDataset.update_dataset": [[60, 64], ["numpy.where"], "methods", ["None"], ["", "", "def", "update_dataset", "(", "self", ",", "pseudo_label", ")", ":", "\n", "        ", "self", ".", "pseudoTargetLabels", "=", "pseudo_label", "\n", "self", ".", "pseudoMask", "=", "self", ".", "pseudoTargetLabels", "!=", "-", "1", "\n", "self", ".", "pseudoLabelIndices", "=", "np", ".", "where", "(", "self", ".", "pseudoMask", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.TwoModalDataset.__getitem__": [[65, 97], ["img.repeat.repeat.repeat", "numpy.argwhere", "len", "numpy.random.choice", "numpy.random.randint", "imgA.repeat.repeat.repeat", "imgB.repeat.repeat.repeat", "len", "numpy.ones_like", "img.repeat.repeat.repeat"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "# return a pair of source and target images, which are from the same class but not necessarily the same image", "\n", "        ", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "img", "=", "self", ".", "testDataset", "[", "idx", "]", "[", "0", "]", "\n", "if", "img", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "                ", "img", "=", "img", ".", "repeat", "(", "3", ",", "1", ",", "1", ")", "\n", "", "return", "img", ",", "self", ".", "testDataset", "[", "idx", "]", "[", "1", "]", "\n", "", "elif", "self", ".", "phase", "==", "'train'", ":", "\n", "            ", "labelA", "=", "self", ".", "sourceTrainDataset", "[", "idx", "]", "[", "1", "]", "\n", "imgA", "=", "self", ".", "sourceTrainDataset", "[", "idx", "]", "[", "0", "]", "\n", "\n", "indicesB_this_label", "=", "np", ".", "argwhere", "(", "self", ".", "pseudoTargetLabels", "==", "labelA", ")", "\n", "if", "len", "(", "indicesB_this_label", ")", ">", "0", ":", "\n", "                ", "idx_B", "=", "np", ".", "random", ".", "choice", "(", "indicesB_this_label", "[", ":", ",", "0", "]", ")", "\n", "imgB", "=", "self", ".", "targetTrainDataset", "[", "idx_B", "]", "[", "0", "]", "\n", "labelB", "=", "self", ".", "pseudoTargetLabels", "[", "idx_B", "]", "\n", "", "else", ":", "\n", "                ", "idx_B", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "targetTrainDataset", ")", ")", "\n", "imgB", "=", "self", ".", "targetTrainDataset", "[", "idx_B", "]", "[", "0", "]", "\n", "labelB", "=", "np", ".", "ones_like", "(", "labelA", ")", "*", "-", "1", "\n", "", "if", "imgA", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "                ", "imgA", "=", "imgA", ".", "repeat", "(", "3", ",", "1", ",", "1", ")", "\n", "", "if", "imgB", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "                ", "imgB", "=", "imgB", ".", "repeat", "(", "3", ",", "1", ",", "1", ")", "\n", "\n", "", "return", "imgA", ",", "imgB", ",", "labelA", ",", "labelB", "\n", "", "elif", "self", ".", "phase", "==", "'target_train'", ":", "\n", "            ", "img", "=", "self", ".", "targetTrainDataset", "[", "idx", "]", "[", "0", "]", "\n", "if", "img", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "                ", "img", "=", "img", ".", "repeat", "(", "3", ",", "1", ",", "1", ")", "\n", "", "label", "=", "self", ".", "targetTrainDataset", "[", "idx", "]", "[", "1", "]", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.test_model": [[99, 140], ["time.time", "numpy.zeros", "numpy.zeros", "enumerate", "range", "print", "numpy.mean", "print", "features.to.to", "labels.cpu().detach().numpy.to", "len", "time.time", "torch.set_grad_enabled", "torch.set_grad_enabled", "numpy.argmax", "numpy.max", "model.predict", "model.eval", "model", "preds.cpu().detach().numpy.cpu().detach().numpy", "labels.cpu().detach().numpy.cpu().detach().numpy", "numpy.concatenate", "numpy.concatenate", "numpy.sum", "numpy.sum", "preds.cpu().detach().numpy.cpu().detach", "labels.cpu().detach().numpy.cpu().detach", "preds.cpu().detach().numpy.cpu", "labels.cpu().detach().numpy.cpu"], "function", ["None"], ["", "", "", "def", "test_model", "(", "model", ",", "dataset", ",", "dataloader", ",", "device", ",", "model_type", "=", "'knn'", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "num_class", "=", "dataset", ".", "num_class", "\n", "running_corrects", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "num_sample_per_class", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "# Iterate over data.", "\n", "for", "index", ",", "(", "features", ",", "labels", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "        ", "features", "=", "features", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "if", "model_type", "==", "'knn'", ":", "\n", "                ", "preds", "=", "model", ".", "predict", "(", "features", ")", "\n", "", "if", "model_type", "==", "'mlp'", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "preds", "=", "model", "(", "features", ")", "\n", "preds", "=", "preds", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "index", "==", "0", ":", "\n", "                ", "outputs_test", "=", "preds", "\n", "labels_test", "=", "labels", "\n", "", "else", ":", "\n", "                ", "outputs_test", "=", "np", ".", "concatenate", "(", "(", "outputs_test", ",", "preds", ")", ",", "0", ")", "\n", "labels_test", "=", "np", ".", "concatenate", "(", "(", "labels_test", ",", "labels", ")", ",", "0", ")", "\n", "", "", "if", "model_type", "==", "'mlp'", ":", "\n", "            ", "preds", "=", "np", ".", "argmax", "(", "outputs_test", ",", "1", ")", "\n", "scores", "=", "np", ".", "max", "(", "outputs_test", ",", "1", ")", "\n", "", "if", "model_type", "==", "'knn'", ":", "\n", "            ", "preds", "=", "outputs_test", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "labels_test", ")", ")", ":", "\n", "        ", "num_sample_per_class", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "if", "preds", "[", "i", "]", "==", "labels_test", "[", "i", "]", ":", "\n", "            ", "running_corrects", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "\n", "", "", "acc_per_class", "=", "running_corrects", "/", "num_sample_per_class", "\n", "print", "(", "f'per-image acc: {np.sum(running_corrects)/np.sum(num_sample_per_class) :2.4f}; '", ",", "end", "=", "''", ")", "\n", "acc", "=", "np", ".", "mean", "(", "acc_per_class", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "#print('Testing complete in {:.0f}m {:.0f}s'.format(time_elapsed // 60, time_elapsed % 60))", "\n", "print", "(", "'per-class acc: {:2.4f}'", ".", "format", "(", "acc", ")", ")", "\n", "return", "preds", ",", "scores", ",", "acc_per_class", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.op_copy": [[141, 145], ["None"], "function", ["None"], ["", "def", "op_copy", "(", "optimizer", ")", ":", "\n", "    ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr0'", "]", "=", "param_group", "[", "'lr'", "]", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.lr_scheduler": [[146, 154], ["None"], "function", ["None"], ["", "def", "lr_scheduler", "(", "optimizer", ",", "iter_num", ",", "max_iter", ",", "gamma", "=", "10", ",", "power", "=", "0.75", ")", ":", "\n", "    ", "decay", "=", "(", "1", "+", "gamma", "*", "iter_num", "/", "max_iter", ")", "**", "(", "-", "power", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "param_group", "[", "'lr0'", "]", "*", "decay", "\n", "param_group", "[", "'weight_decay'", "]", "=", "1e-3", "\n", "param_group", "[", "'momentum'", "]", "=", "0.9", "\n", "param_group", "[", "'nesterov'", "]", "=", "True", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.loss_fn": [[155, 166], ["torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "xS.size"], "function", ["None"], ["", "def", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", ":", "\n", "    ", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "False", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "reconstruction_loss", "=", "criterion", "(", "recon_xS", ",", "xS", ")", "+", "criterion", "(", "recon_xT", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "\n", "cross_reconstruction_loss", "=", "criterion", "(", "recon_xS2", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "+", "criterion", "(", "recon_xT2", "[", "mask", ",", ":", "]", ",", "xS", "[", "mask", ",", ":", "]", ")", "\n", "#KLD = -0.5 * torch.sum(1 + log_varS - meanS.pow(2) - log_varS.exp())  -0.5 * torch.sum(1 + log_varT[mask,:] - meanT[mask,:].pow(2) - log_varT[mask,:].exp())", "\n", "#distance = torch.sqrt(torch.sum((meanS[mask,:] - meanT[mask,:]) ** 2, dim=1) + torch.sum((torch.sqrt(log_varS[mask,:].exp()) - torch.sqrt(log_varT[mask,:].exp())) ** 2, dim=1))", "\n", "#distance = distance.sum()", "\n", "#weight = epoch*5e-4", "\n", "#print(f'{reconstruction_loss:1.4f}, {cross_reconstruction_loss:1.4f}')", "\n", "return", "(", "reconstruction_loss", "+", "cross_reconstruction_loss", ")", "/", "xS", ".", "size", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.train_classifier": [[167, 199], ["vae.eval", "numpy.zeros", "numpy.zeros", "range", "classifier.train", "enumerate", "len", "train_zNorm_DTN_digits.lr_scheduler", "train_zNorm_DTN_digits.generate_z", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "classifier", "optimizer_cls.zero_grad", "loss_cls.backward", "optimizer_cls.step", "xS.to", "xT.to", "yS.to", "yT.to", "loss.CrossEntropyLabelSmooth"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.lr_scheduler", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.generate_z"], ["", "def", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", ":", "\n", "    ", "device", "=", "args", ".", "device", "\n", "vae", ".", "eval", "(", ")", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", "datasets", "[", "'train'", "]", ".", "num_class", ")", ")", "\n", "acc", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", ")", ")", "\n", "max_iter", "=", "args", ".", "num_epochs_cls", "*", "len", "(", "datasets", "[", "'train'", "]", ")", "/", "args", ".", "batch_size", "\n", "iter_num", "=", "0", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_cls", ")", ":", "\n", "        ", "classifier", ".", "train", "(", ")", "\n", "#print(f'Classifier training epoch {epoch:d}/{args.num_epochs_cls:d}')", "\n", "#print(optimizer_cls.param_groups[0]['lr'])", "\n", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloaders", "[", "'train'", "]", ")", ":", "\n", "            ", "lr_scheduler", "(", "optimizer_cls", ",", "iter_num", "=", "iter_num", ",", "max_iter", "=", "max_iter", ")", "\n", "iter_num", "+=", "1", "\n", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "recon_xS", ",", "recon_xT", "=", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "xT", "=", "xT", "[", "mask", ",", ":", "]", "\n", "yT", "=", "yT", "[", "mask", "]", "\n", "#pdb.set_trace()  ", "\n", "recon_xT", "=", "recon_xT", "[", "mask", ",", ":", "]", "\n", "xtrain", "=", "torch", ".", "cat", "(", "(", "xS", ",", "xT", ",", "recon_xS", ",", "recon_xT", ")", ",", "dim", "=", "0", ")", "\n", "ytrain", "=", "torch", ".", "cat", "(", "(", "yS", ",", "yT", ",", "yS", ",", "yT", ")", ",", "dim", "=", "0", ")", "\n", "output", "=", "classifier", "(", "xtrain", ")", "\n", "#loss_cls = classifier.lossfunction(output, y)", "\n", "loss_cls", "=", "loss", ".", "CrossEntropyLabelSmooth", "(", "num_classes", "=", "10", ",", "epsilon", "=", "args", ".", "smooth", ")", "(", "output", ",", "ytrain", ")", "\n", "optimizer_cls", ".", "zero_grad", "(", ")", "\n", "loss_cls", ".", "backward", "(", ")", "\n", "optimizer_cls", ".", "step", "(", ")", "\n", "#scheduler_cls.step()", "\n", "#test_model(classifier,datasets['test'],dataloaders['test'], device,model_type='mlp')", "\n", "", "", "return", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.train_vae": [[200, 222], ["vae.train", "range", "collections.defaultdict", "enumerate", "scheduler.step", "vae", "vae", "train_zNorm_DTN_digits.loss_fn", "optimizer.zero_grad", "loss_fn.backward", "optimizer.step", "collections.defaultdict", "xS.to", "xT.to", "yS.to", "yT.to", "torch.zeros().long().to", "torch.zeros().long().to", "torch.ones().long().to", "torch.ones().long().to", "torch.zeros().long", "torch.zeros().long", "torch.ones().long", "torch.ones().long", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.loss_fn"], ["", "def", "train_vae", "(", "vae", ",", "dataloader", ",", "args", ",", "optimizer", ",", "scheduler", ")", ":", "\n", "############################################################", "\n", "# train CVAE", "\n", "############################################################", "\n", "    ", "device", "=", "args", ".", "device", "\n", "vae", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_vae", ")", ":", "\n", "\n", "        ", "tracker_epoch", "=", "defaultdict", "(", "lambda", ":", "defaultdict", "(", "dict", ")", ")", "\n", "\n", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros", "(", "(", "xS", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones", "(", "(", "xT", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "loss", "=", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "", "return", "vae", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.generate_z": [[226, 231], ["vae.eval", "vae", "vae", "torch.zeros().long().to", "torch.zeros().long().to", "torch.ones().long().to", "torch.ones().long().to", "torch.zeros().long", "torch.zeros().long", "torch.ones().long", "torch.ones().long", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", ":", "\n", "    ", "vae", ".", "eval", "(", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros", "(", "(", "xS", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones", "(", "(", "xT", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "return", "recon_xS2", ",", "recon_xT2", "\n", "", "def", "main", "(", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.main": [[231, 304], ["torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "torch.device", "torch.device", "time.time", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "numpy.zeros", "models_zNorm_cnn.VAE().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "range", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "train_zNorm_DTN_digits.TwoModalDataset", "train_vae.parameters", "models_zNorm_cnn.Classifier_DTN().to", "torch.optim.SGD", "torch.optim.SGD", "train_zNorm_DTN_digits.op_copy", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "train_zNorm_DTN_digits.train_classifier", "print", "train_zNorm_DTN_digits.test_model", "train_zNorm_DTN_digits.test_model", "numpy.zeros", "numpy.int32", "range", "datasets[].update_dataset", "print", "torch.cuda.is_available", "torch.cuda.is_available", "models_zNorm_cnn.VAE", "models_zNorm_cnn.VAE().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "train_zNorm_DTN_digits.train_vae", "train_classifier.parameters", "numpy.ones_like", "thisClassFlag.sum", "train_vae.parameters", "models_zNorm_cnn.Classifier_DTN", "len", "models_zNorm_cnn.VAE", "len", "sorted", "numpy.int32", "min"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.op_copy", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_classifier", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.test_model", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.test_model", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_zNorm_DTN_digits.TwoModalDataset.update_dataset", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_vae"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "args", ".", "device", "=", "device", "\n", "ts", "=", "time", ".", "time", "(", ")", "\n", "datasets", "=", "{", "x", ":", "TwoModalDataset", "(", "phase", "=", "x", ",", "sourceDomainIndex", "=", "args", ".", "sourceDomainIndex", ",", "targetDomainIndex", "=", "args", ".", "targetDomainIndex", ",", "trialIndex", "=", "args", ".", "trialIndex", ")", "for", "x", "in", "[", "'train'", ",", "'target_train'", ",", "'test'", "]", "}", "\n", "dataloaders", "=", "{", "}", "\n", "num_workers", "=", "8", "\n", "# labeled source samples and pseudo labeled target samples", "\n", "dataloaders", "[", "'train'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "# target training samples", "\n", "dataloaders", "[", "'target_train'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'target_train'", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "num_workers", ")", "\n", "# target test samples", "\n", "dataloaders", "[", "'test'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'test'", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "# define a classifier", "\n", "#classifier = Classifier_DTN(num_channels=3,num_classes=10).to(device) # train and test a classifier", "\n", "#optimizer_cls = torch.optim.SGD(classifier.parameters(), lr=1e-2)", "\n", "#optimizer_cls = op_copy(optimizer_cls)", "\n", "#scheduler_cls = torch.optim.lr_scheduler.StepLR(optimizer_cls, step_size=20, gamma=0.5)", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_iter", ",", "10", ")", ")", "\n", "\n", "# define the VAE", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "for", "iter", "in", "range", "(", "args", ".", "num_iter", "+", "5", ")", ":", "\n", "        ", "if", "iter", ">", "0", ":", "\n", "# define VAE", "\n", "            ", "args", ".", "encoder_layer_sizes", "[", "0", "]", "=", "4096", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "# train VAE", "\n", "vae", "=", "train_vae", "(", "vae", ",", "dataloaders", "[", "'train'", "]", ",", "args", ",", "optimizer_vae", ",", "scheduler_vae", ")", "\n", "# train a classifier", "\n", "", "classifier", "=", "Classifier_DTN", "(", "num_channels", "=", "3", ",", "num_classes", "=", "10", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "#optimizer_cls = torch.optim.Adam(classifier.parameters(), lr=1e-5)", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "SGD", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "1e-2", ")", "\n", "optimizer_cls", "=", "op_copy", "(", "optimizer_cls", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "20", ",", "gamma", "=", "0.5", ")", "\n", "classifier", "=", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", "\n", "# classify target samples", "\n", "print", "(", "f'Iter {iter:02d}: '", ",", "end", "=", "''", ")", "\n", "pseudo_labels", ",", "scores", ",", "acc_per_class", ",", "acc_per_image", "=", "test_model", "(", "classifier", ",", "datasets", "[", "'target_train'", "]", ",", "dataloaders", "[", "'target_train'", "]", ",", "device", ",", "model_type", "=", "'mlp'", ")", "\n", "test_model", "(", "classifier", ",", "datasets", "[", "'test'", "]", ",", "dataloaders", "[", "'test'", "]", ",", "device", ",", "model_type", "=", "'mlp'", ")", "\n", "# update pseudo_label_B,", "\n", "pseudo_label_B", "=", "-", "1", "*", "np", ".", "ones_like", "(", "pseudo_labels", ")", "\n", "trustable", "=", "np", ".", "zeros", "(", "(", "len", "(", "pseudo_labels", ")", ",", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "numSelected", "=", "np", ".", "int32", "(", "(", "iter", "+", "1", ")", "/", "args", ".", "num_iter", "*", "len", "(", "pseudo_labels", ")", "/", "10", ")", "\n", "for", "iCls", "in", "range", "(", "10", ")", ":", "\n", "            ", "thisClassFlag", "=", "pseudo_labels", "==", "iCls", "\n", "numThisClass", "=", "thisClassFlag", ".", "sum", "(", ")", "\n", "if", "numThisClass", ">", "0", ":", "\n", "                ", "threshold", "=", "sorted", "(", "scores", "[", "thisClassFlag", "]", ",", "reverse", "=", "True", ")", "[", "min", "(", "numThisClass", "-", "1", ",", "numSelected", ")", "]", "\n", "trustable", "=", "trustable", "+", "np", ".", "int32", "(", "(", "scores", ">=", "threshold", ")", "&", "thisClassFlag", ")", "\n", "", "", "pseudo_label_B", "[", "trustable", "==", "1", "]", "=", "pseudo_labels", "[", "trustable", "==", "1", "]", "\n", "datasets", "[", "'train'", "]", ".", "update_dataset", "(", "pseudo_label_B", ")", "\n", "print", "(", "(", "pseudo_label_B", ">", "-", "1", ")", ".", "sum", "(", ")", ")", "\n", "#datasets['train'].pseudo_label_B[scores>0.9-iter*0.1] = pseudo_labels[scores>0.9-iter*0.1]        ", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Classifier.__init__": [[9, 32], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ",", "num_channels", "=", "3", ")", ":", "\n", "        ", "super", "(", "Classifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "num_channels", ",", "out_channels", "=", "32", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", ")", "\n", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "32", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", "\n", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", "=", "64", "*", "6", "*", "6", ",", "out_features", "=", "100", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout2d", "(", "0.5", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "in_features", "=", "100", ",", "out_features", "=", "100", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "in_features", "=", "100", ",", "out_features", "=", "num_classes", ")", "\n", "\n", "self", ".", "lossfunction", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Classifier.forward": [[33, 42], ["models_zNorm_cnn.Classifier.layer1", "models_zNorm_cnn.Classifier.layer2", "models_zNorm_cnn.Classifier.view", "models_zNorm_cnn.Classifier.fc1", "models_zNorm_cnn.Classifier.drop", "models_zNorm_cnn.Classifier.fc2", "models_zNorm_cnn.Classifier.fc3", "models_zNorm_cnn.Classifier.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "out", "=", "self", ".", "drop", "(", "out", ")", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "out", "=", "self", ".", "fc3", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Classifier.feature_extractor": [[43, 51], ["models_zNorm_cnn.Classifier.layer1", "models_zNorm_cnn.Classifier.layer2", "models_zNorm_cnn.Classifier.view", "models_zNorm_cnn.Classifier.fc1", "models_zNorm_cnn.Classifier.size"], "methods", ["None"], ["", "def", "feature_extractor", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "#out = self.drop(out)", "\n", "#out = self.fc2(out)    ", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Classifier_DTN.__init__": [[65, 95], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch", "torch", "torch", "torch", "models_zNorm_cnn.Classifier_DTN.conv_layers.apply", "models_zNorm_cnn.Classifier_DTN.fc1.apply", "models_zNorm_cnn.Classifier_DTN.fc2.apply", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ",", "num_channels", "=", "3", ")", ":", "\n", "        ", "super", "(", "Classifier_DTN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "num_channels", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "0.1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "0.3", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "0.5", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", "=", "256", "*", "4", "*", "4", ",", "out_features", "=", "256", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "self", ".", "fc2", "=", "weightNorm", "(", "nn", ".", "Linear", "(", "in_features", "=", "256", ",", "out_features", "=", "num_classes", ")", ")", "\n", "\n", "self", ".", "conv_layers", ".", "apply", "(", "init_weights", ")", "\n", "self", ".", "fc1", ".", "apply", "(", "init_weights", ")", "\n", "self", ".", "fc2", ".", "apply", "(", "init_weights", ")", "\n", "\n", "self", ".", "lossfunction", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Classifier_DTN.forward": [[96, 104], ["models_zNorm_cnn.Classifier_DTN.conv_layers", "models_zNorm_cnn.Classifier_DTN.view", "models_zNorm_cnn.Classifier_DTN.fc1", "models_zNorm_cnn.Classifier_DTN.bn", "models_zNorm_cnn.Classifier_DTN.drop", "models_zNorm_cnn.Classifier_DTN.fc2", "models_zNorm_cnn.Classifier_DTN.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_layers", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "out", "=", "self", ".", "drop", "(", "out", ")", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Classifier_DTN.feature_extractor": [[105, 113], ["models_zNorm_cnn.Classifier_DTN.layer1", "models_zNorm_cnn.Classifier_DTN.layer2", "models_zNorm_cnn.Classifier_DTN.view", "models_zNorm_cnn.Classifier_DTN.fc1", "models_zNorm_cnn.Classifier_DTN.size"], "methods", ["None"], ["", "def", "feature_extractor", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "#out = self.drop(out)", "\n", "#out = self.fc2(out)    ", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.VAE.__init__": [[118, 136], ["torch.Module.__init__", "models_zNorm_cnn.Encoder2_1", "models_zNorm_cnn.Decoder", "type", "type", "type"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "encoder_layer_sizes", ",", "latent_size", ",", "decoder_layer_sizes", ",", "\n", "conditional", "=", "False", ",", "device", "=", "'cuda:0'", ",", "num_labels", "=", "0", ",", "num_domains", "=", "0", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "conditional", ":", "\n", "            ", "assert", "num_labels", ">", "0", "\n", "\n", "", "assert", "type", "(", "encoder_layer_sizes", ")", "==", "list", "\n", "assert", "type", "(", "latent_size", ")", "==", "int", "\n", "assert", "type", "(", "decoder_layer_sizes", ")", "==", "list", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "latent_size", "=", "latent_size", "\n", "self", ".", "encoder", "=", "Encoder2_1", "(", "\n", "encoder_layer_sizes", ",", "latent_size", ",", "conditional", ",", "num_labels", ",", "num_domains", ",", "device", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", "\n", "decoder_layer_sizes", ",", "latent_size", ",", "conditional", ",", "num_labels", ",", "num_domains", ",", "device", ")", "\n", "self", ".", "conditional", "=", "conditional", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "c", "=", "None", ",", "d", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.VAE.forward": [[136, 152], ["x.size", "models_zNorm_cnn.VAE.encoder", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "eps.to.to.to", "models_zNorm_cnn.VAE.decoder", "models_zNorm_cnn.VAE.decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "c", "=", "None", ",", "d", "=", "None", ")", ":", "\n", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "means", ",", "log_var", "=", "self", ".", "encoder", "(", "x", ",", "c", ",", "d", ")", "\n", "\n", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "log_var", ")", "\n", "eps", "=", "torch", ".", "randn", "(", "[", "batch_size", ",", "self", ".", "latent_size", "]", ")", "\n", "eps", "=", "eps", ".", "to", "(", "self", ".", "device", ")", "\n", "z", "=", "eps", "*", "std", "+", "means", "\n", "recon_x", "=", "self", ".", "decoder", "(", "z", ",", "c", ",", "d", ")", "\n", "recon_x2", "=", "self", ".", "decoder", "(", "z", ",", "c", ",", "1", "-", "d", ")", "\n", "\n", "if", "self", ".", "conditional", ":", "\n", "            ", "return", "recon_x", ",", "means", ",", "log_var", ",", "z", "\n", "", "return", "recon_x", ",", "recon_x2", ",", "means", ",", "log_var", ",", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.VAE.inference": [[153, 161], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "models_zNorm_cnn.VAE.decoder"], "methods", ["None"], ["", "def", "inference", "(", "self", ",", "n", "=", "1", ",", "c", "=", "None", ",", "d", "=", "None", ")", ":", "\n", "\n", "        ", "batch_size", "=", "n", "\n", "z", "=", "torch", ".", "randn", "(", "[", "batch_size", ",", "self", ".", "latent_size", "]", ")", "\n", "\n", "recon_x", "=", "self", ".", "decoder", "(", "z", ",", "c", ",", "d", ")", "\n", "\n", "return", "recon_x", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Encoder2_1.__init__": [[165, 201], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer_sizes", ",", "latent_size", ",", "conditional", ",", "num_labels", ",", "num_domains", ",", "device", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conditional", "=", "conditional", "\n", "self", ".", "num_labels", "=", "num_labels", "\n", "self", ".", "num_domains", "=", "num_domains", "\n", "self", ".", "device", "=", "device", "\n", "ndf", "=", "32", "\n", "nc", "=", "3", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "# input is (nc) x 28 x 28", "\n", "nn", ".", "Conv2d", "(", "nc", ",", "ndf", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# state size. (ndf) x 14 x 14", "\n", "nn", ".", "Conv2d", "(", "ndf", ",", "ndf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# state size. (ndf*2) x 7 x 7", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# state size. (ndf*4) x 4 x 4", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "4", ",", "1024", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "# nn.BatchNorm2d(1024),", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# nn.Sigmoid()", "\n", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", "=", "1024", ",", "out_features", "=", "600", ")", "\n", "#self.drop = nn.Dropout2d(0.25)", "\n", "#self.fc2 = nn.Linear(in_features=600, out_features=120)", "\n", "#self.fc3 = nn.Linear(in_features=120, out_features=num_classes)", "\n", "\n", "self", ".", "linear_means", "=", "nn", ".", "Linear", "(", "600", ",", "latent_size", ")", "\n", "self", ".", "linear_log_var", "=", "nn", ".", "Linear", "(", "600", ",", "latent_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Encoder2_1.forward": [[202, 212], ["models_zNorm_cnn.Encoder2_1.encoder", "models_zNorm_cnn.Encoder2_1.fc1", "models_zNorm_cnn.Encoder2_1.linear_means", "models_zNorm_cnn.Encoder2_1.linear_log_var", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "models_zNorm_cnn.Encoder2_1.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "c", "=", "None", ",", "d", "=", "None", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ".", "view", "(", "-", "1", ",", "1024", ")", ")", "\n", "means", "=", "self", ".", "linear_means", "(", "x", ")", "\n", "log_vars", "=", "self", ".", "linear_log_var", "(", "x", ")", "\n", "means", "=", "F", ".", "normalize", "(", "means", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "log_vars", "=", "F", ".", "normalize", "(", "log_vars", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "\n", "return", "means", ",", "log_vars", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Decoder.__init__": [[215, 260], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer_sizes", ",", "latent_size", ",", "conditional", ",", "num_labels", ",", "num_domains", ",", "device", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "MLP", "=", "nn", ".", "Sequential", "(", ")", "\n", "\n", "self", ".", "conditional", "=", "conditional", "\n", "self", ".", "num_labels", "=", "num_labels", "\n", "self", ".", "num_domains", "=", "num_domains", "\n", "self", ".", "device", "=", "device", "\n", "if", "self", ".", "conditional", ":", "\n", "            ", "input_size", "=", "latent_size", "+", "num_labels", "\n", "", "else", ":", "\n", "            ", "input_size", "=", "latent_size", "\n", "", "if", "self", ".", "num_domains", ">", "0", ":", "\n", "            ", "input_size", "+=", "num_domains", "\n", "", "ngf", "=", "32", "\n", "nc", "=", "3", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "# input is Z, going into a convolution", "\n", "nn", ".", "ConvTranspose2d", "(", "1024", ",", "ngf", "*", "8", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "8", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (ngf*8) x 4 x 4", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "8", ",", "ngf", "*", "4", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (ngf*4) x 8 x 8", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "4", ",", "ngf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (ngf*2) x 16 x 16", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "2", ",", "nc", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "# nn.BatchNorm2d(ngf),", "\n", "# nn.ReLU(True),", "\n", "# state size. (ngf) x 32 x 32", "\n", "# nn.ConvTranspose2d(    ngf,      nc, 4, 2, 1, bias=False),", "\n", "# nn.Tanh()", "\n", "#nn.Sigmoid()", "\n", "# state size. (nc) x 64 x 64", "\n", ")", "\n", "if", "self", ".", "num_domains", ">", "0", ":", "\n", "            ", "latent_size", "+=", "num_domains", "\n", "", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "latent_size", ",", "512", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "1024", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.Decoder.forward": [[262, 274], ["models_zNorm_cnn.Decoder.fc1", "models_zNorm_cnn.Decoder.fc2", "models_zNorm_cnn.Decoder.decoder", "utils.idx2onehot", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.idx2onehot().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models_zNorm_cnn.Decoder.view", "utils.idx2onehot", "utils.idx2onehot().to.cpu"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.utils.idx2onehot", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.utils.idx2onehot"], ["", "def", "forward", "(", "self", ",", "z", ",", "c", "=", "None", ",", "d", "=", "None", ")", ":", "\n", "\n", "        ", "if", "self", ".", "conditional", ":", "\n", "            ", "c", "=", "idx2onehot", "(", "c", ",", "n", "=", "self", ".", "num_labels", ")", "\n", "z", "=", "torch", ".", "cat", "(", "(", "z", ",", "c", ")", ",", "dim", "=", "-", "1", ")", "\n", "", "if", "self", ".", "num_domains", ">", "0", ":", "\n", "            ", "d", "=", "idx2onehot", "(", "d", ".", "cpu", "(", ")", ",", "n", "=", "self", ".", "num_domains", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "z", "=", "torch", ".", "cat", "(", "(", "z", ",", "d", ")", ",", "dim", "=", "-", "1", ")", "\n", "", "x", "=", "self", ".", "fc1", "(", "z", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "decoder", "(", "x", ".", "view", "(", "-", "1", ",", "1024", ",", "1", ",", "1", ")", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm_cnn.init_weights": [[52, 63], ["torch.init.kaiming_uniform_", "torch.init.zeros_", "classname.find", "classname.find", "classname.find", "torch.init.normal_", "torch.init.zeros_", "classname.find", "torch.init.xavier_normal_", "torch.init.zeros_"], "function", ["None"], ["", "", "def", "init_weights", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", "or", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_uniform_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "1.0", ",", "0.02", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "elif", "classname", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ":", "\n", "        ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.TwoModalDataset.__init__": [[20, 25], ["train_vae_office31_zNorm.TwoModalDataset.load_mat", "numpy.zeros_like", "numpy.ones_like"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.load_mat"], ["    ", "def", "__init__", "(", "self", ",", "phase", "=", "'train'", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "        ", "self", ".", "phase", "=", "phase", "\n", "self", ".", "load_mat", "(", "sourceDomainIndex", ",", "targetDomainIndex", ",", "trialIndex", ")", "\n", "self", ".", "pseudo_label_B", "=", "np", ".", "ones_like", "(", "self", ".", "label_B", ")", "*", "-", "1", "# this will be dynamically updated during training", "\n", "self", ".", "pseudo_score_B", "=", "np", ".", "zeros_like", "(", "self", ".", "label_B", ")", "\n", "", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.TwoModalDataset.load_mat": [[25, 38], ["scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "sklearn.preprocessing.normalize", "len", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "sklearn.preprocessing.normalize", "numpy.unique"], "methods", ["None"], ["", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "# load features and labels", "\n", "        ", "data_dir", "=", "'../data/Office31data/'", "\n", "# data_dir = 'E:\\DomainAdaptation\\OfficeHomeDataset_10072016/'", "\n", "data_A", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "'office-'", "+", "domainSet", "[", "sourceDomainIndex", "]", "+", "'-resnet50-noft.mat'", ")", "\n", "feature_A", "=", "data_A", "[", "'resnet50_features'", "]", "[", ":", ",", ":", ",", "0", ",", "0", "]", "\n", "self", ".", "feature_A", "=", "normalize", "(", "feature_A", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_A", "=", "data_A", "[", "'labels'", "]", "[", "0", ",", "]", "\n", "self", ".", "num_class", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "label_A", ")", ")", "\n", "data_B", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "'office-'", "+", "domainSet", "[", "targetDomainIndex", "]", "+", "'-resnet50-noft.mat'", ")", "\n", "feature_B", "=", "data_B", "[", "'resnet50_features'", "]", "[", ":", ",", ":", ",", "0", ",", "0", "]", "\n", "self", ".", "feature_B", "=", "normalize", "(", "feature_B", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_B", "=", "data_B", "[", "'labels'", "]", "[", "0", ",", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.TwoModalDataset.__len__": [[39, 44], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'train'", ":", "#or self.phase == 'val':", "\n", "            ", "return", "self", ".", "feature_A", ".", "shape", "[", "0", "]", "\n", "", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "return", "self", ".", "feature_B", ".", "shape", "[", "0", "]", "\n", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.TwoModalDataset.__getitem__": [[44, 58], ["numpy.argwhere", "len", "numpy.random.choice", "numpy.random.randint", "len", "numpy.ones_like"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "idx_B", "=", "idx", "\n", "return", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_B", "[", "idx_B", "]", "\n", "# return a pair of regular and xray image features, which are paired randomly", "\n", "", "label", "=", "self", ".", "label_A", "[", "idx", "]", "\n", "#indicesB_this_label = np.argwhere((self.pseudo_label_B==label) & (self.pseudo_score_B > -1))", "\n", "indicesB_this_label", "=", "np", ".", "argwhere", "(", "self", ".", "pseudo_label_B", "==", "label", ")", "\n", "if", "len", "(", "indicesB_this_label", ")", ">", "0", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "choice", "(", "indicesB_this_label", "[", ":", ",", "0", "]", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "self", ".", "pseudo_label_B", "[", "idx_B", "]", "\n", "", "else", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "label_B", ")", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "np", ".", "ones_like", "(", "self", ".", "label_A", "[", "idx", "]", ")", "*", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.test_model": [[60, 104], ["time.time", "numpy.zeros", "numpy.zeros", "enumerate", "range", "numpy.mean", "print", "features.to.to", "labels.cpu().detach().numpy.to", "len", "time.time", "torch.set_grad_enabled", "numpy.argmax", "numpy.exp", "model.predict", "model.eval", "model", "preds.cpu().detach().numpy.cpu().detach().numpy", "labels.cpu().detach().numpy.cpu().detach().numpy", "numpy.concatenate", "numpy.concatenate", "numpy.max", "np.zeros.sum", "np.zeros.sum", "preds.cpu().detach().numpy.cpu().detach", "labels.cpu().detach().numpy.cpu().detach", "preds.cpu().detach().numpy.cpu", "labels.cpu().detach().numpy.cpu"], "function", ["None"], ["", "", "", "def", "test_model", "(", "model", ",", "dataset", ",", "dataloader", ",", "device", ",", "model_type", "=", "'knn'", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "num_class", "=", "dataset", ".", "num_class", "\n", "running_corrects", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "num_sample_per_class", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "# Iterate over data.", "\n", "for", "index", ",", "(", "features", ",", "labels", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "        ", "features", "=", "features", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "# zero the parameter gradients", "\n", "# forward", "\n", "# track history if only in train", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "if", "model_type", "==", "'knn'", ":", "\n", "                ", "preds", "=", "model", ".", "predict", "(", "features", ")", "\n", "", "if", "model_type", "==", "'mlp'", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "preds", "=", "model", "(", "features", ")", "\n", "preds", "=", "preds", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "index", "==", "0", ":", "\n", "                ", "outputs_test", "=", "preds", "\n", "labels_test", "=", "labels", "\n", "", "else", ":", "\n", "                ", "outputs_test", "=", "np", ".", "concatenate", "(", "(", "outputs_test", ",", "preds", ")", ",", "0", ")", "\n", "labels_test", "=", "np", ".", "concatenate", "(", "(", "labels_test", ",", "labels", ")", ",", "0", ")", "\n", "", "", "if", "model_type", "==", "'mlp'", ":", "\n", "            ", "preds", "=", "np", ".", "argmax", "(", "outputs_test", ",", "1", ")", "\n", "scores", "=", "np", ".", "exp", "(", "np", ".", "max", "(", "outputs_test", ",", "1", ")", ")", "\n", "", "if", "model_type", "==", "'knn'", ":", "\n", "            ", "preds", "=", "outputs_test", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "labels_test", ")", ")", ":", "\n", "        ", "num_sample_per_class", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "if", "preds", "[", "i", "]", "==", "labels_test", "[", "i", "]", ":", "\n", "            ", "running_corrects", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "\n", "", "", "acc_per_class", "=", "running_corrects", "/", "num_sample_per_class", "\n", "acc", "=", "np", ".", "mean", "(", "acc_per_class", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "#print('Testing complete in {:.0f}m {:.0f}s'.format(time_elapsed // 60, time_elapsed % 60))", "\n", "print", "(", "'per-image acc:{:2.4f}; per-class acc:{:2.4f}'", ".", "format", "(", "running_corrects", ".", "sum", "(", ")", "/", "num_sample_per_class", ".", "sum", "(", ")", ",", "acc", ")", ")", "\n", "return", "preds", ",", "scores", ",", "acc_per_class", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.loss_fn": [[105, 116], ["torch.nn.MSELoss", "torch.sqrt", "distance.sum.sum", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "xS.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "log_varS.exp", "log_varT[].exp", "meanS.pow", "meanT[].pow", "torch.sqrt", "torch.sqrt", "log_varS[].exp", "log_varT[].exp"], "function", ["None"], ["", "def", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", ":", "\n", "    ", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "False", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "reconstruction_loss", "=", "criterion", "(", "recon_xS", ",", "xS", ")", "+", "criterion", "(", "recon_xT", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "\n", "cross_reconstruction_loss", "=", "criterion", "(", "recon_xS2", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "+", "criterion", "(", "recon_xT2", "[", "mask", ",", ":", "]", ",", "xS", "[", "mask", ",", ":", "]", ")", "\n", "KLD", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varS", "-", "meanS", ".", "pow", "(", "2", ")", "-", "log_varS", ".", "exp", "(", ")", ")", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varT", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ".", "pow", "(", "2", ")", "-", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "\n", "distance", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "(", "meanS", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ")", "**", "2", ",", "dim", "=", "1", ")", "+", "torch", ".", "sum", "(", "(", "torch", ".", "sqrt", "(", "log_varS", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "-", "torch", ".", "sqrt", "(", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", ")", "**", "2", ",", "dim", "=", "1", ")", ")", "\n", "distance", "=", "distance", ".", "sum", "(", ")", "\n", "weight", "=", "epoch", "*", "5e-4", "\n", "#print(f'{reconstruction_loss:1.4f}, {cross_reconstruction_loss:1.4f}, {distance:1.4f},{KLD:1.4f}')", "\n", "return", "(", "reconstruction_loss", "+", "cross_reconstruction_loss", ")", "/", "xS", ".", "size", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.train_classifier": [[117, 146], ["classifier.train", "vae.eval", "numpy.zeros", "numpy.zeros", "range", "enumerate", "scheduler_cls.step", "train_vae_office31_zNorm.generate_z", "torch.cat", "torch.cat", "classifier", "classifier.lossfunction", "optimizer_cls.zero_grad", "classifier.lossfunction.backward", "optimizer_cls.step", "xS.to", "xT.to", "yS.to", "yT.to"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.generate_z"], ["", "def", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", ":", "\n", "    ", "device", "=", "args", ".", "device", "\n", "classifier", ".", "train", "(", ")", "\n", "vae", ".", "eval", "(", ")", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", "datasets", "[", "'train'", "]", ".", "num_class", ")", ")", "\n", "acc", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_cls", ")", ":", "\n", "#print(f'Classifier training epoch {epoch:d}/{args.num_epochs_cls:d}')", "\n", "        ", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloaders", "[", "'train'", "]", ")", ":", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "#x,y = next_batch(vae,batch_size=1024)", "\n", "recon_xS", ",", "recon_xT", "=", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "xT", "=", "xT", "[", "mask", ",", ":", "]", "\n", "yT", "=", "yT", "[", "mask", "]", "\n", "recon_xT", "=", "recon_xT", "[", "mask", ",", ":", "]", "\n", "xtrain", "=", "torch", ".", "cat", "(", "(", "xS", ",", "xT", ",", "recon_xS", ",", "recon_xT", ")", ",", "dim", "=", "0", ")", "\n", "ytrain", "=", "torch", ".", "cat", "(", "(", "yS", ",", "yT", ",", "yS", ",", "yT", ")", ",", "dim", "=", "0", ")", "\n", "output", "=", "classifier", "(", "xtrain", ")", "\n", "loss_cls", "=", "classifier", ".", "lossfunction", "(", "output", ",", "ytrain", ")", "\n", "optimizer_cls", ".", "zero_grad", "(", ")", "\n", "loss_cls", ".", "backward", "(", ")", "\n", "optimizer_cls", ".", "step", "(", ")", "\n", "# test", "\n", "", "scheduler_cls", ".", "step", "(", ")", "\n", "#print(f'epoch:{epoch:02d} ',end='')", "\n", "#preds,scores,acc_per_class[epoch,],acc[epoch] = test_model(classifier, datasets['test'], dataloaders['test'],device,model_type='mlp')", "\n", "#scipy.io.savemat('./results/'+args.filename+'.mat',mdict={'acc_per_class':acc_per_class,'acc':acc})", "\n", "", "return", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.train_vae": [[147, 169], ["vae.train", "range", "collections.defaultdict", "enumerate", "scheduler.step", "vae", "vae", "train_vae_office31_zNorm.loss_fn", "optimizer.zero_grad", "loss_fn.backward", "optimizer.step", "collections.defaultdict", "xS.to", "xT.to", "yS.to", "yT.to", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.loss_fn"], ["", "def", "train_vae", "(", "vae", ",", "dataloader", ",", "args", ",", "optimizer", ",", "scheduler", ")", ":", "\n", "############################################################", "\n", "# train CVAE", "\n", "############################################################", "\n", "    ", "device", "=", "args", ".", "device", "\n", "vae", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_vae", ")", ":", "\n", "\n", "        ", "tracker_epoch", "=", "defaultdict", "(", "lambda", ":", "defaultdict", "(", "dict", ")", ")", "\n", "\n", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "loss", "=", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "", "return", "vae", "\n", "############################################################", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.generate_z": [[172, 177], ["vae.eval", "vae", "vae", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["None"], ["", "def", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", ":", "\n", "    ", "vae", ".", "eval", "(", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "return", "recon_xS2", ",", "recon_xT2", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_office31_zNorm.main": [[178, 246], ["torch.manual_seed", "torch.cuda.is_available", "torch.device", "time.time", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "numpy.zeros", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "range", "torch.cuda.manual_seed", "train_vae_office31_zNorm.TwoModalDataset", "train_classifier.parameters", "train_vae.parameters", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_office31_zNorm.train_classifier", "print", "train_vae_office31_zNorm.test_model", "numpy.zeros", "numpy.int32", "range", "print", "torch.cuda.is_available", "len", "len", "models_zNorm.Classifier", "models_zNorm.VAE", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_office31_zNorm.train_vae", "train_classifier.parameters", "numpy.ones_like", "thisClassFlag.sum", "train_vae.parameters", "models_zNorm.Classifier", "len", "models_zNorm.VAE", "len", "sorted", "numpy.int32", "min"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_classifier", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.test_model", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_vae"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "args", ".", "device", "=", "device", "\n", "ts", "=", "time", ".", "time", "(", ")", "\n", "datasets", "=", "{", "x", ":", "TwoModalDataset", "(", "phase", "=", "x", ",", "sourceDomainIndex", "=", "args", ".", "sourceDomainIndex", ",", "targetDomainIndex", "=", "args", ".", "targetDomainIndex", ",", "trialIndex", "=", "args", ".", "trialIndex", ")", "for", "x", "in", "[", "'train'", ",", "'test'", "]", "}", "\n", "dataloaders", "=", "{", "}", "\n", "dataloaders", "[", "'train'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'trainall'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "len", "(", "datasets", "[", "'train'", "]", ")", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'test'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'test'", "]", ",", "batch_size", "=", "len", "(", "datasets", "[", "'test'", "]", ")", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ")", "\n", "# define a classifier", "\n", "classifier", "=", "Classifier", "(", "input_dim", "=", "2048", ",", "num_labels", "=", "31", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "num_epochs_cls", "=", "50", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_iter", ",", "31", ")", ")", "\n", "# define the VAE", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "for", "iter", "in", "range", "(", "args", ".", "num_iter", "+", "5", ")", ":", "\n", "        ", "if", "iter", ">", "0", ":", "\n", "# define VAE", "\n", "            ", "args", ".", "encoder_layer_sizes", "[", "0", "]", "=", "2048", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "# train VAE", "\n", "vae", "=", "train_vae", "(", "vae", ",", "dataloaders", "[", "'train'", "]", ",", "args", ",", "optimizer_vae", ",", "scheduler_vae", ")", "\n", "# train a classifier", "\n", "", "classifier", "=", "Classifier", "(", "input_dim", "=", "2048", ",", "num_labels", "=", "31", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "classifier", "=", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", "\n", "# classify target samples", "\n", "print", "(", "f'Iter {iter:02d}: '", ",", "end", "=", "''", ")", "\n", "pseudo_labels", ",", "scores", ",", "acc_per_class", ",", "acc_per_image", "=", "test_model", "(", "classifier", ",", "datasets", "[", "'test'", "]", ",", "dataloaders", "[", "'test'", "]", ",", "device", ",", "model_type", "=", "'mlp'", ")", "\n", "# update pseudo-labels,", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "=", "-", "1", "*", "np", ".", "ones_like", "(", "pseudo_labels", ")", "\n", "#'''", "\n", "trustable", "=", "np", ".", "zeros", "(", "(", "len", "(", "pseudo_labels", ")", ",", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "numSelected", "=", "np", ".", "int32", "(", "(", "iter", "+", "1", ")", "/", "args", ".", "num_iter", "*", "len", "(", "pseudo_labels", ")", "/", "31", ")", "\n", "for", "iCls", "in", "range", "(", "31", ")", ":", "\n", "            ", "thisClassFlag", "=", "pseudo_labels", "==", "iCls", "\n", "numThisClass", "=", "thisClassFlag", ".", "sum", "(", ")", "\n", "\n", "if", "numThisClass", ">", "0", ":", "\n", "                ", "threshold", "=", "sorted", "(", "scores", "[", "thisClassFlag", "]", ",", "reverse", "=", "True", ")", "[", "min", "(", "numThisClass", "-", "1", ",", "numSelected", ")", "]", "\n", "trustable", "=", "trustable", "+", "np", ".", "int32", "(", "(", "scores", ">=", "threshold", ")", "&", "thisClassFlag", ")", "\n", "", "", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "[", "trustable", "==", "1", "]", "=", "pseudo_labels", "[", "trustable", "==", "1", "]", "\n", "print", "(", "(", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", ">", "-", "1", ")", ".", "sum", "(", ")", ")", "\n", "#'''", "\n", "#datasets['train'].pseudo_label_B[scores>0.9-iter*0.1] = pseudo_labels[scores>0.9-iter*0.1]        ", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_score_B", "=", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.Classifier.__init__": [[7, 12], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.NLLLoss", "torch.NLLLoss", "torch.NLLLoss"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "num_labels", "=", "65", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "input_dim", ",", "num_labels", ")", "\n", "self", ".", "logic", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "self", ".", "lossfunction", "=", "nn", ".", "NLLLoss", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.Classifier.forward": [[12, 15], ["models_zNorm.Classifier.logic", "models_zNorm.Classifier.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "o", "=", "self", ".", "logic", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "return", "o", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.Classifier2.__init__": [[17, 25], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.NLLLoss", "torch.NLLLoss", "torch.NLLLoss"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "num_labels", "=", "65", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "input_dim", ",", "128", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "128", ",", "num_labels", ")", "\n", "self", ".", "logic", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "lossfunction", "=", "nn", ".", "NLLLoss", "(", ")", "\n", "#self.lossfunction =  nn.CrossEntropyLoss()", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.Classifier2.forward": [[26, 30], ["models_zNorm.Classifier2.logic", "models_zNorm.Classifier2.fc1", "models_zNorm.Classifier2.relu", "models_zNorm.Classifier2.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "o", "=", "self", ".", "logic", "(", "self", ".", "fc1", "(", "self", ".", "relu", "(", "self", ".", "fc", "(", "x", ")", ")", ")", ")", "\n", "#o = self.logic(self.fc(x))", "\n", "return", "o", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.VAE.__init__": [[34, 45], ["torch.Module.__init__", "models_zNorm.Encoder", "models_zNorm.Decoder", "type", "type", "type"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "encoder_layer_sizes", ",", "latent_size", ",", "decoder_layer_sizes", ",", "num_domains", "=", "0", ",", "dropout", "=", "0", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "type", "(", "encoder_layer_sizes", ")", "==", "list", "\n", "assert", "type", "(", "latent_size", ")", "==", "int", "\n", "assert", "type", "(", "decoder_layer_sizes", ")", "==", "list", "\n", "\n", "self", ".", "latent_size", "=", "latent_size", "\n", "self", ".", "encoder", "=", "Encoder", "(", "encoder_layer_sizes", ",", "latent_size", ",", "num_domains", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", "decoder_layer_sizes", ",", "latent_size", ",", "num_domains", ",", "dropout", "=", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.VAE.forward": [[46, 59], ["x.size", "models_zNorm.VAE.encoder", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "models_zNorm.VAE.decoder", "models_zNorm.VAE.decoder", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "d", "=", "None", ")", ":", "\n", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "means", ",", "log_var", "=", "self", ".", "encoder", "(", "x", ",", "d", ")", "\n", "\n", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "log_var", ")", "\n", "eps", "=", "torch", ".", "randn", "(", "[", "batch_size", ",", "self", ".", "latent_size", "]", ")", ".", "to", "(", "'cuda'", ")", "\n", "z", "=", "eps", "*", "std", "+", "means", "\n", "recon_x", "=", "self", ".", "decoder", "(", "z", ",", "d", ")", "\n", "recon_x2", "=", "self", ".", "decoder", "(", "z", ",", "1", "-", "d", ")", "\n", "\n", "return", "recon_x", ",", "recon_x2", ",", "means", ",", "log_var", ",", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.VAE.inference": [[60, 66], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "models_zNorm.VAE.decoder"], "methods", ["None"], ["", "def", "inference", "(", "self", ",", "n", "=", "1", ",", "d", "=", "None", ")", ":", "\n", "\n", "        ", "batch_size", "=", "n", "\n", "z", "=", "torch", ".", "randn", "(", "[", "batch_size", ",", "self", ".", "latent_size", "]", ")", "\n", "recon_x", "=", "self", ".", "decoder", "(", "z", ",", "d", ")", "\n", "return", "recon_x", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.Encoder.__init__": [[71, 89], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "enumerate", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "zip", "models_zNorm.Encoder.MLP.add_module", "models_zNorm.Encoder.MLP.add_module", "models_zNorm.Encoder.MLP.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer_sizes", ",", "latent_size", ",", "num_domains", ",", "dropout", "=", "0", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_domains", "=", "num_domains", "\n", "if", "num_domains", ">", "0", ":", "\n", "            ", "layer_sizes", "[", "0", "]", "=", "layer_sizes", "[", "0", "]", "+", "num_domains", "\n", "", "self", ".", "MLP", "=", "nn", ".", "Sequential", "(", ")", "\n", "\n", "for", "i", ",", "(", "in_size", ",", "out_size", ")", "in", "enumerate", "(", "zip", "(", "layer_sizes", "[", ":", "-", "1", "]", ",", "layer_sizes", "[", "1", ":", "]", ")", ")", ":", "\n", "            ", "self", ".", "MLP", ".", "add_module", "(", "\n", "name", "=", "\"L{:d}\"", ".", "format", "(", "i", ")", ",", "module", "=", "nn", ".", "Linear", "(", "in_size", ",", "out_size", ")", ")", "\n", "self", ".", "MLP", ".", "add_module", "(", "name", "=", "\"A{:d}\"", ".", "format", "(", "i", ")", ",", "module", "=", "nn", ".", "ReLU", "(", ")", ")", "\n", "if", "dropout", ">", "0", ":", "\n", "                ", "self", ".", "MLP", ".", "add_module", "(", "name", "=", "\"D{:d}\"", ".", "format", "(", "i", ")", ",", "module", "=", "nn", ".", "Dropout", "(", "dropout", ")", ")", "\n", "\n", "", "", "self", ".", "linear_means", "=", "nn", ".", "Linear", "(", "layer_sizes", "[", "-", "1", "]", ",", "latent_size", ")", "\n", "self", ".", "linear_log_var", "=", "nn", ".", "Linear", "(", "layer_sizes", "[", "-", "1", "]", ",", "latent_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.Encoder.forward": [[90, 103], ["models_zNorm.Encoder.MLP", "models_zNorm.Encoder.linear_means", "models_zNorm.Encoder.linear_log_var", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "utils.idx2onehot().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.idx2onehot", "utils.idx2onehot().to.cpu"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.utils.idx2onehot"], ["", "def", "forward", "(", "self", ",", "x", ",", "d", "=", "None", ")", ":", "\n", "\n", "        ", "if", "self", ".", "num_domains", ">", "0", ":", "\n", "            ", "d", "=", "idx2onehot", "(", "d", ".", "cpu", "(", ")", ",", "n", "=", "self", ".", "num_domains", ")", ".", "to", "(", "'cuda'", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "d", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "x", "=", "self", ".", "MLP", "(", "x", ")", "\n", "\n", "means", "=", "self", ".", "linear_means", "(", "x", ")", "\n", "log_vars", "=", "self", ".", "linear_log_var", "(", "x", ")", "\n", "means", "=", "F", ".", "normalize", "(", "means", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "log_vars", "=", "F", ".", "normalize", "(", "log_vars", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "return", "means", ",", "log_vars", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.Decoder.__init__": [[106, 127], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "enumerate", "zip", "models_zNorm.Decoder.MLP.add_module", "len", "models_zNorm.Decoder.MLP.add_module", "models_zNorm.Decoder.MLP.add_module", "models_zNorm.Decoder.MLP.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer_sizes", ",", "latent_size", ",", "num_domains", ",", "device", "=", "'cuda'", ",", "dropout", "=", "0", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "MLP", "=", "nn", ".", "Sequential", "(", ")", "\n", "\n", "self", ".", "num_domains", "=", "num_domains", "\n", "self", ".", "device", "=", "device", "\n", "input_size", "=", "latent_size", "\n", "if", "self", ".", "num_domains", ">", "0", ":", "\n", "            ", "input_size", "=", "input_size", "+", "num_domains", "\n", "\n", "", "for", "i", ",", "(", "in_size", ",", "out_size", ")", "in", "enumerate", "(", "zip", "(", "[", "input_size", "]", "+", "layer_sizes", "[", ":", "-", "1", "]", ",", "layer_sizes", ")", ")", ":", "\n", "            ", "self", ".", "MLP", ".", "add_module", "(", "\n", "name", "=", "\"L{:d}\"", ".", "format", "(", "i", ")", ",", "module", "=", "nn", ".", "Linear", "(", "in_size", ",", "out_size", ")", ")", "\n", "if", "i", "+", "1", "<", "len", "(", "layer_sizes", ")", ":", "\n", "                ", "self", ".", "MLP", ".", "add_module", "(", "name", "=", "\"A{:d}\"", ".", "format", "(", "i", ")", ",", "module", "=", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "MLP", ".", "add_module", "(", "name", "=", "\"D{:d}\"", ".", "format", "(", "i", ")", ",", "module", "=", "nn", ".", "Dropout", "(", "dropout", ")", ")", "\n", "\n", "", "else", ":", "\n", "                ", "self", ".", "MLP", ".", "add_module", "(", "name", "=", "\"sigmoid\"", ",", "module", "=", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.models_zNorm.Decoder.forward": [[128, 136], ["models_zNorm.Decoder.MLP", "torch.normalize", "torch.normalize", "torch.normalize", "utils.idx2onehot().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.idx2onehot", "utils.idx2onehot().to.cpu"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.utils.idx2onehot"], ["", "", "", "def", "forward", "(", "self", ",", "z", ",", "d", "=", "None", ")", ":", "\n", "\n", "        ", "if", "self", ".", "num_domains", ">", "0", ":", "\n", "            ", "d", "=", "idx2onehot", "(", "d", ".", "cpu", "(", ")", ",", "n", "=", "self", ".", "num_domains", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "z", "=", "torch", ".", "cat", "(", "(", "z", ",", "d", ")", ",", "dim", "=", "-", "1", ")", "\n", "", "x", "=", "self", ".", "MLP", "(", "z", ")", "\n", "x", "=", "F", ".", "normalize", "(", "x", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.TwoModalDataset.__init__": [[20, 25], ["train_vae_imageclef_zNorm.TwoModalDataset.load_mat", "numpy.zeros_like", "numpy.ones_like"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.load_mat"], ["    ", "def", "__init__", "(", "self", ",", "phase", "=", "'train'", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "        ", "self", ".", "phase", "=", "phase", "\n", "self", ".", "load_mat", "(", "sourceDomainIndex", ",", "targetDomainIndex", ",", "trialIndex", ")", "\n", "self", ".", "pseudo_label_B", "=", "np", ".", "ones_like", "(", "self", ".", "label_B", ")", "*", "-", "1", "# this will be dynamically updated during training", "\n", "self", ".", "pseudo_score_B", "=", "np", ".", "zeros_like", "(", "self", ".", "label_B", ")", "\n", "", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.TwoModalDataset.load_mat": [[25, 38], ["scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "sklearn.preprocessing.normalize", "len", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "sklearn.preprocessing.normalize", "numpy.unique"], "methods", ["None"], ["", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "# load features and labels", "\n", "        ", "data_dir", "=", "'../data/image-clef/'", "\n", "# data_dir = 'E:\\DomainAdaptation\\OfficeHomeDataset_10072016/'", "\n", "data_A", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "'imageclef-'", "+", "domainSet", "[", "sourceDomainIndex", "]", "+", "'-resnet50-noft.mat'", ")", "\n", "feature_A", "=", "data_A", "[", "'resnet50_features'", "]", "[", ":", ",", ":", ",", "0", ",", "0", "]", "\n", "self", ".", "feature_A", "=", "normalize", "(", "feature_A", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_A", "=", "data_A", "[", "'labels'", "]", "[", "0", ",", "]", "\n", "self", ".", "num_class", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "label_A", ")", ")", "\n", "data_B", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "'imageclef-'", "+", "domainSet", "[", "targetDomainIndex", "]", "+", "'-resnet50-noft.mat'", ")", "\n", "feature_B", "=", "data_B", "[", "'resnet50_features'", "]", "[", ":", ",", ":", ",", "0", ",", "0", "]", "\n", "self", ".", "feature_B", "=", "normalize", "(", "feature_B", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_B", "=", "data_B", "[", "'labels'", "]", "[", "0", ",", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.TwoModalDataset.__len__": [[39, 44], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'train'", ":", "#or self.phase == 'val':", "\n", "            ", "return", "self", ".", "feature_A", ".", "shape", "[", "0", "]", "\n", "", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "return", "self", ".", "feature_B", ".", "shape", "[", "0", "]", "\n", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.TwoModalDataset.__getitem__": [[44, 58], ["numpy.argwhere", "len", "numpy.random.choice", "numpy.random.randint", "len", "numpy.ones_like"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "idx_B", "=", "idx", "\n", "return", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_B", "[", "idx_B", "]", "\n", "# return a pair of regular and xray image features, which are paired randomly", "\n", "", "label", "=", "self", ".", "label_A", "[", "idx", "]", "\n", "#indicesB_this_label = np.argwhere((self.pseudo_label_B==label) & (self.pseudo_score_B > -1))", "\n", "indicesB_this_label", "=", "np", ".", "argwhere", "(", "self", ".", "pseudo_label_B", "==", "label", ")", "\n", "if", "len", "(", "indicesB_this_label", ")", ">", "0", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "choice", "(", "indicesB_this_label", "[", ":", ",", "0", "]", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "self", ".", "pseudo_label_B", "[", "idx_B", "]", "\n", "", "else", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "label_B", ")", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "np", ".", "ones_like", "(", "self", ".", "label_A", "[", "idx", "]", ")", "*", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.test_model": [[60, 104], ["time.time", "numpy.zeros", "numpy.zeros", "enumerate", "range", "numpy.mean", "print", "features.to.to", "labels.cpu().detach().numpy.to", "len", "time.time", "torch.set_grad_enabled", "numpy.argmax", "numpy.exp", "model.predict", "model.eval", "model", "preds.cpu().detach().numpy.cpu().detach().numpy", "labels.cpu().detach().numpy.cpu().detach().numpy", "numpy.concatenate", "numpy.concatenate", "numpy.max", "np.zeros.sum", "np.zeros.sum", "preds.cpu().detach().numpy.cpu().detach", "labels.cpu().detach().numpy.cpu().detach", "preds.cpu().detach().numpy.cpu", "labels.cpu().detach().numpy.cpu"], "function", ["None"], ["", "", "", "def", "test_model", "(", "model", ",", "dataset", ",", "dataloader", ",", "device", ",", "model_type", "=", "'knn'", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "num_class", "=", "dataset", ".", "num_class", "\n", "running_corrects", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "num_sample_per_class", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "# Iterate over data.", "\n", "for", "index", ",", "(", "features", ",", "labels", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "        ", "features", "=", "features", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "# zero the parameter gradients", "\n", "# forward", "\n", "# track history if only in train", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "if", "model_type", "==", "'knn'", ":", "\n", "                ", "preds", "=", "model", ".", "predict", "(", "features", ")", "\n", "", "if", "model_type", "==", "'mlp'", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "preds", "=", "model", "(", "features", ")", "\n", "preds", "=", "preds", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "index", "==", "0", ":", "\n", "                ", "outputs_test", "=", "preds", "\n", "labels_test", "=", "labels", "\n", "", "else", ":", "\n", "                ", "outputs_test", "=", "np", ".", "concatenate", "(", "(", "outputs_test", ",", "preds", ")", ",", "0", ")", "\n", "labels_test", "=", "np", ".", "concatenate", "(", "(", "labels_test", ",", "labels", ")", ",", "0", ")", "\n", "", "", "if", "model_type", "==", "'mlp'", ":", "\n", "            ", "preds", "=", "np", ".", "argmax", "(", "outputs_test", ",", "1", ")", "\n", "scores", "=", "np", ".", "exp", "(", "np", ".", "max", "(", "outputs_test", ",", "1", ")", ")", "\n", "", "if", "model_type", "==", "'knn'", ":", "\n", "            ", "preds", "=", "outputs_test", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "labels_test", ")", ")", ":", "\n", "        ", "num_sample_per_class", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "if", "preds", "[", "i", "]", "==", "labels_test", "[", "i", "]", ":", "\n", "            ", "running_corrects", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "\n", "", "", "acc_per_class", "=", "running_corrects", "/", "num_sample_per_class", "\n", "acc", "=", "np", ".", "mean", "(", "acc_per_class", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "#print('Testing complete in {:.0f}m {:.0f}s'.format(time_elapsed // 60, time_elapsed % 60))", "\n", "print", "(", "'per-image acc:{:2.4f}; per-class acc:{:2.4f}'", ".", "format", "(", "running_corrects", ".", "sum", "(", ")", "/", "num_sample_per_class", ".", "sum", "(", ")", ",", "acc", ")", ")", "\n", "return", "preds", ",", "scores", ",", "acc_per_class", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.loss_fn": [[105, 116], ["torch.nn.MSELoss", "torch.sqrt", "distance.sum.sum", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "xS.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "log_varS.exp", "log_varT[].exp", "meanS.pow", "meanT[].pow", "torch.sqrt", "torch.sqrt", "log_varS[].exp", "log_varT[].exp"], "function", ["None"], ["", "def", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", ":", "\n", "    ", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "False", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "reconstruction_loss", "=", "criterion", "(", "recon_xS", ",", "xS", ")", "+", "criterion", "(", "recon_xT", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "\n", "cross_reconstruction_loss", "=", "criterion", "(", "recon_xS2", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "+", "criterion", "(", "recon_xT2", "[", "mask", ",", ":", "]", ",", "xS", "[", "mask", ",", ":", "]", ")", "\n", "KLD", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varS", "-", "meanS", ".", "pow", "(", "2", ")", "-", "log_varS", ".", "exp", "(", ")", ")", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varT", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ".", "pow", "(", "2", ")", "-", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "\n", "distance", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "(", "meanS", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ")", "**", "2", ",", "dim", "=", "1", ")", "+", "torch", ".", "sum", "(", "(", "torch", ".", "sqrt", "(", "log_varS", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "-", "torch", ".", "sqrt", "(", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", ")", "**", "2", ",", "dim", "=", "1", ")", ")", "\n", "distance", "=", "distance", ".", "sum", "(", ")", "\n", "weight", "=", "epoch", "*", "5e-4", "\n", "#print(f'{reconstruction_loss:1.4f}, {cross_reconstruction_loss:1.4f}, {distance:1.4f},{KLD:1.4f}')", "\n", "return", "(", "reconstruction_loss", "+", "cross_reconstruction_loss", ")", "/", "xS", ".", "size", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.train_classifier": [[117, 146], ["classifier.train", "vae.eval", "numpy.zeros", "numpy.zeros", "range", "enumerate", "scheduler_cls.step", "train_vae_imageclef_zNorm.generate_z", "torch.cat", "torch.cat", "classifier", "classifier.lossfunction", "optimizer_cls.zero_grad", "classifier.lossfunction.backward", "optimizer_cls.step", "xS.to", "xT.to", "yS.to", "yT.to"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.generate_z"], ["", "def", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", ":", "\n", "    ", "device", "=", "args", ".", "device", "\n", "classifier", ".", "train", "(", ")", "\n", "vae", ".", "eval", "(", ")", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", "datasets", "[", "'train'", "]", ".", "num_class", ")", ")", "\n", "acc", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_cls", ")", ":", "\n", "#print(f'Classifier training epoch {epoch:d}/{args.num_epochs_cls:d}')", "\n", "        ", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloaders", "[", "'train'", "]", ")", ":", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "#x,y = next_batch(vae,batch_size=1024)", "\n", "recon_xS", ",", "recon_xT", "=", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "xT", "=", "xT", "[", "mask", ",", ":", "]", "\n", "yT", "=", "yT", "[", "mask", "]", "\n", "recon_xT", "=", "recon_xT", "[", "mask", ",", ":", "]", "\n", "xtrain", "=", "torch", ".", "cat", "(", "(", "xS", ",", "xT", ",", "recon_xS", ",", "recon_xT", ")", ",", "dim", "=", "0", ")", "\n", "ytrain", "=", "torch", ".", "cat", "(", "(", "yS", ",", "yT", ",", "yS", ",", "yT", ")", ",", "dim", "=", "0", ")", "\n", "output", "=", "classifier", "(", "xtrain", ")", "\n", "loss_cls", "=", "classifier", ".", "lossfunction", "(", "output", ",", "ytrain", ")", "\n", "optimizer_cls", ".", "zero_grad", "(", ")", "\n", "loss_cls", ".", "backward", "(", ")", "\n", "optimizer_cls", ".", "step", "(", ")", "\n", "# test", "\n", "", "scheduler_cls", ".", "step", "(", ")", "\n", "#print(f'epoch:{epoch:02d} ',end='')", "\n", "#preds,scores,acc_per_class[epoch,],acc[epoch] = test_model(classifier, datasets['test'], dataloaders['test'],device,model_type='mlp')", "\n", "#scipy.io.savemat('./results/'+args.filename+'.mat',mdict={'acc_per_class':acc_per_class,'acc':acc})", "\n", "", "return", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.train_vae": [[147, 169], ["vae.train", "range", "collections.defaultdict", "enumerate", "scheduler.step", "vae", "vae", "train_vae_imageclef_zNorm.loss_fn", "optimizer.zero_grad", "loss_fn.backward", "optimizer.step", "collections.defaultdict", "xS.to", "xT.to", "yS.to", "yT.to", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.loss_fn"], ["", "def", "train_vae", "(", "vae", ",", "dataloader", ",", "args", ",", "optimizer", ",", "scheduler", ")", ":", "\n", "############################################################", "\n", "# train CVAE", "\n", "############################################################", "\n", "    ", "device", "=", "args", ".", "device", "\n", "vae", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_vae", ")", ":", "\n", "\n", "        ", "tracker_epoch", "=", "defaultdict", "(", "lambda", ":", "defaultdict", "(", "dict", ")", ")", "\n", "\n", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "loss", "=", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "", "return", "vae", "\n", "############################################################", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.generate_z": [[172, 177], ["vae.eval", "vae", "vae", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["None"], ["", "def", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", ":", "\n", "    ", "vae", ".", "eval", "(", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "return", "recon_xS2", ",", "recon_xT2", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_imageclef_zNorm.main": [[178, 246], ["torch.manual_seed", "torch.cuda.is_available", "torch.device", "time.time", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "numpy.zeros", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "range", "torch.cuda.manual_seed", "train_vae_imageclef_zNorm.TwoModalDataset", "train_classifier.parameters", "train_vae.parameters", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_imageclef_zNorm.train_classifier", "print", "train_vae_imageclef_zNorm.test_model", "numpy.zeros", "numpy.int32", "range", "print", "torch.cuda.is_available", "len", "len", "models_zNorm.Classifier", "models_zNorm.VAE", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_imageclef_zNorm.train_vae", "train_classifier.parameters", "numpy.ones_like", "thisClassFlag.sum", "train_vae.parameters", "models_zNorm.Classifier", "len", "models_zNorm.VAE", "len", "sorted", "numpy.int32", "min"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_classifier", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.test_model", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_vae"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "args", ".", "device", "=", "device", "\n", "ts", "=", "time", ".", "time", "(", ")", "\n", "datasets", "=", "{", "x", ":", "TwoModalDataset", "(", "phase", "=", "x", ",", "sourceDomainIndex", "=", "args", ".", "sourceDomainIndex", ",", "targetDomainIndex", "=", "args", ".", "targetDomainIndex", ",", "trialIndex", "=", "args", ".", "trialIndex", ")", "for", "x", "in", "[", "'train'", ",", "'test'", "]", "}", "\n", "dataloaders", "=", "{", "}", "\n", "dataloaders", "[", "'train'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'trainall'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "len", "(", "datasets", "[", "'train'", "]", ")", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'test'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'test'", "]", ",", "batch_size", "=", "len", "(", "datasets", "[", "'test'", "]", ")", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ")", "\n", "# define a classifier", "\n", "classifier", "=", "Classifier", "(", "input_dim", "=", "2048", ",", "num_labels", "=", "12", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "num_epochs_cls", "=", "50", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_iter", ",", "12", ")", ")", "\n", "# define the VAE", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "for", "iter", "in", "range", "(", "args", ".", "num_iter", "+", "5", ")", ":", "\n", "        ", "if", "iter", ">", "0", ":", "\n", "# define VAE", "\n", "            ", "args", ".", "encoder_layer_sizes", "[", "0", "]", "=", "2048", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "# train VAE", "\n", "vae", "=", "train_vae", "(", "vae", ",", "dataloaders", "[", "'train'", "]", ",", "args", ",", "optimizer_vae", ",", "scheduler_vae", ")", "\n", "# train a classifier", "\n", "", "classifier", "=", "Classifier", "(", "input_dim", "=", "2048", ",", "num_labels", "=", "12", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "classifier", "=", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", "\n", "# classify target samples", "\n", "print", "(", "f'Iter {iter:02d}: '", ",", "end", "=", "''", ")", "\n", "pseudo_labels", ",", "scores", ",", "acc_per_class", ",", "acc_per_image", "=", "test_model", "(", "classifier", ",", "datasets", "[", "'test'", "]", ",", "dataloaders", "[", "'test'", "]", ",", "device", ",", "model_type", "=", "'mlp'", ")", "\n", "# update pseudo-labels,", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "=", "-", "1", "*", "np", ".", "ones_like", "(", "pseudo_labels", ")", "\n", "#'''", "\n", "trustable", "=", "np", ".", "zeros", "(", "(", "len", "(", "pseudo_labels", ")", ",", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "numSelected", "=", "np", ".", "int32", "(", "(", "iter", "+", "1", ")", "/", "args", ".", "num_iter", "*", "len", "(", "pseudo_labels", ")", "/", "12", ")", "\n", "for", "iCls", "in", "range", "(", "12", ")", ":", "\n", "            ", "thisClassFlag", "=", "pseudo_labels", "==", "iCls", "\n", "numThisClass", "=", "thisClassFlag", ".", "sum", "(", ")", "\n", "\n", "if", "numThisClass", ">", "0", ":", "\n", "                ", "threshold", "=", "sorted", "(", "scores", "[", "thisClassFlag", "]", ",", "reverse", "=", "True", ")", "[", "min", "(", "numThisClass", "-", "1", ",", "numSelected", ")", "]", "\n", "trustable", "=", "trustable", "+", "np", ".", "int32", "(", "(", "scores", ">=", "threshold", ")", "&", "thisClassFlag", ")", "\n", "", "", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "[", "trustable", "==", "1", "]", "=", "pseudo_labels", "[", "trustable", "==", "1", "]", "\n", "print", "(", "(", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", ">", "-", "1", ")", ".", "sum", "(", ")", ")", "\n", "#'''", "\n", "#datasets['train'].pseudo_label_B[scores>0.9-iter*0.1] = pseudo_labels[scores>0.9-iter*0.1]        ", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_score_B", "=", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.utils.idx2onehot": [[4, 14], ["torch.zeros", "torch.zeros.scatter_", "torch.max().item", "idx.unsqueeze.dim", "idx.unsqueeze.unsqueeze", "idx.unsqueeze.size", "torch.max"], "function", ["None"], ["def", "idx2onehot", "(", "idx", ",", "n", ")", ":", "\n", "\n", "    ", "assert", "torch", ".", "max", "(", "idx", ")", ".", "item", "(", ")", "<", "n", "\n", "if", "idx", ".", "dim", "(", ")", "==", "1", ":", "\n", "        ", "idx", "=", "idx", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "onehot", "=", "torch", ".", "zeros", "(", "idx", ".", "size", "(", "0", ")", ",", "n", ")", "\n", "onehot", ".", "scatter_", "(", "1", ",", "idx", ",", "1", ")", "\n", "\n", "return", "onehot", "\n", "", ""]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__init__": [[20, 25], ["train_vae_officeHome_zNorm.TwoModalDataset.load_mat", "numpy.zeros_like", "numpy.ones_like"], "methods", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.load_mat"], ["    ", "def", "__init__", "(", "self", ",", "phase", "=", "'train'", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "        ", "self", ".", "phase", "=", "phase", "\n", "self", ".", "load_mat", "(", "sourceDomainIndex", ",", "targetDomainIndex", ",", "trialIndex", ")", "\n", "self", ".", "pseudo_label_B", "=", "np", ".", "ones_like", "(", "self", ".", "label_B", ")", "*", "-", "1", "# this will be dynamically updated during training", "\n", "self", ".", "pseudo_score_B", "=", "np", ".", "zeros_like", "(", "self", ".", "label_B", ")", "\n", "", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.load_mat": [[25, 38], ["scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "sklearn.preprocessing.normalize", "len", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "sklearn.preprocessing.normalize", "numpy.unique"], "methods", ["None"], ["", "def", "load_mat", "(", "self", ",", "sourceDomainIndex", "=", "0", ",", "targetDomainIndex", "=", "0", ",", "trialIndex", "=", "0", ")", ":", "\n", "# load features and labels", "\n", "        ", "data_dir", "=", "'../data/OfficeHomeDataset_10072016/'", "\n", "# data_dir = 'E:\\DomainAdaptation\\OfficeHomeDataset_10072016/'", "\n", "data_A", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "'OfficeHome-'", "+", "domainSet", "[", "sourceDomainIndex", "]", "+", "'-resnet50-noft.mat'", ")", "\n", "feature_A", "=", "data_A", "[", "'resnet50_features'", "]", "[", ":", ",", ":", ",", "0", ",", "0", "]", "\n", "self", ".", "feature_A", "=", "normalize", "(", "feature_A", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_A", "=", "data_A", "[", "'labels'", "]", "[", "0", ",", "]", "\n", "self", ".", "num_class", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "label_A", ")", ")", "\n", "data_B", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_dir", "+", "'OfficeHome-'", "+", "domainSet", "[", "targetDomainIndex", "]", "+", "'-resnet50-noft.mat'", ")", "\n", "feature_B", "=", "data_B", "[", "'resnet50_features'", "]", "[", ":", ",", ":", ",", "0", ",", "0", "]", "\n", "self", ".", "feature_B", "=", "normalize", "(", "feature_B", ",", "norm", "=", "'l2'", ")", "\n", "self", ".", "label_B", "=", "data_B", "[", "'labels'", "]", "[", "0", ",", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__len__": [[39, 44], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'train'", ":", "#or self.phase == 'val':", "\n", "            ", "return", "self", ".", "feature_A", ".", "shape", "[", "0", "]", "\n", "", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "return", "self", ".", "feature_B", ".", "shape", "[", "0", "]", "\n", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.TwoModalDataset.__getitem__": [[44, 58], ["numpy.argwhere", "len", "numpy.random.choice", "numpy.random.randint", "len", "numpy.ones_like"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "idx_B", "=", "idx", "\n", "return", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_B", "[", "idx_B", "]", "\n", "# return a pair of regular and xray image features, which are paired randomly", "\n", "", "label", "=", "self", ".", "label_A", "[", "idx", "]", "\n", "#indicesB_this_label = np.argwhere((self.pseudo_label_B==label) & (self.pseudo_score_B > -1))", "\n", "indicesB_this_label", "=", "np", ".", "argwhere", "(", "self", ".", "pseudo_label_B", "==", "label", ")", "\n", "if", "len", "(", "indicesB_this_label", ")", ">", "0", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "choice", "(", "indicesB_this_label", "[", ":", ",", "0", "]", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "self", ".", "pseudo_label_B", "[", "idx_B", "]", "\n", "", "else", ":", "\n", "            ", "idx_B", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "label_B", ")", ")", "\n", "return", "self", ".", "feature_A", "[", "idx", ",", ":", "]", ",", "self", ".", "feature_B", "[", "idx_B", ",", ":", "]", ",", "self", ".", "label_A", "[", "idx", "]", ",", "np", ".", "ones_like", "(", "self", ".", "label_A", "[", "idx", "]", ")", "*", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.test_model": [[60, 104], ["time.time", "numpy.zeros", "numpy.zeros", "enumerate", "range", "numpy.mean", "print", "features.to.to", "labels.cpu().detach().numpy.to", "len", "time.time", "torch.set_grad_enabled", "numpy.argmax", "numpy.exp", "model.predict", "model.eval", "model", "preds.cpu().detach().numpy.cpu().detach().numpy", "labels.cpu().detach().numpy.cpu().detach().numpy", "numpy.concatenate", "numpy.concatenate", "numpy.max", "np.zeros.sum", "np.zeros.sum", "preds.cpu().detach().numpy.cpu().detach", "labels.cpu().detach().numpy.cpu().detach", "preds.cpu().detach().numpy.cpu", "labels.cpu().detach().numpy.cpu"], "function", ["None"], ["", "", "", "def", "test_model", "(", "model", ",", "dataset", ",", "dataloader", ",", "device", ",", "model_type", "=", "'knn'", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "num_class", "=", "dataset", ".", "num_class", "\n", "running_corrects", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "num_sample_per_class", "=", "np", ".", "zeros", "(", "(", "num_class", ",", ")", ")", "\n", "# Iterate over data.", "\n", "for", "index", ",", "(", "features", ",", "labels", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "        ", "features", "=", "features", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "# zero the parameter gradients", "\n", "# forward", "\n", "# track history if only in train", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "if", "model_type", "==", "'knn'", ":", "\n", "                ", "preds", "=", "model", ".", "predict", "(", "features", ")", "\n", "", "if", "model_type", "==", "'mlp'", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "preds", "=", "model", "(", "features", ")", "\n", "preds", "=", "preds", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "index", "==", "0", ":", "\n", "                ", "outputs_test", "=", "preds", "\n", "labels_test", "=", "labels", "\n", "", "else", ":", "\n", "                ", "outputs_test", "=", "np", ".", "concatenate", "(", "(", "outputs_test", ",", "preds", ")", ",", "0", ")", "\n", "labels_test", "=", "np", ".", "concatenate", "(", "(", "labels_test", ",", "labels", ")", ",", "0", ")", "\n", "", "", "if", "model_type", "==", "'mlp'", ":", "\n", "            ", "preds", "=", "np", ".", "argmax", "(", "outputs_test", ",", "1", ")", "\n", "scores", "=", "np", ".", "exp", "(", "np", ".", "max", "(", "outputs_test", ",", "1", ")", ")", "\n", "", "if", "model_type", "==", "'knn'", ":", "\n", "            ", "preds", "=", "outputs_test", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "labels_test", ")", ")", ":", "\n", "        ", "num_sample_per_class", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "if", "preds", "[", "i", "]", "==", "labels_test", "[", "i", "]", ":", "\n", "            ", "running_corrects", "[", "labels_test", "[", "i", "]", "]", "+=", "1", "\n", "\n", "", "", "acc_per_class", "=", "running_corrects", "/", "num_sample_per_class", "\n", "acc", "=", "np", ".", "mean", "(", "acc_per_class", ")", "\n", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "#print('Testing complete in {:.0f}m {:.0f}s'.format(time_elapsed // 60, time_elapsed % 60))", "\n", "print", "(", "'per-image acc:{:2.4f}; per-class acc:{:2.4f}'", ".", "format", "(", "running_corrects", ".", "sum", "(", ")", "/", "num_sample_per_class", ".", "sum", "(", ")", ",", "acc", ")", ")", "\n", "return", "preds", ",", "scores", ",", "acc_per_class", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.loss_fn": [[105, 116], ["torch.nn.MSELoss", "torch.sqrt", "distance.sum.sum", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "xS.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "log_varS.exp", "log_varT[].exp", "meanS.pow", "meanT[].pow", "torch.sqrt", "torch.sqrt", "log_varS[].exp", "log_varT[].exp"], "function", ["None"], ["", "def", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", ":", "\n", "    ", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "False", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "reconstruction_loss", "=", "criterion", "(", "recon_xS", ",", "xS", ")", "+", "criterion", "(", "recon_xT", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "\n", "cross_reconstruction_loss", "=", "criterion", "(", "recon_xS2", "[", "mask", ",", ":", "]", ",", "xT", "[", "mask", ",", ":", "]", ")", "+", "criterion", "(", "recon_xT2", "[", "mask", ",", ":", "]", ",", "xS", "[", "mask", ",", ":", "]", ")", "\n", "KLD", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varS", "-", "meanS", ".", "pow", "(", "2", ")", "-", "log_varS", ".", "exp", "(", ")", ")", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "log_varT", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ".", "pow", "(", "2", ")", "-", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "\n", "distance", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "(", "meanS", "[", "mask", ",", ":", "]", "-", "meanT", "[", "mask", ",", ":", "]", ")", "**", "2", ",", "dim", "=", "1", ")", "+", "torch", ".", "sum", "(", "(", "torch", ".", "sqrt", "(", "log_varS", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", "-", "torch", ".", "sqrt", "(", "log_varT", "[", "mask", ",", ":", "]", ".", "exp", "(", ")", ")", ")", "**", "2", ",", "dim", "=", "1", ")", ")", "\n", "distance", "=", "distance", ".", "sum", "(", ")", "\n", "weight", "=", "epoch", "*", "5e-4", "\n", "#print(f'{reconstruction_loss:1.4f}, {cross_reconstruction_loss:1.4f}, {distance:1.4f},{KLD:1.4f}')", "\n", "return", "(", "reconstruction_loss", "+", "cross_reconstruction_loss", ")", "/", "xS", ".", "size", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_classifier": [[117, 146], ["classifier.train", "vae.eval", "numpy.zeros", "numpy.zeros", "range", "enumerate", "scheduler_cls.step", "train_vae_officeHome_zNorm.generate_z", "torch.cat", "torch.cat", "classifier", "classifier.lossfunction", "optimizer_cls.zero_grad", "classifier.lossfunction.backward", "optimizer_cls.step", "xS.to", "xT.to", "yS.to", "yT.to"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.generate_z"], ["", "def", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", ":", "\n", "    ", "device", "=", "args", ".", "device", "\n", "classifier", ".", "train", "(", ")", "\n", "vae", ".", "eval", "(", ")", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", "datasets", "[", "'train'", "]", ".", "num_class", ")", ")", "\n", "acc", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_epochs_cls", ",", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_cls", ")", ":", "\n", "#print(f'Classifier training epoch {epoch:d}/{args.num_epochs_cls:d}')", "\n", "        ", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloaders", "[", "'train'", "]", ")", ":", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "#x,y = next_batch(vae,batch_size=1024)", "\n", "recon_xS", ",", "recon_xT", "=", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", "\n", "mask", "=", "yT", "!=", "-", "1", "\n", "xT", "=", "xT", "[", "mask", ",", ":", "]", "\n", "yT", "=", "yT", "[", "mask", "]", "\n", "recon_xT", "=", "recon_xT", "[", "mask", ",", ":", "]", "\n", "xtrain", "=", "torch", ".", "cat", "(", "(", "xS", ",", "xT", ",", "recon_xS", ",", "recon_xT", ")", ",", "dim", "=", "0", ")", "\n", "ytrain", "=", "torch", ".", "cat", "(", "(", "yS", ",", "yT", ",", "yS", ",", "yT", ")", ",", "dim", "=", "0", ")", "\n", "output", "=", "classifier", "(", "xtrain", ")", "\n", "loss_cls", "=", "classifier", ".", "lossfunction", "(", "output", ",", "ytrain", ")", "\n", "optimizer_cls", ".", "zero_grad", "(", ")", "\n", "loss_cls", ".", "backward", "(", ")", "\n", "optimizer_cls", ".", "step", "(", ")", "\n", "# test", "\n", "", "scheduler_cls", ".", "step", "(", ")", "\n", "#print(f'epoch:{epoch:02d} ',end='')", "\n", "#preds,scores,acc_per_class[epoch,],acc[epoch] = test_model(classifier, datasets['test'], dataloaders['test'],device,model_type='mlp')", "\n", "#scipy.io.savemat('./results/'+args.filename+'.mat',mdict={'acc_per_class':acc_per_class,'acc':acc})", "\n", "", "return", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_vae": [[147, 169], ["vae.train", "range", "collections.defaultdict", "enumerate", "scheduler.step", "vae", "vae", "train_vae_officeHome_zNorm.loss_fn", "optimizer.zero_grad", "loss_fn.backward", "optimizer.step", "collections.defaultdict", "xS.to", "xT.to", "yS.to", "yT.to", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.loss_fn"], ["", "def", "train_vae", "(", "vae", ",", "dataloader", ",", "args", ",", "optimizer", ",", "scheduler", ")", ":", "\n", "############################################################", "\n", "# train CVAE", "\n", "############################################################", "\n", "    ", "device", "=", "args", ".", "device", "\n", "vae", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs_vae", ")", ":", "\n", "\n", "        ", "tracker_epoch", "=", "defaultdict", "(", "lambda", ":", "defaultdict", "(", "dict", ")", ")", "\n", "\n", "for", "iteration", ",", "(", "xS", ",", "xT", ",", "yS", ",", "yT", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "\n", "            ", "xS", ",", "xT", ",", "yS", ",", "yT", "=", "xS", ".", "to", "(", "device", ")", ",", "xT", ".", "to", "(", "device", ")", ",", "yS", ".", "to", "(", "device", ")", ",", "yT", ".", "to", "(", "device", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "loss", "=", "loss_fn", "(", "recon_xS", ",", "recon_xS2", ",", "xS", ",", "recon_xT", ",", "recon_xT2", ",", "xT", ",", "meanS", ",", "log_varS", ",", "meanT", ",", "log_varT", ",", "yT", ",", "epoch", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "", "return", "vae", "\n", "############################################################", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.generate_z": [[173, 178], ["vae.eval", "vae", "vae", "torch.zeros_like().long().to", "torch.ones_like().long().to", "torch.zeros_like().long", "torch.ones_like().long", "torch.zeros_like", "torch.ones_like"], "function", ["None"], ["", "def", "generate_z", "(", "xS", ",", "xT", ",", "vae", ",", "device", ")", ":", "\n", "    ", "vae", ".", "eval", "(", ")", "\n", "recon_xS", ",", "recon_xS2", ",", "meanS", ",", "log_varS", ",", "zS", "=", "vae", "(", "xS", ",", "d", "=", "torch", ".", "zeros_like", "(", "xS", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "recon_xT", ",", "recon_xT2", ",", "meanT", ",", "log_varT", ",", "zT", "=", "vae", "(", "xT", ",", "d", "=", "torch", ".", "ones_like", "(", "xT", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "return", "recon_xS2", ",", "recon_xT2", "\n", "\n"]], "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.main": [[179, 248], ["torch.manual_seed", "torch.cuda.is_available", "torch.device", "time.time", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "numpy.zeros", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "range", "torch.cuda.manual_seed", "train_vae_officeHome_zNorm.TwoModalDataset", "train_classifier.parameters", "train_vae.parameters", "models_zNorm.Classifier().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_officeHome_zNorm.train_classifier", "print", "train_vae_officeHome_zNorm.test_model", "numpy.zeros", "numpy.int32", "range", "print", "torch.cuda.is_available", "len", "len", "models_zNorm.Classifier", "models_zNorm.VAE", "models_zNorm.VAE().to", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "train_vae_officeHome_zNorm.train_vae", "train_classifier.parameters", "numpy.ones_like", "thisClassFlag.sum", "train_vae.parameters", "models_zNorm.Classifier", "len", "models_zNorm.VAE", "len", "sorted", "numpy.int32", "min"], "function", ["home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_classifier", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.test_model", "home.repos.pwc.inspect_result.hellowangqian_UDA-norm-VAE.None.train_vae_officeHome_zNorm.train_vae"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "args", ".", "device", "=", "device", "\n", "ts", "=", "time", ".", "time", "(", ")", "\n", "datasets", "=", "{", "x", ":", "TwoModalDataset", "(", "phase", "=", "x", ",", "sourceDomainIndex", "=", "args", ".", "sourceDomainIndex", ",", "targetDomainIndex", "=", "args", ".", "targetDomainIndex", ",", "trialIndex", "=", "args", ".", "trialIndex", ")", "for", "x", "in", "[", "'train'", ",", "'test'", "]", "}", "\n", "dataloaders", "=", "{", "}", "\n", "dataloaders", "[", "'train'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'trainall'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "len", "(", "datasets", "[", "'train'", "]", ")", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "dataloaders", "[", "'test'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'test'", "]", ",", "batch_size", "=", "len", "(", "datasets", "[", "'test'", "]", ")", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ")", "\n", "# define a classifier", "\n", "classifier", "=", "Classifier", "(", "input_dim", "=", "2048", ",", "num_labels", "=", "65", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "num_epochs_cls", "=", "50", "\n", "acc_per_class", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_iter", ",", "65", ")", ")", "\n", "# define the VAE", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "for", "iter", "in", "range", "(", "args", ".", "num_iter", "+", "5", ")", ":", "\n", "\n", "        ", "if", "iter", ">", "0", ":", "\n", "# define VAE", "\n", "            ", "args", ".", "encoder_layer_sizes", "[", "0", "]", "=", "2048", "\n", "vae", "=", "VAE", "(", "\n", "encoder_layer_sizes", "=", "args", ".", "encoder_layer_sizes", ",", "\n", "latent_size", "=", "args", ".", "latent_size", ",", "\n", "decoder_layer_sizes", "=", "args", ".", "decoder_layer_sizes", ",", "\n", "num_domains", "=", "2", ",", "dropout", "=", "0.5", ")", ".", "to", "(", "device", ")", "\n", "optimizer_vae", "=", "torch", ".", "optim", ".", "Adam", "(", "vae", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "learning_rate", ")", "\n", "scheduler_vae", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_vae", ",", "step_size", "=", "50", ",", "gamma", "=", "0.1", ")", "\n", "\n", "# train VAE", "\n", "vae", "=", "train_vae", "(", "vae", ",", "dataloaders", "[", "'train'", "]", ",", "args", ",", "optimizer_vae", ",", "scheduler_vae", ")", "\n", "# train a classifier", "\n", "", "classifier", "=", "Classifier", "(", "input_dim", "=", "2048", ",", "num_labels", "=", "65", ")", ".", "to", "(", "device", ")", "# train and test a classifier", "\n", "optimizer_cls", "=", "torch", ".", "optim", ".", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ")", "\n", "scheduler_cls", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_cls", ",", "step_size", "=", "25", ",", "gamma", "=", "0.1", ")", "\n", "classifier", "=", "train_classifier", "(", "classifier", ",", "vae", ",", "datasets", ",", "dataloaders", ",", "args", ",", "optimizer_cls", ",", "scheduler_cls", ")", "\n", "# classify target samples", "\n", "print", "(", "f'Iter {iter:02d}: '", ",", "end", "=", "''", ")", "\n", "pseudo_labels", ",", "scores", ",", "acc_per_class", ",", "acc_per_image", "=", "test_model", "(", "classifier", ",", "datasets", "[", "'test'", "]", ",", "dataloaders", "[", "'test'", "]", ",", "device", ",", "model_type", "=", "'mlp'", ")", "\n", "# update pseudo-labels", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "=", "-", "1", "*", "np", ".", "ones_like", "(", "pseudo_labels", ")", "\n", "#'''", "\n", "trustable", "=", "np", ".", "zeros", "(", "(", "len", "(", "pseudo_labels", ")", ",", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "numSelected", "=", "np", ".", "int32", "(", "(", "iter", "+", "1", ")", "/", "args", ".", "num_iter", "*", "len", "(", "pseudo_labels", ")", "/", "65", ")", "\n", "for", "iCls", "in", "range", "(", "65", ")", ":", "\n", "            ", "thisClassFlag", "=", "pseudo_labels", "==", "iCls", "\n", "numThisClass", "=", "thisClassFlag", ".", "sum", "(", ")", "\n", "\n", "if", "numThisClass", ">", "0", ":", "\n", "                ", "threshold", "=", "sorted", "(", "scores", "[", "thisClassFlag", "]", ",", "reverse", "=", "True", ")", "[", "min", "(", "numThisClass", "-", "1", ",", "numSelected", ")", "]", "\n", "trustable", "=", "trustable", "+", "np", ".", "int32", "(", "(", "scores", ">=", "threshold", ")", "&", "thisClassFlag", ")", "\n", "", "", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", "[", "trustable", "==", "1", "]", "=", "pseudo_labels", "[", "trustable", "==", "1", "]", "\n", "print", "(", "(", "datasets", "[", "'train'", "]", ".", "pseudo_label_B", ">", "-", "1", ")", ".", "sum", "(", ")", ")", "\n", "#'''", "\n", "#datasets['train'].pseudo_label_B[scores>0.9-iter*0.1] = pseudo_labels[scores>0.9-iter*0.1]        ", "\n", "datasets", "[", "'train'", "]", ".", "pseudo_score_B", "=", "scores", "\n", "\n"]]}