{"home.repos.pwc.inspect_result.AlexImmer_VIND.None.wishart_normal_normal.configuration": [[18, 50], ["None"], "function", ["None"], ["@", "ex", ".", "config", "\n", "def", "configuration", "(", ")", ":", "\n", "    ", "d", "=", "29", "\n", "W_df_prior", "=", "100", "\n", "W_init_factor", "=", "1", "\n", "W_df_init", "=", "200", "\n", "alpha_prior", "=", "0.3", "\n", "alpha_init", "=", "0.3", "\n", "prior_correlation", "=", "True", "\n", "\n", "methods", "=", "{", "\n", "'BBVI-RP'", ":", "{", "'method'", ":", "'bbvirp'", ",", "'step_size'", ":", "0.01", "}", ",", "\n", "'VIND-1'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "0.01", ",", "'eps'", ":", "2", "*", "d", "}", ",", "\n", "'VIND-2'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "0.01", ",", "'eps'", ":", "4", "*", "d", "}", ",", "\n", "'BBVI-RP-wodf'", ":", "{", "'method'", ":", "'bbvirp-wodf'", ",", "'step_size'", ":", "0.01", "}", "\n", "}", "\n", "\n", "method_conf", "=", "{", "\n", "'n_iter'", ":", "5000", ",", "\n", "'n_samples'", ":", "1", ",", "\n", "'track_elbo'", ":", "True", ",", "\n", "'n_samples_elbo'", ":", "100", ",", "\n", "'opt'", ":", "'Adam'", ",", "\n", "'vstep_sizes'", ":", "{", "\n", "'W_df'", ":", "0.1", ",", "\n", "'W'", ":", "0.00001", ",", "\n", "'loc'", ":", "0.1", ",", "\n", "'alpha'", ":", "0.1", "\n", "}", ",", "\n", "'track_grad_var'", ":", "False", ",", "\n", "'track_grad_var_freq'", ":", "100", ",", "\n", "'grad_var_samples'", ":", "1000", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.wishart_normal_normal.init": [[53, 90], ["vinf.datasets.DowJones", "numpy.cov", "numpy.linalg.pinv", "vinf.joints.WishartNormalNormal", "vinf.joints.WishartNormalNormal", "torch.from_numpy", "torch.tensor", "torch.zeros", "torch.tensor", "numpy.eye", "scipy.linalg.sqrtm", "torch.from_numpy.astype", "data.numpy"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.DowJones"], ["", "@", "ex", ".", "capture", "\n", "def", "init", "(", "W_df_init", ",", "W_df_prior", ",", "W_init_factor", ",", "alpha_init", ",", "alpha_prior", ",", "\n", "d", ",", "_config", ")", ":", "\n", "    ", "factor", "=", "1e3", "\n", "data", ",", "test_data", "=", "DowJones", "(", "sub_mean", "=", "False", ",", "dim", "=", "d", ",", "factor", "=", "factor", ")", "\n", "# 0.0008 is variance of stocks before train and test data estimated", "\n", "# we scale by factor ** 2 due to var(cx) = c^2 var(x)", "\n", "prior_variance", "=", "0.0008", "*", "factor", "**", "2", "\n", "\n", "# use hot start with empirical covariance", "\n", "Cemp", "=", "np", ".", "cov", "(", "data", ".", "numpy", "(", ")", ".", "T", ")", "\n", "Pemp", "=", "np", ".", "linalg", ".", "pinv", "(", "Cemp", ")", "# use Pemp instead of W_p_unnorm", "\n", "\n", "W_p_unnorm", "=", "1", "/", "prior_variance", "*", "np", ".", "eye", "(", "d", ")", "\n", "W_prior", "=", "W_p_unnorm", "/", "W_df_prior", "\n", "joint", "=", "WishartNormalNormal", "(", "data", ",", "0", ",", "alpha_prior", ",", "W_df_prior", ",", "W_prior", ")", "\n", "test_joint", "=", "WishartNormalNormal", "(", "test_data", ",", "0", ",", "alpha_prior", ",", "W_df_prior", ",", "W_prior", ")", "\n", "W_init", "=", "W_init_factor", "*", "sp", ".", "linalg", ".", "sqrtm", "(", "Pemp", "/", "W_df_init", ")", "\n", "W_init", "=", "torch", ".", "from_numpy", "(", "W_init", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "\n", "W_init", ".", "requires_grad", "=", "True", "\n", "\n", "# w and g df inits", "\n", "W_df_init", "=", "torch", ".", "tensor", "(", "[", "W_df_init", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "W_df_init", ".", "requires_grad", "=", "True", "\n", "# loc and alpha", "\n", "loc_init", "=", "torch", ".", "zeros", "(", "d", ",", "dtype", "=", "torch", ".", "double", ")", "\n", "alpha_init", "=", "torch", ".", "tensor", "(", "[", "alpha_init", "]", ",", "dtype", "=", "torch", ".", "double", ")", "\n", "loc_init", ".", "requires_grad", "=", "True", "\n", "alpha_init", ".", "requires_grad", "=", "True", "\n", "vars_", "=", "{", "\n", "'df'", ":", "W_df_init", ",", "\n", "'W'", ":", "W_init", ",", "\n", "'loc'", ":", "loc_init", ",", "\n", "'alpha'", ":", "alpha_init", "\n", "}", "\n", "return", "vars_", ",", "joint", ",", "test_joint", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.wishart_normal_normal.wn_experiment": [[92, 122], ["wishart_normal_normal.init", "methods.items", "dict", "copy.deepcopy", "_log.info", "_log.info", "open", "pickle.dump", "vinf.bbvi.bbvirp", "str", "vinf.bbvi.bbvirp", "vinf.vind.vind", "ValueError"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.None.mse_grad_gamma.init", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvirp", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvirp", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.vind"], ["", "@", "ex", ".", "automain", "\n", "def", "wn_experiment", "(", "methods", ",", "method_conf", ",", "_run", ",", "_log", ")", ":", "\n", "    ", "import", "pickle", "\n", "vars_", ",", "joint", ",", "test_joint", "=", "init", "(", ")", "\n", "result", "=", "{", "name", ":", "dict", "(", ")", "for", "name", "in", "methods", "}", "\n", "for", "name", ",", "conf", "in", "methods", ".", "items", "(", ")", ":", "\n", "        ", "varsr", "=", "deepcopy", "(", "vars_", ")", "\n", "_log", ".", "info", "(", "'Now Running '", "+", "name", ")", "\n", "_log", ".", "info", "(", "'With configuration: '", "+", "str", "(", "conf", ")", ")", "\n", "if", "conf", "[", "'method'", "]", "==", "'bbvirp'", ":", "\n", "            ", "hist", ",", "elbo", ",", "_", ",", "testloss", "=", "bbvirp", "(", "varsr", ",", "WSR", ".", "sample_reparam", ",", "WSR", ".", "normalize_sample", ",", "joint", ",", "\n", "WishartNormal", ",", "conf", "[", "'step_size'", "]", ",", "**", "method_conf", ",", "\n", "test_joint", "=", "test_joint", ")", "\n", "", "elif", "conf", "[", "'method'", "]", "==", "'bbvirp-wodf'", ":", "\n", "            ", "varsr", "[", "'df'", "]", ".", "requires_grad", "=", "False", "\n", "hist", ",", "elbo", ",", "_", ",", "testloss", "=", "bbvirp", "(", "varsr", ",", "WSR", ".", "sample_reparam", ",", "WSR", ".", "normalize_sample", ",", "joint", ",", "\n", "WishartNormal", ",", "conf", "[", "'step_size'", "]", ",", "**", "method_conf", ",", "\n", "test_joint", "=", "test_joint", ")", "\n", "", "elif", "conf", "[", "'method'", "]", "==", "'vind'", ":", "\n", "            ", "hist", ",", "elbo", ",", "_", ",", "_", ",", "testloss", "=", "vind", "(", "varsr", ",", "WSR", ".", "sample_reparam", ",", "WSR", ".", "normalize_sample", ",", "joint", ",", "\n", "WishartNormal", ",", "conf", "[", "'eps'", "]", ",", "conf", "[", "'step_size'", "]", ",", "**", "method_conf", ",", "\n", "test_joint", "=", "test_joint", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "conf", "[", "'method'", "]", "+", "' is not a valid method'", ")", "\n", "", "result", "[", "name", "]", "[", "'elbo'", "]", "=", "elbo", "\n", "result", "[", "name", "]", "[", "'hist'", "]", "=", "hist", "\n", "result", "[", "name", "]", "[", "'testloss'", "]", "=", "testloss", "\n", "", "fname", "=", "'wishart_normal_normal'", "\n", "with", "open", "(", "fname", "+", "'.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "result", ",", "f", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.linear_regression.configuration": [[17, 54], ["None"], "function", ["None"], ["@", "ex", ".", "config", "\n", "def", "configuration", "(", ")", ":", "\n", "    ", "df_prior", "=", "5", "\n", "rate_prior", "=", "5", "\n", "df_init", "=", "200", "\n", "rate_init", "=", "50", "\n", "S_prior_factor", "=", "1", "\n", "S_init_factor", "=", "1", "\n", "only_df", "=", "False", "\n", "\n", "methods", "=", "{", "\n", "'VIND-0_1-Ent'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "1", ",", "'eps'", ":", "2", "}", ",", "\n", "'VIND-0_5-Ent'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "1", ",", "'eps'", ":", "2", "}", ",", "\n", "'VIND-1-Ent'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "1", ",", "'eps'", ":", "2", "}", ",", "\n", "'VIND-2-Ent'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "1", ",", "'eps'", ":", "2", "}", ",", "\n", "'BBVI-RP'", ":", "{", "'method'", ":", "'bbvirp'", ",", "'step_size'", ":", "1", "}", "\n", "}", "\n", "\n", "method_conf", "=", "{", "\n", "'n_iter'", ":", "2000", ",", "\n", "'n_samples'", ":", "1", ",", "\n", "'track_grad_var'", ":", "False", ",", "\n", "'track_grad_var_freq'", ":", "200", ",", "\n", "'grad_var_samples'", ":", "1000", ",", "\n", "'track_elbo'", ":", "True", ",", "\n", "'n_samples_elbo'", ":", "10", ",", "\n", "'opt'", ":", "'Adam'", ",", "\n", "'vstep_sizes'", ":", "{", "\n", "'D'", ":", "0.1", ",", "\n", "'loc'", ":", "1", ",", "\n", "'df'", ":", "5", ",", "\n", "'rate'", ":", "5", "\n", "}", "\n", "}", "\n", "\n", "# data set", "\n", "decorrelate", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.linear_regression.init": [[56, 79], ["vinf.datasets.BostonHousing", "jdist", "jdist", "numpy.zeros().astype", "torch.from_numpy", "torch.tensor", "torch.tensor", "torch.from_numpy", "numpy.eye().astype", "numpy.diag", "numpy.zeros", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.BostonHousing"], ["", "@", "ex", ".", "capture", "\n", "def", "init", "(", "df_init", ",", "rate_init", ",", "S_init_factor", ",", "df_prior", ",", "rate_prior", ",", "S_prior_factor", ",", "\n", "only_df", ",", "decorrelate", ")", ":", "\n", "    ", "data", "=", "BostonHousing", "(", "decorrelate", ")", "\n", "dim", "=", "data", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "jdist", "=", "MVNGammaLinRegIndep", "\n", "joint", "=", "jdist", "(", "data", "[", ":", "2", "]", ",", "S_prior_factor", ",", "df_prior", ",", "rate_prior", ")", "\n", "test_joint", "=", "jdist", "(", "data", "[", "2", ":", "]", ",", "S_prior_factor", ",", "df_prior", ",", "rate_prior", ")", "\n", "\n", "mu_init", "=", "np", ".", "zeros", "(", "dim", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "S_init", "=", "S_init_factor", "*", "np", ".", "eye", "(", "dim", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "loc", "=", "torch", ".", "from_numpy", "(", "mu_init", ")", "\n", "df", "=", "torch", ".", "tensor", "(", "[", "df_init", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "rate", "=", "torch", ".", "tensor", "(", "[", "rate_init", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "loc", ".", "requires_grad", "=", "True", "\n", "df", ".", "requires_grad", "=", "True", "\n", "rate", ".", "requires_grad", "=", "True", "\n", "\n", "D", "=", "torch", ".", "from_numpy", "(", "np", ".", "diag", "(", "S_init", ")", ")", "\n", "D", ".", "requires_grad", "=", "not", "only_df", "\n", "vars_", "=", "{", "'D'", ":", "D", ",", "'loc'", ":", "loc", ",", "'df'", ":", "df", ",", "'rate'", ":", "rate", "}", "\n", "\n", "return", "vars_", ",", "joint", ",", "test_joint", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.linear_regression.lir_experiment": [[81, 104], ["linear_regression.init", "methods.items", "copy.deepcopy", "open", "pickle.dump", "list", "list", "vinf.bbvi.bbvirp", "vinf.vind.vind", "ValueError"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.None.mse_grad_gamma.init", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvirp", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.vind"], ["", "@", "ex", ".", "automain", "\n", "def", "lir_experiment", "(", "methods", ",", "method_conf", ",", "_run", ",", "_log", ")", ":", "\n", "    ", "import", "pickle", "\n", "vars_", ",", "joint", ",", "test_joint", "=", "init", "(", ")", "\n", "result", "=", "{", "name", ":", "{", "'elbo'", ":", "list", "(", ")", ",", "'testloss'", ":", "list", "(", ")", "}", "for", "name", "in", "methods", "}", "\n", "for", "name", ",", "conf", "in", "methods", ".", "items", "(", ")", ":", "\n", "        ", "varsr", "=", "deepcopy", "(", "vars_", ")", "\n", "prop", "=", "InGammaMVN", "\n", "R", "=", "LinRegIndReparam", "\n", "if", "conf", "[", "'method'", "]", "==", "'bbvirp'", ":", "\n", "            ", "hist", ",", "elbo", ",", "grad_var", ",", "testloss", "=", "bbvirp", "(", "varsr", ",", "R", ".", "sample_reparam", ",", "R", ".", "normalize_sample", ",", "joint", ",", "\n", "prop", ",", "conf", "[", "'step_size'", "]", ",", "test_joint", "=", "test_joint", ",", "**", "method_conf", ")", "\n", "", "elif", "conf", "[", "'method'", "]", "==", "'vind'", ":", "\n", "            ", "hist", ",", "elbo", ",", "grad_var", ",", "es", ",", "testloss", "=", "vind", "(", "varsr", ",", "R", ".", "sample_reparam", ",", "R", ".", "normalize_sample", ",", "joint", ",", "prop", ",", "\n", "conf", "[", "'eps'", "]", ",", "conf", "[", "'step_size'", "]", ",", "test_joint", "=", "test_joint", ",", "\n", "vind_on_ent", "=", "conf", "[", "'vind_on_ent'", "]", ",", "\n", "**", "method_conf", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "conf", "[", "'method'", "]", "+", "' is not a valid method'", ")", "\n", "", "result", "[", "name", "]", "[", "'elbo'", "]", "=", "elbo", "\n", "result", "[", "name", "]", "[", "'testloss'", "]", "=", "testloss", "\n", "", "with", "open", "(", "'linear_regression.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "result", ",", "f", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.wishart_student_normal.configuration": [[18, 58], ["None"], "function", ["None"], ["@", "ex", ".", "config", "\n", "def", "configuration", "(", ")", ":", "\n", "    ", "d", "=", "29", "\n", "W_df_prior", "=", "100", "\n", "W_init_factor", "=", "1", "\n", "W_df_init", "=", "100", "\n", "G_df_prior", "=", "5", "\n", "G_rate_prior", "=", "1", "# mode at 4", "\n", "G_df_init", "=", "10", "\n", "G_rate_init", "=", "10", "\n", "alpha_prior", "=", "0.3", "\n", "alpha_init", "=", "0.3", "\n", "prior_correlation", "=", "True", "\n", "\n", "methods", "=", "{", "\n", "'BBVI-RP'", ":", "{", "'method'", ":", "'bbvirp'", ",", "'step_size'", ":", "0.01", "}", ",", "\n", "'VIND-1-'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "0.01", ",", "'eps'", ":", "{", "'W_df'", ":", "2", "*", "d", ",", "'G_df'", ":", "1", "}", ",", "'vind_on_ent'", ":", "False", "}", ",", "\n", "'VIND-2-1'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "0.01", ",", "'eps'", ":", "{", "'W_df'", ":", "4", "*", "d", ",", "'G_df'", ":", "1", "}", ",", "'vind_on_ent'", ":", "False", "}", ",", "\n", "'VIND-2-2'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "0.01", ",", "'eps'", ":", "{", "'W_df'", ":", "4", "*", "d", ",", "'G_df'", ":", "2", "}", ",", "'vind_on_ent'", ":", "False", "}", ",", "\n", "'VIND-1-2'", ":", "{", "'method'", ":", "'vind'", ",", "'step_size'", ":", "0.01", ",", "'eps'", ":", "{", "'W_df'", ":", "2", "*", "d", ",", "'G_df'", ":", "2", "}", ",", "'vind_on_ent'", ":", "False", "}", ",", "\n", "'BBVI-RP-wodf'", ":", "{", "'method'", ":", "'bbvirp-wodf'", ",", "'step_size'", ":", "0.01", "}", "\n", "}", "\n", "\n", "method_conf", "=", "{", "\n", "'n_iter'", ":", "5000", ",", "\n", "'n_samples'", ":", "1", ",", "\n", "'track_elbo'", ":", "True", ",", "\n", "'n_samples_elbo'", ":", "100", ",", "\n", "'opt'", ":", "'Adam'", ",", "\n", "'vstep_sizes'", ":", "{", "\n", "'W_df'", ":", "0.1", ",", "\n", "'W'", ":", "0.00001", ",", "\n", "'G_df'", ":", "0.1", ",", "\n", "'rate'", ":", "0.1", ",", "\n", "'loc'", ":", "0.1", ",", "\n", "'alpha'", ":", "0.1", "\n", "}", ",", "\n", "'track_grad_var'", ":", "False", ",", "\n", "'track_grad_var_freq'", ":", "100", ",", "\n", "'grad_var_samples'", ":", "1000", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.wishart_student_normal.init": [[61, 104], ["vinf.datasets.DowJones", "numpy.cov", "numpy.linalg.pinv", "vinf.joints.WishartGammaNormalStudent", "vinf.joints.WishartGammaNormalStudent", "torch.from_numpy", "torch.tensor", "torch.tensor", "torch.tensor", "torch.zeros", "torch.tensor", "numpy.eye", "scipy.linalg.sqrtm", "torch.from_numpy.astype", "data.numpy"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.DowJones"], ["", "@", "ex", ".", "capture", "\n", "def", "init", "(", "W_df_init", ",", "W_df_prior", ",", "W_init_factor", ",", "prior_correlation", ",", "alpha_init", ",", "alpha_prior", ",", "\n", "G_df_init", ",", "G_rate_init", ",", "G_df_prior", ",", "G_rate_prior", ",", "d", ",", "_config", ")", ":", "\n", "    ", "factor", "=", "1e3", "\n", "data", ",", "test_data", "=", "DowJones", "(", "sub_mean", "=", "False", ",", "dim", "=", "d", ",", "factor", "=", "factor", ")", "\n", "# 0.0008 is variance of stocks before train and test data estimated", "\n", "# we scale by factor ** 2 due to var(cx) = c^2 var(x)", "\n", "prior_variance", "=", "0.0008", "*", "factor", "**", "2", "\n", "\n", "Cemp", "=", "np", ".", "cov", "(", "data", ".", "numpy", "(", ")", ".", "T", ")", "\n", "Pemp", "=", "np", ".", "linalg", ".", "pinv", "(", "Cemp", ")", "# use Pemp instead of W_p_unnorm", "\n", "\n", "# new", "\n", "W_p_unnorm", "=", "1", "/", "prior_variance", "*", "np", ".", "eye", "(", "d", ")", "\n", "W_prior", "=", "W_p_unnorm", "/", "W_df_prior", "\n", "joint", "=", "WishartGammaNormalStudent", "(", "data", ",", "0", ",", "alpha_prior", ",", "W_df_prior", ",", "W_prior", ",", "G_df_prior", ",", "G_rate_prior", ")", "\n", "test_joint", "=", "WishartGammaNormalStudent", "(", "test_data", ",", "0", ",", "alpha_prior", ",", "W_df_prior", ",", "W_prior", ",", "G_df_prior", ",", "G_rate_prior", ")", "\n", "W_init", "=", "W_init_factor", "*", "sp", ".", "linalg", ".", "sqrtm", "(", "Pemp", "/", "W_df_init", ")", "\n", "W_init", "=", "torch", ".", "from_numpy", "(", "W_init", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "\n", "W_init", ".", "requires_grad", "=", "True", "\n", "# rate init", "\n", "G_rate_init", "=", "torch", ".", "tensor", "(", "[", "G_rate_init", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "G_rate_init", ".", "requires_grad", "=", "True", "\n", "# w and g df inits", "\n", "W_df_init", "=", "torch", ".", "tensor", "(", "[", "W_df_init", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "G_df_init", "=", "torch", ".", "tensor", "(", "[", "G_df_init", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "W_df_init", ".", "requires_grad", "=", "True", "\n", "G_df_init", ".", "requires_grad", "=", "True", "\n", "# loc and alpha", "\n", "loc_init", "=", "torch", ".", "zeros", "(", "d", ",", "dtype", "=", "torch", ".", "double", ")", "\n", "alpha_init", "=", "torch", ".", "tensor", "(", "[", "alpha_init", "]", ",", "dtype", "=", "torch", ".", "double", ")", "\n", "loc_init", ".", "requires_grad", "=", "True", "\n", "alpha_init", ".", "requires_grad", "=", "True", "\n", "vars_", "=", "{", "\n", "'W_df'", ":", "W_df_init", ",", "\n", "'W'", ":", "W_init", ",", "\n", "'G_df'", ":", "G_df_init", ",", "\n", "'rate'", ":", "G_rate_init", ",", "\n", "'loc'", ":", "loc_init", ",", "\n", "'alpha'", ":", "alpha_init", "\n", "}", "\n", "return", "vars_", ",", "joint", ",", "test_joint", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.wishart_student_normal.wn_experiment": [[106, 137], ["wishart_student_normal.init", "methods.items", "dict", "copy.deepcopy", "_log.info", "_log.info", "open", "pickle.dump", "vinf.bbvi.bbvirp", "str", "vinf.bbvi.bbvirp", "zip", "vinf.vind.double_vind", "ValueError"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.None.mse_grad_gamma.init", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvirp", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvirp", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.double_vind"], ["", "@", "ex", ".", "automain", "\n", "def", "wn_experiment", "(", "methods", ",", "method_conf", ",", "_run", ",", "_log", ")", ":", "\n", "    ", "import", "pickle", "\n", "vars_", ",", "joint", ",", "test_joint", "=", "init", "(", ")", "\n", "result", "=", "{", "name", ":", "dict", "(", ")", "for", "name", "in", "methods", "}", "\n", "for", "name", ",", "conf", "in", "methods", ".", "items", "(", ")", ":", "\n", "        ", "varsr", "=", "deepcopy", "(", "vars_", ")", "\n", "_log", ".", "info", "(", "'Now Running '", "+", "name", ")", "\n", "_log", ".", "info", "(", "'With configuration: '", "+", "str", "(", "conf", ")", ")", "\n", "if", "conf", "[", "'method'", "]", "==", "'bbvirp'", ":", "\n", "            ", "hist", ",", "elbo", ",", "_", ",", "testloss", "=", "bbvirp", "(", "varsr", ",", "WSR", ".", "sample_reparam", ",", "WSR", ".", "normalize_sample", ",", "joint", ",", "\n", "WishartGammaNormal", ",", "conf", "[", "'step_size'", "]", ",", "**", "method_conf", ",", "\n", "test_joint", "=", "test_joint", ")", "\n", "", "elif", "conf", "[", "'method'", "]", "==", "'bbvirp-wodf'", ":", "\n", "            ", "varsr", "[", "'W_df'", "]", ".", "requires_grad", "=", "False", "\n", "hist", ",", "elbo", ",", "_", ",", "testloss", "=", "bbvirp", "(", "varsr", ",", "WSR", ".", "sample_reparam", ",", "WSR", ".", "normalize_sample", ",", "joint", ",", "\n", "WishartGammaNormal", ",", "conf", "[", "'step_size'", "]", ",", "**", "method_conf", ",", "\n", "test_joint", "=", "test_joint", ")", "\n", "", "elif", "conf", "[", "'method'", "]", "==", "'vind'", ":", "\n", "            ", "hist", ",", "elbo", ",", "fgrad", ",", "testloss", "=", "double_vind", "(", "varsr", ",", "WSR", ".", "sample_reparam", ",", "WSR", ".", "normalize_sample", ",", "joint", ",", "\n", "WishartGammaNormal", ",", "conf", "[", "'eps'", "]", ",", "conf", "[", "'step_size'", "]", ",", "**", "method_conf", ",", "\n", "test_joint", "=", "test_joint", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "conf", "[", "'method'", "]", "+", "' is not a valid method'", ")", "\n", "", "hist", "[", "'EGamma'", "]", "=", "[", "df", "/", "rate", "for", "df", ",", "rate", "in", "zip", "(", "hist", "[", "'G_df'", "]", ",", "hist", "[", "'rate'", "]", ")", "]", "\n", "result", "[", "name", "]", "[", "'elbo'", "]", "=", "elbo", "\n", "result", "[", "name", "]", "[", "'hist'", "]", "=", "hist", "\n", "result", "[", "name", "]", "[", "'testloss'", "]", "=", "testloss", "\n", "", "fname", "=", "'wishart_student_normal'", "\n", "with", "open", "(", "fname", "+", "'.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "result", ",", "f", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.create_plots.mse_grad_gamma_plot": [[19, 68], ["matplotlib.legend", "matplotlib.yscale", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "matplotlib.legend", "matplotlib.yscale", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "matplotlib.legend", "matplotlib.yscale", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "open", "pickle.load", "pandas.Series", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "pd.Series.rolling().mean", "map.get", "map.get", "numpy.array", "numpy.array", "map.get", "pd.Series.rolling"], "function", ["None"], ["def", "mse_grad_gamma_plot", "(", ")", ":", "\n", "    ", "with", "open", "(", "'mse_grad_gamma.pkl'", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "results", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "map", "=", "{", "'VIND-1'", ":", "'VIND $\\epsilon=1$'", ",", "'VIND-5'", ":", "'VIND $\\epsilon=5$'", ",", "\n", "'VIND-10'", ":", "'VIND $\\epsilon=10$'", ",", "'VIND-100'", ":", "'VIND $\\epsilon=100$'", "}", "\n", "its", "=", "results", "[", "'iterations'", "]", "\n", "biases", "=", "results", "[", "'biases'", "]", "\n", "variances", "=", "results", "[", "'variances'", "]", "\n", "metrics", "=", "results", "[", "'metrics'", "]", "\n", "for", "k", "in", "biases", ":", "\n", "        ", "bias", "=", "pd", ".", "Series", "(", "biases", "[", "k", "]", ")", "\n", "plt", ".", "plot", "(", "its", ",", "bias", ".", "rolling", "(", "20", ")", ".", "mean", "(", ")", ",", "label", "=", "map", ".", "get", "(", "k", ",", "k", ")", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "yscale", "(", "'log'", ")", "\n", "plt", ".", "ylabel", "(", "'bias squared'", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/bias_grad_gamma.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "for", "k", "in", "biases", ":", "\n", "        ", "plt", ".", "plot", "(", "its", ",", "variances", "[", "k", "]", ",", "label", "=", "map", ".", "get", "(", "k", ",", "k", ")", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "yscale", "(", "'log'", ")", "\n", "plt", ".", "ylabel", "(", "'variance'", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/var_grad_gamma.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "for", "k", "in", "biases", ":", "\n", "        ", "plt", ".", "plot", "(", "its", ",", "np", ".", "array", "(", "biases", "[", "k", "]", ")", "+", "np", ".", "array", "(", "variances", "[", "k", "]", ")", ",", "label", "=", "map", ".", "get", "(", "k", ",", "k", ")", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "yscale", "(", "'log'", ")", "\n", "plt", ".", "ylabel", "(", "'MSE'", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/mse_grad_gamma.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "plt", ".", "plot", "(", "its", ",", "metrics", "[", "'KL'", "]", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "ylabel", "(", "'KL-Divergence'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/mse_grad_gamma_kl.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "plt", ".", "plot", "(", "its", ",", "metrics", "[", "'df'", "]", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "ylabel", "(", "'df'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/mse_grad_gamma_df.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.create_plots.linear_regression_plot": [[70, 100], ["print", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.yscale", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.yscale", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "open", "pickle.load", "pickle.load.keys", "matplotlib.plot", "matplotlib.plot", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "linear_regression_plot", "(", ")", ":", "\n", "    ", "taken", "=", "[", "'BBVI-RP'", ",", "'VIND-0_1'", ",", "'VIND-0_5-Ent'", ",", "'VIND-1'", ",", "'VIND-2-Ent'", "]", "\n", "map", "=", "{", "'BBVI-RP'", ":", "'BBVI-RP'", ",", "'VIND-0_1'", ":", "'VIND $\\epsilon=0.1$'", ",", "\n", "'VIND-0_5-Ent'", ":", "'VIND $\\epsilon=0.5$'", ",", "'VIND-1'", ":", "'VIND $\\epsilon=1$'", ",", "\n", "'VIND-2-Ent'", ":", "'VIND $\\epsilon=2$'", "}", "\n", "with", "open", "(", "'linear_regression.pkl'", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "res", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "print", "(", "res", ".", "keys", "(", ")", ")", "\n", "for", "k", "in", "res", ":", "\n", "        ", "if", "k", "not", "in", "taken", ":", "\n", "            ", "continue", "\n", "", "plt", ".", "plot", "(", "-", "np", ".", "array", "(", "res", "[", "k", "]", "[", "'elbo'", "]", ")", ",", "label", "=", "map", "[", "k", "]", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "ylabel", "(", "'negative ELBO'", ")", "\n", "plt", ".", "yscale", "(", "'log'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/linear_regression_elbo.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "for", "k", "in", "res", ":", "\n", "        ", "if", "k", "not", "in", "taken", ":", "\n", "            ", "continue", "\n", "", "plt", ".", "plot", "(", "-", "np", ".", "array", "(", "res", "[", "k", "]", "[", "'testloss'", "]", ")", ",", "label", "=", "map", "[", "k", "]", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "ylabel", "(", "'negative test log loss'", ")", "\n", "plt", ".", "yscale", "(", "'log'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/linear_regression_testloss.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.create_plots.wishart_student_normal_plot": [[102, 126], ["print", "matplotlib.subplots", "ax.legend", "ax.set_xlabel", "ax.set_ylabel", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "open", "pickle.load", "pickle.load.keys", "ax.plot", "matplotlib.plot", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "wishart_student_normal_plot", "(", ")", ":", "\n", "    ", "n_samples_log_loss", "=", "100", "\n", "map", "=", "{", "'BBVI-RP'", ":", "'BBVI-RP'", ",", "'BBVI-RP-wodf'", ":", "'BBVI-RP without $p$'", ",", "\n", "'VIND-1-'", ":", "r'VIND $\\epsilon_p=2d$ $\\epsilon_\\alpha = 1$'", "}", "\n", "with", "open", "(", "'wishart_student_normal.pkl'", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "res", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "print", "(", "res", ".", "keys", "(", ")", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "for", "k", "in", "[", "'BBVI-RP'", ",", "'BBVI-RP-wodf'", ",", "'VIND-1-'", "]", ":", "\n", "        ", "ax", ".", "plot", "(", "-", "np", ".", "array", "(", "res", "[", "k", "]", "[", "'elbo'", "]", ")", ",", "label", "=", "map", "[", "k", "]", ")", "\n", "", "ax", ".", "legend", "(", ")", "\n", "ax", ".", "set_xlabel", "(", "'iteration'", ")", "\n", "ax", ".", "set_ylabel", "(", "'negative ELBO'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/wishart_student_normal_elbo.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "for", "k", "in", "[", "'BBVI-RP'", ",", "'BBVI-RP-wodf'", ",", "'VIND-1-'", "]", ":", "\n", "        ", "plt", ".", "plot", "(", "-", "np", ".", "array", "(", "res", "[", "k", "]", "[", "'testloss'", "]", ")", "/", "n_samples_log_loss", ",", "label", "=", "map", "[", "k", "]", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "ylabel", "(", "'negative test log loss'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/wishart_student_normal_test.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.create_plots.wishart_normal_normal_plot": [[128, 152], ["print", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "open", "pickle.load", "pickle.load.keys", "matplotlib.plot", "matplotlib.plot", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "wishart_normal_normal_plot", "(", ")", ":", "\n", "    ", "n_samples_log_loss", "=", "100", "\n", "map", "=", "{", "'BBVI-RP'", ":", "'BBVI-RP'", ",", "'BBVI-RP-wodf'", ":", "'BBVI-RP without $p$'", ",", "\n", "'VIND-1'", ":", "r'VIND $\\epsilon_p=2d$'", ",", "\n", "'VIND-2'", ":", "r'VIND $\\epsilon_p=4d$'", "}", "\n", "with", "open", "(", "'wishart_normal_normal.pkl'", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "res", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "print", "(", "res", ".", "keys", "(", ")", ")", "\n", "for", "k", "in", "[", "'BBVI-RP'", ",", "'BBVI-RP-wodf'", ",", "'VIND-1'", ",", "'VIND-2'", "]", ":", "\n", "        ", "plt", ".", "plot", "(", "-", "np", ".", "array", "(", "res", "[", "k", "]", "[", "'elbo'", "]", ")", ",", "label", "=", "map", "[", "k", "]", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "ylabel", "(", "'negative ELBO'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/wishart_normal_normal_elbo.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "for", "k", "in", "[", "'BBVI-RP'", ",", "'BBVI-RP-wodf'", ",", "'VIND-1'", ",", "'VIND-2'", "]", ":", "\n", "        ", "plt", ".", "plot", "(", "-", "np", ".", "array", "(", "res", "[", "k", "]", "[", "'testloss'", "]", ")", "/", "n_samples_log_loss", ",", "label", "=", "map", "[", "k", "]", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'iteration'", ")", "\n", "plt", ".", "ylabel", "(", "'negative test log loss'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/wishart_normal_normal_test.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.create_plots.stock_model_univariate_analysis": [[154, 175], ["vinf.utils.load_stock_growth", "vinf.utils.downsample", "vinf.utils.downsample.mean", "numpy.linspace", "scipy.stats.norm.fit", "matplotlib.plot", "scipy.stats.laplace.fit", "scipy.stats.laplace.fit", "matplotlib.plot", "scipy.stats.t.fit", "scipy.stats.t.fit", "matplotlib.plot", "matplotlib.hist", "matplotlib.legend", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.xlim", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.show", "scipy.stats.norm.pdf", "scipy.stats.laplace.pdf", "scipy.stats.t.pdf"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.load_stock_growth", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.downsample"], ["", "def", "stock_model_univariate_analysis", "(", ")", ":", "\n", "    ", "frame_log_grow", "=", "load_stock_growth", "(", "log", "=", "True", ",", "drop_na", "=", "True", ")", "\n", "frame_log_grow", "=", "downsample", "(", "frame_log_grow", ",", "5", ")", "\n", "frame_log_grow", "-=", "frame_log_grow", ".", "mean", "(", ")", "\n", "stock_name", "=", "'CVX'", "\n", "s", ",", "e", "=", "-", "0.1", ",", "0.1", "\n", "x_vals", "=", "np", ".", "linspace", "(", "s", ",", "e", ",", "1000", ")", "\n", "mu", ",", "sigma", "=", "sp", ".", "stats", ".", "norm", ".", "fit", "(", "frame_log_grow", "[", "stock_name", "]", ".", "values", ")", "\n", "plt", ".", "plot", "(", "x_vals", ",", "sp", ".", "stats", ".", "norm", ".", "pdf", "(", "x_vals", ",", "loc", "=", "mu", ",", "scale", "=", "sigma", ")", ",", "label", "=", "'Normal'", ",", "alpha", "=", ".9", ",", "lw", "=", "2", ")", "\n", "mu", ",", "sigma", "=", "scipy", ".", "stats", ".", "laplace", ".", "fit", "(", "frame_log_grow", "[", "stock_name", "]", ")", "\n", "plt", ".", "plot", "(", "x_vals", ",", "sp", ".", "stats", ".", "laplace", ".", "pdf", "(", "x_vals", ",", "loc", "=", "mu", ",", "scale", "=", "sigma", ")", ",", "label", "=", "'Laplace'", ",", "alpha", "=", ".9", ",", "lw", "=", "2", ")", "\n", "d", ",", "mu", ",", "sigma", "=", "scipy", ".", "stats", ".", "t", ".", "fit", "(", "frame_log_grow", "[", "stock_name", "]", ")", "\n", "plt", ".", "plot", "(", "x_vals", ",", "sp", ".", "stats", ".", "t", ".", "pdf", "(", "x_vals", ",", "d", ",", "loc", "=", "mu", ",", "scale", "=", "sigma", ")", ",", "label", "=", "'t-Student'", ",", "alpha", "=", ".9", ",", "lw", "=", "2", ")", "\n", "plt", ".", "hist", "(", "frame_log_grow", "[", "stock_name", "]", ",", "bins", "=", "50", ",", "density", "=", "True", ",", "alpha", "=", "0.5", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "ylabel", "(", "'hist. frequency'", ")", "\n", "plt", ".", "xlabel", "(", "'log return'", ")", "\n", "plt", ".", "xlim", "(", "[", "s", ",", "e", "]", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'plots/ml_cvx_stock.pdf'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.mse_grad_gamma.configuration": [[20, 33], ["None"], "function", ["None"], ["@", "ex", ".", "config", "\n", "def", "configuration", "(", ")", ":", "\n", "    ", "mu", "=", "5", "\n", "tau", "=", "10", "\n", "data_size", "=", "500", "\n", "df_prior", "=", "30", "\n", "rate_prior", "=", "10", "\n", "df_init", "=", "500", "# or 'post'", "\n", "rate_init", "=", "'post'", "# or 'post'", "\n", "n_iter", "=", "400", "\n", "n_samples_mse", "=", "5000", "\n", "vind_epss", "=", "[", "1", ",", "5", ",", "10", ",", "100", "]", "\n", "step_size", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.mse_grad_gamma.init": [[35, 52], ["vinf.datasets.GammaNormal", "vinf.datasets.GammaNormal.generate", "_config.update", "torch.tensor", "torch.tensor", "vinf.joints.GammaNormal", "torch.tensor", "torch.tensor", "numpy.sum", "ds.generate.numpy"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.GammaNormal.generate"], ["", "@", "ex", ".", "capture", "\n", "def", "init", "(", "mu", ",", "tau", ",", "data_size", ",", "df_prior", ",", "rate_prior", ",", "df_init", ",", "rate_init", ",", "_seed", ",", "_config", ")", ":", "\n", "    ", "ds", "=", "GN_ds", "(", "mu", ",", "tau", ")", "\n", "d", "=", "ds", ".", "generate", "(", "data_size", ",", "seed", "=", "_seed", ")", "\n", "rate_post", "=", "rate_prior", "+", "np", ".", "sum", "(", "(", "d", ".", "numpy", "(", ")", "-", "mu", ")", "**", "2", ")", "/", "2", "\n", "df_post", "=", "data_size", "/", "2", "+", "df_prior", "\n", "_config", ".", "update", "(", "{", "'rate_post'", ":", "rate_post", ",", "\n", "'df_post'", ":", "df_post", "}", ")", "\n", "rate_init", "=", "rate_post", "if", "rate_init", "==", "'post'", "else", "rate_init", "\n", "df_init", "=", "df_post", "if", "df_init", "==", "'post'", "else", "df_init", "\n", "vars_", "=", "{", "'df'", ":", "torch", ".", "tensor", "(", "[", "df_init", "]", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "'rate'", ":", "torch", ".", "tensor", "(", "[", "rate_init", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "}", "\n", "vars_", "[", "'df'", "]", ".", "requires_grad", "=", "True", "\n", "df_post", "=", "torch", ".", "tensor", "(", "[", "df_post", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "rate_post", "=", "torch", ".", "tensor", "(", "[", "rate_post", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "joint", "=", "GammaNormal", "(", "d", ",", "mu", ",", "df_prior", ",", "rate_prior", ")", "\n", "return", "vars_", ",", "joint", ",", "df_post", ",", "rate_post", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.None.mse_grad_gamma.gn_experiment": [[54, 91], ["mse_grad_gamma.init", "torch.optim.Adam", "vinf.exact_losses.GammaLoss", "copy.deepcopy", "list", "tqdm.trange", "list", "list", "list", "list", "list", "list", "list", "range", "torch.optim.Adam.zero_grad", "vinf.exact_losses.GammaLoss.", "elbo_loss.backward", "vars_[].grad.item", "copy.deepcopy", "vinf.bbvi.bbvi_grad_var", "biases[].append", "variances[].append", "copy.deepcopy", "vinf.bbvi.bbvi_grep_var", "biases[].append", "variances[].append", "metrics[].append", "metrics[].append", "metrics[].append", "metrics[].append", "torch.optim.Adam.step", "open", "pickle.dump", "copy.deepcopy", "vinf.vind.vind_grad_var", "biases[].append", "variances[].append", "elbo_loss.item", "vinf.exact_losses.GammaLoss.true_dist.mean.item", "vars_[].item", "vars_[].item", "vars_[].item"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.None.mse_grad_gamma.init", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvi_grad_var", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvi_grep_var", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.vind_grad_var"], ["", "@", "ex", ".", "automain", "\n", "def", "gn_experiment", "(", "step_size", ",", "n_iter", ",", "n_samples_mse", ",", "vind_epss", ",", "_run", ")", ":", "\n", "    ", "vars_", ",", "joint", ",", "df_post", ",", "rate_post", "=", "init", "(", ")", "\n", "opt", "=", "Adam", "(", "[", "vars_", "[", "'df'", "]", "]", ",", "lr", "=", "step_size", ")", "\n", "elbo_loss", "=", "GammaLoss", "(", "df_post", ",", "rate_post", ")", "\n", "biases1", "=", "{", "'BBVI'", ":", "list", "(", ")", ",", "'GREP'", ":", "list", "(", ")", "}", "\n", "biases2", "=", "{", "'VIND-{eps}'", ".", "format", "(", "eps", "=", "eps", ")", ":", "list", "(", ")", "for", "eps", "in", "vind_epss", "}", "\n", "biases", "=", "{", "**", "biases1", ",", "**", "biases2", "}", "\n", "variances", "=", "deepcopy", "(", "biases", ")", "\n", "metrics", "=", "{", "'KL'", ":", "list", "(", ")", ",", "'EPost'", ":", "list", "(", ")", ",", "'EApprox'", ":", "list", "(", ")", ",", "'df'", ":", "list", "(", ")", "}", "\n", "iterations", "=", "list", "(", "range", "(", "1", ",", "n_iter", "+", "1", ")", ")", "\n", "for", "_", "in", "trange", "(", "n_iter", ")", ":", "\n", "        ", "opt", ".", "zero_grad", "(", ")", "\n", "loss", "=", "elbo_loss", "(", "vars_", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "true_grad", "=", "vars_", "[", "'df'", "]", ".", "grad", ".", "item", "(", ")", "\n", "varsr", "=", "deepcopy", "(", "vars_", ")", "\n", "bias_squared", ",", "variance", "=", "bbvi_grad_var", "(", "varsr", ",", "joint", ",", "Gamma", ",", "n_samples_mse", ",", "true_grad", ")", "\n", "biases", "[", "'BBVI'", "]", ".", "append", "(", "bias_squared", ")", "\n", "variances", "[", "'BBVI'", "]", ".", "append", "(", "variance", ")", "\n", "varsr", "=", "deepcopy", "(", "vars_", ")", "\n", "bias_squared", ",", "variance", "=", "bbvi_grep_var", "(", "varsr", ",", "joint", ",", "Gamma", ",", "n_samples_mse", ",", "true_grad", ")", "\n", "biases", "[", "'GREP'", "]", ".", "append", "(", "bias_squared", ")", "\n", "variances", "[", "'GREP'", "]", ".", "append", "(", "variance", ")", "\n", "for", "eps", "in", "vind_epss", ":", "\n", "            ", "varsr", "=", "deepcopy", "(", "vars_", ")", "\n", "bias_squared", ",", "variance", "=", "vind_grad_var", "(", "varsr", ",", "joint", ",", "Gamma", ",", "eps", ",", "n_samples_mse", ",", "true_grad", ")", "\n", "biases", "[", "'VIND-{eps}'", ".", "format", "(", "eps", "=", "eps", ")", "]", ".", "append", "(", "bias_squared", ")", "\n", "variances", "[", "'VIND-{eps}'", ".", "format", "(", "eps", "=", "eps", ")", "]", ".", "append", "(", "variance", ")", "\n", "", "metrics", "[", "'KL'", "]", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "metrics", "[", "'EPost'", "]", ".", "append", "(", "elbo_loss", ".", "true_dist", ".", "mean", ".", "item", "(", ")", ")", "\n", "metrics", "[", "'EApprox'", "]", ".", "append", "(", "vars_", "[", "'df'", "]", ".", "item", "(", ")", "/", "vars_", "[", "'rate'", "]", ".", "item", "(", ")", ")", "\n", "metrics", "[", "'df'", "]", ".", "append", "(", "vars_", "[", "'df'", "]", ".", "item", "(", ")", ")", "\n", "opt", ".", "step", "(", ")", "\n", "", "result", "=", "{", "'biases'", ":", "biases", ",", "'variances'", ":", "variances", ",", "'metrics'", ":", "metrics", ",", "'iterations'", ":", "iterations", "}", "\n", "with", "open", "(", "'mse_grad_gamma.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "result", ",", "f", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.vind": [[13, 121], ["list", "vinf.utils.get_optimizer", "vinf.utils.get_optimizer.", "list", "list", "tqdm.trange", "dict", "list", "O.zero_grad", "proposal", "proposal.sample_pos_neg", "torch.zeros", "range", "torch.isinf", "range", "loss.backward", "vinf.utils.symmetrize", "O.step", "list.append", "numpy.array", "print", "list.append", "proposal", "proposal", "proposal.entropy", "vars[].detach", "proposal.sample", "torch.zeros", "range", "list.append", "torch.zeros", "vars[].data.numpy().copy", "vars[].data.abs_", "copy.copy", "vstep_sizes.get", "vind.vind_grad_var", "range", "list.append", "vars[].item", "joint.log_prob", "joint.log_prob", "joint.log_prob", "vars[].data.numpy().copy", "numpy.linalg.cholesky", "hist[].append", "joint.log_prob", "proposal.log_prob", "test_joint.llh().item", "joint.log_prob", "proposal.log_prob", "joint.log_prob", "proposal.log_prob", "sample_reparam", "vars[].data.numpy", "vars[].data.add_().sub_", "vars[].item", "hist[].append", "vars[].detach", "vars[].item", "normalize_sample", "vars[].data.numpy", "torch.from_numpy", "vars[].data.numpy().flatten", "test_joint.llh", "vars[].data.add_", "torch.from_numpy", "vars[].data.numpy"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.get_optimizer", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample_pos_neg", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.symmetrize", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.vind_grad_var", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.LinRegIndReparam.sample_reparam", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.LinRegIndReparam.normalize_sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.LinearRegression.llh"], ["def", "vind", "(", "vars", ",", "sample_reparam", ",", "normalize_sample", ",", "joint", ",", "proposal", ",", "eps", "=", "1.", ",", "step_size", "=", "0.1", ",", "\n", "n_iter", "=", "10000", ",", "n_samples", "=", "1", ",", "track_grad_var", "=", "False", ",", "track_grad_var_freq", "=", "100", ",", "\n", "grad_var_samples", "=", "1000", ",", "track_elbo", "=", "False", ",", "n_samples_elbo", "=", "50", ",", "opt", "=", "'Adam'", ",", "\n", "vind_on_ent", "=", "False", ",", "vstep_sizes", "=", "None", ",", "test_joint", "=", "None", ")", ":", "\n", "    ", "vstep_sizes", "=", "dict", "(", ")", "if", "vstep_sizes", "is", "None", "else", "vstep_sizes", "\n", "epss", "=", "list", "(", ")", "\n", "original_eps", "=", "eps", "\n", "O", "=", "get_optimizer", "(", "opt", ")", "\n", "opt", "=", "O", "(", "[", "{", "'params'", ":", "vars", "[", "k", "]", ",", "'lr'", ":", "vstep_sizes", ".", "get", "(", "k", ",", "step_size", ")", "}", "\n", "for", "k", "in", "vars", "if", "vars", "[", "k", "]", ".", "requires_grad", "]", ")", "\n", "hist", "=", "{", "k", ":", "[", "]", "for", "k", "in", "vars", "if", "vars", "[", "k", "]", ".", "requires_grad", "}", "\n", "grad_vars", "=", "list", "(", ")", "\n", "elbos", "=", "list", "(", ")", "\n", "S", "=", "n_samples", "\n", "rs", "=", "0", "\n", "if", "test_joint", ":", "\n", "        ", "test_losses", "=", "list", "(", ")", "\n", "", "psd_const", "=", "'S'", "if", "'S'", "in", "vars", "else", "(", "'W'", "if", "'W'", "in", "vars", "else", "None", ")", "\n", "for", "it", "in", "trange", "(", "n_iter", ")", ":", "\n", "        ", "if", "track_grad_var", "and", "(", "it", "%", "track_grad_var_freq", ")", "==", "0", ":", "\n", "            ", "grad_vars", ".", "append", "(", "vind_grad_var", "(", "vars", ",", "joint", ",", "proposal", ",", "eps", ",", "grad_var_samples", ")", ")", "\n", "\n", "", "opt", ".", "zero_grad", "(", ")", "\n", "# gradient of entropy of proposal", "\n", "if", "vind_on_ent", ":", "\n", "            ", "dist_prop_grad", "=", "proposal", "(", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "if", "k", "==", "'df'", "else", "vars", "[", "k", "]", "for", "k", "in", "vars", "}", ")", "# reparam D Rest", "\n", "", "else", ":", "\n", "            ", "dist_prop_grad", "=", "proposal", "(", "vars", ")", "\n", "", "loss", "=", "-", "dist_prop_grad", ".", "entropy", "(", ")", "\n", "\n", "# sampling", "\n", "det_vars", "=", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "for", "k", "in", "vars", "}", "\n", "dist_prop", "=", "proposal", "(", "det_vars", ")", "\n", "\n", "if", "track_elbo", ":", "\n", "            ", "samples", "=", "dist_prop", ".", "sample", "(", "(", "n_samples_elbo", ",", ")", ")", "\n", "elbo", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "for", "i", "in", "range", "(", "n_samples_elbo", ")", ":", "\n", "                ", "elbo", "+=", "joint", ".", "log_prob", "(", "samples", "[", "i", "]", ")", "-", "dist_prop", ".", "log_prob", "(", "samples", "[", "i", "]", ")", "\n", "", "elbos", ".", "append", "(", "(", "elbo", "/", "n_samples_elbo", ")", ".", "item", "(", ")", ")", "\n", "if", "test_joint", ":", "\n", "                ", "test_loss", "=", "0", "\n", "for", "i", "in", "range", "(", "n_samples_elbo", ")", ":", "\n", "                    ", "test_loss", "+=", "test_joint", ".", "llh", "(", "samples", "[", "i", "]", ")", ".", "item", "(", ")", "\n", "", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "", "", "if", "original_eps", "!=", "eps", ":", "\n", "            ", "while", "(", "vars", "[", "'df'", "]", ".", "item", "(", ")", "-", "eps", "/", "2", ">=", "INC_EPS", ")", "and", "eps", "<", "original_eps", ":", "\n", "                ", "eps", "=", "eps", "*", "2", "\n", "", "", "while", "vars", "[", "'df'", "]", ".", "item", "(", ")", "-", "eps", "/", "2", "<=", "EPS", ":", "\n", "            ", "eps", "=", "eps", "/", "2", "\n", "", "samples_neg", ",", "samples", ",", "samples_pos", "=", "dist_prop", ".", "sample_pos_neg", "(", "(", "S", ",", ")", ",", "eps", "=", "eps", ")", "\n", "\n", "# vinf grad", "\n", "df_grad", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "for", "i", "in", "range", "(", "S", ")", ":", "\n", "            ", "if", "vind_on_ent", ":", "\n", "                ", "coeff_neg", "=", "joint", ".", "log_prob", "(", "samples_neg", "[", "i", "]", ")", "-", "dist_prop", ".", "log_prob", "(", "samples_neg", "[", "i", "]", ")", "\n", "coeff_pos", "=", "joint", ".", "log_prob", "(", "samples_pos", "[", "i", "]", ")", "-", "dist_prop", ".", "log_prob", "(", "samples_pos", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                ", "coeff_neg", "=", "joint", ".", "log_prob", "(", "samples_neg", "[", "i", "]", ")", "\n", "coeff_pos", "=", "joint", ".", "log_prob", "(", "samples_pos", "[", "i", "]", ")", "\n", "", "df_grad", "+=", "(", "coeff_pos", "-", "coeff_neg", ")", "\n", "", "df_grad", "=", "-", "df_grad", "/", "(", "eps", "*", "S", ")", "\n", "if", "torch", ".", "isinf", "(", "df_grad", ")", ":", "\n", "            ", "eps", "=", "eps", "/", "2", "\n", "df_grad", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "\n", "# reparam grad", "\n", "", "for", "i", "in", "range", "(", "S", ")", ":", "\n", "            ", "loss", "-=", "joint", ".", "log_prob", "(", "sample_reparam", "(", "normalize_sample", "(", "samples", "[", "i", "]", ",", "det_vars", ")", ",", "vars", ")", ")", "/", "S", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "if", "vind_on_ent", ":", "\n", "            ", "vars", "[", "'df'", "]", ".", "grad", "=", "df_grad", "\n", "", "else", ":", "\n", "            ", "vars", "[", "'df'", "]", ".", "grad", "+=", "df_grad", "\n", "\n", "", "if", "psd_const", "in", "vars", ":", "\n", "            ", "prev", "=", "vars", "[", "psd_const", "]", ".", "data", ".", "numpy", "(", ")", ".", "copy", "(", ")", "\n", "\n", "", "symmetrize", "(", "vars", ")", "\n", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "if", "'D'", "in", "vars", ":", "\n", "            ", "vars", "[", "'D'", "]", ".", "data", ".", "abs_", "(", ")", "\n", "\n", "", "if", "psd_const", "in", "vars", ":", "\n", "            ", "try", ":", "\n", "                ", "new", "=", "vars", "[", "psd_const", "]", ".", "data", ".", "numpy", "(", ")", ".", "copy", "(", ")", "\n", "np", ".", "linalg", ".", "cholesky", "(", "new", ")", "\n", "", "except", ":", "\n", "                ", "rs", "+=", "1", "\n", "vars", "[", "psd_const", "]", ".", "data", ".", "add_", "(", "torch", ".", "from_numpy", "(", "prev", ")", ")", ".", "sub_", "(", "torch", ".", "from_numpy", "(", "new", ")", ")", "\n", "\n", "", "", "for", "k", "in", "hist", ":", "\n", "            ", "try", ":", "\n", "                ", "hist", "[", "k", "]", ".", "append", "(", "vars", "[", "k", "]", ".", "item", "(", ")", ")", "\n", "", "except", ":", "\n", "                ", "hist", "[", "k", "]", ".", "append", "(", "vars", "[", "k", "]", ".", "data", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ")", "\n", "", "", "epss", ".", "append", "(", "copy", "(", "eps", ")", ")", "\n", "", "for", "k", "in", "hist", ":", "\n", "        ", "hist", "[", "k", "]", "=", "np", ".", "array", "(", "hist", "[", "k", "]", ")", "\n", "", "if", "rs", ":", "\n", "        ", "print", "(", "rs", ",", "'restarts'", ")", "\n", "", "if", "test_joint", ":", "\n", "        ", "return", "hist", ",", "elbos", ",", "grad_vars", ",", "epss", ",", "test_losses", "\n", "", "return", "hist", ",", "elbos", ",", "grad_vars", ",", "epss", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.vind_grad_var": [[123, 158], ["list", "torch.optim.Adam", "torch.optim.Adam.zero_grad", "proposal", "proposal.sample_pos_neg", "proposal", "loss.backward", "tqdm.trange", "numpy.array", "vars[].detach", "proposal.entropy", "joint.log_prob", "joint.log_prob", "np.array.append", "numpy.mean", "numpy.mean", "numpy.var", "vars[].item", "vars[].detach", "torch.isfinite", "print", "vind.vind_grad_var", "dE_ddf.item", "numpy.mean", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample_pos_neg", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.vind_grad_var"], ["", "def", "vind_grad_var", "(", "vars", ",", "joint", ",", "proposal", ",", "eps", ",", "n_samples", ",", "true_grad", "=", "None", ")", ":", "\n", "    ", "if", "'df'", "not", "in", "vars", ":", "\n", "        ", "return", "None", "\n", "", "grad_samples", "=", "list", "(", ")", "\n", "while", "vars", "[", "'df'", "]", ".", "item", "(", ")", "-", "eps", "/", "2", "<=", "EPS", ":", "\n", "        ", "eps", "=", "eps", "/", "2", "\n", "", "vars", "=", "{", "k", ":", "(", "vars", "[", "k", "]", "if", "k", "==", "'df'", "else", "vars", "[", "k", "]", ".", "detach", "(", ")", ")", "for", "k", "in", "vars", "}", "\n", "opt", "=", "Adam", "(", "[", "vars", "[", "'df'", "]", "]", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "# sampling", "\n", "det_vars", "=", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "for", "k", "in", "vars", "}", "\n", "dist_prop", "=", "proposal", "(", "det_vars", ")", "\n", "samples_neg", ",", "samples", ",", "samples_pos", "=", "dist_prop", ".", "sample_pos_neg", "(", "(", "n_samples", ",", ")", ",", "eps", "=", "eps", ")", "\n", "\n", "# H gradient", "\n", "dist_prop_grad", "=", "proposal", "(", "vars", ")", "\n", "loss", "=", "-", "dist_prop_grad", ".", "entropy", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "dH_ddf", "=", "vars", "[", "'df'", "]", ".", "grad", "\n", "for", "i", "in", "trange", "(", "n_samples", ")", ":", "\n", "        ", "coeff_neg", "=", "joint", ".", "log_prob", "(", "samples_neg", "[", "i", "]", ")", "\n", "coeff_pos", "=", "joint", ".", "log_prob", "(", "samples_pos", "[", "i", "]", ")", "\n", "dC_ddf", "=", "(", "coeff_neg", "-", "coeff_pos", ")", "/", "eps", "\n", "if", "not", "torch", ".", "isfinite", "(", "dC_ddf", ")", ":", "\n", "            ", "print", "(", "'non-finite gradient.'", ")", "\n", "return", "vind_grad_var", "(", "vars", ",", "joint", ",", "proposal", ",", "eps", "/", "2", ",", "n_samples", ")", "\n", "", "dE_ddf", "=", "dH_ddf", "+", "dC_ddf", "\n", "grad_samples", ".", "append", "(", "dE_ddf", ".", "item", "(", ")", ")", "\n", "", "grad_samples", "=", "np", ".", "array", "(", "grad_samples", ")", "\n", "if", "true_grad", "is", "not", "None", ":", "\n", "        ", "bias_squared", "=", "(", "np", ".", "mean", "(", "grad_samples", ")", "-", "true_grad", ")", "**", "2", "\n", "variance", "=", "np", ".", "mean", "(", "(", "grad_samples", "-", "np", ".", "mean", "(", "grad_samples", ")", ")", "**", "2", ")", "\n", "return", "bias_squared", ",", "variance", "\n", "", "return", "np", ".", "mean", "(", "grad_samples", ")", ",", "np", ".", "var", "(", "grad_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.double_vind": [[160, 244], ["vinf.utils.get_optimizer", "vinf.utils.get_optimizer.", "list", "list", "tqdm.trange", "dict", "list", "O.zero_grad", "proposal", "proposal.sample_mult_eps", "dict", "range", "loss.backward", "O.step", "numpy.array", "list.append", "proposal", "proposal", "proposal.entropy", "vars[].detach", "proposal.sample", "torch.zeros", "range", "list.append", "torch.zeros", "range", "vstep_sizes.get", "vind.double_grad_var", "range", "list.append", "joint.log_prob", "hist[].append", "joint.log_prob", "proposal.log_prob", "test_joint.llh().item", "joint.log_prob", "joint.log_prob", "sample_reparam", "vars[].item", "hist[].append", "vars[].detach", "joint.log_prob", "proposal.log_prob", "joint.log_prob", "proposal.log_prob", "normalize_sample", "vars[].data.numpy().flatten", "test_joint.llh", "vars[].data.numpy"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.get_optimizer", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGammaNormal.sample_mult_eps", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.double_grad_var", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.LinRegIndReparam.sample_reparam", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.LinRegIndReparam.normalize_sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.LinearRegression.llh"], ["", "def", "double_vind", "(", "vars", ",", "sample_reparam", ",", "normalize_sample", ",", "joint", ",", "proposal", ",", "eps", "=", "None", ",", "step_size", "=", "0.1", ",", "\n", "n_iter", "=", "10000", ",", "n_samples", "=", "1", ",", "track_elbo", "=", "False", ",", "n_samples_elbo", "=", "50", ",", "opt", "=", "'Adam'", ",", "\n", "vind_on_ent", "=", "False", ",", "vstep_sizes", "=", "None", ",", "track_grad_var", "=", "False", ",", "track_grad_var_freq", "=", "100", ",", "\n", "grad_var_samples", "=", "1000", ",", "test_joint", "=", "None", ")", ":", "\n", "    ", "vstep_sizes", "=", "dict", "(", ")", "if", "vstep_sizes", "is", "None", "else", "vstep_sizes", "\n", "O", "=", "get_optimizer", "(", "opt", ")", "\n", "opt", "=", "O", "(", "[", "{", "'params'", ":", "vars", "[", "k", "]", ",", "'lr'", ":", "vstep_sizes", ".", "get", "(", "k", ",", "step_size", ")", "}", "\n", "for", "k", "in", "vars", "if", "vars", "[", "k", "]", ".", "requires_grad", "]", ",", "lr", "=", "step_size", ")", "\n", "hist", "=", "{", "k", ":", "[", "]", "for", "k", "in", "vars", "if", "vars", "[", "k", "]", ".", "requires_grad", "}", "\n", "elbos", "=", "list", "(", ")", "\n", "if", "test_joint", ":", "\n", "        ", "test_losses", "=", "list", "(", ")", "\n", "", "S", "=", "n_samples", "\n", "df_params", "=", "[", "k", "for", "k", "in", "vars", "if", "'df'", "in", "k", "]", "\n", "grad_vars", "=", "list", "(", ")", "\n", "for", "it", "in", "trange", "(", "n_iter", ")", ":", "\n", "        ", "if", "track_grad_var", "and", "(", "it", "%", "track_grad_var_freq", ")", "==", "0", ":", "\n", "            ", "grad_vars", ".", "append", "(", "double_grad_var", "(", "vars", ",", "joint", ",", "proposal", ",", "eps", ",", "grad_var_samples", ",", "\n", "sample_reparam", ",", "normalize_sample", ")", ")", "\n", "\n", "", "opt", ".", "zero_grad", "(", ")", "\n", "# gradient of entropy of proposal", "\n", "if", "vind_on_ent", ":", "\n", "            ", "dist_prop_grad", "=", "proposal", "(", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "if", "'df'", "in", "k", "else", "vars", "[", "k", "]", "for", "k", "in", "vars", "}", ")", "\n", "# reparam D Rest", "\n", "", "else", ":", "\n", "            ", "dist_prop_grad", "=", "proposal", "(", "vars", ")", "\n", "", "loss", "=", "-", "dist_prop_grad", ".", "entropy", "(", ")", "\n", "\n", "# sampling", "\n", "det_vars", "=", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "for", "k", "in", "vars", "}", "\n", "dist_prop", "=", "proposal", "(", "det_vars", ")", "\n", "\n", "if", "track_elbo", ":", "\n", "            ", "samples", "=", "dist_prop", ".", "sample", "(", "(", "n_samples_elbo", ",", ")", ")", "\n", "elbo", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "for", "i", "in", "range", "(", "n_samples_elbo", ")", ":", "\n", "                ", "elbo", "+=", "joint", ".", "log_prob", "(", "samples", "[", "i", "]", ")", "-", "dist_prop", ".", "log_prob", "(", "samples", "[", "i", "]", ")", "\n", "", "elbos", ".", "append", "(", "(", "elbo", "/", "n_samples_elbo", ")", ".", "item", "(", ")", ")", "\n", "if", "test_joint", ":", "\n", "                ", "test_loss", "=", "0", "\n", "for", "i", "in", "range", "(", "n_samples_elbo", ")", ":", "\n", "                    ", "test_loss", "+=", "test_joint", ".", "llh", "(", "samples", "[", "i", "]", ")", ".", "item", "(", ")", "\n", "", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "\n", "", "", "samples_neg", ",", "samples", ",", "samples_pos", "=", "dist_prop", ".", "sample_mult_eps", "(", "(", "S", ",", ")", ",", "eps", "=", "eps", ")", "\n", "\n", "# vinf grad", "\n", "df_grads", "=", "dict", "(", ")", "\n", "for", "k", "in", "df_params", ":", "\n", "            ", "df_grad", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "for", "i", "in", "range", "(", "S", ")", ":", "\n", "                ", "if", "vind_on_ent", ":", "\n", "                    ", "coeff_neg", "=", "joint", ".", "log_prob", "(", "samples_neg", "[", "k", "]", "[", "i", "]", ")", "-", "dist_prop", ".", "log_prob", "(", "samples_neg", "[", "k", "]", "[", "i", "]", ")", "\n", "coeff_pos", "=", "joint", ".", "log_prob", "(", "samples_pos", "[", "k", "]", "[", "i", "]", ")", "-", "dist_prop", ".", "log_prob", "(", "samples_pos", "[", "k", "]", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                    ", "coeff_neg", "=", "joint", ".", "log_prob", "(", "samples_neg", "[", "k", "]", "[", "i", "]", ")", "\n", "coeff_pos", "=", "joint", ".", "log_prob", "(", "samples_pos", "[", "k", "]", "[", "i", "]", ")", "\n", "", "df_grad", "+=", "(", "coeff_pos", "-", "coeff_neg", ")", "\n", "", "df_grads", "[", "k", "]", "=", "-", "df_grad", "/", "(", "eps", "[", "k", "]", "*", "S", ")", "\n", "\n", "# reparam grad", "\n", "", "for", "i", "in", "range", "(", "S", ")", ":", "\n", "            ", "loss", "-=", "joint", ".", "log_prob", "(", "sample_reparam", "(", "normalize_sample", "(", "samples", "[", "i", "]", ",", "det_vars", ")", ",", "vars", ")", ")", "/", "S", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "for", "k", "in", "df_params", ":", "\n", "            ", "if", "vind_on_ent", ":", "\n", "                ", "vars", "[", "k", "]", ".", "grad", "=", "df_grads", "[", "k", "]", "\n", "", "else", ":", "\n", "                ", "vars", "[", "k", "]", ".", "grad", "+=", "df_grads", "[", "k", "]", "\n", "\n", "", "", "opt", ".", "step", "(", ")", "\n", "\n", "for", "k", "in", "hist", ":", "\n", "            ", "try", ":", "\n", "                ", "hist", "[", "k", "]", ".", "append", "(", "vars", "[", "k", "]", ".", "item", "(", ")", ")", "\n", "", "except", ":", "\n", "                ", "hist", "[", "k", "]", ".", "append", "(", "vars", "[", "k", "]", ".", "data", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ")", "\n", "", "", "", "for", "k", "in", "hist", ":", "\n", "        ", "hist", "[", "k", "]", "=", "np", ".", "array", "(", "hist", "[", "k", "]", ")", "\n", "", "if", "test_joint", ":", "\n", "        ", "return", "hist", ",", "elbos", ",", "grad_vars", ",", "test_losses", "\n", "", "return", "hist", ",", "elbos", ",", "grad_vars", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.vind.double_grad_var": [[246, 311], ["dict", "dict", "list", "list", "torch.optim.Adam", "torch.optim.Adam.zero_grad", "proposal", "proposal.sample_mult_eps", "proposal", "torch.zeros.backward", "tqdm.trange", "numpy.var", "numpy.mean", "numpy.var", "numpy.mean", "torch.optim.Adam.zero_grad", "torch.optim.Adam.step", "proposal", "proposal.entropy", "dist_prop_grad_W.entropy.backward", "vars[].grad[].item", "torch.optim.Adam.step", "torch.optim.Adam.zero_grad", "list", "list", "tqdm.trange", "numpy.var", "numpy.var", "numpy.mean", "print", "print", "print", "vars[].detach", "proposal.entropy", "joint.log_prob", "joint.log_prob", "list.append", "joint.log_prob", "list.append", "torch.optim.Adam.zero_grad", "torch.zeros", "proposal", "range", "torch.zeros.backward", "vinf.utils.symmetrize", "list.append", "list.append", "vars[].detach", "dE_ddf.item", "dE_ddf_uncoupled.item", "proposal.log_prob", "vars[].grad.item", "vars[].detach", "vars[].detach", "joint.log_prob", "proposal.log_prob", "joint.log_prob", "vars[].grad[].item", "vars[].detach", "reparam", "normalize"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGammaNormal.sample_mult_eps", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.symmetrize", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "double_grad_var", "(", "vars", ",", "joint", ",", "proposal", ",", "eps", ",", "n_samples", ",", "reparam", ",", "normalize", ")", ":", "\n", "    ", "res", "=", "dict", "(", ")", "\n", "mus", "=", "dict", "(", ")", "\n", "grad_samples", "=", "list", "(", ")", "\n", "grad_samples_uncoupled", "=", "list", "(", ")", "\n", "vars", "=", "{", "k", ":", "(", "vars", "[", "k", "]", "if", "k", "==", "'W_df'", "or", "k", "==", "'W'", "else", "vars", "[", "k", "]", ".", "detach", "(", ")", ")", "for", "k", "in", "vars", "}", "\n", "opt", "=", "Adam", "(", "[", "vars", "[", "'W_df'", "]", ",", "vars", "[", "'W'", "]", "]", ",", "lr", "=", "0.0", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "# sampling", "\n", "det_vars", "=", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "for", "k", "in", "vars", "}", "\n", "dist_prop", "=", "proposal", "(", "det_vars", ")", "\n", "samples_neg", ",", "samples", ",", "samples_pos", "=", "dist_prop", ".", "sample_mult_eps", "(", "(", "2", "*", "n_samples", ",", ")", ",", "eps", "=", "eps", ")", "\n", "\n", "# H gradient", "\n", "dist_prop_grad_df", "=", "proposal", "(", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "if", "k", "==", "'W'", "else", "vars", "[", "k", "]", "for", "k", "in", "vars", "}", ")", "\n", "loss", "=", "-", "dist_prop_grad_df", ".", "entropy", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "dH_ddf", "=", "vars", "[", "'W_df'", "]", ".", "grad", "\n", "for", "i", "in", "trange", "(", "n_samples", ")", ":", "\n", "        ", "coeff_neg", "=", "joint", ".", "log_prob", "(", "samples_neg", "[", "'W_df'", "]", "[", "i", "]", ")", "\n", "coeff_pos", "=", "joint", ".", "log_prob", "(", "samples_pos", "[", "'W_df'", "]", "[", "i", "]", ")", "\n", "dC_ddf", "=", "(", "coeff_neg", "-", "coeff_pos", ")", "/", "eps", "[", "'W_df'", "]", "\n", "dE_ddf", "=", "dH_ddf", "+", "dC_ddf", "\n", "grad_samples", ".", "append", "(", "dE_ddf", ".", "item", "(", ")", ")", "\n", "# non-coupled", "\n", "coeff_pos", "=", "joint", ".", "log_prob", "(", "samples_pos", "[", "'W_df'", "]", "[", "(", "i", "+", "1", ")", "%", "n_samples", "]", ")", "\n", "dC_ddf_uncoupled", "=", "(", "coeff_neg", "-", "coeff_pos", ")", "/", "eps", "[", "'W_df'", "]", "\n", "dE_ddf_uncoupled", "=", "dH_ddf", "+", "dC_ddf_uncoupled", "\n", "grad_samples_uncoupled", ".", "append", "(", "dE_ddf_uncoupled", ".", "item", "(", ")", ")", "\n", "", "res", "[", "'df_VIND'", "]", "=", "np", ".", "var", "(", "grad_samples", ")", "\n", "mus", "[", "'df_VIND'", "]", "=", "np", ".", "mean", "(", "grad_samples", ")", "\n", "res", "[", "'df_UNC'", "]", "=", "np", ".", "var", "(", "grad_samples_uncoupled", ")", "\n", "mus", "[", "'df_UNC'", "]", "=", "np", ".", "mean", "(", "grad_samples_uncoupled", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "dist_prop_grad_W", "=", "proposal", "(", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "if", "k", "==", "'W_df'", "else", "vars", "[", "k", "]", "for", "k", "in", "vars", "}", ")", "\n", "lossb", "=", "dist_prop_grad_W", ".", "entropy", "(", ")", "\n", "lossb", ".", "backward", "(", ")", "\n", "dH_ddW", "=", "vars", "[", "'W'", "]", ".", "grad", "[", "0", ",", "0", "]", ".", "item", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "grad_samples_df", "=", "list", "(", ")", "\n", "grad_samples_W", "=", "list", "(", ")", "\n", "for", "i", "in", "trange", "(", "n_samples", ")", ":", "\n", "        ", "opt", ".", "zero_grad", "(", ")", "\n", "loss", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "dist_prop_grad_df", "=", "proposal", "(", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "if", "k", "==", "'W'", "else", "vars", "[", "k", "]", "for", "k", "in", "vars", "}", ")", "\n", "for", "j", "in", "range", "(", "2", ")", ":", "\n", "            ", "coeff", "=", "joint", ".", "log_prob", "(", "samples", "[", "i", "*", "2", "+", "j", "]", ",", "blackwell", "=", "True", ")", "-", "dist_prop", ".", "log_prob", "(", "samples", "[", "i", "*", "2", "+", "j", "]", ",", "blackwell", "=", "True", ")", "\n", "score", "=", "dist_prop_grad_df", ".", "log_prob", "(", "samples", "[", "i", "*", "2", "+", "j", "]", ",", "blackwell", "=", "True", ")", "\n", "loss", "-=", "score", "*", "coeff", "/", "2", "\n", "loss", "-=", "joint", ".", "log_prob", "(", "reparam", "(", "normalize", "(", "samples", "[", "i", "*", "2", "+", "j", "]", ",", "det_vars", ")", ",", "vars", ")", ")", "/", "2", "\n", "", "loss", ".", "backward", "(", ")", "\n", "symmetrize", "(", "vars", ")", "\n", "grad_samples_df", ".", "append", "(", "vars", "[", "'W_df'", "]", ".", "grad", ".", "item", "(", ")", ")", "\n", "grad_samples_W", ".", "append", "(", "vars", "[", "'W'", "]", ".", "grad", "[", "0", ",", "0", "]", ".", "item", "(", ")", "+", "dH_ddW", ")", "\n", "", "res", "[", "'df_BBVI'", "]", "=", "np", ".", "var", "(", "grad_samples_df", ")", "\n", "res", "[", "'W'", "]", "=", "np", ".", "var", "(", "grad_samples_W", ")", "\n", "mus", "[", "'df_BBVI'", "]", "=", "np", ".", "mean", "(", "grad_samples_df", ")", "\n", "print", "(", "'---results---'", ")", "\n", "print", "(", "mus", ")", "\n", "print", "(", "res", ")", "\n", "return", "res", "\n", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvirp": [[9, 95], ["vinf.utils.get_optimizer", "vinf.utils.get_optimizer.", "list", "list", "tqdm.trange", "dict", "list", "O.zero_grad", "proposal", "proposal", "proposal", "proposal.sample", "range", "range", "loss.backward", "vinf.utils.symmetrize", "O.step", "numpy.array", "print", "list.append", "proposal.entropy", "vars[].detach", "proposal.sample", "torch.zeros", "range", "list.append", "proposal.log_prob", "vars[].data.numpy().copy", "vars[].data.abs_", "vstep_sizes.get", "bbvi.bbvi_grad_var", "joint.log_prob", "proposal.log_prob", "range", "list.append", "joint.log_prob", "proposal.log_prob", "joint.log_prob", "vars[].data.numpy().copy", "numpy.linalg.cholesky", "hist[].append", "vars[].detach", "vars[].detach", "test_joint.llh().item", "sample_reparam", "vars[].data.numpy", "vars[].data.add_().sub_", "vars[].item", "hist[].append", "normalize_sample", "vars[].data.numpy", "torch.from_numpy", "vars[].data.numpy().flatten", "test_joint.llh", "vars[].data.add_", "torch.from_numpy", "vars[].data.numpy"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.get_optimizer", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.symmetrize", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvi_grad_var", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.LinRegIndReparam.sample_reparam", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.LinRegIndReparam.normalize_sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.LinearRegression.llh"], ["def", "bbvirp", "(", "vars", ",", "sample_reparam", ",", "normalize_sample", ",", "joint", ",", "proposal", ",", "step_size", "=", "0.1", ",", "\n", "n_iter", "=", "10000", ",", "n_samples", "=", "1", ",", "track_grad_var", "=", "False", ",", "track_grad_var_freq", "=", "100", ",", "\n", "grad_var_samples", "=", "1000", ",", "track_elbo", "=", "False", ",", "n_samples_elbo", "=", "50", ",", "opt", "=", "'Adam'", ",", "\n", "vstep_sizes", "=", "None", ",", "test_joint", "=", "None", ")", ":", "\n", "    ", "n_samples", "*=", "3", "\n", "vstep_sizes", "=", "dict", "(", ")", "if", "vstep_sizes", "is", "None", "else", "vstep_sizes", "\n", "O", "=", "get_optimizer", "(", "opt", ")", "\n", "opt", "=", "O", "(", "[", "{", "'params'", ":", "vars", "[", "k", "]", ",", "'lr'", ":", "vstep_sizes", ".", "get", "(", "k", ",", "step_size", ")", "}", "\n", "for", "k", "in", "vars", "if", "vars", "[", "k", "]", ".", "requires_grad", "]", ",", "lr", "=", "step_size", ")", "\n", "hist", "=", "{", "k", ":", "[", "]", "for", "k", "in", "vars", "if", "vars", "[", "k", "]", ".", "requires_grad", "}", "\n", "grad_vars", "=", "list", "(", ")", "\n", "elbos", "=", "list", "(", ")", "\n", "if", "test_joint", ":", "\n", "        ", "test_losses", "=", "list", "(", ")", "\n", "", "S", "=", "n_samples", "\n", "rs", "=", "0", "\n", "psd_const", "=", "'S'", "if", "'S'", "in", "vars", "else", "(", "'W'", "if", "'W'", "in", "vars", "else", "None", ")", "\n", "for", "it", "in", "trange", "(", "n_iter", ")", ":", "\n", "        ", "if", "track_grad_var", "and", "(", "it", "%", "track_grad_var_freq", ")", "==", "0", ":", "\n", "            ", "grad_vars", ".", "append", "(", "bbvi_grad_var", "(", "vars", ",", "joint", ",", "proposal", ",", "grad_var_samples", ")", ")", "\n", "", "opt", ".", "zero_grad", "(", ")", "\n", "# gradient of entropy of proposal", "\n", "dist_prop_grad_df", "=", "proposal", "(", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "if", "'df'", "not", "in", "k", "else", "vars", "[", "k", "]", "for", "k", "in", "vars", "}", ")", "# BBVI D df", "\n", "dist_prop_grad_rp", "=", "proposal", "(", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "if", "'df'", "in", "k", "else", "vars", "[", "k", "]", "for", "k", "in", "vars", "}", ")", "# reparam D Rest", "\n", "loss", "=", "-", "dist_prop_grad_rp", ".", "entropy", "(", ")", "\n", "\n", "# sampling", "\n", "det_vars", "=", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "for", "k", "in", "vars", "}", "\n", "dist_prop", "=", "proposal", "(", "det_vars", ")", "\n", "\n", "if", "track_elbo", ":", "\n", "            ", "samples", "=", "dist_prop", ".", "sample", "(", "(", "n_samples_elbo", ",", ")", ")", "\n", "elbo", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "for", "i", "in", "range", "(", "n_samples_elbo", ")", ":", "\n", "                ", "xent", "=", "joint", ".", "log_prob", "(", "samples", "[", "i", "]", ")", "\n", "ent", "=", "dist_prop", ".", "log_prob", "(", "samples", "[", "i", "]", ")", "\n", "elbo", "+=", "xent", "-", "ent", "\n", "", "elbos", ".", "append", "(", "(", "elbo", "/", "n_samples_elbo", ")", ".", "item", "(", ")", ")", "\n", "if", "test_joint", ":", "\n", "                ", "test_loss", "=", "0", "\n", "for", "i", "in", "range", "(", "n_samples_elbo", ")", ":", "\n", "                    ", "test_loss", "+=", "test_joint", ".", "llh", "(", "samples", "[", "i", "]", ")", ".", "item", "(", ")", "\n", "", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "\n", "", "", "samples", "=", "dist_prop", ".", "sample", "(", "(", "S", ",", ")", ")", "\n", "\n", "# bbvi grad", "\n", "for", "i", "in", "range", "(", "S", ")", ":", "\n", "            ", "coeff", "=", "joint", ".", "log_prob", "(", "samples", "[", "i", "]", ")", "-", "dist_prop", ".", "log_prob", "(", "samples", "[", "i", "]", ")", "\n", "score", "=", "dist_prop_grad_df", ".", "log_prob", "(", "samples", "[", "i", "]", ")", "\n", "loss", "-=", "score", "*", "coeff", "/", "S", "\n", "\n", "# reparam grad", "\n", "", "for", "i", "in", "range", "(", "S", ")", ":", "\n", "            ", "loss", "-=", "joint", ".", "log_prob", "(", "sample_reparam", "(", "normalize_sample", "(", "samples", "[", "i", "]", ",", "det_vars", ")", ",", "vars", ")", ")", "/", "S", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "if", "psd_const", "in", "vars", ":", "\n", "            ", "prev", "=", "vars", "[", "psd_const", "]", ".", "data", ".", "numpy", "(", ")", ".", "copy", "(", ")", "\n", "\n", "", "symmetrize", "(", "vars", ")", "\n", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "if", "'D'", "in", "vars", ":", "\n", "            ", "vars", "[", "'D'", "]", ".", "data", ".", "abs_", "(", ")", "\n", "\n", "", "if", "psd_const", "in", "vars", ":", "\n", "            ", "try", ":", "\n", "                ", "new", "=", "vars", "[", "psd_const", "]", ".", "data", ".", "numpy", "(", ")", ".", "copy", "(", ")", "\n", "np", ".", "linalg", ".", "cholesky", "(", "new", ")", "\n", "", "except", ":", "\n", "                ", "rs", "+=", "1", "\n", "vars", "[", "psd_const", "]", ".", "data", ".", "add_", "(", "torch", ".", "from_numpy", "(", "prev", ")", ")", ".", "sub_", "(", "torch", ".", "from_numpy", "(", "new", ")", ")", "\n", "", "", "for", "k", "in", "hist", ":", "\n", "            ", "try", ":", "\n", "                ", "hist", "[", "k", "]", ".", "append", "(", "vars", "[", "k", "]", ".", "item", "(", ")", ")", "\n", "", "except", ":", "\n", "                ", "hist", "[", "k", "]", ".", "append", "(", "vars", "[", "k", "]", ".", "data", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ")", "\n", "", "", "", "for", "k", "in", "hist", ":", "\n", "        ", "hist", "[", "k", "]", "=", "np", ".", "array", "(", "hist", "[", "k", "]", ")", "\n", "", "if", "rs", ":", "\n", "        ", "print", "(", "rs", ",", "'restarts'", ")", "\n", "", "if", "test_joint", ":", "\n", "        ", "return", "hist", ",", "elbos", ",", "grad_vars", ",", "test_losses", "\n", "", "return", "hist", ",", "elbos", ",", "grad_vars", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvi_grad_var": [[97, 123], ["list", "torch.optim.Adam", "proposal", "proposal.sample", "tqdm.trange", "numpy.array", "torch.optim.Adam.zero_grad", "torch.zeros", "proposal", "range", "torch.zeros.backward", "np.array.append", "numpy.mean", "numpy.mean", "numpy.var", "vars[].detach", "vars[].detach", "proposal.log_prob", "vars[].grad.item", "joint.log_prob", "proposal.log_prob", "numpy.mean", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "bbvi_grad_var", "(", "vars", ",", "joint", ",", "proposal", ",", "n_samples", ",", "true_grad", "=", "None", ")", ":", "\n", "    ", "if", "'df'", "not", "in", "vars", ":", "\n", "        ", "return", "None", "\n", "", "grad_samples", "=", "list", "(", ")", "\n", "vars", "=", "{", "k", ":", "(", "vars", "[", "k", "]", "if", "'df'", "in", "k", "else", "vars", "[", "k", "]", ".", "detach", "(", ")", ")", "for", "k", "in", "vars", "}", "\n", "opt", "=", "Adam", "(", "[", "vars", "[", "'df'", "]", "]", ")", "# just used for 0-grad", "\n", "\n", "dist_prop", "=", "proposal", "(", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "for", "k", "in", "vars", "}", ")", "\n", "samples", "=", "dist_prop", ".", "sample", "(", "(", "2", "*", "n_samples", ",", ")", ")", "\n", "\n", "for", "i", "in", "trange", "(", "n_samples", ")", ":", "\n", "        ", "opt", ".", "zero_grad", "(", ")", "\n", "loss", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "dist_prop_grad", "=", "proposal", "(", "vars", ")", "\n", "for", "j", "in", "range", "(", "2", ")", ":", "\n", "            ", "coeff", "=", "joint", ".", "log_prob", "(", "samples", "[", "2", "*", "i", "+", "j", "]", ")", "-", "dist_prop", ".", "log_prob", "(", "samples", "[", "2", "*", "i", "+", "j", "]", ")", "\n", "score", "=", "dist_prop_grad", ".", "log_prob", "(", "samples", "[", "2", "*", "i", "+", "j", "]", ")", "\n", "loss", "-=", "score", "*", "coeff", "/", "2", "\n", "", "loss", ".", "backward", "(", ")", "\n", "grad_samples", ".", "append", "(", "vars", "[", "'df'", "]", ".", "grad", ".", "item", "(", ")", ")", "\n", "", "grad_samples", "=", "np", ".", "array", "(", "grad_samples", ")", "\n", "if", "true_grad", "is", "not", "None", ":", "\n", "        ", "bias_squared", "=", "(", "np", ".", "mean", "(", "grad_samples", ")", "-", "true_grad", ")", "**", "2", "\n", "variance", "=", "np", ".", "mean", "(", "(", "grad_samples", "-", "np", ".", "mean", "(", "grad_samples", ")", ")", "**", "2", ")", "\n", "return", "bias_squared", ",", "variance", "\n", "", "return", "np", ".", "mean", "(", "grad_samples", ")", ",", "np", ".", "var", "(", "grad_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.bbvi.bbvi_grep_var": [[125, 169], ["list", "proposal", "proposal.sample", "scipy.special.polygamma", "proposal", "proposal.entropy", "prop_grad.entropy.backward", "vars[].grad.item", "tqdm.trange", "vars[].item", "vars[].item", "vars[].grad.data.zero_", "list", "list", "samples[].item", "torch.tensor", "joint.log_prob", "fz.item.backward", "torch.tensor.grad.item", "torch.tensor.grad.data.zero_", "fz.item.item", "list.append", "gcorrs.append", "greps.append", "numpy.array", "numpy.mean", "numpy.mean", "numpy.var", "vars[].detach", "vars[].detach", "numpy.sqrt", "numpy.log", "numpy.sqrt", "numpy.exp", "numpy.mean", "numpy.log", "numpy.sqrt", "numpy.mean", "numpy.sqrt", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "bbvi_grep_var", "(", "vars", ",", "joint", ",", "proposal", ",", "n_samples", ",", "true_grad", "=", "None", ")", ":", "\n", "    ", "grad_samples", "=", "list", "(", ")", "\n", "vars", "=", "{", "k", ":", "(", "vars", "[", "k", "]", "if", "'df'", "in", "k", "else", "vars", "[", "k", "]", ".", "detach", "(", ")", ")", "for", "k", "in", "vars", "}", "\n", "\n", "dist_prop", "=", "proposal", "(", "{", "k", ":", "vars", "[", "k", "]", ".", "detach", "(", ")", "for", "k", "in", "vars", "}", ")", "\n", "samples", "=", "dist_prop", ".", "sample", "(", "(", "n_samples", ",", ")", ")", "\n", "alpha", ",", "beta", "=", "vars", "[", "'df'", "]", ".", "item", "(", ")", ",", "vars", "[", "'rate'", "]", ".", "item", "(", ")", "\n", "psi", ",", "psi_one", ",", "psi_two", "=", "polygamma", "(", "[", "0", ",", "1", ",", "2", "]", ",", "alpha", ")", "\n", "\n", "if", "vars", "[", "'df'", "]", ".", "grad", "is", "not", "None", ":", "\n", "        ", "vars", "[", "'df'", "]", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "", "prop_grad", "=", "proposal", "(", "vars", ")", "\n", "loss_ent", "=", "prop_grad", ".", "entropy", "(", ")", "\n", "loss_ent", ".", "backward", "(", ")", "\n", "dH_ddf", "=", "vars", "[", "'df'", "]", ".", "grad", ".", "item", "(", ")", "\n", "gcorrs", ",", "greps", "=", "list", "(", ")", ",", "list", "(", ")", "\n", "for", "i", "in", "trange", "(", "n_samples", ")", ":", "\n", "# GREP", "\n", "        ", "z", "=", "samples", "[", "i", "]", ".", "item", "(", ")", "\n", "g", "=", "torch", ".", "tensor", "(", "[", "z", "]", ",", "dtype", "=", "torch", ".", "double", ",", "requires_grad", "=", "True", ")", "\n", "fz", "=", "joint", ".", "log_prob", "(", "g", ")", "\n", "fz", ".", "backward", "(", ")", "\n", "grad_fz", "=", "g", ".", "grad", ".", "item", "(", ")", "\n", "g", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "fz", "=", "fz", ".", "item", "(", ")", "\n", "eps", "=", "(", "np", ".", "log", "(", "z", ")", "-", "psi", "+", "np", ".", "log", "(", "beta", ")", ")", "/", "np", ".", "sqrt", "(", "psi_one", ")", "\n", "rep_factor", "=", "(", "0.5", "*", "psi_two", "/", "np", ".", "sqrt", "(", "psi_one", ")", ")", "*", "eps", "+", "psi_one", "\n", "grep", "=", "grad_fz", "*", "rep_factor", "*", "z", "\n", "\n", "# GCORR", "\n", "lt", "=", "psi_two", "/", "(", "2", "*", "np", ".", "sqrt", "(", "psi_one", ")", ")", "\n", "dL_da", "=", "(", "0.5", "*", "psi_two", "/", "psi_one", "+", "alpha", "*", "psi_one", "\n", "+", "eps", "*", "(", "np", ".", "sqrt", "(", "psi_one", ")", "+", "alpha", "*", "lt", ")", "\n", "-", "(", "lt", "*", "eps", "+", "psi_one", ")", "*", "np", ".", "exp", "(", "np", ".", "sqrt", "(", "psi_one", ")", "*", "eps", "+", "psi", ")", ")", "\n", "gcorr", "=", "fz", "*", "dL_da", "\n", "grad_samples", ".", "append", "(", "grep", "+", "gcorr", "+", "dH_ddf", ")", "\n", "gcorrs", ".", "append", "(", "gcorr", ")", "\n", "greps", ".", "append", "(", "grep", ")", "\n", "", "grad_samples", "=", "-", "np", ".", "array", "(", "grad_samples", ")", "\n", "if", "true_grad", "is", "not", "None", ":", "\n", "        ", "bias_squared", "=", "(", "np", ".", "mean", "(", "grad_samples", ")", "-", "true_grad", ")", "**", "2", "\n", "variance", "=", "np", ".", "mean", "(", "(", "grad_samples", "-", "np", ".", "mean", "(", "grad_samples", ")", ")", "**", "2", ")", "\n", "return", "bias_squared", ",", "variance", "\n", "", "return", "np", ".", "mean", "(", "grad_samples", ")", ",", "np", ".", "var", "(", "grad_samples", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.GammaNormalReparam.sample_reparam": [[6, 9], ["None"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "sample_reparam", "(", "sample", ",", "vars", ")", ":", "\n", "        ", "return", "sample", "/", "vars", "[", "'rate'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.GammaNormalReparam.normalize_sample": [[10, 13], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "normalize_sample", "(", "sample", ",", "det_vars", ")", ":", "\n", "        ", "return", "sample", "*", "det_vars", "[", "'rate'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.WishartStudentNormalReparam.sample_reparam": [[17, 22], ["torch.matmul", "torch.matmul", "vars[].t"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "sample_reparam", "(", "sample", ",", "vars", ")", ":", "\n", "        ", "return", "(", "sample", "[", "0", "]", "/", "vars", "[", "'rate'", "]", ",", "\n", "torch", ".", "matmul", "(", "torch", ".", "matmul", "(", "vars", "[", "'W'", "]", ",", "sample", "[", "1", "]", ")", ",", "vars", "[", "'W'", "]", ".", "t", "(", ")", ")", ",", "\n", "vars", "[", "'alpha'", "]", "*", "sample", "[", "2", "]", "+", "vars", "[", "'loc'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.WishartStudentNormalReparam.normalize_sample": [[23, 29], ["torch.inverse", "torch.matmul", "torch.matmul", "torch.inverse.t"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "normalize_sample", "(", "sample", ",", "det_vars", ")", ":", "\n", "        ", "W_inv", "=", "torch", ".", "inverse", "(", "det_vars", "[", "'W'", "]", ")", "\n", "return", "(", "sample", "[", "0", "]", "*", "det_vars", "[", "'rate'", "]", ",", "\n", "torch", ".", "matmul", "(", "torch", ".", "matmul", "(", "W_inv", ",", "sample", "[", "1", "]", ")", ",", "W_inv", ".", "t", "(", ")", ")", ",", "\n", "(", "sample", "[", "2", "]", "-", "det_vars", "[", "'loc'", "]", ")", "/", "det_vars", "[", "'alpha'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.WishartNormalNormalReparam.sample_reparam": [[33, 37], ["torch.matmul", "torch.matmul", "vars[].t"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "sample_reparam", "(", "sample", ",", "vars", ")", ":", "\n", "        ", "return", "(", "torch", ".", "matmul", "(", "torch", ".", "matmul", "(", "vars", "[", "'W'", "]", ",", "sample", "[", "0", "]", ")", ",", "vars", "[", "'W'", "]", ".", "t", "(", ")", ")", ",", "\n", "vars", "[", "'alpha'", "]", "*", "sample", "[", "1", "]", "+", "vars", "[", "'loc'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.WishartNormalNormalReparam.normalize_sample": [[38, 43], ["torch.inverse", "torch.matmul", "torch.matmul", "torch.inverse.t"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "normalize_sample", "(", "sample", ",", "det_vars", ")", ":", "\n", "        ", "W_inv", "=", "torch", ".", "inverse", "(", "det_vars", "[", "'W'", "]", ")", "\n", "return", "(", "torch", ".", "matmul", "(", "torch", ".", "matmul", "(", "W_inv", ",", "sample", "[", "0", "]", ")", ",", "W_inv", ".", "t", "(", ")", ")", ",", "\n", "(", "sample", "[", "1", "]", "-", "det_vars", "[", "'loc'", "]", ")", "/", "det_vars", "[", "'alpha'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.LinRegIndReparam.sample_reparam": [[47, 55], ["torch.diag"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "sample_reparam", "(", "sample", ",", "vars", ")", ":", "\n", "        ", "if", "'S'", "in", "vars", ":", "\n", "            ", "S", "=", "vars", "[", "'S'", "]", "\n", "", "else", ":", "\n", "            ", "S", "=", "torch", ".", "diag", "(", "vars", "[", "'D'", "]", ")", "\n", "", "return", "(", "S", "@", "sample", "[", "0", "]", "+", "vars", "[", "'loc'", "]", ",", "\n", "sample", "[", "1", "]", "/", "vars", "[", "'rate'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.reparams.LinRegIndReparam.normalize_sample": [[56, 65], ["torch.inverse", "torch.diag"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "normalize_sample", "(", "sample", ",", "det_vars", ")", ":", "\n", "        ", "if", "'S'", "in", "det_vars", ":", "\n", "            ", "S", "=", "det_vars", "[", "'S'", "]", "\n", "", "else", ":", "\n", "            ", "S", "=", "torch", ".", "diag", "(", "det_vars", "[", "'D'", "]", ")", "\n", "", "S_inv", "=", "torch", ".", "inverse", "(", "S", ")", "\n", "return", "(", "S_inv", "@", "(", "sample", "[", "0", "]", "-", "det_vars", "[", "'loc'", "]", ")", ",", "\n", "sample", "[", "1", "]", "*", "det_vars", "[", "'rate'", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.exact_losses.GammaLoss.__init__": [[9, 13], ["torch.distributions.Gamma"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "posterior_df", ",", "posterior_rate", ")", ":", "\n", "        ", "self", ".", "alpha", "=", "posterior_df", "\n", "self", ".", "beta", "=", "posterior_rate", "\n", "self", ".", "true_dist", "=", "Gamma", "(", "concentration", "=", "posterior_df", ",", "rate", "=", "posterior_rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.exact_losses.GammaLoss.__call__": [[14, 17], ["torch.distributions.Gamma", "torch.distributions.kl_divergence"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "vars", ")", ":", "\n", "        ", "approx_dist", "=", "Gamma", "(", "concentration", "=", "vars", "[", "'df'", "]", ",", "rate", "=", "vars", "[", "'rate'", "]", ")", "\n", "return", "kl_divergence", "(", "approx_dist", ",", "self", ".", "true_dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.exact_losses.GammaLoss.sp": [[18, 26], ["vars[].item", "vars[].item", "scipy.special.gammaln", "scipy.special.gammaln", "scipy.special.gammaln", "scipy.special.gammaln", "numpy.log", "numpy.log", "scipy.special.digamma", "scipy.special.digamma"], "methods", ["None"], ["", "def", "sp", "(", "self", ",", "vars", ")", ":", "\n", "# KL divergence of true FROM proposal", "\n", "        ", "alpha_", "=", "vars", "[", "'df'", "]", ".", "item", "(", ")", "\n", "beta_", "=", "vars", "[", "'rate'", "]", ".", "item", "(", ")", "\n", "kl_div", "=", "(", "alpha_", "-", "self", ".", "alpha", ")", "*", "sp", ".", "special", ".", "digamma", "(", "alpha_", ")", "-", "sp", ".", "special", ".", "gammaln", "(", "alpha_", ")", "+", "sp", ".", "special", ".", "gammaln", "(", "self", ".", "alpha", ")", "+", "self", ".", "alpha", "*", "(", "np", ".", "log", "(", "beta_", ")", "-", "np", ".", "log", "(", "self", ".", "beta", ")", ")", "+", "alpha_", "*", "(", "self", ".", "beta", "-", "beta_", ")", "/", "beta_", "\n", "return", "kl_div", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.GammaNormal.__init__": [[10, 21], ["torch.distributions.Gamma", "torch.tensor", "torch.tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "mu", ",", "df_prior", ",", "rate_prior", ")", ":", "\n", "        ", "\"\"\"\n        :param data: Torch Tensor\n        :param mu: float\n        :param df_prior: float\n        :param rate_prior: float\n        \"\"\"", "\n", "self", ".", "prior", "=", "Gamma", "(", "torch", ".", "tensor", "(", "[", "df_prior", "]", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "torch", ".", "tensor", "(", "[", "rate_prior", "]", ",", "dtype", "=", "torch", ".", "float64", ")", ")", "\n", "self", ".", "mu", "=", "mu", "\n", "self", ".", "data", "=", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.GammaNormal.log_prob": [[22, 30], ["torch.distributions.Normal", "torch.tensor", "torch.sqrt", "torch.sum", "joints.GammaNormal.prior.log_prob", "torch.distributions.Normal.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "log_prob", "(", "self", ",", "tau", ")", ":", "\n", "        ", "\"\"\"\n        :param tau: Torch Tensor\n        :return: log joint pdf\n        \"\"\"", "\n", "likelihood", "=", "Normal", "(", "torch", ".", "tensor", "(", "[", "self", ".", "mu", "]", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "torch", ".", "sqrt", "(", "1", "/", "tau", ")", ")", "\n", "return", "torch", ".", "sum", "(", "likelihood", ".", "log_prob", "(", "self", ".", "data", ")", ")", "+", "self", ".", "prior", ".", "log_prob", "(", "tau", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.WishartGammaNormalStudent.__init__": [[33, 42], ["vinf.proposals.Wishart", "torch.distributions.Gamma", "torch.distributions.MultivariateNormal", "torch.tensor", "torch.tensor", "torch.tensor", "torch.from_numpy", "W_prior.astype", "torch.ones", "torch.eye"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "mu_prior", ",", "alpha_prior", ",", "W_df_prior", ",", "W_prior", ",", "G_df_prior", ",", "rate_prior", ")", ":", "\n", "        ", "d", "=", "W_prior", ".", "shape", "[", "0", "]", "\n", "self", ".", "W_prior", "=", "Wishart", "(", "{", "'df'", ":", "torch", ".", "tensor", "(", "[", "W_df_prior", "]", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "'W'", ":", "torch", ".", "from_numpy", "(", "W_prior", ".", "astype", "(", "np", ".", "float64", ")", ")", "}", ")", "\n", "self", ".", "nu_prior", "=", "Gamma", "(", "torch", ".", "tensor", "(", "[", "G_df_prior", "]", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "torch", ".", "tensor", "(", "[", "rate_prior", "]", ",", "dtype", "=", "torch", ".", "float64", ")", ")", "\n", "self", ".", "mu_prior", "=", "MultivariateNormal", "(", "loc", "=", "mu_prior", "*", "torch", ".", "ones", "(", "d", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "covariance_matrix", "=", "alpha_prior", "*", "torch", ".", "eye", "(", "d", ",", "dtype", "=", "torch", ".", "float64", ")", ")", "\n", "self", ".", "data", "=", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.WishartGammaNormalStudent.log_prob": [[43, 50], ["vinf.proposals.MVtS", "torch.tensor", "joints.WishartGammaNormalStudent.mu_prior.log_prob", "torch.inverse", "joints.WishartGammaNormalStudent.nu_prior.log_prob", "torch.sum", "joints.WishartGammaNormalStudent.W_prior.log_prob", "vinf.proposals.MVtS.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "log_prob", "(", "self", ",", "nuPmu", ")", ":", "\n", "        ", "nu", ",", "P", ",", "mu", "=", "nuPmu", "\n", "if", "nu", "<=", "EPS", ":", "\n", "            ", "nu", "=", "torch", ".", "tensor", "(", "[", "EPS", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "", "likelihood", "=", "MVtS", "(", "{", "'df'", ":", "nu", ",", "'loc'", ":", "mu", ",", "'Sig'", ":", "torch", ".", "inverse", "(", "P", ")", "}", ",", "P", "=", "P", ")", "\n", "return", "(", "torch", ".", "sum", "(", "likelihood", ".", "log_prob", "(", "self", ".", "data", ")", ")", "+", "self", ".", "W_prior", ".", "log_prob", "(", "P", ")", "\n", "+", "self", ".", "nu_prior", ".", "log_prob", "(", "nu", ")", "+", "self", ".", "mu_prior", ".", "log_prob", "(", "mu", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.WishartGammaNormalStudent.llh": [[51, 55], ["vinf.proposals.MVtS", "torch.sum", "vinf.proposals.MVtS.log_prob", "torch.inverse"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "llh", "(", "self", ",", "nuPmu", ")", ":", "\n", "        ", "nu", ",", "P", ",", "mu", "=", "nuPmu", "\n", "likelihood", "=", "MVtS", "(", "{", "'df'", ":", "nu", ",", "'loc'", ":", "mu", ",", "'Sig'", ":", "torch", ".", "inverse", "(", "P", ")", "}", ",", "P", "=", "P", ")", "\n", "return", "torch", ".", "sum", "(", "likelihood", ".", "log_prob", "(", "self", ".", "data", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.WishartNormalNormal.__init__": [[58, 65], ["vinf.proposals.Wishart", "torch.distributions.MultivariateNormal", "torch.tensor", "torch.from_numpy", "W_prior.astype", "torch.ones", "torch.eye"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "mu_prior", ",", "alpha_prior", ",", "W_df_prior", ",", "W_prior", ")", ":", "\n", "        ", "d", "=", "W_prior", ".", "shape", "[", "0", "]", "\n", "self", ".", "W_prior", "=", "Wishart", "(", "{", "'df'", ":", "torch", ".", "tensor", "(", "[", "W_df_prior", "]", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "'W'", ":", "torch", ".", "from_numpy", "(", "W_prior", ".", "astype", "(", "np", ".", "float64", ")", ")", "}", ")", "\n", "self", ".", "mu_prior", "=", "MultivariateNormal", "(", "loc", "=", "mu_prior", "*", "torch", ".", "ones", "(", "d", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "covariance_matrix", "=", "alpha_prior", "*", "torch", ".", "eye", "(", "d", ",", "dtype", "=", "torch", ".", "float64", ")", ")", "\n", "self", ".", "data", "=", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.WishartNormalNormal.log_prob": [[66, 71], ["torch.distributions.MultivariateNormal", "joints.WishartNormalNormal.mu_prior.log_prob", "torch.sum", "joints.WishartNormalNormal.W_prior.log_prob", "torch.distributions.MultivariateNormal.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "log_prob", "(", "self", ",", "Pmu", ")", ":", "\n", "        ", "P", ",", "mu", "=", "Pmu", "\n", "likelihood", "=", "MultivariateNormal", "(", "mu", ",", "precision_matrix", "=", "P", ")", "\n", "return", "(", "torch", ".", "sum", "(", "likelihood", ".", "log_prob", "(", "self", ".", "data", ")", ")", "+", "self", ".", "W_prior", ".", "log_prob", "(", "P", ")", "\n", "+", "self", ".", "mu_prior", ".", "log_prob", "(", "mu", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.WishartNormalNormal.llh": [[72, 76], ["torch.distributions.MultivariateNormal", "torch.sum", "torch.distributions.MultivariateNormal.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "llh", "(", "self", ",", "Pmu", ")", ":", "\n", "        ", "P", ",", "mu", "=", "Pmu", "\n", "likelihood", "=", "MultivariateNormal", "(", "mu", ",", "precision_matrix", "=", "P", ")", "\n", "return", "torch", ".", "sum", "(", "likelihood", ".", "log_prob", "(", "self", ".", "data", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.LinearRegression.log_prob": [[79, 84], ["torch.distributions.Normal", "torch.sum", "torch.distributions.Normal.log_prob", "joints.LinearRegression.prior.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["    ", "def", "log_prob", "(", "self", ",", "thetalam", ")", ":", "\n", "        ", "theta", ",", "lam", "=", "thetalam", "\n", "conditional_model", "=", "Normal", "(", "self", ".", "X", "@", "theta", ",", "1", "/", "lam", ")", "\n", "likelihood", "=", "torch", ".", "sum", "(", "conditional_model", ".", "log_prob", "(", "self", ".", "y", ")", ")", "\n", "return", "likelihood", "+", "self", ".", "prior", ".", "log_prob", "(", "thetalam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.LinearRegression.llh": [[85, 89], ["torch.distributions.Normal", "torch.sum", "torch.distributions.Normal.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "llh", "(", "self", ",", "thetalam", ")", ":", "\n", "        ", "theta", ",", "lam", "=", "thetalam", "\n", "likelihood", "=", "Normal", "(", "self", ".", "X", "@", "theta", ",", "1", "/", "lam", ")", "\n", "return", "torch", ".", "sum", "(", "likelihood", ".", "log_prob", "(", "self", ".", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.joints.MVNGammaLinRegIndep.__init__": [[92, 102], ["len", "vinf.proposals.InGammaMVN", "torch.zeros", "torch.tensor", "torch.tensor", "torch.eye"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "s_prior_factor", ",", "df_prior", ",", "rate_prior", ")", ":", "\n", "        ", "self", ".", "X", "=", "data", "[", "0", "]", "\n", "self", ".", "y", "=", "data", "[", "1", "]", "\n", "d", "=", "self", ".", "X", ".", "shape", "[", "1", "]", "\n", "self", ".", "n", "=", "len", "(", "self", ".", "X", ")", "\n", "self", ".", "prior", "=", "InGammaMVN", "(", "{", "\n", "'loc'", ":", "torch", ".", "zeros", "(", "d", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "'S'", ":", "s_prior_factor", "*", "torch", ".", "eye", "(", "d", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "'df'", ":", "torch", ".", "tensor", "(", "[", "df_prior", "]", ",", "dtype", "=", "torch", ".", "float64", ")", ",", "\n", "'rate'", ":", "torch", ".", "tensor", "(", "[", "rate_prior", "]", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "}", ")", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.Gamma.__init__": [[14, 16], ["torch.distributions.Gamma.__init__"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.GammaNormal.__init__"], ["def", "__init__", "(", "self", ",", "variables", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "variables", "[", "'df'", "]", ",", "variables", "[", "'rate'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.Gamma.sample_pos_neg": [[17, 30], ["numpy.random.gamma", "proposals.Gamma.concentration.detach().numpy", "RuntimeWarning", "numpy.random.gamma", "numpy.random.gamma", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "proposals.Gamma.rate.detach().numpy", "numpy.random.gamma.astype", "samples.astype", "samples_pos.astype", "proposals.Gamma.concentration.detach", "proposals.Gamma.rate.detach"], "methods", ["None"], ["", "def", "sample_pos_neg", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ",", "eps", "=", "1", ")", ":", "\n", "        ", "n", "=", "sample_shape", "[", "0", "]", "\n", "df", "=", "self", ".", "concentration", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "scale", "=", "1", "/", "self", ".", "rate", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "if", "df", "-", "eps", "/", "2", "<", "self", ".", "nu_min", ":", "\n", "            ", "eps", "=", "2", "*", "(", "df", "-", "self", ".", "nu_min", ")", "\n", "raise", "RuntimeWarning", "(", "'Eps too high leading to small divisors'", ")", "\n", "", "samples_neg", "=", "np", ".", "random", ".", "gamma", "(", "df", "-", "eps", "/", "2", ",", "scale", ",", "(", "n", ",", "1", ")", ")", "\n", "samples", "=", "samples_neg", "+", "np", ".", "random", ".", "gamma", "(", "eps", "/", "2", ",", "scale", ",", "(", "n", ",", "1", ")", ")", "\n", "samples_pos", "=", "samples", "+", "np", ".", "random", ".", "gamma", "(", "eps", "/", "2", ",", "scale", ",", "(", "n", ",", "1", ")", ")", "\n", "return", "(", "torch", ".", "from_numpy", "(", "samples_neg", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "\n", "torch", ".", "from_numpy", "(", "samples", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "\n", "torch", ".", "from_numpy", "(", "samples_pos", ".", "astype", "(", "np", ".", "float64", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.InGammaMVN.__init__": [[36, 47], ["proposals.MVN", "proposals.Gamma", "torch.diag"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "variables", ")", ":", "\n", "        ", "self", ".", "mu", "=", "variables", "[", "'loc'", "]", "\n", "if", "'S'", "in", "variables", ":", "\n", "            ", "self", ".", "S", "=", "variables", "[", "'S'", "]", "\n", "", "elif", "'D'", "in", "variables", ":", "\n", "            ", "self", ".", "S", "=", "torch", ".", "diag", "(", "variables", "[", "'D'", "]", ")", "\n", "", "self", ".", "df", "=", "variables", "[", "'df'", "]", "\n", "self", ".", "rate", "=", "variables", "[", "'rate'", "]", "\n", "self", ".", "d", "=", "self", ".", "mu", ".", "shape", "[", "0", "]", "\n", "self", ".", "mvn", "=", "MVN", "(", "variables", ")", "\n", "self", ".", "gamma", "=", "Gamma", "(", "variables", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.InGammaMVN.sample": [[48, 59], ["proposals.InGammaMVN.mu.detach().numpy().reshape", "proposals.InGammaMVN.S.detach().numpy", "numpy.random.gamma", "numpy.random.randn", "vinf.utils.tl2lt", "proposals.InGammaMVN.df.detach().numpy", "proposals.InGammaMVN.rate.detach().numpy", "numpy.random.randn.dot", "proposals.InGammaMVN.mu.detach().numpy", "proposals.InGammaMVN.S.detach", "torch.from_numpy", "torch.from_numpy", "proposals.InGammaMVN.df.detach", "proposals.InGammaMVN.rate.detach", "X.astype", "numpy.random.gamma.astype", "proposals.InGammaMVN.mu.detach"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt"], ["", "def", "sample", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ")", ":", "\n", "        ", "n", "=", "sample_shape", "[", "0", "]", "\n", "df", "=", "self", ".", "df", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "mu", "=", "self", ".", "mu", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "1", ",", "self", ".", "d", ")", "\n", "S", "=", "self", ".", "S", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "rate", "=", "self", ".", "rate", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "lam", "=", "np", ".", "random", ".", "gamma", "(", "df", ",", "1", "/", "rate", ",", "(", "n", ",", "1", ")", ")", "\n", "theta", "=", "np", ".", "random", ".", "randn", "(", "n", ",", "self", ".", "d", ")", "\n", "X", "=", "mu", "+", "theta", ".", "dot", "(", "S", ")", "\n", "return", "tl2lt", "(", "(", "torch", ".", "from_numpy", "(", "X", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "\n", "torch", ".", "from_numpy", "(", "lam", ".", "astype", "(", "np", ".", "float64", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.InGammaMVN.sample_pos_neg": [[60, 75], ["proposals.InGammaMVN.mu.detach().numpy().reshape", "proposals.InGammaMVN.S.detach().numpy", "numpy.random.gamma", "numpy.random.randn", "numpy.random.randn.dot", "proposals.InGammaMVN.df.detach().numpy", "proposals.InGammaMVN.rate.detach().numpy", "numpy.random.gamma", "numpy.random.gamma", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "proposals.InGammaMVN.mu.detach().numpy", "proposals.InGammaMVN.S.detach", "proposals.InGammaMVN.df.detach", "proposals.InGammaMVN.rate.detach", "vinf.utils.cast", "vinf.utils.cast", "vinf.utils.cast", "vinf.utils.cast", "vinf.utils.cast", "vinf.utils.cast", "proposals.InGammaMVN.mu.detach"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.cast", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.cast", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.cast", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.cast", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.cast", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.cast"], ["", "def", "sample_pos_neg", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ",", "eps", "=", "1", ")", ":", "\n", "        ", "n", "=", "sample_shape", "[", "0", "]", "\n", "df", "=", "self", ".", "df", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "mu", "=", "self", ".", "mu", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "1", ",", "self", ".", "d", ")", "\n", "S", "=", "self", ".", "S", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "rate", "=", "self", ".", "rate", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "lam_neg", "=", "np", ".", "random", ".", "gamma", "(", "df", "-", "eps", "/", "2", ",", "1", "/", "rate", ",", "(", "n", ",", "1", ")", ")", "\n", "lam", "=", "lam_neg", "+", "np", ".", "random", ".", "gamma", "(", "eps", "/", "2", ",", "1", "/", "rate", ",", "(", "n", ",", "1", ")", ")", "\n", "lam_pos", "=", "lam", "+", "np", ".", "random", ".", "gamma", "(", "eps", "/", "2", ",", "1", "/", "rate", ",", "(", "n", ",", "1", ")", ")", "\n", "theta", "=", "np", ".", "random", ".", "randn", "(", "n", ",", "self", ".", "d", ")", "\n", "scaled_theta", "=", "theta", ".", "dot", "(", "S", ")", "\n", "X", "=", "mu", "+", "scaled_theta", "\n", "return", "(", "tl2lt", "(", "(", "cast", "(", "X", ")", ",", "cast", "(", "lam_neg", ")", ")", ")", ",", "\n", "tl2lt", "(", "(", "cast", "(", "X", ")", ",", "cast", "(", "lam", ")", ")", ")", ",", "\n", "tl2lt", "(", "(", "cast", "(", "X", ")", ",", "cast", "(", "lam_pos", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.InGammaMVN.log_prob": [[76, 79], ["proposals.InGammaMVN.mvn.log_prob", "proposals.InGammaMVN.gamma.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "log_prob", "(", "self", ",", "thetalam", ")", ":", "\n", "        ", "theta", ",", "lam", "=", "thetalam", "\n", "return", "self", ".", "mvn", ".", "log_prob", "(", "theta", ")", "+", "self", ".", "gamma", ".", "log_prob", "(", "lam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.InGammaMVN.entropy": [[80, 82], ["proposals.InGammaMVN.mvn.entropy", "proposals.InGammaMVN.gamma.entropy"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy"], ["", "def", "entropy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "mvn", ".", "entropy", "(", ")", "+", "self", ".", "gamma", ".", "entropy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.MVtS.__init__": [[88, 112], ["proposals.MVtS.df.detach().item", "torch.diag", "torch.inverse", "torch.inverse", "proposals.MVtS.df.detach", "torch.diag", "ValueError"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "variables", ",", "P", "=", "None", ")", ":", "\n", "        ", "self", ".", "df", "=", "variables", "[", "'df'", "]", "\n", "assert", "self", ".", "df", ".", "detach", "(", ")", ".", "item", "(", ")", ">=", "self", ".", "nu_min", "\n", "self", ".", "loc", "=", "variables", "[", "'loc'", "]", "\n", "self", ".", "d", "=", "self", ".", "loc", ".", "shape", "[", "0", "]", "\n", "if", "'Sig'", "in", "variables", ":", "\n", "            ", "self", ".", "S", "=", "variables", "[", "'Sig'", "]", "\n", "self", ".", "sig", "=", "True", "\n", "", "elif", "'Dig'", "in", "variables", ":", "\n", "            ", "self", ".", "S", "=", "torch", ".", "diag", "(", "variables", "[", "'Dig'", "]", ")", "\n", "self", ".", "sig", "=", "True", "\n", "", "elif", "'S'", "in", "variables", ":", "\n", "            ", "self", ".", "S", "=", "variables", "[", "'S'", "]", "\n", "self", ".", "sig", "=", "False", "\n", "", "elif", "'D'", "in", "variables", ":", "\n", "            ", "self", ".", "S", "=", "torch", ".", "diag", "(", "variables", "[", "'D'", "]", ")", "\n", "self", ".", "sig", "=", "False", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'No covariance'", ")", "\n", "", "if", "P", "is", "None", ":", "\n", "            ", "self", ".", "P", "=", "torch", ".", "inverse", "(", "self", ".", "S", ")", "if", "self", ".", "sig", "else", "torch", ".", "inverse", "(", "self", ".", "S", "@", "self", ".", "S", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "P", "=", "P", "\n", "", "self", ".", "coeff", "=", "0.5", "if", "self", ".", "sig", "else", "1.", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.MVtS.sample": [[113, 124], ["proposals.MVtS.loc.detach().numpy().reshape", "proposals.MVtS.S.detach().numpy", "numpy.random.randn", "numpy.random.chisquare", "torch.from_numpy", "proposals.MVtS.df.detach().numpy", "scipy.linalg.sqrtm", "scipy.linalg.sqrtm", "numpy.sqrt", "proposals.MVtS.loc.detach().numpy", "proposals.MVtS.S.detach", "proposals.MVtS.df.detach", "proposals.MVtS.loc.detach", "numpy.random.randn.dot"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ")", ":", "\n", "        ", "n", "=", "sample_shape", "[", "0", "]", "\n", "df", "=", "self", ".", "df", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "mu", "=", "self", ".", "loc", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "1", ",", "self", ".", "d", ")", "\n", "S", "=", "self", ".", "S", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "if", "self", ".", "sig", ":", "\n", "            ", "S", "=", "sp", ".", "linalg", ".", "sqrtm", "(", "S", ")", "\n", "", "samples", "=", "np", ".", "random", ".", "randn", "(", "n", ",", "self", ".", "d", ")", "\n", "chis", "=", "np", ".", "random", ".", "chisquare", "(", "df", ",", "(", "n", ",", "1", ")", ")", "\n", "samples", "=", "samples", "/", "np", ".", "sqrt", "(", "chis", "/", "df", ")", "\n", "return", "torch", ".", "from_numpy", "(", "(", "mu", "+", "samples", ".", "dot", "(", "S", ")", ")", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.MVtS.sample_pos_neg": [[125, 144], ["proposals.MVtS.loc.detach().numpy().reshape", "proposals.MVtS.S.detach().numpy", "numpy.random.randn().dot", "numpy.random.chisquare", "numpy.random.chisquare", "numpy.random.chisquare", "proposals.MVtS.df.detach().numpy", "scipy.linalg.sqrtm", "scipy.linalg.sqrtm", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "proposals.MVtS.loc.detach().numpy", "proposals.MVtS.S.detach", "numpy.random.randn", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "samples_neg.astype", "samples.astype", "samples_pos.astype", "proposals.MVtS.df.detach", "proposals.MVtS.loc.detach"], "methods", ["None"], ["", "def", "sample_pos_neg", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ",", "eps", "=", "1", ")", ":", "\n", "        ", "n", "=", "sample_shape", "[", "0", "]", "\n", "df", "=", "self", ".", "df", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "mu", "=", "self", ".", "loc", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "1", ",", "self", ".", "d", ")", "\n", "S", "=", "self", ".", "S", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "if", "self", ".", "sig", ":", "\n", "            ", "S", "=", "sp", ".", "linalg", ".", "sqrtm", "(", "S", ")", "\n", "", "norm_samples", "=", "np", ".", "random", ".", "randn", "(", "n", ",", "self", ".", "d", ")", ".", "dot", "(", "S", ")", "\n", "chis_neg", "=", "np", ".", "random", ".", "chisquare", "(", "df", "-", "eps", "/", "2", ",", "(", "n", ",", "1", ")", ")", "\n", "chis_eps_1", "=", "np", ".", "random", ".", "chisquare", "(", "eps", "/", "2", ",", "(", "n", ",", "1", ")", ")", "\n", "chis_eps_2", "=", "np", ".", "random", ".", "chisquare", "(", "eps", "/", "2", ",", "(", "n", ",", "1", ")", ")", "\n", "chis", "=", "chis_neg", "+", "chis_eps_1", "\n", "chis_pos", "=", "chis", "+", "chis_eps_2", "\n", "samples_neg", "=", "mu", "+", "norm_samples", "/", "np", ".", "sqrt", "(", "chis_neg", "/", "(", "df", "-", "eps", "/", "2", ")", ")", "\n", "samples", "=", "mu", "+", "norm_samples", "/", "np", ".", "sqrt", "(", "chis", "/", "df", ")", "\n", "samples_pos", "=", "mu", "+", "norm_samples", "/", "np", ".", "sqrt", "(", "chis_pos", "/", "(", "df", "+", "eps", "/", "2", ")", ")", "\n", "return", "(", "torch", ".", "from_numpy", "(", "samples_neg", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "\n", "torch", ".", "from_numpy", "(", "samples", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "\n", "torch", ".", "from_numpy", "(", "samples_pos", ".", "astype", "(", "np", ".", "float64", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.MVtS.log_prob": [[145, 160], ["len", "torch.stack", "torch.log1p", "torch.lgamma", "torch.lgamma", "torch.log", "torch.logdet", "math.log"], "methods", ["None"], ["", "def", "log_prob", "(", "self", ",", "theta", ")", ":", "\n", "        ", "diff", "=", "theta", "-", "self", ".", "loc", "\n", "if", "len", "(", "diff", ".", "shape", ")", ">", "1", ":", "\n", "# print('loc so small it cannot be removed, maybe just center", "\n", "# if its not already done and leave loc to 0')", "\n", "            ", "y", "=", "torch", ".", "stack", "(", "[", "delta", "@", "self", ".", "P", "@", "delta", "for", "delta", "in", "diff", "]", ")", "\n", "", "else", ":", "\n", "            ", "y", "=", "diff", "@", "self", ".", "P", "@", "diff", "\n", "", "lp", "=", "-", "0.5", "*", "(", "self", ".", "df", "+", "self", ".", "d", ")", "*", "torch", ".", "log1p", "(", "y", "/", "self", ".", "df", ")", "\n", "Z", "=", "(", "self", ".", "coeff", "*", "torch", ".", "logdet", "(", "self", ".", "S", ")", "+", "\n", "0.5", "*", "self", ".", "d", "*", "log", "(", "pi", ")", "+", "\n", "0.5", "*", "self", ".", "d", "*", "torch", ".", "log", "(", "self", ".", "df", ")", "+", "\n", "torch", ".", "lgamma", "(", "0.5", "*", "self", ".", "df", ")", "-", "\n", "torch", ".", "lgamma", "(", "0.5", "*", "(", "self", ".", "df", "+", "self", ".", "d", ")", ")", ")", "\n", "return", "lp", "-", "Z", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.MVtS.entropy": [[161, 165], ["torch.distributions.StudentT", "torch.logdet", "torch.distributions.StudentT.entropy"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy"], ["", "def", "entropy", "(", "self", ")", ":", "\n", "        ", "simple_tst", "=", "StudentT_torch", "(", "self", ".", "df", ")", "\n", "H", "=", "self", ".", "coeff", "*", "torch", ".", "logdet", "(", "self", ".", "S", ")", "+", "self", ".", "d", "*", "simple_tst", ".", "entropy", "(", ")", "\n", "return", "H", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.MVN.__init__": [[169, 181], ["torch.distributions.MultivariateNormal.__init__", "torch.diag", "torch.diag", "ValueError"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.GammaNormal.__init__"], ["    ", "def", "__init__", "(", "self", ",", "variables", ")", ":", "\n", "        ", "if", "'Sig'", "in", "variables", ":", "\n", "            ", "S", "=", "variables", "[", "'Sig'", "]", "\n", "", "elif", "'Dig'", "in", "variables", ":", "\n", "            ", "S", "=", "torch", ".", "diag", "(", "variables", "[", "'Dig'", "]", ")", "\n", "", "elif", "'S'", "in", "variables", ":", "\n", "            ", "S", "=", "variables", "[", "'S'", "]", "@", "variables", "[", "'S'", "]", "\n", "", "elif", "'D'", "in", "variables", ":", "\n", "            ", "S", "=", "torch", ".", "diag", "(", "variables", "[", "'D'", "]", "**", "2", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'No covariance'", ")", "\n", "", "super", "(", ")", ".", "__init__", "(", "variables", "[", "'loc'", "]", ",", "S", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.MVN.entropy": [[182, 185], ["super().entropy", "super().entropy.reshape"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy"], ["", "def", "entropy", "(", "self", ")", ":", "\n", "        ", "H", "=", "super", "(", ")", ".", "entropy", "(", ")", "\n", "return", "H", ".", "reshape", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.Wishart.__init__": [[189, 196], ["int", "torch.logdet", "torch.inverse", "vinf.gamma_functions.mvlgamma", "math.log"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.gamma_functions.mvlgamma"], ["    ", "def", "__init__", "(", "self", ",", "variables", ")", ":", "\n", "        ", "self", ".", "p", "=", "int", "(", "variables", "[", "'W'", "]", ".", "shape", "[", "-", "1", "]", ")", "\n", "self", ".", "logdetW", "=", "torch", ".", "logdet", "(", "variables", "[", "'W'", "]", ")", "\n", "self", ".", "C", "=", "-", "variables", "[", "'df'", "]", "*", "0.5", "*", "(", "self", ".", "logdetW", "+", "self", ".", "p", "*", "log", "(", "2", ")", ")", "-", "mvlgamma", "(", "variables", "[", "'df'", "]", "/", "2", ",", "self", ".", "p", ")", "\n", "self", ".", "W", "=", "variables", "[", "'W'", "]", "\n", "self", ".", "W_inv", "=", "torch", ".", "inverse", "(", "self", ".", "W", ")", "\n", "self", ".", "df", "=", "variables", "[", "'df'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.Wishart.sample": [[197, 203], ["scipy.stats.wishart.rvs().astype", "scipy.stats.wishart.rvs().astype", "torch.from_numpy", "samples[].astype", "scipy.stats.wishart.rvs", "scipy.stats.wishart.rvs", "proposals.Wishart.W.detach().numpy", "proposals.Wishart.df.detach().numpy", "proposals.Wishart.W.detach", "proposals.Wishart.df.detach"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ")", ":", "\n", "        ", "samples", "=", "sp", ".", "stats", ".", "wishart", ".", "rvs", "(", "self", ".", "df", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", ",", "self", ".", "W", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "\n", "size", "=", "sample_shape", "[", "0", "]", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "if", "sample_shape", "[", "0", "]", "==", "1", ":", "\n", "            ", "samples", "=", "samples", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", ".", "astype", "(", "np", ".", "float64", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.Wishart.sample_pos_neg": [[204, 220], ["proposals.Wishart.W.detach().numpy", "scipy.stats.wishart.rvs", "scipy.stats.wishart.rvs", "scipy.stats.wishart.rvs", "scipy.stats.wishart.rvs", "scipy.stats.wishart.rvs", "scipy.stats.wishart.rvs", "proposals.Wishart.df.detach().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "proposals.Wishart.W.detach", "scipy.stats.wishart.rvs.astype", "samples.astype", "samples_pos.astype", "proposals.Wishart.df.detach"], "methods", ["None"], ["", "def", "sample_pos_neg", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ",", "eps", "=", "1", ")", ":", "\n", "        ", "df", "=", "self", ".", "df", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "W", "=", "self", ".", "W", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "n", "=", "sample_shape", "[", "0", "]", "\n", "samples_neg", "=", "sp", ".", "stats", ".", "wishart", ".", "rvs", "(", "df", "-", "eps", "/", "2", ",", "W", ",", "size", "=", "n", ")", "\n", "W_eps_1", "=", "sp", ".", "stats", ".", "wishart", ".", "rvs", "(", "eps", "/", "2", ",", "W", ",", "size", "=", "n", ")", "\n", "W_eps_2", "=", "sp", ".", "stats", ".", "wishart", ".", "rvs", "(", "eps", "/", "2", ",", "W", ",", "size", "=", "n", ")", "\n", "samples", "=", "samples_neg", "+", "W_eps_1", "\n", "samples_pos", "=", "samples", "+", "W_eps_2", "\n", "if", "sample_shape", "[", "0", "]", "==", "1", ":", "\n", "            ", "samples", "=", "samples", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "samples_pos", "=", "samples_pos", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "samples_neg", "=", "samples_neg", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "", "return", "(", "torch", ".", "from_numpy", "(", "samples_neg", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "\n", "torch", ".", "from_numpy", "(", "samples", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "\n", "torch", ".", "from_numpy", "(", "samples_pos", ".", "astype", "(", "np", ".", "float64", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.Wishart.log_prob": [[221, 225], ["torch.logdet", "torch.trace", "torch.matmul"], "methods", ["None"], ["", "def", "log_prob", "(", "self", ",", "X", ")", ":", "\n", "        ", "logdetX", "=", "torch", ".", "logdet", "(", "X", ")", "\n", "expon", "=", "torch", ".", "trace", "(", "torch", ".", "matmul", "(", "self", ".", "W_inv", ",", "X", ")", ")", "\n", "return", "self", ".", "C", "+", "0.5", "*", "(", "self", ".", "df", "-", "self", ".", "p", "-", "1", ")", "*", "logdetX", "-", "0.5", "*", "expon", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.Wishart.entropy": [[226, 230], ["vinf.gamma_functions.mvlgamma", "vinf.gamma_functions.mvdigamma", "math.log"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.gamma_functions.mvlgamma", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.gamma_functions.mvdigamma"], ["", "def", "entropy", "(", "self", ")", ":", "\n", "        ", "H", "=", "(", "self", ".", "p", "+", "1", ")", "/", "2", "*", "self", ".", "logdetW", "+", "0.5", "*", "self", ".", "p", "*", "(", "self", ".", "p", "+", "1", ")", "*", "log", "(", "2", ")", "+", "mvlgamma", "(", "self", ".", "df", "/", "2", ",", "self", ".", "p", ")", "-", "(", "self", ".", "df", "-", "self", ".", "p", "-", "1", ")", "/", "2", "*", "mvdigamma", "(", "self", ".", "df", "/", "2", ",", "self", ".", "p", ")", "+", "self", ".", "df", "*", "self", ".", "p", "/", "2", "\n", "return", "H", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.SqrtWishart.__init__": [[234, 239], ["dict", "proposals.Wishart.__init__", "variables[].t"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.GammaNormal.__init__"], ["    ", "def", "__init__", "(", "self", ",", "variables", ")", ":", "\n", "        ", "new_vars", "=", "dict", "(", ")", "\n", "new_vars", "[", "'W'", "]", "=", "variables", "[", "'W'", "]", "@", "variables", "[", "'W'", "]", ".", "t", "(", ")", "\n", "new_vars", "[", "'df'", "]", "=", "variables", "[", "'df'", "]", "\n", "super", "(", ")", ".", "__init__", "(", "new_vars", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGamma.__init__": [[243, 246], ["proposals.Gamma", "proposals.SqrtWishart"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "variables", ")", ":", "\n", "        ", "self", ".", "gamma", "=", "Gamma", "(", "{", "'df'", ":", "variables", "[", "'G_df'", "]", ",", "'rate'", ":", "variables", "[", "'rate'", "]", "}", ")", "\n", "self", ".", "wishart", "=", "SqrtWishart", "(", "{", "'df'", ":", "variables", "[", "'W_df'", "]", ",", "'W'", ":", "variables", "[", "'W'", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGamma.sample": [[247, 251], ["proposals.WishartGamma.gamma.sample", "proposals.WishartGamma.wishart.sample", "vinf.utils.tl2lt"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt"], ["", "def", "sample", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ")", ":", "\n", "        ", "nu_samples", "=", "self", ".", "gamma", ".", "sample", "(", "sample_shape", ")", "\n", "P_samples", "=", "self", ".", "wishart", ".", "sample", "(", "sample_shape", ")", "\n", "return", "tl2lt", "(", "(", "nu_samples", ",", "P_samples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGamma.sample_mult_eps": [[252, 261], ["proposals.WishartGamma.gamma.sample_pos_neg", "proposals.WishartGamma.wishart.sample_pos_neg", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "vinf.utils.tl2lt"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample_pos_neg", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample_pos_neg", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt"], ["", "def", "sample_mult_eps", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ",", "eps", "=", "None", ")", ":", "\n", "        ", "if", "eps", "is", "None", ":", "\n", "            ", "eps", "=", "{", "'G_df'", ":", "1", ",", "'W_df'", ":", "2", "*", "self", ".", "wishart", ".", "W", ".", "shape", "[", "0", "]", "}", "\n", "", "nu_neg", ",", "nu", ",", "nu_pos", "=", "self", ".", "gamma", ".", "sample_pos_neg", "(", "sample_shape", ",", "eps", "[", "'G_df'", "]", ")", "\n", "P_neg", ",", "P", ",", "P_pos", "=", "self", ".", "wishart", ".", "sample_pos_neg", "(", "sample_shape", ",", "eps", "[", "'W_df'", "]", ")", "\n", "samples_neg", "=", "{", "'W_df'", ":", "tl2lt", "(", "(", "nu", ",", "P_neg", ")", ")", ",", "'G_df'", ":", "tl2lt", "(", "(", "nu_neg", ",", "P", ")", ")", "}", "\n", "samples_pos", "=", "{", "'W_df'", ":", "tl2lt", "(", "(", "nu", ",", "P_pos", ")", ")", ",", "'G_df'", ":", "tl2lt", "(", "(", "nu_pos", ",", "P", ")", ")", "}", "\n", "samples", "=", "tl2lt", "(", "(", "nu", ",", "P", ")", ")", "\n", "return", "samples_neg", ",", "samples", ",", "samples_pos", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGamma.log_prob": [[262, 267], ["proposals.WishartGamma.wishart.log_prob", "proposals.WishartGamma.gamma.log_prob", "proposals.WishartGamma.wishart.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "log_prob", "(", "self", ",", "nuP", ",", "blackwell", "=", "False", ")", ":", "\n", "        ", "nu", ",", "P", "=", "nuP", "\n", "if", "blackwell", ":", "\n", "            ", "return", "self", ".", "wishart", ".", "log_prob", "(", "P", ")", "\n", "", "return", "self", ".", "gamma", ".", "log_prob", "(", "nu", ")", "+", "self", ".", "wishart", ".", "log_prob", "(", "P", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGamma.entropy": [[268, 270], ["proposals.WishartGamma.gamma.entropy", "proposals.WishartGamma.wishart.entropy"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy"], ["", "def", "entropy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "gamma", ".", "entropy", "(", ")", "+", "self", ".", "wishart", ".", "entropy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGammaNormal.__init__": [[273, 278], ["proposals.WishartGamma.__init__", "torch.distributions.MultivariateNormal", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.GammaNormal.__init__"], ["    ", "def", "__init__", "(", "self", ",", "variables", ")", ":", "\n", "        ", "d", "=", "variables", "[", "'loc'", "]", ".", "shape", "[", "0", "]", "\n", "super", "(", ")", ".", "__init__", "(", "variables", ")", "\n", "self", ".", "normal", "=", "MVN_torch", "(", "loc", "=", "variables", "[", "'loc'", "]", ",", "\n", "covariance_matrix", "=", "variables", "[", "'alpha'", "]", "*", "torch", ".", "eye", "(", "d", ",", "dtype", "=", "torch", ".", "double", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGammaNormal.sample": [[279, 284], ["proposals.WishartGammaNormal.gamma.sample", "proposals.WishartGammaNormal.wishart.sample", "proposals.WishartGammaNormal.normal.sample", "vinf.utils.tl2lt"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt"], ["", "def", "sample", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ")", ":", "\n", "        ", "nu_samples", "=", "self", ".", "gamma", ".", "sample", "(", "sample_shape", ")", "\n", "P_samples", "=", "self", ".", "wishart", ".", "sample", "(", "sample_shape", ")", "\n", "mu_samples", "=", "self", ".", "normal", ".", "sample", "(", "sample_shape", ")", "\n", "return", "tl2lt", "(", "(", "nu_samples", ",", "P_samples", ",", "mu_samples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGammaNormal.sample_mult_eps": [[285, 295], ["proposals.WishartGammaNormal.gamma.sample_pos_neg", "proposals.WishartGammaNormal.wishart.sample_pos_neg", "proposals.WishartGammaNormal.normal.sample", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "vinf.utils.tl2lt"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample_pos_neg", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample_pos_neg", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt"], ["", "def", "sample_mult_eps", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ",", "eps", "=", "None", ")", ":", "\n", "        ", "if", "eps", "is", "None", ":", "\n", "            ", "eps", "=", "{", "'G_df'", ":", "1", ",", "'W_df'", ":", "2", "*", "self", ".", "wishart", ".", "W", ".", "shape", "[", "0", "]", "}", "\n", "", "nu_neg", ",", "nu", ",", "nu_pos", "=", "self", ".", "gamma", ".", "sample_pos_neg", "(", "sample_shape", ",", "eps", "[", "'G_df'", "]", ")", "\n", "P_neg", ",", "P", ",", "P_pos", "=", "self", ".", "wishart", ".", "sample_pos_neg", "(", "sample_shape", ",", "eps", "[", "'W_df'", "]", ")", "\n", "mus", "=", "self", ".", "normal", ".", "sample", "(", "sample_shape", ")", "\n", "samples_neg", "=", "{", "'W_df'", ":", "tl2lt", "(", "(", "nu", ",", "P_neg", ",", "mus", ")", ")", ",", "'G_df'", ":", "tl2lt", "(", "(", "nu_neg", ",", "P", ",", "mus", ")", ")", "}", "\n", "samples_pos", "=", "{", "'W_df'", ":", "tl2lt", "(", "(", "nu", ",", "P_pos", ",", "mus", ")", ")", ",", "'G_df'", ":", "tl2lt", "(", "(", "nu_pos", ",", "P", ",", "mus", ")", ")", "}", "\n", "samples", "=", "tl2lt", "(", "(", "nu", ",", "P", ",", "mus", ")", ")", "\n", "return", "samples_neg", ",", "samples", ",", "samples_pos", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGammaNormal.log_prob": [[296, 299], ["proposals.WishartGammaNormal.normal.log_prob", "proposals.WishartGammaNormal.gamma.log_prob", "proposals.WishartGammaNormal.wishart.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "log_prob", "(", "self", ",", "nuPmu", ")", ":", "\n", "        ", "nu", ",", "P", ",", "mu", "=", "nuPmu", "\n", "return", "self", ".", "gamma", ".", "log_prob", "(", "nu", ")", "+", "self", ".", "wishart", ".", "log_prob", "(", "P", ")", "+", "self", ".", "normal", ".", "log_prob", "(", "mu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartGammaNormal.entropy": [[300, 302], ["proposals.WishartGammaNormal.normal.entropy", "proposals.WishartGammaNormal.gamma.entropy", "proposals.WishartGammaNormal.wishart.entropy"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy"], ["", "def", "entropy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "gamma", ".", "entropy", "(", ")", "+", "self", ".", "wishart", ".", "entropy", "(", ")", "+", "self", ".", "normal", ".", "entropy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.__init__": [[305, 310], ["proposals.SqrtWishart", "torch.distributions.MultivariateNormal", "torch.eye"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "variables", ")", ":", "\n", "        ", "d", "=", "variables", "[", "'loc'", "]", ".", "shape", "[", "0", "]", "\n", "self", ".", "wishart", "=", "SqrtWishart", "(", "{", "'df'", ":", "variables", "[", "'df'", "]", ",", "'W'", ":", "variables", "[", "'W'", "]", "}", ")", "\n", "self", ".", "normal", "=", "MVN_torch", "(", "loc", "=", "variables", "[", "'loc'", "]", ",", "\n", "covariance_matrix", "=", "variables", "[", "'alpha'", "]", "*", "torch", ".", "eye", "(", "d", ",", "dtype", "=", "torch", ".", "double", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample": [[311, 315], ["proposals.WishartNormal.wishart.sample", "proposals.WishartNormal.normal.sample", "vinf.utils.tl2lt"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt"], ["", "def", "sample", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ")", ":", "\n", "        ", "P_samples", "=", "self", ".", "wishart", ".", "sample", "(", "sample_shape", ")", "\n", "mu_samples", "=", "self", ".", "normal", ".", "sample", "(", "sample_shape", ")", "\n", "return", "tl2lt", "(", "(", "P_samples", ",", "mu_samples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample_pos_neg": [[316, 325], ["proposals.WishartNormal.wishart.sample_pos_neg", "proposals.WishartNormal.normal.sample", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "vinf.utils.tl2lt", "float"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample_pos_neg", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.sample", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt"], ["", "def", "sample_pos_neg", "(", "self", ",", "sample_shape", "=", "(", "1", ",", ")", ",", "eps", "=", "None", ")", ":", "\n", "        ", "if", "eps", "is", "None", ":", "\n", "            ", "eps", "=", "{", "'W_df'", ":", "2", "*", "self", ".", "wishart", ".", "W", ".", "shape", "[", "0", "]", "}", "\n", "", "P_neg", ",", "P", ",", "P_pos", "=", "self", ".", "wishart", ".", "sample_pos_neg", "(", "sample_shape", ",", "float", "(", "eps", ")", ")", "\n", "mus", "=", "self", ".", "normal", ".", "sample", "(", "sample_shape", ")", "\n", "samples_neg", "=", "tl2lt", "(", "(", "P_neg", ",", "mus", ")", ")", "\n", "samples", "=", "tl2lt", "(", "(", "P", ",", "mus", ")", ")", "\n", "samples_pos", "=", "tl2lt", "(", "(", "P_pos", ",", "mus", ")", ")", "\n", "return", "samples_neg", ",", "samples", ",", "samples_pos", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob": [[326, 329], ["proposals.WishartNormal.wishart.log_prob", "proposals.WishartNormal.normal.log_prob"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.log_prob"], ["", "def", "log_prob", "(", "self", ",", "Pmu", ")", ":", "\n", "        ", "P", ",", "mu", "=", "Pmu", "\n", "return", "self", ".", "wishart", ".", "log_prob", "(", "P", ")", "+", "self", ".", "normal", ".", "log_prob", "(", "mu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy": [[330, 332], ["proposals.WishartNormal.wishart.entropy", "proposals.WishartNormal.normal.entropy"], "methods", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.proposals.WishartNormal.entropy"], ["", "def", "entropy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "wishart", ".", "entropy", "(", ")", "+", "self", ".", "normal", ".", "entropy", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.gamma_functions.mvlgamma": [[6, 16], ["range", "math.log", "torch.lgamma"], "function", ["None"], ["def", "mvlgamma", "(", "x", ",", "p", ")", ":", "\n", "    ", "\"\"\"\n    :param x: Torch Tensor 1D\n    :param p: int\n    :return: Torch Tensor\n    \"\"\"", "\n", "g", "=", "p", "*", "(", "p", "-", "1", ")", "/", "4", "*", "log", "(", "pi", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "p", "+", "1", ")", ":", "\n", "        ", "g", "+=", "torch", ".", "lgamma", "(", "x", "+", "(", "1", "-", "i", ")", "/", "2", ")", "\n", "", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.gamma_functions.mvdigamma": [[18, 28], ["range", "torch.digamma"], "function", ["None"], ["", "def", "mvdigamma", "(", "x", ",", "p", ")", ":", "\n", "    ", "\"\"\"\n    :param x: Torch Tensor 1D\n    :param p: int\n    :return: Torch Tensor\n    \"\"\"", "\n", "g", "=", "0", "\n", "for", "i", "in", "range", "(", "1", ",", "p", "+", "1", ")", ":", "\n", "        ", "g", "+=", "torch", ".", "digamma", "(", "x", "+", "(", "1", "-", "i", ")", "/", "2", ")", "\n", "", "return", "g", "\n", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.get_optimizer_dict": [[11, 14], ["None"], "function", ["None"], ["def", "get_optimizer_dict", "(", ")", ":", "\n", "    ", "return", "{", "'Adam'", ":", "Adam", ",", "'Adagrad'", ":", "Adagrad", ",", "\n", "'Adadelta'", ":", "Adadelta", ",", "'ASGD'", ":", "ASGD", ",", "'SGD'", ":", "SGD", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.get_optimizer": [[16, 19], ["utils.get_optimizer_dict"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.get_optimizer_dict"], ["", "def", "get_optimizer", "(", "name", ")", ":", "\n", "    ", "d", "=", "get_optimizer_dict", "(", ")", "\n", "return", "d", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.sigmoid": [[21, 23], ["numpy.exp"], "function", ["None"], ["", "def", "sigmoid", "(", "x", ")", ":", "\n", "    ", "return", "1", "/", "(", "1", "+", "np", ".", "exp", "(", "-", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.cast": [[25, 27], ["torch.from_numpy", "x.astype"], "function", ["None"], ["", "def", "cast", "(", "x", ")", ":", "\n", "    ", "return", "torch", ".", "from_numpy", "(", "x", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.tl2lt": [[29, 31], ["list", "zip"], "function", ["None"], ["", "def", "tl2lt", "(", "a", ")", ":", "\n", "    ", "return", "list", "(", "zip", "(", "*", "a", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.downsample": [[33, 44], ["pandas.DataFrame", "numpy.arange", "len", "data.iloc[].mean", "data.iloc[].sum", "ValueError", "str"], "function", ["None"], ["", "def", "downsample", "(", "data", ",", "sample_step", ",", "style", "=", "'sum'", ")", ":", "\n", "    ", "new_df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "data", ".", "columns", ")", "\n", "for", "i", "in", "np", ".", "arange", "(", "0", ",", "len", "(", "data", ")", ",", "sample_step", ")", ":", "\n", "        ", "time", "=", "data", ".", "index", "[", "i", "]", "\n", "if", "style", "==", "'mean'", ":", "\n", "            ", "new_df", ".", "loc", "[", "time", "]", "=", "data", ".", "iloc", "[", "i", ":", "i", "+", "sample_step", "]", ".", "mean", "(", ")", "\n", "", "elif", "style", "==", "'sum'", ":", "\n", "            ", "new_df", ".", "loc", "[", "time", "]", "=", "data", ".", "iloc", "[", "i", ":", "i", "+", "sample_step", "]", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "str", "(", "style", ")", "+", "' not in {mean, sum}'", ")", "\n", "", "", "return", "new_df", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.load_stock_growth": [[46, 62], ["os.listdir", "pandas.concat", "pandas.to_datetime", "pandas.read_csv", "f", "frames.dropna.append", "frames.dropna.dropna", "f_name.split", "frame[].rolling().apply", "frame[].rolling"], "function", ["None"], ["", "def", "load_stock_growth", "(", "log", "=", "True", ",", "drop_na", "=", "True", ",", "style", "=", "'Open'", ")", ":", "\n", "# style defines if using open or 'Close' values", "\n", "    ", "frames", "=", "[", "]", "\n", "for", "f_name", "in", "os", ".", "listdir", "(", "data_dir", ")", ":", "\n", "        ", "if", "'.csv'", "not", "in", "f_name", ":", "\n", "            ", "continue", "\n", "", "frame", "=", "pd", ".", "read_csv", "(", "data_dir", "+", "f_name", ",", "index_col", "=", "0", ")", "\n", "col_name", "=", "f_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "f", "=", "np", ".", "log", "if", "log", "else", "lambda", "x", ":", "x", "\n", "frame", "[", "col_name", "]", "=", "f", "(", "frame", "[", "style", "]", ".", "rolling", "(", "2", ",", "2", ")", ".", "apply", "(", "lambda", "x", ":", "x", "[", "1", "]", "/", "x", "[", "0", "]", ")", ")", "\n", "frames", ".", "append", "(", "frame", "[", "col_name", "]", ")", "\n", "", "frames", "=", "pd", ".", "concat", "(", "frames", ",", "axis", "=", "1", ")", "\n", "if", "drop_na", ":", "\n", "        ", "frames", "=", "frames", ".", "dropna", "(", "axis", "=", "0", ",", "how", "=", "'any'", ")", "\n", "", "frames", ".", "index", "=", "pd", ".", "to_datetime", "(", "frames", ".", "index", ")", "\n", "return", "frames", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.symmetrize": [[64, 68], ["variables.items", "value.grad.t"], "function", ["None"], ["", "def", "symmetrize", "(", "variables", ")", ":", "\n", "    ", "for", "name", ",", "value", "in", "variables", ".", "items", "(", ")", ":", "\n", "        ", "if", "name", "in", "{", "'W'", ",", "'Sig'", ",", "'S'", "}", "and", "value", ".", "grad", "is", "not", "None", ":", "\n", "            ", "value", ".", "grad", "=", "0.5", "*", "value", ".", "grad", ".", "t", "(", ")", "+", "0.5", "*", "value", ".", "grad", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.GammaNormal.__init__": [[9, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mu", ",", "tau", ")", ":", "\n", "        ", "self", ".", "mu", "=", "mu", "\n", "self", ".", "tau", "=", "tau", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.GammaNormal.generate": [[13, 18], ["numpy.random.seed", "data.astype.astype.astype", "torch.from_numpy", "numpy.random.randn", "numpy.sqrt"], "methods", ["None"], ["", "def", "generate", "(", "self", ",", "n", ",", "seed", "=", "None", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "data", "=", "self", ".", "mu", "+", "np", ".", "random", ".", "randn", "(", "n", ")", "*", "np", ".", "sqrt", "(", "1", "/", "self", ".", "tau", ")", "\n", "data", "=", "data", ".", "astype", "(", "np", ".", "float64", ")", "\n", "return", "torch", ".", "from_numpy", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.BostonHousing": [[20, 38], ["sklearn.datasets.load_boston", "sklearn.model_selection.train_test_split", "np.hstack.mean", "np.hstack.std", "numpy.linalg.svd", "np.hstack.dot", "np.hstack.dot", "numpy.hstack", "numpy.hstack", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "np.hstack.astype", "y.reshape().astype", "np.hstack.astype", "y_test.reshape().astype", "numpy.ones", "numpy.ones", "y.reshape", "y_test.reshape"], "function", ["None"], ["", "", "def", "BostonHousing", "(", "decorrelate", ",", "std", "=", "True", ",", "add_ones", "=", "True", ",", "dim", "=", "20", ")", ":", "\n", "    ", "X", ",", "y", "=", "load_boston", "(", "return_X_y", "=", "True", ")", "\n", "X", ",", "X_test", ",", "y", ",", "y_test", "=", "train_test_split", "(", "X", ",", "y", ")", "\n", "mean", "=", "X", ".", "mean", "(", "axis", "=", "0", ")", "\n", "X", ",", "X_test", "=", "(", "X", "-", "mean", ")", ",", "(", "X_test", "-", "mean", ")", "\n", "if", "std", ":", "\n", "        ", "Xstd", "=", "X", ".", "std", "(", "axis", "=", "0", ")", "\n", "X", "=", "X", "/", "Xstd", "\n", "X_test", "=", "X_test", "/", "Xstd", "\n", "", "if", "decorrelate", ":", "\n", "        ", "U", ",", "S", ",", "V", "=", "np", ".", "linalg", ".", "svd", "(", "X", ")", "\n", "X", "=", "X", ".", "dot", "(", "V", ".", "T", "[", ":", ",", ":", "dim", "]", ")", "\n", "X_test", "=", "X_test", ".", "dot", "(", "V", ".", "T", "[", ":", ",", ":", "dim", "]", ")", "\n", "", "if", "add_ones", ":", "\n", "        ", "X", "=", "np", ".", "hstack", "(", "[", "X", ",", "np", ".", "ones", "(", "(", "X", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "]", ")", "\n", "X_test", "=", "np", ".", "hstack", "(", "[", "X_test", ",", "np", ".", "ones", "(", "(", "X_test", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "]", ")", "\n", "", "return", "(", "torch", ".", "from_numpy", "(", "X", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "torch", ".", "from_numpy", "(", "y", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "\n", "torch", ".", "from_numpy", "(", "X_test", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "torch", ".", "from_numpy", "(", "y_test", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "astype", "(", "np", ".", "float64", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.datasets.DowJones": [[40, 53], ["vinf.utils.load_stock_growth", "vinf.utils.downsample", "print", "numpy.random.choice", "torch.from_numpy", "torch.from_numpy", "X.mean", "X.astype", "X_test.astype"], "function", ["home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.load_stock_growth", "home.repos.pwc.inspect_result.AlexImmer_VIND.vinf.utils.downsample"], ["", "def", "DowJones", "(", "sub_mean", "=", "True", ",", "dim", "=", "20", ",", "factor", "=", "1e3", ",", "offset", "=", "110", ")", ":", "\n", "    ", "data", "=", "load_stock_growth", "(", "log", "=", "True", ",", "drop_na", "=", "True", ")", "\n", "data", "=", "downsample", "(", "data", "=", "data", ",", "sample_step", "=", "5", ")", "\n", "data", "=", "data", ".", "iloc", "[", "offset", ":", "]", "\n", "X", "=", "factor", "*", "data", ".", "values", "\n", "if", "sub_mean", ":", "\n", "        ", "print", "(", "\"WARNING: should not subtract mean on training data.\"", ")", "\n", "X", "=", "X", "-", "X", ".", "mean", "(", "axis", "=", "0", ")", "\n", "", "if", "dim", "!=", "29", ":", "\n", "        ", "stock_select", "=", "np", ".", "random", ".", "choice", "(", "X", ".", "shape", "[", "1", "]", ",", "dim", ",", "replace", "=", "False", ")", "\n", "X", "=", "X", "[", ":", ",", "stock_select", "]", "\n", "", "X", ",", "X_test", "=", "X", "[", ":", "300", "]", ",", "X", "[", "300", ":", "]", "\n", "return", "torch", ".", "from_numpy", "(", "X", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "torch", ".", "from_numpy", "(", "X_test", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "", ""]]}