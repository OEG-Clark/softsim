{"home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.attack_cifar.test": [[92, 112], ["net.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "net", "criterion", "criterion.item", "net.max", "targets.size", "predicted.eq().sum().item", "utils.progress_bar", "inputs.to", "targets.to", "len", "predicted.eq().sum", "predicted.eq"], "function", ["None"], ["def", "test", "(", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "outputs", "=", "net", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "test_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predicted", "=", "outputs", ".", "max", "(", "1", ")", "\n", "total", "+=", "targets", ".", "size", "(", "0", ")", "\n", "correct", "+=", "predicted", ".", "eq", "(", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "testloader", ")", ",", "'Loss: %.3f | Acc: %.3f%% (%d/%d)'", "\n", "%", "(", "test_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "100.", "*", "correct", "/", "total", ",", "correct", ",", "total", ")", ")", "\n", "\n", "", "", "acc", "=", "100.", "*", "correct", "/", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.attack_cifar.test_attack": [[113, 150], ["net.eval", "enumerate", "pgd.attack", "net", "criterion", "criterion.item", "net.max", "targets.size", "predicted.eq().sum().item", "all_epsilons.append", "utils.progress_bar", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "inputs.to", "targets.to", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "normalize", "len", "unnormalize", "predicted.eq().sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().float().mean().item", "torch.cat().float().mean().item", "torch.cat().float().mean().item", "torch.cat().float().mean().item", "torch.cat().float().mean().item", "predicted.eq", "torch.cat().float().mean", "torch.cat().float().mean", "torch.cat().float().mean", "torch.cat().float().mean", "torch.cat().float().mean", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.pgd.attack"], ["", "def", "test_attack", "(", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "all_epsilons", "=", "[", "]", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "        ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "inputs_pgd", ",", "_", ",", "epsilons", "=", "attack", "(", "torch", ".", "clamp", "(", "unnormalize", "(", "inputs", ")", ",", "min", "=", "0", ")", ",", "\n", "targets", ",", "net", ",", "\n", "normalize", "=", "normalize", ",", "\n", "regularization", "=", "regularization", ",", "\n", "p", "=", "args", ".", "p", ",", "\n", "alpha", "=", "args", ".", "alpha", ",", "\n", "norm", "=", "args", ".", "norm", ",", "\n", "ball", "=", "args", ".", "ball", ",", "\n", "epsilon", "=", "0.001", ",", "\n", "epsilon_factor", "=", "1.17", ",", "\n", "maxiters", "=", "400", ")", "\n", "\n", "outputs_pgd", "=", "net", "(", "normalize", "(", "inputs_pgd", ")", ")", "\n", "loss", "=", "criterion", "(", "outputs_pgd", ",", "targets", ")", "\n", "\n", "test_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predicted", "=", "outputs_pgd", ".", "max", "(", "1", ")", "\n", "total", "+=", "targets", ".", "size", "(", "0", ")", "\n", "correct", "+=", "predicted", ".", "eq", "(", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "epsilons", "[", "predicted", "==", "targets", "]", "=", "-", "1", "\n", "all_epsilons", ".", "append", "(", "epsilons", ")", "\n", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "testloader", ")", ",", "'Loss: %.3f | Acc: %.3f%% (%d/%d) | Avg epsilon: %.3f'", "\n", "%", "(", "test_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "100.", "*", "correct", "/", "total", ",", "correct", ",", "total", ",", "torch", ".", "cat", "(", "all_epsilons", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", ")", ")", "\n", "\n", "acc", "=", "100.", "*", "correct", "/", "total", "\n", "torch", ".", "save", "(", "(", "acc", ",", "torch", ".", "cat", "(", "all_epsilons", ")", ")", ",", "save_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.attack_mnist.Flatten.forward": [[59, 61], ["x.view", "x.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.attack_mnist.test": [[107, 130], ["net.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "net", "criterion", "criterion.item", "net.max", "targets.size", "predicted.eq().sum().item", "utils.progress_bar", "inputs.to", "targets.to", "len", "predicted.eq().sum", "predicted.eq"], "function", ["None"], ["def", "test", "(", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "if", "binarize", ":", "\n", "                ", "inputs", "=", "(", "inputs", ">=", "0.5", ")", ".", "float", "(", ")", "\n", "", "outputs", "=", "net", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "test_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predicted", "=", "outputs", ".", "max", "(", "1", ")", "\n", "total", "+=", "targets", ".", "size", "(", "0", ")", "\n", "correct", "+=", "predicted", ".", "eq", "(", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "testloader", ")", ",", "'Loss: %.3f | Acc: %.3f%% (%d/%d)'", "\n", "%", "(", "test_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "100.", "*", "correct", "/", "total", ",", "correct", ",", "total", ")", ")", "\n", "\n", "# Save checkpoint.", "\n", "", "", "acc", "=", "100.", "*", "correct", "/", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.attack_mnist.test_attack": [[131, 166], ["net.eval", "enumerate", "pgd.attack", "net", "criterion", "criterion.item", "net.max", "targets.size", "predicted.eq().sum().item", "all_epsilons.append", "utils.progress_bar", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "inputs.to", "targets.to", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "len", "predicted.eq().sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().float().mean().item", "torch.cat().float().mean().item", "torch.cat().float().mean().item", "torch.cat().float().mean().item", "torch.cat().float().mean().item", "predicted.eq", "torch.cat().float().mean", "torch.cat().float().mean", "torch.cat().float().mean", "torch.cat().float().mean", "torch.cat().float().mean", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.pgd.attack"], ["", "def", "test_attack", "(", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "all_epsilons", "=", "[", "]", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "        ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "if", "binarize", ":", "\n", "            ", "inputs", "=", "(", "inputs", ">=", "0.5", ")", ".", "float", "(", ")", "\n", "\n", "", "inputs_pgd", ",", "_", ",", "epsilons", "=", "attack", "(", "torch", ".", "clamp", "(", "inputs", ",", "min", "=", "0", ")", ",", "targets", ",", "net", ",", "\n", "regularization", "=", "regularization", ",", "\n", "p", "=", "args", ".", "p", ",", "\n", "alpha", "=", "args", ".", "alpha", ",", "\n", "norm", "=", "args", ".", "norm", ",", "\n", "ball", "=", "args", ".", "ball", ",", "\n", "epsilon", "=", "0.7", ",", "maxiters", "=", "200", ",", "kernel_size", "=", "7", ")", "\n", "\n", "outputs_pgd", "=", "net", "(", "inputs_pgd", ")", "\n", "loss", "=", "criterion", "(", "outputs_pgd", ",", "targets", ")", "\n", "\n", "test_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predicted", "=", "outputs_pgd", ".", "max", "(", "1", ")", "\n", "total", "+=", "targets", ".", "size", "(", "0", ")", "\n", "correct", "+=", "predicted", ".", "eq", "(", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "epsilons", "[", "predicted", "==", "targets", "]", "=", "-", "1", "\n", "all_epsilons", ".", "append", "(", "epsilons", ")", "\n", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "testloader", ")", ",", "'Loss: %.3f | Acc: %.3f%% (%d/%d) | Avg epsilon: %.3f'", "\n", "%", "(", "test_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "100.", "*", "correct", "/", "total", ",", "correct", ",", "total", ",", "torch", ".", "cat", "(", "all_epsilons", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", ")", ")", "\n", "\n", "acc", "=", "100.", "*", "correct", "/", "total", "\n", "torch", ".", "save", "(", "(", "acc", ",", "torch", ".", "cat", "(", "all_epsilons", ")", ")", ",", "save_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.pgd.attack": [[10, 83], ["X.size", "projected_sinkhorn.wasserstein_cost", "X.view().sum().view", "X.clone", "X.clone", "epsilon.clone", "float", "X.new_ones", "torch.SGD", "optim.SGD.zero_grad", "loss.backward", "X.view().sum", "net().max", "torch.CrossEntropyLoss", "net", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.clamp", "torch.clamp", "torch.clamp", "normalize", "err.sum().item", "torch.max.clone", "epsilon.clone", "print", "X.view", "net", "torch.sign", "torch.sign", "torch.sign", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "ValueError", "net().max", "err_best.sum().item", "loss.item", "epsilon.mean().item", "normalize", "torch.max.view().sum().view", "ValueError", "projected_sinkhorn.projected_sinkhorn", "err.sum", "torch.max.grad.view().norm().view", "epsilon.view", "epsilon.view", "net", "err_best.sum", "epsilon.mean", "X.size", "torch.max.view().sum", "projected_sinkhorn.conjugate_sinkhorn", "X.clone", "torch.max.detach", "X.size", "X.size", "normalize", "torch.max.grad.view().norm", "torch.max.view", "torch.max.clone", "torch.max.grad.view", "X.size"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.wasserstein_cost", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.projected_sinkhorn", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.conjugate_sinkhorn"], ["def", "attack", "(", "X", ",", "y", ",", "net", ",", "epsilon", "=", "0.01", ",", "epsilon_iters", "=", "10", ",", "epsilon_factor", "=", "1.1", ",", "\n", "p", "=", "2", ",", "kernel_size", "=", "5", ",", "maxiters", "=", "400", ",", "\n", "alpha", "=", "0.1", ",", "xmin", "=", "0", ",", "xmax", "=", "1", ",", "normalize", "=", "lambda", "x", ":", "x", ",", "verbose", "=", "0", ",", "\n", "regularization", "=", "1000", ",", "sinkhorn_maxiters", "=", "400", ",", "\n", "ball", "=", "'wasserstein'", ",", "norm", "=", "'l2'", ")", ":", "\n", "    ", "batch_size", "=", "X", ".", "size", "(", "0", ")", "\n", "epsilon", "=", "X", ".", "new_ones", "(", "batch_size", ")", "*", "epsilon", "\n", "C", "=", "wasserstein_cost", "(", "X", ",", "p", "=", "p", ",", "kernel_size", "=", "kernel_size", ")", "\n", "normalization", "=", "X", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "sum", "(", "-", "1", ")", ".", "view", "(", "batch_size", ",", "1", ",", "1", ",", "1", ")", "\n", "X_", "=", "X", ".", "clone", "(", ")", "\n", "\n", "X_best", "=", "X", ".", "clone", "(", ")", "\n", "err_best", "=", "err", "=", "net", "(", "normalize", "(", "X", ")", ")", ".", "max", "(", "1", ")", "[", "1", "]", "!=", "y", "\n", "epsilon_best", "=", "epsilon", ".", "clone", "(", ")", "\n", "\n", "t", "=", "0", "\n", "while", "True", ":", "\n", "        ", "X_", ".", "requires_grad", "=", "True", "\n", "opt", "=", "optim", ".", "SGD", "(", "[", "X_", "]", ",", "lr", "=", "0.1", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "net", "(", "normalize", "(", "X_", ")", ")", ",", "y", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "# take a step", "\n", "            ", "if", "norm", "==", "'linfinity'", ":", "\n", "                ", "X_", "[", "~", "err", "]", "+=", "alpha", "*", "torch", ".", "sign", "(", "X_", ".", "grad", "[", "~", "err", "]", ")", "\n", "", "elif", "norm", "==", "'l2'", ":", "\n", "                ", "X_", "[", "~", "err", "]", "+=", "(", "alpha", "*", "X_", ".", "grad", "/", "(", "X_", ".", "grad", ".", "view", "(", "X", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "norm", "(", "dim", "=", "1", ")", ".", "view", "(", "X", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ")", ")", "[", "~", "err", "]", "\n", "", "elif", "norm", "==", "'wasserstein'", ":", "\n", "                ", "sd_normalization", "=", "X_", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "sum", "(", "-", "1", ")", ".", "view", "(", "batch_size", ",", "1", ",", "1", ",", "1", ")", "\n", "X_", "[", "~", "err", "]", "=", "(", "conjugate_sinkhorn", "(", "X_", ".", "clone", "(", ")", "/", "sd_normalization", ",", "\n", "X_", ".", "grad", ",", "C", ",", "alpha", ",", "regularization", ",", "\n", "verbose", "=", "verbose", ",", "maxiters", "=", "sinkhorn_maxiters", "\n", ")", "*", "sd_normalization", ")", "[", "~", "err", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"Unknown norm\"", ")", "\n", "\n", "# project onto ball", "\n", "", "if", "ball", "==", "'wasserstein'", ":", "\n", "                ", "X_", "[", "~", "err", "]", "=", "(", "projected_sinkhorn", "(", "X", ".", "clone", "(", ")", "/", "normalization", ",", "\n", "X_", ".", "detach", "(", ")", "/", "normalization", ",", "\n", "C", ",", "\n", "epsilon", ",", "\n", "regularization", ",", "\n", "verbose", "=", "verbose", ",", "\n", "maxiters", "=", "sinkhorn_maxiters", ")", "*", "normalization", ")", "[", "~", "err", "]", "\n", "", "elif", "ball", "==", "'linfinity'", ":", "\n", "                ", "X_", "=", "torch", ".", "min", "(", "X_", ",", "X", "+", "epsilon", ".", "view", "(", "X", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "X_", "=", "torch", ".", "max", "(", "X_", ",", "X", "-", "epsilon", ".", "view", "(", "X", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"Unknown ball\"", ")", "\n", "", "X_", "=", "torch", ".", "clamp", "(", "X_", ",", "min", "=", "xmin", ",", "max", "=", "xmax", ")", "\n", "\n", "err", "=", "(", "net", "(", "normalize", "(", "X_", ")", ")", ".", "max", "(", "1", ")", "[", "1", "]", "!=", "y", ")", "\n", "err_rate", "=", "err", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "batch_size", "\n", "if", "err_rate", ">", "err_best", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "batch_size", ":", "\n", "                ", "X_best", "=", "X_", ".", "clone", "(", ")", "\n", "err_best", "=", "err", "\n", "epsilon_best", "=", "epsilon", ".", "clone", "(", ")", "\n", "\n", "", "if", "verbose", "and", "t", "%", "verbose", "==", "0", ":", "\n", "                ", "print", "(", "t", ",", "loss", ".", "item", "(", ")", ",", "epsilon", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "err_rate", ")", "\n", "\n", "", "t", "+=", "1", "\n", "if", "err_rate", "==", "1", "or", "t", "==", "maxiters", ":", "\n", "                ", "break", "\n", "\n", "", "if", "t", ">", "0", "and", "t", "%", "epsilon_iters", "==", "0", ":", "\n", "                ", "epsilon", "[", "~", "err", "]", "*=", "epsilon_factor", "\n", "\n", "", "", "", "epsilon_best", "[", "~", "err", "]", "=", "float", "(", "'inf'", ")", "\n", "return", "X_best", ",", "err_best", ",", "epsilon_best", "\n", "", ""]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.adv_training_cifar.test_nominal": [[83, 104], ["net.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "net", "criterion", "criterion.item", "net.max", "targets.size", "predicted.eq().sum().item", "utils.progress_bar", "inputs.to", "targets.to", "len", "predicted.eq().sum", "predicted.eq"], "function", ["None"], ["def", "test_nominal", "(", "epoch", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "outputs", "=", "net", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "test_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predicted", "=", "outputs", ".", "max", "(", "1", ")", "\n", "total", "+=", "targets", ".", "size", "(", "0", ")", "\n", "correct", "+=", "predicted", ".", "eq", "(", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "testloader", ")", ",", "'Loss: %.3f | Acc: %.3f%% (%d/%d)'", "\n", "%", "(", "test_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "100.", "*", "correct", "/", "total", ",", "correct", ",", "total", ")", ")", "\n", "\n", "# Save checkpoint.", "\n", "", "", "acc", "=", "100.", "*", "correct", "/", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.adv_training_cifar.train": [[123, 164], ["print", "net.train", "enumerate", "pgd.attack", "optimizer.zero_grad", "net", "criterion", "criterion.backward", "optimizer.step", "utils.progress_bar", "inputs.to", "targets.to", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "normalize", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "net", "net.max", "predicted_nominal.eq().sum().item", "criterion.item", "net.max", "targets.size", "predicted.eq().sum().item", "epsilons.sum().item", "len", "unnormalize", "inputs_pgd.detach", "predicted_nominal.eq().sum", "predicted.eq().sum", "epsilons.sum", "predicted_nominal.eq", "predicted.eq"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.adv_training_cifar.train", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.pgd.attack"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "print", "(", "'\\nEpoch: %d'", "%", "epoch", ")", "\n", "net", ".", "train", "(", ")", "\n", "train_loss", "=", "0", "\n", "correct", "=", "0", "\n", "nominal_correct", "=", "0", "\n", "total_epsilon", "=", "0", "\n", "total", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "\n", "inputs_pgd", ",", "_", ",", "epsilons", "=", "attack", "(", "torch", ".", "clamp", "(", "unnormalize", "(", "inputs", ")", ",", "min", "=", "0", ")", ",", "\n", "targets", ",", "net", ",", "p", "=", "args", ".", "p", ",", "normalize", "=", "normalize", ",", "\n", "epsilon_factor", "=", "1.5", ",", "epsilon", "=", "0.01", ",", "maxiters", "=", "50", ",", "\n", "epsilon_iters", "=", "5", ",", "\n", "regularization", "=", "args", ".", "reg", ",", "\n", "alpha", "=", "args", ".", "alpha", ",", "\n", "norm", "=", "args", ".", "norm", ",", "\n", "ball", "=", "args", ".", "ball", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "net", "(", "normalize", "(", "inputs_pgd", ".", "detach", "(", ")", ")", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs_nominal", "=", "net", "(", "inputs", ")", "\n", "_", ",", "predicted_nominal", "=", "outputs_nominal", ".", "max", "(", "1", ")", "\n", "nominal_correct", "+=", "predicted_nominal", ".", "eq", "(", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "train_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predicted", "=", "outputs", ".", "max", "(", "1", ")", "\n", "total", "+=", "targets", ".", "size", "(", "0", ")", "\n", "correct", "+=", "predicted", ".", "eq", "(", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_epsilon", "+=", "epsilons", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "progress_bar", "(", "batch_idx", ",", "len", "(", "trainloader", ")", ",", "'Loss: %.3f | Adv Acc: %.3f%% (%d/%d) | Acc: %.3f%% (%d/%d) | Eps: %.3f%%'", "\n", "%", "(", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "100.", "*", "correct", "/", "total", ",", "correct", ",", "total", ",", "\n", "100.", "*", "nominal_correct", "/", "total", ",", "nominal_correct", ",", "total", ",", "\n", "total_epsilon", "/", "total", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.adv_training_cifar.test": [[165, 215], ["net.eval", "enumerate", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "pgd.attack", "net.state_dict", "os.path.isdir", "os.mkdir", "checkpoint_file.format", "inputs.to", "targets.to", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "net", "criterion", "net", "net.max", "predicted_nominal.eq().sum().item", "criterion.item", "net.max", "targets.size", "predicted.eq().sum().item", "epsilons.sum().item", "utils.progress_bar", "unnormalize", "normalize", "len", "predicted_nominal.eq().sum", "predicted.eq().sum", "epsilons.sum", "predicted_nominal.eq", "predicted.eq"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.None.pgd.attack"], ["", "", "def", "test", "(", "epoch", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "nominal_correct", "=", "0", "\n", "total", "=", "0", "\n", "total_epsilon", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "        ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "\n", "inputs_pgd", ",", "_", ",", "epsilons", "=", "attack", "(", "torch", ".", "clamp", "(", "unnormalize", "(", "inputs", ")", ",", "min", "=", "0", ")", ",", "\n", "targets", ",", "net", ",", "p", "=", "args", ".", "p", ",", "normalize", "=", "normalize", ",", "\n", "epsilon_factor", "=", "1.5", ",", "epsilon", "=", "0.01", ",", "maxiters", "=", "50", ",", "\n", "epsilon_iters", "=", "5", ",", "\n", "regularization", "=", "args", ".", "reg", ",", "\n", "alpha", "=", "args", ".", "alpha", ",", "\n", "norm", "=", "args", ".", "norm", ",", "\n", "ball", "=", "args", ".", "ball", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", "=", "net", "(", "normalize", "(", "inputs_pgd", ")", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "outputs_nominal", "=", "net", "(", "inputs", ")", "\n", "_", ",", "predicted_nominal", "=", "outputs_nominal", ".", "max", "(", "1", ")", "\n", "nominal_correct", "+=", "predicted_nominal", ".", "eq", "(", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "test_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predicted", "=", "outputs", ".", "max", "(", "1", ")", "\n", "total", "+=", "targets", ".", "size", "(", "0", ")", "\n", "correct", "+=", "predicted", ".", "eq", "(", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_epsilon", "+=", "epsilons", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "testloader", ")", ",", "'Loss: %.3f | Adv Acc: %.3f%% (%d/%d) | Acc: %.3f%% (%d/%d) | Eps: %.3f%%'", "\n", "%", "(", "test_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "100.", "*", "correct", "/", "total", ",", "correct", ",", "total", ",", "\n", "100.", "*", "nominal_correct", "/", "total", ",", "nominal_correct", ",", "total", ",", "total_epsilon", "/", "total", ")", ")", "\n", "\n", "# Save checkpoint.", "\n", "", "", "acc", "=", "100.", "*", "correct", "/", "total", "\n", "eps", "=", "total_epsilon", "/", "total", "\n", "\n", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "net", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "acc", ",", "\n", "'eps'", ":", "eps", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "checkpoint_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "checkpoint_dir", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "checkpoint_file", ".", "format", "(", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.lambertw.evalpoly": [[9, 12], ["torch.arange().float().to", "torch.arange().float", "torch.arange", "z.unsqueeze"], "function", ["None"], ["def", "evalpoly", "(", "coeff", ",", "degree", ",", "z", ")", ":", "\n", "    ", "powers", "=", "torch", ".", "arange", "(", "degree", ",", "-", "1", ",", "-", "1", ")", ".", "float", "(", ")", ".", "to", "(", "z", ".", "device", ")", "\n", "return", "(", "(", "z", ".", "unsqueeze", "(", "-", "1", ")", "**", "powers", ")", "*", "coeff", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.lambertw.lambertw": [[13, 80], ["torch.isnan().any", "z0.new", "I_pade0.any", "I_asy.any", "I_pos.any", "I_neg.any", "torch.abs", "torch.Tensor().to", "torch.Tensor().to", "torch.log", "range", "range", "torch.isnan", "z0.size", "lambertw.evalpoly", "torch.log", "torch.exp", "torch.exp", "torch.Tensor", "torch.Tensor", "lambertw.evalpoly", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.lambertw.evalpoly", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.lambertw.evalpoly"], ["", "def", "lambertw", "(", "z0", ",", "tol", "=", "1e-5", ")", ":", "\n", "# this is a direct port of the scipy version for the ", "\n", "# k=0 branch for *positive* z0 (z0 >= 0)", "\n", "\n", "# skip handling of nans", "\n", "    ", "if", "torch", ".", "isnan", "(", "z0", ")", ".", "any", "(", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "w0", "=", "z0", ".", "new", "(", "*", "z0", ".", "size", "(", ")", ")", "\n", "# under the assumption that z0 >= 0, then I_branchpt ", "\n", "# is never used. ", "\n", "I_branchpt", "=", "torch", ".", "abs", "(", "z0", "+", "EXPN1", ")", "<", "0.3", "\n", "I_pade0", "=", "(", "-", "1.0", "<", "z0", ")", "*", "(", "z0", "<", "1.5", ")", "\n", "I_asy", "=", "~", "(", "I_branchpt", "|", "I_pade0", ")", "\n", "if", "I_pade0", ".", "any", "(", ")", ":", "\n", "        ", "z", "=", "z0", "[", "I_pade0", "]", "\n", "num", "=", "torch", ".", "Tensor", "(", "[", "\n", "12.85106382978723404255", ",", "\n", "12.34042553191489361902", ",", "\n", "1.0", "\n", "]", ")", ".", "to", "(", "z", ".", "device", ")", "\n", "denom", "=", "torch", ".", "Tensor", "(", "[", "\n", "32.53191489361702127660", ",", "\n", "14.34042553191489361702", ",", "\n", "1.0", "\n", "]", ")", ".", "to", "(", "z", ".", "device", ")", "\n", "w0", "[", "I_pade0", "]", "=", "z", "*", "evalpoly", "(", "num", ",", "2", ",", "z", ")", "/", "evalpoly", "(", "denom", ",", "2", ",", "z", ")", "\n", "\n", "", "if", "I_asy", ".", "any", "(", ")", ":", "\n", "        ", "z", "=", "z0", "[", "I_asy", "]", "\n", "w", "=", "torch", ".", "log", "(", "z", ")", "\n", "w0", "[", "I_asy", "]", "=", "w", "-", "torch", ".", "log", "(", "w", ")", "\n", "\n", "# split on positive and negative, ", "\n", "# and ignore the divergent series case (z=1)", "\n", "", "w0", "[", "z0", "==", "1", "]", "=", "OMEGA", "\n", "I_pos", "=", "(", "w0", ">=", "0", ")", "*", "(", "z0", "!=", "1", ")", "\n", "I_neg", "=", "(", "w0", "<", "0", ")", "*", "(", "z0", "!=", "1", ")", "\n", "if", "I_pos", ".", "any", "(", ")", ":", "\n", "        ", "w", "=", "w0", "[", "I_pos", "]", "\n", "z", "=", "z0", "[", "I_pos", "]", "\n", "for", "i", "in", "range", "(", "100", ")", ":", "\n", "# positive case", "\n", "            ", "ew", "=", "torch", ".", "exp", "(", "-", "w", ")", "\n", "wewz", "=", "w", "-", "z", "*", "ew", "\n", "wn", "=", "w", "-", "wewz", "/", "(", "w", "+", "1", "-", "(", "w", "+", "2", ")", "*", "wewz", "/", "(", "2", "*", "w", "+", "2", ")", ")", "\n", "\n", "if", "(", "torch", ".", "abs", "(", "wn", "-", "w", ")", "<", "tol", "*", "torch", ".", "abs", "(", "wn", ")", ")", ".", "all", "(", ")", ":", "\n", "                ", "break", "\n", "", "else", ":", "\n", "                ", "w", "=", "wn", "\n", "", "", "w0", "[", "I_pos", "]", "=", "w", "\n", "\n", "", "if", "I_neg", ".", "any", "(", ")", ":", "\n", "        ", "w", "=", "w0", "[", "I_neg", "]", "\n", "z", "=", "z0", "[", "I_neg", "]", "\n", "for", "i", "in", "range", "(", "100", ")", ":", "\n", "            ", "ew", "=", "torch", ".", "exp", "(", "w", ")", "\n", "wew", "=", "w", "*", "ew", "\n", "wewz", "=", "wew", "-", "z", "\n", "wn", "=", "w", "-", "wewz", "/", "(", "wew", "+", "ew", "-", "(", "w", "+", "2", ")", "*", "wewz", "/", "(", "2", "*", "w", "+", "2", ")", ")", "\n", "if", "(", "torch", ".", "abs", "(", "wn", "-", "w", ")", "<", "tol", "*", "torch", ".", "abs", "(", "wn", ")", ")", ".", "all", "(", ")", ":", "\n", "                ", "break", "\n", "", "else", ":", "\n", "                ", "w", "=", "wn", "\n", "", "", "w0", "[", "I_neg", "]", "=", "wn", "\n", "", "return", "w0", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.any_nan": [[20, 22], ["None"], "function", ["None"], ["def", "any_nan", "(", "X", ")", ":", "\n", "    ", "return", "(", "X", "!=", "X", ")", ".", "any", "(", ")", ".", "item", "(", ")", "\n", "", "def", "any_inf", "(", "X", ")", ":", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.any_inf": [[22, 24], ["float"], "function", ["None"], ["", "def", "any_inf", "(", "X", ")", ":", "\n", "    ", "return", "(", "X", "==", "float", "(", "'inf'", ")", ")", ".", "any", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.lamw_np": [[25, 35], ["x.cpu().numpy.cpu().numpy", "numpy.copy", "numpy.real", "torch.from_numpy", "torch.from_numpy", "scipy.special.lambertw", "numpy.real", "out.cuda.cuda", "x.cpu().numpy.cpu"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.lambertw.lambertw"], ["", "def", "lamw_np", "(", "x", ")", ":", "\n", "    ", "cuda", "=", "x", ".", "is_cuda", "\n", "x", "=", "x", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "I", "=", "x", ">", "1e-10", "\n", "y", "=", "np", ".", "copy", "(", "x", ")", "\n", "y", "[", "I", "]", "=", "np", ".", "real", "(", "lambertw_np", "(", "x", "[", "I", "]", ")", ")", "\n", "out", "=", "torch", ".", "from_numpy", "(", "np", ".", "real", "(", "y", ")", ")", "\n", "if", "cuda", ":", "\n", "        ", "out", "=", "out", ".", "cuda", "(", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.lamw": [[36, 41], ["torch.clone", "torch.clone", "scipy.special.lambertw"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.lambertw.lambertw"], ["", "def", "lamw", "(", "x", ")", ":", "\n", "    ", "I", "=", "x", ">", "1e-10", "\n", "y", "=", "torch", ".", "clone", "(", "x", ")", "\n", "y", "[", "I", "]", "=", "lambertw", "(", "x", "[", "I", "]", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._bdot": [[43, 45], ["torch.matmul().squeeze().squeeze", "torch.matmul().squeeze().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul", "torch.matmul", "X.unsqueeze", "Y.unsqueeze"], "function", ["None"], ["", "def", "_bdot", "(", "X", ",", "Y", ")", ":", "\n", "    ", "return", "torch", ".", "matmul", "(", "X", ".", "unsqueeze", "(", "-", "2", ")", ",", "Y", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._unfold": [[46, 55], ["x.contiguous().view.size", "torch.unfold", "len", "x.contiguous().view.contiguous().view", "len", "out.view.view", "x.contiguous().view.contiguous", "out.view.size"], "function", ["None"], ["", "def", "_unfold", "(", "x", ",", "kernel_size", ",", "padding", "=", "None", ")", ":", "\n", "# this is necessary because unfold isn't implemented for multidimensional batches", "\n", "    ", "size", "=", "x", ".", "size", "(", ")", "\n", "if", "len", "(", "size", ")", ">", "4", ":", "\n", "        ", "x", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "*", "size", "[", "-", "3", ":", "]", ")", "\n", "", "out", "=", "F", ".", "unfold", "(", "x", ",", "kernel_size", ",", "padding", "=", "kernel_size", "//", "2", ")", "\n", "if", "len", "(", "size", ")", ">", "4", ":", "\n", "        ", "out", "=", "out", ".", "view", "(", "*", "size", "[", ":", "-", "3", "]", ",", "*", "out", ".", "size", "(", ")", "[", "1", ":", "]", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._mm": [[57, 65], ["A.size", "_unfold().transpose", "_expand().transpose", "torch.matmul().squeeze", "torch.matmul().squeeze", "projected_sinkhorn.unflatten2", "projected_sinkhorn._unfold", "projected_sinkhorn._expand", "torch.matmul", "torch.matmul", "collapse2().unsqueeze", "A.size", "A.size", "A.size", "projected_sinkhorn.collapse2", "A.contiguous"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.unflatten2", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._unfold", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._expand", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.collapse2"], ["", "def", "_mm", "(", "A", ",", "x", ",", "shape", ")", ":", "\n", "    ", "kernel_size", "=", "A", ".", "size", "(", "-", "1", ")", "\n", "nfilters", "=", "shape", "[", "1", "]", "\n", "unfolded", "=", "_unfold", "(", "x", ",", "kernel_size", ",", "padding", "=", "kernel_size", "//", "2", ")", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "unfolded", "=", "_expand", "(", "unfolded", ",", "(", "A", ".", "size", "(", "-", "3", ")", ",", "A", ".", "size", "(", "-", "2", ")", "*", "A", ".", "size", "(", "-", "1", ")", ")", ")", ".", "transpose", "(", "-", "2", ",", "-", "3", ")", "\n", "out", "=", "torch", ".", "matmul", "(", "unfolded", ",", "collapse2", "(", "A", ".", "contiguous", "(", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "return", "unflatten2", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.wasserstein_cost": [[66, 76], ["X.new_zeros", "range", "ValueError", "range", "abs", "abs"], "function", ["None"], ["", "def", "wasserstein_cost", "(", "X", ",", "p", "=", "2", ",", "kernel_size", "=", "5", ")", ":", "\n", "    ", "if", "kernel_size", "%", "2", "!=", "1", ":", "\n", "        ", "raise", "ValueError", "(", "\"Need odd kernel size\"", ")", "\n", "\n", "", "center", "=", "kernel_size", "//", "2", "\n", "C", "=", "X", ".", "new_zeros", "(", "kernel_size", ",", "kernel_size", ")", "\n", "for", "i", "in", "range", "(", "kernel_size", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "kernel_size", ")", ":", "\n", "            ", "C", "[", "i", ",", "j", "]", "=", "(", "abs", "(", "i", "-", "center", ")", "**", "2", "+", "abs", "(", "j", "-", "center", ")", "**", "2", ")", "**", "(", "p", "/", "2", ")", "\n", "", "", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.unsqueeze3": [[77, 79], ["X.unsqueeze().unsqueeze().unsqueeze", "X.unsqueeze().unsqueeze", "X.unsqueeze"], "function", ["None"], ["", "def", "unsqueeze3", "(", "X", ")", ":", "\n", "    ", "return", "X", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.collapse2": [[80, 82], ["X.view", "X.size"], "function", ["None"], ["", "def", "collapse2", "(", "X", ")", ":", "\n", "    ", "return", "X", ".", "view", "(", "*", "X", ".", "size", "(", ")", "[", ":", "-", "2", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.collapse3": [[83, 85], ["X.view", "X.size"], "function", ["None"], ["", "def", "collapse3", "(", "X", ")", ":", "\n", "    ", "return", "X", ".", "view", "(", "*", "X", ".", "size", "(", ")", "[", ":", "-", "3", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._expand": [[86, 88], ["X.view", "X.size"], "function", ["None"], ["", "def", "_expand", "(", "X", ",", "shape", ")", ":", "\n", "    ", "return", "X", ".", "view", "(", "*", "X", ".", "size", "(", ")", "[", ":", "-", "1", "]", ",", "*", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.unflatten2": [[89, 94], ["X.size", "int", "projected_sinkhorn._expand", "math.sqrt"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._expand"], ["", "def", "unflatten2", "(", "X", ")", ":", "\n", "# print('unflatten2', X.size())", "\n", "    ", "n", "=", "X", ".", "size", "(", "-", "1", ")", "\n", "k", "=", "int", "(", "math", ".", "sqrt", "(", "n", ")", ")", "\n", "return", "_expand", "(", "X", ",", "(", "k", ",", "k", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._expand_filter": [[95, 99], ["list", "X.expand", "range", "X.dim"], "function", ["None"], ["", "def", "_expand_filter", "(", "X", ",", "nfilters", ")", ":", "\n", "    ", "sizes", "=", "list", "(", "-", "1", "for", "_", "in", "range", "(", "X", ".", "dim", "(", ")", ")", ")", "\n", "sizes", "[", "-", "3", "]", "=", "nfilters", "\n", "return", "X", ".", "expand", "(", "*", "sizes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.bdot": [[101, 103], ["projected_sinkhorn._bdot", "projected_sinkhorn.collapse3", "projected_sinkhorn.collapse3"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._bdot", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.collapse3", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.collapse3"], ["", "def", "bdot", "(", "x", ",", "y", ")", ":", "\n", "    ", "return", "_bdot", "(", "collapse3", "(", "x", ")", ",", "collapse3", "(", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.projected_sinkhorn": [[104, 106], ["projected_sinkhorn.log_sinkhorn"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.log_sinkhorn"], ["", "def", "projected_sinkhorn", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "log_sinkhorn", "(", "*", "args", ",", "objective", "=", "'2norm'", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.conjugate_sinkhorn": [[107, 109], ["projected_sinkhorn.log_sinkhorn"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.log_sinkhorn"], ["", "def", "conjugate_sinkhorn", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "log_sinkhorn", "(", "*", "args", ",", "objective", "=", "'conjugate'", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.log_sinkhorn": [[110, 299], ["X.size", "zip", "tuple", "collapse3().size", "X.size", "reversed", "reversed", "projected_sinkhorn._expand", "projected_sinkhorn._expand_filter", "projected_sinkhorn._mm", "torch.norm", "torch.norm", "X.dim", "Y.dim", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "unsqueeze3().expand_as", "X.new_ones", "torch.exp", "torch.exp", "X.size", "Y.size", "X.size", "expand_filter", "X.size", "projected_sinkhorn.collapse3", "max", "projected_sinkhorn.collapse3", "torch.log", "torch.log", "Y.expand_as().contiguous", "print", "ValueError", "C.clone", "C_tmp.unsqueeze.dim", "Y.dim", "C_tmp.unsqueeze.unsqueeze", "projected_sinkhorn.bdot", "float", "torch.no_grad", "torch.no_grad", "projected_sinkhorn.log_sinkhorn.eval_z"], "function", ["home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._expand", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._expand_filter", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn._mm", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.collapse3", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.collapse3", "home.repos.pwc.inspect_result.locuslab_projected_sinkhorn.projected_sinkhorn.projected_sinkhorn.bdot"], ["", "def", "log_sinkhorn", "(", "X", ",", "Y", ",", "C", ",", "epsilon", ",", "lam", ",", "verbose", "=", "False", ",", "plan", "=", "False", ",", "\n", "objective", "=", "'2norm'", ",", "maxiters", "=", "50", ",", "return_objective", "=", "False", ")", ":", "\n", "    ", "\"\"\" \n    if objective == '2norm': \n        minimize_Z ||Y-Z||_2 subject to Z in Wasserstein ball around X \n\n        we return Z\n\n    if objective == 'conjugate': \n        minimize_Z -Y^TZ subject to Z in Wasserstein ball around X\n\n        however instead of Z we return the dual variables u,psi for the \n        equivalent objective: \n        minimize_{u,psi} \n\n    Inputs: \n        X : batch size x nfilters x image width x image height\n        Y : batch size x noutputs x total input dimension\n\n        these really out to be broadcastable\n\n        Same as above but in log space. Note that the implementation follows the \n        rescaled version -\\lambda Y^TZ + entropy(W) instead of \n        -Y^TZ + 1/lambda * entropy(W), so the final objective is downscaled by lambda\n    \"\"\"", "\n", "batch_sizes", "=", "X", ".", "size", "(", ")", "[", ":", "-", "3", "]", "\n", "nfilters", "=", "X", ".", "size", "(", "-", "3", ")", "\n", "\n", "# size check", "\n", "for", "xd", ",", "yd", "in", "(", "zip", "(", "reversed", "(", "X", ".", "size", "(", ")", ")", ",", "reversed", "(", "Y", ".", "size", "(", ")", ")", ")", ")", ":", "\n", "        ", "assert", "xd", "==", "yd", "or", "xd", "==", "1", "or", "yd", "==", "1", "\n", "\n", "# helper functions", "\n", "", "expand3", "=", "lambda", "x", ":", "_expand", "(", "x", ",", "X", ".", "size", "(", ")", "[", "-", "3", ":", "]", ")", "\n", "expand_filter", "=", "lambda", "x", ":", "_expand_filter", "(", "x", ",", "X", ".", "size", "(", "-", "3", ")", ")", "\n", "mm", "=", "lambda", "A", ",", "x", ":", "_mm", "(", "expand_filter", "(", "A", ")", ",", "x", ",", "X", ".", "size", "(", ")", ")", "\n", "norm", "=", "lambda", "x", ":", "torch", ".", "norm", "(", "collapse3", "(", "x", ")", ",", "dim", "=", "-", "1", ")", "\n", "# like numpy", "\n", "allclose", "=", "lambda", "x", ",", "y", ":", "(", "x", "-", "y", ")", ".", "abs", "(", ")", "<=", "1e-4", "+", "1e-4", "*", "y", ".", "abs", "(", ")", "\n", "\n", "# assert valid distributions", "\n", "assert", "(", "X", ">=", "0", ")", ".", "all", "(", ")", "\n", "assert", "(", "(", "collapse3", "(", "X", ")", ".", "sum", "(", "-", "1", ")", "-", "1", ")", ".", "abs", "(", ")", "<=", "1e-4", ")", ".", "all", "(", ")", "\n", "assert", "X", ".", "dim", "(", ")", "==", "Y", ".", "dim", "(", ")", "\n", "\n", "\n", "size", "=", "tuple", "(", "max", "(", "sx", ",", "sy", ")", "for", "sx", ",", "sy", "in", "zip", "(", "X", ".", "size", "(", ")", ",", "Y", ".", "size", "(", ")", ")", ")", "\n", "\n", "# total dimension size for each example", "\n", "m", "=", "collapse3", "(", "X", ")", ".", "size", "(", "-", "1", ")", "\n", "\n", "if", "objective", "==", "TYPE_CONJUGATE", ":", "\n", "        ", "alpha", "=", "torch", ".", "log", "(", "X", ".", "new_ones", "(", "*", "size", ")", "/", "m", ")", "+", "0.5", "\n", "exp_alpha", "=", "torch", ".", "exp", "(", "-", "alpha", ")", "\n", "beta", "=", "-", "lam", "*", "Y", ".", "expand_as", "(", "alpha", ")", ".", "contiguous", "(", ")", "\n", "exp_beta", "=", "torch", ".", "exp", "(", "-", "beta", ")", "\n", "\n", "# check for overflow", "\n", "if", "(", "exp_beta", "==", "float", "(", "'inf'", ")", ")", ".", "any", "(", ")", ":", "\n", "            ", "print", "(", "beta", ".", "min", "(", ")", ")", "\n", "raise", "ValueError", "(", "'Overflow error: in logP_sinkhorn for e^beta'", ")", "\n", "\n", "\n", "# EARLY TERMINATION CRITERIA: if the nu_1 and the ", "\n", "# center of the ball have no pixels with overlapping filters, ", "\n", "# thenthe wasserstein ball has no effect on the objective. ", "\n", "# Consequently, we should just return the objective ", "\n", "# on the center of the ball. Notably, if the filters don't overlap, ", "\n", "# then the pixels themselves don't either, so we can conclude that ", "\n", "# the objective is 0. ", "\n", "\n", "# We can detect overlapping filters by applying the cost ", "\n", "# filter and seeing if the sum is 0 (e.g. X*C*Y)", "\n", "", "C_tmp", "=", "C", ".", "clone", "(", ")", "+", "1", "\n", "while", "C_tmp", ".", "dim", "(", ")", "<", "Y", ".", "dim", "(", ")", ":", "\n", "            ", "C_tmp", "=", "C_tmp", ".", "unsqueeze", "(", "0", ")", "\n", "", "I_nonzero", "=", "bdot", "(", "X", ",", "mm", "(", "C_tmp", ",", "Y", ")", ")", "!=", "0", "\n", "I_nonzero_", "=", "unsqueeze3", "(", "I_nonzero", ")", ".", "expand_as", "(", "alpha", ")", "\n", "\n", "def", "eval_obj", "(", "alpha", ",", "exp_alpha", ",", "psi", ",", "K", ")", ":", "\n", "            ", "return", "-", "psi", "*", "epsilon", "-", "bdot", "(", "torch", ".", "clamp", "(", "alpha", ",", "max", "=", "MAX_FLOAT", ")", ",", "X", ")", "-", "bdot", "(", "exp_alpha", ",", "mm", "(", "K", ",", "exp_beta", ")", ")", "\n", "\n", "", "def", "eval_z", "(", "alpha", ",", "exp_alpha", ",", "psi", ",", "K", ")", ":", "\n", "            ", "return", "exp_beta", "*", "mm", "(", "K", ",", "exp_alpha", ")", "\n", "\n", "", "psi", "=", "X", ".", "new_ones", "(", "*", "size", "[", ":", "-", "3", "]", ")", "\n", "K", "=", "torch", ".", "exp", "(", "-", "unsqueeze3", "(", "psi", ")", "*", "C", "-", "1", ")", "\n", "\n", "old_obj", "=", "-", "float", "(", "'inf'", ")", "\n", "i", "=", "0", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "while", "True", ":", "\n", "                ", "alpha", "[", "I_nonzero_", "]", "=", "(", "torch", ".", "log", "(", "mm", "(", "K", ",", "exp_beta", ")", ")", "-", "torch", ".", "log", "(", "X", ")", ")", "[", "I_nonzero_", "]", "\n", "exp_alpha", "=", "torch", ".", "exp", "(", "-", "alpha", ")", "\n", "\n", "dpsi", "=", "-", "epsilon", "+", "bdot", "(", "exp_alpha", ",", "mm", "(", "C", "*", "K", ",", "exp_beta", ")", ")", "\n", "ddpsi", "=", "-", "bdot", "(", "exp_alpha", ",", "mm", "(", "C", "*", "C", "*", "K", ",", "exp_beta", ")", ")", "\n", "delta", "=", "dpsi", "/", "ddpsi", "\n", "\n", "psi0", "=", "psi", "\n", "t", "=", "X", ".", "new_ones", "(", "*", "delta", ".", "size", "(", ")", ")", "\n", "neg", "=", "(", "psi", "-", "t", "*", "delta", "<", "0", ")", "\n", "while", "neg", ".", "any", "(", ")", "and", "t", ".", "min", "(", ")", ".", "item", "(", ")", ">", "1e-2", ":", "\n", "                    ", "t", "[", "neg", "]", "/=", "2", "\n", "neg", "=", "psi", "-", "t", "*", "delta", "<", "0", "\n", "", "psi", "[", "I_nonzero", "]", "=", "torch", ".", "clamp", "(", "psi", "-", "t", "*", "delta", ",", "min", "=", "0", ")", "[", "I_nonzero", "]", "\n", "\n", "K", "=", "torch", ".", "exp", "(", "-", "unsqueeze3", "(", "psi", ")", "*", "C", "-", "1", ")", "\n", "\n", "# check for convergence", "\n", "obj", "=", "eval_obj", "(", "alpha", ",", "exp_alpha", ",", "psi", ",", "K", ")", "\n", "if", "verbose", ":", "\n", "                    ", "print", "(", "'obj'", ",", "obj", ")", "\n", "", "i", "+=", "1", "\n", "if", "i", ">", "maxiters", "or", "allclose", "(", "old_obj", ",", "obj", ")", ".", "all", "(", ")", ":", "\n", "                    ", "if", "verbose", ":", "\n", "                        ", "print", "(", "'terminate at iteration {}'", ".", "format", "(", "i", ")", ")", "\n", "", "break", "\n", "\n", "", "old_obj", "=", "obj", "\n", "\n", "", "", "if", "return_objective", ":", "\n", "            ", "obj", "=", "-", "bdot", "(", "X", ",", "Y", ")", "\n", "obj", "[", "I_nonzero", "]", "=", "eval_obj", "(", "alpha", ",", "exp_alpha", ",", "psi", ",", "K", ")", "[", "I_nonzero", "]", "\n", "return", "obj", "\n", "", "else", ":", "\n", "            ", "z", "=", "eval_z", "(", "alpha", ",", "exp_alpha", ",", "psi", ",", "K", ")", "\n", "z", "[", "~", "I_nonzero", "]", "=", "0", "\n", "return", "z", "\n", "\n", "", "", "elif", "objective", "==", "TYPE_2NORM", ":", "\n", "        ", "alpha", "=", "torch", ".", "log", "(", "X", ".", "new_ones", "(", "*", "size", ")", "/", "m", ")", "\n", "beta", "=", "torch", ".", "log", "(", "X", ".", "new_ones", "(", "*", "size", ")", "/", "m", ")", "\n", "exp_alpha", "=", "torch", ".", "exp", "(", "-", "alpha", ")", "\n", "exp_beta", "=", "torch", ".", "exp", "(", "-", "beta", ")", "\n", "\n", "psi", "=", "X", ".", "new_ones", "(", "*", "size", "[", ":", "-", "3", "]", ")", "\n", "K", "=", "torch", ".", "exp", "(", "-", "unsqueeze3", "(", "psi", ")", "*", "C", "-", "1", ")", "\n", "\n", "def", "eval_obj", "(", "alpha", ",", "beta", ",", "exp_alpha", ",", "exp_beta", ",", "psi", ",", "K", ")", ":", "\n", "            ", "return", "(", "-", "0.5", "/", "lam", "*", "bdot", "(", "beta", ",", "beta", ")", "-", "psi", "*", "epsilon", "\n", "-", "bdot", "(", "torch", ".", "clamp", "(", "alpha", ",", "max", "=", "1e10", ")", ",", "X", ")", "\n", "-", "bdot", "(", "torch", ".", "clamp", "(", "beta", ",", "max", "=", "1e10", ")", ",", "Y", ")", "\n", "-", "bdot", "(", "exp_alpha", ",", "mm", "(", "K", ",", "exp_beta", ")", ")", ")", "\n", "\n", "", "old_obj", "=", "-", "float", "(", "'inf'", ")", "\n", "i", "=", "0", "\n", "\n", "if", "verbose", ":", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "while", "True", ":", "\n", "                ", "alphat", "=", "norm", "(", "alpha", ")", "\n", "betat", "=", "norm", "(", "beta", ")", "\n", "\n", "alpha", "=", "(", "torch", ".", "log", "(", "mm", "(", "K", ",", "exp_beta", ")", ")", "-", "torch", ".", "log", "(", "X", ")", ")", "\n", "exp_alpha", "=", "torch", ".", "exp", "(", "-", "alpha", ")", "\n", "\n", "beta", "=", "lamw", "(", "lam", "*", "torch", ".", "exp", "(", "lam", "*", "Y", ")", "*", "mm", "(", "K", ",", "exp_alpha", ")", ")", "-", "lam", "*", "Y", "\n", "exp_beta", "=", "torch", ".", "exp", "(", "-", "beta", ")", "\n", "\n", "dpsi", "=", "-", "epsilon", "+", "bdot", "(", "exp_alpha", ",", "mm", "(", "C", "*", "K", ",", "exp_beta", ")", ")", "\n", "ddpsi", "=", "-", "bdot", "(", "exp_alpha", ",", "mm", "(", "C", "*", "C", "*", "K", ",", "exp_beta", ")", ")", "\n", "delta", "=", "dpsi", "/", "ddpsi", "\n", "\n", "psi0", "=", "psi", "\n", "t", "=", "X", ".", "new_ones", "(", "*", "delta", ".", "size", "(", ")", ")", "\n", "neg", "=", "(", "psi", "-", "t", "*", "delta", "<", "0", ")", "\n", "while", "neg", ".", "any", "(", ")", "and", "t", ".", "min", "(", ")", ".", "item", "(", ")", ">", "1e-2", ":", "\n", "                    ", "t", "[", "neg", "]", "/=", "2", "\n", "neg", "=", "psi", "-", "t", "*", "delta", "<", "0", "\n", "", "psi", "=", "torch", ".", "clamp", "(", "psi", "-", "t", "*", "delta", ",", "min", "=", "0", ")", "\n", "\n", "# update K", "\n", "K", "=", "torch", ".", "exp", "(", "-", "unsqueeze3", "(", "psi", ")", "*", "C", "-", "1", ")", "\n", "\n", "# check for convergence", "\n", "obj", "=", "eval_obj", "(", "alpha", ",", "exp_alpha", ",", "beta", ",", "exp_beta", ",", "psi", ",", "K", ")", "\n", "i", "+=", "1", "\n", "if", "i", ">", "maxiters", "or", "allclose", "(", "old_obj", ",", "obj", ")", ".", "all", "(", ")", ":", "\n", "                    ", "if", "verbose", ":", "\n", "                        ", "print", "(", "'terminate at iteration {}'", ".", "format", "(", "i", ")", ",", "maxiters", ")", "\n", "if", "i", ">", "maxiters", ":", "\n", "                            ", "print", "(", "'warning: took more than {} iters'", ".", "format", "(", "maxiters", ")", ")", "\n", "", "", "break", "\n", "", "old_obj", "=", "obj", "\n", "", "", "return", "beta", "/", "lam", "+", "Y", "\n", "", "", ""]]}