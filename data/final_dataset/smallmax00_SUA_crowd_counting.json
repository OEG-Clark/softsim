{"home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.None.test_SHA.normalize": [[22, 26], ["None"], "function", ["None"], ["def", "normalize", "(", "image", ",", "MIN_BOUND", ",", "MAX_BOUND", ")", ":", "\n", "    ", "image", "=", "(", "image", "-", "MIN_BOUND", ")", "/", "(", "MAX_BOUND", "-", "MIN_BOUND", ")", "\n", "reverse_image", "=", "1", "-", "image", "\n", "return", "reverse_image", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.None.test_SHA.create_model": [[33, 41], ["Models.model.Model", "Models.model.Model.to", "net.to.parameters", "param.detach_"], "function", ["None"], ["def", "create_model", "(", "ema", "=", "False", ")", ":", "\n", "# Network definition", "\n", "    ", "net", "=", "Model", "(", ")", "\n", "model", "=", "net", ".", "to", "(", "device", ")", "\n", "if", "ema", ":", "\n", "        ", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "detach_", "(", ")", "\n", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.None.test_JHU.normalize": [[22, 26], ["None"], "function", ["None"], ["def", "normalize", "(", "image", ",", "MIN_BOUND", ",", "MAX_BOUND", ")", ":", "\n", "    ", "image", "=", "(", "image", "-", "MIN_BOUND", ")", "/", "(", "MAX_BOUND", "-", "MIN_BOUND", ")", "\n", "reverse_image", "=", "1", "-", "image", "\n", "return", "reverse_image", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.None.test_JHU.create_model": [[33, 41], ["Models.model.Model", "Models.model.Model.to", "net.to.parameters", "param.detach_"], "function", ["None"], ["def", "create_model", "(", "ema", "=", "False", ")", ":", "\n", "# Network definition", "\n", "    ", "net", "=", "Model", "(", ")", "\n", "model", "=", "net", ".", "to", "(", "device", ")", "\n", "if", "ema", ":", "\n", "        ", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "detach_", "(", ")", "\n", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Datasets.dataset_semantic_SHAB.Dataset.__init__": [[13, 29], ["glob.glob", "glob.glob", "dataset_semantic_SHAB.Dataset.image_list.sort", "dataset_semantic_SHAB.Dataset.label_list.sort", "os.path.join", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ",", "dataset", ",", "is_train", ")", ":", "\n", "        ", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "dataset", "=", "dataset", "\n", "if", "is_train", ":", "\n", "            ", "is_train", "=", "'train_data'", "\n", "", "else", ":", "\n", "            ", "is_train", "=", "'test_data'", "\n", "", "if", "dataset", "==", "'SHA'", ":", "\n", "            ", "dataset", "=", "'part_A_final'", "\n", "", "elif", "dataset", "==", "'SHB'", ":", "\n", "            ", "dataset", "=", "'part_B_final'", "\n", "\n", "", "self", ".", "image_list", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "dataset", ",", "is_train", ",", "'images'", ",", "'*.jpg'", ")", ")", "\n", "self", ".", "label_list", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "dataset", ",", "is_train", ",", "'new_data'", ",", "'*.h5'", ")", ")", "\n", "self", ".", "image_list", ".", "sort", "(", ")", "\n", "self", ".", "label_list", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Datasets.dataset_semantic_SHAB.Dataset.__getitem__": [[30, 51], ["PIL.Image.open().convert", "h5py.File", "numpy.array", "numpy.array", "numpy.array", "transforms_semantic.Transforms", "transforms_semantic.Transforms.", "torchvision.transforms.functional.normalize.resize", "torchvision.transforms.functional.to_tensor", "torchvision.transforms.functional.normalize", "cv2.resize", "cv2.resize", "PIL.Image.open", "round", "round", "cv2.resize.astype", "cv2.resize.astype"], "methods", ["home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.None.test_JHU.normalize"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "self", ".", "image_list", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "label", "=", "h5py", ".", "File", "(", "self", ".", "label_list", "[", "index", "]", ",", "'r'", ")", "\n", "density", "=", "np", ".", "array", "(", "label", "[", "'density'", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "attention", "=", "np", ".", "array", "(", "label", "[", "'attention'", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "gt", "=", "np", ".", "array", "(", "label", "[", "'gt'", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "trans", "=", "Transforms", "(", "(", "0.8", ",", "1.2", ")", ",", "(", "128", ",", "128", ")", ",", "1", ",", "(", "0.5", ",", "1.5", ")", ",", "self", ".", "dataset", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "image", ",", "density", ",", "attention", "=", "trans", "(", "image", ",", "density", ",", "attention", ")", "\n", "return", "image", ",", "density", ",", "attention", "\n", "", "else", ":", "\n", "            ", "height", ",", "width", "=", "image", ".", "size", "[", "1", "]", ",", "image", ".", "size", "[", "0", "]", "\n", "height", "=", "round", "(", "height", "/", "16", ")", "*", "16", "\n", "width", "=", "round", "(", "width", "/", "16", ")", "*", "16", "\n", "image", "=", "image", ".", "resize", "(", "(", "width", ",", "height", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "image", "=", "functional", ".", "to_tensor", "(", "image", ")", "\n", "image", "=", "functional", ".", "normalize", "(", "image", ",", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "density", "=", "cv2", ".", "resize", "(", "density", ".", "astype", "(", "'float32'", ")", ",", "(", "width", ",", "height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "attention", "=", "cv2", ".", "resize", "(", "attention", ".", "astype", "(", "'float32'", ")", ",", "(", "width", ",", "height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "return", "image", ",", "gt", ",", "density", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Datasets.dataset_semantic_SHAB.Dataset.__len__": [[52, 54], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Datasets.dataset_semantic_QNRF_JHU.Dataset.__init__": [[13, 34], ["glob.glob", "glob.glob", "dataset_semantic_QNRF_JHU.Dataset.image_list.sort", "dataset_semantic_QNRF_JHU.Dataset.label_list.sort", "os.path.join", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ",", "dataset", ",", "is_train", ")", ":", "\n", "        ", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "dataset", "=", "dataset", "\n", "\n", "if", "dataset", "==", "'QNRF'", ":", "\n", "            ", "dataset", "=", "'QNRF'", "\n", "if", "is_train", ":", "\n", "                ", "is_train", "=", "'train'", "\n", "", "else", ":", "\n", "                ", "is_train", "=", "'test'", "\n", "", "", "elif", "dataset", "==", "'JHU'", ":", "\n", "            ", "dataset", "=", "'JHU'", "\n", "if", "is_train", ":", "\n", "                ", "is_train", "=", "'train'", "\n", "", "else", ":", "\n", "                ", "is_train", "=", "'test'", "\n", "\n", "", "", "self", ".", "image_list", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "dataset", ",", "is_train", ",", "'img'", ",", "'*.jpg'", ")", ")", "\n", "self", ".", "label_list", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "dataset", ",", "is_train", ",", "'new_data_JHU'", ",", "'*.h5'", ")", ")", "\n", "self", ".", "image_list", ".", "sort", "(", ")", "\n", "self", ".", "label_list", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Datasets.dataset_semantic_QNRF_JHU.Dataset.__getitem__": [[35, 56], ["PIL.Image.open().convert", "h5py.File", "numpy.array", "numpy.array", "numpy.array", "transforms_semantic.Transforms", "transforms_semantic.Transforms.", "torchvision.transforms.functional.normalize.resize", "torchvision.transforms.functional.to_tensor", "torchvision.transforms.functional.normalize", "cv2.resize", "cv2.resize", "PIL.Image.open", "round", "round", "cv2.resize.astype", "cv2.resize.astype"], "methods", ["home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.None.test_JHU.normalize"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "self", ".", "image_list", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "label", "=", "h5py", ".", "File", "(", "self", ".", "label_list", "[", "index", "]", ",", "'r'", ")", "\n", "density", "=", "np", ".", "array", "(", "label", "[", "'density'", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "attention", "=", "np", ".", "array", "(", "label", "[", "'attention'", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "gt", "=", "np", ".", "array", "(", "label", "[", "'gt'", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "trans", "=", "Transforms", "(", "(", "0.8", ",", "1.2", ")", ",", "(", "128", ",", "128", ")", ",", "1", ",", "(", "0.5", ",", "1.5", ")", ",", "self", ".", "dataset", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "image", ",", "density", ",", "attention", "=", "trans", "(", "image", ",", "density", ",", "attention", ")", "\n", "return", "image", ",", "density", ",", "attention", "\n", "", "else", ":", "\n", "            ", "height", ",", "width", "=", "image", ".", "size", "[", "1", "]", ",", "image", ".", "size", "[", "0", "]", "\n", "height", "=", "round", "(", "height", "/", "16", ")", "*", "16", "\n", "width", "=", "round", "(", "width", "/", "16", ")", "*", "16", "\n", "image", "=", "image", ".", "resize", "(", "(", "width", ",", "height", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "image", "=", "functional", ".", "to_tensor", "(", "image", ")", "\n", "image", "=", "functional", ".", "normalize", "(", "image", ",", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "density", "=", "cv2", ".", "resize", "(", "density", ".", "astype", "(", "'float32'", ")", ",", "(", "width", ",", "height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "attention", "=", "cv2", ".", "resize", "(", "attention", ".", "astype", "(", "'float32'", ")", ",", "(", "width", ",", "height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "return", "image", ",", "gt", ",", "density", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Datasets.dataset_semantic_QNRF_JHU.Dataset.__len__": [[57, 59], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Datasets.transforms_semantic.Transforms.__init__": [[9, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "scale", ",", "crop", ",", "stride", ",", "gamma", ",", "dataset", ")", ":", "\n", "        ", "self", ".", "scale", "=", "scale", "\n", "self", ".", "crop", "=", "crop", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Datasets.transforms_semantic.Transforms.__call__": [[16, 62], ["random.randint", "random.randint", "torchvision.transforms.functional.to_grayscale.crop", "torchvision.transforms.functional.to_tensor", "torchvision.transforms.functional.normalize", "cv2.resize", "numpy.reshape", "numpy.reshape", "random.random", "torchvision.transforms.functional.to_grayscale.transpose", "random.random", "random.uniform", "torchvision.transforms.functional.adjust_gamma", "random.random", "torchvision.transforms.functional.to_grayscale", "cv2.resize"], "methods", ["home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.None.test_JHU.normalize"], ["", "def", "__call__", "(", "self", ",", "image", ",", "density", ",", "attention", ")", ":", "\n", "# random resize", "\n", "        ", "height", ",", "width", "=", "image", ".", "size", "[", "1", "]", ",", "image", ".", "size", "[", "0", "]", "\n", "\n", "# random crop", "\n", "h", ",", "w", "=", "self", ".", "crop", "[", "0", "]", ",", "self", ".", "crop", "[", "1", "]", "\n", "dh", "=", "random", ".", "randint", "(", "0", ",", "height", "-", "h", ")", "\n", "dw", "=", "random", ".", "randint", "(", "0", ",", "width", "-", "w", ")", "\n", "image", "=", "image", ".", "crop", "(", "(", "dw", ",", "dh", ",", "dw", "+", "w", ",", "dh", "+", "h", ")", ")", "\n", "density", "=", "density", "[", "dh", ":", "dh", "+", "h", ",", "dw", ":", "dw", "+", "w", "]", "\n", "attention", "=", "attention", "[", "dh", ":", "dh", "+", "h", ",", "dw", ":", "dw", "+", "w", "]", "\n", "\n", "\n", "# random flip", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "image", "=", "image", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "density", "=", "density", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "attention", "=", "attention", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "\n", "\n", "# random gamma", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.3", ":", "\n", "            ", "gamma", "=", "random", ".", "uniform", "(", "self", ".", "gamma", "[", "0", "]", ",", "self", ".", "gamma", "[", "1", "]", ")", "\n", "image", "=", "functional", ".", "adjust_gamma", "(", "image", ",", "gamma", ")", "\n", "\n", "# random to gray", "\n", "", "if", "self", ".", "dataset", "==", "'SHA'", ":", "\n", "            ", "if", "random", ".", "random", "(", ")", "<", "0.1", ":", "\n", "                ", "image", "=", "functional", ".", "to_grayscale", "(", "image", ",", "num_output_channels", "=", "3", ")", "\n", "\n", "", "", "image", "=", "functional", ".", "to_tensor", "(", "image", ")", "\n", "image", "=", "functional", ".", "normalize", "(", "image", ",", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "\n", "\n", "density", "=", "cv2", ".", "resize", "(", "density", ",", "(", "density", ".", "shape", "[", "1", "]", "//", "self", ".", "stride", ",", "density", ".", "shape", "[", "0", "]", "//", "self", ".", "stride", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "*", "self", ".", "stride", "*", "self", ".", "stride", "\n", "\n", "attention", "=", "cv2", ".", "resize", "(", "attention", ",", "(", "attention", ".", "shape", "[", "1", "]", "//", "self", ".", "stride", ",", "attention", ".", "shape", "[", "0", "]", "//", "self", ".", "stride", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "density", "=", "np", ".", "reshape", "(", "density", ",", "[", "1", ",", "density", ".", "shape", "[", "0", "]", ",", "density", ".", "shape", "[", "1", "]", "]", ")", "\n", "attention", "=", "np", ".", "reshape", "(", "attention", ",", "[", "1", ",", "attention", ".", "shape", "[", "0", "]", ",", "attention", ".", "shape", "[", "1", "]", "]", ")", "\n", "\n", "\n", "return", "image", ",", "density", ",", "attention", "\n", "", "", ""]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Model.__init__": [[7, 20], ["torch.nn.Module.__init__", "model.VGG", "model.Model.load_vgg", "model.BackEnd", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.Smooth_heaviside", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Smooth_heaviside.__init__", "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Model.load_vgg"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vgg", "=", "VGG", "(", ")", "\n", "self", ".", "load_vgg", "(", ")", "\n", "self", ".", "backend", "=", "BackEnd", "(", ")", "\n", "\n", "self", ".", "conv_att", "=", "BaseConv", "(", "2", ",", "1", ",", "1", ",", "1", ",", "activation", "=", "None", ",", "use_bn", "=", "False", ")", "\n", "self", ".", "conv_att_2", "=", "BaseConv", "(", "32", ",", "2", ",", "1", ",", "1", ",", "activation", "=", "None", ",", "use_bn", "=", "False", ")", "\n", "self", ".", "conv_sem_central_third", "=", "BaseConv", "(", "32", ",", "4", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv_sem_central_fourth", "=", "BaseConv", "(", "4", ",", "1", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv_den_central_first", "=", "BaseConv", "(", "32", ",", "8", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv_den_central_second", "=", "BaseConv", "(", "8", ",", "1", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "False", ")", "\n", "self", ".", "smooth_heaviside", "=", "Smooth_heaviside", "(", "6000", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Model.forward": [[21, 37], ["model.Model.vgg", "model.Model.backend", "model.Model.conv_att_2", "model.Model.conv_att", "model.Model.conv_sem_central_third", "model.Model.conv_sem_central_fourth", "model.Model.conv_den_central_first", "model.Model.conv_den_central_second", "model.Model.smooth_heaviside"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "input", "=", "self", ".", "vgg", "(", "input", ")", "\n", "backend_binary", ",", "backend_density", "=", "self", ".", "backend", "(", "*", "input", ")", "\n", "seg", "=", "self", ".", "conv_att_2", "(", "backend_binary", ")", "\n", "amp_out", "=", "self", ".", "conv_att", "(", "seg", ")", "\n", "\n", "sem_out", "=", "self", ".", "conv_sem_central_third", "(", "backend_density", ")", "\n", "sem_out", "=", "self", ".", "conv_sem_central_fourth", "(", "sem_out", ")", "\n", "\n", "dmp_out_middle", "=", "backend_density", "*", "amp_out", "\n", "dmp_out", "=", "self", ".", "conv_den_central_first", "(", "dmp_out_middle", ")", "\n", "dmp_out", "=", "dmp_out", "*", "sem_out", "\n", "dmp_out", "=", "self", ".", "conv_den_central_second", "(", "dmp_out", ")", "\n", "dmp_to_att", "=", "self", ".", "smooth_heaviside", "(", "dmp_out", ")", "\n", "return", "dmp_out", ",", "dmp_to_att", ",", "seg", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Model.load_vgg": [[38, 58], ["torch.utils.model_zoo.load_url", "range", "model.Model.vgg.load_state_dict", "str", "str", "str", "str", "str", "str"], "methods", ["None"], ["", "def", "load_vgg", "(", "self", ")", ":", "\n", "        ", "state_dict", "=", "model_zoo", ".", "load_url", "(", "'https://download.pytorch.org/models/vgg16_bn-6c64b313.pth'", ")", "\n", "old_name", "=", "[", "0", ",", "1", ",", "3", ",", "4", ",", "7", ",", "8", ",", "10", ",", "11", ",", "14", ",", "15", ",", "17", ",", "18", ",", "20", ",", "21", ",", "24", ",", "25", ",", "27", ",", "28", ",", "30", ",", "31", ",", "34", ",", "35", ",", "37", ",", "38", ",", "40", ",", "41", "]", "\n", "new_name", "=", "[", "'1_1'", ",", "'1_2'", ",", "'2_1'", ",", "'2_2'", ",", "'3_1'", ",", "'3_2'", ",", "'3_3'", ",", "'4_1'", ",", "'4_2'", ",", "'4_3'", ",", "'5_1'", ",", "'5_2'", ",", "'5_3'", "]", "\n", "new_dict", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "13", ")", ":", "\n", "            ", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.conv.weight'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "]", ")", "+", "'.weight'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.conv.bias'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "]", ")", "+", "'.bias'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.bn.weight'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "+", "1", "]", ")", "+", "'.weight'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.bn.bias'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "+", "1", "]", ")", "+", "'.bias'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.bn.running_mean'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "+", "1", "]", ")", "+", "'.running_mean'", "]", "\n", "new_dict", "[", "'conv'", "+", "new_name", "[", "i", "]", "+", "'.bn.running_var'", "]", "=", "state_dict", "[", "'features.'", "+", "str", "(", "old_name", "[", "2", "*", "i", "+", "1", "]", ")", "+", "'.running_var'", "]", "\n", "\n", "", "self", ".", "vgg", ".", "load_state_dict", "(", "new_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.VGG.__init__": [[61, 77], ["torch.nn.Module.__init__", "torch.nn.MaxPool2d", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Smooth_heaviside.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "\n", "self", ".", "conv1_1", "=", "BaseConv", "(", "3", ",", "64", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv1_2", "=", "BaseConv", "(", "64", ",", "64", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv2_1", "=", "BaseConv", "(", "64", ",", "128", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv2_2", "=", "BaseConv", "(", "128", ",", "128", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv3_1", "=", "BaseConv", "(", "128", ",", "256", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv3_2", "=", "BaseConv", "(", "256", ",", "256", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv3_3", "=", "BaseConv", "(", "256", ",", "256", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv4_1", "=", "BaseConv", "(", "256", ",", "512", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv4_2", "=", "BaseConv", "(", "512", ",", "512", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv4_3", "=", "BaseConv", "(", "512", ",", "512", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv5_1", "=", "BaseConv", "(", "512", ",", "512", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv5_2", "=", "BaseConv", "(", "512", ",", "512", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv5_3", "=", "BaseConv", "(", "512", ",", "512", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "ReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.VGG.forward": [[78, 101], ["model.VGG.conv1_1", "model.VGG.conv1_2", "model.VGG.pool", "model.VGG.conv2_1", "model.VGG.conv2_2", "model.VGG.pool", "model.VGG.conv3_1", "model.VGG.conv3_2", "model.VGG.conv3_3", "model.VGG.pool", "model.VGG.conv4_1", "model.VGG.conv4_2", "model.VGG.conv4_3", "model.VGG.pool", "model.VGG.conv5_1", "model.VGG.conv5_2", "model.VGG.conv5_3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "input", "=", "self", ".", "conv1_1", "(", "input", ")", "\n", "input", "=", "self", ".", "conv1_2", "(", "input", ")", "\n", "input", "=", "self", ".", "pool", "(", "input", ")", "\n", "input", "=", "self", ".", "conv2_1", "(", "input", ")", "\n", "conv2_2", "=", "self", ".", "conv2_2", "(", "input", ")", "\n", "\n", "input", "=", "self", ".", "pool", "(", "conv2_2", ")", "\n", "conv3_1", "=", "self", ".", "conv3_1", "(", "input", ")", "\n", "input", "=", "self", ".", "conv3_2", "(", "conv3_1", ")", "\n", "conv3_3", "=", "self", ".", "conv3_3", "(", "input", ")", "\n", "\n", "input", "=", "self", ".", "pool", "(", "conv3_3", ")", "\n", "conv4_1", "=", "self", ".", "conv4_1", "(", "input", ")", "\n", "input", "=", "self", ".", "conv4_2", "(", "conv4_1", ")", "\n", "conv4_3", "=", "self", ".", "conv4_3", "(", "input", ")", "\n", "\n", "input", "=", "self", ".", "pool", "(", "conv4_3", ")", "\n", "conv5_1", "=", "self", ".", "conv5_1", "(", "input", ")", "\n", "input", "=", "self", ".", "conv5_2", "(", "conv5_1", ")", "\n", "conv5_3", "=", "self", ".", "conv5_3", "(", "input", ")", "\n", "\n", "return", "conv2_2", ",", "conv3_1", ",", "conv3_3", ",", "conv4_1", ",", "conv4_3", ",", "conv5_1", ",", "conv5_3", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BackEnd.__init__": [[104, 126], ["torch.nn.Module.__init__", "torch.nn.UpsamplingBilinear2d", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BaseConv", "model.BackEnd.att_layer", "model.BackEnd.att_layer", "model.BackEnd.att_layer", "model.BackEnd.att_layer", "model.BackEnd.att_layer", "model.BackEnd.att_layer", "torch.nn.Dropout", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Smooth_heaviside.__init__", "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BackEnd.att_layer", "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BackEnd.att_layer", "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BackEnd.att_layer", "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BackEnd.att_layer", "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BackEnd.att_layer", "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BackEnd.att_layer"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BackEnd", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "UpsamplingBilinear2d", "(", "scale_factor", "=", "2", ")", "\n", "\n", "self", ".", "conv1", "=", "BaseConv", "(", "1024", ",", "256", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv2", "=", "BaseConv", "(", "256", ",", "256", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "\n", "self", ".", "conv3", "=", "BaseConv", "(", "512", ",", "128", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv4", "=", "BaseConv", "(", "128", ",", "128", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "\n", "self", ".", "conv5", "=", "BaseConv", "(", "256", ",", "64", ",", "1", ",", "1", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv6", "=", "BaseConv", "(", "64", ",", "64", ",", "3", ",", "1", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", ")", ",", "use_bn", "=", "True", ")", "\n", "self", ".", "conv7", "=", "BaseConv", "(", "64", ",", "32", ",", "3", ",", "1", ",", "activation", "=", "None", ",", "use_bn", "=", "True", ")", "\n", "\n", "self", ".", "att_1_first", "=", "self", ".", "att_layer", "(", "[", "512", ",", "512", ",", "512", "]", ")", "\n", "self", ".", "att_2_first", "=", "self", ".", "att_layer", "(", "[", "512", ",", "512", ",", "512", "]", ")", "\n", "self", ".", "att_3_first", "=", "self", ".", "att_layer", "(", "[", "256", ",", "256", ",", "256", "]", ")", "\n", "\n", "self", ".", "att_1", "=", "self", ".", "att_layer", "(", "[", "1024", ",", "512", ",", "512", "]", ")", "\n", "self", ".", "att_2", "=", "self", ".", "att_layer", "(", "[", "1024", ",", "512", ",", "512", "]", ")", "\n", "self", ".", "att_3", "=", "self", ".", "att_layer", "(", "[", "512", ",", "256", ",", "256", "]", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BackEnd.att_layer": [[127, 137], ["torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Sigmoid"], "methods", ["None"], ["", "def", "att_layer", "(", "self", ",", "channel", ")", ":", "\n", "        ", "att_block", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "channel", "[", "0", "]", ",", "out_channels", "=", "channel", "[", "1", "]", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "channel", "[", "1", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "channel", "[", "1", "]", ",", "out_channels", "=", "channel", "[", "2", "]", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "channel", "[", "2", "]", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "return", "att_block", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BackEnd.forward": [[138, 177], ["model.BackEnd.upsample", "torch.cat", "model.BackEnd.conv1", "model.BackEnd.conv2", "model.BackEnd.upsample", "torch.cat", "model.BackEnd.conv3", "model.BackEnd.conv4", "model.BackEnd.upsample", "torch.cat", "model.BackEnd.conv5", "model.BackEnd.conv6", "model.BackEnd.conv7", "model.BackEnd.upsample", "model.BackEnd.dropout", "model.BackEnd.upsample", "torch.cat", "model.BackEnd.conv1", "model.BackEnd.conv2", "model.BackEnd.upsample", "torch.cat", "model.BackEnd.conv3", "model.BackEnd.conv4", "model.BackEnd.upsample", "torch.cat", "model.BackEnd.conv5", "model.BackEnd.conv6", "model.BackEnd.conv7", "model.BackEnd.upsample", "model.BackEnd.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "input", ")", ":", "\n", "        ", "conv2_2", ",", "conv3_1", ",", "conv3_3", ",", "conv4_1", ",", "conv4_3", ",", "conv5_1", ",", "conv5_3", "=", "input", "\n", "\n", "input_t1", "=", "self", ".", "upsample", "(", "conv5_3", ")", "\n", "input_t1", "=", "torch", ".", "cat", "(", "[", "input_t1", ",", "conv4_3", "]", ",", "1", ")", "\n", "input_t1", "=", "self", ".", "conv1", "(", "input_t1", ")", "\n", "input_t1", "=", "self", ".", "conv2", "(", "input_t1", ")", "\n", "input_t1", "=", "self", ".", "upsample", "(", "input_t1", ")", "\n", "input_t1", "=", "torch", ".", "cat", "(", "[", "input_t1", ",", "conv3_3", "]", ",", "1", ")", "\n", "input_t1", "=", "self", ".", "conv3", "(", "input_t1", ")", "\n", "input_t1", "=", "self", ".", "conv4", "(", "input_t1", ")", "\n", "input_t1", "=", "self", ".", "upsample", "(", "input_t1", ")", "\n", "input_t1", "=", "torch", ".", "cat", "(", "[", "input_t1", ",", "conv2_2", "]", ",", "1", ")", "\n", "input_t1", "=", "self", ".", "conv5", "(", "input_t1", ")", "\n", "input_t1", "=", "self", ".", "conv6", "(", "input_t1", ")", "\n", "input_t1", "=", "self", ".", "conv7", "(", "input_t1", ")", "\n", "input_t1", "=", "self", ".", "upsample", "(", "input_t1", ")", "\n", "\n", "input_t1", "=", "self", ".", "dropout", "(", "input_t1", ")", "\n", "\n", "input_t3", "=", "self", ".", "upsample", "(", "conv5_3", ")", "\n", "input_t3", "=", "torch", ".", "cat", "(", "[", "input_t3", ",", "conv4_3", "]", ",", "1", ")", "\n", "input_t3", "=", "self", ".", "conv1", "(", "input_t3", ")", "\n", "input_t3", "=", "self", ".", "conv2", "(", "input_t3", ")", "\n", "input_t3", "=", "self", ".", "upsample", "(", "input_t3", ")", "\n", "input_t3", "=", "torch", ".", "cat", "(", "[", "input_t3", ",", "conv3_3", "]", ",", "1", ")", "\n", "input_t3", "=", "self", ".", "conv3", "(", "input_t3", ")", "\n", "input_t3", "=", "self", ".", "conv4", "(", "input_t3", ")", "\n", "input_t3", "=", "self", ".", "upsample", "(", "input_t3", ")", "\n", "input_t3", "=", "torch", ".", "cat", "(", "[", "input_t3", ",", "conv2_2", "]", ",", "1", ")", "\n", "input_t3", "=", "self", ".", "conv5", "(", "input_t3", ")", "\n", "input_t3", "=", "self", ".", "conv6", "(", "input_t3", ")", "\n", "input_t3", "=", "self", ".", "conv7", "(", "input_t3", ")", "\n", "input_t3", "=", "self", ".", "upsample", "(", "input_t3", ")", "\n", "\n", "input_t3", "=", "self", ".", "dropout", "(", "input_t3", ")", "\n", "\n", "\n", "return", "input_t1", ",", "input_t3", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BaseConv.__init__": [[180, 190], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "model.BaseConv.conv.weight.data.normal_", "model.BaseConv.conv.bias.data.zero_", "torch.nn.BatchNorm2d", "model.BaseConv.bn.weight.data.fill_", "model.BaseConv.bn.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Smooth_heaviside.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel", ",", "stride", "=", "1", ",", "activation", "=", "None", ",", "use_bn", "=", "False", ")", ":", "\n", "        ", "super", "(", "BaseConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel", ",", "stride", ",", "kernel", "//", "2", ")", "\n", "self", ".", "conv", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "conv", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "self", ".", "bn", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "self", ".", "bn", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.BaseConv.forward": [[191, 199], ["model.BaseConv.conv", "model.BaseConv.bn", "model.BaseConv.activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "input", "=", "self", ".", "conv", "(", "input", ")", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "input", "=", "self", ".", "bn", "(", "input", ")", "\n", "", "if", "self", ".", "activation", ":", "\n", "            ", "input", "=", "self", ".", "activation", "(", "input", ")", "\n", "\n", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Smooth_heaviside.__init__": [[202, 206], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Smooth_heaviside.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "None", ",", "m", "=", "None", ")", ":", "\n", "        ", "super", "(", "Smooth_heaviside", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "m", "=", "m", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.smallmax00_SUA_crowd_counting.Models.model.Smooth_heaviside.forward": [[206, 210], ["torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "2", "-", "1", "/", "(", "torch", ".", "sigmoid", "(", "self", ".", "k", "*", "x", ")", "/", "self", ".", "m", ")", "\n", "x2", "=", "torch", ".", "sigmoid", "(", "self", ".", "k", "*", "x", ")", "\n", "return", "x1", "*", "x2", "\n", "", "", ""]]}