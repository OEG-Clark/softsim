{"home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.surfaceem.surface_EM_pt.__init__": [[13, 46], ["numpy.arange", "torch.device", "src.prior.MaxMixturePrior().to", "torch.from_numpy().to", "smplxmodel.faces_tensor.view", "src.prior.MaxMixturePrior", "torch.from_numpy", "numpy.int32"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "smplxmodel", ",", "\n", "step_size", "=", "1e-1", ",", "\n", "batch_size", "=", "1", ",", "\n", "num_iters", "=", "100", ",", "\n", "selected_index", "=", "np", ".", "arange", "(", "6890", ")", ",", "\n", "use_collision", "=", "False", ",", "\n", "device", "=", "torch", ".", "device", "(", "'cuda:0'", ")", ",", "\n", "GMM_MODEL_DIR", "=", "\"./smpl_models/\"", ",", "\n", "mu", "=", "0.02", "\n", ")", ":", "\n", "\n", "# Store options", "\n", "        ", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "step_size", "=", "step_size", "\n", "\n", "self", ".", "num_iters", "=", "num_iters", "\n", "# GMM pose prior", "\n", "self", ".", "pose_prior", "=", "MaxMixturePrior", "(", "prior_folder", "=", "GMM_MODEL_DIR", ",", "\n", "num_gaussians", "=", "8", ",", "\n", "dtype", "=", "torch", ".", "float32", ")", ".", "to", "(", "device", ")", "\n", "# Load SMPL-X model", "\n", "self", ".", "smpl", "=", "smplxmodel", "\n", "self", ".", "modelfaces", "=", "torch", ".", "from_numpy", "(", "np", ".", "int32", "(", "smplxmodel", ".", "faces", ")", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "selected_index", "=", "selected_index", "\n", "\n", "# mesh intersection", "\n", "self", ".", "model_faces", "=", "smplxmodel", ".", "faces_tensor", ".", "view", "(", "-", "1", ")", "\n", "self", ".", "use_collision", "=", "use_collision", "\n", "\n", "# outlier prob", "\n", "self", ".", "mu", "=", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.surfaceem.surface_EM_pt.prob_cal": [[47, 87], ["torch.no_grad", "torch.squeeze", "torch.squeeze", "torch.split", "torch.split", "torch.exp", "torch.repeat_interleave", "torch.where", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.reshape", "torch.transpose", "torch.transpose", "torch.transpose", "torch.sum", "torch.asin", "torch.tensor"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "prob_cal", "(", "self", ",", "modelVerts_in", ",", "meshVerts_in", ",", "sigma", "=", "0.05", "**", "2", ",", "mu", "=", "0.02", ")", ":", "\n", "        ", "modelVerts_sq", "=", "torch", ".", "squeeze", "(", "modelVerts_in", ")", "\n", "meshVerts_sq", "=", "torch", ".", "squeeze", "(", "meshVerts_in", ")", "\n", "\n", "modelVerts", "=", "modelVerts_sq", "\n", "meshVerts", "=", "meshVerts_sq", "\n", "\n", "model_x", ",", "model_y", ",", "model_z", "=", "torch", ".", "split", "(", "modelVerts", ",", "[", "1", ",", "1", ",", "1", "]", ",", "dim", "=", "1", ")", "\n", "mesh_x", ",", "mesh_y", ",", "mesh_z", "=", "torch", ".", "split", "(", "meshVerts", ",", "[", "1", ",", "1", ",", "1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "M", "=", "model_x", ".", "shape", "[", "0", "]", "\n", "N", "=", "mesh_x", ".", "shape", "[", "0", "]", "\n", "\n", "delta_x", "=", "torch", ".", "repeat_interleave", "(", "torch", ".", "transpose", "(", "mesh_x", ",", "0", ",", "1", ")", ",", "M", ",", "dim", "=", "0", ")", "-", "torch", ".", "repeat_interleave", "(", "model_x", ",", "N", ",", "dim", "=", "1", ")", "\n", "delta_y", "=", "torch", ".", "repeat_interleave", "(", "torch", ".", "transpose", "(", "mesh_y", ",", "0", ",", "1", ")", ",", "M", ",", "dim", "=", "0", ")", "-", "torch", ".", "repeat_interleave", "(", "model_y", ",", "N", ",", "dim", "=", "1", ")", "\n", "delta_z", "=", "torch", ".", "repeat_interleave", "(", "torch", ".", "transpose", "(", "mesh_z", ",", "0", ",", "1", ")", ",", "M", ",", "dim", "=", "0", ")", "-", "torch", ".", "repeat_interleave", "(", "model_z", ",", "N", ",", "dim", "=", "1", ")", "\n", "\n", "deltaVerts", "=", "delta_x", "*", "delta_x", "+", "delta_y", "*", "delta_y", "+", "delta_z", "*", "delta_z", "\n", "\n", "sigmaInit", "=", "sigma", "#1e-3 # 1e-4", "\n", "d", "=", "3.0", "# three dimension", "\n", "mu_c", "=", "(", "(", "2.0", "*", "torch", ".", "asin", "(", "torch", ".", "tensor", "(", "1.", ")", ")", "*", "sigmaInit", ")", "**", "(", "d", "/", "2.0", ")", "*", "mu", "*", "M", ")", "/", "(", "(", "1", "-", "mu", ")", "*", "N", ")", "\n", "\n", "deltaExp", "=", "torch", ".", "exp", "(", "-", "deltaVerts", "/", "(", "2", "*", "sigmaInit", ")", ")", "\n", "deltaExpN", "=", "torch", ".", "repeat_interleave", "(", "torch", ".", "reshape", "(", "torch", ".", "sum", "(", "deltaExp", ",", "dim", "=", "0", ")", ",", "(", "1", ",", "N", ")", ")", ",", "M", ",", "dim", "=", "0", ")", "\n", "probArray", "=", "deltaExp", "/", "(", "deltaExpN", "+", "mu_c", ")", "\n", "\n", "Ind", "=", "torch", ".", "where", "(", "probArray", ">", "1e-6", ")", "#2e-7", "\n", "modelInd", ",", "meshInd", "=", "Ind", "[", "0", "]", ",", "Ind", "[", "1", "]", "\n", "probInput", "=", "probArray", "[", "Ind", "]", "\n", "\n", "#print(deltaVerts.shape)", "\n", "#print(probArray.shape)", "\n", "\n", "#P_sum  = torch.sum(probArray)", "\n", "#P_sep = torch.sum(probArray * deltaVerts)", "\n", "#sigma2 = P_sep/(P_sum*3)", "\n", "\n", "return", "probInput", ",", "modelInd", ",", "meshInd", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.surfaceem.surface_EM_pt.__call__": [[89, 179], ["init_pose[].detach().clone", "init_pose[].detach().clone", "init_cam_t.clone", "init_betas.detach().clone", "init_betas.detach().clone", "init_pose[].detach().clone", "torch.optim.LBFGS", "range", "surfaceem.surface_EM_pt.vertices.detach", "surfaceem.surface_EM_pt.joints.detach", "torch.cat().detach", "betas.detach.detach.detach", "torch.optim.LBFGS.step", "torch.no_grad", "surfaceem.surface_EM_pt.smpl", "init_pose[].detach", "init_pose[].detach", "init_betas.detach", "init_betas.detach", "init_pose[].detach", "torch.optim.LBFGS.zero_grad", "surfaceem.surface_EM_pt.smpl", "surfaceem.surface_EM_pt.prob_cal", "src.customloss.body_fitting_loss_em", "src.customloss.body_fitting_loss_em.backward", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.surfaceem.surface_EM_depth.prob_cal", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.body_fitting_loss_em", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._EdgePointDistance.backward"], ["", "def", "__call__", "(", "self", ",", "init_pose", ",", "init_betas", ",", "init_cam_t", ",", "meshVerts", ")", ":", "\n", "        ", "\"\"\"Perform body fitting.\n        Input:\n            init_pose: SMPL pose\n            init_betas: SMPL betas\n            init_cam_t: Camera translation\n            meshVerts: point3d from mesh\n        Returns:\n            vertices: Vertices of optimized shape\n            joints: 3D joints of optimized shape\n            pose: SMPL pose parameters of optimized shape\n            betas: SMPL beta parameters of optimized shape\n            camera_translation: Camera translation\n        \"\"\"", "\n", "\n", "### add the mesh inter-section to avoid", "\n", "search_tree", "=", "None", "\n", "pen_distance", "=", "None", "\n", "filter_faces", "=", "None", "\n", "\n", "# Make camera translation a learnable parameter", "\n", "# Split SMPL pose to body pose and global orientation", "\n", "body_pose", "=", "init_pose", "[", ":", ",", "3", ":", "]", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "global_orient", "=", "init_pose", "[", ":", ",", ":", "3", "]", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "\n", "camera_translation", "=", "init_cam_t", ".", "clone", "(", ")", "\n", "\n", "betas", "=", "init_betas", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "preserve_betas", "=", "init_betas", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "preserve_pose", "=", "init_pose", "[", ":", ",", "3", ":", "]", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "\n", "# -------- Step : Optimize use surface points ---------", "\n", "betas", ".", "requires_grad", "=", "True", "\n", "body_pose", ".", "requires_grad", "=", "True", "\n", "global_orient", ".", "requires_grad", "=", "True", "\n", "camera_translation", ".", "requires_grad", "=", "True", "\n", "body_opt_params", "=", "[", "body_pose", ",", "global_orient", ",", "betas", ",", "camera_translation", "]", "# ", "\n", "\n", "# optimize the body_pose", "\n", "body_optimizer", "=", "torch", ".", "optim", ".", "LBFGS", "(", "body_opt_params", ",", "max_iter", "=", "20", ",", "\n", "lr", "=", "self", ".", "step_size", ",", "line_search_fn", "=", "'strong_wolfe'", ")", "#", "\n", "for", "i", "in", "range", "(", "self", ".", "num_iters", ")", ":", "\n", "            ", "def", "closure", "(", ")", ":", "\n", "                ", "body_optimizer", ".", "zero_grad", "(", ")", "\n", "smpl_output", "=", "self", ".", "smpl", "(", "global_orient", "=", "global_orient", ",", "\n", "body_pose", "=", "body_pose", ",", "\n", "betas", "=", "betas", ",", "\n", "transl", "=", "camera_translation", ",", "\n", "return_verts", "=", "True", ")", "\n", "\n", "modelVerts", "=", "smpl_output", ".", "vertices", "[", ":", ",", "self", ".", "selected_index", "]", "\n", "# calculate the probInput", "\n", "probInput", ",", "modelInd", ",", "meshInd", "=", "self", ".", "prob_cal", "(", "modelVerts", ",", "meshVerts", ",", "sigma", "=", "(", "0.15", "**", "2", ")", "*", "(", "self", ".", "num_iters", "-", "i", "+", "1", ")", "/", "self", ".", "num_iters", ",", "mu", "=", "self", ".", "mu", ")", "\n", "#sigma=(0.1**2)*(self.num_iters-i+1)/self.num_iters", "\n", "\n", "loss", "=", "body_fitting_loss_em", "(", "body_pose", ",", "preserve_pose", ",", "betas", ",", "preserve_betas", ",", "\n", "camera_translation", ",", "\n", "modelVerts", ",", "meshVerts", ",", "modelInd", ",", "meshInd", ",", "probInput", ",", "\n", "self", ".", "pose_prior", ",", "\n", "smpl_output", ",", "self", ".", "modelfaces", ",", "\n", "pose_prior_weight", "=", "4.78", "*", "2.0", ",", "\n", "pose_preserve_weight", "=", "1.0", ",", "\n", "correspond_weight", "=", "1500.0", ",", "\n", "chamfer_weight", "=", "200.0", ",", "\n", "point2mesh_weight", "=", "0.0", ",", "\n", "use_collision", "=", "self", ".", "use_collision", ",", "\n", "model_vertices", "=", "smpl_output", ".", "vertices", ",", "model_faces", "=", "self", ".", "model_faces", ",", "\n", "search_tree", "=", "search_tree", ",", "pen_distance", "=", "pen_distance", ",", "filter_faces", "=", "filter_faces", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "return", "loss", "\n", "\n", "", "body_optimizer", ".", "step", "(", "closure", ")", "\n", "\n", "\n", "\n", "# Get final loss value", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "smpl_output", "=", "self", ".", "smpl", "(", "global_orient", "=", "global_orient", ",", "\n", "body_pose", "=", "body_pose", ",", "\n", "betas", "=", "betas", ",", "\n", "transl", "=", "camera_translation", ",", "\n", "return_full_pose", "=", "True", ")", "\n", "\n", "", "vertices", "=", "smpl_output", ".", "vertices", ".", "detach", "(", ")", "\n", "joints", "=", "smpl_output", ".", "joints", ".", "detach", "(", ")", "\n", "pose", "=", "torch", ".", "cat", "(", "[", "global_orient", ",", "body_pose", "]", ",", "dim", "=", "-", "1", ")", ".", "detach", "(", ")", "\n", "betas", "=", "betas", ".", "detach", "(", ")", "\n", "\n", "return", "vertices", ",", "joints", ",", "pose", ",", "betas", ",", "camera_translation", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.surfaceem.surface_EM_depth.__init__": [[187, 220], ["numpy.arange", "torch.device", "src.prior.MaxMixturePrior().to", "torch.from_numpy().to", "smplxmodel.faces_tensor.view", "src.prior.MaxMixturePrior", "torch.from_numpy", "numpy.int32"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "smplxmodel", ",", "\n", "step_size", "=", "1e-1", ",", "\n", "batch_size", "=", "1", ",", "\n", "num_iters", "=", "100", ",", "\n", "selected_index", "=", "np", ".", "arange", "(", "6890", ")", ",", "\n", "use_collision", "=", "False", ",", "\n", "device", "=", "torch", ".", "device", "(", "'cuda:0'", ")", ",", "\n", "GMM_MODEL_DIR", "=", "\"./smpl_models/\"", ",", "\n", "mu", "=", "0.05", "\n", ")", ":", "\n", "\n", "# Store options", "\n", "        ", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "step_size", "=", "step_size", "\n", "\n", "self", ".", "num_iters", "=", "num_iters", "\n", "# GMM pose prior", "\n", "self", ".", "pose_prior", "=", "MaxMixturePrior", "(", "prior_folder", "=", "GMM_MODEL_DIR", ",", "\n", "num_gaussians", "=", "8", ",", "\n", "dtype", "=", "torch", ".", "float32", ")", ".", "to", "(", "device", ")", "\n", "# Load SMPL-X model", "\n", "self", ".", "smpl", "=", "smplxmodel", "\n", "self", ".", "modelfaces", "=", "torch", ".", "from_numpy", "(", "np", ".", "int32", "(", "smplxmodel", ".", "faces", ")", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "selected_index", "=", "selected_index", "\n", "\n", "# mesh intersection", "\n", "self", ".", "model_faces", "=", "smplxmodel", ".", "faces_tensor", ".", "view", "(", "-", "1", ")", "\n", "self", ".", "use_collision", "=", "use_collision", "\n", "\n", "# mu prob", "\n", "self", ".", "mu", "=", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.surfaceem.surface_EM_depth.prob_cal": [[221, 255], ["torch.no_grad", "torch.squeeze", "torch.squeeze", "torch.split", "torch.split", "torch.exp", "torch.repeat_interleave", "torch.where", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.reshape", "torch.transpose", "torch.transpose", "torch.transpose", "torch.sum", "torch.asin", "torch.tensor"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "prob_cal", "(", "self", ",", "modelVerts_in", ",", "meshVerts_in", ",", "sigma", "=", "0.05", "**", "2", ",", "mu", "=", "0.02", ")", ":", "\n", "        ", "modelVerts_sq", "=", "torch", ".", "squeeze", "(", "modelVerts_in", ")", "\n", "meshVerts_sq", "=", "torch", ".", "squeeze", "(", "meshVerts_in", ")", "\n", "\n", "modelVerts", "=", "modelVerts_sq", "\n", "meshVerts", "=", "meshVerts_sq", "\n", "\n", "model_x", ",", "model_y", ",", "model_z", "=", "torch", ".", "split", "(", "modelVerts", ",", "[", "1", ",", "1", ",", "1", "]", ",", "dim", "=", "1", ")", "\n", "mesh_x", ",", "mesh_y", ",", "mesh_z", "=", "torch", ".", "split", "(", "meshVerts", ",", "[", "1", ",", "1", ",", "1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "M", "=", "model_x", ".", "shape", "[", "0", "]", "\n", "N", "=", "mesh_x", ".", "shape", "[", "0", "]", "\n", "\n", "delta_x", "=", "torch", ".", "repeat_interleave", "(", "torch", ".", "transpose", "(", "mesh_x", ",", "0", ",", "1", ")", ",", "M", ",", "dim", "=", "0", ")", "-", "torch", ".", "repeat_interleave", "(", "model_x", ",", "N", ",", "dim", "=", "1", ")", "\n", "delta_y", "=", "torch", ".", "repeat_interleave", "(", "torch", ".", "transpose", "(", "mesh_y", ",", "0", ",", "1", ")", ",", "M", ",", "dim", "=", "0", ")", "-", "torch", ".", "repeat_interleave", "(", "model_y", ",", "N", ",", "dim", "=", "1", ")", "\n", "delta_z", "=", "torch", ".", "repeat_interleave", "(", "torch", ".", "transpose", "(", "mesh_z", ",", "0", ",", "1", ")", ",", "M", ",", "dim", "=", "0", ")", "-", "torch", ".", "repeat_interleave", "(", "model_z", ",", "N", ",", "dim", "=", "1", ")", "\n", "\n", "deltaVerts", "=", "delta_x", "*", "delta_x", "+", "delta_y", "*", "delta_y", "+", "delta_z", "*", "delta_z", "\n", "\n", "sigmaInit", "=", "sigma", "\n", "d", "=", "3.0", "# three dimension", "\n", "mu_c", "=", "(", "(", "2.0", "*", "torch", ".", "asin", "(", "torch", ".", "tensor", "(", "1.", ")", ")", "*", "sigmaInit", ")", "**", "(", "d", "/", "2.0", ")", "*", "mu", "*", "M", ")", "/", "(", "(", "1", "-", "mu", ")", "*", "N", ")", "\n", "\n", "deltaExp", "=", "torch", ".", "exp", "(", "-", "deltaVerts", "/", "(", "2", "*", "sigmaInit", ")", ")", "\n", "deltaExpN", "=", "torch", ".", "repeat_interleave", "(", "torch", ".", "reshape", "(", "torch", ".", "sum", "(", "deltaExp", ",", "dim", "=", "0", ")", ",", "(", "1", ",", "N", ")", ")", ",", "M", ",", "dim", "=", "0", ")", "\n", "probArray", "=", "deltaExp", "/", "(", "deltaExpN", "+", "mu_c", ")", "\n", "\n", "Ind", "=", "torch", ".", "where", "(", "probArray", ">", "1e-6", ")", "#2e-7", "\n", "modelInd", ",", "meshInd", "=", "Ind", "[", "0", "]", ",", "Ind", "[", "1", "]", "\n", "probInput", "=", "probArray", "[", "Ind", "]", "\n", "\n", "\n", "return", "probInput", ",", "modelInd", ",", "meshInd", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.surfaceem.surface_EM_depth.__call__": [[257, 348], ["init_pose[].detach().clone", "init_pose[].detach().clone", "init_cam_t.clone", "init_betas.detach().clone", "init_betas.detach().clone", "init_pose[].detach().clone", "torch.optim.LBFGS", "range", "surfaceem.surface_EM_depth.vertices.detach", "surfaceem.surface_EM_depth.joints.detach", "torch.cat().detach", "betas.detach.detach.detach", "torch.optim.LBFGS.step", "torch.no_grad", "surfaceem.surface_EM_depth.smpl", "init_pose[].detach", "init_pose[].detach", "init_betas.detach", "init_betas.detach", "init_pose[].detach", "torch.optim.LBFGS.zero_grad", "surfaceem.surface_EM_depth.smpl", "surfaceem.surface_EM_depth.prob_cal", "src.customloss.body_fitting_loss_em", "src.customloss.body_fitting_loss_em.backward", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.surfaceem.surface_EM_depth.prob_cal", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.body_fitting_loss_em", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._EdgePointDistance.backward"], ["", "def", "__call__", "(", "self", ",", "init_pose", ",", "init_betas", ",", "init_cam_t", ",", "meshVerts", ")", ":", "\n", "        ", "\"\"\"Perform body fitting.\n        Input:\n            init_pose: SMPL pose\n            init_betas: SMPL betas\n            init_cam_t: Camera translation\n            meshVerts: point3d from mesh\n        Returns:\n            vertices: Vertices of optimized shape\n            joints: 3D joints of optimized shape\n            pose: SMPL pose parameters of optimized shape\n            betas: SMPL beta parameters of optimized shape\n            camera_translation: Camera translation\n        \"\"\"", "\n", "\n", "### add the mesh inter-section to avoid", "\n", "search_tree", "=", "None", "\n", "pen_distance", "=", "None", "\n", "filter_faces", "=", "None", "\n", "\n", "# Make camera translation a learnable parameter", "\n", "# Split SMPL pose to body pose and global orientation", "\n", "body_pose", "=", "init_pose", "[", ":", ",", "3", ":", "]", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "global_orient", "=", "init_pose", "[", ":", ",", ":", "3", "]", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "\n", "camera_translation", "=", "init_cam_t", ".", "clone", "(", ")", "\n", "\n", "betas", "=", "init_betas", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "preserve_betas", "=", "init_betas", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "preserve_pose", "=", "init_pose", "[", ":", ",", "3", ":", "]", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "\n", "# -------- Step : Optimize use surface points ---------", "\n", "betas", ".", "requires_grad", "=", "True", "\n", "body_pose", ".", "requires_grad", "=", "True", "\n", "global_orient", ".", "requires_grad", "=", "True", "\n", "camera_translation", ".", "requires_grad", "=", "True", "\n", "body_opt_params", "=", "[", "body_pose", ",", "global_orient", ",", "betas", ",", "camera_translation", "]", "# ", "\n", "\n", "# optimize the body_pose", "\n", "body_optimizer", "=", "torch", ".", "optim", ".", "LBFGS", "(", "body_opt_params", ",", "max_iter", "=", "20", ",", "\n", "lr", "=", "self", ".", "step_size", ",", "line_search_fn", "=", "'strong_wolfe'", ")", "#", "\n", "for", "i", "in", "range", "(", "self", ".", "num_iters", ")", ":", "\n", "            ", "def", "closure", "(", ")", ":", "\n", "                ", "body_optimizer", ".", "zero_grad", "(", ")", "\n", "smpl_output", "=", "self", ".", "smpl", "(", "global_orient", "=", "global_orient", ",", "\n", "body_pose", "=", "body_pose", ",", "\n", "betas", "=", "betas", ",", "\n", "transl", "=", "camera_translation", ",", "\n", "return_verts", "=", "True", ")", "\n", "\n", "modelVerts", "=", "smpl_output", ".", "vertices", "[", ":", ",", "self", ".", "selected_index", "]", "\n", "# calculate the probInput", "\n", "probInput", ",", "modelInd", ",", "meshInd", "=", "self", ".", "prob_cal", "(", "modelVerts", ",", "meshVerts", ",", "sigma", "=", "(", "0.1", "**", "2", ")", "*", "(", "self", ".", "num_iters", "-", "i", "+", "1", ")", "/", "self", ".", "num_iters", ",", "mu", "=", "self", ".", "mu", ")", "\n", "#sigma=(0.1**2)*(self.num_iters-i+1)/self.num_iters", "\n", "\n", "loss", "=", "body_fitting_loss_em", "(", "body_pose", ",", "preserve_pose", ",", "betas", ",", "preserve_betas", ",", "\n", "camera_translation", ",", "\n", "modelVerts", ",", "meshVerts", ",", "modelInd", ",", "meshInd", ",", "probInput", ",", "\n", "self", ".", "pose_prior", ",", "\n", "smpl_output", ",", "self", ".", "modelfaces", ",", "\n", "pose_prior_weight", "=", "4.78", "*", "3.0", ",", "\n", "pose_preserve_weight", "=", "3.0", ",", "\n", "correspond_weight", "=", "1000.0", ",", "\n", "chamfer_weight", "=", "100.0", ",", "\n", "point2mesh_weight", "=", "200.0", ",", "\n", "shape_prior_weight", "=", "2.0", ",", "\n", "use_collision", "=", "self", ".", "use_collision", ",", "\n", "model_vertices", "=", "smpl_output", ".", "vertices", ",", "model_faces", "=", "self", ".", "model_faces", ",", "\n", "search_tree", "=", "search_tree", ",", "pen_distance", "=", "pen_distance", ",", "filter_faces", "=", "filter_faces", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "return", "loss", "\n", "\n", "", "body_optimizer", ".", "step", "(", "closure", ")", "\n", "\n", "\n", "\n", "# Get final loss value", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "smpl_output", "=", "self", ".", "smpl", "(", "global_orient", "=", "global_orient", ",", "\n", "body_pose", "=", "body_pose", ",", "\n", "betas", "=", "betas", ",", "\n", "transl", "=", "camera_translation", ",", "\n", "return_full_pose", "=", "True", ")", "\n", "\n", "", "vertices", "=", "smpl_output", ".", "vertices", ".", "detach", "(", ")", "\n", "joints", "=", "smpl_output", ".", "joints", ".", "detach", "(", ")", "\n", "pose", "=", "torch", ".", "cat", "(", "[", "global_orient", ",", "body_pose", "]", ",", "dim", "=", "-", "1", ")", ".", "detach", "(", ")", "\n", "betas", "=", "betas", ".", "detach", "(", ")", "\n", "\n", "return", "vertices", ",", "joints", ",", "pose", ",", "betas", ",", "camera_translation", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.SMPLifyAnglePrior.__init__": [[30, 48], ["torch.Module.__init__", "numpy.array", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "prior.SMPLifyAnglePrior.register_buffer", "numpy.array", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "prior.SMPLifyAnglePrior.register_buffer"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dtype", "=", "torch", ".", "float32", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SMPLifyAnglePrior", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Indices for the roration angle of", "\n", "# 55: left elbow,  90deg bend at -np.pi/2", "\n", "# 58: right elbow, 90deg bend at np.pi/2", "\n", "# 12: left knee,   90deg bend at np.pi/2", "\n", "# 15: right knee,  90deg bend at np.pi/2", "\n", "angle_prior_idxs", "=", "np", ".", "array", "(", "[", "55", ",", "58", ",", "12", ",", "15", "]", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "angle_prior_idxs", "=", "torch", ".", "tensor", "(", "angle_prior_idxs", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "self", ".", "register_buffer", "(", "'angle_prior_idxs'", ",", "angle_prior_idxs", ")", "\n", "\n", "angle_prior_signs", "=", "np", ".", "array", "(", "[", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ",", "\n", "dtype", "=", "np", ".", "float32", "if", "dtype", "==", "torch", ".", "float32", "\n", "else", "np", ".", "float64", ")", "\n", "angle_prior_signs", "=", "torch", ".", "tensor", "(", "angle_prior_signs", ",", "\n", "dtype", "=", "dtype", ")", "\n", "self", ".", "register_buffer", "(", "'angle_prior_signs'", ",", "angle_prior_signs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.SMPLifyAnglePrior.forward": [[49, 66], ["torch.exp().pow", "torch.exp().pow", "torch.exp().pow", "torch.exp().pow", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pose", ",", "with_global_pose", "=", "False", ")", ":", "\n", "        ", "''' Returns the angle prior loss for the given pose\n\n        Args:\n            pose: (Bx[23 + 1] * 3) torch tensor with the axis-angle\n            representation of the rotations of the joints of the SMPL model.\n        Kwargs:\n            with_global_pose: Whether the pose vector also contains the global\n            orientation of the SMPL model. If not then the indices must be\n            corrected.\n        Returns:\n            A sze (B) tensor containing the angle prior loss for each element\n            in the batch.\n        '''", "\n", "angle_prior_idxs", "=", "self", ".", "angle_prior_idxs", "-", "(", "not", "with_global_pose", ")", "*", "3", "\n", "return", "torch", ".", "exp", "(", "pose", "[", ":", ",", "angle_prior_idxs", "]", "*", "\n", "self", ".", "angle_prior_signs", ")", ".", "pow", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.L2Prior.__init__": [[69, 71], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dtype", "=", "DEFAULT_DTYPE", ",", "reduction", "=", "'sum'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "L2Prior", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.L2Prior.forward": [[72, 74], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "module_input.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "module_input", ",", "*", "args", ")", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "module_input", ".", "pow", "(", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.MaxMixturePrior.__init__": [[78, 151], ["torch.Module.__init__", "os.path.join", "prior.MaxMixturePrior.register_buffer", "prior.MaxMixturePrior.register_buffer", "numpy.stack().astype", "prior.MaxMixturePrior.register_buffer", "numpy.array", "numpy.asarray", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "prior.MaxMixturePrior.register_buffer", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "prior.MaxMixturePrior.register_buffer", "prior.MaxMixturePrior.register_buffer", "prior.MaxMixturePrior.register_buffer", "os.path.exists", "print", "sys.exit", "open", "pickle.load", "type", "gmm[].astype", "gmm[].astype", "gmm[].astype", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.linalg.inv", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.log", "torch.log", "torch.log", "torch.log", "numpy.log", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "print", "sys.exit", "str", "pickle.load.means_.astype", "pickle.load.covars_.astype", "pickle.load.weights_.astype", "print", "sys.exit", "numpy.stack", "numpy.sqrt", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "type", "numpy.linalg.det", "numpy.linalg.det", "type", "numpy.array.min", "cov.astype"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "prior_folder", "=", "'prior'", ",", "\n", "num_gaussians", "=", "6", ",", "dtype", "=", "DEFAULT_DTYPE", ",", "epsilon", "=", "1e-16", ",", "\n", "use_merged", "=", "True", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "MaxMixturePrior", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "dtype", "==", "DEFAULT_DTYPE", ":", "\n", "            ", "np_dtype", "=", "np", ".", "float32", "\n", "", "elif", "dtype", "==", "torch", ".", "float64", ":", "\n", "            ", "np_dtype", "=", "np", ".", "float64", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown float type {}, exiting!'", ".", "format", "(", "dtype", ")", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n", "", "self", ".", "num_gaussians", "=", "num_gaussians", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "use_merged", "=", "use_merged", "\n", "gmm_fn", "=", "'gmm_{:02d}.pkl'", ".", "format", "(", "num_gaussians", ")", "\n", "\n", "full_gmm_fn", "=", "os", ".", "path", ".", "join", "(", "prior_folder", ",", "gmm_fn", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "full_gmm_fn", ")", ":", "\n", "            ", "print", "(", "'The path to the mixture prior \"{}\"'", ".", "format", "(", "full_gmm_fn", ")", "+", "\n", "' does not exist, exiting!'", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n", "", "with", "open", "(", "full_gmm_fn", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "gmm", "=", "pickle", ".", "load", "(", "f", ",", "encoding", "=", "'latin1'", ")", "\n", "\n", "", "if", "type", "(", "gmm", ")", "==", "dict", ":", "\n", "            ", "means", "=", "gmm", "[", "'means'", "]", ".", "astype", "(", "np_dtype", ")", "\n", "covs", "=", "gmm", "[", "'covars'", "]", ".", "astype", "(", "np_dtype", ")", "\n", "weights", "=", "gmm", "[", "'weights'", "]", ".", "astype", "(", "np_dtype", ")", "\n", "", "elif", "'sklearn.mixture.gmm.GMM'", "in", "str", "(", "type", "(", "gmm", ")", ")", ":", "\n", "            ", "means", "=", "gmm", ".", "means_", ".", "astype", "(", "np_dtype", ")", "\n", "covs", "=", "gmm", ".", "covars_", ".", "astype", "(", "np_dtype", ")", "\n", "weights", "=", "gmm", ".", "weights_", ".", "astype", "(", "np_dtype", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown type for the prior: {}, exiting!'", ".", "format", "(", "type", "(", "gmm", ")", ")", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n", "", "self", ".", "register_buffer", "(", "'means'", ",", "torch", ".", "tensor", "(", "means", ",", "dtype", "=", "dtype", ")", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'covs'", ",", "torch", ".", "tensor", "(", "covs", ",", "dtype", "=", "dtype", ")", ")", "\n", "\n", "precisions", "=", "[", "np", ".", "linalg", ".", "inv", "(", "cov", ")", "for", "cov", "in", "covs", "]", "\n", "precisions", "=", "np", ".", "stack", "(", "precisions", ")", ".", "astype", "(", "np_dtype", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'precisions'", ",", "\n", "torch", ".", "tensor", "(", "precisions", ",", "dtype", "=", "dtype", ")", ")", "\n", "\n", "# The constant term:", "\n", "sqrdets", "=", "np", ".", "array", "(", "[", "(", "np", ".", "sqrt", "(", "np", ".", "linalg", ".", "det", "(", "c", ")", ")", ")", "\n", "for", "c", "in", "gmm", "[", "'covars'", "]", "]", ")", "\n", "const", "=", "(", "2", "*", "np", ".", "pi", ")", "**", "(", "69", "/", "2.", ")", "\n", "\n", "nll_weights", "=", "np", ".", "asarray", "(", "gmm", "[", "'weights'", "]", "/", "(", "const", "*", "\n", "(", "sqrdets", "/", "sqrdets", ".", "min", "(", ")", ")", ")", ")", "\n", "nll_weights", "=", "torch", ".", "tensor", "(", "nll_weights", ",", "dtype", "=", "dtype", ")", ".", "unsqueeze", "(", "dim", "=", "0", ")", "\n", "self", ".", "register_buffer", "(", "'nll_weights'", ",", "nll_weights", ")", "\n", "\n", "weights", "=", "torch", ".", "tensor", "(", "gmm", "[", "'weights'", "]", ",", "dtype", "=", "dtype", ")", ".", "unsqueeze", "(", "dim", "=", "0", ")", "\n", "self", ".", "register_buffer", "(", "'weights'", ",", "weights", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'pi_term'", ",", "\n", "torch", ".", "log", "(", "torch", ".", "tensor", "(", "2", "*", "np", ".", "pi", ",", "dtype", "=", "dtype", ")", ")", ")", "\n", "\n", "cov_dets", "=", "[", "np", ".", "log", "(", "np", ".", "linalg", ".", "det", "(", "cov", ".", "astype", "(", "np_dtype", ")", ")", "+", "epsilon", ")", "\n", "for", "cov", "in", "covs", "]", "\n", "self", ".", "register_buffer", "(", "'cov_dets'", ",", "\n", "torch", ".", "tensor", "(", "cov_dets", ",", "dtype", "=", "dtype", ")", ")", "\n", "\n", "# The dimensionality of the random variable", "\n", "self", ".", "random_var_dim", "=", "self", ".", "means", ".", "shape", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.MaxMixturePrior.get_mean": [[152, 156], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["", "def", "get_mean", "(", "self", ")", ":", "\n", "        ", "''' Returns the mean of the mixture '''", "\n", "mean_pose", "=", "torch", ".", "matmul", "(", "self", ".", "weights", ",", "self", ".", "means", ")", "\n", "return", "mean_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.MaxMixturePrior.merged_log_likelihood": [[157, 173], ["torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.min", "torch.min", "torch.min", "torch.min", "pose.unsqueeze", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "merged_log_likelihood", "(", "self", ",", "pose", ",", "betas", ")", ":", "\n", "        ", "diff_from_mean", "=", "pose", ".", "unsqueeze", "(", "dim", "=", "1", ")", "-", "self", ".", "means", "\n", "\n", "prec_diff_prod", "=", "torch", ".", "einsum", "(", "'mij,bmj->bmi'", ",", "\n", "[", "self", ".", "precisions", ",", "diff_from_mean", "]", ")", "\n", "diff_prec_quadratic", "=", "(", "prec_diff_prod", "*", "diff_from_mean", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "curr_loglikelihood", "=", "0.5", "*", "diff_prec_quadratic", "-", "torch", ".", "log", "(", "self", ".", "nll_weights", ")", "\n", "#  curr_loglikelihood = 0.5 * (self.cov_dets.unsqueeze(dim=0) +", "\n", "#  self.random_var_dim * self.pi_term +", "\n", "#  diff_prec_quadratic", "\n", "#  ) - torch.log(self.weights)", "\n", "\n", "min_likelihood", ",", "_", "=", "torch", ".", "min", "(", "curr_loglikelihood", ",", "dim", "=", "1", ")", "\n", "return", "min_likelihood", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.MaxMixturePrior.log_likelihood": [[174, 202], ["range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.log", "torch.log", "torch.log", "torch.log", "likelihoods.append", "torch.log", "torch.log", "torch.log", "torch.log", "torch.det", "torch.det", "torch.det", "torch.det"], "methods", ["None"], ["", "def", "log_likelihood", "(", "self", ",", "pose", ",", "betas", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "''' Create graph operation for negative log-likelihood calculation\n        '''", "\n", "likelihoods", "=", "[", "]", "\n", "\n", "for", "idx", "in", "range", "(", "self", ".", "num_gaussians", ")", ":", "\n", "            ", "mean", "=", "self", ".", "means", "[", "idx", "]", "\n", "prec", "=", "self", ".", "precisions", "[", "idx", "]", "\n", "cov", "=", "self", ".", "covs", "[", "idx", "]", "\n", "diff_from_mean", "=", "pose", "-", "mean", "\n", "\n", "curr_loglikelihood", "=", "torch", ".", "einsum", "(", "'bj,ji->bi'", ",", "\n", "[", "diff_from_mean", ",", "prec", "]", ")", "\n", "curr_loglikelihood", "=", "torch", ".", "einsum", "(", "'bi,bi->b'", ",", "\n", "[", "curr_loglikelihood", ",", "\n", "diff_from_mean", "]", ")", "\n", "cov_term", "=", "torch", ".", "log", "(", "torch", ".", "det", "(", "cov", ")", "+", "self", ".", "epsilon", ")", "\n", "curr_loglikelihood", "+=", "0.5", "*", "(", "cov_term", "+", "\n", "self", ".", "random_var_dim", "*", "\n", "self", ".", "pi_term", ")", "\n", "likelihoods", ".", "append", "(", "curr_loglikelihood", ")", "\n", "\n", "", "log_likelihoods", "=", "torch", ".", "stack", "(", "likelihoods", ",", "dim", "=", "1", ")", "\n", "min_idx", "=", "torch", ".", "argmin", "(", "log_likelihoods", ",", "dim", "=", "1", ")", "\n", "weight_component", "=", "self", ".", "nll_weights", "[", ":", ",", "min_idx", "]", "\n", "weight_component", "=", "-", "torch", ".", "log", "(", "weight_component", ")", "\n", "\n", "return", "weight_component", "+", "log_likelihoods", "[", ":", ",", "min_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.MaxMixturePrior.forward": [[203, 208], ["prior.MaxMixturePrior.merged_log_likelihood", "prior.MaxMixturePrior.log_likelihood"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.MaxMixturePrior.merged_log_likelihood", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.MaxMixturePrior.log_likelihood"], ["", "def", "forward", "(", "self", ",", "pose", ",", "betas", ")", ":", "\n", "        ", "if", "self", ".", "use_merged", ":", "\n", "            ", "return", "self", ".", "merged_log_likelihood", "(", "pose", ",", "betas", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "log_likelihood", "(", "pose", ",", "betas", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.prior.create_prior": [[12, 27], ["prior.MaxMixturePrior", "prior.L2Prior", "prior.SMPLifyAnglePrior", "ValueError"], "function", ["None"], ["def", "create_prior", "(", "prior_type", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "prior_type", "==", "'gmm'", ":", "\n", "        ", "prior", "=", "MaxMixturePrior", "(", "**", "kwargs", ")", "\n", "", "elif", "prior_type", "==", "'l2'", ":", "\n", "        ", "return", "L2Prior", "(", "**", "kwargs", ")", "\n", "", "elif", "prior_type", "==", "'angle'", ":", "\n", "        ", "return", "SMPLifyAnglePrior", "(", "**", "kwargs", ")", "\n", "", "elif", "prior_type", "==", "'none'", "or", "prior_type", "is", "None", ":", "\n", "# Don't use any pose prior", "\n", "        ", "def", "no_prior", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "return", "0.0", "\n", "", "prior", "=", "no_prior", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Prior {}'", ".", "format", "(", "prior_type", ")", "+", "' is not implemented'", ")", "\n", "", "return", "prior", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.gmof": [[8, 15], ["None"], "function", ["None"], ["def", "gmof", "(", "x", ",", "sigma", ")", ":", "\n", "    ", "\"\"\"\n    Geman-McClure error function\n    \"\"\"", "\n", "x_squared", "=", "x", "**", "2", "\n", "sigma_squared", "=", "sigma", "**", "2", "\n", "return", "(", "sigma_squared", "*", "x_squared", ")", "/", "(", "sigma_squared", "+", "x_squared", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.angle_prior": [[17, 24], ["torch.exp", "torch.exp", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "angle_prior", "(", "pose", ")", ":", "\n", "    ", "\"\"\"\n    Angle prior that penalizes unnatural bending of the knees and elbows\n    \"\"\"", "\n", "# We subtract 3 because pose does not include the global rotation of the model", "\n", "return", "torch", ".", "exp", "(", "\n", "pose", "[", ":", ",", "[", "55", "-", "3", ",", "58", "-", "3", ",", "12", "-", "3", ",", "15", "-", "3", "]", "]", "*", "torch", ".", "tensor", "(", "[", "1.", ",", "-", "1.", ",", "-", "1", ",", "-", "1.", "]", ",", "device", "=", "pose", ".", "device", ")", ")", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.body_fitting_loss_em": [[27, 70], ["torch.repeat_interleave", "torch.repeat_interleave", "total_loss.sum", "torch.reshape", "torch.reshape", "pose_prior", "angle_prior().sum", "customloss.get_point2mesh_loss", "customloss.angle_prior", "customloss.get_chamfer_loss", "customloss.get_chamfer_loss", "customloss.gmof"], "function", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.get_point2mesh_loss", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.angle_prior", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.get_chamfer_loss", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.get_chamfer_loss", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.gmof"], ["", "def", "body_fitting_loss_em", "(", "body_pose", ",", "preserve_pose", ",", "betas", ",", "preserve_betas", ",", "camera_translation", ",", "\n", "modelVerts", ",", "meshVerts", ",", "modelInd", ",", "meshInd", ",", "probInput", ",", "\n", "pose_prior", ",", "\n", "smpl_output", ",", "modelfaces", ",", "\n", "sigma", "=", "100", ",", "pose_prior_weight", "=", "4.78", ",", "\n", "shape_prior_weight", "=", "5.0", ",", "angle_prior_weight", "=", "15.2", ",", "\n", "betas_preserve_weight", "=", "10.0", ",", "pose_preserve_weight", "=", "10.0", ",", "\n", "chamfer_weight", "=", "2000.0", ",", "\n", "correspond_weight", "=", "800.0", ",", "\n", "point2mesh_weight", "=", "5000.0", ",", "\n", "use_collision", "=", "False", ",", "\n", "model_vertices", "=", "None", ",", "model_faces", "=", "None", ",", "\n", "search_tree", "=", "None", ",", "pen_distance", "=", "None", ",", "filter_faces", "=", "None", ",", "\n", "collision_loss_weight", "=", "1000", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Loss function for body fitting\n    \"\"\"", "\n", "batch_size", "=", "body_pose", ".", "shape", "[", "0", "]", "\n", "\n", "probInputM", "=", "torch", ".", "repeat_interleave", "(", "torch", ".", "reshape", "(", "probInput", ",", "(", "1", ",", "-", "1", ",", "1", ")", ")", ",", "3", ",", "dim", "=", "2", ")", "\n", "correspond_loss", "=", "correspond_weight", "*", "(", "probInputM", "*", "gmof", "(", "modelVerts", "[", ":", ",", "modelInd", "]", "-", "meshVerts", "[", ":", ",", "meshInd", "]", ",", "sigma", ")", ")", ".", "sum", "(", ")", "\n", "\n", "# Pose prior loss", "\n", "pose_prior_loss", "=", "(", "pose_prior_weight", "**", "2", ")", "*", "pose_prior", "(", "body_pose", ",", "betas", ")", "\n", "# Angle prior for knees and elbows", "\n", "angle_prior_loss", "=", "(", "angle_prior_weight", "**", "2", ")", "*", "angle_prior", "(", "body_pose", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "# Regularizer to prevent betas from taking large values", "\n", "shape_prior_loss", "=", "(", "shape_prior_weight", "**", "2", ")", "*", "(", "betas", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "betas_preserve_loss", "=", "(", "betas_preserve_weight", "**", "2", ")", "*", "(", "(", "betas", "-", "preserve_betas", ")", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "pose_preserve_loss", "=", "(", "pose_preserve_weight", "**", "2", ")", "*", "(", "(", "body_pose", "-", "preserve_pose", ")", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "chamfer_loss", "=", "(", "chamfer_weight", "**", "2", ")", "*", "get_chamfer_loss", "(", "meshVerts", ",", "modelVerts", ")", "[", "0", "]", "+", "(", "(", "chamfer_weight", "/", "4.0", ")", "**", "2", ")", "*", "get_chamfer_loss", "(", "meshVerts", ",", "modelVerts", ")", "[", "1", "]", "\n", "\n", "#chamfer_loss =  (chamfer_weight **2) * chamfer_distance(meshVerts,  modelVerts)[0]", "\n", "point2mesh_loss", "=", "(", "point2mesh_weight", "**", "2", ")", "*", "get_point2mesh_loss", "(", "meshVerts", ",", "smpl_output", ",", "1", ",", "modelfaces", ")", "\n", "\n", "\n", "total_loss", "=", "correspond_loss", "+", "pose_prior_loss", "+", "angle_prior_loss", "+", "shape_prior_loss", "+", "betas_preserve_loss", "+", "pose_preserve_loss", "+", "chamfer_loss", "+", "point2mesh_loss", "\n", "\n", "return", "total_loss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.get_chamfer_loss": [[72, 76], ["src.utils.chamfer_distance_sep"], "function", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.chamfer_distance_sep"], ["", "def", "get_chamfer_loss", "(", "point_arr", ",", "\n", "output", ")", ":", "\n", "    ", "chamfer_x", ",", "chamfer_y", ",", "_", ",", "_", "=", "chamfer_distance_sep", "(", "point_arr", ",", "output", ",", "batch_reduction", "=", "\"sum\"", ")", "\n", "return", "chamfer_x", ",", "chamfer_y", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.customloss.get_point2mesh_loss": [[77, 95], ["range", "pytorch3d.structures.Meshes", "pytorch3d.structures.Pointclouds", "src.utils.point_mesh_face_distance_sep", "points_list.append", "verts_list.append", "faces_list.append", "point_arr[].squeeze", "smploutput.vertices[].squeeze"], "function", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.point_mesh_face_distance_sep"], ["", "def", "get_point2mesh_loss", "(", "point_arr", ",", "\n", "smploutput", ",", "\n", "batchSize", ",", "\n", "modelface", ")", ":", "\n", "    ", "points_list", "=", "[", "]", "\n", "verts_list", "=", "[", "]", "\n", "faces_list", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "batchSize", ")", ":", "\n", "        ", "points_list", ".", "append", "(", "point_arr", "[", "idx", "]", ".", "squeeze", "(", ")", ")", "\n", "verts_list", ".", "append", "(", "smploutput", ".", "vertices", "[", "idx", "]", ".", "squeeze", "(", ")", ")", "\n", "faces_list", ".", "append", "(", "modelface", ")", "\n", "", "meshes", "=", "Meshes", "(", "verts_list", ",", "faces_list", ")", "\n", "pcls", "=", "Pointclouds", "(", "points_list", ")", "\n", "\n", "# point2mesh_loss", "\n", "point2mesh_loss", ",", "_", "=", "point_mesh_face_distance_sep", "(", "meshes", ",", "pcls", ")", "\n", "\n", "return", "point2mesh_loss", "\n", "", ""]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.Network.point_net_ssg.__init__": [[19, 65], ["torch.Module.__init__", "src.utils.PointNetSetAbstraction", "src.utils.PointNetSetAbstraction", "src.utils.PointNetSetAbstraction", "src.utils.PointNetFeaturePropagation", "src.utils.PointNetFeaturePropagation", "src.utils.PointNetFeaturePropagation", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "h5py.File", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "Network.point_net_ssg.register_buffer", "Network.point_net_ssg.register_buffer", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "shape_classes", "=", "10", ",", "\n", "pose_classes", "=", "72", "-", "3", ",", "\n", "trans_classes", "=", "3", ",", "\n", "gRT_classes", "=", "6", ",", "\n", "normal_channel", "=", "False", ",", "\n", "smpl_mean_file", "=", "\"/home/xinxin/code/data/SMPLmodel/neutral_smpl_mean_params.h5\"", ",", "\n", "device", "=", "\"cpu\"", ")", ":", "\n", "\n", "        ", "super", "(", "point_net_ssg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "smpl_mean_file", "=", "smpl_mean_file", "\n", "self", ".", "device", "=", "device", "\n", "\n", "in_channel", "=", "6", "if", "normal_channel", "else", "3", "\n", "self", ".", "normal_channel", "=", "normal_channel", "\n", "if", "normal_channel", ":", "\n", "            ", "additional_channel", "=", "3", "\n", "", "else", ":", "\n", "            ", "additional_channel", "=", "0", "\n", "\n", "", "self", ".", "sa1", "=", "PointNetSetAbstraction", "(", "npoint", "=", "512", ",", "radius", "=", "0.1", ",", "nsample", "=", "32", ",", "in_channel", "=", "in_channel", ",", "mlp", "=", "[", "64", ",", "64", ",", "128", "]", ",", "group_all", "=", "False", ")", "# change 0.1", "\n", "self", ".", "sa2", "=", "PointNetSetAbstraction", "(", "npoint", "=", "128", ",", "radius", "=", "0.2", ",", "nsample", "=", "64", ",", "in_channel", "=", "128", "+", "3", ",", "mlp", "=", "[", "128", ",", "128", ",", "256", "]", ",", "group_all", "=", "False", ")", "#change 0.2", "\n", "self", ".", "sa3", "=", "PointNetSetAbstraction", "(", "npoint", "=", "None", ",", "radius", "=", "None", ",", "nsample", "=", "None", ",", "in_channel", "=", "256", "+", "3", ",", "mlp", "=", "[", "256", ",", "512", ",", "1024", "]", ",", "group_all", "=", "True", ")", "\n", "\n", "self", ".", "fp3", "=", "PointNetFeaturePropagation", "(", "in_channel", "=", "1280", ",", "mlp", "=", "[", "256", ",", "256", "]", ")", "\n", "self", ".", "fp2", "=", "PointNetFeaturePropagation", "(", "in_channel", "=", "384", ",", "mlp", "=", "[", "256", ",", "128", "]", ")", "\n", "self", ".", "fp1", "=", "PointNetFeaturePropagation", "(", "in_channel", "=", "128", "+", "16", "+", "6", "+", "additional_channel", ",", "mlp", "=", "[", "128", ",", "128", ",", "128", "]", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "1024", "+", "72", "+", "10", "+", "3", "-", "3", ",", "1024", ")", "\n", "self", ".", "fc1_p", "=", "nn", ".", "Linear", "(", "1024", ",", "1024", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "self", ".", "drop1", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "1024", ",", "1024", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "self", ".", "drop2", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "\n", "self", ".", "decpose", "=", "nn", ".", "Linear", "(", "1024", ",", "pose_classes", ")", "\n", "self", ".", "decshape", "=", "nn", ".", "Linear", "(", "1024", ",", "shape_classes", ")", "\n", "self", ".", "dectrans", "=", "nn", ".", "Linear", "(", "1024", ",", "trans_classes", ")", "\n", "self", ".", "decR", "=", "nn", ".", "Linear", "(", "1024", ",", "gRT_classes", ")", "\n", "\n", "file", "=", "h5py", ".", "File", "(", "self", ".", "smpl_mean_file", ",", "'r'", ")", "\n", "init_pose", "=", "torch", ".", "from_numpy", "(", "file", "[", "'pose'", "]", "[", ":", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", "\n", "init_shape", "=", "torch", ".", "from_numpy", "(", "file", "[", "'shape'", "]", "[", ":", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", "\n", "self", ".", "register_buffer", "(", "'init_pose'", ",", "init_pose", ")", "\n", "self", ".", "register_buffer", "(", "'init_shape'", ",", "init_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.Network.point_net_ssg.forward": [[67, 112], ["Network.point_net_ssg.sa1", "Network.point_net_ssg.sa2", "Network.point_net_ssg.sa3", "l3_points.view", "Network.point_net_ssg.drop1", "Network.point_net_ssg.drop2", "Network.point_net_ssg.decR", "range", "Network.point_net_ssg.init_shape.expand", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Network.point_net_ssg.drop1", "Network.point_net_ssg.drop2", "Network.point_net_ssg.init_pose.expand", "Network.point_net_ssg.bn1", "Network.point_net_ssg.bn2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "Network.point_net_ssg.decpose", "Network.point_net_ssg.decshape", "Network.point_net_ssg.dectrans", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "Network.point_net_ssg.fc1_p", "Network.point_net_ssg.fc2", "Network.point_net_ssg.bn1", "Network.point_net_ssg.bn2", "Network.point_net_ssg.fc1", "Network.point_net_ssg.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "xyz", ",", "\n", "init_pose", "=", "None", ",", "\n", "init_shape", "=", "None", ",", "\n", "init_trans", "=", "None", ",", "\n", "n_iter", "=", "3", ")", ":", "\n", "\n", "        ", "batch_size", ",", "_", ",", "_", "=", "xyz", ".", "shape", "\n", "\n", "if", "init_pose", "is", "None", ":", "\n", "            ", "init_pose", "=", "self", ".", "init_pose", ".", "expand", "(", "batch_size", ",", "-", "1", ")", "[", ":", ",", "3", ":", "]", "\n", "", "if", "init_shape", "is", "None", ":", "\n", "            ", "init_shape", "=", "self", ".", "init_shape", ".", "expand", "(", "batch_size", ",", "-", "1", ")", "\n", "", "if", "init_trans", "is", "None", ":", "\n", "            ", "init_trans", "=", "torch", ".", "zeros", "(", "[", "batch_size", ",", "3", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "#xf, trans, trans_feat = self.feat(xyz)", "\n", "", "norm", "=", "None", "\n", "l1_xyz", ",", "l1_points", "=", "self", ".", "sa1", "(", "xyz", ",", "norm", ")", "\n", "l2_xyz", ",", "l2_points", "=", "self", ".", "sa2", "(", "l1_xyz", ",", "l1_points", ")", "\n", "l3_xyz", ",", "l3_points", "=", "self", ".", "sa3", "(", "l2_xyz", ",", "l2_points", ")", "\n", "xf", "=", "l3_points", ".", "view", "(", "batch_size", ",", "1024", ")", "\n", "\n", "\n", "# final Linear part", "\n", "xr", "=", "self", ".", "drop1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "fc1_p", "(", "xf", ")", ")", ")", ")", "\n", "xr", "=", "self", ".", "drop2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "fc2", "(", "xr", ")", ")", ")", ")", "\n", "pred_R6D", "=", "self", ".", "decR", "(", "xr", ")", "\n", "\n", "pred_pose", "=", "init_pose", "\n", "pred_shape", "=", "init_shape", "\n", "pred_trans", "=", "init_trans", "\n", "\n", "for", "i", "in", "range", "(", "n_iter", ")", ":", "\n", "            ", "xc", "=", "torch", ".", "cat", "(", "[", "xf", ",", "pred_pose", ",", "pred_shape", ",", "pred_trans", "]", ",", "1", ")", "\n", "\n", "# add relu and BN  here", "\n", "xc", "=", "self", ".", "drop1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "fc1", "(", "xc", ")", ")", ")", ")", "\n", "xc", "=", "self", ".", "drop2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "fc2", "(", "xc", ")", ")", ")", ")", "\n", "\n", "pred_pose", "=", "self", ".", "decpose", "(", "xc", ")", "+", "pred_pose", "\n", "pred_shape", "=", "self", ".", "decshape", "(", "xc", ")", "+", "pred_shape", "\n", "pred_trans", "=", "self", ".", "dectrans", "(", "xc", ")", "+", "pred_trans", "\n", "\n", "", "return", "pred_shape", ",", "pred_pose", ",", "pred_trans", ",", "pred_R6D", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.Network.point_net_encoder.__init__": [[116, 150], ["torch.Module.__init__", "src.utils.PointNetEncoder", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "h5py.File", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "Network.point_net_encoder.register_buffer", "Network.point_net_encoder.register_buffer", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "shape_classes", "=", "10", ",", "\n", "pose_classes", "=", "72", ",", "\n", "trans_classes", "=", "3", ",", "\n", "normal_channel", "=", "False", ",", "\n", "smpl_mean_file", "=", "\"/home/xinxin/code/data/SMPLmodel/neutral_smpl_mean_params.h5\"", ",", "\n", "device", "=", "\"cpu\"", "\n", ")", ":", "\n", "        ", "super", "(", "point_net_encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "smpl_mean_file", "=", "smpl_mean_file", "\n", "self", ".", "device", "=", "device", "\n", "\n", "in_channel", "=", "6", "if", "normal_channel", "else", "3", "\n", "self", ".", "normal_channel", "=", "normal_channel", "\n", "\n", "self", ".", "feat", "=", "PointNetEncoder", "(", "global_feat", "=", "True", ",", "feature_transform", "=", "True", ",", "channel", "=", "in_channel", ",", "device", "=", "device", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "1024", "+", "72", "+", "10", "+", "3", ",", "1024", ")", "\n", "self", ".", "fc1_p", "=", "nn", ".", "Linear", "(", "1024", ",", "1024", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "self", ".", "drop1", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "1024", ",", "1024", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "self", ".", "drop2", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "\n", "self", ".", "decpose", "=", "nn", ".", "Linear", "(", "1024", ",", "pose_classes", ")", "\n", "self", ".", "decshape", "=", "nn", ".", "Linear", "(", "1024", ",", "shape_classes", ")", "\n", "self", ".", "dectrans", "=", "nn", ".", "Linear", "(", "1024", ",", "trans_classes", ")", "\n", "\n", "file", "=", "h5py", ".", "File", "(", "self", ".", "smpl_mean_file", ",", "'r'", ")", "\n", "init_pose", "=", "torch", ".", "from_numpy", "(", "file", "[", "'pose'", "]", "[", ":", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", "\n", "init_shape", "=", "torch", ".", "from_numpy", "(", "file", "[", "'shape'", "]", "[", ":", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", "\n", "self", ".", "register_buffer", "(", "'init_pose'", ",", "init_pose", ")", "\n", "self", ".", "register_buffer", "(", "'init_shape'", ",", "init_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.Network.point_net_encoder.forward": [[151, 186], ["Network.point_net_encoder.feat", "range", "Network.point_net_encoder.init_pose.expand", "Network.point_net_encoder.init_shape.expand", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Network.point_net_encoder.drop1", "Network.point_net_encoder.drop2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "Network.point_net_encoder.decpose", "Network.point_net_encoder.decshape", "Network.point_net_encoder.dectrans", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "Network.point_net_encoder.bn1", "Network.point_net_encoder.bn2", "Network.point_net_encoder.fc1", "Network.point_net_encoder.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "xyz", ",", "\n", "init_pose", "=", "None", ",", "\n", "init_shape", "=", "None", ",", "\n", "init_trans", "=", "None", ",", "\n", "n_iter", "=", "3", ")", ":", "\n", "\n", "        ", "batch_size", ",", "_", ",", "_", "=", "xyz", ".", "shape", "\n", "\n", "if", "init_pose", "is", "None", ":", "\n", "            ", "init_pose", "=", "self", ".", "init_pose", ".", "expand", "(", "batch_size", ",", "-", "1", ")", "\n", "", "if", "init_shape", "is", "None", ":", "\n", "            ", "init_shape", "=", "self", ".", "init_shape", ".", "expand", "(", "batch_size", ",", "-", "1", ")", "\n", "", "if", "init_trans", "is", "None", ":", "\n", "            ", "init_trans", "=", "torch", ".", "zeros", "(", "[", "batch_size", ",", "3", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "xf", ",", "trans", ",", "trans_feat", "=", "self", ".", "feat", "(", "xyz", ")", "\n", "\n", "\n", "pred_pose", "=", "init_pose", "\n", "pred_shape", "=", "init_shape", "\n", "pred_trans", "=", "init_trans", "\n", "\n", "for", "i", "in", "range", "(", "n_iter", ")", ":", "\n", "            ", "xc", "=", "torch", ".", "cat", "(", "[", "xf", ",", "pred_pose", ",", "pred_shape", ",", "pred_trans", "]", ",", "1", ")", "\n", "\n", "# add relu and BN here", "\n", "xc", "=", "self", ".", "drop1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "fc1", "(", "xc", ")", ")", ")", ")", "\n", "xc", "=", "self", ".", "drop2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "fc2", "(", "xc", ")", ")", ")", ")", "\n", "\n", "pred_pose", "=", "self", ".", "decpose", "(", "xc", ")", "+", "pred_pose", "\n", "pred_shape", "=", "self", ".", "decshape", "(", "xc", ")", "+", "pred_shape", "\n", "pred_trans", "=", "self", ".", "dectrans", "(", "xc", ")", "+", "pred_trans", "\n", "\n", "", "return", "pred_shape", ",", "pred_pose", ",", "pred_trans", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointNetSetAbstraction.__init__": [[201, 214], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "utils.PointNetSetAbstraction.mlp_convs.append", "utils.PointNetSetAbstraction.mlp_bns.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "npoint", ",", "radius", ",", "nsample", ",", "in_channel", ",", "mlp", ",", "group_all", ")", ":", "\n", "        ", "super", "(", "PointNetSetAbstraction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "radius", "=", "radius", "\n", "self", ".", "nsample", "=", "nsample", "\n", "self", ".", "mlp_convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlp_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "last_channel", "=", "in_channel", "\n", "for", "out_channel", "in", "mlp", ":", "\n", "            ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "last_channel", ",", "out_channel", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channel", ")", ")", "\n", "last_channel", "=", "out_channel", "\n", "", "self", ".", "group_all", "=", "group_all", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointNetSetAbstraction.forward": [[215, 242], ["xyz.permute.permute.permute", "torch.relu.permute", "enumerate", "new_xyz.permute.permute.permute", "points.permute.permute.permute", "utils.sample_and_group_all", "utils.sample_and_group", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "bn", "conv"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.sample_and_group_all", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.sample_and_group"], ["", "def", "forward", "(", "self", ",", "xyz", ",", "points", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            xyz: input points position data, [B, C, N]\n            points: input points data, [B, D, N]\n        Return:\n            new_xyz: sampled points position data, [B, C, S]\n            new_points_concat: sample points feature data, [B, D', S]\n        \"\"\"", "\n", "xyz", "=", "xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "            ", "points", "=", "points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "group_all", ":", "\n", "            ", "new_xyz", ",", "new_points", "=", "sample_and_group_all", "(", "xyz", ",", "points", ")", "\n", "", "else", ":", "\n", "            ", "new_xyz", ",", "new_points", "=", "sample_and_group", "(", "self", ".", "npoint", ",", "self", ".", "radius", ",", "self", ".", "nsample", ",", "xyz", ",", "points", ")", "\n", "# new_xyz: sampled points position data, [B, npoint, C]", "\n", "# new_points: sampled points data, [B, npoint, nsample, C+D]", "\n", "", "new_points", "=", "new_points", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "# [B, C+D, nsample,npoint]", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "mlp_convs", ")", ":", "\n", "            ", "bn", "=", "self", ".", "mlp_bns", "[", "i", "]", "\n", "new_points", "=", "F", ".", "relu", "(", "bn", "(", "conv", "(", "new_points", ")", ")", ")", "\n", "\n", "", "new_points", "=", "torch", ".", "max", "(", "new_points", ",", "2", ")", "[", "0", "]", "\n", "new_xyz", "=", "new_xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "return", "new_xyz", ",", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointNetSetAbstractionMsg.__init__": [[245, 262], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "len", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "utils.PointNetSetAbstractionMsg.conv_blocks.append", "utils.PointNetSetAbstractionMsg.bn_blocks.append", "torch.nn.ModuleList.append", "torch.nn.ModuleList.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "npoint", ",", "radius_list", ",", "nsample_list", ",", "in_channel", ",", "mlp_list", ")", ":", "\n", "        ", "super", "(", "PointNetSetAbstractionMsg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "radius_list", "=", "radius_list", "\n", "self", ".", "nsample_list", "=", "nsample_list", "\n", "self", ".", "conv_blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "bn_blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "mlp_list", ")", ")", ":", "\n", "            ", "convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "last_channel", "=", "in_channel", "+", "3", "\n", "for", "out_channel", "in", "mlp_list", "[", "i", "]", ":", "\n", "                ", "convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "last_channel", ",", "out_channel", ",", "1", ")", ")", "\n", "bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channel", ")", ")", "\n", "last_channel", "=", "out_channel", "\n", "", "self", ".", "conv_blocks", ".", "append", "(", "convs", ")", "\n", "self", ".", "bn_blocks", ".", "append", "(", "bns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointNetSetAbstractionMsg.forward": [[263, 302], ["xyz.permute.permute.permute", "utils.index_points", "enumerate", "new_xyz.permute.permute.permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "points.permute.permute.permute", "utils.farthest_point_sample", "utils.query_ball_point", "utils.index_points", "new_xyz.permute.permute.view", "torch.relu.permute", "range", "new_points_list.append", "utils.index_points", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "bn", "conv"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.index_points", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.farthest_point_sample", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.query_ball_point", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.index_points", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.index_points"], ["", "", "def", "forward", "(", "self", ",", "xyz", ",", "points", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            xyz: input points position data, [B, C, N]\n            points: input points data, [B, D, N]\n        Return:\n            new_xyz: sampled points position data, [B, C, S]\n            new_points_concat: sample points feature data, [B, D', S]\n        \"\"\"", "\n", "xyz", "=", "xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "            ", "points", "=", "points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "S", "=", "self", ".", "npoint", "\n", "new_xyz", "=", "index_points", "(", "xyz", ",", "farthest_point_sample", "(", "xyz", ",", "S", ")", ")", "\n", "new_points_list", "=", "[", "]", "\n", "for", "i", ",", "radius", "in", "enumerate", "(", "self", ".", "radius_list", ")", ":", "\n", "            ", "K", "=", "self", ".", "nsample_list", "[", "i", "]", "\n", "group_idx", "=", "query_ball_point", "(", "radius", ",", "K", ",", "xyz", ",", "new_xyz", ")", "\n", "grouped_xyz", "=", "index_points", "(", "xyz", ",", "group_idx", ")", "\n", "grouped_xyz", "-=", "new_xyz", ".", "view", "(", "B", ",", "S", ",", "1", ",", "C", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "                ", "grouped_points", "=", "index_points", "(", "points", ",", "group_idx", ")", "\n", "grouped_points", "=", "torch", ".", "cat", "(", "[", "grouped_points", ",", "grouped_xyz", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "grouped_points", "=", "grouped_xyz", "\n", "\n", "", "grouped_points", "=", "grouped_points", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "# [B, D, K, S]", "\n", "for", "j", "in", "range", "(", "len", "(", "self", ".", "conv_blocks", "[", "i", "]", ")", ")", ":", "\n", "                ", "conv", "=", "self", ".", "conv_blocks", "[", "i", "]", "[", "j", "]", "\n", "bn", "=", "self", ".", "bn_blocks", "[", "i", "]", "[", "j", "]", "\n", "grouped_points", "=", "F", ".", "relu", "(", "bn", "(", "conv", "(", "grouped_points", ")", ")", ")", "\n", "", "new_points", "=", "torch", ".", "max", "(", "grouped_points", ",", "2", ")", "[", "0", "]", "# [B, D', S]", "\n", "new_points_list", ".", "append", "(", "new_points", ")", "\n", "\n", "", "new_xyz", "=", "new_xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "new_points_concat", "=", "torch", ".", "cat", "(", "new_points_list", ",", "dim", "=", "1", ")", "\n", "return", "new_xyz", ",", "new_points_concat", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointNetFeaturePropagation.__init__": [[305, 314], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "utils.PointNetFeaturePropagation.mlp_convs.append", "utils.PointNetFeaturePropagation.mlp_bns.append", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "mlp", ")", ":", "\n", "        ", "super", "(", "PointNetFeaturePropagation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp_convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlp_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "last_channel", "=", "in_channel", "\n", "for", "out_channel", "in", "mlp", ":", "\n", "            ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv1d", "(", "last_channel", ",", "out_channel", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "out_channel", ")", ")", "\n", "last_channel", "=", "out_channel", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointNetFeaturePropagation.forward": [[315, 355], ["xyz1.permute.permute.permute", "xyz2.permute.permute.permute", "points2.permute.permute.permute", "torch.relu.permute", "enumerate", "points2.permute.permute.repeat", "utils.square_distance", "square_distance.sort", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "points1.permute.permute.permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "bn", "utils.index_points", "weight.view", "conv"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.square_distance", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.index_points"], ["", "", "def", "forward", "(", "self", ",", "xyz1", ",", "xyz2", ",", "points1", ",", "points2", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            xyz1: input points position data, [B, C, N]\n            xyz2: sampled input points position data, [B, C, S]\n            points1: input points data, [B, D, N]\n            points2: input points data, [B, D, S]\n        Return:\n            new_points: upsampled points data, [B, D', N]\n        \"\"\"", "\n", "xyz1", "=", "xyz1", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "xyz2", "=", "xyz2", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "points2", "=", "points2", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "B", ",", "N", ",", "C", "=", "xyz1", ".", "shape", "\n", "_", ",", "S", ",", "_", "=", "xyz2", ".", "shape", "\n", "\n", "if", "S", "==", "1", ":", "\n", "            ", "interpolated_points", "=", "points2", ".", "repeat", "(", "1", ",", "N", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "dists", "=", "square_distance", "(", "xyz1", ",", "xyz2", ")", "\n", "dists", ",", "idx", "=", "dists", ".", "sort", "(", "dim", "=", "-", "1", ")", "\n", "dists", ",", "idx", "=", "dists", "[", ":", ",", ":", ",", ":", "3", "]", ",", "idx", "[", ":", ",", ":", ",", ":", "3", "]", "# [B, N, 3]", "\n", "\n", "dist_recip", "=", "1.0", "/", "(", "dists", "+", "1e-8", ")", "\n", "norm", "=", "torch", ".", "sum", "(", "dist_recip", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "weight", "=", "dist_recip", "/", "norm", "\n", "interpolated_points", "=", "torch", ".", "sum", "(", "index_points", "(", "points2", ",", "idx", ")", "*", "weight", ".", "view", "(", "B", ",", "N", ",", "3", ",", "1", ")", ",", "dim", "=", "2", ")", "\n", "\n", "", "if", "points1", "is", "not", "None", ":", "\n", "            ", "points1", "=", "points1", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "new_points", "=", "torch", ".", "cat", "(", "[", "points1", ",", "interpolated_points", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "new_points", "=", "interpolated_points", "\n", "\n", "", "new_points", "=", "new_points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "mlp_convs", ")", ":", "\n", "            ", "bn", "=", "self", ".", "mlp_bns", "[", "i", "]", "\n", "new_points", "=", "F", ".", "relu", "(", "bn", "(", "conv", "(", "new_points", ")", ")", ")", "\n", "", "return", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.STN3d.__init__": [[358, 375], ["torch.nn.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "device", ")", ":", "\n", "        ", "super", "(", "STN3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "channel", ",", "64", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "64", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "1024", ",", "1", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "1024", ",", "512", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "256", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "256", ",", "9", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.STN3d.forward": [[376, 395], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "x.view.view.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "utils.STN3d.fc3", "torch.autograd.Variable().view().repeat", "torch.autograd.Variable().view().repeat", "torch.autograd.Variable().view().repeat", "torch.autograd.Variable().view().repeat", "x.view.view.view", "x.view.view.size", "utils.STN3d.bn1", "utils.STN3d.bn2", "utils.STN3d.bn3", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "utils.STN3d.bn4", "utils.STN3d.bn5", "iden.to.to.to", "utils.STN3d.conv1", "utils.STN3d.conv2", "utils.STN3d.conv3", "utils.STN3d.fc1", "utils.STN3d.fc2", "torch.autograd.Variable().view", "torch.autograd.Variable().view", "torch.autograd.Variable().view", "torch.autograd.Variable().view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array().astype", "numpy.array"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batchsize", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "max", "(", "x", ",", "2", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1024", ")", "\n", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "fc1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn5", "(", "self", ".", "fc2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "\n", "iden", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", ")", ".", "view", "(", "1", ",", "9", ")", ".", "repeat", "(", "\n", "batchsize", ",", "1", ")", "\n", "if", "x", ".", "is_cuda", ":", "\n", "            ", "iden", "=", "iden", ".", "to", "(", "self", ".", "device", ")", "\n", "", "x", "=", "x", "+", "iden", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.STNkd.__init__": [[398, 418], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.nn.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "64", ",", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", ")", ":", "\n", "        ", "super", "(", "STNkd", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "k", ",", "64", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "64", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "1024", ",", "1", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "1024", ",", "512", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "256", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "256", ",", "k", "*", "k", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "\n", "self", ".", "k", "=", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.STNkd.forward": [[419, 438], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "x.view.view.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "utils.STNkd.fc3", "torch.autograd.Variable().view().repeat", "torch.autograd.Variable().view().repeat", "torch.autograd.Variable().view().repeat", "torch.autograd.Variable().view().repeat", "x.view.view.view", "x.view.view.size", "utils.STNkd.bn1", "utils.STNkd.bn2", "utils.STNkd.bn3", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "utils.STNkd.bn4", "utils.STNkd.bn5", "iden.to.to.to", "utils.STNkd.conv1", "utils.STNkd.conv2", "utils.STNkd.conv3", "utils.STNkd.fc1", "utils.STNkd.fc2", "torch.autograd.Variable().view", "torch.autograd.Variable().view", "torch.autograd.Variable().view", "torch.autograd.Variable().view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.eye().flatten().astype", "numpy.eye().flatten", "numpy.eye"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batchsize", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "max", "(", "x", ",", "2", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1024", ")", "\n", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "fc1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn5", "(", "self", ".", "fc2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "\n", "iden", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "np", ".", "eye", "(", "self", ".", "k", ")", ".", "flatten", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", ")", ".", "view", "(", "1", ",", "self", ".", "k", "*", "self", ".", "k", ")", ".", "repeat", "(", "\n", "batchsize", ",", "1", ")", "\n", "if", "x", ".", "is_cuda", ":", "\n", "            ", "iden", "=", "iden", ".", "to", "(", "self", ".", "device", ")", "\n", "", "x", "=", "x", "+", "iden", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "k", ",", "self", ".", "k", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointNetEncoder.__init__": [[441, 454], ["torch.nn.Module.__init__", "utils.STN3d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "utils.STNkd"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "global_feat", "=", "True", ",", "feature_transform", "=", "False", ",", "channel", "=", "3", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "        ", "super", "(", "PointNetEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stn", "=", "STN3d", "(", "channel", ",", "device", "=", "device", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "channel", ",", "64", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "64", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "1024", ",", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "self", ".", "global_feat", "=", "global_feat", "\n", "self", ".", "feature_transform", "=", "feature_transform", "\n", "if", "self", ".", "feature_transform", ":", "\n", "            ", "self", ".", "fstn", "=", "STNkd", "(", "k", "=", "64", ",", "device", "=", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointNetEncoder.forward": [[455, 485], ["x.view().repeat.view().repeat.size", "utils.PointNetEncoder.stn", "x.view().repeat.view().repeat.transpose", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "x.view().repeat.view().repeat.transpose", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "utils.PointNetEncoder.bn3", "x.view().repeat.view().repeat.view", "x.view().repeat.view().repeat.split", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.PointNetEncoder.bn1", "utils.PointNetEncoder.fstn", "x.view().repeat.view().repeat.transpose", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "x.view().repeat.view().repeat.transpose", "utils.PointNetEncoder.bn2", "utils.PointNetEncoder.conv3", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "x.view().repeat.view().repeat.view().repeat", "utils.PointNetEncoder.conv1", "utils.PointNetEncoder.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view().repeat.view().repeat.view"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "D", ",", "N", "=", "x", ".", "size", "(", ")", "\n", "trans", "=", "self", ".", "stn", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", "\n", "if", "D", ">", "3", ":", "\n", "            ", "x", ",", "feature", "=", "x", ".", "split", "(", "3", ",", "dim", "=", "2", ")", "\n", "", "x", "=", "torch", ".", "bmm", "(", "x", ",", "trans", ")", "\n", "if", "D", ">", "3", ":", "\n", "            ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "feature", "]", ",", "dim", "=", "2", ")", "\n", "", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "\n", "if", "self", ".", "feature_transform", ":", "\n", "            ", "trans_feat", "=", "self", ".", "fstn", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", "\n", "x", "=", "torch", ".", "bmm", "(", "x", ",", "trans_feat", ")", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "trans_feat", "=", "None", "\n", "\n", "", "pointfeat", "=", "x", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "torch", ".", "max", "(", "x", ",", "2", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1024", ")", "\n", "if", "self", ".", "global_feat", ":", "\n", "            ", "return", "x", ",", "trans", ",", "trans_feat", "\n", "", "else", ":", "\n", "            ", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1024", ",", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "N", ")", "\n", "return", "torch", ".", "cat", "(", "[", "x", ",", "pointfeat", "]", ",", "1", ")", ",", "trans", ",", "trans_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.DensityNet.__init__": [[510, 522], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "utils.DensityNet.mlp_convs.append", "utils.DensityNet.mlp_bns.append", "range", "utils.DensityNet.mlp_convs.append", "utils.DensityNet.mlp_bns.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "len", "utils.DensityNet.mlp_convs.append", "utils.DensityNet.mlp_bns.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_unit", "=", "[", "16", ",", "8", "]", ")", ":", "\n", "        ", "super", "(", "DensityNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp_convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlp_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "1", ",", "hidden_unit", "[", "0", "]", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "hidden_unit", "[", "0", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "hidden_unit", ")", ")", ":", "\n", "            ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "hidden_unit", "[", "i", "-", "1", "]", ",", "hidden_unit", "[", "i", "]", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "hidden_unit", "[", "i", "]", ")", ")", "\n", "", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "hidden_unit", "[", "-", "1", "]", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.DensityNet.forward": [[523, 533], ["enumerate", "bn", "conv", "len", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "density_scale", ")", ":", "\n", "        ", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "mlp_convs", ")", ":", "\n", "            ", "bn", "=", "self", ".", "mlp_bns", "[", "i", "]", "\n", "density_scale", "=", "bn", "(", "conv", "(", "density_scale", ")", ")", "\n", "if", "i", "==", "len", "(", "self", ".", "mlp_convs", ")", ":", "\n", "                ", "density_scale", "=", "F", ".", "sigmoid", "(", "density_scale", ")", "\n", "", "else", ":", "\n", "                ", "density_scale", "=", "F", ".", "relu", "(", "density_scale", ")", "\n", "\n", "", "", "return", "density_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.WeightNet.__init__": [[536, 552], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "utils.WeightNet.mlp_convs.append", "utils.WeightNet.mlp_bns.append", "utils.WeightNet.mlp_convs.append", "utils.WeightNet.mlp_bns.append", "range", "utils.WeightNet.mlp_convs.append", "utils.WeightNet.mlp_bns.append", "len", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "len", "utils.WeightNet.mlp_convs.append", "utils.WeightNet.mlp_bns.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ",", "hidden_unit", "=", "[", "8", ",", "8", "]", ")", ":", "\n", "        ", "super", "(", "WeightNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mlp_convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlp_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "if", "hidden_unit", "is", "None", "or", "len", "(", "hidden_unit", ")", "==", "0", ":", "\n", "            ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channel", ",", "out_channel", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channel", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channel", ",", "hidden_unit", "[", "0", "]", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "hidden_unit", "[", "0", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "hidden_unit", ")", ")", ":", "\n", "                ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "hidden_unit", "[", "i", "-", "1", "]", ",", "hidden_unit", "[", "i", "]", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "hidden_unit", "[", "i", "]", ")", ")", "\n", "", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "hidden_unit", "[", "-", "1", "]", ",", "out_channel", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channel", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.WeightNet.forward": [[553, 562], ["enumerate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "bn", "conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "localized_xyz", ")", ":", "\n", "#xyz : BxCxKxN", "\n", "\n", "        ", "weights", "=", "localized_xyz", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "mlp_convs", ")", ":", "\n", "            ", "bn", "=", "self", ".", "mlp_bns", "[", "i", "]", "\n", "weights", "=", "F", ".", "relu", "(", "bn", "(", "conv", "(", "weights", ")", ")", ")", "\n", "\n", "", "return", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointConvSetAbstraction.__init__": [[565, 581], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "utils.WeightNet", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "utils.PointConvSetAbstraction.mlp_convs.append", "utils.PointConvSetAbstraction.mlp_bns.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "npoint", ",", "nsample", ",", "in_channel", ",", "mlp", ",", "group_all", ")", ":", "\n", "        ", "super", "(", "PointConvSetAbstraction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "nsample", "=", "nsample", "\n", "self", ".", "mlp_convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlp_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "last_channel", "=", "in_channel", "\n", "for", "out_channel", "in", "mlp", ":", "\n", "            ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "last_channel", ",", "out_channel", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channel", ")", ")", "\n", "last_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "weightnet", "=", "WeightNet", "(", "3", ",", "16", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "16", "*", "mlp", "[", "-", "1", "]", ",", "mlp", "[", "-", "1", "]", ")", "\n", "self", ".", "bn_linear", "=", "nn", ".", "BatchNorm1d", "(", "mlp", "[", "-", "1", "]", ")", "\n", "self", ".", "group_all", "=", "group_all", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointConvSetAbstraction.forward": [[582, 616], ["xyz.permute.permute.permute", "torch.relu.permute", "enumerate", "grouped_xyz_norm.permute", "utils.PointConvSetAbstraction.weightnet", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "utils.PointConvSetAbstraction.linear", "utils.PointConvSetAbstraction.bn_linear", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "new_xyz.permute.permute.permute", "points.permute.permute.permute", "utils.sample_and_group_all", "utils.sample_and_group", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu.permute", "bn", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "conv", "torch.relu.permute", "utils.PointConvSetAbstraction.permute"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.sample_and_group_all", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.sample_and_group"], ["", "def", "forward", "(", "self", ",", "xyz", ",", "points", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            xyz: input points position data, [B, C, N]\n            points: input points data, [B, D, N]\n        Return:\n            new_xyz: sampled points position data, [B, C, S]\n            new_points_concat: sample points feature data, [B, D', S]\n        \"\"\"", "\n", "B", "=", "xyz", ".", "shape", "[", "0", "]", "\n", "xyz", "=", "xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "            ", "points", "=", "points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "group_all", ":", "\n", "            ", "new_xyz", ",", "new_points", ",", "grouped_xyz_norm", "=", "sample_and_group_all", "(", "xyz", ",", "points", ")", "\n", "", "else", ":", "\n", "            ", "new_xyz", ",", "new_points", ",", "grouped_xyz_norm", ",", "_", "=", "sample_and_group", "(", "self", ".", "npoint", ",", "self", ".", "nsample", ",", "xyz", ",", "points", ")", "\n", "# new_xyz: sampled points position data, [B, npoint, C]", "\n", "# new_points: sampled points data, [B, npoint, nsample, C+D]", "\n", "", "new_points", "=", "new_points", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "# [B, C+D, nsample,npoint]", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "mlp_convs", ")", ":", "\n", "            ", "bn", "=", "self", ".", "mlp_bns", "[", "i", "]", "\n", "new_points", "=", "F", ".", "relu", "(", "bn", "(", "conv", "(", "new_points", ")", ")", ")", "\n", "\n", "", "grouped_xyz", "=", "grouped_xyz_norm", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "weights", "=", "self", ".", "weightnet", "(", "grouped_xyz", ")", "\n", "new_points", "=", "torch", ".", "matmul", "(", "input", "=", "new_points", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "other", "=", "weights", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", ")", ".", "view", "(", "B", ",", "self", ".", "npoint", ",", "-", "1", ")", "\n", "new_points", "=", "self", ".", "linear", "(", "new_points", ")", "\n", "new_points", "=", "self", ".", "bn_linear", "(", "new_points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "new_points", "=", "F", ".", "relu", "(", "new_points", ")", "\n", "new_xyz", "=", "new_xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "return", "new_xyz", ",", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointConvDensitySetAbstraction.__init__": [[618, 636], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "utils.WeightNet", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "utils.DensityNet", "utils.PointConvDensitySetAbstraction.mlp_convs.append", "utils.PointConvDensitySetAbstraction.mlp_bns.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "npoint", ",", "nsample", ",", "in_channel", ",", "mlp", ",", "bandwidth", ",", "group_all", ")", ":", "\n", "        ", "super", "(", "PointConvDensitySetAbstraction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "nsample", "=", "nsample", "\n", "self", ".", "mlp_convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlp_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "last_channel", "=", "in_channel", "\n", "for", "out_channel", "in", "mlp", ":", "\n", "            ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "last_channel", ",", "out_channel", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channel", ")", ")", "\n", "last_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "weightnet", "=", "WeightNet", "(", "3", ",", "16", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "16", "*", "mlp", "[", "-", "1", "]", ",", "mlp", "[", "-", "1", "]", ")", "\n", "self", ".", "bn_linear", "=", "nn", ".", "BatchNorm1d", "(", "mlp", "[", "-", "1", "]", ")", "\n", "self", ".", "densitynet", "=", "DensityNet", "(", ")", "\n", "self", ".", "group_all", "=", "group_all", "\n", "self", ".", "bandwidth", "=", "bandwidth", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointConvDensitySetAbstraction.forward": [[637, 680], ["xyz.permute.permute.permute", "utils.compute_density", "torch.relu.permute", "enumerate", "utils.PointConvDensitySetAbstraction.densitynet", "grouped_xyz_norm.permute", "utils.PointConvDensitySetAbstraction.weightnet", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "utils.PointConvDensitySetAbstraction.linear", "utils.PointConvDensitySetAbstraction.bn_linear", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "new_xyz.permute.permute.permute", "points.permute.permute.permute", "utils.sample_and_group_all", "utils.sample_and_group", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "grouped_density.max", "utils.PointConvDensitySetAbstraction.permute", "torch.relu.permute", "inverse_density.view", "inverse_density.view", "bn", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "conv", "torch.relu.permute", "utils.PointConvDensitySetAbstraction.permute"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.compute_density", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.sample_and_group_all", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.sample_and_group"], ["", "def", "forward", "(", "self", ",", "xyz", ",", "points", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            xyz: input points position data, [B, C, N]\n            points: input points data, [B, D, N]\n        Return:\n            new_xyz: sampled points position data, [B, C, S]\n            new_points_concat: sample points feature data, [B, D', S]\n        \"\"\"", "\n", "B", "=", "xyz", ".", "shape", "[", "0", "]", "\n", "N", "=", "xyz", ".", "shape", "[", "2", "]", "\n", "xyz", "=", "xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "            ", "points", "=", "points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "", "xyz_density", "=", "compute_density", "(", "xyz", ",", "self", ".", "bandwidth", ")", "\n", "inverse_density", "=", "1.0", "/", "xyz_density", "\n", "\n", "if", "self", ".", "group_all", ":", "\n", "            ", "new_xyz", ",", "new_points", ",", "grouped_xyz_norm", ",", "grouped_density", "=", "sample_and_group_all", "(", "xyz", ",", "points", ",", "inverse_density", ".", "view", "(", "B", ",", "N", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "new_xyz", ",", "new_points", ",", "grouped_xyz_norm", ",", "_", ",", "grouped_density", "=", "sample_and_group", "(", "self", ".", "npoint", ",", "self", ".", "nsample", ",", "xyz", ",", "points", ",", "inverse_density", ".", "view", "(", "B", ",", "N", ",", "1", ")", ")", "\n", "# new_xyz: sampled points position data, [B, npoint, C]", "\n", "# new_points: sampled points data, [B, npoint, nsample, C+D]", "\n", "", "new_points", "=", "new_points", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "# [B, C+D, nsample,npoint]", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "mlp_convs", ")", ":", "\n", "            ", "bn", "=", "self", ".", "mlp_bns", "[", "i", "]", "\n", "new_points", "=", "F", ".", "relu", "(", "bn", "(", "conv", "(", "new_points", ")", ")", ")", "\n", "\n", "", "inverse_max_density", "=", "grouped_density", ".", "max", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "density_scale", "=", "grouped_density", "/", "inverse_max_density", "\n", "density_scale", "=", "self", ".", "densitynet", "(", "density_scale", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", ")", "\n", "new_points", "=", "new_points", "*", "density_scale", "\n", "\n", "grouped_xyz", "=", "grouped_xyz_norm", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "weights", "=", "self", ".", "weightnet", "(", "grouped_xyz", ")", "\n", "new_points", "=", "torch", ".", "matmul", "(", "input", "=", "new_points", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "other", "=", "weights", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", ")", ".", "view", "(", "B", ",", "self", ".", "npoint", ",", "-", "1", ")", "\n", "new_points", "=", "self", ".", "linear", "(", "new_points", ")", "\n", "new_points", "=", "self", ".", "bn_linear", "(", "new_points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "new_points", "=", "F", ".", "relu", "(", "new_points", ")", "\n", "new_xyz", "=", "new_xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "return", "new_xyz", ",", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.DGCNN_feature.__init__": [[715, 732], ["torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", "=", "3", ")", ":", "\n", "\n", "        ", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "input_channels", "*", "2", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn1", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn2", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "128", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn3", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", "*", "2", ",", "256", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn4", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv1d", "(", "512", ",", "1024", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn5", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.DGCNN_feature.forward": [[733, 755], ["torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "utils.get_graph_feature", "utils.DGCNN_feature.conv1", "utils.get_graph_feature", "utils.DGCNN_feature.conv2", "utils.get_graph_feature", "utils.DGCNN_feature.conv3", "utils.get_graph_feature", "utils.DGCNN_feature.conv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.get_graph_feature", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.get_graph_feature", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.get_graph_feature", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.get_graph_feature"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "x", "=", "get_graph_feature", "(", "x", ",", "k", "=", "20", ",", "device", "=", "self", ".", "device", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x1", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "\n", "\n", "x", "=", "get_graph_feature", "(", "x1", ",", "k", "=", "20", ",", "device", "=", "self", ".", "device", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x2", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "\n", "\n", "x", "=", "get_graph_feature", "(", "x2", ",", "k", "=", "20", ",", "device", "=", "self", ".", "device", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x3", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "\n", "\n", "x", "=", "get_graph_feature", "(", "x3", ",", "k", "=", "20", ",", "device", "=", "self", ".", "device", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x4", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.Local_op.__init__": [[759, 765], ["torch.nn.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "Local_op", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv1d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv1d", "(", "out_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "out_channels", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.Local_op.forward": [[766, 782], ["x.reshape().permute.reshape().permute.size", "print", "print", "print", "print", "x.reshape().permute.reshape().permute.permute", "x.reshape().permute.reshape().permute.reshape", "x.reshape().permute.reshape().permute.size", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "x.reshape().permute.reshape().permute.reshape().permute", "utils.Local_op.conv1", "utils.Local_op.conv2", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "x.reshape().permute.reshape().permute.reshape"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "n", ",", "s", ",", "d", "=", "x", ".", "size", "(", ")", "# torch.Size([32, 512, 32, 6]) ", "\n", "\n", "print", "(", "b", ")", "\n", "print", "(", "n", ")", "\n", "print", "(", "s", ")", "\n", "print", "(", "d", ")", "\n", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", "\n", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "d", ",", "s", ")", "\n", "batch_size", ",", "_", ",", "N", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "# B, D, N #self.bn1()", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "# B, D, N #self.bn2()", "\n", "x", "=", "F", ".", "adaptive_max_pool1d", "(", "x", ",", "1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "x", "=", "x", ".", "reshape", "(", "b", ",", "n", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.Point_Transformer_Last.__init__": [[786, 799], ["torch.nn.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "utils.SA_Layer", "utils.SA_Layer", "utils.SA_Layer", "utils.SA_Layer"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", "=", "256", ")", ":", "\n", "        ", "super", "(", "Point_Transformer_Last", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv1d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv1d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "channels", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "channels", ")", "\n", "\n", "self", ".", "sa1", "=", "SA_Layer", "(", "channels", ")", "\n", "self", ".", "sa2", "=", "SA_Layer", "(", "channels", ")", "\n", "self", ".", "sa3", "=", "SA_Layer", "(", "channels", ")", "\n", "self", ".", "sa4", "=", "SA_Layer", "(", "channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.Point_Transformer_Last.forward": [[800, 817], ["torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "utils.Point_Transformer_Last.sa1", "utils.Point_Transformer_Last.sa2", "utils.Point_Transformer_Last.sa3", "utils.Point_Transformer_Last.sa4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.Point_Transformer_Last.conv1", "utils.Point_Transformer_Last.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# ", "\n", "# b, 3, npoint, nsample  ", "\n", "# conv2d 3 -> 128 channels 1, 1", "\n", "# b * npoint, c, nsample ", "\n", "# permute reshape", "\n", "        ", "batch_size", ",", "_", ",", "N", "=", "x", ".", "size", "(", ")", "\n", "# B, D, N", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "#self.bn1()", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "#self.bn2()", "\n", "x1", "=", "self", ".", "sa1", "(", "x", ")", "\n", "x2", "=", "self", ".", "sa2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "sa3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "sa4", "(", "x3", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.SA_Layer.__init__": [[819, 831], ["torch.nn.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", "SA_Layer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "q_conv", "=", "nn", ".", "Conv1d", "(", "channels", ",", "channels", "//", "4", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "k_conv", "=", "nn", ".", "Conv1d", "(", "channels", ",", "channels", "//", "4", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "q_conv", ".", "weight", "=", "self", ".", "k_conv", ".", "weight", "\n", "self", ".", "q_conv", ".", "bias", "=", "self", ".", "k_conv", ".", "bias", "\n", "\n", "self", ".", "v_conv", "=", "nn", ".", "Conv1d", "(", "channels", ",", "channels", ",", "1", ")", "\n", "self", ".", "trans_conv", "=", "nn", ".", "Conv1d", "(", "channels", ",", "channels", ",", "1", ")", "\n", "self", ".", "after_norm", "=", "nn", ".", "BatchNorm1d", "(", "channels", ")", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.SA_Layer.forward": [[832, 848], ["utils.SA_Layer.q_conv().permute", "utils.SA_Layer.k_conv", "utils.SA_Layer.v_conv", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "utils.SA_Layer.softmax", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "utils.SA_Layer.act", "utils.SA_Layer.after_norm", "utils.SA_Layer.q_conv", "utils.SA_Layer.sum", "utils.SA_Layer.trans_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# b, n, c", "\n", "        ", "x_q", "=", "self", ".", "q_conv", "(", "x", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "# b, c, n", "\n", "x_k", "=", "self", ".", "k_conv", "(", "x", ")", "\n", "x_v", "=", "self", ".", "v_conv", "(", "x", ")", "\n", "# b, n, n", "\n", "energy", "=", "torch", ".", "bmm", "(", "x_q", ",", "x_k", ")", "\n", "\n", "attention", "=", "self", ".", "softmax", "(", "energy", ")", "\n", "attention", "=", "attention", "/", "(", "1e-9", "+", "attention", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "# b, c, n", "\n", "x_r", "=", "torch", ".", "bmm", "(", "x_v", ",", "attention", ")", "\n", "x_r", "=", "self", ".", "act", "(", "self", ".", "after_norm", "(", "self", ".", "trans_conv", "(", "x", "-", "x_r", ")", ")", ")", "\n", "x", "=", "x", "+", "x_r", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointTransformerLayer.__init__": [[852, 872], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "*", ",", "\n", "dim", ",", "\n", "pos_mlp_hidden_dim", "=", "64", ",", "\n", "attn_mlp_hidden_mult", "=", "4", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "to_qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "pos_mlp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "3", ",", "pos_mlp_hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "pos_mlp_hidden_dim", ",", "dim", ")", "\n", ")", "\n", "\n", "self", ".", "attn_mlp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "attn_mlp_hidden_mult", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "dim", "*", "attn_mlp_hidden_mult", ",", "dim", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointTransformerLayer.forward": [[874, 900], ["utils.PointTransformerLayer.to_qkv().chunk", "utils.PointTransformerLayer.pos_mlp", "utils.PointTransformerLayer.attn_mlp().squeeze", "einops.repeat", "utils.PointTransformerLayer.softmax", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "utils.PointTransformerLayer.to_qkv", "utils.PointTransformerLayer.attn_mlp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "pos", ")", ":", "\n", "        ", "n", "=", "x", ".", "shape", "[", "1", "]", "\n", "\n", "# get queries, keys, values", "\n", "q", ",", "k", ",", "v", "=", "self", ".", "to_qkv", "(", "x", ")", ".", "chunk", "(", "3", ",", "dim", "=", "-", "1", ")", "\n", "\n", "# calculate relative positional embeddings", "\n", "rel_pos", "=", "pos", "[", ":", ",", ":", ",", "None", "]", "-", "pos", "[", ":", ",", "None", ",", ":", "]", "\n", "rel_pos_emb", "=", "self", ".", "pos_mlp", "(", "rel_pos", ")", "\n", "\n", "# use subtraction of queries to keys. i suppose this is a better inductive bias for point clouds than dot product", "\n", "qk_rel", "=", "q", "[", ":", ",", ":", ",", "None", "]", "-", "k", "[", ":", ",", "None", ",", ":", "]", "\n", "\n", "# use attention mlp, making sure to add relative positional embedding first", "\n", "sim", "=", "self", ".", "attn_mlp", "(", "qk_rel", "+", "rel_pos_emb", ")", ".", "squeeze", "(", "dim", "=", "-", "1", ")", "\n", "\n", "# expand transformed features and add relative positional embeddings", "\n", "v", "=", "repeat", "(", "v", ",", "'b j d -> b i j d'", ",", "i", "=", "n", ")", "\n", "v", "=", "v", "+", "rel_pos_emb", "\n", "\n", "# attention", "\n", "attn", "=", "sim", ".", "softmax", "(", "dim", "=", "-", "2", ")", "\n", "\n", "# aggregate", "\n", "agg", "=", "einsum", "(", "'b i j d, b i j d -> b i d'", ",", "attn", ",", "v", ")", "\n", "return", "agg", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__init__": [[962, 964], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "std", "=", "0.001", ",", "clip", "=", "0.002", ")", ":", "\n", "        ", "self", ".", "std", ",", "self", ".", "clip", "=", "std", ",", "clip", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudJitter.__call__": [[965, 973], ["numpy.clip", "numpy.clip", "numpy.concatenate", "numpy.random.normal", "numpy.random.normal"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "points", ")", ":", "\n", "# jittered_data = np.clip(np.random.normal(0.0, self.std, points.shape), -self.clip, self.clip)", "\n", "        ", "jittered_xy", "=", "np", ".", "clip", "(", "np", ".", "random", ".", "normal", "(", "0.0", ",", "self", ".", "std", "/", "5.0", ",", "points", "[", "0", ":", "2", ",", ":", "]", ".", "shape", ")", ",", "-", "self", ".", "clip", "/", "5.0", ",", "self", ".", "clip", "/", "5.0", ")", "\n", "jittered_z", "=", "np", ".", "clip", "(", "np", ".", "random", ".", "normal", "(", "0.0", ",", "self", ".", "std", ",", "points", "[", "1", ":", "2", ",", ":", "]", ".", "shape", ")", ",", "-", "self", ".", "clip", ",", "self", ".", "clip", ")", "\n", "jittered_data", "=", "np", ".", "concatenate", "(", "[", "jittered_xy", ",", "jittered_z", "]", ")", "\n", "points", "=", "points", "+", "jittered_data", "\n", "\n", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.PointcloudToTensor.__call__": [[975, 977], ["torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "points", ")", ":", "\n", "        ", "return", "torch", ".", "from_numpy", "(", "points", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._PointFaceDistance.forward": [[994, 1025], ["pytorch3d._C.point_face_dist_forward", "ctx.save_for_backward"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "points", ",", "points_first_idx", ",", "tris", ",", "tris_first_idx", ",", "max_points", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ctx: Context object used to calculate gradients.\n            points: FloatTensor of shape `(P, 3)`\n            points_first_idx: LongTensor of shape `(N,)` indicating the first point\n                index in each example in the batch\n            tris: FloatTensor of shape `(T, 3, 3)` of triangular faces. The `t`-th\n                triangular face is spanned by `(tris[t, 0], tris[t, 1], tris[t, 2])`\n            tris_first_idx: LongTensor of shape `(N,)` indicating the first face\n                index in each example in the batch\n            max_points: Scalar equal to maximum number of points in the batch\n        Returns:\n            dists: FloatTensor of shape `(P,)`, where `dists[p]` is the squared\n                euclidean distance of `p`-th point to the closest triangular face\n                in the corresponding example in the batch\n            idxs: LongTensor of shape `(P,)` indicating the closest triangular face\n                in the corresponding example in the batch.\n\n            `dists[p]` is\n            `d(points[p], tris[idxs[p], 0], tris[idxs[p], 1], tris[idxs[p], 2])`\n            where `d(u, v0, v1, v2)` is the distance of point `u` from the triangular\n            face `(v0, v1, v2)`\n\n        \"\"\"", "\n", "dists", ",", "idxs", "=", "_C", ".", "point_face_dist_forward", "(", "\n", "points", ",", "points_first_idx", ",", "tris", ",", "tris_first_idx", ",", "max_points", "\n", ")", "\n", "ctx", ".", "save_for_backward", "(", "points", ",", "tris", ",", "idxs", ")", "\n", "return", "dists", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._PointFaceDistance.backward": [[1026, 1035], ["grad_dists.contiguous.contiguous.contiguous", "pytorch3d._C.point_face_dist_backward"], "methods", ["None"], ["", "@", "staticmethod", "\n", "@", "once_differentiable", "\n", "def", "backward", "(", "ctx", ",", "grad_dists", ")", ":", "\n", "        ", "grad_dists", "=", "grad_dists", ".", "contiguous", "(", ")", "\n", "points", ",", "tris", ",", "idxs", "=", "ctx", ".", "saved_tensors", "\n", "grad_points", ",", "grad_tris", "=", "_C", ".", "point_face_dist_backward", "(", "\n", "points", ",", "tris", ",", "idxs", ",", "grad_dists", "\n", ")", "\n", "return", "grad_points", ",", "None", ",", "grad_tris", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._FacePointDistance.forward": [[1047, 1076], ["pytorch3d._C.face_point_dist_forward", "ctx.save_for_backward"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "points", ",", "points_first_idx", ",", "tris", ",", "tris_first_idx", ",", "max_tris", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ctx: Context object used to calculate gradients.\n            points: FloatTensor of shape `(P, 3)`\n            points_first_idx: LongTensor of shape `(N,)` indicating the first point\n                index in each example in the batch\n            tris: FloatTensor of shape `(T, 3, 3)` of triangular faces. The `t`-th\n                triangular face is spanned by `(tris[t, 0], tris[t, 1], tris[t, 2])`\n            tris_first_idx: LongTensor of shape `(N,)` indicating the first face\n                index in each example in the batch\n            max_tris: Scalar equal to maximum number of faces in the batch\n        Returns:\n            dists: FloatTensor of shape `(T,)`, where `dists[t]` is the squared\n                euclidean distance of `t`-th trianguar face to the closest point in the\n                corresponding example in the batch\n            idxs: LongTensor of shape `(T,)` indicating the closest point in the\n                corresponding example in the batch.\n\n            `dists[t] = d(points[idxs[t]], tris[t, 0], tris[t, 1], tris[t, 2])`,\n            where `d(u, v0, v1, v2)` is the distance of point `u` from the triangular\n            face `(v0, v1, v2)`.\n        \"\"\"", "\n", "dists", ",", "idxs", "=", "_C", ".", "face_point_dist_forward", "(", "\n", "points", ",", "points_first_idx", ",", "tris", ",", "tris_first_idx", ",", "max_tris", "\n", ")", "\n", "ctx", ".", "save_for_backward", "(", "points", ",", "tris", ",", "idxs", ")", "\n", "return", "dists", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._FacePointDistance.backward": [[1077, 1086], ["grad_dists.contiguous.contiguous.contiguous", "pytorch3d._C.face_point_dist_backward"], "methods", ["None"], ["", "@", "staticmethod", "\n", "@", "once_differentiable", "\n", "def", "backward", "(", "ctx", ",", "grad_dists", ")", ":", "\n", "        ", "grad_dists", "=", "grad_dists", ".", "contiguous", "(", ")", "\n", "points", ",", "tris", ",", "idxs", "=", "ctx", ".", "saved_tensors", "\n", "grad_points", ",", "grad_tris", "=", "_C", ".", "face_point_dist_backward", "(", "\n", "points", ",", "tris", ",", "idxs", ",", "grad_dists", "\n", ")", "\n", "return", "grad_points", ",", "None", ",", "grad_tris", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._PointEdgeDistance.forward": [[1098, 1127], ["pytorch3d._C.point_edge_dist_forward", "ctx.save_for_backward"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "points", ",", "points_first_idx", ",", "segms", ",", "segms_first_idx", ",", "max_points", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ctx: Context object used to calculate gradients.\n            points: FloatTensor of shape `(P, 3)`\n            points_first_idx: LongTensor of shape `(N,)` indicating the first point\n                index for each example in the mesh\n            segms: FloatTensor of shape `(S, 2, 3)` of edge segments. The `s`-th\n                edge segment is spanned by `(segms[s, 0], segms[s, 1])`\n            segms_first_idx: LongTensor of shape `(N,)` indicating the first edge\n                index for each example in the mesh\n            max_points: Scalar equal to maximum number of points in the batch\n        Returns:\n            dists: FloatTensor of shape `(P,)`, where `dists[p]` is the squared\n                euclidean distance of `p`-th point to the closest edge in the\n                corresponding example in the batch\n            idxs: LongTensor of shape `(P,)` indicating the closest edge in the\n                corresponding example in the batch.\n\n            `dists[p] = d(points[p], segms[idxs[p], 0], segms[idxs[p], 1])`,\n            where `d(u, v0, v1)` is the distance of point `u` from the edge segment\n            spanned by `(v0, v1)`.\n        \"\"\"", "\n", "dists", ",", "idxs", "=", "_C", ".", "point_edge_dist_forward", "(", "\n", "points", ",", "points_first_idx", ",", "segms", ",", "segms_first_idx", ",", "max_points", "\n", ")", "\n", "ctx", ".", "save_for_backward", "(", "points", ",", "segms", ",", "idxs", ")", "\n", "return", "dists", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._PointEdgeDistance.backward": [[1128, 1137], ["grad_dists.contiguous.contiguous.contiguous", "pytorch3d._C.point_edge_dist_backward"], "methods", ["None"], ["", "@", "staticmethod", "\n", "@", "once_differentiable", "\n", "def", "backward", "(", "ctx", ",", "grad_dists", ")", ":", "\n", "        ", "grad_dists", "=", "grad_dists", ".", "contiguous", "(", ")", "\n", "points", ",", "segms", ",", "idxs", "=", "ctx", ".", "saved_tensors", "\n", "grad_points", ",", "grad_segms", "=", "_C", ".", "point_edge_dist_backward", "(", "\n", "points", ",", "segms", ",", "idxs", ",", "grad_dists", "\n", ")", "\n", "return", "grad_points", ",", "None", ",", "grad_segms", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._EdgePointDistance.forward": [[1149, 1178], ["pytorch3d._C.edge_point_dist_forward", "ctx.save_for_backward"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "points", ",", "points_first_idx", ",", "segms", ",", "segms_first_idx", ",", "max_segms", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ctx: Context object used to calculate gradients.\n            points: FloatTensor of shape `(P, 3)`\n            points_first_idx: LongTensor of shape `(N,)` indicating the first point\n                index for each example in the mesh\n            segms: FloatTensor of shape `(S, 2, 3)` of edge segments. The `s`-th\n                edge segment is spanned by `(segms[s, 0], segms[s, 1])`\n            segms_first_idx: LongTensor of shape `(N,)` indicating the first edge\n                index for each example in the mesh\n            max_segms: Scalar equal to maximum number of edges in the batch\n        Returns:\n            dists: FloatTensor of shape `(S,)`, where `dists[s]` is the squared\n                euclidean distance of `s`-th edge to the closest point in the\n                corresponding example in the batch\n            idxs: LongTensor of shape `(S,)` indicating the closest point in the\n                corresponding example in the batch.\n\n            `dists[s] = d(points[idxs[s]], edges[s, 0], edges[s, 1])`,\n            where `d(u, v0, v1)` is the distance of point `u` from the segment\n            spanned by `(v0, v1)`.\n        \"\"\"", "\n", "dists", ",", "idxs", "=", "_C", ".", "edge_point_dist_forward", "(", "\n", "points", ",", "points_first_idx", ",", "segms", ",", "segms_first_idx", ",", "max_segms", "\n", ")", "\n", "ctx", ".", "save_for_backward", "(", "points", ",", "segms", ",", "idxs", ")", "\n", "return", "dists", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._EdgePointDistance.backward": [[1179, 1188], ["grad_dists.contiguous.contiguous.contiguous", "pytorch3d._C.edge_point_dist_backward"], "methods", ["None"], ["", "@", "staticmethod", "\n", "@", "once_differentiable", "\n", "def", "backward", "(", "ctx", ",", "grad_dists", ")", ":", "\n", "        ", "grad_dists", "=", "grad_dists", ".", "contiguous", "(", ")", "\n", "points", ",", "segms", ",", "idxs", "=", "ctx", ".", "saved_tensors", "\n", "grad_points", ",", "grad_segms", "=", "_C", ".", "edge_point_dist_backward", "(", "\n", "points", ",", "segms", ",", "idxs", ",", "grad_dists", "\n", ")", "\n", "return", "grad_points", ",", "None", ",", "grad_segms", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.timeit": [[19, 22], ["print", "time.time", "time.time"], "function", ["None"], ["def", "timeit", "(", "tag", ",", "t", ")", ":", "\n", "    ", "print", "(", "\"{}: {}s\"", ".", "format", "(", "tag", ",", "time", "(", ")", "-", "t", ")", ")", "\n", "return", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.pc_normalize": [[23, 30], ["numpy.mean", "numpy.max", "numpy.sqrt", "numpy.sum"], "function", ["None"], ["", "def", "pc_normalize", "(", "pc", ")", ":", "\n", "    ", "l", "=", "pc", ".", "shape", "[", "0", "]", "\n", "centroid", "=", "np", ".", "mean", "(", "pc", ",", "axis", "=", "0", ")", "\n", "pc", "=", "pc", "-", "centroid", "\n", "m", "=", "np", ".", "max", "(", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "pc", "**", "2", ",", "axis", "=", "1", ")", ")", ")", "\n", "pc", "=", "pc", "/", "m", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.square_distance": [[31, 53], ["torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "dst.permute", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["", "def", "square_distance", "(", "src", ",", "dst", ")", ":", "\n", "    ", "\"\"\"\n    Calculate Euclid distance between each two points.\n\n    src^T * dst = xn * xm + yn * ym + zn * zm\uff1b\n    sum(src^2, dim=-1) = xn*xn + yn*yn + zn*zn;\n    sum(dst^2, dim=-1) = xm*xm + ym*ym + zm*zm;\n    dist = (xn - xm)^2 + (yn - ym)^2 + (zn - zm)^2\n         = sum(src**2,dim=-1)+sum(dst**2,dim=-1)-2*src^T*dst\n\n    Input:\n        src: source points, [B, N, C]\n        dst: target points, [B, M, C]\n    Output:\n        dist: per-point square distance, [B, N, M]\n    \"\"\"", "\n", "B", ",", "N", ",", "_", "=", "src", ".", "shape", "\n", "_", ",", "M", ",", "_", "=", "dst", ".", "shape", "\n", "dist", "=", "-", "2", "*", "torch", ".", "matmul", "(", "src", ",", "dst", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "dist", "+=", "torch", ".", "sum", "(", "src", "**", "2", ",", "-", "1", ")", ".", "view", "(", "B", ",", "N", ",", "1", ")", "\n", "dist", "+=", "torch", ".", "sum", "(", "dst", "**", "2", ",", "-", "1", ")", ".", "view", "(", "B", ",", "1", ",", "M", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.index_points": [[55, 72], ["list", "list", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "len", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "index_points", "(", "points", ",", "idx", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        points: input points data, [B, N, C]\n        idx: sample index data, [B, S]\n    Return:\n        new_points:, indexed points data, [B, S, C]\n    \"\"\"", "\n", "device", "=", "points", ".", "device", "\n", "B", "=", "points", ".", "shape", "[", "0", "]", "\n", "view_shape", "=", "list", "(", "idx", ".", "shape", ")", "\n", "view_shape", "[", "1", ":", "]", "=", "[", "1", "]", "*", "(", "len", "(", "view_shape", ")", "-", "1", ")", "\n", "repeat_shape", "=", "list", "(", "idx", ".", "shape", ")", "\n", "repeat_shape", "[", "0", "]", "=", "1", "\n", "batch_indices", "=", "torch", ".", "arange", "(", "B", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", ".", "view", "(", "view_shape", ")", ".", "repeat", "(", "repeat_shape", ")", "\n", "new_points", "=", "points", "[", "batch_indices", ",", "idx", ",", ":", "]", "\n", "return", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.farthest_point_sample": [[74, 98], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.randint().to", "torch.randint().to", "torch.randint().to", "torch.randint().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "range", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "xyz[].view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.max", "torch.max", "torch.max", "torch.max", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "farthest_point_sample", "(", "xyz", ",", "npoint", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        xyz: pointcloud data, [B, N, 3]\n        npoint: number of samples\n    Return:\n        centroids: sampled pointcloud index, [B, npoint]\n    \"\"\"", "\n", "device", "=", "xyz", ".", "device", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "\n", "centroids", "=", "torch", ".", "zeros", "(", "B", ",", "npoint", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "distance", "=", "torch", ".", "ones", "(", "B", ",", "N", ")", ".", "to", "(", "device", ")", "*", "1e10", "\n", "farthest", "=", "torch", ".", "randint", "(", "0", ",", "N", ",", "(", "B", ",", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "batch_indices", "=", "torch", ".", "arange", "(", "B", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "for", "i", "in", "range", "(", "npoint", ")", ":", "\n", "        ", "centroids", "[", ":", ",", "i", "]", "=", "farthest", "\n", "\n", "centroid", "=", "xyz", "[", "batch_indices", ",", "farthest", ",", ":", "]", ".", "view", "(", "B", ",", "1", ",", "3", ")", "\n", "dist", "=", "torch", ".", "sum", "(", "(", "xyz", "-", "centroid", ")", "**", "2", ",", "-", "1", ")", "\n", "mask", "=", "dist", "<", "distance", "\n", "distance", "[", "mask", "]", "=", "dist", "[", "mask", "]", "\n", "farthest", "=", "torch", ".", "max", "(", "distance", ",", "-", "1", ")", "[", "1", "]", "\n", "", "return", "centroids", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.knn_point": [[99, 111], ["utils.square_distance", "torch.topk", "torch.topk", "torch.topk", "torch.topk"], "function", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.square_distance"], ["", "def", "knn_point", "(", "nsample", ",", "xyz", ",", "new_xyz", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        nsample: max sample number in local region\n        xyz: all points, [B, N, C]\n        new_xyz: query points, [B, S, C]\n    Return:\n        group_idx: grouped points index, [B, S, nsample]\n    \"\"\"", "\n", "sqrdists", "=", "square_distance", "(", "new_xyz", ",", "xyz", ")", "\n", "_", ",", "group_idx", "=", "torch", ".", "topk", "(", "sqrdists", ",", "nsample", ",", "dim", "=", "-", "1", ",", "largest", "=", "False", ",", "sorted", "=", "False", ")", "\n", "return", "group_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.query_ball_point": [[113, 134], ["torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "utils.square_distance", "group_idx[].view().repeat", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view().repeat.sort", "group_idx[].view", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.square_distance"], ["", "def", "query_ball_point", "(", "radius", ",", "nsample", ",", "xyz", ",", "new_xyz", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        radius: local region radius\n        nsample: max sample number in local region\n        xyz: all points, [B, N, 3]\n        new_xyz: query points, [B, S, 3]\n    Return:\n        group_idx: grouped points index, [B, S, nsample]\n    \"\"\"", "\n", "device", "=", "xyz", ".", "device", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "_", ",", "S", ",", "_", "=", "new_xyz", ".", "shape", "\n", "group_idx", "=", "torch", ".", "arange", "(", "N", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", ".", "view", "(", "1", ",", "1", ",", "N", ")", ".", "repeat", "(", "[", "B", ",", "S", ",", "1", "]", ")", "\n", "sqrdists", "=", "square_distance", "(", "new_xyz", ",", "xyz", ")", "\n", "group_idx", "[", "sqrdists", ">", "radius", "**", "2", "]", "=", "N", "\n", "group_idx", "=", "group_idx", ".", "sort", "(", "dim", "=", "-", "1", ")", "[", "0", "]", "[", ":", ",", ":", ",", ":", "nsample", "]", "\n", "group_first", "=", "group_idx", "[", ":", ",", ":", ",", "0", "]", ".", "view", "(", "B", ",", "S", ",", "1", ")", ".", "repeat", "(", "[", "1", ",", "1", ",", "nsample", "]", ")", "\n", "mask", "=", "group_idx", "==", "N", "\n", "group_idx", "[", "mask", "]", "=", "group_first", "[", "mask", "]", "\n", "return", "group_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.sample_and_group": [[136, 178], ["utils.farthest_point_sample", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "utils.index_points", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "utils.index_points", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "utils.query_ball_point", "utils.knn_point", "index_points.view", "utils.index_points", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.farthest_point_sample", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.index_points", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.index_points", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.query_ball_point", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.knn_point", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.index_points"], ["", "def", "sample_and_group", "(", "npoint", ",", "radius", ",", "nsample", ",", "xyz", ",", "points", ",", "returnfps", "=", "False", ",", "query_method", "=", "\"ball\"", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        npoint:\n        radius:\n        nsample:\n        xyz: input points position data, [B, N, 3]\n        points: input points data, [B, N, D]\n    Return:\n        new_xyz: sampled points position data, [B, npoint, nsample, 3]\n        new_points: sampled points data, [B, npoint, nsample, 3+D]\n    \"\"\"", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "S", "=", "npoint", "\n", "fps_idx", "=", "farthest_point_sample", "(", "xyz", ",", "npoint", ")", "# [B, npoint, C]", "\n", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "new_xyz", "=", "index_points", "(", "xyz", ",", "fps_idx", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "if", "query_method", "==", "\"ball\"", ":", "\n", "        ", "idx", "=", "query_ball_point", "(", "radius", ",", "nsample", ",", "xyz", ",", "new_xyz", ")", "\n", "#idx = query_ball_point(radius, nsample, xyz, new_xyz)", "\n", "", "else", ":", "\n", "        ", "idx", "=", "knn_point", "(", "nsample", ",", "xyz", ",", "new_xyz", ")", "\n", "\n", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "grouped_xyz", "=", "index_points", "(", "xyz", ",", "idx", ")", "# [B, npoint, nsample, C]", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "grouped_xyz_norm", "=", "grouped_xyz", "-", "new_xyz", ".", "view", "(", "B", ",", "S", ",", "1", ",", "C", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "if", "points", "is", "not", "None", ":", "\n", "        ", "grouped_points", "=", "index_points", "(", "points", ",", "idx", ")", "\n", "new_points", "=", "torch", ".", "cat", "(", "[", "grouped_xyz_norm", ",", "grouped_points", "]", ",", "dim", "=", "-", "1", ")", "# [B, npoint, nsample, C+D]", "\n", "", "else", ":", "\n", "        ", "new_points", "=", "grouped_xyz_norm", "\n", "\n", "", "if", "returnfps", ":", "\n", "        ", "return", "new_xyz", ",", "new_points", ",", "grouped_xyz", ",", "fps_idx", "\n", "", "else", ":", "\n", "        ", "return", "new_xyz", ",", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.sample_and_group_all": [[180, 198], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "xyz.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "points.view"], "function", ["None"], ["", "", "def", "sample_and_group_all", "(", "xyz", ",", "points", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        xyz: input points position data, [B, N, 3]\n        points: input points data, [B, N, D]\n    Return:\n        new_xyz: sampled points position data, [B, 1, 3]\n        new_points: sampled points data, [B, 1, N, 3+D]\n    \"\"\"", "\n", "device", "=", "xyz", ".", "device", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "new_xyz", "=", "torch", ".", "zeros", "(", "B", ",", "1", ",", "C", ")", ".", "to", "(", "device", ")", "\n", "grouped_xyz", "=", "xyz", ".", "view", "(", "B", ",", "1", ",", "N", ",", "C", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "        ", "new_points", "=", "torch", ".", "cat", "(", "[", "grouped_xyz", ",", "points", ".", "view", "(", "B", ",", "1", ",", "N", ",", "-", "1", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "new_points", "=", "grouped_xyz", "\n", "", "return", "new_xyz", ",", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.feature_transform_reguliarzer": [[487, 494], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "trans.size", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "I.cuda.cuda", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "trans.transpose"], "function", ["None"], ["", "", "", "def", "feature_transform_reguliarzer", "(", "trans", ")", ":", "\n", "    ", "d", "=", "trans", ".", "size", "(", ")", "[", "1", "]", "\n", "I", "=", "torch", ".", "eye", "(", "d", ")", "[", "None", ",", ":", ",", ":", "]", "\n", "if", "trans", ".", "is_cuda", ":", "\n", "        ", "I", "=", "I", ".", "cuda", "(", ")", "\n", "", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "norm", "(", "torch", ".", "bmm", "(", "trans", ",", "trans", ".", "transpose", "(", "2", ",", "1", ")", "-", "I", ")", ",", "dim", "=", "(", "1", ",", "2", ")", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.compute_density": [[497, 508], ["utils.square_distance", "gaussion_density.mean", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "function", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.square_distance"], ["", "def", "compute_density", "(", "xyz", ",", "bandwidth", ")", ":", "\n", "    ", "'''\n    xyz: input points position data, [B, N, C]\n    '''", "\n", "#import ipdb; ipdb.set_trace()", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "sqrdists", "=", "square_distance", "(", "xyz", ",", "xyz", ")", "\n", "gaussion_density", "=", "torch", ".", "exp", "(", "-", "sqrdists", "/", "(", "2.0", "*", "bandwidth", "*", "bandwidth", ")", ")", "/", "(", "2.5", "*", "bandwidth", ")", "\n", "xyz_density", "=", "gaussion_density", ".", "mean", "(", "dim", "=", "-", "1", ")", "\n", "\n", "return", "xyz_density", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.knn": [[682, 689], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.sum.transpose", "pairwise_distance.topk", "x.transpose"], "function", ["None"], ["", "", "def", "knn", "(", "x", ",", "k", ")", ":", "\n", "    ", "inner", "=", "-", "2", "*", "torch", ".", "matmul", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ",", "x", ")", "\n", "xx", "=", "torch", ".", "sum", "(", "x", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pairwise_distance", "=", "-", "xx", "-", "inner", "-", "xx", ".", "transpose", "(", "2", ",", "1", ")", "\n", "\n", "idx", "=", "pairwise_distance", ".", "topk", "(", "k", "=", "k", ",", "dim", "=", "-", "1", ")", "[", "1", "]", "# (batch_size, num_points, k)", "\n", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.get_graph_feature": [[691, 712], ["torch.device", "torch.device", "torch.device", "torch.device", "x.view().repeat.size", "x.view().repeat.size", "x.view().repeat.view", "knn.view", "x.view().repeat.size", "x.view().repeat.transpose().contiguous", "torch.cat().permute().contiguous.view", "x.view().repeat.view().repeat", "torch.cat().permute().contiguous", "torch.cat().permute().contiguous", "torch.cat().permute().contiguous", "torch.cat().permute().contiguous", "utils.knn", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "x.view().repeat.view", "x.view().repeat.transpose", "x.view().repeat.view", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.knn"], ["", "def", "get_graph_feature", "(", "x", ",", "k", "=", "20", ",", "idx", "=", "None", ",", "device", "=", "torch", ".", "device", "(", "'cuda:0'", ")", ")", ":", "\n", "    ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "num_points", "=", "x", ".", "size", "(", "2", ")", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "-", "1", ",", "num_points", ")", "\n", "if", "idx", "is", "None", ":", "\n", "        ", "idx", "=", "knn", "(", "x", ",", "k", "=", "k", ")", "# (batch_size, num_points, k)", "\n", "\n", "", "idx_base", "=", "torch", ".", "arange", "(", "0", ",", "batch_size", ",", "device", "=", "device", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "*", "num_points", "\n", "\n", "idx", "=", "idx", "+", "idx_base", "\n", "idx", "=", "idx", ".", "view", "(", "-", "1", ")", "\n", "_", ",", "num_dims", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", "# (batch_size, num_points, num_dims)  -> (batch_size*num_points, num_dims) #   batch_size * num_points * k + range(0, batch_size*num_points)", "\n", "feature", "=", "x", ".", "view", "(", "batch_size", "*", "num_points", ",", "-", "1", ")", "[", "idx", ",", ":", "]", "\n", "feature", "=", "feature", ".", "view", "(", "batch_size", ",", "num_points", ",", "k", ",", "num_dims", ")", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "num_points", ",", "1", ",", "num_dims", ")", ".", "repeat", "(", "1", ",", "1", ",", "k", ",", "1", ")", "\n", "\n", "feature", "=", "torch", ".", "cat", "(", "(", "feature", "-", "x", ",", "x", ")", ",", "dim", "=", "3", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.project3dto2d_K": [[902, 916], ["numpy.zeros"], "function", ["None"], ["", "", "def", "project3dto2d_K", "(", "cam_f", ",", "cam_c", ",", "verts3d", ")", ":", "\n", "    ", "'''\n    project 3d points to original 2d coordinate space.\n    '''", "\n", "fx", "=", "cam_f", "[", "0", "]", "\n", "fy", "=", "cam_f", "[", "1", "]", "\n", "tx", "=", "cam_c", "[", "0", "]", "\n", "ty", "=", "cam_c", "[", "1", "]", "\n", "# verts = verts.reshape(-1, 3)", "\n", "verts2d", "=", "np", ".", "zeros", "(", "(", "verts3d", ".", "shape", "[", "0", "]", ",", "2", ")", ")", "\n", "# use coordinate system", "\n", "verts2d", "[", ":", ",", "0", "]", "=", "fx", "*", "verts3d", "[", ":", ",", "0", "]", "/", "verts3d", "[", ":", ",", "2", "]", "+", "tx", "\n", "verts2d", "[", ":", ",", "1", "]", "=", "fy", "*", "verts3d", "[", ":", ",", "1", "]", "/", "verts3d", "[", ":", ",", "2", "]", "+", "ty", "\n", "return", "verts2d", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.projectDepthtoPoint_K": [[918, 945], ["numpy.where", "numpy.zeros", "numpy.clip", "numpy.random.normal"], "function", ["None"], ["", "def", "projectDepthtoPoint_K", "(", "depth", ",", "cam_K", ",", "noise", "=", "False", ")", ":", "\n", "    ", "'''\n    project depth map to 3D pointcloud.\n    '''", "\n", "fx", "=", "cam_K", "[", "0", "]", "\n", "fy", "=", "cam_K", "[", "1", "]", "\n", "tx", "=", "cam_K", "[", "2", "]", "\n", "ty", "=", "cam_K", "[", "3", "]", "\n", "\n", "indices", "=", "np", ".", "where", "(", "depth", ">", "0.0", ")", "\n", "# initialize the depth3d and point3d (use nonzero depth)", "\n", "depth3d", "=", "np", ".", "zeros", "(", "(", "3", ",", "depth", "[", "indices", "]", ".", "shape", "[", "0", "]", ")", ")", "\n", "point3d", "=", "depth3d", "\n", "\n", "depth3d", "[", "0", ",", ":", "]", "=", "255", "-", "indices", "[", "1", "]", "\n", "depth3d", "[", "1", ",", ":", "]", "=", "indices", "[", "0", "]", "\n", "depth3d", "[", "2", ",", ":", "]", "=", "depth", "[", "indices", "]", "\n", "if", "noise", ":", "\n", "        ", "jittered_data", "=", "np", ".", "clip", "(", "np", ".", "random", ".", "normal", "(", "0.0", ",", "0.05", ",", "depth3d", "[", "2", ",", ":", "]", ".", "shape", ")", ",", "-", "0.1", ",", "0.1", ")", "\n", "depth3d", "[", "2", ",", ":", "]", "=", "depth3d", "[", "2", ",", ":", "]", "+", "jittered_data", "\n", "\n", "# use camera intrinsic to get", "\n", "", "point3d", "[", "0", ",", ":", "]", "=", "(", "depth3d", "[", "0", ",", ":", "]", "-", "tx", ")", "*", "depth3d", "[", "2", ",", ":", "]", "/", "fx", "\n", "point3d", "[", "1", ",", ":", "]", "=", "-", "(", "depth3d", "[", "1", ",", ":", "]", "-", "ty", ")", "*", "depth3d", "[", "2", ",", ":", "]", "/", "fy", "\n", "point3d", "[", "2", ",", ":", "]", "=", "depth3d", "[", "2", ",", ":", "]", "\n", "\n", "return", "point3d", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.point_resample": [[947, 959], ["numpy.random.choice", "numpy.concatenate", "numpy.random.choice"], "function", ["None"], ["", "def", "point_resample", "(", "point3d", ",", "number", "=", "10000", ")", ":", "\n", "\n", "    ", "C", ",", "N", "=", "point3d", ".", "shape", "\n", "if", "N", "<", "number", ":", "\n", "        ", "num_add", "=", "np", ".", "random", ".", "choice", "(", "N", ",", "number", "-", "N", ",", "replace", "=", "True", ")", "\n", "point_add", "=", "point3d", "[", ":", ",", "num_add", "]", "\n", "point_new", "=", "np", ".", "concatenate", "(", "(", "point3d", ",", "point_add", ")", ",", "axis", "=", "1", ",", ")", "\n", "", "else", ":", "\n", "        ", "number_selected", "=", "np", ".", "random", ".", "choice", "(", "N", ",", "number", ",", "replace", "=", "False", ")", "\n", "point_new", "=", "point3d", "[", ":", ",", "number_selected", "]", "\n", "\n", "", "return", "point_new", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.point_mesh_edge_distance_sep": [[1194, 1259], ["len", "pcls.points_packed", "pcls.cloud_to_packed_first_idx", "pcls.num_points_per_cloud().max().item", "meshes.verts_packed", "meshes.edges_packed", "meshes.mesh_to_edges_packed_first_idx", "meshes.num_edges_per_mesh().max().item", "point_edge_distance", "pcls.packed_to_cloud_idx", "pcls.num_points_per_cloud", "pcls.num_points_per_cloud.gather", "edge_point_distance", "meshes.edges_packed_to_mesh_idx", "meshes.num_edges_per_mesh", "meshes.num_edges_per_mesh.gather", "len", "len", "ValueError", "num_points_per_cloud.gather.float", "point_edge_distance.sum", "num_segms_per_mesh.gather.float", "edge_point_distance.sum", "pcls.num_points_per_cloud().max", "meshes.num_edges_per_mesh().max", "pcls.num_points_per_cloud", "meshes.num_edges_per_mesh"], "function", ["None"], ["def", "point_mesh_edge_distance_sep", "(", "meshes", ":", "Meshes", ",", "pcls", ":", "Pointclouds", ")", ":", "\n", "    ", "\"\"\"\n    Computes the distance between a pointcloud and a mesh within a batch.\n    Given a pair `(mesh, pcl)` in the batch, we define the distance to be the\n    sum of two distances, namely `point_edge(mesh, pcl) + edge_point(mesh, pcl)`\n\n    `point_edge(mesh, pcl)`: Computes the squared distance of each point p in pcl\n        to the closest edge segment in mesh and averages across all points in pcl\n    `edge_point(mesh, pcl)`: Computes the squared distance of each edge segment in mesh\n        to the closest point in pcl and averages across all edges in mesh.\n\n    The above distance functions are applied for all `(mesh, pcl)` pairs in the batch\n    and then averaged across the batch.\n\n    Args:\n        meshes: A Meshes data structure containing N meshes\n        pcls: A Pointclouds data structure containing N pointclouds\n\n    Returns:\n        loss: The `point_edge(mesh, pcl) + edge_point(mesh, pcl)` distance\n            between all `(mesh, pcl)` in a batch averaged across the batch.\n    \"\"\"", "\n", "if", "len", "(", "meshes", ")", "!=", "len", "(", "pcls", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"meshes and pointclouds must be equal sized batches\"", ")", "\n", "", "N", "=", "len", "(", "meshes", ")", "\n", "\n", "# packed representation for pointclouds", "\n", "points", "=", "pcls", ".", "points_packed", "(", ")", "# (P, 3)", "\n", "points_first_idx", "=", "pcls", ".", "cloud_to_packed_first_idx", "(", ")", "\n", "max_points", "=", "pcls", ".", "num_points_per_cloud", "(", ")", ".", "max", "(", ")", ".", "item", "(", ")", "\n", "\n", "# packed representation for edges", "\n", "verts_packed", "=", "meshes", ".", "verts_packed", "(", ")", "\n", "edges_packed", "=", "meshes", ".", "edges_packed", "(", ")", "\n", "segms", "=", "verts_packed", "[", "edges_packed", "]", "# (S, 2, 3)", "\n", "segms_first_idx", "=", "meshes", ".", "mesh_to_edges_packed_first_idx", "(", ")", "\n", "max_segms", "=", "meshes", ".", "num_edges_per_mesh", "(", ")", ".", "max", "(", ")", ".", "item", "(", ")", "\n", "\n", "# point to edge distance: shape (P,)", "\n", "point_to_edge", "=", "point_edge_distance", "(", "\n", "points", ",", "points_first_idx", ",", "segms", ",", "segms_first_idx", ",", "max_points", "\n", ")", "\n", "\n", "# weight each example by the inverse of number of points in the example", "\n", "point_to_cloud_idx", "=", "pcls", ".", "packed_to_cloud_idx", "(", ")", "# (sum(P_i), )", "\n", "num_points_per_cloud", "=", "pcls", ".", "num_points_per_cloud", "(", ")", "# (N,)", "\n", "weights_p", "=", "num_points_per_cloud", ".", "gather", "(", "0", ",", "point_to_cloud_idx", ")", "\n", "weights_p", "=", "1.0", "/", "weights_p", ".", "float", "(", ")", "\n", "point_to_edge", "=", "point_to_edge", "*", "weights_p", "\n", "point_dist", "=", "point_to_edge", ".", "sum", "(", ")", "/", "N", "\n", "\n", "# edge to edge distance: shape (S,)", "\n", "edge_to_point", "=", "edge_point_distance", "(", "\n", "points", ",", "points_first_idx", ",", "segms", ",", "segms_first_idx", ",", "max_segms", "\n", ")", "\n", "\n", "# weight each example by the inverse of number of edges in the example", "\n", "segm_to_mesh_idx", "=", "meshes", ".", "edges_packed_to_mesh_idx", "(", ")", "# (sum(S_n),)", "\n", "num_segms_per_mesh", "=", "meshes", ".", "num_edges_per_mesh", "(", ")", "# (N,)", "\n", "weights_s", "=", "num_segms_per_mesh", ".", "gather", "(", "0", ",", "segm_to_mesh_idx", ")", "\n", "weights_s", "=", "1.0", "/", "weights_s", ".", "float", "(", ")", "\n", "edge_to_point", "=", "edge_to_point", "*", "weights_s", "\n", "edge_dist", "=", "edge_to_point", ".", "sum", "(", ")", "/", "N", "\n", "\n", "return", "point_dist", ",", "edge_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.point_mesh_face_distance_sep": [[1261, 1327], ["len", "pcls.points_packed", "pcls.cloud_to_packed_first_idx", "pcls.num_points_per_cloud().max().item", "meshes.verts_packed", "meshes.faces_packed", "meshes.mesh_to_faces_packed_first_idx", "meshes.num_faces_per_mesh().max().item", "point_face_distance", "pcls.packed_to_cloud_idx", "pcls.num_points_per_cloud", "pcls.num_points_per_cloud.gather", "point_face_distance.sum", "face_point_distance", "meshes.faces_packed_to_mesh_idx", "meshes.num_faces_per_mesh", "meshes.num_faces_per_mesh.gather", "face_point_distance.sum", "len", "len", "ValueError", "num_points_per_cloud.gather.float", "num_tris_per_mesh.gather.float", "pcls.num_points_per_cloud().max", "meshes.num_faces_per_mesh().max", "pcls.num_points_per_cloud", "meshes.num_faces_per_mesh"], "function", ["None"], ["", "def", "point_mesh_face_distance_sep", "(", "meshes", ":", "Meshes", ",", "pcls", ":", "Pointclouds", ")", ":", "\n", "    ", "\"\"\"\n    Computes the distance between a pointcloud and a mesh within a batch.\n    Given a pair `(mesh, pcl)` in the batch, we define the distance to be the\n    sum of two distances, namely `point_face(mesh, pcl) + face_point(mesh, pcl)`\n\n    `point_face(mesh, pcl)`: Computes the squared distance of each point p in pcl\n        to the closest triangular face in mesh and averages across all points in pcl\n    `face_point(mesh, pcl)`: Computes the squared distance of each triangular face in\n        mesh to the closest point in pcl and averages across all faces in mesh.\n\n    The above distance functions are applied for all `(mesh, pcl)` pairs in the batch\n    and then averaged across the batch.\n\n    Args:\n        meshes: A Meshes data structure containing N meshes\n        pcls: A Pointclouds data structure containing N pointclouds\n\n    Returns:\n        loss: The `point_face(mesh, pcl) + face_point(mesh, pcl)` distance\n            between all `(mesh, pcl)` in a batch averaged across the batch.\n    \"\"\"", "\n", "\n", "if", "len", "(", "meshes", ")", "!=", "len", "(", "pcls", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"meshes and pointclouds must be equal sized batches\"", ")", "\n", "", "N", "=", "len", "(", "meshes", ")", "\n", "\n", "# packed representation for pointclouds", "\n", "points", "=", "pcls", ".", "points_packed", "(", ")", "# (P, 3)", "\n", "points_first_idx", "=", "pcls", ".", "cloud_to_packed_first_idx", "(", ")", "\n", "max_points", "=", "pcls", ".", "num_points_per_cloud", "(", ")", ".", "max", "(", ")", ".", "item", "(", ")", "\n", "\n", "# packed representation for faces", "\n", "verts_packed", "=", "meshes", ".", "verts_packed", "(", ")", "\n", "faces_packed", "=", "meshes", ".", "faces_packed", "(", ")", "\n", "tris", "=", "verts_packed", "[", "faces_packed", "]", "# (T, 3, 3)", "\n", "tris_first_idx", "=", "meshes", ".", "mesh_to_faces_packed_first_idx", "(", ")", "\n", "max_tris", "=", "meshes", ".", "num_faces_per_mesh", "(", ")", ".", "max", "(", ")", ".", "item", "(", ")", "\n", "\n", "# point to face distance: shape (P,)", "\n", "point_to_face", "=", "point_face_distance", "(", "\n", "points", ",", "points_first_idx", ",", "tris", ",", "tris_first_idx", ",", "max_points", "\n", ")", "\n", "\n", "# weight each example by the inverse of number of points in the example", "\n", "point_to_cloud_idx", "=", "pcls", ".", "packed_to_cloud_idx", "(", ")", "# (sum(P_i),)", "\n", "num_points_per_cloud", "=", "pcls", ".", "num_points_per_cloud", "(", ")", "# (N,)", "\n", "weights_p", "=", "num_points_per_cloud", ".", "gather", "(", "0", ",", "point_to_cloud_idx", ")", "\n", "weights_p", "=", "1.0", "/", "weights_p", ".", "float", "(", ")", "\n", "point_to_face", "=", "point_to_face", "*", "weights_p", "\n", "point_dist", "=", "point_to_face", ".", "sum", "(", ")", "\n", "\n", "# face to point distance: shape (T,)", "\n", "face_to_point", "=", "face_point_distance", "(", "\n", "points", ",", "points_first_idx", ",", "tris", ",", "tris_first_idx", ",", "max_tris", "\n", ")", "\n", "\n", "# weight each example by the inverse of number of faces in the example", "\n", "tri_to_mesh_idx", "=", "meshes", ".", "faces_packed_to_mesh_idx", "(", ")", "# (sum(T_n),)", "\n", "num_tris_per_mesh", "=", "meshes", ".", "num_faces_per_mesh", "(", ")", "# (N, )", "\n", "weights_t", "=", "num_tris_per_mesh", ".", "gather", "(", "0", ",", "tri_to_mesh_idx", ")", "\n", "weights_t", "=", "1.0", "/", "weights_t", ".", "float", "(", ")", "\n", "face_to_point", "=", "face_to_point", "*", "weights_t", "\n", "face_dist", "=", "face_to_point", ".", "sum", "(", ")", "\n", "\n", "return", "point_dist", ",", "face_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._validate_chamfer_reduction_inputs": [[1329, 1343], ["ValueError", "ValueError"], "function", ["None"], ["", "def", "_validate_chamfer_reduction_inputs", "(", "\n", "batch_reduction", ":", "Union", "[", "str", ",", "None", "]", ",", "point_reduction", ":", "str", "\n", ")", ":", "\n", "    ", "\"\"\"Check the requested reductions are valid.\n    Args:\n        batch_reduction: Reduction operation to apply for the loss across the\n            batch, can be one of [\"mean\", \"sum\"] or None.\n        point_reduction: Reduction operation to apply for the loss across the\n            points, can be one of [\"mean\", \"sum\"].\n    \"\"\"", "\n", "if", "batch_reduction", "is", "not", "None", "and", "batch_reduction", "not", "in", "[", "\"mean\"", ",", "\"sum\"", "]", ":", "\n", "        ", "raise", "ValueError", "(", "'batch_reduction must be one of [\"mean\", \"sum\"] or None'", ")", "\n", "", "if", "point_reduction", "not", "in", "[", "\"mean\"", ",", "\"sum\"", "]", ":", "\n", "        ", "raise", "ValueError", "(", "'point_reduction must be one of [\"mean\", \"sum\"]'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._handle_pointcloud_input": [[1345, 1381], ["isinstance", "points.points_padded", "points.num_points_per_cloud", "points.normals_padded", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "ValueError", "ValueError", "ValueError", "torch.full", "torch.full", "torch.full", "torch.full", "ValueError"], "function", ["None"], ["", "", "def", "_handle_pointcloud_input", "(", "\n", "points", ":", "Union", "[", "torch", ".", "Tensor", ",", "Pointclouds", "]", ",", "\n", "lengths", ":", "Union", "[", "torch", ".", "Tensor", ",", "None", "]", ",", "\n", "normals", ":", "Union", "[", "torch", ".", "Tensor", ",", "None", "]", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    If points is an instance of Pointclouds, retrieve the padded points tensor\n    along with the number of points per batch and the padded normals.\n    Otherwise, return the input points (and normals) with the number of points per cloud\n    set to the size of the second dimension of `points`.\n    \"\"\"", "\n", "if", "isinstance", "(", "points", ",", "Pointclouds", ")", ":", "\n", "        ", "X", "=", "points", ".", "points_padded", "(", ")", "\n", "lengths", "=", "points", ".", "num_points_per_cloud", "(", ")", "\n", "normals", "=", "points", ".", "normals_padded", "(", ")", "# either a tensor or None", "\n", "", "elif", "torch", ".", "is_tensor", "(", "points", ")", ":", "\n", "        ", "if", "points", ".", "ndim", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"Expected points to be of shape (N, P, D)\"", ")", "\n", "", "X", "=", "points", "\n", "if", "lengths", "is", "not", "None", "and", "(", "\n", "lengths", ".", "ndim", "!=", "1", "or", "lengths", ".", "shape", "[", "0", "]", "!=", "X", ".", "shape", "[", "0", "]", "\n", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Expected lengths to be of shape (N,)\"", ")", "\n", "", "if", "lengths", "is", "None", ":", "\n", "            ", "lengths", "=", "torch", ".", "full", "(", "\n", "(", "X", ".", "shape", "[", "0", "]", ",", ")", ",", "X", ".", "shape", "[", "1", "]", ",", "dtype", "=", "torch", ".", "int64", ",", "device", "=", "points", ".", "device", "\n", ")", "\n", "", "if", "normals", "is", "not", "None", "and", "normals", ".", "ndim", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"Expected normals to be of shape (N, P, 3\"", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"The input pointclouds should be either \"", "\n", "+", "\"Pointclouds objects or torch.Tensor of shape \"", "\n", "+", "\"(minibatch, num_points, 3).\"", "\n", ")", "\n", "", "return", "X", ",", "lengths", ",", "normals", "\n", "\n"]], "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils.chamfer_distance_sep": [[1383, 1535], ["utils._validate_chamfer_reduction_inputs", "utils._handle_pointcloud_input", "utils._handle_pointcloud_input", "x.new_zeros", "x.new_zeros", "pytorch3d.ops.knn.knn_points", "pytorch3d.ops.knn.knn_points", "cham_x.sum.sum", "cham_y.sum.sum", "ValueError", "weights.view.view", "weights.view.view", "cham_norm_x.sum.sum", "cham_norm_y.sum.sum", "cham_x.sum.sum", "cham_y.sum.sum", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "weights.view.size", "ValueError", "ValueError", "weights.view.sum", "weights.view.view", "pytorch3d.ops.knn.knn_gather", "pytorch3d.ops.knn.knn_gather", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "weights.view.view", "weights.view.view", "cham_norm_x.sum.sum", "cham_norm_y.sum.sum", "torch.cosine_similarity", "torch.cosine_similarity", "weights.view.sum", "x.sum", "x.sum", "x.sum", "x.sum"], "function", ["home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._validate_chamfer_reduction_inputs", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._handle_pointcloud_input", "home.repos.pwc.inspect_result.wangsen1312_unsupervised3dhuman.src.utils._handle_pointcloud_input"], ["", "def", "chamfer_distance_sep", "(", "\n", "x", ",", "\n", "y", ",", "\n", "x_lengths", "=", "None", ",", "\n", "y_lengths", "=", "None", ",", "\n", "x_normals", "=", "None", ",", "\n", "y_normals", "=", "None", ",", "\n", "weights", "=", "None", ",", "\n", "batch_reduction", ":", "Union", "[", "str", ",", "None", "]", "=", "\"mean\"", ",", "\n", "point_reduction", ":", "str", "=", "\"mean\"", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Chamfer distance between two pointclouds x and y.\n    Args:\n        x: FloatTensor of shape (N, P1, D) or a Pointclouds object representing\n            a batch of point clouds with at most P1 points in each batch element,\n            batch size N and feature dimension D.\n        y: FloatTensor of shape (N, P2, D) or a Pointclouds object representing\n            a batch of point clouds with at most P2 points in each batch element,\n            batch size N and feature dimension D.\n        x_lengths: Optional LongTensor of shape (N,) giving the number of points in each\n            cloud in x.\n        y_lengths: Optional LongTensor of shape (N,) giving the number of points in each\n            cloud in x.\n        x_normals: Optional FloatTensor of shape (N, P1, D).\n        y_normals: Optional FloatTensor of shape (N, P2, D).\n        weights: Optional FloatTensor of shape (N,) giving weights for\n            batch elements for reduction operation.\n        batch_reduction: Reduction operation to apply for the loss across the\n            batch, can be one of [\"mean\", \"sum\"] or None.\n        point_reduction: Reduction operation to apply for the loss across the\n            points, can be one of [\"mean\", \"sum\"].\n    Returns:\n        2-element tuple containing\n        - **loss**: Tensor giving the reduced distance between the pointclouds\n          in x and the pointclouds in y.\n        - **loss_normals**: Tensor giving the reduced cosine distance of normals\n          between pointclouds in x and pointclouds in y. Returns None if\n          x_normals and y_normals are None.\n    \"\"\"", "\n", "_validate_chamfer_reduction_inputs", "(", "batch_reduction", ",", "point_reduction", ")", "\n", "\n", "x", ",", "x_lengths", ",", "x_normals", "=", "_handle_pointcloud_input", "(", "x", ",", "x_lengths", ",", "x_normals", ")", "\n", "y", ",", "y_lengths", ",", "y_normals", "=", "_handle_pointcloud_input", "(", "y", ",", "y_lengths", ",", "y_normals", ")", "\n", "\n", "return_normals", "=", "x_normals", "is", "not", "None", "and", "y_normals", "is", "not", "None", "\n", "\n", "N", ",", "P1", ",", "D", "=", "x", ".", "shape", "\n", "P2", "=", "y", ".", "shape", "[", "1", "]", "\n", "\n", "# Check if inputs are heterogeneous and create a lengths mask.", "\n", "is_x_heterogeneous", "=", "(", "x_lengths", "!=", "P1", ")", ".", "any", "(", ")", "\n", "is_y_heterogeneous", "=", "(", "y_lengths", "!=", "P2", ")", ".", "any", "(", ")", "\n", "x_mask", "=", "(", "\n", "torch", ".", "arange", "(", "P1", ",", "device", "=", "x", ".", "device", ")", "[", "None", "]", ">=", "x_lengths", "[", ":", ",", "None", "]", "\n", ")", "# shape [N, P1]", "\n", "y_mask", "=", "(", "\n", "torch", ".", "arange", "(", "P2", ",", "device", "=", "y", ".", "device", ")", "[", "None", "]", ">=", "y_lengths", "[", ":", ",", "None", "]", "\n", ")", "# shape [N, P2]", "\n", "\n", "if", "y", ".", "shape", "[", "0", "]", "!=", "N", "or", "y", ".", "shape", "[", "2", "]", "!=", "D", ":", "\n", "        ", "raise", "ValueError", "(", "\"y does not have the correct shape.\"", ")", "\n", "", "if", "weights", "is", "not", "None", ":", "\n", "        ", "if", "weights", ".", "size", "(", "0", ")", "!=", "N", ":", "\n", "            ", "raise", "ValueError", "(", "\"weights must be of shape (N,).\"", ")", "\n", "", "if", "not", "(", "weights", ">=", "0", ")", ".", "all", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"weights cannot be negative.\"", ")", "\n", "", "if", "weights", ".", "sum", "(", ")", "==", "0.0", ":", "\n", "            ", "weights", "=", "weights", ".", "view", "(", "N", ",", "1", ")", "\n", "if", "batch_reduction", "in", "[", "\"mean\"", ",", "\"sum\"", "]", ":", "\n", "                ", "return", "(", "\n", "(", "x", ".", "sum", "(", "(", "1", ",", "2", ")", ")", "*", "weights", ")", ".", "sum", "(", ")", "*", "0.0", ",", "\n", "(", "x", ".", "sum", "(", "(", "1", ",", "2", ")", ")", "*", "weights", ")", ".", "sum", "(", ")", "*", "0.0", ",", "\n", ")", "\n", "", "return", "(", "(", "x", ".", "sum", "(", "(", "1", ",", "2", ")", ")", "*", "weights", ")", "*", "0.0", ",", "(", "x", ".", "sum", "(", "(", "1", ",", "2", ")", ")", "*", "weights", ")", "*", "0.0", ")", "\n", "\n", "", "", "cham_norm_x", "=", "x", ".", "new_zeros", "(", "(", ")", ")", "\n", "cham_norm_y", "=", "x", ".", "new_zeros", "(", "(", ")", ")", "\n", "\n", "x_nn", "=", "knn_points", "(", "x", ",", "y", ",", "lengths1", "=", "x_lengths", ",", "lengths2", "=", "y_lengths", ",", "K", "=", "1", ")", "\n", "y_nn", "=", "knn_points", "(", "y", ",", "x", ",", "lengths1", "=", "y_lengths", ",", "lengths2", "=", "x_lengths", ",", "K", "=", "1", ")", "\n", "\n", "cham_x", "=", "x_nn", ".", "dists", "[", "...", ",", "0", "]", "# (N, P1)", "\n", "cham_y", "=", "y_nn", ".", "dists", "[", "...", ",", "0", "]", "# (N, P2)", "\n", "\n", "if", "is_x_heterogeneous", ":", "\n", "        ", "cham_x", "[", "x_mask", "]", "=", "0.0", "\n", "", "if", "is_y_heterogeneous", ":", "\n", "        ", "cham_y", "[", "y_mask", "]", "=", "0.0", "\n", "\n", "", "if", "weights", "is", "not", "None", ":", "\n", "        ", "cham_x", "*=", "weights", ".", "view", "(", "N", ",", "1", ")", "\n", "cham_y", "*=", "weights", ".", "view", "(", "N", ",", "1", ")", "\n", "\n", "", "if", "return_normals", ":", "\n", "# Gather the normals using the indices and keep only value for k=0", "\n", "        ", "x_normals_near", "=", "knn_gather", "(", "y_normals", ",", "x_nn", ".", "idx", ",", "y_lengths", ")", "[", "...", ",", "0", ",", ":", "]", "\n", "y_normals_near", "=", "knn_gather", "(", "x_normals", ",", "y_nn", ".", "idx", ",", "x_lengths", ")", "[", "...", ",", "0", ",", ":", "]", "\n", "\n", "cham_norm_x", "=", "1", "-", "torch", ".", "abs", "(", "\n", "F", ".", "cosine_similarity", "(", "x_normals", ",", "x_normals_near", ",", "dim", "=", "2", ",", "eps", "=", "1e-6", ")", "\n", ")", "\n", "cham_norm_y", "=", "1", "-", "torch", ".", "abs", "(", "\n", "F", ".", "cosine_similarity", "(", "y_normals", ",", "y_normals_near", ",", "dim", "=", "2", ",", "eps", "=", "1e-6", ")", "\n", ")", "\n", "\n", "if", "is_x_heterogeneous", ":", "\n", "# pyre-fixme[16]: `int` has no attribute `__setitem__`.", "\n", "            ", "cham_norm_x", "[", "x_mask", "]", "=", "0.0", "\n", "", "if", "is_y_heterogeneous", ":", "\n", "            ", "cham_norm_y", "[", "y_mask", "]", "=", "0.0", "\n", "\n", "", "if", "weights", "is", "not", "None", ":", "\n", "            ", "cham_norm_x", "*=", "weights", ".", "view", "(", "N", ",", "1", ")", "\n", "cham_norm_y", "*=", "weights", ".", "view", "(", "N", ",", "1", ")", "\n", "\n", "# Apply point reduction", "\n", "", "", "cham_x", "=", "cham_x", ".", "sum", "(", "1", ")", "# (N,)", "\n", "cham_y", "=", "cham_y", ".", "sum", "(", "1", ")", "# (N,)", "\n", "if", "return_normals", ":", "\n", "        ", "cham_norm_x", "=", "cham_norm_x", ".", "sum", "(", "1", ")", "# (N,)", "\n", "cham_norm_y", "=", "cham_norm_y", ".", "sum", "(", "1", ")", "# (N,)", "\n", "", "if", "point_reduction", "==", "\"mean\"", ":", "\n", "        ", "cham_x", "/=", "x_lengths", "\n", "cham_y", "/=", "y_lengths", "\n", "if", "return_normals", ":", "\n", "            ", "cham_norm_x", "/=", "x_lengths", "\n", "cham_norm_y", "/=", "y_lengths", "\n", "\n", "", "", "if", "batch_reduction", "is", "not", "None", ":", "\n", "# batch_reduction == \"sum\"", "\n", "        ", "cham_x", "=", "cham_x", ".", "sum", "(", ")", "\n", "cham_y", "=", "cham_y", ".", "sum", "(", ")", "\n", "\n", "if", "return_normals", ":", "\n", "            ", "cham_norm_x", "=", "cham_norm_x", ".", "sum", "(", ")", "\n", "cham_norm_y", "=", "cham_norm_y", ".", "sum", "(", ")", "\n", "", "if", "batch_reduction", "==", "\"mean\"", ":", "\n", "            ", "div", "=", "weights", ".", "sum", "(", ")", "if", "weights", "is", "not", "None", "else", "N", "\n", "cham_x", "/=", "div", "\n", "cham_y", "/=", "div", "\n", "if", "return_normals", ":", "\n", "                ", "cham_norm_x", "/=", "div", "\n", "cham_norm_y", "/=", "div", "\n", "\n", "#cham_dist = cham_x + cham_y", "\n", "#cham_normals = cham_norm_x + cham_norm_y if return_normals else None", "\n", "#if retrun_normals==None:", "\n", "", "", "", "cham_norm_x", "=", "None", "\n", "cham_norm_y", "=", "None", "\n", "\n", "return", "cham_x", ",", "cham_y", ",", "cham_norm_x", ",", "cham_norm_y", "", "", ""]]}