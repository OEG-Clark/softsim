{"home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.cli.arg_parser": [[5, 34], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "print"], "function", ["None"], ["def", "arg_parser", "(", ")", ":", "\n", "    ", "\"\"\"CLI for run.py.\"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--system_type'", ",", "type", "=", "str", ",", "default", "=", "'centralized'", ",", "\n", "help", "=", "\"Specify either centralized/decentrized system.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--run_remotely'", ",", "type", "=", "str", ",", "default", "=", "'yes'", ",", "\n", "help", "=", "\"Specify yes/no to run agents all remotely or locally.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--group_size'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "\n", "help", "=", "\"Number of agents in the system.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--path_agent_files'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "help", "=", "\"Path to agent json files.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--path_shared_secrets'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "help", "=", "\"Path to shared secret json files.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--path_neuralnet_models'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "help", "=", "\"Path to neural net agent models.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--path_secret_neuralnets'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "help", "=", "\"Path to shared secret neural net models.\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "print", "(", "\"args: \"", ",", "args", ")", "\n", "\n", "return", "args", "\n", "", ""]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.gumbel_softmax.gumbel_softmax_transform": [[7, 100], ["range", "torch.stack().to", "torch.stack().to", "all_samples_outputs.append", "torch.split", "torch.split", "all_samples_splits.append", "all_samples_gumbel_softmax_vectors.append", "tuple", "torch.cat().to", "torch.cat().to", "all_samples_concatenated.append", "torch.log_softmax().to", "torch.gumbel_softmax().to", "gumbel_softmax_vectors.append", "torch.stack", "torch.stack", "torch.cat", "torch.cat", "torch.log_softmax", "torch.gumbel_softmax", "tuple", "F.log_softmax().to.view().contiguous", "F.log_softmax().to.view"], "function", ["None"], ["def", "gumbel_softmax_transform", "(", "raw_output_batch", ",", "numActions", ",", "gumbelTemp", ",", "gumbelReturnHard", ")", ":", "\n", "\t", "\"\"\"\n\tReturn gumbel samples based on raw output of network.\n\tReturn format concatenates each row of samples as joined vector,\n\t ...ready to be input into neural network.\n\t\n\tArgs: 'raw_output_batch' shape: (batch_size, network output dim).\n\t\t  'gumbelReturnHard': return a hard one-hot-vector if True.\n\t\"\"\"", "\n", "\n", "batch_size", "=", "raw_output_batch", ".", "shape", "[", "0", "]", "\n", "\n", "# Place batch outputs into list of outputs", "\n", "all_samples_outputs", "=", "[", "]", "\n", "# print(\"printing samples in output batch\")", "\n", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "# print(\"raw_output_batch[i]: \", raw_output_batch[i]\")", "\n", "\t\t", "all_samples_outputs", ".", "append", "(", "raw_output_batch", "[", "i", "]", ")", "\n", "\n", "# print(\"all_samples_outputs: \", all_samples_outputs)", "\n", "\n", "# Split raw output values from output layer into sets for each action vector", "\n", "", "all_samples_splits", "=", "[", "]", "\n", "for", "sample_output", "in", "all_samples_outputs", ":", "\n", "\t\t", "raw_output_split", "=", "torch", ".", "split", "(", "sample_output", ",", "numActions", ",", "dim", "=", "0", ")", "# returns a tuple", "\n", "all_samples_splits", ".", "append", "(", "raw_output_split", ")", "\n", "\n", "\n", "# print(\"all_samples_splits: \", all_samples_splits) # length is batch_size, as a list of tuples", "\n", "# print(\"len(all_samples_splits): \", len(all_samples_splits))", "\n", "\n", "# Perform gumbel softmax transform", "\n", "", "all_samples_gumbel_softmax_vectors", "=", "[", "]", "\n", "for", "this_sample_splits", "in", "all_samples_splits", ":", "\n", "# print \"\\nthis_sample_splits: \", this_sample_splits", "\n", "\n", "\t\t", "gumbel_softmax_vectors", "=", "[", "]", "\n", "for", "item", "in", "this_sample_splits", ":", "\n", "\t\t\t", "item_logsoftmax", "=", "F", ".", "log_softmax", "(", "item", ",", "dim", "=", "0", ")", ".", "to", "(", "device", ")", "\n", "#print \"item_logsoftmax: \", item_logsoftmax", "\n", "\n", "item_gumbel_softmax", "=", "F", ".", "gumbel_softmax", "(", "logits", "=", "item_logsoftmax", ".", "view", "(", "1", ",", "-", "1", ")", ".", "contiguous", "(", ")", ",", "tau", "=", "gumbelTemp", ",", "hard", "=", "gumbelReturnHard", ")", ".", "to", "(", "device", ")", "\n", "#print \"item_gumbel_softmax: \", item_gumbel_softmax", "\n", "\n", "gumbel_softmax_vectors", ".", "append", "(", "item_gumbel_softmax", ")", "\n", "\n", "#print \"gumbel_softmax_vectors: \", gumbel_softmax_vectors", "\n", "\n", "", "all_samples_gumbel_softmax_vectors", ".", "append", "(", "gumbel_softmax_vectors", ")", "\n", "\n", "\n", "# all_samples_gumbel_softmax_vectors is tuple of length batch_size", "\n", "#print(\"\\nall_samples_gumbel_softmax_vectors: \", all_samples_gumbel_softmax_vectors)", "\n", "#print(\"len(all_samples_gumbel_softmax_vectors): \", len(all_samples_gumbel_softmax_vectors))", "\n", "\n", "# Example of all_samples_gumbel_softmax_vectors with batch size of 2:", "\n", "# ", "\n", "# [[tensor([[0., 1., 0.]]), tensor([[0., 1., 0.]]), tensor([[0., 1., 0.]])], ", "\n", "#  [tensor([[0., 1., 0.]]), tensor([[0., 0., 1.]]), tensor([[0., 1., 0.]])]", "\n", "# ]", "\n", "\n", "\n", "# For each sample, combine it into a single concatenated array of softmax vectors", "\n", "#print(\"\\nConcatenating each sample tensors into a single array\")", "\n", "\n", "", "all_samples_concatenated", "=", "[", "]", "\n", "for", "sample", "in", "all_samples_gumbel_softmax_vectors", ":", "\n", "#print \"sample: \", sample", "\n", "\t\t", "sample_unwrapped", "=", "tuple", "(", "x", "[", "0", "]", "for", "x", "in", "sample", ")", "\n", "#print \"sample_unwrapped: \", sample_unwrapped", "\n", "\n", "this_sample_concat", "=", "torch", ".", "cat", "(", "tuple", "(", "sample_unwrapped", ")", ",", "dim", "=", "0", ")", ".", "to", "(", "device", ")", "\n", "#print \"this_sample_concat: \", this_sample_concat", "\n", "all_samples_concatenated", ".", "append", "(", "this_sample_concat", ")", "\n", "\n", "#print \"all_samples_concatenated: \", all_samples_concatenated", "\n", "#print \"len(all_samples_concatenated): \", len(all_samples_concatenated)", "\n", "\n", "# Wrap batch into outer tensor containing tensor for each sample", "\n", "", "batch_samples_stacked", "=", "torch", ".", "stack", "(", "all_samples_concatenated", ",", "dim", "=", "0", ")", ".", "to", "(", "device", ")", "\n", "#print(\"batch_samples_stacked: \", batch_samples_stacked)", "\n", "#print(\"batch_samples_stacked[0]: \", batch_samples_stacked[0])", "\n", "\n", "# Example of batch_samples_stacked with batch size of 2:", "\n", "#", "\n", "# tensor([[0., 1., 0., 0., 1., 0., 0., 1., 0.], [0., 1., 0., 0., 0., 1., 0., 1., 0.]])", "\n", "\n", "'''# Uncomment to view gradients flowing back into Generator \n\tgen_batch_output_flowchart = make_dot(batch_samples_stacked, params=None)\t \n\tgen_batch_output_flowchart.render('gen_batch_output_flowchart.gv', view=True)'''", "\n", "\n", "return", "batch_samples_stacked", ",", "all_samples_gumbel_softmax_vectors", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.gumbel_softmax.test_gumbel_softmax_transform": [[101, 121], ["torch.randn", "torch.randn", "gumbel_softmax.gumbel_softmax_transform", "print", "print"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.gumbel_softmax.gumbel_softmax_transform"], ["", "def", "test_gumbel_softmax_transform", "(", ")", ":", "\n", "\t", "\"\"\"Test the gumbel-softmax transform function.\"\"\"", "\n", "\n", "# Define variables", "\n", "numActions", "=", "3", "\n", "batch_size", "=", "3", "\n", "gumbelTemp", "=", "-", "1", "\n", "gumbelReturnHard", "=", "True", "\n", "\n", "x", "=", "torch", ".", "randn", "(", "batch_size", ",", "9", ")", "\n", "\n", "# Perform transform", "\n", "(", "batch_samples_stacked", ",", "all_samples_gumbel_softmax_vectors", ")", "=", "gumbel_softmax_transform", "(", "\n", "x", ",", "\n", "numActions", ",", "\n", "gumbelTemp", ",", "\n", "gumbelReturnHard", ")", "\n", "print", "(", "\"all_samples_gumbel_softmax_vectors: \"", ")", "\n", "for", "h", "in", "all_samples_gumbel_softmax_vectors", ":", "\n", "\t\t", "print", "(", "\"h: \"", ",", "h", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.LocalSystem.__init__": [[22, 28], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "system", ")", ":", "\n", "        ", "\"\"\"Create local system, either centralized or decentralized.\"\"\"", "\n", "self", ".", "system", "=", "system", "\n", "self", ".", "system_type", "=", "system", ".", "system_type", "\n", "self", ".", "max_interaction_length", "=", "system", ".", "max_interaction_length", "\n", "self", ".", "group_size", "=", "system", ".", "group_size", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.LocalSystem.local_interaction": [[29, 32], ["NotImplementedError"], "methods", ["None"], ["", "def", "local_interaction", "(", "self", ")", ":", "\n", "        ", "\"\"\"Perform interaction process between all agents locally.\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"System must implement local interaction.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.LocalSystem.authenticate": [[33, 36], ["NotImplementedError"], "methods", ["None"], ["", "def", "authenticate", "(", "self", ")", ":", "\n", "        ", "\"\"\"Have all agents perform authentication of others.\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"System must implement agent authentication.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.LocalSystem.setup_session_key": [[37, 40], ["NotImplementedError"], "methods", ["None"], ["", "def", "setup_session_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Have all agents create (or receive) group session key.\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"System must implement group session key.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedLocalSystem.__init__": [[44, 50], ["multi_agent_systems.LocalSystem.__init__"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.__init__"], ["def", "__init__", "(", "self", ",", "system", ")", ":", "\n", "# Use parent constructor", "\n", "        ", "super", "(", "CentralizedLocalSystem", ",", "self", ")", ".", "__init__", "(", "system", ")", "\n", "\n", "# Store variables", "\n", "self", ".", "central_server_group_id", "=", "system", ".", "central_server_group_id", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedLocalSystem.local_interaction": [[51, 160], ["print", "range", "range", "group_interaction_history.append", "multi_agent_systems.CentralizedLocalSystem.system.agents_list[].local_interact", "multi_agent_systems.CentralizedLocalSystem.system.agents_list[].set_group_interaction_history", "zip", "multi_agent_systems.CentralizedLocalSystem.system.agents_list[].set_group_interaction_history", "range", "agent_history.append", "range", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.local_interact", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_interaction_history", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_interaction_history"], ["", "def", "local_interaction", "(", "self", ")", ":", "\n", "        ", "\"\"\"Perform interaction process among all agents locally.\"\"\"", "\n", "\n", "# Define variables", "\n", "group_interaction_history", "=", "[", "]", "\n", "current_time", "=", "0", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "\n", "# Build interaction history", "\n", "while", "(", "current_time", "<", "self", ".", "max_interaction_length", ")", ":", "\n", "#print(\"\\ncurrent_time: \", current_time)", "\n", "\n", "            ", "group_current_decisions", "=", "[", "-", "1", "for", "x", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "# example group_current_decisions: [[-1,s_a1,s_a2], a1, a2]", "\n", "\n", "# Get current action from each agent", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Get sublist of group actions from previous timestep", "\n", "                ", "if", "current_time", "==", "0", ":", "\n", "                    ", "group_prev_decisions", "=", "[", "]", "\n", "\n", "# Agent's slice from history is just empty list also", "\n", "prev_decisions", "=", "group_prev_decisions", "\n", "\n", "", "else", ":", "\n", "# Properly format history slice as per type of agent", "\n", "\n", "                    ", "group_prev_decisions", "=", "group_interaction_history", "[", "-", "1", "]", "[", ":", "]", "# shallow copy", "\n", "\n", "# Build input depending on agent type", "\n", "if", "l", "==", "cs_gid", ":", "\n", "\n", "# Central server takes input as: [[-1, s_a1, s_a2], a1, a2]", "\n", "                        ", "prev_decisions", "=", "group_prev_decisions", "[", ":", "]", "\n", "\n", "", "else", ":", "\n", "\n", "# Other agents take input as: [s_a1, a1, -1] for example", "\n", "                        ", "cs_prev_action", "=", "group_prev_decisions", "[", "cs_gid", "]", "[", "l", "]", "# i.e. 's_a1'", "\n", "\n", "agent_prev_action", "=", "group_prev_decisions", "[", "l", "]", "# i.e. 'a1'", "\n", "\n", "prev_decisions", "=", "[", "-", "1", "for", "x", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "prev_decisions", "[", "cs_gid", "]", "=", "cs_prev_action", "\n", "\n", "prev_decisions", "[", "l", "]", "=", "agent_prev_action", "\n", "\n", "# Now get agent output from formatted input", "\n", "", "", "agent_current_decision", "=", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "local_interact", "(", "\n", "current_time", ",", "\n", "prev_decisions", ")", "\n", "\"\"\"\n                If agent is central server, agent_current_decision is sublist:\n                    [-1, s_a1, s_a2], for example\n\n                Else, agent_current_decision is single action:\n                    'a1', for example\n                \"\"\"", "\n", "\n", "# Update group current decisions for this agent", "\n", "group_current_decisions", "[", "l", "]", "=", "agent_current_decision", "\n", "# example group_current_decisions: [[-1, s_a1, s_a2], a1, a2]", "\n", "\n", "# Update group interaction history with all agent decisions", "\n", "", "group_interaction_history", ".", "append", "(", "group_current_decisions", "[", ":", "]", ")", "\n", "\n", "# Update time counter", "\n", "current_time", "+=", "1", "\n", "\n", "# After while loop, check group H_t", "\n", "", "print", "(", "\"\\ngroup_interaction_history: \"", ",", "group_interaction_history", ")", "\n", "\n", "# After interaction process, update each agent's group interaction history", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "cs_gid", ":", "\n", "\n", "# Central server stores its H_t as: [[[-1, s_a1, s_a2], a1, a2],...]", "\n", "                ", "cs_history", "=", "group_interaction_history", "[", ":", "]", "\n", "\n", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "set_group_interaction_history", "(", "cs_history", ")", "\n", "\n", "", "else", ":", "\n", "# Other agents store their H_t as: [[s_a1,a1,-1],...] for example", "\n", "\n", "# Build central server actions as: [s_a1 (t=0), s_a1 (t=1),...] for example", "\n", "                ", "cs_actions", "=", "[", "x", "[", "cs_gid", "]", "[", "l", "]", "for", "x", "in", "group_interaction_history", "]", "\n", "\n", "# Build agent actions as: [a1 (t=0), a1 (t=1),...] for example", "\n", "agent_actions", "=", "[", "x", "[", "l", "]", "for", "x", "in", "group_interaction_history", "]", "\n", "\n", "# Build agent's specific H_t", "\n", "agent_history", "=", "[", "]", "\n", "\n", "for", "(", "cs_action", ",", "agent_action", ")", "in", "zip", "(", "cs_actions", ",", "agent_actions", ")", ":", "\n", "\n", "# Build agent sublist for this timestep", "\n", "                    ", "history_sublist", "=", "[", "-", "1", "for", "x", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "history_sublist", "[", "cs_gid", "]", "=", "cs_action", "\n", "history_sublist", "[", "l", "]", "=", "agent_action", "\n", "# example history_sublist: [cs_a1,a1,-1]", "\n", "\n", "# Append this timestep sublist to agent historys", "\n", "agent_history", ".", "append", "(", "history_sublist", ")", "\n", "\n", "# Now update agent's group interaction history member variable", "\n", "", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "set_group_interaction_history", "(", "agent_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedLocalSystem.authenticate_local_agents": [[161, 170], ["range", "multi_agent_systems.CentralizedLocalSystem.system.agents_list[].authenticate"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.authenticate"], ["", "", "", "def", "authenticate_local_agents", "(", "self", ")", ":", "\n", "        ", "\"\"\"Have central server do mutual auth with other agents and store result.\"\"\"", "\n", "\n", "# Have each agent perform its individual auth process", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "authenticate", "(", "\n", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "group_interaction_history", ",", "\n", "self", ".", "max_interaction_length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedLocalSystem.setup_session_key": [[174, 218], ["range", "range", "range", "multi_agent_systems.CentralizedLocalSystem.system.agents_list[].local_setup_key", "multi_agent_systems.CentralizedLocalSystem.system.agents_list[].local_setup_key", "range", "multi_agent_systems.CentralizedLocalSystem.pop", "multi_agent_systems.CentralizedLocalSystem.system.agents_list[].decrypt_group_key", "multi_agent_systems.CentralizedLocalSystem.system.agents_list[].set_group_key"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.local_setup_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.local_setup_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.decrypt_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_key"], ["", "", "def", "setup_session_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Have all agents create and set session key(s).\"\"\"", "\n", "\n", "# Define variables", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "\n", "# Have each agent set own mutual keys (server may also make group key)", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "            ", "if", "l", "==", "cs_gid", ":", "\n", "                ", "encrypted_group_keys_sublist", "=", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "local_setup_key", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "local_setup_key", "(", ")", "\n", "\n", "# Reformat encrypted group keys list is its: [gk1_m1, gk2_m2] for example", "\n", "", "", "encrypted_group_keys", "=", "[", "-", "1", "for", "x", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "            ", "if", "l", "==", "cs_gid", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "# Get next agent encrypted group key from sublist", "\n", "                ", "encrypted_group_keys", "[", "l", "]", "=", "encrypted_group_keys_sublist", ".", "pop", "(", "0", ")", "\n", "\n", "# now encrypted_group_keys is as: [-1,gk1_m1, gk2_m2] for example", "\n", "\n", "# Have agents manually decrypt encrypted group keys from central server", "\n", "", "", "if", "self", ".", "group_size", ">", "2", ":", "\n", "\n", "# Get group key from central server", "\n", "            ", "group_key", "=", "self", ".", "system", ".", "agents_list", "[", "cs_gid", "]", ".", "group_key", "\n", "\n", "# Other agents decrypt their encrypted group key", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "                ", "if", "l", "==", "cs_gid", ":", "\n", "                    ", "continue", "\n", "", "else", ":", "\n", "# Group key encrypted by agent's mutual key", "\n", "                    ", "group_key_encr", "=", "encrypted_group_keys", "[", "l", "]", "\n", "\n", "# Agent decrypts with its mutual key", "\n", "group_key", "=", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "decrypt_group_key", "(", "\n", "group_key_encr", ")", "\n", "# Agent sets the group key for itself", "\n", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "set_group_key", "(", "group_key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedLocalSystem.__init__": [[222, 225], ["multi_agent_systems.LocalSystem.__init__"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.__init__"], ["def", "__init__", "(", "self", ",", "system", ")", ":", "\n", "# Use parent constructor", "\n", "        ", "super", "(", "DecentralizedLocalSystem", ",", "self", ")", ".", "__init__", "(", "system", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedLocalSystem.local_interaction": [[226, 271], ["print", "range", "range", "group_interaction_history.append", "multi_agent_systems.DecentralizedLocalSystem.system.agents_list[].set_group_interaction_history", "multi_agent_systems.DecentralizedLocalSystem.system.agents_list[].local_interact", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_interaction_history", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.local_interact"], ["", "def", "local_interaction", "(", "self", ")", ":", "\n", "        ", "\"\"\"Perform interaction process among all agents locally.\"\"\"", "\n", "\n", "# Define variables", "\n", "group_interaction_history", "=", "[", "]", "\n", "current_time", "=", "0", "\n", "\n", "# Build interaction history", "\n", "while", "(", "current_time", "<", "self", ".", "max_interaction_length", ")", ":", "\n", "\n", "            ", "group_current_decisions", "=", "[", "-", "1", "for", "x", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "# example group_current_decisions: [a0, a1, a2]", "\n", "\n", "# Get current action from each agent", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Get sublist of group actions from previous timestep", "\n", "                ", "if", "current_time", "==", "0", ":", "\n", "                    ", "group_prev_decisions", "=", "[", "]", "\n", "", "else", ":", "\n", "                    ", "group_prev_decisions", "=", "group_interaction_history", "[", "-", "1", "]", "[", ":", "]", "# shallow copy", "\n", "\n", "# Get agent output from input: i.e. [a0,a1,a2]", "\n", "", "agent_current_decision", "=", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "local_interact", "(", "\n", "current_time", ",", "\n", "group_prev_decisions", ")", "\n", "\n", "# Update group current decisions with this agent action", "\n", "group_current_decisions", "[", "l", "]", "=", "agent_current_decision", "\n", "\n", "# Update group history with all agent actions for this timestep", "\n", "", "group_interaction_history", ".", "append", "(", "group_current_decisions", "[", ":", "]", ")", "\n", "\n", "# Update time counter", "\n", "current_time", "+=", "1", "\n", "\n", "# After while loop, check group H_t", "\n", "", "print", "(", "\"\\ngroup_interaction_history: \"", ",", "group_interaction_history", ")", "\n", "\n", "# After interaction process, update each agent's personal history variable", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Every agents stores H_t as: [[a0,a1,a2],...]", "\n", "            ", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "set_group_interaction_history", "(", "\n", "group_interaction_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedLocalSystem.authenticate_local_agents": [[272, 281], ["range", "multi_agent_systems.DecentralizedLocalSystem.system.agents_list[].authenticate"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.authenticate"], ["", "", "def", "authenticate_local_agents", "(", "self", ")", ":", "\n", "        ", "\"\"\"Have decentralized agents authenticate each other and store result.\"\"\"", "\n", "\n", "# Have each agent perform its individual auth process", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "authenticate", "(", "\n", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "group_interaction_history", ",", "\n", "self", ".", "max_interaction_length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedLocalSystem.setup_session_key": [[285, 290], ["range", "multi_agent_systems.DecentralizedLocalSystem.system.agents_list[].local_setup_key"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.local_setup_key"], ["", "", "def", "setup_session_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Have all agents create and set group session key.\"\"\"", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "            ", "self", ".", "system", ".", "agents_list", "[", "l", "]", ".", "local_setup_key", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.__init__": [[294, 319], ["multi_agent_systems.RemoteSystem.create_system_agent"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.create_system_agent"], ["def", "__init__", "(", "self", ",", "system_settings", ",", "agent_file", ",", "secrets_file", ",", "\n", "model_statedicts", ",", "secret_statedicts", ")", ":", "\n", "        ", "\"\"\"\n        Create remote system with single agent.\n\n        Args:\n        agent_file: json info dict for the sole system agent.\n        secrets_file: json secrets dict for the system agent's shared secrets.\n        \n        model_statedicts: list of statedict model(s) for system agent.\n        secret_statedicts: list of statedict models for system agent.\n        \"\"\"", "\n", "\n", "# Get variables from system settings file", "\n", "self", ".", "system_type", "=", "system_settings", "[", "'system_type'", "]", "\n", "self", ".", "group_size", "=", "system_settings", "[", "'group_size'", "]", "\n", "self", ".", "max_interaction_length", "=", "system_settings", "[", "'max_interaction_length'", "]", "\n", "\n", "if", "self", ".", "system_type", "==", "'centralized'", ":", "\n", "            ", "self", ".", "central_server_group_id", "=", "system_settings", "[", "'central_server_group_id'", "]", "\n", "\n", "# Create single agent for this system", "\n", "", "self", ".", "agent", "=", "self", ".", "create_system_agent", "(", "self", ".", "group_size", ",", "\n", "agent_file", ",", "secrets_file", ",", "\n", "model_statedicts", ",", "secret_statedicts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.create_system_agent": [[320, 347], ["multi_agent_systems.DecentralizedSystemAgent", "multi_agent_systems.CentralServerAgent", "multi_agent_systems.CentralizedSystemAgent"], "methods", ["None"], ["", "def", "create_system_agent", "(", "self", ",", "group_size", ",", "\n", "agent_file", ",", "secrets_file", ",", "\n", "model_statedicts", ",", "secret_statedicts", ")", ":", "\n", "        ", "\"\"\"Create a single agent for remote system.\"\"\"", "\n", "\n", "# Get agent-specific info       ", "\n", "agent_group_id", "=", "agent_file", "[", "'group_id'", "]", "\n", "\n", "# Create agent depending on its specified type", "\n", "if", "self", ".", "system_type", "==", "'centralized'", ":", "\n", "            ", "agent_is_central_server", "=", "agent_file", "[", "'is_central_server'", "]", "\n", "\n", "if", "agent_is_central_server", ":", "\n", "                ", "agent", "=", "CentralServerAgent", "(", "agent_file", ",", "secrets_file", ",", "\n", "model_statedicts", ",", "secret_statedicts", ",", "\n", "self", ".", "max_interaction_length", ")", "\n", "", "else", ":", "\n", "                ", "agent", "=", "CentralizedSystemAgent", "(", "agent_file", ",", "secrets_file", ",", "\n", "model_statedicts", ",", "secret_statedicts", ",", "\n", "self", ".", "max_interaction_length", ")", "\n", "", "", "else", ":", "\n", "            ", "agent", "=", "DecentralizedSystemAgent", "(", "agent_file", ",", "secrets_file", ",", "\n", "model_statedicts", ",", "secret_statedicts", ",", "\n", "self", ".", "max_interaction_length", ")", "\n", "\n", "# Return created agent object", "\n", "", "return", "agent", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.connect_sockets": [[348, 359], ["multi_agent_systems.RemoteSystem.agent.connect_tcp_sockets", "multi_agent_systems.RemoteSystem.agent.connect_udp_sockets", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.connect_tcp_sockets"], ["", "def", "connect_sockets", "(", "self", ",", "agent_json_dict", ",", "network_protocol", ")", ":", "\n", "        ", "\"\"\"Create and connect either TCP sockets or UDP sockets.\"\"\"", "\n", "\n", "if", "network_protocol", "==", "'tcp'", ":", "\n", "            ", "self", ".", "agent", ".", "connect_tcp_sockets", "(", "agent_json_dict", ")", "\n", "\n", "", "elif", "network_protocol", "==", "'udp'", ":", "\n", "            ", "self", ".", "agent", ".", "connect_udp_sockets", "(", "agent_json_dict", ")", "\n", "\n", "", "else", ":", "\n", "            ", "exit", "(", "\"Exiting: network_protocol incorrectly specified.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.remote_interaction": [[360, 435], ["time.time", "datetime.datetime.datetime.now", "time.time", "datetime.datetime.datetime.now", "multi_agent_systems.RemoteSystem.agent.set_group_interaction_history", "multi_agent_systems.RemoteSystem.agent.interact", "group_interaction_history.append"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_interaction_history", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.interact"], ["", "", "def", "remote_interaction", "(", "self", ",", "network_protocol", "=", "'tcp'", ")", ":", "\n", "        ", "\"\"\"\n        Build interaction history with remote agents by sending and receiving actions.\n        Also update remote system agent's shared secrets for later key generation.\n        \"\"\"", "\n", "\n", "# Define variables", "\n", "group_interaction_history", "=", "[", "]", "# contains sublist for each timestep", "\n", "current_time", "=", "0", "\n", "\n", "# Start time", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "start_datetime", "=", "datetime", ".", "now", "(", ")", "\n", "\n", "# Build interaction history by sending and receiving actions", "\n", "while", "(", "current_time", "<", "self", ".", "max_interaction_length", ")", ":", "\n", "#print(\"\\ncurrent_time: \", current_time)", "\n", "\n", "# DEBUG: write current time to file", "\n", "#write_str = 'current_time_'+str(current_time)", "\n", "#f = open(write_str, 'w')", "\n", "#f.close()", "\n", "\n", "# Get sublist of group actions from previous timestep", "\n", "            ", "if", "current_time", "==", "0", ":", "\n", "                ", "prev_decisions", "=", "[", "]", "\n", "", "else", ":", "\n", "                ", "prev_decisions", "=", "group_interaction_history", "[", "-", "1", "]", "[", ":", "]", "# shallow copy", "\n", "\n", "#print(\"\\nprev_decisions provided: \", prev_decisions)", "\n", "#print(\"group_interaction_history after providing: \", group_interaction_history)", "\n", "\n", "# Get next action(s), update secret(s), transmits action(s), receive action(s)", "\n", "", "group_current_decisions", "=", "self", ".", "agent", ".", "interact", "(", "current_time", ",", "prev_decisions", ",", "network_protocol", ")", "\n", "#print(\"\\nGot from interact() the group_current_decisions: \", group_current_decisions)", "\n", "\n", "\"\"\"\n            group_current_decisions is different for each type of system agent.\n\n            Example for CentralizedSystemAgent at id=1: \n                [cs_action, a1_action, -1]\n\n            Example for CentralServerAgent: \n                [[-1, action_for_a1, action_for_a2], a1_action, a2_action]\n\n            Example for DecentralizedSystemAgent at id=0:\n                [a0_action, a1_action, a2_action]\n            \"\"\"", "\n", "\n", "# Update group history", "\n", "group_interaction_history", ".", "append", "(", "group_current_decisions", ")", "\n", "#print(\"\\nUpdated group_interaction_history: \", group_interaction_history)", "\n", "\n", "# Update timestep", "\n", "current_time", "+=", "1", "\n", "\n", "# End timer", "\n", "", "end_time", "=", "time", ".", "time", "(", ")", "\n", "end_datetime", "=", "datetime", ".", "now", "(", ")", "\n", "\n", "# Update system agent with group interaction history", "\n", "self", ".", "agent", ".", "set_group_interaction_history", "(", "group_interaction_history", ")", "\n", "\n", "# Print interaction results", "\n", "#print(\"\\ngroup_interaction_history: \", group_interaction_history)", "\n", "\n", "# Print behavioral model interaction histories", "\n", "#print(\"\\nAgent model history: \", self.print_info('model_history'))", "\n", "\n", "# Print shared secrets interaction histories", "\n", "#print(\"\\nAgent shared secret histories: \", self.print_info('secrets_histories'))", "\n", "\n", "# Return remote interaction time", "\n", "elapsed_time", "=", "end_time", "-", "start_time", "\n", "return", "(", "elapsed_time", ",", "start_datetime", ",", "end_datetime", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.authenticate_remote_agents": [[436, 443], ["multi_agent_systems.RemoteSystem.agent.authenticate"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.authenticate"], ["", "def", "authenticate_remote_agents", "(", "self", ",", "agent_file", ")", ":", "\n", "        ", "\"\"\"Have agent authenticate other remote agent(s) and store result.\"\"\"", "\n", "\n", "# Have agent perform authentication", "\n", "self", ".", "agent", ".", "authenticate", "(", "self", ".", "agent", ".", "group_interaction_history", ",", "\n", "self", ".", "max_interaction_length", ",", "\n", "agent_file", ")", "\n", "# Print results", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.setup_session_key": [[446, 451], ["multi_agent_systems.RemoteSystem.agent.setup_key"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.setup_key"], ["", "def", "setup_session_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Have agent create and set session key(s).\"\"\"", "\n", "\n", "# Have agent set up or receive group session key", "\n", "self", ".", "agent", ".", "setup_key", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.print_info": [[453, 475], ["print", "multi_agent_systems.RemoteSystem.agent.print_agent_model", "multi_agent_systems.RemoteSystem.agent.print_agent_secrets", "multi_agent_systems.RemoteSystem.agent.print_agent_sockets", "multi_agent_systems.RemoteSystem.agent.print_model_history", "multi_agent_systems.RemoteSystem.agent.print_secrets_histories", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.print_agent_model", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.print_agent_secrets", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.print_agent_sockets", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.print_model_history", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.print_secrets_histories"], ["", "def", "print_info", "(", "self", ",", "info_str", ")", ":", "\n", "        ", "\"\"\"\n        Print specified member variable for system agent. \n\n        Args:\n        info_str: a choice from ['agent_model', 'agent_secrets', \n                                'agent_sockets', 'interaction_history']\n        \"\"\"", "\n", "print", "(", "\"\\nPrinting: \"", ",", "info_str", ")", "\n", "\n", "if", "info_str", "==", "'agent_model'", ":", "\n", "            ", "self", ".", "agent", ".", "print_agent_model", "(", ")", "\n", "", "elif", "info_str", "==", "'agent_secrets'", ":", "\n", "            ", "self", ".", "agent", ".", "print_agent_secrets", "(", ")", "\n", "", "elif", "info_str", "==", "'agent_sockets'", ":", "\n", "            ", "self", ".", "agent", ".", "print_agent_sockets", "(", ")", "\n", "", "elif", "info_str", "==", "'model_history'", ":", "\n", "            ", "self", ".", "agent", ".", "print_model_history", "(", ")", "\n", "", "elif", "info_str", "==", "'secrets_histories'", ":", "\n", "            ", "self", ".", "agent", ".", "print_secrets_histories", "(", ")", "\n", "", "else", ":", "\n", "            ", "exit", "(", "\"Exiting: Incorrect info string supplied to print_info()!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.MultiAgentSystem.__init__": [[480, 497], ["len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "group_size", ",", "agent_files", ",", "secrets_files", ")", ":", "\n", "        ", "\"\"\"\n        Set system specs.\n\n        Args:\n        agent_files: sorted list of json dicts for each agent\n        secrets_files: sorted list of json dicts for each agent's shared secrets\n        \"\"\"", "\n", "\n", "# Check number of provided files matches group size", "\n", "assert", "len", "(", "agent_files", ")", "==", "group_size", ",", "\"Exiting: Incorrect number of agent files for group size!\"", "\n", "assert", "len", "(", "secrets_files", ")", "==", "group_size", ",", "\"Exiting: Incorrect number of secrets files for group size!\"", "\n", "\n", "# Set variables", "\n", "self", ".", "group_size", "=", "group_size", "\n", "self", ".", "agents_list", "=", "-", "1", "\n", "self", ".", "max_interaction_length", "=", "10", "# length of agent-to-agent interaction histories", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.MultiAgentSystem.create_system_agents": [[498, 501], ["NotImplementedError"], "methods", ["None"], ["", "def", "create_system_agents", "(", "self", ",", "group_size", ",", "agent_files", ",", "secrets_files", ")", ":", "\n", "        ", "\"\"\"Instantiate agents in the system.\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"System must implement agent creation.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.MultiAgentSystem.setup_socket_info": [[502, 505], ["NotImplementedError"], "methods", ["None"], ["", "def", "setup_socket_info", "(", "self", ")", ":", "\n", "        ", "\"\"\"Assign IP address and port numbers to each agent in the system.\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"System must assign socket information.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.MultiAgentSystem.print_info": [[507, 528], ["print", "zip", "range", "print", "agent.print_agent_model", "agent.print_agent_secrets", "agent.print_agent_sockets", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.print_agent_model", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.print_agent_secrets", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.print_agent_sockets"], ["", "def", "print_info", "(", "self", ",", "info_str", ")", ":", "\n", "        ", "\"\"\"\n        Print specified member variable for all agents.\n\n        Args:\n        info_str: a choice from ['agent_model', 'agent_secrets', 'agent_sockets']\n        \"\"\"", "\n", "\n", "print", "(", "\"\\nPrinting: \"", ",", "info_str", ")", "\n", "\n", "for", "(", "agent", ",", "id", ")", "in", "zip", "(", "self", ".", "agents_list", ",", "range", "(", "self", ".", "group_size", ")", ")", ":", "\n", "            ", "print", "(", "\"\\nFor agent id %d\"", "%", "id", ")", "\n", "\n", "if", "info_str", "==", "'agent_model'", ":", "\n", "                ", "agent", ".", "print_agent_model", "(", ")", "\n", "", "elif", "info_str", "==", "'agent_secrets'", ":", "\n", "                ", "agent", ".", "print_agent_secrets", "(", ")", "\n", "", "elif", "info_str", "==", "'agent_sockets'", ":", "\n", "                ", "agent", ".", "print_agent_sockets", "(", ")", "\n", "", "else", ":", "\n", "                ", "exit", "(", "\"Exiting: Incorrect info string supplied to print_info()!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystem.__init__": [[533, 558], ["multi_agent_systems.MultiAgentSystem.__init__", "multi_agent_systems.CentralizedSystem.create_system_agents"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.__init__", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystem.create_system_agents"], ["def", "__init__", "(", "self", ",", "group_size", ",", "agent_files", ",", "secrets_files", ",", "\n", "agent_model_statedicts", ",", "shared_secret_statedicts", ")", ":", "\n", "        ", "\"\"\"Initalize central server (group index=0) and other public agents.\n\n        Args:\n        agent_model_statedicts: i.e. [\n                                [-1, agent1.pth, agent2.pth], \n                                [-1, agent1.pth, -1], \n                                [-1, -1, agent2.pth] \n                            ]\n        \"\"\"", "\n", "\n", "# Use parent constructor", "\n", "super", "(", "CentralizedSystem", ",", "self", ")", ".", "__init__", "(", "group_size", ",", "agent_files", ",", "secrets_files", ")", "\n", "\n", "# Define variables", "\n", "self", ".", "system_type", "=", "'centralized'", "\n", "self", ".", "group_size", "=", "group_size", "\n", "\n", "# Set central server as first agent in group; update agent files accordingly", "\n", "self", ".", "central_server_group_id", "=", "0", "\n", "\n", "# Create agents", "\n", "self", ".", "agents_list", "=", "self", ".", "create_system_agents", "(", "group_size", ",", "agent_files", ",", "secrets_files", ",", "\n", "agent_model_statedicts", ",", "shared_secret_statedicts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystem.create_system_agents": [[560, 590], ["range", "range", "multi_agent_systems.CentralServerAgent", "multi_agent_systems.CentralizedSystemAgent"], "methods", ["None"], ["", "def", "create_system_agents", "(", "self", ",", "group_size", ",", "agent_files", ",", "secrets_files", ",", "\n", "agent_model_statedicts", ",", "shared_secret_statedicts", ")", ":", "\n", "        ", "\"\"\"Create agents for centralized system.\n\n        Args:\n        agent_model_statedicts: i.e. [ [-1,agent1.pth,-1], [-1,agent1.pth,-1], [-1,-1,-1] ]\n\n        shared_secret_statedicts: i.e. [ [-1,agent1.pth,-1], [agent0.pth,-1,-1], [-1,-1,-1]]\n        \"\"\"", "\n", "\n", "agents_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "group_size", ")", "]", "\n", "\n", "for", "l", "in", "range", "(", "group_size", ")", ":", "\n", "\n", "            ", "agent_file", "=", "agent_files", "[", "l", "]", "\n", "secrets_file", "=", "secrets_files", "[", "l", "]", "\n", "statedict_models", "=", "agent_model_statedicts", "[", "l", "]", "\n", "statedict_secrets", "=", "shared_secret_statedicts", "[", "l", "]", "\n", "\n", "# Create either central server or system agent", "\n", "if", "l", "==", "self", ".", "central_server_group_id", ":", "\n", "                ", "agents_list", "[", "l", "]", "=", "CentralServerAgent", "(", "agent_file", ",", "secrets_file", ",", "\n", "statedict_models", ",", "statedict_secrets", ",", "\n", "self", ".", "max_interaction_length", ")", "\n", "", "else", ":", "\n", "                ", "agents_list", "[", "l", "]", "=", "CentralizedSystemAgent", "(", "agent_file", ",", "secrets_file", ",", "\n", "statedict_models", ",", "statedict_secrets", ",", "\n", "self", ".", "max_interaction_length", ")", "\n", "\n", "", "", "return", "agents_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystem.setup_socket_info": [[591, 650], ["range", "multi_agent_systems.CentralizedSystem.agents_list[].set_socket_info", "range", "range", "range", "network_functions.get_random_port_number", "network_functions.get_random_port_number", "multi_agent_systems.CentralizedSystem.agents_list[].set_socket_info", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_socket_info", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.get_random_port_number", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.get_random_port_number", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_socket_info"], ["", "def", "setup_socket_info", "(", "self", ",", "path_agent_files", ")", ":", "\n", "        ", "\"\"\"\n        Central server is assigned socket info for all other agents,...\n        while other agents get socket info only for central server. \n        \"\"\"", "\n", "\n", "# Declare variables", "\n", "group_socket_info_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "central_server_socket_info_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "central_server_ipaddr", "=", "self", ".", "agents_list", "[", "cs_gid", "]", ".", "ipaddr", "\n", "\n", "# Assign central server's ports to use for other agents", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "cs_gid", ":", "\n", "                ", "continue", "\n", "\n", "", "else", ":", "\n", "                ", "agent_ip", "=", "self", ".", "agents_list", "[", "l", "]", ".", "ipaddr", "\n", "\n", "port1", "=", "get_random_port_number", "(", "2000", ",", "1000", ")", "\n", "port2", "=", "get_random_port_number", "(", "2000", ",", "1000", ")", "\n", "\n", "central_server_socket_info_list", "[", "l", "]", "=", "[", "(", "agent_ip", ",", "port1", ")", ",", "(", "agent_ip", ",", "port2", ")", "]", "\n", "\n", "# Record for group socket info list and for central server agent", "\n", "", "", "group_socket_info_list", "[", "cs_gid", "]", "=", "central_server_socket_info_list", "\n", "\n", "self", ".", "agents_list", "[", "cs_gid", "]", ".", "set_socket_info", "(", "central_server_socket_info_list", ",", "path_agent_files", ")", "\n", "\n", "# Now assign ports to other agents from the ports central server uses", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "cs_gid", ":", "\n", "                ", "continue", "\n", "\n", "", "else", ":", "\n", "                ", "agent_socket_info", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "# Example: [(agent_ip, port1), (agent_ip, port2)]", "\n", "central_server_agent_info", "=", "central_server_socket_info_list", "[", "l", "]", "\n", "\n", "# Get pre-assigned ports central server uses for this agent", "\n", "agent_port1", "=", "central_server_agent_info", "[", "0", "]", "[", "1", "]", "# first tuple from sublist", "\n", "agent_port2", "=", "central_server_agent_info", "[", "1", "]", "[", "1", "]", "# second tuple from sublist", "\n", "\n", "agent_socket_info", "[", "cs_gid", "]", "=", "[", "(", "central_server_ipaddr", ",", "agent_port1", ")", ",", "\n", "(", "central_server_ipaddr", ",", "agent_port2", ")", "]", "\n", "\n", "# Record in group socket info list and for this agent", "\n", "group_socket_info_list", "[", "l", "]", "=", "agent_socket_info", "\n", "\n", "self", ".", "agents_list", "[", "l", "]", ".", "set_socket_info", "(", "agent_socket_info", ",", "path_agent_files", ")", "\n", "\n", "\n", "# Record group socket info list for system", "\n", "", "", "self", ".", "group_socket_info_list", "=", "group_socket_info_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystem.__init__": [[654, 668], ["multi_agent_systems.MultiAgentSystem.__init__", "multi_agent_systems.DecentralizedSystem.create_system_agents"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.__init__", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystem.create_system_agents"], ["def", "__init__", "(", "self", ",", "group_size", ",", "agent_files", ",", "secrets_files", ",", "\n", "agent_model_statedicts", ",", "shared_secret_statedicts", ")", ":", "\n", "        ", "\"\"\"Initalize group of agents.\"\"\"", "\n", "\n", "# Use parent constructor", "\n", "super", "(", "DecentralizedSystem", ",", "self", ")", ".", "__init__", "(", "group_size", ",", "agent_files", ",", "secrets_files", ")", "\n", "\n", "# Define variables", "\n", "self", ".", "system_type", "=", "'decentralized'", "\n", "self", ".", "group_size", "=", "group_size", "\n", "\n", "# Create agents", "\n", "self", ".", "agents_list", "=", "self", ".", "create_system_agents", "(", "group_size", ",", "agent_files", ",", "secrets_files", ",", "\n", "agent_model_statedicts", ",", "shared_secret_statedicts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystem.create_system_agents": [[670, 689], ["range", "multi_agent_systems.DecentralizedSystemAgent", "range"], "methods", ["None"], ["", "def", "create_system_agents", "(", "self", ",", "group_size", ",", "agent_files", ",", "secrets_files", ",", "\n", "agent_model_statedicts", ",", "shared_secret_statedicts", ")", ":", "\n", "        ", "\"\"\"Create agents for decentralized system.\"\"\"", "\n", "\n", "agents_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "group_size", ")", "]", "\n", "\n", "for", "l", "in", "range", "(", "group_size", ")", ":", "\n", "\n", "            ", "agent_file", "=", "agent_files", "[", "l", "]", "\n", "secrets_file", "=", "secrets_files", "[", "l", "]", "\n", "statedict_models", "=", "agent_model_statedicts", "[", "l", "]", "\n", "statedict_secrets", "=", "shared_secret_statedicts", "[", "l", "]", "\n", "\n", "# Create system agent for decentralized system", "\n", "agents_list", "[", "l", "]", "=", "DecentralizedSystemAgent", "(", "agent_file", ",", "secrets_file", ",", "\n", "statedict_models", ",", "statedict_secrets", ",", "\n", "self", ".", "max_interaction_length", ")", "\n", "\n", "", "return", "agents_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystem.setup_socket_info": [[690, 750], ["range", "itertools.combinations", "len", "range", "group_socket_info_list.append", "range", "network_functions.get_random_port_number", "network_functions.get_random_port_number", "multi_agent_systems.DecentralizedSystem.agents_list[].set_socket_info", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.get_random_port_number", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.get_random_port_number", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_socket_info"], ["", "def", "setup_socket_info", "(", "self", ",", "path_agent_files", ")", ":", "\n", "        ", "\"\"\"\n        Assign all agents in group IP addresses and port numbers to connect with other agents.\n        \"\"\"", "\n", "\n", "# Declare variables", "\n", "group_socket_info_list", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "            ", "group_socket_info_list", ".", "append", "(", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", ")", "\n", "\n", "# Example: [[-1, -1, -1], [-1, -1, -1], [-1, -1, -1]]", "\n", "\n", "# Create list of combinations of every two agents in group", "\n", "", "agent_combos", "=", "combinations", "(", "range", "(", "self", ".", "group_size", ")", ",", "2", ")", "\n", "\n", "# Example for group_size=3:  [(0, 1), (0, 2), (1, 2)]", "\n", "agent_combos_list", "=", "[", "c", "for", "c", "in", "agent_combos", "]", "# convert to python list", "\n", "num_combos", "=", "len", "(", "agent_combos_list", ")", "\n", "\n", "# For each combination of two agents, set random port numbers to be *shared*", "\n", "agent_conn_info_list", "=", "[", "]", "\n", "\n", "for", "combo", "in", "agent_combos_list", ":", "\n", "\n", "            ", "port1", "=", "get_random_port_number", "(", "2000", ",", "1000", ")", "# i.e. port 35", "\n", "port2", "=", "get_random_port_number", "(", "2000", ",", "1000", ")", "# i.e. port 36", "\n", "\n", "# Get agent group id's for this combo, i.e. (0,2)", "\n", "first_id", "=", "combo", "[", "0", "]", "\n", "second_id", "=", "combo", "[", "1", "]", "\n", "\n", "# Assign socket info for first agent in combo", "\n", "\n", "group_socket_info_list", "[", "first_id", "]", "[", "first_id", "]", "=", "-", "1", "# set own info to -1", "\n", "\n", "second_ipaddr", "=", "self", ".", "agents_list", "[", "second_id", "]", ".", "ipaddr", "# ipaddr of other agent", "\n", "\n", "# Example: [(ipaddr_a2, port35), (ipaddr_a2, port36)]", "\n", "sublist_for_second", "=", "[", "(", "second_ipaddr", ",", "port1", ")", ",", "(", "second_ipaddr", ",", "port2", ")", "]", "\n", "\n", "group_socket_info_list", "[", "first_id", "]", "[", "second_id", "]", "=", "sublist_for_second", "\n", "\n", "\n", "# Assign socket info for second agent in combo", "\n", "group_socket_info_list", "[", "second_id", "]", "[", "second_id", "]", "=", "-", "1", "# set own info to -1", "\n", "\n", "first_ipaddr", "=", "self", ".", "agents_list", "[", "first_id", "]", ".", "ipaddr", "# ipaddr of other agent", "\n", "\n", "# Example: [(ipaddr_a1, port35), (ipaddr_a1, port36)]", "\n", "sublist_for_first", "=", "[", "(", "first_ipaddr", ",", "port1", ")", ",", "(", "first_ipaddr", ",", "port2", ")", "]", "\n", "\n", "group_socket_info_list", "[", "second_id", "]", "[", "first_id", "]", "=", "sublist_for_first", "\n", "\n", "\n", "# Record socket info for each agent", "\n", "", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "            ", "self", ".", "agents_list", "[", "l", "]", ".", "set_socket_info", "(", "group_socket_info_list", "[", "l", "]", ",", "path_agent_files", ")", "\n", "\n", "# Record group socket info for system", "\n", "", "self", ".", "group_socket_info_list", "=", "group_socket_info_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.__init__": [[754, 779], ["range", "range"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "info_dict", ")", ":", "\n", "        ", "\"\"\"Initialize the system agent. \n        \n        Args:\n        info_dict: python dict from json object\n        secrets_info_list: python list of dicts for shared secrets\n\n        \"\"\"", "\n", "\n", "# Agent-specific info", "\n", "self", ".", "group_id", "=", "info_dict", "[", "'group_id'", "]", "\n", "self", ".", "group_size", "=", "info_dict", "[", "'group_size'", "]", "\n", "self", ".", "auth_method", "=", "info_dict", "[", "'auth_method'", "]", "\n", "self", ".", "ipaddr", "=", "info_dict", "[", "'ipaddr'", "]", "\n", "self", ".", "action_space_size", "=", "info_dict", "[", "'action_space_size'", "]", "\n", "\n", "# Common variables", "\n", "self", ".", "sockets_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "# Updated later as: i.e. [[send_sock,recv_sock],-1,-1]", "\n", "\n", "self", ".", "received_actions_list", "=", "-", "1", "# set by inherited class", "\n", "\n", "self", ".", "auth_results", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "self", ".", "group_key", "=", "-", "1", "# group session key", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.set_group_key": [[780, 783], ["None"], "methods", ["None"], ["", "def", "set_group_key", "(", "self", ",", "group_key", ")", ":", "\n", "        ", "\"\"\"Set the group session key.\"\"\"", "\n", "self", ".", "group_key", "=", "group_key", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.print_agent_model": [[784, 787], ["NotImplementedError"], "methods", ["None"], ["", "def", "print_agent_model", "(", "self", ")", ":", "\n", "        ", "\"\"\"Print agent model(s) depending on whether agent re-uses its model.\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement printing of its models.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.print_agent_secrets": [[788, 793], ["print", "print"], "methods", ["None"], ["", "def", "print_agent_secrets", "(", "self", ")", ":", "\n", "        ", "\"\"\"Print shared secrets for all other agents.\"\"\"", "\n", "print", "(", "\"\\nPrinting shared secrets:\"", ")", "\n", "for", "secret", "in", "self", ".", "shared_secrets_list", ":", "\n", "            ", "print", "(", "\"agent secret: \"", ",", "secret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.print_agent_sockets": [[794, 799], ["print", "print"], "methods", ["None"], ["", "", "def", "print_agent_sockets", "(", "self", ")", ":", "\n", "         ", "\"\"\"Print socket info for all other agents.\"\"\"", "\n", "print", "(", "\"Printing sockets info:\"", ")", "\n", "for", "info", "in", "self", ".", "socket_info_list", ":", "\n", "            ", "print", "(", "\"socket info: \"", ",", "info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.set_seed": [[800, 806], ["random.seed", "numpy.random.seed", "torch.manual_seed"], "methods", ["None"], ["", "", "def", "set_seed", "(", "self", ",", "seed", ")", ":", "\n", "        ", "\"\"\"Helper function to seed all RNG.\"\"\"", "\n", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.create_agent_model": [[807, 855], ["multi_agent_systems.SystemAgent.set_seed", "agents.create_random_pdt_agent", "multi_agent_systems.SystemAgent.set_seed", "agents.create_random_pdt_multiagent", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.set_seed", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_pdt_agent", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.set_seed", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_pdt_multiagent"], ["", "def", "create_agent_model", "(", "self", ",", "info_dict", ",", "statedict", ")", ":", "\n", "        ", "\"\"\"\n        Create either PDTAgent from unique seed or neural network class from statedict.\n        Function is meant to be re-used by subclasses.\n\n        Args:\n        info_dict: python dict of agent-specific info.\n        statedict: .pth file with specific neural net\n        \"\"\"", "\n", "\n", "# Create agent model from unique seed", "\n", "if", "info_dict", "[", "'model_type'", "]", "==", "'pdt'", ":", "\n", "\n", "# Seed from agent's unique creation seed", "\n", "            ", "unique_seed", "=", "info_dict", "[", "'unique_seed'", "]", "\n", "self", ".", "set_seed", "(", "unique_seed", ")", "\n", "\n", "# Get PDT-specific parameters", "\n", "depth", "=", "info_dict", "[", "'depth'", "]", "\n", "n_actions", "=", "info_dict", "[", "'n_actions'", "]", "\n", "window", "=", "info_dict", "[", "'window'", "]", "\n", "temperature", "=", "info_dict", "[", "'temperature'", "]", "\n", "\n", "# Create pdt model", "\n", "agent_model", "=", "create_random_pdt_agent", "(", "depth", ",", "n_actions", ",", "window", ",", "temperature", ")", "\n", "\n", "", "elif", "info_dict", "[", "'model_type'", "]", "==", "'multitree'", ":", "\n", "\n", "# Seed from agent's unique creation seed", "\n", "            ", "unique_seed", "=", "info_dict", "[", "'unique_seed'", "]", "\n", "self", ".", "set_seed", "(", "unique_seed", ")", "\n", "\n", "# Get Multitree-specific parameters", "\n", "depth", "=", "info_dict", "[", "'depth'", "]", "\n", "n_actions", "=", "info_dict", "[", "'n_actions'", "]", "# action space size", "\n", "window", "=", "info_dict", "[", "'window'", "]", "\n", "temperature", "=", "info_dict", "[", "'temperature'", "]", "\n", "\n", "# Create pdt model", "\n", "agent_model", "=", "create_random_pdt_multiagent", "(", "depth", ",", "n_actions", ",", "\n", "n_other_agents", "=", "self", ".", "group_size", "-", "1", ",", "\n", "window", "=", "window", ",", "temperature", "=", "temperature", ")", "\n", "\n", "", "else", ":", "\n", "# Create neural net from statedict and parameters in info_dict", "\n", "            ", "exit", "(", "\"Exiting: Neural net agent model creation not yet implemented!\"", ")", "\n", "\n", "", "return", "agent_model", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.create_shared_secrets": [[857, 887], ["range", "range", "multi_agent_systems.SystemAgent.create_agent_model"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.create_agent_model"], ["", "def", "create_shared_secrets", "(", "self", ",", "secrets_info_dict", ",", "statedict_secrets", ")", ":", "\n", "        ", "\"\"\"Create list of shared secrets for this agent.\n\n        Args:\n        secrets_info_dict: agent-specific json object with permitted secrets \n                           i.e. {\n                                \"secrets_list\": [-1, {agent1 info}, -1]\n                                }\n        \"\"\"", "\n", "\n", "# Initialize empty list of secrets for other agents", "\n", "shared_secrets_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "# Collect list of secrets dicts from json dict", "\n", "secrets_info_list", "=", "secrets_info_dict", "[", "\"secrets_list\"", "]", "\n", "\n", "# Create shared secret for other agents", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Create actual agent model from dict", "\n", "", "if", "secrets_info_list", "[", "l", "]", "!=", "-", "1", ":", "\n", "                ", "info_dict", "=", "secrets_info_list", "[", "l", "]", "\n", "statedict", "=", "statedict_secrets", "[", "l", "]", "\n", "\n", "shared_secrets_list", "[", "l", "]", "=", "self", ".", "create_agent_model", "(", "info_dict", ",", "statedict", ")", "\n", "\n", "", "", "return", "shared_secrets_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.set_shared_secrets": [[888, 900], ["multi_agent_systems.SystemAgent.create_shared_secrets"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.create_shared_secrets"], ["", "def", "set_shared_secrets", "(", "self", ",", "secrets_info_dict", ",", "statedict_secrets", ")", ":", "\n", "        ", "\"\"\"Set list of shared secrets for other agents.\n\n        Args: \n        secrets_info_dict: agent-specific json object with permitted secrets \n                           i.e. {\n                                \"secrets_list\": [-1, {agent1 info}, -1]\n                                }\n        statedict_secrets: list of .pth files for other agents which use neural net\n        \"\"\"", "\n", "\n", "self", ".", "shared_secrets_list", "=", "self", ".", "create_shared_secrets", "(", "secrets_info_dict", ",", "statedict_secrets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.set_socket_info": [[901, 905], ["NotImplementedError"], "methods", ["None"], ["", "def", "set_socket_info", "(", "self", ")", ":", "\n", "        ", "\"\"\"Record IP address and port numbers to connect to other agents.\"\"\"", "\n", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement setting socket info.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.connect_tcp_sockets": [[906, 910], ["NotImplementedError"], "methods", ["None"], ["", "def", "connect_tcp_sockets", "(", "self", ")", ":", "\n", "        ", "\"\"\"Connect to other agent(s) in group using socket pair for them.\"\"\"", "\n", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement connecting sockets to other agents.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.check_receive_sockets": [[911, 915], ["NotImplementedError"], "methods", ["None"], ["", "def", "check_receive_sockets", "(", "self", ")", ":", "\n", "        ", "\"\"\"Collect received actions from other agents during remote interaction.\"\"\"", "\n", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement collecting received actions.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.broadcast_actions": [[916, 920], ["NotImplementedError"], "methods", ["None"], ["", "def", "broadcast_actions", "(", "self", ",", "actions_for_group", ",", "t", ",", "network_protocol", ")", ":", "\n", "        ", "\"\"\"Send selected action(s) from behavioral model(s) to rest of group.\"\"\"", "\n", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement broadcasting actions.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.interact": [[921, 935], ["NotImplementedError"], "methods", ["None"], ["", "def", "interact", "(", "self", ",", "t", ",", "prev_actions", ",", "network_protocol", ")", ":", "\n", "        ", "\"\"\"\n        Perform remote interaction for this timestep.\n\n        1. Get next action(s)\n        2. Update shared secret(s) \n        3. Transmits action(s)\n        4. Receive action(s).\n\n        Args: \n        t: current timestep in interaction process\n        prev_actions: sublist with group actions from previous timestep \n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement remote interaction.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.authenticate": [[936, 939], ["NotImplementedError"], "methods", ["None"], ["", "def", "authenticate", "(", "self", ")", ":", "\n", "        ", "\"\"\"Authenticate other agent(s) using either hyp test or neural net.\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement authentication.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.setup_key": [[940, 943], ["NotImplementedError"], "methods", ["None"], ["", "def", "setup_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Create and set session keys for encryption/decryption.\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement key generation.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.print_secrets_histories": [[944, 956], ["print", "zip", "range", "print", "print"], "methods", ["None"], ["", "def", "print_secrets_histories", "(", "self", ")", ":", "\n", "        ", "\"\"\"Print interaction histories for all shared secrets.\"\"\"", "\n", "\n", "print", "(", "\"\\nPrinting agent shared secrets histories: \"", ")", "\n", "\n", "for", "secret_model", ",", "id", "in", "zip", "(", "self", ".", "shared_secrets_list", ",", "range", "(", "self", ".", "group_size", ")", ")", ":", "\n", "\n", "            ", "if", "secret_model", "==", "-", "1", ":", "\n", "                ", "print", "(", "\"\\nsecret id: \"", ",", "id", ",", "\" history: -1\"", ")", "\n", "continue", "\n", "\n", "", "print", "(", "\"\\nsecret id: \"", ",", "id", ",", "\" history: \"", ",", "secret_model", ".", "_interaction_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.__init__": [[961, 990], ["multi_agent_systems.SystemAgent.__init__", "multi_agent_systems.CentralServerAgent.set_agent_model", "multi_agent_systems.CentralServerAgent.set_shared_secrets", "multi_agent_systems.CentralServerAgent.set_received_actions_list", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.__init__", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_agent_model", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.set_shared_secrets", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_received_actions_list"], ["def", "__init__", "(", "self", ",", "info_dict", ",", "secrets_info_dict", ",", "statedict_models", ",", "statedict_secrets", ",", "\n", "max_interaction_length", ")", ":", "\n", "        ", "\"\"\"Initialize a central server.\"\"\"", "\n", "\n", "# Use inherited constructor", "\n", "super", "(", "CentralServerAgent", ",", "self", ")", ".", "__init__", "(", "info_dict", ")", "\n", "\n", "# Set new variables", "\n", "self", ".", "is_central_server", "=", "info_dict", "[", "'is_central_server'", "]", "\n", "self", ".", "reuse_agent_model", "=", "info_dict", "[", "'reuse_agent_model'", "]", "\n", "\n", "if", "'hypothesis_test'", "in", "info_dict", "[", "'auth_method'", "]", ":", "\n", "            ", "self", ".", "alpha", "=", "info_dict", "[", "'alpha'", "]", "\n", "\n", "", "self", ".", "group_interaction_history", "=", "-", "1", "\n", "\n", "\n", "# Set agent model(s)", "\n", "self", ".", "set_agent_model", "(", "info_dict", ",", "statedict_models", ")", "\n", "\n", "# Set shared secrets using inherited method", "\n", "self", ".", "set_shared_secrets", "(", "secrets_info_dict", ",", "statedict_secrets", ")", "\n", "\n", "# Set received actions list as [-1, [-1,..,-1], [-1,..,-1]]", "\n", "# Each sublist is sized interaction len, to be filled during interaction", "\n", "self", ".", "set_received_actions_list", "(", "self", ".", "group_size", ",", "max_interaction_length", ")", "\n", "\n", "# Initialize mutual key list", "\n", "self", ".", "mutual_keys_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.set_mutual_keys_list": [[991, 994], ["None"], "methods", ["None"], ["", "def", "set_mutual_keys_list", "(", "self", ",", "mutual_keys_list", ")", ":", "\n", "        ", "\"\"\"Set the list of mutual keys for all agents.\"\"\"", "\n", "self", ".", "mutual_keys_list", "=", "mutual_keys_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.set_group_interaction_history": [[995, 1009], ["None"], "methods", ["None"], ["", "def", "set_group_interaction_history", "(", "self", ",", "history", ")", ":", "\n", "        ", "\"\"\"\n        Set group interaction history.\n\n        Args:\n        history: list of sublists for each timestep in interaction\n        \n        Format: [\n                    [[-1, action_for_a1, action_for_a2], a1_action, a2_action],\n                    [[-1, action_for_a1, action_for_a2], a1_action, a2_action],\n                    ...\n                ]\n        \"\"\"", "\n", "self", ".", "group_interaction_history", "=", "history", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.set_received_actions_list": [[1010, 1029], ["range", "range", "range"], "methods", ["None"], ["", "def", "set_received_actions_list", "(", "self", ",", "group_size", ",", "max_interaction_length", ")", ":", "\n", "        ", "\"\"\"\n        Set received actions list by max interaction length.\n        Format of list: [-1, [-1,...,-1], [-1,...,-1]]\n        \"\"\"", "\n", "\n", "# Define variables", "\n", "received_actions_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "group_size", ")", "]", "\n", "\n", "# Create set-length sublist for other agents", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "", "received_actions_list", "[", "l", "]", "=", "[", "-", "1", "for", "_", "in", "range", "(", "max_interaction_length", ")", "]", "\n", "\n", "# Set for self", "\n", "", "self", ".", "received_actions_list", "=", "received_actions_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.set_agent_model": [[1030, 1067], ["range", "range", "multi_agent_systems.CentralServerAgent.create_agent_model"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.create_agent_model"], ["", "def", "set_agent_model", "(", "self", ",", "info_file", ",", "statedict_models", ")", ":", "\n", "        ", "\"\"\"Central server may use an indentical model for all users...\n        or it may keep a different model for each user.\n\n        Args:\n        info_file: json file with following example format\n            {\n                \"group_id\": \n                \"reuse_agent_model\":\n                ...\n\n                \"models_list\": [-1, \n                                {\"unique_seed\":0, \"model_type\": 'pdt', ...}, \n                                -1]\n            }\n        statedict: list of .pth files for agent to use, i.e. [-1, agent1.pth, agent2.pth]\n        \"\"\"", "\n", "\n", "# Get list of behavioural models from dict", "\n", "models_list", "=", "info_file", "[", "\"models_list\"", "]", "\n", "\n", "\"\"\"\n        Central server may have kept an identical model for all others...\n        or it may haev kept a unique model for others.\n        \"\"\"", "\n", "\n", "# Example: model_list = [-1, {...}, {...}]", "\n", "self", ".", "agent_models", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "info_dict", "=", "models_list", "[", "l", "]", "\n", "statedict", "=", "statedict_models", "[", "l", "]", "# get model to use with other agent", "\n", "\n", "self", ".", "agent_models", "[", "l", "]", "=", "self", ".", "create_agent_model", "(", "info_dict", ",", "statedict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.set_socket_info": [[1068, 1078], ["file_handling.update_json_file", "str"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.update_json_file"], ["", "", "", "def", "set_socket_info", "(", "self", ",", "socket_info_list", ",", "path_agent_files", ")", ":", "\n", "        ", "\"\"\"Record IP address and port numbers to connect to other agents.\"\"\"", "\n", "\n", "# Example: [-1, [(a1_ip, port25),(a1_ip, port26)], [(a2_ip, port34),(a2_ip, port35)]]", "\n", "self", ".", "socket_info_list", "=", "socket_info_list", "\n", "\n", "# Update agent info json file (i.e. 'agent_info_files/agent0_info.txt')", "\n", "agent_info_filepath", "=", "path_agent_files", "+", "'/agent'", "+", "str", "(", "self", ".", "group_id", ")", "+", "'_info.txt'", "\n", "\n", "update_json_file", "(", "agent_info_filepath", ",", "key", "=", "'socket_info_list'", ",", "value", "=", "socket_info_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.connect_tcp_sockets": [[1079, 1127], ["range", "network_functions.connect_socket_pairs", "print"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.connect_socket_pairs"], ["", "def", "connect_tcp_sockets", "(", "self", ",", "info_dict", ")", ":", "\n", "\n", "        ", "\"\"\"(Remote use) Setup pair of server-style sockets for all others agents,...\n        ...then connect them to remote sockets.\"\"\"", "\n", "\n", "# Format: [-1, [(a1_ip,port26),(a1_ip,port27)], [(a2_ip,port35),(a2_ip,port36)]]", "\n", "socket_info_list", "=", "info_dict", "[", "'socket_info_list'", "]", "\n", "\n", "# For each agent in group, connect my sockets to theirs", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Skip myself", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Central server sockets are server-style, other agents have client-style", "\n", "", "setup_function", "=", "setup_server_style_socket", "\n", "\n", "# Get connection info for each socket (IP addresses are the same)", "\n", "(", "ipaddr1", ",", "port1", ")", "=", "socket_info_list", "[", "l", "]", "[", "0", "]", "# (a1_ipaddr, port1)", "\n", "(", "ipaddr2", ",", "port2", ")", "=", "socket_info_list", "[", "l", "]", "[", "1", "]", "# (a1_ipaddr, port2)", "\n", "\n", "\"\"\" \n            From joint port numbers [(ip,port1), (ip, port2)], central server\n            will send over port1 and receive over port2. Other agents\n            send over port2 and receive over port1. \n\n            This is why thread labels designate thread1 to send over port1 and \n            thread2 to recieve over port2.\n            \"\"\"", "\n", "\n", "# Labels for each thread socket's function in the connection", "\n", "thread1_type", "=", "'send'", "\n", "thread2_type", "=", "'receive'", "\n", "\n", "# Prepare socket info tuples for function", "\n", "socket1_info_tuple", "=", "(", "ipaddr1", ",", "port1", ",", "thread1_type", ")", "\n", "socket2_info_tuple", "=", "(", "ipaddr2", ",", "port2", ",", "thread2_type", ")", "\n", "\n", "# Get prepared sockets as [send_socket, recv_socket]", "\n", "sockets_for_agent", "=", "connect_socket_pairs", "(", "setup_function", ",", "\n", "socket1_info_tuple", ",", "socket2_info_tuple", ")", "\n", "\n", "# Update sockets list ", "\n", "# Example format: [-1,[send_sock,recv_sock],[send_sock,recv_sock]])", "\n", "self", ".", "sockets_list", "[", "l", "]", "=", "sockets_for_agent", "\n", "\n", "print", "(", "\"\\nself.sockets_list: \"", ",", "self", ".", "sockets_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.local_interact": [[1128, 1150], ["multi_agent_systems.CentralServerAgent.model_next_action", "multi_agent_systems.CentralServerAgent.secrets_next_action"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.model_next_action", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.secrets_next_action"], ["", "", "def", "local_interact", "(", "self", ",", "t", ",", "prev_actions", ")", ":", "\n", "        ", "\"\"\"\n        Perform local interaction for this timestep.\n        \n        1. Get next action(s)\n        2. Update shared secret(s)\n\n        Args: \n        t: current timestep in interaction process\n        prev_actions: sublist with group actions from previous timestep \n        \"\"\"", "\n", "\n", "# 1. Get next action from models, which also store their (action,dist)", "\n", "own_actions_list", "=", "self", ".", "model_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# example own_actions_list: [-1, action_for_a1, action_for_a2]", "\n", "\n", "# 2. Update shared secrets which store their own dists", "\n", "self", ".", "secrets_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# return just own actions sublist for this timestep", "\n", "return", "own_actions_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.interact": [[1152, 1205], ["multi_agent_systems.CentralServerAgent.model_next_action", "multi_agent_systems.CentralServerAgent.secrets_next_action", "multi_agent_systems.CentralServerAgent.broadcast_actions", "multi_agent_systems.CentralServerAgent.check_receive_sockets", "range", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.model_next_action", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.secrets_next_action", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.broadcast_actions", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.check_receive_sockets"], ["", "def", "interact", "(", "self", ",", "t", ",", "prev_actions", ",", "network_protocol", ")", ":", "\n", "        ", "\"\"\"\n        Perform remote interaction for this timestep.\n\n        1. Get next action(s)\n        2. Update shared secret(s) \n        3. Transmits action(s)\n        4. Receive action(s).\n\n        Args: \n        t: current timestep in interaction process\n        prev_actions: sublist with group actions from previous timestep \n        \"\"\"", "\n", "\n", "# 1. Get next action from models, which also store their (action,dist)", "\n", "own_actions_list", "=", "self", ".", "model_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# example own_actions_list: [-1, action_for_a1, action_for_a2]", "\n", "\n", "# 2. Update shared secrets which store their own dists", "\n", "self", ".", "secrets_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# 3. Transmit own actions to other agents", "\n", "self", ".", "broadcast_actions", "(", "own_actions_list", ",", "t", ",", "network_protocol", ")", "\n", "\n", "# 4. Collect actions from receive sockets", "\n", "\n", "# blocking call: collect from receive sockets and store in self", "\n", "self", ".", "check_receive_sockets", "(", "t", ")", "\n", "\n", "# example of self.received_actions_list: [-1, [-1,..,-1], [-1,..,-1]]", "\n", "\n", "# collect received actions from self", "\n", "group_actions_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "group_actions_list", "[", "self", ".", "group_id", "]", "=", "own_actions_list", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "", "received_actions_sublist", "=", "self", ".", "received_actions_list", "[", "l", "]", "\n", "\n", "# get action from other agent at current timestep", "\n", "group_actions_list", "[", "l", "]", "=", "received_actions_sublist", "[", "t", "]", "\n", "\n", "", "\"\"\"\n        example of group_actions_list (group actions at this timestep): \n\n        [ [-1, action_for_a1, action_for_a2], a1_action, a2_action]\n        \"\"\"", "\n", "\n", "# return interaction history for this timestep", "\n", "return", "group_actions_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.model_next_action": [[1207, 1258], ["range", "range", "multi_agent_systems.CentralServerAgent.agent_models[].act", "multi_agent_systems.CentralServerAgent.agent_models[].act", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act"], ["", "def", "model_next_action", "(", "self", ",", "t", ",", "group_prev_actions", ")", ":", "\n", "        ", "\"\"\"\n        Behavioral models provide and personally store next action & dist.\n        \n        Args:\n        t: current timestep\n        group_prev_actions: group actions from previous timestep \n                    i.e. [[-1, action_for_a1, action_for_a2], a1_action, a2_action]\n        \"\"\"", "\n", "\n", "# Define variables", "\n", "next_actions_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "self", ".", "agent_models", "[", "l", "]", ".", "_type", "==", "'pdt'", ":", "\n", "\n", "# PDTAgent conditions on most recent other agent action", "\n", "                ", "if", "t", "==", "0", ":", "\n", "                    ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "                    ", "inputs", "=", "[", "group_prev_actions", "[", "l", "]", "]", "\n", "\n", "# Agent model self-stores then provides action,dist", "\n", "", "(", "action", ",", "dist", ")", "=", "self", ".", "agent_models", "[", "l", "]", ".", "act", "(", "t", ",", "inputs", ")", "\n", "\n", "", "elif", "self", ".", "agent_models", "[", "l", "]", ".", "_type", "==", "'neuralnet'", ":", "\n", "\n", "# Neuralnet conditions on: [server_i, client_i]", "\n", "                ", "if", "t", "==", "0", ":", "\n", "                    ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "                    ", "s_i", "=", "group_prev_actions", "[", "self", ".", "group_id", "]", "[", "l", "]", "\n", "c_i", "=", "group_prev_actions", "[", "l", "]", "\n", "\n", "inputs", "=", "[", "s_i", ",", "c_i", "]", "\n", "\n", "# Agent model stores then provides integer action, dist", "\n", "", "(", "logits", ",", "action", ")", "=", "self", ".", "agent_models", "[", "l", "]", ".", "act", "(", "t", ",", "inputs", ",", "self", ".", "action_space_size", ")", "\n", "\n", "", "else", ":", "\n", "                ", "exit", "(", "\"Exiting: Agent model not of supported types.\"", ")", "\n", "\n", "# Place in next_actions_list at index", "\n", "", "next_actions_list", "[", "l", "]", "=", "action", "\n", "\n", "# Return list of next actions from all models", "\n", "", "return", "next_actions_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.secrets_next_action": [[1259, 1306], ["range", "multi_agent_systems.CentralServerAgent.shared_secrets_list[].act", "multi_agent_systems.CentralServerAgent.shared_secrets_list[].act", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act"], ["", "def", "secrets_next_action", "(", "self", ",", "t", ",", "group_prev_actions", ")", ":", "\n", "        ", "\"\"\"\n        Have shared secrets update with next action and dist.\n        Only the dists are significant for later key computation.\n\n        Args:\n        t: current timestep\n        group_prev_actions: group actions from previous timestep \n                i.e. [[-1, action_for_a1, action_for_a2], a1_action, a2_action]\n        \"\"\"", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "_type", "==", "'pdt'", ":", "\n", "\n", "# PDTAgent conditions on most recent other agent action", "\n", "                ", "if", "t", "==", "0", ":", "\n", "                    ", "inputs", "=", "[", "]", "\n", "", "else", ":", "# provide own action to condition on", "\n", "                    ", "inputs", "=", "[", "group_prev_actions", "[", "self", ".", "group_id", "]", "[", "l", "]", "]", "\n", "\n", "# Secret model stores own dist,action", "\n", "", "(", "_", ",", "_", ")", "=", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "act", "(", "t", ",", "inputs", ")", "\n", "\n", "", "elif", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "_type", "==", "'neuralnet'", ":", "\n", "\n", "                ", "\"\"\"\n                Secret neuralnet conditions on: [server_i, client_i], not on own actions.\n                The shared secret model just needs to self-store expected dists for\n                ...later key computation. Its action output is not required.\n                \"\"\"", "\n", "if", "t", "==", "0", ":", "\n", "                    ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "                    ", "s_i", "=", "group_prev_actions", "[", "self", ".", "group_id", "]", "[", "l", "]", "[", ":", "]", "\n", "c_i", "=", "group_prev_actions", "[", "l", "]", "[", ":", "]", "\n", "\n", "inputs", "=", "[", "s_i", ",", "c_i", "]", "\n", "\n", "# Secret model stores own action, dist", "\n", "", "(", "_", ",", "_", ")", "=", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "act", "(", "t", ",", "inputs", ",", "self", ".", "action_space_size", ")", "\n", "\n", "", "else", ":", "\n", "                ", "exit", "(", "\"Exiting: Agent model not of supported types.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.broadcast_actions": [[1308, 1337], ["range", "network_functions.send_actions_over_sockets", "send_sock_list.append", "actions_list.append"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.send_actions_over_sockets"], ["", "", "", "def", "broadcast_actions", "(", "self", ",", "actions_for_group", ",", "t", ",", "network_protocol", ")", ":", "\n", "        ", "\"\"\"\n        Send own selected actions to other agents at this timestep in interaction.\n\n        Args:\n        actions_for_group: list of own selected actions at this timestep in interaction.\n                          i.e. [-1, action_for_a1, action_for_a2]\n        t: current timestep in remote interaction process.\n        \"\"\"", "\n", "\n", "# Get list of send sockets, and own actions for other agents", "\n", "send_sock_list", "=", "[", "]", "\n", "actions_list", "=", "[", "]", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Get send socket for agent from tuple: (send_sock, recv_sock)", "\n", "", "send_sock", "=", "self", ".", "sockets_list", "[", "l", "]", "[", "0", "]", "\n", "send_sock_list", ".", "append", "(", "send_sock", ")", "\n", "\n", "# Get own action for this agent", "\n", "action", "=", "actions_for_group", "[", "l", "]", "\n", "actions_list", ".", "append", "(", "action", ")", "\n", "\n", "# Send collected actions over collected send sockets", "\n", "", "send_actions_over_sockets", "(", "send_sock_list", ",", "actions_list", ",", "t", ",", "network_protocol", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.check_receive_sockets": [[1338, 1375], ["range", "network_functions.receive_action_from_socket", "str", "msg_list_current_timestep.count", "int"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.receive_action_from_socket"], ["", "def", "check_receive_sockets", "(", "self", ",", "t", ")", ":", "\n", "        ", "\"\"\"\n        Collect received actions from other agents during remote interaction.\n        Update self.received_actions_list with all received actions.\n        \"\"\"", "\n", "#print(\"\\nInside check_receive_sockets!\")", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "#print(\"\\nl: \", l)", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Get receive socket for central server from tuple: (send_sock, recv_sock)", "\n", "", "receive_sock", "=", "self", ".", "sockets_list", "[", "l", "]", "[", "1", "]", "\n", "\n", "# Place blocking call in script until action appears at recv socket", "\n", "(", "msg_list", ",", "msg_list_tuples", ")", "=", "receive_action_from_socket", "(", "receive_sock", ")", "\n", "\n", "# Example msg_list: ['3F_t0_C', '2F_t1_C'] if more than one message received", "\n", "# Example time-ordered msg_list_tuples: [(3,0), 2,1]", "\n", "\n", "# Ensure only a single msg in the list is for this current timestep", "\n", "current_time_str", "=", "'t'", "+", "str", "(", "t", ")", "# i.e. 't3' ", "\n", "msg_list_current_timestep", "=", "[", "current_time_str", "in", "x", "for", "x", "in", "msg_list", "]", "\n", "\n", "assert", "msg_list_current_timestep", ".", "count", "(", "True", ")", "==", "1", ",", "\"Only one msg should have current time!\"", "\n", "\n", "# Place in agent's sublist at the index for timestep ", "\n", "# Format: [-1, [a1_t1, a1_t2,...,a1_T], [a2_t1, a2_t2,...,a2_T]]", "\n", "\n", "for", "msg_tuple", "in", "msg_list_tuples", ":", "# i.e. [(3,0), (2,1)]", "\n", "\n", "                ", "msg_action", "=", "msg_tuple", "[", "0", "]", "\n", "msg_time", "=", "msg_tuple", "[", "1", "]", "\n", "\n", "self", ".", "received_actions_list", "[", "l", "]", "[", "msg_time", "]", "=", "int", "(", "msg_action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.authenticate": [[1376, 1417], ["range", "hyp_test.hypothesis_test_v1", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.hypothesis_test_v1"], ["", "", "", "def", "authenticate", "(", "self", ",", "group_history", ",", "max_history_len", ")", ":", "#, agent_info_dict):", "\n", "        ", "\"\"\"Authenticate other agents in the group.\n        \n        Args: \n        group_history: [ [[-1,cs_for_a1,cs_for_a2],a1_action,a2_action],...]\n        max_history_len: length of complete interaction history.\n        \"\"\"", "\n", "\n", "# Run authentication test for each agent", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "self", ".", "auth_method", "[", "l", "]", "==", "'hypothesis_test'", ":", "\n", "\n", "# Define variables", "\n", "                ", "alpha", "=", "self", ".", "alpha", "#agent_info_dict['alpha']", "\n", "\n", "# Get action of unknown agent from group history", "\n", "unknown_agent_actions", "=", "[", "x", "[", "l", "]", "for", "x", "in", "group_history", "]", "\n", "\n", "# Get dists of shared secret for central server", "\n", "secret_history", "=", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "_interaction_history", "\n", "# Example secret_history: [(action,dist), (action,dist),...]", "\n", "\n", "known_agent_dists", "=", "[", "x", "[", "1", "]", "for", "x", "in", "secret_history", "]", "\n", "\n", "# Get pvalues from hypothesis test", "\n", "(", "pvalue_reg", ",", "pvalue_ratio", ")", "=", "hypothesis_test_v1", "(", "\n", "unknown_agent_actions", ",", "\n", "known_agent_dists", ",", "\n", "update_times", "=", "[", "max_history_len", "-", "1", "]", ",", "\n", "num_actions", "=", "self", ".", "action_space_size", ")", "\n", "# Determine authentication success", "\n", "result", "=", "True", "if", "pvalue_ratio", ">=", "alpha", "else", "False", "\n", "self", ".", "auth_results", "[", "l", "]", "=", "result", "\n", "\n", "", "elif", "self", ".", "auth_method", "[", "l", "]", "==", "'classifier'", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "exit", "(", "\"Exiting: Specified authentication method not supported.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.collect_own_histories": [[1418, 1459], ["range", "zip", "range", "own_history.append"], "methods", ["None"], ["", "", "", "def", "collect_own_histories", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Helper function to collect formatted histories of own models.\n        Collect histories from self.agent_models.\n        Format each history as: [(action,dist), (action,dist),...].\n        \"\"\"", "\n", "# Define variables", "\n", "own_histories_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "own_history_sublists", "=", "[", "x", "[", "self", ".", "group_id", "]", "for", "x", "in", "self", ".", "group_interaction_history", "]", "\n", "\n", "\"\"\"\n        Example group_interaction_history: [ [[-1,cs_for_a1,cs_for_a2], a1_action, a2_action],...]\n        \n        Example own_history: [ [-1,cs_for_a1,cs_for_a2], [-1,cs_for_a1,cs_for_a2], ...]\n        \"\"\"", "\n", "\n", "# Go through own agent models", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Skip self", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Collect own history for other agent", "\n", "", "own_history_actions", "=", "[", "x", "[", "l", "]", "for", "x", "in", "own_history_sublists", "]", "\n", "\n", "# Collect own history dists for this agent", "\n", "own_history_dists", "=", "[", "x", "[", "1", "]", "for", "x", "in", "self", ".", "agent_models", "[", "l", "]", ".", "_interaction_history", "]", "\n", "# example _interaction_history: [(action,dist), (action,dist),...]", "\n", "\n", "# Assemble own history as [(action, dist),...]", "\n", "own_history", "=", "[", "]", "\n", "for", "(", "action", ",", "dist", ")", "in", "zip", "(", "own_history_actions", ",", "own_history_dists", ")", ":", "\n", "                ", "own_history", ".", "append", "(", "(", "action", ",", "dist", ")", ")", "\n", "\n", "# Record history in list", "\n", "", "own_histories_list", "[", "l", "]", "=", "own_history", "\n", "\n", "# Return list of own histories", "\n", "", "return", "own_histories_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.collect_agent_histories": [[1460, 1495], ["range", "zip", "range", "agent_history.append"], "methods", ["None"], ["", "def", "collect_agent_histories", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Helper function to collect formatted histories of other agents.\n        Collect histories from self.shared_secrets_list.\n        Format each history as: [(action,dist), (action,dist),...].\n        \"\"\"", "\n", "\n", "# Define variables ", "\n", "agent_histories_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "# Go over other agents", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Skip self", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Collect history for other agent", "\n", "", "agent_history_actions", "=", "[", "x", "[", "l", "]", "for", "x", "in", "self", ".", "group_interaction_history", "]", "\n", "# example group_.._history: [ [[-1,cs_for_a1,cs_for_a2], a1_action, a2_action],...]", "\n", "\n", "# Collect dists for agent from shared secret model", "\n", "agent_history_dists", "=", "[", "x", "[", "1", "]", "for", "x", "in", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "_interaction_history", "]", "\n", "# example _interaction_history: [(action,dist), (action,dist),...]", "\n", "\n", "# Assemble agent history as [(action,dist),...]", "\n", "agent_history", "=", "[", "]", "\n", "for", "(", "action", ",", "dist", ")", "in", "zip", "(", "agent_history_actions", ",", "agent_history_dists", ")", ":", "\n", "                ", "agent_history", ".", "append", "(", "(", "action", ",", "dist", ")", ")", "\n", "\n", "# Record in list", "\n", "", "agent_histories_list", "[", "l", "]", "=", "agent_history", "\n", "\n", "# Return list", "\n", "", "return", "agent_histories_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.create_mutual_keys": [[1497, 1533], ["multi_agent_systems.CentralServerAgent.collect_own_histories", "multi_agent_systems.CentralServerAgent.collect_agent_histories", "range", "key_gen.session_key_v1", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.collect_own_histories", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.collect_agent_histories", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.session_key_v1"], ["", "def", "create_mutual_keys", "(", "self", ")", ":", "\n", "        ", "\"\"\"Create mutual key between self and other agent(s).\"\"\"", "\n", "\n", "# Define variables", "\n", "mutual_keys_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "own_histories_list", "=", "self", ".", "collect_own_histories", "(", ")", "\n", "# example: [-1, [history_model1], [history_model2], ...]", "\n", "\n", "agent_histories_list", "=", "self", ".", "collect_agent_histories", "(", ")", "\n", "# example: [-1, [history_agent1], [history_agent2], ...]", "\n", "\n", "# Create mutual key for other agents", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Skip self", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Assemble histories in order of group ID", "\n", "", "assert", "self", ".", "group_id", "<", "l", ",", "\"Error: CS ID > Agent ID!\"", "\n", "\n", "own_history", "=", "own_histories_list", "[", "l", "]", "# from lth own model ", "\n", "agent_history", "=", "agent_histories_list", "[", "l", "]", "# from lth own shared secret ", "\n", "\n", "input_histories_list", "=", "[", "own_history", ",", "agent_history", "]", "\n", "\n", "# Create mutual key", "\n", "mutual_key", "=", "session_key_v1", "(", "input_histories_list", ")", "\n", "#print(\"\\nmutual_key: \", mutual_key)", "\n", "\n", "# Record mutual key", "\n", "mutual_keys_list", "[", "l", "]", "=", "mutual_key", "\n", "\n", "# Return created mutual keys", "\n", "", "return", "mutual_keys_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.create_group_key": [[1534, 1557], ["multi_agent_systems.CentralServerAgent.collect_own_histories", "multi_agent_systems.CentralServerAgent.collect_agent_histories", "key_gen.session_key_v1"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.collect_own_histories", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.collect_agent_histories", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.session_key_v1"], ["", "def", "create_group_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Create group key over own model histories and other agent histories.\"\"\"", "\n", "\n", "# Define variables", "\n", "own_histories_list", "=", "self", ".", "collect_own_histories", "(", ")", "\n", "# example: [-1, [history_model1], [history_model2], ...]", "\n", "\n", "agent_histories_list", "=", "self", ".", "collect_agent_histories", "(", ")", "\n", "# example: [-1, [history_agent1], [history_agent2], ...]", "\n", "\n", "# Trim lists to prepare for key gen function", "\n", "own_histories_list_trim", "=", "own_histories_list", "[", "1", ":", "]", "\n", "\n", "agent_histories_list_trim", "=", "agent_histories_list", "[", "1", ":", "]", "\n", "\n", "# Build group key in format: 'model1*model2*model3*agent1*agent2*agent3'", "\n", "all_histories_list", "=", "own_histories_list_trim", "[", ":", "]", "+", "agent_histories_list_trim", "[", ":", "]", "\n", "\n", "group_key", "=", "session_key_v1", "(", "all_histories_list", ")", "\n", "#print(\"\\ngroup_key: \", group_key)", "\n", "\n", "# Return group key", "\n", "return", "group_key", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.encrypt_group_key": [[1558, 1586], ["range", "key_gen.pbkd", "key_gen.encrypt", "encrypted_group_keys.append", "str", "str"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.pbkd", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.encrypt"], ["", "def", "encrypt_group_key", "(", "self", ",", "group_key", ")", ":", "\n", "        ", "\"\"\"\n        Encrypt group key by all mutual keys.\n\n        Return: list of differently encrypted group key.\n        \"\"\"", "\n", "encrypted_group_keys", "=", "[", "]", "\n", "\n", "# For each other agent, encrypt with its mutual key ", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Encrypt group key with mutual key for this agent", "\n", "\n", "# Derive cipher key from mutual key (salt is agent group id)", "\n", "", "cipher_key", "=", "pbkd", "(", "password", "=", "str", "(", "self", ".", "mutual_keys_list", "[", "l", "]", ")", ",", "salt", "=", "l", ")", "\n", "\n", "# Build ciphersuite from cipher key and encrypt group key", "\n", "group_key_encr", "=", "encrypt", "(", "cipher_key", ",", "plaintext", "=", "str", "(", "self", ".", "group_key", ")", ")", "\n", "\n", "# Append to list", "\n", "encrypted_group_keys", ".", "append", "(", "group_key_encr", ")", "\n", "\n", "# Return list", "\n", "#print(\"\\nencrypted_group_keys: \", encrypted_group_keys)", "\n", "", "return", "encrypted_group_keys", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.broadcast_group_keys": [[1588, 1617], ["range", "network_functions.send_over_sockets", "send_sock_list.append", "type", "encrypted_group_keys_str.append", "str", "key.decode"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.send_over_sockets"], ["", "def", "broadcast_group_keys", "(", "self", ",", "encrypted_group_keys", ",", "network_protocol", "=", "'tcp'", ")", ":", "\n", "        ", "\"\"\"\n        Broadcast encrypted group keys to agents.\n        Other agents receive group key encrypted by their mutual key.\n\n        Args:\n        encrypted_group_keys: list of group key as encrypted by mutual keys.\n                            Keys are of type bytes\n                            i.e. [ m_key1(g_key), m_key2(g_key) ]\n        \"\"\"", "\n", "send_sock_list", "=", "[", "]", "\n", "\n", "# Get list of sockets for other agents", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "", "send_sock_list", ".", "append", "(", "self", ".", "sockets_list", "[", "l", "]", "[", "0", "]", ")", "\n", "# example self.sockets_list[l]: (send_sock, recv_socks)", "\n", "\n", "# Convert encrypted group keys from bytes to strings", "\n", "", "encrypted_group_keys_str", "=", "[", "]", "\n", "for", "key", "in", "encrypted_group_keys", ":", "\n", "            ", "if", "type", "(", "key", ")", "==", "bytes", ":", "\n", "                ", "encrypted_group_keys_str", ".", "append", "(", "str", "(", "key", ".", "decode", "(", ")", ")", ")", "\n", "\n", "# Broadcast encrypted group keys ", "\n", "", "", "send_over_sockets", "(", "send_sock_list", ",", "encrypted_group_keys_str", ",", "network_protocol", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.local_setup_key": [[1618, 1642], ["multi_agent_systems.CentralServerAgent.create_mutual_keys", "multi_agent_systems.CentralServerAgent.set_mutual_keys_list", "multi_agent_systems.CentralServerAgent.create_group_key", "multi_agent_systems.CentralServerAgent.set_group_key", "multi_agent_systems.CentralServerAgent.encrypt_group_key"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.create_mutual_keys", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.set_mutual_keys_list", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.create_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.encrypt_group_key"], ["", "def", "local_setup_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        1.Create mutual key for agent(s)\n        2. If group size more than 2 agents, create group key\n        2a. Create group key over all agents\n        2b. For each agent, encrypt group key with mutual key\n        \"\"\"", "\n", "\n", "# 1. Create and set mutual key for agent(s)", "\n", "mutual_keys_list", "=", "self", ".", "create_mutual_keys", "(", ")", "\n", "self", ".", "set_mutual_keys_list", "(", "mutual_keys_list", ")", "\n", "\n", "# If group size > 2, then create, set, and encrypt group key ", "\n", "if", "self", ".", "group_size", ">", "2", ":", "\n", "# 2a. Create group key", "\n", "            ", "group_key", "=", "self", ".", "create_group_key", "(", ")", "\n", "\n", "# Set group key", "\n", "self", ".", "set_group_key", "(", "group_key", ")", "\n", "\n", "# 2b. Encrypt group key by different mutual keys", "\n", "encrypted_group_keys", "=", "self", ".", "encrypt_group_key", "(", "group_key", ")", "\n", "\n", "", "return", "encrypted_group_keys", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.setup_key": [[1643, 1669], ["multi_agent_systems.CentralServerAgent.create_mutual_keys", "multi_agent_systems.CentralServerAgent.set_mutual_keys_list", "multi_agent_systems.CentralServerAgent.create_group_key", "multi_agent_systems.CentralServerAgent.set_group_key", "multi_agent_systems.CentralServerAgent.encrypt_group_key", "multi_agent_systems.CentralServerAgent.broadcast_group_keys"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.create_mutual_keys", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.set_mutual_keys_list", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.create_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.encrypt_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.broadcast_group_keys"], ["", "def", "setup_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        1.Create mutual key for agent(s)\n        2. If group size more than 2 agents, create group key\n        2a. Create group key over all agents\n        2b. For each agent, encrypt group key with mutual key\n        2c. For each agent, transmit encrypted group key\n        \"\"\"", "\n", "\n", "# 1. Create and set mutual key for agent(s)", "\n", "mutual_keys_list", "=", "self", ".", "create_mutual_keys", "(", ")", "\n", "self", ".", "set_mutual_keys_list", "(", "mutual_keys_list", ")", "\n", "\n", "# If group size > 2, then create, set, encrypt, and broadcast group key ", "\n", "if", "self", ".", "group_size", ">", "2", ":", "\n", "# 2a. Create group key", "\n", "            ", "group_key", "=", "self", ".", "create_group_key", "(", ")", "\n", "\n", "# Set group key", "\n", "self", ".", "set_group_key", "(", "group_key", ")", "\n", "\n", "# 2b. Encrypt group key by different mutual keys", "\n", "encrypted_group_keys", "=", "self", ".", "encrypt_group_key", "(", "group_key", ")", "\n", "\n", "# 2c. Broadcast encrypted group keys", "\n", "self", ".", "broadcast_group_keys", "(", "encrypted_group_keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.print_agent_model": [[1671, 1677], ["print", "zip", "range", "print"], "methods", ["None"], ["", "", "def", "print_agent_model", "(", "self", ")", ":", "\n", "        ", "\"\"\"Print agent models (may be identical).\"\"\"", "\n", "\n", "print", "(", "\"\\nPrinting agent models: \"", ")", "\n", "for", "agent_model", ",", "id", "in", "zip", "(", "self", ".", "agent_models", ",", "range", "(", "self", ".", "group_size", ")", ")", ":", "\n", "            ", "print", "(", "\"\\nagent model for group id\"", ",", "id", ",", "\":\"", ",", "agent_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralServerAgent.print_model_history": [[1678, 1690], ["print", "zip", "range", "print", "print"], "methods", ["None"], ["", "", "def", "print_model_history", "(", "self", ")", ":", "\n", "        ", "\"\"\"Print interaction history for all behavioral models.\"\"\"", "\n", "\n", "print", "(", "\"\\nPrinting agent model histories: \"", ")", "\n", "\n", "for", "agent_model", ",", "id", "in", "zip", "(", "self", ".", "agent_models", ",", "range", "(", "self", ".", "group_size", ")", ")", ":", "\n", "\n", "            ", "if", "id", "==", "self", ".", "group_id", ":", "\n", "                ", "print", "(", "\"\\nmodel id: \"", ",", "id", ",", "\" history: -1\"", ")", "\n", "continue", "\n", "\n", "", "print", "(", "\"\\nmodel id: \"", ",", "id", ",", "\" history: \"", ",", "agent_model", ".", "_interaction_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.__init__": [[1695, 1724], ["multi_agent_systems.SystemAgent.__init__", "multi_agent_systems.CentralizedSystemAgent.set_agent_model", "multi_agent_systems.CentralizedSystemAgent.set_shared_secrets", "multi_agent_systems.CentralizedSystemAgent.set_received_actions_list"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.__init__", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_agent_model", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.set_shared_secrets", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_received_actions_list"], ["def", "__init__", "(", "self", ",", "info_dict", ",", "secrets_info_dict", ",", "statedict_models", ",", "statedict_secrets", ",", "\n", "max_interaction_length", ")", ":", "\n", "        ", "\"\"\"Create agent.\"\"\"", "\n", "\n", "# Use inherited constructor", "\n", "super", "(", "CentralizedSystemAgent", ",", "self", ")", ".", "__init__", "(", "info_dict", ")", "\n", "\n", "# Set new variables", "\n", "self", ".", "is_central_server", "=", "info_dict", "[", "'is_central_server'", "]", "\n", "self", ".", "central_server_group_id", "=", "info_dict", "[", "'central_server_group_id'", "]", "\n", "self", ".", "reuse_agent_model", "=", "info_dict", "[", "'reuse_agent_model'", "]", "\n", "\n", "if", "info_dict", "[", "'auth_method'", "]", "==", "'hypothesis_test'", ":", "\n", "            ", "self", ".", "alpha", "=", "info_dict", "[", "'alpha'", "]", "\n", "\n", "", "self", ".", "group_interaction_history", "=", "-", "1", "\n", "\n", "# Set agent model", "\n", "self", ".", "set_agent_model", "(", "info_dict", ",", "statedict_models", ")", "\n", "\n", "# Set shared secrets using inherited method", "\n", "self", ".", "set_shared_secrets", "(", "secrets_info_dict", ",", "statedict_secrets", ")", "\n", "\n", "# Set received actions list as [[-1,..,-1], -1, -1]", "\n", "# The sole sublist is sized interaction len, to be filled during interaction", "\n", "self", ".", "set_received_actions_list", "(", "self", ".", "group_size", ",", "max_interaction_length", ")", "\n", "\n", "# Initialize mutual key", "\n", "self", ".", "mutual_key", "=", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.set_mutual_key": [[1725, 1728], ["None"], "methods", ["None"], ["", "def", "set_mutual_key", "(", "self", ",", "mutual_key", ")", ":", "\n", "        ", "\"\"\"Set the mutual key for communication with central server.\"\"\"", "\n", "self", ".", "mutual_key", "=", "mutual_key", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.set_group_interaction_history": [[1729, 1744], ["None"], "methods", ["None"], ["", "def", "set_group_interaction_history", "(", "self", ",", "history", ")", ":", "\n", "        ", "\"\"\"\n        Set group interaction history.\n\n        Args:\n        history: list of sublists for each timestep in interaction\n        \n        Format for agent id=1: \n                [ \n                    [cs_action, a1_action, -1],\n                    [cs_action, a1_action, -1],\n                    ...\n                ]\n        \"\"\"", "\n", "self", ".", "group_interaction_history", "=", "history", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.set_received_actions_list": [[1746, 1762], ["range", "range"], "methods", ["None"], ["", "def", "set_received_actions_list", "(", "self", ",", "group_size", ",", "max_interaction_length", ")", ":", "\n", "        ", "\"\"\"\n        Set received actions list by max interaction length.\n        Format of list: [[-1,..,-1], -1, -1]\n        \"\"\"", "\n", "\n", "# Define variables", "\n", "received_actions_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "group_size", ")", "]", "\n", "\n", "# Create set-length sublist for central server", "\n", "set_length_sublist", "=", "[", "-", "1", "for", "_", "in", "range", "(", "max_interaction_length", ")", "]", "\n", "\n", "received_actions_list", "[", "self", ".", "central_server_group_id", "]", "=", "set_length_sublist", "\n", "\n", "# Set for self", "\n", "self", ".", "received_actions_list", "=", "received_actions_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.set_agent_model": [[1764, 1786], ["multi_agent_systems.CentralizedSystemAgent.create_agent_model"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.create_agent_model"], ["", "def", "set_agent_model", "(", "self", ",", "info_file", ",", "statedict_models", ")", ":", "\n", "        ", "\"\"\"System agent in centralized setting only uses single model.\n\n        Args:\n        info_file: json file with following example format\n            {\n                \"group_id\": \n                \"reuse_agent_model\":\n                ...\n\n                \"models_list\": [-1, \n                                {\"unique_seed\":0, \"model_type\": 'pdt', ...}, \n                                -1]\n            }\n        statedict_models: list with single available .pth file of trained neural net\n        \"\"\"", "\n", "\n", "# Only available model kept at agent group index", "\n", "agent_model_dict", "=", "info_file", "[", "\"models_list\"", "]", "[", "self", ".", "group_id", "]", "\n", "\n", "statedict", "=", "statedict_models", "[", "self", ".", "group_id", "]", "\n", "self", ".", "agent_model", "=", "self", ".", "create_agent_model", "(", "agent_model_dict", ",", "statedict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.set_socket_info": [[1787, 1797], ["file_handling.update_json_file", "str"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.update_json_file"], ["", "def", "set_socket_info", "(", "self", ",", "socket_info_list", ",", "path_agent_files", ")", ":", "\n", "        ", "\"\"\"Record IP address and port numbers to connect to central server only.\"\"\"", "\n", "\n", "# Example: [[(central_server_ip, port25),(central_server_ip, port26)], -1, -1]", "\n", "self", ".", "socket_info_list", "=", "socket_info_list", "\n", "\n", "# Update agent info json file (i.e. 'agent_info_files/agent1_info.txt')", "\n", "agent_info_filepath", "=", "path_agent_files", "+", "'/agent'", "+", "str", "(", "self", ".", "group_id", ")", "+", "'_info.txt'", "\n", "\n", "update_json_file", "(", "agent_info_filepath", ",", "key", "=", "'socket_info_list'", ",", "value", "=", "socket_info_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.connect_tcp_sockets": [[1798, 1842], ["network_functions.connect_socket_pairs", "print"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.connect_socket_pairs"], ["", "def", "connect_tcp_sockets", "(", "self", ",", "info_dict", ")", ":", "\n", "\n", "        ", "\"\"\"(Remote use) Setup pair of client-style sockets and connect them ...\n        ...to central server's sockets.\"\"\"", "\n", "\n", "# Set variables", "\n", "socket_info_list", "=", "info_dict", "[", "'socket_info_list'", "]", "\n", "cs_gid", "=", "info_dict", "[", "'central_server_group_id'", "]", "\n", "\n", "# Get socket info [(cs_ipaddr, port1), (cs_ipaddr, port2)] for central server", "\n", "central_server_socket_info", "=", "socket_info_list", "[", "cs_gid", "]", "\n", "\n", "# Central server sockets are server-style, other agents have client-style", "\n", "setup_function", "=", "setup_client_style_socket", "\n", "\n", "# Get connection info for each socket (IP addresses are the same)", "\n", "(", "ipaddr1", ",", "port1", ")", "=", "central_server_socket_info", "[", "0", "]", "# (cs_ipaddr, port1)", "\n", "(", "ipaddr2", ",", "port2", ")", "=", "central_server_socket_info", "[", "1", "]", "# (cs_ipaddr, port2)", "\n", "\n", "\"\"\" \n        From joint port numbers [(ip,port1), (ip, port2)], central server\n        will send over port1 and receive over port2. Other agents\n        send over port2 and receive over port1.\n\n        This is why thread labels designate thread1 to receive over port1\n        and thread2 to send over port2.\n        \"\"\"", "\n", "\n", "# Labels for each thread socket's function in the connection", "\n", "thread1_type", "=", "'receive'", "\n", "thread2_type", "=", "'send'", "\n", "\n", "# Prepare socket info tuples for function", "\n", "socket1_info_tuple", "=", "(", "ipaddr1", ",", "port1", ",", "thread1_type", ")", "\n", "socket2_info_tuple", "=", "(", "ipaddr2", ",", "port2", ",", "thread2_type", ")", "\n", "\n", "# Get prepared sockets as [send_socket, recv_socket]", "\n", "sockets_for_central_server", "=", "connect_socket_pairs", "(", "setup_function", ",", "\n", "socket1_info_tuple", ",", "socket2_info_tuple", ")", "\n", "\n", "# Update agent's sockets list (example format: [[send_sock,recv_sock],-1,-1] )", "\n", "self", ".", "sockets_list", "[", "cs_gid", "]", "=", "sockets_for_central_server", "\n", "\n", "print", "(", "\"\\nself.sockets_list: \"", ",", "self", ".", "sockets_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.local_interact": [[1843, 1863], ["multi_agent_systems.CentralizedSystemAgent.model_next_action", "multi_agent_systems.CentralizedSystemAgent.secrets_next_action"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.model_next_action", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.secrets_next_action"], ["", "def", "local_interact", "(", "self", ",", "t", ",", "prev_actions", ")", ":", "\n", "        ", "\"\"\"\n        Perform local interaction for this timestep.\n\n        1. Get next action(s)\n        2. Update shared secret(s) \n\n        Args: \n        t: current timestep in interaction process\n        prev_actions: sublist with group actions from previous timestep \n        \"\"\"", "\n", "\n", "# 1. Get next action from model, which also stores the (action,dist)", "\n", "own_action", "=", "self", ".", "model_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# 2. Update shared secret which also stores the dist", "\n", "self", ".", "secrets_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# Return just own action for this timestep", "\n", "return", "own_action", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.interact": [[1865, 1911], ["multi_agent_systems.CentralizedSystemAgent.model_next_action", "multi_agent_systems.CentralizedSystemAgent.secrets_next_action", "multi_agent_systems.CentralizedSystemAgent.broadcast_actions", "multi_agent_systems.CentralizedSystemAgent.check_receive_sockets", "range", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.model_next_action", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.secrets_next_action", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.broadcast_actions", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.check_receive_sockets"], ["", "def", "interact", "(", "self", ",", "t", ",", "prev_actions", ",", "network_protocol", ")", ":", "\n", "        ", "\"\"\"\n        Perform remote interaction for this timestep.\n\n        1. Get next action(s)\n        2. Update shared secret(s) \n        3. Transmits action(s)\n        4. Receive action(s).\n\n        Args: \n        t: current timestep in interaction process\n        prev_actions: sublist with group actions from previous timestep \n        \"\"\"", "\n", "\n", "# Define variables", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "\n", "# 1. Get next action from model, which also stores the (action,dist)", "\n", "own_action", "=", "self", ".", "model_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# 2. Update shared secret which also stores the dist", "\n", "self", ".", "secrets_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# 3. Transmit action to central server", "\n", "action_broadcast_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "action_broadcast_list", "[", "cs_gid", "]", "=", "own_action", "\n", "\n", "# example: [action_for_cs, -1, -1]", "\n", "self", ".", "broadcast_actions", "(", "action_broadcast_list", ",", "t", ",", "network_protocol", ")", "\n", "\n", "# 4. Collect received action from central server for this timestep", "\n", "\n", "# blocking call: collect from receive sockets and store in self", "\n", "self", ".", "check_receive_sockets", "(", "t", ")", "\n", "\n", "# example received_actions_list: [[-1,...,-1], -1, -1]", "\n", "cs_action", "=", "self", ".", "received_actions_list", "[", "cs_gid", "]", "[", "t", "]", "\n", "\n", "# Assemble interaction history for this timestep", "\n", "group_actions_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "\n", "group_actions_list", "[", "self", ".", "group_id", "]", "=", "own_action", "\n", "group_actions_list", "[", "cs_gid", "]", "=", "cs_action", "\n", "\n", "# Return interaction history for this timestep", "\n", "return", "group_actions_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.model_next_action": [[1912, 1950], ["multi_agent_systems.CentralizedSystemAgent.agent_model.act", "multi_agent_systems.CentralizedSystemAgent.agent_model.act", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act"], ["", "def", "model_next_action", "(", "self", ",", "t", ",", "group_prev_actions", ")", ":", "\n", "        ", "\"\"\"\n        Behavioral model provides and personally stores next action & dist.\n        \n        Args:\n        t: current timestep\n        group_prev_actions: group actions from previous timestep i.e. [cs_action, a1, -1]\n        \"\"\"", "\n", "# Define variables", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "\n", "if", "self", ".", "agent_model", ".", "_type", "==", "'pdt'", ":", "\n", "\n", "# PDTAgent conditions on most recent other agent action", "\n", "            ", "if", "t", "==", "0", ":", "\n", "                ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "                ", "inputs", "=", "[", "group_prev_actions", "[", "cs_gid", "]", "]", "\n", "\n", "# Agent model stores then provides action,dist", "\n", "", "(", "action", ",", "dist", ")", "=", "self", ".", "agent_model", ".", "act", "(", "t", ",", "inputs", ")", "\n", "\n", "", "elif", "self", ".", "agent_model", ".", "_type", "==", "'neuralnet'", ":", "\n", "\n", "# Neuralnets conditions on: [server_i, client_i]", "\n", "            ", "if", "t", "==", "0", ":", "\n", "                ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "                ", "inputs", "=", "[", "group_prev_actions", "[", "cs_gid", "]", "[", ":", "]", ",", "group_prev_actions", "[", "self", ".", "group_id", "]", "[", ":", "]", "]", "\n", "\n", "# Agent model stores then provides integer action, dist", "\n", "", "(", "logits", ",", "action", ")", "=", "self", ".", "agent_model", ".", "act", "(", "t", ",", "inputs", ",", "self", ".", "action_space_size", ")", "\n", "\n", "", "else", ":", "\n", "            ", "exit", "(", "\"Exiting: Agent model not of supported types.\"", ")", "\n", "\n", "# Return integer action", "\n", "", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.secrets_next_action": [[1951, 1992], ["multi_agent_systems.CentralizedSystemAgent.shared_secrets_list[].act", "multi_agent_systems.CentralizedSystemAgent.shared_secrets_list[].act", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act"], ["", "def", "secrets_next_action", "(", "self", ",", "t", ",", "group_prev_actions", ")", ":", "\n", "        ", "\"\"\"\n        Have shared secrets update with next action and dist.\n        Only the dists are significant for later key computation.\n\n        Args:\n        t: current timestep\n        group_prev_actions: group actions from previous timestep i.e. [cs_action, a1, -1]\n        \"\"\"", "\n", "\n", "# Define variables", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "\n", "if", "self", ".", "shared_secrets_list", "[", "cs_gid", "]", ".", "_type", "==", "'pdt'", ":", "\n", "\n", "# PDTAgent conditions on most recent other agent action", "\n", "            ", "if", "t", "==", "0", ":", "\n", "                ", "inputs", "=", "[", "]", "\n", "", "else", ":", "# provide central server secret own client action as input", "\n", "                ", "inputs", "=", "[", "group_prev_actions", "[", "self", ".", "group_id", "]", "]", "\n", "\n", "# Secret model stores own dist,action", "\n", "", "(", "_", ",", "_", ")", "=", "self", ".", "shared_secrets_list", "[", "cs_gid", "]", ".", "act", "(", "t", ",", "inputs", ")", "\n", "\n", "", "elif", "self", ".", "shared_secrets_list", "[", "cs_gid", "]", ".", "_type", "==", "'neuralnet'", ":", "\n", "\n", "            ", "\"\"\"\n            Neuralnet conditions on: [server_i, client_i], not on own actions.\n            The shared secret model just needs to self-store expected dists for\n            ...later key computation. Its action output is not required.\n            \"\"\"", "\n", "if", "t", "==", "0", ":", "\n", "                ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "                ", "inputs", "=", "[", "group_prev_actions", "[", "cs_gid", "]", ",", "group_prev_actions", "[", "self", ".", "group_id", "]", "]", "\n", "\n", "# Secret model stores own action, dist", "\n", "", "(", "_", ",", "_", ")", "=", "self", ".", "shared_secrets_list", "[", "cs_gid", "]", ".", "act", "(", "t", ",", "inputs", ",", "self", ".", "action_space_size", ")", "\n", "\n", "", "else", ":", "\n", "            ", "exit", "(", "\"Exiting: Agent model not of supported types.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.broadcast_actions": [[1994, 2012], ["network_functions.send_actions_over_sockets"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.send_actions_over_sockets"], ["", "", "def", "broadcast_actions", "(", "self", ",", "actions_for_group", ",", "t", ",", "network_protocol", ")", ":", "\n", "        ", "\"\"\"\n        Send own selected action to central server at this timestep in interaction.\n\n        Args:\n        actions_for_group: list of own selected actions at this timestep in interaction.\n                          i.e. [action_for_cs, -1, -1]\n        t: current timestep in remote interaction process.\n        \"\"\"", "\n", "\n", "# Get send socket for central server from tuple: (send_sock, recv_sock)", "\n", "send_sock", "=", "self", ".", "sockets_list", "[", "self", ".", "central_server_group_id", "]", "[", "0", "]", "\n", "\n", "# Get action for central server", "\n", "action", "=", "actions_for_group", "[", "self", ".", "central_server_group_id", "]", "\n", "\n", "# Send action to central server", "\n", "send_actions_over_sockets", "(", "[", "send_sock", "]", ",", "[", "action", "]", ",", "t", ",", "network_protocol", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.check_receive_sockets": [[2013, 2047], ["network_functions.receive_action_from_socket", "str", "msg_list_current_timestep.count", "int"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.receive_action_from_socket"], ["", "def", "check_receive_sockets", "(", "self", ",", "t", ")", ":", "\n", "        ", "\"\"\"\n        Collect received actions from other agents during remote interaction.\n        Update self.received_actions_list with all received actions.\n        \"\"\"", "\n", "#print(\"\\nInside check_receive_sockets!\")", "\n", "\n", "# Define variables", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "\n", "# Get receive socket for central server from tuple: (send_sock, recv_sock)", "\n", "receive_sock", "=", "self", ".", "sockets_list", "[", "self", ".", "central_server_group_id", "]", "[", "1", "]", "\n", "\n", "# Place blocking call in script until action appears at recv socket", "\n", "(", "msg_list", ",", "msg_list_tuples", ")", "=", "receive_action_from_socket", "(", "receive_sock", ")", "\n", "\n", "# Example msg_list: ['3F_t0_C', '2F_t1_C'] if more than one message received", "\n", "# Example time-ordered msg_list_tuples: [(3,0), 2,1]", "\n", "\n", "# Ensure only a single msg in the list is for this current timestep", "\n", "current_time_str", "=", "'t'", "+", "str", "(", "t", ")", "# i.e. 't3' ", "\n", "msg_list_current_timestep", "=", "[", "current_time_str", "in", "x", "for", "x", "in", "msg_list", "]", "\n", "\n", "assert", "msg_list_current_timestep", ".", "count", "(", "True", ")", "==", "1", ",", "\"Only one msg should have current time!\"", "\n", "\n", "# Place in central server sublist at the index for timestep ", "\n", "# Format: [cs_t1, cs_t2,...cd_T], -1, -1)", "\n", "\n", "for", "msg_tuple", "in", "msg_list_tuples", ":", "# i.e. [(3,0), (2,1)]", "\n", "\n", "            ", "msg_action", "=", "msg_tuple", "[", "0", "]", "\n", "msg_time", "=", "msg_tuple", "[", "1", "]", "\n", "\n", "self", ".", "received_actions_list", "[", "cs_gid", "]", "[", "msg_time", "]", "=", "int", "(", "msg_action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.authenticate": [[2049, 2088], ["hyp_test.hypothesis_test_v1", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.hypothesis_test_v1"], ["", "", "def", "authenticate", "(", "self", ",", "group_history", ",", "max_history_len", ")", ":", "#, agent_info_dict):", "\n", "        ", "\"\"\"Authenticate the central server.\n\n        Args:\n        group_interaction_history: [[cs_0,a1_0,-1], [cs_1,a1_1,-1],...]\n        max_history_len: length of complete interaction history\n        \"\"\"", "\n", "\n", "# Define variables", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "\n", "# Run authentication test", "\n", "if", "self", ".", "auth_method", "==", "'hypothesis_test'", ":", "\n", "\n", "            ", "alpha", "=", "self", ".", "alpha", "#agent_info_dict['alpha']", "\n", "\n", "# Get action of unknown agent from group history", "\n", "unknown_agent_actions", "=", "[", "x", "[", "cs_gid", "]", "for", "x", "in", "group_history", "]", "\n", "\n", "# Get dists of shared secret for central server", "\n", "secret_history", "=", "self", ".", "shared_secrets_list", "[", "cs_gid", "]", ".", "_interaction_history", "\n", "# Example secret_history: [(action,dist), (action,dist),...]", "\n", "\n", "known_agent_dists", "=", "[", "x", "[", "1", "]", "for", "x", "in", "secret_history", "]", "\n", "\n", "# Get pvalues from hypothesis test", "\n", "(", "pvalue_reg", ",", "pvalue_ratio", ")", "=", "hypothesis_test_v1", "(", "\n", "unknown_agent_actions", ",", "\n", "known_agent_dists", ",", "\n", "update_times", "=", "[", "max_history_len", "-", "1", "]", ",", "\n", "num_actions", "=", "self", ".", "action_space_size", ")", "\n", "# Determine authentication success", "\n", "result", "=", "True", "if", "pvalue_ratio", ">=", "alpha", "else", "False", "\n", "self", ".", "auth_results", "[", "cs_gid", "]", "=", "result", "\n", "\n", "", "elif", "self", ".", "auth_method", "==", "'classifier'", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "exit", "(", "\"Exiting: Specified authentication method not supported.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.create_mutual_key": [[2089, 2127], ["zip", "zip", "key_gen.session_key_v1", "own_history.append", "cs_history.append"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.session_key_v1"], ["", "", "def", "create_mutual_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Create mutual session key with central server.\"\"\"", "\n", "\n", "# Define variables", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "\n", "# Collect own history", "\n", "own_history_actions", "=", "[", "x", "[", "self", ".", "group_id", "]", "for", "x", "in", "self", ".", "group_interaction_history", "]", "\n", "# example group_interaction_history: [[cs_action, a1_action, -1], ...]", "\n", "\n", "own_history_dists", "=", "[", "x", "[", "1", "]", "for", "x", "in", "self", ".", "agent_model", ".", "_interaction_history", "]", "\n", "\n", "# Assemble own history as [(action, dist),...]", "\n", "own_history", "=", "[", "]", "\n", "for", "(", "action", ",", "dist", ")", "in", "zip", "(", "own_history_actions", ",", "own_history_dists", ")", ":", "\n", "            ", "own_history", ".", "append", "(", "(", "action", ",", "dist", ")", ")", "\n", "\n", "# Collect history for central server", "\n", "", "cs_history_actions", "=", "[", "x", "[", "cs_gid", "]", "for", "x", "in", "self", ".", "group_interaction_history", "]", "\n", "\n", "cs_history_dists", "=", "[", "x", "[", "1", "]", "for", "x", "in", "self", ".", "shared_secrets_list", "[", "cs_gid", "]", ".", "_interaction_history", "]", "\n", "\n", "# Assemble central server history as [(action,dist),...]", "\n", "cs_history", "=", "[", "]", "\n", "for", "(", "action", ",", "dist", ")", "in", "zip", "(", "cs_history_actions", ",", "cs_history_dists", ")", ":", "\n", "            ", "cs_history", ".", "append", "(", "(", "action", ",", "dist", ")", ")", "\n", "\n", "# Assemble histories in order of group ID", "\n", "", "assert", "self", ".", "group_id", ">", "self", ".", "central_server_group_id", ",", "\"Group ID < CS ID!\"", "\n", "\n", "input_histories_list", "=", "[", "cs_history", ",", "own_history", "]", "\n", "\n", "# Create mutual key", "\n", "mutual_key", "=", "session_key_v1", "(", "input_histories_list", ")", "\n", "#print(\"\\nmutual_key: \", mutual_key)", "\n", "\n", "# Return mutual key", "\n", "return", "mutual_key", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.receive_group_key": [[2128, 2148], ["network_functions.receive_from_socket"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.receive_from_socket"], ["", "def", "receive_group_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Collect encrypted group key sent by central server.\n\n        Return encrypted (by mutual key) group key as type str.\n        \"\"\"", "\n", "\n", "# Define variables", "\n", "cs_gid", "=", "self", ".", "central_server_group_id", "\n", "\n", "# Get recv socket for central server ", "\n", "recv_sock", "=", "self", ".", "sockets_list", "[", "cs_gid", "]", "[", "1", "]", "\n", "# example sockets_list[cs_gid]: (send_sock, recv_sock)", "\n", "\n", "# Block until socket receives, then collect as string", "\n", "group_key_encr", "=", "receive_from_socket", "(", "recv_sock", ")", "\n", "#print(\"\\ngroup_key_encr: \", group_key_encr)", "\n", "\n", "# Return encrypted group key", "\n", "return", "group_key_encr", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.decrypt_group_key": [[2149, 2170], ["key_gen.pbkd", "key_gen.decrypt", "type", "group_key_encr.encode.encode.encode", "str"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.pbkd", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.decrypt"], ["", "def", "decrypt_group_key", "(", "self", ",", "group_key_encr", ")", ":", "\n", "        ", "\"\"\"\n        Decrypt group key using mutual key.\n\n        Args: \n        group_key_encr: group key of type str\n                        Note: group key was encrypted by mutual key\n        \"\"\"", "\n", "\n", "# Convert to type bytes as required by Fernet suite", "\n", "if", "type", "(", "group_key_encr", ")", "!=", "bytes", ":", "\n", "            ", "group_key_encr", "=", "group_key_encr", ".", "encode", "(", ")", "\n", "\n", "# Derive cipher key from mutual key (salt is group id)", "\n", "", "cipher_key", "=", "pbkd", "(", "password", "=", "str", "(", "self", ".", "mutual_key", ")", ",", "salt", "=", "self", ".", "group_id", ")", "\n", "\n", "# Build ciphersuite from cipher key and decrypt group key", "\n", "group_key_decr", "=", "decrypt", "(", "cipher_key", ",", "ciphertext", "=", "group_key_encr", ")", "\n", "\n", "# Return decrypted group key", "\n", "return", "group_key_decr", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.local_setup_key": [[2171, 2178], ["multi_agent_systems.CentralizedSystemAgent.create_mutual_key", "multi_agent_systems.CentralizedSystemAgent.set_mutual_key"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.create_mutual_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.set_mutual_key"], ["", "def", "local_setup_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Create mutual key.\"\"\"", "\n", "\n", "# Create and set mutual key", "\n", "mutual_key", "=", "self", ".", "create_mutual_key", "(", ")", "\n", "\n", "self", ".", "set_mutual_key", "(", "mutual_key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.setup_key": [[2179, 2197], ["multi_agent_systems.CentralizedSystemAgent.create_mutual_key", "multi_agent_systems.CentralizedSystemAgent.set_mutual_key", "multi_agent_systems.CentralizedSystemAgent.receive_group_key", "multi_agent_systems.CentralizedSystemAgent.decrypt_group_key", "multi_agent_systems.CentralizedSystemAgent.set_group_key"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.create_mutual_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.set_mutual_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.receive_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.decrypt_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_key"], ["", "def", "setup_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Create mutual key (and receive group key from central server).\"\"\"", "\n", "\n", "# Create and set mutual key", "\n", "mutual_key", "=", "self", ".", "create_mutual_key", "(", ")", "\n", "self", ".", "set_mutual_key", "(", "mutual_key", ")", "\n", "\n", "# If other agents, receive and decrypt group key from server", "\n", "if", "self", ".", "group_size", ">", "2", ":", "\n", "\n", "# Block until group key received ", "\n", "            ", "group_key_encr", "=", "self", ".", "receive_group_key", "(", ")", "# type str", "\n", "\n", "# Decrypt group key with mutual key", "\n", "group_key", "=", "self", ".", "decrypt_group_key", "(", "group_key_encr", ")", "# type str", "\n", "\n", "# Set group key", "\n", "self", ".", "set_group_key", "(", "group_key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.print_agent_model": [[2198, 2201], ["print"], "methods", ["None"], ["", "", "def", "print_agent_model", "(", "self", ")", ":", "\n", "        ", "\"\"\"Print agent model.\"\"\"", "\n", "print", "(", "\"\\nPrinting agent model: \"", ",", "self", ".", "agent_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.CentralizedSystemAgent.print_model_history": [[2202, 2206], ["print", "print"], "methods", ["None"], ["", "def", "print_model_history", "(", "self", ")", ":", "\n", "        ", "\"\"\"Print history for behavioral model.\"\"\"", "\n", "print", "(", "\"\\nPrinting agent model history: \"", ")", "\n", "print", "(", "self", ".", "agent_model", ".", "_interaction_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.__init__": [[2211, 2233], ["multi_agent_systems.SystemAgent.__init__", "multi_agent_systems.DecentralizedSystemAgent.set_agent_model", "multi_agent_systems.DecentralizedSystemAgent.set_shared_secrets", "multi_agent_systems.DecentralizedSystemAgent.set_received_actions_list"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.__init__", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_agent_model", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.set_shared_secrets", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_received_actions_list"], ["def", "__init__", "(", "self", ",", "info_dict", ",", "secrets_info_dict", ",", "statedict_models", ",", "statedict_secrets", ",", "\n", "max_interaction_length", ")", ":", "\n", "        ", "\"\"\"Create agent.\"\"\"", "\n", "\n", "# Use inherited constructor", "\n", "super", "(", "DecentralizedSystemAgent", ",", "self", ")", ".", "__init__", "(", "info_dict", ")", "\n", "\n", "# Set new variables", "\n", "self", ".", "group_interaction_history", "=", "-", "1", "\n", "\n", "if", "info_dict", "[", "'auth_method'", "]", "==", "'hypothesis_test'", ":", "\n", "            ", "self", ".", "alpha", "=", "info_dict", "[", "'alpha'", "]", "\n", "\n", "# Set agent model", "\n", "", "self", ".", "set_agent_model", "(", "info_dict", ",", "statedict_models", ")", "\n", "\n", "# Set shared secrets using inherited method", "\n", "self", ".", "set_shared_secrets", "(", "secrets_info_dict", ",", "statedict_secrets", ")", "\n", "\n", "# Set received actions list as [-1, [-1,..,-1], [-1,..,-1]] if a0", "\n", "# Each sublist is sized interaction len, to be filled during interaction", "\n", "self", ".", "set_received_actions_list", "(", "self", ".", "group_size", ",", "max_interaction_length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_interaction_history": [[2234, 2249], ["None"], "methods", ["None"], ["", "def", "set_group_interaction_history", "(", "self", ",", "history", ")", ":", "\n", "        ", "\"\"\"\n        Set group interaction history.\n\n        Args:\n        history: list of sublists for each timestep in interaction\n        \n        Format for agent id=0: \n            [\n                [a0_action, a1_action, a2_action],\n                [a0_action, a1_action, a2_action],\n                ...\n            ]\n        \"\"\"", "\n", "self", ".", "group_interaction_history", "=", "history", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_received_actions_list": [[2250, 2269], ["range", "range", "range"], "methods", ["None"], ["", "def", "set_received_actions_list", "(", "self", ",", "group_size", ",", "max_interaction_length", ")", ":", "\n", "        ", "\"\"\"\n        Set received actions list by max interaction length.\n        Format of list if a0: [-1, [-1,...,-1], [-1,...,-1]]\n        \"\"\"", "\n", "\n", "# Define variables", "\n", "received_actions_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "group_size", ")", "]", "\n", "\n", "# Create set-length sublist for other agents", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "", "received_actions_list", "[", "l", "]", "=", "[", "-", "1", "for", "_", "in", "range", "(", "max_interaction_length", ")", "]", "\n", "\n", "# Set for self", "\n", "", "self", ".", "received_actions_list", "=", "received_actions_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_agent_model": [[2271, 2293], ["multi_agent_systems.DecentralizedSystemAgent.create_agent_model"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.SystemAgent.create_agent_model"], ["", "def", "set_agent_model", "(", "self", ",", "info_file", ",", "statedict_models", ")", ":", "\n", "        ", "\"\"\"System agent in decentralized setting only uses single model.\n\n        Args:\n        info_file: json file with following example format\n            {\n                \"group_id\": \n                \"reuse_agent_model\":\n                ...\n\n                \"models_list\": [{\"unique_seed\":0, \"model_type\": 'pdt', ...}, \n                                -1, \n                                -1]\n            }\n        statedict_models: list with single available .pth file of trained neural net\n        \"\"\"", "\n", "\n", "# Only available model kept at agent group index", "\n", "agent_model_dict", "=", "info_file", "[", "\"models_list\"", "]", "[", "self", ".", "group_id", "]", "\n", "\n", "statedict", "=", "statedict_models", "[", "self", ".", "group_id", "]", "\n", "self", ".", "agent_model", "=", "self", ".", "create_agent_model", "(", "agent_model_dict", ",", "statedict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_socket_info": [[2294, 2304], ["file_handling.update_json_file", "str"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.update_json_file"], ["", "def", "set_socket_info", "(", "self", ",", "socket_info_list", ",", "path_agent_files", ")", ":", "\n", "        ", "\"\"\"Record IP address and port numbers to connect to other agents.\"\"\"", "\n", "\n", "# Example: [-1, [(a1_ip, port26), (a1_ip, port27)], [(a2_ip, port35), (a2_ip, port36)] ]", "\n", "self", ".", "socket_info_list", "=", "socket_info_list", "\n", "\n", "# Update agent info json file (i.e. 'agent_info_files/agent0_info.txt')", "\n", "agent_info_filepath", "=", "path_agent_files", "+", "'/agent'", "+", "str", "(", "self", ".", "group_id", ")", "+", "'_info.txt'", "\n", "\n", "update_json_file", "(", "agent_info_filepath", ",", "key", "=", "'socket_info_list'", ",", "value", "=", "socket_info_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.connect_tcp_sockets": [[2305, 2377], ["range", "network_functions.connect_socket_pairs", "print"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.connect_socket_pairs"], ["", "def", "connect_tcp_sockets", "(", "self", ",", "info_dict", ")", ":", "\n", "        ", "\"\"\"\n        (Remote use) Setup pair of sockets for all other agents...\n        then connect them to remote sockets.\n        \"\"\"", "\n", "\n", "# Format: [-1, [(a1_ip,port26),(a1_ip,port27)], [(a2_ip,port35),(a2_ip,port36)]]", "\n", "socket_info_list", "=", "info_dict", "[", "'socket_info_list'", "]", "\n", "\n", "# For each agent in group, connect my sockets to theirs", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Skip myself", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# If own group_id < this other group_id, use server-style sockets", "\n", "", "if", "self", ".", "group_id", "<", "l", ":", "\n", "                ", "setup_function", "=", "setup_server_style_socket", "\n", "", "else", ":", "\n", "                ", "setup_function", "=", "setup_client_style_socket", "\n", "\n", "# Get connection info for each socket (IP addresses are the same)", "\n", "", "(", "ipaddr1", ",", "port1", ")", "=", "socket_info_list", "[", "l", "]", "[", "0", "]", "# (a1_ipaddr, port1)", "\n", "(", "ipaddr2", ",", "port2", ")", "=", "socket_info_list", "[", "l", "]", "[", "1", "]", "# (a1_ipaddr, port2)", "\n", "\n", "\"\"\"\n            From joint port numbers [(ip,port1), (ip, port2)], agent with\n            lower group_id will send over port1 and receive over port2. \n            Other agent of higher group_id will send over port2 and \n            receive over port1. \n\n            This is why thread labels may designate thread1 to either\n            send or receive over port1 and thread2 to either \n            send or receive over port2, depending on agents' group_id.\n            \n            Example for group with agents [a0,a1,a2]:\n\n              | a0              | a1                | a2\n             -------------------------------------------------------\n            a0| x               | send over port1   | send over port1\n              |                 | recv over port2   | recv over port2\n             -------------------------------------------------------\n            a1| recv over port1 | x                 | send over port1\n              | send over port2 |                   | recv over port2\n             -------------------------------------------------------\n            a2| recv over port1 | recv over port1   | x\n              | send over port2 | send over port2   | \n            \n            \"\"\"", "\n", "\n", "# Labels for each thread socket's function in the connection", "\n", "if", "self", ".", "group_id", "<", "l", ":", "\n", "                ", "thread1_type", "=", "'send'", "\n", "thread2_type", "=", "'receive'", "\n", "", "else", ":", "\n", "                ", "thread1_type", "=", "'receive'", "\n", "thread2_type", "=", "'send'", "\n", "\n", "# Prepare socket info tuples for function", "\n", "", "socket1_info_tuple", "=", "(", "ipaddr1", ",", "port1", ",", "thread1_type", ")", "\n", "socket2_info_tuple", "=", "(", "ipaddr2", ",", "port2", ",", "thread2_type", ")", "\n", "\n", "# Get prepared sockets as [send_socket, recv_socket]", "\n", "sockets_for_agent", "=", "connect_socket_pairs", "(", "setup_function", ",", "\n", "socket1_info_tuple", ",", "socket2_info_tuple", ")", "\n", "\n", "# Update sockets list ", "\n", "# Example format: [-1,[send_sock,recv_sock],[send_sock,recv_sock]])", "\n", "self", ".", "sockets_list", "[", "l", "]", "=", "sockets_for_agent", "\n", "\n", "print", "(", "\"\\nself.sockets_list: \"", ",", "self", ".", "sockets_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.local_interact": [[2378, 2399], ["multi_agent_systems.DecentralizedSystemAgent.model_next_action", "multi_agent_systems.DecentralizedSystemAgent.secrets_next_action"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.model_next_action", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.secrets_next_action"], ["", "", "def", "local_interact", "(", "self", ",", "t", ",", "prev_actions", ")", ":", "\n", "        ", "\"\"\"\n        Perform local interaction for this timestep.\n\n        1. Get next action(s)\n        2. Update shared secret(s) \n\n        Args: \n        t: current timestep in interaction process\n        prev_actions: sublist with group actions from previous timestep \n                    i.e. [a0_action, a1_action, a2_action]\n        \"\"\"", "\n", "\n", "# 1. Get next action, which model stores itself", "\n", "own_action", "=", "self", ".", "model_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# 2. Update shared secrets, which will store their dists", "\n", "self", ".", "secrets_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# Return just own action for this timestep", "\n", "return", "own_action", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.interact": [[2400, 2462], ["multi_agent_systems.DecentralizedSystemAgent.model_next_action", "multi_agent_systems.DecentralizedSystemAgent.secrets_next_action", "multi_agent_systems.DecentralizedSystemAgent.broadcast_actions", "multi_agent_systems.DecentralizedSystemAgent.check_receive_sockets", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.model_next_action", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.secrets_next_action", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.broadcast_actions", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.check_receive_sockets"], ["", "def", "interact", "(", "self", ",", "t", ",", "prev_actions", ",", "network_protocol", ")", ":", "\n", "        ", "\"\"\"\n        Perform remote interaction for this timestep.\n\n        1. Get next action(s)\n        2. Update shared secret(s) \n        3. Transmits action(s)\n        4. Receive action(s).\n\n        Args: \n        t: current timestep in interaction process\n        prev_actions: sublist with group actions from previous timestep \n                    i.e. [a0_action, a1_action, a2_action]\n        \"\"\"", "\n", "#print(\"\\nInside interact() with prev_actions: \", prev_actions)", "\n", "\n", "# 1. Get next action, which model stores itself", "\n", "own_action", "=", "self", ".", "model_next_action", "(", "t", ",", "prev_actions", ")", "\n", "#print(\"\\nown_action: \", own_action)", "\n", "\n", "# 2. Update shared secrets, which will store their dists", "\n", "self", ".", "secrets_next_action", "(", "t", ",", "prev_actions", ")", "\n", "\n", "# 3. Broadcast the same action to all other agents in group", "\n", "action_broadcast_list", "=", "[", "own_action", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "action_broadcast_list", "[", "self", ".", "group_id", "]", "=", "-", "1", "\n", "\n", "# example: [-1, own_action, own_action]", "\n", "\n", "self", ".", "broadcast_actions", "(", "action_broadcast_list", ",", "t", ",", "network_protocol", ")", "\n", "\n", "# 4. Collect received actions from receive sockets and store in self", "\n", "\n", "# blocking call: wait until all expected actions are received", "\n", "self", ".", "check_receive_sockets", "(", "t", ")", "\n", "\n", "# example of self.received_actions_list: [-1, [-1,..,-1], [-1,..,-1]]", "\n", "\n", "# collect received actions from self", "\n", "\n", "#print(\"\\nBuilding group_actions_list\")", "\n", "group_actions_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "self", ".", "group_size", ")", "]", "\n", "group_actions_list", "[", "self", ".", "group_id", "]", "=", "own_action", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "", "received_actions_sublist", "=", "self", ".", "received_actions_list", "[", "l", "]", "\n", "\n", "# get action from other agent at current timestep", "\n", "group_actions_list", "[", "l", "]", "=", "received_actions_sublist", "[", "t", "]", "\n", "\n", "", "\"\"\"\n        example of group_actions_list (group actions at this timestep): \n\n        [ a0_action, a1_action, a2_action]\n        \"\"\"", "\n", "#print(\"\\ngroup_actions_list: \", group_actions_list)", "\n", "\n", "# return group interaction history for this timestep", "\n", "return", "group_actions_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.model_next_action": [[2463, 2509], ["multi_agent_systems.DecentralizedSystemAgent.agent_model.act", "group_prev_actions_copy.pop", "multi_agent_systems.DecentralizedSystemAgent.agent_model.act", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act"], ["", "def", "model_next_action", "(", "self", ",", "t", ",", "group_prev_actions", ")", ":", "\n", "        ", "\"\"\"\n        Behavioral model provides and personally stores next action & dist.\n        \n        Args:\n        t: current timestep\n        group_prev_actions: group actions from previous timestep \n                            i.e. [a0_action, a1_action, a2_action]\n        \"\"\"", "\n", "#print(\"\\nInside model_next_action with:\")", "\n", "#print(\"t: \", t, \" and group_prev_actions: \", group_prev_actions)", "\n", "\n", "if", "self", ".", "agent_model", ".", "_type", "==", "'multitree'", ":", "\n", "            ", "inputs", "=", "-", "1", "# initialize", "\n", "\n", "if", "t", "==", "0", ":", "\n", "                ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "# Condition on id-ordered actions of other agents", "\n", "                ", "group_prev_actions_copy", "=", "group_prev_actions", "[", ":", "]", "\n", "group_prev_actions_copy", ".", "pop", "(", "self", ".", "group_id", ")", "\n", "inputs", "=", "group_prev_actions_copy", "\n", "\n", "# Example if a0: [a1_action, a2_action]", "\n", "\n", "# Multitree act() will convert inputs to branching code", "\n", "#print(\"\\nCall agent_model.act() with inputs: \", inputs)", "\n", "", "(", "action", ",", "dist", ")", "=", "self", ".", "agent_model", ".", "act", "(", "t", ",", "inputs", ")", "\n", "\n", "", "elif", "self", ".", "agent_model", ".", "_type", "==", "'neuralnet'", ":", "\n", "\n", "            ", "if", "t", "==", "0", ":", "\n", "                ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "# Condition on entire interaction history from t-1", "\n", "                ", "inputs", "=", "group_prev_actions", "[", ":", "]", "\n", "# example if am a0: [a0_action, a1_action, a2_action]", "\n", "\n", "# Agent model stores then provides integer action, dist", "\n", "", "(", "logits", ",", "action", ")", "=", "self", ".", "agent_model", ".", "act", "(", "t", ",", "inputs", ",", "self", ".", "action_space_size", ")", "\n", "\n", "", "else", ":", "\n", "            ", "exit", "(", "\"Exiting: Agent model not of supported types.\"", ")", "\n", "\n", "# Return integer action", "\n", "", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.secrets_next_action": [[2510, 2555], ["range", "multi_agent_systems.DecentralizedSystemAgent.shared_secrets_list[].act", "list", "list.pop", "multi_agent_systems.DecentralizedSystemAgent.shared_secrets_list[].act", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act"], ["", "def", "secrets_next_action", "(", "self", ",", "t", ",", "group_prev_actions", ")", ":", "\n", "        ", "\"\"\"\n        Have shared secrets update with next action and dist.\n        Only the dists are significant for later key computation.\n\n        Args:\n        t: current timestep\n        group_prev_actions: group actions from previous timestep \n                            i.e. [a0_action, a1_action, a2_action]\n        \"\"\"", "\n", "#print(\"\\nInside secrets_next_action() with t: \", t, \" and group_prev_actions: \", group_prev_actions)", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "_type", "==", "'multitree'", ":", "\n", "\n", "                ", "if", "t", "==", "0", ":", "\n", "                    ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "# Secret model conditions on public actions of other agents", "\n", "                    ", "group_prev_actions_copy", "=", "list", "(", "group_prev_actions", "[", ":", "]", ")", "# shallow copy", "\n", "group_prev_actions_copy", ".", "pop", "(", "l", ")", "\n", "#print(\"group_prev_actions_copy with pop: \", group_prev_actions_copy)", "\n", "#print(\"original group_prev_actions: \", group_prev_actions)", "\n", "inputs", "=", "group_prev_actions_copy", "[", ":", "]", "\n", "# example: secret for a1 takes in [a0_action, a2_action]", "\n", "\n", "", "(", "_", ",", "_", ")", "=", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "act", "(", "t", ",", "inputs", ")", "\n", "\n", "", "elif", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "_type", "==", "'neuralnet'", ":", "\n", "\n", "                ", "if", "t", "==", "0", ":", "\n", "                    ", "inputs", "=", "[", "]", "\n", "", "else", ":", "\n", "# Condition on entire interaction history at time: t-1", "\n", "                    ", "inputs", "=", "group_prev_actions", "[", ":", "]", "\n", "\n", "# Secret model will self-store action and dist", "\n", "", "(", "_", ",", "_", ")", "=", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "act", "(", "t", ",", "inputs", ",", "self", ".", "action_space_size", ")", "\n", "\n", "", "else", ":", "\n", "                ", "exit", "(", "\"Exiting: shared secrets list type incorrectly specified.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.broadcast_actions": [[2556, 2585], ["range", "network_functions.send_actions_over_sockets", "send_sock_list.append", "actions_list.append"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.send_actions_over_sockets"], ["", "", "", "def", "broadcast_actions", "(", "self", ",", "actions_for_group", ",", "t", ",", "network_protocol", ")", ":", "\n", "        ", "\"\"\"\n        Send same selected action to other agents at this timestep in interaction.\n\n        Args:\n        actions_for_group: list of same single action at this timestep in interaction.\n                          i.e. for agent a0: [-1, action_for_others, action_for_others]\n        t: current timestep in remote interaction process.\n        \"\"\"", "\n", "\n", "# Get list of send sockets, and own actions for other agents", "\n", "send_sock_list", "=", "[", "]", "\n", "actions_list", "=", "[", "]", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Get send socket for agent from tuple: (send_sock, recv_sock)", "\n", "", "send_sock", "=", "self", ".", "sockets_list", "[", "l", "]", "[", "0", "]", "\n", "send_sock_list", ".", "append", "(", "send_sock", ")", "\n", "\n", "# Get own action for this agent", "\n", "action", "=", "actions_for_group", "[", "l", "]", "\n", "actions_list", ".", "append", "(", "action", ")", "\n", "\n", "# Send collected actions over collected send sockets", "\n", "", "send_actions_over_sockets", "(", "send_sock_list", ",", "actions_list", ",", "t", ",", "network_protocol", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.check_receive_sockets": [[2586, 2622], ["range", "network_functions.receive_action_from_socket", "str", "msg_list_current_timestep.count", "int"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.receive_action_from_socket"], ["", "def", "check_receive_sockets", "(", "self", ",", "t", ")", ":", "\n", "        ", "\"\"\"\n        Collect received actions from other agents during remote interaction.\n        Update self.received_actions_list with received action.\n        \"\"\"", "\n", "#print(\"\\nInside check_receive_sockets!\")", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                ", "continue", "\n", "\n", "# Get receive socket for central server from tuple: (send_sock, recv_sock)", "\n", "", "receive_sock", "=", "self", ".", "sockets_list", "[", "l", "]", "[", "1", "]", "\n", "\n", "# Place blocking call in script until action appears at recv socket", "\n", "(", "msg_list", ",", "msg_list_tuples", ")", "=", "receive_action_from_socket", "(", "receive_sock", ")", "\n", "\n", "# Example msg_list: ['3F_t0_C', '2F_t1_C'] if more than one message received", "\n", "# Example time-ordered msg_list_tuples: [(3,0), 2,1]", "\n", "\n", "# Ensure only a single msg in the list is for this current timestep", "\n", "current_time_str", "=", "'t'", "+", "str", "(", "t", ")", "# i.e. 't3' ", "\n", "msg_list_current_timestep", "=", "[", "current_time_str", "in", "x", "for", "x", "in", "msg_list", "]", "\n", "\n", "assert", "msg_list_current_timestep", ".", "count", "(", "True", ")", "==", "1", ",", "\"Only one msg should have current time!\"", "\n", "\n", "# Place in agent's sublist at the index for timestep ", "\n", "# Format if a0: [-1, [a1_t1, a1_t2,...,a1_T], [a2_t1, a2_t2,...,a2_T]]", "\n", "\n", "for", "msg_tuple", "in", "msg_list_tuples", ":", "# i.e. [(3,0), (2,1)]", "\n", "\n", "                ", "msg_action", "=", "msg_tuple", "[", "0", "]", "\n", "msg_time", "=", "msg_tuple", "[", "1", "]", "\n", "\n", "self", ".", "received_actions_list", "[", "l", "]", "[", "msg_time", "]", "=", "int", "(", "msg_action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.authenticate": [[2623, 2664], ["range", "hyp_test.hypothesis_test_v1", "exit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.hypothesis_test_v1"], ["", "", "", "def", "authenticate", "(", "self", ",", "group_history", ",", "max_history_len", ")", ":", "#, agent_info_dict):", "\n", "        ", "\"\"\"Authenticate other agents in the group.\n\n        Args:\n        group_history: [[a0_0,a1_0,a2_0], [a0_1,a1_1,a2_1],...]\n        max_history_len: length of complete interaction history\n        \"\"\"", "\n", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Run authentication test (same for all others)", "\n", "            ", "if", "self", ".", "auth_method", "==", "'hypothesis_test'", ":", "\n", "                ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "                    ", "continue", "\n", "\n", "# Define variables", "\n", "", "alpha", "=", "self", ".", "alpha", "#agent_info_dict['alpha']", "\n", "\n", "# Get action of unknown agent from group history", "\n", "unknown_agent_actions", "=", "[", "x", "[", "l", "]", "for", "x", "in", "group_history", "]", "\n", "\n", "# Get dists of shared secret for central server", "\n", "secret_history", "=", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "_interaction_history", "\n", "# Example cs_secret_history: [(action,dist), (action,dist),...]", "\n", "\n", "known_agent_dists", "=", "[", "x", "[", "1", "]", "for", "x", "in", "secret_history", "]", "\n", "\n", "# Get pvalues from hypothesis test", "\n", "(", "pvalue_reg", ",", "pvalue_ratio", ")", "=", "hypothesis_test_v1", "(", "\n", "unknown_agent_actions", ",", "\n", "known_agent_dists", ",", "\n", "update_times", "=", "[", "max_history_len", "-", "1", "]", ",", "\n", "num_actions", "=", "self", ".", "action_space_size", ")", "\n", "# Determine authentication success", "\n", "result", "=", "True", "if", "pvalue_ratio", ">=", "alpha", "else", "False", "\n", "self", ".", "auth_results", "[", "l", "]", "=", "result", "\n", "\n", "", "elif", "self", ".", "auth_method", "==", "'classifier'", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "exit", "(", "\"Exiting: Specified authentication method not supported.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.create_group_key": [[2665, 2700], ["range", "key_gen.session_key_v1", "zip", "input_histories_list.append", "agent_history.append"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.session_key_v1"], ["", "", "", "def", "create_group_key", "(", "self", ")", ":", "\n", "\n", "# Define variables", "\n", "        ", "input_histories_list", "=", "[", "]", "\n", "\n", "# Collect history for each agent in group (self included)", "\n", "for", "l", "in", "range", "(", "self", ".", "group_size", ")", ":", "\n", "\n", "# Collect own history as: [(action,dist), ...]", "\n", "            ", "if", "l", "==", "self", ".", "group_id", ":", "\n", "\n", "                ", "history_actions", "=", "[", "x", "[", "self", ".", "group_id", "]", "for", "x", "in", "self", ".", "group_interaction_history", "]", "\n", "\n", "history_dists", "=", "[", "x", "[", "1", "]", "for", "x", "in", "self", ".", "agent_model", ".", "_interaction_history", "]", "\n", "", "else", ":", "\n", "\n", "                ", "history_actions", "=", "[", "x", "[", "l", "]", "for", "x", "in", "self", ".", "group_interaction_history", "]", "\n", "\n", "history_dists", "=", "[", "x", "[", "1", "]", "for", "x", "in", "self", ".", "shared_secrets_list", "[", "l", "]", ".", "_interaction_history", "]", "\n", "\n", "# Organize history as [(action,dist),...]", "\n", "", "agent_history", "=", "[", "]", "\n", "\n", "for", "(", "action", ",", "dist", ")", "in", "zip", "(", "history_actions", ",", "history_dists", ")", ":", "\n", "                ", "agent_history", ".", "append", "(", "(", "action", ",", "dist", ")", ")", "\n", "\n", "# Include in list of agent histories", "\n", "", "input_histories_list", ".", "append", "(", "agent_history", ")", "\n", "\n", "# Create group key (ordered by agent ID)", "\n", "", "group_key", "=", "session_key_v1", "(", "input_histories_list", ")", "\n", "#print(\"\\ngroup_key: \", group_key)", "\n", "\n", "# Return group key", "\n", "return", "group_key", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_key": [[2701, 2704], ["None"], "methods", ["None"], ["", "def", "set_group_key", "(", "self", ",", "group_key", ")", ":", "\n", "        ", "\"\"\"Set member variables group_key.\"\"\"", "\n", "self", ".", "group_key", "=", "group_key", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.setup_key": [[2705, 2713], ["multi_agent_systems.DecentralizedSystemAgent.create_group_key", "multi_agent_systems.DecentralizedSystemAgent.set_group_key"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.create_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_key"], ["", "def", "setup_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Create and set group key for encryption/decryption.\"\"\"", "\n", "\n", "# Create group key", "\n", "group_key", "=", "self", ".", "create_group_key", "(", ")", "\n", "\n", "# Set group key", "\n", "self", ".", "set_group_key", "(", "group_key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.local_setup_key": [[2714, 2722], ["multi_agent_systems.DecentralizedSystemAgent.create_group_key", "multi_agent_systems.DecentralizedSystemAgent.set_group_key"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.create_group_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.set_group_key"], ["", "def", "local_setup_key", "(", "self", ")", ":", "\n", "        ", "\"\"\"Create and set group key for encryption/decryption.\"\"\"", "\n", "\n", "# Create group key", "\n", "group_key", "=", "self", ".", "create_group_key", "(", ")", "\n", "\n", "# Set group key", "\n", "self", ".", "set_group_key", "(", "group_key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.print_agent_model": [[2724, 2727], ["print"], "methods", ["None"], ["", "def", "print_agent_model", "(", "self", ")", ":", "\n", "        ", "\"\"\"Print agent model.\"\"\"", "\n", "print", "(", "\"\\nPrinting agent model: \"", ",", "self", ".", "agent_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystemAgent.print_model_history": [[2728, 2732], ["print", "print"], "methods", ["None"], ["", "def", "print_model_history", "(", "self", ")", ":", "\n", "        ", "\"\"\"Print history for behavioral model.\"\"\"", "\n", "print", "(", "\"\\nPrinting agent model history: \"", ")", "\n", "print", "(", "self", ".", "agent_model", ".", "_interaction_history", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.get_random_port_number": [[7, 13], ["random.randint"], "function", ["None"], ["def", "get_random_port_number", "(", "lowest_legal_port", ",", "highest_port_range", ")", ":", "\n", "\t", "\"\"\"\n\tGenerates a port number between lowest_legal_port (~1025) ...\n\tand lowest_legal_port + highest_port_range.\n\t\"\"\"", "\n", "return", "lowest_legal_port", "+", "randint", "(", "1", ",", "highest_port_range", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.setup_server_style_socket": [[15, 51], ["print", "open", "open.close", "socket.socket", "socket.socket.setsockopt", "socket.socket.accept", "print", "open", "open.close", "socket.socket.bind", "socket.socket.listen", "str", "str", "print", "open", "open.close", "print", "str", "str", "str", "threading.current_thread", "str", "str", "str"], "function", ["None"], ["", "def", "setup_server_style_socket", "(", "ip_addr", ",", "port_number", ")", ":", "\n", "\t", "\"\"\"Set up a server-style socket, and return when it has accepted a connecting client.\"\"\"", "\n", "print", "(", "\"\\nBeginning setup_server_style_socket()\"", ")", "\n", "\n", "f", "=", "open", "(", "\"Beginning_setup_server_style_socket()\"", "+", "str", "(", "(", "ip_addr", ",", "port_number", ")", ")", "+", "str", "(", "threading", ".", "current_thread", "(", ")", ".", "ident", ")", ",", "\"w+\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "# Create server-style socket", "\n", "s", "=", "socket", ".", "socket", "(", "socket", ".", "AF_INET", ",", "socket", ".", "SOCK_STREAM", ")", "\n", "s", ".", "setsockopt", "(", "socket", ".", "SOL_SOCKET", ",", "socket", ".", "SO_REUSEADDR", ",", "1", ")", "\n", "\n", "# Bind socket to provided port", "\n", "try", ":", "\n", "\t\t", "s", ".", "bind", "(", "(", "''", ",", "port_number", ")", ")", "# bound to empty IP string so it can listen and accept", "\n", "", "except", ":", "\n", "\t\t", "print", "(", "\"Couldn't bind to port: \"", ",", "port_number", ")", "\n", "f", "=", "open", "(", "\"COULDNT_BIND_TO_PORT_\"", "+", "str", "(", "port_number", ")", ",", "\"w+\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "# Listening mode - upto 5 connections can wait if server is busy", "\n", "", "try", ":", "\n", "\t\t", "s", ".", "listen", "(", "5", ")", "\n", "", "except", ":", "\n", "\t\t", "print", "(", "\"Couldn't listen\"", ")", "\n", "\n", "# Blocking call waits here until a client style socket connects", "\n", "", "server_sock_for_client", ",", "addr", "=", "s", ".", "accept", "(", ")", "\n", "\n", "# Record if success", "\n", "print_msg", "=", "\"Accepted as server from addr: \"", "+", "str", "(", "addr", ")", "+", "\" at port: \"", "+", "str", "(", "port_number", ")", "+", "\" with server-style socket: \"", "+", "str", "(", "server_sock_for_client", ")", "\n", "print", "(", "print_msg", ")", "\n", "\n", "f", "=", "open", "(", "\"Accepted_as_server_from_addr\"", "+", "str", "(", "addr", ")", "+", "\"_with_socket:\"", "+", "str", "(", "server_sock_for_client", ")", ",", "\"w+\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "return", "server_sock_for_client", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.setup_client_style_socket": [[52, 80], ["print", "open", "open.close", "socket.socket", "socket.socket.setsockopt", "socket.socket.connect_ex", "print", "open", "open.close", "print", "open", "open.close", "str", "str", "str", "str", "str", "str", "threading.current_thread", "str", "str", "str", "str"], "function", ["None"], ["", "def", "setup_client_style_socket", "(", "ip_addr", ",", "port_number", ")", ":", "\n", "\t", "\"\"\"Return a client-style socket once it connects to an already expecting server-style socket.\"\"\"", "\n", "print", "(", "\"\\nBeginning setup_client_style_socket()\"", ")", "\n", "\n", "f", "=", "open", "(", "\"Beginning_setup_client_style_socket()\"", "+", "str", "(", "(", "ip_addr", ",", "port_number", ")", ")", "+", "str", "(", "threading", ".", "current_thread", "(", ")", ".", "ident", ")", ",", "\"w+\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "# Create client-style socket", "\n", "client_sock_for_server", "=", "socket", ".", "socket", "(", "socket", ".", "AF_INET", ",", "socket", ".", "SOCK_STREAM", ")", "\n", "client_sock_for_server", ".", "setsockopt", "(", "socket", ".", "SOL_SOCKET", ",", "socket", ".", "SO_REUSEADDR", ",", "1", ")", "\n", "\n", "\n", "# Connect to already listening server-style socket of other agent on another machine", "\n", "\n", "conn_result", "=", "client_sock_for_server", ".", "connect_ex", "(", "(", "str", "(", "ip_addr", ")", ",", "port_number", ")", ")", "\n", "\n", "if", "conn_result", "==", "0", ":", "# this call requires server socket to be already listening to accept", "\n", "\t\t", "print_msg", "=", "\"Connected successfully as client to: \"", "+", "str", "(", "(", "ip_addr", ",", "port_number", ")", ")", "+", "\" with socket: \"", "+", "str", "(", "client_sock_for_server", ")", "\n", "print", "(", "print_msg", ")", "\n", "\n", "f", "=", "open", "(", "\"Connected_successfully_as_client_to_\"", "+", "str", "(", "ip_addr", ")", "+", "':'", "+", "str", "(", "port_number", ")", ",", "\"w+\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "\t\t", "print", "(", "\"Failed to connect as the client to: \"", ",", "(", "ip_addr", ",", "port_number", ")", ")", "\n", "f", "=", "open", "(", "\"Failed_to_connect_as_client_to_\"", "+", "str", "(", "ip_addr", ")", "+", "':'", "+", "str", "(", "port_number", ")", "+", "\"_conn_result_\"", "+", "str", "(", "conn_result", ")", ",", "\"w+\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "return", "client_sock_for_server", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.connect_socket_pairs": [[81, 158], ["queue.Queue", "threading.Thread", "threading.Thread", "threads_list.append", "threads_list.append", "range", "print", "q.put", "t.start", "queue.Queue.qsize", "threads_queue_items.append", "t.isAlive", "queue.Queue.get", "setup_function", "str"], "function", ["None"], ["", "def", "connect_socket_pairs", "(", "setup_function", ",", "socket1_info_tuple", ",", "socket2_info_tuple", ")", ":", "\n", "    ", "\"\"\"\n    (Multi-threaded) Set up and connect a pair of sockets to remote socket pair.\n\n    Args:\n    setup_function: either setup_server_style_socket() or \n                           setup_client_style_socket()\n    socket1_info_tuple: (ipaddr1, port1, thread_type) \n                        thread_type = 'send' or 'receive'                       \n    \"\"\"", "\n", "\n", "# Create queue to hold returned threads from threaded functions", "\n", "threads_queue", "=", "queue", ".", "Queue", "(", ")", "\n", "threads_list", "=", "[", "]", "\n", "num_threads", "=", "2", "\n", "\n", "# Create lambda function for threads to use with provided params", "\n", "lambda_func", "=", "lambda", "q", ",", "ipaddr", ",", "port", ",", "thread_type", ":", "q", ".", "put", "(", "\n", "(", "setup_function", "(", "ipaddr", ",", "port", ")", ",", "str", "(", "thread_type", ")", ")", ")", "\n", "\n", "# Get connection info for each socket", "\n", "(", "ipaddr1", ",", "port1", ",", "thread1_type", ")", "=", "socket1_info_tuple", "\n", "(", "ipaddr2", ",", "port2", ",", "thread2_type", ")", "=", "socket2_info_tuple", "\n", "\n", "# Create threads with agent's connection info", "\n", "thread1", "=", "threading", ".", "Thread", "(", "target", "=", "lambda_func", ",", "args", "=", "(", "\n", "threads_queue", ",", "\n", "ipaddr1", ",", "port1", ",", "\n", "thread1_type", ")", ")", "\n", "\n", "thread2", "=", "threading", ".", "Thread", "(", "target", "=", "lambda_func", ",", "args", "=", "(", "\n", "threads_queue", ",", "\n", "ipaddr2", ",", "port2", ",", "\n", "thread2_type", ")", ")", "\n", "# Add threads to threads list", "\n", "threads_list", ".", "append", "(", "thread1", ")", "\n", "threads_list", ".", "append", "(", "thread2", ")", "\n", "\n", "# Now release all threads so they run simultaneously", "\n", "for", "t", "in", "threads_list", ":", "\n", "        ", "t", ".", "start", "(", ")", "\n", "\n", "# Wait for all threads to finish", "\n", "", "while", "(", "1", ")", ":", "\n", "        ", "all_threads_finished", "=", "True", "\n", "\n", "for", "t", "in", "threads_list", ":", "\n", "            ", "if", "t", ".", "isAlive", "(", ")", ":", "\n", "                ", "all_threads_finished", "=", "False", "\n", "\n", "", "", "if", "all_threads_finished", "==", "True", ":", "\n", "            ", "break", "\n", "\n", "# Now ensure threads queue has received return values from all threads", "\n", "", "", "assert", "threads_queue", ".", "qsize", "(", ")", "==", "num_threads", ",", "\"Thread queue not full!\"", "\n", "\n", "# Collect return values from threads queue", "\n", "threads_queue_items", "=", "[", "]", "\n", "for", "item", "in", "range", "(", "num_threads", ")", ":", "\n", "        ", "threads_queue_items", ".", "append", "(", "threads_queue", ".", "get", "(", ")", ")", "\n", "\n", "# Print returned values", "\n", "", "print", "(", "\"\\nthreads_queue_items: \"", ",", "threads_queue_items", ")", "\n", "\n", "# Order sockets by socket function (by thread label)", "\n", "sockets_for_agent", "=", "[", "-", "1", ",", "-", "1", "]", "\n", "for", "item", "in", "threads_queue_items", ":", "\n", "        ", "(", "socket", ",", "thread_label", ")", "=", "(", "item", "[", "0", "]", ",", "item", "[", "1", "]", ")", "# i.e. (socket, 'receive')", "\n", "\n", "# By convention, socket info format is: [send_sock, receive_sock]", "\n", "if", "'send'", "in", "thread_label", ":", "\n", "            ", "sockets_for_agent", "[", "0", "]", "=", "socket", "\n", "", "else", ":", "\n", "            ", "sockets_for_agent", "[", "1", "]", "=", "socket", "\n", "\n", "# Return prepared socket pair", "\n", "", "", "return", "sockets_for_agent", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.receive_from_socket": [[159, 201], ["len", "recv_sock.recv().decode.find", "len", "recv_sock.recv().decode", "recv_sock.recv().decode.replace", "select.select", "first_msg.encode", "recv_sock.recv().decode", "recv_sock.recv", "recv_sock.recv"], "function", ["None"], ["", "def", "receive_from_socket", "(", "recv_sock", ")", ":", "\n", "\t", "\"\"\"\n\tPerform blocking call in script until msg arrives at receive socket.\n\tMessage convention format (with delimiter): 'msg_COMPLT'.\n\n\tReturn: message of type string (delimiter removed).\n\t\"\"\"", "\n", "\n", "# Define variables", "\n", "end_delim", "=", "'_COMPLT'", "\n", "end_delim_size", "=", "len", "(", "end_delim", ")", "\n", "\n", "# Wait until receive socket contains at least one message", "\n", "while", "(", "1", ")", ":", "\n", "\n", "# Blocking call until socket is read-ready", "\n", "\t\t", "socket_ready", "=", "select", ".", "select", "(", "[", "recv_sock", "]", ",", "[", "]", ",", "[", "]", ")", "\n", "\n", "if", "socket_ready", "[", "0", "]", ":", "\n", "\t\t\t", "peek_data", "=", "recv_sock", ".", "recv", "(", "1024", ",", "socket", ".", "MSG_PEEK", ")", ".", "decode", "(", ")", "\n", "\n", "# i.e. if '_COMPLT' found in peek data which is string", "\n", "if", "end_delim", "in", "peek_data", ":", "\n", "#print(\"\\nend delimiter: \", end_delim, \" found in peek_data: \", peek_data)", "\n", "\t\t\t\t", "break", "\n", "\n", "# Compute size of first message", "\n", "", "", "", "first_msg_end_index", "=", "peek_data", ".", "find", "(", "end_delim", ")", "# i.e. find '_COMPLT'", "\n", "first_msg", "=", "peek_data", "[", ":", "first_msg_end_index", "+", "end_delim_size", "]", "# i.e. 'msg_COMPLT'", "\n", "first_msg_size", "=", "len", "(", "first_msg", ".", "encode", "(", "'utf-8'", ")", ")", "\n", "#print(\"\\nfirst_msg: \", first_msg)", "\n", "\n", "# Remove only first available msg from socket buffer", "\n", "received_msg", "=", "recv_sock", ".", "recv", "(", "first_msg_size", ")", ".", "decode", "(", ")", "\n", "#print(\"\\nreceived_msg: \", received_msg, \" type: \", type(received_msg))", "\n", "\n", "# Remove delimiter from message", "\n", "msg", "=", "received_msg", ".", "replace", "(", "end_delim", ",", "''", ")", "# i.e. remove '_COMPLT'", "\n", "#print(\"\\nmsg without delimiter: \", msg)", "\n", "\n", "# Return message", "\n", "return", "msg", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.receive_action_from_socket": [[202, 252], ["recv_sock.recv().decode.find", "len", "recv_sock.recv().decode", "msg_list_tuples.sort", "select.select", "first_msg.encode", "network_functions.strip_msg", "recv_sock.recv().decode", "recv_sock.recv", "recv_sock.recv"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.strip_msg"], ["", "def", "receive_action_from_socket", "(", "recv_sock", ")", ":", "\n", "\t", "\"\"\"\n\tPerform blocking call in script until msg arrives at receive socket.\n\tReturn all received messages in socket buffer, ordered by msg timestep.\n\tMessage convention example: '3F_t0_C'\n\n\tReturn: list of time-ordered tuples: [(3,0), (2,1)]\n\t\t\tlist of unordered time-formatted msgs ['3F_t0_C', '2F_t1_C']\n\t\"\"\"", "\n", "#print(\"\\nInside receive_from_socket()!\")", "\n", "\n", "# Wait until receive socket contains at least one message", "\n", "while", "(", "1", ")", ":", "\n", "\n", "# Blocking call until socket is read-ready", "\n", "\t\t", "socket_ready", "=", "select", ".", "select", "(", "[", "recv_sock", "]", ",", "[", "]", ",", "[", "]", ")", "\n", "\n", "if", "socket_ready", "[", "0", "]", ":", "\n", "\t\t\t", "peek_data", "=", "recv_sock", ".", "recv", "(", "1024", ",", "socket", ".", "MSG_PEEK", ")", ".", "decode", "(", ")", "\n", "\n", "if", "'C'", "in", "peek_data", ":", "\n", "\t\t\t\t", "break", "\n", "\n", "", "", "", "msg_list", "=", "-", "1", "\n", "\n", "# Compute size of first message", "\n", "first_msg_end_index", "=", "peek_data", ".", "find", "(", "'C'", ")", "\n", "first_msg", "=", "peek_data", "[", ":", "first_msg_end_index", "+", "1", "]", "# i.e. '3F_t0_C'", "\n", "first_msg_size", "=", "len", "(", "first_msg", ".", "encode", "(", "'utf-8'", ")", ")", "\n", "#print(\"first_msg: \", first_msg)", "\n", "\n", "# Remove only first available msg from socket buffer", "\n", "received_msg", "=", "recv_sock", ".", "recv", "(", "first_msg_size", ")", ".", "decode", "(", ")", "\n", "#print(\"received_msg: \", received_msg)", "\n", "\n", "# Wrap single msg in list", "\n", "msg_list", "=", "[", "received_msg", "]", "\n", "\n", "# Convert each string msg to tuple: (msg_action, msg_time)", "\n", "msg_list_tuples", "=", "[", "strip_msg", "(", "x", ")", "for", "x", "in", "msg_list", "]", "\n", "\n", "# Example: [(3,0), (2,1)] for 3F,t0 then 2F,t1", "\n", "\n", "# Order received messages by timestep, the second value", "\n", "msg_list_tuples", ".", "sort", "(", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", "\n", "\n", "#print(\"\\nmsg_list: \", msg_list)", "\n", "#print(\"time-ordered msg_list_tuples: \", msg_list_tuples)", "\n", "\n", "return", "(", "msg_list", ",", "msg_list_tuples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.strip_msg": [[253, 274], ["msg.index", "int", "msg.index", "int", "msg.index"], "function", ["None"], ["", "def", "strip_msg", "(", "msg", ")", ":", "\n", "\t", "\"\"\"\n\tStrip integer action and timestep from received message.\n\n\tArgs:\n\tmsg: convention is i.e. '3F_t7_C' (action=3, timestep=7)\n\t\"\"\"", "\n", "#print(\"\\nInside strip_msg with: \", msg)", "\n", "\n", "# Collect timestep", "\n", "time_begin_index", "=", "msg", ".", "index", "(", "'t'", ")", "+", "1", "\n", "time_end_index", "=", "msg", ".", "index", "(", "'_C'", ")", "\n", "\n", "msg_timestep", "=", "int", "(", "msg", "[", "time_begin_index", ":", "time_end_index", "]", ")", "\n", "\n", "# Collect integer action", "\n", "action_end_index", "=", "msg", ".", "index", "(", "'F'", ")", "\n", "msg_action", "=", "int", "(", "msg", "[", ":", "action_end_index", "]", ")", "\n", "\n", "#print(\"\\nmsg_action: %d, msg_timestep: %d\" % (msg_action,msg_timestep))", "\n", "return", "(", "msg_action", ",", "msg_timestep", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.send_over_sockets": [[275, 308], ["zip", "threading.Thread", "threads_list.append", "t.start", "t.join", "str"], "function", ["None"], ["", "def", "send_over_sockets", "(", "send_sock_list", ",", "msg_list", ",", "network_protocol", ")", ":", "\n", "\t", "\"\"\"\n\t(Multi-threaded) Simultaneously send multiple messages by given sockets.\n\tMessages are formatted simply with '_COMPLT' delimiter: 'msg_COMPLT'.\n\n\tArgs:\n\tsend_sock_list: list of sockets by which msgs should be sent.\n\tmsg_list: list of strings, i.e. ['msg1', 'msg2', 'msg3']\n\t\"\"\"", "\n", "\n", "# Define variables", "\n", "threads_list", "=", "[", "]", "\n", "end_delim", "=", "'_COMPLT'", "\n", "\n", "# Build list of threads for all msgs", "\n", "for", "(", "send_sock", ",", "msg", ")", "in", "zip", "(", "send_sock_list", ",", "msg_list", ")", ":", "\n", "\n", "# Format message with action and time, i.e. 'msg_COMPLT'", "\n", "\t\t", "msg_formatted", "=", "str", "(", "msg", ")", "+", "end_delim", "\n", "\n", "# Build thread", "\n", "send_thread", "=", "threading", ".", "Thread", "(", "target", "=", "send_over_sock", ",", "\n", "args", "=", "(", "send_sock", ",", "msg_formatted", ",", "network_protocol", ")", ")", "\n", "\n", "threads_list", ".", "append", "(", "send_thread", ")", "\n", "\n", "# Start all threads so all sockets send simultaneously", "\n", "", "for", "t", "in", "threads_list", ":", "\n", "\t\t", "t", ".", "start", "(", ")", "\n", "\n", "# Wait for the threads to finish", "\n", "", "for", "t", "in", "threads_list", ":", "\n", "\t\t", "t", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.send_actions_over_sockets": [[310, 344], ["zip", "threading.Thread", "threads_list.append", "t.start", "t.join", "str", "str"], "function", ["None"], ["", "", "def", "send_actions_over_sockets", "(", "send_sock_list", ",", "msg_action_list", ",", "t", ",", "network_protocol", ")", ":", "\n", "\t", "\"\"\"\n\t(Multi-threaded) Simultaneously send multiple messages by given sockets.\n\tMessages are formatted as string with int action and time marker.\n\tFormatted message example: '3F_t0_C'\n\n\tArgs:\n\tsend_sock_list: list of sockets by which msgs should be sent.\n\tmsg_action_list: list of ints, i.e. [1,3,2,1]\n\tt: int, current timestep or time marker\n\tnetwork_protocol: 'tcp' or 'udp'\n\t\"\"\"", "\n", "\n", "threads_list", "=", "[", "]", "\n", "\n", "# Build list of threads for all msgs", "\n", "for", "(", "send_sock", ",", "msg_action", ")", "in", "zip", "(", "send_sock_list", ",", "msg_action_list", ")", ":", "\n", "\n", "# Format message with action and time, i.e. '3F_t0_C'", "\n", "\t\t", "msg_formatted", "=", "str", "(", "msg_action", ")", "+", "'F'", "+", "'_t'", "+", "str", "(", "t", ")", "+", "'_C'", "\n", "\n", "# Build thread", "\n", "send_thread", "=", "threading", ".", "Thread", "(", "target", "=", "send_over_sock", ",", "\n", "args", "=", "(", "send_sock", ",", "msg_formatted", ",", "network_protocol", ")", ")", "\n", "\n", "threads_list", ".", "append", "(", "send_thread", ")", "\n", "\n", "# Start all threads so all sockets send simultaneously", "\n", "", "for", "t", "in", "threads_list", ":", "\n", "\t\t", "t", ".", "start", "(", ")", "\n", "\n", "# Wait for the threads to finish", "\n", "", "for", "t", "in", "threads_list", ":", "\n", "\t\t", "t", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.network_functions.send_over_sock": [[345, 358], ["send_sock.sendall", "msg.encode"], "function", ["None"], ["", "", "def", "send_over_sock", "(", "send_sock", ",", "msg", ",", "network_protocol", ")", ":", "\n", "\t", "\"\"\"\n\tTransmit string-formatted msg over send socket.\n\n\tArgs:\n\tmsg: formatted msg string, i.e. '3F_t0_C'\n\t\"\"\"", "\n", "\n", "#print(\"\\nInside send_over_sock\")", "\n", "#print(\"with msg.encode():\", msg.encode(), \"of type: \", type(msg.encode()))", "\n", "\n", "# Send result should be None if successful", "\n", "send_result", "=", "send_sock", ".", "sendall", "(", "msg", ".", "encode", "(", ")", ")", "# encode as bytes", "\n", "#print(\"\\nSend result is None if successful: \", send_result)", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.pbkd": [[12, 43], ["cryptography.hazmat.primitives.kdf.pbkdf2.PBKDF2HMAC", "base64.urlsafe_b64encode", "type", "password.encode.encode", "type", "str().encode", "cryptography.hazmat.primitives.kdf.pbkdf2.PBKDF2HMAC.derive", "cryptography.hazmat.primitives.hashes.SHA256", "cryptography.hazmat.backends.default_backend", "str"], "function", ["None"], ["def", "pbkd", "(", "password", ",", "salt", ")", ":", "\n", "\t", "\"\"\"\n\tPassword-based key derivation function to produce key.\n\tThis password-based key used to build ciphersuite for encryption/decryption.\n\n\tArgs:\n\tpassword: of type string\n\tsalt: of type int or float\n\t\"\"\"", "\n", "\n", "# Convert password/salt to type bytes if required", "\n", "if", "type", "(", "password", ")", "!=", "bytes", ":", "\n", "\t\t", "password", "=", "password", ".", "encode", "(", ")", "\n", "", "if", "type", "(", "salt", ")", "!=", "bytes", ":", "\n", "\t\t", "salt", "=", "str", "(", "salt", ")", ".", "encode", "(", ")", "\n", "\n", "# Build one-time key derivation function", "\n", "", "kdf", "=", "PBKDF2HMAC", "(", "\n", "algorithm", "=", "hashes", ".", "SHA256", "(", ")", ",", "\n", "length", "=", "32", ",", "\n", "salt", "=", "salt", ",", "\n", "iterations", "=", "100000", ",", "\n", "backend", "=", "default_backend", "(", ")", "\n", ")", "\n", "\n", "# Produce key from one-time function", "\n", "cipher_key", "=", "base64", ".", "urlsafe_b64encode", "(", "kdf", ".", "derive", "(", "password", ")", ")", "\n", "#print(\"\\ncipher_key: \", cipher_key) ", "\n", "\n", "# Return key for building ciphersuite", "\n", "return", "cipher_key", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.encrypt": [[44, 67], ["cryptography.fernet.Fernet", "cryptography.fernet.Fernet.encrypt", "type", "plaintext.encode"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.encrypt"], ["", "def", "encrypt", "(", "cipher_key", ",", "plaintext", ")", ":", "\n", "\t", "\"\"\"\n\tUse ciphersuite from provided cipher key to encrypt plaintext.\n\n\tArgs:\n\tcipher_key: URL-safe base-64 encoded key of length 32 bytes.\n\t\t\t\tProvided from key derivation function.\n\tplaintext: of type string.\n\t\"\"\"", "\n", "\n", "# Build ciphersuite from key", "\n", "ciphersuite", "=", "Fernet", "(", "cipher_key", ")", "\n", "\n", "# Convert plaintext to type bytes", "\n", "if", "type", "(", "plaintext", ")", "!=", "bytes", ":", "\n", "\t\t", "plaintext_encoded", "=", "plaintext", ".", "encode", "(", ")", "\n", "\n", "# Encrypt plaintext with ciphersuite", "\n", "", "ciphertext", "=", "ciphersuite", ".", "encrypt", "(", "plaintext_encoded", ")", "\n", "#print(\"\\nciphertext: \", ciphertext)", "\n", "\n", "# Return cipher text", "\n", "return", "ciphertext", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.decrypt": [[68, 92], ["cryptography.fernet.Fernet", "cryptography.fernet.Fernet.decrypt", "ciphersuite.decrypt.decode"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.decrypt"], ["", "def", "decrypt", "(", "cipher_key", ",", "ciphertext", ")", ":", "\n", "\t", "\"\"\"\n\tUse ciphersuite from provided cipher key to decrypt ciphertext.\n\n\tArgs:\n\tcipher_key: URL-safe base-64 encoded key of length 32 bytes.\n\t\t\t\tProvided from key derivation function.\n\tciphertext: of type bytes.\n\t\"\"\"", "\n", "\n", "#print(\"\\nInside decrypt with cipher_key: \", cipher_key, \" ciphertext: \", ciphertext)", "\n", "\n", "# Build ciphersuite from key", "\n", "ciphersuite", "=", "Fernet", "(", "cipher_key", ")", "\n", "\n", "# Decrypt ciphertext with ciphersuite", "\n", "plaintext", "=", "ciphersuite", ".", "decrypt", "(", "ciphertext", ")", "\n", "\n", "# Convert plaintext from type bytes to type string", "\n", "plaintext_decoded", "=", "plaintext", ".", "decode", "(", ")", "\n", "#print(\"\\nplaintext_decoded: \", plaintext_decoded)", "\n", "\n", "# Return string plaintext", "\n", "return", "plaintext_decoded", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.session_key_v1": [[94, 145], ["zip", "range", "zip", "len", "range", "len", "type", "prob.data.item.data.item", "len", "len"], "function", ["None"], ["", "def", "session_key_v1", "(", "histories_list", ")", ":", "\n", "\t", "\"\"\"\n\tCompute session key from agent interaction histories.\n\t\n\tNote: history dists are rounded to 3 decimal places.\n\n\tArgs:\n\thistories_list: [agent0_history, agent1_history,...]\n\t\twith agent0_history = [(a0,dist0),(a1,dist1),(a2,dist2)...]\n\t\"\"\"", "\n", "\n", "# Define variables", "\n", "session_key", "=", "''", "\n", "\n", "# Build session key as string of concatenated histories", "\n", "for", "(", "history", ",", "l", ")", "in", "zip", "(", "histories_list", ",", "range", "(", "len", "(", "histories_list", ")", ")", ")", ":", "\n", "\n", "\t\t", "history_str", "=", "''", "\n", "\n", "# Build history string as: 'dist0[a0-1],dist1[a1-1],...'", "\n", "for", "(", "tup", ",", "t", ")", "in", "zip", "(", "history", ",", "range", "(", "len", "(", "history", ")", ")", ")", ":", "\n", "\t\t\t", "(", "action", ",", "dist", ")", "=", "tup", "\n", "\n", "# Adjust for 1-indexed action space", "\n", "prob", "=", "dist", "[", "action", "-", "1", "]", "\n", "\n", "# Convert if tensor", "\n", "if", "type", "(", "prob", ")", "==", "torch", ".", "Tensor", ":", "\n", "\t\t\t\t", "prob", "=", "prob", ".", "data", ".", "item", "(", ")", "\n", "\n", "# Round to 3 decimal places (as string)", "\n", "", "prob_str", "=", "'%.3f'", "%", "(", "prob", ")", "# i.e. '0.935'", "\n", "\n", "# Format i.e. '0.935,'", "\n", "if", "t", "!=", "len", "(", "history", ")", "-", "1", ":", "\n", "\t\t\t\t", "prob_str", "+=", "','", "\n", "\n", "# Append to history string", "\n", "", "history_str", "+=", "prob_str", "\n", "\n", "#print(\"history_str: \", history_str)", "\n", "\n", "# Format i.e. '0.935,0.675,0.872*'", "\n", "", "if", "l", "!=", "len", "(", "histories_list", ")", "-", "1", ":", "\n", "\t\t\t", "history_str", "+=", "'*'", "\n", "\n", "# Build session key as: history0 * history1 * ...", "\n", "", "session_key", "+=", "history_str", "\n", "\n", "# Example session key: '0.2,0.4,0.1*0.3,0.9,0.7'", "\n", "", "return", "session_key", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.test_session_key_v1": [[146, 179], ["range", "print", "key_gen.session_key_v1", "print", "range", "histories_list.append", "torch.rand", "torch.distributions.categorical.Categorical", "history.append", "torch.distributions.categorical.Categorical.sample().data.item", "torch.distributions.categorical.Categorical.sample"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.key_gen.session_key_v1", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.sample"], ["", "def", "test_session_key_v1", "(", ")", ":", "\n", "\t", "\"\"\"Test the compute_key_v1() function.\"\"\"", "\n", "\n", "# Define variables", "\n", "num_agents", "=", "3", "\n", "num_timesteps", "=", "5", "\n", "action_space_size", "=", "3", "\n", "\n", "# Build agent histories", "\n", "histories_list", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "num_agents", ")", ":", "\n", "\n", "# Build history for number of timestepss", "\n", "\t\t", "history", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "num_timesteps", ")", ":", "\n", "\n", "\t\t\t", "logits", "=", "torch", ".", "rand", "(", "action_space_size", ")", "\n", "Cat", "=", "Categorical", "(", "logits", "=", "logits", ")", "\n", "\n", "dist", "=", "Cat", ".", "probs", "\n", "action", "=", "Cat", ".", "sample", "(", ")", ".", "data", ".", "item", "(", ")", "+", "1", "# adjust as 1-indexed", "\n", "\n", "history", ".", "append", "(", "(", "action", ",", "dist", ")", ")", "\n", "\n", "# Append to histories list", "\n", "", "histories_list", ".", "append", "(", "history", ")", "\n", "\n", "", "print", "(", "\"histories_list: \"", ",", "histories_list", ")", "\n", "\n", "# Compute session key v1", "\n", "key", "=", "session_key_v1", "(", "histories_list", ")", "\n", "\n", "print", "(", "\"key: \"", ",", "key", ")", "", "", ""]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.snorm_mean": [[7, 16], ["numpy.sqrt", "numpy.sqrt", "numpy.power"], "function", ["None"], ["def", "snorm_mean", "(", "p_abc", ")", ":", "# input is vector [location, scale, shape]", "\n", "    ", "\"\"\"Compute skew-norm mean.\"\"\"", "\n", "# [e, w, B] are [location, scale, shape] parameters, so below is...", "\n", "# ... mean = e + w * (B / sqrt(1+B)) * 2/sqrt(pi)", "\n", "\n", "# Use floats as divisors for float division", "\n", "mean", "=", "p_abc", "[", "0", "]", "+", "(", "p_abc", "[", "1", "]", "*", "(", "p_abc", "[", "2", "]", "/", "np", ".", "sqrt", "(", "1.0", "+", "np", ".", "power", "(", "p_abc", "[", "2", "]", ",", "2", ")", ")", ")", "*", "np", ".", "sqrt", "(", "2.0", "/", "np", ".", "pi", ")", ")", "\n", "\n", "return", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.snorm_pdf": [[17, 37], ["numpy.array", "numpy.divide", "scipy.stats.norm.cdf", "scipy.stats.norm.pdf"], "function", ["None"], ["", "def", "snorm_pdf", "(", "X", ",", "p_abc", ")", ":", "\n", "    ", "\"\"\"\n    Compute densities/probabilities for each element in X.\n    Find the y-value in the skew-normal pdf graph for each x-value.\n\n    Verified against Matlab HBA, provided parameters are correct\n\n    Args:\n    X: vector of data points\n    p_abc: [location, scale, shape]\n    \"\"\"", "\n", "X", "=", "np", ".", "array", "(", "X", ")", "\n", "\n", "# Numpy's true float division using a float divisor", "\n", "X_", "=", "np", ".", "divide", "(", "(", "X", "-", "p_abc", "[", "0", "]", ")", "*", "1.0", ",", "p_abc", "[", "1", "]", ")", "# Transformation: (X - e) / w", "\n", "\n", "# Eq 10 from HBA paper: skew-normal pdf = 2/w * pdf(X_) * cdf(B * X_)", "\n", "Y", "=", "2.00", "/", "p_abc", "[", "1", "]", "*", "norm", ".", "pdf", "(", "X_", ")", "*", "norm", ".", "cdf", "(", "p_abc", "[", "2", "]", "*", "X_", ")", "\n", "\n", "return", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.snorm_mode": [[39, 72], ["scipy.optimize.fmin", "numpy.array", "numpy.divide", "hyp_test.snorm_mean", "scipy.stats.norm.cdf", "scipy.stats.norm.pdf"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.snorm_mean"], ["", "def", "snorm_mode", "(", "x", ",", "p_abc", ")", ":", "\n", "    ", "\"\"\"\n    Compute mode of skew normal.\n    Verified against Matlab with both scalar and array inputs for X.\n    The mode of a pdf is at the local maxima, that's why we use optimize().\n\n    Returns: tuple (xopt, fopt, iter, funcalls, warnflags, allvecs)\n                fopt is the value of function at minimum (the mode)\n    \"\"\"", "\n", "\n", "def", "negative_snorm_pdf", "(", "x", ")", ":", "\n", "\n", "        ", "x", "=", "np", ".", "array", "(", "x", ")", "\n", "\n", "# Numpy's true float division using a float divisor", "\n", "X_", "=", "np", ".", "divide", "(", "(", "x", "-", "p_abc", "[", "0", "]", ")", "*", "1.0", ",", "p_abc", "[", "1", "]", ")", "# Transformation: (X - e) / w", "\n", "\n", "# Eq 10 from HBA paper: skew-normal pdf = 2/w * pdf(X_) * cdf(B * X_)", "\n", "Y", "=", "2.00", "/", "p_abc", "[", "1", "]", "*", "norm", ".", "pdf", "(", "X_", ")", "*", "norm", ".", "cdf", "(", "p_abc", "[", "2", "]", "*", "X_", ")", "\n", "\n", "return", "-", "Y", "\n", "\n", "# output: tuple sized 6, (xopt, fopt, iter, funcalls, warnflags, allvecs)", "\n", "", "output", "=", "optimize", ".", "fmin", "(", "negative_snorm_pdf", ",", "snorm_mean", "(", "p_abc", ")", ",", "full_output", "=", "True", ",", "disp", "=", "False", ")", "\n", "\n", "# Take 'fopt', the value of function at minimum", "\n", "# Dmode is value of graph at local minima, so we need the actual y-value", "\n", "mode", "=", "-", "output", "[", "1", "]", "\n", "\n", "xval_mode", "=", "output", "[", "0", "]", "\n", "# print(\"non-returned x-value at mode: \", output[0])  # check the x-value", "\n", "\n", "return", "[", "mode", ",", "xval_mode", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.z1_score_function": [[73, 110], ["range", "max", "list_of_items.append", "type", "sum", "exit"], "function", ["None"], ["", "def", "z1_score_function", "(", "list_a_t", ",", "list_x_t", ",", "num_time_steps", ")", ":", "\n", "    ", "\"\"\"z1 performs the E_time (prob of action chosen / max prob of all available actions)\n\n    Args:\n    list_a_t: the observed actions by client, for example [1,3,2,3,1,2,3,1,1]\n    list_x_t: the list of distributions at each node that client went to\n            i.e. [ [.2,.5,.3], [.5,.2.,.3], ...]\n    \"\"\"", "\n", "\n", "list_of_items", "=", "[", "]", "# holds each 0.5 / max([0.5,0.2,0.3]) for the two lists", "\n", "\n", "for", "i", "in", "range", "(", "num_time_steps", ")", ":", "\n", "\n", "        ", "try", ":", "\n", "# action chosen by client from {1,2,3} for example", "\n", "            ", "action_chosen", "=", "list_a_t", "[", "i", "]", "\n", "", "except", ":", "\n", "            ", "exit", "(", "\"Exiting: error in z1_score_function!\"", ")", "\n", "\n", "", "if", "type", "(", "action_chosen", ")", "==", "list", ":", "\n", "# if they came in form [2], or [1], for example", "\n", "            ", "action_chosen", "=", "action_chosen", "[", "0", "]", "\n", "\n", "# Probability distribution at this node, like [0.5,0.2,0.3]", "\n", "", "probs_available_actions", "=", "list_x_t", "[", "i", "]", "\n", "\n", "# Change from {1,2,3} to 0-indexed index", "\n", "prob_action_chosen", "=", "probs_available_actions", "[", "action_chosen", "-", "1", "]", "\n", "\n", "max_prob", "=", "max", "(", "probs_available_actions", ")", "\n", "\n", "# Example of max_prob: 0.5 from [0.5,0.2,0.3]", "\n", "\n", "list_of_items", ".", "append", "(", "prob_action_chosen", "/", "(", "max_prob", "*", "1.0", ")", ")", "\n", "\n", "", "z1_score", "=", "sum", "(", "list_of_items", ")", "*", "1.0", "/", "num_time_steps", "\n", "return", "z1_score", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.z2_score_function": [[111, 145], ["range", "all", "range", "list_of_items.append", "len", "sum", "exit", "abs", "type"], "function", ["None"], ["", "def", "z2_score_function", "(", "list_a_t", ",", "list_x_t", ",", "num_time_steps", ")", ":", "\n", "\n", "# format of CDT gives each node as a single-value list, so convert them to ints", "\n", "# i.e. convert from [[2],[3],[1]] to [2,3,1] ", "\n", "    ", "if", "all", "(", "[", "type", "(", "x", ")", "==", "list", "for", "x", "in", "list_a_t", "]", ")", "==", "True", ":", "\n", "        ", "list_a_t", "=", "[", "y", "[", "0", "]", "for", "y", "in", "list_a_t", "]", "\n", "\n", "", "list_of_items", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_time_steps", ")", ":", "\n", "\n", "        ", "try", ":", "\n", "# action chosen by client from {1,2,3} for example", "\n", "            ", "action_chosen", "=", "list_a_t", "[", "i", "]", "\n", "", "except", ":", "\n", "            ", "exit", "(", "\"Exiting: error in z2_score_function()!\"", ")", "\n", "\n", "# probability distribution at this node, like [0.5,0.2,0.3]", "\n", "", "probs_available_actions", "=", "list_x_t", "[", "i", "]", "\n", "\n", "# 'action_chosen-1' is to change from {1,2,3} to 0-indexed index", "\n", "prob_action_chosen", "=", "probs_available_actions", "[", "action_chosen", "-", "1", "]", "\n", "\n", "# the expectation E (the E is SUM: |selected prob-prob of a_j| * prob of a_j)", "\n", "this_expectation", "=", "0", "\n", "\n", "for", "j", "in", "range", "(", "len", "(", "probs_available_actions", ")", ")", ":", "\n", "            ", "this_expectation", "+=", "(", "probs_available_actions", "[", "j", "]", "*", "(", "abs", "(", "prob_action_chosen", "-", "probs_available_actions", "[", "j", "]", ")", ")", ")", "\n", "#print \"this_expectation: \", this_expectation", "\n", "\n", "", "list_of_items", ".", "append", "(", "1", "-", "this_expectation", ")", "\n", "\n", "", "z2_score", "=", "sum", "(", "list_of_items", ")", "*", "1.0", "/", "num_time_steps", "\n", "\n", "return", "z2_score", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.z3_score_function": [[146, 193], ["len", "range", "sum", "range", "bigList.append", "secondList.append", "min", "firstList.append", "firstList.append", "sum", "sum", "exit"], "function", ["None"], ["", "def", "z3_score_function", "(", "list_a_t", ",", "list_x_t", ",", "num_time_steps", ")", ":", "\n", "\n", "# holds the min between two lists, for all actions a_i from A = {}", "\n", "    ", "bigList", "=", "[", "]", "\n", "\n", "numActions", "=", "len", "(", "list_x_t", "[", "0", "]", ")", "# the size of A = {}", "\n", "for", "i", "in", "range", "(", "numActions", ")", ":", "\n", "\n", "        ", "currentAction", "=", "i", "+", "1", "# this variable will be 1-3, for example", "\n", "\n", "firstList", "=", "[", "]", "\n", "secondList", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "num_time_steps", ")", ":", "\n", "\n", "# Calculate item for firstList", "\n", "            ", "try", ":", "\n", "# action chosen by client from {1,2,3} for example", "\n", "                ", "action_chosen", "=", "list_a_t", "[", "j", "]", "\n", "", "except", ":", "\n", "                ", "exit", "(", "\"Exiting: error in z3_score_function!\"", ")", "\n", "\n", "", "if", "action_chosen", "==", "currentAction", ":", "# if a_j^t == a_j", "\n", "                ", "firstList", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "firstList", ".", "append", "(", "0", ")", "\n", "\n", "# Calculate item for secondList", "\n", "\n", "# probability distribution at this node, like [0.5,0.2,0.3]", "\n", "", "probs_available_actions", "=", "list_x_t", "[", "j", "]", "\n", "\n", "# probability of getting a1, for example", "\n", "prob_currentAction", "=", "probs_available_actions", "[", "currentAction", "-", "1", "]", "\n", "\n", "secondList", ".", "append", "(", "prob_currentAction", ")", "\n", "\n", "# Find min between averages of two lists, then append to outer list", "\n", "", "firstList_avg", "=", "sum", "(", "firstList", ")", "*", "1.0", "/", "num_time_steps", "\n", "secondList_avg", "=", "sum", "(", "secondList", ")", "*", "1.0", "/", "num_time_steps", "\n", "\n", "# for this a_i from A={}, append the minimum", "\n", "bigList", ".", "append", "(", "min", "(", "firstList_avg", ",", "secondList_avg", ")", ")", "\n", "\n", "# Now with minimum values for each a_i in A={}, sum up for the z3 score", "\n", "", "z3_score", "=", "sum", "(", "bigList", ")", "\n", "\n", "return", "z3_score", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.calculate_test_statistic": [[194, 219], ["range", "score_fn", "score_fn"], "function", ["None"], ["", "def", "calculate_test_statistic", "(", "score_funcs_list", ",", "weight_value", ",", "\n", "actions_a", ",", "dists_a", ",", "actions_b", ",", "dists_b", ",", "\n", "num_time_steps", ")", ":", "\n", "    ", "\"\"\"Compute test statistic using provided score functions.\"\"\"", "\n", "\n", "outer_sum", "=", "0", "# to hold the sum over all time steps", "\n", "for", "i", "in", "range", "(", "num_time_steps", ")", ":", "\n", "\n", "        ", "inner_sum", "=", "0", "# to hold the sum over all score functions", "\n", "for", "score_fn", "in", "score_funcs_list", ":", "\n", "\n", "            ", "z_i_a", "=", "score_fn", "(", "actions_a", ",", "dists_a", ",", "i", "+", "1", ")", "# num_time_steps is 1 at t=0", "\n", "z_i_b", "=", "score_fn", "(", "actions_b", ",", "dists_b", ",", "i", "+", "1", ")", "\n", "\n", "#print(\"z_i_a: \", z_i_a)", "\n", "#print(\"z_i_b: \", z_i_b)", "\n", "#print(\"z_i_a - z_i_b: \", z_i_a - z_i_b)", "\n", "\n", "inner_sum", "+=", "(", "z_i_a", "-", "z_i_b", ")", "\n", "\n", "", "outer_sum", "+=", "inner_sum", "*", "weight_value", "\n", "\n", "", "test_statistic", "=", "outer_sum", "*", "1.0", "/", "num_time_steps", "\n", "\n", "return", "test_statistic", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.hypothesis_test_v1": [[221, 334], ["len", "range", "len", "len", "a.append", "a_hat.append", "range", "range", "a_tilda_list[].append", "numpy.array", "range", "scipy.stats.skewnorm.fit", "hyp_test.calculate_test_statistic", "pvalue_ratio_list.append", "scipy.stats.norm.fit", "pvalue_regular_list.append", "torch.distributions.categorical.Categorical().sample().item", "x.tolist", "hyp_test.calculate_test_statistic", "numpy.append", "torch.distributions.categorical.Categorical().sample().item", "hyp_test.snorm_pdf", "hyp_test.snorm_mode", "scipy.stats.norm.cdf", "torch.distributions.categorical.Categorical().sample", "scipy.stats.norm.cdf", "torch.distributions.categorical.Categorical().sample", "torch.distributions.categorical.Categorical", "torch.distributions.categorical.Categorical"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.calculate_test_statistic", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.calculate_test_statistic", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.snorm_pdf", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.hyp_test.snorm_mode", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.sample", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.sample"], ["", "def", "hypothesis_test_v1", "(", "unknown_agent_actions", ",", "known_agent_dists", ",", "\n", "update_times", ",", "num_actions", ",", "num_samples", "=", "50", ",", "\n", "score_funcs_list", "=", "[", "z1_score_function", ",", "z2_score_function", ",", "z3_score_function", "]", ",", "\n", "weight_value", "=", "(", "1.0", "/", "3", ")", ")", ":", "\n", "    ", "\"\"\"\n    Calculate p-values for various timesteps of an interaction process.\n\n    Args:\n    unknown_agent_actions: python list of integers\n    known_agent_dists: python list of sublists, each sublist a probability distribution\n\n    Returns: tuple(pvalue_regular, pvalue_ratio) as the final p-value for interaction process\n    \"\"\"", "\n", "\n", "# Check for correct parameter size", "\n", "max_time", "=", "len", "(", "unknown_agent_actions", ")", "\n", "assert", "(", "\n", "len", "(", "unknown_agent_actions", ")", "==", "max_time", "\n", ")", ",", "\"unknown_agent_actions is incorrect length.\"", "\n", "assert", "len", "(", "known_agent_dists", ")", "==", "max_time", ",", "\"known_agent_dists is incorrect length.\"", "\n", "\n", "# Declare variables", "\n", "a", "=", "[", "]", "# observed actions from unknown agent", "\n", "a_hat", "=", "[", "]", "# sampled actions from dists of known agent", "\n", "a_tilda_list", "=", "[", "\n", "[", "]", "for", "_", "in", "range", "(", "num_samples", ")", "\n", "]", "# sampled actions dists of known agent", "\n", "\n", "pvalue_ratio_list", "=", "[", "]", "\n", "pvalue_regular_list", "=", "[", "]", "\n", "\n", "# Run hypothesis test", "\n", "for", "t", "in", "range", "(", "max_time", ")", ":", "\n", "\n", "# Part 1: Collect observed action from unknown agent", "\n", "        ", "a", ".", "append", "(", "unknown_agent_actions", "[", "t", "]", ")", "\n", "\n", "# Part 2: Sample action from known agent dist, adjusted for action space", "\n", "a_hat", ".", "append", "(", "Categorical", "(", "probs", "=", "known_agent_dists", "[", "t", "]", ")", ".", "sample", "(", ")", ".", "item", "(", ")", "+", "1", ")", "\n", "\n", "# Part 3: Sample set of actions from known agent dists", "\n", "for", "n", "in", "range", "(", "num_samples", ")", ":", "\n", "            ", "a_tilda_list", "[", "n", "]", ".", "append", "(", "\n", "Categorical", "(", "probs", "=", "known_agent_dists", "[", "t", "]", ")", ".", "sample", "(", ")", ".", "item", "(", ")", "+", "1", "\n", ")", "\n", "\n", "# Part 4: If specified, compute p-value at current time", "\n", "", "if", "t", "in", "update_times", ":", "\n", "# Part 4A: Fill D array with test statistics calculated between known agent and known agent", "\n", "\n", "            ", "D", "=", "np", ".", "array", "(", "[", "]", ")", "# holds test statistics for known agent with known agent", "\n", "\n", "# Convert known_agent_dists dists from tensors to python lists", "\n", "known_agent_dists_pylists", "=", "[", "\n", "x", ".", "tolist", "(", ")", "for", "x", "in", "known_agent_dists", "[", "0", ":", "t", "+", "1", "]", "\n", "]", "\n", "\n", "# Compute test statistic between known agent (a_hat) and known agent (a_tilda_list)", "\n", "for", "n", "in", "range", "(", "num_samples", ")", ":", "\n", "\n", "                ", "test_statistic", "=", "calculate_test_statistic", "(", "\n", "score_funcs_list", ",", "\n", "weight_value", ",", "\n", "a_tilda_list", "[", "n", "]", ",", "\n", "known_agent_dists_pylists", ",", "\n", "a_hat", ",", "\n", "known_agent_dists_pylists", ",", "\n", "num_time_steps", "=", "t", "+", "1", "\n", ")", "\n", "D", "=", "np", ".", "append", "(", "D", ",", "test_statistic", ")", "\n", "\n", "# Part 4B: Fit parameters to skew-normal distribution of D", "\n", "", "[", "shape", ",", "loc", ",", "scale", "]", "=", "skewnorm", ".", "fit", "(", "D", ")", "\n", "skew_params", "=", "[", "loc", ",", "scale", ",", "shape", "]", "\n", "\n", "# Part 4C: compute test statistic between unknown agent (a) and known agent (a_hat)", "\n", "q", "=", "calculate_test_statistic", "(", "\n", "score_funcs_list", ",", "\n", "weight_value", ",", "\n", "a", ",", "\n", "known_agent_dists_pylists", ",", "\n", "a_hat", ",", "\n", "known_agent_dists_pylists", ",", "\n", "num_time_steps", "=", "t", "+", "1", "\n", ")", "\n", "\n", "# Part 4D: Calculate p-value from 'q' by two calculation methods", "\n", "\n", "# Calculate p-value by 'ratio' method", "\n", "pvalue_ratio", "=", "(", "\n", "snorm_pdf", "(", "q", ",", "skew_params", ")", "*", "1.00", "/", "snorm_mode", "(", "D", ",", "skew_params", ")", "[", "0", "]", "\n", ")", "# does f(q| params) / f(mode| params)", "\n", "\n", "pvalue_ratio_list", ".", "append", "(", "pvalue_ratio", ")", "\n", "\n", "# Calculate p-value by 'regular' method (fitting the normal distribution to D)", "\n", "\n", "m", ",", "s", "=", "norm", ".", "fit", "(", "D", ")", "# fit normal dist to D, and get its mean/std dev", "\n", "\n", "pvalue_regular", "=", "-", "1", "# intialize variable", "\n", "\n", "# If tt is to the left of mean, then graphically, we take cdf(tt)", "\n", "if", "q", "<=", "m", ":", "\n", "                ", "pvalue_regular", "=", "norm", ".", "cdf", "(", "q", ",", "m", ",", "s", ")", "*", "2.0", "# double the tail area", "\n", "\n", "# Otherwise, if tt to the right of mean, take 1-cdf(tt)", "\n", "", "else", ":", "\n", "                ", "pvalue_regular", "=", "(", "1", "-", "norm", ".", "cdf", "(", "q", ",", "m", ",", "s", ")", ")", "*", "2.0", "\n", "\n", "", "pvalue_regular_list", ".", "append", "(", "pvalue_regular", ")", "\n", "\n", "# Return final pvalue_regular and pvalue_ratio as tuple", "\n", "", "", "return", "(", "pvalue_regular_list", "[", "-", "1", "]", ",", "pvalue_ratio_list", "[", "-", "1", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.__init__": [[39, 72], ["torch.nn.Module.__init__", "layers.append", "torch.nn.Sequential", "behavioral_models.MLPGeneratorAgent.reset", "layers.append", "layers.append", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.__init__", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.reset"], ["def", "__init__", "(", "self", ",", "num_actions", ",", "history_length", ",", "hidden_sizes", ",", "num_agents", ")", ":", "\n", "        ", "\"\"\"\n        Build feedforward agent.\n\n        Args:\n        num_actions: int, number of actions available to agents.\n        history_length: int, length of history inputs.\n        hidden_sizes: list of ints, number of hidden units in each hidden layer.\n        num_agents: number of agents providing inputs to this model, including self.\n                    i.e. if only server-client interaction, num_agents=2\n        \"\"\"", "\n", "super", "(", "MLPGeneratorAgent", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_type", "=", "\"neuralnet\"", "\n", "self", ".", "_num_agents", "=", "num_agents", "\n", "\n", "# Defining the layers", "\n", "self", ".", "_num_actions", "=", "num_actions", "\n", "self", ".", "_detach_gradient", "=", "False", "\n", "layers", "=", "[", "]", "\n", "# An entire history length is the number of actions x num agents x length of interaction.", "\n", "self", ".", "_input_size", "=", "nin", "=", "(", "num_actions", ")", "*", "history_length", "*", "num_agents", "\n", "for", "size", "in", "hidden_sizes", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "nin", ",", "size", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "nin", "=", "size", "\n", "", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "nin", ",", "num_actions", ")", ")", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "outputWithGradient", "=", "True", "\n", "self", ".", "reset", "(", ")", "\n", "\n", "# Record each history of actions and nodal dists", "\n", "self", ".", "_interaction_history", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.reset": [[73, 76], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"Reset initial state.\"\"\"", "\n", "self", ".", "state", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.pad": [[77, 106], ["x.to.to.to", "x.to.to.size", "x.to.to.size", "torch.zeros().to", "torch.cat().to", "torch.zeros", "torch.cat"], "methods", ["None"], ["", "def", "pad", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Pad tensor to fit input size.\"\"\"", "\n", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "\n", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "x_size", "=", "x", ".", "size", "(", "1", ")", "\n", "# zero = torch.zeros((batch_size, 1, 1))", "\n", "# print(self._input_size, x.size())", "\n", "# n_missing_inputs = (self._input_size - x_size - 1) // (self._num_actions + 1)", "\n", "# pad = torch.FloatTensor([[0, 0, 0, 1]]).repeat(batch_size, n_missing_inputs).view(batch_size, -1, 1)", "\n", "\n", "zeros", "=", "torch", ".", "zeros", "(", "(", "batch_size", ",", "self", ".", "_input_size", "-", "x_size", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "# print(x.size(), zero.size(), pad.size())", "\n", "\n", "#print(\"\\nzeros shape: \", zeros.shape)", "\n", "#print(\"\\nx shape: \", x.shape)", "\n", "\n", "## Example of concatenation: ", "\n", "#", "\n", "# x is [1x3x1]: tensor([[[0.5845],", "\n", "#                       [0.5608],", "\n", "#                       [0.4611]]])", "\n", "#", "\n", "# cat([x,zero],dim=1) : tensor([[0.5845, 0.5608, 0.4611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,", "\n", "#                                0.0000, 0.0000, 0.0000]])", "\n", "##", "\n", "\n", "padded_x", "=", "torch", ".", "cat", "(", "[", "x", ",", "zeros", "]", ",", "dim", "=", "1", ")", ".", "to", "(", "device", ")", "\n", "return", "padded_x", "\n", "# return torch.cat([x, zero, pad], dim=1)", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.int_to_ohv_tensor": [[108, 119], ["torch.zeros"], "methods", ["None"], ["", "def", "int_to_ohv_tensor", "(", "self", ",", "int_action", ",", "num_actions", ")", ":", "\n", "        ", "\"\"\"Convert integer to one-hot-vector Tensor.\"\"\"", "\n", "\n", "# Create tensor size of action space", "\n", "ohv_tensor", "=", "torch", ".", "zeros", "(", "num_actions", ")", "\n", "\n", "# Mark the index of integer action, adjusted", "\n", "ohv_tensor", "[", "int_action", "-", "1", "]", "=", "1", "\n", "\n", "# Return ohv-tensor", "\n", "return", "ohv_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.ohv_tensor_to_int": [[120, 131], ["ohv_tensor.tolist", "tensor_as_list.index"], "methods", ["None"], ["", "def", "ohv_tensor_to_int", "(", "self", ",", "ohv_tensor", ",", "num_actions", ")", ":", "\n", "        ", "\"\"\"Convert a one-hot-vector tensor to integer action.\"\"\"", "\n", "\n", "# Convert tensor to python list and unwrap", "\n", "tensor_as_list", "=", "ohv_tensor", ".", "tolist", "(", ")", "[", "0", "]", "\n", "\n", "# Get integer action from index of the 1 in the ohv, adjusted.", "\n", "int_action", "=", "tensor_as_list", ".", "index", "(", "1", ")", "+", "1", "\n", "\n", "# Return int action", "\n", "return", "int_action", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.act": [[132, 191], ["behavioral_models.MLPGeneratorAgent.step", "behavioral_models.MLPGeneratorAgent.ohv_tensor_to_int", "behavioral_models.MLPGeneratorAgent._interaction_history.append", "behavioral_models.MLPGeneratorAgent.reset", "behavioral_models.MLPGeneratorAgent._interaction_history.clear", "torch.randn", "torch.cat", "input_tensor.view.view.view", "type", "behavioral_models.MLPGeneratorAgent.int_to_ohv_tensor", "input_tensor_list.append", "input_tensor_list.append"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.step", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.ohv_tensor_to_int", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.reset", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.int_to_ohv_tensor"], ["", "def", "act", "(", "self", ",", "t", ",", "inputs", ",", "num_actions", ")", ":", "\n", "        ", "\"\"\"\n        Format input and return next action.\n        Update self interaction history.\n\n        Args:\n        inputs: python list of only most recent actions (either mutual or multi-agent).\n                i.e. [s1,c1] or [a0_action,a1_action,a2_action]\n                actions may be either integers or ohv-tensors\n        t: time in the interaction process.\n        num_actions: size of the action space.\n        \"\"\"", "\n", "#print(\"\\nInside act() with t: \", t, \" inputs: \", inputs)", "\n", "\n", "# Reset model if need be", "\n", "if", "t", "==", "0", "or", "t", "==", "1", ":", "\n", "            ", "self", ".", "reset", "(", ")", "\n", "\n", "# Clear interaction history if starting fresh history", "\n", "", "if", "t", "==", "0", ":", "\n", "            ", "self", ".", "_interaction_history", ".", "clear", "(", ")", "\n", "\n", "# For very first action, provide noise input", "\n", "", "if", "t", "==", "0", ":", "\n", "            ", "input_tensor", "=", "torch", ".", "randn", "(", "1", ",", "1", ",", "1", ")", "\n", "\n", "", "else", ":", "\n", "# Convert input list to tensors if need be", "\n", "            ", "input_tensor_list", "=", "[", "]", "\n", "\n", "for", "action", "in", "inputs", ":", "\n", "                ", "if", "type", "(", "action", ")", "!=", "torch", ".", "Tensor", ":", "\n", "                    ", "action_as_tensor", "=", "self", ".", "int_to_ohv_tensor", "(", "action", ",", "num_actions", ")", "\n", "input_tensor_list", ".", "append", "(", "action_as_tensor", ")", "\n", "", "else", ":", "\n", "                    ", "input_tensor_list", ".", "append", "(", "action", ")", "\n", "\n", "# Concatenate into single tensor", "\n", "", "", "input_tensor", "=", "torch", ".", "cat", "(", "input_tensor_list", ",", "dim", "=", "0", ")", "\n", "\n", "# Format input tensor of all actions", "\n", "sequence_len", "=", "num_actions", "*", "self", ".", "_num_agents", "\n", "input_tensor", "=", "input_tensor", ".", "view", "(", "1", ",", "sequence_len", ",", "1", ")", "\n", "\n", "#print(\"\\ninput_tensor: \", input_tensor)", "\n", "\n", "# Call step to statefully provide next action", "\n", "", "(", "next_logits", ",", "next_action", ")", "=", "self", ".", "step", "(", "input_tensor", ",", "num_actions", ")", "\n", "next_action", "=", "next_action", "[", "0", "]", "[", "0", "]", "# unwrap", "\n", "#print(\"\\nnext_logits: \", next_logits, \" next_action: \", next_action)", "\n", "\n", "# Convert next action to int", "\n", "next_action_int", "=", "self", ".", "ohv_tensor_to_int", "(", "next_action", ",", "num_actions", ")", "\n", "\n", "# Update own interaction history", "\n", "self", ".", "_interaction_history", ".", "append", "(", "(", "next_action_int", ",", "next_logits", ")", ")", "\n", "\n", "# Return logits and int action", "\n", "return", "(", "next_logits", ",", "next_action_int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.step": [[194, 225], ["behavioral_models.MLPGeneratorAgent.forward", "x.to", "torch.cat().to", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.forward"], ["", "def", "step", "(", "self", ",", "x", ",", "num_actions", ",", "gumbel_temp", "=", "1.0", ",", "gumbel_return_hard", "=", "True", ")", ":", "\n", "        ", "\"\"\"Update state and run forward pass.\"\"\"", "\n", "# print(\"\\nInside MLPGeneratorAgent step()!\")", "\n", "# print(\"Begin with state: \", self.state)", "\n", "\n", "# State is not a hidden state like for GRU - this state stores inputs from history as a batch", "\n", "if", "self", ".", "state", "is", "None", ":", "\n", "            ", "self", ".", "state", "=", "x", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "state", "=", "torch", ".", "cat", "(", "[", "x", ",", "self", ".", "state", "]", ",", "dim", "=", "1", ")", ".", "to", "(", "device", ")", "# most recent action pair at top of input layer", "\n", "#print(\"Updated state: \", self.state)", "\n", "#print(\"Update state shape: \", self.state.shape)", "\n", "\n", "# Example of self.state (3D tensor) for Ht=[3,1,1,2] where most recent pair is at top of state", "\n", "# [[ ", "\n", "#    [1]", "\n", "#    [0]", "\n", "#    [0]", "\n", "#    [0]", "\n", "#    [1]", "\n", "#    [0]", "\n", "#", "\n", "#    [0]", "\n", "#    [0]", "\n", "#    [1]", "\n", "#    [1]", "\n", "#    [0]", "\n", "#    [0]", "\n", "#   ]]", "\n", "\n", "", "return", "self", ".", "forward", "(", "self", ".", "state", ",", "num_actions", ",", "gumbel_temp", ",", "gumbel_return_hard", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.forward": [[227, 259], ["behavioral_models.MLPGeneratorAgent.pad().view().to", "behavioral_models.MLPGeneratorAgent.model", "behavioral_models.sample_outputs", "behavioral_models.MLPGeneratorAgent.pad().view", "behavioral_models.MLPGeneratorAgent.pad"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.sample_outputs", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.MLPGeneratorAgent.pad"], ["", "def", "forward", "(", "self", ",", "x", ",", "num_actions", ",", "gumbel_temp", ",", "gumbel_return_hard", ")", ":", "\n", "        ", "\"\"\"\n        Forward pass on network. \n\n        Args:\n        x: torch tensor with dimensions (batch_size, input_size)\n        numActions: int, number of available actions.\n        gumbel_temp: float, temperature for gumbel softmax.\n        gumbel_return_hard: bool, return\n\n        Returns:\n        raw logits and respective gumbel action samples\n        \"\"\"", "\n", "padded_x", "=", "self", ".", "pad", "(", "x", ")", ".", "view", "(", "-", "1", ",", "self", ".", "_input_size", ")", ".", "to", "(", "device", ")", "# Pad input if less than right amount.", "\n", "# print(\"\\npadded_x shape: \", padded_x.shape)", "\n", "# print(\"padded_x: \", padded_x)", "\n", "\n", "logits", "=", "self", ".", "model", "(", "padded_x", ")", "# Compute logits with forward pass for single sample", "\n", "#print(\"\\nlogits: \", logits)", "\n", "\n", "# Sample gumbel softmax distribution.", "\n", "detach_gradient", "=", "not", "self", ".", "outputWithGradient", "\n", "unwrapped_outputs", ",", "sample_vectors", "=", "sample_outputs", "(", "\n", "logits", ",", "\n", "num_actions", ",", "\n", "gumbel_temp", ",", "\n", "gumbel_return_hard", ",", "\n", "detach_gradient", "=", "detach_gradient", ",", "\n", ")", "\n", "\n", "#print(\"Returning sample_vectors: \", sample_vectors)", "\n", "return", "unwrapped_outputs", ",", "sample_vectors", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.sample_outputs": [[8, 34], ["gumbel_softmax.gumbel_softmax_transform", "logits.detach"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.gumbel_softmax.gumbel_softmax_transform"], ["def", "sample_outputs", "(", "logits", ",", "num_actions", ",", "gumbel_temp", ",", "gumbel_return_hard", ",", "detach_gradient", "=", "False", ")", ":", "\n", "    ", "\"\"\"Remove gradients from logits and gumbel samples to be produced, if specified.\"\"\"", "\n", "output_unwrapped", "=", "logits", "\n", "if", "detach_gradient", ":", "\n", "        ", "output_unwrapped", "=", "logits", ".", "detach", "(", ")", "\n", "\n", "# print(\"output_unwrapped: \", output_unwrapped)", "\n", "\n", "# Now produce gumbel samples from raw output logits", "\n", "# 'batch_gumbelsamples_vectors' is list of length batchsize: each sublist contains one-hot-vectors as tensors", "\n", "\n", "", "samples_as_input", ",", "sample_vectors", "=", "gumbel_softmax_transform", "(", "\n", "output_unwrapped", ",", "num_actions", ",", "gumbel_temp", ",", "gumbel_return_hard", "\n", ")", "\n", "# print(\"batch_gumbelsamples_vectors: \", batch_gumbelsamples_vectors) # [[tensor([[0., 1., 0.]])]] for batch size of 1", "\n", "\n", "# Fully unwrap action tensor", "\n", "output_fully_unwrapped", "=", "logits", "[", "0", "]", "\n", "# print(\"output_fully_unwrapped.shape: \", output_fully_unwrapped.shape)", "\n", "\n", "# Example output_fully_unwrapped: tensor([-0.0286, -0.0118,  0.0471], grad_fn=<SelectBackward>)", "\n", "#", "\n", "# Example batch_gumbelsamples_vectors: [[tensor([[0., 1., 0.]], grad_fn=<AddBackward0>)]]", "\n", "\n", "# Return tuple (logits tensor, double wrapped gumbel sample tensor)", "\n", "return", "output_fully_unwrapped", ",", "sample_vectors", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.behavioral_models.test_MLPGeneratorAgent": [[260, 285], ["behavioral_models.MLPGeneratorAgent", "print", "behavioral_models.MLPGeneratorAgent.act", "print", "behavioral_models.MLPGeneratorAgent.act", "print", "print"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act"], ["", "", "def", "test_MLPGeneratorAgent", "(", ")", ":", "\n", "    ", "\"\"\"Test methods of MLPGeneratorClass.\"\"\"", "\n", "\n", "# Define variables", "\n", "num_actions", "=", "3", "\n", "history_length", "=", "3", "\n", "hidden_sizes", "=", "[", "5", ",", "5", "]", "\n", "num_agents", "=", "3", "\n", "\n", "mlp", "=", "MLPGeneratorAgent", "(", "num_actions", ",", "history_length", ",", "hidden_sizes", ",", "num_agents", ")", "\n", "print", "(", "\"\\nmlp: \"", ",", "mlp", ")", "\n", "\n", "# Generate integer actions from input", "\n", "(", "logits_t0", ",", "action_t0", ")", "=", "mlp", ".", "act", "(", "t", "=", "0", ",", "inputs", "=", "[", "]", ",", "num_actions", "=", "num_actions", ")", "\n", "print", "(", "\"\\nt = 0: logits_t0: \"", ",", "logits_t0", ",", "\" action_t0: \"", ",", "action_t0", ")", "\n", "\n", "# And again", "\n", "a1_action_t0", "=", "1", "\n", "a2_action_t0", "=", "2", "\n", "inputs", "=", "[", "action_t0", ",", "a1_action_t0", ",", "a2_action_t0", "]", "\n", "(", "logits_t1", ",", "action_t1", ")", "=", "mlp", ".", "act", "(", "t", "=", "1", ",", "inputs", "=", "inputs", ",", "num_actions", "=", "num_actions", ")", "\n", "print", "(", "\"\\nt = 0: logits_t1: \"", ",", "logits_t1", ",", "\" action_t1: \"", ",", "action_t1", ")", "\n", "\n", "# Check recorded interaction history", "\n", "print", "(", "\"\\nmlp history: \"", ",", "mlp", ".", "_interaction_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_json_from_dir": [[5, 30], ["os.path.isdir", "os.listdir", "os.listdir.sort", "print", "len", "print", "open", "json.load", "json_object_list.append", "print", "str", "json.load.items"], "function", ["None"], ["def", "collect_json_from_dir", "(", "dir_path", ",", "num_files", ")", ":", "\n", "    ", "\"\"\"Return json objects from provided directory.\"\"\"", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "dir_path", ")", ",", "\"Directory does not exist!\"", "\n", "\n", "# Get sorted filenames from directory", "\n", "file_names_list", "=", "os", ".", "listdir", "(", "dir_path", ")", "\n", "file_names_list", ".", "sort", "(", ")", "\n", "print", "(", "\"file_names_list: \"", ",", "file_names_list", ")", "\n", "\n", "\n", "# Ensure expected number of files were collected", "\n", "assert", "len", "(", "file_names_list", ")", "==", "num_files", ",", "\"Incorrect number of files in dir!\"", "\n", "\n", "# Load json object from each file in dir", "\n", "json_object_list", "=", "[", "]", "\n", "for", "filename", "in", "file_names_list", ":", "\n", "        ", "print", "(", "\"\\nOn filename: \"", ",", "filename", ")", "\n", "\n", "with", "open", "(", "str", "(", "dir_path", "+", "'/'", "+", "filename", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "json_object_list", ".", "append", "(", "data", ")", "\n", "print", "(", "\"json object: \"", ",", "data", ".", "items", "(", ")", ")", "\n", "\n", "# Return json object list", "\n", "", "", "return", "json_object_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_neuralnets_from_subdir": [[31, 62], ["os.path.isdir", "os.listdir", "os.listdir.sort", "range", "range", "torch.load", "str"], "function", ["None"], ["", "def", "collect_neuralnets_from_subdir", "(", "subdir_path", ",", "group_size", ")", ":", "\n", "    ", "\"\"\"\n    Return list of  available pytorch neural nets (.pth object) in subdir.\n    List element is -1 if statedict file not listed in directory.\n    Note that number of neural net models may not match group size.\n\n    Args:\n    subdir_path: full path from cwd to subdirectory\n                i.e. 'agent_neuralnet_models/agent0_neuralnet_models'\n    \"\"\"", "\n", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "subdir_path", ")", ",", "\"Subdirectory does not exist!\"", "\n", "\n", "# Define variables", "\n", "agent_statedict_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "group_size", ")", "]", "\n", "\n", "# Get sorted filenames from directory", "\n", "file_names_list", "=", "os", ".", "listdir", "(", "subdir_path", ")", "\n", "file_names_list", ".", "sort", "(", ")", "\n", "#print(\"file_names_list: \", file_names_list)", "\n", "\n", "# If agent neural net found, load state dict and place in list at group id", "\n", "for", "k", "in", "range", "(", "group_size", ")", ":", "\n", "# Example of .pth file name: 'agent2.pth'", "\n", "        ", "model_name", "=", "'agent'", "+", "str", "(", "k", ")", "+", "'.pth'", "\n", "\n", "if", "model_name", "in", "file_names_list", ":", "\n", "            ", "agent_statedict_list", "[", "k", "]", "=", "torch", ".", "load", "(", "subdir_path", "+", "'/'", "+", "model_name", ")", "\n", "\n", "# Return the list of statedicts under this agent's subdirectory", "\n", "", "", "return", "agent_statedict_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_neuralnets_from_dir": [[63, 131], ["print", "print", "print", "os.path.isdir", "range", "print", "print", "os.path.isdir", "os.listdir", "os.listdir.sort", "print", "range", "print", "range", "range", "torch.load", "str"], "function", ["None"], ["", "def", "collect_neuralnets_from_dir", "(", "dir_path", ",", "subdirs", ",", "group_size", ")", ":", "\n", "    ", "\"\"\"\n    Return list of available pytorch neural nets (.pth object) using specified dir.\n    List element is -1 if statedict file not listed in directory.\n    Note that number of neural net models may not match group size.\n\n    Args:\n    dir_path: directory which holds subdirectories for each agent\n    subdirs: list of agent-specific subdirectory names\n\n    Example directory structure:\n\n        ./agent_neuralnet_models/\n\n            agent0_neuralnet_models/\n                - # skip myself\n                - agent1.pth\n                - agent2.pth\n\n            agent1_neuralnet_models/\n                - agent1.pth\n\n            agent2_neuralnet_models/\n                - agent2.pth\n    \"\"\"", "\n", "print", "(", "\"\\nInside collect_neuralnets_from_dir with:\"", ")", "\n", "print", "(", "\"dir_path: \"", ",", "dir_path", ")", "\n", "print", "(", "\"subdirs: \"", ",", "subdirs", ")", "\n", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "dir_path", ")", ",", "\"Directory does not exist!\"", "\n", "\n", "# Define variables", "\n", "neuralnet_statedict_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "group_size", ")", "]", "\n", "\n", "# Go through subdirectories for each agent", "\n", "for", "l", "in", "range", "(", "group_size", ")", ":", "\n", "        ", "print", "(", "\"\\nl: \"", ",", "l", ")", "\n", "\n", "# Define variables", "\n", "agent_statedict_list", "=", "[", "-", "1", "for", "_", "in", "range", "(", "group_size", ")", "]", "\n", "\n", "# Example: agent_neuralnet_models/agent0_neuralnet_models", "\n", "subdir_path", "=", "dir_path", "+", "'/'", "+", "subdirs", "[", "l", "]", "\n", "#print(\"\\nsubdir_path: \", subdir_path)", "\n", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "subdir_path", ")", ",", "\"Subdirectory does not exist!\"", "\n", "\n", "# Get sorted filenames from directory", "\n", "file_names_list", "=", "os", ".", "listdir", "(", "subdir_path", ")", "\n", "file_names_list", ".", "sort", "(", ")", "\n", "print", "(", "\"file_names_list: \"", ",", "file_names_list", ")", "\n", "\n", "# If agent neural net found, load state dict and place in list at group id", "\n", "for", "k", "in", "range", "(", "group_size", ")", ":", "\n", "# Example of .pth file name: 'agent2.pth'", "\n", "            ", "model_name", "=", "'agent'", "+", "str", "(", "k", ")", "+", "'.pth'", "\n", "\n", "if", "model_name", "in", "file_names_list", ":", "\n", "                ", "agent_statedict_list", "[", "k", "]", "=", "torch", ".", "load", "(", "subdir_path", "+", "'/'", "+", "model_name", ")", "\n", "\n", "", "", "print", "(", "\"agent_statedict_list: \"", ",", "agent_statedict_list", ")", "\n", "\n", "# Update list for all agent", "\n", "neuralnet_statedict_list", "[", "l", "]", "=", "agent_statedict_list", "\n", "\n", "", "print", "(", "\"neuralnet_statedict_list: \"", ",", "neuralnet_statedict_list", ")", "\n", "\n", "return", "(", "neuralnet_statedict_list", ",", "file_names_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_local_dir_names": [[132, 152], ["dirs_list.append", "dirs_list.append", "dirs_list.append", "dirs_list.append", "dirs_list.append", "dirs_list.append", "str", "str"], "function", ["None"], ["", "def", "collect_local_dir_names", "(", "agent_id", ",", "path_agent_files", ",", "path_shared_secrets", ",", "\n", "path_neuralnet_models", ",", "path_secret_neuralnets", ")", ":", "\n", "    ", "\"\"\"Build list of all local dir/subdir names for specified agent id.\"\"\"", "\n", "\n", "dirs_list", "=", "[", "]", "\n", "\n", "# Append all required local dir/subdir names", "\n", "dirs_list", ".", "append", "(", "path_agent_files", ")", "\n", "dirs_list", ".", "append", "(", "path_shared_secrets", ")", "\n", "\n", "dirs_list", ".", "append", "(", "path_neuralnet_models", ")", "\n", "# Example: 'agent_neuralnet_models/agent0_neuralnet_models'", "\n", "dirs_list", ".", "append", "(", "path_neuralnet_models", "+", "'/agent'", "+", "str", "(", "agent_id", ")", "+", "'_neuralnet_models'", ")", "\n", "\n", "\n", "dirs_list", ".", "append", "(", "path_secret_neuralnets", ")", "\n", "# Example: 'secret_neuralnet_models/agent0_secret_models'", "\n", "dirs_list", ".", "append", "(", "path_secret_neuralnets", "+", "'/agent'", "+", "str", "(", "agent_id", ")", "+", "'_secret_models'", ")", "\n", "\n", "return", "dirs_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.update_json_file": [[153, 175], ["os.path.exists", "infile.close", "open", "json.load", "open", "json.dump", "str", "str", "str"], "function", ["None"], ["", "def", "update_json_file", "(", "filepath", ",", "key", ",", "value", ")", ":", "\n", "    ", "\"\"\"\n    Update json file with dict key and value.\n\n    Args:\n    filepath: full json file path (i.e. 'agent_info_files/agent0_info.txt')\n    \"\"\"", "\n", "\n", "assert", "os", ".", "path", ".", "exists", "(", "filepath", ")", ",", "\"Filepath %s doesn't exist!\"", "%", "filepath", "\n", "\n", "# Load json dict from json file", "\n", "with", "open", "(", "str", "(", "filepath", ")", ",", "\"r\"", ")", "as", "infile", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "infile", ")", "\n", "\n", "", "infile", ".", "close", "(", ")", "\n", "\n", "# Update json dictionary if (key,value) not already there", "\n", "data", "[", "str", "(", "key", ")", "]", "=", "value", "\n", "\n", "# Upload updated dict to json file", "\n", "with", "open", "(", "str", "(", "filepath", ")", ",", "\"w\"", ")", "as", "outfile", ":", "\n", "        ", "json", ".", "dump", "(", "data", ",", "outfile", ",", "indent", "=", "4", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.run_virtual_agent.run_agent": [[7, 91], ["file_handling.collect_json_from_dir", "file_handling.collect_json_from_dir", "file_handling.collect_neuralnets_from_subdir", "file_handling.collect_neuralnets_from_subdir", "print", "print", "print", "print", "multi_agent_systems.RemoteSystem", "multi_agent_systems.RemoteSystem.connect_sockets", "range", "print", "print", "multi_agent_systems.RemoteSystem.setup_session_key", "open", "json.load", "agent_info_json.values", "agent_secrets_json.values", "datetime.datetime.now", "multi_agent_systems.RemoteSystem.remote_interaction", "multi_agent_systems.RemoteSystem.authenticate_remote_agents", "datetime.datetime.now", "start_datetime_list.append", "end_datetime_list.append", "str", "str", "datetime.datetime.strftime", "datetime.datetime.strftime"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_json_from_dir", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_json_from_dir", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_neuralnets_from_subdir", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_neuralnets_from_subdir", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.connect_sockets", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.setup_session_key", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.remote_interaction", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.authenticate_remote_agents"], ["def", "run_agent", "(", ")", ":", "\n", "\n", "# Retrieve system json file ", "\n", "    ", "with", "open", "(", "\"system_settings.txt\"", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "system_settings", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# Retrieve agent-specific and shared secrets files", "\n", "", "group_size", "=", "system_settings", "[", "'group_size'", "]", "\n", "\n", "path_agent_files", "=", "system_settings", "[", "'path_agent_files'", "]", "\n", "path_shared_secrets", "=", "system_settings", "[", "'path_shared_secrets'", "]", "\n", "path_neuralnet_models", "=", "system_settings", "[", "'path_neuralnet_models'", "]", "\n", "path_secret_neuralnets", "=", "system_settings", "[", "'path_secret_neuralnets'", "]", "\n", "\n", "\n", "# Collect json objects for agents and for shared secrets", "\n", "agents_json", "=", "collect_json_from_dir", "(", "path_agent_files", ",", "num_files", "=", "1", ")", "\n", "agent_group_id", "=", "agents_json", "[", "0", "]", "[", "'group_id'", "]", "# get id from agent info file", "\n", "\n", "shared_secrets_json", "=", "collect_json_from_dir", "(", "path_shared_secrets", ",", "num_files", "=", "1", ")", "\n", "\n", "# unwrap this agent's json info/secrets objects from list", "\n", "agent_info_json", "=", "agents_json", "[", "0", "]", "\n", "agent_secrets_json", "=", "shared_secrets_json", "[", "0", "]", "\n", "\n", "# Collect available neural net agent models from nested subdir", "\n", "# List will contain -1 if statedict file not listed in directory", "\n", "agent_model_subdir", "=", "'agent'", "+", "str", "(", "agent_group_id", ")", "+", "'_neuralnet_models'", "\n", "subdir_path", "=", "path_neuralnet_models", "+", "'/'", "+", "agent_model_subdir", "\n", "model_statedicts", "=", "collect_neuralnets_from_subdir", "(", "subdir_path", ",", "group_size", ")", "\n", "\n", "# Collect available neural net shared secrets from nested subdirs", "\n", "agent_secret_subdir", "=", "'agent'", "+", "str", "(", "agent_group_id", ")", "+", "'_secret_models'", "\n", "subdir_path", "=", "path_secret_neuralnets", "+", "'/'", "+", "agent_secret_subdir", "\n", "secret_statedicts", "=", "collect_neuralnets_from_subdir", "(", "subdir_path", ",", "group_size", ")", "\n", "\n", "# Print all retrieved objects", "\n", "print", "(", "\"\\nagent_info_json: \"", ",", "agent_info_json", ".", "values", "(", ")", ")", "\n", "print", "(", "\"\\nagent_secrets_json: \"", ",", "agent_secrets_json", ".", "values", "(", ")", ")", "\n", "print", "(", "\"\\nmodel_statedicts: \"", ",", "model_statedicts", ")", "\n", "print", "(", "\"\\nsecret_statedicts: \"", ",", "secret_statedicts", ")", "\n", "\n", "\n", "# Create remote system using system settings", "\n", "remote_system", "=", "RemoteSystem", "(", "system_settings", ",", "\n", "agent_info_json", ",", "agent_secrets_json", ",", "\n", "model_statedicts", ",", "secret_statedicts", ")", "\n", "\n", "# Set up socket conn between this agent and other remote agents", "\n", "remote_system", ".", "connect_sockets", "(", "agent_info_json", ",", "network_protocol", "=", "'tcp'", ")", "\n", "\n", "\n", "num_interactions", "=", "100", "\n", "elapsed_time_list", ",", "start_datetime_list", ",", "end_datetime_list", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_interactions", ")", ":", "\n", "#print(\"\\ni: \", i)", "\n", "\n", "# Start datetime", "\n", "        ", "start_datetime", "=", "datetime", ".", "now", "(", ")", "\n", "\n", "# Perform interaction process with other remote agents", "\n", "(", "_", ",", "_", ",", "_", ")", "=", "remote_system", ".", "remote_interaction", "(", ")", "\n", "\n", "# Have agent authenticate other remote agents", "\n", "remote_system", ".", "authenticate_remote_agents", "(", "agent_info_json", ")", "\n", "\n", "# End datetime", "\n", "end_datetime", "=", "datetime", ".", "now", "(", ")", "\n", "\n", "# Record time in lists", "\n", "start_datetime_list", ".", "append", "(", "datetime", ".", "strftime", "(", "start_datetime", ",", "'%Y-%m-%d %H:%M:%S:%f'", ")", ")", "\n", "end_datetime_list", ".", "append", "(", "datetime", ".", "strftime", "(", "end_datetime", ",", "'%Y-%m-%d %H:%M:%S:%f'", ")", ")", "\n", "\n", "\n", "#sprint(\"\\nelapsed_time_list: \", elapsed_time_list)", "\n", "", "print", "(", "\"\\nstart_datetime_list: \"", ",", "start_datetime_list", ")", "\n", "print", "(", "\"\\nend_datetime_list: \"", ",", "end_datetime_list", ")", "\n", "\n", "\n", "#return # REMOVE AFTER TIME TESTING", "\n", "\n", "# Have agent generate session key(s)", "\n", "remote_system", ".", "setup_session_key", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.run.run": [[9, 154], ["cli.arg_parser", "str", "str", "str", "str", "file_handling.collect_json_from_dir", "file_handling.collect_json_from_dir", "range", "file_handling.collect_neuralnets_from_dir", "range", "file_handling.collect_neuralnets_from_dir", "print", "range", "print", "range", "multi_agent_systems.DecentralizedSystem.print_info", "multi_agent_systems.DecentralizedSystem.print_info", "agent_model_subdirs.append", "agent_secret_subdirs.append", "print", "print", "len", "print", "len", "print", "multi_agent_systems.CentralizedSystem", "multi_agent_systems.DecentralizedSystem", "multi_agent_systems.DecentralizedSystem.setup_socket_info", "multi_agent_systems.DecentralizedSystem.print_info", "remote_envs_setup.RemoteEnvsSetup", "remote_envs_setup.RemoteEnvsSetup.create_settings_file", "remote_envs_setup.RemoteEnvsSetup.remove_remote_directories", "remote_envs_setup.RemoteEnvsSetup.build_remote_directories", "remote_envs_setup.RemoteEnvsSetup.send_required_files", "remote_envs_setup.RemoteEnvsSetup.install_required_pylibs", "remote_envs_setup.RemoteEnvsSetup.run_agents_remotely", "multi_agent_systems.DecentralizedLocalSystem.local_interaction", "multi_agent_systems.DecentralizedLocalSystem.authenticate_local_agents", "print", "range", "multi_agent_systems.DecentralizedLocalSystem.setup_session_key", "print", "agent.values", "secret.values", "multi_agent_systems.CentralizedLocalSystem", "multi_agent_systems.DecentralizedLocalSystem", "print", "range", "range", "print", "print", "print", "print", "print", "str", "str", "print", "print", "print", "print"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.cli.arg_parser", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_json_from_dir", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_json_from_dir", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_neuralnets_from_dir", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_neuralnets_from_dir", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.MultiAgentSystem.print_info", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.MultiAgentSystem.print_info", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedSystem.setup_socket_info", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.MultiAgentSystem.print_info", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.create_settings_file", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.remove_remote_directories", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.build_remote_directories", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.send_required_files", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.install_required_pylibs", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_agents_remotely", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedLocalSystem.local_interaction", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.DecentralizedLocalSystem.authenticate_local_agents", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.multi_agent_systems.RemoteSystem.setup_session_key"], ["def", "run", "(", ")", ":", "\n", "    ", "\"\"\"Create local multi-agent system and run agents in remote envs.\"\"\"", "\n", "args", "=", "arg_parser", "(", ")", "\n", "\n", "# Set variables for multi-agent system", "\n", "system_type", "=", "str", "(", "args", ".", "system_type", ")", "\n", "group_size", "=", "args", ".", "group_size", "\n", "path_agent_files", "=", "str", "(", "args", ".", "path_agent_files", ")", "\n", "path_shared_secrets", "=", "str", "(", "args", ".", "path_shared_secrets", ")", "\n", "path_neuralnet_models", "=", "str", "(", "args", ".", "path_neuralnet_models", ")", "\n", "\n", "# Collect json objects for agents and for shared secrets", "\n", "agents_json", "=", "collect_json_from_dir", "(", "args", ".", "path_agent_files", ",", "group_size", ")", "\n", "\n", "shared_secrets_json", "=", "collect_json_from_dir", "(", "args", ".", "path_shared_secrets", ",", "group_size", ")", "\n", "\n", "# Collect available neural net agent models from nested subdirs", "\n", "# List will contain -1 if statedict file not listed in directory", "\n", "agent_model_subdirs", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "group_size", ")", ":", "\n", "        ", "agent_model_subdirs", ".", "append", "(", "'agent'", "+", "str", "(", "l", ")", "+", "'_neuralnet_models'", ")", "\n", "", "(", "agent_model_statedicts", ",", "_", ")", "=", "collect_neuralnets_from_dir", "(", "args", ".", "path_neuralnet_models", ",", "\n", "agent_model_subdirs", ",", "\n", "group_size", ")", "\n", "\n", "# Collect available neural net shared secrets from nested subdirs", "\n", "agent_secret_subdirs", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "group_size", ")", ":", "\n", "        ", "agent_secret_subdirs", ".", "append", "(", "'agent'", "+", "str", "(", "l", ")", "+", "'_secret_models'", ")", "\n", "", "(", "shared_secret_statedicts", ",", "_", ")", "=", "collect_neuralnets_from_dir", "(", "args", ".", "path_secret_neuralnets", ",", "\n", "agent_secret_subdirs", ",", "\n", "group_size", ")", "\n", "# Print all retrieved objects", "\n", "for", "agent", "in", "agents_json", ":", "\n", "        ", "print", "(", "\"\\nagent info: \"", ",", "agent", ".", "values", "(", ")", ")", "\n", "\n", "", "for", "secret", "in", "shared_secrets_json", ":", "\n", "        ", "print", "(", "\"\\nsecret info: \"", ",", "secret", ".", "values", "(", ")", ")", "\n", "\n", "", "print", "(", "\"\\nPrinting retrieved models:\"", ")", "\n", "for", "l", "in", "range", "(", "len", "(", "agent_model_statedicts", ")", ")", ":", "\n", "        ", "print", "(", "\"\\nl: \"", ",", "l", ")", "\n", "for", "m", "in", "agent_model_statedicts", "[", "l", "]", ":", "\n", "            ", "if", "m", "==", "-", "1", ":", "\n", "                ", "print", "(", "\"model: \"", ",", "m", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"model: \"", ",", "m", "[", "'model.0.weight'", "]", "[", "0", "]", ")", "\n", "\n", "", "", "", "print", "(", "\"\\nPrinting retrieved secrets:\"", ")", "\n", "for", "l", "in", "range", "(", "len", "(", "shared_secret_statedicts", ")", ")", ":", "\n", "        ", "print", "(", "\"\\nl: \"", ",", "l", ")", "\n", "for", "s", "in", "shared_secret_statedicts", "[", "l", "]", ":", "\n", "            ", "if", "s", "==", "-", "1", ":", "\n", "                ", "print", "(", "\"secret: \"", ",", "s", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"secret: \"", ",", "s", "[", "'model.0.weight'", "]", "[", "0", "]", ")", "\n", "\n", "# Create multi-agent system, along with agents", "\n", "", "", "", "if", "system_type", "==", "'centralized'", ":", "\n", "        ", "system", "=", "CentralizedSystem", "(", "group_size", ",", "agents_json", ",", "shared_secrets_json", ",", "\n", "agent_model_statedicts", ",", "shared_secret_statedicts", ")", "\n", "", "else", ":", "\n", "        ", "system", "=", "DecentralizedSystem", "(", "group_size", ",", "agents_json", ",", "shared_secrets_json", ",", "\n", "agent_model_statedicts", ",", "shared_secret_statedicts", ")", "\n", "\n", "# Print all agent's behavioural models and shared secrets", "\n", "", "system", ".", "print_info", "(", "'agent_model'", ")", "\n", "system", ".", "print_info", "(", "'agent_secrets'", ")", "\n", "\n", "\n", "if", "args", ".", "run_remotely", "==", "'yes'", ":", "\n", "\n", "# Set up socket information (ip address/port number) for the system", "\n", "        ", "system", ".", "setup_socket_info", "(", "path_agent_files", ")", "\n", "system", ".", "print_info", "(", "'agent_sockets'", ")", "\n", "\n", "\n", "# Prepare remote machines to run agents ", "\n", "remote_envs_setup", "=", "RemoteEnvsSetup", "(", "system", ",", "\n", "args", ".", "path_agent_files", ",", "args", ".", "path_shared_secrets", ",", "\n", "args", ".", "path_neuralnet_models", ",", "args", ".", "path_secret_neuralnets", ")", "\n", "\n", "# Create system settings file for remote system", "\n", "remote_envs_setup", ".", "create_settings_file", "(", "filename", "=", "'system_settings.txt'", ")", "\n", "\n", "# Clear remote machines of existing dir structure", "\n", "remote_envs_setup", ".", "remove_remote_directories", "(", ")", "\n", "\n", "# Build list of directories for remote dir structure", "\n", "remote_envs_setup", ".", "build_remote_directories", "(", "args", ".", "path_agent_files", ",", "args", ".", "path_shared_secrets", ",", "\n", "args", ".", "path_neuralnet_models", ",", "args", ".", "path_secret_neuralnets", ")", "\n", "\n", "# Send required root dir scripts, agent info files, and any neural net models", "\n", "root_dir_scripts", "=", "[", "'install_pylibs.sh'", ",", "'system_settings.txt'", ",", "'device_settings.py'", ",", "\n", "'agents.py'", ",", "'multi_agent_systems.py'", ",", "\n", "'network_functions.py'", ",", "'file_handling.py'", ",", "\n", "'run_virtual_agent.py'", ",", "'hyp_test.py'", ",", "\n", "'key_gen.py'", "]", "\n", "\n", "remote_envs_setup", ".", "send_required_files", "(", "root_dir_scripts", ",", "\n", "args", ".", "path_agent_files", ",", "args", ".", "path_shared_secrets", ",", "\n", "args", ".", "path_neuralnet_models", ",", "args", ".", "path_secret_neuralnets", ")", "\n", "\n", "# Install required python libaries on remote machines", "\n", "remote_envs_setup", ".", "install_required_pylibs", "(", "'install_pylibs.sh'", ")", "\n", "\n", "# Run agents on remote machines with run script", "\n", "remote_envs_setup", ".", "run_agents_remotely", "(", "'run_virtual_agent.py'", ")", "\n", "\n", "", "else", ":", "\n", "# Create multi-agent system entirely on local machine", "\n", "        ", "if", "args", ".", "system_type", "==", "'centralized'", ":", "\n", "            ", "local_system", "=", "CentralizedLocalSystem", "(", "system", ")", "\n", "", "else", ":", "\n", "            ", "local_system", "=", "DecentralizedLocalSystem", "(", "system", ")", "\n", "\n", "# Have agents in local system perform interaction process", "\n", "", "local_system", ".", "local_interaction", "(", ")", "\n", "\n", "# Have agents in local system perform authentication", "\n", "local_system", ".", "authenticate_local_agents", "(", ")", "\n", "\n", "print", "(", "\"\\nAuthentication results for all agents:\"", ")", "\n", "for", "l", "in", "range", "(", "group_size", ")", ":", "\n", "            ", "print", "(", "\"\\nagent \"", ",", "l", ",", "\": \"", ",", "local_system", ".", "system", ".", "agents_list", "[", "l", "]", ".", "auth_results", ")", "\n", "\n", "# Have agents in local system compute keys", "\n", "", "local_system", ".", "setup_session_key", "(", ")", "\n", "\n", "print", "(", "\"\\nKey agreement results for all agents: \"", ")", "\n", "\n", "if", "group_size", ">", "2", ":", "\n", "            ", "for", "l", "in", "range", "(", "group_size", ")", ":", "\n", "                ", "print", "(", "\"\\nagent \"", ",", "l", ",", "\": \"", ",", "local_system", ".", "system", ".", "agents_list", "[", "l", "]", ".", "group_key", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "cs_gid", "=", "local_system", ".", "central_server_group_id", "\n", "\n", "for", "l", "in", "range", "(", "group_size", ")", ":", "\n", "                ", "if", "l", "==", "cs_gid", ":", "\n", "                    ", "print", "(", "\"\\nCentral server mutual keys: \"", ")", "\n", "print", "(", "local_system", ".", "agents_list", "[", "cs_gid", "]", ".", "mutual_keys_list", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "\"\\nAgent mutual key:\"", ")", "\n", "print", "(", "local_system", ".", "agents_list", "[", "l", "]", ".", "mutual_key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.Agent.__init__": [[21, 25], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "type", ")", ":", "# noqa", "\n", "\n", "# Type can be 'PDT', 'RNN', or 'MLP'", "\n", "\t\t", "self", ".", "_type", "=", "type", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.Agent.act": [[26, 33], ["NotImplementedError"], "methods", ["None"], ["", "def", "act", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tSelect action.\n\n\t\tAll agents must implement an act() function.\n\t\t\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement act method.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.Agent.reset": [[34, 41], ["NotImplementedError"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tInitialize agent for interaction.\n\n\t\tAll agents must implement a reset() function.\n\t\t\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement reset method.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.Agent.dist": [[42, 49], ["NotImplementedError"], "methods", ["None"], ["", "def", "dist", "(", "self", ",", "inputs", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tGet agent's distribution over actions given inputs.\n\n\t\tAll agents must implement this function.\n\t\t\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"Agent must implement dist method.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.__init__": [[54, 68], ["len", "range", "agents.PDTNode._children.append", "agents.PDTNode"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "n_actions", ",", "subtree", ",", "index", "=", "0", ")", ":", "\n", "\n", "\t\t", "self", ".", "_visits", "=", "0", "# track number of times node is traversed over (and sampled from)", "\n", "self", ".", "_uses", "=", "0", "# track number of times node is used to sample from", "\n", "self", ".", "_label", "=", "None", "# label for visualizing PDT as graph", "\n", "\n", "self", ".", "_children", "=", "[", "]", "\n", "self", ".", "_index", "=", "index", "\n", "if", "len", "(", "subtree", ")", "==", "n_actions", "+", "1", ":", "\n", "\t\t\t", "self", ".", "_distribution", "=", "subtree", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "n_actions", "+", "1", ")", ":", "\n", "\t\t\t\t", "self", ".", "_children", ".", "append", "(", "PDTNode", "(", "n_actions", ",", "subtree", "[", "i", "]", ",", "index", "=", "0", ")", ")", "\n", "", "", "else", ":", "\n", "\t\t\t", "self", ".", "_distribution", "=", "subtree", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.__str__": [[69, 79], ["str", "str"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tString representation of PDTNode.\n\n\t\tReturns string of distribution followed by string rep of children.\n\t\t\"\"\"", "\n", "strrep", "=", "str", "(", "self", ".", "_distribution", ")", "+", "\"\\n\"", "\n", "for", "child", "in", "self", ".", "_children", ":", "\n", "\t\t\t", "strrep", "+=", "str", "(", "child", ")", "\n", "", "return", "strrep", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.sample": [[80, 84], ["torch.distributions.categorical.Categorical().sample().data.item", "torch.distributions.categorical.Categorical().sample().data.item", "torch.distributions.categorical.Categorical().sample", "torch.distributions.categorical.Categorical().sample", "torch.distributions.categorical.Categorical", "torch.distributions.categorical.Categorical"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.sample", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.sample"], ["", "def", "sample", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"Sample node distribution for [1,...,n_actions].\"\"\"", "\n", "\n", "return", "Categorical", "(", "self", ".", "_distribution", ")", ".", "sample", "(", ")", ".", "data", ".", "item", "(", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.has_children": [[85, 88], ["len"], "methods", ["None"], ["", "def", "has_children", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"Test if non-empty list of children.\"\"\"", "\n", "return", "len", "(", "self", ".", "_children", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.diff": [[90, 140], ["torch.isinf", "torch.isinf", "torch.isinf", "torch.isinf", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "agents.PDTNode.diff.replaceZerosInTensor"], "methods", ["None"], ["", "def", "diff", "(", "self", ",", "other", ")", ":", "\n", "\t\t", "\"\"\"KL between other pdt node and self.\n\t\t\n\t\tIn MLE Attack, the estimated tree often has probabilities of 0.0, which mess up KL-div calculation.\n\t\tReplace all probabilities of 0.0 with a small value near zero.\n\t\t\"\"\"", "\n", "\n", "def", "replaceZerosInTensor", "(", "input", ",", "num_actions", ",", "zero_approx", "=", "1e-12", ")", ":", "\n", "\t\t\t", "\"\"\"\n\t\t\tConvert all 0.0's in tensor to a zero-approximate value, while preserving any gradient. \n\n\t\t\tArgs:\n\t\t\tinput: tensor of dimension (num_actions)\n\t\t\tnum_actions: size of actions space and length of t\n\t\t\tzero_approx: float value such as: 1e-12\n\t\t\t\"\"\"", "\n", "if", "input", ".", "shape", "[", "0", "]", "!=", "num_actions", ":", "\n", "\t\t\t\t", "exit", "(", "\"Exiting in replaceZeroInTensor(): input.shape must be same as num_actions.\"", ")", "\n", "\n", "# Create buffer of same length as input", "\n", "", "zero_buffer", "=", "torch", ".", "zeros", "(", "num_actions", ")", "\n", "#print(\"initial zero_buffer: \", zero_buffer)", "\n", "\n", "for", "x", "in", "range", "(", "num_actions", ")", ":", "\n", "\t\t\t\t", "if", "input", "[", "x", "]", ".", "data", ".", "item", "(", ")", "==", "0", ":", "\n", "\t\t\t\t\t", "zero_buffer", "[", "x", "]", "=", "zero_approx", "\n", "\n", "#print(\"modified zero_buffer: \", zero_buffer)", "\n", "\n", "# Add input to zero_buffer to replace all zeros with zero-approximate value", "\n", "", "", "input", "=", "input", "+", "zero_buffer", "\n", "\n", "#print(\"modified input: \", input)", "\n", "return", "input", "\n", "\n", "# Replace any probabilities of value 0.0 with small value of 1e-12", "\n", "", "if", "0", "in", "other", ".", "_distribution", ":", "\n", "\t\t\t", "small_value", "=", "1e-12", "\n", "n_actions", "=", "other", ".", "_distribution", ".", "shape", "[", "0", "]", "\n", "q", "=", "replaceZerosInTensor", "(", "other", ".", "_distribution", ",", "n_actions", ",", "small_value", ")", "\n", "", "else", ":", "\n", "\t\t\t", "q", "=", "other", ".", "_distribution", "\n", "\n", "", "p", "=", "self", ".", "_distribution", "\n", "kl_div", "=", "(", "p", "*", "(", "p", "/", "q", ")", ".", "log", "(", ")", ")", ".", "sum", "(", ")", "\n", "\n", "if", "torch", ".", "isinf", "(", "kl_div", ")", ":", "\n", "\t\t\t", "exit", "(", "\"Exiting: kl divergence was inf in PDTNode.diff().\"", ")", "\n", "", "else", ":", "\n", "\t\t\t", "return", "kl_div", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.__init__": [[145, 164], ["agents.PDTNode", "sum", "collections.deque", "range"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "n_actions", ",", "depth", ",", "action_probs", ",", "window", "=", "1", ")", ":", "# noqa", "\n", "\t\t", "self", ".", "_type", "=", "\"pdt\"", "\n", "self", ".", "_max_node_visits", "=", "0", "# track highest number of traversals to/over any node", "\n", "self", ".", "_max_node_uses", "=", "0", "# track highest number of uses (sampling) for any node", "\n", "\n", "# print('Creating pdt with depth %d and window %d' % (depth, window))", "\n", "self", ".", "_num_actions", "=", "n_actions", "\n", "self", ".", "_depth", "=", "depth", "\n", "self", ".", "_window", "=", "window", "\n", "self", ".", "_root", "=", "PDTNode", "(", "n_actions", ",", "action_probs", ",", "index", "=", "0", ")", "\n", "self", ".", "_current_node", "=", "self", ".", "_root", "\n", "self", ".", "_num_nodes", "=", "sum", "(", "[", "n_actions", "**", "d", "for", "d", "in", "range", "(", "depth", "+", "1", ")", "]", ")", "\n", "\n", "# State records the history used to traverse the tree.", "\n", "# Only remembers fixed history of up to a given size.", "\n", "self", ".", "_state", "=", "deque", "(", "maxlen", "=", "window", ")", "\n", "\n", "# Record each history of actions and nodal dists", "\n", "self", ".", "_interaction_history", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.__str__": [[166, 168], ["str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "# noqa", "\n", "\t\t", "return", "str", "(", "self", ".", "_root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.record_node_visit": [[169, 180], ["agents.PDTAgent.update_max_node_visits"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.update_max_node_visits"], ["", "def", "record_node_visit", "(", "self", ",", "node", ")", ":", "\n", "#print(\"\\nInside record_node_visit with node: \", node)", "\n", "\t\t", "\"\"\"\n\t\tIncrement visit count if node is traversed to or traversed over.\n\t\t\n\t\tAlso update self _max_node_visits if need be.\n\t\t\"\"\"", "\n", "#print(\"node: \", node)", "\n", "\n", "node", ".", "_visits", "+=", "1", "\n", "self", ".", "update_max_node_visits", "(", "node", ".", "_visits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.record_node_use": [[181, 190], ["agents.PDTAgent.update_max_node_uses"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.update_max_node_uses"], ["", "def", "record_node_use", "(", "self", ",", "node", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tIncrement use count if node is sampled from.\n\t\tAlso update self _max_node_uses if need be. \"\"\"", "\n", "\n", "node", ".", "_uses", "+=", "1", "\n", "\n", "# Check if _max_node_uses needs to be updated", "\n", "self", ".", "update_max_node_uses", "(", "node", ".", "_uses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.update_max_node_visits": [[191, 196], ["None"], "methods", ["None"], ["", "def", "update_max_node_visits", "(", "self", ",", "updated_node_visits", ")", ":", "\n", "\t\t", "\"\"\"Update record of max node visits if need be.\"\"\"", "\n", "\n", "if", "updated_node_visits", ">", "self", ".", "_max_node_visits", ":", "\n", "\t\t\t", "self", ".", "_max_node_visits", "=", "updated_node_visits", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.update_max_node_uses": [[197, 202], ["None"], "methods", ["None"], ["", "", "def", "update_max_node_uses", "(", "self", ",", "updated_node_uses", ")", ":", "\n", "\t\t", "\"\"\"Update record of max node uses if need be.\"\"\"", "\n", "\n", "if", "updated_node_uses", ">", "self", ".", "_max_node_uses", ":", "\n", "\t\t\t", "self", ".", "_max_node_uses", "=", "updated_node_uses", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.reset": [[203, 206], ["agents.PDTAgent._state.clear"], "methods", ["None"], ["", "", "def", "reset", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"Reset before interaction.\"\"\"", "\n", "self", ".", "_state", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.act": [[207, 243], ["agents.PDTAgent.traverse_tree_nodes", "agents.PDTAgent.sample", "agents.PDTAgent.record_node_use", "agents.PDTAgent._interaction_history.append", "len", "agents.PDTAgent._state.clear", "agents.PDTAgent._interaction_history.clear", "agents.PDTAgent._state.extend"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.traverse_tree_nodes", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.sample", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_use"], ["", "def", "act", "(", "self", ",", "t", ",", "inputs", "=", "[", "]", ")", ":", "\n", "#print(\"\\nInside act() with t: \", t, \" and inputs: \", inputs)", "\n", "\t\t", "\"\"\"\n\t\tSelect action given time and inputs.\n\n\t\tArgs:\n\t\tt: int, current time-step\n\t\tinputs: list of ints, past decisions to condtion action selection on.\n\n\t\tReturns:\n\t\tA tuple as (sampled action, nodal distribution)\n\t\t\"\"\"", "\n", "assert", "t", ">=", "0", ",", "\"act() requires t >= 0\"", "\n", "\n", "# Update state history", "\n", "if", "len", "(", "inputs", ")", "==", "0", ":", "\n", "# If no input then clear state of model.", "\n", "\t\t\t", "self", ".", "_state", ".", "clear", "(", ")", "\n", "\n", "# Clear existing interaction history", "\n", "self", ".", "_interaction_history", ".", "clear", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "_state", ".", "extend", "(", "inputs", ")", "\n", "\n", "# Traverse tree based on state", "\n", "", "final_node", "=", "self", ".", "traverse_tree_nodes", "(", "self", ".", "_state", ")", "\n", "\n", "sampled_action", "=", "final_node", ".", "sample", "(", ")", "\n", "\n", "# Update record of uses for this node", "\n", "self", ".", "record_node_use", "(", "final_node", ")", "\n", "\n", "# Update current interaction history with tuple", "\n", "self", ".", "_interaction_history", ".", "append", "(", "(", "sampled_action", ",", "final_node", ".", "_distribution", ")", ")", "\n", "\n", "return", "(", "sampled_action", ",", "final_node", ".", "_distribution", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.traverse_tree_nodes": [[244, 280], ["agents.PDTAgent.record_node_visit", "len", "current_subtree.has_children", "agents.PDTAgent.record_node_visit", "type", "agents.PDTAgent.record_node_visit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_visit", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.has_children", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_visit", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_visit"], ["", "def", "traverse_tree_nodes", "(", "self", ",", "inputs", ")", ":", "\n", "#print(\"\\nInside traverse_tree_nodes! with inputs: \", inputs)", "\n", "\t\t", "\"\"\"\n\t\tTraverse pdt to a leaf node using given history.\n\t\tRecord traversals over and to nodes. \n\n\t\tArgs:\n\t\tinputs: list of ints, past decisions to condition action selection on.\n\n\t\tReturns:\n\t\tA torch.Tensor\n\t\t\"\"\"", "\n", "# Start with the main tree", "\n", "current_subtree", "=", "self", ".", "_root", "\n", "self", ".", "record_node_visit", "(", "self", ".", "_root", ")", "\n", "\n", "if", "len", "(", "inputs", ")", "==", "0", ":", "\n", "\t\t\t", "return", "self", ".", "_root", "\n", "# print(inputs, self._root._children)", "\n", "", "for", "current_decision", "in", "inputs", ":", "\n", "\n", "# in case the decision is still in the form [2] instead of just '2'", "\n", "\t\t\t", "if", "type", "(", "current_decision", ")", "==", "list", ":", "\n", "\t\t\t\t", "current_decision", "=", "current_decision", "[", "0", "]", "\n", "# If history exceeds depth of tree then we wrap back around to the root.", "\n", "", "if", "current_subtree", ".", "has_children", "(", ")", ":", "\n", "\t\t\t\t", "current_subtree", "=", "current_subtree", ".", "_children", "[", "current_decision", "-", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "record_node_visit", "(", "self", ".", "_root", ")", "\n", "current_subtree", "=", "self", ".", "_root", ".", "_children", "[", "current_decision", "-", "1", "]", "# if at a leaf, traverse from root", "\n", "\n", "# Record the traversal to or over this node", "\n", "", "self", ".", "record_node_visit", "(", "current_subtree", ")", "\n", "\n", "", "self", ".", "_current_node", "=", "current_subtree", "\n", "return", "current_subtree", "# we have traversed down, so return the subtree we've come to", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.dist": [[281, 294], ["agents.PDTAgent.traverse_tree_nodes", "len", "agents.PDTAgent._state.clear", "agents.PDTAgent._state.extend"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.traverse_tree_nodes"], ["", "def", "dist", "(", "self", ",", "t", ",", "inputs", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "\"\"\"Get distribution over actions given inputs.\"\"\"", "\n", "\n", "# Update state history", "\n", "if", "len", "(", "inputs", ")", "==", "0", ":", "\n", "# If no input then clear state of model.", "\n", "\t\t\t", "self", ".", "_state", ".", "clear", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "_state", ".", "extend", "(", "inputs", ")", "\n", "\n", "# Traverse tree based on state", "\n", "", "leaf_node", "=", "self", ".", "traverse_tree_nodes", "(", "self", ".", "_state", ")", "\n", "return", "leaf_node", ".", "_distribution", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.diff": [[295, 311], ["len", "nodes.pop", "other_nodes.pop", "nodes.pop.diff", "nodes.pop.has_children", "nodes.extend", "other_nodes.extend"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.diff", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.has_children"], ["", "def", "diff", "(", "self", ",", "other_pdt", ")", ":", "\n", "\t\t", "\"\"\"Compute KL between other pdt and self.\"\"\"", "\n", "nodes", "=", "[", "self", ".", "_root", "]", "\n", "other_nodes", "=", "[", "other_pdt", ".", "_root", "]", "\n", "total", "=", "0.0", "\n", "ct", "=", "0", "\n", "while", "len", "(", "nodes", ")", ">", "0", ":", "\n", "\t\t\t", "node", "=", "nodes", ".", "pop", "(", ")", "\n", "other", "=", "other_nodes", ".", "pop", "(", ")", "\n", "ct", "+=", "1", "\n", "total", "+=", "node", ".", "diff", "(", "other", ")", "\n", "if", "node", ".", "has_children", "(", ")", ":", "\n", "\t\t\t\t", "nodes", ".", "extend", "(", "node", ".", "_children", ")", "\n", "other_nodes", ".", "extend", "(", "other", ".", "_children", ")", "\n", "\n", "", "", "return", "total", "/", "ct", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.current_as_vector": [[312, 327], ["numpy.zeros"], "methods", ["None"], ["", "def", "current_as_vector", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tReturn last node to be traversed to as 1-hot vector.\n\n\t\tExample: current node has index 1 and tree has 4 nodes\n\t\t>>> self.current_as_vector()\n\t\tnp.array([0, 1, 0, 0])\n\n\t\tReturns:\n\t\tnp.array with shape (num_nodes,)\n\t\t\"\"\"", "\n", "index", "=", "self", ".", "_current_node", ".", "_index", "\n", "vec", "=", "np", ".", "zeros", "(", "self", ".", "_num_nodes", ")", "\n", "vec", "[", "index", "]", "=", "1.0", "\n", "return", "vec", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.build_pdt_graph": [[328, 385], ["node.has_children", "str", "agents.PDTAgent.node", "agents.PDTAgent.edge", "agents.PDTAgent.build_pdt_graph", "labels.pop", "agents.PDTAgent.illumination_color", "agents.PDTAgent.illumination_color", "str", "agents.PDTAgent.node", "labels.pop", "agents.PDTAgent.illumination_color", "agents.PDTAgent.illumination_color", "str", "str", "str", "str", "str", "str", "agents.tensorToPylist", "agents.tensorToPylist", "str", "str", "agents.tensorToPylist", "agents.tensorToPylist"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.has_children", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.build_pdt_graph", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.illumination_color", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.illumination_color", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.illumination_color", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.illumination_color", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.tensorToPylist", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.tensorToPylist", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.tensorToPylist", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.tensorToPylist"], ["", "def", "build_pdt_graph", "(", "self", ",", "node", ",", "dot", ",", "labels", ",", "by_visits", "=", "True", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tConstruct Digraph of PDT with nodes colored for illumination (by uses or visits).\n\t\t\n\t\tReturns filled Digraph dot object\n\n\t\tArgs: \n\t\tnode:   root node of self\n\t\tdot:    Digraph object from graphviz library\n\t\tlabels: list of characters, equal in length to total number of nodes in PDT\n\t\tby_visits: boolean is True to illuminate nodes by visits, or False for uses\n\t\t\"\"\"", "\n", "\n", "if", "node", ".", "has_children", "(", ")", ":", "\n", "\t\t\t", "my_label", "=", "str", "(", "labels", ".", "pop", "(", "0", ")", ")", "if", "node", ".", "_label", "is", "None", "else", "node", ".", "_label", "\n", "\n", "# Create node and label for self", "\n", "if", "node", ".", "_label", "is", "None", ":", "\n", "\n", "\t\t\t\t", "if", "by_visits", ":", "\n", "\t\t\t\t\t", "node_text", "=", "str", "(", "tensorToPylist", "(", "node", ".", "_distribution", ")", ")", "+", "\"\\n\"", "+", "str", "(", "node", ".", "_visits", ")", "+", "\" visits\"", "\n", "node_color", "=", "self", ".", "illumination_color", "(", "node", ".", "_visits", ",", "self", ".", "_max_node_visits", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "node_text", "=", "str", "(", "tensorToPylist", "(", "node", ".", "_distribution", ")", ")", "+", "\"\\n\"", "+", "str", "(", "node", ".", "_uses", ")", "+", "\" uses\"", "\n", "node_color", "=", "self", ".", "illumination_color", "(", "node", ".", "_uses", ",", "self", ".", "_max_node_uses", ")", "\n", "\n", "", "dot", ".", "node", "(", "my_label", ",", "node_text", ",", "color", "=", "node_color", ")", "\n", "node", ".", "_label", "=", "my_label", "\n", "\n", "# Create node and label for all children", "\n", "", "for", "child", "in", "node", ".", "_children", ":", "\n", "\t\t\t\t", "child_label", "=", "str", "(", "labels", ".", "pop", "(", "0", ")", ")", "if", "child", ".", "_label", "is", "None", "else", "child", ".", "_label", "\n", "\n", "if", "child", ".", "_label", "is", "None", ":", "\n", "\n", "\t\t\t\t\t", "if", "by_visits", ":", "\n", "\t\t\t\t\t\t", "child_text", "=", "str", "(", "tensorToPylist", "(", "child", ".", "_distribution", ")", ")", "+", "\"\\n\"", "+", "str", "(", "child", ".", "_visits", ")", "+", "\" visits\"", "\n", "child_color", "=", "self", ".", "illumination_color", "(", "child", ".", "_visits", ",", "self", ".", "_max_node_visits", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "child_text", "=", "str", "(", "tensorToPylist", "(", "child", ".", "_distribution", ")", ")", "+", "\"\\n\"", "+", "str", "(", "child", ".", "_uses", ")", "+", "\" uses\"", "\n", "child_color", "=", "self", ".", "illumination_color", "(", "child", ".", "_uses", ",", "self", ".", "_max_node_uses", ")", "\n", "\n", "", "dot", ".", "node", "(", "child_label", ",", "child_text", ",", "color", "=", "child_color", ")", "\n", "child", ".", "_label", "=", "child_label", "\n", "\n", "# Create edge between self and child", "\n", "", "dot", ".", "edge", "(", "my_label", ",", "child_label", ")", "\n", "\n", "# Recursive call to check for grandchildren", "\n", "dot", "=", "self", ".", "build_pdt_graph", "(", "child", ",", "dot", ",", "labels", ",", "by_visits", ")", "\n", "\n", "# If child has depth of only 1 and on last child then return dot", "\n", "if", "node", ".", "_children", "[", "-", "1", "]", "==", "child", ":", "\n", "\t\t\t\t\t", "return", "dot", "\n", "\n", "", "", "", "else", ":", "\n", "\t\t\t", "return", "dot", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.illumination_color": [[386, 435], ["hex().replace", "int", "hex().replace", "float", "len", "len", "hex", "hex"], "methods", ["None"], ["", "", "def", "illumination_color", "(", "self", ",", "value", ",", "max_value", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tProvide a color in yellow-orange-red spectrum from ratio: value/max_value.\n\n\t\tArgs\n\t\tvalue: either a node's visits count or uses count\n\t\tmax_value: either _max_node_visits or _max_node_uses of self\n\t\t\"\"\"", "\n", "\n", "# Get each Red, Green, Blue value as 2-digit hex string", "\n", "\n", "# Red color is fixed at highest intensity of 255", "\n", "red_RGB", "=", "hex", "(", "255", ")", ".", "replace", "(", "'0x'", ",", "''", ")", "# get 'ff' from '0xff'", "\n", "\n", "# Blue color fixed at zero intensity", "\n", "blue_RGB", "=", "'00'", "# from '0x00'", "\n", "\n", "\n", "# Green color determines spectrum of yellow(green=255) - orange - red(green=0)", "\n", "\n", "# Example of RGB spectrum for Red", "\n", "#", "\n", "# Pure Red      | Pure Yellow", "\n", "#   ", "\n", "# Red = 255     | Red = 255", "\n", "# Blue = 0      | Blue = 0", "\n", "# Green = 0     | Green = 255", "\n", "\n", "# Determine how much green we need", "\n", "# For example, (1-95/100) is 0.05 so its close to red for high illumination", "\n", "ratio_of_green", "=", "1", "-", "float", "(", "value", "/", "max_value", ")", "\n", "\n", "# Compute value for Green we need", "\n", "# For example, (0.05*255) is Green=12, which is close to red", "\n", "green_RGB", "=", "int", "(", "ratio_of_green", "*", "255", ")", "\n", "\n", "# Convert to hex and strip leading '0x'", "\n", "green_RGB", "=", "hex", "(", "green_RGB", ")", ".", "replace", "(", "'0x'", ",", "''", ")", "\n", "\n", "# Pad Green hex value if less than 2 digits", "\n", "if", "len", "(", "green_RGB", ")", "<", "2", ":", "\n", "\t\t\t", "green_RGB", "+=", "'0'", "\n", "\n", "# Combine into three 2-digit hex characters for graphviz", "\n", "", "RGB_hex_str", "=", "'#'", "+", "red_RGB", "+", "green_RGB", "+", "blue_RGB", "# ie '#ff0000'", "\n", "\n", "assert", "len", "(", "RGB_hex_str", ")", "==", "7", ",", "\"Exiting in node_color(): len(RGB_hex_str) != 7.\"", "\n", "\n", "return", "RGB_hex_str", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.temperature": [[442, 446], ["None"], "methods", ["None"], ["", "@", "temperature", ".", "setter", "\n", "def", "temperature", "(", "self", ",", "t", ")", ":", "\n", "\t\t", "assert", "t", ">=", "0", ",", "\"Temperature must be non-negative.\"", "\n", "self", ".", "_temperature", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTAgent.get_properties": [[447, 450], ["None"], "methods", ["None"], ["", "def", "get_properties", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"Return properties needed to create random pdt from same distribution.\"\"\"", "\n", "return", "self", ".", "_num_actions", ",", "self", ".", "_depth", ",", "self", ".", "_window", ",", "self", ".", "_temperature", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.__init__": [[455, 480], ["agents.PDTNode", "sum", "agents.PDTMultiAgent.create_branch_codes", "collections.deque", "range"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.create_branch_codes"], ["def", "__init__", "(", "self", ",", "n_actions", ",", "n_other_agents", ",", "depth", ",", "action_probs", ",", "window", "=", "1", ")", ":", "# noqa", "\n", "\t\t", "self", ".", "_type", "=", "\"multitree\"", "\n", "self", ".", "_max_node_visits", "=", "0", "# track highest number of traversals to/over any node", "\n", "self", ".", "_max_node_uses", "=", "0", "# track highest number of uses (sampling) for any node", "\n", "\n", "# print('Creating pdt with depth %d and window %d' % (depth, window))", "\n", "self", ".", "_num_actions", "=", "n_actions", "# size of action space", "\n", "self", ".", "_num_other_agents", "=", "n_other_agents", "# number of agents which interact with self", "\n", "self", ".", "_n_branches", "=", "(", "n_actions", "**", "n_other_agents", ")", "# branches per node", "\n", "\n", "self", ".", "_depth", "=", "depth", "\n", "self", ".", "_window", "=", "window", "\n", "self", ".", "_root", "=", "PDTNode", "(", "n_actions", ",", "action_probs", ",", "index", "=", "0", ")", "\n", "self", ".", "_current_node", "=", "self", ".", "_root", "\n", "self", ".", "_num_nodes", "=", "sum", "(", "[", "n_actions", "**", "d", "for", "d", "in", "range", "(", "depth", "+", "1", ")", "]", ")", "\n", "\n", "# Set ordered branch codes used for multi-tree traversals", "\n", "self", ".", "_ordered_branch_codes", "=", "self", ".", "create_branch_codes", "(", "n_actions", ",", "n_other_agents", ")", "\n", "\n", "# State records the history used to traverse the tree.", "\n", "# Only remembers fixed history of up to a given size.", "\n", "self", ".", "_state", "=", "deque", "(", "maxlen", "=", "window", ")", "\n", "\n", "# Record each history of actions and nodal dists", "\n", "self", ".", "_interaction_history", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.__str__": [[481, 483], ["str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "# noqa", "\n", "\t\t", "return", "str", "(", "self", ".", "_root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_visit": [[484, 495], ["agents.PDTMultiAgent.update_max_node_visits"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.update_max_node_visits"], ["", "def", "record_node_visit", "(", "self", ",", "node", ")", ":", "\n", "#print(\"\\nInside record_node_visit with node: \", node)", "\n", "\t\t", "\"\"\"\n\t\tIncrement visit count if node is traversed to or traversed over.\n\t\t\n\t\tAlso update self _max_node_visits if need be.\n\t\t\"\"\"", "\n", "#print(\"node: \", node)", "\n", "\n", "node", ".", "_visits", "+=", "1", "\n", "self", ".", "update_max_node_visits", "(", "node", ".", "_visits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_use": [[496, 505], ["agents.PDTMultiAgent.update_max_node_uses"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.update_max_node_uses"], ["", "def", "record_node_use", "(", "self", ",", "node", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tIncrement use count if node is sampled from.\n\t\tAlso update self _max_node_uses if need be. \"\"\"", "\n", "\n", "node", ".", "_uses", "+=", "1", "\n", "\n", "# Check if _max_node_uses needs to be updated", "\n", "self", ".", "update_max_node_uses", "(", "node", ".", "_uses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.update_max_node_visits": [[506, 511], ["None"], "methods", ["None"], ["", "def", "update_max_node_visits", "(", "self", ",", "updated_node_visits", ")", ":", "\n", "\t\t", "\"\"\"Update record of max node visits if need be.\"\"\"", "\n", "\n", "if", "updated_node_visits", ">", "self", ".", "_max_node_visits", ":", "\n", "\t\t\t", "self", ".", "_max_node_visits", "=", "updated_node_visits", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.update_max_node_uses": [[512, 517], ["None"], "methods", ["None"], ["", "", "def", "update_max_node_uses", "(", "self", ",", "updated_node_uses", ")", ":", "\n", "\t\t", "\"\"\"Update record of max node uses if need be.\"\"\"", "\n", "\n", "if", "updated_node_uses", ">", "self", ".", "_max_node_uses", ":", "\n", "\t\t\t", "self", ".", "_max_node_uses", "=", "updated_node_uses", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.create_branch_codes": [[519, 551], ["range", "list", "itertools.product", "range"], "methods", ["None"], ["", "", "def", "create_branch_codes", "(", "self", ",", "n_actions", ",", "n_other_agents", ")", ":", "\n", "\t\t", "\"\"\"Set ordered list of input actions which map to multi-tree branches.\n\n\t\tArgs:\n\t\tn_actions: size of the action space, i.e. 3\n\t\tn_other_agents: number of other agents which interact with self, i.e. 2\n\n\t\tReturn: list of permutations \n\t\t\ti.e. [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3), (3, 1), (3, 2), (3, 3)]\n\t\t\"\"\"", "\n", "\n", "# Create action space", "\n", "action_space_list", "=", "range", "(", "1", ",", "n_actions", "+", "1", ")", "# i.e. [1,2,3]", "\n", "\n", "# Get ordered list of cartesian product of action space with itself", "\n", "action_space_sets", "=", "[", "action_space_list", "for", "_", "in", "range", "(", "n_other_agents", ")", "]", "\n", "\n", "# If 3 other agents, action_space_sets = [[1,2,3],[1,2,3],[1,2,3]]", "\n", "ordered_branch_codes", "=", "list", "(", "product", "(", "*", "action_space_sets", ")", ")", "\n", "\n", "\"\"\" \n\t\tExample with 3 other agents, action space list = [1,2,3]:\n\n\t\t[(1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 2, 1), (1, 2, 2), (1, 2, 3), \n\t\t(1, 3, 1), (1, 3, 2), (1, 3, 3), (2, 1, 1), (2, 1, 2), (2, 1, 3), \n\t\t(2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 3, 1), (2, 3, 2), (2, 3, 3), \n\t\t(3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 2, 1), (3, 2, 2), (3, 2, 3), \n\t\t(3, 3, 1), (3, 3, 2), (3, 3, 3)]\n\t\t\"\"\"", "\n", "\n", "# Return ordered list", "\n", "return", "ordered_branch_codes", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.convert_to_branch": [[552, 575], ["tuple", "agents.PDTMultiAgent._ordered_branch_codes.index"], "methods", ["None"], ["", "def", "convert_to_branch", "(", "self", ",", "traversal_actions", "=", "[", "]", ")", ":", "\n", "\t\t", "\"\"\"Convert provided ordered actions to a branching decision.\n\n\t\tArgs:\n\t\ttraversal_actions: list of ordered ints, i.e. [3,2]\n\n\t\tReturn integer action indicating which branch to take.\n\t\t\"\"\"", "\n", "\n", "# Convert traversal_actions to tuple", "\n", "perm_tuple", "=", "tuple", "(", "traversal_actions", "[", ":", "]", ")", "# i.e. (3,2)", "\n", "#print(\"perm_tuple: \", perm_tuple)", "\n", "\n", "# Map to a permutation in multi-tree's branch codes", "\n", "branch_index", "=", "self", ".", "_ordered_branch_codes", ".", "index", "(", "perm_tuple", ")", "\n", "\n", "# Example branch codes: [(1, 2), (1, 3), (2, 1), (2, 3), (3, 1), (3, 2)]", "\n", "\n", "# Adjust as multi-tree inputs begin with 1, not 0", "\n", "branch_decision", "=", "branch_index", "+", "1", "\n", "\n", "# Return branching decision", "\n", "return", "branch_decision", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.reset": [[577, 580], ["agents.PDTMultiAgent._state.clear"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"Reset before interaction.\"\"\"", "\n", "self", ".", "_state", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act": [[581, 624], ["agents.PDTMultiAgent.traverse_tree_nodes", "agents.PDTMultiAgent.sample", "agents.PDTMultiAgent.record_node_use", "agents.PDTMultiAgent._interaction_history.append", "len", "agents.PDTMultiAgent._state.clear", "agents.PDTMultiAgent._interaction_history.clear", "agents.PDTMultiAgent._state.extend", "agents.PDTMultiAgent.convert_to_branch"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.traverse_tree_nodes", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.sample", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_use", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.convert_to_branch"], ["", "def", "act", "(", "self", ",", "t", ",", "traversal_actions", "=", "[", "]", ")", ":", "\n", "#print(\"\\nInside act() with t: \", t, \" and traversal_actions: \", traversal_actions)", "\n", "\t\t", "\"\"\"\n\t\tConvert provided actions to branch code input.\n\t\tSelect action given time and  branch code input.\n\n\t\tArgs:\n\t\tt: int, current time-step\n\t\ttraversal_actions: list of ints, actions from other agents.\n\t\t\t\t\t\tEmpty list at t == 0.\n\t\t\t\t\t\tMust be converted to branch code.\n\n\t\tReturns:\n\t\tA tuple as (sampled action, nodal distribution)\n\t\t\"\"\"", "\n", "assert", "t", ">=", "0", ",", "\"act() requires t >= 0\"", "\n", "\n", "\n", "# Update state history", "\n", "if", "len", "(", "traversal_actions", ")", "==", "0", ":", "# empty at t == 0", "\n", "# If no input then clear state of model.", "\n", "\t\t\t", "self", ".", "_state", ".", "clear", "(", ")", "\n", "\n", "# Clear existing interaction history", "\n", "self", ".", "_interaction_history", ".", "clear", "(", ")", "\n", "", "else", ":", "\n", "# Convert inputs to branch code", "\n", "\t\t\t", "inputs", "=", "[", "self", ".", "convert_to_branch", "(", "traversal_actions", ")", "]", "# i.e. [5]", "\n", "\n", "self", ".", "_state", ".", "extend", "(", "inputs", ")", "\n", "\n", "# Traverse tree based on state", "\n", "", "final_node", "=", "self", ".", "traverse_tree_nodes", "(", "self", ".", "_state", ")", "\n", "\n", "sampled_action", "=", "final_node", ".", "sample", "(", ")", "\n", "\n", "# Update record of uses for this node", "\n", "self", ".", "record_node_use", "(", "final_node", ")", "\n", "\n", "# Update current interaction history with tuple", "\n", "self", ".", "_interaction_history", ".", "append", "(", "(", "sampled_action", ",", "final_node", ".", "_distribution", ")", ")", "\n", "\n", "return", "(", "sampled_action", ",", "final_node", ".", "_distribution", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.traverse_tree_nodes": [[625, 661], ["agents.PDTMultiAgent.record_node_visit", "len", "current_subtree.has_children", "agents.PDTMultiAgent.record_node_visit", "type", "agents.PDTMultiAgent.record_node_visit"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_visit", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.has_children", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_visit", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.record_node_visit"], ["", "def", "traverse_tree_nodes", "(", "self", ",", "inputs", ")", ":", "\n", "#print(\"\\nInside traverse_tree_nodes! with inputs: \", inputs)", "\n", "\t\t", "\"\"\"\n\t\tTraverse pdt to a leaf node using given history.\n\t\tRecord traversals over and to nodes. \n\n\t\tArgs:\n\t\tinputs: list of ints, past decisions to condition action selection on.\n\n\t\tReturns:\n\t\tA torch.Tensor\n\t\t\"\"\"", "\n", "# Start with the main tree", "\n", "current_subtree", "=", "self", ".", "_root", "\n", "self", ".", "record_node_visit", "(", "self", ".", "_root", ")", "\n", "\n", "if", "len", "(", "inputs", ")", "==", "0", ":", "\n", "\t\t\t", "return", "self", ".", "_root", "\n", "# print(inputs, self._root._children)", "\n", "", "for", "current_decision", "in", "inputs", ":", "\n", "\n", "# in case the decision is still in the form [2] instead of just '2'", "\n", "\t\t\t", "if", "type", "(", "current_decision", ")", "==", "list", ":", "\n", "\t\t\t\t", "current_decision", "=", "current_decision", "[", "0", "]", "\n", "# If history exceeds depth of tree then we wrap back around to the root.", "\n", "", "if", "current_subtree", ".", "has_children", "(", ")", ":", "\n", "\t\t\t\t", "current_subtree", "=", "current_subtree", ".", "_children", "[", "current_decision", "-", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "record_node_visit", "(", "self", ".", "_root", ")", "\n", "current_subtree", "=", "self", ".", "_root", ".", "_children", "[", "current_decision", "-", "1", "]", "# if at a leaf, traverse from root", "\n", "\n", "# Record the traversal to or over this node", "\n", "", "self", ".", "record_node_visit", "(", "current_subtree", ")", "\n", "\n", "", "self", ".", "_current_node", "=", "current_subtree", "\n", "return", "current_subtree", "# we have traversed down, so return the subtree we've come to", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.temperature": [[667, 671], ["None"], "methods", ["None"], ["", "@", "temperature", ".", "setter", "\n", "def", "temperature", "(", "self", ",", "t", ")", ":", "\n", "\t\t", "assert", "t", ">=", "0", ",", "\"Temperature must be non-negative.\"", "\n", "self", ".", "_temperature", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.get_properties": [[672, 675], ["None"], "methods", ["None"], ["", "def", "get_properties", "(", "self", ")", ":", "\n", "\t\t", "\"\"\"Return properties needed to create random pdt from same distribution.\"\"\"", "\n", "return", "self", ".", "_num_actions", ",", "self", ".", "_depth", ",", "self", ".", "_window", ",", "self", ".", "_temperature", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.generate_nodal_dist": [[677, 697], ["torch.softmax().to", "torch.softmax", "torch.rand", "torch.rand"], "function", ["None"], ["", "", "def", "generate_nodal_dist", "(", "n_children", ",", "temperature", ",", "small_value", ")", ":", "\n", "\t", "\"\"\"\n\tCreate a nodal probability distribution affected by temperature. \n\tEnsures no all values in dist > small_value.\n\n\tArgs:\n\tsmall_value: python float, ie 1e-20\n\t\"\"\"", "\n", "\n", "while", "(", "1", ")", ":", "\n", "\n", "# Generate a distribution affected by temperature", "\n", "\t\t", "nodal_dist", "=", "F", ".", "softmax", "(", "torch", ".", "rand", "(", "n_children", ")", "/", "temperature", ",", "dim", "=", "0", ")", ".", "to", "(", "device", ")", "\n", "#print(\"nodal_dist: \", nodal_dist, \" : \", (nodal_dist <= small_value))", "\n", "\n", "# If all items in distribution are > small_value, return the distribution", "\n", "if", "(", "nodal_dist", ">", "small_value", ")", ".", "all", "(", ")", ".", "data", ".", "item", "(", ")", ":", "\n", "\t\t\t", "break", "\n", "\n", "", "", "return", "nodal_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_multitree": [[701, 730], ["agents.generate_nodal_dist", "agents.PDTNode", "sum", "range", "PDTNode._children.append", "agents.create_random_multitree", "range"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.generate_nodal_dist", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_multitree"], ["def", "create_random_multitree", "(", "depth", ",", "n_children", ",", "n_actions", ",", "index", "=", "0", ",", "temperature", "=", "1.0", ")", ":", "\n", "\t", "\"\"\"\n\tGenerate random multi-agent PDT with specified depth and branching factor.\n\tNote that size of nodal dists may not match number of children per node.\n\n\tArgs:\n\tdepth: int, depth of tree.\n\tn_children: int, number of children at each node.\n\tn_actions:, int, size of the action space, i.e. 3\n\tindex: int, id for root node.\n\ttemperature: float, controls entropy of distribution\n\t\t> 1.0 is more random, < 1.0 is more deterministic.\n\n\tReturns:\n\troot: PDTNode, root of PDT of specified depth and width.\n\t\"\"\"", "\n", "nodal_dist", "=", "generate_nodal_dist", "(", "n_actions", ",", "temperature", ",", "small_value", "=", "1e-20", ")", "\n", "root", "=", "PDTNode", "(", "n_children", ",", "nodal_dist", ")", "\n", "\n", "# Recursively create each of children if required.", "\n", "if", "depth", ">", "0", ":", "\n", "\t\t", "n_in_subtree", "=", "sum", "(", "[", "n_children", "**", "i", "for", "i", "in", "range", "(", "depth", ")", "]", ")", "\n", "for", "j", "in", "range", "(", "n_children", ")", ":", "\n", "\t\t\t", "ind", "=", "index", "+", "1", "+", "(", "n_in_subtree", ")", "*", "j", "\n", "root", ".", "_children", ".", "append", "(", "\n", "create_random_multitree", "(", "depth", "-", "1", ",", "n_children", ",", "n_actions", ",", "\n", "index", "=", "ind", ",", "temperature", "=", "temperature", ")", "\n", ")", "\n", "", "", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_pdt": [[732, 765], ["agents.generate_nodal_dist", "agents.PDTNode", "sum", "range", "PDTNode._children.append", "agents.create_random_pdt", "range"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.generate_nodal_dist", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_pdt"], ["", "def", "create_random_pdt", "(", "depth", ",", "n_children", ",", "index", "=", "0", ",", "temperature", "=", "1.0", ")", ":", "\n", "\t", "\"\"\"\n\tGenerate random PDT with specified depth and branching factor.\n\n\tArgs:\n\tdepth: int, depth of tree.\n\tn_children: int, number of children at each node.\n\tindex: int, id for root node.\n\ttemperature: float, controls entropy of distribution\n\t\t> 1.0 is more random, < 1.0 is more deterministic.\n\n\tReturns:\n\troot: PDTNode, root of PDT of specified depth and width.\n\t\"\"\"", "\n", "\n", "# Version 1: Create PDTNode with no children as root", "\n", "#root = PDTNode(n_children, F.softmax(torch.rand(n_children) / temperature, dim=0).to(device))", "\n", "\n", "# Version 2: Creat PDTNode with no children as root (ensure no very small values)", "\n", "nodal_dist", "=", "generate_nodal_dist", "(", "n_children", ",", "temperature", ",", "small_value", "=", "1e-20", ")", "\n", "root", "=", "PDTNode", "(", "n_children", ",", "nodal_dist", ")", "\n", "\n", "# Recursively create each of children if required.", "\n", "if", "depth", ">", "0", ":", "\n", "\t\t", "n_in_subtree", "=", "sum", "(", "[", "n_children", "**", "i", "for", "i", "in", "range", "(", "depth", ")", "]", ")", "\n", "for", "j", "in", "range", "(", "n_children", ")", ":", "\n", "\t\t\t", "ind", "=", "index", "+", "1", "+", "(", "n_in_subtree", ")", "*", "j", "\n", "root", ".", "_children", ".", "append", "(", "\n", "create_random_pdt", "(", "\n", "depth", "-", "1", ",", "n_children", ",", "index", "=", "ind", ",", "temperature", "=", "temperature", "\n", ")", "\n", ")", "\n", "", "", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_pdt_agent": [[767, 787], ["agents.PDTAgent", "agents.create_random_pdt"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_pdt"], ["", "def", "create_random_pdt_agent", "(", "depth", ",", "n_actions", ",", "window", "=", "1", ",", "temperature", "=", "1.0", ")", ":", "\n", "\t", "\"\"\"\n\tGenerate random PDT agent with specified depth and branching factor.\n\n\tArgs:\n\tdepth: int, depth of tree.\n\tn_actions: int, number of children at each node.\n\ttemperature: float, controls entropy of distribution\n\t\t> 1.0 is more random, < 1.0 is more deterministic.\n\n\tReturns:\n\tagent: PDTAgent, PDTAgent using PDT with specified properties.\n\t\"\"\"", "\n", "agent", "=", "PDTAgent", "(", "n_actions", ",", "depth", ",", "[", "]", ",", "window", ")", "\n", "root", "=", "create_random_pdt", "(", "depth", ",", "n_actions", ",", "temperature", "=", "temperature", ")", "\n", "agent", ".", "_root", "=", "root", "\n", "\n", "# Set temperature to be able to create similar models if loaded from file.", "\n", "agent", ".", "temperature", "=", "temperature", "\n", "return", "agent", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_pdt_multiagent": [[788, 821], ["agents.PDTMultiAgent", "agents.create_random_multitree"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_multitree"], ["", "def", "create_random_pdt_multiagent", "(", "depth", ",", "n_actions", ",", "n_other_agents", ",", "\n", "window", "=", "1", ",", "temperature", "=", "1.0", ")", ":", "\n", "\t", "\"\"\"\n\tGenerate random multi-tree PDT agent with specific properties.\n\tCapable of interacting with multiple other agents.\n\n\tArgs:\n\tdepth: int, depth of tree.\n\tn_actions: int, size of action space\n\ttemperature: float, controls entropy of distribution\n\t\t> 1.0 is more random, < 1.0 is more deterministic.\n\tn_other_agents: int, number of other agents which interact\n\t\t\t\t\twith this agent\n\n\tReturns:\n\tagent: PDTMultiAgent using multi-tree with specified properties.\n\tn_other_agents: number of agents which provided action input to this multitree \n\t\"\"\"", "\n", "\n", "\n", "# Create class object ", "\n", "agent", "=", "PDTMultiAgent", "(", "n_actions", ",", "n_other_agents", ",", "depth", ",", "[", "]", ",", "window", ")", "\n", "\n", "# Assign pdt to root node", "\n", "n_branches", "=", "n_actions", "**", "n_other_agents", "\n", "\n", "root", "=", "create_random_multitree", "(", "depth", ",", "n_children", "=", "n_branches", ",", "\n", "n_actions", "=", "n_actions", ",", "\n", "temperature", "=", "temperature", ")", "\n", "agent", ".", "_root", "=", "root", "\n", "agent", ".", "temperature", "=", "temperature", "\n", "\n", "return", "agent", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.print_pdt": [[823, 839], ["node.has_children", "print", "print", "agents.print_pdt"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTNode.has_children", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.print_pdt"], ["", "def", "print_pdt", "(", "node", ")", ":", "\n", "\t", "\"\"\"\n\tPrint tree of up to depth 2.\n\t\n\tArgs:\n\tnode: the root PDTnode of a PDTAgent\n\t\"\"\"", "\n", "\n", "if", "node", ".", "has_children", "(", ")", ":", "\n", "\t\t", "print", "(", "\"\\na root: \"", ",", "node", ".", "_distribution", ",", "\" visits:%d uses:%d\"", "%", "(", "node", ".", "_visits", ",", "node", ".", "_uses", ")", ")", "\n", "\n", "for", "child", "in", "node", ".", "_children", ":", "\n", "\t\t\t", "print_pdt", "(", "child", ")", "\n", "\n", "", "", "else", ":", "\n", "\t\t", "print", "(", "\"\\tleaf: \"", ",", "node", ".", "_distribution", ",", "\" visits:%d uses:%d\"", "%", "(", "node", ".", "_visits", ",", "node", ".", "_uses", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.tensorToPylist": [[840, 847], ["numpy.around", "list", "numpy.array", "tensor_list.tolist"], "function", ["None"], ["", "", "def", "tensorToPylist", "(", "tensor_list", ")", ":", "\n", "\t", "\"\"\"Convert tensor list to python list, rounded to 0.2f\"\"\"", "\n", "\n", "np_list", "=", "np", ".", "around", "(", "np", ".", "array", "(", "tensor_list", ".", "tolist", "(", ")", ")", ",", "2", ")", "\n", "py_list", "=", "list", "(", "np_list", ")", "\n", "\n", "return", "py_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.test_PDTMultiAgent": [[848, 872], ["agents.create_random_pdt_multiagent", "print", "print", "create_random_pdt_multiagent.act", "print", "create_random_pdt_multiagent.act", "print", "create_random_pdt_multiagent.act", "print"], "function", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.create_random_pdt_multiagent", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.agents.PDTMultiAgent.act"], ["", "def", "test_PDTMultiAgent", "(", ")", ":", "\n", "\t", "\"\"\"Test PDTMultiAgent methods.\"\"\"", "\n", "\n", "# Define variables", "\n", "n_actions", "=", "3", "\n", "n_other_agents", "=", "2", "\n", "depth", "=", "1", "\n", "window", "=", "1", "\n", "\n", "# Create object", "\n", "agent", "=", "create_random_pdt_multiagent", "(", "depth", ",", "n_actions", ",", "n_other_agents", ",", "\n", "window", ",", "temperature", "=", "1.0", ")", "\n", "print", "(", "\"\\npdt multi-agent: \"", ",", "agent", ")", "\n", "print", "(", "\"\\n ordered_branch_codes: \"", ",", "agent", ".", "_ordered_branch_codes", ")", "\n", "\n", "# Traverse", "\n", "a0", "=", "agent", ".", "act", "(", "t", "=", "0", ",", "traversal_actions", "=", "[", "]", ")", "\n", "print", "(", "\"a0: \"", ",", "a0", ")", "\n", "\n", "a1", "=", "agent", ".", "act", "(", "t", "=", "1", ",", "traversal_actions", "=", "[", "3", ",", "2", "]", ")", "# branch 8", "\n", "print", "(", "\"a1: \"", ",", "a1", ")", "\n", "\n", "a2", "=", "agent", ".", "act", "(", "t", "=", "2", ",", "traversal_actions", "=", "[", "1", ",", "3", "]", ")", "# branch 3", "\n", "print", "(", "\"a2: \"", ",", "a2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.__init__": [[12, 25], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "local_system", ",", "\n", "path_agent_files", ",", "path_shared_secrets", ",", "\n", "path_neuralnet_models", ",", "path_secret_neuralnets", ")", ":", "\n", "        ", "\"\"\"Store local multi-agent system.\"\"\"", "\n", "\n", "# Set variables", "\n", "self", ".", "local_system", "=", "local_system", "\n", "self", ".", "num_remote_envs", "=", "local_system", ".", "group_size", "# corresponds to num agents", "\n", "\n", "self", ".", "path_agent_files", "=", "path_agent_files", "\n", "self", ".", "path_shared_secrets", "=", "path_shared_secrets", "\n", "self", ".", "path_neuralnet_models", "=", "path_neuralnet_models", "\n", "self", ".", "path_secret_neuralnets", "=", "path_secret_neuralnets", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_ssh_subprocess": [[27, 38], ["subprocess.Popen", "subprocess.Popen.wait", "print", "print", "subprocess.Popen.stdout.readlines", "subprocess.Popen.stderr.readlines", "str"], "methods", ["None"], ["", "def", "run_ssh_subprocess", "(", "self", ",", "ipaddr", ",", "cmd", ")", ":", "\n", "        ", "\"\"\"Subprocess to ssh into specific machine and execute command.\"\"\"", "\n", "\n", "ssh_subproc", "=", "Popen", "(", "[", "\"ssh\"", ",", "\"-q\"", ",", "stricthostkeycheck_flag", ",", "\n", "str", "(", "ipaddr", ")", ",", "cmd", "]", ",", "stdout", "=", "PIPE", ",", "stderr", "=", "PIPE", ")", "\n", "\n", "# Wait for subprocess to complete", "\n", "ssh_subproc", ".", "wait", "(", ")", "\n", "\n", "print", "(", "\"\\nssh_subproc stdout: \"", ",", "ssh_subproc", ".", "stdout", ".", "readlines", "(", ")", ")", "\n", "print", "(", "\"\\nssh_subproc stderr: \"", ",", "ssh_subproc", ".", "stderr", ".", "readlines", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.begin_ssh_subprocess": [[39, 49], ["subprocess.Popen", "str"], "methods", ["None"], ["", "def", "begin_ssh_subprocess", "(", "self", ",", "ipaddr", ",", "cmd", ",", "file_obj_tuple", ")", ":", "\n", "        ", "\"\"\"Begin and return ssh subprocess without waiting for completion.\"\"\"", "\n", "\n", "# Get variables", "\n", "(", "fout", ",", "ferr", ")", "=", "file_obj_tuple", "\n", "ssh_subproc", "=", "Popen", "(", "[", "\"ssh\"", ",", "\"-q\"", ",", "stricthostkeycheck_flag", ",", "\n", "str", "(", "ipaddr", ")", ",", "cmd", "]", ",", "stdout", "=", "fout", ",", "stderr", "=", "ferr", ")", "#stdout=PIPE, stderr=PIPE)", "\n", "\n", "# Return subproc", "\n", "return", "ssh_subproc", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess": [[50, 69], ["print", "subprocess.Popen", "subprocess.Popen.communicate", "print", "print", "str"], "methods", ["None"], ["", "def", "run_scp_subprocess", "(", "self", ",", "files_list", ",", "dest", ")", ":", "\n", "        ", "\"\"\"\n        Subprocess to scp transfer provided file(s) to remote machine.\n\n        Args:\n        file_list: list of file names for transfer\n        dest: destination on remote machine, i.e. '12.34.56:dir1/'\n        \"\"\"", "\n", "\n", "args_list", "=", "[", "\"scp\"", ",", "\"-q\"", ",", "stricthostkeycheck_flag", "]", "+", "files_list", "[", ":", "]", "+", "[", "str", "(", "dest", ")", "]", "\n", "print", "(", "\"\\nargs_list: \"", ",", "args_list", ")", "\n", "\n", "scp_subproc", "=", "Popen", "(", "args_list", ",", "stdout", "=", "PIPE", ",", "stderr", "=", "PIPE", ")", "\n", "\n", "# Wait for subprocess to complete and return info", "\n", "(", "scp_stdout", ",", "scp_stderr", ")", "=", "scp_subproc", ".", "communicate", "(", ")", "\n", "\n", "print", "(", "\"\\nscp_stdout: \"", ",", "scp_stdout", ")", "\n", "print", "(", "\"\\nscp_stderr: \"", ",", "scp_stderr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.send_required_files": [[71, 156], ["print", "print", "list", "print", "remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess", "print", "remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess", "print", "remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess", "os.listdir", "os.listdir.sort", "print", "os.listdir", "os.listdir.sort", "print", "str", "list.append", "remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess", "list.append", "remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_scp_subprocess"], ["", "def", "send_required_files", "(", "self", ",", "root_dir_scripts", ",", "\n", "path_agent_files", ",", "path_shared_secrets", ",", "\n", "path_neuralnet_models", ",", "path_secret_neuralnets", ")", ":", "\n", "        ", "\"\"\"\n        Send agent-specific scripts, info files, and agent models to all remote machines.\n\n        Args:\n        root_dir_scripts: list of local scripts in root dir\n        \"\"\"", "\n", "print", "(", "\"\\nInside send_required_scripts!\"", ")", "\n", "\n", "for", "agent", "in", "self", ".", "local_system", ".", "agents_list", ":", "\n", "            ", "print", "(", "\"\\nOn agent id: \"", ",", "agent", ".", "group_id", ")", "\n", "\n", "# 1. Send local scripts in root dir to remote root dir", "\n", "\n", "dest", "=", "str", "(", "agent", ".", "ipaddr", ")", "+", "':~'", "\n", "files_list", "=", "list", "(", "root_dir_scripts", ")", "\n", "print", "(", "\"1. files_list: \"", ",", "files_list", ")", "\n", "\n", "# example dest: '12.34.56:~'", "\n", "\n", "self", ".", "run_scp_subprocess", "(", "files_list", ",", "dest", ")", "\n", "\n", "\n", "# 2. Send agent info file", "\n", "dest", "=", "str", "(", "agent", ".", "ipaddr", ")", "+", "':'", "+", "path_agent_files", "+", "'/'", "\n", "files_list", "=", "[", "path_agent_files", "+", "'/agent'", "+", "str", "(", "agent", ".", "group_id", ")", "+", "'_info.txt'", "]", "\n", "print", "(", "\"2. files_list: \"", ",", "files_list", ")", "\n", "\n", "# example dest: '12.34.56:agent_info_files/'", "\n", "# example files_list: ['agent_info_files/agent0_info.txt']", "\n", "\n", "self", ".", "run_scp_subprocess", "(", "files_list", ",", "dest", ")", "\n", "\n", "\n", "# 3. Send agent secrets file", "\n", "dest", "=", "str", "(", "agent", ".", "ipaddr", ")", "+", "':'", "+", "path_shared_secrets", "+", "'/'", "\n", "files_list", "=", "[", "path_shared_secrets", "+", "'/agent'", "+", "str", "(", "agent", ".", "group_id", ")", "+", "'_secrets.txt'", "]", "\n", "print", "(", "\"3. files_list: \"", ",", "files_list", ")", "\n", "\n", "# example dest: '12.34.56:shared_secret_files/'", "\n", "# example files_list: ['shared_secret_files/agent0_secrets.txt']", "\n", "\n", "self", ".", "run_scp_subprocess", "(", "files_list", ",", "dest", ")", "\n", "\n", "\n", "# 4. Send agent neural net behavioral models", "\n", "dest", "=", "str", "(", "agent", ".", "ipaddr", ")", "+", "':'", "+", "path_neuralnet_models", "+", "'/'", "\n", "\n", "# get behavioral model neural net .pth file names", "\n", "agent_model_subdir", "=", "'agent'", "+", "str", "(", "agent", ".", "group_id", ")", "+", "'_neuralnet_models'", "\n", "\n", "# example path: 'agent_neuralnet_models/agent0_neuralnet_models'", "\n", "neuralnet_filenames", "=", "os", ".", "listdir", "(", "path_neuralnet_models", "+", "'/'", "+", "agent_model_subdir", ")", "\n", "neuralnet_filenames", ".", "sort", "(", ")", "# i.e. ['agent1.pth', 'agent2.pth']", "\n", "\n", "files_list", "=", "[", "]", "\n", "for", "neural_net", "in", "neuralnet_filenames", ":", "\n", "# example: 'agent_neuralnet_models/agent0_neuralnet_models/agent1.pth'", "\n", "                ", "files_list", ".", "append", "(", "path_neuralnet_models", "+", "'/'", "+", "agent_model_subdir", "+", "'/'", "+", "str", "(", "neural_net", ")", ")", "\n", "", "print", "(", "\"4. files_list: \"", ",", "files_list", ")", "\n", "\n", "# if files collected, send them", "\n", "if", "files_list", ":", "self", ".", "run_scp_subprocess", "(", "files_list", ",", "dest", ")", "\n", "\n", "\n", "# 5. Send agent neural net shared secret models", "\n", "dest", "=", "str", "(", "agent", ".", "ipaddr", ")", "+", "':'", "+", "path_secret_neuralnets", "+", "'/'", "\n", "\n", "# get shared secret neural net model .pth file names", "\n", "agent_secret_subdir", "=", "'agent'", "+", "str", "(", "agent", ".", "group_id", ")", "+", "'_secret_models'", "\n", "\n", "# example path: 'secret_neuralnet_models/agent0_secret_models'", "\n", "neuralnet_filenames", "=", "os", ".", "listdir", "(", "path_secret_neuralnets", "+", "'/'", "+", "agent_secret_subdir", ")", "\n", "neuralnet_filenames", ".", "sort", "(", ")", "# i.e. ['agent1.pth', 'agent2.pth']", "\n", "\n", "files_list", "=", "[", "]", "\n", "for", "neural_net", "in", "neuralnet_filenames", ":", "\n", "# example: 'secret_neuralnet_models/agent0_secret_models/agent1.pth'", "\n", "                ", "files_list", ".", "append", "(", "path_secret_neuralnets", "+", "'/'", "+", "agent_secret_subdir", "+", "'/'", "+", "str", "(", "neural_net", ")", ")", "\n", "", "print", "(", "\"5. files_list: \"", ",", "files_list", ")", "\n", "\n", "# if files collected, send them", "\n", "if", "files_list", ":", "self", ".", "run_scp_subprocess", "(", "files_list", ",", "dest", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.remove_remote_directories": [[158, 170], ["print", "print", "remote_envs_setup.RemoteEnvsSetup.run_ssh_subprocess"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_ssh_subprocess"], ["", "", "def", "remove_remote_directories", "(", "self", ")", ":", "\n", "        ", "\"\"\"Clear all dir structure on all remote machines.\"\"\"", "\n", "print", "(", "\"\\nInside remove_remote_directories!\"", ")", "\n", "\n", "for", "agent", "in", "self", ".", "local_system", ".", "agents_list", ":", "\n", "            ", "print", "(", "\"\\nOn agent id: \"", ",", "agent", ".", "group_id", ")", "\n", "\n", "# Build command to clear home directory", "\n", "cmd", "=", "'rm -rf ./*'", "\n", "\n", "# Now run subprocess on remote env", "\n", "self", ".", "run_ssh_subprocess", "(", "agent", ".", "ipaddr", ",", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.build_remote_directories": [[171, 197], ["print", "print", "file_handling.collect_local_dir_names", "print", "remote_envs_setup.RemoteEnvsSetup.run_ssh_subprocess", "str"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.file_handling.collect_local_dir_names", "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_ssh_subprocess"], ["", "", "def", "build_remote_directories", "(", "self", ",", "path_agent_files", ",", "path_shared_secrets", ",", "\n", "path_neuralnet_models", ",", "path_secret_neuralnets", ")", ":", "\n", "        ", "\"\"\"Replicate local dir structure on all remote machines.\"\"\"", "\n", "print", "(", "\"\\nInside build_remote_directories!\"", ")", "\n", "\n", "for", "agent", "in", "self", ".", "local_system", ".", "agents_list", ":", "\n", "            ", "print", "(", "\"\\nOn agent id: \"", ",", "agent", ".", "group_id", ")", "\n", "\n", "# Get list of dirs/subdirs names for this agent", "\n", "dirs_list", "=", "collect_local_dir_names", "(", "agent", ".", "group_id", ",", "\n", "path_agent_files", ",", "\n", "path_shared_secrets", ",", "\n", "path_neuralnet_models", ",", "\n", "path_secret_neuralnets", ")", "\n", "print", "(", "\"dirs_list: \"", ",", "dirs_list", ")", "\n", "\n", "# Build list of commands to make all dirs", "\n", "cmd", "=", "''", "\n", "for", "dir", "in", "dirs_list", ":", "\n", "                ", "cmd", "+=", "'mkdir '", "+", "str", "(", "dir", ")", "+", "';'", "\n", "\n", "", "cmd", "=", "cmd", "[", ":", "-", "1", "]", "# remove trailing semicolon", "\n", "# Example: cmd='mkdir agent_info_files; mkdir shared_secret_files; ...'", "\n", "\n", "# Now run the subprocess on remote env", "\n", "self", ".", "run_ssh_subprocess", "(", "agent", ".", "ipaddr", ",", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.install_required_pylibs": [[198, 218], ["print", "str", "print", "remote_envs_setup.RemoteEnvsSetup.run_ssh_subprocess", "str"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_ssh_subprocess"], ["", "", "def", "install_required_pylibs", "(", "self", ",", "install_script", ")", ":", "\n", "        ", "\"\"\"\n        Run subprocess to load required py libraries on remote machines.\n\n        Args:\n        install_script: name of bash script for loading py libs\n        \"\"\"", "\n", "print", "(", "\"\\nInside install_required_pylibs!\"", ")", "\n", "\n", "# Build cmd to run install script", "\n", "cmd", "=", "\"chmod 700 \"", "+", "str", "(", "install_script", ")", "+", "\";\"", "\n", "cmd", "+=", "\" sudo ./\"", "+", "str", "(", "install_script", ")", "\n", "\n", "# example cmd: \"chmod 700 install.sh; sudo ./install.sh\"", "\n", "\n", "# Run subprocess for all agent remote machines", "\n", "for", "agent", "in", "self", ".", "local_system", ".", "agents_list", ":", "\n", "            ", "print", "(", "\"\\nOn agent id: \"", ",", "agent", ".", "group_id", ")", "\n", "\n", "self", ".", "run_ssh_subprocess", "(", "agent", ".", "ipaddr", ",", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.run_agents_remotely": [[220, 305], ["print", "range", "zip", "print", "print", "print", "print", "print", "str", "open", "open", "output_obj_list.append", "range", "print", "remote_envs_setup.RemoteEnvsSetup.begin_ssh_subprocess", "ssh_subproc_list.append", "time.sleep", "open.close", "open.close", "p.poll", "p.poll", "p.poll", "str", "str"], "methods", ["home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.begin_ssh_subprocess"], ["", "", "def", "run_agents_remotely", "(", "self", ",", "run_script", ")", ":", "\n", "        ", "\"\"\"\n        Run agents simultaneously until all have completed their lifecycle.\n        \n        Return list of (fout,ferr) files for each agent subprocess.\n\n        Args:\n        run_script: Name of script to run agent lifecycle.\n        \"\"\"", "\n", "print", "(", "\"\\nInside run_agents_remotely!\"", ")", "\n", "\n", "# Build cmd to run script, i.e. \"python3 run_virtual_agent.py\"", "\n", "cmd", "=", "\"python3 \"", "+", "str", "(", "run_script", ")", "\n", "\n", "# Store subprocess for each agent", "\n", "ssh_subproc_list", "=", "[", "]", "\n", "output_obj_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "local_system", ".", "group_size", ")", ":", "\n", "            ", "fout", "=", "open", "(", "'file_out_'", "+", "str", "(", "i", ")", "+", "'.txt'", ",", "'w'", ")", "\n", "ferr", "=", "open", "(", "'file_err_'", "+", "str", "(", "i", ")", "+", "'.txt'", ",", "'w'", ")", "\n", "output_obj_list", ".", "append", "(", "(", "fout", ",", "ferr", ")", ")", "\n", "\n", "# Begin each agent subprocess and allow them to run simultaneously", "\n", "", "for", "(", "agent", ",", "id", ")", "in", "zip", "(", "self", ".", "local_system", ".", "agents_list", ",", "range", "(", "self", ".", "local_system", ".", "group_size", ")", ")", ":", "\n", "            ", "print", "(", "\"\\nOn agent id: \"", ",", "agent", ".", "group_id", ")", "\n", "\n", "# Start each subprocess", "\n", "(", "fout", ",", "ferr", ")", "=", "output_obj_list", "[", "id", "]", "\n", "ssh_subproc", "=", "self", ".", "begin_ssh_subprocess", "(", "agent", ".", "ipaddr", ",", "cmd", ",", "(", "fout", ",", "ferr", ")", ")", "\n", "\n", "# Store subprocess for later", "\n", "ssh_subproc_list", ".", "append", "(", "ssh_subproc", ")", "\n", "\n", "# Buffer each subproc by 1 second to allow for setup", "\n", "time", ".", "sleep", "(", "2", ")", "\n", "\n", "# Print poll codes right when subprocs released", "\n", "", "print", "(", "\"\\nPoll code 0: complete with no error.\"", ")", "\n", "print", "(", "\"Poll code 1: complete with error.\"", ")", "\n", "print", "(", "\"Poll code None: incomplete, still running.\"", ")", "\n", "\n", "print", "(", "\"\\nCurrent poll codes: \"", ",", "[", "p", ".", "poll", "(", ")", "for", "p", "in", "ssh_subproc_list", "]", ")", "\n", "\n", "# Wait until all simultaneous subprocesses have finished", "\n", "counter", "=", "0", "\n", "while", "(", "1", ")", ":", "\n", "            ", "all_subproc_finished", "=", "True", "\n", "\n", "for", "p", "in", "ssh_subproc_list", ":", "\n", "\n", "# poll() == 0 means: complete with no errors", "\n", "# poll() == 1 means: complete with errors", "\n", "# poll() == None means: still running", "\n", "\n", "                ", "if", "p", ".", "poll", "(", ")", "==", "None", ":", "\n", "                    ", "all_subproc_finished", "=", "False", "\n", "\n", "", "", "if", "all_subproc_finished", "==", "True", ":", "\n", "                ", "break", "\n", "\n", "", "counter", "+=", "1", "\n", "\n", "", "print", "(", "\"\\nAll subprocesses finished: \"", ",", "[", "p", ".", "poll", "(", ")", "for", "p", "in", "ssh_subproc_list", "]", ")", "\n", "\n", "# Close subprocess files", "\n", "for", "file_tuple", "in", "output_obj_list", ":", "\n", "            ", "(", "fout", ",", "ferr", ")", "=", "file_tuple", "\n", "fout", ".", "close", "(", ")", "\n", "ferr", ".", "close", "(", ")", "\n", "\n", "# Print subprocess return", "\n", "", "'''num_subproc = len(ssh_subproc_list)\n        for (subproc, index) in zip(ssh_subproc_list, range(num_subproc)):\n\n            print(\"\\n\\n\\n\\n------------------------subproc stdout: %d\" % (index))\n            for line in subproc.stdout.readlines():\n                print(line)\n\n            print(\"\\nsubproc stderr:\")\n            for line in subproc.stderr.readlines():\n                print(line)'''", "\n", "\n", "# Return (fout,ferr) files list", "\n", "return", "output_obj_list", "\n", "\n"]], "home.repos.pwc.inspect_result.uoe-agents_PyAMI.None.remote_envs_setup.RemoteEnvsSetup.create_settings_file": [[306, 327], ["open", "json.dump", "str"], "methods", ["None"], ["", "def", "create_settings_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"Create system settings file for remote system use.\"\"\"", "\n", "\n", "# Create json dict with settings of local system", "\n", "sys_settings", "=", "{", "}", "\n", "\n", "sys_settings", "[", "'system_type'", "]", "=", "self", ".", "local_system", ".", "system_type", "\n", "sys_settings", "[", "'group_size'", "]", "=", "self", ".", "local_system", ".", "group_size", "\n", "sys_settings", "[", "'max_interaction_length'", "]", "=", "self", ".", "local_system", ".", "max_interaction_length", "\n", "\n", "if", "self", ".", "local_system", ".", "system_type", "==", "'centralized'", ":", "\n", "            ", "sys_settings", "[", "'central_server_group_id'", "]", "=", "self", ".", "local_system", ".", "central_server_group_id", "\n", "\n", "", "sys_settings", "[", "'path_agent_files'", "]", "=", "self", ".", "path_agent_files", "\n", "sys_settings", "[", "'path_shared_secrets'", "]", "=", "self", ".", "path_shared_secrets", "\n", "sys_settings", "[", "'path_neuralnet_models'", "]", "=", "self", ".", "path_neuralnet_models", "\n", "sys_settings", "[", "'path_secret_neuralnets'", "]", "=", "self", ".", "path_secret_neuralnets", "\n", "\n", "# Open file with specified file name and dump json dict", "\n", "with", "open", "(", "str", "(", "filename", ")", ",", "\"w\"", ")", "as", "outfile", ":", "\n", "            ", "json", ".", "dump", "(", "sys_settings", ",", "outfile", ",", "indent", "=", "4", ")", "\n", "\n"]]}