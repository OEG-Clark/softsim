{"home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphConvolution.__init__": [[16, 36], ["torch.nn.modules.module.Module.__init__", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "gnn_layers.GraphConvolution.register_parameter", "print", "gnn_layers.GraphConvolution.reset_parameters_uniform", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "print", "gnn_layers.GraphConvolution.reset_parameters_xavier", "print", "gnn_layers.GraphConvolution.reset_parameters_kaiming"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphConvolution.reset_parameters_uniform", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphConvolution.reset_parameters_xavier", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphConvolution.reset_parameters_kaiming"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ",", "init", "=", "'xavier'", ")", ":", "\n", "        ", "super", "(", "GraphConvolution", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "out_features", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "", "if", "init", "==", "'uniform'", ":", "\n", "            ", "print", "(", "\"| Uniform Initialization\"", ")", "\n", "self", ".", "reset_parameters_uniform", "(", ")", "\n", "", "elif", "init", "==", "'xavier'", ":", "\n", "            ", "print", "(", "\"| Xavier Initialization\"", ")", "\n", "self", ".", "reset_parameters_xavier", "(", ")", "\n", "", "elif", "init", "==", "'kaiming'", ":", "\n", "            ", "print", "(", "\"| Kaiming Initialization\"", ")", "\n", "self", ".", "reset_parameters_kaiming", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphConvolution.reset_parameters_uniform": [[37, 42], ["gnn_layers.GraphConvolution.weight.data.uniform_", "math.sqrt", "gnn_layers.GraphConvolution.bias.data.uniform_", "gnn_layers.GraphConvolution.weight.size"], "methods", ["None"], ["", "", "def", "reset_parameters_uniform", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphConvolution.reset_parameters_xavier": [[43, 47], ["torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "", "def", "reset_parameters_xavier", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "weight", ".", "data", ",", "gain", "=", "0.02", ")", "# Implement Xavier Uniform", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphConvolution.reset_parameters_kaiming": [[48, 52], ["torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "", "def", "reset_parameters_kaiming", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "weight", ".", "data", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphConvolution.forward": [[53, 60], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "adj", ")", ":", "\n", "        ", "support", "=", "torch", ".", "mm", "(", "input", ",", "self", ".", "weight", ")", "\n", "output", "=", "torch", ".", "spmm", "(", "adj", ",", "support", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "return", "output", "+", "self", ".", "bias", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphConvolution.__repr__": [[61, 65], ["str", "str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "' ('", "+", "str", "(", "self", ".", "in_features", ")", "+", "' -> '", "+", "str", "(", "self", ".", "out_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphAttention.__init__": [[72, 85], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "dropout", ",", "alpha", ",", "concat", "=", "True", ")", ":", "\n", "        ", "super", "(", "GraphAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "concat", "=", "concat", "\n", "\n", "self", ".", "W", "=", "nn", ".", "Parameter", "(", "nn", ".", "init", ".", "xavier_normal_", "(", "torch", ".", "Tensor", "(", "in_features", ",", "out_features", ")", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "torch", ".", "FloatTensor", ")", ",", "gain", "=", "np", ".", "sqrt", "(", "2.0", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "a1", "=", "nn", ".", "Parameter", "(", "nn", ".", "init", ".", "xavier_normal_", "(", "torch", ".", "Tensor", "(", "out_features", ",", "1", ")", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "torch", ".", "FloatTensor", ")", ",", "gain", "=", "np", ".", "sqrt", "(", "2.0", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "a2", "=", "nn", ".", "Parameter", "(", "nn", ".", "init", ".", "xavier_normal_", "(", "torch", ".", "Tensor", "(", "out_features", ",", "1", ")", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "torch", ".", "FloatTensor", ")", ",", "gain", "=", "np", ".", "sqrt", "(", "2.0", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n", "self", ".", "leakyrelu", "=", "nn", ".", "LeakyReLU", "(", "self", ".", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphAttention.forward": [[86, 104], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "gnn_layers.GraphAttention.leakyrelu", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.softmax", "torch.softmax", "torch.softmax", "torch.dropout", "torch.dropout", "torch.dropout", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.mm.size", "torch.mm.size", "torch.mm.size", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.elu", "torch.elu", "torch.elu", "torch.matmul.transpose", "torch.matmul.transpose", "torch.matmul.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "adj", ")", ":", "\n", "        ", "h", "=", "torch", ".", "mm", "(", "input", ",", "self", ".", "W", ")", "\n", "N", "=", "h", ".", "size", "(", ")", "[", "0", "]", "\n", "\n", "f_1", "=", "torch", ".", "matmul", "(", "h", ",", "self", ".", "a1", ")", "\n", "f_2", "=", "torch", ".", "matmul", "(", "h", ",", "self", ".", "a2", ")", "\n", "e", "=", "self", ".", "leakyrelu", "(", "f_1", "+", "f_2", ".", "transpose", "(", "0", ",", "1", ")", ")", "\n", "\n", "zero_vec", "=", "-", "9e15", "*", "torch", ".", "ones_like", "(", "e", ")", "\n", "attention", "=", "torch", ".", "where", "(", "adj", ">", "0", ",", "e", ",", "zero_vec", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "attention", ",", "dim", "=", "1", ")", "\n", "attention", "=", "F", ".", "dropout", "(", "attention", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "h_prime", "=", "torch", ".", "matmul", "(", "attention", ",", "h", ")", "\n", "\n", "if", "self", ".", "concat", ":", "\n", "            ", "return", "F", ".", "elu", "(", "h_prime", ")", "\n", "", "else", ":", "\n", "            ", "return", "h_prime", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.gnn_layers.GraphAttention.__repr__": [[105, 107], ["str", "str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "' ('", "+", "str", "(", "self", ".", "in_features", ")", "+", "' -> '", "+", "str", "(", "self", ".", "out_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.Protocol_Embedding.__init__": [[99, 108], ["torch.nn.Sequential.__init__", "torch.nn.Linear", "torch.nn.Linear", "protocol_encode.Protocol_Embedding.to"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "output_dim", ",", "highway_num", ",", "device", ")", ":", "\n", "\t\t", "super", "(", "Protocol_Embedding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_dim", "=", "768", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "self", ".", "highway_num", "=", "highway_num", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "input_dim", "*", "2", ",", "output_dim", ")", "\n", "self", ".", "f", "=", "F", ".", "relu", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.Protocol_Embedding.forward_single": [[109, 118], ["inclusion_feature.to.to.to", "exclusion_feature.to.to.to", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "inclusion_vec.view.view.view", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "exclusion_vec.view.view.view"], "methods", ["None"], ["", "def", "forward_single", "(", "self", ",", "inclusion_feature", ",", "exclusion_feature", ")", ":", "\n", "## inclusion_feature, exclusion_feature: xxx,768 ", "\n", "\t\t", "inclusion_feature", "=", "inclusion_feature", ".", "to", "(", "self", ".", "device", ")", "\n", "exclusion_feature", "=", "exclusion_feature", ".", "to", "(", "self", ".", "device", ")", "\n", "inclusion_vec", "=", "torch", ".", "mean", "(", "inclusion_feature", ",", "0", ")", "\n", "inclusion_vec", "=", "inclusion_vec", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "exclusion_vec", "=", "torch", ".", "mean", "(", "exclusion_feature", ",", "0", ")", "\n", "exclusion_vec", "=", "exclusion_vec", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "return", "inclusion_vec", ",", "exclusion_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.Protocol_Embedding.forward": [[119, 128], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "protocol_encode.Protocol_Embedding.f", "protocol_encode.Protocol_Embedding.forward_single", "protocol_encode.Protocol_Embedding.fc"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward_single"], ["", "def", "forward", "(", "self", ",", "in_ex_feature", ")", ":", "\n", "\t\t", "result", "=", "[", "self", ".", "forward_single", "(", "in_mat", ",", "ex_mat", ")", "for", "in_mat", ",", "ex_mat", "in", "in_ex_feature", "]", "\n", "inclusion_mat", "=", "[", "in_vec", "for", "in_vec", ",", "ex_vec", "in", "result", "]", "\n", "inclusion_mat", "=", "torch", ".", "cat", "(", "inclusion_mat", ",", "0", ")", "#### 32,768", "\n", "exclusion_mat", "=", "[", "ex_vec", "for", "in_vec", ",", "ex_vec", "in", "result", "]", "\n", "exclusion_mat", "=", "torch", ".", "cat", "(", "exclusion_mat", ",", "0", ")", "#### 32,768 ", "\n", "protocol_mat", "=", "torch", ".", "cat", "(", "[", "inclusion_mat", ",", "exclusion_mat", "]", ",", "1", ")", "\n", "output", "=", "self", ".", "f", "(", "self", ".", "fc", "(", "protocol_mat", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.Protocol_Embedding.embedding_size": [[129, 132], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "embedding_size", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "output_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.clean_protocol": [[18, 26], ["protocol.lower.lower", "protocol.lower.split", "list", "list", "x.strip", "filter", "map", "len", "x.strip"], "function", ["None"], ["def", "clean_protocol", "(", "protocol", ")", ":", "\n", "\t", "protocol", "=", "protocol", ".", "lower", "(", ")", "\n", "protocol_split", "=", "protocol", ".", "split", "(", "'\\n'", ")", "\n", "filter_out_empty_fn", "=", "lambda", "x", ":", "len", "(", "x", ".", "strip", "(", ")", ")", ">", "0", "\n", "strip_fn", "=", "lambda", "x", ":", "x", ".", "strip", "(", ")", "\n", "protocol_split", "=", "list", "(", "filter", "(", "filter_out_empty_fn", ",", "protocol_split", ")", ")", "\n", "protocol_split", "=", "list", "(", "map", "(", "strip_fn", ",", "protocol_split", ")", ")", "\n", "return", "protocol_split", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.get_all_protocols": [[27, 33], ["open", "list", "csv.reader"], "function", ["None"], ["", "def", "get_all_protocols", "(", ")", ":", "\n", "\t", "input_file", "=", "'data/raw_data.csv'", "\n", "with", "open", "(", "input_file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "protocols", "=", "[", "row", "[", "9", "]", "for", "row", "in", "rows", "]", "\n", "return", "protocols", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.split_protocol": [[34, 54], ["protocol_encode.clean_protocol", "enumerate", "enumerate", "len", "len", "len", "print", "exit", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.clean_protocol"], ["", "def", "split_protocol", "(", "protocol", ")", ":", "\n", "\t", "protocol_split", "=", "clean_protocol", "(", "protocol", ")", "\n", "inclusion_idx", ",", "exclusion_idx", "=", "len", "(", "protocol_split", ")", ",", "len", "(", "protocol_split", ")", "\n", "for", "idx", ",", "sentence", "in", "enumerate", "(", "protocol_split", ")", ":", "\n", "\t\t", "if", "\"inclusion\"", "in", "sentence", ":", "\n", "\t\t\t", "inclusion_idx", "=", "idx", "\n", "break", "\n", "", "", "for", "idx", ",", "sentence", "in", "enumerate", "(", "protocol_split", ")", ":", "\n", "\t\t", "if", "\"exclusion\"", "in", "sentence", ":", "\n", "\t\t\t", "exclusion_idx", "=", "idx", "\n", "break", "\n", "", "", "if", "inclusion_idx", "+", "1", "<", "exclusion_idx", "+", "1", "<", "len", "(", "protocol_split", ")", ":", "\n", "\t\t", "inclusion_criteria", "=", "protocol_split", "[", "inclusion_idx", ":", "exclusion_idx", "]", "\n", "exclusion_criteria", "=", "protocol_split", "[", "exclusion_idx", ":", "]", "\n", "if", "not", "(", "len", "(", "inclusion_criteria", ")", ">", "0", "and", "len", "(", "exclusion_criteria", ")", ">", "0", ")", ":", "\n", "\t\t\t", "print", "(", "len", "(", "inclusion_criteria", ")", ",", "len", "(", "exclusion_criteria", ")", ",", "len", "(", "protocol_split", ")", ")", "\n", "exit", "(", ")", "\n", "", "return", "inclusion_criteria", ",", "exclusion_criteria", "## list, list ", "\n", "", "else", ":", "\n", "\t\t", "return", "protocol_split", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.collect_cleaned_sentence_set": [[55, 64], ["protocol_encode.get_all_protocols", "set", "protocol_encode.split_protocol", "cleaned_sentence_lst.extend", "len", "cleaned_sentence_lst.extend"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.get_all_protocols", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.split_protocol"], ["", "", "def", "collect_cleaned_sentence_set", "(", ")", ":", "\n", "\t", "protocol_lst", "=", "get_all_protocols", "(", ")", "\n", "cleaned_sentence_lst", "=", "[", "]", "\n", "for", "protocol", "in", "protocol_lst", ":", "\n", "\t\t", "result", "=", "split_protocol", "(", "protocol", ")", "\n", "cleaned_sentence_lst", ".", "extend", "(", "result", "[", "0", "]", ")", "\n", "if", "len", "(", "result", ")", "==", "2", ":", "\n", "\t\t\t", "cleaned_sentence_lst", ".", "extend", "(", "result", "[", "1", "]", ")", "\n", "", "", "return", "set", "(", "cleaned_sentence_lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.save_sentence_bert_dict_pkl": [[66, 77], ["protocol_encode.collect_cleaned_sentence_set", "BiobertEmbedding", "dict", "tqdm.tqdm", "pickle.dump", "BiobertEmbedding.sentence_vector", "protocol_encode.save_sentence_bert_dict_pkl.text2vec"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.collect_cleaned_sentence_set"], ["", "def", "save_sentence_bert_dict_pkl", "(", ")", ":", "\n", "\t", "cleaned_sentence_set", "=", "collect_cleaned_sentence_set", "(", ")", "\n", "from", "biobert_embedding", ".", "embedding", "import", "BiobertEmbedding", "\n", "biobert", "=", "BiobertEmbedding", "(", ")", "\n", "def", "text2vec", "(", "text", ")", ":", "\n", "\t\t", "return", "biobert", ".", "sentence_vector", "(", "text", ")", "\n", "", "protocol_sentence_2_embedding", "=", "dict", "(", ")", "\n", "for", "sentence", "in", "tqdm", "(", "cleaned_sentence_set", ")", ":", "\n", "\t\t", "protocol_sentence_2_embedding", "[", "sentence", "]", "=", "text2vec", "(", "sentence", ")", "\n", "", "pickle", ".", "dump", "(", "protocol_sentence_2_embedding", ",", "open", "(", "'data/sentence2embedding.pkl'", ",", "'wb'", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.load_sentence_2_vec": [[78, 81], ["pickle.load", "open"], "function", ["None"], ["", "def", "load_sentence_2_vec", "(", ")", ":", "\n", "\t", "sentence_2_vec", "=", "pickle", ".", "load", "(", "open", "(", "'data/sentence2embedding.pkl'", ",", "'rb'", ")", ")", "\n", "return", "sentence_2_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.protocol_encode.protocol2feature": [[82, 96], ["protocol_encode.split_protocol", "sentence_2_vec[].view", "sentence_2_vec[].view", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.split_protocol"], ["", "def", "protocol2feature", "(", "protocol", ",", "sentence_2_vec", ")", ":", "\n", "\t", "result", "=", "split_protocol", "(", "protocol", ")", "\n", "inclusion_criteria", ",", "exclusion_criteria", "=", "result", "[", "0", "]", ",", "result", "[", "-", "1", "]", "\n", "inclusion_feature", "=", "[", "sentence_2_vec", "[", "sentence", "]", ".", "view", "(", "1", ",", "-", "1", ")", "for", "sentence", "in", "inclusion_criteria", "if", "sentence", "in", "sentence_2_vec", "]", "\n", "exclusion_feature", "=", "[", "sentence_2_vec", "[", "sentence", "]", ".", "view", "(", "1", ",", "-", "1", ")", "for", "sentence", "in", "exclusion_criteria", "if", "sentence", "in", "sentence_2_vec", "]", "\n", "if", "inclusion_feature", "==", "[", "]", ":", "\n", "\t\t", "inclusion_feature", "=", "torch", ".", "zeros", "(", "1", ",", "768", ")", "\n", "", "else", ":", "\n", "\t\t", "inclusion_feature", "=", "torch", ".", "cat", "(", "inclusion_feature", ",", "0", ")", "\n", "", "if", "exclusion_feature", "==", "[", "]", ":", "\n", "\t\t", "exclusion_feature", "=", "torch", ".", "zeros", "(", "1", ",", "768", ")", "\n", "", "else", ":", "\n", "\t\t", "exclusion_feature", "=", "torch", ".", "cat", "(", "exclusion_feature", ",", "0", ")", "\n", "", "return", "inclusion_feature", ",", "exclusion_feature", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.GRAM.__init__": [[112, 139], ["torch.nn.Sequential.__init__", "icdcode_encode.GRAM.codedict_2_allcode", "len", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "icdcode_encode.GRAM.to", "icdcode_encode.GRAM.padding_matrix.to", "icdcode_encode.GRAM.mask_matrix.to", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "enumerate", "enumerate", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "len"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.codedict_2_allcode"], ["def", "__init__", "(", "self", ",", "embedding_dim", ",", "icdcode2ancestor", ",", "device", ")", ":", "\n", "\t\t", "super", "(", "GRAM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "icdcode2ancestor", "=", "icdcode2ancestor", "\n", "self", ".", "all_code_lst", "=", "GRAM", ".", "codedict_2_allcode", "(", "self", ".", "icdcode2ancestor", ")", "\n", "self", ".", "code_num", "=", "len", "(", "self", ".", "all_code_lst", ")", "\n", "self", ".", "maxlength", "=", "5", "\n", "self", ".", "code2index", "=", "{", "code", ":", "idx", "for", "idx", ",", "code", "in", "enumerate", "(", "self", ".", "all_code_lst", ")", "}", "\n", "self", ".", "index2code", "=", "{", "idx", ":", "code", "for", "idx", ",", "code", "in", "enumerate", "(", "self", ".", "all_code_lst", ")", "}", "\n", "self", ".", "padding_matrix", "=", "torch", ".", "zeros", "(", "self", ".", "code_num", ",", "self", ".", "maxlength", ")", ".", "long", "(", ")", "\n", "self", ".", "mask_matrix", "=", "torch", ".", "zeros", "(", "self", ".", "code_num", ",", "self", ".", "maxlength", ")", "\n", "for", "idx", "in", "range", "(", "self", ".", "code_num", ")", ":", "\n", "\t\t\t", "code", "=", "self", ".", "index2code", "[", "idx", "]", "\n", "ancestor_code_lst", "=", "self", ".", "icdcode2ancestor", "[", "code", "]", "\n", "ancestor_idx_lst", "=", "[", "idx", "]", "+", "[", "self", ".", "code2index", "[", "code", "]", "for", "code", "in", "ancestor_code_lst", "]", "\n", "ancestor_mask_lst", "=", "[", "1", "for", "i", "in", "ancestor_idx_lst", "]", "+", "[", "0", "]", "*", "(", "self", ".", "maxlength", "-", "len", "(", "ancestor_idx_lst", ")", ")", "\n", "ancestor_idx_lst", "=", "ancestor_idx_lst", "+", "[", "0", "]", "*", "(", "self", ".", "maxlength", "-", "len", "(", "ancestor_idx_lst", ")", ")", "\n", "self", ".", "padding_matrix", "[", "idx", ",", ":", "]", "=", "torch", ".", "Tensor", "(", "ancestor_idx_lst", ")", "\n", "self", ".", "mask_matrix", "[", "idx", ",", ":", "]", "=", "torch", ".", "Tensor", "(", "ancestor_mask_lst", ")", "\n", "\n", "", "self", ".", "embedding_dim", "=", "embedding_dim", "\n", "self", ".", "embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "code_num", ",", "self", ".", "embedding_dim", ")", "\n", "self", ".", "attention_model", "=", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "1", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "device", ")", "\n", "self", ".", "padding_matrix", "=", "self", ".", "padding_matrix", ".", "to", "(", "'cpu'", ")", "\n", "self", ".", "mask_matrix", "=", "self", ".", "mask_matrix", ".", "to", "(", "'cpu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.GRAM.embedding_size": [[140, 143], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "embedding_size", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "embedding_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.GRAM.codedict_2_allcode": [[145, 152], ["set", "list", "set", "set.union", "icdcode2ancestor.keys", "icdcode2ancestor.values", "functools.reduce"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "codedict_2_allcode", "(", "icdcode2ancestor", ")", ":", "\n", "\t\t", "all_code", "=", "set", "(", "icdcode2ancestor", ".", "keys", "(", ")", ")", "\n", "ancestor_lst", "=", "list", "(", "icdcode2ancestor", ".", "values", "(", ")", ")", "\n", "ancestor_set", "=", "set", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "ancestor_lst", ")", ")", "\n", "all_code_lst", "=", "all_code", ".", "union", "(", "ancestor_set", ")", "\n", "return", "all_code_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.GRAM.forward_single_code": [[154, 169], ["icdcode_encode.GRAM.code2index[].to", "icdcode_encode.GRAM.embedding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "icdcode_encode.GRAM.attention_model", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "mask_vec.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "icdcode_encode.GRAM.embedding().view", "range", "icdcode_encode.GRAM.embedding", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "forward_single_code", "(", "self", ",", "single_code", ")", ":", "\n", "\t\t", "idx", "=", "self", ".", "code2index", "[", "single_code", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "ancestor_vec", "=", "self", ".", "padding_matrix", "[", "idx", ",", ":", "]", "#### (5,)", "\n", "mask_vec", "=", "self", ".", "mask_matrix", "[", "idx", ",", ":", "]", "\n", "\n", "embeded", "=", "self", ".", "embedding", "(", "ancestor_vec", ")", "### 5, 50", "\n", "current_vec", "=", "torch", ".", "cat", "(", "[", "self", ".", "embedding", "(", "torch", ".", "Tensor", "(", "[", "idx", "]", ")", ".", "long", "(", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", "for", "i", "in", "range", "(", "self", ".", "maxlength", ")", "]", ",", "0", ")", "### 1,50 -> 5,50", "\n", "attention_input", "=", "torch", ".", "cat", "(", "[", "embeded", ",", "current_vec", "]", ",", "1", ")", "### 5, 100", "\n", "attention_weight", "=", "self", ".", "attention_model", "(", "attention_input", ")", "##### 5, 1", "\n", "attention_weight", "=", "torch", ".", "exp", "(", "attention_weight", ")", "#### 5, 1", "\n", "attention_output", "=", "attention_weight", "*", "mask_vec", ".", "view", "(", "-", "1", ",", "1", ")", "#### 5, 1", "\n", "attention_output", "=", "attention_output", "/", "torch", ".", "sum", "(", "attention_output", ")", "#### 5, 1", "\n", "output", "=", "embeded", "*", "attention_output", "### 5, 50 ", "\n", "output", "=", "torch", ".", "sum", "(", "output", ",", "0", ")", "### 50", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.GRAM.forward_code_lst": [[171, 193], ["icdcode_encode.GRAM.padding_matrix[].to", "icdcode_encode.GRAM.mask_matrix[].to", "icdcode_encode.GRAM.embedding", "icdcode_encode.GRAM.embedding", "current_vec.repeat.repeat.unsqueeze", "current_vec.repeat.repeat.repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "icdcode_encode.GRAM.attention_model", "torch.exp().squeeze", "torch.exp().squeeze", "torch.exp().squeeze", "torch.exp().squeeze", "attention_output.unsqueeze.unsqueeze.unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.Tensor().long().to", "torch.Tensor().long().to", "torch.Tensor().long().to", "torch.Tensor().long().to", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "forward_code_lst", "(", "self", ",", "code_lst", ")", ":", "\n", "\t\t", "\"\"\"\n\t\t\t\n\t\t\t['C05.2', 'C10.0', 'C16.0', 'C16.4', 'C17.0', 'C17.1', 'C17.2'], length is 32 \n\t\t\t32 is length of code_lst; 5 is maxlength; 50 is embedding_dim; \n\t\t\"\"\"", "\n", "idx_lst", "=", "[", "self", ".", "code2index", "[", "code", "]", "for", "code", "in", "code_lst", "]", "### 32", "\n", "ancestor_mat", "=", "self", ".", "padding_matrix", "[", "idx_lst", ",", ":", "]", ".", "to", "(", "self", ".", "device", ")", "##### 32,5", "\n", "mask_mat", "=", "self", ".", "mask_matrix", "[", "idx_lst", ",", ":", "]", ".", "to", "(", "self", ".", "device", ")", "#### 32,5", "\n", "embeded", "=", "self", ".", "embedding", "(", "ancestor_mat", ")", "#### 32,5,50", "\n", "current_vec", "=", "self", ".", "embedding", "(", "torch", ".", "Tensor", "(", "idx_lst", ")", ".", "long", "(", ")", ".", "to", "(", "self", ".", "device", ")", ")", "#### 32,50", "\n", "current_vec", "=", "current_vec", ".", "unsqueeze", "(", "1", ")", "### 32,1,50", "\n", "current_vec", "=", "current_vec", ".", "repeat", "(", "1", ",", "self", ".", "maxlength", ",", "1", ")", "#### 32,5,50", "\n", "attention_input", "=", "torch", ".", "cat", "(", "[", "embeded", ",", "current_vec", "]", ",", "2", ")", "#### 32,5,100", "\n", "attention_weight", "=", "self", ".", "attention_model", "(", "attention_input", ")", "#### 32,5,1 ", "\n", "attention_weight", "=", "torch", ".", "exp", "(", "attention_weight", ")", ".", "squeeze", "(", "-", "1", ")", "#### 32,5 ", "\n", "attention_output", "=", "attention_weight", "*", "mask_mat", "#### 32,5 ", "\n", "attention_output", "=", "attention_output", "/", "torch", ".", "sum", "(", "attention_output", ",", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "#### 32,5 ", "\n", "attention_output", "=", "attention_output", ".", "unsqueeze", "(", "-", "1", ")", "#### 32,5,1 ", "\n", "output", "=", "embeded", "*", "attention_output", "##### 32,5,50 ", "\n", "output", "=", "torch", ".", "sum", "(", "output", ",", "1", ")", "##### 32,50", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.GRAM.forward_code_lst2": [[194, 201], ["functools.reduce", "icdcode_encode.GRAM.forward_code_lst", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_code_lst"], ["", "def", "forward_code_lst2", "(", "self", ",", "code_lst_lst", ")", ":", "\n", "### in one sample ", "\n", "\t\t", "code_lst", "=", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "code_lst_lst", ")", "\n", "code_embed", "=", "self", ".", "forward_code_lst", "(", "code_lst", ")", "\n", "### to do ", "\n", "code_embed", "=", "torch", ".", "mean", "(", "code_embed", ",", "0", ")", ".", "view", "(", "1", ",", "-", "1", ")", "#### dim, ", "\n", "return", "code_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.GRAM.forward_code_lst3": [[202, 206], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "icdcode_encode.GRAM.forward_code_lst2"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_code_lst2"], ["", "def", "forward_code_lst3", "(", "self", ",", "code_lst_lst_lst", ")", ":", "\n", "\t\t", "code_embed_lst", "=", "[", "self", ".", "forward_code_lst2", "(", "code_lst_lst", ")", "for", "code_lst_lst", "in", "code_lst_lst_lst", "]", "\n", "code_embed", "=", "torch", ".", "cat", "(", "code_embed_lst", ",", "0", ")", "\n", "return", "code_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.text_2_lst_of_lst": [[26, 37], ["text.split", "code_sublst.append", "j.strip", "i.split"], "function", ["None"], ["def", "text_2_lst_of_lst", "(", "text", ")", ":", "\n", "\t", "\"\"\"\n\t\t\"[\"\"['F53.0', 'P91.4', 'Z13.31', 'Z13.32']\"\"]\"\n\t\"\"\"", "\n", "text", "=", "text", "[", "2", ":", "-", "2", "]", "\n", "code_sublst", "=", "[", "]", "\n", "for", "i", "in", "text", ".", "split", "(", "'\", \"'", ")", ":", "\n", "\t\t", "i", "=", "i", "[", "1", ":", "-", "1", "]", "\n", "code_sublst", ".", "append", "(", "[", "j", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "j", "in", "i", ".", "split", "(", "','", ")", "]", ")", "\n", "# print(code_sublst)\t", "\n", "", "return", "code_sublst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.get_icdcode_lst": [[38, 47], ["open", "icdcode_encode.text_2_lst_of_lst", "code_lst.append", "list", "csv.reader"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.text_2_lst_of_lst"], ["", "def", "get_icdcode_lst", "(", ")", ":", "\n", "\t", "input_file", "=", "'data/raw_data.csv'", "\n", "with", "open", "(", "input_file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "code_lst", "=", "[", "]", "\n", "for", "row", "in", "rows", ":", "\n", "\t\t", "code_sublst", "=", "text_2_lst_of_lst", "(", "row", "[", "6", "]", ")", "\n", "code_lst", ".", "append", "(", "code_sublst", ")", "\n", "", "return", "code_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.combine_lst_of_lst": [[48, 52], ["list", "list", "functools.reduce", "set"], "function", ["None"], ["", "def", "combine_lst_of_lst", "(", "lst_of_lst", ")", ":", "\n", "\t", "lst", "=", "list", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "lst_of_lst", ")", ")", "\n", "lst", "=", "list", "(", "set", "(", "lst", ")", ")", "\n", "return", "lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.collect_all_icdcodes": [[53, 59], ["icdcode_encode.get_icdcode_lst", "list", "list", "list", "map", "functools.reduce", "set"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.get_icdcode_lst"], ["", "def", "collect_all_icdcodes", "(", ")", ":", "\n", "\t", "code_lst", "=", "get_icdcode_lst", "(", ")", "\n", "code_lst", "=", "list", "(", "map", "(", "combine_lst_of_lst", ",", "code_lst", ")", ")", "\n", "code_lst", "=", "list", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "code_lst", ")", ")", "\n", "code_lst", "=", "list", "(", "set", "(", "code_lst", ")", ")", "\n", "return", "code_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.find_ancestor_for_icdcode": [[61, 73], ["len", "icd10.find", "icdcode2ancestor[].append"], "function", ["None"], ["", "def", "find_ancestor_for_icdcode", "(", "icdcode", ",", "icdcode2ancestor", ")", ":", "\n", "\t", "if", "icdcode", "in", "icdcode2ancestor", ":", "\n", "\t\t", "return", "\n", "", "icdcode2ancestor", "[", "icdcode", "]", "=", "[", "]", "\n", "ancestor", "=", "icdcode", "[", ":", "]", "\n", "while", "len", "(", "ancestor", ")", ">", "2", ":", "\n", "\t\t", "ancestor", "=", "ancestor", "[", ":", "-", "1", "]", "\n", "if", "ancestor", "[", "-", "1", "]", "==", "'.'", ":", "\n", "\t\t\t", "ancestor", "=", "ancestor", "[", ":", "-", "1", "]", "\n", "", "if", "icd10", ".", "find", "(", "ancestor", ")", "is", "not", "None", ":", "\n", "\t\t\t", "icdcode2ancestor", "[", "icdcode", "]", ".", "append", "(", "ancestor", ")", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.build_icdcode2ancestor_dict": [[75, 86], ["os.path.exists", "icdcode_encode.collect_all_icdcodes", "collections.defaultdict", "pickle.dump", "pickle.load", "icdcode_encode.find_ancestor_for_icdcode", "open", "open"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.collect_all_icdcodes", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.find_ancestor_for_icdcode"], ["", "def", "build_icdcode2ancestor_dict", "(", ")", ":", "\n", "\t", "pkl_file", "=", "\"data/icdcode2ancestor_dict.pkl\"", "\n", "if", "os", ".", "path", ".", "exists", "(", "pkl_file", ")", ":", "\n", "\t\t", "icdcode2ancestor", "=", "pickle", ".", "load", "(", "open", "(", "pkl_file", ",", "'rb'", ")", ")", "\n", "return", "icdcode2ancestor", "\n", "", "all_code", "=", "collect_all_icdcodes", "(", ")", "\n", "icdcode2ancestor", "=", "defaultdict", "(", "list", ")", "\n", "for", "code", "in", "all_code", ":", "\n", "\t\t", "find_ancestor_for_icdcode", "(", "code", ",", "icdcode2ancestor", ")", "\n", "", "pickle", ".", "dump", "(", "icdcode2ancestor", ",", "open", "(", "pkl_file", ",", "'wb'", ")", ")", "\n", "return", "icdcode2ancestor", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.icdcode_encode.collect_all_code_and_ancestor": [[88, 95], ["icdcode_encode.build_icdcode2ancestor_dict", "set", "list", "set", "set.union", "build_icdcode2ancestor_dict.keys", "build_icdcode2ancestor_dict.values", "functools.reduce"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.build_icdcode2ancestor_dict"], ["", "def", "collect_all_code_and_ancestor", "(", ")", ":", "\n", "\t", "icdcode2ancestor", "=", "build_icdcode2ancestor_dict", "(", ")", "\n", "all_code", "=", "set", "(", "icdcode2ancestor", ".", "keys", "(", ")", ")", "\n", "ancestor_lst", "=", "list", "(", "icdcode2ancestor", ".", "values", "(", ")", ")", "\n", "ancestor_set", "=", "set", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "ancestor_lst", ")", ")", "\n", "all_code_lst", "=", "all_code", ".", "union", "(", "ancestor_set", ")", "\n", "return", "all_code_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.Highway.__init__": [[18, 25], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "num_layers", ")", ":", "\n", "        ", "super", "(", "Highway", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "nonlinear", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "size", ",", "size", ")", "for", "_", "in", "range", "(", "num_layers", ")", "]", ")", "\n", "self", ".", "linear", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "size", ",", "size", ")", "for", "_", "in", "range", "(", "num_layers", ")", "]", ")", "\n", "self", ".", "gate", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "size", ",", "size", ")", "for", "_", "in", "range", "(", "num_layers", ")", "]", ")", "\n", "self", ".", "f", "=", "F", ".", "relu", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.Highway.forward": [[26, 40], ["range", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "module.Highway.f"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            :param x: tensor with shape of [batch_size, size]\n            :return: tensor with shape of [batch_size, size]\n            applies \u03c3(x) \u2a00 (f(G(x))) + (1 - \u03c3(x)) \u2a00 (Q(x)) transformation | G and Q is affine transformation,\n            f is non-linear transformation, \u03c3(x) is affine transformation with sigmoid non-linearition\n            and \u2a00 is element-wise multiplication\n        \"\"\"", "\n", "for", "layer", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "gate", "=", "F", ".", "sigmoid", "(", "self", ".", "gate", "[", "layer", "]", "(", "x", ")", ")", "\n", "nonlinear", "=", "self", ".", "f", "(", "self", ".", "nonlinear", "[", "layer", "]", "(", "x", ")", ")", "\n", "linear", "=", "self", ".", "linear", "[", "layer", "]", "(", "x", ")", "\n", "x", "=", "gate", "*", "nonlinear", "+", "(", "1", "-", "gate", ")", "*", "linear", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.GCN.__init__": [[47, 53], ["torch.Module.__init__", "HINT.gnn_layers.GraphConvolution", "HINT.gnn_layers.GraphConvolution"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nfeat", ",", "nhid", ",", "nclass", ",", "dropout", ",", "init", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "gc1", "=", "GraphConvolution", "(", "nfeat", ",", "nhid", ",", "init", "=", "init", ")", "\n", "self", ".", "gc2", "=", "GraphConvolution", "(", "nhid", ",", "nclass", ",", "init", "=", "init", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.GCN.bottleneck": [[54, 56], ["torch.relu", "torch.relu", "torch.relu", "path3", "torch.relu", "torch.relu", "torch.relu", "path2", "torch.relu", "torch.relu", "torch.relu", "path1"], "methods", ["None"], ["", "def", "bottleneck", "(", "self", ",", "path1", ",", "path2", ",", "path3", ",", "adj", ",", "in_x", ")", ":", "\n", "        ", "return", "F", ".", "relu", "(", "path3", "(", "F", ".", "relu", "(", "path2", "(", "F", ".", "relu", "(", "path1", "(", "in_x", ",", "adj", ")", ")", ",", "adj", ")", ")", ",", "adj", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.GCN.forward": [[57, 61], ["torch.dropout", "torch.dropout", "torch.dropout", "module.GCN.gc2", "torch.relu", "torch.relu", "torch.relu", "module.GCN.gc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x", "=", "F", ".", "dropout", "(", "F", ".", "relu", "(", "self", ".", "gc1", "(", "x", ",", "adj", ")", ")", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "self", ".", "gc2", "(", "x", ",", "adj", ")", "\n", "return", "x", "\n", "# return F.log_softmax(x, dim=1)", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.GCN_drop_in.__init__": [[67, 73], ["torch.Module.__init__", "HINT.gnn_layers.GraphConvolution", "HINT.gnn_layers.GraphConvolution"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nfeat", ",", "nhid", ",", "nclass", ",", "dropout", ",", "init", ")", ":", "\n", "        ", "super", "(", "GCN_drop_in", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "gc1", "=", "GraphConvolution", "(", "nfeat", ",", "nhid", ",", "init", "=", "init", ")", "\n", "self", ".", "gc2", "=", "GraphConvolution", "(", "nhid", ",", "nclass", ",", "init", "=", "init", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.GCN_drop_in.bottleneck": [[74, 76], ["torch.relu", "torch.relu", "torch.relu", "path3", "torch.relu", "torch.relu", "torch.relu", "path2", "torch.relu", "torch.relu", "torch.relu", "path1"], "methods", ["None"], ["", "def", "bottleneck", "(", "self", ",", "path1", ",", "path2", ",", "path3", ",", "adj", ",", "in_x", ")", ":", "\n", "        ", "return", "F", ".", "relu", "(", "path3", "(", "F", ".", "relu", "(", "path2", "(", "F", ".", "relu", "(", "path1", "(", "in_x", ",", "adj", ")", ")", ",", "adj", ")", ")", ",", "adj", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.GCN_drop_in.forward": [[77, 83], ["torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "module.GCN_drop_in.gc2", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.relu", "torch.relu", "torch.relu", "module.GCN_drop_in.gc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "F", ".", "dropout", "(", "F", ".", "relu", "(", "self", ".", "gc1", "(", "x", ",", "adj", ")", ")", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "self", ".", "gc2", "(", "x", ",", "adj", ")", "\n", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.GAT.__init__": [[85, 94], ["torch.Module.__init__", "enumerate", "HINT.gnn_layers.GraphAttention", "HINT.gnn_layers.GraphAttention", "module.GAT.add_module", "range"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nfeat", ",", "nhid", ",", "nclass", ",", "dropout", ",", "alpha", ",", "nheads", ")", ":", "\n", "        ", "super", "(", "GAT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "self", ".", "attentions", "=", "[", "GraphAttention", "(", "nfeat", ",", "nhid", ",", "dropout", "=", "dropout", ",", "alpha", "=", "alpha", ",", "concat", "=", "True", ")", "for", "_", "in", "range", "(", "nheads", ")", "]", "\n", "for", "i", ",", "attention", "in", "enumerate", "(", "self", ".", "attentions", ")", ":", "\n", "            ", "self", ".", "add_module", "(", "'attention_{}'", ".", "format", "(", "i", ")", ",", "attention", ")", "\n", "\n", "", "self", ".", "out_att", "=", "GraphAttention", "(", "nhid", "*", "nheads", ",", "nclass", ",", "dropout", "=", "dropout", ",", "alpha", "=", "alpha", ",", "concat", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.module.GAT.forward": [[95, 101], ["torch.dropout", "torch.dropout", "torch.dropout", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.dropout", "torch.dropout", "torch.dropout", "torch.elu", "torch.elu", "torch.elu", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "module.GAT.out_att", "att"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "att", "(", "x", ",", "adj", ")", "for", "att", "in", "self", ".", "attentions", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "F", ".", "elu", "(", "self", ".", "out_att", "(", "x", ",", "adj", ")", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.__init__": [[18, 49], ["torch.nn.Sequential.__init__", "torch.nn.BCEWithLogitsLoss", "torch.nn.BCEWithLogitsLoss", "torch.nn.Linear().to", "torch.nn.Linear().to", "HINT.module.Highway().to", "torch.nn.Linear", "torch.nn.Linear", "model.Interaction.to", "torch.nn.Linear", "torch.nn.Linear", "HINT.module.Highway"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "molecule_encoder", ",", "disease_encoder", ",", "protocol_encoder", ",", "\n", "device", ",", "\n", "global_embed_size", ",", "\n", "highway_num_layer", ",", "\n", "prefix_name", ",", "\n", "epoch", "=", "20", ",", "\n", "lr", "=", "3e-4", ",", "\n", "weight_decay", "=", "0", ",", "\n", ")", ":", "\n", "\t\t", "super", "(", "Interaction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "molecule_encoder", "=", "molecule_encoder", "\n", "self", ".", "disease_encoder", "=", "disease_encoder", "\n", "self", ".", "protocol_encoder", "=", "protocol_encoder", "\n", "self", ".", "global_embed_size", "=", "global_embed_size", "\n", "self", ".", "highway_num_layer", "=", "highway_num_layer", "\n", "self", ".", "feature_dim", "=", "self", ".", "molecule_encoder", ".", "embedding_size", "+", "self", ".", "disease_encoder", ".", "embedding_size", "+", "self", ".", "protocol_encoder", ".", "embedding_size", "\n", "self", ".", "epoch", "=", "epoch", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "weight_decay", "=", "weight_decay", "\n", "self", ".", "save_name", "=", "prefix_name", "+", "'_interaction'", "\n", "\n", "self", ".", "f", "=", "F", ".", "relu", "\n", "self", ".", "loss", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", "\n", "\n", "##### NN ", "\n", "self", ".", "encoder2interaction_fc", "=", "nn", ".", "Linear", "(", "self", ".", "feature_dim", ",", "self", ".", "global_embed_size", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "encoder2interaction_highway", "=", "Highway", "(", "self", ".", "global_embed_size", ",", "self", ".", "highway_num_layer", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "pred_nn", "=", "nn", ".", "Linear", "(", "self", ".", "global_embed_size", ",", "1", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.feed_lst_of_module": [[50, 55], ["model.Interaction.f", "single_module"], "methods", ["None"], ["", "def", "feed_lst_of_module", "(", "self", ",", "input_feature", ",", "lst_of_module", ")", ":", "\n", "\t\t", "x", "=", "input_feature", "\n", "for", "single_module", "in", "lst_of_module", ":", "\n", "\t\t\t", "x", "=", "self", ".", "f", "(", "single_module", "(", "x", ")", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.forward_get_three_encoders": [[56, 61], ["model.Interaction.molecule_encoder.forward_smiles_lst_lst", "model.Interaction.disease_encoder.forward_code_lst3", "model.Interaction.protocol_encoder.forward"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_smiles_lst_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_code_lst3", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward"], ["", "def", "forward_get_three_encoders", "(", "self", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", ":", "\n", "\t\t", "molecule_embed", "=", "self", ".", "molecule_encoder", ".", "forward_smiles_lst_lst", "(", "smiles_lst2", ")", "\n", "icd_embed", "=", "self", ".", "disease_encoder", ".", "forward_code_lst3", "(", "icdcode_lst3", ")", "\n", "protocol_embed", "=", "self", ".", "protocol_encoder", ".", "forward", "(", "criteria_lst", ")", "\n", "return", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.forward_encoder_2_interaction": [[62, 70], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Interaction.encoder2interaction_fc", "model.Interaction.f", "model.Interaction.encoder2interaction_highway", "model.Interaction.f"], "methods", ["None"], ["", "def", "forward_encoder_2_interaction", "(", "self", ",", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", ")", ":", "\n", "\t\t", "encoder_embedding", "=", "torch", ".", "cat", "(", "[", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", "]", ",", "1", ")", "\n", "# interaction_embedding = self.feed_lst_of_module(encoder_embedding, [self.encoder2interaction_fc, self.encoder2interaction_highway])", "\n", "h", "=", "self", ".", "encoder2interaction_fc", "(", "encoder_embedding", ")", "\n", "h", "=", "self", ".", "f", "(", "h", ")", "\n", "h", "=", "self", ".", "encoder2interaction_highway", "(", "h", ")", "\n", "interaction_embedding", "=", "self", ".", "f", "(", "h", ")", "\n", "return", "interaction_embedding", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.forward": [[71, 76], ["model.Interaction.forward_get_three_encoders", "model.Interaction.forward_encoder_2_interaction", "model.Interaction.pred_nn"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.forward_get_three_encoders", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.forward_encoder_2_interaction"], ["", "def", "forward", "(", "self", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", ":", "\n", "\t\t", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", "=", "self", ".", "forward_get_three_encoders", "(", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", "\n", "interaction_embedding", "=", "self", ".", "forward_encoder_2_interaction", "(", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", ")", "\n", "output", "=", "self", ".", "pred_nn", "(", "interaction_embedding", ")", "\n", "return", "output", "### 32, 1", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.evaluation": [[77, 108], ["sklearn.metrics.roc_auc_score", "roc_curve", "precision_recall_curve", "list", "sklearn.metrics.f1_score", "sklearn.metrics.average_precision_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "sklearn.metrics.accuracy_score", "open", "zip", "int", "map", "sum", "len", "sum", "len", "fout.write", "str", "str"], "methods", ["None"], ["", "def", "evaluation", "(", "self", ",", "predict_all", ",", "label_all", ",", "threshold", "=", "0.5", ")", ":", "\n", "\t\t", "import", "pickle", ",", "os", "\n", "from", "sklearn", ".", "metrics", "import", "roc_curve", ",", "precision_recall_curve", "\n", "with", "open", "(", "\"predict_label.txt\"", ",", "'w'", ")", "as", "fout", ":", "\n", "\t\t\t", "for", "i", ",", "j", "in", "zip", "(", "predict_all", ",", "label_all", ")", ":", "\n", "\t\t\t\t", "fout", ".", "write", "(", "str", "(", "i", ")", "[", ":", "4", "]", "+", "'\\t'", "+", "str", "(", "j", ")", "[", ":", "4", "]", "+", "'\\n'", ")", "\n", "", "", "auc_score", "=", "roc_auc_score", "(", "label_all", ",", "predict_all", ")", "\n", "figure_folder", "=", "\"figure\"", "\n", "#### ROC-curve ", "\n", "fpr", ",", "tpr", ",", "thresholds", "=", "roc_curve", "(", "label_all", ",", "predict_all", ",", "pos_label", "=", "1", ")", "\n", "# roc_curve =plt.figure()", "\n", "# plt.plot(fpr,tpr,'-',label=self.save_name + ' ROC Curve ')", "\n", "# plt.legend(fontsize = 15)", "\n", "#plt.savefig(os.path.join(figure_folder,name+\"_roc_curve.png\"))", "\n", "#### PR-curve", "\n", "precision", ",", "recall", ",", "thresholds", "=", "precision_recall_curve", "(", "label_all", ",", "predict_all", ")", "\n", "# plt.plot(recall,precision, label = self.save_name + ' PR Curve')", "\n", "# plt.legend(fontsize = 15)", "\n", "# plt.savefig(os.path.join(figure_folder,self.save_name + \"_pr_curve.png\"))", "\n", "label_all", "=", "[", "int", "(", "i", ")", "for", "i", "in", "label_all", "]", "\n", "float2binary", "=", "lambda", "x", ":", "0", "if", "x", "<", "threshold", "else", "1", "\n", "predict_all", "=", "list", "(", "map", "(", "float2binary", ",", "predict_all", ")", ")", "\n", "f1score", "=", "f1_score", "(", "label_all", ",", "predict_all", ")", "\n", "prauc_score", "=", "average_precision_score", "(", "label_all", ",", "predict_all", ")", "\n", "# print(predict_all)", "\n", "precision", "=", "precision_score", "(", "label_all", ",", "predict_all", ")", "\n", "recall", "=", "recall_score", "(", "label_all", ",", "predict_all", ")", "\n", "accuracy", "=", "accuracy_score", "(", "label_all", ",", "predict_all", ")", "\n", "predict_1_ratio", "=", "sum", "(", "predict_all", ")", "/", "len", "(", "predict_all", ")", "\n", "label_1_ratio", "=", "sum", "(", "label_all", ")", "/", "len", "(", "label_all", ")", "\n", "return", "auc_score", ",", "f1score", ",", "prauc_score", ",", "precision", ",", "recall", ",", "accuracy", ",", "predict_1_ratio", ",", "label_1_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.testloader_to_lst": [[109, 120], ["len", "nctid_lst.extend", "label_lst.extend", "smiles_lst2.extend", "icdcode_lst3.extend", "criteria_lst.extend", "len", "len", "i.item"], "methods", ["None"], ["", "def", "testloader_to_lst", "(", "self", ",", "dataloader", ")", ":", "\n", "\t\t", "nctid_lst", ",", "label_lst", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "nctid", ",", "label", ",", "smiles", ",", "icdcode", ",", "criteria", "in", "dataloader", ":", "\n", "\t\t\t", "nctid_lst", ".", "extend", "(", "nctid", ")", "\n", "label_lst", ".", "extend", "(", "[", "i", ".", "item", "(", ")", "for", "i", "in", "label", "]", ")", "\n", "smiles_lst2", ".", "extend", "(", "smiles", ")", "\n", "icdcode_lst3", ".", "extend", "(", "icdcode", ")", "\n", "criteria_lst", ".", "extend", "(", "criteria", ")", "\n", "", "length", "=", "len", "(", "nctid_lst", ")", "\n", "assert", "length", "==", "len", "(", "smiles_lst2", ")", "and", "length", "==", "len", "(", "icdcode_lst3", ")", "\n", "return", "nctid_lst", ",", "label_lst", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ",", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.generate_predict": [[123, 136], ["nctid_all.extend", "label_vec.to.to.to", "model.Interaction.forward().view", "model.Interaction.loss", "model.Interaction.item", "predict_all.extend", "label_all.extend", "label_vec.to.to.float", "model.Interaction.forward", "i.item", "i.item", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward"], ["", "def", "generate_predict", "(", "self", ",", "dataloader", ")", ":", "\n", "\t\t", "whole_loss", "=", "0", "\n", "label_all", ",", "predict_all", ",", "nctid_all", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "nctid_lst", ",", "label_vec", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", "in", "dataloader", ":", "\n", "\t\t\t", "nctid_all", ".", "extend", "(", "nctid_lst", ")", "\n", "label_vec", "=", "label_vec", ".", "to", "(", "self", ".", "device", ")", "\n", "output", "=", "self", ".", "forward", "(", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", ".", "view", "(", "-", "1", ")", "\n", "loss", "=", "self", ".", "loss", "(", "output", ",", "label_vec", ".", "float", "(", ")", ")", "\n", "whole_loss", "+=", "loss", ".", "item", "(", ")", "\n", "predict_all", ".", "extend", "(", "[", "i", ".", "item", "(", ")", "for", "i", "in", "torch", ".", "sigmoid", "(", "output", ")", "]", ")", "\n", "label_all", ".", "extend", "(", "[", "i", ".", "item", "(", ")", "for", "i", "in", "label_vec", "]", ")", "\n", "\n", "", "return", "whole_loss", ",", "predict_all", ",", "label_all", ",", "nctid_all", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.bootstrap_test": [[137, 173], ["model.Interaction.eval", "model.Interaction.generate_predict", "matplotlib.clf", "plot_hist", "model.Interaction.bootstrap_test.bootstrap"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.generate_predict", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.plot_hist"], ["", "def", "bootstrap_test", "(", "self", ",", "dataloader", ",", "sample_num", "=", "20", ")", ":", "\n", "# if validloader is not None:", "\n", "# \tbest_threshold = self.select_threshold_for_binary(validloader)", "\n", "\t\t", "self", ".", "eval", "(", ")", "\n", "best_threshold", "=", "0.5", "\n", "whole_loss", ",", "predict_all", ",", "label_all", ",", "nctid_all", "=", "self", ".", "generate_predict", "(", "dataloader", ")", "\n", "from", "HINT", ".", "utils", "import", "plot_hist", "\n", "plt", ".", "clf", "(", ")", "\n", "prefix_name", "=", "\"./figure/\"", "+", "self", ".", "save_name", "\n", "plot_hist", "(", "prefix_name", ",", "predict_all", ",", "label_all", ")", "\n", "def", "bootstrap", "(", "length", ",", "sample_num", ")", ":", "\n", "\t\t\t", "idx", "=", "[", "i", "for", "i", "in", "range", "(", "length", ")", "]", "\n", "from", "random", "import", "choices", "\n", "bootstrap_idx", "=", "[", "choices", "(", "idx", ",", "k", "=", "length", ")", "for", "i", "in", "range", "(", "sample_num", ")", "]", "\n", "return", "bootstrap_idx", "\n", "", "results_lst", "=", "[", "]", "\n", "bootstrap_idx_lst", "=", "bootstrap", "(", "len", "(", "predict_all", ")", ",", "sample_num", "=", "sample_num", ")", "\n", "for", "bootstrap_idx", "in", "bootstrap_idx_lst", ":", "\n", "\t\t\t", "bootstrap_label", "=", "[", "label_all", "[", "idx", "]", "for", "idx", "in", "bootstrap_idx", "]", "\n", "bootstrap_predict", "=", "[", "predict_all", "[", "idx", "]", "for", "idx", "in", "bootstrap_idx", "]", "\n", "results", "=", "self", ".", "evaluation", "(", "bootstrap_predict", ",", "bootstrap_label", ",", "threshold", "=", "best_threshold", ")", "\n", "results_lst", ".", "append", "(", "results", ")", "\n", "", "self", ".", "train", "(", ")", "\n", "auc", "=", "[", "results", "[", "0", "]", "for", "results", "in", "results_lst", "]", "\n", "f1score", "=", "[", "results", "[", "1", "]", "for", "results", "in", "results_lst", "]", "\n", "prauc_score", "=", "[", "results", "[", "2", "]", "for", "results", "in", "results_lst", "]", "\n", "print", "(", "\"PR-AUC   mean: \"", "+", "str", "(", "np", ".", "mean", "(", "prauc_score", ")", ")", "[", ":", "6", "]", ",", "\"std: \"", "+", "str", "(", "np", ".", "std", "(", "prauc_score", ")", ")", "[", ":", "6", "]", ")", "\n", "print", "(", "\"F1       mean: \"", "+", "str", "(", "np", ".", "mean", "(", "f1score", ")", ")", "[", ":", "6", "]", ",", "\"std: \"", "+", "str", "(", "np", ".", "std", "(", "f1score", ")", ")", "[", ":", "6", "]", ")", "\n", "print", "(", "\"ROC-AUC  mean: \"", "+", "str", "(", "np", ".", "mean", "(", "auc", ")", ")", "[", ":", "6", "]", ",", "\"std: \"", "+", "str", "(", "np", ".", "std", "(", "auc", ")", ")", "[", ":", "6", "]", ")", "\n", "\n", "for", "nctid", ",", "label", ",", "predict", "in", "zip", "(", "nctid_all", ",", "label_all", ",", "predict_all", ")", ":", "\n", "\t\t\t", "if", "(", "predict", ">", "0.5", "and", "label", "==", "0", ")", "or", "(", "predict", "<", "0.5", "and", "label", "==", "1", ")", ":", "\n", "\t\t\t\t", "print", "(", "nctid", ",", "label", ",", "str", "(", "predict", ")", "[", ":", "5", "]", ")", "\n", "\n", "", "", "nctid2predict", "=", "{", "nctid", ":", "predict", "for", "nctid", ",", "predict", "in", "zip", "(", "nctid_all", ",", "predict_all", ")", "}", "\n", "pickle", ".", "dump", "(", "nctid2predict", ",", "open", "(", "'results/nctid2predict.pkl'", ",", "'wb'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.test": [[177, 201], ["model.Interaction.eval", "model.Interaction.generate_predict", "model.Interaction.train", "model.Interaction.evaluation", "print", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.generate_predict", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.train", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.evaluation"], ["", "def", "test", "(", "self", ",", "dataloader", ",", "return_loss", "=", "True", ",", "validloader", "=", "None", ")", ":", "\n", "# if validloader is not None:", "\n", "# \tbest_threshold = self.select_threshold_for_binary(validloader)", "\n", "\t\t", "self", ".", "eval", "(", ")", "\n", "best_threshold", "=", "0.5", "\n", "whole_loss", ",", "predict_all", ",", "label_all", ",", "nctid_all", "=", "self", ".", "generate_predict", "(", "dataloader", ")", "\n", "# from HINT.utils import plot_hist", "\n", "# plt.clf()", "\n", "# prefix_name = \"./figure/\" + self.save_name ", "\n", "# plot_hist(prefix_name, predict_all, label_all)", "\n", "self", ".", "train", "(", ")", "\n", "if", "return_loss", ":", "\n", "\t\t\t", "return", "whole_loss", "\n", "", "else", ":", "\n", "\t\t\t", "print_num", "=", "5", "\n", "auc_score", ",", "f1score", ",", "prauc_score", ",", "precision", ",", "recall", ",", "accuracy", ",", "predict_1_ratio", ",", "label_1_ratio", "=", "self", ".", "evaluation", "(", "predict_all", ",", "label_all", ",", "threshold", "=", "best_threshold", ")", "\n", "print", "(", "\"ROC AUC: \"", "+", "str", "(", "auc_score", ")", "[", ":", "print_num", "]", "+", "\"\\nF1: \"", "+", "str", "(", "f1score", ")", "[", ":", "print_num", "]", "+", "\"\\nPR-AUC: \"", "+", "str", "(", "prauc_score", ")", "[", ":", "print_num", "]", "+", "\"\\nPrecision: \"", "+", "str", "(", "precision", ")", "[", ":", "print_num", "]", "+", "\"\\nrecall: \"", "+", "str", "(", "recall", ")", "[", ":", "print_num", "]", "+", "\"\\naccuracy: \"", "+", "str", "(", "accuracy", ")", "[", ":", "print_num", "]", "+", "\"\\npredict 1 ratio: \"", "+", "str", "(", "predict_1_ratio", ")", "[", ":", "print_num", "]", "+", "\"\\nlabel 1 ratio: \"", "+", "str", "(", "label_1_ratio", ")", "[", ":", "print_num", "]", ")", "\n", "return", "auc_score", ",", "f1score", ",", "prauc_score", ",", "precision", ",", "recall", ",", "accuracy", ",", "predict_1_ratio", ",", "label_1_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.learn": [[202, 227], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "copy.deepcopy.test", "copy.deepcopy", "tqdm.tqdm.tqdm", "copy.deepcopy.plot_learning_curve", "copy.deepcopy", "copy.deepcopy.test", "copy.deepcopy.parameters", "range", "copy.deepcopy.test", "valid_loss_record.append", "label_vec.to.to.to", "copy.deepcopy.forward().view", "copy.deepcopy.loss", "train_loss_record.append", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "model.Interaction.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "copy.deepcopy", "label_vec.to.to.float", "model.Interaction.item", "copy.deepcopy.forward"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.plot_learning_curve", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward"], ["", "", "def", "learn", "(", "self", ",", "train_loader", ",", "valid_loader", ",", "test_loader", ")", ":", "\n", "\t\t", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "train_loss_record", "=", "[", "]", "\n", "valid_loss", "=", "self", ".", "test", "(", "valid_loader", ",", "return_loss", "=", "True", ")", "\n", "valid_loss_record", "=", "[", "valid_loss", "]", "\n", "best_valid_loss", "=", "valid_loss", "\n", "best_model", "=", "deepcopy", "(", "self", ")", "\n", "for", "ep", "in", "tqdm", "(", "range", "(", "self", ".", "epoch", ")", ")", ":", "\n", "\t\t\t", "for", "nctid_lst", ",", "label_vec", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", "in", "train_loader", ":", "\n", "\t\t\t\t", "label_vec", "=", "label_vec", ".", "to", "(", "self", ".", "device", ")", "\n", "output", "=", "self", ".", "forward", "(", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", ".", "view", "(", "-", "1", ")", "#### 32, 1 -> 32, ||  label_vec 32,", "\n", "loss", "=", "self", ".", "loss", "(", "output", ",", "label_vec", ".", "float", "(", ")", ")", "\n", "train_loss_record", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "", "valid_loss", "=", "self", ".", "test", "(", "valid_loader", ",", "return_loss", "=", "True", ")", "\n", "valid_loss_record", ".", "append", "(", "valid_loss", ")", "\n", "if", "valid_loss", "<", "best_valid_loss", ":", "\n", "\t\t\t\t", "best_valid_loss", "=", "valid_loss", "\n", "best_model", "=", "deepcopy", "(", "self", ")", "\n", "\n", "", "", "self", ".", "plot_learning_curve", "(", "train_loss_record", ",", "valid_loss_record", ")", "\n", "self", "=", "deepcopy", "(", "best_model", ")", "\n", "auc_score", ",", "f1score", ",", "prauc_score", ",", "precision", ",", "recall", ",", "accuracy", ",", "predict_1_ratio", ",", "label_1_ratio", "=", "self", ".", "test", "(", "test_loader", ",", "return_loss", "=", "False", ",", "validloader", "=", "valid_loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.plot_learning_curve": [[229, 236], ["matplotlib.plot", "matplotlib.savefig", "matplotlib.clf", "matplotlib.plot", "matplotlib.savefig", "matplotlib.clf"], "methods", ["None"], ["", "def", "plot_learning_curve", "(", "self", ",", "train_loss_record", ",", "valid_loss_record", ")", ":", "\n", "\t\t", "plt", ".", "plot", "(", "train_loss_record", ")", "\n", "plt", ".", "savefig", "(", "\"./figure/\"", "+", "self", ".", "save_name", "+", "'_train_loss.jpg'", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "plt", ".", "plot", "(", "valid_loss_record", ")", "\n", "plt", ".", "savefig", "(", "\"./figure/\"", "+", "self", ".", "save_name", "+", "'_valid_loss.jpg'", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.select_threshold_for_binary": [[237, 248], ["model.Interaction.generate_predict", "list", "sklearn.metrics.precision_score", "map"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.generate_predict"], ["", "def", "select_threshold_for_binary", "(", "self", ",", "validloader", ")", ":", "\n", "\t\t", "_", ",", "prediction", ",", "label_all", ",", "nctid_all", "=", "self", ".", "generate_predict", "(", "validloader", ")", "\n", "best_f1", "=", "0", "\n", "for", "threshold", "in", "prediction", ":", "\n", "\t\t\t", "float2binary", "=", "lambda", "x", ":", "0", "if", "x", "<", "threshold", "else", "1", "\n", "predict_all", "=", "list", "(", "map", "(", "float2binary", ",", "prediction", ")", ")", "\n", "f1score", "=", "precision_score", "(", "label_all", ",", "predict_all", ")", "\n", "if", "f1score", ">", "best_f1", ":", "\n", "\t\t\t\t", "best_f1", "=", "f1score", "\n", "best_threshold", "=", "threshold", "\n", "", "", "return", "best_threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel_multi.__init__": [[259, 280], ["model.Interaction.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "molecule_encoder", ",", "disease_encoder", ",", "protocol_encoder", ",", "\n", "device", ",", "\n", "global_embed_size", ",", "\n", "highway_num_layer", ",", "\n", "prefix_name", ",", "\n", "epoch", "=", "20", ",", "\n", "lr", "=", "3e-4", ",", "\n", "weight_decay", "=", "0", ",", "\n", ")", ":", "\n", "\t\t", "super", "(", "HINTModel_multi", ",", "self", ")", ".", "__init__", "(", "molecule_encoder", "=", "molecule_encoder", ",", "\n", "disease_encoder", "=", "disease_encoder", ",", "\n", "protocol_encoder", "=", "protocol_encoder", ",", "\n", "device", "=", "device", ",", "\n", "prefix_name", "=", "prefix_name", ",", "\n", "global_embed_size", "=", "global_embed_size", ",", "\n", "highway_num_layer", "=", "highway_num_layer", ",", "\n", "epoch", "=", "epoch", ",", "\n", "lr", "=", "lr", ",", "\n", "weight_decay", "=", "weight_decay", ")", "\n", "self", ".", "pred_nn", "=", "nn", ".", "Linear", "(", "self", ".", "global_embed_size", ",", "4", ")", "\n", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel_multi.forward": [[281, 286], ["model.HINTModel_multi.forward_get_three_encoders", "model.HINTModel_multi.forward_encoder_2_interaction", "model.HINTModel_multi.pred_nn"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.forward_get_three_encoders", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.forward_encoder_2_interaction"], ["", "def", "forward", "(", "self", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", ":", "\n", "\t\t", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", "=", "self", ".", "forward_get_three_encoders", "(", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", "\n", "interaction_embedding", "=", "self", ".", "forward_encoder_2_interaction", "(", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", ")", "\n", "output", "=", "self", ".", "pred_nn", "(", "interaction_embedding", ")", "\n", "return", "output", "### 32, 4", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel_multi.generate_predict": [[288, 302], ["label_vec.to.to.to", "model.HINTModel_multi.forward", "model.HINTModel_multi.loss", "model.HINTModel_multi.item", "predict_all.extend", "label_all.extend", "len", "len", "torch.argmax().tolist", "torch.argmax().tolist", "torch.argmax().tolist", "torch.argmax().tolist", "list", "i.item", "filter", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "zip"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward"], ["", "def", "generate_predict", "(", "self", ",", "dataloader", ")", ":", "\n", "\t\t", "whole_loss", "=", "0", "\n", "label_all", ",", "predict_all", "=", "[", "]", ",", "[", "]", "\n", "for", "nctid_lst", ",", "label_vec", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", "in", "dataloader", ":", "\n", "\t\t\t", "label_vec", "=", "label_vec", ".", "to", "(", "self", ".", "device", ")", "\n", "output", "=", "self", ".", "forward", "(", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", "\n", "loss", "=", "self", ".", "loss", "(", "output", ",", "label_vec", ")", "\n", "whole_loss", "+=", "loss", ".", "item", "(", ")", "\n", "predict_all", ".", "extend", "(", "torch", ".", "argmax", "(", "output", ",", "1", ")", ".", "tolist", "(", ")", ")", "\n", "# predict_all.extend([i.item() for i in torch.sigmoid(output)])", "\n", "label_all", ".", "extend", "(", "[", "i", ".", "item", "(", ")", "for", "i", "in", "label_vec", "]", ")", "\n", "\n", "", "accuracy", "=", "len", "(", "list", "(", "filter", "(", "lambda", "x", ":", "x", "[", "0", "]", "==", "x", "[", "1", "]", ",", "zip", "(", "predict_all", ",", "label_all", ")", ")", ")", ")", "/", "len", "(", "label_all", ")", "\n", "return", "whole_loss", ",", "predict_all", ",", "label_all", ",", "accuracy", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel_multi.test": [[305, 312], ["model.HINTModel_multi.eval", "model.HINTModel_multi.generate_predict", "model.HINTModel_multi.train"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.generate_predict", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.train"], ["", "def", "test", "(", "self", ",", "dataloader", ",", "return_loss", "=", "True", ",", "validloader", "=", "None", ")", ":", "\n", "# if validloader is not None:", "\n", "# \tbest_threshold = self.select_threshold_for_binary(validloader)", "\n", "\t\t", "self", ".", "eval", "(", ")", "\n", "whole_loss", ",", "predict_all", ",", "label_all", ",", "accuracy", "=", "self", ".", "generate_predict", "(", "dataloader", ")", "\n", "self", ".", "train", "(", ")", "\n", "return", "whole_loss", ",", "predict_all", ",", "label_all", ",", "accuracy", "\n", "# # from HINT.utils import plot_hist", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel_multi.learn": [[335, 357], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "model.HINTModel_multi.test", "print", "copy.deepcopy", "tqdm.tqdm.tqdm", "model.HINTModel_multi.parameters", "range", "model.HINTModel_multi.train", "model.HINTModel_multi.test", "print", "label_vec.to.to.to", "model.HINTModel_multi.forward", "model.HINTModel_multi.loss", "train_loss_record.append", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "model.HINTModel_multi.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "model.HINTModel_multi.item"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.train", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward"], ["", "def", "learn", "(", "self", ",", "train_loader", ",", "valid_loader", ",", "test_loader", ")", ":", "\n", "\t\t", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "train_loss_record", "=", "[", "]", "\n", "valid_loss", ",", "predict_all", ",", "label_all", ",", "accuracy", "=", "self", ".", "test", "(", "valid_loader", ",", "return_loss", "=", "True", ")", "\n", "print", "(", "'accuracy'", ",", "accuracy", ")", "\n", "# valid_loss_record = [valid_loss]", "\n", "# best_valid_loss = valid_loss", "\n", "best_model", "=", "deepcopy", "(", "self", ")", "\n", "for", "ep", "in", "tqdm", "(", "range", "(", "self", ".", "epoch", ")", ")", ":", "\n", "\t\t\t", "self", ".", "train", "(", ")", "\n", "for", "nctid_lst", ",", "label_vec", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", "in", "train_loader", ":", "\n", "\t\t\t\t", "label_vec", "=", "label_vec", ".", "to", "(", "self", ".", "device", ")", "\n", "output", "=", "self", ".", "forward", "(", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", "#### 32, 1 -> 32, ||  label_vec 32,", "\n", "# print(label_vec.shape, output.shape, label_vec, output)", "\n", "loss", "=", "self", ".", "loss", "(", "output", ",", "label_vec", ")", "\n", "train_loss_record", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "", "valid_loss", ",", "predict_all", ",", "label_all", ",", "accuracy", "=", "self", ".", "test", "(", "valid_loader", ",", "return_loss", "=", "True", ")", "\n", "print", "(", "'accuracy'", ",", "accuracy", ")", "\n", "", "return", "predict_all", ",", "label_all", "\n", "# \tvalid_loss_record.append(valid_loss)", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINT_nograph.__init__": [[390, 459], ["model.Interaction.__init__", "torch.nn.Linear", "torch.nn.Linear", "HINT.module.Highway", "torch.nn.Linear", "torch.nn.Linear", "HINT.module.Highway", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Linear", "torch.nn.Linear", "HINT.module.Highway", "torch.nn.Linear", "torch.nn.Linear", "HINT.module.Highway", "model.HINT_nograph.to", "torch.nn.Linear().to", "torch.nn.Linear().to", "HINT.module.Highway().to", "model.HINT_nograph.admet_model.append", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Linear", "torch.nn.Linear", "HINT.module.Highway"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "molecule_encoder", ",", "disease_encoder", ",", "protocol_encoder", ",", "device", ",", "\n", "global_embed_size", ",", "\n", "highway_num_layer", ",", "\n", "prefix_name", ",", "\n", "epoch", "=", "20", ",", "\n", "lr", "=", "3e-4", ",", "\n", "weight_decay", "=", "0", ",", ")", ":", "\n", "\t\t", "super", "(", "HINT_nograph", ",", "self", ")", ".", "__init__", "(", "molecule_encoder", "=", "molecule_encoder", ",", "\n", "disease_encoder", "=", "disease_encoder", ",", "\n", "protocol_encoder", "=", "protocol_encoder", ",", "\n", "device", "=", "device", ",", "\n", "global_embed_size", "=", "global_embed_size", ",", "\n", "prefix_name", "=", "prefix_name", ",", "\n", "highway_num_layer", "=", "highway_num_layer", ",", "\n", "epoch", "=", "epoch", ",", "\n", "lr", "=", "lr", ",", "\n", "weight_decay", "=", "weight_decay", ",", "\n", ")", "\n", "self", ".", "save_name", "=", "prefix_name", "+", "'_HINT_nograph'", "\n", "'''\t### interaction model \n\t\tself.molecule_encoder = molecule_encoder \n\t\tself.disease_encoder = disease_encoder \n\t\tself.protocol_encoder = protocol_encoder \n\t\tself.global_embed_size = global_embed_size \n\t\tself.highway_num_layer = highway_num_layer \n\t\tself.feature_dim = self.molecule_encoder.embedding_size + self.disease_encoder.embedding_size + self.protocol_encoder.embedding_size\n\t\tself.epoch = epoch \n\t\tself.lr = lr \n\t\tself.weight_decay = weight_decay \n\t\tself.save_name = save_name\n\n\t\tself.f = F.relu\n\t\tself.loss = nn.BCEWithLogitsLoss()\n\n\t\t##### NN \n\t\tself.encoder2interaction_fc = nn.Linear(self.feature_dim, self.global_embed_size)\n\t\tself.encoder2interaction_highway = Highway(self.global_embed_size, self.highway_num_layer)\n\t\tself.pred_nn = nn.Linear(self.global_embed_size, 1)\n\t\t'''", "\n", "\n", "\n", "#### risk of disease ", "\n", "self", ".", "risk_disease_fc", "=", "nn", ".", "Linear", "(", "self", ".", "disease_encoder", ".", "embedding_size", ",", "self", ".", "global_embed_size", ")", "\n", "self", ".", "risk_disease_higway", "=", "Highway", "(", "self", ".", "global_embed_size", ",", "self", ".", "highway_num_layer", ")", "\n", "\n", "#### augment interaction ", "\n", "self", ".", "augment_interaction_fc", "=", "nn", ".", "Linear", "(", "self", ".", "global_embed_size", "*", "2", ",", "self", ".", "global_embed_size", ")", "\n", "self", ".", "augment_interaction_highway", "=", "Highway", "(", "self", ".", "global_embed_size", ",", "self", ".", "highway_num_layer", ")", "\n", "\n", "#### ADMET ", "\n", "self", ".", "admet_model", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "\t\t\t", "admet_fc", "=", "nn", ".", "Linear", "(", "self", ".", "molecule_encoder", ".", "embedding_size", ",", "self", ".", "global_embed_size", ")", ".", "to", "(", "device", ")", "\n", "admet_highway", "=", "Highway", "(", "self", ".", "global_embed_size", ",", "self", ".", "highway_num_layer", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "admet_model", ".", "append", "(", "nn", ".", "ModuleList", "(", "[", "admet_fc", ",", "admet_highway", "]", ")", ")", "\n", "", "self", ".", "admet_model", "=", "nn", ".", "ModuleList", "(", "self", ".", "admet_model", ")", "\n", "\n", "#### PK ", "\n", "self", ".", "pk_fc", "=", "nn", ".", "Linear", "(", "self", ".", "global_embed_size", "*", "5", ",", "self", ".", "global_embed_size", ")", "\n", "self", ".", "pk_highway", "=", "Highway", "(", "self", ".", "global_embed_size", ",", "self", ".", "highway_num_layer", ")", "\n", "\n", "#### trial node ", "\n", "self", ".", "trial_fc", "=", "nn", ".", "Linear", "(", "self", ".", "global_embed_size", "*", "2", ",", "self", ".", "global_embed_size", ")", "\n", "self", ".", "trial_highway", "=", "Highway", "(", "self", ".", "global_embed_size", ",", "self", ".", "highway_num_layer", ")", "\n", "\n", "## self.pred_nn = nn.Linear(self.global_embed_size, 1)", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINT_nograph.forward": [[461, 494], ["model.HINT_nograph.forward_get_three_encoders", "model.HINT_nograph.forward_encoder_2_interaction", "model.HINT_nograph.feed_lst_of_module", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.HINT_nograph.feed_lst_of_module", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.HINT_nograph.feed_lst_of_module", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.HINT_nograph.feed_lst_of_module", "model.HINT_nograph.pred_nn", "model.HINT_nograph.feed_lst_of_module", "admet_embedding_lst.append"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.forward_get_three_encoders", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Interaction.forward_encoder_2_interaction", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.feed_lst_of_module", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.feed_lst_of_module", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.feed_lst_of_module", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.feed_lst_of_module", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.feed_lst_of_module"], ["", "def", "forward", "(", "self", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ",", "if_gnn", "=", "False", ")", ":", "\n", "### encoder for molecule, disease and protocol", "\n", "\t\t", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", "=", "self", ".", "forward_get_three_encoders", "(", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", "\n", "### interaction ", "\n", "interaction_embedding", "=", "self", ".", "forward_encoder_2_interaction", "(", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", ")", "\n", "### risk of disease ", "\n", "risk_of_disease_embedding", "=", "self", ".", "feed_lst_of_module", "(", "input_feature", "=", "icd_embed", ",", "\n", "lst_of_module", "=", "[", "self", ".", "risk_disease_fc", ",", "self", ".", "risk_disease_higway", "]", ")", "\n", "### augment interaction   ", "\n", "augment_interaction_input", "=", "torch", ".", "cat", "(", "[", "interaction_embedding", ",", "risk_of_disease_embedding", "]", ",", "1", ")", "\n", "augment_interaction_embedding", "=", "self", ".", "feed_lst_of_module", "(", "input_feature", "=", "augment_interaction_input", ",", "\n", "lst_of_module", "=", "[", "self", ".", "augment_interaction_fc", ",", "self", ".", "augment_interaction_highway", "]", ")", "\n", "### admet ", "\n", "admet_embedding_lst", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "5", ")", ":", "\n", "\t\t\t", "admet_embedding", "=", "self", ".", "feed_lst_of_module", "(", "input_feature", "=", "molecule_embed", ",", "\n", "lst_of_module", "=", "self", ".", "admet_model", "[", "idx", "]", ")", "\n", "admet_embedding_lst", ".", "append", "(", "admet_embedding", ")", "\n", "### pk ", "\n", "", "pk_input", "=", "torch", ".", "cat", "(", "admet_embedding_lst", ",", "1", ")", "\n", "pk_embedding", "=", "self", ".", "feed_lst_of_module", "(", "input_feature", "=", "pk_input", ",", "\n", "lst_of_module", "=", "[", "self", ".", "pk_fc", ",", "self", ".", "pk_highway", "]", ")", "\n", "### trial ", "\n", "trial_input", "=", "torch", ".", "cat", "(", "[", "pk_embedding", ",", "augment_interaction_embedding", "]", ",", "1", ")", "\n", "trial_embedding", "=", "self", ".", "feed_lst_of_module", "(", "input_feature", "=", "trial_input", ",", "\n", "lst_of_module", "=", "[", "self", ".", "trial_fc", ",", "self", ".", "trial_highway", "]", ")", "\n", "output", "=", "self", ".", "pred_nn", "(", "trial_embedding", ")", "\n", "if", "if_gnn", "==", "False", ":", "\n", "\t\t\t", "return", "output", "\n", "", "else", ":", "\n", "\t\t\t", "embedding_lst", "=", "[", "molecule_embed", ",", "icd_embed", ",", "protocol_embed", ",", "interaction_embedding", ",", "risk_of_disease_embedding", ",", "augment_interaction_embedding", "]", "+", "admet_embedding_lst", "+", "[", "pk_embedding", ",", "trial_embedding", "]", "\n", "return", "embedding_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.__init__": [[497, 543], ["model.HINT_nograph.__init__", "model.HINTModel.generate_adj", "HINT.module.GCN", "torch.nn.ModuleList", "torch.nn.ModuleList", "model.HINTModel.to", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "model.HINTModel.gnn_attention", "range"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.generate_adj", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.gnn_attention"], ["\t", "def", "__init__", "(", "self", ",", "molecule_encoder", ",", "disease_encoder", ",", "protocol_encoder", ",", "\n", "device", ",", "\n", "global_embed_size", ",", "\n", "highway_num_layer", ",", "\n", "prefix_name", ",", "\n", "gnn_hidden_size", ",", "\n", "epoch", "=", "20", ",", "\n", "lr", "=", "3e-4", ",", "\n", "weight_decay", "=", "0", ",", ")", ":", "\n", "\t\t", "super", "(", "HINTModel", ",", "self", ")", ".", "__init__", "(", "molecule_encoder", "=", "molecule_encoder", ",", "\n", "disease_encoder", "=", "disease_encoder", ",", "\n", "protocol_encoder", "=", "protocol_encoder", ",", "\n", "device", "=", "device", ",", "\n", "prefix_name", "=", "prefix_name", ",", "\n", "global_embed_size", "=", "global_embed_size", ",", "\n", "highway_num_layer", "=", "highway_num_layer", ",", "\n", "epoch", "=", "epoch", ",", "\n", "lr", "=", "lr", ",", "\n", "weight_decay", "=", "weight_decay", ")", "\n", "self", ".", "save_name", "=", "prefix_name", "\n", "self", ".", "gnn_hidden_size", "=", "gnn_hidden_size", "\n", "#### GNN ", "\n", "self", ".", "adj", "=", "self", ".", "generate_adj", "(", ")", "\n", "self", ".", "gnn", "=", "GCN", "(", "\n", "nfeat", "=", "self", ".", "global_embed_size", ",", "\n", "nhid", "=", "self", ".", "gnn_hidden_size", ",", "\n", "nclass", "=", "1", ",", "\n", "dropout", "=", "0.6", ",", "\n", "init", "=", "'uniform'", ")", "\n", "### gnn's attention \t\t", "\n", "self", ".", "node_size", "=", "self", ".", "adj", ".", "shape", "[", "0", "]", "\n", "'''\n\t\tself.graph_attention_model_mat = nn.ModuleList([nn.ModuleList([self.gnn_attention() \\\n        \t\t\t\t\t\t\t\tif self.adj[i,j]==1 else None  \\\n        \t\t\t\t\t\t\t\tfor j in range(self.node_size)]) \\\n        \t\t\t\t\t\t\t\tfor i in range(self.node_size)])\n        '''", "\n", "self", ".", "graph_attention_model_mat", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "ModuleList", "(", "[", "self", ".", "gnn_attention", "(", ")", "if", "self", ".", "adj", "[", "i", ",", "j", "]", "==", "1", "else", "None", "for", "j", "in", "range", "(", "self", ".", "node_size", ")", "]", ")", "for", "i", "in", "range", "(", "self", ".", "node_size", ")", "]", ")", "\n", "# self.graph_attention_model_mat = nn.ModuleList([nn.ModuleList([self.gnn_attention() if self.adj[i,j]==1 else None for j in range(self.node_size)]) for i in range(self.node_size)])", "\n", "\n", "'''\nnn.ModuleList([ nn.ModuleList([nn.Linear(3,2) for j in range(5)] + [None]) for i in range(3)])\n\t\t'''", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.generate_adj": [[544, 562], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.to", "torch.zeros.to", "len", "len", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "len", "len", "enumerate", "enumerate"], "methods", ["None"], ["", "def", "generate_adj", "(", "self", ")", ":", "\n", "##### consistent with HINT_nograph.forward", "\n", "\t\t", "lst", "=", "[", "\"molecule\"", ",", "\"disease\"", ",", "\"criteria\"", ",", "'INTERACTION'", ",", "'risk_disease'", ",", "'augment_interaction'", ",", "'A'", ",", "'D'", ",", "'M'", ",", "'E'", ",", "'T'", ",", "'PK'", ",", "\"final\"", "]", "\n", "edge_lst", "=", "[", "(", "\"disease\"", ",", "\"molecule\"", ")", ",", "(", "\"disease\"", ",", "\"criteria\"", ")", ",", "(", "\"molecule\"", ",", "\"criteria\"", ")", ",", "\n", "(", "\"disease\"", ",", "\"INTERACTION\"", ")", ",", "(", "\"molecule\"", ",", "\"INTERACTION\"", ")", ",", "(", "\"criteria\"", ",", "\"INTERACTION\"", ")", ",", "\n", "(", "\"disease\"", ",", "\"risk_disease\"", ")", ",", "(", "'risk_disease'", ",", "'augment_interaction'", ")", ",", "(", "'INTERACTION'", ",", "'augment_interaction'", ")", ",", "\n", "(", "\"molecule\"", ",", "\"A\"", ")", ",", "(", "\"molecule\"", ",", "\"D\"", ")", ",", "(", "\"molecule\"", ",", "\"M\"", ")", ",", "(", "\"molecule\"", ",", "\"E\"", ")", ",", "(", "\"molecule\"", ",", "\"T\"", ")", ",", "\n", "(", "'A'", ",", "'PK'", ")", ",", "(", "'D'", ",", "'PK'", ")", ",", "(", "'M'", ",", "'PK'", ")", ",", "(", "'E'", ",", "'PK'", ")", ",", "(", "'T'", ",", "'PK'", ")", ",", "\n", "(", "'augment_interaction'", ",", "'final'", ")", ",", "(", "'PK'", ",", "'final'", ")", "]", "\n", "adj", "=", "torch", ".", "zeros", "(", "len", "(", "lst", ")", ",", "len", "(", "lst", ")", ")", "\n", "adj", "=", "torch", ".", "eye", "(", "len", "(", "lst", ")", ")", "*", "len", "(", "lst", ")", "\n", "num2str", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "enumerate", "(", "lst", ")", "}", "\n", "str2num", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "enumerate", "(", "lst", ")", "}", "\n", "for", "i", ",", "j", "in", "edge_lst", ":", "\n", "\t\t\t", "n1", ",", "n2", "=", "str2num", "[", "i", "]", ",", "str2num", "[", "j", "]", "\n", "adj", "[", "n1", ",", "n2", "]", "=", "1", "\n", "adj", "[", "n2", ",", "n1", "]", "=", "1", "\n", "", "return", "adj", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.generate_attention_matrx": [[563, 573], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "range", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.HINTModel.feed_lst_of_module", "node_feature_mat[].view", "node_feature_mat[].view"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.feed_lst_of_module"], ["", "def", "generate_attention_matrx", "(", "self", ",", "node_feature_mat", ")", ":", "\n", "\t\t", "attention_mat", "=", "torch", ".", "zeros", "(", "self", ".", "node_size", ",", "self", ".", "node_size", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "node_size", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "self", ".", "node_size", ")", ":", "\n", "\t\t\t\t", "if", "self", ".", "adj", "[", "i", ",", "j", "]", "!=", "1", ":", "\n", "\t\t\t\t\t", "continue", "\n", "", "feature", "=", "torch", ".", "cat", "(", "[", "node_feature_mat", "[", "i", "]", ".", "view", "(", "1", ",", "-", "1", ")", ",", "node_feature_mat", "[", "j", "]", ".", "view", "(", "1", ",", "-", "1", ")", "]", ",", "1", ")", "\n", "attention_model", "=", "self", ".", "graph_attention_model_mat", "[", "i", "]", "[", "j", "]", "\n", "attention_mat", "[", "i", ",", "j", "]", "=", "torch", ".", "sigmoid", "(", "self", ".", "feed_lst_of_module", "(", "input_feature", "=", "feature", ",", "lst_of_module", "=", "attention_model", ")", ")", "\n", "", "", "return", "attention_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.gnn_attention": [[575, 579], ["HINT.module.Highway().to", "torch.nn.Linear().to", "torch.nn.Linear().to", "torch.nn.ModuleList", "torch.nn.ModuleList", "HINT.module.Highway", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["None"], ["", "def", "gnn_attention", "(", "self", ")", ":", "\n", "\t\t", "highway_nn", "=", "Highway", "(", "size", "=", "self", ".", "global_embed_size", "*", "2", ",", "num_layers", "=", "self", ".", "highway_num_layer", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "highway_fc", "=", "nn", ".", "Linear", "(", "self", ".", "global_embed_size", "*", "2", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "return", "nn", ".", "ModuleList", "(", "[", "highway_nn", ",", "highway_fc", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.forward": [[580, 601], ["model.HINT_nograph.forward", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.HINTModel.generate_attention_matrx", "model.HINTModel.gnn", "output[].view", "output_lst.append", "embedding[].view", "attention_mat_lst.append"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.generate_attention_matrx"], ["", "def", "forward", "(", "self", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ",", "return_attention_matrix", "=", "False", ")", ":", "\n", "\t\t", "embedding_lst", "=", "HINT_nograph", ".", "forward", "(", "self", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ",", "if_gnn", "=", "True", ")", "\n", "### length is 13, each is 32,50 ", "\n", "batch_size", "=", "embedding_lst", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "output_lst", "=", "[", "]", "\n", "if", "return_attention_matrix", ":", "\n", "\t\t\t", "attention_mat_lst", "=", "[", "]", "\n", "", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "\t\t\t", "node_feature_lst", "=", "[", "embedding", "[", "i", "]", ".", "view", "(", "1", ",", "-", "1", ")", "for", "embedding", "in", "embedding_lst", "]", "\n", "node_feature_mat", "=", "torch", ".", "cat", "(", "node_feature_lst", ",", "0", ")", "### 13, 50 ", "\n", "attention_mat", "=", "self", ".", "generate_attention_matrx", "(", "node_feature_mat", ")", "\n", "output", "=", "self", ".", "gnn", "(", "node_feature_mat", ",", "self", ".", "adj", "*", "attention_mat", ")", "\n", "output", "=", "output", "[", "-", "1", "]", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "output_lst", ".", "append", "(", "output", ")", "\n", "if", "return_attention_matrix", ":", "\n", "\t\t\t\t", "attention_mat_lst", ".", "append", "(", "attention_mat", ")", "\n", "", "", "output_mat", "=", "torch", ".", "cat", "(", "output_lst", ",", "0", ")", "\n", "if", "not", "return_attention_matrix", ":", "\n", "\t\t\t", "return", "output_mat", "\n", "", "else", ":", "\n", "\t\t\t", "return", "output_mat", ",", "attention_mat_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.interpret": [[602, 622], ["model.HINTModel.forward", "output.view.view.view", "len", "range", "replace_strange_symbol", "name.replace.replace.replace", "name.replace.replace.replace", "print", "data2graph", "len", "str", "label_vec[].item", "str", "torch.sigmoid().item", "torch.sigmoid().item", "torch.sigmoid().item", "torch.sigmoid().item", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.replace_strange_symbol"], ["", "", "def", "interpret", "(", "self", ",", "complete_dataloader", ")", ":", "\n", "\t\t", "from", "graph_visualize_interpret", "import", "data2graph", "\n", "from", "HINT", ".", "utils", "import", "replace_strange_symbol", "\n", "for", "nctid_lst", ",", "status_lst", ",", "why_stop_lst", ",", "label_vec", ",", "phase_lst", ",", "diseases_lst", ",", "icdcode_lst3", ",", "drugs_lst", ",", "smiles_lst2", ",", "criteria_lst", "in", "complete_dataloader", ":", "\n", "\t\t\t", "output", ",", "attention_mat_lst", "=", "self", ".", "forward", "(", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ",", "return_attention_matrix", "=", "True", ")", "\n", "output", "=", "output", ".", "view", "(", "-", "1", ")", "\n", "batch_size", "=", "len", "(", "nctid_lst", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "\t\t\t\t", "name", "=", "'__'", ".", "join", "(", "[", "nctid_lst", "[", "i", "]", ",", "status_lst", "[", "i", "]", ",", "why_stop_lst", "[", "i", "]", ",", "str", "(", "label_vec", "[", "i", "]", ".", "item", "(", ")", ")", ",", "str", "(", "torch", ".", "sigmoid", "(", "output", "[", "i", "]", ")", ".", "item", "(", ")", ")", "[", ":", "5", "]", ",", "phase_lst", "[", "i", "]", ",", "diseases_lst", "[", "i", "]", ",", "drugs_lst", "[", "i", "]", "]", ")", "\n", "if", "len", "(", "name", ")", ">", "150", ":", "\n", "\t\t\t\t\t", "name", "=", "name", "[", ":", "250", "]", "\n", "", "name", "=", "replace_strange_symbol", "(", "name", ")", "\n", "name", "=", "name", ".", "replace", "(", "'__'", ",", "'_'", ")", "\n", "name", "=", "name", ".", "replace", "(", "'  '", ",", "' '", ")", "\n", "name", "=", "'interpret_result/'", "+", "name", "+", "'.png'", "\n", "print", "(", "name", ")", "\n", "data2graph", "(", "attention_matrix", "=", "attention_mat_lst", "[", "i", "]", ",", "adj", "=", "self", ".", "adj", ",", "save_name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.HINTModel.init_pretrain": [[623, 625], ["None"], "methods", ["None"], ["", "", "", "def", "init_pretrain", "(", "self", ",", "admet_model", ")", ":", "\n", "\t\t", "self", ".", "molecule_encoder", "=", "admet_model", ".", "molecule_encoder", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Only_Molecule.__init__": [[638, 655], ["model.Interaction.__init__", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "molecule_encoder", ",", "disease_encoder", ",", "protocol_encoder", ",", "\n", "global_embed_size", ",", "\n", "highway_num_layer", ",", "\n", "prefix_name", ",", "\n", "epoch", "=", "20", ",", "\n", "lr", "=", "3e-4", ",", "\n", "weight_decay", "=", "0", ")", ":", "\n", "\t\t", "super", "(", "Only_Molecule", ",", "self", ")", ".", "__init__", "(", "molecule_encoder", "=", "molecule_encoder", ",", "\n", "disease_encoder", "=", "disease_encoder", ",", "\n", "protocol_encoder", "=", "protocol_encoder", ",", "\n", "global_embed_size", "=", "global_embed_size", ",", "\n", "highway_num_layer", "=", "highway_num_layer", ",", "\n", "prefix_name", "=", "prefix_name", ",", "\n", "epoch", "=", "epoch", ",", "\n", "lr", "=", "lr", ",", "\n", "weight_decay", "=", "weight_decay", ",", ")", "\n", "self", ".", "molecule2out", "=", "nn", ".", "Linear", "(", "self", ".", "global_embed_size", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Only_Molecule.forward": [[657, 660], ["model.Only_Molecule.molecule_encoder.forward_smiles_lst_lst", "model.Only_Molecule.molecule2out"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_smiles_lst_lst"], ["", "def", "forward", "(", "self", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", ":", "\n", "\t\t", "molecule_embed", "=", "self", ".", "molecule_encoder", ".", "forward_smiles_lst_lst", "(", "smiles_lst2", ")", "\n", "return", "self", ".", "molecule2out", "(", "molecule_embed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Only_Disease.__init__": [[663, 680], ["model.Only_Molecule.__init__"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "molecule_encoder", ",", "disease_encoder", ",", "protocol_encoder", ",", "\n", "global_embed_size", ",", "\n", "highway_num_layer", ",", "\n", "prefix_name", ",", "\n", "epoch", "=", "20", ",", "\n", "lr", "=", "3e-4", ",", "\n", "weight_decay", "=", "0", ")", ":", "\n", "\t\t", "super", "(", "Only_Disease", ",", "self", ")", ".", "__init__", "(", "molecule_encoder", "=", "molecule_encoder", ",", "\n", "disease_encoder", "=", "disease_encoder", ",", "\n", "protocol_encoder", "=", "protocol_encoder", ",", "\n", "global_embed_size", "=", "global_embed_size", ",", "\n", "highway_num_layer", "=", "highway_num_layer", ",", "\n", "prefix_name", "=", "prefix_name", ",", "\n", "epoch", "=", "epoch", ",", "\n", "lr", "=", "lr", ",", "\n", "weight_decay", "=", "weight_decay", ",", ")", "\n", "self", ".", "disease2out", "=", "self", ".", "molecule2out", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.Only_Disease.forward": [[682, 685], ["model.Only_Disease.disease_encoder.forward_code_lst3", "model.Only_Disease.disease2out"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_code_lst3"], ["", "def", "forward", "(", "self", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ")", ":", "\n", "\t\t", "icd_embed", "=", "self", ".", "disease_encoder", ".", "forward_code_lst3", "(", "icdcode_lst3", ")", "\n", "return", "self", ".", "disease2out", "(", "icd_embed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.__init__": [[720, 743], ["torch.nn.Sequential.__init__", "len", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.BCEWithLogitsLoss", "torch.nn.BCEWithLogitsLoss", "torch.nn.Linear", "torch.nn.Linear", "enumerate"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "molecule_dim", ",", "diseasecode_dim", ",", "\n", "global_icd", ",", "\n", "protocol_dim", "=", "0", ",", "\n", "prefix_name", "=", "'FFNN'", ",", "\n", "epoch", "=", "10", ",", "\n", "lr", "=", "3e-4", ",", "\n", "weight_decay", "=", "0", ",", "\n", ")", ":", "\n", "\t\t", "super", "(", "FFNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "molecule_dim", "=", "molecule_dim", "\n", "self", ".", "diseasecode_dim", "=", "diseasecode_dim", "\n", "self", ".", "protocol_dim", "=", "protocol_dim", "\n", "self", ".", "prefix_name", "=", "prefix_name", "\n", "self", ".", "epoch", "=", "epoch", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "weight_decay", "=", "weight_decay", "\n", "self", ".", "global_icd", "=", "global_icd", "\n", "self", ".", "num_icd", "=", "len", "(", "global_icd", ")", "\n", "\n", "self", ".", "fc_dims", "=", "[", "self", ".", "molecule_dim", "+", "self", ".", "diseasecode_dim", "+", "self", ".", "protocol_dim", ",", "2000", ",", "1000", ",", "200", ",", "50", ",", "1", "]", "\n", "self", ".", "fc_layers", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "v", ",", "self", ".", "fc_dims", "[", "i", "+", "1", "]", ")", "for", "i", ",", "v", "in", "enumerate", "(", "self", ".", "fc_dims", "[", ":", "-", "1", "]", ")", "]", ")", "\n", "self", ".", "loss", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", "\n", "self", ".", "save_name", "=", "prefix_name", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.forward": [[744, 751], ["range", "torch.sigmoid", "torch.sigmoid", "fc_layer", "last_layer", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "\t\t", "for", "i", "in", "range", "(", "len", "(", "self", ".", "fc_layers", ")", "-", "1", ")", ":", "\n", "\t\t\t", "fc_layer", "=", "self", ".", "fc_layers", "[", "i", "]", "\n", "X", "=", "fc_layer", "(", "X", ")", "\n", "", "last_layer", "=", "self", ".", "fc_layers", "[", "-", "1", "]", "\n", "pred", "=", "F", ".", "sigmoid", "(", "last_layer", "(", "X", ")", ")", "\n", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.learn": [[755, 781], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "copy.deepcopy.test", "copy.deepcopy", "tqdm.tqdm.tqdm", "copy.deepcopy.plot_learning_curve", "copy.deepcopy", "copy.deepcopy.test", "copy.deepcopy.parameters", "range", "copy.deepcopy.test", "valid_loss_record.append", "model.dataloader2Xy", "copy.deepcopy.forward().view", "copy.deepcopy.loss", "train_loss_record.append", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "model.FFNN.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "copy.deepcopy", "label_vec.float", "model.FFNN.item", "copy.deepcopy.forward"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.plot_learning_curve", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.dataloader2Xy", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward"], ["", "def", "learn", "(", "self", ",", "train_loader", ",", "valid_loader", ",", "test_loader", ")", ":", "\n", "\t\t", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "train_loss_record", "=", "[", "]", "\n", "valid_loss", "=", "self", ".", "test", "(", "valid_loader", ",", "return_loss", "=", "True", ")", "\n", "valid_loss_record", "=", "[", "valid_loss", "]", "\n", "best_valid_loss", "=", "valid_loss", "\n", "best_model", "=", "deepcopy", "(", "self", ")", "\n", "\n", "for", "ep", "in", "tqdm", "(", "range", "(", "self", ".", "epoch", ")", ")", ":", "\n", "\t\t\t", "for", "nctid_lst", ",", "label_vec", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", "in", "train_loader", ":", "\n", "\t\t\t\t", "X", ",", "_", "=", "dataloader2Xy", "(", "nctid_lst", ",", "label_vec", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ",", "self", ".", "global_icd", ")", "\n", "output", "=", "self", ".", "forward", "(", "X", ")", ".", "view", "(", "-", "1", ")", "#### 32, 1 -> 32, ||  label_vec 32,", "\n", "loss", "=", "self", ".", "loss", "(", "output", ",", "label_vec", ".", "float", "(", ")", ")", "\n", "train_loss_record", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "", "valid_loss", "=", "self", ".", "test", "(", "valid_loader", ",", "return_loss", "=", "True", ")", "\n", "valid_loss_record", ".", "append", "(", "valid_loss", ")", "\n", "if", "valid_loss", "<", "best_valid_loss", ":", "\n", "\t\t\t\t", "best_valid_loss", "=", "valid_loss", "\n", "best_model", "=", "deepcopy", "(", "self", ")", "\n", "\n", "", "", "self", ".", "plot_learning_curve", "(", "train_loss_record", ",", "valid_loss_record", ")", "\n", "self", "=", "deepcopy", "(", "best_model", ")", "\n", "auc_score", ",", "f1score", ",", "prauc_score", ",", "precision", ",", "recall", ",", "accuracy", ",", "predict_1_ratio", ",", "label_1_ratio", "=", "self", ".", "test", "(", "test_loader", ",", "return_loss", "=", "False", ",", "validloader", "=", "valid_loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.evaluation": [[784, 815], ["sklearn.metrics.roc_auc_score", "roc_curve", "precision_recall_curve", "list", "sklearn.metrics.f1_score", "sklearn.metrics.average_precision_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "sklearn.metrics.accuracy_score", "open", "zip", "int", "map", "sum", "len", "sum", "len", "fout.write", "str", "str"], "methods", ["None"], ["", "def", "evaluation", "(", "self", ",", "predict_all", ",", "label_all", ",", "threshold", "=", "0.5", ")", ":", "\n", "\t\t", "import", "pickle", ",", "os", "\n", "from", "sklearn", ".", "metrics", "import", "roc_curve", ",", "precision_recall_curve", "\n", "with", "open", "(", "\"predict_label.txt\"", ",", "'w'", ")", "as", "fout", ":", "\n", "\t\t\t", "for", "i", ",", "j", "in", "zip", "(", "predict_all", ",", "label_all", ")", ":", "\n", "\t\t\t\t", "fout", ".", "write", "(", "str", "(", "i", ")", "[", ":", "4", "]", "+", "'\\t'", "+", "str", "(", "j", ")", "[", ":", "4", "]", "+", "'\\n'", ")", "\n", "", "", "auc_score", "=", "roc_auc_score", "(", "label_all", ",", "predict_all", ")", "\n", "figure_folder", "=", "\"figure\"", "\n", "#### ROC-curve ", "\n", "fpr", ",", "tpr", ",", "thresholds", "=", "roc_curve", "(", "label_all", ",", "predict_all", ",", "pos_label", "=", "1", ")", "\n", "# roc_curve =plt.figure()", "\n", "# plt.plot(fpr,tpr,'-',label=self.save_name + ' ROC Curve ')", "\n", "# plt.legend(fontsize = 15)", "\n", "#plt.savefig(os.path.join(figure_folder,name+\"_roc_curve.png\"))", "\n", "#### PR-curve", "\n", "precision", ",", "recall", ",", "thresholds", "=", "precision_recall_curve", "(", "label_all", ",", "predict_all", ")", "\n", "# plt.plot(recall,precision, label = self.save_name + ' PR Curve')", "\n", "# plt.legend(fontsize = 15)", "\n", "# plt.savefig(os.path.join(figure_folder,self.save_name + \"_pr_curve.png\"))", "\n", "label_all", "=", "[", "int", "(", "i", ")", "for", "i", "in", "label_all", "]", "\n", "float2binary", "=", "lambda", "x", ":", "0", "if", "x", "<", "threshold", "else", "1", "\n", "predict_all", "=", "list", "(", "map", "(", "float2binary", ",", "predict_all", ")", ")", "\n", "f1score", "=", "f1_score", "(", "label_all", ",", "predict_all", ")", "\n", "prauc_score", "=", "average_precision_score", "(", "label_all", ",", "predict_all", ")", "\n", "# print(predict_all)", "\n", "precision", "=", "precision_score", "(", "label_all", ",", "predict_all", ")", "\n", "recall", "=", "recall_score", "(", "label_all", ",", "predict_all", ")", "\n", "accuracy", "=", "accuracy_score", "(", "label_all", ",", "predict_all", ")", "\n", "predict_1_ratio", "=", "sum", "(", "predict_all", ")", "/", "len", "(", "predict_all", ")", "\n", "label_1_ratio", "=", "sum", "(", "label_all", ")", "/", "len", "(", "label_all", ")", "\n", "return", "auc_score", ",", "f1score", ",", "prauc_score", ",", "precision", ",", "recall", ",", "accuracy", ",", "predict_1_ratio", ",", "label_1_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.generate_predict": [[817, 829], ["model.dataloader2Xy", "model.FFNN.forward().view", "model.FFNN.loss", "model.FFNN.item", "predict_all.extend", "label_all.extend", "label_vec.float", "model.FFNN.forward", "i.item", "i.item", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.dataloader2Xy", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward"], ["", "def", "generate_predict", "(", "self", ",", "dataloader", ")", ":", "\n", "\t\t", "whole_loss", "=", "0", "\n", "label_all", ",", "predict_all", "=", "[", "]", ",", "[", "]", "\n", "for", "nctid_lst", ",", "label_vec", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", "in", "dataloader", ":", "\n", "\t\t\t", "X", ",", "_", "=", "dataloader2Xy", "(", "nctid_lst", ",", "label_vec", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ",", "self", ".", "global_icd", ")", "\n", "output", "=", "self", ".", "forward", "(", "X", ")", ".", "view", "(", "-", "1", ")", "\n", "loss", "=", "self", ".", "loss", "(", "output", ",", "label_vec", ".", "float", "(", ")", ")", "\n", "whole_loss", "+=", "loss", ".", "item", "(", ")", "\n", "predict_all", ".", "extend", "(", "[", "i", ".", "item", "(", ")", "for", "i", "in", "torch", ".", "sigmoid", "(", "output", ")", "]", ")", "\n", "label_all", ".", "extend", "(", "[", "i", ".", "item", "(", ")", "for", "i", "in", "label_vec", "]", ")", "\n", "\n", "", "return", "whole_loss", ",", "predict_all", ",", "label_all", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.bootstrap_test": [[830, 859], ["model.FFNN.eval", "model.FFNN.generate_predict", "matplotlib.clf", "plot_hist", "model.FFNN.bootstrap_test.bootstrap"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.generate_predict", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.plot_hist"], ["", "def", "bootstrap_test", "(", "self", ",", "dataloader", ",", "sample_num", "=", "20", ")", ":", "\n", "# if validloader is not None:", "\n", "# \tbest_threshold = self.select_threshold_for_binary(validloader)", "\n", "\t\t", "self", ".", "eval", "(", ")", "\n", "best_threshold", "=", "0.5", "\n", "whole_loss", ",", "predict_all", ",", "label_all", "=", "self", ".", "generate_predict", "(", "dataloader", ")", "\n", "from", "HINT", ".", "utils", "import", "plot_hist", "\n", "plt", ".", "clf", "(", ")", "\n", "prefix_name", "=", "\"./figure/\"", "+", "self", ".", "save_name", "\n", "plot_hist", "(", "prefix_name", ",", "predict_all", ",", "label_all", ")", "\n", "def", "bootstrap", "(", "length", ",", "sample_num", ")", ":", "\n", "\t\t\t", "idx", "=", "[", "i", "for", "i", "in", "range", "(", "length", ")", "]", "\n", "from", "random", "import", "choices", "\n", "bootstrap_idx", "=", "[", "choices", "(", "idx", ",", "k", "=", "length", ")", "for", "i", "in", "range", "(", "sample_num", ")", "]", "\n", "return", "bootstrap_idx", "\n", "", "results_lst", "=", "[", "]", "\n", "bootstrap_idx_lst", "=", "bootstrap", "(", "len", "(", "predict_all", ")", ",", "sample_num", "=", "sample_num", ")", "\n", "for", "bootstrap_idx", "in", "bootstrap_idx_lst", ":", "\n", "\t\t\t", "bootstrap_label", "=", "[", "label_all", "[", "idx", "]", "for", "idx", "in", "bootstrap_idx", "]", "\n", "bootstrap_predict", "=", "[", "predict_all", "[", "idx", "]", "for", "idx", "in", "bootstrap_idx", "]", "\n", "results", "=", "self", ".", "evaluation", "(", "bootstrap_predict", ",", "bootstrap_label", ",", "threshold", "=", "best_threshold", ")", "\n", "results_lst", ".", "append", "(", "results", ")", "\n", "", "self", ".", "train", "(", ")", "\n", "auc", "=", "[", "results", "[", "0", "]", "for", "results", "in", "results_lst", "]", "\n", "f1score", "=", "[", "results", "[", "1", "]", "for", "results", "in", "results_lst", "]", "\n", "prauc_score", "=", "[", "results", "[", "2", "]", "for", "results", "in", "results_lst", "]", "\n", "print", "(", "\"PR-AUC   mean: \"", "+", "str", "(", "np", ".", "mean", "(", "prauc_score", ")", ")", "[", ":", "6", "]", ",", "\"std: \"", "+", "str", "(", "np", ".", "std", "(", "prauc_score", ")", ")", "[", ":", "6", "]", ")", "\n", "print", "(", "\"F1       mean: \"", "+", "str", "(", "np", ".", "mean", "(", "f1score", ")", ")", "[", ":", "6", "]", ",", "\"std: \"", "+", "str", "(", "np", ".", "std", "(", "f1score", ")", ")", "[", ":", "6", "]", ")", "\n", "print", "(", "\"ROC-AUC  mean: \"", "+", "str", "(", "np", ".", "mean", "(", "auc", ")", ")", "[", ":", "6", "]", ",", "\"std: \"", "+", "str", "(", "np", ".", "std", "(", "auc", ")", ")", "[", ":", "6", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.test": [[861, 885], ["model.FFNN.eval", "model.FFNN.generate_predict", "model.FFNN.train", "model.FFNN.evaluation", "print", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.generate_predict", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.train", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.evaluation"], ["", "def", "test", "(", "self", ",", "dataloader", ",", "return_loss", "=", "True", ",", "validloader", "=", "None", ")", ":", "\n", "# if validloader is not None:", "\n", "# \tbest_threshold = self.select_threshold_for_binary(validloader)", "\n", "\t\t", "self", ".", "eval", "(", ")", "\n", "best_threshold", "=", "0.5", "\n", "whole_loss", ",", "predict_all", ",", "label_all", "=", "self", ".", "generate_predict", "(", "dataloader", ")", "\n", "# from HINT.utils import plot_hist", "\n", "# plt.clf()", "\n", "# prefix_name = \"./figure/\" + self.save_name ", "\n", "# plot_hist(prefix_name, predict_all, label_all)", "\n", "self", ".", "train", "(", ")", "\n", "if", "return_loss", ":", "\n", "\t\t\t", "return", "whole_loss", "\n", "", "else", ":", "\n", "\t\t\t", "print_num", "=", "5", "\n", "auc_score", ",", "f1score", ",", "prauc_score", ",", "precision", ",", "recall", ",", "accuracy", ",", "predict_1_ratio", ",", "label_1_ratio", "=", "self", ".", "evaluation", "(", "predict_all", ",", "label_all", ",", "threshold", "=", "best_threshold", ")", "\n", "print", "(", "\"ROC AUC: \"", "+", "str", "(", "auc_score", ")", "[", ":", "print_num", "]", "+", "\"\\nF1: \"", "+", "str", "(", "f1score", ")", "[", ":", "print_num", "]", "+", "\"\\nPR-AUC: \"", "+", "str", "(", "prauc_score", ")", "[", ":", "print_num", "]", "+", "\"\\nPrecision: \"", "+", "str", "(", "precision", ")", "[", ":", "print_num", "]", "+", "\"\\nrecall: \"", "+", "str", "(", "recall", ")", "[", ":", "print_num", "]", "+", "\"\\naccuracy: \"", "+", "str", "(", "accuracy", ")", "[", ":", "print_num", "]", "+", "\"\\npredict 1 ratio: \"", "+", "str", "(", "predict_1_ratio", ")", "[", ":", "print_num", "]", "+", "\"\\nlabel 1 ratio: \"", "+", "str", "(", "label_1_ratio", ")", "[", ":", "print_num", "]", ")", "\n", "return", "auc_score", ",", "f1score", ",", "prauc_score", ",", "precision", ",", "recall", ",", "accuracy", ",", "predict_1_ratio", ",", "label_1_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.FFNN.plot_learning_curve": [[887, 894], ["matplotlib.plot", "matplotlib.savefig", "matplotlib.clf", "matplotlib.plot", "matplotlib.savefig", "matplotlib.clf"], "methods", ["None"], ["", "", "def", "plot_learning_curve", "(", "self", ",", "train_loss_record", ",", "valid_loss_record", ")", ":", "\n", "\t\t", "plt", ".", "plot", "(", "train_loss_record", ")", "\n", "plt", ".", "savefig", "(", "\"./figure/\"", "+", "self", ".", "save_name", "+", "'_train_loss.jpg'", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "plt", ".", "plot", "(", "valid_loss_record", ")", "\n", "plt", ".", "savefig", "(", "\"./figure/\"", "+", "self", ".", "save_name", "+", "'_valid_loss.jpg'", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.__init__": [[899, 919], ["torch.nn.Sequential.__init__", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "model.ADMET.to", "torch.nn.Linear().to", "torch.nn.Linear().to", "HINT.module.Highway().to", "model.ADMET.admet_model.append", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Linear().to", "torch.nn.Linear().to", "torch.nn.Linear", "torch.nn.Linear", "HINT.module.Highway", "range", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "mpnn_model", ",", "device", ")", ":", "\n", "\t\t", "super", "(", "ADMET", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num", "=", "5", "\n", "self", ".", "mpnn_model", "=", "mpnn_model", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "mpnn_dim", "=", "mpnn_model", ".", "mpnn_hidden_size", "\n", "self", ".", "admet_model", "=", "[", "]", "\n", "self", ".", "global_embed_size", "=", "self", ".", "mpnn_dim", "\n", "self", ".", "highway_num_layer", "=", "2", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "\t\t\t", "admet_fc", "=", "nn", ".", "Linear", "(", "self", ".", "mpnn_model", ".", "mpnn_hidden_size", ",", "self", ".", "global_embed_size", ")", ".", "to", "(", "device", ")", "\n", "admet_highway", "=", "Highway", "(", "self", ".", "global_embed_size", ",", "self", ".", "highway_num_layer", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "admet_model", ".", "append", "(", "nn", ".", "ModuleList", "(", "[", "admet_fc", ",", "admet_highway", "]", ")", ")", "\n", "", "self", ".", "admet_model", "=", "nn", ".", "ModuleList", "(", "self", ".", "admet_model", ")", "\n", "\n", "self", ".", "admet_pred", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "self", ".", "global_embed_size", ",", "1", ")", ".", "to", "(", "device", ")", "for", "i", "in", "range", "(", "5", ")", "]", ")", "\n", "self", ".", "f", "=", "F", ".", "relu", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.feed_lst_of_module": [[920, 925], ["model.ADMET.f", "single_module"], "methods", ["None"], ["", "def", "feed_lst_of_module", "(", "self", ",", "input_feature", ",", "lst_of_module", ")", ":", "\n", "\t\t", "x", "=", "input_feature", "\n", "for", "single_module", "in", "lst_of_module", ":", "\n", "\t\t\t", "x", "=", "self", ".", "f", "(", "single_module", "(", "x", ")", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.forward": [[926, 935], ["model.ADMET.mpnn_model.forward_smiles_lst_lst", "model.ADMET.feed_lst_of_module", "list", "range"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_smiles_lst_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.feed_lst_of_module"], ["", "def", "forward", "(", "self", ",", "smiles_lst", ",", "idx", ")", ":", "\n", "\t\t", "assert", "idx", "in", "list", "(", "range", "(", "5", ")", ")", "\n", "'''\n\t\t\txxxxxxxxxxxx\n\t\t'''", "\n", "embeds", "=", "self", ".", "mpnn_model", ".", "forward_smiles_lst_lst", "(", "smiles_lst", ")", "\n", "embeds", "=", "self", ".", "feed_lst_of_module", "(", "embeds", ",", "self", ".", "admet_model", "[", "idx", "]", ")", "\n", "output", "=", "self", ".", "admet_pred", "[", "idx", "]", "(", "embeds", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.test": [[936, 938], ["None"], "methods", ["None"], ["", "def", "test", "(", "self", ",", "valid_loader", ")", ":", "\n", "\t\t", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.ADMET.learn": [[940, 963], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "copy.deepcopy.test", "copy.deepcopy", "tqdm.tqdm.tqdm", "copy.deepcopy", "copy.deepcopy.parameters", "range", "copy.deepcopy.test", "valid_loss_record.append", "copy.deepcopy.forward().view", "copy.deepcopy.loss", "train_loss_record.append", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "model.ADMET.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "copy.deepcopy", "label_vec.float", "model.ADMET.item", "copy.deepcopy.forward"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward"], ["", "def", "learn", "(", "self", ",", "train_loader", ",", "valid_loader", ",", "idx", ")", ":", "\n", "\t\t", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "train_loss_record", "=", "[", "]", "\n", "valid_loss", "=", "self", ".", "test", "(", "valid_loader", ",", "return_loss", "=", "True", ")", "\n", "valid_loss_record", "=", "[", "valid_loss", "]", "\n", "best_valid_loss", "=", "valid_loss", "\n", "best_model", "=", "deepcopy", "(", "self", ")", "\n", "\n", "for", "ep", "in", "tqdm", "(", "range", "(", "self", ".", "epoch", ")", ")", ":", "\n", "\t\t\t", "for", "smiles_lst", "in", "train_loader", ":", "\n", "\t\t\t\t", "output", "=", "self", ".", "forward", "(", "smiles_lst", ")", ".", "view", "(", "-", "1", ")", "#### 32, 1 -> 32, ||  label_vec 32,", "\n", "loss", "=", "self", ".", "loss", "(", "output", ",", "label_vec", ".", "float", "(", ")", ")", "\n", "train_loss_record", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "", "valid_loss", "=", "self", ".", "test", "(", "valid_loader", ",", "return_loss", "=", "True", ")", "\n", "valid_loss_record", ".", "append", "(", "valid_loss", ")", "\n", "if", "valid_loss", "<", "best_valid_loss", ":", "\n", "\t\t\t\t", "best_valid_loss", "=", "valid_loss", "\n", "best_model", "=", "deepcopy", "(", "self", ")", "\n", "\n", "", "", "self", "=", "deepcopy", "(", "best_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.model.dataloader2Xy": [[688, 717], ["len", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "torch.from_numpy", "torch.from_numpy", "X.float.float", "smiles_lst2fp().reshape", "list", "set", "numpy.zeros", "icdcode_lst.append", "functools.reduce", "smiles_lst2fp", "i.split", "global_icd.index"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.smiles_lst2fp"], ["", "", "def", "dataloader2Xy", "(", "nctid_lst", ",", "label_vec", ",", "smiles_lst2", ",", "icdcode_lst3", ",", "criteria_lst", ",", "global_icd", ")", ":", "\n", "## label_vec: (n,)", "\n", "\t", "y", "=", "label_vec", "\n", "\n", "num_icd", "=", "len", "(", "global_icd", ")", "\n", "from", "HINT", ".", "utils", "import", "smiles_lst2fp", "\n", "fp_lst", "=", "[", "smiles_lst2fp", "(", "smiles_lst", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "for", "smiles_lst", "in", "smiles_lst2", "]", "\n", "fp_mat", "=", "np", ".", "concatenate", "(", "fp_lst", ",", "0", ")", "\n", "# fp_mat = torch.from_numpy(fp_mat)  ### (n,2048)", "\n", "\n", "icdcode_lst", "=", "[", "]", "\n", "for", "lst2", "in", "icdcode_lst3", ":", "\n", "\t\t", "lst", "=", "list", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "lst2", ")", ")", "\n", "lst", "=", "[", "i", ".", "split", "(", "'.'", ")", "[", "0", "]", "for", "i", "in", "lst", "]", "\n", "lst", "=", "set", "(", "lst", ")", "\n", "icd_feature", "=", "np", ".", "zeros", "(", "(", "1", ",", "num_icd", ")", ",", "np", ".", "int32", ")", "\n", "for", "ele", "in", "lst", ":", "\n", "\t\t\t", "if", "ele", "in", "global_icd", ":", "\n", "\t\t\t\t", "idx", "=", "global_icd", ".", "index", "(", "ele", ")", "\n", "icd_feature", "[", "0", ",", "idx", "]", "=", "1", "\n", "", "", "icdcode_lst", ".", "append", "(", "icd_feature", ")", "\n", "", "icdcode_mat", "=", "np", ".", "concatenate", "(", "icdcode_lst", ",", "0", ")", "\n", "X", "=", "np", ".", "concatenate", "(", "[", "fp_mat", ",", "icdcode_mat", "]", ",", "1", ")", "\n", "X", "=", "torch", ".", "from_numpy", "(", "X", ")", "\n", "X", "=", "X", ".", "float", "(", ")", "\n", "# icdcode_mat = torch.from_numpy(icdcode_mat) ", "\n", "\n", "# X = torch.cat([fp_mat, icdcode_mat], 1)", "\n", "return", "X", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.smiles_dataset.__init__": [[184, 187], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "smiles_lst", ",", "label_lst", ")", ":", "\n", "\t\t", "self", ".", "smiles_lst", "=", "smiles_lst", "\n", "self", ".", "label_lst", "=", "label_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.smiles_dataset.__len__": [[188, 190], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "smiles_lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.smiles_dataset.__getitem__": [[191, 196], ["molecule_encode.smiles2mpnnfeature"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.smiles2mpnnfeature"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "smiles", "=", "self", ".", "smiles_lst", "[", "index", "]", "\n", "label", "=", "self", ".", "label_lst", "[", "index", "]", "\n", "smiles_feature", "=", "smiles2mpnnfeature", "(", "smiles", ")", "\n", "return", "smiles_feature", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.__init__": [[224, 235], ["torch.nn.Sequential.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "molecule_encode.MPNN.to"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "mpnn_hidden_size", ",", "mpnn_depth", ",", "device", ")", ":", "\n", "\t\t", "super", "(", "MPNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mpnn_hidden_size", "=", "mpnn_hidden_size", "\n", "self", ".", "mpnn_depth", "=", "mpnn_depth", "\n", "\n", "self", ".", "W_i", "=", "nn", ".", "Linear", "(", "ATOM_FDIM", "+", "BOND_FDIM", ",", "self", ".", "mpnn_hidden_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "W_h", "=", "nn", ".", "Linear", "(", "self", ".", "mpnn_hidden_size", ",", "self", ".", "mpnn_hidden_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "W_o", "=", "nn", ".", "Linear", "(", "ATOM_FDIM", "+", "self", ".", "mpnn_hidden_size", ",", "self", ".", "mpnn_hidden_size", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.set_device": [[236, 238], ["None"], "methods", ["None"], ["", "def", "set_device", "(", "self", ",", "device", ")", ":", "\n", "\t\t", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.embedding_size": [[240, 243], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "embedding_size", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "mpnn_hidden_size", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.feature_forward": [[245, 278], ["agraph.long.long.long", "bgraph.long.long.long", "atoms_bonds.long.long.long", "range", "atoms_bonds[].item", "atoms_bonds[].item", "fatoms[].to", "fbonds[].to", "agraph[].to", "bgraph[].to", "molecule_encode.MPNN.single_feature_forward", "create_var.to", "embeddings.append", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "molecule_encode.create_var", "embeddings.append", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "create_var.to"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.single_feature_forward", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.create_var"], ["", "def", "feature_forward", "(", "self", ",", "feature", ")", ":", "\n", "\t\t", "''' \n\t\t\tbatch_size == 1 \n\t\t\tfeature: utils.smiles2mpnnfeature \n\t\t'''", "\n", "fatoms", ",", "fbonds", ",", "agraph", ",", "bgraph", ",", "atoms_bonds", "=", "feature", "\n", "agraph", "=", "agraph", ".", "long", "(", ")", "\n", "bgraph", "=", "bgraph", ".", "long", "(", ")", "\n", "#print(fatoms.shape, fbonds.shape, agraph.shape, bgraph.shape, atoms_bonds.shape)", "\n", "atoms_bonds", "=", "atoms_bonds", ".", "long", "(", ")", "\n", "batch_size", "=", "atoms_bonds", ".", "shape", "[", "0", "]", "\n", "N_atoms", ",", "N_bonds", "=", "0", ",", "0", "\n", "embeddings", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "\t\t\t", "n_a", "=", "atoms_bonds", "[", "i", ",", "0", "]", ".", "item", "(", ")", "\n", "n_b", "=", "atoms_bonds", "[", "i", ",", "1", "]", ".", "item", "(", ")", "\n", "if", "(", "n_a", "==", "0", ")", ":", "\n", "\t\t\t\t", "embed", "=", "create_var", "(", "torch", ".", "zeros", "(", "1", ",", "self", ".", "mpnn_hidden_size", ")", ")", "\n", "embeddings", ".", "append", "(", "embed", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "continue", "\n", "", "sub_fatoms", "=", "fatoms", "[", "N_atoms", ":", "N_atoms", "+", "n_a", ",", ":", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "sub_fbonds", "=", "fbonds", "[", "N_bonds", ":", "N_bonds", "+", "n_b", ",", ":", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "sub_agraph", "=", "agraph", "[", "N_atoms", ":", "N_atoms", "+", "n_a", ",", ":", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "sub_bgraph", "=", "bgraph", "[", "N_bonds", ":", "N_bonds", "+", "n_b", ",", ":", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "embed", "=", "self", ".", "single_feature_forward", "(", "sub_fatoms", ",", "sub_fbonds", ",", "sub_agraph", ",", "sub_bgraph", ")", "\n", "embed", "=", "embed", ".", "to", "(", "self", ".", "device", ")", "\n", "embeddings", ".", "append", "(", "embed", ")", "\n", "N_atoms", "+=", "n_a", "\n", "N_bonds", "+=", "n_b", "\n", "", "if", "len", "(", "embeddings", ")", "==", "0", ":", "\n", "\t\t\t", "return", "None", "\n", "", "else", ":", "\n", "\t\t\t", "return", "torch", ".", "cat", "(", "embeddings", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.single_feature_forward": [[279, 310], ["create_var().to.long", "create_var().to.long", "create_var().to", "create_var().to", "create_var().to", "create_var().to", "molecule_encode.MPNN.W_i", "torch.relu", "torch.relu", "range", "molecule_encode.index_select_ND", "molecule_encode.MPNN.sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "molecule_encode.create_var", "molecule_encode.index_select_ND", "molecule_encode.MPNN.sum", "molecule_encode.MPNN.W_h", "torch.relu", "torch.relu", "molecule_encode.MPNN.W_o", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "molecule_encode.create_var", "molecule_encode.create_var", "molecule_encode.create_var", "molecule_encode.create_var", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.index_select_ND", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.create_var", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.index_select_ND", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.create_var", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.create_var", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.create_var", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.create_var"], ["", "", "def", "single_feature_forward", "(", "self", ",", "fatoms", ",", "fbonds", ",", "agraph", ",", "bgraph", ")", ":", "\n", "\t\t", "'''\n\t\t\tfatoms: (x, 39)\n\t\t\tfbonds: (y, 50)\n\t\t\tagraph: (x, 6)\n\t\t\tbgraph: (y,6)\n\t\t'''", "\n", "### invalid molecule", "\n", "if", "fatoms", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "\t\t\t", "return", "create_var", "(", "torch", ".", "zeros", "(", "1", ",", "self", ".", "mpnn_hidden_size", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "", "agraph", "=", "agraph", ".", "long", "(", ")", "\n", "bgraph", "=", "bgraph", ".", "long", "(", ")", "\n", "fatoms", "=", "create_var", "(", "fatoms", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "fbonds", "=", "create_var", "(", "fbonds", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "agraph", "=", "create_var", "(", "agraph", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "bgraph", "=", "create_var", "(", "bgraph", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "binput", "=", "self", ".", "W_i", "(", "fbonds", ")", "\n", "message", "=", "F", ".", "relu", "(", "binput", ")", "\n", "#print(\"shapes\", fbonds.shape, binput.shape, message.shape)", "\n", "for", "i", "in", "range", "(", "self", ".", "mpnn_depth", "-", "1", ")", ":", "\n", "\t\t\t", "nei_message", "=", "index_select_ND", "(", "message", ",", "0", ",", "bgraph", ")", "\n", "nei_message", "=", "nei_message", ".", "sum", "(", "dim", "=", "1", ")", "\n", "nei_message", "=", "self", ".", "W_h", "(", "nei_message", ")", "\n", "message", "=", "F", ".", "relu", "(", "binput", "+", "nei_message", ")", "\n", "\n", "", "nei_message", "=", "index_select_ND", "(", "message", ",", "0", ",", "agraph", ")", "\n", "nei_message", "=", "nei_message", ".", "sum", "(", "dim", "=", "1", ")", "\n", "ainput", "=", "torch", ".", "cat", "(", "[", "fatoms", ",", "nei_message", "]", ",", "dim", "=", "1", ")", "\n", "atom_hiddens", "=", "F", ".", "relu", "(", "self", ".", "W_o", "(", "ainput", ")", ")", "\n", "return", "torch", ".", "mean", "(", "atom_hiddens", ",", "0", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_single_smiles": [[312, 316], ["molecule_encode.smiles2mpnnfeature", "molecule_encode.MPNN.single_feature_forward().view", "molecule_encode.MPNN.single_feature_forward"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.smiles2mpnnfeature", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.single_feature_forward"], ["", "def", "forward_single_smiles", "(", "self", ",", "smiles", ")", ":", "\n", "\t\t", "fatoms", ",", "fbonds", ",", "agraph", ",", "bgraph", ",", "_", "=", "smiles2mpnnfeature", "(", "smiles", ")", "\n", "embed", "=", "self", ".", "single_feature_forward", "(", "fatoms", ",", "fbonds", ",", "agraph", ",", "bgraph", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "return", "embed", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_smiles_lst": [[317, 321], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "molecule_encode.MPNN.forward_single_smiles"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_single_smiles"], ["", "def", "forward_smiles_lst", "(", "self", ",", "smiles_lst", ")", ":", "\n", "\t\t", "embed_lst", "=", "[", "self", ".", "forward_single_smiles", "(", "smiles", ")", "for", "smiles", "in", "smiles_lst", "]", "\n", "embed_all", "=", "torch", ".", "cat", "(", "embed_lst", ",", "0", ")", "\n", "return", "embed_all", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_smiles_lst_average": [[322, 326], ["molecule_encode.MPNN.forward_smiles_lst", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_smiles_lst"], ["", "def", "forward_smiles_lst_average", "(", "self", ",", "smiles_lst", ")", ":", "\n", "\t\t", "embed_all", "=", "self", ".", "forward_smiles_lst", "(", "smiles_lst", ")", "\n", "embed_avg", "=", "torch", ".", "mean", "(", "embed_all", ",", "0", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "return", "embed_avg", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_smiles_lst_lst": [[328, 332], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "molecule_encode.MPNN.forward_smiles_lst_average"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_smiles_lst_average"], ["", "def", "forward_smiles_lst_lst", "(", "self", ",", "smiles_lst_lst", ")", ":", "\n", "\t\t", "embed_lst", "=", "[", "self", ".", "forward_smiles_lst_average", "(", "smiles_lst", ")", "for", "smiles_lst", "in", "smiles_lst_lst", "]", "\n", "embed_all", "=", "torch", ".", "cat", "(", "embed_lst", ",", "0", ")", "#### n,dim", "\n", "return", "embed_all", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.__init__": [[337, 355], ["torch.nn.Sequential.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.BCEWithLogitsLoss", "torch.nn.BCEWithLogitsLoss", "molecule_encode.ADMET.to", "HINT.module.Highway", "torch.nn.Linear", "torch.nn.Linear", "range", "range"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "molecule_encoder", ",", "highway_num", ",", "device", ",", "\n", "epoch", ",", "lr", ",", "weight_decay", ",", "save_name", ")", ":", "\n", "\t\t", "super", "(", "ADMET", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "molecule_encoder", "=", "molecule_encoder", "\n", "self", ".", "embedding_size", "=", "self", ".", "molecule_encoder", ".", "embedding_size", "\n", "self", ".", "highway_num", "=", "highway_num", "\n", "self", ".", "highway_nn_lst", "=", "nn", ".", "ModuleList", "(", "[", "Highway", "(", "size", "=", "self", ".", "embedding_size", ",", "num_layers", "=", "self", ".", "highway_num", ")", "for", "i", "in", "range", "(", "5", ")", "]", ")", "\n", "self", ".", "fc_output_lst", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "self", ".", "embedding_size", ",", "1", ")", "for", "i", "in", "range", "(", "5", ")", "]", ")", "\n", "self", ".", "f", "=", "F", ".", "relu", "\n", "self", ".", "loss", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", "\n", "\n", "self", ".", "epoch", "=", "epoch", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "weight_decay", "=", "weight_decay", "\n", "self", ".", "save_name", "=", "save_name", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.set_device": [[356, 359], ["molecule_encode.ADMET.molecule_encoder.set_device"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.set_device"], ["", "def", "set_device", "(", "self", ",", "device", ")", ":", "\n", "\t\t", "self", ".", "device", "=", "device", "\n", "self", ".", "molecule_encoder", ".", "set_device", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.forward_smiles_lst_embedding": [[361, 365], ["molecule_encode.ADMET.molecule_encoder.forward_smiles_lst"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.MPNN.forward_smiles_lst"], ["", "def", "forward_smiles_lst_embedding", "(", "self", ",", "smiles_lst", ",", "idx", ")", ":", "\n", "\t\t", "embed_all", "=", "self", ".", "molecule_encoder", ".", "forward_smiles_lst", "(", "smiles_lst", ")", "\n", "output", "=", "self", ".", "highway_nn_lst", "[", "idx", "]", "(", "embed_all", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.forward_embedding_to_pred": [[366, 368], ["None"], "methods", ["None"], ["", "def", "forward_embedding_to_pred", "(", "self", ",", "embeded", ",", "idx", ")", ":", "\n", "\t\t", "return", "self", ".", "fc_output_lst", "[", "idx", "]", "(", "embeded", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.forward_smiles_lst_pred": [[369, 373], ["molecule_encode.ADMET.forward_smiles_lst_embedding", "molecule_encode.ADMET.forward_embedding_to_pred"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.forward_smiles_lst_embedding", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.forward_embedding_to_pred"], ["", "def", "forward_smiles_lst_pred", "(", "self", ",", "smiles_lst", ",", "idx", ")", ":", "\n", "\t\t", "embeded", "=", "self", ".", "forward_smiles_lst_embedding", "(", "smiles_lst", ",", "idx", ")", "\n", "fc_output", "=", "self", ".", "forward_embedding_to_pred", "(", "embeded", ",", "idx", ")", "\n", "return", "fc_output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test": [[374, 384], ["range", "numpy.mean", "loss_lst.append", "molecule_encode.ADMET.forward_smiles_lst_pred().view", "molecule_encode.ADMET.loss", "single_loss_lst.append", "numpy.mean", "label_vec.to().float", "molecule_encode.ADMET.item", "molecule_encode.ADMET.forward_smiles_lst_pred", "label_vec.to"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.forward_smiles_lst_pred"], ["", "def", "test", "(", "self", ",", "dataloader_lst", ",", "return_loss", "=", "True", ")", ":", "\n", "\t\t", "loss_lst", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "1", ")", ":", "\n", "\t\t\t", "single_loss_lst", "=", "[", "]", "\n", "for", "smiles_lst", ",", "label_vec", "in", "dataloader_lst", "[", "idx", "]", ":", "\n", "\t\t\t\t", "output", "=", "self", ".", "forward_smiles_lst_pred", "(", "smiles_lst", ",", "idx", ")", ".", "view", "(", "-", "1", ")", "\n", "loss", "=", "self", ".", "loss", "(", "output", ",", "label_vec", ".", "to", "(", "self", ".", "device", ")", ".", "float", "(", ")", ")", "\n", "single_loss_lst", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "loss_lst", ".", "append", "(", "np", ".", "mean", "(", "single_loss_lst", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "loss_lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.train": [[385, 413], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "copy.deepcopy.test", "copy.deepcopy", "tqdm.tqdm.tqdm", "copy.deepcopy", "copy.deepcopy.parameters", "range", "copy.deepcopy.test", "valid_loss_record.append", "iter", "copy.deepcopy", "range", "range", "next", "copy.deepcopy.forward_smiles_lst_pred().view", "copy.deepcopy.loss", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "molecule_encode.ADMET.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "label_vec.float", "copy.deepcopy.forward_smiles_lst_pred"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.test", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.ADMET.forward_smiles_lst_pred"], ["", "def", "train", "(", "self", ",", "train_loader_lst", ",", "valid_loader_lst", ")", ":", "\n", "\t\t", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "train_loss_record", "=", "[", "]", "\n", "valid_loss", "=", "self", ".", "test", "(", "valid_loader_lst", ",", "return_loss", "=", "True", ")", "\n", "valid_loss_record", "=", "[", "valid_loss", "]", "\n", "best_valid_loss", "=", "valid_loss", "\n", "best_model", "=", "deepcopy", "(", "self", ")", "\n", "for", "ep", "in", "tqdm", "(", "range", "(", "self", ".", "epoch", ")", ")", ":", "\n", "\t\t\t", "data_iterator_lst", "=", "[", "iter", "(", "train_loader_lst", "[", "idx", "]", ")", "for", "idx", "in", "range", "(", "5", ")", "]", "\n", "try", ":", "\n", "\t\t\t\t", "while", "True", ":", "\n", "\t\t\t\t\t", "for", "idx", "in", "range", "(", "1", ")", ":", "\n", "\t\t\t\t\t\t", "smiles_lst", ",", "label_vec", "=", "next", "(", "data_iterator_lst", "[", "idx", "]", ")", "\n", "output", "=", "self", ".", "forward_smiles_lst_pred", "(", "smiles_lst", ",", "idx", ")", ".", "view", "(", "-", "1", ")", "\n", "loss", "=", "self", ".", "loss", "(", "output", ",", "label_vec", ".", "float", "(", ")", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "", "", "", "except", ":", "\n", "\t\t\t\t", "pass", "\n", "", "valid_loss", "=", "self", ".", "test", "(", "valid_loader_lst", ",", "return_loss", "=", "True", ")", "\n", "valid_loss_record", ".", "append", "(", "valid_loss", ")", "\n", "\n", "if", "valid_loss", "<", "best_valid_loss", ":", "\n", "\t\t\t\t", "best_valid_loss", "=", "valid_loss", "\n", "best_model", "=", "deepcopy", "(", "self", ")", "\n", "\n", "", "", "self", "=", "deepcopy", "(", "best_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.get_drugbank_smiles_lst": [[50, 55], ["open", "list", "csv.reader"], "function", ["None"], ["def", "get_drugbank_smiles_lst", "(", ")", ":", "\n", "\t", "drugfile", "=", "'data/drugbank_drugs_info.csv'", "\n", "with", "open", "(", "drugfile", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "return", "[", "row", "[", "27", "]", "for", "row", "in", "rows", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.txt_to_lst": [[56, 63], ["i.strip", "text.split"], "function", ["None"], ["", "def", "txt_to_lst", "(", "text", ")", ":", "\n", "\t", "\"\"\"\n\t\t\"['CN[C@H]1CC[C@@H](C2=CC(Cl)=C(Cl)C=C2)C2=CC=CC=C12', 'CNCCC=C1C2=CC=CC=C2CCC2=CC=CC=C12']\" \n\t\"\"\"", "\n", "text", "=", "text", "[", "1", ":", "-", "1", "]", "\n", "lst", "=", "[", "i", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "i", "in", "text", ".", "split", "(", "','", ")", "]", "\n", "return", "lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.get_cooked_data_smiles_lst": [[64, 75], ["list", "list", "list", "open", "map", "reduce", "set", "list", "csv.reader"], "function", ["None"], ["", "def", "get_cooked_data_smiles_lst", "(", ")", ":", "\n", "\t", "cooked_file", "=", "'data/raw_data.csv'", "\n", "with", "open", "(", "cooked_file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "smiles_lst", "=", "[", "row", "[", "8", "]", "for", "row", "in", "rows", "]", "\n", "smiles_lst", "=", "list", "(", "map", "(", "txt_to_lst", ",", "smiles_lst", ")", ")", "\n", "from", "functools", "import", "reduce", "\n", "smiles_lst", "=", "list", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "smiles_lst", ")", ")", "\n", "smiles_lst", "=", "list", "(", "set", "(", "smiles_lst", ")", ")", "\n", "# print(len(smiles_lst))  ", "\n", "return", "smiles_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.create_var": [[78, 83], ["torch.autograd.Variable", "torch.autograd.Variable"], "function", ["None"], ["", "def", "create_var", "(", "tensor", ",", "requires_grad", "=", "None", ")", ":", "\n", "    ", "if", "requires_grad", "is", "None", ":", "\n", "        ", "return", "Variable", "(", "tensor", ")", "\n", "", "else", ":", "\n", "        ", "return", "Variable", "(", "tensor", ",", "requires_grad", "=", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.index_select_ND": [[84, 90], ["index.size", "source.index_select", "source.index_select.view", "source.size", "index.view"], "function", ["None"], ["", "", "def", "index_select_ND", "(", "source", ",", "dim", ",", "index", ")", ":", "\n", "    ", "index_size", "=", "index", ".", "size", "(", ")", "\n", "suffix_dim", "=", "source", ".", "size", "(", ")", "[", "1", ":", "]", "\n", "final_size", "=", "index_size", "+", "suffix_dim", "\n", "target", "=", "source", ".", "index_select", "(", "dim", ",", "index", ".", "view", "(", "-", "1", ")", ")", "\n", "return", "target", ".", "view", "(", "final_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.get_mol": [[92, 98], ["rdkit.MolFromSmiles", "rdkit.Kekulize"], "function", ["None"], ["", "def", "get_mol", "(", "smiles", ")", ":", "\n", "    ", "mol", "=", "Chem", ".", "MolFromSmiles", "(", "smiles", ")", "\n", "if", "mol", "is", "None", ":", "\n", "        ", "return", "None", "\n", "", "Chem", ".", "Kekulize", "(", "mol", ")", "\n", "return", "mol", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.onek_encoding_unk": [[105, 109], ["list", "map"], "function", ["None"], ["def", "onek_encoding_unk", "(", "x", ",", "allowable_set", ")", ":", "\n", "    ", "if", "x", "not", "in", "allowable_set", ":", "\n", "        ", "x", "=", "allowable_set", "[", "-", "1", "]", "\n", "", "return", "list", "(", "map", "(", "lambda", "s", ":", "x", "==", "s", ",", "allowable_set", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.atom_features": [[110, 116], ["torch.Tensor", "torch.Tensor", "molecule_encode.onek_encoding_unk", "atom.GetIsAromatic", "molecule_encode.onek_encoding_unk", "int", "molecule_encode.onek_encoding_unk", "molecule_encode.onek_encoding_unk", "atom.GetFormalCharge", "atom.GetChiralTag", "atom.GetSymbol", "atom.GetDegree"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.onek_encoding_unk", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.onek_encoding_unk", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.onek_encoding_unk", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.onek_encoding_unk"], ["", "def", "atom_features", "(", "atom", ")", ":", "\n", "    ", "return", "torch", ".", "Tensor", "(", "onek_encoding_unk", "(", "atom", ".", "GetSymbol", "(", ")", ",", "ELEM_LIST", ")", "\n", "+", "onek_encoding_unk", "(", "atom", ".", "GetDegree", "(", ")", ",", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ")", "\n", "+", "onek_encoding_unk", "(", "atom", ".", "GetFormalCharge", "(", ")", ",", "[", "-", "1", ",", "-", "2", ",", "1", ",", "2", ",", "0", "]", ")", "\n", "+", "onek_encoding_unk", "(", "int", "(", "atom", ".", "GetChiralTag", "(", ")", ")", ",", "[", "0", ",", "1", ",", "2", ",", "3", "]", ")", "\n", "+", "[", "atom", ".", "GetIsAromatic", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.bond_features": [[117, 123], ["bond.GetBondType", "int", "molecule_encode.onek_encoding_unk", "torch.Tensor", "torch.Tensor", "bond.GetStereo", "bond.IsInRing"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.onek_encoding_unk"], ["", "def", "bond_features", "(", "bond", ")", ":", "\n", "    ", "bt", "=", "bond", ".", "GetBondType", "(", ")", "\n", "stereo", "=", "int", "(", "bond", ".", "GetStereo", "(", ")", ")", "\n", "fbond", "=", "[", "bt", "==", "Chem", ".", "rdchem", ".", "BondType", ".", "SINGLE", ",", "bt", "==", "Chem", ".", "rdchem", ".", "BondType", ".", "DOUBLE", ",", "bt", "==", "Chem", ".", "rdchem", ".", "BondType", ".", "TRIPLE", ",", "bt", "==", "Chem", ".", "rdchem", ".", "BondType", ".", "AROMATIC", ",", "bond", ".", "IsInRing", "(", ")", "]", "\n", "fstereo", "=", "onek_encoding_unk", "(", "stereo", ",", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ")", "\n", "return", "torch", ".", "Tensor", "(", "fbond", "+", "fstereo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.smiles2mpnnfeature": [[124, 181], ["torch.zeros", "torch.zeros", "molecule_encode.get_mol", "torch.Tensor().view", "torch.Tensor().view", "get_mol.GetNumAtoms", "get_mol.GetAtoms", "get_mol.GetBonds", "len", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "range", "range", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.float", "torch.zeros.float", "torch.zeros.float", "torch.zeros.float", "torch.zeros.append", "in_bonds.append", "bond.GetBeginAtom", "bond.GetEndAtom", "bond.GetBeginAtom.GetIdx", "bond.GetEndAtom.GetIdx", "len", "all_bonds.append", "torch.zeros.append", "in_bonds[].append", "len", "all_bonds.append", "torch.zeros.append", "in_bonds[].append", "enumerate", "enumerate", "torch.Tensor", "torch.Tensor", "molecule_encode.atom_features", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "molecule_encode.bond_features", "molecule_encode.bond_features"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.get_mol", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.atom_features", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.bond_features", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.bond_features"], ["", "def", "smiles2mpnnfeature", "(", "smiles", ")", ":", "\n", "## from mpn.py::tensorize  ", "\n", "\t", "'''\n\t\tdata-flow:   \n\t\t\tdata_process(): apply(smiles2mpnnfeature)\n\t\t\tDBTA: train(): data.DataLoader(data_process_loader())\n\t\t\tmpnn_collate_func()\n\t'''", "\n", "padding", "=", "torch", ".", "zeros", "(", "ATOM_FDIM", "+", "BOND_FDIM", ")", "\n", "fatoms", ",", "fbonds", "=", "[", "]", ",", "[", "padding", "]", "\n", "in_bonds", ",", "all_bonds", "=", "[", "]", ",", "[", "(", "-", "1", ",", "-", "1", ")", "]", "\n", "mol", "=", "get_mol", "(", "smiles", ")", "\n", "if", "mol", "is", "not", "None", ":", "\n", "\t\t", "n_atoms", "=", "mol", ".", "GetNumAtoms", "(", ")", "\n", "for", "atom", "in", "mol", ".", "GetAtoms", "(", ")", ":", "\n", "\t\t\t", "fatoms", ".", "append", "(", "atom_features", "(", "atom", ")", ")", "\n", "in_bonds", ".", "append", "(", "[", "]", ")", "\n", "\n", "", "for", "bond", "in", "mol", ".", "GetBonds", "(", ")", ":", "\n", "\t\t\t", "a1", "=", "bond", ".", "GetBeginAtom", "(", ")", "\n", "a2", "=", "bond", ".", "GetEndAtom", "(", ")", "\n", "x", "=", "a1", ".", "GetIdx", "(", ")", "\n", "y", "=", "a2", ".", "GetIdx", "(", ")", "\n", "\n", "b", "=", "len", "(", "all_bonds", ")", "\n", "all_bonds", ".", "append", "(", "(", "x", ",", "y", ")", ")", "\n", "fbonds", ".", "append", "(", "torch", ".", "cat", "(", "[", "fatoms", "[", "x", "]", ",", "bond_features", "(", "bond", ")", "]", ",", "0", ")", ")", "\n", "in_bonds", "[", "y", "]", ".", "append", "(", "b", ")", "\n", "\n", "b", "=", "len", "(", "all_bonds", ")", "\n", "all_bonds", ".", "append", "(", "(", "y", ",", "x", ")", ")", "\n", "fbonds", ".", "append", "(", "torch", ".", "cat", "(", "[", "fatoms", "[", "y", "]", ",", "bond_features", "(", "bond", ")", "]", ",", "0", ")", ")", "\n", "in_bonds", "[", "x", "]", ".", "append", "(", "b", ")", "\n", "\n", "", "total_bonds", "=", "len", "(", "all_bonds", ")", "\n", "fatoms", "=", "torch", ".", "stack", "(", "fatoms", ",", "0", ")", "\n", "fbonds", "=", "torch", ".", "stack", "(", "fbonds", ",", "0", ")", "\n", "agraph", "=", "torch", ".", "zeros", "(", "n_atoms", ",", "MAX_NB", ")", ".", "long", "(", ")", "\n", "bgraph", "=", "torch", ".", "zeros", "(", "total_bonds", ",", "MAX_NB", ")", ".", "long", "(", ")", "\n", "for", "a", "in", "range", "(", "n_atoms", ")", ":", "\n", "\t\t\t", "for", "i", ",", "b", "in", "enumerate", "(", "in_bonds", "[", "a", "]", ")", ":", "\n", "\t\t\t\t", "agraph", "[", "a", ",", "i", "]", "=", "b", "\n", "\n", "", "", "for", "b1", "in", "range", "(", "1", ",", "total_bonds", ")", ":", "\n", "\t\t\t", "x", ",", "y", "=", "all_bonds", "[", "b1", "]", "\n", "for", "i", ",", "b2", "in", "enumerate", "(", "in_bonds", "[", "x", "]", ")", ":", "\n", "\t\t\t\t", "if", "all_bonds", "[", "b2", "]", "[", "0", "]", "!=", "y", ":", "\n", "\t\t\t\t\t", "bgraph", "[", "b1", ",", "i", "]", "=", "b2", "\n", "", "", "", "", "else", ":", "\n", "# print('Molecules not found and change to zero vectors..')", "\n", "\t\t", "fatoms", "=", "torch", ".", "zeros", "(", "0", ",", "39", ")", "\n", "fbonds", "=", "torch", ".", "zeros", "(", "0", ",", "50", ")", "\n", "agraph", "=", "torch", ".", "zeros", "(", "0", ",", "6", ")", "\n", "bgraph", "=", "torch", ".", "zeros", "(", "0", ",", "6", ")", "\n", "", "Natom", ",", "Nbond", "=", "fatoms", ".", "shape", "[", "0", "]", ",", "fbonds", ".", "shape", "[", "0", "]", "\n", "shape_tensor", "=", "torch", ".", "Tensor", "(", "[", "Natom", ",", "Nbond", "]", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "return", "[", "fatoms", ".", "float", "(", ")", ",", "fbonds", ".", "float", "(", ")", ",", "agraph", ".", "float", "(", ")", ",", "bgraph", ".", "float", "(", ")", ",", "shape_tensor", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.mpnn_feature_collate_func": [[200, 202], ["torch.cat", "torch.cat", "range", "len", "range", "len"], "function", ["None"], ["", "", "def", "mpnn_feature_collate_func", "(", "x", ")", ":", "\n", "\t", "return", "[", "torch", ".", "cat", "(", "[", "x", "[", "j", "]", "[", "i", "]", "for", "j", "in", "range", "(", "len", "(", "x", ")", ")", "]", ",", "0", ")", "for", "i", "in", "range", "(", "len", "(", "x", "[", "0", "]", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.mpnn_collate_func": [[203, 213], ["molecule_encode.mpnn_feature_collate_func", "default_collate"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.mpnn_feature_collate_func"], ["", "def", "mpnn_collate_func", "(", "x", ")", ":", "\n", "#print(\"len(x) is \", len(x)) ## batch_size ", "\n", "#print(\"len(x[0]) is \", len(x[0])) ## 3--- data_process_loader.__getitem__ ", "\n", "\t", "mpnn_feature", "=", "[", "i", "[", "0", "]", "for", "i", "in", "x", "]", "\n", "#print(\"len(mpnn_feature)\", len(mpnn_feature), \"len(mpnn_feature[0])\", len(mpnn_feature[0]))", "\n", "mpnn_feature", "=", "mpnn_feature_collate_func", "(", "mpnn_feature", ")", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataloader", "import", "default_collate", "\n", "x_remain", "=", "[", "i", "[", "1", ":", "]", "for", "i", "in", "x", "]", "\n", "x_remain_collated", "=", "default_collate", "(", "x_remain", ")", "\n", "return", "[", "mpnn_feature", "]", "+", "x_remain_collated", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.data_loader": [[215, 221], ["molecule_encode.get_cooked_data_smiles_lst", "molecule_encode.smiles_dataset", "torch.utils.data.DataLoader", "range", "len"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.molecule_encode.get_cooked_data_smiles_lst"], ["", "def", "data_loader", "(", ")", ":", "\n", "\t", "smiles_lst", "=", "get_cooked_data_smiles_lst", "(", ")", "\n", "label_lst", "=", "[", "1", "for", "i", "in", "range", "(", "len", "(", "smiles_lst", ")", ")", "]", "\n", "dataset", "=", "smiles_dataset", "(", "smiles_lst", ",", "label_lst", ")", "\n", "dataloader", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "32", ",", "collate_fn", "=", "mpnn_collate_func", ",", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.Trial_Dataset.__init__": [[19, 25], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "nctid_lst", ",", "label_lst", ",", "smiles_lst", ",", "icdcode_lst", ",", "criteria_lst", ")", ":", "\n", "\t\t", "self", ".", "nctid_lst", "=", "nctid_lst", "\n", "self", ".", "label_lst", "=", "label_lst", "\n", "self", ".", "smiles_lst", "=", "smiles_lst", "\n", "self", ".", "icdcode_lst", "=", "icdcode_lst", "\n", "self", ".", "criteria_lst", "=", "criteria_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.Trial_Dataset.__len__": [[26, 28], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "nctid_lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.Trial_Dataset.__getitem__": [[29, 31], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "return", "self", ".", "nctid_lst", "[", "index", "]", ",", "self", ".", "label_lst", "[", "index", "]", ",", "self", ".", "smiles_lst", "[", "index", "]", ",", "self", ".", "icdcode_lst", "[", "index", "]", ",", "self", ".", "criteria_lst", "[", "index", "]", "\n", "#### smiles_lst[index] is list of smiles", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.Trial_Dataset_Complete.__init__": [[34, 42], ["dataloader.Trial_Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "nctid_lst", ",", "status_lst", ",", "why_stop_lst", ",", "label_lst", ",", "phase_lst", ",", "\n", "diseases_lst", ",", "icdcode_lst", ",", "drugs_lst", ",", "smiles_lst", ",", "criteria_lst", ")", ":", "\n", "\t\t", "Trial_Dataset", ".", "__init__", "(", "self", ",", "nctid_lst", ",", "label_lst", ",", "smiles_lst", ",", "icdcode_lst", ",", "criteria_lst", ")", "\n", "self", ".", "status_lst", "=", "status_lst", "\n", "self", ".", "why_stop_lst", "=", "why_stop_lst", "\n", "self", ".", "phase_lst", "=", "phase_lst", "\n", "self", ".", "diseases_lst", "=", "diseases_lst", "\n", "self", ".", "drugs_lst", "=", "drugs_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.Trial_Dataset_Complete.__getitem__": [[43, 46], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "return", "self", ".", "nctid_lst", "[", "index", "]", ",", "self", ".", "status_lst", "[", "index", "]", ",", "self", ".", "why_stop_lst", "[", "index", "]", ",", "self", ".", "label_lst", "[", "index", "]", ",", "self", ".", "phase_lst", "[", "index", "]", ",", "self", ".", "diseases_lst", "[", "index", "]", ",", "self", ".", "icdcode_lst", "[", "index", "]", ",", "self", ".", "drugs_lst", "[", "index", "]", ",", "self", ".", "smiles_lst", "[", "index", "]", ",", "self", ".", "criteria_lst", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.ADMET_Dataset.__init__": [[50, 53], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "smiles_lst", ",", "label_lst", ")", ":", "\n", "\t\t", "self", ".", "smiles_lst", "=", "smiles_lst", "\n", "self", ".", "label_lst", "=", "label_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.ADMET_Dataset.__len__": [[54, 56], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "smiles_lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.ADMET_Dataset.__getitem__": [[57, 59], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "return", "self", ".", "smiles_lst", "[", "index", "]", ",", "self", ".", "label_lst", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.admet_collate_fn": [[60, 64], ["torch.utils.data.dataloader.default_collate", "int"], "function", ["None"], ["", "", "def", "admet_collate_fn", "(", "x", ")", ":", "\n", "\t", "smiles_lst", "=", "[", "i", "[", "0", "]", "for", "i", "in", "x", "]", "\n", "label_vec", "=", "default_collate", "(", "[", "int", "(", "i", "[", "1", "]", ")", "for", "i", "in", "x", "]", ")", "### shape n, ", "\n", "return", "[", "smiles_lst", ",", "label_vec", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.smiles_txt_to_lst": [[66, 73], ["i.strip", "text.split"], "function", ["None"], ["", "def", "smiles_txt_to_lst", "(", "text", ")", ":", "\n", "\t", "\"\"\"\n\t\t\"['CN[C@H]1CC[C@@H](C2=CC(Cl)=C(Cl)C=C2)C2=CC=CC=C12', 'CNCCC=C1C2=CC=CC=C2CCC2=CC=CC=C12']\" \n\t\"\"\"", "\n", "text", "=", "text", "[", "1", ":", "-", "1", "]", "\n", "lst", "=", "[", "i", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "i", "in", "text", ".", "split", "(", "','", ")", "]", "\n", "return", "lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.icdcode_text_2_lst_of_lst": [[74, 81], ["text.split", "lst_lst.append", "j.strip", "i.split"], "function", ["None"], ["", "def", "icdcode_text_2_lst_of_lst", "(", "text", ")", ":", "\n", "\t", "text", "=", "text", "[", "2", ":", "-", "2", "]", "\n", "lst_lst", "=", "[", "]", "\n", "for", "i", "in", "text", ".", "split", "(", "'\", \"'", ")", ":", "\n", "\t\t", "i", "=", "i", "[", "1", ":", "-", "1", "]", "\n", "lst_lst", ".", "append", "(", "[", "j", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "j", "in", "i", ".", "split", "(", "','", ")", "]", ")", "\n", "", "return", "lst_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.trial_collate_fn": [[82, 89], ["torch.utils.data.dataloader.default_collate", "dataloader.smiles_txt_to_lst", "dataloader.icdcode_text_2_lst_of_lst", "HINT.protocol_encode.protocol2feature", "int"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.icdcode_text_2_lst_of_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.protocol2feature"], ["", "def", "trial_collate_fn", "(", "x", ")", ":", "\n", "\t", "nctid_lst", "=", "[", "i", "[", "0", "]", "for", "i", "in", "x", "]", "### ['NCT00604461', ..., 'NCT00788957'] ", "\n", "label_vec", "=", "default_collate", "(", "[", "int", "(", "i", "[", "1", "]", ")", "for", "i", "in", "x", "]", ")", "### shape n, ", "\n", "smiles_lst", "=", "[", "smiles_txt_to_lst", "(", "i", "[", "2", "]", ")", "for", "i", "in", "x", "]", "\n", "icdcode_lst", "=", "[", "icdcode_text_2_lst_of_lst", "(", "i", "[", "3", "]", ")", "for", "i", "in", "x", "]", "\n", "criteria_lst", "=", "[", "protocol2feature", "(", "i", "[", "4", "]", ",", "sentence2vec", ")", "for", "i", "in", "x", "]", "\n", "return", "[", "nctid_lst", ",", "label_vec", ",", "smiles_lst", ",", "icdcode_lst", ",", "criteria_lst", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.trial_complete_collate_fn": [[90, 102], ["torch.utils.data.dataloader.default_collate", "dataloader.icdcode_text_2_lst_of_lst", "dataloader.smiles_txt_to_lst", "HINT.protocol_encode.protocol2feature", "int"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.icdcode_text_2_lst_of_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.protocol2feature"], ["", "def", "trial_complete_collate_fn", "(", "x", ")", ":", "\n", "\t", "nctid_lst", "=", "[", "i", "[", "0", "]", "for", "i", "in", "x", "]", "### ['NCT00604461', ..., 'NCT00788957'] ", "\n", "status_lst", "=", "[", "i", "[", "1", "]", "for", "i", "in", "x", "]", "\n", "why_stop_lst", "=", "[", "i", "[", "2", "]", "for", "i", "in", "x", "]", "\n", "label_vec", "=", "default_collate", "(", "[", "int", "(", "i", "[", "3", "]", ")", "for", "i", "in", "x", "]", ")", "### shape n, ", "\n", "phase_lst", "=", "[", "i", "[", "4", "]", "for", "i", "in", "x", "]", "\n", "diseases_lst", "=", "[", "i", "[", "5", "]", "for", "i", "in", "x", "]", "\n", "icdcode_lst", "=", "[", "icdcode_text_2_lst_of_lst", "(", "i", "[", "6", "]", ")", "for", "i", "in", "x", "]", "\n", "drugs_lst", "=", "[", "i", "[", "7", "]", "for", "i", "in", "x", "]", "\n", "smiles_lst", "=", "[", "smiles_txt_to_lst", "(", "i", "[", "8", "]", ")", "for", "i", "in", "x", "]", "\n", "criteria_lst", "=", "[", "protocol2feature", "(", "i", "[", "9", "]", ",", "sentence2vec", ")", "for", "i", "in", "x", "]", "\n", "return", "[", "nctid_lst", ",", "status_lst", ",", "why_stop_lst", ",", "label_vec", ",", "phase_lst", ",", "diseases_lst", ",", "icdcode_lst", ",", "drugs_lst", ",", "smiles_lst", ",", "criteria_lst", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.csv_three_feature_2_dataloader": [[103, 116], ["dataloader.Trial_Dataset", "torch.utils.data.DataLoader", "open", "list", "csv.reader"], "function", ["None"], ["", "def", "csv_three_feature_2_dataloader", "(", "csvfile", ",", "shuffle", ",", "batch_size", ")", ":", "\n", "\t", "with", "open", "(", "csvfile", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "## nctid,status,why_stop,label,phase,diseases,icdcodes,drugs,smiless,criteria", "\n", "", "nctid_lst", "=", "[", "row", "[", "0", "]", "for", "row", "in", "rows", "]", "\n", "label_lst", "=", "[", "row", "[", "3", "]", "for", "row", "in", "rows", "]", "\n", "icdcode_lst", "=", "[", "row", "[", "6", "]", "for", "row", "in", "rows", "]", "\n", "drugs_lst", "=", "[", "row", "[", "7", "]", "for", "row", "in", "rows", "]", "\n", "smiles_lst", "=", "[", "row", "[", "8", "]", "for", "row", "in", "rows", "]", "\n", "criteria_lst", "=", "[", "row", "[", "9", "]", "for", "row", "in", "rows", "]", "\n", "dataset", "=", "Trial_Dataset", "(", "nctid_lst", ",", "label_lst", ",", "smiles_lst", ",", "icdcode_lst", ",", "criteria_lst", ")", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "collate_fn", "=", "trial_collate_fn", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.csv_three_feature_2_complete_dataloader": [[117, 135], ["dataloader.Trial_Dataset_Complete", "torch.utils.data.DataLoader", "open", "list", "csv.reader"], "function", ["None"], ["", "def", "csv_three_feature_2_complete_dataloader", "(", "csvfile", ",", "shuffle", ",", "batch_size", ")", ":", "\n", "\t", "with", "open", "(", "csvfile", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "nctid_lst", "=", "[", "row", "[", "0", "]", "for", "row", "in", "rows", "]", "\n", "status_lst", "=", "[", "row", "[", "1", "]", "for", "row", "in", "rows", "]", "\n", "why_stop_lst", "=", "[", "row", "[", "2", "]", "for", "row", "in", "rows", "]", "\n", "label_lst", "=", "[", "row", "[", "3", "]", "for", "row", "in", "rows", "]", "\n", "phase_lst", "=", "[", "row", "[", "4", "]", "for", "row", "in", "rows", "]", "\n", "diseases_lst", "=", "[", "row", "[", "5", "]", "for", "row", "in", "rows", "]", "\n", "icdcode_lst", "=", "[", "row", "[", "6", "]", "for", "row", "in", "rows", "]", "\n", "drugs_lst", "=", "[", "row", "[", "7", "]", "for", "row", "in", "rows", "]", "\n", "smiles_lst", "=", "[", "row", "[", "8", "]", "for", "row", "in", "rows", "]", "\n", "new_drugs_lst", ",", "new_smiles_lst", "=", "[", "]", ",", "[", "]", "\n", "criteria_lst", "=", "[", "row", "[", "9", "]", "for", "row", "in", "rows", "]", "\n", "dataset", "=", "Trial_Dataset_Complete", "(", "nctid_lst", ",", "status_lst", ",", "why_stop_lst", ",", "label_lst", ",", "phase_lst", ",", "\n", "diseases_lst", ",", "icdcode_lst", ",", "drugs_lst", ",", "smiles_lst", ",", "criteria_lst", ")", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "collate_fn", "=", "trial_complete_collate_fn", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.smiles_txt_to_2lst": [[141, 147], ["open", "fin.readlines", "int", "line.split", "line.split"], "function", ["None"], ["", "def", "smiles_txt_to_2lst", "(", "smiles_txt_file", ")", ":", "\n", "\t", "with", "open", "(", "smiles_txt_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "smiles_lst", "=", "[", "line", ".", "split", "(", ")", "[", "0", "]", "for", "line", "in", "lines", "]", "\n", "label_lst", "=", "[", "int", "(", "line", ".", "split", "(", ")", "[", "1", "]", ")", "for", "line", "in", "lines", "]", "\n", "return", "smiles_lst", ",", "label_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.dataloader.generate_admet_dataloader_lst": [[148, 163], ["enumerate", "os.path.join", "os.path.join", "dataloader.smiles_txt_to_2lst", "dataloader.smiles_txt_to_2lst", "dataloader.ADMET_Dataset", "dataloader.ADMET_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "dataloader_lst.append"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_2lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_2lst"], ["", "def", "generate_admet_dataloader_lst", "(", "batch_size", ")", ":", "\n", "\t", "datafolder", "=", "\"data/ADMET/cooked/\"", "\n", "name_lst", "=", "[", "\"absorption\"", ",", "'distribution'", ",", "'metabolism'", ",", "'excretion'", ",", "'toxicity'", "]", "\n", "dataloader_lst", "=", "[", "]", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "name_lst", ")", ":", "\n", "\t\t", "train_file", "=", "os", ".", "path", ".", "join", "(", "datafolder", ",", "name", "+", "'_train.txt'", ")", "\n", "test_file", "=", "os", ".", "path", ".", "join", "(", "datafolder", ",", "name", "+", "'_valid.txt'", ")", "\n", "train_smiles_lst", ",", "train_label_lst", "=", "smiles_txt_to_2lst", "(", "train_file", ")", "\n", "test_smiles_lst", ",", "test_label_lst", "=", "smiles_txt_to_2lst", "(", "test_file", ")", "\n", "train_dataset", "=", "ADMET_Dataset", "(", "smiles_lst", "=", "train_smiles_lst", ",", "label_lst", "=", "train_label_lst", ")", "\n", "test_dataset", "=", "ADMET_Dataset", "(", "smiles_lst", "=", "test_smiles_lst", ",", "label_lst", "=", "test_label_lst", ")", "\n", "train_dataloader", "=", "data", ".", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "test_dataloader", "=", "data", ".", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "dataloader_lst", ".", "append", "(", "(", "train_dataloader", ",", "test_dataloader", ")", ")", "\n", "", "return", "dataloader_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.plot_hist": [[14, 31], ["pickle.dump", "sns.distplot", "sns.distplot", "plt.xlabel", "plt.ylabel", "plt.legend", "plt.tight_layout", "plt.savefig", "open", "range", "range", "len", "len", "prefix_name.split"], "function", ["None"], ["def", "plot_hist", "(", "prefix_name", ",", "prediction", ",", "label", ")", ":", "\n", "\t", "import", "seaborn", "as", "sns", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "figure_name", "=", "prefix_name", "+", "\"_histogram.png\"", "\n", "positive_prediction", "=", "[", "prediction", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "label", ")", ")", "if", "label", "[", "i", "]", "==", "1", "]", "\n", "negative_prediction", "=", "[", "prediction", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "label", ")", ")", "if", "label", "[", "i", "]", "==", "0", "]", "\n", "save_file_name", "=", "\"results/\"", "+", "prefix_name", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "+", "\"_positive_negative.pkl\"", "\n", "pickle", ".", "dump", "(", "(", "positive_prediction", ",", "negative_prediction", ")", ",", "open", "(", "save_file_name", ",", "'wb'", ")", ")", "\n", "sns", ".", "distplot", "(", "positive_prediction", ",", "hist", "=", "True", ",", "kde", "=", "False", ",", "bins", "=", "20", ",", "color", "=", "'blue'", ",", "label", "=", "'success'", ")", "#### bins = 50 -> 20 ", "\n", "sns", ".", "distplot", "(", "negative_prediction", ",", "hist", "=", "True", ",", "kde", "=", "False", ",", "bins", "=", "20", ",", "color", "=", "'red'", ",", "label", "=", "'fail'", ")", "\n", "plt", ".", "xlabel", "(", "\"predicted success probability\"", ",", "fontsize", "=", "24", ")", "\n", "plt", ".", "ylabel", "(", "\"frequencies\"", ",", "fontsize", "=", "25", ")", "\n", "plt", ".", "legend", "(", "fontsize", "=", "21", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "# plt.show()", "\n", "plt", ".", "savefig", "(", "figure_name", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.replace_strange_symbol": [[32, 36], ["text.replace.replace"], "function", ["None"], ["", "def", "replace_strange_symbol", "(", "text", ")", ":", "\n", "\t", "for", "i", "in", "\"[]'\\n/\"", ":", "\n", "\t\t", "text", "=", "text", ".", "replace", "(", "i", ",", "'_'", ")", "\n", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.walkData": [[38, 46], ["result_list.append", "root_node.getchildren", "len", "utils.walkData"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.walkData"], ["", "def", "walkData", "(", "root_node", ",", "prefix", ",", "result_list", ")", ":", "\n", "\t", "temp_list", "=", "[", "prefix", "+", "'/'", "+", "root_node", ".", "tag", ",", "root_node", ".", "text", "]", "\n", "result_list", ".", "append", "(", "temp_list", ")", "\n", "children_node", "=", "root_node", ".", "getchildren", "(", ")", "\n", "if", "len", "(", "children_node", ")", "==", "0", ":", "\n", "\t\t", "return", "\n", "", "for", "child", "in", "children_node", ":", "\n", "\t\t", "walkData", "(", "child", ",", "prefix", "=", "prefix", "+", "'/'", "+", "root_node", ".", "tag", ",", "result_list", "=", "result_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.dynamic_programming": [[48, 69], ["range", "range", "range", "len", "len", "len", "range", "len", "max", "len", "len"], "function", ["None"], ["", "", "def", "dynamic_programming", "(", "s1", ",", "s2", ")", ":", "\n", "\t", "arr2d", "=", "[", "[", "0", "for", "i", "in", "s2", "]", "for", "j", "in", "s1", "]", "\n", "if", "s1", "[", "0", "]", "==", "s2", "[", "0", "]", ":", "\n", "\t\t", "arr2d", "[", "0", "]", "[", "0", "]", "=", "1", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "s1", ")", ")", ":", "\n", "\t\t", "if", "s1", "[", "i", "]", "==", "s2", "[", "0", "]", ":", "\n", "\t\t\t", "arr2d", "[", "i", "]", "[", "0", "]", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t", "arr2d", "[", "i", "]", "[", "0", "]", "=", "arr2d", "[", "i", "-", "1", "]", "[", "0", "]", "\n", "", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "s2", ")", ")", ":", "\n", "\t\t", "if", "s2", "[", "i", "]", "==", "s1", "[", "0", "]", ":", "\n", "\t\t\t", "arr2d", "[", "0", "]", "[", "i", "]", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t", "arr2d", "[", "0", "]", "[", "i", "]", "=", "arr2d", "[", "0", "]", "[", "i", "-", "1", "]", "\n", "", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "s1", ")", ")", ":", "\n", "\t\t", "for", "j", "in", "range", "(", "1", ",", "len", "(", "s2", ")", ")", ":", "\n", "\t\t\t", "if", "s1", "[", "i", "]", "==", "s2", "[", "j", "]", ":", "\n", "\t\t\t\t", "arr2d", "[", "i", "]", "[", "j", "]", "=", "arr2d", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", "+", "1", "\n", "", "else", ":", "\n", "\t\t\t\t", "arr2d", "[", "i", "]", "[", "j", "]", "=", "max", "(", "arr2d", "[", "i", "-", "1", "]", "[", "j", "]", ",", "arr2d", "[", "i", "]", "[", "j", "-", "1", "]", ")", "\n", "", "", "", "return", "arr2d", "[", "len", "(", "s1", ")", "-", "1", "]", "[", "len", "(", "s2", ")", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.get_path_of_all_xml_file": [[71, 77], ["open", "fin.readlines", "i.strip"], "function", ["None"], ["", "def", "get_path_of_all_xml_file", "(", ")", ":", "\n", "\t", "input_file", "=", "\"./data/all_xml\"", "\n", "with", "open", "(", "input_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "input_file_lst", "=", "[", "i", ".", "strip", "(", ")", "for", "i", "in", "lines", "]", "\n", "return", "input_file_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.remove_multiple_space": [[79, 82], ["text.split"], "function", ["None"], ["", "def", "remove_multiple_space", "(", "text", ")", ":", "\n", "\t", "text", "=", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.nctid_2_xml_file_path": [[83, 88], ["os.path.join", "len"], "function", ["None"], ["", "def", "nctid_2_xml_file_path", "(", "nctid", ")", ":", "\n", "\t", "assert", "len", "(", "nctid", ")", "==", "11", "\n", "prefix", "=", "nctid", "[", ":", "7", "]", "+", "\"xxxx\"", "\n", "datafolder", "=", "os", ".", "path", ".", "join", "(", "\"./ClinicalTrialGov/\"", ",", "prefix", ",", "nctid", "+", "\".xml\"", ")", "\n", "return", "datafolder", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.fingerprints_from_mol": [[90, 98], ["rdkit.Chem.AllChem.GetMorganFingerprint", "numpy.zeros", "AllChem.GetMorganFingerprint.GetNonzeroElements().items", "int", "AllChem.GetMorganFingerprint.GetNonzeroElements"], "function", ["None"], ["", "def", "fingerprints_from_mol", "(", "mol", ")", ":", "\n", "    ", "fp", "=", "AllChem", ".", "GetMorganFingerprint", "(", "mol", ",", "3", ",", "useCounts", "=", "True", ",", "useFeatures", "=", "True", ")", "\n", "size", "=", "2048", "\n", "nfp", "=", "np", ".", "zeros", "(", "(", "1", ",", "size", ")", ",", "np", ".", "int32", ")", "\n", "for", "idx", ",", "v", "in", "fp", ".", "GetNonzeroElements", "(", ")", ".", "items", "(", ")", ":", "\n", "        ", "nidx", "=", "idx", "%", "size", "\n", "nfp", "[", "0", ",", "nidx", "]", "+=", "int", "(", "v", ")", "\n", "", "return", "nfp", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.smiles2fp": [[99, 106], ["rdkit.Chem.MolFromSmiles", "utils.fingerprints_from_mol", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.fingerprints_from_mol"], ["", "def", "smiles2fp", "(", "smiles", ")", ":", "\n", "\t", "try", ":", "\n", "\t\t", "mol", "=", "Chem", ".", "MolFromSmiles", "(", "smile", ")", "\n", "fp", "=", "fingerprints_from_mol", "(", "mol", ")", "\n", "return", "fp", "\n", "", "except", ":", "\n", "\t\t", "return", "np", ".", "zeros", "(", "(", "1", ",", "2048", ")", ",", "np", ".", "int32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.HINT.utils.smiles_lst2fp": [[107, 112], ["numpy.concatenate", "numpy.mean", "utils.smiles2fp"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.smiles2fp"], ["", "", "def", "smiles_lst2fp", "(", "smiles_lst", ")", ":", "\n", "\t", "fp_lst", "=", "[", "smiles2fp", "(", "smiles", ")", "for", "smiles", "in", "smiles_lst", "]", "\n", "fp_mat", "=", "np", ".", "concatenate", "(", "fp_lst", ",", "0", ")", "\n", "fp", "=", "np", ".", "mean", "(", "fp_mat", ",", "0", ")", "\n", "return", "fp", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.statistics.icdcode_text_2_lst_of_lst": [[13, 20], ["text.split", "lst_lst.append", "j.strip", "i.split"], "function", ["None"], ["def", "icdcode_text_2_lst_of_lst", "(", "text", ")", ":", "\n", "\t", "text", "=", "text", "[", "2", ":", "-", "2", "]", "\n", "lst_lst", "=", "[", "]", "\n", "for", "i", "in", "text", ".", "split", "(", "'\", \"'", ")", ":", "\n", "\t\t", "i", "=", "i", "[", "1", ":", "-", "1", "]", "\n", "lst_lst", ".", "append", "(", "[", "j", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "j", "in", "i", ".", "split", "(", "','", ")", "]", ")", "\n", "", "return", "lst_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.statistics.row2icdcodelst": [[21, 27], ["statistics.icdcode_text_2_lst_of_lst", "functools.reduce", "i.replace"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.icdcode_text_2_lst_of_lst"], ["", "def", "row2icdcodelst", "(", "row", ")", ":", "\n", "\t", "icdcode_text", "=", "row", "[", "6", "]", "\n", "icdcode_lst2", "=", "icdcode_text_2_lst_of_lst", "(", "icdcode_text", ")", "\n", "icdcode_lst", "=", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "icdcode_lst2", ")", "\n", "icdcode_lst", "=", "[", "i", ".", "replace", "(", "'.'", ",", "''", ")", "for", "i", "in", "icdcode_lst", "]", "\n", "return", "icdcode_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.statistics.xmlfile_2_startyear": [[28, 37], ["xml.etree.ElementTree.parse", "ET.parse.getroot", "int", "tree.getroot.find", "int.split"], "function", ["None"], ["", "def", "xmlfile_2_startyear", "(", "xml_file", ")", ":", "\n", "\t", "tree", "=", "ET", ".", "parse", "(", "xml_file", ")", "\n", "root", "=", "tree", ".", "getroot", "(", ")", "\n", "try", ":", "\n", "\t\t", "start_date", "=", "root", ".", "find", "(", "'start_date'", ")", ".", "text", "\n", "start_date", "=", "int", "(", "start_date", ".", "split", "(", ")", "[", "-", "1", "]", ")", "\n", "", "except", ":", "\n", "\t\t", "start_date", "=", "-", "1", "\n", "", "return", "start_date", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.statistics.file2patientnumber": [[38, 46], ["os.system", "open", "fin.readlines", "int", "line.split"], "function", ["None"], ["", "def", "file2patientnumber", "(", "xml_file", ")", ":", "\n", "\t", "os", ".", "system", "(", "'grep \"'", "+", "pattern_string", "+", "'\" '", "+", "xml_file", "+", "'  > tmp'", ")", "\n", "with", "open", "(", "\"tmp\"", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "summ", "=", "0", "\n", "for", "line", "in", "lines", ":", "\n", "\t\t", "summ", "+=", "int", "(", "line", ".", "split", "(", "'\"'", ")", "[", "3", "]", ")", "\n", "", "return", "summ", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.raw_data_to_feature.Get_Iqvia_data": [[30, 57], ["dict", "dict", "list", "open", "fin.readlines", "int", "open", "dict.keys", "line.split", "list", "dict.pop", "line.split", "csv.reader"], "function", ["None"], ["def", "Get_Iqvia_data", "(", ")", ":", "\n", "\t", "nct2outcome_file", "=", "\"data/trial_outcomes_v1.csv\"", "\n", "outcome2label_file", "=", "\"data/outcome2label.txt\"", "\n", "outcome2label", "=", "dict", "(", ")", "\n", "nct2label", "=", "dict", "(", ")", "\n", "with", "open", "(", "outcome2label_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "for", "line", "in", "lines", ":", "\n", "\t\t", "outcome", "=", "line", ".", "split", "(", "'\\t'", ")", "[", "0", "]", "\n", "label", "=", "int", "(", "line", ".", "split", "(", "'\\t'", ")", "[", "1", "]", ")", "\n", "outcome2label", "[", "outcome", "]", "=", "label", "\n", "", "with", "open", "(", "nct2outcome_file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "reader", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "for", "row", "in", "reader", ":", "\n", "\t\t\t", "nctid", ",", "outcome", "=", "row", "[", "0", "]", ",", "row", "[", "1", "]", "\n", "label", "=", "outcome2label", "[", "outcome", "]", "\n", "if", "nctid", "in", "nct2label", ":", "\n", "\t\t\t\t", "if", "label", ">", "nct2label", "[", "nctid", "]", ":", "\n", "\t\t\t\t\t", "nct2label", "[", "nctid", "]", "=", "label", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "nct2label", "[", "nctid", "]", "=", "label", "\n", "### remove the key whole value is -1", "\n", "", "", "", "for", "nctid", "in", "list", "(", "nct2label", ".", "keys", "(", ")", ")", ":", "\n", "\t\t", "label", "=", "nct2label", "[", "nctid", "]", "\n", "if", "label", "==", "-", "1", ":", "\n", "\t\t\t", "nct2label", ".", "pop", "(", "nctid", ")", "\n", "", "", "return", "nct2label", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.raw_data_to_feature.load_drug2smiles_pkl": [[58, 62], ["pickle.load", "open"], "function", ["None"], ["", "def", "load_drug2smiles_pkl", "(", ")", ":", "\n", "\t", "pkl_file", "=", "\"data/drug2smiles.pkl\"", "\n", "drug2smiles", "=", "pickle", ".", "load", "(", "open", "(", "pkl_file", ",", "'rb'", ")", ")", "\n", "return", "drug2smiles", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.raw_data_to_feature.load_disease2icd_pkl": [[63, 69], ["pickle.load", "pickle.load", "open", "open"], "function", ["None"], ["", "def", "load_disease2icd_pkl", "(", ")", ":", "\n", "\t", "iqvia_pkl_file", "=", "\"data/disease2icd.pkl\"", "\n", "public_pkl_file", "=", "\"icdcode/description2icd10.pkl\"", "\n", "iqvia_disease2icd", "=", "pickle", ".", "load", "(", "open", "(", "iqvia_pkl_file", ",", "'rb'", ")", ")", "\n", "public_disease2icd", "=", "pickle", ".", "load", "(", "open", "(", "public_pkl_file", ",", "'rb'", ")", ")", "\n", "return", "iqvia_disease2icd", ",", "public_disease2icd", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.raw_data_to_feature.drug_hit_smiles": [[72, 92], ["drug.split", "print", "len"], "function", ["None"], ["", "def", "drug_hit_smiles", "(", "drug", ",", "drug2smiles", ")", ":", "\n", "\t", "\"\"\"\n\t\theuristics\n\t\"\"\"", "\n", "if", "drug", "in", "drug2smiles", ":", "\n", "\t\t", "return", "drug2smiles", "[", "drug", "]", "\n", "", "for", "word", "in", "drug", ".", "split", "(", ")", ":", "\n", "\t\t", "if", "len", "(", "word", ")", ">=", "7", "and", "word", "in", "drug2smiles", ":", "\n", "\t\t\t", "print", "(", "\"drug hit: \"", ",", "drug", ",", "'&'", ",", "word", ")", "\n", "return", "drug2smiles", "[", "word", "]", "\n", "# max_length = 0", "\n", "# for drug0 in drug2smiles:", "\n", "# \tlength = dynamic_programming(drug, drug0)", "\n", "# \tif length > max_length:", "\n", "# \t\tbest_drug = drug0 ", "\n", "# \t\tmax_length = length ", "\n", "# if max_length > 9: ", "\n", "# \tprint(\"DP drug hit: \", drug, '&', best_drug)", "\n", "# \treturn drug2smiles[best_drug]", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.raw_data_to_feature.disease_hit_icd": [[94, 130], ["disease.split", "set", "disease2diseaseset.items", "re.split", "disease0set.intersection", "len", "len", "print", "print", "len", "list"], "function", ["None"], ["", "def", "disease_hit_icd", "(", "disease", ",", "disease2icd", ",", "disease2diseaseset", ")", ":", "\n", "\t", "\"\"\"\n\t\theuristics\n\t\"\"\"", "\n", "#### match 0", "\n", "if", "disease", "in", "disease2icd", ":", "\n", "\t\t", "return", "disease2icd", "[", "disease", "]", "\n", "#### match 1", "\n", "", "for", "word", "in", "disease", ".", "split", "(", ")", ":", "\n", "\t\t", "if", "len", "(", "word", ")", ">=", "7", "and", "word", "in", "disease2icd", ":", "\n", "\t\t\t", "print", "(", "\"I disease hit:\"", ",", "disease", ",", "'&'", ",", "word", ")", "\n", "return", "disease2icd", "[", "word", "]", "\n", "#### match 2", "\n", "", "", "max_length", "=", "0", "\n", "diseaseset", "=", "set", "(", "re", ".", "split", "(", "r\"[\\', /-]\"", ",", "disease", ")", ")", "\n", "for", "disease0", ",", "disease0set", "in", "disease2diseaseset", ".", "items", "(", ")", ":", "\n", "\t\t", "intersection_set", "=", "disease0set", ".", "intersection", "(", "diseaseset", ")", "\n", "length", "=", "len", "(", "intersection_set", ")", "\n", "wordlength", "=", "len", "(", "''", ".", "join", "(", "list", "(", "intersection_set", ")", ")", ")", "\n", "if", "length", ">", "max_length", "and", "wordlength", ">", "8", ":", "\n", "\t\t\t", "max_length", "=", "length", "\n", "best_disease", "=", "disease0", "\n", "", "", "if", "max_length", ">", "1", ":", "\n", "\t\t", "print", "(", "\"II disease hit:\"", ",", "disease", ",", "'&'", ",", "best_disease", ")", "\n", "return", "disease2icd", "[", "best_disease", "]", "\n", "\n", "# max_length = 0", "\n", "# for disease0 in disease2icd:", "\n", "# \tlength = dynamic_programming(disease, disease0)", "\n", "# \tif length > max_length:", "\n", "# \t\tbest_disease = disease0 ", "\n", "# \t\tmax_length = length ", "\n", "# if max_length > 20: ", "\n", "# \tprint(\"III DP disease hit: \", disease, '&', best_disease)", "\n", "# \treturn disease2icd[best_disease]\t", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.raw_data_to_feature.disease_dict_reorganize": [[132, 134], ["set", "re.split"], "function", ["None"], ["", "def", "disease_dict_reorganize", "(", "disease2icd", ")", ":", "\n", "\t", "return", "{", "disease", ":", "set", "(", "re", ".", "split", "(", "r\"[\\', /-]\"", ",", "disease", ")", ")", "for", "disease", "in", "disease2icd", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.description2icd10.extract_icdcode": [[42, 53], ["dict", "print", "pickle.dump", "open", "list", "print", "str", "open", "csv.reader", "len"], "function", ["None"], ["def", "extract_icdcode", "(", "csv_file", ",", "pkl_file", ")", ":", "\n", "\t", "with", "open", "(", "csv_file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "\n", "", "description2icd", "=", "dict", "(", ")", "\n", "for", "row", "in", "rows", ":", "\n", "\t\t", "icd", "=", "row", "[", "0", "]", "\n", "description", "=", "row", "[", "1", "]", "\n", "print", "(", "icd", ")", "\n", "description2icd", "[", "description", "]", "=", "icd", "\n", "", "print", "(", "\"code number is\"", ",", "str", "(", "len", "(", "description2icd", ")", ")", ")", "\n", "pickle", ".", "dump", "(", "description2icd", ",", "open", "(", "pkl_file", ",", "'wb'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_raw_data.load_disease2icd": [[58, 67], ["dict", "open", "list", "csv.reader"], "function", ["None"], ["def", "load_disease2icd", "(", ")", ":", "\n", "\t", "disease2icd", "=", "dict", "(", ")", "\n", "with", "open", "(", "'data/diseases.csv'", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "for", "row", "in", "rows", ":", "\n", "\t\t", "disease", "=", "row", "[", "0", "]", "\n", "icd", "=", "row", "[", "1", "]", "\n", "disease2icd", "[", "disease", "]", "=", "icd", "\n", "", "return", "disease2icd", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_raw_data.nctid2label_dict": [[69, 84], ["dict", "dict", "dict.items", "open", "fin.readlines", "open", "int", "list", "line.split", "csv.reader", "line.strip().split", "line.strip"], "function", ["None"], ["", "def", "nctid2label_dict", "(", ")", ":", "\n", "\t", "nctid2outcome", "=", "dict", "(", ")", "\n", "nctid2label", "=", "dict", "(", ")", "\n", "with", "open", "(", "\"IQVIA/outcome2label.txt\"", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "outcome2label", "=", "{", "line", ".", "split", "(", "'\\t'", ")", "[", "0", "]", ":", "int", "(", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "[", "1", "]", ")", "for", "line", "in", "lines", "}", "\n", "\n", "", "with", "open", "(", "\"IQVIA/trial_outcomes_v1.csv\"", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "csvreader", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ")", ")", "[", "1", ":", "]", "\n", "nctid2outcome", "=", "{", "row", "[", "0", "]", ":", "row", "[", "1", "]", "for", "row", "in", "csvreader", "}", "\n", "\n", "", "for", "nctid", ",", "outcome", "in", "nctid2outcome", ".", "items", "(", ")", ":", "\n", "\t\t", "nctid2label", "[", "nctid", "]", "=", "outcome2label", "[", "outcome", "]", "\n", "\n", "", "return", "nctid2label", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_raw_data.root2outcome": [[89, 111], ["utils.walkData", "list", "filter", "len", "float"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.walkData"], ["def", "root2outcome", "(", "root", ")", ":", "\n", "\t", "result_list", "=", "[", "]", "\n", "walkData", "(", "root", ",", "prefix", "=", "''", ",", "result_list", "=", "result_list", ")", "\n", "filter_func", "=", "lambda", "x", ":", "'p_value'", "in", "x", "[", "0", "]", "\n", "outcome_list", "=", "list", "(", "filter", "(", "filter_func", ",", "result_list", ")", ")", "\n", "if", "len", "(", "outcome_list", ")", "==", "0", ":", "\n", "\t\t", "return", "None", "\n", "", "outcome", "=", "outcome_list", "[", "0", "]", "[", "1", "]", "\n", "if", "outcome", "[", "0", "]", "==", "'<'", ":", "\n", "\t\t", "return", "1", "\n", "", "if", "outcome", "[", "0", "]", "==", "'>'", ":", "\n", "\t\t", "return", "0", "\n", "", "if", "outcome", "[", "0", "]", "==", "'='", ":", "\n", "\t\t", "outcome", "=", "outcome", "[", "1", ":", "]", "\n", "", "try", ":", "\n", "\t\t", "label", "=", "float", "(", "outcome", ")", "\n", "if", "label", "<", "0.05", ":", "\n", "\t\t\t", "return", "1", "\n", "", "else", ":", "\n", "\t\t\t", "return", "0", "\n", "", "", "except", ":", "\n", "\t\t", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_raw_data.xml_file_2_tuple": [[112, 180], ["xml.etree.ElementTree.parse", "ET.parse.getroot", "tree.getroot.find().find", "tree.getroot.find", "len", "i.lower", "i.lower", "status.lower", "why_stop.lower", "phase.lower", "tree.getroot.findall", "i.find", "tree.getroot.find", "tree.getroot.find", "tree.getroot.find", "tree.getroot.findall", "tree.getroot.find().find().find", "tree.getroot.find", "i.find", "tree.getroot.find().find", "tree.getroot.find"], "function", ["None"], ["", "", "def", "xml_file_2_tuple", "(", "xml_file", ")", ":", "\n", "\t", "tree", "=", "ET", ".", "parse", "(", "xml_file", ")", "\n", "root", "=", "tree", ".", "getroot", "(", ")", "\n", "nctid", "=", "root", ".", "find", "(", "'id_info'", ")", ".", "find", "(", "'nct_id'", ")", ".", "text", "### nctid: 'NCT00000102'", "\n", "study_type", "=", "root", ".", "find", "(", "'study_type'", ")", ".", "text", "\n", "if", "study_type", "!=", "'Interventional'", ":", "\n", "\t\t", "return", "(", "\"non-Interventional\"", ",", ")", "\n", "\n", "", "interventions", "=", "[", "i", "for", "i", "in", "root", ".", "findall", "(", "'intervention'", ")", "]", "\n", "drug_interventions", "=", "[", "i", ".", "find", "(", "'intervention_name'", ")", ".", "text", "for", "i", "in", "interventions", "if", "i", ".", "find", "(", "'intervention_type'", ")", ".", "text", "==", "'Drug'", "]", "\n", "# or i.find('intervention_type').text=='Biological']", "\n", "if", "len", "(", "drug_interventions", ")", "==", "0", ":", "\n", "\t\t", "return", "(", "\"Biological\"", ",", ")", "\n", "\n", "", "try", ":", "\n", "\t\t", "status", "=", "root", ".", "find", "(", "'overall_status'", ")", ".", "text", "\n", "", "except", ":", "\n", "\t\t", "status", "=", "''", "\n", "# if status in drop_set:", "\n", "# \treturn (None,)  ### invalid ", "\n", "", "try", ":", "\n", "\t\t", "why_stop", "=", "root", ".", "find", "(", "'why_stopped'", ")", ".", "text", "\n", "", "except", ":", "\n", "\t\t", "why_stop", "=", "''", "\n", "\n", "\n", "\n", "##### p-value", "\n", "# label = root2outcome(root)  ######## p-value", "\n", "# label = -1 if label is None else label ", "\n", "\n", "##### IQVIA internal data  ", "\n", "", "if", "nctid", "not", "in", "nctid2label", ":", "\n", "\t\t", "label", "=", "-", "1", "\n", "", "else", ":", "\n", "\t\t", "label", "=", "nctid2label", "[", "nctid", "]", "\n", "\n", "# if nctid == \"NCT00924001\":", "\n", "# \tprint(nctid, label)", "\n", "# \texit()", "\n", "\n", "", "try", ":", "\n", "\t\t", "phase", "=", "root", ".", "find", "(", "'phase'", ")", ".", "text", "\n", "# print(\"phase\\n\\t\\t\", phase)", "\n", "", "except", ":", "\n", "\t\t", "phase", "=", "''", "\n", "", "conditions", "=", "[", "i", ".", "text", "for", "i", "in", "root", ".", "findall", "(", "'condition'", ")", "]", "\n", "\n", "try", ":", "\n", "\t\t", "criteria", "=", "root", ".", "find", "(", "'eligibility'", ")", ".", "find", "(", "'criteria'", ")", ".", "find", "(", "'textblock'", ")", ".", "text", "\n", "# print(\"criteria\\n\\t\\t\", criteria)", "\n", "", "except", ":", "\n", "\t\t", "criteria", "=", "''", "\n", "#if criteria != '':", "\n", "#\tassert \"Inclusion Criteria:\" in criteria ", "\n", "#\tassert \"Exclusion Criteria:\" in criteria ", "\n", "# title = root.find('brief_title').text\t", "\n", "# try: ", "\n", "# \tsummary = root.find('brief_summary').text ", "\n", "# \t# print(\"summary\\n\\t\\t\", summary)", "\n", "# except:", "\n", "# \tsummary = '' ", "\n", "\n", "", "conditions", "=", "[", "i", ".", "lower", "(", ")", "for", "i", "in", "conditions", "]", "\n", "drugs", "=", "[", "i", ".", "lower", "(", ")", "for", "i", "in", "drug_interventions", "]", "\n", "\n", "return", "nctid", ",", "status", ".", "lower", "(", ")", ",", "why_stop", ".", "lower", "(", ")", ",", "label", ",", "phase", ".", "lower", "(", ")", ",", "conditions", ",", "drugs", ",", "criteria", "\n", "# return nctid, status.lower(), why_stop.lower(), label, phase.lower(), conditions, drugs, title, criteria, summary", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_raw_data.process_all": [[184, 281], ["load_drug2smiles_pkl", "collect_raw_data.load_disease2icd", "utils.get_path_of_all_xml_file", "time.time", "time.time", "print", "print", "print", "print", "print", "print", "open", "csv.DictWriter", "csv.DictWriter.writeheader", "tqdm.tqdm", "collect_raw_data.xml_file_2_tuple", "print", "list", "csv.DictWriter.writerow", "list.append", "drug_hit_smiles", "filter", "str", "len", "smiles_lst.append", "print", "str", "len", "int"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.load_drug2smiles_pkl", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_raw_data.load_disease2icd", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.get_path_of_all_xml_file", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_disease_from_raw.xml_file_2_tuple", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.drug_hit_smiles"], ["", "def", "process_all", "(", ")", ":", "\n", "\t", "from", "raw_data_to_feature", "import", "load_drug2smiles_pkl", ",", "drug_hit_smiles", "\n", "### input ", "\n", "drug2smiles", "=", "load_drug2smiles_pkl", "(", ")", "\n", "disease2icd", "=", "load_disease2icd", "(", ")", "\n", "input_file_lst", "=", "get_path_of_all_xml_file", "(", ")", "\n", "### output ", "\n", "output_file", "=", "'data/raw_data.csv'", "\n", "# iqvia_disease2icd, public_disease2icd = load_disease2icd_pkl() ", "\n", "# iqvia_disease2diseaseset = disease_dict_reorganize(iqvia_disease2icd)", "\n", "# disease2icd = public_disease2icd ", "\n", "# disease2diseaseset = disease_dict_reorganize(public_disease2icd)", "\n", "\n", "t1", "=", "time", "(", ")", "\n", "disease_hit", ",", "disease_all", ",", "drug_hit", ",", "drug_all", "=", "0", ",", "0", ",", "0", ",", "0", "### disease hit icd && drug hit smiles", "\n", "# fieldname = ['nctid', 'status', 'why_stop', 'label', 'phase', ", "\n", "# \t\t\t 'diseases', 'icdcodes', 'drugs', 'smiless', ", "\n", "# \t\t\t 'title', 'criteria', 'summary']", "\n", "fieldname", "=", "[", "'nctid'", ",", "'status'", ",", "'why_stop'", ",", "'label'", ",", "'phase'", ",", "\n", "'diseases'", ",", "'icdcodes'", ",", "'drugs'", ",", "'smiless'", ",", "\n", "'criteria'", "]", "\n", "num_noninterventional", ",", "num_biologics", "=", "0", ",", "0", ",", "\n", "num_nodrug", "=", "0", "\n", "num_nolabel", "=", "0", "\n", "num_nodisease", "=", "0", "\n", "with", "open", "(", "output_file", ",", "'w'", ")", "as", "csvfile", ":", "\n", "\t\t", "writer", "=", "csv", ".", "DictWriter", "(", "csvfile", ",", "fieldnames", "=", "fieldname", ")", "\n", "writer", ".", "writeheader", "(", ")", "\n", "data_count", "=", "0", "\n", "for", "file", "in", "tqdm", "(", "input_file_lst", "[", ":", "]", ")", ":", "\n", "\t\t\t", "result", "=", "xml_file_2_tuple", "(", "file", ")", "\n", "## 0.1 & 0.2 ", "\n", "if", "len", "(", "result", ")", "==", "1", "and", "result", "[", "0", "]", "==", "'non-Interventional'", ":", "\n", "\t\t\t\t", "num_noninterventional", "+=", "1", "\n", "continue", "\n", "", "elif", "len", "(", "result", ")", "==", "1", "and", "result", "[", "0", "]", "==", "'Biological'", ":", "\n", "\t\t\t\t", "num_biologics", "+=", "1", "\n", "continue", "\n", "\n", "", "nctid", ",", "status", ",", "why_stop", ",", "label", ",", "phase", ",", "conditions", ",", "drugs", ",", "criteria", "=", "result", "\n", "# nctid, status, why_stop, label, phase, conditions, drugs, title, criteria, summary = result", "\n", "\n", "## 0.4 ", "\n", "if", "(", "label", "==", "-", "1", ")", "and", "(", "'lack of efficacy'", "in", "why_stop", "or", "'efficacy concern'", "in", "why_stop", "or", "'accrual'", "in", "why_stop", ")", ":", "\n", "\t\t\t\t", "label", "=", "0", "\n", "## 0.5", "\n", "", "if", "label", "==", "-", "1", ":", "\n", "\t\t\t\t", "num_nolabel", "+=", "1", "\n", "continue", "\n", "\n", "## 1. disease -> icd", "\n", "", "icdcode_lst", "=", "[", "]", "\n", "for", "disease", "in", "conditions", ":", "\n", "\t\t\t\t", "icdcode", "=", "disease2icd", "[", "disease", "]", "if", "disease", "in", "disease2icd", "else", "None", "\n", "icdcode_lst", ".", "append", "(", "icdcode", ")", "\n", "## 2. drug -> smiles ", "\n", "", "smiles_lst", "=", "[", "]", "\n", "print", "(", "\"drugs \"", ",", "drugs", ")", "\n", "for", "drug", "in", "drugs", ":", "\n", "# drug_all += 1", "\n", "\t\t\t\t", "smiles", "=", "drug_hit_smiles", "(", "drug", ",", "drug2smiles", ")", "\n", "if", "smiles", "is", "not", "None", ":", "\n", "# drug_hit += 1", "\n", "\t\t\t\t\t", "smiles_lst", ".", "append", "(", "smiles", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "print", "(", "\"unfounded drug: \"", ",", "drug", ")", "\n", "\n", "\n", "", "", "if", "smiles_lst", "==", "[", "]", ":", "\n", "\t\t\t\t", "num_nodrug", "+=", "1", "\n", "continue", "\n", "", "icdcode_lst", "=", "list", "(", "filter", "(", "lambda", "x", ":", "x", "!=", "'None'", "and", "x", "!=", "None", ",", "icdcode_lst", ")", ")", "\n", "if", "icdcode_lst", "==", "[", "]", ":", "\n", "\t\t\t\t", "num_nodisease", "+=", "1", "\n", "continue", "\n", "\n", "", "data_count", "+=", "1", "\n", "writer", ".", "writerow", "(", "{", "'nctid'", ":", "nctid", ",", "'status'", ":", "status", ",", "'why_stop'", ":", "why_stop", ",", "'label'", ":", "label", ",", "'phase'", ":", "phase", ",", "'diseases'", ":", "conditions", ",", "'icdcodes'", ":", "icdcode_lst", ",", "'drugs'", ":", "drugs", ",", "'smiless'", ":", "smiles_lst", ",", "'criteria'", ":", "criteria", ",", "}", ")", "\n", "", "", "t2", "=", "time", "(", ")", "\n", "# print(\"disease hit icdcode\", disease_hit, \"disease all\", disease_all, \"\\n drug hit smiles\", drug_hit, \"drug all\", drug_all)", "\n", "print", "(", "str", "(", "int", "(", "(", "t2", "-", "t1", ")", "/", "60", ")", ")", "+", "\" minutes. \"", "+", "str", "(", "data_count", ")", "+", "\" data samples. \"", ")", "\n", "print", "(", "\"number of non-Interventional:\"", ",", "num_noninterventional", ")", "\n", "print", "(", "\"number of Biological:\"", ",", "num_biologics", ")", "\n", "print", "(", "\"number of non-label:\"", ",", "num_nolabel", ")", "\n", "print", "(", "\"number of non-drug\"", ",", "num_nodrug", ")", "\n", "print", "(", "\"number of non-disease\"", ",", "num_nodisease", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.nctid2date.xmlfile_2_date": [[6, 22], ["xml.etree.ElementTree.parse", "ET.parse.getroot", "tree.getroot.find", "tree.getroot.find", "tree.getroot.find"], "function", ["None"], ["def", "xmlfile_2_date", "(", "xml_file", ")", ":", "\n", "\t", "tree", "=", "ET", ".", "parse", "(", "xml_file", ")", "\n", "root", "=", "tree", ".", "getroot", "(", ")", "\n", "try", ":", "\n", "\t\t", "start_date", "=", "root", ".", "find", "(", "'start_date'", ")", ".", "text", "\n", "# start_date = int(start_date.split()[-1])", "\n", "", "except", ":", "\n", "\t\t", "start_date", "=", "''", "\n", "", "try", ":", "\n", "\t\t", "completion_date", "=", "root", ".", "find", "(", "'primary_completion_date'", ")", ".", "text", "\n", "", "except", ":", "\n", "\t\t", "try", ":", "\n", "\t\t\t", "completion_date", "=", "root", ".", "find", "(", "'completion_date'", ")", ".", "text", "\n", "", "except", ":", "\n", "\t\t\t", "completion_date", "=", "''", "\n", "", "", "return", "start_date", ",", "completion_date", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.__init__": [[99, 108], ["torch.nn.Sequential.__init__", "torch.nn.Linear", "torch.nn.Linear", "protocol_encode.Protocol_Embedding.to"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "output_dim", ",", "highway_num", ",", "device", ")", ":", "\n", "\t\t", "super", "(", "Protocol_Embedding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_dim", "=", "768", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "self", ".", "highway_num", "=", "highway_num", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "input_dim", "*", "2", ",", "output_dim", ")", "\n", "self", ".", "f", "=", "F", ".", "relu", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward_single": [[109, 118], ["inclusion_feature.to.to.to", "exclusion_feature.to.to.to", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "inclusion_vec.view.view.view", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "exclusion_vec.view.view.view"], "methods", ["None"], ["", "def", "forward_single", "(", "self", ",", "inclusion_feature", ",", "exclusion_feature", ")", ":", "\n", "## inclusion_feature, exclusion_feature: xxx,768 ", "\n", "\t\t", "inclusion_feature", "=", "inclusion_feature", ".", "to", "(", "self", ".", "device", ")", "\n", "exclusion_feature", "=", "exclusion_feature", ".", "to", "(", "self", ".", "device", ")", "\n", "inclusion_vec", "=", "torch", ".", "mean", "(", "inclusion_feature", ",", "0", ")", "\n", "inclusion_vec", "=", "inclusion_vec", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "exclusion_vec", "=", "torch", ".", "mean", "(", "exclusion_feature", ",", "0", ")", "\n", "exclusion_vec", "=", "exclusion_vec", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "return", "inclusion_vec", ",", "exclusion_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward": [[119, 128], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "protocol_encode.Protocol_Embedding.f", "protocol_encode.Protocol_Embedding.forward_single", "protocol_encode.Protocol_Embedding.fc"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.forward_single"], ["", "def", "forward", "(", "self", ",", "in_ex_feature", ")", ":", "\n", "\t\t", "result", "=", "[", "self", ".", "forward_single", "(", "in_mat", ",", "ex_mat", ")", "for", "in_mat", ",", "ex_mat", "in", "in_ex_feature", "]", "\n", "inclusion_mat", "=", "[", "in_vec", "for", "in_vec", ",", "ex_vec", "in", "result", "]", "\n", "inclusion_mat", "=", "torch", ".", "cat", "(", "inclusion_mat", ",", "0", ")", "#### 32,768", "\n", "exclusion_mat", "=", "[", "ex_vec", "for", "in_vec", ",", "ex_vec", "in", "result", "]", "\n", "exclusion_mat", "=", "torch", ".", "cat", "(", "exclusion_mat", ",", "0", ")", "#### 32,768 ", "\n", "protocol_mat", "=", "torch", ".", "cat", "(", "[", "inclusion_mat", ",", "exclusion_mat", "]", ",", "1", ")", "\n", "output", "=", "self", ".", "f", "(", "self", ".", "fc", "(", "protocol_mat", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.Protocol_Embedding.embedding_size": [[129, 132], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "embedding_size", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "output_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.clean_protocol": [[18, 26], ["protocol.lower.lower", "protocol.lower.split", "list", "list", "x.strip", "filter", "map", "len", "x.strip"], "function", ["None"], ["def", "clean_protocol", "(", "protocol", ")", ":", "\n", "\t", "protocol", "=", "protocol", ".", "lower", "(", ")", "\n", "protocol_split", "=", "protocol", ".", "split", "(", "'\\n'", ")", "\n", "filter_out_empty_fn", "=", "lambda", "x", ":", "len", "(", "x", ".", "strip", "(", ")", ")", ">", "0", "\n", "strip_fn", "=", "lambda", "x", ":", "x", ".", "strip", "(", ")", "\n", "protocol_split", "=", "list", "(", "filter", "(", "filter_out_empty_fn", ",", "protocol_split", ")", ")", "\n", "protocol_split", "=", "list", "(", "map", "(", "strip_fn", ",", "protocol_split", ")", ")", "\n", "return", "protocol_split", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.get_all_protocols": [[27, 33], ["open", "list", "csv.reader"], "function", ["None"], ["", "def", "get_all_protocols", "(", ")", ":", "\n", "\t", "input_file", "=", "'data/raw_data.csv'", "\n", "with", "open", "(", "input_file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "protocols", "=", "[", "row", "[", "9", "]", "for", "row", "in", "rows", "]", "\n", "return", "protocols", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.split_protocol": [[34, 54], ["protocol_encode.clean_protocol", "enumerate", "enumerate", "len", "len", "len", "print", "exit", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.clean_protocol"], ["", "def", "split_protocol", "(", "protocol", ")", ":", "\n", "\t", "protocol_split", "=", "clean_protocol", "(", "protocol", ")", "\n", "inclusion_idx", ",", "exclusion_idx", "=", "len", "(", "protocol_split", ")", ",", "len", "(", "protocol_split", ")", "\n", "for", "idx", ",", "sentence", "in", "enumerate", "(", "protocol_split", ")", ":", "\n", "\t\t", "if", "\"inclusion\"", "in", "sentence", ":", "\n", "\t\t\t", "inclusion_idx", "=", "idx", "\n", "break", "\n", "", "", "for", "idx", ",", "sentence", "in", "enumerate", "(", "protocol_split", ")", ":", "\n", "\t\t", "if", "\"exclusion\"", "in", "sentence", ":", "\n", "\t\t\t", "exclusion_idx", "=", "idx", "\n", "break", "\n", "", "", "if", "inclusion_idx", "+", "1", "<", "exclusion_idx", "+", "1", "<", "len", "(", "protocol_split", ")", ":", "\n", "\t\t", "inclusion_criteria", "=", "protocol_split", "[", "inclusion_idx", ":", "exclusion_idx", "]", "\n", "exclusion_criteria", "=", "protocol_split", "[", "exclusion_idx", ":", "]", "\n", "if", "not", "(", "len", "(", "inclusion_criteria", ")", ">", "0", "and", "len", "(", "exclusion_criteria", ")", ">", "0", ")", ":", "\n", "\t\t\t", "print", "(", "len", "(", "inclusion_criteria", ")", ",", "len", "(", "exclusion_criteria", ")", ",", "len", "(", "protocol_split", ")", ")", "\n", "exit", "(", ")", "\n", "", "return", "inclusion_criteria", ",", "exclusion_criteria", "## list, list ", "\n", "", "else", ":", "\n", "\t\t", "return", "protocol_split", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.collect_cleaned_sentence_set": [[55, 64], ["protocol_encode.get_all_protocols", "set", "protocol_encode.split_protocol", "cleaned_sentence_lst.extend", "len", "cleaned_sentence_lst.extend"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.get_all_protocols", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.split_protocol"], ["", "", "def", "collect_cleaned_sentence_set", "(", ")", ":", "\n", "\t", "protocol_lst", "=", "get_all_protocols", "(", ")", "\n", "cleaned_sentence_lst", "=", "[", "]", "\n", "for", "protocol", "in", "protocol_lst", ":", "\n", "\t\t", "result", "=", "split_protocol", "(", "protocol", ")", "\n", "cleaned_sentence_lst", ".", "extend", "(", "result", "[", "0", "]", ")", "\n", "if", "len", "(", "result", ")", "==", "2", ":", "\n", "\t\t\t", "cleaned_sentence_lst", ".", "extend", "(", "result", "[", "1", "]", ")", "\n", "", "", "return", "set", "(", "cleaned_sentence_lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.save_sentence_bert_dict_pkl": [[66, 77], ["protocol_encode.collect_cleaned_sentence_set", "BiobertEmbedding", "dict", "tqdm.tqdm", "pickle.dump", "BiobertEmbedding.sentence_vector", "protocol_encode.save_sentence_bert_dict_pkl.text2vec"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.collect_cleaned_sentence_set"], ["", "def", "save_sentence_bert_dict_pkl", "(", ")", ":", "\n", "\t", "cleaned_sentence_set", "=", "collect_cleaned_sentence_set", "(", ")", "\n", "from", "biobert_embedding", ".", "embedding", "import", "BiobertEmbedding", "\n", "biobert", "=", "BiobertEmbedding", "(", ")", "\n", "def", "text2vec", "(", "text", ")", ":", "\n", "\t\t", "return", "biobert", ".", "sentence_vector", "(", "text", ")", "\n", "", "protocol_sentence_2_embedding", "=", "dict", "(", ")", "\n", "for", "sentence", "in", "tqdm", "(", "cleaned_sentence_set", ")", ":", "\n", "\t\t", "protocol_sentence_2_embedding", "[", "sentence", "]", "=", "text2vec", "(", "sentence", ")", "\n", "", "pickle", ".", "dump", "(", "protocol_sentence_2_embedding", ",", "open", "(", "'data/sentence2embedding.pkl'", ",", "'wb'", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.load_sentence_2_vec": [[78, 81], ["pickle.load", "open"], "function", ["None"], ["", "def", "load_sentence_2_vec", "(", ")", ":", "\n", "\t", "sentence_2_vec", "=", "pickle", ".", "load", "(", "open", "(", "'data/sentence2embedding.pkl'", ",", "'rb'", ")", ")", "\n", "return", "sentence_2_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.protocol2feature": [[82, 96], ["protocol_encode.split_protocol", "sentence_2_vec[].view", "sentence_2_vec[].view", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.split_protocol"], ["", "def", "protocol2feature", "(", "protocol", ",", "sentence_2_vec", ")", ":", "\n", "\t", "result", "=", "split_protocol", "(", "protocol", ")", "\n", "inclusion_criteria", ",", "exclusion_criteria", "=", "result", "[", "0", "]", ",", "result", "[", "-", "1", "]", "\n", "inclusion_feature", "=", "[", "sentence_2_vec", "[", "sentence", "]", ".", "view", "(", "1", ",", "-", "1", ")", "for", "sentence", "in", "inclusion_criteria", "if", "sentence", "in", "sentence_2_vec", "]", "\n", "exclusion_feature", "=", "[", "sentence_2_vec", "[", "sentence", "]", ".", "view", "(", "1", ",", "-", "1", ")", "for", "sentence", "in", "exclusion_criteria", "if", "sentence", "in", "sentence_2_vec", "]", "\n", "if", "inclusion_feature", "==", "[", "]", ":", "\n", "\t\t", "inclusion_feature", "=", "torch", ".", "zeros", "(", "1", ",", "768", ")", "\n", "", "else", ":", "\n", "\t\t", "inclusion_feature", "=", "torch", ".", "cat", "(", "inclusion_feature", ",", "0", ")", "\n", "", "if", "exclusion_feature", "==", "[", "]", ":", "\n", "\t\t", "exclusion_feature", "=", "torch", ".", "zeros", "(", "1", ",", "768", ")", "\n", "", "else", ":", "\n", "\t\t", "exclusion_feature", "=", "torch", ".", "cat", "(", "exclusion_feature", ",", "0", ")", "\n", "", "return", "inclusion_feature", ",", "exclusion_feature", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.__init__": [[112, 139], ["torch.nn.Sequential.__init__", "icdcode_encode.GRAM.codedict_2_allcode", "len", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "icdcode_encode.GRAM.to", "icdcode_encode.GRAM.padding_matrix.to", "icdcode_encode.GRAM.mask_matrix.to", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "enumerate", "enumerate", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "len"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.codedict_2_allcode"], ["def", "__init__", "(", "self", ",", "embedding_dim", ",", "icdcode2ancestor", ",", "device", ")", ":", "\n", "\t\t", "super", "(", "GRAM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "icdcode2ancestor", "=", "icdcode2ancestor", "\n", "self", ".", "all_code_lst", "=", "GRAM", ".", "codedict_2_allcode", "(", "self", ".", "icdcode2ancestor", ")", "\n", "self", ".", "code_num", "=", "len", "(", "self", ".", "all_code_lst", ")", "\n", "self", ".", "maxlength", "=", "5", "\n", "self", ".", "code2index", "=", "{", "code", ":", "idx", "for", "idx", ",", "code", "in", "enumerate", "(", "self", ".", "all_code_lst", ")", "}", "\n", "self", ".", "index2code", "=", "{", "idx", ":", "code", "for", "idx", ",", "code", "in", "enumerate", "(", "self", ".", "all_code_lst", ")", "}", "\n", "self", ".", "padding_matrix", "=", "torch", ".", "zeros", "(", "self", ".", "code_num", ",", "self", ".", "maxlength", ")", ".", "long", "(", ")", "\n", "self", ".", "mask_matrix", "=", "torch", ".", "zeros", "(", "self", ".", "code_num", ",", "self", ".", "maxlength", ")", "\n", "for", "idx", "in", "range", "(", "self", ".", "code_num", ")", ":", "\n", "\t\t\t", "code", "=", "self", ".", "index2code", "[", "idx", "]", "\n", "ancestor_code_lst", "=", "self", ".", "icdcode2ancestor", "[", "code", "]", "\n", "ancestor_idx_lst", "=", "[", "idx", "]", "+", "[", "self", ".", "code2index", "[", "code", "]", "for", "code", "in", "ancestor_code_lst", "]", "\n", "ancestor_mask_lst", "=", "[", "1", "for", "i", "in", "ancestor_idx_lst", "]", "+", "[", "0", "]", "*", "(", "self", ".", "maxlength", "-", "len", "(", "ancestor_idx_lst", ")", ")", "\n", "ancestor_idx_lst", "=", "ancestor_idx_lst", "+", "[", "0", "]", "*", "(", "self", ".", "maxlength", "-", "len", "(", "ancestor_idx_lst", ")", ")", "\n", "self", ".", "padding_matrix", "[", "idx", ",", ":", "]", "=", "torch", ".", "Tensor", "(", "ancestor_idx_lst", ")", "\n", "self", ".", "mask_matrix", "[", "idx", ",", ":", "]", "=", "torch", ".", "Tensor", "(", "ancestor_mask_lst", ")", "\n", "\n", "", "self", ".", "embedding_dim", "=", "embedding_dim", "\n", "self", ".", "embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "code_num", ",", "self", ".", "embedding_dim", ")", "\n", "self", ".", "attention_model", "=", "nn", ".", "Linear", "(", "2", "*", "embedding_dim", ",", "1", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", "=", "self", ".", "to", "(", "device", ")", "\n", "self", ".", "padding_matrix", "=", "self", ".", "padding_matrix", ".", "to", "(", "'cpu'", ")", "\n", "self", ".", "mask_matrix", "=", "self", ".", "mask_matrix", ".", "to", "(", "'cpu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.embedding_size": [[140, 143], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "embedding_size", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "embedding_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.codedict_2_allcode": [[145, 152], ["set", "list", "set", "set.union", "icdcode2ancestor.keys", "icdcode2ancestor.values", "functools.reduce"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "codedict_2_allcode", "(", "icdcode2ancestor", ")", ":", "\n", "\t\t", "all_code", "=", "set", "(", "icdcode2ancestor", ".", "keys", "(", ")", ")", "\n", "ancestor_lst", "=", "list", "(", "icdcode2ancestor", ".", "values", "(", ")", ")", "\n", "ancestor_set", "=", "set", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "ancestor_lst", ")", ")", "\n", "all_code_lst", "=", "all_code", ".", "union", "(", "ancestor_set", ")", "\n", "return", "all_code_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_single_code": [[154, 169], ["icdcode_encode.GRAM.code2index[].to", "icdcode_encode.GRAM.embedding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "icdcode_encode.GRAM.attention_model", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "mask_vec.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "icdcode_encode.GRAM.embedding().view", "range", "icdcode_encode.GRAM.embedding", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "forward_single_code", "(", "self", ",", "single_code", ")", ":", "\n", "\t\t", "idx", "=", "self", ".", "code2index", "[", "single_code", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "ancestor_vec", "=", "self", ".", "padding_matrix", "[", "idx", ",", ":", "]", "#### (5,)", "\n", "mask_vec", "=", "self", ".", "mask_matrix", "[", "idx", ",", ":", "]", "\n", "\n", "embeded", "=", "self", ".", "embedding", "(", "ancestor_vec", ")", "### 5, 50", "\n", "current_vec", "=", "torch", ".", "cat", "(", "[", "self", ".", "embedding", "(", "torch", ".", "Tensor", "(", "[", "idx", "]", ")", ".", "long", "(", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", "for", "i", "in", "range", "(", "self", ".", "maxlength", ")", "]", ",", "0", ")", "### 1,50 -> 5,50", "\n", "attention_input", "=", "torch", ".", "cat", "(", "[", "embeded", ",", "current_vec", "]", ",", "1", ")", "### 5, 100", "\n", "attention_weight", "=", "self", ".", "attention_model", "(", "attention_input", ")", "##### 5, 1", "\n", "attention_weight", "=", "torch", ".", "exp", "(", "attention_weight", ")", "#### 5, 1", "\n", "attention_output", "=", "attention_weight", "*", "mask_vec", ".", "view", "(", "-", "1", ",", "1", ")", "#### 5, 1", "\n", "attention_output", "=", "attention_output", "/", "torch", ".", "sum", "(", "attention_output", ")", "#### 5, 1", "\n", "output", "=", "embeded", "*", "attention_output", "### 5, 50 ", "\n", "output", "=", "torch", ".", "sum", "(", "output", ",", "0", ")", "### 50", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_code_lst": [[171, 193], ["icdcode_encode.GRAM.padding_matrix[].to", "icdcode_encode.GRAM.mask_matrix[].to", "icdcode_encode.GRAM.embedding", "icdcode_encode.GRAM.embedding", "current_vec.repeat.repeat.unsqueeze", "current_vec.repeat.repeat.repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "icdcode_encode.GRAM.attention_model", "torch.exp().squeeze", "torch.exp().squeeze", "torch.exp().squeeze", "torch.exp().squeeze", "attention_output.unsqueeze.unsqueeze.unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.Tensor().long().to", "torch.Tensor().long().to", "torch.Tensor().long().to", "torch.Tensor().long().to", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "forward_code_lst", "(", "self", ",", "code_lst", ")", ":", "\n", "\t\t", "\"\"\"\n\t\t\t\n\t\t\t['C05.2', 'C10.0', 'C16.0', 'C16.4', 'C17.0', 'C17.1', 'C17.2'], length is 32 \n\t\t\t32 is length of code_lst; 5 is maxlength; 50 is embedding_dim; \n\t\t\"\"\"", "\n", "idx_lst", "=", "[", "self", ".", "code2index", "[", "code", "]", "for", "code", "in", "code_lst", "]", "### 32", "\n", "ancestor_mat", "=", "self", ".", "padding_matrix", "[", "idx_lst", ",", ":", "]", ".", "to", "(", "self", ".", "device", ")", "##### 32,5", "\n", "mask_mat", "=", "self", ".", "mask_matrix", "[", "idx_lst", ",", ":", "]", ".", "to", "(", "self", ".", "device", ")", "#### 32,5", "\n", "embeded", "=", "self", ".", "embedding", "(", "ancestor_mat", ")", "#### 32,5,50", "\n", "current_vec", "=", "self", ".", "embedding", "(", "torch", ".", "Tensor", "(", "idx_lst", ")", ".", "long", "(", ")", ".", "to", "(", "self", ".", "device", ")", ")", "#### 32,50", "\n", "current_vec", "=", "current_vec", ".", "unsqueeze", "(", "1", ")", "### 32,1,50", "\n", "current_vec", "=", "current_vec", ".", "repeat", "(", "1", ",", "self", ".", "maxlength", ",", "1", ")", "#### 32,5,50", "\n", "attention_input", "=", "torch", ".", "cat", "(", "[", "embeded", ",", "current_vec", "]", ",", "2", ")", "#### 32,5,100", "\n", "attention_weight", "=", "self", ".", "attention_model", "(", "attention_input", ")", "#### 32,5,1 ", "\n", "attention_weight", "=", "torch", ".", "exp", "(", "attention_weight", ")", ".", "squeeze", "(", "-", "1", ")", "#### 32,5 ", "\n", "attention_output", "=", "attention_weight", "*", "mask_mat", "#### 32,5 ", "\n", "attention_output", "=", "attention_output", "/", "torch", ".", "sum", "(", "attention_output", ",", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "#### 32,5 ", "\n", "attention_output", "=", "attention_output", ".", "unsqueeze", "(", "-", "1", ")", "#### 32,5,1 ", "\n", "output", "=", "embeded", "*", "attention_output", "##### 32,5,50 ", "\n", "output", "=", "torch", ".", "sum", "(", "output", ",", "1", ")", "##### 32,50", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_code_lst2": [[194, 201], ["functools.reduce", "icdcode_encode.GRAM.forward_code_lst", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_code_lst"], ["", "def", "forward_code_lst2", "(", "self", ",", "code_lst_lst", ")", ":", "\n", "### in one sample ", "\n", "\t\t", "code_lst", "=", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "code_lst_lst", ")", "\n", "code_embed", "=", "self", ".", "forward_code_lst", "(", "code_lst", ")", "\n", "### to do ", "\n", "code_embed", "=", "torch", ".", "mean", "(", "code_embed", ",", "0", ")", ".", "view", "(", "1", ",", "-", "1", ")", "#### dim, ", "\n", "return", "code_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_code_lst3": [[202, 206], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "icdcode_encode.GRAM.forward_code_lst2"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.GRAM.forward_code_lst2"], ["", "def", "forward_code_lst3", "(", "self", ",", "code_lst_lst_lst", ")", ":", "\n", "\t\t", "code_embed_lst", "=", "[", "self", ".", "forward_code_lst2", "(", "code_lst_lst", ")", "for", "code_lst_lst", "in", "code_lst_lst_lst", "]", "\n", "code_embed", "=", "torch", ".", "cat", "(", "code_embed_lst", ",", "0", ")", "\n", "return", "code_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.text_2_lst_of_lst": [[26, 37], ["text.split", "code_sublst.append", "j.strip", "i.split"], "function", ["None"], ["def", "text_2_lst_of_lst", "(", "text", ")", ":", "\n", "\t", "\"\"\"\n\t\t\"[\"\"['F53.0', 'P91.4', 'Z13.31', 'Z13.32']\"\"]\"\n\t\"\"\"", "\n", "text", "=", "text", "[", "2", ":", "-", "2", "]", "\n", "code_sublst", "=", "[", "]", "\n", "for", "i", "in", "text", ".", "split", "(", "'\", \"'", ")", ":", "\n", "\t\t", "i", "=", "i", "[", "1", ":", "-", "1", "]", "\n", "code_sublst", ".", "append", "(", "[", "j", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "j", "in", "i", ".", "split", "(", "','", ")", "]", ")", "\n", "# print(code_sublst)\t", "\n", "", "return", "code_sublst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.get_icdcode_lst": [[38, 47], ["open", "icdcode_encode.text_2_lst_of_lst", "code_lst.append", "list", "csv.reader"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.text_2_lst_of_lst"], ["", "def", "get_icdcode_lst", "(", ")", ":", "\n", "\t", "input_file", "=", "'data/raw_data.csv'", "\n", "with", "open", "(", "input_file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "code_lst", "=", "[", "]", "\n", "for", "row", "in", "rows", ":", "\n", "\t\t", "code_sublst", "=", "text_2_lst_of_lst", "(", "row", "[", "6", "]", ")", "\n", "code_lst", ".", "append", "(", "code_sublst", ")", "\n", "", "return", "code_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.combine_lst_of_lst": [[48, 52], ["list", "list", "functools.reduce", "set"], "function", ["None"], ["", "def", "combine_lst_of_lst", "(", "lst_of_lst", ")", ":", "\n", "\t", "lst", "=", "list", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "lst_of_lst", ")", ")", "\n", "lst", "=", "list", "(", "set", "(", "lst", ")", ")", "\n", "return", "lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.collect_all_icdcodes": [[53, 59], ["icdcode_encode.get_icdcode_lst", "list", "list", "list", "map", "functools.reduce", "set"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.get_icdcode_lst"], ["", "def", "collect_all_icdcodes", "(", ")", ":", "\n", "\t", "code_lst", "=", "get_icdcode_lst", "(", ")", "\n", "code_lst", "=", "list", "(", "map", "(", "combine_lst_of_lst", ",", "code_lst", ")", ")", "\n", "code_lst", "=", "list", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "code_lst", ")", ")", "\n", "code_lst", "=", "list", "(", "set", "(", "code_lst", ")", ")", "\n", "return", "code_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.find_ancestor_for_icdcode": [[61, 73], ["len", "icd10.find", "icdcode2ancestor[].append"], "function", ["None"], ["", "def", "find_ancestor_for_icdcode", "(", "icdcode", ",", "icdcode2ancestor", ")", ":", "\n", "\t", "if", "icdcode", "in", "icdcode2ancestor", ":", "\n", "\t\t", "return", "\n", "", "icdcode2ancestor", "[", "icdcode", "]", "=", "[", "]", "\n", "ancestor", "=", "icdcode", "[", ":", "]", "\n", "while", "len", "(", "ancestor", ")", ">", "2", ":", "\n", "\t\t", "ancestor", "=", "ancestor", "[", ":", "-", "1", "]", "\n", "if", "ancestor", "[", "-", "1", "]", "==", "'.'", ":", "\n", "\t\t\t", "ancestor", "=", "ancestor", "[", ":", "-", "1", "]", "\n", "", "if", "icd10", ".", "find", "(", "ancestor", ")", "is", "not", "None", ":", "\n", "\t\t\t", "icdcode2ancestor", "[", "icdcode", "]", ".", "append", "(", "ancestor", ")", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.build_icdcode2ancestor_dict": [[75, 86], ["os.path.exists", "icdcode_encode.collect_all_icdcodes", "collections.defaultdict", "pickle.dump", "pickle.load", "icdcode_encode.find_ancestor_for_icdcode", "open", "open"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.collect_all_icdcodes", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.find_ancestor_for_icdcode"], ["", "def", "build_icdcode2ancestor_dict", "(", ")", ":", "\n", "\t", "pkl_file", "=", "\"data/icdcode2ancestor_dict.pkl\"", "\n", "if", "os", ".", "path", ".", "exists", "(", "pkl_file", ")", ":", "\n", "\t\t", "icdcode2ancestor", "=", "pickle", ".", "load", "(", "open", "(", "pkl_file", ",", "'rb'", ")", ")", "\n", "return", "icdcode2ancestor", "\n", "", "all_code", "=", "collect_all_icdcodes", "(", ")", "\n", "icdcode2ancestor", "=", "defaultdict", "(", "list", ")", "\n", "for", "code", "in", "all_code", ":", "\n", "\t\t", "find_ancestor_for_icdcode", "(", "code", ",", "icdcode2ancestor", ")", "\n", "", "pickle", ".", "dump", "(", "icdcode2ancestor", ",", "open", "(", "pkl_file", ",", "'wb'", ")", ")", "\n", "return", "icdcode2ancestor", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.collect_all_code_and_ancestor": [[88, 95], ["icdcode_encode.build_icdcode2ancestor_dict", "set", "list", "set", "set.union", "build_icdcode2ancestor_dict.keys", "build_icdcode2ancestor_dict.values", "functools.reduce"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.icdcode_encode.build_icdcode2ancestor_dict"], ["", "def", "collect_all_code_and_ancestor", "(", ")", ":", "\n", "\t", "icdcode2ancestor", "=", "build_icdcode2ancestor_dict", "(", ")", "\n", "all_code", "=", "set", "(", "icdcode2ancestor", ".", "keys", "(", ")", ")", "\n", "ancestor_lst", "=", "list", "(", "icdcode2ancestor", ".", "values", "(", ")", ")", "\n", "ancestor_set", "=", "set", "(", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "ancestor_lst", ")", ")", "\n", "all_code_lst", "=", "all_code", ".", "union", "(", "ancestor_set", ")", "\n", "return", "all_code_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_disease_from_raw.normalize_disease": [[66, 134], ["name.replace.lower", "name.replace.replace", "name.replace.replace", "name.replace.replace", "name.replace.replace", "name.replace.replace", "name.replace.replace", "name.replace.replace", "name.replace.replace", "name.replace.replace", "name.replace.replace", "sorted", "name.replace.split", "print", "name_lst.append", "name.replace.split", "name.split.index", "name_lst.append", "name_lst.append", "name.replace.split", "name.split.index", "name_lst.append", "name_lst.append", "name_lst.append", "name_lst.append", "name_lst.append", "name_lst.append", "name_lst.append", "name.replace.split", "name.replace.replace", "name.replace.replace", "name.replace.replace().strip", "name.replace.replace().strip", "name.replace.replace().strip", "name.replace.replace().strip", "name_lst.append", "name_lst.append", "name.replace.split", "name_lst.append", "len", "name.replace.split", "name.replace.replace", "name.replace.replace", "name.replace.replace", "name.replace.replace"], "function", ["None"], ["def", "normalize_disease", "(", "name", ")", ":", "\n", "\t", "name", "=", "name", ".", "lower", "(", ")", "\n", "if", "'lymphoma'", "in", "name", ":", "\n", "\t\t", "return", "'lymphoma'", "\n", "", "name", "=", "name", ".", "replace", "(", "','", ",", "''", ")", "\n", "name", "=", "name", ".", "replace", "(", "'('", ",", "' '", ")", "\n", "name", "=", "name", ".", "replace", "(", "')'", ",", "' '", ")", "\n", "\n", "name", "=", "name", ".", "replace", "(", "'cancer'", ",", "'neoplasm'", ")", "\n", "name", "=", "name", ".", "replace", "(", "'neoplasms'", ",", "'neoplasm'", ")", "\n", "name", "=", "name", ".", "replace", "(", "'tumors'", ",", "'tumor'", ")", "\n", "\n", "name", "=", "name", ".", "replace", "(", "'infections'", ",", "'infection'", ")", "\n", "name", "=", "name", ".", "replace", "(", "'diseases'", ",", "'disease'", ")", "\n", "name", "=", "name", ".", "replace", "(", "'disorders'", ",", "'disorder'", ")", "\n", "name", "=", "name", ".", "replace", "(", "'syndromes'", ",", "'syndrome'", ")", "\n", "\n", "name", "=", "' '", ".", "join", "(", "name", ".", "split", "(", ")", ")", "\n", "if", "name", ".", "split", "(", ")", "[", "0", "]", "==", "'stage'", ":", "\n", "\t\t", "name", "=", "' '", ".", "join", "(", "name", ".", "split", "(", ")", "[", "2", ":", "]", ")", "\n", "\n", "", "name_lst", "=", "[", "name", "]", "\n", "if", "' neoplasm'", "in", "name", ":", "\n", "\t\t", "print", "(", "name", ")", "\n", "name_lst", ".", "append", "(", "name", ".", "replace", "(", "'neoplasm'", ",", "'tumor'", ")", ")", "\n", "name_split", "=", "name", ".", "split", "(", ")", "\n", "idx", "=", "name_split", ".", "index", "(", "'neoplasm'", ")", "\n", "name2", "=", "name_split", "[", "idx", "-", "1", "]", "+", "' '", "+", "name_split", "[", "idx", "]", "\n", "name_lst", ".", "append", "(", "name2", ")", "\n", "", "if", "' tumor'", "in", "name", ":", "\n", "\t\t", "name_lst", ".", "append", "(", "name", ".", "replace", "(", "'tumor'", ",", "'neoplasm'", ")", ")", "\n", "name_split", "=", "name", ".", "split", "(", ")", "\n", "idx", "=", "name_split", ".", "index", "(", "'tumor'", ")", "\n", "name2", "=", "name_split", "[", "idx", "-", "1", "]", "+", "' '", "+", "name_split", "[", "idx", "]", "\n", "name_lst", ".", "append", "(", "name2", ")", "\n", "", "if", "'disease'", "in", "name", ":", "\n", "\t\t", "name_lst", ".", "append", "(", "name", ".", "replace", "(", "'disease'", ",", "''", ")", ".", "strip", "(", ")", ")", "\n", "", "if", "'disorder'", "in", "name", ":", "\n", "\t\t", "name_lst", ".", "append", "(", "name", ".", "replace", "(", "'disorder'", ",", "''", ")", ".", "strip", "(", ")", ")", "\n", "", "if", "'-related'", "in", "name", ":", "\n", "\t\t", "name_lst", ".", "append", "(", "name", ".", "replace", "(", "'-related'", ",", "''", ")", ".", "strip", "(", ")", ")", "\n", "", "if", "'syndrome'", "in", "name", ":", "\n", "\t\t", "name_lst", ".", "append", "(", "name", ".", "replace", "(", "'syndrome'", ",", "''", ")", ".", "strip", "(", ")", ")", "\n", "\n", "\n", "", "if", "'lung'", "in", "name", "and", "'carcinoma'", "in", "name", ":", "\n", "\t\t", "name_lst", ".", "append", "(", "'lung carcinoma'", ")", "\n", "", "elif", "'cell'", "in", "name", "and", "'carcinoma'", "in", "name", ":", "\n", "\t\t", "name_lst", ".", "append", "(", "'cell carcinoma'", ")", "\n", "", "elif", "'carcinoma'", "in", "name", ":", "\n", "\t\t", "name_lst", ".", "append", "(", "'carcinoma'", ")", "\n", "\n", "\n", "\n", "## approximation 1\tvery few ", "\n", "", "organ", "=", "[", "'liver'", ",", "'kidney'", ",", "'cardio'", ",", "'renal'", ",", "'hiv'", "]", "\n", "for", "word", "in", "organ", ":", "\n", "\t\t", "if", "word", "in", "name", ":", "\n", "\t\t\t", "name_lst", ".", "append", "(", "word", ")", "\n", "\n", "# approximation 2 most 20% ", "\n", "", "", "word_lst", "=", "sorted", "(", "[", "(", "word", ",", "len", "(", "word", ")", ")", "for", "word", "in", "name", ".", "split", "(", ")", "]", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "for", "word", ",", "cnt", "in", "word_lst", ":", "\n", "\t\t", "if", "cnt", "<", "8", ":", "\n", "\t\t\t", "break", "\n", "", "name_lst", ".", "append", "(", "word", ")", "\n", "\n", "", "return", "name_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_disease_from_raw.get_icd_from_nih": [[137, 153], ["collect_disease_from_raw.normalize_disease", "requests.get", "text.find", "text.find", "text[].split"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_disease_from_raw.normalize_disease"], ["", "def", "get_icd_from_nih", "(", "name", ")", ":", "\n", "\t", "prefix", "=", "'https://clinicaltables.nlm.nih.gov/api/icd10cm/v3/search?sf=code,name&terms='", "\n", "name_lst", "=", "normalize_disease", "(", "name", ")", "\n", "for", "name", "in", "name_lst", ":", "\n", "\t\t", "url", "=", "prefix", "+", "name", "\n", "response", "=", "requests", ".", "get", "(", "url", ")", "\n", "text", "=", "response", ".", "text", "\n", "if", "text", "==", "'[0,[],null,[]]'", ":", "\n", "\t\t\t", "continue", "\n", "", "text", "=", "text", "[", "1", ":", "-", "1", "]", "\n", "idx1", "=", "text", ".", "find", "(", "'['", ")", "\n", "idx2", "=", "text", ".", "find", "(", "']'", ")", "\n", "codes", "=", "text", "[", "idx1", "+", "1", ":", "idx2", "]", ".", "split", "(", "','", ")", "\n", "codes", "=", "[", "i", "[", "1", ":", "-", "1", "]", "for", "i", "in", "codes", "]", "\n", "return", "codes", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_disease_from_raw.root2outcome": [[154, 176], ["utils.walkData", "list", "filter", "len", "float"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.walkData"], ["", "def", "root2outcome", "(", "root", ")", ":", "\n", "\t", "result_list", "=", "[", "]", "\n", "walkData", "(", "root", ",", "prefix", "=", "''", ",", "result_list", "=", "result_list", ")", "\n", "filter_func", "=", "lambda", "x", ":", "'p_value'", "in", "x", "[", "0", "]", "\n", "outcome_list", "=", "list", "(", "filter", "(", "filter_func", ",", "result_list", ")", ")", "\n", "if", "len", "(", "outcome_list", ")", "==", "0", ":", "\n", "\t\t", "return", "None", "\n", "", "outcome", "=", "outcome_list", "[", "0", "]", "[", "1", "]", "\n", "if", "outcome", "[", "0", "]", "==", "'<'", ":", "\n", "\t\t", "return", "1", "\n", "", "if", "outcome", "[", "0", "]", "==", "'>'", ":", "\n", "\t\t", "return", "0", "\n", "", "if", "outcome", "[", "0", "]", "==", "'='", ":", "\n", "\t\t", "outcome", "=", "outcome", "[", "1", ":", "]", "\n", "", "try", ":", "\n", "\t\t", "label", "=", "float", "(", "outcome", ")", "\n", "if", "label", "<", "0.05", ":", "\n", "\t\t\t", "return", "1", "\n", "", "else", ":", "\n", "\t\t\t", "return", "0", "\n", "", "", "except", ":", "\n", "\t\t", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_disease_from_raw.xml_file_2_tuple": [[178, 210], ["xml.etree.ElementTree.parse", "ET.parse.getroot", "collect_disease_from_raw.root2outcome", "tree.getroot.find().find", "tree.getroot.find", "len", "i.lower", "tree.getroot.findall", "i.find", "tree.getroot.find", "tree.getroot.find", "tree.getroot.findall", "tree.getroot.find", "i.find"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.pseudolabel.root2outcome"], ["", "", "def", "xml_file_2_tuple", "(", "xml_file", ")", ":", "\n", "\t", "tree", "=", "ET", ".", "parse", "(", "xml_file", ")", "\n", "root", "=", "tree", ".", "getroot", "(", ")", "\n", "nctid", "=", "root", ".", "find", "(", "'id_info'", ")", ".", "find", "(", "'nct_id'", ")", ".", "text", "### nctid: 'NCT00000102'", "\n", "study_type", "=", "root", ".", "find", "(", "'study_type'", ")", ".", "text", "\n", "if", "study_type", "!=", "'Interventional'", ":", "\n", "\t\t", "return", "(", "None", ",", ")", "### invalid ", "\n", "\n", "", "interventions", "=", "[", "i", "for", "i", "in", "root", ".", "findall", "(", "'intervention'", ")", "]", "\n", "drug_interventions", "=", "[", "i", ".", "find", "(", "'intervention_name'", ")", ".", "text", "for", "i", "in", "interventions", "if", "i", ".", "find", "(", "'intervention_type'", ")", ".", "text", "==", "'Drug'", "]", "\n", "# or i.find('intervention_type').text=='Biological']", "\n", "if", "len", "(", "drug_interventions", ")", "==", "0", ":", "\n", "\t\t", "return", "(", "None", ",", ")", "\n", "\n", "", "try", ":", "\n", "\t\t", "status", "=", "root", ".", "find", "(", "'overall_status'", ")", ".", "text", "\n", "", "except", ":", "\n", "\t\t", "status", "=", "''", "\n", "# if status in drop_set:", "\n", "# \treturn (None,)  ### invalid ", "\n", "", "try", ":", "\n", "\t\t", "why_stop", "=", "root", ".", "find", "(", "'why_stopped'", ")", ".", "text", "\n", "", "except", ":", "\n", "\t\t", "why_stop", "=", "''", "\n", "", "label", "=", "root2outcome", "(", "root", ")", "\n", "label", "=", "-", "1", "if", "label", "is", "None", "else", "label", "\n", "\n", "\n", "conditions", "=", "[", "i", ".", "text", "for", "i", "in", "root", ".", "findall", "(", "'condition'", ")", "]", "\n", "conditions", "=", "[", "i", ".", "lower", "(", ")", "for", "i", "in", "conditions", "]", "\n", "return", "conditions", ",", "label", ",", "why_stop", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_disease_from_raw.process_all": [[229, 302], ["time.time", "utils.get_path_of_all_xml_file", "dict", "collections.defaultdict", "collections.defaultdict", "tqdm.tqdm", "time.time", "sorted", "sorted", "print", "print", "collect_disease_from_raw.xml_file_2_tuple", "disease.split", "open", "csv.DictWriter", "csv.DictWriter.writeheader", "open", "fout.write", "sorted", "len", "csv.DictWriter.writerow", "fout.write", "fout.write", "collect_disease_from_raw.get_icd_from_nih", "collections.defaultdict.items", "dict.items", "str", "sorted.items", "str", "str", "str", "int"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.get_path_of_all_xml_file", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_disease_from_raw.xml_file_2_tuple", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_disease_from_raw.get_icd_from_nih"], ["", "def", "process_all", "(", ")", ":", "\n", "\t", "output_file", "=", "'data/diseases.csv'", "\n", "t1", "=", "time", "(", ")", "\n", "disease_hit", ",", "disease_all", "=", "0", ",", "0", "### disease hit icd && drug hit smiles", "\n", "input_file_lst", "=", "get_path_of_all_xml_file", "(", ")", "\n", "disease2icd_and_cnt", "=", "dict", "(", ")", "\n", "unfounded_disease_cnt", "=", "defaultdict", "(", "int", ")", "\n", "word_cnt", "=", "defaultdict", "(", "int", ")", "\n", "fieldname", "=", "[", "'disease'", ",", "'icd'", ",", "'count'", "]", "\n", "\n", "data_count", "=", "0", "\n", "for", "file", "in", "tqdm", "(", "input_file_lst", "[", ":", "]", ")", ":", "\n", "\t\t", "result", "=", "xml_file_2_tuple", "(", "file", ")", "\n", "## 0.1 & 0.2 ", "\n", "if", "len", "(", "result", ")", "==", "1", ":", "\n", "\t\t\t", "continue", "### only interventions", "\n", "", "conditions", ",", "label", ",", "why_stop", ",", "_", "=", "result", "\n", "## 0.4 ", "\n", "if", "(", "label", "==", "-", "1", ")", "and", "(", "'lack of efficacy'", "in", "why_stop", "or", "'efficacy concern'", "in", "why_stop", "or", "'accrual'", "in", "why_stop", ")", ":", "\n", "\t\t\t", "label", "=", "0", "\n", "## 0.5", "\n", "", "if", "label", "==", "-", "1", ":", "\n", "\t\t\t", "continue", "\n", "\n", "", "data_count", "+=", "1", "\n", "icdcode_lst", "=", "[", "]", "\n", "for", "disease", "in", "conditions", ":", "\n", "\t\t\t", "disease_all", "+=", "1", "\n", "disease_hit", "+=", "1", "\n", "if", "disease", "in", "disease2icd_and_cnt", ":", "\n", "\t\t\t\t", "disease2icd_and_cnt", "[", "disease", "]", "[", "1", "]", "+=", "1", "\n", "if", "disease2icd_and_cnt", "[", "disease", "]", "[", "0", "]", "==", "'None'", ":", "\n", "\t\t\t\t\t", "disease_hit", "-=", "1", "\n", "unfounded_disease_cnt", "[", "disease", "]", "+=", "1", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "codes", "=", "get_icd_from_nih", "(", "disease", ")", "\n", "if", "codes", "is", "None", ":", "\n", "\t\t\t\t\t", "disease2icd_and_cnt", "[", "disease", "]", "=", "[", "'None'", ",", "1", "]", "\n", "disease_hit", "-=", "1", "\n", "unfounded_disease_cnt", "[", "disease", "]", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "disease2icd_and_cnt", "[", "disease", "]", "=", "[", "codes", ",", "1", "]", "\n", "", "", "", "", "t2", "=", "time", "(", ")", "\n", "disease2cnt", "=", "sorted", "(", "[", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "unfounded_disease_cnt", ".", "items", "(", ")", "]", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "for", "disease", ",", "cnt", "in", "disease2cnt", ":", "\n", "\t\t", "for", "word", "in", "disease", ".", "split", "(", ")", ":", "\n", "\t\t\t", "word_cnt", "[", "word", "]", "+=", "cnt", "\n", "\n", "", "", "disease_icd_cnt", "=", "sorted", "(", "[", "[", "disease", ",", "icd", ",", "cnt", "]", "for", "disease", ",", "(", "icd", ",", "cnt", ")", "in", "disease2icd_and_cnt", ".", "items", "(", ")", "]", ",", "key", "=", "lambda", "x", ":", "x", "[", "2", "]", ",", "reverse", "=", "True", ")", "\n", "\n", "\n", "\n", "### output ", "\n", "with", "open", "(", "output_file", ",", "'w'", ")", "as", "csvfile", ":", "\n", "\t\t", "writer", "=", "csv", ".", "DictWriter", "(", "csvfile", ",", "fieldnames", "=", "fieldname", ")", "\n", "writer", ".", "writeheader", "(", ")", "\n", "for", "disease", ",", "icd", ",", "cnt", "in", "disease_icd_cnt", ":", "\n", "\t\t\t", "writer", ".", "writerow", "(", "{", "'disease'", ":", "disease", ",", "'icd'", ":", "icd", ",", "'count'", ":", "cnt", "}", ")", "\n", "\n", "\n", "### use for debug ", "\n", "", "", "with", "open", "(", "'unfounded_disease_cnt.txt'", ",", "'w'", ")", "as", "fout", ":", "\n", "\t\t", "for", "disease", ",", "cnt", "in", "disease2cnt", ":", "\n", "\t\t\t", "fout", ".", "write", "(", "disease", "+", "'\\t\\t'", "+", "str", "(", "cnt", ")", "+", "'\\n'", ")", "\n", "", "fout", ".", "write", "(", "'\\n'", "*", "10", ")", "\n", "word_cnt", "=", "sorted", "(", "[", "(", "w", ",", "c", ")", "for", "w", ",", "c", "in", "word_cnt", ".", "items", "(", ")", "]", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "for", "word", ",", "cnt", "in", "word_cnt", ":", "\n", "\t\t\t", "fout", ".", "write", "(", "word", "+", "'\\t\\t'", "+", "str", "(", "cnt", ")", "+", "'\\n'", ")", "\n", "\n", "", "", "print", "(", "\"disease hit icdcode\"", ",", "disease_hit", ",", "\"disease all\"", ",", "disease_all", ")", "\n", "print", "(", "str", "(", "int", "(", "(", "t2", "-", "t1", ")", "/", "60", ")", ")", "+", "\" minutes. \"", "+", "str", "(", "data_count", ")", "+", "\" data samples. \"", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.csvfile2rows": [[39, 43], ["open", "list", "csv.reader"], "function", ["None"], ["def", "csvfile2rows", "(", "input_file", ")", ":", "\n", "\t", "with", "open", "(", "input_file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "return", "rows", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.filter_phase_I": [[44, 52], ["None"], "function", ["None"], ["", "def", "filter_phase_I", "(", "row", ")", ":", "\n", "\t", "if", "\"phase 1\"", "in", "row", "[", "4", "]", ":", "\n", "\t\t", "return", "True", "\n", "## enhance ", "\n", "# if int(row[3])==1 and row[4]=='phase 4':", "\n", "# \treturn True ", "\n", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.filter_phase_II": [[53, 64], ["int"], "function", ["None"], ["", "def", "filter_phase_II", "(", "row", ")", ":", "\n", "\t", "phase", "=", "row", "[", "4", "]", "\n", "label", "=", "int", "(", "row", "[", "3", "]", ")", "\n", "\n", "if", "\"phase 2\"", "in", "row", "[", "4", "]", ":", "\n", "\t\t", "return", "True", "\n", "## enhance", "\n", "# if int(row[3])==1 and 'phase 4' in row[4]:", "\n", "# \treturn True", "\n", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.filter_phase_III": [[65, 74], ["None"], "function", ["None"], ["", "def", "filter_phase_III", "(", "row", ")", ":", "\n", "\t", "if", "\"phase 3\"", "in", "row", "[", "4", "]", ":", "\n", "\t\t", "return", "True", "\n", "### enhance ", "\n", "# if \"phase 4\" in row[4] and int(row[3])==1:", "\n", "# \treturn True", "\n", "# if int(row[3])==0 and row[4] =='phase 2':", "\n", "# \treturn True ", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.filter_trial": [[75, 82], ["int"], "function", ["None"], ["", "def", "filter_trial", "(", "row", ")", ":", "\n", "\t", "label", "=", "int", "(", "row", "[", "3", "]", ")", "\n", "if", "label", "==", "0", "and", "(", "'phase 1'", "in", "row", "[", "4", "]", "or", "'phase 2'", "in", "row", "[", "4", "]", ")", ":", "\n", "\t\t", "return", "True", "\n", "", "if", "(", "'phase 3'", "in", "row", "[", "4", "]", "or", "'phase 4'", "in", "row", "[", "4", "]", ")", "and", "label", "==", "1", ":", "### label == 1", "\n", "\t\t", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.icdcode_text_2_lst_of_lst": [[103, 110], ["text.split", "lst_lst.append", "j.strip", "i.split"], "function", ["None"], ["", "def", "icdcode_text_2_lst_of_lst", "(", "text", ")", ":", "\n", "\t", "text", "=", "text", "[", "2", ":", "-", "2", "]", "\n", "lst_lst", "=", "[", "]", "\n", "for", "i", "in", "text", ".", "split", "(", "'\", \"'", ")", ":", "\n", "\t\t", "i", "=", "i", "[", "1", ":", "-", "1", "]", "\n", "lst_lst", ".", "append", "(", "[", "j", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "j", "in", "i", ".", "split", "(", "','", ")", "]", ")", "\n", "", "return", "lst_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.row2icdcodelst": [[111, 117], ["data_split.icdcode_text_2_lst_of_lst", "functools.reduce", "i.replace"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.icdcode_text_2_lst_of_lst"], ["", "def", "row2icdcodelst", "(", "row", ")", ":", "\n", "\t", "icdcode_text", "=", "row", "[", "6", "]", "\n", "icdcode_lst2", "=", "icdcode_text_2_lst_of_lst", "(", "icdcode_text", ")", "\n", "icdcode_lst", "=", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ",", "icdcode_lst2", ")", "\n", "icdcode_lst", "=", "[", "i", ".", "replace", "(", "'.'", ",", "''", ")", "for", "i", "in", "icdcode_lst", "]", "\n", "return", "icdcode_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.filter_nervous": [[168, 178], ["data_split.row2icdcodelst"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.row2icdcodelst"], ["", "def", "filter_nervous", "(", "row", ")", ":", "\n", "\t", "icdcode_lst", "=", "row2icdcodelst", "(", "row", ")", "\n", "for", "icdcode", "in", "icdcode_lst", ":", "\n", "\t\t", "try", ":", "\n", "\t\t\t", "ccsr", "=", "icd2ccsr", "[", "icdcode", "]", "\n", "if", "ccsr", "==", "'NVS'", ":", "\n", "\t\t\t\t", "return", "True", "\n", "", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.filter_cancer": [[179, 189], ["data_split.row2icdcodelst"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.row2icdcodelst"], ["", "def", "filter_cancer", "(", "row", ")", ":", "\n", "\t", "icdcode_lst", "=", "row2icdcodelst", "(", "row", ")", "\n", "for", "icdcode", "in", "icdcode_lst", ":", "\n", "\t\t", "try", ":", "\n", "\t\t\t", "ccsr", "=", "icd2ccsr", "[", "icdcode", "]", "\n", "if", "ccsr", "==", "'NEO'", ":", "\n", "\t\t\t\t", "return", "True", "\n", "", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.filter_infect": [[210, 220], ["data_split.row2icdcodelst"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.row2icdcodelst"], ["", "def", "filter_infect", "(", "row", ")", ":", "\n", "\t", "icdcode_lst", "=", "row2icdcodelst", "(", "row", ")", "\n", "for", "icdcode", "in", "icdcode_lst", ":", "\n", "\t\t", "try", ":", "\n", "\t\t\t", "ccsr", "=", "icd2ccsr", "[", "icdcode", "]", "\n", "if", "ccsr", "==", "'INF'", ":", "\n", "\t\t\t\t", "return", "True", "\n", "", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.filter_respiratory": [[222, 232], ["data_split.row2icdcodelst"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.row2icdcodelst"], ["", "def", "filter_respiratory", "(", "row", ")", ":", "\n", "\t", "icdcode_lst", "=", "row2icdcodelst", "(", "row", ")", "\n", "for", "icdcode", "in", "icdcode_lst", ":", "\n", "\t\t", "try", ":", "\n", "\t\t\t", "ccsr", "=", "icd2ccsr", "[", "icdcode", "]", "\n", "if", "ccsr", "==", "'RSP'", ":", "\n", "\t\t\t\t", "return", "True", "\n", "", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.filter_digest": [[233, 243], ["data_split.row2icdcodelst"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.row2icdcodelst"], ["", "def", "filter_digest", "(", "row", ")", ":", "\n", "\t", "icdcode_lst", "=", "row2icdcodelst", "(", "row", ")", "\n", "for", "icdcode", "in", "icdcode_lst", ":", "\n", "\t\t", "try", ":", "\n", "\t\t\t", "ccsr", "=", "icd2ccsr", "[", "icdcode", "]", "\n", "if", "ccsr", "==", "'DIG'", ":", "\n", "\t\t\t\t", "return", "True", "\n", "", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.write_row_to_csvfile": [[247, 255], ["open", "csv.DictWriter", "csv.DictWriter.writeheader", "csv.DictWriter.writerow", "enumerate"], "function", ["None"], ["", "def", "write_row_to_csvfile", "(", "rows", ",", "fieldname", ",", "output_file", ")", ":", "\n", "\t", "with", "open", "(", "output_file", ",", "'w'", ")", "as", "csvfile", ":", "\n", "\t\t", "writer", "=", "csv", ".", "DictWriter", "(", "csvfile", ",", "fieldnames", "=", "fieldname", ")", "\n", "writer", ".", "writeheader", "(", ")", "\n", "for", "row", "in", "rows", ":", "\n", "\t\t\t", "dic", "=", "{", "k", ":", "row", "[", "i", "]", "for", "i", ",", "k", "in", "enumerate", "(", "fieldname", ")", "}", "\n", "writer", ".", "writerow", "(", "dic", ")", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.row2year": [[266, 270], ["None"], "function", ["None"], ["", "def", "row2year", "(", "row", ")", ":", "\n", "\t", "nctid", "=", "row", "[", "0", "]", "\n", "start_year", ",", "completion_year", "=", "nctid2year", "[", "nctid", "]", "\n", "return", "start_year", ",", "completion_year", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.split_data": [[272, 294], ["random.shuffle", "len", "int", "data_split.row2year", "learn_row.append", "test_row.append"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.row2year"], ["", "def", "split_data", "(", "rows", ",", "split_year", ")", ":", "\n", "\t", "learn_row", "=", "[", "]", "\n", "test_row", "=", "[", "]", "\n", "for", "row", "in", "rows", ":", "\n", "\t\t", "start_year", ",", "completion_year", "=", "row2year", "(", "row", ")", "\n", "if", "0", "<", "completion_year", "<", "split_year", ":", "\n", "\t\t\t", "learn_row", ".", "append", "(", "row", ")", "\n", "", "elif", "0", "<", "start_year", "and", "start_year", ">=", "split_year", ":", "\n", "\t\t\t", "test_row", ".", "append", "(", "row", ")", "\n", "", "", "shuffle", "(", "learn_row", ")", "\n", "n", "=", "len", "(", "learn_row", ")", "\n", "train_num", "=", "int", "(", "n", "*", "0.9", ")", "\n", "train_row", "=", "learn_row", "[", ":", "train_num", "]", "\n", "valid_row", "=", "learn_row", "[", "train_num", ":", "]", "\n", "\n", "# n = len(rows)", "\n", "# train_num = int(n*train_valid_test_ratio[0])", "\n", "# valid_num = int(n*train_valid_test_ratio[1])\t", "\n", "# train_row = rows[:train_num]", "\n", "# valid_row = rows[train_num:train_num + valid_num]", "\n", "# test_row = rows[train_num + valid_num:]", "\n", "return", "train_row", ",", "valid_row", ",", "test_row", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.check_pos_and_neg": [[296, 304], ["print", "int", "int"], "function", ["None"], ["", "def", "check_pos_and_neg", "(", "rows", ")", ":", "\n", "\t", "pos_cnt", ",", "neg_cnt", "=", "0", ",", "0", "\n", "for", "row", "in", "rows", ":", "\n", "\t\t", "if", "int", "(", "row", "[", "3", "]", ")", "==", "1", ":", "\n", "\t\t\t", "pos_cnt", "+=", "1", "\n", "", "elif", "int", "(", "row", "[", "3", "]", ")", "==", "0", ":", "\n", "\t\t\t", "neg_cnt", "+=", "1", "\n", "", "", "print", "(", "\"pos: \"", ",", "pos_cnt", ",", "\" neg:\"", ",", "neg_cnt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.select_and_split_data": [[305, 384], ["data_split.csvfile2rows", "list", "len", "print", "data_split.split_data", "print", "data_split.check_pos_and_neg", "print", "data_split.check_pos_and_neg", "print", "data_split.check_pos_and_neg", "output_file_name.replace", "data_split.write_row_to_csvfile", "output_file_name.replace", "data_split.write_row_to_csvfile", "output_file_name.replace", "data_split.write_row_to_csvfile", "list", "output_file_name.replace", "data_split.write_row_to_csvfile", "list", "output_file_name.replace", "data_split.write_row_to_csvfile", "list", "output_file_name.replace", "data_split.write_row_to_csvfile", "list", "output_file_name.replace", "data_split.write_row_to_csvfile", "list", "output_file_name.replace", "data_split.write_row_to_csvfile", "filter", "list", "len", "str", "str", "filter", "filter", "filter", "filter", "filter", "filter", "int"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.csvfile2rows", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.split_data", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.check_pos_and_neg", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.check_pos_and_neg", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.check_pos_and_neg", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.write_row_to_csvfile", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.write_row_to_csvfile", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.write_row_to_csvfile", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.write_row_to_csvfile", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.write_row_to_csvfile", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.write_row_to_csvfile", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.write_row_to_csvfile", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.write_row_to_csvfile"], ["", "def", "select_and_split_data", "(", "input_file", ",", "filter_func", ",", "output_file_name", ",", "split_year", "=", "2014", ")", ":", "\n", "\t", "rows", "=", "csvfile2rows", "(", "input_file", ")", "\n", "rows", "=", "list", "(", "filter", "(", "filter_func", ",", "rows", ")", ")", "\n", "# shuffle(rows)", "\n", "positive_num", "=", "len", "(", "list", "(", "filter", "(", "lambda", "x", ":", "int", "(", "x", "[", "3", "]", ")", "==", "1", ",", "rows", ")", ")", ")", "\n", "negative_num", "=", "len", "(", "rows", ")", "-", "positive_num", "\n", "print", "(", "\"\\t\\tpos =\"", ",", "str", "(", "positive_num", ")", ",", "\"  neg =\"", ",", "str", "(", "negative_num", ")", ")", "\n", "train_row", ",", "valid_row", ",", "test_row", "=", "split_data", "(", "rows", ",", "split_year", ")", "\n", "fieldname", "=", "[", "'nctid'", ",", "'status'", ",", "'why_stop'", ",", "'label'", ",", "'phase'", ",", "\n", "'diseases'", ",", "'icdcodes'", ",", "'drugs'", ",", "'smiless'", ",", "'criteria'", "]", "\n", "\n", "print", "(", "\"train\"", ")", "\n", "check_pos_and_neg", "(", "train_row", ")", "\n", "print", "(", "\"valid\"", ")", "\n", "check_pos_and_neg", "(", "valid_row", ")", "\n", "print", "(", "\"test\"", ")", "\n", "check_pos_and_neg", "(", "test_row", ")", "\n", "output_file", "=", "output_file_name", ".", "replace", "(", "'.csv'", ",", "'_train.csv'", ")", "\n", "write_row_to_csvfile", "(", "train_row", ",", "fieldname", ",", "output_file", ")", "\n", "output_file", "=", "output_file_name", ".", "replace", "(", "'.csv'", ",", "'_valid.csv'", ")", "\n", "write_row_to_csvfile", "(", "valid_row", ",", "fieldname", ",", "output_file", ")", "\n", "output_file", "=", "output_file_name", ".", "replace", "(", "'.csv'", ",", "'_test.csv'", ")", "\n", "write_row_to_csvfile", "(", "test_row", ",", "fieldname", ",", "output_file", ")", "\n", "\n", "# subset_test_row = list(filter(filter_chronic, test_row))", "\n", "# output_file = output_file_name.replace('.csv', '_chronic_test.csv')", "\n", "# write_row_to_csvfile(subset_test_row, fieldname, output_file)", "\n", "\n", "# subset_test_row = list(filter(filter_cardio, test_row))", "\n", "# output_file = output_file_name.replace('.csv', '_cardio_test.csv')", "\n", "# write_row_to_csvfile(subset_test_row, fieldname, output_file)", "\n", "\n", "# subset_test_row = list(filter(filter_cancer, test_row))", "\n", "# output_file = output_file_name.replace('.csv', '_cancer_test.csv')", "\n", "# write_row_to_csvfile(subset_test_row, fieldname, output_file)", "\n", "\n", "# subset_test_row = list(filter(filter_pain, test_row))", "\n", "# output_file = output_file_name.replace('.csv', '_pain_test.csv')", "\n", "# write_row_to_csvfile(subset_test_row, fieldname, output_file)", "\n", "\n", "# subset_test_row = list(filter(filter_cancer, test_row))", "\n", "# output_file = output_file_name.replace('.csv', '_cancer_test.csv')", "\n", "# write_row_to_csvfile(subset_test_row, fieldname, output_file)", "\n", "\n", "# subset_test_row = list(filter(filter_infection, test_row))", "\n", "# output_file = output_file_name.replace('.csv', '_infection_test.csv')", "\n", "# write_row_to_csvfile(subset_test_row, fieldname, output_file)", "\n", "\n", "# subset_test_row = list(filter(filter_disorder, test_row))", "\n", "# output_file = output_file_name.replace('.csv', '_disorder_test.csv')", "\n", "# write_row_to_csvfile(subset_test_row, fieldname, output_file)", "\n", "\n", "# subset_test_row = list(filter(filter_heart, test_row))", "\n", "# output_file = output_file_name.replace('.csv', '_heart_test.csv')", "\n", "# write_row_to_csvfile(subset_test_row, fieldname, output_file)", "\n", "\n", "\n", "\n", "subset_test_row", "=", "list", "(", "filter", "(", "filter_respiratory", ",", "test_row", ")", ")", "\n", "output_file", "=", "output_file_name", ".", "replace", "(", "'.csv'", ",", "'_respiratory_test.csv'", ")", "\n", "write_row_to_csvfile", "(", "subset_test_row", ",", "fieldname", ",", "output_file", ")", "\n", "\n", "subset_test_row", "=", "list", "(", "filter", "(", "filter_infect", ",", "test_row", ")", ")", "\n", "output_file", "=", "output_file_name", ".", "replace", "(", "'.csv'", ",", "'_infection_test.csv'", ")", "\n", "write_row_to_csvfile", "(", "subset_test_row", ",", "fieldname", ",", "output_file", ")", "\n", "\n", "subset_test_row", "=", "list", "(", "filter", "(", "filter_nervous", ",", "test_row", ")", ")", "\n", "output_file", "=", "output_file_name", ".", "replace", "(", "'.csv'", ",", "'_nervous_test.csv'", ")", "\n", "write_row_to_csvfile", "(", "subset_test_row", ",", "fieldname", ",", "output_file", ")", "\n", "\n", "subset_test_row", "=", "list", "(", "filter", "(", "filter_digest", ",", "test_row", ")", ")", "\n", "output_file", "=", "output_file_name", ".", "replace", "(", "'.csv'", ",", "'_digest_test.csv'", ")", "\n", "write_row_to_csvfile", "(", "subset_test_row", ",", "fieldname", ",", "output_file", ")", "\n", "\n", "subset_test_row", "=", "list", "(", "filter", "(", "filter_cancer", ",", "test_row", ")", ")", "\n", "output_file", "=", "output_file_name", ".", "replace", "(", "'.csv'", ",", "'_cancer_test.csv'", ")", "\n", "write_row_to_csvfile", "(", "subset_test_row", ",", "fieldname", ",", "output_file", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.smiles_txt_to_lst": [[386, 393], ["i.strip", "text.split"], "function", ["None"], ["", "def", "smiles_txt_to_lst", "(", "text", ")", ":", "\n", "\t", "\"\"\"\n\t\t\"['CN[C@H]1CC[C@@H](C2=CC(Cl)=C(Cl)C=C2)C2=CC=CC=C12', 'CNCCC=C1C2=CC=CC=C2CCC2=CC=CC=C12']\" \n\t\"\"\"", "\n", "text", "=", "text", "[", "1", ":", "-", "1", "]", "\n", "lst", "=", "[", "i", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "i", "in", "text", ".", "split", "(", "','", ")", "]", "\n", "return", "lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.clean_data": [[396, 439], ["data_split.csvfile2rows", "open", "csv.DictWriter", "csv.DictWriter.writeheader", "csv.DictWriter.writerow", "data_split.smiles_txt_to_lst", "set", "str.remove", "str", "len", "list", "enumerate"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.data_split.csvfile2rows", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_lst"], ["def", "clean_data", "(", "input_file", ",", "clean_file", ")", ":", "\n", "\t", "\"\"\"\n\t\tremove placebo \n\t\"\"\"", "\n", "rows", "=", "csvfile2rows", "(", "input_file", ")", "\n", "newrows", "=", "[", "]", "\n", "fieldname", "=", "[", "'nctid'", ",", "'status'", ",", "'why_stop'", ",", "'label'", ",", "'phase'", ",", "'diseases'", ",", "'icdcodes'", ",", "'drugs'", ",", "'smiless'", ",", "'criteria'", "]", "\n", "with", "open", "(", "clean_file", ",", "'w'", ")", "as", "csvfile", ":", "\n", "\t\t", "writer", "=", "csv", ".", "DictWriter", "(", "csvfile", ",", "fieldnames", "=", "fieldname", ")", "\n", "writer", ".", "writeheader", "(", ")", "\n", "for", "row", "in", "rows", ":", "\n", "# drugs = row[7]", "\n", "# if 'placebo' not in drugs.lower():", "\n", "# \tnewrows.append(row)", "\n", "# \tcontinue ", "\n", "# smiless = row[8]", "\n", "# newdrug, newsmiles = [], []", "\n", "# # assert len(smiles_txt_to_lst(drugs)) == len(smiles_txt_to_lst(smiless))", "\n", "# for drug, smiles in zip(smiles_txt_to_lst(drugs), smiles_txt_to_lst(smiless)):", "\n", "# \tif 'placebo' not in drug.lower():", "\n", "# \t\tnewdrug.append(drug)", "\n", "# \t\tnewsmiles.append(smiles)", "\n", "# \telse:", "\n", "# \t\tprint(smiles)", "\n", "# newdrug = str(newdrug)", "\n", "# newsmiles = str(smiles)", "\n", "# assert len(newdrug) > 0", "\n", "\n", "\t\t\t", "smiless", "=", "row", "[", "8", "]", "\n", "if", "'[O--].[Mg++]'", "in", "smiless", ":", "\n", "\t\t\t\t", "smiles_lst", "=", "smiles_txt_to_lst", "(", "smiless", ")", "\n", "smiles_lst", "=", "set", "(", "smiles_lst", ")", "\n", "smiles_lst", ".", "remove", "(", "'[O--].[Mg++]'", ")", "\n", "if", "len", "(", "smiles_lst", ")", "==", "0", ":", "\n", "\t\t\t\t\t", "continue", "\n", "", "smiles_lst", "=", "str", "(", "list", "(", "smiles_lst", ")", ")", "\n", "newrow", "=", "row", "[", ":", "8", "]", "+", "[", "smiles_lst", "]", "+", "row", "[", "9", ":", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "newrow", "=", "row", "\n", "\n", "", "dic", "=", "{", "k", ":", "newrow", "[", "i", "]", "for", "i", ",", "k", "in", "enumerate", "(", "fieldname", ")", "}", "\n", "writer", ".", "writerow", "(", "dic", ")", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.get_all_file": [[13, 19], ["open", "fin.readlines", "i.strip"], "function", ["None"], ["def", "get_all_file", "(", ")", ":", "\n", "\t", "input_file", "=", "\"all_xml\"", "\n", "with", "open", "(", "input_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "input_file_lst", "=", "[", "i", ".", "strip", "(", ")", "for", "i", "in", "lines", "]", "\n", "return", "input_file_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.remove_multiple_space": [[28, 31], ["text.split"], "function", ["None"], ["def", "remove_multiple_space", "(", "text", ")", ":", "\n", "\t", "text", "=", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.generate_complete_path": [[32, 37], ["os.path.join", "len"], "function", ["None"], ["", "def", "generate_complete_path", "(", "nctid", ")", ":", "\n", "\t", "assert", "len", "(", "nctid", ")", "==", "11", "\n", "prefix", "=", "nctid", "[", ":", "7", "]", "+", "\"xxxx\"", "\n", "datafolder", "=", "os", ".", "path", ".", "join", "(", "\"./ClinicalTrialGov/\"", ",", "prefix", ",", "nctid", "+", "\".xml\"", ")", "\n", "return", "datafolder", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.walkData": [[39, 47], ["result_list.append", "root_node.getchildren", "len", "collect_all.walkData"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.walkData"], ["", "def", "walkData", "(", "root_node", ",", "prefix", ",", "result_list", ")", ":", "\n", "\t", "temp_list", "=", "[", "prefix", "+", "'/'", "+", "root_node", ".", "tag", ",", "root_node", ".", "text", "]", "\n", "result_list", ".", "append", "(", "temp_list", ")", "\n", "children_node", "=", "root_node", ".", "getchildren", "(", ")", "\n", "if", "len", "(", "children_node", ")", "==", "0", ":", "\n", "\t\t", "return", "\n", "", "for", "child", "in", "children_node", ":", "\n", "\t\t", "walkData", "(", "child", ",", "prefix", "=", "prefix", "+", "'/'", "+", "root_node", ".", "tag", ",", "result_list", "=", "result_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.root2outcome": [[48, 70], ["collect_all.walkData", "list", "filter", "len", "float"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.walkData"], ["", "", "def", "root2outcome", "(", "root", ")", ":", "\n", "\t", "result_list", "=", "[", "]", "\n", "walkData", "(", "root", ",", "prefix", "=", "''", ",", "result_list", "=", "result_list", ")", "\n", "filter_func", "=", "lambda", "x", ":", "'p_value'", "in", "x", "[", "0", "]", "\n", "outcome_list", "=", "list", "(", "filter", "(", "filter_func", ",", "result_list", ")", ")", "\n", "if", "len", "(", "outcome_list", ")", "==", "0", ":", "\n", "\t\t", "return", "None", "\n", "", "outcome", "=", "outcome_list", "[", "0", "]", "[", "1", "]", "\n", "if", "outcome", "[", "0", "]", "==", "'<'", ":", "\n", "\t\t", "return", "1", "\n", "", "if", "outcome", "[", "0", "]", "==", "'>'", ":", "\n", "\t\t", "return", "0", "\n", "", "if", "outcome", "[", "0", "]", "==", "'='", ":", "\n", "\t\t", "outcome", "=", "outcome", "[", "1", ":", "]", "\n", "", "try", ":", "\n", "\t\t", "label", "=", "float", "(", "outcome", ")", "\n", "if", "label", "<", "0.05", ":", "\n", "\t\t\t", "return", "1", "\n", "", "else", ":", "\n", "\t\t\t", "return", "0", "\n", "", "", "except", ":", "\n", "\t\t", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.file2dict": [[71, 111], ["xml.etree.ElementTree.parse", "ET.parse.getroot", "collect_all.root2outcome", "tree.getroot.find().find", "tree.getroot.find", "tree.getroot.find", "print", "print", "print", "tree.getroot.findall", "tree.getroot.findall", "i.find", "tree.getroot.find", "tree.getroot.find().find().find", "tree.getroot.find", "tree.getroot.find", "tree.getroot.find", "i.find", "tree.getroot.find().find", "tree.getroot.find"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.pseudolabel.root2outcome"], ["", "", "def", "file2dict", "(", "xml_file", ")", ":", "\n", "\t", "tree", "=", "ET", ".", "parse", "(", "xml_file", ")", "\n", "root", "=", "tree", ".", "getroot", "(", ")", "\n", "nctid", "=", "root", ".", "find", "(", "'id_info'", ")", ".", "find", "(", "'nct_id'", ")", ".", "text", "### nctid: 'NCT00000102'", "\n", "title", "=", "root", ".", "find", "(", "'brief_title'", ")", ".", "text", "\n", "study_type", "=", "root", ".", "find", "(", "'study_type'", ")", ".", "text", "\n", "if", "study_type", "!=", "'Interventional'", ":", "\n", "\t\t", "return", "(", "None", ",", ")", "\n", "", "label", "=", "root2outcome", "(", "root", ")", "\n", "if", "label", "is", "None", ":", "\n", "\t\t", "return", "(", "None", ",", ")", "\n", "", "conditions", "=", "[", "i", ".", "text", "for", "i", "in", "root", ".", "findall", "(", "'condition'", ")", "]", "\n", "interventions", "=", "[", "i", "for", "i", "in", "root", ".", "findall", "(", "'intervention'", ")", "]", "\n", "drug_interventions", "=", "[", "i", ".", "find", "(", "'intervention_name'", ")", ".", "text", "for", "i", "in", "interventions", "if", "i", ".", "find", "(", "'intervention_type'", ")", ".", "text", "==", "'Drug'", "]", "\n", "# or i.find('intervention_type').text=='Biological']", "\n", "#print(len(interventions), \"drug intervention\", drug_interventions)", "\n", "try", ":", "\n", "\t\t", "status", "=", "root", ".", "find", "(", "'overall_status'", ")", ".", "text", "\n", "", "except", ":", "\n", "\t\t", "status", "=", "''", "\n", "", "try", ":", "\n", "\t\t", "criteria", "=", "root", ".", "find", "(", "'eligibility'", ")", ".", "find", "(", "'criteria'", ")", ".", "find", "(", "'textblock'", ")", ".", "text", "\n", "print", "(", "\"criteria\\n\\t\\t\"", ",", "criteria", ")", "\n", "", "except", ":", "\n", "\t\t", "criteria", "=", "''", "\n", "#if criteria != '':", "\n", "#\tassert \"Inclusion Criteria:\" in criteria ", "\n", "#\tassert \"Exclusion Criteria:\" in criteria ", "\n", "", "try", ":", "\n", "\t\t", "summary", "=", "root", ".", "find", "(", "'brief_summary'", ")", ".", "text", "\n", "print", "(", "\"summary\\n\\t\\t\"", ",", "summary", ")", "\n", "", "except", ":", "\n", "\t\t", "summary", "=", "''", "\n", "", "try", ":", "\n", "\t\t", "phase", "=", "root", ".", "find", "(", "'phase'", ")", ".", "text", "\n", "print", "(", "\"phase\\n\\t\\t\"", ",", "phase", ")", "\n", "", "except", ":", "\n", "\t\t", "phase", "=", "''", "\n", "", "return", "nctid", ",", "status", ",", "label", ",", "phase", ",", "conditions", ",", "drug_interventions", ",", "title", ",", "criteria", ",", "summary", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.getXmlData": [[114, 119], ["xml.etree.ElementTree.parse().getroot", "collect_all.walkData", "xml.etree.ElementTree.parse"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.walkData"], ["", "def", "getXmlData", "(", "file_name", ")", ":", "\n", "\t", "result_list", "=", "[", "]", "\n", "root", "=", "ET", ".", "parse", "(", "file_name", ")", ".", "getroot", "(", ")", "\n", "walkData", "(", "root", ",", "prefix", "=", "''", ",", "result_list", "=", "result_list", ")", "\n", "return", "result_list", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.Get_Iqvia_data": [[121, 148], ["dict", "dict", "list", "open", "fin.readlines", "int", "open", "dict.keys", "line.split", "list", "dict.pop", "line.split", "csv.reader"], "function", ["None"], ["", "def", "Get_Iqvia_data", "(", ")", ":", "\n", "\t", "nct2outcome_file", "=", "\"data/trial_outcomes_v1.csv\"", "\n", "outcome2label_file", "=", "\"data/outcome2label.txt\"", "\n", "outcome2label", "=", "dict", "(", ")", "\n", "nct2label", "=", "dict", "(", ")", "\n", "with", "open", "(", "outcome2label_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "for", "line", "in", "lines", ":", "\n", "\t\t", "outcome", "=", "line", ".", "split", "(", "'\\t'", ")", "[", "0", "]", "\n", "label", "=", "int", "(", "line", ".", "split", "(", "'\\t'", ")", "[", "1", "]", ")", "\n", "outcome2label", "[", "outcome", "]", "=", "label", "\n", "", "with", "open", "(", "nct2outcome_file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "reader", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "for", "row", "in", "reader", ":", "\n", "\t\t\t", "nctid", ",", "outcome", "=", "row", "[", "0", "]", ",", "row", "[", "1", "]", "\n", "label", "=", "outcome2label", "[", "outcome", "]", "\n", "if", "nctid", "in", "nct2label", ":", "\n", "\t\t\t\t", "if", "label", ">", "nct2label", "[", "nctid", "]", ":", "\n", "\t\t\t\t\t", "nct2label", "[", "nctid", "]", "=", "label", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "nct2label", "[", "nctid", "]", "=", "label", "\n", "### remove the key whole value is -1", "\n", "", "", "", "for", "nctid", "in", "list", "(", "nct2label", ".", "keys", "(", ")", ")", ":", "\n", "\t\t", "label", "=", "nct2label", "[", "nctid", "]", "\n", "if", "label", "==", "-", "1", ":", "\n", "\t\t\t", "nct2label", ".", "pop", "(", "nctid", ")", "\n", "", "", "return", "nct2label", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.load_drug2smiles_pkl": [[149, 153], ["pickle.load", "open"], "function", ["None"], ["", "def", "load_drug2smiles_pkl", "(", ")", ":", "\n", "\t", "pkl_file", "=", "\"data/drug2smiles.pkl\"", "\n", "drug2smiles", "=", "pickle", ".", "load", "(", "open", "(", "pkl_file", ",", "'rb'", ")", ")", "\n", "return", "drug2smiles", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.load_disease2icd_pkl": [[154, 160], ["pickle.load", "pickle.load", "open", "open"], "function", ["None"], ["", "def", "load_disease2icd_pkl", "(", ")", ":", "\n", "\t", "iqvia_pkl_file", "=", "\"data/disease2icd.pkl\"", "\n", "public_pkl_file", "=", "\"icdcode/description2icd.pkl\"", "\n", "iqvia_disease2icd", "=", "pickle", ".", "load", "(", "open", "(", "iqvia_pkl_file", ",", "'rb'", ")", ")", "\n", "public_disease2icd", "=", "pickle", ".", "load", "(", "open", "(", "public_pkl_file", ",", "'rb'", ")", ")", "\n", "return", "iqvia_disease2icd", ",", "public_disease2icd", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.drug_hit_smiles": [[163, 183], ["drug.split", "len"], "function", ["None"], ["", "def", "drug_hit_smiles", "(", "drug", ",", "drug2smiles", ")", ":", "\n", "\t", "\"\"\"\n\t\theuristics\n\t\"\"\"", "\n", "if", "drug", "in", "drug2smiles", ":", "\n", "\t\t", "return", "drug2smiles", "[", "drug", "]", "\n", "", "for", "word", "in", "drug", ".", "split", "(", ")", ":", "\n", "\t\t", "if", "len", "(", "word", ")", ">=", "7", "and", "word", "in", "drug2smiles", ":", "\n", "#print(\"drug hit: \", drug, '&', word)", "\n", "\t\t\t", "return", "drug2smiles", "[", "word", "]", "\n", "# max_length = 0", "\n", "# for drug0 in drug2smiles:", "\n", "# \tlength = dynamic_programming(drug, drug0)", "\n", "# \tif length > max_length:", "\n", "# \t\tbest_drug = drug0 ", "\n", "# \t\tmax_length = length ", "\n", "# if max_length > 9: ", "\n", "# \tprint(\"DP drug hit: \", drug, '&', best_drug)", "\n", "# \treturn drug2smiles[best_drug]", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.disease_hit_icd": [[185, 221], ["disease.split", "set", "disease2diseaseset.items", "re.split", "disease0set.intersection", "len", "len", "len", "list"], "function", ["None"], ["", "def", "disease_hit_icd", "(", "disease", ",", "disease2icd", ",", "disease2diseaseset", ")", ":", "\n", "\t", "\"\"\"\n\t\theuristics\n\t\"\"\"", "\n", "#### match 0", "\n", "if", "disease", "in", "disease2icd", ":", "\n", "\t\t", "return", "disease2icd", "[", "disease", "]", "\n", "#### match 1", "\n", "", "for", "word", "in", "disease", ".", "split", "(", ")", ":", "\n", "\t\t", "if", "len", "(", "word", ")", ">=", "7", "and", "word", "in", "disease2icd", ":", "\n", "# print(\"I disease hit:\", disease, '&', word)", "\n", "\t\t\t", "return", "disease2icd", "[", "word", "]", "\n", "#### match 2", "\n", "", "", "max_length", "=", "0", "\n", "diseaseset", "=", "set", "(", "re", ".", "split", "(", "r\"[\\', /-]\"", ",", "disease", ")", ")", "\n", "for", "disease0", ",", "disease0set", "in", "disease2diseaseset", ".", "items", "(", ")", ":", "\n", "\t\t", "intersection_set", "=", "disease0set", ".", "intersection", "(", "diseaseset", ")", "\n", "length", "=", "len", "(", "intersection_set", ")", "\n", "wordlength", "=", "len", "(", "''", ".", "join", "(", "list", "(", "intersection_set", ")", ")", ")", "\n", "if", "length", ">", "max_length", "and", "wordlength", ">", "8", ":", "\n", "\t\t\t", "max_length", "=", "length", "\n", "best_disease", "=", "disease0", "\n", "", "", "if", "max_length", ">", "1", ":", "\n", "#print(\"II disease hit:\", disease, '&', best_disease)\t\t", "\n", "\t\t", "return", "disease2icd", "[", "best_disease", "]", "\n", "\n", "# max_length = 0", "\n", "# for disease0 in disease2icd:", "\n", "# \tlength = dynamic_programming(disease, disease0)", "\n", "# \tif length > max_length:", "\n", "# \t\tbest_disease = disease0 ", "\n", "# \t\tmax_length = length ", "\n", "# if max_length > 20: ", "\n", "# \tprint(\"III DP disease hit: \", disease, '&', best_disease)", "\n", "# \treturn disease2icd[best_disease]\t", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.disease_dict_reorganize": [[223, 225], ["set", "re.split"], "function", ["None"], ["", "def", "disease_dict_reorganize", "(", "disease2icd", ")", ":", "\n", "\t", "return", "{", "disease", ":", "set", "(", "re", ".", "split", "(", "r\"[\\', /-]\"", ",", "disease", ")", ")", "for", "disease", "in", "disease2icd", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.write_csv_file": [[228, 286], ["collect_all.load_drug2smiles_pkl", "collect_all.load_disease2icd_pkl", "collect_all.disease_dict_reorganize", "collect_all.disease_dict_reorganize", "time.time", "collect_all.get_all_file", "print", "time.time", "print", "open", "csv.DictWriter", "csv.DictWriter.writeheader", "tqdm.tqdm", "collect_all.file2dict", "csv.DictWriter.writerow", "str", "len", "disease.lower.lower", "collect_all.disease_hit_icd", "len", "drug.lower.lower", "collect_all.drug_hit_smiles", "len", "int", "icdcode_lst.append", "print", "smiles_lst.append", "diseases.encode", "drugs.encode", "title.encode", "criteria.encode", "summary.encode"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.load_drug2smiles_pkl", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.load_disease2icd_pkl", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.disease_dict_reorganize", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.disease_dict_reorganize", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.get_all_file", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.file2dict", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.disease_hit_icd", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.collect_all.drug_hit_smiles"], ["", "def", "write_csv_file", "(", ")", ":", "\n", "\t", "cook_csv_file", "=", "'data/cooked_trial.csv'", "\n", "drug2smiles", "=", "load_drug2smiles_pkl", "(", ")", "\n", "iqvia_disease2icd", ",", "public_disease2icd", "=", "load_disease2icd_pkl", "(", ")", "\n", "iqvia_disease2diseaseset", "=", "disease_dict_reorganize", "(", "iqvia_disease2icd", ")", "\n", "disease2icd", "=", "public_disease2icd", "\n", "disease2diseaseset", "=", "disease_dict_reorganize", "(", "public_disease2icd", ")", "\n", "t1", "=", "time", "(", ")", "\n", "input_file_lst", "=", "get_all_file", "(", ")", "\n", "fieldname", "=", "[", "'nctid'", ",", "'status'", ",", "'label'", ",", "'phase'", ",", "'diseases'", ",", "'icdcodes'", ",", "'drugs'", ",", "'smiless'", ",", "'title'", ",", "'criteria'", ",", "'summary'", "]", "\n", "disease_hit", ",", "disease_all", ",", "drug_hit", ",", "drug_all", "=", "0", ",", "0", ",", "0", ",", "0", "### disease hit icd && drug hit smiles", "\n", "with", "open", "(", "cook_csv_file", ",", "'w'", ")", "as", "csvfile", ":", "\n", "\t\t", "writer", "=", "csv", ".", "DictWriter", "(", "csvfile", ",", "fieldnames", "=", "fieldname", ")", "\n", "writer", ".", "writeheader", "(", ")", "\n", "for", "file", "in", "tqdm", "(", "input_file_lst", "[", ":", "]", ")", ":", "\n", "\t\t\t", "result", "=", "file2dict", "(", "file", ")", "\n", "if", "len", "(", "result", ")", "==", "1", ":", "\n", "\t\t\t\t", "continue", "\n", "", "nctid", ",", "status", ",", "label", ",", "phase", ",", "diseases", ",", "drugs", ",", "title", ",", "criteria", ",", "summary", "=", "result", "\n", "icdcode_lst", ",", "smiles_lst", "=", "[", "]", ",", "[", "]", "\n", "for", "disease", "in", "diseases", ":", "\n", "\t\t\t\t", "disease", "=", "disease", ".", "lower", "(", ")", "\n", "disease_all", "+=", "1", "\n", "icdcode", "=", "disease_hit_icd", "(", "disease", ",", "disease2icd", ",", "disease2diseaseset", ")", "\n", "if", "icdcode", "is", "not", "None", ":", "\n", "\t\t\t\t\t", "disease_hit", "+=", "1", "\n", "icdcode_lst", ".", "append", "(", "icdcode", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "print", "(", "\"unfounded:\"", ",", "disease", ")", "\n", "", "", "if", "len", "(", "icdcode_lst", ")", "==", "0", ":", "\n", "\t\t\t\t", "continue", "\n", "", "for", "drug", "in", "drugs", ":", "\n", "\t\t\t\t", "drug", "=", "drug", ".", "lower", "(", ")", "\n", "drug_all", "+=", "1", "\n", "smiles", "=", "drug_hit_smiles", "(", "drug", ",", "drug2smiles", ")", "\n", "if", "smiles", "is", "not", "None", ":", "\n", "\t\t\t\t\t", "drug_hit", "+=", "1", "\n", "smiles_lst", ".", "append", "(", "smiles", ")", "\n", "", "", "if", "len", "(", "smiles_lst", ")", "==", "0", ":", "\n", "\t\t\t\t", "continue", "\n", "", "icdcodes", "=", "'\\t'", ".", "join", "(", "icdcode_lst", ")", "\n", "smiless", "=", "'\\t'", ".", "join", "(", "smiles_lst", ")", "\n", "drugs", "=", "'\\t'", ".", "join", "(", "smiles_lst", ")", "\n", "diseases", "=", "'\\t'", ".", "join", "(", "diseases", ")", "\n", "writer", ".", "writerow", "(", "{", "'nctid'", ":", "nctid", ",", "'label'", ":", "label", ",", "'phase'", ":", "phase", ",", "'diseases'", ":", "diseases", ".", "encode", "(", "'utf-8'", ")", ",", "'icdcodes'", ":", "icdcodes", ",", "'drugs'", ":", "drugs", ".", "encode", "(", "'utf-8'", ")", ",", "'smiless'", ":", "smiless", ",", "'title'", ":", "title", ".", "encode", "(", "'utf-8'", ")", ",", "'criteria'", ":", "criteria", ".", "encode", "(", "'utf-8'", ")", ",", "'summary'", ":", "summary", ".", "encode", "(", "'utf-8'", ")", "}", ")", "\n", "", "", "print", "(", "\"disease hit icdcode\"", ",", "disease_hit", ",", "\"disease all\"", ",", "disease_all", ",", "\"\\n drug hit smiles\"", ",", "drug_hit", ",", "\"drug all\"", ",", "drug_all", ")", "\n", "t2", "=", "time", "(", ")", "\n", "print", "(", "str", "(", "int", "(", "(", "t2", "-", "t1", ")", "/", "60", ")", ")", "+", "\" minutes\"", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.drug2smiles.drug2smiles_func": [[12, 36], ["collections.defaultdict", "dict", "collections.defaultdict.items", "open", "row[].lower", "row[].lower", "drug2smiles[].add", "drug2smiles[].add", "list", "smiles.strip", "list", "csv.reader"], "function", ["None"], ["def", "drug2smiles_func", "(", ")", ":", "\n", "\t", "file", "=", "\"data/drugbank_drugs_info.csv\"", "\n", "with", "open", "(", "file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "reader", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "drug2smiles", "=", "defaultdict", "(", "set", ")", "\n", "drug2smiles2", "=", "dict", "(", ")", "\n", "for", "row", "in", "reader", ":", "\n", "\t\t", "smiles", "=", "row", "[", "27", "]", "\n", "if", "smiles", ".", "strip", "(", ")", "==", "''", ":", "\n", "\t\t\t", "continue", "\n", "", "drug1", "=", "row", "[", "3", "]", ".", "lower", "(", ")", "\n", "drug2", "=", "row", "[", "11", "]", ".", "lower", "(", ")", "\n", "drug2smiles", "[", "drug1", "]", ".", "add", "(", "smiles", ")", "\n", "drug2smiles", "[", "drug2", "]", ".", "add", "(", "smiles", ")", "\n", "", "for", "drug", ",", "smiles", "in", "drug2smiles", ".", "items", "(", ")", ":", "\n", "\t\t", "smiles", "=", "list", "(", "smiles", ")", "[", "0", "]", "\n", "drug2smiles2", "[", "drug", "]", "=", "smiles", "\n", "#### to improve ", "\n", "", "'''\n\t\t 7: 53, 3: 1452, 1: 26851, 5: 178, 10: 16, 14: 6, 2: 6129, \n\t\t 4: 504, 17: 8, 12: 8, 8: 38, 6: 83, 11: 12, 9: 17, 161: 1, \n\t\t 21: 2, 15: 4, 32: 2, 13: 2, 31: 1, 22: 2, 23: 3, 16: 1, 18: 2, 104: 1, 19: 2\n\t'''", "\n", "return", "drug2smiles2", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.ccs_utils.rawfile2dict": [[8, 36], ["pandas.read_excel", "dict", "dict", "range", "open", "open", "dict.items", "open", "dict.items", "fout.write", "fout.write", "str", "str", "str", "str"], "function", ["None"], ["def", "rawfile2dict", "(", ")", ":", "\n", "\t", "'''\n\t\tccs beta code\n\t'''", "\n", "file", "=", "\"icdcode/DXCCSR-vs-Beta-CCS-Comparison.xlsx\"", "\n", "icd2ccs_file", "=", "\"icdcode/icd2ccs.txt\"", "\n", "ccscode2description_file", "=", "'icdcode/ccs2description.txt'", "\n", "contents", "=", "pd", ".", "read_excel", "(", "open", "(", "file", ",", "'rb'", ")", ",", "sheet_name", "=", "'ICD-10-CM Code Detail'", ")", "\n", "N", ",", "_", "=", "contents", ".", "shape", "\n", "\n", "icd10code_lst", "=", "contents", "[", "'ICD-10-CM Code'", "]", "\n", "ccs_beta_lst", "=", "contents", "[", "'Beta Version CCS Category'", "]", "\n", "ccs_description_lst", "=", "contents", "[", "'Beta Version CCS Category Description'", "]", "\n", "icd2ccs", "=", "dict", "(", ")", "\n", "ccscode2description", "=", "dict", "(", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "\t\t", "icdcode", "=", "icd10code_lst", "[", "i", "]", "\n", "ccscode", "=", "ccs_beta_lst", "[", "i", "]", "\n", "ccs_description", "=", "ccs_description_lst", "[", "i", "]", "\n", "icd2ccs", "[", "icdcode", "]", "=", "ccscode", "\n", "ccscode2description", "[", "ccscode", "]", "=", "ccs_description", "\n", "", "with", "open", "(", "icd2ccs_file", ",", "'w'", ")", "as", "fout", ":", "\n", "\t\t", "for", "k", ",", "v", "in", "icd2ccs", ".", "items", "(", ")", ":", "\n", "\t\t\t", "fout", ".", "write", "(", "str", "(", "k", ")", "+", "'\\t'", "+", "str", "(", "v", ")", "+", "'\\n'", ")", "\n", "", "", "with", "open", "(", "ccscode2description_file", ",", "'w'", ")", "as", "fout", ":", "\n", "\t\t", "for", "k", ",", "v", "in", "ccscode2description", ".", "items", "(", ")", ":", "\n", "\t\t\t", "fout", ".", "write", "(", "str", "(", "k", ")", "+", "'\\t'", "+", "str", "(", "v", ")", "+", "'\\n'", ")", "\n", "", "", "return", "icd2ccs", ",", "ccscode2description", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.ccs_utils.rawfile2dict_CCSR": [[38, 55], ["pandas.read_excel", "dict", "range", "open", "open", "dict.items", "fout.write", "str", "str"], "function", ["None"], ["", "def", "rawfile2dict_CCSR", "(", ")", ":", "\n", "\t", "file", "=", "\"icdcode/DXCCSR-vs-Beta-CCS-Comparison.xlsx\"", "\n", "icd2ccsr_file", "=", "\"icdcode/icd2ccsr.txt\"", "\n", "contents", "=", "pd", ".", "read_excel", "(", "open", "(", "file", ",", "'rb'", ")", ",", "sheet_name", "=", "'ICD-10-CM Code Detail'", ")", "\n", "N", ",", "_", "=", "contents", ".", "shape", "\n", "\n", "icd10code_lst", "=", "contents", "[", "'ICD-10-CM Code'", "]", "\n", "ccsr_lst", "=", "contents", "[", "'CCSR1'", "]", "\n", "icd2ccsr", "=", "dict", "(", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "\t\t", "icdcode", "=", "icd10code_lst", "[", "i", "]", "\n", "ccsr", "=", "ccsr_lst", "[", "i", "]", "[", ":", "3", "]", "\n", "icd2ccsr", "[", "icdcode", "]", "=", "ccsr", "\n", "", "with", "open", "(", "icd2ccsr_file", ",", "'w'", ")", "as", "fout", ":", "\n", "\t\t", "for", "k", ",", "v", "in", "icd2ccsr", ".", "items", "(", ")", ":", "\n", "\t\t\t", "fout", ".", "write", "(", "str", "(", "k", ")", "+", "'\\t'", "+", "str", "(", "v", ")", "+", "'\\n'", ")", "\n", "", "", "return", "icd2ccsr", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.ccs_utils.file2_icd2ccsr": [[57, 63], ["open", "fin.readlines", "line.split", "line.split"], "function", ["None"], ["", "def", "file2_icd2ccsr", "(", ")", ":", "\n", "\t", "icd2ccsr_file", "=", "\"icdcode/icd2ccsr.txt\"", "\n", "with", "open", "(", "icd2ccsr_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "icd2ccsr", "=", "{", "line", ".", "split", "(", ")", "[", "0", "]", ":", "line", ".", "split", "(", ")", "[", "1", "]", "for", "line", "in", "lines", "}", "\n", "return", "icd2ccsr", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.ccs_utils.file2_icd2ccs_and_ccs2description": [[65, 77], ["dict", "dict", "open", "fin.readlines", "open", "fin.readlines", "line.split", "line.split", "line.split", "line.split"], "function", ["None"], ["", "def", "file2_icd2ccs_and_ccs2description", "(", ")", ":", "\n", "\t", "icd2ccs", "=", "dict", "(", ")", "\n", "icd2ccs_file", "=", "\"icdcode/icd2ccs.txt\"", "\n", "ccscode2description_file", "=", "'icdcode/ccs2description.txt'", "\n", "ccscode2description", "=", "dict", "(", ")", "\n", "with", "open", "(", "icd2ccs_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "icd2ccs", "=", "{", "line", ".", "split", "(", ")", "[", "0", "]", ":", "line", ".", "split", "(", ")", "[", "1", "]", "for", "line", "in", "lines", "}", "\n", "with", "open", "(", "ccscode2description_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "ccscode2description", "=", "{", "line", ".", "split", "(", ")", "[", "0", "]", ":", "line", ".", "split", "(", ")", "[", "1", "]", "for", "line", "in", "lines", "}", "\n", "return", "icd2ccs", ",", "ccscode2description", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.ccs_utils.cancer_filter_icd10code": [[82, 87], ["ccs_utils.file2_icd2ccs_and_ccs2description", "description.lower"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.ccs_utils.file2_icd2ccs_and_ccs2description"], ["", "def", "cancer_filter_icd10code", "(", "icd10code", ")", ":", "\n", "\t", "icd2ccs", ",", "ccscode2description", "=", "file2_icd2ccs_and_ccs2description", "(", ")", "\n", "ccs", "=", "icd2ccs", "[", "icd10code", "]", "\n", "description", "=", "ccscode2description", "[", "ccs", "]", "\n", "return", "'cancer'", "in", "description", ".", "lower", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.nctid2patientnumber_startdate.xmlfile_2_startyear": [[8, 17], ["xml.etree.ElementTree.parse", "ET.parse.getroot", "int", "tree.getroot.find", "int.split"], "function", ["None"], ["def", "xmlfile_2_startyear", "(", "xml_file", ")", ":", "\n", "\t", "tree", "=", "ET", ".", "parse", "(", "xml_file", ")", "\n", "root", "=", "tree", ".", "getroot", "(", ")", "\n", "try", ":", "\n", "\t\t", "start_date", "=", "root", ".", "find", "(", "'start_date'", ")", ".", "text", "\n", "start_date", "=", "int", "(", "start_date", ".", "split", "(", ")", "[", "-", "1", "]", ")", "\n", "", "except", ":", "\n", "\t\t", "start_date", "=", "-", "1", "\n", "", "return", "start_date", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.disease2icd.disease2icd_func": [[24, 42], ["collections.defaultdict", "dict", "collections.defaultdict.items", "open", "row[].lower", "row[].lower", "disease2icdcode[].add", "disease2icdcode[].add", "list", "icd10code.strip", "len", "list", "csv.reader"], "function", ["None"], ["def", "disease2icd_func", "(", ")", ":", "\n", "\t", "file", "=", "\"data/drugbank_trial_conditions.csv\"", "\n", "with", "open", "(", "file", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "reader", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "disease2icdcode", "=", "defaultdict", "(", "set", ")", "\n", "disease2icdcode2", "=", "dict", "(", ")", "\n", "for", "row", "in", "reader", ":", "\n", "\t\t", "diseasename1", "=", "row", "[", "2", "]", ".", "lower", "(", ")", "\n", "diseasename2", "=", "row", "[", "6", "]", ".", "lower", "(", ")", "\n", "icd10code", "=", "row", "[", "8", "]", "\n", "if", "icd10code", ".", "strip", "(", ")", "==", "''", ":", "\n", "\t\t\t", "continue", "\n", "", "disease2icdcode", "[", "diseasename1", "]", ".", "add", "(", "icd10code", ")", "\n", "disease2icdcode", "[", "diseasename2", "]", ".", "add", "(", "icd10code", ")", "\n", "", "for", "disease", ",", "icdcode", "in", "disease2icdcode", ".", "items", "(", ")", ":", "\n", "\t\t", "assert", "len", "(", "icdcode", ")", "==", "1", "\n", "disease2icdcode2", "[", "disease", "]", "=", "list", "(", "icdcode", ")", "[", "0", "]", "\n", "", "return", "disease2icdcode2", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.Trial_Dataset.__init__": [[19, 25], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "nctid_lst", ",", "label_lst", ",", "smiles_lst", ",", "icdcode_lst", ",", "criteria_lst", ")", ":", "\n", "\t\t", "self", ".", "nctid_lst", "=", "nctid_lst", "\n", "self", ".", "label_lst", "=", "label_lst", "\n", "self", ".", "smiles_lst", "=", "smiles_lst", "\n", "self", ".", "icdcode_lst", "=", "icdcode_lst", "\n", "self", ".", "criteria_lst", "=", "criteria_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.Trial_Dataset.__len__": [[26, 28], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "nctid_lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.Trial_Dataset.__getitem__": [[29, 31], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "return", "self", ".", "nctid_lst", "[", "index", "]", ",", "self", ".", "label_lst", "[", "index", "]", ",", "self", ".", "smiles_lst", "[", "index", "]", ",", "self", ".", "icdcode_lst", "[", "index", "]", ",", "self", ".", "criteria_lst", "[", "index", "]", "\n", "#### smiles_lst[index] is list of smiles", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.Trial_Dataset_Complete.__init__": [[34, 42], ["dataloader.Trial_Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__"], ["\t", "def", "__init__", "(", "self", ",", "nctid_lst", ",", "status_lst", ",", "why_stop_lst", ",", "label_lst", ",", "phase_lst", ",", "\n", "diseases_lst", ",", "icdcode_lst", ",", "drugs_lst", ",", "smiles_lst", ",", "criteria_lst", ")", ":", "\n", "\t\t", "Trial_Dataset", ".", "__init__", "(", "self", ",", "nctid_lst", ",", "label_lst", ",", "smiles_lst", ",", "icdcode_lst", ",", "criteria_lst", ")", "\n", "self", ".", "status_lst", "=", "status_lst", "\n", "self", ".", "why_stop_lst", "=", "why_stop_lst", "\n", "self", ".", "phase_lst", "=", "phase_lst", "\n", "self", ".", "diseases_lst", "=", "diseases_lst", "\n", "self", ".", "drugs_lst", "=", "drugs_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.Trial_Dataset_Complete.__getitem__": [[43, 46], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "return", "self", ".", "nctid_lst", "[", "index", "]", ",", "self", ".", "status_lst", "[", "index", "]", ",", "self", ".", "why_stop_lst", "[", "index", "]", ",", "self", ".", "label_lst", "[", "index", "]", ",", "self", ".", "phase_lst", "[", "index", "]", ",", "self", ".", "diseases_lst", "[", "index", "]", ",", "self", ".", "icdcode_lst", "[", "index", "]", ",", "self", ".", "drugs_lst", "[", "index", "]", ",", "self", ".", "smiles_lst", "[", "index", "]", ",", "self", ".", "criteria_lst", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__init__": [[50, 53], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "smiles_lst", ",", "label_lst", ")", ":", "\n", "\t\t", "self", ".", "smiles_lst", "=", "smiles_lst", "\n", "self", ".", "label_lst", "=", "label_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__len__": [[54, 56], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "smiles_lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.ADMET_Dataset.__getitem__": [[57, 59], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "return", "self", ".", "smiles_lst", "[", "index", "]", ",", "self", ".", "label_lst", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.admet_collate_fn": [[60, 64], ["torch.utils.data.dataloader.default_collate", "int"], "function", ["None"], ["", "", "def", "admet_collate_fn", "(", "x", ")", ":", "\n", "\t", "smiles_lst", "=", "[", "i", "[", "0", "]", "for", "i", "in", "x", "]", "\n", "label_vec", "=", "default_collate", "(", "[", "int", "(", "i", "[", "1", "]", ")", "for", "i", "in", "x", "]", ")", "### shape n, ", "\n", "return", "[", "smiles_lst", ",", "label_vec", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_lst": [[66, 73], ["i.strip", "text.split"], "function", ["None"], ["", "def", "smiles_txt_to_lst", "(", "text", ")", ":", "\n", "\t", "\"\"\"\n\t\t\"['CN[C@H]1CC[C@@H](C2=CC(Cl)=C(Cl)C=C2)C2=CC=CC=C12', 'CNCCC=C1C2=CC=CC=C2CCC2=CC=CC=C12']\" \n\t\"\"\"", "\n", "text", "=", "text", "[", "1", ":", "-", "1", "]", "\n", "lst", "=", "[", "i", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "i", "in", "text", ".", "split", "(", "','", ")", "]", "\n", "return", "lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.icdcode_text_2_lst_of_lst": [[74, 81], ["text.split", "lst_lst.append", "j.strip", "i.split"], "function", ["None"], ["", "def", "icdcode_text_2_lst_of_lst", "(", "text", ")", ":", "\n", "\t", "text", "=", "text", "[", "2", ":", "-", "2", "]", "\n", "lst_lst", "=", "[", "]", "\n", "for", "i", "in", "text", ".", "split", "(", "'\", \"'", ")", ":", "\n", "\t\t", "i", "=", "i", "[", "1", ":", "-", "1", "]", "\n", "lst_lst", ".", "append", "(", "[", "j", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "for", "j", "in", "i", ".", "split", "(", "','", ")", "]", ")", "\n", "", "return", "lst_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.trial_collate_fn": [[82, 89], ["torch.utils.data.dataloader.default_collate", "dataloader.smiles_txt_to_lst", "dataloader.icdcode_text_2_lst_of_lst", "protocol_encode.protocol2feature", "int"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.icdcode_text_2_lst_of_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.protocol2feature"], ["", "def", "trial_collate_fn", "(", "x", ")", ":", "\n", "\t", "nctid_lst", "=", "[", "i", "[", "0", "]", "for", "i", "in", "x", "]", "### ['NCT00604461', ..., 'NCT00788957'] ", "\n", "label_vec", "=", "default_collate", "(", "[", "int", "(", "i", "[", "1", "]", ")", "for", "i", "in", "x", "]", ")", "### shape n, ", "\n", "smiles_lst", "=", "[", "smiles_txt_to_lst", "(", "i", "[", "2", "]", ")", "for", "i", "in", "x", "]", "\n", "icdcode_lst", "=", "[", "icdcode_text_2_lst_of_lst", "(", "i", "[", "3", "]", ")", "for", "i", "in", "x", "]", "\n", "criteria_lst", "=", "[", "protocol2feature", "(", "i", "[", "4", "]", ",", "sentence2vec", ")", "for", "i", "in", "x", "]", "\n", "return", "[", "nctid_lst", ",", "label_vec", ",", "smiles_lst", ",", "icdcode_lst", ",", "criteria_lst", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.trial_complete_collate_fn": [[90, 102], ["torch.utils.data.dataloader.default_collate", "dataloader.icdcode_text_2_lst_of_lst", "dataloader.smiles_txt_to_lst", "protocol_encode.protocol2feature", "int"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.icdcode_text_2_lst_of_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.protocol_encode.protocol2feature"], ["", "def", "trial_complete_collate_fn", "(", "x", ")", ":", "\n", "\t", "nctid_lst", "=", "[", "i", "[", "0", "]", "for", "i", "in", "x", "]", "### ['NCT00604461', ..., 'NCT00788957'] ", "\n", "status_lst", "=", "[", "i", "[", "1", "]", "for", "i", "in", "x", "]", "\n", "why_stop_lst", "=", "[", "i", "[", "2", "]", "for", "i", "in", "x", "]", "\n", "label_vec", "=", "default_collate", "(", "[", "int", "(", "i", "[", "3", "]", ")", "for", "i", "in", "x", "]", ")", "### shape n, ", "\n", "phase_lst", "=", "[", "i", "[", "4", "]", "for", "i", "in", "x", "]", "\n", "diseases_lst", "=", "[", "i", "[", "5", "]", "for", "i", "in", "x", "]", "\n", "icdcode_lst", "=", "[", "icdcode_text_2_lst_of_lst", "(", "i", "[", "6", "]", ")", "for", "i", "in", "x", "]", "\n", "drugs_lst", "=", "[", "i", "[", "7", "]", "for", "i", "in", "x", "]", "\n", "smiles_lst", "=", "[", "smiles_txt_to_lst", "(", "i", "[", "8", "]", ")", "for", "i", "in", "x", "]", "\n", "criteria_lst", "=", "[", "protocol2feature", "(", "i", "[", "9", "]", ",", "sentence2vec", ")", "for", "i", "in", "x", "]", "\n", "return", "[", "nctid_lst", ",", "status_lst", ",", "why_stop_lst", ",", "label_vec", ",", "phase_lst", ",", "diseases_lst", ",", "icdcode_lst", ",", "drugs_lst", ",", "smiles_lst", ",", "criteria_lst", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.csv_three_feature_2_dataloader": [[103, 116], ["dataloader.Trial_Dataset", "torch.utils.data.DataLoader", "open", "list", "csv.reader"], "function", ["None"], ["", "def", "csv_three_feature_2_dataloader", "(", "csvfile", ",", "shuffle", ",", "batch_size", ")", ":", "\n", "\t", "with", "open", "(", "csvfile", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "## nctid,status,why_stop,label,phase,diseases,icdcodes,drugs,smiless,criteria", "\n", "", "nctid_lst", "=", "[", "row", "[", "0", "]", "for", "row", "in", "rows", "]", "\n", "label_lst", "=", "[", "row", "[", "3", "]", "for", "row", "in", "rows", "]", "\n", "icdcode_lst", "=", "[", "row", "[", "6", "]", "for", "row", "in", "rows", "]", "\n", "drugs_lst", "=", "[", "row", "[", "7", "]", "for", "row", "in", "rows", "]", "\n", "smiles_lst", "=", "[", "row", "[", "8", "]", "for", "row", "in", "rows", "]", "\n", "criteria_lst", "=", "[", "row", "[", "9", "]", "for", "row", "in", "rows", "]", "\n", "dataset", "=", "Trial_Dataset", "(", "nctid_lst", ",", "label_lst", ",", "smiles_lst", ",", "icdcode_lst", ",", "criteria_lst", ")", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "collate_fn", "=", "trial_collate_fn", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.csv_three_feature_2_complete_dataloader": [[117, 135], ["dataloader.Trial_Dataset_Complete", "torch.utils.data.DataLoader", "open", "list", "csv.reader"], "function", ["None"], ["", "def", "csv_three_feature_2_complete_dataloader", "(", "csvfile", ",", "shuffle", ",", "batch_size", ")", ":", "\n", "\t", "with", "open", "(", "csvfile", ",", "'r'", ")", "as", "csvfile", ":", "\n", "\t\t", "rows", "=", "list", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "','", ")", ")", "[", "1", ":", "]", "\n", "", "nctid_lst", "=", "[", "row", "[", "0", "]", "for", "row", "in", "rows", "]", "\n", "status_lst", "=", "[", "row", "[", "1", "]", "for", "row", "in", "rows", "]", "\n", "why_stop_lst", "=", "[", "row", "[", "2", "]", "for", "row", "in", "rows", "]", "\n", "label_lst", "=", "[", "row", "[", "3", "]", "for", "row", "in", "rows", "]", "\n", "phase_lst", "=", "[", "row", "[", "4", "]", "for", "row", "in", "rows", "]", "\n", "diseases_lst", "=", "[", "row", "[", "5", "]", "for", "row", "in", "rows", "]", "\n", "icdcode_lst", "=", "[", "row", "[", "6", "]", "for", "row", "in", "rows", "]", "\n", "drugs_lst", "=", "[", "row", "[", "7", "]", "for", "row", "in", "rows", "]", "\n", "smiles_lst", "=", "[", "row", "[", "8", "]", "for", "row", "in", "rows", "]", "\n", "new_drugs_lst", ",", "new_smiles_lst", "=", "[", "]", ",", "[", "]", "\n", "criteria_lst", "=", "[", "row", "[", "9", "]", "for", "row", "in", "rows", "]", "\n", "dataset", "=", "Trial_Dataset_Complete", "(", "nctid_lst", ",", "status_lst", ",", "why_stop_lst", ",", "label_lst", ",", "phase_lst", ",", "\n", "diseases_lst", ",", "icdcode_lst", ",", "drugs_lst", ",", "smiles_lst", ",", "criteria_lst", ")", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "collate_fn", "=", "trial_complete_collate_fn", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_2lst": [[141, 147], ["open", "fin.readlines", "int", "line.split", "line.split"], "function", ["None"], ["", "def", "smiles_txt_to_2lst", "(", "smiles_txt_file", ")", ":", "\n", "\t", "with", "open", "(", "smiles_txt_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "smiles_lst", "=", "[", "line", ".", "split", "(", ")", "[", "0", "]", "for", "line", "in", "lines", "]", "\n", "label_lst", "=", "[", "int", "(", "line", ".", "split", "(", ")", "[", "1", "]", ")", "for", "line", "in", "lines", "]", "\n", "return", "smiles_lst", ",", "label_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.generate_admet_dataloader_lst": [[148, 163], ["enumerate", "os.path.join", "os.path.join", "dataloader.smiles_txt_to_2lst", "dataloader.smiles_txt_to_2lst", "dataloader.ADMET_Dataset", "dataloader.ADMET_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "dataloader_lst.append"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_2lst", "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.dataloader.smiles_txt_to_2lst"], ["", "def", "generate_admet_dataloader_lst", "(", "batch_size", ")", ":", "\n", "\t", "datafolder", "=", "\"data/ADMET/cooked/\"", "\n", "name_lst", "=", "[", "\"absorption\"", ",", "'distribution'", ",", "'metabolism'", ",", "'excretion'", ",", "'toxicity'", "]", "\n", "dataloader_lst", "=", "[", "]", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "name_lst", ")", ":", "\n", "\t\t", "train_file", "=", "os", ".", "path", ".", "join", "(", "datafolder", ",", "name", "+", "'_train.txt'", ")", "\n", "test_file", "=", "os", ".", "path", ".", "join", "(", "datafolder", ",", "name", "+", "'_valid.txt'", ")", "\n", "train_smiles_lst", ",", "train_label_lst", "=", "smiles_txt_to_2lst", "(", "train_file", ")", "\n", "test_smiles_lst", ",", "test_label_lst", "=", "smiles_txt_to_2lst", "(", "test_file", ")", "\n", "train_dataset", "=", "ADMET_Dataset", "(", "smiles_lst", "=", "train_smiles_lst", ",", "label_lst", "=", "train_label_lst", ")", "\n", "test_dataset", "=", "ADMET_Dataset", "(", "smiles_lst", "=", "test_smiles_lst", ",", "label_lst", "=", "test_label_lst", ")", "\n", "train_dataloader", "=", "data", ".", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "test_dataloader", "=", "data", ".", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "dataloader_lst", ".", "append", "(", "(", "train_dataloader", ",", "test_dataloader", ")", ")", "\n", "", "return", "dataloader_lst", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.pseudolabel.root2outcome": [[62, 84], ["utils.walkData", "list", "filter", "len", "float"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.walkData"], ["def", "root2outcome", "(", "root", ")", ":", "\n", "\t", "result_list", "=", "[", "]", "\n", "walkData", "(", "root", ",", "prefix", "=", "''", ",", "result_list", "=", "result_list", ")", "\n", "filter_func", "=", "lambda", "x", ":", "'p_value'", "in", "x", "[", "0", "]", "\n", "outcome_list", "=", "list", "(", "filter", "(", "filter_func", ",", "result_list", ")", ")", "\n", "if", "len", "(", "outcome_list", ")", "==", "0", ":", "\n", "\t\t", "return", "None", "\n", "", "outcome", "=", "outcome_list", "[", "0", "]", "[", "1", "]", "\n", "if", "outcome", "[", "0", "]", "==", "'<'", ":", "\n", "\t\t", "return", "1", "\n", "", "if", "outcome", "[", "0", "]", "==", "'>'", ":", "\n", "\t\t", "return", "0", "\n", "", "if", "outcome", "[", "0", "]", "==", "'='", ":", "\n", "\t\t", "outcome", "=", "outcome", "[", "1", ":", "]", "\n", "", "try", ":", "\n", "\t\t", "label", "=", "float", "(", "outcome", ")", "\n", "if", "label", "<", "0.05", ":", "\n", "\t\t\t", "return", "1", "\n", "", "else", ":", "\n", "\t\t\t", "return", "0", "\n", "", "", "except", ":", "\n", "\t\t", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.pseudolabel.xmlfile_2_label": [[85, 94], ["xml.etree.ElementTree.parse", "ET.parse.getroot", "pseudolabel.root2outcome", "tree.getroot.find().find", "tree.getroot.find"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.pseudolabel.root2outcome"], ["", "", "def", "xmlfile_2_label", "(", "xml_file", ")", ":", "\n", "\t", "tree", "=", "ET", ".", "parse", "(", "xml_file", ")", "\n", "root", "=", "tree", ".", "getroot", "(", ")", "\n", "nctid", "=", "root", ".", "find", "(", "'id_info'", ")", ".", "find", "(", "'nct_id'", ")", ".", "text", "### nctid: 'NCT00000102'", "\n", "\n", "label", "=", "root2outcome", "(", "root", ")", "\n", "label", "=", "-", "1", "if", "label", "is", "None", "else", "label", "\n", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.plot_hist": [[14, 25], ["sns.distplot", "sns.distplot", "plt.legend", "plt.savefig", "range", "range", "len", "len"], "function", ["None"], ["def", "plot_hist", "(", "prefix_name", ",", "prediction", ",", "label", ")", ":", "\n", "\t", "import", "seaborn", "as", "sns", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "figure_name", "=", "prefix_name", "+", "\"_histogram.png\"", "\n", "positive_prediction", "=", "[", "prediction", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "label", ")", ")", "if", "label", "[", "i", "]", "==", "1", "]", "\n", "negative_prediction", "=", "[", "prediction", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "label", ")", ")", "if", "label", "[", "i", "]", "==", "0", "]", "\n", "save_file_name", "=", "\"results/\"", "+", "prefix_name", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "+", "\"_positive_negative.pkl\"", "\n", "pickle", ".", "dump", "(", "(", "positive_prediction", ",", "negative_prediction", ")", ",", "open", "(", "save_file_name", ",", "'wb'", ")", ")", "\n", "sns", ".", "distplot", "(", "positive_prediction", ",", "hist", "=", "True", ",", "kde", "=", "False", ",", "bins", "=", "20", ",", "color", "=", "'blue'", ",", "label", "=", "'success'", ")", "#### bins = 50 -> 20 ", "\n", "sns", ".", "distplot", "(", "negative_prediction", ",", "hist", "=", "True", ",", "kde", "=", "False", ",", "bins", "=", "20", ",", "color", "=", "'red'", ",", "label", "=", "'fail'", ")", "\n", "plt", ".", "xlabel", "(", "\"predicted success probability\"", ",", "fontsize", "=", "24", ")", "\n", "plt", ".", "ylabel", "(", "\"frequencies\"", ",", "fontsize", "=", "25", ")", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.replace_strange_symbol": [[26, 30], ["text.replace.replace"], "function", ["None"], ["plt", ".", "legend", "(", "fontsize", "=", "21", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "# plt.show()", "\n", "plt", ".", "savefig", "(", "figure_name", ")", "\n", "return", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.walkData": [[32, 40], ["result_list.append", "root_node.getchildren", "len", "utils.walkData"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.walkData"], ["", "def", "replace_strange_symbol", "(", "text", ")", ":", "\n", "\t", "for", "i", "in", "\"[]'\\n/\"", ":", "\n", "\t\t", "text", "=", "text", ".", "replace", "(", "i", ",", "'_'", ")", "\n", "", "return", "text", "\n", "\n", "#  xml read blog:  https://blog.csdn.net/yiluochenwu/article/details/23515923 ", "\n", "", "def", "walkData", "(", "root_node", ",", "prefix", ",", "result_list", ")", ":", "\n", "\t", "temp_list", "=", "[", "prefix", "+", "'/'", "+", "root_node", ".", "tag", ",", "root_node", ".", "text", "]", "\n", "result_list", ".", "append", "(", "temp_list", ")", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.dynamic_programming": [[42, 63], ["range", "range", "range", "len", "len", "len", "range", "len", "max", "len", "len"], "function", ["None"], ["if", "len", "(", "children_node", ")", "==", "0", ":", "\n", "\t\t", "return", "\n", "", "for", "child", "in", "children_node", ":", "\n", "\t\t", "walkData", "(", "child", ",", "prefix", "=", "prefix", "+", "'/'", "+", "root_node", ".", "tag", ",", "result_list", "=", "result_list", ")", "\n", "\n", "\n", "", "", "def", "dynamic_programming", "(", "s1", ",", "s2", ")", ":", "\n", "\t", "arr2d", "=", "[", "[", "0", "for", "i", "in", "s2", "]", "for", "j", "in", "s1", "]", "\n", "if", "s1", "[", "0", "]", "==", "s2", "[", "0", "]", ":", "\n", "\t\t", "arr2d", "[", "0", "]", "[", "0", "]", "=", "1", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "s1", ")", ")", ":", "\n", "\t\t", "if", "s1", "[", "i", "]", "==", "s2", "[", "0", "]", ":", "\n", "\t\t\t", "arr2d", "[", "i", "]", "[", "0", "]", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t", "arr2d", "[", "i", "]", "[", "0", "]", "=", "arr2d", "[", "i", "-", "1", "]", "[", "0", "]", "\n", "", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "s2", ")", ")", ":", "\n", "\t\t", "if", "s2", "[", "i", "]", "==", "s1", "[", "0", "]", ":", "\n", "\t\t\t", "arr2d", "[", "0", "]", "[", "i", "]", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t", "arr2d", "[", "0", "]", "[", "i", "]", "=", "arr2d", "[", "0", "]", "[", "i", "-", "1", "]", "\n", "", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "s1", ")", ")", ":", "\n", "\t\t", "for", "j", "in", "range", "(", "1", ",", "len", "(", "s2", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.get_path_of_all_xml_file": [[65, 71], ["open", "fin.readlines", "i.strip"], "function", ["None"], ["\t\t\t\t", "arr2d", "[", "i", "]", "[", "j", "]", "=", "arr2d", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", "+", "1", "\n", "", "else", ":", "\n", "\t\t\t\t", "arr2d", "[", "i", "]", "[", "j", "]", "=", "max", "(", "arr2d", "[", "i", "-", "1", "]", "[", "j", "]", ",", "arr2d", "[", "i", "]", "[", "j", "-", "1", "]", ")", "\n", "", "", "", "return", "arr2d", "[", "len", "(", "s1", ")", "-", "1", "]", "[", "len", "(", "s2", ")", "-", "1", "]", "\n", "\n", "\n", "", "def", "get_path_of_all_xml_file", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.remove_multiple_space": [[73, 76], ["text.split"], "function", ["None"], ["with", "open", "(", "input_file", ",", "'r'", ")", "as", "fin", ":", "\n", "\t\t", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "", "input_file_lst", "=", "[", "i", ".", "strip", "(", ")", "for", "i", "in", "lines", "]", "\n", "return", "input_file_lst", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.nctid_2_xml_file_path": [[77, 82], ["os.path.join", "len"], "function", ["None"], ["\n", "\n", "", "def", "remove_multiple_space", "(", "text", ")", ":", "\n", "\t", "text", "=", "' '", ".", "join", "(", "text", ".", "split", "(", ")", ")", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.fingerprints_from_mol": [[84, 92], ["AllChem.GetMorganFingerprint", "numpy.zeros", "AllChem.GetMorganFingerprint.GetNonzeroElements().items", "int", "AllChem.GetMorganFingerprint.GetNonzeroElements"], "function", ["None"], ["\t", "assert", "len", "(", "nctid", ")", "==", "11", "\n", "prefix", "=", "nctid", "[", ":", "7", "]", "+", "\"xxxx\"", "\n", "datafolder", "=", "os", ".", "path", ".", "join", "(", "\"./ClinicalTrialGov/\"", ",", "prefix", ",", "nctid", "+", "\".xml\"", ")", "\n", "return", "datafolder", "\n", "\n", "\n", "", "def", "fingerprints_from_mol", "(", "mol", ")", ":", "\n", "    ", "fp", "=", "AllChem", ".", "GetMorganFingerprint", "(", "mol", ",", "3", ",", "useCounts", "=", "True", ",", "useFeatures", "=", "True", ")", "\n", "size", "=", "2048", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.smiles2fp": [[93, 100], ["Chem.MolFromSmiles", "utils.fingerprints_from_mol", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.fingerprints_from_mol"], ["nfp", "=", "np", ".", "zeros", "(", "(", "1", ",", "size", ")", ",", "np", ".", "int32", ")", "\n", "for", "idx", ",", "v", "in", "fp", ".", "GetNonzeroElements", "(", ")", ".", "items", "(", ")", ":", "\n", "        ", "nidx", "=", "idx", "%", "size", "\n", "nfp", "[", "0", ",", "nidx", "]", "+=", "int", "(", "v", ")", "\n", "", "return", "nfp", "\n", "\n", "", "def", "smiles2fp", "(", "smiles", ")", ":", "\n", "\t", "try", ":", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.smiles_lst2fp": [[101, 106], ["numpy.concatenate", "numpy.mean", "utils.smiles2fp"], "function", ["home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.utils.smiles2fp"], ["\t\t", "mol", "=", "Chem", ".", "MolFromSmiles", "(", "smile", ")", "\n", "fp", "=", "fingerprints_from_mol", "(", "mol", ")", "\n", "return", "fp", "\n", "", "except", ":", "\n", "\t\t", "return", "np", ".", "zeros", "(", "(", "1", ",", "2048", ")", ",", "np", ".", "int32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.futianfan_clinical-trial-outcome-prediction.benchmark.extract_from_xml.nctid2fulltext": [[8, 11], ["os.join"], "function", ["None"], ["def", "nctid2fulltext", "(", "nctid", ")", ":", "\n", "\t", "subfolder", "=", "nctid", "[", ":", "7", "]", "+", "'xxxx'", "\n", "file", "=", "op", ".", "join", "(", "folder", ",", "subfolder", ",", "nctid", "+", "'.xml'", ")", "\n", "\n"]]}