{"home.repos.pwc.inspect_result.kevin-ssy_FishNet.utils.data_aug.ColorAugmentation.__init__": [[5, 12], ["torch.Tensor", "torch.Tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "eig_vec", "=", "torch", ".", "Tensor", "(", "[", "\n", "[", "0.4009", ",", "0.7192", ",", "-", "0.5675", "]", ",", "\n", "[", "-", "0.8140", ",", "-", "0.0045", ",", "-", "0.5808", "]", ",", "\n", "[", "0.4203", ",", "-", "0.6948", ",", "-", "0.5836", "]", ",", "\n", "]", ")", "\n", "self", ".", "eig_val", "=", "torch", ".", "Tensor", "(", "[", "[", "0.2175", ",", "0.0188", ",", "0.0045", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.utils.data_aug.ColorAugmentation.__call__": [[13, 19], ["torch.mm", "tensor.size", "torch.normal", "torch.mm.view", "torch.zeros_like"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "assert", "tensor", ".", "size", "(", "0", ")", "==", "3", "\n", "alpha", "=", "torch", ".", "normal", "(", "mean", "=", "torch", ".", "zeros_like", "(", "self", ".", "eig_val", ")", ")", "*", "0.1", "\n", "quatity", "=", "torch", ".", "mm", "(", "self", ".", "eig_val", "*", "alpha", ",", "self", ".", "eig_vec", ")", "\n", "tensor", "=", "tensor", "+", "quatity", ".", "view", "(", "3", ",", "1", ",", "1", ")", "\n", "return", "tensor", "", "", "", ""]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.utils.profile.calc_flops": [[9, 83], ["profile.calc_flops.foo"], "function", ["None"], ["def", "calc_flops", "(", "model", ",", "input_size", ")", ":", "\n", "    ", "global", "USE_GPU", "\n", "\n", "def", "conv_hook", "(", "self", ",", "input", ",", "output", ")", ":", "\n", "        ", "batch_size", ",", "input_channels", ",", "input_height", ",", "input_width", "=", "input", "[", "0", "]", ".", "size", "(", ")", "\n", "output_channels", ",", "output_height", ",", "output_width", "=", "output", "[", "0", "]", ".", "size", "(", ")", "\n", "\n", "kernel_ops", "=", "self", ".", "kernel_size", "[", "0", "]", "*", "self", ".", "kernel_size", "[", "1", "]", "*", "(", "self", ".", "in_channels", "/", "self", ".", "groups", ")", "*", "(", "\n", "2", "if", "multiply_adds", "else", "1", ")", "\n", "bias_ops", "=", "1", "if", "self", ".", "bias", "is", "not", "None", "else", "0", "\n", "\n", "params", "=", "output_channels", "*", "(", "kernel_ops", "+", "bias_ops", ")", "\n", "flops", "=", "batch_size", "*", "params", "*", "output_height", "*", "output_width", "\n", "\n", "list_conv", ".", "append", "(", "flops", ")", "\n", "\n", "", "def", "linear_hook", "(", "self", ",", "input", ",", "output", ")", ":", "\n", "        ", "batch_size", "=", "input", "[", "0", "]", ".", "size", "(", "0", ")", "if", "input", "[", "0", "]", ".", "dim", "(", ")", "==", "2", "else", "1", "\n", "\n", "weight_ops", "=", "self", ".", "weight", ".", "nelement", "(", ")", "*", "(", "2", "if", "multiply_adds", "else", "1", ")", "\n", "bias_ops", "=", "self", ".", "bias", ".", "nelement", "(", ")", "\n", "\n", "flops", "=", "batch_size", "*", "(", "weight_ops", "+", "bias_ops", ")", "\n", "list_linear", ".", "append", "(", "flops", ")", "\n", "\n", "", "def", "bn_hook", "(", "self", ",", "input", ",", "output", ")", ":", "\n", "        ", "list_bn", ".", "append", "(", "input", "[", "0", "]", ".", "nelement", "(", ")", ")", "\n", "\n", "", "def", "relu_hook", "(", "self", ",", "input", ",", "output", ")", ":", "\n", "        ", "list_relu", ".", "append", "(", "input", "[", "0", "]", ".", "nelement", "(", ")", ")", "\n", "\n", "", "def", "pooling_hook", "(", "self", ",", "input", ",", "output", ")", ":", "\n", "        ", "batch_size", ",", "input_channels", ",", "input_height", ",", "input_width", "=", "input", "[", "0", "]", ".", "size", "(", ")", "\n", "output_channels", ",", "output_height", ",", "output_width", "=", "output", "[", "0", "]", ".", "size", "(", ")", "\n", "\n", "kernel_ops", "=", "self", ".", "kernel_size", "*", "self", ".", "kernel_size", "\n", "bias_ops", "=", "0", "\n", "params", "=", "output_channels", "*", "(", "kernel_ops", "+", "bias_ops", ")", "\n", "flops", "=", "batch_size", "*", "params", "*", "output_height", "*", "output_width", "\n", "\n", "list_pooling", ".", "append", "(", "flops", ")", "\n", "\n", "", "def", "foo", "(", "net", ")", ":", "\n", "        ", "childrens", "=", "list", "(", "net", ".", "children", "(", ")", ")", "\n", "if", "not", "childrens", ":", "\n", "            ", "if", "isinstance", "(", "net", ",", "torch", ".", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "net", ".", "register_forward_hook", "(", "conv_hook", ")", "\n", "", "if", "isinstance", "(", "net", ",", "torch", ".", "nn", ".", "Linear", ")", ":", "\n", "                ", "net", ".", "register_forward_hook", "(", "linear_hook", ")", "\n", "", "if", "isinstance", "(", "net", ",", "torch", ".", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "net", ".", "register_forward_hook", "(", "bn_hook", ")", "\n", "", "if", "isinstance", "(", "net", ",", "torch", ".", "nn", ".", "ReLU", ")", ":", "\n", "                ", "net", ".", "register_forward_hook", "(", "relu_hook", ")", "\n", "", "if", "isinstance", "(", "net", ",", "torch", ".", "nn", ".", "MaxPool2d", ")", "or", "isinstance", "(", "net", ",", "torch", ".", "nn", ".", "AvgPool2d", ")", ":", "\n", "                ", "net", ".", "register_forward_hook", "(", "pooling_hook", ")", "\n", "", "return", "\n", "", "for", "c", "in", "childrens", ":", "\n", "            ", "foo", "(", "c", ")", "\n", "\n", "", "", "multiply_adds", "=", "False", "\n", "list_conv", ",", "list_bn", ",", "list_relu", ",", "list_linear", ",", "list_pooling", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "foo", "(", "model", ")", "\n", "if", "'0.4.'", "in", "torch", ".", "__version__", "or", "'1.0'", "in", "torch", ".", "__version__", ":", "\n", "        ", "if", "USE_GPU", ":", "\n", "            ", "input", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "torch", ".", "rand", "(", "2", ",", "3", ",", "input_size", ",", "input_size", ")", ".", "cuda", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "input", "=", "torch", ".", "FloatTensor", "(", "torch", ".", "rand", "(", "2", ",", "3", ",", "input_size", ",", "input_size", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "input", "=", "Variable", "(", "torch", ".", "rand", "(", "2", ",", "3", ",", "input_size", ",", "input_size", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "_", "=", "model", "(", "input", ")", "\n", "\n", "total_flops", "=", "(", "sum", "(", "list_conv", ")", "+", "sum", "(", "list_linear", ")", "+", "sum", "(", "list_bn", ")", "+", "sum", "(", "list_relu", ")", "+", "sum", "(", "list_pooling", ")", ")", "\n", "\n", "print", "(", "'  + Number of FLOPs: %.2fG'", "%", "(", "total_flops", "/", "1e9", "/", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.utils.profile.count_params": [[85, 95], ["profile.calc_flops", "filter", "sum", "print", "open", "fm.write", "model.parameters", "str", "numpy.prod", "p.size"], "function", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.utils.profile.calc_flops"], ["", "def", "count_params", "(", "model", ",", "input_size", "=", "224", ")", ":", "\n", "# param_sum = 0", "\n", "    ", "with", "open", "(", "'models.txt'", ",", "'w'", ")", "as", "fm", ":", "\n", "        ", "fm", ".", "write", "(", "str", "(", "model", ")", ")", "\n", "", "calc_flops", "(", "model", ",", "input_size", ")", "\n", "\n", "model_parameters", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", "\n", "params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model_parameters", "]", ")", "\n", "\n", "print", "(", "'The network has {} params.'", ".", "format", "(", "params", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish.__init__": [[15, 30], ["nn.Module.__init__", "nn.Upsample", "nn.MaxPool2d", "len", "fishnet.Fish._make_fish"], "methods", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fish_block.Bottleneck.__init__", "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_fish"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_cls", "=", "1000", ",", "num_down_sample", "=", "5", ",", "num_up_sample", "=", "3", ",", "trans_map", "=", "(", "2", ",", "1", ",", "0", ",", "6", ",", "5", ",", "4", ")", ",", "\n", "network_planes", "=", "None", ",", "num_res_blks", "=", "None", ",", "num_trans_blks", "=", "None", ")", ":", "\n", "        ", "super", "(", "Fish", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "block", "=", "block", "\n", "self", ".", "trans_map", "=", "trans_map", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ")", "\n", "self", ".", "down_sample", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "num_cls", "=", "num_cls", "\n", "self", ".", "num_down", "=", "num_down_sample", "\n", "self", ".", "num_up", "=", "num_up_sample", "\n", "self", ".", "network_planes", "=", "network_planes", "[", "1", ":", "]", "\n", "self", ".", "depth", "=", "len", "(", "self", ".", "network_planes", ")", "\n", "self", ".", "num_trans_blks", "=", "num_trans_blks", "\n", "self", ".", "num_res_blks", "=", "num_res_blks", "\n", "self", ".", "fish", "=", "self", ".", "_make_fish", "(", "network_planes", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_score": [[31, 44], ["nn.BatchNorm2d", "nn.ReLU", "nn.Conv2d", "nn.BatchNorm2d", "nn.Sequential", "nn.Sequential", "nn.Conv2d", "nn.AdaptiveAvgPool2d", "nn.Conv2d"], "methods", ["None"], ["", "def", "_make_score", "(", "self", ",", "in_ch", ",", "out_ch", "=", "1000", ",", "has_pool", "=", "False", ")", ":", "\n", "        ", "bn", "=", "nn", ".", "BatchNorm2d", "(", "in_ch", ")", "\n", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "conv_trans", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "in_ch", "//", "2", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "bn_out", "=", "nn", ".", "BatchNorm2d", "(", "in_ch", "//", "2", ")", "\n", "conv", "=", "nn", ".", "Sequential", "(", "bn", ",", "relu", ",", "conv_trans", ",", "bn_out", ",", "relu", ")", "\n", "if", "has_pool", ":", "\n", "            ", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_ch", "//", "2", ",", "out_ch", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "", "else", ":", "\n", "            ", "fc", "=", "nn", ".", "Conv2d", "(", "in_ch", "//", "2", ",", "out_ch", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "", "return", "[", "conv", ",", "fc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_se_block": [[45, 56], ["nn.BatchNorm2d", "nn.Conv2d", "nn.Conv2d", "nn.Sequential", "nn.ReLU", "nn.AdaptiveAvgPool2d", "nn.ReLU", "nn.Sigmoid"], "methods", ["None"], ["", "def", "_make_se_block", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "bn", "=", "nn", ".", "BatchNorm2d", "(", "in_ch", ")", "\n", "sq_conv", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", "//", "16", ",", "kernel_size", "=", "1", ")", "\n", "ex_conv", "=", "nn", ".", "Conv2d", "(", "out_ch", "//", "16", ",", "out_ch", ",", "kernel_size", "=", "1", ")", "\n", "return", "nn", ".", "Sequential", "(", "bn", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "sq_conv", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "ex_conv", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_residual_block": [[57, 67], ["range", "nn.Sequential", "layers.append", "layers.append", "layers.append", "fishnet.Fish.block", "fishnet.Fish.block", "fishnet.Fish.block"], "methods", ["None"], ["", "def", "_make_residual_block", "(", "self", ",", "inplanes", ",", "outplanes", ",", "nstage", ",", "is_up", "=", "False", ",", "k", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "\n", "if", "is_up", ":", "\n", "            ", "layers", ".", "append", "(", "self", ".", "block", "(", "inplanes", ",", "outplanes", ",", "mode", "=", "'UP'", ",", "dilation", "=", "dilation", ",", "k", "=", "k", ")", ")", "\n", "", "else", ":", "\n", "            ", "layers", ".", "append", "(", "self", ".", "block", "(", "inplanes", ",", "outplanes", ",", "stride", "=", "1", ")", ")", "\n", "", "for", "i", "in", "range", "(", "1", ",", "nstage", ")", ":", "\n", "            ", "layers", ".", "append", "(", "self", ".", "block", "(", "outplanes", ",", "outplanes", ",", "stride", "=", "1", ",", "dilation", "=", "dilation", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_stage": [[68, 91], ["sample_block.append", "nn.ModuleList", "sample_block.extend", "fishnet.Fish._make_residual_block", "fishnet.Fish._make_residual_block", "sample_block.append", "sample_block.append", "fishnet.Fish._make_score", "fishnet.Fish._make_residual_block", "sample_block.append"], "methods", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_residual_block", "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_residual_block", "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_score", "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_residual_block"], ["", "def", "_make_stage", "(", "self", ",", "is_down_sample", ",", "inplanes", ",", "outplanes", ",", "n_blk", ",", "has_trans", "=", "True", ",", "\n", "has_score", "=", "False", ",", "trans_planes", "=", "0", ",", "no_sampling", "=", "False", ",", "num_trans", "=", "2", ",", "**", "kwargs", ")", ":", "\n", "        ", "sample_block", "=", "[", "]", "\n", "if", "has_score", ":", "\n", "            ", "sample_block", ".", "extend", "(", "self", ".", "_make_score", "(", "outplanes", ",", "outplanes", "*", "2", ",", "has_pool", "=", "False", ")", ")", "\n", "\n", "", "if", "no_sampling", "or", "is_down_sample", ":", "\n", "            ", "res_block", "=", "self", ".", "_make_residual_block", "(", "inplanes", ",", "outplanes", ",", "n_blk", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "res_block", "=", "self", ".", "_make_residual_block", "(", "inplanes", ",", "outplanes", ",", "n_blk", ",", "is_up", "=", "True", ",", "**", "kwargs", ")", "\n", "\n", "", "sample_block", ".", "append", "(", "res_block", ")", "\n", "\n", "if", "has_trans", ":", "\n", "            ", "trans_in_planes", "=", "self", ".", "in_planes", "if", "trans_planes", "==", "0", "else", "trans_planes", "\n", "sample_block", ".", "append", "(", "self", ".", "_make_residual_block", "(", "trans_in_planes", ",", "trans_in_planes", ",", "num_trans", ")", ")", "\n", "\n", "", "if", "not", "no_sampling", "and", "is_down_sample", ":", "\n", "            ", "sample_block", ".", "append", "(", "self", ".", "down_sample", ")", "\n", "", "elif", "not", "no_sampling", ":", "# Up-Sample", "\n", "            ", "sample_block", ".", "append", "(", "self", ".", "upsample", ")", "\n", "\n", "", "return", "nn", ".", "ModuleList", "(", "sample_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_fish": [[92, 138], ["range", "nn.ModuleList", "fishnet.Fish._make_stage", "fish.append", "fishnet.Fish._make_fish.get_cur_planes"], "methods", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._make_stage"], ["", "def", "_make_fish", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "def", "get_trans_planes", "(", "index", ")", ":", "\n", "            ", "map_id", "=", "self", ".", "trans_map", "[", "index", "-", "self", ".", "num_down", "-", "1", "]", "-", "1", "\n", "p", "=", "in_planes", "if", "map_id", "==", "-", "1", "else", "cated_planes", "[", "map_id", "]", "\n", "return", "p", "\n", "\n", "", "def", "get_trans_blk", "(", "index", ")", ":", "\n", "            ", "return", "self", ".", "num_trans_blks", "[", "index", "-", "self", ".", "num_down", "-", "1", "]", "\n", "\n", "", "def", "get_cur_planes", "(", "index", ")", ":", "\n", "            ", "return", "self", ".", "network_planes", "[", "index", "]", "\n", "\n", "", "def", "get_blk_num", "(", "index", ")", ":", "\n", "            ", "return", "self", ".", "num_res_blks", "[", "index", "]", "\n", "\n", "", "cated_planes", ",", "fish", "=", "[", "in_planes", "]", "*", "self", ".", "depth", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "depth", ")", ":", "\n", "# even num for down-sample, odd for up-sample", "\n", "            ", "is_down", ",", "has_trans", ",", "no_sampling", "=", "i", "not", "in", "range", "(", "self", ".", "num_down", ",", "self", ".", "num_down", "+", "self", ".", "num_up", "+", "1", ")", ",", "i", ">", "self", ".", "num_down", ",", "i", "==", "self", ".", "num_down", "\n", "cur_planes", ",", "trans_planes", ",", "cur_blocks", ",", "num_trans", "=", "get_cur_planes", "(", "i", ")", ",", "get_trans_planes", "(", "i", ")", ",", "get_blk_num", "(", "i", ")", ",", "get_trans_blk", "(", "i", ")", "\n", "\n", "stg_args", "=", "[", "is_down", ",", "cated_planes", "[", "i", "-", "1", "]", ",", "cur_planes", ",", "cur_blocks", "]", "\n", "\n", "if", "is_down", "or", "no_sampling", ":", "\n", "                ", "k", ",", "dilation", "=", "1", ",", "1", "\n", "", "else", ":", "\n", "                ", "k", ",", "dilation", "=", "cated_planes", "[", "i", "-", "1", "]", "//", "cur_planes", ",", "2", "**", "(", "i", "-", "self", ".", "num_down", "-", "1", ")", "\n", "\n", "", "sample_block", "=", "self", ".", "_make_stage", "(", "*", "stg_args", ",", "has_trans", "=", "has_trans", ",", "trans_planes", "=", "trans_planes", ",", "\n", "has_score", "=", "(", "i", "==", "self", ".", "num_down", ")", ",", "num_trans", "=", "num_trans", ",", "k", "=", "k", ",", "dilation", "=", "dilation", ",", "\n", "no_sampling", "=", "no_sampling", ")", "\n", "if", "i", "==", "self", ".", "depth", "-", "1", ":", "\n", "                ", "sample_block", ".", "extend", "(", "self", ".", "_make_score", "(", "cur_planes", "+", "trans_planes", ",", "out_ch", "=", "self", ".", "num_cls", ",", "has_pool", "=", "True", ")", ")", "\n", "", "elif", "i", "==", "self", ".", "num_down", ":", "\n", "                ", "sample_block", ".", "append", "(", "nn", ".", "Sequential", "(", "self", ".", "_make_se_block", "(", "cur_planes", "*", "2", ",", "cur_planes", ")", ")", ")", "\n", "\n", "", "if", "i", "==", "self", ".", "num_down", "-", "1", ":", "\n", "                ", "cated_planes", "[", "i", "]", "=", "cur_planes", "*", "2", "\n", "", "elif", "has_trans", ":", "\n", "                ", "cated_planes", "[", "i", "]", "=", "cur_planes", "+", "trans_planes", "\n", "", "else", ":", "\n", "                ", "cated_planes", "[", "i", "]", "=", "cur_planes", "\n", "", "fish", ".", "append", "(", "sample_block", ")", "\n", "", "return", "nn", ".", "ModuleList", "(", "fish", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._fish_forward": [[139, 176], ["torch.cat", "fishnet.Fish._fish_forward.stage_factory"], "methods", ["None"], ["", "def", "_fish_forward", "(", "self", ",", "all_feat", ")", ":", "\n", "        ", "def", "_concat", "(", "a", ",", "b", ")", ":", "\n", "            ", "return", "torch", ".", "cat", "(", "[", "a", ",", "b", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "def", "stage_factory", "(", "*", "blks", ")", ":", "\n", "            ", "def", "stage_forward", "(", "*", "inputs", ")", ":", "\n", "                ", "if", "stg_id", "<", "self", ".", "num_down", ":", "# tail", "\n", "                    ", "tail_blk", "=", "nn", ".", "Sequential", "(", "*", "blks", "[", ":", "2", "]", ")", "\n", "return", "tail_blk", "(", "*", "inputs", ")", "\n", "", "elif", "stg_id", "==", "self", ".", "num_down", ":", "\n", "                    ", "score_blks", "=", "nn", ".", "Sequential", "(", "*", "blks", "[", ":", "2", "]", ")", "\n", "score_feat", "=", "score_blks", "(", "inputs", "[", "0", "]", ")", "\n", "att_feat", "=", "blks", "[", "3", "]", "(", "score_feat", ")", "\n", "return", "blks", "[", "2", "]", "(", "score_feat", ")", "*", "att_feat", "+", "att_feat", "\n", "", "else", ":", "# refine", "\n", "                    ", "feat_trunk", "=", "blks", "[", "2", "]", "(", "blks", "[", "0", "]", "(", "inputs", "[", "0", "]", ")", ")", "\n", "feat_branch", "=", "blks", "[", "1", "]", "(", "inputs", "[", "1", "]", ")", "\n", "", "return", "_concat", "(", "feat_trunk", ",", "feat_branch", ")", "\n", "", "return", "stage_forward", "\n", "\n", "", "stg_id", "=", "0", "\n", "# tail:", "\n", "while", "stg_id", "<", "self", ".", "depth", ":", "\n", "            ", "stg_blk", "=", "stage_factory", "(", "*", "self", ".", "fish", "[", "stg_id", "]", ")", "\n", "if", "stg_id", "<=", "self", ".", "num_down", ":", "\n", "                ", "in_feat", "=", "[", "all_feat", "[", "stg_id", "]", "]", "\n", "", "else", ":", "\n", "                ", "trans_id", "=", "self", ".", "trans_map", "[", "stg_id", "-", "self", ".", "num_down", "-", "1", "]", "\n", "in_feat", "=", "[", "all_feat", "[", "stg_id", "]", ",", "all_feat", "[", "trans_id", "]", "]", "\n", "\n", "", "all_feat", "[", "stg_id", "+", "1", "]", "=", "stg_blk", "(", "*", "in_feat", ")", "\n", "stg_id", "+=", "1", "\n", "# loop exit", "\n", "if", "stg_id", "==", "self", ".", "depth", ":", "\n", "                ", "score_feat", "=", "self", ".", "fish", "[", "self", ".", "depth", "-", "1", "]", "[", "-", "2", "]", "(", "all_feat", "[", "-", "1", "]", ")", "\n", "score", "=", "self", ".", "fish", "[", "self", ".", "depth", "-", "1", "]", "[", "-", "1", "]", "(", "score_feat", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish.forward": [[177, 181], ["fishnet.Fish._fish_forward"], "methods", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.Fish._fish_forward"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "all_feat", "=", "[", "None", "]", "*", "(", "self", ".", "depth", "+", "1", ")", "\n", "all_feat", "[", "0", "]", "=", "x", "\n", "return", "self", ".", "_fish_forward", "(", "all_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.FishNet.__init__": [[184, 196], ["nn.Module.__init__", "fishnet.FishNet._conv_bn_relu", "fishnet.FishNet._conv_bn_relu", "fishnet.FishNet._conv_bn_relu", "nn.MaxPool2d", "fishnet.Fish", "fishnet.FishNet._init_weights"], "methods", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fish_block.Bottleneck.__init__", "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.FishNet._conv_bn_relu", "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.FishNet._conv_bn_relu", "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.FishNet._conv_bn_relu", "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.FishNet._init_weights"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "FishNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inplanes", "=", "kwargs", "[", "'network_planes'", "]", "[", "0", "]", "\n", "# resolution: 224x224", "\n", "self", ".", "conv1", "=", "self", ".", "_conv_bn_relu", "(", "3", ",", "inplanes", "//", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv2", "=", "self", ".", "_conv_bn_relu", "(", "inplanes", "//", "2", ",", "inplanes", "//", "2", ")", "\n", "self", ".", "conv3", "=", "self", ".", "_conv_bn_relu", "(", "inplanes", "//", "2", ",", "inplanes", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", "\n", "# construct fish, resolution 56x56", "\n", "self", ".", "fish", "=", "Fish", "(", "block", ",", "**", "kwargs", ")", "\n", "self", ".", "_init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.FishNet._conv_bn_relu": [[197, 201], ["nn.Sequential", "nn.Conv2d", "nn.BatchNorm2d", "nn.ReLU"], "methods", ["None"], ["", "def", "_conv_bn_relu", "(", "self", ",", "in_ch", ",", "out_ch", ",", "stride", "=", "1", ")", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.FishNet._init_weights": [[202, 210], ["fishnet.FishNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.FishNet.forward": [[211, 221], ["fishnet.FishNet.conv1", "fishnet.FishNet.conv2", "fishnet.FishNet.conv3", "fishnet.FishNet.pool1", "fishnet.FishNet.fish", "fishnet.FishNet.view", "fishnet.FishNet.size"], "methods", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.fish"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "pool1", "(", "x", ")", "\n", "score", "=", "self", ".", "fish", "(", "x", ")", "\n", "# 1*1 output", "\n", "out", "=", "score", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.fish": [[223, 225], ["fishnet.FishNet"], "function", ["None"], ["", "", "def", "fish", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "FishNet", "(", "Bottleneck", ",", "**", "kwargs", ")", "", "", ""]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fish_block.Bottleneck.__init__": [[5, 42], ["torch.Module.__init__", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Sequential", "torch.BatchNorm2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fish_block.Bottleneck.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "mode", "=", "'NORM'", ",", "k", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        Pre-act residual block, the middle transformations are bottle-necked\n        :param inplanes:\n        :param planes:\n        :param stride:\n        :param downsample:\n        :param mode: NORM | UP\n        :param k: times of additive\n        \"\"\"", "\n", "\n", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "k", "=", "k", "\n", "\n", "btnk_ch", "=", "planes", "//", "4", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "btnk_ch", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "btnk_ch", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "btnk_ch", ",", "btnk_ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "dilation", ",", "\n", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "btnk_ch", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "btnk_ch", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "if", "mode", "==", "'UP'", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "", "elif", "inplanes", "!=", "planes", "or", "stride", ">", "1", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "inplanes", ")", ",", "\n", "self", ".", "relu", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fish_block.Bottleneck._pre_act_forward": [[43, 66], ["fish_block.Bottleneck.bn1", "fish_block.Bottleneck.relu", "fish_block.Bottleneck.conv1", "fish_block.Bottleneck.bn2", "fish_block.Bottleneck.relu", "fish_block.Bottleneck.conv2", "fish_block.Bottleneck.bn3", "fish_block.Bottleneck.relu", "fish_block.Bottleneck.conv3", "fish_block.Bottleneck.squeeze_idt", "fish_block.Bottleneck.shortcut"], "methods", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fish_block.Bottleneck.squeeze_idt"], ["", "", "def", "_pre_act_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "bn1", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'UP'", ":", "\n", "            ", "residual", "=", "self", ".", "squeeze_idt", "(", "x", ")", "\n", "", "elif", "self", ".", "shortcut", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "shortcut", "(", "residual", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fish_block.Bottleneck.squeeze_idt": [[67, 70], ["idt.size", "idt.view().sum", "idt.view"], "methods", ["None"], ["", "def", "squeeze_idt", "(", "self", ",", "idt", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "idt", ".", "size", "(", ")", "\n", "return", "idt", ".", "view", "(", "n", ",", "c", "//", "self", ".", "k", ",", "self", ".", "k", ",", "h", ",", "w", ")", ".", "sum", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fish_block.Bottleneck.forward": [[71, 74], ["fish_block.Bottleneck._pre_act_forward"], "methods", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fish_block.Bottleneck._pre_act_forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "_pre_act_forward", "(", "x", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.net_factory.fishnet99": [[4, 22], ["fishnet.fish"], "function", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.fish"], ["def", "fishnet99", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n\n    :return:\n    \"\"\"", "\n", "net_cfg", "=", "{", "\n", "#  input size:   [224, 56, 28,  14  |  7,   7,  14,  28 | 56,   28,  14]", "\n", "# output size:   [56,  28, 14,   7  |  7,  14,  28,  56 | 28,   14,   7]", "\n", "#                  |    |    |   |     |    |    |    |    |     |    |", "\n", "'network_planes'", ":", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", ",", "512", ",", "384", ",", "256", ",", "320", ",", "832", ",", "1600", "]", ",", "\n", "'num_res_blks'", ":", "[", "2", ",", "2", ",", "6", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", "]", ",", "\n", "'num_trans_blks'", ":", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "4", "]", ",", "\n", "'num_cls'", ":", "1000", ",", "\n", "'num_down_sample'", ":", "3", ",", "\n", "'num_up_sample'", ":", "3", ",", "\n", "}", "\n", "cfg", "=", "{", "**", "net_cfg", ",", "**", "kwargs", "}", "\n", "return", "fish", "(", "**", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.net_factory.fishnet150": [[24, 42], ["fishnet.fish"], "function", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.fish"], ["", "def", "fishnet150", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n\n    :return:\n    \"\"\"", "\n", "net_cfg", "=", "{", "\n", "#  input size:   [224, 56, 28,  14  |  7,   7,  14,  28 | 56,   28,  14]", "\n", "# output size:   [56,  28, 14,   7  |  7,  14,  28,  56 | 28,   14,   7]", "\n", "#                  |    |    |   |     |    |    |    |    |     |    |", "\n", "'network_planes'", ":", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", ",", "512", ",", "384", ",", "256", ",", "320", ",", "832", ",", "1600", "]", ",", "\n", "'num_res_blks'", ":", "[", "2", ",", "4", ",", "8", ",", "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "4", "]", ",", "\n", "'num_trans_blks'", ":", "[", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "4", "]", ",", "\n", "'num_cls'", ":", "1000", ",", "\n", "'num_down_sample'", ":", "3", ",", "\n", "'num_up_sample'", ":", "3", ",", "\n", "}", "\n", "cfg", "=", "{", "**", "net_cfg", ",", "**", "kwargs", "}", "\n", "return", "fish", "(", "**", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.net_factory.fishnet201": [[44, 62], ["fishnet.fish"], "function", ["home.repos.pwc.inspect_result.kevin-ssy_FishNet.models.fishnet.fish"], ["", "def", "fishnet201", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n\n    :return:\n    \"\"\"", "\n", "net_cfg", "=", "{", "\n", "#  input size:   [224, 56, 28,  14  |  7,   7,  14,  28 | 56,   28,  14]", "\n", "# output size:   [56,  28, 14,   7  |  7,  14,  28,  56 | 28,   14,   7]", "\n", "#                  |    |    |   |     |    |    |    |    |     |    |", "\n", "'network_planes'", ":", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", ",", "512", ",", "384", ",", "256", ",", "320", ",", "832", ",", "1600", "]", ",", "\n", "'num_res_blks'", ":", "[", "3", ",", "4", ",", "12", ",", "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "10", "]", ",", "\n", "'num_trans_blks'", ":", "[", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "9", "]", ",", "\n", "'num_cls'", ":", "1000", ",", "\n", "'num_down_sample'", ":", "3", ",", "\n", "'num_up_sample'", ":", "3", ",", "\n", "}", "\n", "cfg", "=", "{", "**", "net_cfg", ",", "**", "kwargs", "}", "\n", "return", "fish", "(", "**", "cfg", ")", "\n", "", ""]]}