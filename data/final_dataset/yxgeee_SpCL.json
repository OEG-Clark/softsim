{"home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_usl.get_data": [[36, 40], ["os.join", "spcl.datasets.create"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.__init__.create"], ["def", "get_data", "(", "name", ",", "data_dir", ")", ":", "\n", "    ", "root", "=", "osp", ".", "join", "(", "data_dir", ",", "name", ")", "\n", "dataset", "=", "datasets", ".", "create", "(", "name", ",", "root", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_usl.get_train_loader": [[41, 68], ["spcl.utils.data.transforms.Normalize", "spcl.utils.data.transforms.Compose", "spcl.utils.data.IterLoader", "sorted", "sorted", "spcl.utils.data.sampler.RandomMultipleGallerySampler", "torch.utils.data.DataLoader", "spcl.utils.data.transforms.Resize", "spcl.utils.data.transforms.RandomHorizontalFlip", "spcl.utils.data.transforms.Pad", "spcl.utils.data.transforms.RandomCrop", "spcl.utils.data.transforms.ToTensor", "spcl.utils.data.transforms.RandomErasing", "spcl.utils.data.preprocessor.Preprocessor"], "function", ["None"], ["", "def", "get_train_loader", "(", "args", ",", "dataset", ",", "height", ",", "width", ",", "batch_size", ",", "workers", ",", "\n", "num_instances", ",", "iters", ",", "trainset", "=", "None", ")", ":", "\n", "\n", "    ", "normalizer", "=", "T", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "train_transformer", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Resize", "(", "(", "height", ",", "width", ")", ",", "interpolation", "=", "3", ")", ",", "\n", "T", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ",", "\n", "T", ".", "Pad", "(", "10", ")", ",", "\n", "T", ".", "RandomCrop", "(", "(", "height", ",", "width", ")", ")", ",", "\n", "T", ".", "ToTensor", "(", ")", ",", "\n", "normalizer", ",", "\n", "T", ".", "RandomErasing", "(", "probability", "=", "0.5", ",", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", "\n", "]", ")", "\n", "\n", "train_set", "=", "sorted", "(", "dataset", ".", "train", ")", "if", "trainset", "is", "None", "else", "sorted", "(", "trainset", ")", "\n", "rmgs_flag", "=", "num_instances", ">", "0", "\n", "if", "rmgs_flag", ":", "\n", "        ", "sampler", "=", "RandomMultipleGallerySampler", "(", "train_set", ",", "num_instances", ")", "\n", "", "else", ":", "\n", "        ", "sampler", "=", "None", "\n", "", "train_loader", "=", "IterLoader", "(", "\n", "DataLoader", "(", "Preprocessor", "(", "train_set", ",", "root", "=", "dataset", ".", "images_dir", ",", "transform", "=", "train_transformer", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "num_workers", "=", "workers", ",", "sampler", "=", "sampler", ",", "\n", "shuffle", "=", "not", "rmgs_flag", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", ",", "length", "=", "iters", ")", "\n", "\n", "return", "train_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_usl.get_test_loader": [[69, 88], ["spcl.utils.data.transforms.Normalize", "spcl.utils.data.transforms.Compose", "torch.utils.data.DataLoader", "list", "spcl.utils.data.preprocessor.Preprocessor", "spcl.utils.data.transforms.Resize", "spcl.utils.data.transforms.ToTensor", "set", "set"], "function", ["None"], ["", "def", "get_test_loader", "(", "dataset", ",", "height", ",", "width", ",", "batch_size", ",", "workers", ",", "testset", "=", "None", ")", ":", "\n", "    ", "normalizer", "=", "T", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "test_transformer", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Resize", "(", "(", "height", ",", "width", ")", ",", "interpolation", "=", "3", ")", ",", "\n", "T", ".", "ToTensor", "(", ")", ",", "\n", "normalizer", "\n", "]", ")", "\n", "\n", "if", "(", "testset", "is", "None", ")", ":", "\n", "        ", "testset", "=", "list", "(", "set", "(", "dataset", ".", "query", ")", "|", "set", "(", "dataset", ".", "gallery", ")", ")", "\n", "\n", "", "test_loader", "=", "DataLoader", "(", "\n", "Preprocessor", "(", "testset", ",", "root", "=", "dataset", ".", "images_dir", ",", "transform", "=", "test_transformer", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "num_workers", "=", "workers", ",", "\n", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ")", "\n", "\n", "return", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_usl.create_model": [[89, 95], ["spcl.models.create", "nn.DataParallel.cuda", "torch.nn.DataParallel"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.__init__.create"], ["", "def", "create_model", "(", "args", ")", ":", "\n", "    ", "model", "=", "models", ".", "create", "(", "args", ".", "arch", ",", "num_features", "=", "args", ".", "features", ",", "norm", "=", "True", ",", "dropout", "=", "args", ".", "dropout", ",", "num_classes", "=", "0", ")", "\n", "# use CUDA", "\n", "model", ".", "cuda", "(", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_usl.main": [[97, 107], ["parser.parse_args", "spcl_train_usl.main_worker", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.main_worker"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "deterministic", "=", "True", "\n", "\n", "", "main_worker", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_usl.main_worker": [[109, 268], ["time.monotonic", "spcl.utils.logging.Logger", "print", "print", "spcl_train_usl.get_data", "spcl_train_usl.get_test_loader", "spcl_train_usl.create_model", "spcl.models.hm.HybridMemory().cuda", "print", "spcl_train_usl.get_test_loader", "spcl.evaluators.extract_features", "torch.cat", "torch.cat", "torch.normalize().cuda", "spcl.evaluators.Evaluator", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "spcl.trainers.SpCLTrainer_USL", "range", "print", "spcl.utils.serialization.load_checkpoint", "create_model.load_state_dict", "spcl.evaluators.Evaluator.evaluate", "time.monotonic", "print", "os.join", "print", "HybridMemory().cuda.features.clone", "spcl.utils.faiss_rerank.compute_jaccard_distance", "sklearn.cluster.DBSCAN.fit_predict", "sklearn.cluster.DBSCAN.fit_predict", "sklearn.cluster.DBSCAN.fit_predict", "spcl_train_usl.main_worker.generate_pseudo_labels"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.get_data", "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.get_test_loader", "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.create_model", "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.get_test_loader", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.extract_features", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.serialization.load_checkpoint", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.Evaluator.evaluate", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_rerank.compute_jaccard_distance"], ["", "def", "main_worker", "(", "args", ")", ":", "\n", "    ", "global", "start_epoch", ",", "best_mAP", "\n", "start_time", "=", "time", ".", "monotonic", "(", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "sys", ".", "stdout", "=", "Logger", "(", "osp", ".", "join", "(", "args", ".", "logs_dir", ",", "'log.txt'", ")", ")", "\n", "print", "(", "\"==========\\nArgs:{}\\n==========\"", ".", "format", "(", "args", ")", ")", "\n", "\n", "# Create datasets", "\n", "iters", "=", "args", ".", "iters", "if", "(", "args", ".", "iters", ">", "0", ")", "else", "None", "\n", "print", "(", "\"==> Load unlabeled dataset\"", ")", "\n", "dataset", "=", "get_data", "(", "args", ".", "dataset", ",", "args", ".", "data_dir", ")", "\n", "test_loader", "=", "get_test_loader", "(", "dataset", ",", "args", ".", "height", ",", "args", ".", "width", ",", "args", ".", "batch_size", ",", "args", ".", "workers", ")", "\n", "\n", "# Create model", "\n", "model", "=", "create_model", "(", "args", ")", "\n", "\n", "# Create hybrid memory", "\n", "memory", "=", "HybridMemory", "(", "model", ".", "module", ".", "num_features", ",", "len", "(", "dataset", ".", "train", ")", ",", "\n", "temp", "=", "args", ".", "temp", ",", "momentum", "=", "args", ".", "momentum", ")", ".", "cuda", "(", ")", "\n", "\n", "# Initialize target-domain instance features", "\n", "print", "(", "\"==> Initialize instance features in the hybrid memory\"", ")", "\n", "cluster_loader", "=", "get_test_loader", "(", "dataset", ",", "args", ".", "height", ",", "args", ".", "width", ",", "\n", "args", ".", "batch_size", ",", "args", ".", "workers", ",", "testset", "=", "sorted", "(", "dataset", ".", "train", ")", ")", "\n", "features", ",", "_", "=", "extract_features", "(", "model", ",", "cluster_loader", ",", "print_freq", "=", "50", ")", "\n", "features", "=", "torch", ".", "cat", "(", "[", "features", "[", "f", "]", ".", "unsqueeze", "(", "0", ")", "for", "f", ",", "_", ",", "_", "in", "sorted", "(", "dataset", ".", "train", ")", "]", ",", "0", ")", "\n", "memory", ".", "features", "=", "F", ".", "normalize", "(", "features", ",", "dim", "=", "1", ")", ".", "cuda", "(", ")", "\n", "del", "cluster_loader", ",", "features", "\n", "\n", "# Evaluator", "\n", "evaluator", "=", "Evaluator", "(", "model", ")", "\n", "\n", "# Optimizer", "\n", "params", "=", "[", "{", "\"params\"", ":", "[", "value", "]", "}", "for", "_", ",", "value", "in", "model", ".", "named_parameters", "(", ")", "if", "value", ".", "requires_grad", "]", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer", ",", "step_size", "=", "args", ".", "step_size", ",", "gamma", "=", "0.1", ")", "\n", "\n", "# Trainer", "\n", "trainer", "=", "SpCLTrainer_USL", "(", "model", ",", "memory", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "# Calculate distance", "\n", "        ", "print", "(", "'==> Create pseudo labels for unlabeled data with self-paced policy'", ")", "\n", "features", "=", "memory", ".", "features", ".", "clone", "(", ")", "\n", "rerank_dist", "=", "compute_jaccard_distance", "(", "features", ",", "k1", "=", "args", ".", "k1", ",", "k2", "=", "args", ".", "k2", ")", "\n", "del", "features", "\n", "\n", "if", "(", "epoch", "==", "0", ")", ":", "\n", "# DBSCAN cluster", "\n", "            ", "eps", "=", "args", ".", "eps", "\n", "eps_tight", "=", "eps", "-", "args", ".", "eps_gap", "\n", "eps_loose", "=", "eps", "+", "args", ".", "eps_gap", "\n", "print", "(", "'Clustering criterion: eps: {:.3f}, eps_tight: {:.3f}, eps_loose: {:.3f}'", ".", "format", "(", "eps", ",", "eps_tight", ",", "eps_loose", ")", ")", "\n", "cluster", "=", "DBSCAN", "(", "eps", "=", "eps", ",", "min_samples", "=", "4", ",", "metric", "=", "'precomputed'", ",", "n_jobs", "=", "-", "1", ")", "\n", "cluster_tight", "=", "DBSCAN", "(", "eps", "=", "eps_tight", ",", "min_samples", "=", "4", ",", "metric", "=", "'precomputed'", ",", "n_jobs", "=", "-", "1", ")", "\n", "cluster_loose", "=", "DBSCAN", "(", "eps", "=", "eps_loose", ",", "min_samples", "=", "4", ",", "metric", "=", "'precomputed'", ",", "n_jobs", "=", "-", "1", ")", "\n", "\n", "# select & cluster images as training set of this epochs", "\n", "", "pseudo_labels", "=", "cluster", ".", "fit_predict", "(", "rerank_dist", ")", "\n", "pseudo_labels_tight", "=", "cluster_tight", ".", "fit_predict", "(", "rerank_dist", ")", "\n", "pseudo_labels_loose", "=", "cluster_loose", ".", "fit_predict", "(", "rerank_dist", ")", "\n", "num_ids", "=", "len", "(", "set", "(", "pseudo_labels", ")", ")", "-", "(", "1", "if", "-", "1", "in", "pseudo_labels", "else", "0", ")", "\n", "num_ids_tight", "=", "len", "(", "set", "(", "pseudo_labels_tight", ")", ")", "-", "(", "1", "if", "-", "1", "in", "pseudo_labels_tight", "else", "0", ")", "\n", "num_ids_loose", "=", "len", "(", "set", "(", "pseudo_labels_loose", ")", ")", "-", "(", "1", "if", "-", "1", "in", "pseudo_labels_loose", "else", "0", ")", "\n", "\n", "# generate new dataset and calculate cluster centers", "\n", "def", "generate_pseudo_labels", "(", "cluster_id", ",", "num", ")", ":", "\n", "            ", "labels", "=", "[", "]", "\n", "outliers", "=", "0", "\n", "for", "i", ",", "(", "(", "fname", ",", "_", ",", "cid", ")", ",", "id", ")", "in", "enumerate", "(", "zip", "(", "sorted", "(", "dataset", ".", "train", ")", ",", "cluster_id", ")", ")", ":", "\n", "                ", "if", "id", "!=", "-", "1", ":", "\n", "                    ", "labels", ".", "append", "(", "id", ")", "\n", "", "else", ":", "\n", "                    ", "labels", ".", "append", "(", "num", "+", "outliers", ")", "\n", "outliers", "+=", "1", "\n", "", "", "return", "torch", ".", "Tensor", "(", "labels", ")", ".", "long", "(", ")", "\n", "\n", "", "pseudo_labels", "=", "generate_pseudo_labels", "(", "pseudo_labels", ",", "num_ids", ")", "\n", "pseudo_labels_tight", "=", "generate_pseudo_labels", "(", "pseudo_labels_tight", ",", "num_ids_tight", ")", "\n", "pseudo_labels_loose", "=", "generate_pseudo_labels", "(", "pseudo_labels_loose", ",", "num_ids_loose", ")", "\n", "\n", "# compute R_indep and R_comp", "\n", "N", "=", "pseudo_labels", ".", "size", "(", "0", ")", "\n", "label_sim", "=", "pseudo_labels", ".", "expand", "(", "N", ",", "N", ")", ".", "eq", "(", "pseudo_labels", ".", "expand", "(", "N", ",", "N", ")", ".", "t", "(", ")", ")", ".", "float", "(", ")", "\n", "label_sim_tight", "=", "pseudo_labels_tight", ".", "expand", "(", "N", ",", "N", ")", ".", "eq", "(", "pseudo_labels_tight", ".", "expand", "(", "N", ",", "N", ")", ".", "t", "(", ")", ")", ".", "float", "(", ")", "\n", "label_sim_loose", "=", "pseudo_labels_loose", ".", "expand", "(", "N", ",", "N", ")", ".", "eq", "(", "pseudo_labels_loose", ".", "expand", "(", "N", ",", "N", ")", ".", "t", "(", ")", ")", ".", "float", "(", ")", "\n", "\n", "R_comp", "=", "1", "-", "torch", ".", "min", "(", "label_sim", ",", "label_sim_tight", ")", ".", "sum", "(", "-", "1", ")", "/", "torch", ".", "max", "(", "label_sim", ",", "label_sim_tight", ")", ".", "sum", "(", "-", "1", ")", "\n", "R_indep", "=", "1", "-", "torch", ".", "min", "(", "label_sim", ",", "label_sim_loose", ")", ".", "sum", "(", "-", "1", ")", "/", "torch", ".", "max", "(", "label_sim", ",", "label_sim_loose", ")", ".", "sum", "(", "-", "1", ")", "\n", "assert", "(", "(", "R_comp", ".", "min", "(", ")", ">=", "0", ")", "and", "(", "R_comp", ".", "max", "(", ")", "<=", "1", ")", ")", "\n", "assert", "(", "(", "R_indep", ".", "min", "(", ")", ">=", "0", ")", "and", "(", "R_indep", ".", "max", "(", ")", "<=", "1", ")", ")", "\n", "\n", "cluster_R_comp", ",", "cluster_R_indep", "=", "collections", ".", "defaultdict", "(", "list", ")", ",", "collections", ".", "defaultdict", "(", "list", ")", "\n", "cluster_img_num", "=", "collections", ".", "defaultdict", "(", "int", ")", "\n", "for", "i", ",", "(", "comp", ",", "indep", ",", "label", ")", "in", "enumerate", "(", "zip", "(", "R_comp", ",", "R_indep", ",", "pseudo_labels", ")", ")", ":", "\n", "            ", "cluster_R_comp", "[", "label", ".", "item", "(", ")", "]", ".", "append", "(", "comp", ".", "item", "(", ")", ")", "\n", "cluster_R_indep", "[", "label", ".", "item", "(", ")", "]", ".", "append", "(", "indep", ".", "item", "(", ")", ")", "\n", "cluster_img_num", "[", "label", ".", "item", "(", ")", "]", "+=", "1", "\n", "\n", "", "cluster_R_comp", "=", "[", "min", "(", "cluster_R_comp", "[", "i", "]", ")", "for", "i", "in", "sorted", "(", "cluster_R_comp", ".", "keys", "(", ")", ")", "]", "\n", "cluster_R_indep", "=", "[", "min", "(", "cluster_R_indep", "[", "i", "]", ")", "for", "i", "in", "sorted", "(", "cluster_R_indep", ".", "keys", "(", ")", ")", "]", "\n", "cluster_R_indep_noins", "=", "[", "iou", "for", "iou", ",", "num", "in", "zip", "(", "cluster_R_indep", ",", "sorted", "(", "cluster_img_num", ".", "keys", "(", ")", ")", ")", "if", "cluster_img_num", "[", "num", "]", ">", "1", "]", "\n", "if", "(", "epoch", "==", "0", ")", ":", "\n", "            ", "indep_thres", "=", "np", ".", "sort", "(", "cluster_R_indep_noins", ")", "[", "min", "(", "len", "(", "cluster_R_indep_noins", ")", "-", "1", ",", "np", ".", "round", "(", "len", "(", "cluster_R_indep_noins", ")", "*", "0.9", ")", ".", "astype", "(", "'int'", ")", ")", "]", "\n", "\n", "", "pseudo_labeled_dataset", "=", "[", "]", "\n", "outliers", "=", "0", "\n", "for", "i", ",", "(", "(", "fname", ",", "_", ",", "cid", ")", ",", "label", ")", "in", "enumerate", "(", "zip", "(", "sorted", "(", "dataset", ".", "train", ")", ",", "pseudo_labels", ")", ")", ":", "\n", "            ", "indep_score", "=", "cluster_R_indep", "[", "label", ".", "item", "(", ")", "]", "\n", "comp_score", "=", "R_comp", "[", "i", "]", "\n", "if", "(", "(", "indep_score", "<=", "indep_thres", ")", "and", "(", "comp_score", ".", "item", "(", ")", "<=", "cluster_R_comp", "[", "label", ".", "item", "(", ")", "]", ")", ")", ":", "\n", "                ", "pseudo_labeled_dataset", ".", "append", "(", "(", "fname", ",", "label", ".", "item", "(", ")", ",", "cid", ")", ")", "\n", "", "else", ":", "\n", "                ", "pseudo_labeled_dataset", ".", "append", "(", "(", "fname", ",", "len", "(", "cluster_R_indep", ")", "+", "outliers", ",", "cid", ")", ")", "\n", "pseudo_labels", "[", "i", "]", "=", "len", "(", "cluster_R_indep", ")", "+", "outliers", "\n", "outliers", "+=", "1", "\n", "\n", "# statistics of clusters and un-clustered instances", "\n", "", "", "index2label", "=", "collections", ".", "defaultdict", "(", "int", ")", "\n", "for", "label", "in", "pseudo_labels", ":", "\n", "            ", "index2label", "[", "label", ".", "item", "(", ")", "]", "+=", "1", "\n", "", "index2label", "=", "np", ".", "fromiter", "(", "index2label", ".", "values", "(", ")", ",", "dtype", "=", "float", ")", "\n", "print", "(", "'==> Statistics for epoch {}: {} clusters, {} un-clustered instances, R_indep threshold is {}'", "\n", ".", "format", "(", "epoch", ",", "(", "index2label", ">", "1", ")", ".", "sum", "(", ")", ",", "(", "index2label", "==", "1", ")", ".", "sum", "(", ")", ",", "1", "-", "indep_thres", ")", ")", "\n", "\n", "memory", ".", "labels", "=", "pseudo_labels", ".", "cuda", "(", ")", "\n", "train_loader", "=", "get_train_loader", "(", "args", ",", "dataset", ",", "args", ".", "height", ",", "args", ".", "width", ",", "\n", "args", ".", "batch_size", ",", "args", ".", "workers", ",", "args", ".", "num_instances", ",", "iters", ",", "\n", "trainset", "=", "pseudo_labeled_dataset", ")", "\n", "\n", "train_loader", ".", "new_epoch", "(", ")", "\n", "\n", "trainer", ".", "train", "(", "epoch", ",", "train_loader", ",", "optimizer", ",", "\n", "print_freq", "=", "args", ".", "print_freq", ",", "train_iters", "=", "len", "(", "train_loader", ")", ")", "\n", "\n", "if", "(", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_step", "==", "0", "or", "(", "epoch", "==", "args", ".", "epochs", "-", "1", ")", ")", ":", "\n", "            ", "mAP", "=", "evaluator", ".", "evaluate", "(", "test_loader", ",", "dataset", ".", "query", ",", "dataset", ".", "gallery", ",", "cmc_flag", "=", "False", ")", "\n", "is_best", "=", "(", "mAP", ">", "best_mAP", ")", "\n", "best_mAP", "=", "max", "(", "mAP", ",", "best_mAP", ")", "\n", "save_checkpoint", "(", "{", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'best_mAP'", ":", "best_mAP", ",", "\n", "}", ",", "is_best", ",", "fpath", "=", "osp", ".", "join", "(", "args", ".", "logs_dir", ",", "'checkpoint.pth.tar'", ")", ")", "\n", "\n", "print", "(", "'\\n * Finished epoch {:3d}  model mAP: {:5.1%}  best: {:5.1%}{}\\n'", ".", "\n", "format", "(", "epoch", ",", "mAP", ",", "best_mAP", ",", "' *'", "if", "is_best", "else", "''", ")", ")", "\n", "\n", "", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "", "print", "(", "'==> Test with the best model:'", ")", "\n", "checkpoint", "=", "load_checkpoint", "(", "osp", ".", "join", "(", "args", ".", "logs_dir", ",", "'model_best.pth.tar'", ")", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "evaluator", ".", "evaluate", "(", "test_loader", ",", "dataset", ".", "query", ",", "dataset", ".", "gallery", ",", "cmc_flag", "=", "True", ")", "\n", "\n", "end_time", "=", "time", ".", "monotonic", "(", ")", "\n", "print", "(", "'Total running time: '", ",", "timedelta", "(", "seconds", "=", "end_time", "-", "start_time", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.get_data": [[37, 41], ["os.join", "spcl.datasets.create"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.__init__.create"], ["def", "get_data", "(", "name", ",", "data_dir", ")", ":", "\n", "    ", "root", "=", "osp", ".", "join", "(", "data_dir", ",", "name", ")", "\n", "dataset", "=", "datasets", ".", "create", "(", "name", ",", "root", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.get_train_loader": [[42, 69], ["spcl.utils.data.transforms.Normalize", "spcl.utils.data.transforms.Compose", "spcl.utils.data.IterLoader", "sorted", "sorted", "spcl.utils.data.sampler.RandomMultipleGallerySampler", "torch.utils.data.DataLoader", "spcl.utils.data.transforms.Resize", "spcl.utils.data.transforms.RandomHorizontalFlip", "spcl.utils.data.transforms.Pad", "spcl.utils.data.transforms.RandomCrop", "spcl.utils.data.transforms.ToTensor", "spcl.utils.data.transforms.RandomErasing", "spcl.utils.data.preprocessor.Preprocessor"], "function", ["None"], ["", "def", "get_train_loader", "(", "args", ",", "dataset", ",", "height", ",", "width", ",", "batch_size", ",", "workers", ",", "\n", "num_instances", ",", "iters", ",", "trainset", "=", "None", ")", ":", "\n", "\n", "    ", "normalizer", "=", "T", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "train_transformer", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Resize", "(", "(", "height", ",", "width", ")", ",", "interpolation", "=", "3", ")", ",", "\n", "T", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ",", "\n", "T", ".", "Pad", "(", "10", ")", ",", "\n", "T", ".", "RandomCrop", "(", "(", "height", ",", "width", ")", ")", ",", "\n", "T", ".", "ToTensor", "(", ")", ",", "\n", "normalizer", ",", "\n", "T", ".", "RandomErasing", "(", "probability", "=", "0.5", ",", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", "\n", "]", ")", "\n", "\n", "train_set", "=", "sorted", "(", "dataset", ".", "train", ")", "if", "trainset", "is", "None", "else", "sorted", "(", "trainset", ")", "\n", "rmgs_flag", "=", "num_instances", ">", "0", "\n", "if", "rmgs_flag", ":", "\n", "        ", "sampler", "=", "RandomMultipleGallerySampler", "(", "train_set", ",", "num_instances", ")", "\n", "", "else", ":", "\n", "        ", "sampler", "=", "None", "\n", "", "train_loader", "=", "IterLoader", "(", "\n", "DataLoader", "(", "Preprocessor", "(", "train_set", ",", "root", "=", "dataset", ".", "images_dir", ",", "transform", "=", "train_transformer", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "num_workers", "=", "workers", ",", "sampler", "=", "sampler", ",", "\n", "shuffle", "=", "not", "rmgs_flag", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", ",", "length", "=", "iters", ")", "\n", "\n", "return", "train_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.get_test_loader": [[70, 89], ["spcl.utils.data.transforms.Normalize", "spcl.utils.data.transforms.Compose", "torch.utils.data.DataLoader", "list", "spcl.utils.data.preprocessor.Preprocessor", "spcl.utils.data.transforms.Resize", "spcl.utils.data.transforms.ToTensor", "set", "set"], "function", ["None"], ["", "def", "get_test_loader", "(", "dataset", ",", "height", ",", "width", ",", "batch_size", ",", "workers", ",", "testset", "=", "None", ")", ":", "\n", "    ", "normalizer", "=", "T", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "test_transformer", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Resize", "(", "(", "height", ",", "width", ")", ",", "interpolation", "=", "3", ")", ",", "\n", "T", ".", "ToTensor", "(", ")", ",", "\n", "normalizer", "\n", "]", ")", "\n", "\n", "if", "(", "testset", "is", "None", ")", ":", "\n", "        ", "testset", "=", "list", "(", "set", "(", "dataset", ".", "query", ")", "|", "set", "(", "dataset", ".", "gallery", ")", ")", "\n", "\n", "", "test_loader", "=", "DataLoader", "(", "\n", "Preprocessor", "(", "testset", ",", "root", "=", "dataset", ".", "images_dir", ",", "transform", "=", "test_transformer", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "num_workers", "=", "workers", ",", "\n", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ")", "\n", "\n", "return", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.create_model": [[90, 98], ["spcl.models.create", "spcl.models.dsbn.convert_dsbn", "nn.DataParallel.cuda", "torch.nn.DataParallel"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.__init__.create", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.convert_dsbn"], ["", "def", "create_model", "(", "args", ")", ":", "\n", "    ", "model", "=", "models", ".", "create", "(", "args", ".", "arch", ",", "num_features", "=", "args", ".", "features", ",", "norm", "=", "True", ",", "dropout", "=", "args", ".", "dropout", ",", "num_classes", "=", "0", ")", "\n", "# adopt domain-specific BN", "\n", "convert_dsbn", "(", "model", ")", "\n", "# use CUDA", "\n", "model", ".", "cuda", "(", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.main": [[100, 110], ["parser.parse_args", "spcl_train_uda.main_worker", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.main_worker"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "deterministic", "=", "True", "\n", "\n", "", "main_worker", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.main_worker": [[112, 289], ["time.monotonic", "spcl.utils.logging.Logger", "print", "print", "spcl_train_uda.get_data", "print", "spcl_train_uda.get_data", "spcl_train_uda.get_test_loader", "spcl_train_uda.get_train_loader", "spcl_train_uda.create_model", "spcl.models.hm.HybridMemory().cuda", "print", "spcl_train_uda.get_test_loader", "spcl.evaluators.extract_features", "collections.defaultdict", "sorted", "torch.stack", "torch.stack", "torch.normalize", "print", "spcl_train_uda.get_test_loader", "spcl.evaluators.extract_features", "torch.cat", "torch.cat", "torch.cat().cuda", "torch.cat().cuda", "spcl.evaluators.Evaluator", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "spcl.trainers.SpCLTrainer_UDA", "range", "print", "spcl.utils.serialization.load_checkpoint", "create_model.load_state_dict", "spcl.evaluators.Evaluator.evaluate", "time.monotonic", "print", "os.join", "sour_fea_dict[].append", "torch.cat().mean", "torch.cat().mean", "print", "HybridMemory().cuda.features[].clone", "spcl.utils.faiss_rerank.compute_jaccard_distance", "sklearn.cluster.DBSCAN.fit_predict", "sklearn.cluster.DBSCAN.fit_predict", "sklearn.cluster.DBSCAN.fit_predict", "spcl_train_uda.main_worker.generate_pseudo_labels"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.get_data", "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.get_data", "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.get_test_loader", "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.get_train_loader", "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.create_model", "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.get_test_loader", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.extract_features", "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.spcl_train_uda.get_test_loader", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.extract_features", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.serialization.load_checkpoint", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.Evaluator.evaluate", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_rerank.compute_jaccard_distance"], ["", "def", "main_worker", "(", "args", ")", ":", "\n", "    ", "global", "start_epoch", ",", "best_mAP", "\n", "start_time", "=", "time", ".", "monotonic", "(", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "sys", ".", "stdout", "=", "Logger", "(", "osp", ".", "join", "(", "args", ".", "logs_dir", ",", "'log.txt'", ")", ")", "\n", "print", "(", "\"==========\\nArgs:{}\\n==========\"", ".", "format", "(", "args", ")", ")", "\n", "\n", "# Create datasets", "\n", "iters", "=", "args", ".", "iters", "if", "(", "args", ".", "iters", ">", "0", ")", "else", "None", "\n", "print", "(", "\"==> Load source-domain dataset\"", ")", "\n", "dataset_source", "=", "get_data", "(", "args", ".", "dataset_source", ",", "args", ".", "data_dir", ")", "\n", "print", "(", "\"==> Load target-domain dataset\"", ")", "\n", "dataset_target", "=", "get_data", "(", "args", ".", "dataset_target", ",", "args", ".", "data_dir", ")", "\n", "test_loader_target", "=", "get_test_loader", "(", "dataset_target", ",", "args", ".", "height", ",", "args", ".", "width", ",", "args", ".", "batch_size", ",", "args", ".", "workers", ")", "\n", "train_loader_source", "=", "get_train_loader", "(", "args", ",", "dataset_source", ",", "args", ".", "height", ",", "args", ".", "width", ",", "\n", "args", ".", "batch_size", ",", "args", ".", "workers", ",", "args", ".", "num_instances", ",", "iters", ")", "\n", "source_classes", "=", "dataset_source", ".", "num_train_pids", "\n", "\n", "# Create model", "\n", "model", "=", "create_model", "(", "args", ")", "\n", "\n", "# Create hybrid memory", "\n", "memory", "=", "HybridMemory", "(", "model", ".", "module", ".", "num_features", ",", "source_classes", "+", "len", "(", "dataset_target", ".", "train", ")", ",", "\n", "temp", "=", "args", ".", "temp", ",", "momentum", "=", "args", ".", "momentum", ")", ".", "cuda", "(", ")", "\n", "\n", "# Initialize source-domain class centroids", "\n", "print", "(", "\"==> Initialize source-domain class centroids in the hybrid memory\"", ")", "\n", "sour_cluster_loader", "=", "get_test_loader", "(", "dataset_source", ",", "args", ".", "height", ",", "args", ".", "width", ",", "\n", "args", ".", "batch_size", ",", "args", ".", "workers", ",", "testset", "=", "sorted", "(", "dataset_source", ".", "train", ")", ")", "\n", "source_features", ",", "_", "=", "extract_features", "(", "model", ",", "sour_cluster_loader", ",", "print_freq", "=", "50", ")", "\n", "sour_fea_dict", "=", "collections", ".", "defaultdict", "(", "list", ")", "\n", "for", "f", ",", "pid", ",", "_", "in", "sorted", "(", "dataset_source", ".", "train", ")", ":", "\n", "        ", "sour_fea_dict", "[", "pid", "]", ".", "append", "(", "source_features", "[", "f", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "", "source_centers", "=", "[", "torch", ".", "cat", "(", "sour_fea_dict", "[", "pid", "]", ",", "0", ")", ".", "mean", "(", "0", ")", "for", "pid", "in", "sorted", "(", "sour_fea_dict", ".", "keys", "(", ")", ")", "]", "\n", "source_centers", "=", "torch", ".", "stack", "(", "source_centers", ",", "0", ")", "\n", "source_centers", "=", "F", ".", "normalize", "(", "source_centers", ",", "dim", "=", "1", ")", "\n", "\n", "# Initialize target-domain instance features", "\n", "print", "(", "\"==> Initialize target-domain instance features in the hybrid memory\"", ")", "\n", "tgt_cluster_loader", "=", "get_test_loader", "(", "dataset_target", ",", "args", ".", "height", ",", "args", ".", "width", ",", "\n", "args", ".", "batch_size", ",", "args", ".", "workers", ",", "testset", "=", "sorted", "(", "dataset_target", ".", "train", ")", ")", "\n", "target_features", ",", "_", "=", "extract_features", "(", "model", ",", "tgt_cluster_loader", ",", "print_freq", "=", "50", ")", "\n", "target_features", "=", "torch", ".", "cat", "(", "[", "target_features", "[", "f", "]", ".", "unsqueeze", "(", "0", ")", "for", "f", ",", "_", ",", "_", "in", "sorted", "(", "dataset_target", ".", "train", ")", "]", ",", "0", ")", "\n", "memory", ".", "features", "=", "torch", ".", "cat", "(", "(", "source_centers", ",", "F", ".", "normalize", "(", "target_features", ",", "dim", "=", "1", ")", ")", ",", "dim", "=", "0", ")", ".", "cuda", "(", ")", "\n", "del", "tgt_cluster_loader", ",", "source_centers", ",", "target_features", ",", "sour_cluster_loader", ",", "sour_fea_dict", "\n", "\n", "# Evaluator", "\n", "evaluator", "=", "Evaluator", "(", "model", ")", "\n", "\n", "# Optimizer", "\n", "params", "=", "[", "{", "\"params\"", ":", "[", "value", "]", "}", "for", "_", ",", "value", "in", "model", ".", "named_parameters", "(", ")", "if", "value", ".", "requires_grad", "]", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer", ",", "step_size", "=", "args", ".", "step_size", ",", "gamma", "=", "0.1", ")", "\n", "\n", "# Trainer", "\n", "trainer", "=", "SpCLTrainer_UDA", "(", "model", ",", "memory", ",", "source_classes", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "# Calculate distance", "\n", "        ", "print", "(", "'==> Create pseudo labels for unlabeled target domain with self-paced policy'", ")", "\n", "target_features", "=", "memory", ".", "features", "[", "source_classes", ":", "]", ".", "clone", "(", ")", "\n", "rerank_dist", "=", "compute_jaccard_distance", "(", "target_features", ",", "k1", "=", "args", ".", "k1", ",", "k2", "=", "args", ".", "k2", ")", "\n", "del", "target_features", "\n", "\n", "if", "(", "epoch", "==", "0", ")", ":", "\n", "# DBSCAN cluster", "\n", "            ", "eps", "=", "args", ".", "eps", "\n", "eps_tight", "=", "eps", "-", "args", ".", "eps_gap", "\n", "eps_loose", "=", "eps", "+", "args", ".", "eps_gap", "\n", "print", "(", "'Clustering criterion: eps: {:.3f}, eps_tight: {:.3f}, eps_loose: {:.3f}'", ".", "format", "(", "eps", ",", "eps_tight", ",", "eps_loose", ")", ")", "\n", "cluster", "=", "DBSCAN", "(", "eps", "=", "eps", ",", "min_samples", "=", "4", ",", "metric", "=", "'precomputed'", ",", "n_jobs", "=", "-", "1", ")", "\n", "cluster_tight", "=", "DBSCAN", "(", "eps", "=", "eps_tight", ",", "min_samples", "=", "4", ",", "metric", "=", "'precomputed'", ",", "n_jobs", "=", "-", "1", ")", "\n", "cluster_loose", "=", "DBSCAN", "(", "eps", "=", "eps_loose", ",", "min_samples", "=", "4", ",", "metric", "=", "'precomputed'", ",", "n_jobs", "=", "-", "1", ")", "\n", "\n", "# select & cluster images as training set of this epochs", "\n", "", "pseudo_labels", "=", "cluster", ".", "fit_predict", "(", "rerank_dist", ")", "\n", "pseudo_labels_tight", "=", "cluster_tight", ".", "fit_predict", "(", "rerank_dist", ")", "\n", "pseudo_labels_loose", "=", "cluster_loose", ".", "fit_predict", "(", "rerank_dist", ")", "\n", "num_ids", "=", "len", "(", "set", "(", "pseudo_labels", ")", ")", "-", "(", "1", "if", "-", "1", "in", "pseudo_labels", "else", "0", ")", "\n", "num_ids_tight", "=", "len", "(", "set", "(", "pseudo_labels_tight", ")", ")", "-", "(", "1", "if", "-", "1", "in", "pseudo_labels_tight", "else", "0", ")", "\n", "num_ids_loose", "=", "len", "(", "set", "(", "pseudo_labels_loose", ")", ")", "-", "(", "1", "if", "-", "1", "in", "pseudo_labels_loose", "else", "0", ")", "\n", "\n", "# generate new dataset and calculate cluster centers", "\n", "def", "generate_pseudo_labels", "(", "cluster_id", ",", "num", ")", ":", "\n", "            ", "labels", "=", "[", "]", "\n", "outliers", "=", "0", "\n", "for", "i", ",", "(", "(", "fname", ",", "_", ",", "cid", ")", ",", "id", ")", "in", "enumerate", "(", "zip", "(", "sorted", "(", "dataset_target", ".", "train", ")", ",", "cluster_id", ")", ")", ":", "\n", "                ", "if", "id", "!=", "-", "1", ":", "\n", "                    ", "labels", ".", "append", "(", "source_classes", "+", "id", ")", "\n", "", "else", ":", "\n", "                    ", "labels", ".", "append", "(", "source_classes", "+", "num", "+", "outliers", ")", "\n", "outliers", "+=", "1", "\n", "", "", "return", "torch", ".", "Tensor", "(", "labels", ")", ".", "long", "(", ")", "\n", "\n", "", "pseudo_labels", "=", "generate_pseudo_labels", "(", "pseudo_labels", ",", "num_ids", ")", "\n", "pseudo_labels_tight", "=", "generate_pseudo_labels", "(", "pseudo_labels_tight", ",", "num_ids_tight", ")", "\n", "pseudo_labels_loose", "=", "generate_pseudo_labels", "(", "pseudo_labels_loose", ",", "num_ids_loose", ")", "\n", "\n", "# compute R_indep and R_comp", "\n", "N", "=", "pseudo_labels", ".", "size", "(", "0", ")", "\n", "label_sim", "=", "pseudo_labels", ".", "expand", "(", "N", ",", "N", ")", ".", "eq", "(", "pseudo_labels", ".", "expand", "(", "N", ",", "N", ")", ".", "t", "(", ")", ")", ".", "float", "(", ")", "\n", "label_sim_tight", "=", "pseudo_labels_tight", ".", "expand", "(", "N", ",", "N", ")", ".", "eq", "(", "pseudo_labels_tight", ".", "expand", "(", "N", ",", "N", ")", ".", "t", "(", ")", ")", ".", "float", "(", ")", "\n", "label_sim_loose", "=", "pseudo_labels_loose", ".", "expand", "(", "N", ",", "N", ")", ".", "eq", "(", "pseudo_labels_loose", ".", "expand", "(", "N", ",", "N", ")", ".", "t", "(", ")", ")", ".", "float", "(", ")", "\n", "\n", "R_comp", "=", "1", "-", "torch", ".", "min", "(", "label_sim", ",", "label_sim_tight", ")", ".", "sum", "(", "-", "1", ")", "/", "torch", ".", "max", "(", "label_sim", ",", "label_sim_tight", ")", ".", "sum", "(", "-", "1", ")", "\n", "R_indep", "=", "1", "-", "torch", ".", "min", "(", "label_sim", ",", "label_sim_loose", ")", ".", "sum", "(", "-", "1", ")", "/", "torch", ".", "max", "(", "label_sim", ",", "label_sim_loose", ")", ".", "sum", "(", "-", "1", ")", "\n", "assert", "(", "(", "R_comp", ".", "min", "(", ")", ">=", "0", ")", "and", "(", "R_comp", ".", "max", "(", ")", "<=", "1", ")", ")", "\n", "assert", "(", "(", "R_indep", ".", "min", "(", ")", ">=", "0", ")", "and", "(", "R_indep", ".", "max", "(", ")", "<=", "1", ")", ")", "\n", "\n", "cluster_R_comp", ",", "cluster_R_indep", "=", "collections", ".", "defaultdict", "(", "list", ")", ",", "collections", ".", "defaultdict", "(", "list", ")", "\n", "cluster_img_num", "=", "collections", ".", "defaultdict", "(", "int", ")", "\n", "for", "i", ",", "(", "comp", ",", "indep", ",", "label", ")", "in", "enumerate", "(", "zip", "(", "R_comp", ",", "R_indep", ",", "pseudo_labels", ")", ")", ":", "\n", "            ", "cluster_R_comp", "[", "label", ".", "item", "(", ")", "-", "source_classes", "]", ".", "append", "(", "comp", ".", "item", "(", ")", ")", "\n", "cluster_R_indep", "[", "label", ".", "item", "(", ")", "-", "source_classes", "]", ".", "append", "(", "indep", ".", "item", "(", ")", ")", "\n", "cluster_img_num", "[", "label", ".", "item", "(", ")", "-", "source_classes", "]", "+=", "1", "\n", "\n", "", "cluster_R_comp", "=", "[", "min", "(", "cluster_R_comp", "[", "i", "]", ")", "for", "i", "in", "sorted", "(", "cluster_R_comp", ".", "keys", "(", ")", ")", "]", "\n", "cluster_R_indep", "=", "[", "min", "(", "cluster_R_indep", "[", "i", "]", ")", "for", "i", "in", "sorted", "(", "cluster_R_indep", ".", "keys", "(", ")", ")", "]", "\n", "cluster_R_indep_noins", "=", "[", "iou", "for", "iou", ",", "num", "in", "zip", "(", "cluster_R_indep", ",", "sorted", "(", "cluster_img_num", ".", "keys", "(", ")", ")", ")", "if", "cluster_img_num", "[", "num", "]", ">", "1", "]", "\n", "if", "(", "epoch", "==", "0", ")", ":", "\n", "            ", "indep_thres", "=", "np", ".", "sort", "(", "cluster_R_indep_noins", ")", "[", "min", "(", "len", "(", "cluster_R_indep_noins", ")", "-", "1", ",", "np", ".", "round", "(", "len", "(", "cluster_R_indep_noins", ")", "*", "0.9", ")", ".", "astype", "(", "'int'", ")", ")", "]", "\n", "\n", "", "pseudo_labeled_dataset", "=", "[", "]", "\n", "outliers", "=", "0", "\n", "for", "i", ",", "(", "(", "fname", ",", "_", ",", "cid", ")", ",", "label", ")", "in", "enumerate", "(", "zip", "(", "sorted", "(", "dataset_target", ".", "train", ")", ",", "pseudo_labels", ")", ")", ":", "\n", "            ", "indep_score", "=", "cluster_R_indep", "[", "label", ".", "item", "(", ")", "-", "source_classes", "]", "\n", "comp_score", "=", "R_comp", "[", "i", "]", "\n", "if", "(", "(", "indep_score", "<=", "indep_thres", ")", "and", "(", "comp_score", ".", "item", "(", ")", "<=", "cluster_R_comp", "[", "label", ".", "item", "(", ")", "-", "source_classes", "]", ")", ")", ":", "\n", "                ", "pseudo_labeled_dataset", ".", "append", "(", "(", "fname", ",", "label", ".", "item", "(", ")", ",", "cid", ")", ")", "\n", "", "else", ":", "\n", "                ", "pseudo_labeled_dataset", ".", "append", "(", "(", "fname", ",", "source_classes", "+", "len", "(", "cluster_R_indep", ")", "+", "outliers", ",", "cid", ")", ")", "\n", "pseudo_labels", "[", "i", "]", "=", "source_classes", "+", "len", "(", "cluster_R_indep", ")", "+", "outliers", "\n", "outliers", "+=", "1", "\n", "\n", "# statistics of clusters and un-clustered instances", "\n", "", "", "index2label", "=", "collections", ".", "defaultdict", "(", "int", ")", "\n", "for", "label", "in", "pseudo_labels", ":", "\n", "            ", "index2label", "[", "label", ".", "item", "(", ")", "]", "+=", "1", "\n", "", "index2label", "=", "np", ".", "fromiter", "(", "index2label", ".", "values", "(", ")", ",", "dtype", "=", "float", ")", "\n", "print", "(", "'==> Statistics for epoch {}: {} clusters, {} un-clustered instances, R_indep threshold is {}'", "\n", ".", "format", "(", "epoch", ",", "(", "index2label", ">", "1", ")", ".", "sum", "(", ")", ",", "(", "index2label", "==", "1", ")", ".", "sum", "(", ")", ",", "1", "-", "indep_thres", ")", ")", "\n", "\n", "memory", ".", "labels", "=", "torch", ".", "cat", "(", "(", "torch", ".", "arange", "(", "source_classes", ")", ",", "pseudo_labels", ")", ")", ".", "cuda", "(", ")", "\n", "train_loader_target", "=", "get_train_loader", "(", "args", ",", "dataset_target", ",", "args", ".", "height", ",", "args", ".", "width", ",", "\n", "args", ".", "batch_size", ",", "args", ".", "workers", ",", "args", ".", "num_instances", ",", "iters", ",", "\n", "trainset", "=", "pseudo_labeled_dataset", ")", "\n", "\n", "train_loader_source", ".", "new_epoch", "(", ")", "\n", "train_loader_target", ".", "new_epoch", "(", ")", "\n", "\n", "trainer", ".", "train", "(", "epoch", ",", "train_loader_source", ",", "train_loader_target", ",", "optimizer", ",", "\n", "print_freq", "=", "args", ".", "print_freq", ",", "train_iters", "=", "len", "(", "train_loader_target", ")", ")", "\n", "\n", "if", "(", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_step", "==", "0", "or", "(", "epoch", "==", "args", ".", "epochs", "-", "1", ")", ")", ":", "\n", "            ", "mAP", "=", "evaluator", ".", "evaluate", "(", "test_loader_target", ",", "dataset_target", ".", "query", ",", "dataset_target", ".", "gallery", ",", "cmc_flag", "=", "False", ")", "\n", "is_best", "=", "(", "mAP", ">", "best_mAP", ")", "\n", "best_mAP", "=", "max", "(", "mAP", ",", "best_mAP", ")", "\n", "save_checkpoint", "(", "{", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'best_mAP'", ":", "best_mAP", ",", "\n", "}", ",", "is_best", ",", "fpath", "=", "osp", ".", "join", "(", "args", ".", "logs_dir", ",", "'checkpoint.pth.tar'", ")", ")", "\n", "\n", "print", "(", "'\\n * Finished epoch {:3d}  model mAP: {:5.1%}  best: {:5.1%}{}\\n'", ".", "\n", "format", "(", "epoch", ",", "mAP", ",", "best_mAP", ",", "' *'", "if", "is_best", "else", "''", ")", ")", "\n", "\n", "", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "", "print", "(", "'==> Test with the best model on the target domain:'", ")", "\n", "checkpoint", "=", "load_checkpoint", "(", "osp", ".", "join", "(", "args", ".", "logs_dir", ",", "'model_best.pth.tar'", ")", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "evaluator", ".", "evaluate", "(", "test_loader_target", ",", "dataset_target", ".", "query", ",", "dataset_target", ".", "gallery", ",", "cmc_flag", "=", "True", ")", "\n", "\n", "end_time", "=", "time", ".", "monotonic", "(", ")", "\n", "print", "(", "'Total running time: '", ",", "timedelta", "(", "seconds", "=", "end_time", "-", "start_time", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.get_data": [[23, 44], ["os.join", "spcl.datasets.create", "spcl.utils.data.transforms.Normalize", "spcl.utils.data.transforms.Compose", "torch.utils.data.DataLoader", "spcl.utils.data.preprocessor.Preprocessor", "spcl.utils.data.transforms.Resize", "spcl.utils.data.transforms.ToTensor", "list", "set", "set"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.__init__.create"], ["def", "get_data", "(", "name", ",", "data_dir", ",", "height", ",", "width", ",", "batch_size", ",", "workers", ")", ":", "\n", "    ", "root", "=", "osp", ".", "join", "(", "data_dir", ",", "name", ")", "\n", "\n", "dataset", "=", "datasets", ".", "create", "(", "name", ",", "root", ")", "\n", "\n", "normalizer", "=", "T", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "test_transformer", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Resize", "(", "(", "height", ",", "width", ")", ",", "interpolation", "=", "3", ")", ",", "\n", "T", ".", "ToTensor", "(", ")", ",", "\n", "normalizer", "\n", "]", ")", "\n", "\n", "test_loader", "=", "DataLoader", "(", "\n", "Preprocessor", "(", "list", "(", "set", "(", "dataset", ".", "query", ")", "|", "set", "(", "dataset", ".", "gallery", ")", ")", ",", "\n", "root", "=", "dataset", ".", "images_dir", ",", "transform", "=", "test_transformer", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "num_workers", "=", "workers", ",", "\n", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ")", "\n", "\n", "return", "dataset", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.main": [[46, 56], ["parser.parse_args", "test.main_worker", "random.seed", "numpy.random.seed", "torch.manual_seed"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.main_worker"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "deterministic", "=", "True", "\n", "\n", "", "main_worker", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.main_worker": [[58, 92], ["os.dirname", "spcl.utils.logging.Logger", "print", "test.get_data", "spcl.models.create", "spcl.utils.serialization.load_checkpoint", "spcl.utils.serialization.copy_state_dict", "nn.DataParallel.cuda", "torch.nn.DataParallel", "nn.DataParallel.eval", "spcl.evaluators.Evaluator", "print", "spcl.evaluators.Evaluator.evaluate", "os.join", "print", "spcl.models.dsbn.convert_dsbn", "print", "spcl.models.dsbn.convert_bn"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.examples.test.get_data", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.__init__.create", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.serialization.load_checkpoint", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.serialization.copy_state_dict", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.Evaluator.evaluate", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.convert_dsbn", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.convert_bn"], ["", "def", "main_worker", "(", "args", ")", ":", "\n", "    ", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "log_dir", "=", "osp", ".", "dirname", "(", "args", ".", "resume", ")", "\n", "sys", ".", "stdout", "=", "Logger", "(", "osp", ".", "join", "(", "log_dir", ",", "'log_test.txt'", ")", ")", "\n", "print", "(", "\"==========\\nArgs:{}\\n==========\"", ".", "format", "(", "args", ")", ")", "\n", "\n", "# Create data loaders", "\n", "dataset", ",", "test_loader", "=", "get_data", "(", "args", ".", "dataset", ",", "args", ".", "data_dir", ",", "args", ".", "height", ",", "\n", "args", ".", "width", ",", "args", ".", "batch_size", ",", "args", ".", "workers", ")", "\n", "\n", "# Create model", "\n", "model", "=", "models", ".", "create", "(", "args", ".", "arch", ",", "pretrained", "=", "False", ",", "num_features", "=", "args", ".", "features", ",", "dropout", "=", "args", ".", "dropout", ",", "num_classes", "=", "0", ")", "\n", "if", "args", ".", "dsbn", ":", "\n", "        ", "print", "(", "\"==> Load the model with domain-specific BNs\"", ")", "\n", "convert_dsbn", "(", "model", ")", "\n", "\n", "# Load from checkpoint", "\n", "", "checkpoint", "=", "load_checkpoint", "(", "args", ".", "resume", ")", "\n", "copy_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ",", "model", ",", "strip", "=", "'module.'", ")", "\n", "\n", "if", "args", ".", "dsbn", ":", "\n", "        ", "print", "(", "\"==> Test with {}-domain BNs\"", ".", "format", "(", "\"source\"", "if", "args", ".", "test_source", "else", "\"target\"", ")", ")", "\n", "convert_bn", "(", "model", ",", "use_target", "=", "(", "not", "args", ".", "test_source", ")", ")", "\n", "\n", "", "model", ".", "cuda", "(", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "# Evaluator", "\n", "model", ".", "eval", "(", ")", "\n", "evaluator", "=", "Evaluator", "(", "model", ")", "\n", "print", "(", "\"Test on {}:\"", ".", "format", "(", "args", ".", "dataset", ")", ")", "\n", "evaluator", ".", "evaluate", "(", "test_loader", ",", "dataset", ".", "query", ",", "dataset", ".", "gallery", ",", "cmc_flag", "=", "True", ",", "rerank", "=", "args", ".", "rerank", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_UDA.__init__": [[14, 19], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "encoder", ",", "memory", ",", "source_classes", ")", ":", "\n", "        ", "super", "(", "SpCLTrainer_UDA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "memory", "=", "memory", "\n", "self", ".", "source_classes", "=", "source_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_UDA.train": [[20, 84], ["trainers.SpCLTrainer_UDA.encoder.train", "utils.meters.AverageMeter", "utils.meters.AverageMeter", "utils.meters.AverageMeter", "utils.meters.AverageMeter", "time.time", "range", "data_loader_source.next", "data_loader_target.next", "utils.meters.AverageMeter.update", "trainers.SpCLTrainer_UDA._parse_data", "trainers.SpCLTrainer_UDA._parse_data", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "s_inputs.size", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "trainers.SpCLTrainer_UDA._forward", "f_out.view.view.view", "f_out.view.view.split", "trainers.SpCLTrainer_UDA.memory", "trainers.SpCLTrainer_UDA.memory", "optimizer.zero_grad", "loss.backward", "optimizer.step", "utils.meters.AverageMeter.update", "utils.meters.AverageMeter.update", "utils.meters.AverageMeter.update", "time.time", "torch.cat().view.view", "torch.cat().view.view", "trainers.SpCLTrainer_UDA.train.reshape"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL.train", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.next", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.next", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL._parse_data", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL._parse_data", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL._forward", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.hm.HM.backward", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update"], ["", "def", "train", "(", "self", ",", "epoch", ",", "data_loader_source", ",", "data_loader_target", ",", "\n", "optimizer", ",", "print_freq", "=", "10", ",", "train_iters", "=", "400", ")", ":", "\n", "        ", "self", ".", "encoder", ".", "train", "(", ")", "\n", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "\n", "losses_s", "=", "AverageMeter", "(", ")", "\n", "losses_t", "=", "AverageMeter", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", "in", "range", "(", "train_iters", ")", ":", "\n", "# load data", "\n", "            ", "source_inputs", "=", "data_loader_source", ".", "next", "(", ")", "\n", "target_inputs", "=", "data_loader_target", ".", "next", "(", ")", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# process inputs", "\n", "s_inputs", ",", "s_targets", ",", "_", "=", "self", ".", "_parse_data", "(", "source_inputs", ")", "\n", "t_inputs", ",", "_", ",", "t_indexes", "=", "self", ".", "_parse_data", "(", "target_inputs", ")", "\n", "\n", "# arrange batch for domain-specific BN", "\n", "device_num", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "B", ",", "C", ",", "H", ",", "W", "=", "s_inputs", ".", "size", "(", ")", "\n", "def", "reshape", "(", "inputs", ")", ":", "\n", "                ", "return", "inputs", ".", "view", "(", "device_num", ",", "-", "1", ",", "C", ",", "H", ",", "W", ")", "\n", "", "s_inputs", ",", "t_inputs", "=", "reshape", "(", "s_inputs", ")", ",", "reshape", "(", "t_inputs", ")", "\n", "inputs", "=", "torch", ".", "cat", "(", "(", "s_inputs", ",", "t_inputs", ")", ",", "1", ")", ".", "view", "(", "-", "1", ",", "C", ",", "H", ",", "W", ")", "\n", "\n", "# forward", "\n", "f_out", "=", "self", ".", "_forward", "(", "inputs", ")", "\n", "\n", "# de-arrange batch", "\n", "f_out", "=", "f_out", ".", "view", "(", "device_num", ",", "-", "1", ",", "f_out", ".", "size", "(", "-", "1", ")", ")", "\n", "f_out_s", ",", "f_out_t", "=", "f_out", ".", "split", "(", "f_out", ".", "size", "(", "1", ")", "//", "2", ",", "dim", "=", "1", ")", "\n", "f_out_s", ",", "f_out_t", "=", "f_out_s", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "f_out", ".", "size", "(", "-", "1", ")", ")", ",", "f_out_t", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "f_out", ".", "size", "(", "-", "1", ")", ")", "\n", "\n", "# compute loss with the hybrid memory", "\n", "loss_s", "=", "self", ".", "memory", "(", "f_out_s", ",", "s_targets", ")", "\n", "loss_t", "=", "self", ".", "memory", "(", "f_out_t", ",", "t_indexes", "+", "self", ".", "source_classes", ")", "\n", "\n", "loss", "=", "loss_s", "+", "loss_t", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "losses_s", ".", "update", "(", "loss_s", ".", "item", "(", ")", ")", "\n", "losses_t", ".", "update", "(", "loss_t", ".", "item", "(", ")", ")", "\n", "\n", "# print log", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "print_freq", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch: [{}][{}/{}]\\t'", "\n", "'Time {:.3f} ({:.3f})\\t'", "\n", "'Data {:.3f} ({:.3f})\\t'", "\n", "'Loss_s {:.3f} ({:.3f})\\t'", "\n", "'Loss_t {:.3f} ({:.3f})'", "\n", ".", "format", "(", "epoch", ",", "i", "+", "1", ",", "len", "(", "data_loader_target", ")", ",", "\n", "batch_time", ".", "val", ",", "batch_time", ".", "avg", ",", "\n", "data_time", ".", "val", ",", "data_time", ".", "avg", ",", "\n", "losses_s", ".", "val", ",", "losses_s", ".", "avg", ",", "\n", "losses_t", ".", "val", ",", "losses_t", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_UDA._parse_data": [[85, 88], ["imgs.cuda", "pids.cuda", "indexes.cuda"], "methods", ["None"], ["", "", "", "def", "_parse_data", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "imgs", ",", "_", ",", "pids", ",", "_", ",", "indexes", "=", "inputs", "\n", "return", "imgs", ".", "cuda", "(", ")", ",", "pids", ".", "cuda", "(", ")", ",", "indexes", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_UDA._forward": [[89, 91], ["trainers.SpCLTrainer_UDA.encoder"], "methods", ["None"], ["", "def", "_forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "self", ".", "encoder", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL.__init__": [[94, 98], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "encoder", ",", "memory", ")", ":", "\n", "        ", "super", "(", "SpCLTrainer_USL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "memory", "=", "memory", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL.train": [[99, 141], ["trainers.SpCLTrainer_USL.encoder.train", "utils.meters.AverageMeter", "utils.meters.AverageMeter", "utils.meters.AverageMeter", "time.time", "range", "data_loader.next", "utils.meters.AverageMeter.update", "trainers.SpCLTrainer_USL._parse_data", "trainers.SpCLTrainer_USL._forward", "trainers.SpCLTrainer_USL.memory", "optimizer.zero_grad", "trainers.SpCLTrainer_USL.backward", "optimizer.step", "utils.meters.AverageMeter.update", "utils.meters.AverageMeter.update", "time.time", "trainers.SpCLTrainer_USL.item", "print", "time.time", "time.time", "len"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL.train", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.next", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL._parse_data", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL._forward", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.hm.HM.backward", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update"], ["", "def", "train", "(", "self", ",", "epoch", ",", "data_loader", ",", "optimizer", ",", "print_freq", "=", "10", ",", "train_iters", "=", "400", ")", ":", "\n", "        ", "self", ".", "encoder", ".", "train", "(", ")", "\n", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", "in", "range", "(", "train_iters", ")", ":", "\n", "# load data", "\n", "            ", "inputs", "=", "data_loader", ".", "next", "(", ")", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# process inputs", "\n", "inputs", ",", "_", ",", "indexes", "=", "self", ".", "_parse_data", "(", "inputs", ")", "\n", "\n", "# forward", "\n", "f_out", "=", "self", ".", "_forward", "(", "inputs", ")", "\n", "\n", "# compute loss with the hybrid memory", "\n", "loss", "=", "self", ".", "memory", "(", "f_out", ",", "indexes", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ")", "\n", "\n", "# print log", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "print_freq", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch: [{}][{}/{}]\\t'", "\n", "'Time {:.3f} ({:.3f})\\t'", "\n", "'Data {:.3f} ({:.3f})\\t'", "\n", "'Loss {:.3f} ({:.3f})'", "\n", ".", "format", "(", "epoch", ",", "i", "+", "1", ",", "len", "(", "data_loader", ")", ",", "\n", "batch_time", ".", "val", ",", "batch_time", ".", "avg", ",", "\n", "data_time", ".", "val", ",", "data_time", ".", "avg", ",", "\n", "losses", ".", "val", ",", "losses", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL._parse_data": [[142, 145], ["imgs.cuda", "pids.cuda", "indexes.cuda"], "methods", ["None"], ["", "", "", "def", "_parse_data", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "imgs", ",", "_", ",", "pids", ",", "_", ",", "indexes", "=", "inputs", "\n", "return", "imgs", ".", "cuda", "(", ")", ",", "pids", ".", "cuda", "(", ")", ",", "indexes", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.trainers.SpCLTrainer_USL._forward": [[146, 148], ["trainers.SpCLTrainer_USL.encoder"], "methods", ["None"], ["", "def", "_forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "self", ".", "encoder", "(", "inputs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.Evaluator.__init__": [[106, 109], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "super", "(", "Evaluator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.Evaluator.evaluate": [[110, 123], ["evaluators.extract_features", "evaluators.pairwise_distance", "evaluators.evaluate_all", "print", "evaluators.pairwise_distance", "evaluators.pairwise_distance", "utils.rerank.re_ranking", "evaluators.evaluate_all", "utils.rerank.re_ranking.numpy", "distmat_qq.numpy", "distmat_gg.numpy"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.extract_features", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.pairwise_distance", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.evaluate_all", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.pairwise_distance", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.pairwise_distance", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.rerank.re_ranking", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.evaluate_all"], ["", "def", "evaluate", "(", "self", ",", "data_loader", ",", "query", ",", "gallery", ",", "cmc_flag", "=", "False", ",", "rerank", "=", "False", ")", ":", "\n", "        ", "features", ",", "_", "=", "extract_features", "(", "self", ".", "model", ",", "data_loader", ")", "\n", "distmat", ",", "query_features", ",", "gallery_features", "=", "pairwise_distance", "(", "features", ",", "query", ",", "gallery", ")", "\n", "results", "=", "evaluate_all", "(", "query_features", ",", "gallery_features", ",", "distmat", ",", "query", "=", "query", ",", "gallery", "=", "gallery", ",", "cmc_flag", "=", "cmc_flag", ")", "\n", "\n", "if", "(", "not", "rerank", ")", ":", "\n", "            ", "return", "results", "\n", "\n", "", "print", "(", "'Applying person re-ranking ...'", ")", "\n", "distmat_qq", ",", "_", ",", "_", "=", "pairwise_distance", "(", "features", ",", "query", ",", "query", ")", "\n", "distmat_gg", ",", "_", ",", "_", "=", "pairwise_distance", "(", "features", ",", "gallery", ",", "gallery", ")", "\n", "distmat", "=", "re_ranking", "(", "distmat", ".", "numpy", "(", ")", ",", "distmat_qq", ".", "numpy", "(", ")", ",", "distmat_gg", ".", "numpy", "(", ")", ")", "\n", "return", "evaluate_all", "(", "query_features", ",", "gallery_features", ",", "distmat", ",", "query", "=", "query", ",", "gallery", "=", "gallery", ",", "cmc_flag", "=", "cmc_flag", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.extract_cnn_feature": [[15, 20], ["utils.to_torch().cuda", "model", "outputs.data.cpu.data.cpu", "utils.to_torch"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.__init__.to_torch"], ["def", "extract_cnn_feature", "(", "model", ",", "inputs", ")", ":", "\n", "    ", "inputs", "=", "to_torch", "(", "inputs", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "outputs", "=", "outputs", ".", "data", ".", "cpu", "(", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.extract_features": [[21, 51], ["model.eval", "utils.meters.AverageMeter", "utils.meters.AverageMeter", "collections.OrderedDict", "collections.OrderedDict", "time.time", "torch.no_grad", "enumerate", "utils.meters.AverageMeter.update", "evaluators.extract_cnn_feature", "zip", "utils.meters.AverageMeter.update", "time.time", "print", "time.time", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update", "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.extract_cnn_feature", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update"], ["", "def", "extract_features", "(", "model", ",", "data_loader", ",", "print_freq", "=", "50", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "\n", "features", "=", "OrderedDict", "(", ")", "\n", "labels", "=", "OrderedDict", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "imgs", ",", "fnames", ",", "pids", ",", "_", ",", "_", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "            ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "outputs", "=", "extract_cnn_feature", "(", "model", ",", "imgs", ")", "\n", "for", "fname", ",", "output", ",", "pid", "in", "zip", "(", "fnames", ",", "outputs", ",", "pids", ")", ":", "\n", "                ", "features", "[", "fname", "]", "=", "output", "\n", "labels", "[", "fname", "]", "=", "pid", "\n", "\n", "", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "print_freq", "==", "0", ":", "\n", "                ", "print", "(", "'Extract Features: [{}/{}]\\t'", "\n", "'Time {:.3f} ({:.3f})\\t'", "\n", "'Data {:.3f} ({:.3f})\\t'", "\n", ".", "format", "(", "i", "+", "1", ",", "len", "(", "data_loader", ")", ",", "\n", "batch_time", ".", "val", ",", "batch_time", ".", "avg", ",", "\n", "data_time", ".", "val", ",", "data_time", ".", "avg", ")", ")", "\n", "\n", "", "", "", "return", "features", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.pairwise_distance": [[52, 70], ["torch.cat", "torch.cat", "x.view.view", "y.view.view", "dist_m.addmm_", "len", "torch.cat", "x.view.view", "x.view.size", "y.view.size", "torch.pow().sum().expand", "torch.pow().sum().expand().t", "y.view.t", "x.view.numpy", "y.view.numpy", "list", "torch.pow().sum", "dist_m.expand", "features[].unsqueeze", "features[].unsqueeze", "features.values", "torch.mm", "torch.pow().sum", "torch.pow().sum().expand", "torch.pow", "x.view.t", "torch.pow", "torch.pow().sum", "torch.pow"], "function", ["None"], ["", "def", "pairwise_distance", "(", "features", ",", "query", "=", "None", ",", "gallery", "=", "None", ")", ":", "\n", "    ", "if", "query", "is", "None", "and", "gallery", "is", "None", ":", "\n", "        ", "n", "=", "len", "(", "features", ")", "\n", "x", "=", "torch", ".", "cat", "(", "list", "(", "features", ".", "values", "(", ")", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "n", ",", "-", "1", ")", "\n", "dist_m", "=", "torch", ".", "pow", "(", "x", ",", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "*", "2", "\n", "dist_m", "=", "dist_m", ".", "expand", "(", "n", ",", "n", ")", "-", "2", "*", "torch", ".", "mm", "(", "x", ",", "x", ".", "t", "(", ")", ")", "\n", "return", "dist_m", "\n", "\n", "", "x", "=", "torch", ".", "cat", "(", "[", "features", "[", "f", "]", ".", "unsqueeze", "(", "0", ")", "for", "f", ",", "_", ",", "_", "in", "query", "]", ",", "0", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "features", "[", "f", "]", ".", "unsqueeze", "(", "0", ")", "for", "f", ",", "_", ",", "_", "in", "gallery", "]", ",", "0", ")", "\n", "m", ",", "n", "=", "x", ".", "size", "(", "0", ")", ",", "y", ".", "size", "(", "0", ")", "\n", "x", "=", "x", ".", "view", "(", "m", ",", "-", "1", ")", "\n", "y", "=", "y", ".", "view", "(", "n", ",", "-", "1", ")", "\n", "dist_m", "=", "torch", ".", "pow", "(", "x", ",", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "expand", "(", "m", ",", "n", ")", "+", "torch", ".", "pow", "(", "y", ",", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "expand", "(", "n", ",", "m", ")", ".", "t", "(", ")", "\n", "dist_m", ".", "addmm_", "(", "1", ",", "-", "2", ",", "x", ",", "y", ".", "t", "(", ")", ")", "\n", "return", "dist_m", ",", "x", ".", "numpy", "(", ")", ",", "y", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.spcl.evaluators.evaluate_all": [[71, 103], ["evaluation_metrics.mean_ap", "print", "print", "dict", "evaluation_metrics.cmc", "print", "cmc_configs.items"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.evaluation_metrics.ranking.mean_ap", "home.repos.pwc.inspect_result.yxgeee_SpCL.evaluation_metrics.ranking.cmc"], ["", "def", "evaluate_all", "(", "query_features", ",", "gallery_features", ",", "distmat", ",", "query", "=", "None", ",", "gallery", "=", "None", ",", "\n", "query_ids", "=", "None", ",", "gallery_ids", "=", "None", ",", "\n", "query_cams", "=", "None", ",", "gallery_cams", "=", "None", ",", "\n", "cmc_topk", "=", "(", "1", ",", "5", ",", "10", ")", ",", "cmc_flag", "=", "False", ")", ":", "\n", "    ", "if", "query", "is", "not", "None", "and", "gallery", "is", "not", "None", ":", "\n", "        ", "query_ids", "=", "[", "pid", "for", "_", ",", "pid", ",", "_", "in", "query", "]", "\n", "gallery_ids", "=", "[", "pid", "for", "_", ",", "pid", ",", "_", "in", "gallery", "]", "\n", "query_cams", "=", "[", "cam", "for", "_", ",", "_", ",", "cam", "in", "query", "]", "\n", "gallery_cams", "=", "[", "cam", "for", "_", ",", "_", ",", "cam", "in", "gallery", "]", "\n", "", "else", ":", "\n", "        ", "assert", "(", "query_ids", "is", "not", "None", "and", "gallery_ids", "is", "not", "None", "\n", "and", "query_cams", "is", "not", "None", "and", "gallery_cams", "is", "not", "None", ")", "\n", "\n", "# Compute mean AP", "\n", "", "mAP", "=", "mean_ap", "(", "distmat", ",", "query_ids", ",", "gallery_ids", ",", "query_cams", ",", "gallery_cams", ")", "\n", "print", "(", "'Mean AP: {:4.1%}'", ".", "format", "(", "mAP", ")", ")", "\n", "\n", "if", "(", "not", "cmc_flag", ")", ":", "\n", "        ", "return", "mAP", "\n", "\n", "", "cmc_configs", "=", "{", "\n", "'market1501'", ":", "dict", "(", "separate_camera_set", "=", "False", ",", "\n", "single_gallery_shot", "=", "False", ",", "\n", "first_match_break", "=", "True", ")", ",", "}", "\n", "cmc_scores", "=", "{", "name", ":", "cmc", "(", "distmat", ",", "query_ids", ",", "gallery_ids", ",", "\n", "query_cams", ",", "gallery_cams", ",", "**", "params", ")", "\n", "for", "name", ",", "params", "in", "cmc_configs", ".", "items", "(", ")", "}", "\n", "\n", "print", "(", "'CMC Scores:'", ")", "\n", "for", "k", "in", "cmc_topk", ":", "\n", "        ", "print", "(", "'  top-{:<4}{:12.1%}'", ".", "format", "(", "k", ",", "cmc_scores", "[", "'market1501'", "]", "[", "k", "-", "1", "]", ")", ")", "\n", "", "return", "cmc_scores", "[", "'market1501'", "]", ",", "mAP", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_rerank.k_reciprocal_neigh": [[22, 27], ["numpy.where"], "function", ["None"], ["def", "k_reciprocal_neigh", "(", "initial_rank", ",", "i", ",", "k1", ")", ":", "\n", "    ", "forward_k_neigh_index", "=", "initial_rank", "[", "i", ",", ":", "k1", "+", "1", "]", "\n", "backward_k_neigh_index", "=", "initial_rank", "[", "forward_k_neigh_index", ",", ":", "k1", "+", "1", "]", "\n", "fi", "=", "np", ".", "where", "(", "backward_k_neigh_index", "==", "i", ")", "[", "0", "]", "\n", "return", "forward_k_neigh_index", "[", "fi", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_rerank.compute_jaccard_distance": [[28, 122], ["time.time", "faiss.get_num_gpus", "target_features.size", "range", "numpy.zeros", "range", "range", "numpy.zeros", "range", "print", "faiss.StandardGpuResources", "faiss.StandardGpuResources.setDefaultNullStreamAllDevices", "faiss_utils.search_raw_array_pytorch", "initial_rank.cpu().numpy.cpu().numpy", "nn_k1.append", "nn_k1_half.append", "numpy.unique", "numpy.zeros_like", "range", "invIndex.append", "numpy.zeros", "range", "print", "faiss.StandardGpuResources", "faiss.GpuIndexFlatL2", "faiss_utils.index_init_cpu.add", "faiss_utils.search_index_pytorch", "faiss.StandardGpuResources.syncDefaultStreamCurrentDevice", "initial_rank.cpu().numpy.cpu().numpy", "faiss_rerank.k_reciprocal_neigh", "faiss_rerank.k_reciprocal_neigh", "torch.softmax().view().cpu().numpy().astype", "torch.softmax().view().cpu().numpy", "numpy.mean", "numpy.where", "len", "initial_rank.cpu().numpy.cpu", "target_features.size", "target_features.cpu().numpy", "faiss_utils.index_init_gpu", "faiss_utils.index_init_cpu.add", "faiss_utils.index_init_cpu.search", "faiss_utils.index_init_cpu", "faiss_utils.index_init_cpu.add", "faiss_utils.index_init_cpu.search", "int", "len", "numpy.append", "torch.mm", "torch.mm", "numpy.where", "numpy.minimum", "initial_rank.cpu().numpy.cpu", "target_features.size", "target_features.cpu().numpy", "target_features.cpu().numpy", "target_features.size", "target_features.cpu().numpy", "target_features.cpu().numpy", "numpy.around", "numpy.intersect1d", "len", "target_features[].unsqueeze().contiguous", "target_features[].t", "torch.softmax().view().cpu().numpy", "torch.softmax().view().cpu", "time.time", "target_features.cpu", "target_features.cpu", "target_features.cpu", "target_features.cpu", "target_features.cpu", "target_features[].unsqueeze", "torch.softmax().view().cpu", "torch.softmax().view", "torch.softmax().view", "torch.softmax", "torch.softmax"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.search_raw_array_pytorch", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.search_index_pytorch", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_rerank.k_reciprocal_neigh", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_rerank.k_reciprocal_neigh", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.index_init_gpu", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.index_init_cpu"], ["", "def", "compute_jaccard_distance", "(", "target_features", ",", "k1", "=", "20", ",", "k2", "=", "6", ",", "print_flag", "=", "True", ",", "search_option", "=", "0", ",", "use_float16", "=", "False", ")", ":", "\n", "    ", "end", "=", "time", ".", "time", "(", ")", "\n", "if", "print_flag", ":", "\n", "        ", "print", "(", "'Computing jaccard distance...'", ")", "\n", "\n", "", "ngpus", "=", "faiss", ".", "get_num_gpus", "(", ")", "\n", "N", "=", "target_features", ".", "size", "(", "0", ")", "\n", "mat_type", "=", "np", ".", "float16", "if", "use_float16", "else", "np", ".", "float32", "\n", "\n", "if", "(", "search_option", "==", "0", ")", ":", "\n", "# GPU + PyTorch CUDA Tensors (1)", "\n", "        ", "res", "=", "faiss", ".", "StandardGpuResources", "(", ")", "\n", "res", ".", "setDefaultNullStreamAllDevices", "(", ")", "\n", "_", ",", "initial_rank", "=", "search_raw_array_pytorch", "(", "res", ",", "target_features", ",", "target_features", ",", "k1", ")", "\n", "initial_rank", "=", "initial_rank", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "elif", "(", "search_option", "==", "1", ")", ":", "\n", "# GPU + PyTorch CUDA Tensors (2)", "\n", "        ", "res", "=", "faiss", ".", "StandardGpuResources", "(", ")", "\n", "index", "=", "faiss", ".", "GpuIndexFlatL2", "(", "res", ",", "target_features", ".", "size", "(", "-", "1", ")", ")", "\n", "index", ".", "add", "(", "target_features", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "_", ",", "initial_rank", "=", "search_index_pytorch", "(", "index", ",", "target_features", ",", "k1", ")", "\n", "res", ".", "syncDefaultStreamCurrentDevice", "(", ")", "\n", "initial_rank", "=", "initial_rank", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "elif", "(", "search_option", "==", "2", ")", ":", "\n", "# GPU", "\n", "        ", "index", "=", "index_init_gpu", "(", "ngpus", ",", "target_features", ".", "size", "(", "-", "1", ")", ")", "\n", "index", ".", "add", "(", "target_features", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "_", ",", "initial_rank", "=", "index", ".", "search", "(", "target_features", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "k1", ")", "\n", "", "else", ":", "\n", "# CPU", "\n", "        ", "index", "=", "index_init_cpu", "(", "target_features", ".", "size", "(", "-", "1", ")", ")", "\n", "index", ".", "add", "(", "target_features", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "_", ",", "initial_rank", "=", "index", ".", "search", "(", "target_features", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "k1", ")", "\n", "\n", "\n", "", "nn_k1", "=", "[", "]", "\n", "nn_k1_half", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "nn_k1", ".", "append", "(", "k_reciprocal_neigh", "(", "initial_rank", ",", "i", ",", "k1", ")", ")", "\n", "nn_k1_half", ".", "append", "(", "k_reciprocal_neigh", "(", "initial_rank", ",", "i", ",", "int", "(", "np", ".", "around", "(", "k1", "/", "2", ")", ")", ")", ")", "\n", "\n", "", "V", "=", "np", ".", "zeros", "(", "(", "N", ",", "N", ")", ",", "dtype", "=", "mat_type", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "k_reciprocal_index", "=", "nn_k1", "[", "i", "]", "\n", "k_reciprocal_expansion_index", "=", "k_reciprocal_index", "\n", "for", "candidate", "in", "k_reciprocal_index", ":", "\n", "            ", "candidate_k_reciprocal_index", "=", "nn_k1_half", "[", "candidate", "]", "\n", "if", "(", "len", "(", "np", ".", "intersect1d", "(", "candidate_k_reciprocal_index", ",", "k_reciprocal_index", ")", ")", ">", "2", "/", "3", "*", "len", "(", "candidate_k_reciprocal_index", ")", ")", ":", "\n", "                ", "k_reciprocal_expansion_index", "=", "np", ".", "append", "(", "k_reciprocal_expansion_index", ",", "candidate_k_reciprocal_index", ")", "\n", "\n", "", "", "k_reciprocal_expansion_index", "=", "np", ".", "unique", "(", "k_reciprocal_expansion_index", ")", "## element-wise unique", "\n", "dist", "=", "2", "-", "2", "*", "torch", ".", "mm", "(", "target_features", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ".", "contiguous", "(", ")", ",", "target_features", "[", "k_reciprocal_expansion_index", "]", ".", "t", "(", ")", ")", "\n", "if", "use_float16", ":", "\n", "            ", "V", "[", "i", ",", "k_reciprocal_expansion_index", "]", "=", "F", ".", "softmax", "(", "-", "dist", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "mat_type", ")", "\n", "", "else", ":", "\n", "            ", "V", "[", "i", ",", "k_reciprocal_expansion_index", "]", "=", "F", ".", "softmax", "(", "-", "dist", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "", "del", "nn_k1", ",", "nn_k1_half", "\n", "\n", "if", "k2", "!=", "1", ":", "\n", "        ", "V_qe", "=", "np", ".", "zeros_like", "(", "V", ",", "dtype", "=", "mat_type", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "V_qe", "[", "i", ",", ":", "]", "=", "np", ".", "mean", "(", "V", "[", "initial_rank", "[", "i", ",", ":", "k2", "]", ",", ":", "]", ",", "axis", "=", "0", ")", "\n", "", "V", "=", "V_qe", "\n", "del", "V_qe", "\n", "\n", "", "del", "initial_rank", "\n", "\n", "invIndex", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "invIndex", ".", "append", "(", "np", ".", "where", "(", "V", "[", ":", ",", "i", "]", "!=", "0", ")", "[", "0", "]", ")", "#len(invIndex)=all_num", "\n", "\n", "", "jaccard_dist", "=", "np", ".", "zeros", "(", "(", "N", ",", "N", ")", ",", "dtype", "=", "mat_type", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "temp_min", "=", "np", ".", "zeros", "(", "(", "1", ",", "N", ")", ",", "dtype", "=", "mat_type", ")", "\n", "# temp_max = np.zeros((1,N), dtype=mat_type)", "\n", "indNonZero", "=", "np", ".", "where", "(", "V", "[", "i", ",", ":", "]", "!=", "0", ")", "[", "0", "]", "\n", "indImages", "=", "[", "]", "\n", "indImages", "=", "[", "invIndex", "[", "ind", "]", "for", "ind", "in", "indNonZero", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "indNonZero", ")", ")", ":", "\n", "            ", "temp_min", "[", "0", ",", "indImages", "[", "j", "]", "]", "=", "temp_min", "[", "0", ",", "indImages", "[", "j", "]", "]", "+", "np", ".", "minimum", "(", "V", "[", "i", ",", "indNonZero", "[", "j", "]", "]", ",", "V", "[", "indImages", "[", "j", "]", ",", "indNonZero", "[", "j", "]", "]", ")", "\n", "# temp_max[0,indImages[j]] = temp_max[0,indImages[j]]+np.maximum(V[i,indNonZero[j]],V[indImages[j],indNonZero[j]])", "\n", "\n", "", "jaccard_dist", "[", "i", "]", "=", "1", "-", "temp_min", "/", "(", "2", "-", "temp_min", ")", "\n", "# jaccard_dist[i] = 1-temp_min/(temp_max+1e-6)", "\n", "\n", "", "del", "invIndex", ",", "V", "\n", "\n", "pos_bool", "=", "(", "jaccard_dist", "<", "0", ")", "\n", "jaccard_dist", "[", "pos_bool", "]", "=", "0.0", "\n", "if", "print_flag", ":", "\n", "        ", "print", "(", "\"Jaccard distance computing time cost: {}\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "end", ")", ")", "\n", "\n", "", "return", "jaccard_dist", "\n", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.rerank.re_ranking": [[31, 98], ["numpy.concatenate", "numpy.power().astype", "numpy.transpose", "numpy.zeros_like().astype", "numpy.argsort().astype", "range", "range", "numpy.zeros_like", "range", "range", "numpy.unique", "numpy.exp", "numpy.zeros_like", "range", "invIndex.append", "numpy.zeros", "range", "numpy.concatenate", "numpy.concatenate", "numpy.power", "numpy.max", "numpy.zeros_like", "numpy.argsort", "numpy.where", "len", "numpy.sum", "numpy.mean", "numpy.where", "len", "numpy.where", "len", "numpy.append", "numpy.where", "numpy.minimum", "numpy.intersect1d", "len", "int", "int", "numpy.around", "numpy.around"], "function", ["None"], ["def", "re_ranking", "(", "q_g_dist", ",", "q_q_dist", ",", "g_g_dist", ",", "k1", "=", "20", ",", "k2", "=", "6", ",", "lambda_value", "=", "0.3", ")", ":", "\n", "\n", "# The following naming, e.g. gallery_num, is different from outer scope.", "\n", "# Don't care about it.", "\n", "\n", "    ", "original_dist", "=", "np", ".", "concatenate", "(", "\n", "[", "np", ".", "concatenate", "(", "[", "q_q_dist", ",", "q_g_dist", "]", ",", "axis", "=", "1", ")", ",", "\n", "np", ".", "concatenate", "(", "[", "q_g_dist", ".", "T", ",", "g_g_dist", "]", ",", "axis", "=", "1", ")", "]", ",", "\n", "axis", "=", "0", ")", "\n", "original_dist", "=", "np", ".", "power", "(", "original_dist", ",", "2", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "original_dist", "=", "np", ".", "transpose", "(", "1.", "*", "original_dist", "/", "np", ".", "max", "(", "original_dist", ",", "axis", "=", "0", ")", ")", "\n", "V", "=", "np", ".", "zeros_like", "(", "original_dist", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "initial_rank", "=", "np", ".", "argsort", "(", "original_dist", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "query_num", "=", "q_g_dist", ".", "shape", "[", "0", "]", "\n", "gallery_num", "=", "q_g_dist", ".", "shape", "[", "0", "]", "+", "q_g_dist", ".", "shape", "[", "1", "]", "\n", "all_num", "=", "gallery_num", "\n", "\n", "for", "i", "in", "range", "(", "all_num", ")", ":", "\n", "# k-reciprocal neighbors", "\n", "        ", "forward_k_neigh_index", "=", "initial_rank", "[", "i", ",", ":", "k1", "+", "1", "]", "\n", "backward_k_neigh_index", "=", "initial_rank", "[", "forward_k_neigh_index", ",", ":", "k1", "+", "1", "]", "\n", "fi", "=", "np", ".", "where", "(", "backward_k_neigh_index", "==", "i", ")", "[", "0", "]", "\n", "k_reciprocal_index", "=", "forward_k_neigh_index", "[", "fi", "]", "\n", "k_reciprocal_expansion_index", "=", "k_reciprocal_index", "\n", "for", "j", "in", "range", "(", "len", "(", "k_reciprocal_index", ")", ")", ":", "\n", "            ", "candidate", "=", "k_reciprocal_index", "[", "j", "]", "\n", "candidate_forward_k_neigh_index", "=", "initial_rank", "[", "candidate", ",", ":", "int", "(", "np", ".", "around", "(", "k1", "/", "2.", ")", ")", "+", "1", "]", "\n", "candidate_backward_k_neigh_index", "=", "initial_rank", "[", "candidate_forward_k_neigh_index", ",", ":", "int", "(", "np", ".", "around", "(", "k1", "/", "2.", ")", ")", "+", "1", "]", "\n", "fi_candidate", "=", "np", ".", "where", "(", "candidate_backward_k_neigh_index", "==", "candidate", ")", "[", "0", "]", "\n", "candidate_k_reciprocal_index", "=", "candidate_forward_k_neigh_index", "[", "fi_candidate", "]", "\n", "if", "len", "(", "np", ".", "intersect1d", "(", "candidate_k_reciprocal_index", ",", "k_reciprocal_index", ")", ")", ">", "2.", "/", "3", "*", "len", "(", "candidate_k_reciprocal_index", ")", ":", "\n", "                ", "k_reciprocal_expansion_index", "=", "np", ".", "append", "(", "k_reciprocal_expansion_index", ",", "candidate_k_reciprocal_index", ")", "\n", "\n", "", "", "k_reciprocal_expansion_index", "=", "np", ".", "unique", "(", "k_reciprocal_expansion_index", ")", "\n", "weight", "=", "np", ".", "exp", "(", "-", "original_dist", "[", "i", ",", "k_reciprocal_expansion_index", "]", ")", "\n", "V", "[", "i", ",", "k_reciprocal_expansion_index", "]", "=", "1.", "*", "weight", "/", "np", ".", "sum", "(", "weight", ")", "\n", "", "original_dist", "=", "original_dist", "[", ":", "query_num", ",", "]", "\n", "if", "k2", "!=", "1", ":", "\n", "        ", "V_qe", "=", "np", ".", "zeros_like", "(", "V", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "all_num", ")", ":", "\n", "            ", "V_qe", "[", "i", ",", ":", "]", "=", "np", ".", "mean", "(", "V", "[", "initial_rank", "[", "i", ",", ":", "k2", "]", ",", ":", "]", ",", "axis", "=", "0", ")", "\n", "", "V", "=", "V_qe", "\n", "del", "V_qe", "\n", "", "del", "initial_rank", "\n", "invIndex", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "gallery_num", ")", ":", "\n", "        ", "invIndex", ".", "append", "(", "np", ".", "where", "(", "V", "[", ":", ",", "i", "]", "!=", "0", ")", "[", "0", "]", ")", "\n", "\n", "", "jaccard_dist", "=", "np", ".", "zeros_like", "(", "original_dist", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "query_num", ")", ":", "\n", "        ", "temp_min", "=", "np", ".", "zeros", "(", "shape", "=", "[", "1", ",", "gallery_num", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "indNonZero", "=", "np", ".", "where", "(", "V", "[", "i", ",", ":", "]", "!=", "0", ")", "[", "0", "]", "\n", "indImages", "=", "[", "]", "\n", "indImages", "=", "[", "invIndex", "[", "ind", "]", "for", "ind", "in", "indNonZero", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "indNonZero", ")", ")", ":", "\n", "            ", "temp_min", "[", "0", ",", "indImages", "[", "j", "]", "]", "=", "temp_min", "[", "0", ",", "indImages", "[", "j", "]", "]", "+", "np", ".", "minimum", "(", "V", "[", "i", ",", "indNonZero", "[", "j", "]", "]", ",", "V", "[", "indImages", "[", "j", "]", ",", "indNonZero", "[", "j", "]", "]", ")", "\n", "", "jaccard_dist", "[", "i", "]", "=", "1", "-", "temp_min", "/", "(", "2.", "-", "temp_min", ")", "\n", "\n", "", "final_dist", "=", "jaccard_dist", "*", "(", "1", "-", "lambda_value", ")", "+", "original_dist", "*", "lambda_value", "\n", "del", "original_dist", "\n", "del", "V", "\n", "del", "jaccard_dist", "\n", "final_dist", "=", "final_dist", "[", ":", "query_num", ",", "query_num", ":", "]", "\n", "return", "final_dist", "\n", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.__init__": [[9, 15], ["osutils.mkdir_if_missing", "open", "os.path.dirname"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.osutils.mkdir_if_missing"], ["    ", "def", "__init__", "(", "self", ",", "fpath", "=", "None", ")", ":", "\n", "        ", "self", ".", "console", "=", "sys", ".", "stdout", "\n", "self", ".", "file", "=", "None", "\n", "if", "fpath", "is", "not", "None", ":", "\n", "            ", "mkdir_if_missing", "(", "os", ".", "path", ".", "dirname", "(", "fpath", ")", ")", "\n", "self", ".", "file", "=", "open", "(", "fpath", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.__del__": [[16, 18], ["logging.Logger.close"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.close"], ["", "", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "self", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.__enter__": [[19, 21], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.__exit__": [[22, 24], ["logging.Logger.close"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.close"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.write": [[25, 29], ["logging.Logger.console.write", "logging.Logger.file.write"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.write", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.write"], ["", "def", "write", "(", "self", ",", "msg", ")", ":", "\n", "        ", "self", ".", "console", ".", "write", "(", "msg", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.flush": [[30, 35], ["logging.Logger.console.flush", "logging.Logger.file.flush", "os.fsync", "logging.Logger.file.fileno"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.flush", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.flush"], ["", "", "def", "flush", "(", "self", ")", ":", "\n", "        ", "self", ".", "console", ".", "flush", "(", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "flush", "(", ")", "\n", "os", ".", "fsync", "(", "self", ".", "file", ".", "fileno", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.close": [[36, 40], ["logging.Logger.console.close", "logging.Logger.file.close"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.close", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.logging.Logger.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "console", ".", "close", "(", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "close", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.swig_ptr_from_FloatTensor": [[6, 11], ["x.is_contiguous", "faiss.cast_integer_to_float_ptr", "x.storage().data_ptr", "x.storage_offset", "x.storage"], "function", ["None"], ["def", "swig_ptr_from_FloatTensor", "(", "x", ")", ":", "\n", "    ", "assert", "x", ".", "is_contiguous", "(", ")", "\n", "assert", "x", ".", "dtype", "==", "torch", ".", "float32", "\n", "return", "faiss", ".", "cast_integer_to_float_ptr", "(", "\n", "x", ".", "storage", "(", ")", ".", "data_ptr", "(", ")", "+", "x", ".", "storage_offset", "(", ")", "*", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.swig_ptr_from_LongTensor": [[12, 17], ["x.is_contiguous", "faiss.cast_integer_to_long_ptr", "x.storage().data_ptr", "x.storage_offset", "x.storage"], "function", ["None"], ["", "def", "swig_ptr_from_LongTensor", "(", "x", ")", ":", "\n", "    ", "assert", "x", ".", "is_contiguous", "(", ")", "\n", "assert", "x", ".", "dtype", "==", "torch", ".", "int64", ",", "'dtype=%s'", "%", "x", ".", "dtype", "\n", "return", "faiss", ".", "cast_integer_to_long_ptr", "(", "\n", "x", ".", "storage", "(", ")", ".", "data_ptr", "(", ")", "+", "x", ".", "storage_offset", "(", ")", "*", "8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.search_index_pytorch": [[18, 42], ["x.is_contiguous", "x.size", "torch.cuda.synchronize", "faiss_utils.swig_ptr_from_FloatTensor", "faiss_utils.swig_ptr_from_LongTensor", "faiss_utils.swig_ptr_from_FloatTensor", "index.search_c", "torch.cuda.synchronize", "torch.empty", "torch.empty", "torch.empty.size", "torch.empty.size"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.swig_ptr_from_FloatTensor", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.swig_ptr_from_LongTensor", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.swig_ptr_from_FloatTensor"], ["", "def", "search_index_pytorch", "(", "index", ",", "x", ",", "k", ",", "D", "=", "None", ",", "I", "=", "None", ")", ":", "\n", "    ", "\"\"\"call the search function of an index with pytorch tensor I/O (CPU\n    and GPU supported)\"\"\"", "\n", "assert", "x", ".", "is_contiguous", "(", ")", "\n", "n", ",", "d", "=", "x", ".", "size", "(", ")", "\n", "assert", "d", "==", "index", ".", "d", "\n", "\n", "if", "D", "is", "None", ":", "\n", "        ", "D", "=", "torch", ".", "empty", "(", "(", "n", ",", "k", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "x", ".", "device", ")", "\n", "", "else", ":", "\n", "        ", "assert", "D", ".", "size", "(", ")", "==", "(", "n", ",", "k", ")", "\n", "\n", "", "if", "I", "is", "None", ":", "\n", "        ", "I", "=", "torch", ".", "empty", "(", "(", "n", ",", "k", ")", ",", "dtype", "=", "torch", ".", "int64", ",", "device", "=", "x", ".", "device", ")", "\n", "", "else", ":", "\n", "        ", "assert", "I", ".", "size", "(", ")", "==", "(", "n", ",", "k", ")", "\n", "", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "xptr", "=", "swig_ptr_from_FloatTensor", "(", "x", ")", "\n", "Iptr", "=", "swig_ptr_from_LongTensor", "(", "I", ")", "\n", "Dptr", "=", "swig_ptr_from_FloatTensor", "(", "D", ")", "\n", "index", ".", "search_c", "(", "n", ",", "xptr", ",", "\n", "k", ",", "Dptr", ",", "Iptr", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "return", "D", ",", "I", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.search_raw_array_pytorch": [[43, 90], ["xq.t.size", "xq.t.is_contiguous", "faiss_utils.swig_ptr_from_FloatTensor", "xb.t.size", "xb.t.is_contiguous", "faiss_utils.swig_ptr_from_FloatTensor", "faiss_utils.swig_ptr_from_FloatTensor", "faiss_utils.swig_ptr_from_LongTensor", "faiss.bruteForceKnn", "xq.t.t().is_contiguous", "xb.t.t().is_contiguous", "torch.empty", "torch.empty", "xq.t.t", "TypeError", "xb.t.t", "TypeError", "xq.t.t", "xb.t.t"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.swig_ptr_from_FloatTensor", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.swig_ptr_from_FloatTensor", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.swig_ptr_from_FloatTensor", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.swig_ptr_from_LongTensor"], ["", "def", "search_raw_array_pytorch", "(", "res", ",", "xb", ",", "xq", ",", "k", ",", "D", "=", "None", ",", "I", "=", "None", ",", "\n", "metric", "=", "faiss", ".", "METRIC_L2", ")", ":", "\n", "    ", "assert", "xb", ".", "device", "==", "xq", ".", "device", "\n", "\n", "nq", ",", "d", "=", "xq", ".", "size", "(", ")", "\n", "if", "xq", ".", "is_contiguous", "(", ")", ":", "\n", "        ", "xq_row_major", "=", "True", "\n", "", "elif", "xq", ".", "t", "(", ")", ".", "is_contiguous", "(", ")", ":", "\n", "        ", "xq", "=", "xq", ".", "t", "(", ")", "# I initially wrote xq:t(), Lua is still haunting me :-)", "\n", "xq_row_major", "=", "False", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "'matrix should be row or column-major'", ")", "\n", "\n", "", "xq_ptr", "=", "swig_ptr_from_FloatTensor", "(", "xq", ")", "\n", "\n", "nb", ",", "d2", "=", "xb", ".", "size", "(", ")", "\n", "assert", "d2", "==", "d", "\n", "if", "xb", ".", "is_contiguous", "(", ")", ":", "\n", "        ", "xb_row_major", "=", "True", "\n", "", "elif", "xb", ".", "t", "(", ")", ".", "is_contiguous", "(", ")", ":", "\n", "        ", "xb", "=", "xb", ".", "t", "(", ")", "\n", "xb_row_major", "=", "False", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "'matrix should be row or column-major'", ")", "\n", "", "xb_ptr", "=", "swig_ptr_from_FloatTensor", "(", "xb", ")", "\n", "\n", "if", "D", "is", "None", ":", "\n", "        ", "D", "=", "torch", ".", "empty", "(", "nq", ",", "k", ",", "device", "=", "xb", ".", "device", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "assert", "D", ".", "shape", "==", "(", "nq", ",", "k", ")", "\n", "assert", "D", ".", "device", "==", "xb", ".", "device", "\n", "\n", "", "if", "I", "is", "None", ":", "\n", "        ", "I", "=", "torch", ".", "empty", "(", "nq", ",", "k", ",", "device", "=", "xb", ".", "device", ",", "dtype", "=", "torch", ".", "int64", ")", "\n", "", "else", ":", "\n", "        ", "assert", "I", ".", "shape", "==", "(", "nq", ",", "k", ")", "\n", "assert", "I", ".", "device", "==", "xb", ".", "device", "\n", "\n", "", "D_ptr", "=", "swig_ptr_from_FloatTensor", "(", "D", ")", "\n", "I_ptr", "=", "swig_ptr_from_LongTensor", "(", "I", ")", "\n", "\n", "faiss", ".", "bruteForceKnn", "(", "res", ",", "metric", ",", "\n", "xb_ptr", ",", "xb_row_major", ",", "nb", ",", "\n", "xq_ptr", ",", "xq_row_major", ",", "nq", ",", "\n", "d", ",", "k", ",", "D_ptr", ",", "I_ptr", ")", "\n", "\n", "return", "D", ",", "I", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.index_init_gpu": [[91, 106], ["range", "faiss.IndexShards", "faiss.IndexShards.reset", "faiss.GpuIndexFlatConfig", "flat_config.append", "faiss.StandardGpuResources", "faiss.GpuIndexFlatL2", "faiss.IndexShards.add_shard", "range", "range"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.reset"], ["", "def", "index_init_gpu", "(", "ngpus", ",", "feat_dim", ")", ":", "\n", "    ", "flat_config", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "ngpus", ")", ":", "\n", "        ", "cfg", "=", "faiss", ".", "GpuIndexFlatConfig", "(", ")", "\n", "cfg", ".", "useFloat16", "=", "False", "\n", "cfg", ".", "device", "=", "i", "\n", "flat_config", ".", "append", "(", "cfg", ")", "\n", "\n", "", "res", "=", "[", "faiss", ".", "StandardGpuResources", "(", ")", "for", "i", "in", "range", "(", "ngpus", ")", "]", "\n", "indexes", "=", "[", "faiss", ".", "GpuIndexFlatL2", "(", "res", "[", "i", "]", ",", "feat_dim", ",", "flat_config", "[", "i", "]", ")", "for", "i", "in", "range", "(", "ngpus", ")", "]", "\n", "index", "=", "faiss", ".", "IndexShards", "(", "feat_dim", ")", "\n", "for", "sub_index", "in", "indexes", ":", "\n", "        ", "index", ".", "add_shard", "(", "sub_index", ")", "\n", "", "index", ".", "reset", "(", ")", "\n", "return", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.faiss_utils.index_init_cpu": [[107, 109], ["faiss.IndexFlatL2"], "function", ["None"], ["", "def", "index_init_cpu", "(", "feat_dim", ")", ":", "\n", "    ", "return", "faiss", ".", "IndexFlatL2", "(", "feat_dim", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.osutils.mkdir_if_missing": [[6, 12], ["os.makedirs"], "function", ["None"], ["def", "mkdir_if_missing", "(", "dir_path", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "makedirs", "(", "dir_path", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "        ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "            ", "raise", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.__init__": [[7, 12], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.reset": [[13, 18], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.meters.AverageMeter.update": [[19, 24], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.serialization.read_json": [[12, 16], ["open", "json.load"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load"], ["def", "read_json", "(", "fpath", ")", ":", "\n", "    ", "with", "open", "(", "fpath", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "obj", "=", "json", ".", "load", "(", "f", ")", "\n", "", "return", "obj", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.serialization.write_json": [[18, 22], ["osutils.mkdir_if_missing", "os.dirname", "open", "json.dump"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.osutils.mkdir_if_missing"], ["", "def", "write_json", "(", "obj", ",", "fpath", ")", ":", "\n", "    ", "mkdir_if_missing", "(", "osp", ".", "dirname", "(", "fpath", ")", ")", "\n", "with", "open", "(", "fpath", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "json", ".", "dump", "(", "obj", ",", "f", ",", "indent", "=", "4", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.serialization.save_checkpoint": [[24, 29], ["osutils.mkdir_if_missing", "torch.save", "os.dirname", "shutil.copy", "os.join", "os.dirname"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.osutils.mkdir_if_missing"], ["", "", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "fpath", "=", "'checkpoint.pth.tar'", ")", ":", "\n", "    ", "mkdir_if_missing", "(", "osp", ".", "dirname", "(", "fpath", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "fpath", ")", "\n", "if", "is_best", ":", "\n", "        ", "shutil", ".", "copy", "(", "fpath", ",", "osp", ".", "join", "(", "osp", ".", "dirname", "(", "fpath", ")", ",", "'model_best.pth.tar'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.serialization.load_checkpoint": [[31, 39], ["os.isfile", "torch.load", "print", "ValueError", "torch.device"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load"], ["", "", "def", "load_checkpoint", "(", "fpath", ")", ":", "\n", "    ", "if", "osp", ".", "isfile", "(", "fpath", ")", ":", "\n", "# checkpoint = torch.load(fpath)", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "fpath", ",", "map_location", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", "\n", "print", "(", "\"=> Loaded checkpoint '{}'\"", ".", "format", "(", "fpath", ")", ")", "\n", "return", "checkpoint", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"=> No checkpoint found at '{}'\"", ".", "format", "(", "fpath", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.serialization.copy_state_dict": [[41, 62], ["model.state_dict", "set", "state_dict.items", "isinstance", "tgt_state[].copy_", "set.add", "set", "len", "print", "name.startswith", "param.size", "tgt_state[].size", "print", "model.state_dict.keys", "param.size", "tgt_state[].size", "len"], "function", ["None"], ["", "", "def", "copy_state_dict", "(", "state_dict", ",", "model", ",", "strip", "=", "None", ")", ":", "\n", "    ", "tgt_state", "=", "model", ".", "state_dict", "(", ")", "\n", "copied_names", "=", "set", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "strip", "is", "not", "None", "and", "name", ".", "startswith", "(", "strip", ")", ":", "\n", "            ", "name", "=", "name", "[", "len", "(", "strip", ")", ":", "]", "\n", "", "if", "name", "not", "in", "tgt_state", ":", "\n", "            ", "continue", "\n", "", "if", "isinstance", "(", "param", ",", "Parameter", ")", ":", "\n", "            ", "param", "=", "param", ".", "data", "\n", "", "if", "param", ".", "size", "(", ")", "!=", "tgt_state", "[", "name", "]", ".", "size", "(", ")", ":", "\n", "            ", "print", "(", "'mismatch:'", ",", "name", ",", "param", ".", "size", "(", ")", ",", "tgt_state", "[", "name", "]", ".", "size", "(", ")", ")", "\n", "continue", "\n", "", "tgt_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "copied_names", ".", "add", "(", "name", ")", "\n", "\n", "", "missing", "=", "set", "(", "tgt_state", ".", "keys", "(", ")", ")", "-", "copied_names", "\n", "if", "len", "(", "missing", ")", ">", "0", ":", "\n", "        ", "print", "(", "\"missing keys in state_dict:\"", ",", "missing", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.__init__.to_numpy": [[6, 13], ["torch.is_tensor", "tensor.cpu().numpy", "ValueError", "tensor.cpu", "type", "type"], "function", ["None"], ["from", ".", "import", "utils", "\n", "from", ".", "import", "evaluators", "\n", "from", ".", "import", "trainers", "\n", "\n", "__version__", "=", "'0.1.0'", "\n", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.__init__.to_torch": [[15, 22], ["torch.from_numpy", "type", "torch.is_tensor", "ValueError", "type"], "function", ["None"], []], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.transforms.RectScale.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "height", ",", "width", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.transforms.RectScale.__call__": [[15, 20], ["img.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "h", "==", "self", ".", "height", "and", "w", "==", "self", ".", "width", ":", "\n", "            ", "return", "img", "\n", "", "return", "img", ".", "resize", "(", "(", "self", ".", "width", ",", "self", ".", "height", ")", ",", "self", ".", "interpolation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.transforms.RandomSizedRectCrop.__init__": [[23, 27], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "height", ",", "width", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.transforms.RandomSizedRectCrop.__call__": [[28, 50], ["range", "transforms.RectScale", "RectScale.", "random.uniform", "int", "int", "random.uniform", "round", "round", "random.randint", "random.randint", "img.crop.crop.crop", "img.crop.crop.resize", "math.sqrt", "math.sqrt"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "for", "attempt", "in", "range", "(", "10", ")", ":", "\n", "            ", "area", "=", "img", ".", "size", "[", "0", "]", "*", "img", ".", "size", "[", "1", "]", "\n", "target_area", "=", "random", ".", "uniform", "(", "0.64", ",", "1.0", ")", "*", "area", "\n", "aspect_ratio", "=", "random", ".", "uniform", "(", "2", ",", "3", ")", "\n", "\n", "h", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "*", "aspect_ratio", ")", ")", ")", "\n", "w", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "/", "aspect_ratio", ")", ")", ")", "\n", "\n", "if", "w", "<=", "img", ".", "size", "[", "0", "]", "and", "h", "<=", "img", ".", "size", "[", "1", "]", ":", "\n", "                ", "x1", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "size", "[", "0", "]", "-", "w", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "size", "[", "1", "]", "-", "h", ")", "\n", "\n", "img", "=", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "w", ",", "y1", "+", "h", ")", ")", "\n", "assert", "(", "img", ".", "size", "==", "(", "w", ",", "h", ")", ")", "\n", "\n", "return", "img", ".", "resize", "(", "(", "self", ".", "width", ",", "self", ".", "height", ")", ",", "self", ".", "interpolation", ")", "\n", "\n", "# Fallback", "\n", "", "", "scale", "=", "RectScale", "(", "self", ".", "height", ",", "self", ".", "width", ",", "\n", "interpolation", "=", "self", ".", "interpolation", ")", "\n", "return", "scale", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.transforms.RandomErasing.__init__": [[64, 70], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "probability", "=", "0.5", ",", "sl", "=", "0.02", ",", "sh", "=", "0.4", ",", "r1", "=", "0.3", ",", "mean", "=", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ")", ":", "\n", "        ", "self", ".", "probability", "=", "probability", "\n", "self", ".", "mean", "=", "mean", "\n", "self", ".", "sl", "=", "sl", "\n", "self", ".", "sh", "=", "sh", "\n", "self", ".", "r1", "=", "r1", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.transforms.RandomErasing.__call__": [[71, 97], ["range", "random.uniform", "random.uniform", "int", "int", "random.uniform", "round", "round", "random.randint", "random.randint", "img.size", "img.size", "math.sqrt", "math.sqrt", "img.size", "img.size", "img.size", "img.size", "img.size"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "\n", "        ", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", ">=", "self", ".", "probability", ":", "\n", "            ", "return", "img", "\n", "\n", "", "for", "attempt", "in", "range", "(", "100", ")", ":", "\n", "            ", "area", "=", "img", ".", "size", "(", ")", "[", "1", "]", "*", "img", ".", "size", "(", ")", "[", "2", "]", "\n", "\n", "target_area", "=", "random", ".", "uniform", "(", "self", ".", "sl", ",", "self", ".", "sh", ")", "*", "area", "\n", "aspect_ratio", "=", "random", ".", "uniform", "(", "self", ".", "r1", ",", "1", "/", "self", ".", "r1", ")", "\n", "\n", "h", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "*", "aspect_ratio", ")", ")", ")", "\n", "w", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "/", "aspect_ratio", ")", ")", ")", "\n", "\n", "if", "w", "<", "img", ".", "size", "(", ")", "[", "2", "]", "and", "h", "<", "img", ".", "size", "(", ")", "[", "1", "]", ":", "\n", "                ", "x1", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "size", "(", ")", "[", "1", "]", "-", "h", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "size", "(", ")", "[", "2", "]", "-", "w", ")", "\n", "if", "img", ".", "size", "(", ")", "[", "0", "]", "==", "3", ":", "\n", "                    ", "img", "[", "0", ",", "x1", ":", "x1", "+", "h", ",", "y1", ":", "y1", "+", "w", "]", "=", "self", ".", "mean", "[", "0", "]", "\n", "img", "[", "1", ",", "x1", ":", "x1", "+", "h", ",", "y1", ":", "y1", "+", "w", "]", "=", "self", ".", "mean", "[", "1", "]", "\n", "img", "[", "2", ",", "x1", ":", "x1", "+", "h", ",", "y1", ":", "y1", "+", "w", "]", "=", "self", ".", "mean", "[", "2", "]", "\n", "", "else", ":", "\n", "                    ", "img", "[", "0", ",", "x1", ":", "x1", "+", "h", ",", "y1", ":", "y1", "+", "w", "]", "=", "self", ".", "mean", "[", "0", "]", "\n", "", "return", "img", "\n", "\n", "", "", "return", "img", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.preprocessor.Preprocessor.__init__": [[11, 16], ["torch.utils.data.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "root", "=", "None", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "Preprocessor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.preprocessor.Preprocessor.__len__": [[17, 19], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.preprocessor.Preprocessor.__getitem__": [[20, 22], ["preprocessor.Preprocessor._get_single_item"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.data.preprocessor.Preprocessor._get_single_item"], ["", "def", "__getitem__", "(", "self", ",", "indices", ")", ":", "\n", "        ", "return", "self", ".", "_get_single_item", "(", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.preprocessor.Preprocessor._get_single_item": [[23, 35], ["PIL.Image.open().convert", "os.join", "os.join", "preprocessor.Preprocessor.transform", "PIL.Image.open"], "methods", ["None"], ["", "def", "_get_single_item", "(", "self", ",", "index", ")", ":", "\n", "        ", "fname", ",", "pid", ",", "camid", "=", "self", ".", "dataset", "[", "index", "]", "\n", "fpath", "=", "fname", "\n", "if", "self", ".", "root", "is", "not", "None", ":", "\n", "            ", "fpath", "=", "osp", ".", "join", "(", "self", ".", "root", ",", "fname", ")", "\n", "\n", "", "img", "=", "Image", ".", "open", "(", "fpath", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img", ",", "fname", ",", "pid", ",", "camid", ",", "index", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.sampler.RandomIdentitySampler.__init__": [[20, 28], ["collections.defaultdict", "enumerate", "list", "len", "sampler.RandomIdentitySampler.index_dic[].append", "sampler.RandomIdentitySampler.index_dic.keys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_source", ",", "num_instances", ")", ":", "\n", "        ", "self", ".", "data_source", "=", "data_source", "\n", "self", ".", "num_instances", "=", "num_instances", "\n", "self", ".", "index_dic", "=", "defaultdict", "(", "list", ")", "\n", "for", "index", ",", "(", "_", ",", "pid", ",", "_", ")", "in", "enumerate", "(", "data_source", ")", ":", "\n", "            ", "self", ".", "index_dic", "[", "pid", "]", ".", "append", "(", "index", ")", "\n", "", "self", ".", "pids", "=", "list", "(", "self", ".", "index_dic", ".", "keys", "(", ")", ")", "\n", "self", ".", "num_samples", "=", "len", "(", "self", ".", "pids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.sampler.RandomIdentitySampler.__len__": [[29, 31], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "*", "self", ".", "num_instances", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.sampler.RandomIdentitySampler.__iter__": [[32, 44], ["torch.randperm().tolist", "iter", "ret.extend", "torch.randperm", "len", "numpy.random.choice", "numpy.random.choice"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "indices", "=", "torch", ".", "randperm", "(", "self", ".", "num_samples", ")", ".", "tolist", "(", ")", "\n", "ret", "=", "[", "]", "\n", "for", "i", "in", "indices", ":", "\n", "            ", "pid", "=", "self", ".", "pids", "[", "i", "]", "\n", "t", "=", "self", ".", "index_dic", "[", "pid", "]", "\n", "if", "len", "(", "t", ")", ">=", "self", ".", "num_instances", ":", "\n", "                ", "t", "=", "np", ".", "random", ".", "choice", "(", "t", ",", "size", "=", "self", ".", "num_instances", ",", "replace", "=", "False", ")", "\n", "", "else", ":", "\n", "                ", "t", "=", "np", ".", "random", ".", "choice", "(", "t", ",", "size", "=", "self", ".", "num_instances", ",", "replace", "=", "True", ")", "\n", "", "ret", ".", "extend", "(", "t", ")", "\n", "", "return", "iter", "(", "ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.sampler.RandomMultipleGallerySampler.__init__": [[47, 62], ["collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "enumerate", "list", "len", "sampler.RandomMultipleGallerySampler.pid_cam[].append", "sampler.RandomMultipleGallerySampler.pid_index[].append", "sampler.RandomMultipleGallerySampler.pid_index.keys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_source", ",", "num_instances", "=", "4", ")", ":", "\n", "        ", "self", ".", "data_source", "=", "data_source", "\n", "self", ".", "index_pid", "=", "defaultdict", "(", "int", ")", "\n", "self", ".", "pid_cam", "=", "defaultdict", "(", "list", ")", "\n", "self", ".", "pid_index", "=", "defaultdict", "(", "list", ")", "\n", "self", ".", "num_instances", "=", "num_instances", "\n", "\n", "for", "index", ",", "(", "_", ",", "pid", ",", "cam", ")", "in", "enumerate", "(", "data_source", ")", ":", "\n", "            ", "if", "(", "pid", "<", "0", ")", ":", "continue", "\n", "self", ".", "index_pid", "[", "index", "]", "=", "pid", "\n", "self", ".", "pid_cam", "[", "pid", "]", ".", "append", "(", "cam", ")", "\n", "self", ".", "pid_index", "[", "pid", "]", ".", "append", "(", "index", ")", "\n", "\n", "", "self", ".", "pids", "=", "list", "(", "self", ".", "pid_index", ".", "keys", "(", ")", ")", "\n", "self", ".", "num_samples", "=", "len", "(", "self", ".", "pids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.sampler.RandomMultipleGallerySampler.__len__": [[63, 65], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "*", "self", ".", "num_instances", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.sampler.RandomMultipleGallerySampler.__iter__": [[66, 105], ["torch.randperm().tolist", "iter", "random.choice", "ret.append", "sampler.No_index", "torch.randperm", "sampler.No_index", "len", "len", "numpy.random.choice", "numpy.random.choice", "ret.append", "len", "numpy.random.choice", "numpy.random.choice", "ret.append"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.data.sampler.No_index", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.sampler.No_index"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "indices", "=", "torch", ".", "randperm", "(", "len", "(", "self", ".", "pids", ")", ")", ".", "tolist", "(", ")", "\n", "ret", "=", "[", "]", "\n", "\n", "for", "kid", "in", "indices", ":", "\n", "            ", "i", "=", "random", ".", "choice", "(", "self", ".", "pid_index", "[", "self", ".", "pids", "[", "kid", "]", "]", ")", "\n", "\n", "_", ",", "i_pid", ",", "i_cam", "=", "self", ".", "data_source", "[", "i", "]", "\n", "\n", "ret", ".", "append", "(", "i", ")", "\n", "\n", "pid_i", "=", "self", ".", "index_pid", "[", "i", "]", "\n", "cams", "=", "self", ".", "pid_cam", "[", "pid_i", "]", "\n", "index", "=", "self", ".", "pid_index", "[", "pid_i", "]", "\n", "select_cams", "=", "No_index", "(", "cams", ",", "i_cam", ")", "\n", "\n", "if", "select_cams", ":", "\n", "\n", "                ", "if", "len", "(", "select_cams", ")", ">=", "self", ".", "num_instances", ":", "\n", "                    ", "cam_indexes", "=", "np", ".", "random", ".", "choice", "(", "select_cams", ",", "size", "=", "self", ".", "num_instances", "-", "1", ",", "replace", "=", "False", ")", "\n", "", "else", ":", "\n", "                    ", "cam_indexes", "=", "np", ".", "random", ".", "choice", "(", "select_cams", ",", "size", "=", "self", ".", "num_instances", "-", "1", ",", "replace", "=", "True", ")", "\n", "\n", "", "for", "kk", "in", "cam_indexes", ":", "\n", "                    ", "ret", ".", "append", "(", "index", "[", "kk", "]", ")", "\n", "\n", "", "", "else", ":", "\n", "                ", "select_indexes", "=", "No_index", "(", "index", ",", "i", ")", "\n", "if", "(", "not", "select_indexes", ")", ":", "continue", "\n", "if", "len", "(", "select_indexes", ")", ">=", "self", ".", "num_instances", ":", "\n", "                    ", "ind_indexes", "=", "np", ".", "random", ".", "choice", "(", "select_indexes", ",", "size", "=", "self", ".", "num_instances", "-", "1", ",", "replace", "=", "False", ")", "\n", "", "else", ":", "\n", "                    ", "ind_indexes", "=", "np", ".", "random", ".", "choice", "(", "select_indexes", ",", "size", "=", "self", ".", "num_instances", "-", "1", ",", "replace", "=", "True", ")", "\n", "\n", "", "for", "kk", "in", "ind_indexes", ":", "\n", "                    ", "ret", ".", "append", "(", "index", "[", "kk", "]", ")", "\n", "\n", "\n", "", "", "", "return", "iter", "(", "ret", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.sampler.No_index": [[14, 17], ["isinstance", "enumerate"], "function", ["None"], ["def", "No_index", "(", "a", ",", "b", ")", ":", "\n", "    ", "assert", "isinstance", "(", "a", ",", "list", ")", "\n", "return", "[", "i", "for", "i", ",", "j", "in", "enumerate", "(", "a", ")", "if", "j", "!=", "b", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info": [[10, 21], ["set", "set", "len", "len", "len"], "methods", ["None"], ["def", "get_imagedata_info", "(", "self", ",", "data", ")", ":", "\n", "        ", "pids", ",", "cams", "=", "[", "]", ",", "[", "]", "\n", "for", "_", ",", "pid", ",", "camid", "in", "data", ":", "\n", "            ", "pids", "+=", "[", "pid", "]", "\n", "cams", "+=", "[", "camid", "]", "\n", "", "pids", "=", "set", "(", "pids", ")", "\n", "cams", "=", "set", "(", "cams", ")", "\n", "num_pids", "=", "len", "(", "pids", ")", "\n", "num_cams", "=", "len", "(", "cams", ")", "\n", "num_imgs", "=", "len", "(", "data", ")", "\n", "return", "num_pids", ",", "num_imgs", ",", "num_cams", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.print_dataset_statistics": [[22, 24], ["None"], "methods", ["None"], ["", "def", "print_dataset_statistics", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.images_dir": [[25, 28], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "images_dir", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseImageDataset.print_dataset_statistics": [[35, 48], ["base_dataset.BaseImageDataset.get_imagedata_info", "base_dataset.BaseImageDataset.get_imagedata_info", "base_dataset.BaseImageDataset.get_imagedata_info", "print", "print", "print", "print", "print", "print", "print", "print"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info"], ["def", "print_dataset_statistics", "(", "self", ",", "train", ",", "query", ",", "gallery", ")", ":", "\n", "        ", "num_train_pids", ",", "num_train_imgs", ",", "num_train_cams", "=", "self", ".", "get_imagedata_info", "(", "train", ")", "\n", "num_query_pids", ",", "num_query_imgs", ",", "num_query_cams", "=", "self", ".", "get_imagedata_info", "(", "query", ")", "\n", "num_gallery_pids", ",", "num_gallery_imgs", ",", "num_gallery_cams", "=", "self", ".", "get_imagedata_info", "(", "gallery", ")", "\n", "\n", "print", "(", "\"Dataset statistics:\"", ")", "\n", "print", "(", "\"  ----------------------------------------\"", ")", "\n", "print", "(", "\"  subset   | # ids | # images | # cameras\"", ")", "\n", "print", "(", "\"  ----------------------------------------\"", ")", "\n", "print", "(", "\"  train    | {:5d} | {:8d} | {:9d}\"", ".", "format", "(", "num_train_pids", ",", "num_train_imgs", ",", "num_train_cams", ")", ")", "\n", "print", "(", "\"  query    | {:5d} | {:8d} | {:9d}\"", ".", "format", "(", "num_query_pids", ",", "num_query_imgs", ",", "num_query_cams", ")", ")", "\n", "print", "(", "\"  gallery  | {:5d} | {:8d} | {:9d}\"", ".", "format", "(", "num_gallery_pids", ",", "num_gallery_imgs", ",", "num_gallery_cams", ")", ")", "\n", "print", "(", "\"  ----------------------------------------\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.__init__": [[7, 11], ["None"], "methods", ["None"], ["from", ".", "import", "evaluators", "\n", "from", ".", "import", "trainers", "\n", "\n", "__version__", "=", "'0.1.0'", "\n", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.__len__": [[12, 16], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.new_epoch": [[17, 19], ["iter"], "methods", ["None"], []], "home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.next": [[20, 26], ["__init__.IterLoader.next"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.next"], []], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehiclex.VehicleX.__init__": [[20, 36], ["utils.data.BaseDataset.__init__", "os.join", "os.join", "vehiclex.VehicleX.check_before_run", "vehiclex.VehicleX.process_dir", "vehiclex.VehicleX.get_imagedata_info", "print", "vehiclex.VehicleX.print_dataset_statistics"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.check_before_run", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehiclex.VehicleX.print_dataset_statistics"], ["def", "__init__", "(", "self", ",", "root", ",", "verbose", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "VehicleX", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataset_dir", "=", "osp", ".", "join", "(", "root", ",", "self", ".", "dataset_dir", ")", "\n", "self", ".", "train_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'image_train'", ")", "\n", "\n", "self", ".", "check_before_run", "(", ")", "\n", "\n", "train", "=", "self", ".", "process_dir", "(", "self", ".", "train_dir", ",", "relabel", "=", "True", ")", "\n", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "'=> VehicleX loaded'", ")", "\n", "self", ".", "print_dataset_statistics", "(", "train", ")", "\n", "\n", "", "self", ".", "train", "=", "train", "\n", "\n", "self", ".", "num_train_pids", ",", "self", ".", "num_train_imgs", ",", "self", ".", "num_train_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehiclex.VehicleX.check_before_run": [[37, 43], ["os.exists", "RuntimeError", "os.exists", "RuntimeError"], "methods", ["None"], ["", "def", "check_before_run", "(", "self", ")", ":", "\n", "        ", "\"\"\"Check if all files are available before going deeper\"\"\"", "\n", "if", "not", "osp", ".", "exists", "(", "self", ".", "dataset_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "dataset_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "train_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "train_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehiclex.VehicleX.process_dir": [[44, 68], ["glob.glob", "re.compile", "set", "os.join", "map", "set.add", "map", "dataset.append", "re.compile.search().groups", "enumerate", "re.compile.search().groups", "re.compile.search", "re.compile.search"], "methods", ["None"], ["", "", "def", "process_dir", "(", "self", ",", "dir_path", ",", "relabel", "=", "False", ")", ":", "\n", "        ", "img_paths", "=", "glob", ".", "glob", "(", "osp", ".", "join", "(", "dir_path", ",", "'*.jpg'", ")", ")", "\n", "pattern", "=", "re", ".", "compile", "(", "r'([-\\d]+)_c([-\\d]+)'", ")", "\n", "\n", "pid_container", "=", "set", "(", ")", "\n", "for", "img_path", "in", "img_paths", ":", "\n", "            ", "pid", ",", "_", "=", "map", "(", "int", ",", "pattern", ".", "search", "(", "img_path", ")", ".", "groups", "(", ")", ")", "\n", "if", "pid", "==", "-", "1", ":", "\n", "                ", "continue", "# junk images are just ignored", "\n", "", "pid_container", ".", "add", "(", "pid", ")", "\n", "", "pid2label", "=", "{", "pid", ":", "label", "for", "label", ",", "pid", "in", "enumerate", "(", "pid_container", ")", "}", "\n", "\n", "dataset", "=", "[", "]", "\n", "for", "img_path", "in", "img_paths", ":", "\n", "            ", "pid", ",", "camid", "=", "map", "(", "int", ",", "pattern", ".", "search", "(", "img_path", ")", ".", "groups", "(", ")", ")", "\n", "if", "pid", "==", "-", "1", ":", "\n", "                ", "continue", "# junk images are just ignored", "\n", "", "assert", "1", "<=", "pid", "<=", "1362", "\n", "assert", "6", "<=", "camid", "<=", "36", "\n", "camid", "-=", "6", "# index starts from 0", "\n", "if", "relabel", ":", "\n", "                ", "pid", "=", "pid2label", "[", "pid", "]", "\n", "", "dataset", ".", "append", "(", "(", "img_path", ",", "pid", ",", "camid", ")", ")", "\n", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehiclex.VehicleX.print_dataset_statistics": [[69, 78], ["vehiclex.VehicleX.get_imagedata_info", "print", "print", "print", "print", "print", "print"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info"], ["", "def", "print_dataset_statistics", "(", "self", ",", "train", ")", ":", "\n", "        ", "num_train_pids", ",", "num_train_imgs", ",", "num_train_cams", "=", "self", ".", "get_imagedata_info", "(", "train", ")", "\n", "\n", "print", "(", "\"Dataset statistics:\"", ")", "\n", "print", "(", "\"  ----------------------------------------\"", ")", "\n", "print", "(", "\"  subset   | # ids | # images | # cameras\"", ")", "\n", "print", "(", "\"  ----------------------------------------\"", ")", "\n", "print", "(", "\"  train    | {:5d} | {:8d} | {:9d}\"", ".", "format", "(", "num_train_pids", ",", "num_train_imgs", ",", "num_train_cams", ")", ")", "\n", "print", "(", "\"  ----------------------------------------\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.personx.PersonX.__init__": [[24, 48], ["utils.data.BaseImageDataset.__init__", "os.join", "os.join", "os.join", "os.join", "personx.PersonX._check_before_run", "personx.PersonX._process_dir", "personx.PersonX._process_dir", "personx.PersonX._process_dir", "personx.PersonX.get_imagedata_info", "personx.PersonX.get_imagedata_info", "personx.PersonX.get_imagedata_info", "print", "personx.PersonX.print_dataset_statistics"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._check_before_run", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehiclex.VehicleX.print_dataset_statistics"], ["def", "__init__", "(", "self", ",", "root", ",", "verbose", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "PersonX", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataset_dir", "=", "osp", ".", "join", "(", "root", ",", "self", ".", "dataset_dir", ")", "\n", "self", ".", "train_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'bounding_box_train'", ")", "\n", "self", ".", "query_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'query'", ")", "\n", "self", ".", "gallery_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'bounding_box_test'", ")", "\n", "\n", "self", ".", "_check_before_run", "(", ")", "\n", "\n", "train", "=", "self", ".", "_process_dir", "(", "self", ".", "train_dir", ",", "relabel", "=", "True", ")", "\n", "query", "=", "self", ".", "_process_dir", "(", "self", ".", "query_dir", ",", "relabel", "=", "False", ")", "\n", "gallery", "=", "self", ".", "_process_dir", "(", "self", ".", "gallery_dir", ",", "relabel", "=", "False", ")", "\n", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "\"=> PersonX loaded\"", ")", "\n", "self", ".", "print_dataset_statistics", "(", "train", ",", "query", ",", "gallery", ")", "\n", "\n", "", "self", ".", "train", "=", "train", "\n", "self", ".", "query", "=", "query", "\n", "self", ".", "gallery", "=", "gallery", "\n", "\n", "self", ".", "num_train_pids", ",", "self", ".", "num_train_imgs", ",", "self", ".", "num_train_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "train", ")", "\n", "self", ".", "num_query_pids", ",", "self", ".", "num_query_imgs", ",", "self", ".", "num_query_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "query", ")", "\n", "self", ".", "num_gallery_pids", ",", "self", ".", "num_gallery_imgs", ",", "self", ".", "num_gallery_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "gallery", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.personx.PersonX._check_before_run": [[49, 59], ["os.exists", "RuntimeError", "os.exists", "RuntimeError", "os.exists", "RuntimeError", "os.exists", "RuntimeError"], "methods", ["None"], ["", "def", "_check_before_run", "(", "self", ")", ":", "\n", "        ", "\"\"\"Check if all files are available before going deeper\"\"\"", "\n", "if", "not", "osp", ".", "exists", "(", "self", ".", "dataset_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"'{}' is not available\"", ".", "format", "(", "self", ".", "dataset_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "train_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"'{}' is not available\"", ".", "format", "(", "self", ".", "train_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "query_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"'{}' is not available\"", ".", "format", "(", "self", ".", "query_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "gallery_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"'{}' is not available\"", ".", "format", "(", "self", ".", "gallery_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.personx.PersonX._process_dir": [[60, 81], ["glob.glob", "re.compile", "set", "os.join", "map", "set.add", "map", "dataset.append", "re.compile.search().groups", "enumerate", "re.compile.search().groups", "cam2label.keys", "re.compile.search", "re.compile.search"], "methods", ["None"], ["", "", "def", "_process_dir", "(", "self", ",", "dir_path", ",", "relabel", "=", "False", ")", ":", "\n", "        ", "img_paths", "=", "glob", ".", "glob", "(", "osp", ".", "join", "(", "dir_path", ",", "'*.jpg'", ")", ")", "\n", "pattern", "=", "re", ".", "compile", "(", "r'([-\\d]+)_c([-\\d]+)'", ")", "\n", "cam2label", "=", "{", "3", ":", "1", ",", "4", ":", "2", ",", "8", ":", "3", ",", "10", ":", "4", ",", "11", ":", "5", ",", "12", ":", "6", "}", "\n", "\n", "pid_container", "=", "set", "(", ")", "\n", "for", "img_path", "in", "img_paths", ":", "\n", "            ", "pid", ",", "_", "=", "map", "(", "int", ",", "pattern", ".", "search", "(", "img_path", ")", ".", "groups", "(", ")", ")", "\n", "pid_container", ".", "add", "(", "pid", ")", "\n", "", "pid2label", "=", "{", "pid", ":", "label", "for", "label", ",", "pid", "in", "enumerate", "(", "pid_container", ")", "}", "\n", "\n", "dataset", "=", "[", "]", "\n", "for", "img_path", "in", "img_paths", ":", "\n", "            ", "pid", ",", "camid", "=", "map", "(", "int", ",", "pattern", ".", "search", "(", "img_path", ")", ".", "groups", "(", ")", ")", "\n", "assert", "(", "camid", "in", "cam2label", ".", "keys", "(", ")", ")", "\n", "camid", "=", "cam2label", "[", "camid", "]", "\n", "camid", "-=", "1", "# index starts from 0", "\n", "if", "relabel", ":", "pid", "=", "pid2label", "[", "pid", "]", "\n", "dataset", ".", "append", "(", "(", "img_path", ",", "pid", ",", "camid", ")", ")", "\n", "\n", "", "return", "dataset", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.__init__": [[29, 60], ["utils.data.BaseImageDataset.__init__", "os.join", "os.join", "os.join", "os.join", "print", "vehicleid.VehicleID.check_before_run", "vehicleid.VehicleID.process_split", "vehicleid.VehicleID.get_imagedata_info", "vehicleid.VehicleID.get_imagedata_info", "vehicleid.VehicleID.get_imagedata_info", "os.join", "print", "vehicleid.VehicleID.print_dataset_statistics", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.check_before_run", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.process_split", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehiclex.VehicleX.print_dataset_statistics"], ["def", "__init__", "(", "self", ",", "root", ",", "verbose", "=", "True", ",", "test_size", "=", "800", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "VehicleID", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataset_dir", "=", "osp", ".", "join", "(", "root", ",", "self", ".", "dataset_dir", ")", "\n", "self", ".", "img_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'image'", ")", "\n", "self", ".", "split_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'train_test_split'", ")", "\n", "self", ".", "train_list", "=", "osp", ".", "join", "(", "self", ".", "split_dir", ",", "'train_list.txt'", ")", "\n", "self", ".", "test_size", "=", "test_size", "\n", "\n", "if", "self", ".", "test_size", "==", "800", ":", "\n", "            ", "self", ".", "test_list", "=", "osp", ".", "join", "(", "self", ".", "split_dir", ",", "'test_list_800.txt'", ")", "\n", "", "elif", "self", ".", "test_size", "==", "1600", ":", "\n", "            ", "self", ".", "test_list", "=", "osp", ".", "join", "(", "self", ".", "split_dir", ",", "'test_list_1600.txt'", ")", "\n", "", "elif", "self", ".", "test_size", "==", "2400", ":", "\n", "            ", "self", ".", "test_list", "=", "osp", ".", "join", "(", "self", ".", "split_dir", ",", "'test_list_2400.txt'", ")", "\n", "\n", "", "print", "(", "self", ".", "test_list", ")", "\n", "\n", "self", ".", "check_before_run", "(", ")", "\n", "\n", "train", ",", "query", ",", "gallery", "=", "self", ".", "process_split", "(", "relabel", "=", "True", ")", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "query", "=", "query", "\n", "self", ".", "gallery", "=", "gallery", "\n", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "'=> VehicleID loaded'", ")", "\n", "self", ".", "print_dataset_statistics", "(", "train", ",", "query", ",", "gallery", ")", "\n", "\n", "", "self", ".", "num_train_pids", ",", "self", ".", "num_train_imgs", ",", "self", ".", "num_train_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "train", ")", "\n", "self", ".", "num_query_pids", ",", "self", ".", "num_query_imgs", ",", "self", ".", "num_query_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "query", ")", "\n", "self", ".", "num_gallery_pids", ",", "self", ".", "num_gallery_imgs", ",", "self", ".", "num_gallery_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "gallery", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.check_before_run": [[61, 73], ["os.exists", "RuntimeError", "os.exists", "RuntimeError", "os.exists", "RuntimeError", "RuntimeError", "os.exists", "RuntimeError"], "methods", ["None"], ["", "def", "check_before_run", "(", "self", ")", ":", "\n", "        ", "\"\"\"Check if all files are available before going deeper\"\"\"", "\n", "if", "not", "osp", ".", "exists", "(", "self", ".", "dataset_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "dataset_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "split_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "split_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "train_list", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "train_list", ")", ")", "\n", "", "if", "self", ".", "test_size", "not", "in", "[", "800", ",", "1600", ",", "2400", "]", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "test_size", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "test_list", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "test_list", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.get_pid2label": [[74, 78], ["set", "enumerate"], "methods", ["None"], ["", "", "def", "get_pid2label", "(", "self", ",", "pids", ")", ":", "\n", "        ", "pid_container", "=", "set", "(", "pids", ")", "\n", "pid2label", "=", "{", "pid", ":", "label", "for", "label", ",", "pid", "in", "enumerate", "(", "pid_container", ")", "}", "\n", "return", "pid2label", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.parse_img_pids": [[79, 91], ["os.join", "output.append"], "methods", ["None"], ["", "def", "parse_img_pids", "(", "self", ",", "nl_pairs", ",", "pid2label", "=", "None", ")", ":", "\n", "# il_pair is the pairs of img name and label", "\n", "        ", "output", "=", "[", "]", "\n", "for", "info", "in", "nl_pairs", ":", "\n", "            ", "name", "=", "info", "[", "0", "]", "\n", "pid", "=", "info", "[", "1", "]", "\n", "if", "pid2label", "is", "not", "None", ":", "\n", "                ", "pid", "=", "pid2label", "[", "pid", "]", "\n", "", "camid", "=", "0", "# don't have camid information use 0 for all", "\n", "img_path", "=", "osp", ".", "join", "(", "self", ".", "img_dir", ",", "name", "+", "'.jpg'", ")", "\n", "output", ".", "append", "(", "(", "img_path", ",", "pid", ",", "camid", ")", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.process_split": [[92, 153], ["collections.defaultdict", "list", "len", "collections.defaultdict", "list", "len", "vehicleid.VehicleID.parse_img_pids", "vehicleid.VehicleID.parse_img_pids", "vehicleid.VehicleID.parse_img_pids", "open", "f_train.readlines", "collections.defaultdict.keys", "open", "f_test.readlines", "collections.defaultdict.keys", "f_train.readlines.extend", "random.choice", "imginfo.remove", "query_data.extend", "gallery_data.append", "vehicleid.VehicleID.get_pid2label", "data.strip().split", "int", "train_pid_dict[].append", "data.split", "int", "test_pid_dict[].append", "data.strip"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.parse_img_pids", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.parse_img_pids", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.parse_img_pids", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehicleid.VehicleID.get_pid2label"], ["", "def", "process_split", "(", "self", ",", "relabel", "=", "False", ")", ":", "\n", "# read train paths", "\n", "        ", "train_pid_dict", "=", "defaultdict", "(", "list", ")", "\n", "\n", "# 'train_list.txt' format:", "\n", "# the first number is the number of image", "\n", "# the second number is the id of vehicle", "\n", "with", "open", "(", "self", ".", "train_list", ")", "as", "f_train", ":", "\n", "            ", "train_data", "=", "f_train", ".", "readlines", "(", ")", "\n", "for", "data", "in", "train_data", ":", "\n", "                ", "name", ",", "pid", "=", "data", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "\n", "pid", "=", "int", "(", "pid", ")", "\n", "train_pid_dict", "[", "pid", "]", ".", "append", "(", "[", "name", ",", "pid", "]", ")", "\n", "", "", "train_pids", "=", "list", "(", "train_pid_dict", ".", "keys", "(", ")", ")", "\n", "num_train_pids", "=", "len", "(", "train_pids", ")", "\n", "assert", "num_train_pids", "==", "13164", ",", "'There should be 13164 vehicles for training,'", "' but but got {}, please check the data'", ".", "format", "(", "num_train_pids", ")", "\n", "# print('num of train ids: {}'.format(num_train_pids))", "\n", "test_pid_dict", "=", "defaultdict", "(", "list", ")", "\n", "with", "open", "(", "self", ".", "test_list", ")", "as", "f_test", ":", "\n", "            ", "test_data", "=", "f_test", ".", "readlines", "(", ")", "\n", "for", "data", "in", "test_data", ":", "\n", "                ", "name", ",", "pid", "=", "data", ".", "split", "(", "' '", ")", "\n", "pid", "=", "int", "(", "pid", ")", "\n", "test_pid_dict", "[", "pid", "]", ".", "append", "(", "[", "name", ",", "pid", "]", ")", "\n", "", "", "test_pids", "=", "list", "(", "test_pid_dict", ".", "keys", "(", ")", ")", "\n", "num_test_pids", "=", "len", "(", "test_pids", ")", "\n", "assert", "num_test_pids", "==", "self", ".", "test_size", ",", "'There should be {} vehicles for testing,'", "' but but got {}, please check the data'", ".", "format", "(", "self", ".", "test_size", ",", "num_test_pids", ")", "\n", "\n", "train_data", "=", "[", "]", "\n", "query_data", "=", "[", "]", "\n", "gallery_data", "=", "[", "]", "\n", "\n", "# for train ids, all images are used in the train set.", "\n", "for", "pid", "in", "train_pids", ":", "\n", "            ", "imginfo", "=", "train_pid_dict", "[", "pid", "]", "# imginfo include image name and id", "\n", "train_data", ".", "extend", "(", "imginfo", ")", "\n", "\n", "# for each test id, random choose one image for gallery", "\n", "# and the other ones for query.", "\n", "", "for", "pid", "in", "test_pids", ":", "\n", "            ", "imginfo", "=", "test_pid_dict", "[", "pid", "]", "\n", "sample", "=", "random", ".", "choice", "(", "imginfo", ")", "\n", "imginfo", ".", "remove", "(", "sample", ")", "\n", "query_data", ".", "extend", "(", "imginfo", ")", "\n", "gallery_data", ".", "append", "(", "sample", ")", "\n", "\n", "", "if", "relabel", ":", "\n", "            ", "train_pid2label", "=", "self", ".", "get_pid2label", "(", "train_pids", ")", "\n", "", "else", ":", "\n", "            ", "train_pid2label", "=", "None", "\n", "# for key, value in train_pid2label.items():", "\n", "#     print('{key}:{value}'.format(key=key, value=value))", "\n", "\n", "", "train", "=", "self", ".", "parse_img_pids", "(", "train_data", ",", "train_pid2label", ")", "\n", "query", "=", "self", ".", "parse_img_pids", "(", "query_data", ")", "\n", "gallery", "=", "self", ".", "parse_img_pids", "(", "gallery_data", ")", "\n", "return", "train", ",", "query", ",", "gallery", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501.__init__": [[25, 49], ["utils.data.BaseImageDataset.__init__", "os.join", "os.join", "os.join", "os.join", "market1501.Market1501._check_before_run", "market1501.Market1501._process_dir", "market1501.Market1501._process_dir", "market1501.Market1501._process_dir", "market1501.Market1501.get_imagedata_info", "market1501.Market1501.get_imagedata_info", "market1501.Market1501.get_imagedata_info", "print", "market1501.Market1501.print_dataset_statistics"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._check_before_run", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehiclex.VehicleX.print_dataset_statistics"], ["def", "__init__", "(", "self", ",", "root", ",", "verbose", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "Market1501", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataset_dir", "=", "osp", ".", "join", "(", "root", ",", "self", ".", "dataset_dir", ")", "\n", "self", ".", "train_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'bounding_box_train'", ")", "\n", "self", ".", "query_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'query'", ")", "\n", "self", ".", "gallery_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'bounding_box_test'", ")", "\n", "\n", "self", ".", "_check_before_run", "(", ")", "\n", "\n", "train", "=", "self", ".", "_process_dir", "(", "self", ".", "train_dir", ",", "relabel", "=", "True", ")", "\n", "query", "=", "self", ".", "_process_dir", "(", "self", ".", "query_dir", ",", "relabel", "=", "False", ")", "\n", "gallery", "=", "self", ".", "_process_dir", "(", "self", ".", "gallery_dir", ",", "relabel", "=", "False", ")", "\n", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "\"=> Market1501 loaded\"", ")", "\n", "self", ".", "print_dataset_statistics", "(", "train", ",", "query", ",", "gallery", ")", "\n", "\n", "", "self", ".", "train", "=", "train", "\n", "self", ".", "query", "=", "query", "\n", "self", ".", "gallery", "=", "gallery", "\n", "\n", "self", ".", "num_train_pids", ",", "self", ".", "num_train_imgs", ",", "self", ".", "num_train_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "train", ")", "\n", "self", ".", "num_query_pids", ",", "self", ".", "num_query_imgs", ",", "self", ".", "num_query_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "query", ")", "\n", "self", ".", "num_gallery_pids", ",", "self", ".", "num_gallery_imgs", ",", "self", ".", "num_gallery_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "gallery", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._check_before_run": [[50, 60], ["os.exists", "RuntimeError", "os.exists", "RuntimeError", "os.exists", "RuntimeError", "os.exists", "RuntimeError"], "methods", ["None"], ["", "def", "_check_before_run", "(", "self", ")", ":", "\n", "        ", "\"\"\"Check if all files are available before going deeper\"\"\"", "\n", "if", "not", "osp", ".", "exists", "(", "self", ".", "dataset_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"'{}' is not available\"", ".", "format", "(", "self", ".", "dataset_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "train_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"'{}' is not available\"", ".", "format", "(", "self", ".", "train_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "query_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"'{}' is not available\"", ".", "format", "(", "self", ".", "query_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "gallery_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"'{}' is not available\"", ".", "format", "(", "self", ".", "gallery_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.market1501.Market1501._process_dir": [[61, 83], ["glob.glob", "re.compile", "set", "os.join", "map", "set.add", "map", "dataset.append", "re.compile.search().groups", "enumerate", "re.compile.search().groups", "re.compile.search", "re.compile.search"], "methods", ["None"], ["", "", "def", "_process_dir", "(", "self", ",", "dir_path", ",", "relabel", "=", "False", ")", ":", "\n", "        ", "img_paths", "=", "glob", ".", "glob", "(", "osp", ".", "join", "(", "dir_path", ",", "'*.jpg'", ")", ")", "\n", "pattern", "=", "re", ".", "compile", "(", "r'([-\\d]+)_c(\\d)'", ")", "\n", "\n", "pid_container", "=", "set", "(", ")", "\n", "for", "img_path", "in", "img_paths", ":", "\n", "            ", "pid", ",", "_", "=", "map", "(", "int", ",", "pattern", ".", "search", "(", "img_path", ")", ".", "groups", "(", ")", ")", "\n", "if", "pid", "==", "-", "1", ":", "continue", "# junk images are just ignored", "\n", "pid_container", ".", "add", "(", "pid", ")", "\n", "", "pid2label", "=", "{", "pid", ":", "label", "for", "label", ",", "pid", "in", "enumerate", "(", "pid_container", ")", "}", "\n", "\n", "dataset", "=", "[", "]", "\n", "for", "img_path", "in", "img_paths", ":", "\n", "            ", "pid", ",", "camid", "=", "map", "(", "int", ",", "pattern", ".", "search", "(", "img_path", ")", ".", "groups", "(", ")", ")", "\n", "if", "pid", "==", "-", "1", ":", "continue", "# junk images are just ignored", "\n", "assert", "0", "<=", "pid", "<=", "1501", "# pid == 0 means background", "\n", "assert", "1", "<=", "camid", "<=", "6", "\n", "camid", "-=", "1", "# index starts from 0", "\n", "if", "relabel", ":", "pid", "=", "pid2label", "[", "pid", "]", "\n", "dataset", ".", "append", "(", "(", "img_path", ",", "pid", ",", "camid", ")", ")", "\n", "\n", "", "return", "dataset", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.__init__": [[24, 48], ["utils.data.BaseImageDataset.__init__", "os.join", "os.join", "os.join", "os.join", "veri.VeRi.check_before_run", "veri.VeRi.process_dir", "veri.VeRi.process_dir", "veri.VeRi.process_dir", "veri.VeRi.get_imagedata_info", "veri.VeRi.get_imagedata_info", "veri.VeRi.get_imagedata_info", "print", "veri.VeRi.print_dataset_statistics"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.check_before_run", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.process_dir", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.data.base_dataset.BaseDataset.get_imagedata_info", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.vehiclex.VehicleX.print_dataset_statistics"], ["def", "__init__", "(", "self", ",", "root", ",", "verbose", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "VeRi", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataset_dir", "=", "osp", ".", "join", "(", "root", ",", "self", ".", "dataset_dir", ")", "\n", "self", ".", "train_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'image_train'", ")", "\n", "self", ".", "query_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'image_query'", ")", "\n", "self", ".", "gallery_dir", "=", "osp", ".", "join", "(", "self", ".", "dataset_dir", ",", "'image_test'", ")", "\n", "\n", "self", ".", "check_before_run", "(", ")", "\n", "\n", "train", "=", "self", ".", "process_dir", "(", "self", ".", "train_dir", ",", "relabel", "=", "True", ")", "\n", "query", "=", "self", ".", "process_dir", "(", "self", ".", "query_dir", ",", "relabel", "=", "False", ")", "\n", "gallery", "=", "self", ".", "process_dir", "(", "self", ".", "gallery_dir", ",", "relabel", "=", "False", ")", "\n", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "'=> VeRi loaded'", ")", "\n", "self", ".", "print_dataset_statistics", "(", "train", ",", "query", ",", "gallery", ")", "\n", "\n", "", "self", ".", "train", "=", "train", "\n", "self", ".", "query", "=", "query", "\n", "self", ".", "gallery", "=", "gallery", "\n", "\n", "self", ".", "num_train_pids", ",", "self", ".", "num_train_imgs", ",", "self", ".", "num_train_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "train", ")", "\n", "self", ".", "num_query_pids", ",", "self", ".", "num_query_imgs", ",", "self", ".", "num_query_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "query", ")", "\n", "self", ".", "num_gallery_pids", ",", "self", ".", "num_gallery_imgs", ",", "self", ".", "num_gallery_cams", "=", "self", ".", "get_imagedata_info", "(", "self", ".", "gallery", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.check_before_run": [[49, 59], ["os.exists", "RuntimeError", "os.exists", "RuntimeError", "os.exists", "RuntimeError", "os.exists", "RuntimeError"], "methods", ["None"], ["", "def", "check_before_run", "(", "self", ")", ":", "\n", "        ", "\"\"\"Check if all files are available before going deeper\"\"\"", "\n", "if", "not", "osp", ".", "exists", "(", "self", ".", "dataset_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "dataset_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "train_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "train_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "query_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "query_dir", ")", ")", "\n", "", "if", "not", "osp", ".", "exists", "(", "self", ".", "gallery_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'\"{}\" is not available'", ".", "format", "(", "self", ".", "gallery_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.veri.VeRi.process_dir": [[60, 85], ["glob.glob", "re.compile", "set", "os.join", "map", "set.add", "map", "dataset.append", "re.compile.search().groups", "enumerate", "re.compile.search().groups", "re.compile.search", "re.compile.search"], "methods", ["None"], ["", "", "def", "process_dir", "(", "self", ",", "dir_path", ",", "relabel", "=", "False", ")", ":", "\n", "        ", "img_paths", "=", "glob", ".", "glob", "(", "osp", ".", "join", "(", "dir_path", ",", "'*.jpg'", ")", ")", "\n", "pattern", "=", "re", ".", "compile", "(", "r'([-\\d]+)_c([-\\d]+)'", ")", "\n", "\n", "pid_container", "=", "set", "(", ")", "\n", "for", "img_path", "in", "img_paths", ":", "\n", "            ", "pid", ",", "_", "=", "map", "(", "int", ",", "pattern", ".", "search", "(", "img_path", ")", ".", "groups", "(", ")", ")", "\n", "if", "pid", "==", "-", "1", ":", "\n", "                ", "continue", "# junk images are just ignored", "\n", "", "pid_container", ".", "add", "(", "pid", ")", "\n", "", "pid2label", "=", "{", "pid", ":", "label", "for", "label", ",", "pid", "in", "enumerate", "(", "pid_container", ")", "}", "\n", "\n", "dataset", "=", "[", "]", "\n", "for", "img_path", "in", "img_paths", ":", "\n", "            ", "pid", ",", "camid", "=", "map", "(", "int", ",", "pattern", ".", "search", "(", "img_path", ")", ".", "groups", "(", ")", ")", "\n", "if", "pid", "==", "-", "1", ":", "\n", "                ", "continue", "# junk images are just ignored", "\n", "", "assert", "0", "<=", "pid", "<=", "776", "# pid == 0 means background", "\n", "assert", "1", "<=", "camid", "<=", "20", "\n", "camid", "-=", "1", "# index starts from 0", "\n", "if", "relabel", ":", "\n", "                ", "pid", "=", "pid2label", "[", "pid", "]", "\n", "", "dataset", ".", "append", "(", "(", "img_path", ",", "pid", ",", "camid", ")", ")", "\n", "\n", "", "return", "dataset", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.__init__.names": [[22, 24], ["sorted", "__factory.keys"], "function", ["None"], []], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.__init__.create": [[26, 47], ["KeyError"], "function", ["None"], []], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.__init__.get_dataset": [[49, 52], ["warnings.warn", "__init__.create"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.__init__.create"], []], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.__init__": [[29, 34], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "train", ",", "self", ".", "val", ",", "self", ".", "trainval", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "self", ".", "query", ",", "self", ".", "gallery", "=", "[", "]", ",", "[", "]", "\n", "self", ".", "num_train_ids", ",", "self", ".", "num_val_ids", ",", "self", ".", "num_trainval_ids", "=", "0", ",", "0", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.images_dir": [[35, 38], ["os.join"], "methods", ["None"], ["", "@", "property", "\n", "def", "images_dir", "(", "self", ")", ":", "\n", "        ", "return", "osp", ".", "join", "(", "self", ".", "root", ",", "'MSMT17_V1'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load": [[39, 58], ["os.join", "msmt17._pluck_msmt", "msmt17._pluck_msmt", "msmt17._pluck_msmt", "msmt17._pluck_msmt", "len", "os.join", "os.join", "os.join", "os.join", "list", "print", "print", "print", "print", "print", "print", "set().union", "set", "len", "len", "len", "len", "len", "set"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17._pluck_msmt", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17._pluck_msmt", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17._pluck_msmt", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17._pluck_msmt"], ["", "def", "load", "(", "self", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "exdir", "=", "osp", ".", "join", "(", "self", ".", "root", ",", "'MSMT17_V1'", ")", "\n", "self", ".", "train", ",", "train_pids", "=", "_pluck_msmt", "(", "osp", ".", "join", "(", "exdir", ",", "'list_train.txt'", ")", ",", "'train'", ")", "\n", "self", ".", "val", ",", "val_pids", "=", "_pluck_msmt", "(", "osp", ".", "join", "(", "exdir", ",", "'list_val.txt'", ")", ",", "'train'", ")", "\n", "self", ".", "train", "=", "self", ".", "train", "+", "self", ".", "val", "\n", "self", ".", "query", ",", "query_pids", "=", "_pluck_msmt", "(", "osp", ".", "join", "(", "exdir", ",", "'list_query.txt'", ")", ",", "'test'", ")", "\n", "self", ".", "gallery", ",", "gallery_pids", "=", "_pluck_msmt", "(", "osp", ".", "join", "(", "exdir", ",", "'list_gallery.txt'", ")", ",", "'test'", ")", "\n", "self", ".", "num_train_pids", "=", "len", "(", "list", "(", "set", "(", "train_pids", ")", ".", "union", "(", "set", "(", "val_pids", ")", ")", ")", ")", "\n", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "self", ".", "__class__", ".", "__name__", ",", "\"dataset loaded\"", ")", "\n", "print", "(", "\"  subset   | # ids | # images\"", ")", "\n", "print", "(", "\"  ---------------------------\"", ")", "\n", "print", "(", "\"  train    | {:5d} | {:8d}\"", "\n", ".", "format", "(", "self", ".", "num_train_pids", ",", "len", "(", "self", ".", "train", ")", ")", ")", "\n", "print", "(", "\"  query    | {:5d} | {:8d}\"", "\n", ".", "format", "(", "len", "(", "query_pids", ")", ",", "len", "(", "self", ".", "query", ")", ")", ")", "\n", "print", "(", "\"  gallery  | {:5d} | {:8d}\"", "\n", ".", "format", "(", "len", "(", "gallery_pids", ")", ",", "len", "(", "self", ".", "gallery", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.MSMT17.__init__": [[61, 68], ["msmt17.Dataset_MSMT.__init__", "msmt17.MSMT17.load", "msmt17.MSMT17.download"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.MSMT17.download"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "split_id", "=", "0", ",", "download", "=", "True", ")", ":", "\n", "        ", "super", "(", "MSMT17", ",", "self", ")", ".", "__init__", "(", "root", ")", "\n", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "\n", "", "self", ".", "load", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.MSMT17.download": [[69, 86], ["os.join", "utils.osutils.mkdir_if_missing", "os.join", "os.isdir", "print", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.osutils.mkdir_if_missing"], ["", "def", "download", "(", "self", ")", ":", "\n", "\n", "        ", "import", "re", "\n", "import", "hashlib", "\n", "import", "shutil", "\n", "from", "glob", "import", "glob", "\n", "from", "zipfile", "import", "ZipFile", "\n", "\n", "raw_dir", "=", "osp", ".", "join", "(", "self", ".", "root", ")", "\n", "mkdir_if_missing", "(", "raw_dir", ")", "\n", "\n", "# Download the raw zip file", "\n", "fpath", "=", "osp", ".", "join", "(", "raw_dir", ",", "'MSMT17_V1'", ")", "\n", "if", "osp", ".", "isdir", "(", "fpath", ")", ":", "\n", "            ", "print", "(", "\"Using downloaded file: \"", "+", "fpath", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Please download the dataset manually to {}\"", ".", "format", "(", "fpath", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17._pluck_msmt": [[14, 27], ["re.compile", "open", "f.readlines", "line.strip.strip", "map", "ret.append", "line.strip.split", "pattern.search().groups", "pids.append", "os.join", "pattern.search", "os.basename"], "function", ["None"], ["def", "_pluck_msmt", "(", "list_file", ",", "subdir", ",", "pattern", "=", "re", ".", "compile", "(", "r'([-\\d]+)_([-\\d]+)_([-\\d]+)'", ")", ")", ":", "\n", "    ", "with", "open", "(", "list_file", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "", "ret", "=", "[", "]", "\n", "pids", "=", "[", "]", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "line", "=", "line", ".", "strip", "(", ")", "\n", "fname", "=", "line", ".", "split", "(", "' '", ")", "[", "0", "]", "\n", "pid", ",", "_", ",", "cam", "=", "map", "(", "int", ",", "pattern", ".", "search", "(", "osp", ".", "basename", "(", "fname", ")", ")", ".", "groups", "(", ")", ")", "\n", "if", "pid", "not", "in", "pids", ":", "\n", "            ", "pids", ".", "append", "(", "pid", ")", "\n", "", "ret", ".", "append", "(", "(", "osp", ".", "join", "(", "subdir", ",", "fname", ")", ",", "pid", ",", "cam", ")", ")", "\n", "", "return", "ret", ",", "pids", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn.ResNetIBN.__init__": [[21, 67], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.AdaptiveAvgPool2d", "torch.nn.init.constant_", "torch.nn.init.constant_", "resnet_ibn.ResNetIBN.feat_bn.bias.requires_grad_", "resnet_ibn.ResNetIBN.reset_params", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.init.kaiming_normal_", "torch.nn.init.constant_", "torch.nn.BatchNorm1d", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.init.normal_"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.ResNet.reset_params"], ["def", "__init__", "(", "self", ",", "depth", ",", "pretrained", "=", "True", ",", "cut_at_pooling", "=", "False", ",", "\n", "num_features", "=", "0", ",", "norm", "=", "False", ",", "dropout", "=", "0", ",", "num_classes", "=", "0", ")", ":", "\n", "        ", "super", "(", "ResNetIBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "cut_at_pooling", "=", "cut_at_pooling", "\n", "\n", "resnet", "=", "ResNetIBN", ".", "__factory", "[", "depth", "]", "(", "pretrained", "=", "pretrained", ")", "\n", "resnet", ".", "layer4", "[", "0", "]", ".", "conv2", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "resnet", ".", "layer4", "[", "0", "]", ".", "downsample", "[", "0", "]", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "self", ".", "base", "=", "nn", ".", "Sequential", "(", "\n", "resnet", ".", "conv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ",", "resnet", ".", "maxpool", ",", "\n", "resnet", ".", "layer1", ",", "resnet", ".", "layer2", ",", "resnet", ".", "layer3", ",", "resnet", ".", "layer4", ")", "\n", "self", ".", "gap", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n", "if", "not", "self", ".", "cut_at_pooling", ":", "\n", "            ", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "has_embedding", "=", "num_features", ">", "0", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "out_planes", "=", "resnet", ".", "fc", ".", "in_features", "\n", "\n", "# Append new layers", "\n", "if", "self", ".", "has_embedding", ":", "\n", "                ", "self", ".", "feat", "=", "nn", ".", "Linear", "(", "out_planes", ",", "self", ".", "num_features", ")", "\n", "self", ".", "feat_bn", "=", "nn", ".", "BatchNorm1d", "(", "self", ".", "num_features", ")", "\n", "init", ".", "kaiming_normal_", "(", "self", ".", "feat", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "init", ".", "constant_", "(", "self", ".", "feat", ".", "bias", ",", "0", ")", "\n", "", "else", ":", "\n", "# Change the num_features to CNN output channels", "\n", "                ", "self", ".", "num_features", "=", "out_planes", "\n", "self", ".", "feat_bn", "=", "nn", ".", "BatchNorm1d", "(", "self", ".", "num_features", ")", "\n", "", "self", ".", "feat_bn", ".", "bias", ".", "requires_grad_", "(", "False", ")", "\n", "if", "self", ".", "dropout", ">", "0", ":", "\n", "                ", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "self", ".", "dropout", ")", "\n", "", "if", "self", ".", "num_classes", ">", "0", ":", "\n", "                ", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "self", ".", "num_features", ",", "self", ".", "num_classes", ",", "bias", "=", "False", ")", "\n", "init", ".", "normal_", "(", "self", ".", "classifier", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "", "init", ".", "constant_", "(", "self", ".", "feat_bn", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant_", "(", "self", ".", "feat_bn", ".", "bias", ",", "0", ")", "\n", "\n", "if", "not", "pretrained", ":", "\n", "            ", "self", ".", "reset_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn.ResNetIBN.forward": [[68, 100], ["resnet_ibn.ResNetIBN.base", "resnet_ibn.ResNetIBN.gap", "x.view.view.view", "x.view.view.size", "resnet_ibn.ResNetIBN.feat_bn", "resnet_ibn.ResNetIBN.feat_bn", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "resnet_ibn.ResNetIBN.drop", "resnet_ibn.ResNetIBN.classifier", "resnet_ibn.ResNetIBN.feat", "torch.nn.functional.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "base", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "gap", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "if", "self", ".", "cut_at_pooling", ":", "\n", "            ", "return", "x", "\n", "\n", "", "if", "self", ".", "has_embedding", ":", "\n", "            ", "bn_x", "=", "self", ".", "feat_bn", "(", "self", ".", "feat", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "bn_x", "=", "self", ".", "feat_bn", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "training", "is", "False", ":", "\n", "            ", "bn_x", "=", "F", ".", "normalize", "(", "bn_x", ")", "\n", "return", "bn_x", "\n", "\n", "", "if", "self", ".", "norm", ":", "\n", "            ", "bn_x", "=", "F", ".", "normalize", "(", "bn_x", ")", "\n", "", "elif", "self", ".", "has_embedding", ":", "\n", "            ", "bn_x", "=", "F", ".", "relu", "(", "bn_x", ")", "\n", "\n", "", "if", "self", ".", "dropout", ">", "0", ":", "\n", "            ", "bn_x", "=", "self", ".", "drop", "(", "bn_x", ")", "\n", "\n", "", "if", "self", ".", "num_classes", ">", "0", ":", "\n", "            ", "prob", "=", "self", ".", "classifier", "(", "bn_x", ")", "\n", "", "else", ":", "\n", "            ", "return", "bn_x", "\n", "\n", "", "return", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn.ResNetIBN.reset_params": [[101, 117], ["resnet_ibn.ResNetIBN.modules", "isinstance", "torch.nn.init.kaiming_normal_", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_", "isinstance", "torch.nn.init.normal_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "reset_params", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn.resnet_ibn50a": [[119, 121], ["resnet_ibn.ResNetIBN"], "function", ["None"], ["", "", "", "", "", "def", "resnet_ibn50a", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNetIBN", "(", "'50a'", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn.resnet_ibn101a": [[123, 125], ["resnet_ibn.ResNetIBN"], "function", ["None"], ["", "def", "resnet_ibn101a", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNetIBN", "(", "'101a'", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.hm.HM.forward": [[11, 19], ["ctx.save_for_backward", "inputs.mm", "ctx.features.t"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "inputs", ",", "indexes", ",", "features", ",", "momentum", ")", ":", "\n", "        ", "ctx", ".", "features", "=", "features", "\n", "ctx", ".", "momentum", "=", "momentum", "\n", "ctx", ".", "save_for_backward", "(", "inputs", ",", "indexes", ")", "\n", "outputs", "=", "inputs", ".", "mm", "(", "ctx", ".", "features", ".", "t", "(", ")", ")", "\n", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.hm.HM.backward": [[20, 33], ["zip", "grad_outputs.mm", "ctx.features[].norm"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_outputs", ")", ":", "\n", "        ", "inputs", ",", "indexes", "=", "ctx", ".", "saved_tensors", "\n", "grad_inputs", "=", "None", "\n", "if", "ctx", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "            ", "grad_inputs", "=", "grad_outputs", ".", "mm", "(", "ctx", ".", "features", ")", "\n", "\n", "# momentum update", "\n", "", "for", "x", ",", "y", "in", "zip", "(", "inputs", ",", "indexes", ")", ":", "\n", "            ", "ctx", ".", "features", "[", "y", "]", "=", "ctx", ".", "momentum", "*", "ctx", ".", "features", "[", "y", "]", "+", "(", "1.", "-", "ctx", ".", "momentum", ")", "*", "x", "\n", "ctx", ".", "features", "[", "y", "]", "/=", "ctx", ".", "features", "[", "y", "]", ".", "norm", "(", ")", "\n", "\n", "", "return", "grad_inputs", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.hm.HybridMemory.__init__": [[40, 50], ["torch.nn.Module.__init__", "hm.HybridMemory.register_buffer", "hm.HybridMemory.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_samples", ",", "temp", "=", "0.05", ",", "momentum", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "HybridMemory", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "num_samples", "=", "num_samples", "\n", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "temp", "=", "temp", "\n", "\n", "self", ".", "register_buffer", "(", "'features'", ",", "torch", ".", "zeros", "(", "num_samples", ",", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'labels'", ",", "torch", ".", "zeros", "(", "num_samples", ")", ".", "long", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.hm.HybridMemory.forward": [[51, 75], ["hm.hm", "hm.size", "hm.HybridMemory.labels[].clone", "hm.HybridMemory.labels.clone", "torch.zeros().float().cuda", "torch.zeros().float().cuda", "torch.zeros().float().cuda", "torch.zeros().float().cuda", "torch.zeros().float().cuda.index_add_", "torch.zeros().float().cuda.index_add_", "torch.zeros().float().cuda", "torch.zeros().float().cuda", "torch.zeros().float().cuda", "torch.zeros().float().cuda", "torch.zeros().float().cuda.index_add_", "torch.zeros().float().cuda.index_add_", "mask.expand_as.expand_as.expand_as", "hm.HybridMemory.forward.masked_softmax"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.hm.hm"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "indexes", ")", ":", "\n", "# inputs: B*2048, features: L*2048", "\n", "        ", "inputs", "=", "hm", "(", "inputs", ",", "indexes", ",", "self", ".", "features", ",", "self", ".", "momentum", ")", "\n", "inputs", "/=", "self", ".", "temp", "\n", "B", "=", "inputs", ".", "size", "(", "0", ")", "\n", "\n", "def", "masked_softmax", "(", "vec", ",", "mask", ",", "dim", "=", "1", ",", "epsilon", "=", "1e-6", ")", ":", "\n", "            ", "exps", "=", "torch", ".", "exp", "(", "vec", ")", "\n", "masked_exps", "=", "exps", "*", "mask", ".", "float", "(", ")", ".", "clone", "(", ")", "\n", "masked_sums", "=", "masked_exps", ".", "sum", "(", "dim", ",", "keepdim", "=", "True", ")", "+", "epsilon", "\n", "return", "(", "masked_exps", "/", "masked_sums", ")", "\n", "\n", "", "targets", "=", "self", ".", "labels", "[", "indexes", "]", ".", "clone", "(", ")", "\n", "labels", "=", "self", ".", "labels", ".", "clone", "(", ")", "\n", "\n", "sim", "=", "torch", ".", "zeros", "(", "labels", ".", "max", "(", ")", "+", "1", ",", "B", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "sim", ".", "index_add_", "(", "0", ",", "labels", ",", "inputs", ".", "t", "(", ")", ".", "contiguous", "(", ")", ")", "\n", "nums", "=", "torch", ".", "zeros", "(", "labels", ".", "max", "(", ")", "+", "1", ",", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "nums", ".", "index_add_", "(", "0", ",", "labels", ",", "torch", ".", "ones", "(", "self", ".", "num_samples", ",", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", ")", "\n", "mask", "=", "(", "nums", ">", "0", ")", ".", "float", "(", ")", "\n", "sim", "/=", "(", "mask", "*", "nums", "+", "(", "1", "-", "mask", ")", ")", ".", "clone", "(", ")", ".", "expand_as", "(", "sim", ")", "\n", "mask", "=", "mask", ".", "expand_as", "(", "sim", ")", "\n", "masked_sim", "=", "masked_softmax", "(", "sim", ".", "t", "(", ")", ".", "contiguous", "(", ")", ",", "mask", ".", "t", "(", ")", ".", "contiguous", "(", ")", ")", "\n", "return", "F", ".", "nll_loss", "(", "torch", ".", "log", "(", "masked_sim", "+", "1e-6", ")", ",", "targets", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.hm.hm": [[35, 37], ["HM.apply", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor", "torch.Tensor"], "function", ["None"], ["", "", "def", "hm", "(", "inputs", ",", "indexes", ",", "features", ",", "momentum", "=", "0.5", ")", ":", "\n", "    ", "return", "HM", ".", "apply", "(", "inputs", ",", "indexes", ",", "features", ",", "torch", ".", "Tensor", "(", "[", "momentum", "]", ")", ".", "to", "(", "inputs", ".", "device", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.DSBN2d.__init__": [[7, 12], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "DSBN2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "planes", "\n", "self", ".", "BN_S", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "BN_T", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.DSBN2d.forward": [[13, 24], ["x.size", "torch.split", "torch.split", "torch.split", "torch.split", "dsbn.DSBN2d.BN_S", "dsbn.DSBN2d.BN_T", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dsbn.DSBN2d.BN_T", "int", "split[].contiguous", "split[].contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "(", "not", "self", ".", "training", ")", ":", "\n", "            ", "return", "self", ".", "BN_T", "(", "x", ")", "\n", "\n", "", "bs", "=", "x", ".", "size", "(", "0", ")", "\n", "assert", "(", "bs", "%", "2", "==", "0", ")", "\n", "split", "=", "torch", ".", "split", "(", "x", ",", "int", "(", "bs", "/", "2", ")", ",", "0", ")", "\n", "out1", "=", "self", ".", "BN_S", "(", "split", "[", "0", "]", ".", "contiguous", "(", ")", ")", "\n", "out2", "=", "self", ".", "BN_T", "(", "split", "[", "1", "]", ".", "contiguous", "(", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "0", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.DSBN1d.__init__": [[26, 31], ["torch.Module.__init__", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "DSBN1d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "planes", "\n", "self", ".", "BN_S", "=", "nn", ".", "BatchNorm1d", "(", "planes", ")", "\n", "self", ".", "BN_T", "=", "nn", ".", "BatchNorm1d", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.DSBN1d.forward": [[32, 43], ["x.size", "torch.split", "torch.split", "torch.split", "torch.split", "dsbn.DSBN1d.BN_S", "dsbn.DSBN1d.BN_T", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dsbn.DSBN1d.BN_T", "int", "split[].contiguous", "split[].contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "(", "not", "self", ".", "training", ")", ":", "\n", "            ", "return", "self", ".", "BN_T", "(", "x", ")", "\n", "\n", "", "bs", "=", "x", ".", "size", "(", "0", ")", "\n", "assert", "(", "bs", "%", "2", "==", "0", ")", "\n", "split", "=", "torch", ".", "split", "(", "x", ",", "int", "(", "bs", "/", "2", ")", ",", "0", ")", "\n", "out1", "=", "self", ".", "BN_S", "(", "split", "[", "0", "]", ".", "contiguous", "(", ")", ")", "\n", "out2", "=", "self", ".", "BN_T", "(", "split", "[", "1", "]", ".", "contiguous", "(", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "0", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.convert_dsbn": [[44, 59], ["enumerate", "model.named_children", "isinstance", "dsbn.DSBN2d", "DSBN1d.BN_S.load_state_dict", "DSBN1d.BN_T.load_state_dict", "setattr", "isinstance", "next", "child.state_dict", "child.state_dict", "dsbn.DSBN1d", "DSBN1d.BN_S.load_state_dict", "DSBN1d.BN_T.load_state_dict", "setattr", "dsbn.convert_dsbn", "model.parameters", "child.state_dict", "child.state_dict"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.next", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.convert_dsbn"], ["", "", "def", "convert_dsbn", "(", "model", ")", ":", "\n", "    ", "for", "_", ",", "(", "child_name", ",", "child", ")", "in", "enumerate", "(", "model", ".", "named_children", "(", ")", ")", ":", "\n", "        ", "assert", "(", "not", "next", "(", "model", ".", "parameters", "(", ")", ")", ".", "is_cuda", ")", "\n", "if", "isinstance", "(", "child", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "m", "=", "DSBN2d", "(", "child", ".", "num_features", ")", "\n", "m", ".", "BN_S", ".", "load_state_dict", "(", "child", ".", "state_dict", "(", ")", ")", "\n", "m", ".", "BN_T", ".", "load_state_dict", "(", "child", ".", "state_dict", "(", ")", ")", "\n", "setattr", "(", "model", ",", "child_name", ",", "m", ")", "\n", "", "elif", "isinstance", "(", "child", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "            ", "m", "=", "DSBN1d", "(", "child", ".", "num_features", ")", "\n", "m", ".", "BN_S", ".", "load_state_dict", "(", "child", ".", "state_dict", "(", ")", ")", "\n", "m", ".", "BN_T", ".", "load_state_dict", "(", "child", ".", "state_dict", "(", ")", ")", "\n", "setattr", "(", "model", ",", "child_name", ",", "m", ")", "\n", "", "else", ":", "\n", "            ", "convert_dsbn", "(", "child", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.convert_bn": [[60, 79], ["enumerate", "model.named_children", "isinstance", "torch.BatchNorm2d", "setattr", "isinstance", "next", "nn.BatchNorm1d.load_state_dict", "nn.BatchNorm1d.load_state_dict", "torch.BatchNorm1d", "setattr", "dsbn.convert_bn", "model.parameters", "child.BN_T.state_dict", "child.BN_S.state_dict", "nn.BatchNorm1d.load_state_dict", "nn.BatchNorm1d.load_state_dict", "child.BN_T.state_dict", "child.BN_S.state_dict"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.data.__init__.IterLoader.next", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.dsbn.convert_bn"], ["", "", "", "def", "convert_bn", "(", "model", ",", "use_target", "=", "True", ")", ":", "\n", "    ", "for", "_", ",", "(", "child_name", ",", "child", ")", "in", "enumerate", "(", "model", ".", "named_children", "(", ")", ")", ":", "\n", "        ", "assert", "(", "not", "next", "(", "model", ".", "parameters", "(", ")", ")", ".", "is_cuda", ")", "\n", "if", "isinstance", "(", "child", ",", "DSBN2d", ")", ":", "\n", "            ", "m", "=", "nn", ".", "BatchNorm2d", "(", "child", ".", "num_features", ")", "\n", "if", "use_target", ":", "\n", "                ", "m", ".", "load_state_dict", "(", "child", ".", "BN_T", ".", "state_dict", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "m", ".", "load_state_dict", "(", "child", ".", "BN_S", ".", "state_dict", "(", ")", ")", "\n", "", "setattr", "(", "model", ",", "child_name", ",", "m", ")", "\n", "", "elif", "isinstance", "(", "child", ",", "DSBN1d", ")", ":", "\n", "            ", "m", "=", "nn", ".", "BatchNorm1d", "(", "child", ".", "num_features", ")", "\n", "if", "use_target", ":", "\n", "                ", "m", ".", "load_state_dict", "(", "child", ".", "BN_T", ".", "state_dict", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "m", ".", "load_state_dict", "(", "child", ".", "BN_S", ".", "state_dict", "(", ")", ")", "\n", "", "setattr", "(", "model", ",", "child_name", ",", "m", ")", "\n", "", "else", ":", "\n", "            ", "convert_bn", "(", "child", ",", "use_target", "=", "use_target", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.ResNet.__init__": [[23, 70], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.AdaptiveAvgPool2d", "torch.nn.init.constant_", "torch.nn.init.constant_", "KeyError", "resnet.ResNet.feat_bn.bias.requires_grad_", "resnet.ResNet.reset_params", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.init.kaiming_normal_", "torch.nn.init.constant_", "torch.nn.BatchNorm1d", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.init.normal_"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.ResNet.reset_params"], ["def", "__init__", "(", "self", ",", "depth", ",", "pretrained", "=", "True", ",", "cut_at_pooling", "=", "False", ",", "\n", "num_features", "=", "0", ",", "norm", "=", "False", ",", "dropout", "=", "0", ",", "num_classes", "=", "0", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "cut_at_pooling", "=", "cut_at_pooling", "\n", "# Construct base (pretrained) resnet", "\n", "if", "depth", "not", "in", "ResNet", ".", "__factory", ":", "\n", "            ", "raise", "KeyError", "(", "\"Unsupported depth:\"", ",", "depth", ")", "\n", "", "resnet", "=", "ResNet", ".", "__factory", "[", "depth", "]", "(", "pretrained", "=", "pretrained", ")", "\n", "resnet", ".", "layer4", "[", "0", "]", ".", "conv2", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "resnet", ".", "layer4", "[", "0", "]", ".", "downsample", "[", "0", "]", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "self", ".", "base", "=", "nn", ".", "Sequential", "(", "\n", "resnet", ".", "conv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ",", "resnet", ".", "maxpool", ",", "\n", "resnet", ".", "layer1", ",", "resnet", ".", "layer2", ",", "resnet", ".", "layer3", ",", "resnet", ".", "layer4", ")", "\n", "self", ".", "gap", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n", "if", "not", "self", ".", "cut_at_pooling", ":", "\n", "            ", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "has_embedding", "=", "num_features", ">", "0", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "out_planes", "=", "resnet", ".", "fc", ".", "in_features", "\n", "\n", "# Append new layers", "\n", "if", "self", ".", "has_embedding", ":", "\n", "                ", "self", ".", "feat", "=", "nn", ".", "Linear", "(", "out_planes", ",", "self", ".", "num_features", ")", "\n", "self", ".", "feat_bn", "=", "nn", ".", "BatchNorm1d", "(", "self", ".", "num_features", ")", "\n", "init", ".", "kaiming_normal_", "(", "self", ".", "feat", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "init", ".", "constant_", "(", "self", ".", "feat", ".", "bias", ",", "0", ")", "\n", "", "else", ":", "\n", "# Change the num_features to CNN output channels", "\n", "                ", "self", ".", "num_features", "=", "out_planes", "\n", "self", ".", "feat_bn", "=", "nn", ".", "BatchNorm1d", "(", "self", ".", "num_features", ")", "\n", "", "self", ".", "feat_bn", ".", "bias", ".", "requires_grad_", "(", "False", ")", "\n", "if", "self", ".", "dropout", ">", "0", ":", "\n", "                ", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "self", ".", "dropout", ")", "\n", "", "if", "self", ".", "num_classes", ">", "0", ":", "\n", "                ", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "self", ".", "num_features", ",", "self", ".", "num_classes", ",", "bias", "=", "False", ")", "\n", "init", ".", "normal_", "(", "self", ".", "classifier", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "", "init", ".", "constant_", "(", "self", ".", "feat_bn", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant_", "(", "self", ".", "feat_bn", ".", "bias", ",", "0", ")", "\n", "\n", "if", "not", "pretrained", ":", "\n", "            ", "self", ".", "reset_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.ResNet.forward": [[71, 104], ["x.view.view.size", "resnet.ResNet.base", "resnet.ResNet.gap", "x.view.view.view", "x.view.view.size", "resnet.ResNet.feat_bn", "resnet.ResNet.feat_bn", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "resnet.ResNet.drop", "resnet.ResNet.classifier", "resnet.ResNet.feat", "torch.nn.functional.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "bs", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "self", ".", "base", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "gap", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "if", "self", ".", "cut_at_pooling", ":", "\n", "            ", "return", "x", "\n", "\n", "", "if", "self", ".", "has_embedding", ":", "\n", "            ", "bn_x", "=", "self", ".", "feat_bn", "(", "self", ".", "feat", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "bn_x", "=", "self", ".", "feat_bn", "(", "x", ")", "\n", "\n", "", "if", "(", "self", ".", "training", "is", "False", ")", ":", "\n", "            ", "bn_x", "=", "F", ".", "normalize", "(", "bn_x", ")", "\n", "return", "bn_x", "\n", "\n", "", "if", "self", ".", "norm", ":", "\n", "            ", "bn_x", "=", "F", ".", "normalize", "(", "bn_x", ")", "\n", "", "elif", "self", ".", "has_embedding", ":", "\n", "            ", "bn_x", "=", "F", ".", "relu", "(", "bn_x", ")", "\n", "\n", "", "if", "self", ".", "dropout", ">", "0", ":", "\n", "            ", "bn_x", "=", "self", ".", "drop", "(", "bn_x", ")", "\n", "\n", "", "if", "self", ".", "num_classes", ">", "0", ":", "\n", "            ", "prob", "=", "self", ".", "classifier", "(", "bn_x", ")", "\n", "", "else", ":", "\n", "            ", "return", "bn_x", "\n", "\n", "", "return", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.ResNet.reset_params": [[105, 121], ["resnet.ResNet.modules", "isinstance", "torch.nn.init.kaiming_normal_", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_", "isinstance", "torch.nn.init.normal_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "reset_params", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.resnet18": [[123, 125], ["resnet.ResNet"], "function", ["None"], ["", "", "", "", "", "def", "resnet18", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "18", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.resnet34": [[127, 129], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet34", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "34", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.resnet50": [[131, 133], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet50", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "50", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.resnet101": [[135, 137], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet101", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "101", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet.resnet152": [[139, 141], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet152", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "152", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.BasicBlock.__init__": [[25, 34], ["torch.Module.__init__", "resnet_ibn_a.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_ibn_a.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.conv3x3", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.BasicBlock.forward": [[35, 52], ["resnet_ibn_a.BasicBlock.conv1", "resnet_ibn_a.BasicBlock.bn1", "resnet_ibn_a.BasicBlock.relu", "resnet_ibn_a.BasicBlock.conv2", "resnet_ibn_a.BasicBlock.bn2", "resnet_ibn_a.BasicBlock.relu", "resnet_ibn_a.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.IBN.__init__": [[55, 62], ["torch.Module.__init__", "int", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "IBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "half1", "=", "int", "(", "planes", "/", "2", ")", "\n", "self", ".", "half", "=", "half1", "\n", "half2", "=", "planes", "-", "half1", "\n", "self", ".", "IN", "=", "nn", ".", "InstanceNorm2d", "(", "half1", ",", "affine", "=", "True", ")", "\n", "self", ".", "BN", "=", "nn", ".", "BatchNorm2d", "(", "half2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.IBN.forward": [[63, 69], ["torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "resnet_ibn_a.IBN.IN", "resnet_ibn_a.IBN.BN", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "split[].contiguous", "split[].contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "split", "=", "torch", ".", "split", "(", "x", ",", "self", ".", "half", ",", "1", ")", "\n", "out1", "=", "self", ".", "IN", "(", "split", "[", "0", "]", ".", "contiguous", "(", ")", ")", "\n", "out2", "=", "self", ".", "BN", "(", "split", "[", "1", "]", ".", "contiguous", "(", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.Bottleneck.__init__": [[74, 89], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_ibn_a.IBN", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "ibn", "=", "False", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "if", "ibn", ":", "\n", "            ", "self", ".", "bn1", "=", "IBN", "(", "planes", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.Bottleneck.forward": [[90, 111], ["resnet_ibn_a.Bottleneck.conv1", "resnet_ibn_a.Bottleneck.bn1", "resnet_ibn_a.Bottleneck.relu", "resnet_ibn_a.Bottleneck.conv2", "resnet_ibn_a.Bottleneck.bn2", "resnet_ibn_a.Bottleneck.relu", "resnet_ibn_a.Bottleneck.conv3", "resnet_ibn_a.Bottleneck.bn3", "resnet_ibn_a.Bottleneck.relu", "resnet_ibn_a.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__": [[115, 141], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet_ibn_a.ResNet._make_layer", "resnet_ibn_a.ResNet._make_layer", "resnet_ibn_a.ResNet._make_layer", "resnet_ibn_a.ResNet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_ibn_a.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.__init__", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet._make_layer", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet._make_layer", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet._make_layer", "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "scale", "=", "64", "\n", "self", ".", "inplanes", "=", "scale", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "scale", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "scale", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "scale", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "scale", "*", "2", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "scale", "*", "4", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "scale", "*", "8", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "scale", "*", "8", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "InstanceNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet._make_layer": [[142, 161], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "ibn", "=", "True", "\n", "if", "planes", "==", "512", ":", "\n", "            ", "ibn", "=", "False", "\n", "", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "ibn", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "ibn", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.ResNet.forward": [[162, 178], ["resnet_ibn_a.ResNet.conv1", "resnet_ibn_a.ResNet.bn1", "resnet_ibn_a.ResNet.relu", "resnet_ibn_a.ResNet.maxpool", "resnet_ibn_a.ResNet.layer1", "resnet_ibn_a.ResNet.layer2", "resnet_ibn_a.ResNet.layer3", "resnet_ibn_a.ResNet.layer4", "resnet_ibn_a.ResNet.avgpool", "resnet_ibn_a.ResNet.view", "resnet_ibn_a.ResNet.fc", "resnet_ibn_a.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.conv3x3": [[16, 20], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.resnet50_ibn_a": [[180, 191], ["resnet_ibn_a.ResNet", "resnet_ibn_a.remove_module_key", "ResNet.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.device", "torch.device", "torch.device"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.remove_module_key", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load"], ["", "", "def", "resnet50_ibn_a", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "model_urls", "[", "'ibn_resnet50a'", "]", ",", "map_location", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", "[", "'state_dict'", "]", "\n", "state_dict", "=", "remove_module_key", "(", "state_dict", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.resnet101_ibn_a": [[193, 204], ["resnet_ibn_a.ResNet", "resnet_ibn_a.remove_module_key", "ResNet.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.device", "torch.device", "torch.device"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.remove_module_key", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load", "home.repos.pwc.inspect_result.yxgeee_SpCL.datasets.msmt17.Dataset_MSMT.load"], ["", "def", "resnet101_ibn_a", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "model_urls", "[", "'ibn_resnet101a'", "]", ",", "map_location", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", "[", "'state_dict'", "]", "\n", "state_dict", "=", "remove_module_key", "(", "state_dict", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.resnet_ibn_a.remove_module_key": [[206, 211], ["list", "state_dict.keys", "state_dict.pop", "key.replace"], "function", ["None"], ["", "def", "remove_module_key", "(", "state_dict", ")", ":", "\n", "    ", "for", "key", "in", "list", "(", "state_dict", ".", "keys", "(", ")", ")", ":", "\n", "        ", "if", "'module'", "in", "key", ":", "\n", "            ", "state_dict", "[", "key", ".", "replace", "(", "'module.'", ",", "''", ")", "]", "=", "state_dict", ".", "pop", "(", "key", ")", "\n", "", "", "return", "state_dict", "\n", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.__init__.names": [[18, 20], ["sorted", "__factory.keys"], "function", ["None"], []], "home.repos.pwc.inspect_result.yxgeee_SpCL.models.__init__.create": [[22, 56], ["KeyError"], "function", ["None"], []], "home.repos.pwc.inspect_result.yxgeee_SpCL.evaluation_metrics.ranking._unique_sample": [[10, 16], ["numpy.zeros", "ids_dict.items", "numpy.random.choice"], "function", ["None"], ["def", "_unique_sample", "(", "ids_dict", ",", "num", ")", ":", "\n", "    ", "mask", "=", "np", ".", "zeros", "(", "num", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "for", "_", ",", "indices", "in", "ids_dict", ".", "items", "(", ")", ":", "\n", "        ", "i", "=", "np", ".", "random", ".", "choice", "(", "indices", ")", "\n", "mask", "[", "i", "]", "=", "True", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.evaluation_metrics.ranking.cmc": [[18, 80], ["utils.to_numpy", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.argsort", "numpy.zeros", "range", "numpy.arange", "numpy.arange", "numpy.zeros().astype", "numpy.ones().astype", "range", "RuntimeError", "np.zeros.cumsum", "numpy.any", "collections.defaultdict", "zip", "enumerate", "numpy.zeros", "numpy.ones", "numpy.where", "ids_dict[].append", "ranking._unique_sample", "numpy.nonzero", "numpy.nonzero", "len", "len"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.__init__.to_numpy", "home.repos.pwc.inspect_result.yxgeee_SpCL.evaluation_metrics.ranking._unique_sample"], ["", "def", "cmc", "(", "distmat", ",", "query_ids", "=", "None", ",", "gallery_ids", "=", "None", ",", "\n", "query_cams", "=", "None", ",", "gallery_cams", "=", "None", ",", "topk", "=", "100", ",", "\n", "separate_camera_set", "=", "False", ",", "\n", "single_gallery_shot", "=", "False", ",", "\n", "first_match_break", "=", "False", ")", ":", "\n", "    ", "distmat", "=", "to_numpy", "(", "distmat", ")", "\n", "m", ",", "n", "=", "distmat", ".", "shape", "\n", "# Fill up default values", "\n", "if", "query_ids", "is", "None", ":", "\n", "        ", "query_ids", "=", "np", ".", "arange", "(", "m", ")", "\n", "", "if", "gallery_ids", "is", "None", ":", "\n", "        ", "gallery_ids", "=", "np", ".", "arange", "(", "n", ")", "\n", "", "if", "query_cams", "is", "None", ":", "\n", "        ", "query_cams", "=", "np", ".", "zeros", "(", "m", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "", "if", "gallery_cams", "is", "None", ":", "\n", "        ", "gallery_cams", "=", "np", ".", "ones", "(", "n", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "# Ensure numpy array", "\n", "", "query_ids", "=", "np", ".", "asarray", "(", "query_ids", ")", "\n", "gallery_ids", "=", "np", ".", "asarray", "(", "gallery_ids", ")", "\n", "query_cams", "=", "np", ".", "asarray", "(", "query_cams", ")", "\n", "gallery_cams", "=", "np", ".", "asarray", "(", "gallery_cams", ")", "\n", "# Sort and find correct matches", "\n", "indices", "=", "np", ".", "argsort", "(", "distmat", ",", "axis", "=", "1", ")", "\n", "matches", "=", "(", "gallery_ids", "[", "indices", "]", "==", "query_ids", "[", ":", ",", "np", ".", "newaxis", "]", ")", "\n", "# Compute CMC for each query", "\n", "ret", "=", "np", ".", "zeros", "(", "topk", ")", "\n", "num_valid_queries", "=", "0", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "# Filter out the same id and same camera", "\n", "        ", "valid", "=", "(", "(", "gallery_ids", "[", "indices", "[", "i", "]", "]", "!=", "query_ids", "[", "i", "]", ")", "|", "\n", "(", "gallery_cams", "[", "indices", "[", "i", "]", "]", "!=", "query_cams", "[", "i", "]", ")", ")", "\n", "if", "separate_camera_set", ":", "\n", "# Filter out samples from same camera", "\n", "            ", "valid", "&=", "(", "gallery_cams", "[", "indices", "[", "i", "]", "]", "!=", "query_cams", "[", "i", "]", ")", "\n", "", "if", "not", "np", ".", "any", "(", "matches", "[", "i", ",", "valid", "]", ")", ":", "continue", "\n", "if", "single_gallery_shot", ":", "\n", "            ", "repeat", "=", "10", "\n", "gids", "=", "gallery_ids", "[", "indices", "[", "i", "]", "[", "valid", "]", "]", "\n", "inds", "=", "np", ".", "where", "(", "valid", ")", "[", "0", "]", "\n", "ids_dict", "=", "defaultdict", "(", "list", ")", "\n", "for", "j", ",", "x", "in", "zip", "(", "inds", ",", "gids", ")", ":", "\n", "                ", "ids_dict", "[", "x", "]", ".", "append", "(", "j", ")", "\n", "", "", "else", ":", "\n", "            ", "repeat", "=", "1", "\n", "", "for", "_", "in", "range", "(", "repeat", ")", ":", "\n", "            ", "if", "single_gallery_shot", ":", "\n", "# Randomly choose one instance for each id", "\n", "                ", "sampled", "=", "(", "valid", "&", "_unique_sample", "(", "ids_dict", ",", "len", "(", "valid", ")", ")", ")", "\n", "index", "=", "np", ".", "nonzero", "(", "matches", "[", "i", ",", "sampled", "]", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "index", "=", "np", ".", "nonzero", "(", "matches", "[", "i", ",", "valid", "]", ")", "[", "0", "]", "\n", "", "delta", "=", "1.", "/", "(", "len", "(", "index", ")", "*", "repeat", ")", "\n", "for", "j", ",", "k", "in", "enumerate", "(", "index", ")", ":", "\n", "                ", "if", "k", "-", "j", ">=", "topk", ":", "break", "\n", "if", "first_match_break", ":", "\n", "                    ", "ret", "[", "k", "-", "j", "]", "+=", "1", "\n", "break", "\n", "", "ret", "[", "k", "-", "j", "]", "+=", "delta", "\n", "", "", "num_valid_queries", "+=", "1", "\n", "", "if", "num_valid_queries", "==", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"No valid query\"", ")", "\n", "", "return", "ret", ".", "cumsum", "(", ")", "/", "num_valid_queries", "\n", "\n"]], "home.repos.pwc.inspect_result.yxgeee_SpCL.evaluation_metrics.ranking.mean_ap": [[82, 116], ["utils.to_numpy", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.argsort", "range", "numpy.mean", "numpy.arange", "numpy.arange", "numpy.zeros().astype", "numpy.ones().astype", "aps.append", "len", "RuntimeError", "numpy.any", "sklearn.metrics.average_precision_score", "numpy.zeros", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.__init__.to_numpy"], ["", "def", "mean_ap", "(", "distmat", ",", "query_ids", "=", "None", ",", "gallery_ids", "=", "None", ",", "\n", "query_cams", "=", "None", ",", "gallery_cams", "=", "None", ")", ":", "\n", "    ", "distmat", "=", "to_numpy", "(", "distmat", ")", "\n", "m", ",", "n", "=", "distmat", ".", "shape", "\n", "# Fill up default values", "\n", "if", "query_ids", "is", "None", ":", "\n", "        ", "query_ids", "=", "np", ".", "arange", "(", "m", ")", "\n", "", "if", "gallery_ids", "is", "None", ":", "\n", "        ", "gallery_ids", "=", "np", ".", "arange", "(", "n", ")", "\n", "", "if", "query_cams", "is", "None", ":", "\n", "        ", "query_cams", "=", "np", ".", "zeros", "(", "m", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "", "if", "gallery_cams", "is", "None", ":", "\n", "        ", "gallery_cams", "=", "np", ".", "ones", "(", "n", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "# Ensure numpy array", "\n", "", "query_ids", "=", "np", ".", "asarray", "(", "query_ids", ")", "\n", "gallery_ids", "=", "np", ".", "asarray", "(", "gallery_ids", ")", "\n", "query_cams", "=", "np", ".", "asarray", "(", "query_cams", ")", "\n", "gallery_cams", "=", "np", ".", "asarray", "(", "gallery_cams", ")", "\n", "# Sort and find correct matches", "\n", "indices", "=", "np", ".", "argsort", "(", "distmat", ",", "axis", "=", "1", ")", "\n", "matches", "=", "(", "gallery_ids", "[", "indices", "]", "==", "query_ids", "[", ":", ",", "np", ".", "newaxis", "]", ")", "\n", "# Compute AP for each query", "\n", "aps", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "# Filter out the same id and same camera", "\n", "        ", "valid", "=", "(", "(", "gallery_ids", "[", "indices", "[", "i", "]", "]", "!=", "query_ids", "[", "i", "]", ")", "|", "\n", "(", "gallery_cams", "[", "indices", "[", "i", "]", "]", "!=", "query_cams", "[", "i", "]", ")", ")", "\n", "y_true", "=", "matches", "[", "i", ",", "valid", "]", "\n", "y_score", "=", "-", "distmat", "[", "i", "]", "[", "indices", "[", "i", "]", "]", "[", "valid", "]", "\n", "if", "not", "np", ".", "any", "(", "y_true", ")", ":", "continue", "\n", "aps", ".", "append", "(", "average_precision_score", "(", "y_true", ",", "y_score", ")", ")", "\n", "", "if", "len", "(", "aps", ")", "==", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"No valid query\"", ")", "\n", "", "return", "np", ".", "mean", "(", "aps", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.yxgeee_SpCL.evaluation_metrics.classification.accuracy": [[7, 22], ["torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "utils.to_torch", "utils.to_torch", "target.view().expand_as", "correct[].view().float().sum", "ret.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["home.repos.pwc.inspect_result.yxgeee_SpCL.utils.__init__.to_torch", "home.repos.pwc.inspect_result.yxgeee_SpCL.utils.__init__.to_torch"], ["def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "output", ",", "target", "=", "to_torch", "(", "output", ")", ",", "to_torch", "(", "target", ")", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "ret", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "ret", ".", "append", "(", "correct_k", ".", "mul_", "(", "1.", "/", "batch_size", ")", ")", "\n", "", "return", "ret", "\n", "", "", ""]]}