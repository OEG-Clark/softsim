{"home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.__init__": [[8, 20], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "max_graph_nodes_nb", "=", "50", ",", "max_feature_dim", "=", "50", ")", ":", "\n", "        ", "self", ".", "source_file", "=", "\"data/cstnet.json\"", "\n", "self", ".", "max_graph_nodes_nb", "=", "max_graph_nodes_nb", "\n", "self", ".", "max_feature_dim", "=", "max_feature_dim", "\n", "self", ".", "train_val_test_ratio", "=", "[", "0.8", ",", "0.1", ",", "0.1", "]", "\n", "self", ".", "scs_adj", "=", "np", ".", "zeros", "(", "[", "]", ")", "\n", "self", ".", "scs_adj", "=", "np", ".", "zeros", "(", "[", "]", ")", "\n", "self", ".", "fcf_adj", "=", "np", ".", "zeros", "(", "[", "]", ")", "\n", "self", ".", "fsf_adj", "=", "np", ".", "zeros", "(", "[", "]", ")", "\n", "self", ".", "feature", "=", "np", ".", "zeros", "(", "[", "]", ")", "\n", "self", ".", "mask", "=", "np", ".", "zeros", "(", "[", "]", ")", "\n", "self", ".", "user_id_label", "=", "np", ".", "zeros", "(", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.build_data": [[21, 222], ["open", "open.readlines", "open.close", "enumerate", "sorted", "sum", "len", "print", "print", "print", "print", "print", "print", "numpy.zeros", "numpy.zeros", "numpy.zeros", "vocabulary.extend", "vocabulary.extend", "vocabulary.extend", "vocabulary.extend", "numpy.zeros", "numpy.zeros", "numpy.zeros", "enumerate", "print", "print", "print", "print", "print", "print", "print", "dataloader.DataLoader.load_data", "dataloader.DataLoader.preprocess", "range", "graph_nodes_nb.append", "dataset.pop", "graph_nodes_nb.pop", "range", "int", "range", "int", "dataset.append", "int", "int", "range", "client_list.append", "len", "int", "int", "range", "range", "range", "str", "chr", "enumerate", "int", "dataloader.DataLoader.char2token", "int", "range", "sorted", "zip", "range", "json.loads", "len", "int", "outlier_index.append", "len", "range", "range", "range", "ipaddress.ip_address", "dataloader.DataLoader.char2token", "len", "list", "range", "sorted", "zip", "[].keys", "len", "[].keys", "len", "ip.split", "len", "ipaddress.ip_address", "[].keys", "dataloader.DataLoader.char2token", "len", "len", "list", "range", "[].keys", "[].keys", "ip.split", "len", "[].keys", "dataloader.DataLoader.char2token", "[].keys", "str", "dataloader.DataLoader.char2token", "len", "str", "dataloader.DataLoader.char2token", "dataloader.DataLoader.char2token", "len", "[].keys", "dataloader.DataLoader.char2token", "dataloader.DataLoader.char2token", "type", "[].split", "len", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.load_data", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.preprocess", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token"], ["", "def", "build_data", "(", "self", ")", ":", "\n", "        ", "dataset", "=", "[", "]", "\n", "f", "=", "open", "(", "self", ".", "source_file", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "json_string", "=", "\"\"", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "if", "line", "[", ":", "-", "1", "]", "==", "'{'", ":", "\n", "                ", "json_string", "=", "\"\"", "\n", "", "json_string", "+=", "line", "[", ":", "-", "1", "]", "\n", "if", "line", "[", ":", "-", "1", "]", "==", "'}'", ":", "\n", "                ", "dataset", ".", "append", "(", "json", ".", "loads", "(", "json_string", ")", ")", "\n", "\n", "# Determine the maximum number of nodes in each user_graph as adj.shape", "\n", "", "", "graph_nodes_nb", "=", "[", "]", "\n", "for", "user_data", "in", "dataset", ":", "\n", "            ", "client_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "int", "(", "user_data", "[", "'nodes'", "]", "[", "'node_count'", "]", ")", ")", ":", "\n", "                ", "graph_nodes_count", "=", "1", "\n", "graph_nodes_count", "+=", "int", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'connection_features'", "]", "[", "'node_count'", "]", ")", "\n", "graph_nodes_count", "+=", "len", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'client_features'", "]", ".", "keys", "(", ")", ")", "-", "1", "\n", "for", "j", "in", "range", "(", "int", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'connection_features'", "]", "[", "'node_count'", "]", ")", ")", ":", "\n", "                    ", "graph_nodes_count", "+=", "len", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "\n", "[", "'connection_features'", "]", "[", "'node_'", "+", "str", "(", "j", ")", "]", ".", "keys", "(", ")", ")", "-", "1", "\n", "", "client_list", ".", "append", "(", "graph_nodes_count", ")", "\n", "", "graph_nodes_nb", ".", "append", "(", "client_list", ")", "\n", "\n", "# Remove outlier data to keep matrix not too sparse", "\n", "", "outlier_index", "=", "[", "]", "\n", "for", "i", ",", "nbs", "in", "enumerate", "(", "graph_nodes_nb", ")", ":", "\n", "            ", "for", "nb", "in", "nbs", ":", "\n", "                ", "if", "nb", ">", "self", ".", "max_graph_nodes_nb", ":", "\n", "                    ", "outlier_index", ".", "append", "(", "i", ")", "\n", "", "", "", "for", "i", "in", "sorted", "(", "outlier_index", ",", "reverse", "=", "True", ")", ":", "\n", "            ", "dataset", ".", "pop", "(", "i", ")", "\n", "graph_nodes_nb", ".", "pop", "(", "i", ")", "\n", "\n", "# adj_shape = max([max(nb) for nb in graph_nodes_nb])", "\n", "", "adj_shape", "=", "49", "\n", "clients_nb", "=", "sum", "(", "[", "len", "(", "nb", ")", "for", "nb", "in", "graph_nodes_nb", "]", ")", "\n", "user_nb", "=", "len", "(", "graph_nodes_nb", ")", "\n", "\n", "print", "(", "\"----- User data info -----\"", ")", "\n", "print", "(", "\"max graph nb.node limit: \"", ",", "self", ".", "max_graph_nodes_nb", ")", "\n", "print", "(", "\"max feature dim limit: \"", ",", "self", ".", "max_feature_dim", ")", "\n", "print", "(", "\"nb.user: \"", ",", "user_nb", ")", "\n", "print", "(", "\"nb.client node: \"", ",", "clients_nb", ")", "\n", "print", "(", "\"max graph nb.node: \"", ",", "adj_shape", ")", "\n", "\n", "# Build adj matrix for each graph (SCS, FCF, FSF)", "\n", "scs_adj", "=", "np", ".", "zeros", "(", "(", "clients_nb", ",", "adj_shape", ",", "adj_shape", ")", ")", "\n", "fcf_adj", "=", "np", ".", "zeros", "(", "(", "clients_nb", ",", "adj_shape", ",", "adj_shape", ")", ")", "\n", "fsf_adj", "=", "np", ".", "zeros", "(", "(", "clients_nb", ",", "adj_shape", ",", "adj_shape", ")", ")", "\n", "\n", "client_index", "=", "0", "\n", "for", "user_data", "in", "dataset", ":", "\n", "            ", "for", "i", "in", "range", "(", "int", "(", "user_data", "[", "'nodes'", "]", "[", "'node_count'", "]", ")", ")", ":", "\n", "\n", "# SCS", "\n", "                ", "read_node_index", "=", "0", "\n", "read_node_index", "+=", "1", "\n", "server_nb", "=", "int", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'connection_features'", "]", "[", "'node_count'", "]", ")", "\n", "for", "j", "in", "range", "(", "read_node_index", ",", "read_node_index", "+", "server_nb", ")", ":", "\n", "                    ", "scs_adj", "[", "client_index", "+", "i", "]", "[", "0", "]", "[", "j", "]", "=", "1.0", "\n", "scs_adj", "[", "client_index", "+", "i", "]", "[", "j", "]", "[", "0", "]", "=", "1.0", "\n", "", "read_node_index", "+=", "server_nb", "\n", "\n", "# FCF", "\n", "client_field_nb", "=", "len", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'client_features'", "]", ".", "keys", "(", ")", ")", "-", "1", "\n", "for", "j", "in", "range", "(", "read_node_index", ",", "read_node_index", "+", "client_field_nb", ")", ":", "\n", "                    ", "fcf_adj", "[", "client_index", "+", "i", "]", "[", "0", "]", "[", "j", "]", "=", "1.0", "\n", "fcf_adj", "[", "client_index", "+", "i", "]", "[", "j", "]", "[", "0", "]", "=", "1.0", "\n", "", "read_node_index", "+=", "client_field_nb", "\n", "\n", "# FSF", "\n", "for", "j", "in", "range", "(", "server_nb", ")", ":", "\n", "                    ", "server_field_nb", "=", "len", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "\n", "[", "'connection_features'", "]", "[", "'node_'", "+", "str", "(", "j", ")", "]", ".", "keys", "(", ")", ")", "-", "1", "\n", "for", "k", "in", "range", "(", "read_node_index", ",", "read_node_index", "+", "server_field_nb", ")", ":", "\n", "                        ", "fsf_adj", "[", "client_index", "+", "i", "]", "[", "j", "+", "1", "]", "[", "k", "]", "=", "1.0", "\n", "fsf_adj", "[", "client_index", "+", "i", "]", "[", "k", "]", "[", "j", "+", "1", "]", "=", "1.0", "\n", "", "read_node_index", "+=", "server_field_nb", "\n", "", "", "client_index", "+=", "int", "(", "user_data", "[", "'nodes'", "]", "[", "'node_count'", "]", ")", "\n", "\n", "# Build vocabulary", "\n", "", "vocabulary", "=", "[", "]", "\n", "vocabulary", ".", "extend", "(", "[", "'<PAD>'", ",", "'<UNK>'", "]", ")", "\n", "vocabulary", ".", "extend", "(", "[", "str", "(", "i", ")", "for", "i", "in", "range", "(", "10", ")", "]", ")", "\n", "vocabulary", ".", "extend", "(", "[", "chr", "(", "i", ")", "for", "i", "in", "range", "(", "97", ",", "123", ")", "]", ")", "\n", "vocabulary", ".", "extend", "(", "[", "' '", ",", "'.'", ",", "';'", ",", "':'", ",", "'*'", ",", "'-'", ",", "'\\''", ",", "'/'", ",", "'('", ",", "')'", ",", "'&'", ",", "','", ",", "'_'", "]", ")", "\n", "\n", "# token2char_dict = {token: char for token, char in enumerate(vocabulary)}", "\n", "char2token_dict", "=", "{", "char", ":", "token", "for", "token", ",", "char", "in", "enumerate", "(", "vocabulary", ")", "}", "\n", "\n", "# Build node feature", "\n", "feature", "=", "np", ".", "zeros", "(", "(", "clients_nb", ",", "adj_shape", ",", "self", ".", "max_feature_dim", ")", ")", "\n", "client_index", "=", "0", "\n", "for", "user_data", "in", "dataset", ":", "\n", "            ", "for", "i", "in", "range", "(", "int", "(", "user_data", "[", "'nodes'", "]", "[", "'node_count'", "]", ")", ")", ":", "\n", "\n", "# Client node", "\n", "                ", "read_node_index", "=", "0", "\n", "ip", "=", "ipaddress", ".", "ip_address", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'client_features'", "]", "[", "'ip'", "]", ")", ".", "exploded", "\n", "node_feature", "=", "self", ".", "char2token", "(", "char2token_dict", ",", "''", ".", "join", "(", "ip", ".", "split", "(", "':'", ")", ")", ")", "\n", "feature", "[", "client_index", "+", "i", "]", "[", "0", "]", "[", ":", "len", "(", "node_feature", ")", "]", "=", "node_feature", "\n", "read_node_index", "+=", "1", "\n", "\n", "# Server nodes", "\n", "server_nb", "=", "int", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'connection_features'", "]", "[", "'node_count'", "]", ")", "\n", "for", "j", "in", "range", "(", "read_node_index", ",", "read_node_index", "+", "server_nb", ")", ":", "\n", "                    ", "ip", "=", "ipaddress", ".", "ip_address", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "\n", "[", "'connection_features'", "]", "[", "'node_'", "+", "str", "(", "j", "-", "1", ")", "]", "[", "'ip'", "]", ")", ".", "exploded", "\n", "node_feature", "=", "self", ".", "char2token", "(", "char2token_dict", ",", "''", ".", "join", "(", "ip", ".", "split", "(", "':'", ")", ")", ")", "\n", "feature", "[", "client_index", "+", "i", "]", "[", "j", "]", "[", ":", "len", "(", "node_feature", ")", "]", "=", "node_feature", "\n", "", "read_node_index", "+=", "server_nb", "\n", "\n", "# Client field nodes", "\n", "client_field_nb", "=", "len", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'client_features'", "]", ".", "keys", "(", ")", ")", "-", "1", "\n", "keys", "=", "sorted", "(", "list", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'client_features'", "]", ".", "keys", "(", ")", "-", "[", "\"ip\"", "]", ")", ")", "\n", "for", "j", ",", "key", "in", "zip", "(", "range", "(", "read_node_index", ",", "read_node_index", "+", "client_field_nb", ")", ",", "keys", ")", ":", "\n", "# if key == 'ciphersuites':", "\n", "                    ", "if", "'ciphersuites'", "in", "key", ":", "\n", "                        ", "ciphersuites", "=", "''", ".", "join", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'client_features'", "]", "[", "key", "]", ")", "\n", "node_feature", "=", "self", ".", "char2token", "(", "char2token_dict", ",", "ciphersuites", ")", "\n", "", "elif", "key", "==", "'com_method'", ":", "\n", "                        ", "com_method", "=", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'client_features'", "]", "[", "key", "]", "\n", "if", "str", "(", "type", "(", "com_method", ")", ")", "==", "'<class \\'str\\'>'", ":", "\n", "                            ", "node_feature", "=", "self", ".", "char2token", "(", "char2token_dict", ",", "com_method", ")", "\n", "", "else", ":", "\n", "                            ", "node_feature", "=", "self", ".", "char2token", "(", "char2token_dict", ",", "''", ".", "join", "(", "com_method", ")", ")", "\n", "", "", "else", ":", "\n", "                        ", "node_feature", "=", "self", ".", "char2token", "(", "char2token_dict", ",", "\n", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "[", "'client_features'", "]", "[", "key", "]", ")", "\n", "\n", "", "if", "len", "(", "node_feature", ")", "<=", "self", ".", "max_feature_dim", ":", "\n", "                        ", "feature", "[", "client_index", "+", "i", "]", "[", "j", "]", "[", ":", "len", "(", "node_feature", ")", "]", "=", "node_feature", "\n", "", "else", ":", "\n", "                        ", "feature", "[", "client_index", "+", "i", "]", "[", "j", "]", "=", "node_feature", "[", ":", "self", ".", "max_feature_dim", "]", "\n", "\n", "# Server field nodes", "\n", "", "", "read_node_index", "+=", "client_field_nb", "\n", "for", "j", "in", "range", "(", "server_nb", ")", ":", "\n", "                    ", "server_field_nb", "=", "len", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "\n", "[", "'connection_features'", "]", "[", "'node_'", "+", "str", "(", "j", ")", "]", ".", "keys", "(", ")", ")", "-", "1", "\n", "keys", "=", "sorted", "(", "list", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "\n", "[", "'connection_features'", "]", "[", "'node_'", "+", "str", "(", "j", ")", "]", ".", "keys", "(", ")", "-", "[", "\"ip\"", "]", ")", ")", "\n", "for", "k", ",", "key", "in", "zip", "(", "range", "(", "read_node_index", ",", "read_node_index", "+", "server_field_nb", ")", ",", "keys", ")", ":", "\n", "                        ", "if", "key", "==", "'stream_count'", ":", "\n", "                            ", "stream_count", "=", "str", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "\n", "[", "'connection_features'", "]", "[", "'node_'", "+", "str", "(", "j", ")", "]", "[", "key", "]", ")", "\n", "node_feature", "=", "self", ".", "char2token", "(", "char2token_dict", ",", "stream_count", ")", "\n", "", "elif", "key", "==", "'first_connection'", ":", "\n", "                            ", "first_connection", "=", "''", ".", "join", "(", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "\n", "[", "'connection_features'", "]", "[", "'node_'", "+", "str", "(", "j", ")", "]", "[", "key", "]", ".", "split", "(", "'_'", ")", ")", "\n", "node_feature", "=", "self", ".", "char2token", "(", "char2token_dict", ",", "first_connection", ")", "\n", "", "else", ":", "\n", "                            ", "node_feature", "=", "self", ".", "char2token", "(", "char2token_dict", ",", "\n", "user_data", "[", "'nodes'", "]", "[", "'node_'", "+", "str", "(", "i", ")", "]", "\n", "[", "'connection_features'", "]", "[", "'node_'", "+", "str", "(", "j", ")", "]", "[", "key", "]", ")", "\n", "", "if", "len", "(", "node_feature", ")", "<=", "self", ".", "max_feature_dim", ":", "\n", "                            ", "feature", "[", "client_index", "+", "i", "]", "[", "k", "]", "[", ":", "len", "(", "node_feature", ")", "]", "=", "node_feature", "\n", "", "else", ":", "\n", "                            ", "feature", "[", "client_index", "+", "i", "]", "[", "k", "]", "=", "node_feature", "[", ":", "self", ".", "max_feature_dim", "]", "\n", "", "", "read_node_index", "+=", "server_field_nb", "\n", "", "", "client_index", "+=", "int", "(", "user_data", "[", "'nodes'", "]", "[", "'node_count'", "]", ")", "\n", "\n", "# Build mask matrix", "\n", "", "mask", "=", "np", ".", "zeros", "(", "(", "clients_nb", ",", "adj_shape", ")", ")", "\n", "index", "=", "0", "\n", "for", "user_graphs", "in", "graph_nodes_nb", ":", "\n", "            ", "for", "nb", "in", "user_graphs", ":", "\n", "                ", "mask", "[", "index", "]", "[", ":", "nb", "]", "=", "1", "\n", "index", "+=", "1", "\n", "\n", "# Build user id labels", "\n", "", "", "user_id_label", "=", "np", ".", "zeros", "(", "(", "clients_nb", ",", "1", ")", ")", "\n", "index", "=", "0", "\n", "for", "i", ",", "user_graphs", "in", "enumerate", "(", "graph_nodes_nb", ")", ":", "\n", "            ", "for", "_", "in", "user_graphs", ":", "\n", "                ", "user_id_label", "[", "index", "]", "=", "i", "\n", "index", "+=", "1", "\n", "\n", "# Used for inference", "\n", "", "", "self", ".", "scs_adj", ",", "self", ".", "fcf_adj", ",", "self", ".", "fsf_adj", ",", "self", ".", "feature", ",", "self", ".", "user_id_label", ",", "self", ".", "mask", "=", "scs_adj", ",", "fcf_adj", ",", "fsf_adj", ",", "feature", ",", "user_id_label", ",", "mask", "\n", "\n", "print", "(", "\"----- Build graph data -----\"", ")", "\n", "print", "(", "\"SCS adj.shape: \"", ",", "scs_adj", ".", "shape", ")", "\n", "print", "(", "\"FCF adj.shape: \"", ",", "fcf_adj", ".", "shape", ")", "\n", "print", "(", "\"FSF adj.shape: \"", ",", "fsf_adj", ".", "shape", ")", "\n", "print", "(", "\"node feature.shape: \"", ",", "feature", ".", "shape", ")", "\n", "print", "(", "\"mask.shape: \"", ",", "mask", ".", "shape", ")", "\n", "print", "(", "\"user_label.shape: \"", ",", "user_id_label", ".", "shape", ")", "\n", "\n", "# Used for training", "\n", "scs_adj", ",", "fcf_adj", ",", "fsf_adj", ",", "feature", ",", "mask", ",", "label", "=", "self", ".", "load_data", "(", "scs_adj", ",", "fcf_adj", ",", "fsf_adj", ",", "\n", "feature", ",", "mask", ",", "user_id_label", ")", "\n", "scs_biases", ",", "fcf_biases", ",", "fsf_biases", ",", "feature", "=", "self", ".", "preprocess", "(", "scs_adj", ",", "fcf_adj", ",", "fsf_adj", ",", "feature", ")", "\n", "\n", "return", "scs_biases", ",", "fcf_biases", ",", "fsf_biases", ",", "feature", ",", "mask", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.load_data": [[223, 410], ["range", "numpy.array", "numpy.argwhere", "numpy.argwhere", "range", "random.sample", "random.shuffle", "random.shuffle", "int", "int", "int", "int", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "print", "print", "print", "print", "print", "print", "print", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.random.shuffle", "numpy.random.shuffle", "numpy.random.shuffle", "range", "numpy.concatenate", "range", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "data_pair.append", "int", "len", "range", "range", "sum", "len", "len", "len", "len", "len", "len", "numpy.ones", "numpy.zeros", "numpy.ones", "numpy.zeros", "numpy.ones", "numpy.zeros", "numpy.array.append", "numpy.array.append", "len", "len", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "len"], "methods", ["None"], ["", "def", "load_data", "(", "self", ",", "scs_adj", ",", "fcf_adj", ",", "fsf_adj", ",", "feature", ",", "mask", ",", "user_id_label", ")", ":", "\n", "# Keep nb.neg sample = nb.pos sample", "\n", "        ", "data_pair", "=", "[", "]", "\n", "label", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "user_id_label", ")", "-", "1", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "user_id_label", ")", ")", ":", "\n", "                ", "data_pair", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "if", "user_id_label", "[", "i", "]", "==", "user_id_label", "[", "j", "]", ":", "\n", "                    ", "label", ".", "append", "(", "1", ")", "\n", "# elif user_id_label[i] != user_id_label[j] and (feature[i][0][:12] == feature[j][0][:12]).all():", "\n", "#     label.append(2)", "\n", "", "else", ":", "\n", "                    ", "label", ".", "append", "(", "0", ")", "\n", "\n", "", "", "", "label", "=", "np", ".", "array", "(", "label", ")", "\n", "pos_index", "=", "np", ".", "argwhere", "(", "label", "==", "1", ")", "\n", "neg_index", "=", "np", ".", "argwhere", "(", "label", "==", "0", ")", "\n", "\n", "nb_samples", "=", "10000", "# Change with a suitable number for the dataset", "\n", "\n", "# test mode - mask this part of codes", "\n", "temp_index", "=", "pos_index", "\n", "for", "_", "in", "range", "(", "int", "(", "nb_samples", "/", "len", "(", "pos_index", ")", ")", "-", "1", ")", ":", "\n", "            ", "temp_index", "=", "np", ".", "concatenate", "(", "[", "temp_index", ",", "pos_index", "]", ",", "axis", "=", "0", ")", "\n", "", "pos_index", "=", "temp_index", "\n", "\n", "neg_index_sample", "=", "random", ".", "sample", "(", "range", "(", "0", ",", "len", "(", "neg_index", ")", ")", ",", "len", "(", "pos_index", ")", ")", "\n", "neg_index", "=", "neg_index", "[", "neg_index_sample", "]", "\n", "\n", "# Build train val test data", "\n", "pos_pair", "=", "[", "data_pair", "[", "pos_index", "[", "i", "]", "[", "0", "]", "]", "for", "i", "in", "range", "(", "len", "(", "pos_index", ")", ")", "]", "\n", "neg_pair", "=", "[", "data_pair", "[", "neg_index", "[", "i", "]", "[", "0", "]", "]", "for", "i", "in", "range", "(", "len", "(", "neg_index", ")", ")", "]", "\n", "random", ".", "shuffle", "(", "pos_pair", ")", "\n", "random", ".", "shuffle", "(", "neg_pair", ")", "\n", "\n", "assert", "sum", "(", "self", ".", "train_val_test_ratio", ")", "<=", "1", "and", "0", "not", "in", "self", ".", "train_val_test_ratio", "\n", "\n", "train_pos_nb", "=", "int", "(", "len", "(", "pos_pair", ")", "*", "self", ".", "train_val_test_ratio", "[", "0", "]", ")", "\n", "val_pos_nb", "=", "int", "(", "len", "(", "pos_pair", ")", "*", "self", ".", "train_val_test_ratio", "[", "1", "]", ")", "\n", "test_pos_nb", "=", "len", "(", "pos_pair", ")", "-", "train_pos_nb", "-", "val_pos_nb", "\n", "train_neg_nb", "=", "int", "(", "len", "(", "neg_pair", ")", "*", "self", ".", "train_val_test_ratio", "[", "0", "]", ")", "\n", "val_neg_nb", "=", "int", "(", "len", "(", "neg_pair", ")", "*", "self", ".", "train_val_test_ratio", "[", "1", "]", ")", "\n", "test_neg_nb", "=", "len", "(", "neg_pair", ")", "-", "train_neg_nb", "-", "val_neg_nb", "\n", "\n", "train_scs_adj", "=", "np", ".", "zeros", "(", "(", "2", ",", "train_pos_nb", "+", "train_neg_nb", ",", "scs_adj", ".", "shape", "[", "1", "]", ",", "scs_adj", ".", "shape", "[", "2", "]", ")", ")", "\n", "val_scs_adj", "=", "np", ".", "zeros", "(", "(", "2", ",", "val_pos_nb", "+", "val_neg_nb", ",", "scs_adj", ".", "shape", "[", "1", "]", ",", "scs_adj", ".", "shape", "[", "2", "]", ")", ")", "\n", "test_scs_adj", "=", "np", ".", "zeros", "(", "(", "2", ",", "test_pos_nb", "+", "test_neg_nb", ",", "scs_adj", ".", "shape", "[", "1", "]", ",", "scs_adj", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "train_fcf_adj", "=", "np", ".", "zeros", "(", "(", "2", ",", "train_pos_nb", "+", "train_neg_nb", ",", "fcf_adj", ".", "shape", "[", "1", "]", ",", "fcf_adj", ".", "shape", "[", "2", "]", ")", ")", "\n", "val_fcf_adj", "=", "np", ".", "zeros", "(", "(", "2", ",", "val_pos_nb", "+", "val_neg_nb", ",", "fcf_adj", ".", "shape", "[", "1", "]", ",", "fcf_adj", ".", "shape", "[", "2", "]", ")", ")", "\n", "test_fcf_adj", "=", "np", ".", "zeros", "(", "(", "2", ",", "test_pos_nb", "+", "test_neg_nb", ",", "fcf_adj", ".", "shape", "[", "1", "]", ",", "fcf_adj", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "train_fsf_adj", "=", "np", ".", "zeros", "(", "(", "2", ",", "train_pos_nb", "+", "train_neg_nb", ",", "fsf_adj", ".", "shape", "[", "1", "]", ",", "fsf_adj", ".", "shape", "[", "2", "]", ")", ")", "\n", "val_fsf_adj", "=", "np", ".", "zeros", "(", "(", "2", ",", "val_pos_nb", "+", "val_neg_nb", ",", "fsf_adj", ".", "shape", "[", "1", "]", ",", "fsf_adj", ".", "shape", "[", "2", "]", ")", ")", "\n", "test_fsf_adj", "=", "np", ".", "zeros", "(", "(", "2", ",", "test_pos_nb", "+", "test_neg_nb", ",", "fsf_adj", ".", "shape", "[", "1", "]", ",", "fsf_adj", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "train_feature", "=", "np", ".", "zeros", "(", "(", "2", ",", "train_pos_nb", "+", "train_neg_nb", ",", "feature", ".", "shape", "[", "1", "]", ",", "feature", ".", "shape", "[", "2", "]", ")", ")", "\n", "val_feature", "=", "np", ".", "zeros", "(", "(", "2", ",", "val_pos_nb", "+", "val_neg_nb", ",", "feature", ".", "shape", "[", "1", "]", ",", "feature", ".", "shape", "[", "2", "]", ")", ")", "\n", "test_feature", "=", "np", ".", "zeros", "(", "(", "2", ",", "test_pos_nb", "+", "test_neg_nb", ",", "feature", ".", "shape", "[", "1", "]", ",", "feature", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "train_mask", "=", "np", ".", "zeros", "(", "(", "train_pos_nb", "+", "train_neg_nb", ",", "mask", ".", "shape", "[", "1", "]", ")", ")", "\n", "val_mask", "=", "np", ".", "zeros", "(", "(", "val_pos_nb", "+", "val_neg_nb", ",", "mask", ".", "shape", "[", "1", "]", ")", ")", "\n", "test_mask", "=", "np", ".", "zeros", "(", "(", "test_pos_nb", "+", "test_neg_nb", ",", "mask", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "index", "=", "0", "\n", "for", "graph_1_index", ",", "graph_2_index", "in", "pos_pair", "[", ":", "train_pos_nb", "]", ":", "\n", "            ", "train_feature", "[", "0", "]", "[", "index", "]", "=", "feature", "[", "graph_1_index", "]", "\n", "train_feature", "[", "1", "]", "[", "index", "]", "=", "feature", "[", "graph_2_index", "]", "\n", "train_scs_adj", "[", "0", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_1_index", "]", "\n", "train_scs_adj", "[", "1", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_2_index", "]", "\n", "train_fcf_adj", "[", "0", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_1_index", "]", "\n", "train_fcf_adj", "[", "1", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_2_index", "]", "\n", "train_fsf_adj", "[", "0", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_1_index", "]", "\n", "train_fsf_adj", "[", "1", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_2_index", "]", "\n", "train_mask", "[", "index", "]", "=", "mask", "[", "graph_1_index", "]", "if", "np", ".", "sum", "(", "mask", "[", "graph_1_index", "]", ")", "<=", "np", ".", "sum", "(", "mask", "[", "graph_2_index", "]", ")", "else", "mask", "[", "graph_2_index", "]", "\n", "index", "+=", "1", "\n", "", "for", "graph_1_index", ",", "graph_2_index", "in", "neg_pair", "[", ":", "train_neg_nb", "]", ":", "\n", "            ", "train_feature", "[", "0", "]", "[", "index", "]", "=", "feature", "[", "graph_1_index", "]", "\n", "train_feature", "[", "1", "]", "[", "index", "]", "=", "feature", "[", "graph_2_index", "]", "\n", "train_scs_adj", "[", "0", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_1_index", "]", "\n", "train_scs_adj", "[", "1", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_2_index", "]", "\n", "train_fcf_adj", "[", "0", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_1_index", "]", "\n", "train_fcf_adj", "[", "1", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_2_index", "]", "\n", "train_fsf_adj", "[", "0", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_1_index", "]", "\n", "train_fsf_adj", "[", "1", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_2_index", "]", "\n", "train_mask", "[", "index", "]", "=", "mask", "[", "graph_1_index", "]", "if", "np", ".", "sum", "(", "mask", "[", "graph_1_index", "]", ")", "<=", "np", ".", "sum", "(", "mask", "[", "graph_2_index", "]", ")", "else", "mask", "[", "graph_2_index", "]", "\n", "index", "+=", "1", "\n", "", "index", "=", "0", "\n", "for", "graph_1_index", ",", "graph_2_index", "in", "pos_pair", "[", "train_pos_nb", ":", "train_pos_nb", "+", "val_pos_nb", "]", ":", "\n", "            ", "val_feature", "[", "0", "]", "[", "index", "]", "=", "feature", "[", "graph_1_index", "]", "\n", "val_feature", "[", "1", "]", "[", "index", "]", "=", "feature", "[", "graph_2_index", "]", "\n", "val_scs_adj", "[", "0", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_1_index", "]", "\n", "val_scs_adj", "[", "1", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_2_index", "]", "\n", "val_fcf_adj", "[", "0", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_1_index", "]", "\n", "val_fcf_adj", "[", "1", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_2_index", "]", "\n", "val_fsf_adj", "[", "0", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_1_index", "]", "\n", "val_fsf_adj", "[", "1", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_2_index", "]", "\n", "val_mask", "[", "index", "]", "=", "mask", "[", "graph_1_index", "]", "if", "np", ".", "sum", "(", "mask", "[", "graph_1_index", "]", ")", "<=", "np", ".", "sum", "(", "mask", "[", "graph_2_index", "]", ")", "else", "mask", "[", "graph_2_index", "]", "\n", "index", "+=", "1", "\n", "", "for", "graph_1_index", ",", "graph_2_index", "in", "neg_pair", "[", "train_neg_nb", ":", "train_neg_nb", "+", "val_neg_nb", "]", ":", "\n", "            ", "val_feature", "[", "0", "]", "[", "index", "]", "=", "feature", "[", "graph_1_index", "]", "\n", "val_feature", "[", "1", "]", "[", "index", "]", "=", "feature", "[", "graph_2_index", "]", "\n", "val_scs_adj", "[", "0", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_1_index", "]", "\n", "val_scs_adj", "[", "1", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_2_index", "]", "\n", "val_fcf_adj", "[", "0", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_1_index", "]", "\n", "val_fcf_adj", "[", "1", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_2_index", "]", "\n", "val_fsf_adj", "[", "0", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_1_index", "]", "\n", "val_fsf_adj", "[", "1", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_2_index", "]", "\n", "val_mask", "[", "index", "]", "=", "mask", "[", "graph_1_index", "]", "if", "np", ".", "sum", "(", "mask", "[", "graph_1_index", "]", ")", "<=", "np", ".", "sum", "(", "mask", "[", "graph_2_index", "]", ")", "else", "mask", "[", "graph_2_index", "]", "\n", "index", "+=", "1", "\n", "", "index", "=", "0", "\n", "for", "graph_1_index", ",", "graph_2_index", "in", "pos_pair", "[", "-", "test_pos_nb", ":", "]", ":", "\n", "            ", "test_feature", "[", "0", "]", "[", "index", "]", "=", "feature", "[", "graph_1_index", "]", "\n", "test_feature", "[", "1", "]", "[", "index", "]", "=", "feature", "[", "graph_2_index", "]", "\n", "test_scs_adj", "[", "0", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_1_index", "]", "\n", "test_scs_adj", "[", "1", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_2_index", "]", "\n", "test_fcf_adj", "[", "0", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_1_index", "]", "\n", "test_fcf_adj", "[", "1", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_2_index", "]", "\n", "test_fsf_adj", "[", "0", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_1_index", "]", "\n", "test_fsf_adj", "[", "1", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_2_index", "]", "\n", "test_mask", "[", "index", "]", "=", "mask", "[", "graph_1_index", "]", "if", "np", ".", "sum", "(", "mask", "[", "graph_1_index", "]", ")", "<=", "np", ".", "sum", "(", "mask", "[", "graph_2_index", "]", ")", "else", "mask", "[", "graph_2_index", "]", "\n", "index", "+=", "1", "\n", "", "for", "graph_1_index", ",", "graph_2_index", "in", "neg_pair", "[", "-", "test_neg_nb", ":", "]", ":", "\n", "            ", "test_feature", "[", "0", "]", "[", "index", "]", "=", "feature", "[", "graph_1_index", "]", "\n", "test_feature", "[", "1", "]", "[", "index", "]", "=", "feature", "[", "graph_2_index", "]", "\n", "test_scs_adj", "[", "0", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_1_index", "]", "\n", "test_scs_adj", "[", "1", "]", "[", "index", "]", "=", "scs_adj", "[", "graph_2_index", "]", "\n", "test_fcf_adj", "[", "0", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_1_index", "]", "\n", "test_fcf_adj", "[", "1", "]", "[", "index", "]", "=", "fcf_adj", "[", "graph_2_index", "]", "\n", "test_fsf_adj", "[", "0", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_1_index", "]", "\n", "test_fsf_adj", "[", "1", "]", "[", "index", "]", "=", "fsf_adj", "[", "graph_2_index", "]", "\n", "test_mask", "[", "index", "]", "=", "mask", "[", "graph_1_index", "]", "if", "np", ".", "sum", "(", "mask", "[", "graph_1_index", "]", ")", "<=", "np", ".", "sum", "(", "mask", "[", "graph_2_index", "]", ")", "else", "mask", "[", "graph_2_index", "]", "\n", "index", "+=", "1", "\n", "\n", "", "train_label", "=", "np", ".", "concatenate", "(", "(", "np", ".", "ones", "(", "train_pos_nb", ")", ",", "np", ".", "zeros", "(", "train_neg_nb", ")", ")", ")", "\n", "val_label", "=", "np", ".", "concatenate", "(", "(", "np", ".", "ones", "(", "val_pos_nb", ")", ",", "np", ".", "zeros", "(", "val_neg_nb", ")", ")", ")", "\n", "test_label", "=", "np", ".", "concatenate", "(", "(", "np", ".", "ones", "(", "test_pos_nb", ")", ",", "np", ".", "zeros", "(", "test_neg_nb", ")", ")", ")", "\n", "\n", "print", "(", "\"----- Build pair samples -----\"", ")", "\n", "print", "(", "'nb.pos pair: '", ",", "len", "(", "pos_pair", ")", ")", "\n", "print", "(", "'nb.neg pair: '", ",", "len", "(", "neg_pair", ")", ")", "\n", "print", "(", "\"train val test ratio: \"", ",", "self", ".", "train_val_test_ratio", ")", "\n", "print", "(", "\"nb.train pair: \"", ",", "len", "(", "train_feature", "[", "0", "]", ")", ")", "\n", "print", "(", "\"nb.val pair: \"", ",", "len", "(", "val_feature", "[", "0", "]", ")", ")", "\n", "print", "(", "\"nb.test pair: \"", ",", "len", "(", "test_feature", "[", "0", "]", ")", ")", "\n", "\n", "# Shuffle data", "\n", "train_index", "=", "np", ".", "arange", "(", "len", "(", "train_feature", "[", "0", "]", ")", ")", "\n", "val_index", "=", "np", ".", "arange", "(", "len", "(", "val_feature", "[", "0", "]", ")", ")", "\n", "test_index", "=", "np", ".", "arange", "(", "len", "(", "test_feature", "[", "0", "]", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "train_index", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "val_index", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "test_index", ")", "\n", "\n", "for", "i", "in", "[", "0", ",", "1", "]", ":", "\n", "            ", "train_scs_adj", "[", "i", "]", "=", "train_scs_adj", "[", "i", "]", "[", "train_index", "]", "\n", "train_fcf_adj", "[", "i", "]", "=", "train_fcf_adj", "[", "i", "]", "[", "train_index", "]", "\n", "train_fsf_adj", "[", "i", "]", "=", "train_fsf_adj", "[", "i", "]", "[", "train_index", "]", "\n", "train_feature", "[", "i", "]", "=", "train_feature", "[", "i", "]", "[", "train_index", "]", "\n", "\n", "val_scs_adj", "[", "i", "]", "=", "val_scs_adj", "[", "i", "]", "[", "val_index", "]", "\n", "val_fcf_adj", "[", "i", "]", "=", "val_fcf_adj", "[", "i", "]", "[", "val_index", "]", "\n", "val_fsf_adj", "[", "i", "]", "=", "val_fsf_adj", "[", "i", "]", "[", "val_index", "]", "\n", "val_feature", "[", "i", "]", "=", "val_feature", "[", "i", "]", "[", "val_index", "]", "\n", "\n", "test_scs_adj", "[", "i", "]", "=", "test_scs_adj", "[", "i", "]", "[", "test_index", "]", "\n", "test_fcf_adj", "[", "i", "]", "=", "test_fcf_adj", "[", "i", "]", "[", "test_index", "]", "\n", "test_fsf_adj", "[", "i", "]", "=", "test_fsf_adj", "[", "i", "]", "[", "test_index", "]", "\n", "test_feature", "[", "i", "]", "=", "test_feature", "[", "i", "]", "[", "test_index", "]", "\n", "\n", "", "train_mask", "=", "train_mask", "[", "train_index", "]", "\n", "val_mask", "=", "val_mask", "[", "val_index", "]", "\n", "test_mask", "=", "test_mask", "[", "test_index", "]", "\n", "train_label", "=", "train_label", "[", "train_index", "]", "\n", "val_label", "=", "val_label", "[", "val_index", "]", "\n", "test_label", "=", "test_label", "[", "test_index", "]", "\n", "\n", "return", "[", "train_scs_adj", ",", "val_scs_adj", ",", "test_scs_adj", "]", ",", "[", "train_fcf_adj", ",", "val_fcf_adj", ",", "test_fcf_adj", "]", ",", "[", "train_fsf_adj", ",", "val_fsf_adj", ",", "test_fsf_adj", "]", ",", "[", "train_feature", ",", "val_feature", ",", "test_feature", "]", ",", "[", "train_mask", ",", "val_mask", ",", "test_mask", "]", ",", "[", "train_label", ",", "val_label", ",", "test_label", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.preprocess": [[411, 421], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "dataloader.DataLoader.adj_to_bias", "dataloader.DataLoader.adj_to_bias", "dataloader.DataLoader.adj_to_bias", "dataloader.DataLoader.preprocess_features"], "methods", ["home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.adj_to_bias", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.adj_to_bias", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.adj_to_bias", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.preprocess_features"], ["", "def", "preprocess", "(", "self", ",", "scs_adj", ",", "fcf_adj", ",", "fsf_adj", ",", "feature", ")", ":", "\n", "        ", "scs_biases", "=", "[", "np", ".", "array", "(", "[", "self", ".", "adj_to_bias", "(", "pair", ",", "[", "pair", ".", "shape", "[", "1", "]", "]", "*", "pair", ".", "shape", "[", "0", "]", ",", "nhood", "=", "1", ")", "\n", "for", "pair", "in", "split_data", "]", ")", "for", "split_data", "in", "scs_adj", "]", "\n", "fcf_biases", "=", "[", "np", ".", "array", "(", "[", "self", ".", "adj_to_bias", "(", "pair", ",", "[", "pair", ".", "shape", "[", "1", "]", "]", "*", "pair", ".", "shape", "[", "0", "]", ",", "nhood", "=", "1", ")", "\n", "for", "pair", "in", "split_data", "]", ")", "for", "split_data", "in", "fcf_adj", "]", "\n", "fsf_biases", "=", "[", "np", ".", "array", "(", "[", "self", ".", "adj_to_bias", "(", "pair", ",", "[", "pair", ".", "shape", "[", "1", "]", "]", "*", "pair", ".", "shape", "[", "0", "]", ",", "nhood", "=", "1", ")", "\n", "for", "pair", "in", "split_data", "]", ")", "for", "split_data", "in", "fsf_adj", "]", "\n", "feature", "=", "[", "np", ".", "array", "(", "[", "[", "self", ".", "preprocess_features", "(", "feature_graph", ")", "for", "feature_graph", "in", "pair", "]", "\n", "for", "pair", "in", "split_data", "]", ")", "for", "split_data", "in", "feature", "]", "\n", "return", "scs_biases", ",", "fcf_biases", ",", "fsf_biases", ",", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.char2token": [[422, 430], ["vocabulary_dict.keys", "feature_value.append", "feature_value.append"], "methods", ["None"], ["", "def", "char2token", "(", "self", ",", "vocabulary_dict", ",", "field_value", ")", ":", "\n", "        ", "feature_value", "=", "[", "]", "\n", "for", "c", "in", "field_value", ":", "\n", "            ", "if", "c", "not", "in", "vocabulary_dict", ".", "keys", "(", ")", ":", "\n", "                ", "feature_value", ".", "append", "(", "vocabulary_dict", "[", "'<UNK>'", "]", ")", "\n", "", "else", ":", "\n", "                ", "feature_value", ".", "append", "(", "vocabulary_dict", "[", "c", "]", ")", "\n", "", "", "return", "feature_value", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.adj_to_bias": [[431, 449], ["numpy.empty", "range", "numpy.eye", "range", "range", "numpy.matmul", "range", "numpy.eye"], "methods", ["None"], ["", "def", "adj_to_bias", "(", "self", ",", "adj", ",", "sizes", ",", "nhood", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n         Prepare adjacency matrix by expanding up to a given neighbourhood.\n         This will insert loops on every node.\n         Finally, the matrix is converted to bias vectors.\n         Expected shape: [graph, nodes, nodes]\n        \"\"\"", "\n", "nb_graphs", "=", "adj", ".", "shape", "[", "0", "]", "\n", "mt", "=", "np", ".", "empty", "(", "adj", ".", "shape", ")", "\n", "for", "g", "in", "range", "(", "nb_graphs", ")", ":", "\n", "            ", "mt", "[", "g", "]", "=", "np", ".", "eye", "(", "adj", ".", "shape", "[", "1", "]", ")", "\n", "for", "_", "in", "range", "(", "nhood", ")", ":", "\n", "                ", "mt", "[", "g", "]", "=", "np", ".", "matmul", "(", "mt", "[", "g", "]", ",", "(", "adj", "[", "g", "]", "+", "np", ".", "eye", "(", "adj", ".", "shape", "[", "1", "]", ")", ")", ")", "\n", "", "for", "i", "in", "range", "(", "sizes", "[", "g", "]", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "sizes", "[", "g", "]", ")", ":", "\n", "                    ", "if", "mt", "[", "g", "]", "[", "i", "]", "[", "j", "]", ">", "0.0", ":", "\n", "                        ", "mt", "[", "g", "]", "[", "i", "]", "[", "j", "]", "=", "1.0", "\n", "", "", "", "", "return", "-", "1e9", "*", "(", "1.0", "-", "mt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.None.dataloader.DataLoader.preprocess_features": [[450, 458], ["numpy.array", "numpy.power().flatten", "numpy.diag", "numpy.diag.dot", "np.diag.dot.sum", "numpy.power", "numpy.isinf"], "methods", ["None"], ["", "def", "preprocess_features", "(", "self", ",", "features", ")", ":", "\n", "        ", "\"\"\"Row-normalize feature matrix and convert to tuple representation\"\"\"", "\n", "rowsum", "=", "np", ".", "array", "(", "features", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "np", ".", "diag", "(", "r_inv", ")", "\n", "features", "=", "r_mat_inv", ".", "dot", "(", "features", ")", "\n", "return", "features", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.siamhan.HAN.inference": [[7, 42], ["tensorflow.variable_scope", "zip", "tensorflow.concat", "models.layers.simple_attn", "tensorflow.reduce_min", "models.layers.simple_attn_2", "range", "tensorflow.concat", "range", "embed_list.append", "tensorflow.reduce_sum", "attns.append", "len", "range", "tensorflow.concat", "tensorflow.expand_dims", "models.layers.attn_head", "attns.append", "models.layers.attn_head"], "methods", ["home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.layers.simple_attn", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.layers.simple_attn_2", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.layers.attn_head", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.layers.attn_head"], ["    ", "def", "inference", "(", "self", ",", "model_id", ",", "inputs_list", ",", "bias_mat_list", ",", "attn_drop", ",", "ffd_drop", ",", "training", ",", "mask", ",", "\n", "attn_hid_units", ",", "n_heads", ",", "dense_hid_units", ",", "activation", "=", "tf", ".", "nn", ".", "elu", ",", "residual", "=", "False", ",", "mp_att_size", "=", "128", ")", ":", "\n", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'han'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "            ", "embed_list", "=", "[", "]", "\n", "for", "inputs", ",", "bias_mat", "in", "zip", "(", "inputs_list", ",", "bias_mat_list", ")", ":", "\n", "                ", "attns", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_heads", "[", "0", "]", ")", ":", "\n", "                    ", "attns", ".", "append", "(", "layers", ".", "attn_head", "(", "inputs", ",", "bias_mat", "=", "bias_mat", ",", "\n", "out_sz", "=", "attn_hid_units", "[", "0", "]", ",", "activation", "=", "activation", ",", "\n", "in_drop", "=", "ffd_drop", ",", "coef_drop", "=", "attn_drop", ",", "residual", "=", "False", ")", ")", "\n", "", "h_1", "=", "tf", ".", "concat", "(", "attns", ",", "axis", "=", "-", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "attn_hid_units", ")", ")", ":", "\n", "                    ", "h_old", "=", "h_1", "\n", "attns", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_heads", "[", "i", "]", ")", ":", "\n", "                        ", "attns", ".", "append", "(", "layers", ".", "attn_head", "(", "h_1", ",", "bias_mat", "=", "bias_mat", ",", "\n", "out_sz", "=", "attn_hid_units", "[", "i", "]", ",", "\n", "activation", "=", "activation", ",", "\n", "in_drop", "=", "ffd_drop", ",", "\n", "coef_drop", "=", "attn_drop", ",", "residual", "=", "residual", ")", ")", "\n", "", "h_1", "=", "tf", ".", "concat", "(", "attns", ",", "axis", "=", "-", "1", ")", "\n", "", "embed_list", ".", "append", "(", "tf", ".", "expand_dims", "(", "h_1", ",", "axis", "=", "2", ")", ")", "\n", "\n", "", "multi_embed", "=", "tf", ".", "concat", "(", "embed_list", ",", "axis", "=", "2", ")", "\n", "nodes_embed", ",", "att_val", "=", "layers", ".", "simple_attn", "(", "multi_embed", ",", "mp_att_size", ",", "\n", "time_major", "=", "False", ",", "\n", "return_alphas", "=", "True", ")", "\n", "\n", "embed_len", "=", "tf", ".", "reduce_min", "(", "tf", ".", "reduce_sum", "(", "mask", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "graph_embed", ",", "graph_attn", "=", "layers", ".", "simple_attn_2", "(", "nodes_embed", "[", ":", ",", ":", "embed_len", "]", ",", "mp_att_size", ",", "\n", "time_major", "=", "False", ",", "\n", "return_alphas", "=", "True", ")", "\n", "", "return", "graph_embed", ",", "att_val", ",", "graph_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.siamhan.SiamHAN.inference": [[45, 71], ["siamhan.HAN", "siamhan.HAN.inference", "siamhan.HAN.inference", "tensorflow.name_scope", "tensorflow.sqrt", "tensorflow.concat", "tensorflow.concat", "tensorflow.reduce_sum", "tensorflow.square"], "methods", ["home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.siamhan.SiamHAN.inference", "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.siamhan.SiamHAN.inference"], ["    ", "def", "inference", "(", "self", ",", "inputs_list", ",", "bias_mat_list", ",", "attn_drop", ",", "ffd_drop", ",", "training", ",", "mask", ",", "\n", "attn_hid_units", ",", "n_heads", ",", "dense_hid_units", ",", "activation", "=", "tf", ".", "nn", ".", "elu", ",", "nb_classes", "=", "2", ",", "residual", "=", "False", ")", ":", "\n", "        ", "base_network", "=", "HAN", "(", ")", "\n", "graph_embed_1", ",", "att_val_1", ",", "graph_attn_1", "=", "base_network", ".", "inference", "(", "model_id", "=", "0", ",", "\n", "inputs_list", "=", "inputs_list", "[", "0", "]", ",", "attn_drop", "=", "attn_drop", ",", "\n", "ffd_drop", "=", "ffd_drop", ",", "bias_mat_list", "=", "bias_mat_list", "[", "0", "]", ",", "\n", "attn_hid_units", "=", "attn_hid_units", ",", "n_heads", "=", "n_heads", ",", "\n", "dense_hid_units", "=", "dense_hid_units", ",", "training", "=", "training", ",", "\n", "residual", "=", "residual", ",", "activation", "=", "activation", ",", "mask", "=", "mask", ")", "\n", "\n", "graph_embed_2", ",", "att_val_2", ",", "graph_attn_2", "=", "base_network", ".", "inference", "(", "model_id", "=", "1", ",", "\n", "inputs_list", "=", "inputs_list", "[", "1", "]", ",", "attn_drop", "=", "attn_drop", ",", "\n", "ffd_drop", "=", "ffd_drop", ",", "bias_mat_list", "=", "bias_mat_list", "[", "1", "]", ",", "\n", "attn_hid_units", "=", "attn_hid_units", ",", "n_heads", "=", "n_heads", ",", "\n", "dense_hid_units", "=", "dense_hid_units", ",", "training", "=", "training", ",", "\n", "residual", "=", "residual", ",", "activation", "=", "activation", ",", "mask", "=", "mask", ")", "\n", "semantic_attn", "=", "[", "att_val_1", ",", "att_val_2", "]", "\n", "graph_attn", "=", "[", "graph_attn_1", ",", "graph_attn_2", "]", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"output\"", ")", ":", "\n", "\n", "            ", "logits", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "graph_embed_1", "-", "graph_embed_2", ")", ",", "1", ")", "+", "1e-6", ",", "name", "=", "'distance'", ")", "\n", "attval", "=", "tf", ".", "concat", "(", "semantic_attn", ",", "axis", "=", "0", ",", "name", "=", "'semantic_attention'", ")", "\n", "graph_attn", "=", "tf", ".", "concat", "(", "graph_attn", ",", "axis", "=", "0", ",", "name", "=", "'graph_attention'", ")", "\n", "\n", "", "return", "logits", ",", "att_val_1", ",", "att_val_2", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.layers.attn_head": [[7, 47], ["tensorflow.name_scope", "tensorflow.layers.conv1d", "tensorflow.layers.conv1d", "tensorflow.layers.conv1d", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.contrib.layers.bias_add", "tensorflow.nn.dropout", "tensorflow.transpose", "tensorflow.nn.dropout", "tensorflow.nn.dropout", "activation", "tensorflow.nn.leaky_relu", "activation", "conv1d"], "function", ["None"], ["def", "attn_head", "(", "seq", ",", "out_sz", ",", "bias_mat", ",", "activation", ",", "in_drop", "=", "0.0", ",", "coef_drop", "=", "0.0", ",", "residual", "=", "False", ",", "\n", "return_coef", "=", "False", ")", ":", "\n", "    ", "\"\"\"[summary]\n\n    [description]\n\n    Arguments:\n        seq {[type]} -- shape=(batch_size, nb_nodes, fea_size))\n\n    \"\"\"", "\n", "with", "tf", ".", "name_scope", "(", "'my_attn'", ")", ":", "\n", "        ", "if", "in_drop", "!=", "0.0", ":", "\n", "            ", "seq", "=", "tf", ".", "nn", ".", "dropout", "(", "seq", ",", "1.0", "-", "in_drop", ")", "\n", "", "seq_fts", "=", "tf", ".", "layers", ".", "conv1d", "(", "seq", ",", "out_sz", ",", "1", ",", "use_bias", "=", "False", ")", "\n", "\n", "f_1", "=", "tf", ".", "layers", ".", "conv1d", "(", "seq_fts", ",", "1", ",", "1", ")", "\n", "f_2", "=", "tf", ".", "layers", ".", "conv1d", "(", "seq_fts", ",", "1", ",", "1", ")", "\n", "\n", "logits", "=", "f_1", "+", "tf", ".", "transpose", "(", "f_2", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "coefs", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "nn", ".", "leaky_relu", "(", "logits", ")", "+", "bias_mat", ",", "name", "=", "'node_attention'", ")", "\n", "\n", "if", "coef_drop", "!=", "0.0", ":", "\n", "            ", "coefs", "=", "tf", ".", "nn", ".", "dropout", "(", "coefs", ",", "1.0", "-", "coef_drop", ")", "\n", "", "if", "in_drop", "!=", "0.0", ":", "\n", "            ", "seq_fts", "=", "tf", ".", "nn", ".", "dropout", "(", "seq_fts", ",", "1.0", "-", "in_drop", ")", "\n", "\n", "", "vals", "=", "tf", ".", "matmul", "(", "coefs", ",", "seq_fts", ")", "\n", "ret", "=", "tf", ".", "contrib", ".", "layers", ".", "bias_add", "(", "vals", ")", "\n", "\n", "# residual connection", "\n", "if", "residual", ":", "\n", "            ", "if", "seq", ".", "shape", "[", "-", "1", "]", "!=", "ret", ".", "shape", "[", "-", "1", "]", ":", "\n", "                ", "ret", "=", "ret", "+", "conv1d", "(", "seq", ",", "ret", ".", "shape", "[", "-", "1", "]", ",", "1", ")", "# activation", "\n", "", "else", ":", "\n", "                ", "seq_fts", "=", "ret", "+", "seq", "\n", "\n", "", "", "if", "return_coef", ":", "\n", "            ", "return", "activation", "(", "ret", ")", ",", "coefs", "\n", "", "else", ":", "\n", "            ", "return", "activation", "(", "ret", ")", "# activation", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.layers.simple_attn": [[48, 74], ["isinstance", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.tensordot", "tensorflow.nn.softmax", "tensorflow.reduce_sum", "tensorflow.concat", "tensorflow.array_ops.transpose", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.name_scope", "tensorflow.tanh", "tensorflow.expand_dims", "tensorflow.tensordot"], "function", ["None"], ["", "", "", "def", "simple_attn", "(", "inputs", ",", "attention_size", ",", "time_major", "=", "False", ",", "return_alphas", "=", "False", ")", ":", "\n", "    ", "if", "isinstance", "(", "inputs", ",", "tuple", ")", ":", "\n", "        ", "inputs", "=", "tf", ".", "concat", "(", "inputs", ",", "2", ")", "\n", "\n", "", "if", "time_major", ":", "\n", "        ", "inputs", "=", "tf", ".", "array_ops", ".", "transpose", "(", "inputs", ",", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "\n", "", "hidden_size", "=", "inputs", ".", "shape", "[", "-", "1", "]", ".", "value", "\n", "\n", "# Trainable parameters", "\n", "w_omega", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "hidden_size", ",", "attention_size", "]", ",", "stddev", "=", "0.1", ")", ")", "\n", "b_omega", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "attention_size", "]", ",", "stddev", "=", "0.1", ")", ")", "\n", "u_omega", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "attention_size", "]", ",", "stddev", "=", "0.1", ")", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "'v'", ")", ":", "\n", "        ", "v", "=", "tf", ".", "tanh", "(", "tf", ".", "tensordot", "(", "inputs", ",", "w_omega", ",", "axes", "=", "1", ")", "+", "b_omega", ")", "\n", "\n", "", "vu", "=", "tf", ".", "tensordot", "(", "v", ",", "u_omega", ",", "axes", "=", "1", ",", "name", "=", "'vu'", ")", "\n", "alphas", "=", "tf", ".", "nn", ".", "softmax", "(", "vu", ",", "name", "=", "'alphas'", ")", "\n", "\n", "output", "=", "tf", ".", "reduce_sum", "(", "inputs", "*", "tf", ".", "expand_dims", "(", "alphas", ",", "-", "1", ")", ",", "-", "2", ")", "\n", "\n", "if", "not", "return_alphas", ":", "\n", "        ", "return", "output", "\n", "", "else", ":", "\n", "        ", "return", "output", ",", "alphas", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.layers.simple_attn_2": [[76, 102], ["isinstance", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.tensordot", "tensorflow.nn.softmax", "tensorflow.reduce_sum", "tensorflow.concat", "tensorflow.array_ops.transpose", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.name_scope", "tensorflow.tanh", "tensorflow.expand_dims", "tensorflow.tensordot"], "function", ["None"], ["", "", "def", "simple_attn_2", "(", "inputs", ",", "attention_size", ",", "time_major", "=", "False", ",", "return_alphas", "=", "False", ")", ":", "\n", "    ", "if", "isinstance", "(", "inputs", ",", "tuple", ")", ":", "\n", "        ", "inputs", "=", "tf", ".", "concat", "(", "inputs", ",", "2", ")", "\n", "\n", "", "if", "time_major", ":", "\n", "        ", "inputs", "=", "tf", ".", "array_ops", ".", "transpose", "(", "inputs", ",", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "\n", "", "hidden_size", "=", "inputs", ".", "shape", "[", "-", "1", "]", ".", "value", "\n", "\n", "# Trainable parameters", "\n", "w_omega", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "hidden_size", ",", "attention_size", "]", ",", "stddev", "=", "0.1", ")", ")", "\n", "b_omega", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "attention_size", "]", ",", "stddev", "=", "0.1", ")", ")", "\n", "u_omega", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "attention_size", "]", ",", "stddev", "=", "0.1", ")", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "'v'", ")", ":", "\n", "        ", "v", "=", "tf", ".", "tanh", "(", "tf", ".", "tensordot", "(", "inputs", ",", "w_omega", ",", "axes", "=", "1", ")", "+", "b_omega", ")", "\n", "\n", "", "vu", "=", "tf", ".", "tensordot", "(", "v", ",", "u_omega", ",", "axes", "=", "1", ",", "name", "=", "'vu'", ")", "\n", "alphas", "=", "tf", ".", "nn", ".", "softmax", "(", "vu", ",", "name", "=", "'alphas'", ")", "\n", "\n", "output", "=", "tf", ".", "reduce_sum", "(", "inputs", "*", "tf", ".", "expand_dims", "(", "alphas", ",", "-", "1", ")", ",", "-", "2", ")", "\n", "\n", "if", "not", "return_alphas", ":", "\n", "        ", "return", "output", "\n", "", "else", ":", "\n", "        ", "return", "output", ",", "alphas", "", "", "", ""]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.loss": [[5, 11], ["tensorflow.reduce_sum", "tensorflow.multiply", "tensorflow.reduce_mean", "tensorflow.multiply", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.one_hot"], "methods", ["None"], ["    ", "def", "loss", "(", "self", ",", "logits", ",", "labels", ",", "nb_classes", ",", "class_weights", ")", ":", "\n", "        ", "sample_wts", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "\n", "tf", ".", "one_hot", "(", "labels", ",", "nb_classes", ")", ",", "class_weights", ")", ",", "axis", "=", "-", "1", ")", "\n", "xentropy", "=", "tf", ".", "multiply", "(", "tf", ".", "nn", ".", "sparse_softmax_cross_entropy_with_logits", "(", "\n", "labels", "=", "labels", ",", "logits", "=", "logits", ")", ",", "sample_wts", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "xentropy", ",", "name", "=", "'xentropy_mean'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.training": [[12, 25], ["tensorflow.trainable_variables", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.add_n", "tensorflow.nn.l2_loss"], "methods", ["None"], ["", "def", "training", "(", "self", ",", "loss", ",", "lr", ",", "l2_coef", ")", ":", "\n", "# weight decay", "\n", "        ", "vars", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "lossL2", "=", "tf", ".", "add_n", "(", "[", "tf", ".", "nn", ".", "l2_loss", "(", "v", ")", "for", "v", "in", "vars", "if", "v", ".", "name", "not", "\n", "in", "[", "'bias'", ",", "'gamma'", ",", "'b'", ",", "'g'", ",", "'beta'", "]", "]", ")", "*", "l2_coef", "\n", "\n", "# optimizer", "\n", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "lr", ")", "\n", "\n", "# training op", "\n", "train_op", "=", "opt", ".", "minimize", "(", "loss", "+", "lossL2", ")", "\n", "\n", "return", "train_op", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.preshape": [[26, 32], ["tensorflow.reshape", "tensorflow.reshape"], "methods", ["None"], ["", "def", "preshape", "(", "self", ",", "logits", ",", "labels", ",", "nb_classes", ")", ":", "\n", "        ", "new_sh_lab", "=", "[", "-", "1", "]", "\n", "new_sh_log", "=", "[", "-", "1", ",", "nb_classes", "]", "\n", "log_resh", "=", "tf", ".", "reshape", "(", "logits", ",", "new_sh_log", ")", "\n", "lab_resh", "=", "tf", ".", "reshape", "(", "labels", ",", "new_sh_lab", ")", "\n", "return", "log_resh", ",", "lab_resh", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.confmat": [[33, 36], ["tensorflow.argmax", "tensorflow.confusion_matrix"], "methods", ["None"], ["", "def", "confmat", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "preds", "=", "tf", ".", "argmax", "(", "logits", ",", "axis", "=", "1", ")", "\n", "return", "tf", ".", "confusion_matrix", "(", "labels", ",", "preds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.masked_softmax_cross_entropy": [[41, 49], ["tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "methods", ["None"], ["", "def", "masked_softmax_cross_entropy", "(", "self", ",", "logits", ",", "labels", ",", "mask", ")", ":", "\n", "        ", "\"\"\"Softmax cross-entropy loss with masking.\"\"\"", "\n", "loss", "=", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "\n", "logits", "=", "logits", ",", "labels", "=", "labels", ")", "\n", "mask", "=", "tf", ".", "cast", "(", "mask", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "mask", "/=", "tf", ".", "reduce_mean", "(", "mask", ")", "\n", "loss", "*=", "mask", "\n", "return", "tf", ".", "reduce_mean", "(", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.masked_sigmoid_cross_entropy": [[50, 60], ["tensorflow.cast", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "methods", ["None"], ["", "def", "masked_sigmoid_cross_entropy", "(", "self", ",", "logits", ",", "labels", ",", "mask", ")", ":", "\n", "        ", "\"\"\"Sigmoid cross-entropy loss with masking.\"\"\"", "\n", "labels", "=", "tf", ".", "cast", "(", "labels", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "loss", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "\n", "logits", "=", "logits", ",", "labels", "=", "labels", ")", "\n", "loss", "=", "tf", ".", "reduce_mean", "(", "loss", ",", "axis", "=", "1", ")", "\n", "mask", "=", "tf", ".", "cast", "(", "mask", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "mask", "/=", "tf", ".", "reduce_mean", "(", "mask", ")", "\n", "loss", "*=", "mask", "\n", "return", "tf", ".", "reduce_mean", "(", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.masked_accuracy": [[61, 70], ["tensorflow.equal", "tensorflow.cast", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax"], "methods", ["None"], ["", "def", "masked_accuracy", "(", "self", ",", "logits", ",", "labels", ",", "mask", ")", ":", "\n", "        ", "\"\"\"Accuracy with masking.\"\"\"", "\n", "correct_prediction", "=", "tf", ".", "equal", "(", "\n", "tf", ".", "argmax", "(", "logits", ",", "1", ")", ",", "tf", ".", "argmax", "(", "labels", ",", "1", ")", ")", "\n", "accuracy_all", "=", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", "\n", "mask", "=", "tf", ".", "cast", "(", "mask", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "mask", "/=", "tf", ".", "reduce_mean", "(", "mask", ")", "\n", "accuracy_all", "*=", "mask", "\n", "return", "tf", ".", "reduce_mean", "(", "accuracy_all", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.micro_f1": [[71, 95], ["tensorflow.round", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.expand_dims", "tensorflow.count_nonzero", "tensorflow.count_nonzero", "tensorflow.count_nonzero", "tensorflow.count_nonzero", "tensorflow.cast", "tensorflow.nn.sigmoid"], "methods", ["None"], ["", "def", "micro_f1", "(", "self", ",", "logits", ",", "labels", ",", "mask", ")", ":", "\n", "        ", "\"\"\"Accuracy with masking.\"\"\"", "\n", "predicted", "=", "tf", ".", "round", "(", "tf", ".", "nn", ".", "sigmoid", "(", "logits", ")", ")", "\n", "\n", "# Use integers to avoid any nasty FP behaviour", "\n", "predicted", "=", "tf", ".", "cast", "(", "predicted", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "labels", "=", "tf", ".", "cast", "(", "labels", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "mask", "=", "tf", ".", "cast", "(", "mask", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "\n", "# expand the mask so that broadcasting works ([nb_nodes, 1])", "\n", "mask", "=", "tf", ".", "expand_dims", "(", "mask", ",", "-", "1", ")", "\n", "\n", "# Count true positives, true negatives, false positives and false negatives.", "\n", "tp", "=", "tf", ".", "count_nonzero", "(", "predicted", "*", "labels", "*", "mask", ")", "\n", "tn", "=", "tf", ".", "count_nonzero", "(", "(", "predicted", "-", "1", ")", "*", "(", "labels", "-", "1", ")", "*", "mask", ")", "\n", "fp", "=", "tf", ".", "count_nonzero", "(", "predicted", "*", "(", "labels", "-", "1", ")", "*", "mask", ")", "\n", "fn", "=", "tf", ".", "count_nonzero", "(", "(", "predicted", "-", "1", ")", "*", "labels", "*", "mask", ")", "\n", "\n", "# Calculate accuracy, precision, recall and F1 score.", "\n", "precision", "=", "tp", "/", "(", "tp", "+", "fp", ")", "\n", "recall", "=", "tp", "/", "(", "tp", "+", "fn", ")", "\n", "fmeasure", "=", "(", "2", "*", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "fmeasure", "=", "tf", ".", "cast", "(", "fmeasure", ",", "tf", ".", "float32", ")", "\n", "return", "fmeasure", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.softmax_cross_entropy": [[96, 101], ["tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.reduce_mean"], "methods", ["None"], ["", "def", "softmax_cross_entropy", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "\"\"\"Softmax cross-entropy loss with masking.\"\"\"", "\n", "loss", "=", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "\n", "logits", "=", "logits", ",", "labels", "=", "labels", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.accuracy": [[102, 108], ["tensorflow.equal", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax"], "methods", ["None"], ["", "def", "accuracy", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "\"\"\"Accuracy with masking.\"\"\"", "\n", "correct_prediction", "=", "tf", ".", "equal", "(", "\n", "tf", ".", "argmax", "(", "logits", ",", "1", ")", ",", "tf", ".", "argmax", "(", "labels", ",", "1", ")", ")", "\n", "accuracy_all", "=", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "accuracy_all", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.contrastive_loss": [[109, 114], ["tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.square", "tensorflow.square", "tensorflow.maximum"], "methods", ["None"], ["", "def", "contrastive_loss", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "'loss'", ")", ":", "\n", "            ", "margin", "=", "20", "# 10", "\n", "loss", "=", "labels", "*", "tf", ".", "square", "(", "logits", ")", "+", "(", "1", "-", "labels", ")", "*", "tf", ".", "square", "(", "tf", ".", "maximum", "(", "margin", "-", "logits", ",", "0", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "loss", ",", "name", "=", "'loss'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuitianyu961030_siamhan.models.base_gattn.BaseGAttN.predictions_accuracy": [[115, 120], ["tensorflow.name_scope", "tensorflow.cast", "tensorflow.cast", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.cast"], "methods", ["None"], ["", "", "def", "predictions_accuracy", "(", "self", ",", "logits", ",", "labels", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "'prediction'", ")", ":", "\n", "            ", "predictions", "=", "tf", ".", "cast", "(", "logits", "<", "10", ",", "labels", ".", "dtype", ",", "name", "=", "'predictions'", ")", "# 5", "\n", "accuracy_all", "=", "tf", ".", "cast", "(", "tf", ".", "equal", "(", "labels", ",", "tf", ".", "cast", "(", "logits", "<", "10", ",", "labels", ".", "dtype", ")", ")", ",", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "accuracy_all", ",", "name", "=", "'accuracy'", ")", ",", "predictions", "\n", "", "", "", ""]]}