{"home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_train_models.main": [[31, 205], ["hydra.main", "os.getcwd", "print", "os.path.exists", "pytorch_lightning.seed_everything", "print", "os.path.exists", "pytorch_lightning.Trainer", "pl.Trainer.fit", "pl.Trainer.logger.save", "pathlib.Path().touch", "os.path.join", "print", "sys.exit", "steer_cnp.datasets.MultiMNIST", "steer_cnp.datasets.MultiMNIST", "steer_cnp.lightning.LightningMNISTDataModule", "steer_cnp.lightning.LightningMNISTDataModule.setup", "print", "model_class.load_from_checkpoint", "model_class", "steer_cnp.lightning.CSVLogger", "pytorch_lightning.loggers.TensorBoardLogger", "pytorch_lightning.callbacks.ModelCheckpoint", "steer_cnp.lightning.ImageCompleationPlotCallback", "steer_cnp.lightning.PercentageCompleationPlotCallback", "os.path.join", "os.path.join", "print", "pl.Trainer.fit", "pl.Trainer.test", "pl.Trainer.test", "steer_cnp.datasets.MultiMNIST", "steer_cnp.datasets.MultiMNIST", "steer_cnp.datasets.MultiMNIST", "steer_cnp.lightning.LightningMNISTDataModule", "steer_cnp.lightning.LightningMNISTDataModule.setup", "ValueError", "int", "steer_cnp.lightning.LightningMNISTDataModule.train_dataloader", "steer_cnp.lightning.LightningMNISTDataModule.val_dataloader", "pathlib.Path", "os.path.join", "os.path.join", "torch.cuda.is_available", "torch.cuda.is_available", "torch.utils.data.DataLoader", "steer_cnp.lightning.LightningMNISTDataModule.val_dataloader", "steer_cnp.lightning.LightningMNISTDataModule.test_dataloader", "steer_cnp.lightning.LightningMNISTDataModule.test_dataloader", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "int"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.gp_train_models.main", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.setup", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.setup", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.train_dataloader", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.val_dataloader", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.val_dataloader", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.test_dataloader", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.test_dataloader"], ["@", "hydra", ".", "main", "(", "config_path", "=", "\"config/image\"", ",", "config_name", "=", "\"config\"", ")", "\n", "def", "main", "(", "args", ")", ":", "\n", "\n", "# get current dir as set by hydra", "\n", "    ", "run_path", "=", "os", ".", "getcwd", "(", ")", "\n", "\n", "print", "(", "args", ")", "\n", "\n", "# Check if config run and succeeded", "\n", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"success\"", ")", ")", ":", "\n", "        ", "print", "(", "\"Experiment previously successful.\"", ")", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "# Build dataset", "\n", "", "if", "args", ".", "dataset", ".", "name", "==", "\"MNIST\"", ":", "\n", "        ", "train_img_size", "=", "28", "\n", "test_img_size", "=", "28", "\n", "trainset", "=", "MultiMNIST", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "datadir", ",", "\"mnist\"", ")", ",", "\n", "min_context_fraction", "=", "args", ".", "min_context_fraction", ",", "\n", "max_context_fraction", "=", "args", ".", "max_context_fraction", ",", "\n", "n_points_fraction", "=", "args", ".", "n_points_fraction", ",", "\n", "**", "args", ".", "dataset", ".", "train_args", ",", "\n", "seed", "=", "args", ".", "dataset", ".", "seed", ",", "\n", ")", "\n", "testset", "=", "MultiMNIST", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "datadir", ",", "\"mnist\"", ")", ",", "\n", "min_context_fraction", "=", "args", ".", "min_context_fraction", ",", "\n", "max_context_fraction", "=", "args", ".", "max_context_fraction", ",", "\n", "n_points_fraction", "=", "args", ".", "n_points_fraction", ",", "\n", "**", "args", ".", "dataset", ".", "test_args", ",", "\n", "seed", "=", "args", ".", "dataset", ".", "seed", ",", "\n", ")", "\n", "datamodule", "=", "LightningMNISTDataModule", "(", "\n", "trainset", "=", "trainset", ",", "\n", "testset", "=", "testset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "test_valid_splits", "=", "args", ".", "test_valid_splits", ",", "\n", ")", "\n", "datamodule", ".", "setup", "(", ")", "\n", "args", ".", "finetune_epochs", "=", "0", "\n", "", "elif", "args", ".", "dataset", ".", "name", "==", "\"MultiMNIST\"", ":", "\n", "        ", "trainset", "=", "MultiMNIST", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "datadir", ",", "\"mnist\"", ")", ",", "\n", "min_context_fraction", "=", "args", ".", "min_context_fraction", ",", "\n", "max_context_fraction", "=", "args", ".", "max_context_fraction", ",", "\n", "n_points_fraction", "=", "args", ".", "n_points_fraction", ",", "\n", "**", "args", ".", "dataset", ".", "train_args", ",", "\n", "seed", "=", "args", ".", "dataset", ".", "seed", ",", "\n", ")", "\n", "finetuneset", "=", "MultiMNIST", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "datadir", ",", "\"mnist\"", ")", ",", "\n", "min_context_fraction", "=", "args", ".", "min_context_fraction", ",", "\n", "max_context_fraction", "=", "args", ".", "max_context_fraction", ",", "\n", "n_points_fraction", "=", "args", ".", "n_points_fraction", ",", "\n", "**", "args", ".", "dataset", ".", "finetune_args", ",", "\n", "seed", "=", "args", ".", "dataset", ".", "seed", ",", "\n", ")", "\n", "testset", "=", "MultiMNIST", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "datadir", ",", "\"mnist\"", ")", ",", "\n", "min_context_fraction", "=", "args", ".", "min_context_fraction", ",", "\n", "max_context_fraction", "=", "args", ".", "max_context_fraction", ",", "\n", "n_points_fraction", "=", "args", ".", "n_points_fraction", ",", "\n", "**", "args", ".", "dataset", ".", "test_args", ",", "\n", "seed", "=", "args", ".", "dataset", ".", "seed", ",", "\n", ")", "\n", "train_img_size", "=", "trainset", ".", "grid_size", "\n", "finetune_img_size", "=", "finetuneset", ".", "grid_size", "\n", "test_img_size", "=", "testset", ".", "grid_size", "\n", "datamodule", "=", "LightningMNISTDataModule", "(", "\n", "trainset", "=", "trainset", ",", "\n", "testset", "=", "testset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "test_batch_size", "=", "int", "(", "\n", "args", ".", "batch_size", "*", "(", "train_img_size", "/", "test_img_size", ")", "**", "2", "\n", ")", ",", "\n", "test_valid_splits", "=", "args", ".", "test_valid_splits", ",", "\n", ")", "\n", "datamodule", ".", "setup", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"{args.dataset.name} is not a recognised dataset name\"", ")", "\n", "\n", "", "pl", ".", "seed_everything", "(", "args", ".", "seed", ")", "\n", "\n", "if", "\"GP\"", "in", "args", ".", "model", ".", "name", ":", "\n", "        ", "model_class", "=", "LightningGP", "\n", "", "elif", "args", ".", "model", ".", "name", "==", "\"CNP\"", ":", "\n", "        ", "model_class", "=", "LightningImageCNP", "\n", "", "else", ":", "\n", "        ", "model_class", "=", "LightningImageSteerCNP", "\n", "\n", "", "print", "(", "args", ".", "pretrained_checkpoint", ")", "\n", "if", "args", ".", "pretrained_checkpoint", "is", "not", "None", ":", "\n", "        ", "print", "(", "f\"Loading pretrained model from {args.pretrained_checkpoint}\"", ")", "\n", "model", "=", "model_class", ".", "load_from_checkpoint", "(", "\n", "args", ".", "pretrained_checkpoint", ",", "\n", "strict", "=", "False", ",", "\n", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "model_class", "(", "\n", "**", "args", ".", "model", ",", "\n", ")", "\n", "\n", "", "loggers", "=", "[", "\n", "# Log results to a csv file", "\n", "CSVLogger", "(", "save_dir", "=", "\"\"", ",", "name", "=", "\"logs\"", ",", "version", "=", "\"\"", ")", ",", "\n", "# Log data to tensorboard", "\n", "TensorBoardLogger", "(", "save_dir", "=", "\"\"", ",", "name", "=", "\"logs\"", ",", "version", "=", "\"\"", ")", ",", "\n", "]", "\n", "\n", "callbacks", "=", "[", "\n", "# Callback to save recent + best validation checkpoint", "\n", "ModelCheckpoint", "(", "\n", "dirpath", "=", "\"checkpoints\"", ",", "\n", "monitor", "=", "\"val_ll\"", ",", "\n", "mode", "=", "\"max\"", ",", "\n", "save_last", "=", "True", ",", "\n", ")", ",", "\n", "# Callback to plot image compleations", "\n", "ImageCompleationPlotCallback", "(", "dirpath", "=", "\"plots\"", ",", "n_plots", "=", "3", ",", "train", "=", "True", ")", ",", "\n", "PercentageCompleationPlotCallback", "(", "dirpath", "=", "\"plots\"", ",", "n_plots", "=", "3", ",", "train", "=", "True", ")", ",", "\n", "]", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"checkpoints\"", ",", "\"last.ckpt\"", ")", ")", ":", "\n", "        ", "resume_dir", "=", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"checkpoints\"", ",", "\"last.ckpt\"", ")", "\n", "print", "(", "f\"Resuming from checkpoint {resume_dir}\"", ")", "\n", "", "elif", "args", ".", "pretrained_checkpoint", "is", "not", "None", ":", "\n", "        ", "resume_dir", "=", "args", ".", "pretrained_checkpoint", "\n", "", "else", ":", "\n", "        ", "resume_dir", "=", "None", "\n", "\n", "", "trainer", "=", "pl", ".", "Trainer", "(", "\n", "max_epochs", "=", "args", ".", "epochs", ",", "\n", "# default_root_dir=args.paths.logdir,", "\n", "logger", "=", "loggers", ",", "\n", "callbacks", "=", "callbacks", ",", "\n", "log_every_n_steps", "=", "args", ".", "log_every_n_steps", ",", "\n", "flush_logs_every_n_steps", "=", "args", ".", "flush_logs_every_n_steps", ",", "\n", "val_check_interval", "=", "args", ".", "val_check_interval", ",", "\n", "gpus", "=", "int", "(", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", ",", "\n", "log_gpu_memory", "=", "args", ".", "log_gpu_memory", ",", "\n", "limit_val_batches", "=", "(", "test_img_size", "/", "train_img_size", ")", "**", "2", "\n", "if", "not", "args", ".", "debug", "\n", "else", "3", ",", "\n", "limit_test_batches", "=", "1.0", "if", "not", "args", ".", "debug", "else", "3", ",", "\n", "limit_train_batches", "=", "args", ".", "limit_train_batches", "if", "not", "args", ".", "debug", "else", "3", ",", "\n", "resume_from_checkpoint", "=", "resume_dir", ",", "\n", ")", "\n", "trainer", ".", "fit", "(", "\n", "model", ",", "\n", "train_dataloader", "=", "datamodule", ".", "train_dataloader", "(", ")", ",", "\n", "val_dataloaders", "=", "datamodule", ".", "val_dataloader", "(", ")", ",", "\n", ")", "\n", "if", "args", ".", "finetune_epochs", ">", "0", ":", "\n", "        ", "trainer", ".", "current_epoch", "=", "args", ".", "epochs", "\n", "trainer", ".", "max_epochs", "=", "args", ".", "epochs", "+", "args", ".", "finetune_epochs", "\n", "trainer", ".", "fit", "(", "\n", "model", ",", "\n", "train_dataloader", "=", "DataLoader", "(", "\n", "finetuneset", ",", "\n", "batch_size", "=", "args", ".", "finetune_batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "collate_fn", "=", "finetuneset", ".", "_collate_fn", ",", "\n", ")", ",", "\n", "val_dataloaders", "=", "datamodule", ".", "val_dataloader", "(", ")", ",", "\n", ")", "\n", "trainer", ".", "test", "(", "model", ",", "test_dataloaders", "=", "datamodule", ".", "test_dataloader", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "trainer", ".", "test", "(", "model", ",", "test_dataloaders", "=", "datamodule", ".", "test_dataloader", "(", ")", ")", "\n", "\n", "# Final log flush to enure everything is logged...", "\n", "", "trainer", ".", "logger", ".", "save", "(", ")", "\n", "# Touch a file to mark run as compleate", "\n", "Path", "(", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"success\"", ")", ")", ".", "touch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_test_models.main": [[32, 273], ["hydra.main", "os.getcwd", "print", "os.path.exists", "pytorch_lightning.seed_everything", "steer_cnp.datasets.MultiMNIST", "len", "steer_cnp.datasets.MultiMNIST", "len", "steer_cnp.datasets.MultiMNIST", "len", "steer_cnp.datasets.MultiMNIST", "len", "pytorch_lightning.seed_everything", "pytorch_lightning.Trainer", "os.path.exists", "steer_cnp.lightning.ExperimentWriter", "pl.Trainer.test", "steer_cnp.lightning.ExperimentWriter.log_metrics", "pl.Trainer.test", "steer_cnp.lightning.ExperimentWriter.log_metrics", "pl.Trainer.test", "steer_cnp.lightning.ExperimentWriter.log_metrics", "pl.Trainer.test", "steer_cnp.lightning.ExperimentWriter.log_metrics", "steer_cnp.lightning.ExperimentWriter.save", "pathlib.Path().touch", "print", "sys.exit", "os.path.join", "print", "sys.exit", "os.path.exists", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "model_class", "model_class.load_from_checkpoint", "os.path.join", "os.remove", "os.path.join", "len", "callabacks[].save_checkpoint", "loggers[].save", "os.path.exists", "os.path.join", "os.path.join", "print", "ValueError", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pytorch_lightning.callbacks.ModelCheckpoint", "steer_cnp.lightning.ImageCompleationPlotCallback", "steer_cnp.lightning.PercentageCompleationPlotCallback", "steer_cnp.lightning.CSVLogger", "int", "os.path.join", "pathlib.Path", "os.path.join", "int", "int", "int", "int", "torch.cuda.is_available", "torch.cuda.is_available", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "os.path.join", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.gp_train_models.main", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.log_metrics", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.log_metrics", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.log_metrics", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.log_metrics", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save"], ["@", "hydra", ".", "main", "(", "config_path", "=", "\"config/image\"", ",", "config_name", "=", "\"config\"", ")", "\n", "def", "main", "(", "args", ")", ":", "\n", "\n", "# get current dir as set by hydra", "\n", "    ", "run_path", "=", "os", ".", "getcwd", "(", ")", "\n", "\n", "print", "(", "args", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"success\"", ")", ")", "and", "not", "(", "\n", "\"GP\"", "in", "args", ".", "model", ".", "name", "\n", ")", ":", "\n", "        ", "print", "(", "\"Experiment not fully run\"", ")", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"test_success\"", ")", ")", ":", "\n", "        ", "print", "(", "\"Tests previously successful.\"", ")", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "", "if", "\"GP\"", "in", "args", ".", "model", ".", "name", ":", "\n", "        ", "resume_dir", "=", "None", "\n", "", "elif", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"checkpoints\"", ",", "\"last.ckpt\"", ")", ")", ":", "\n", "        ", "resume_dir", "=", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"checkpoints\"", ",", "\"last.ckpt\"", ")", "\n", "print", "(", "f\"Resuming from checkpoint {resume_dir}\"", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Checkpoint file missing.\"", ")", "\n", "\n", "", "pl", ".", "seed_everything", "(", "args", ".", "seed", ")", "\n", "\n", "no_aug_base_testset", "=", "MultiMNIST", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "datadir", ",", "\"mnist\"", ")", ",", "\n", "min_context_fraction", "=", "args", ".", "min_context_fraction", ",", "\n", "max_context_fraction", "=", "args", ".", "max_context_fraction", ",", "\n", "n_points_fraction", "=", "args", ".", "n_points_fraction", ",", "\n", "train", "=", "False", ",", "\n", "rotate", "=", "False", ",", "\n", "translate", "=", "False", ",", "\n", "n_digits", "=", "1", ",", "\n", "canvas_multiplier", "=", "1", ",", "\n", "seed", "=", "args", ".", "dataset", ".", "seed", ",", "\n", ")", "\n", "n", "=", "len", "(", "no_aug_base_testset", ")", "\n", "no_aug_base_testset", "=", "random_split", "(", "\n", "no_aug_base_testset", ",", "\n", "[", "\n", "int", "(", "args", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "n", "-", "int", "(", "args", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "]", ",", "\n", ")", "[", "0", "]", "\n", "\n", "aug_base_testset", "=", "MultiMNIST", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "datadir", ",", "\"mnist\"", ")", ",", "\n", "min_context_fraction", "=", "args", ".", "min_context_fraction", ",", "\n", "max_context_fraction", "=", "args", ".", "max_context_fraction", ",", "\n", "n_points_fraction", "=", "args", ".", "n_points_fraction", ",", "\n", "train", "=", "False", ",", "\n", "rotate", "=", "True", ",", "\n", "translate", "=", "False", ",", "\n", "n_digits", "=", "1", ",", "\n", "canvas_multiplier", "=", "1", ",", "\n", "seed", "=", "args", ".", "dataset", ".", "seed", ",", "\n", ")", "\n", "n", "=", "len", "(", "aug_base_testset", ")", "\n", "aug_base_testset", "=", "random_split", "(", "\n", "aug_base_testset", ",", "\n", "[", "\n", "int", "(", "args", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "n", "-", "int", "(", "args", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "]", ",", "\n", ")", "[", "0", "]", "\n", "\n", "no_rotate_extrapolate_testset", "=", "MultiMNIST", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "datadir", ",", "\"mnist\"", ")", ",", "\n", "min_context_fraction", "=", "args", ".", "min_context_fraction", ",", "\n", "max_context_fraction", "=", "args", ".", "max_context_fraction", ",", "\n", "n_points_fraction", "=", "args", ".", "n_points_fraction", ",", "\n", "train", "=", "False", ",", "\n", "rotate", "=", "False", ",", "\n", "translate", "=", "True", ",", "\n", "n_digits", "=", "2", ",", "\n", "canvas_multiplier", "=", "2", ",", "\n", "seed", "=", "args", ".", "dataset", ".", "seed", ",", "\n", ")", "\n", "n", "=", "len", "(", "no_rotate_extrapolate_testset", ")", "\n", "no_rotate_extrapolate_testset", "=", "random_split", "(", "\n", "no_rotate_extrapolate_testset", ",", "\n", "[", "\n", "int", "(", "args", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "n", "-", "int", "(", "args", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "]", ",", "\n", ")", "[", "0", "]", "\n", "\n", "rotate_extrapolate_testset", "=", "MultiMNIST", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "datadir", ",", "\"mnist\"", ")", ",", "\n", "min_context_fraction", "=", "args", ".", "min_context_fraction", ",", "\n", "max_context_fraction", "=", "args", ".", "max_context_fraction", ",", "\n", "n_points_fraction", "=", "args", ".", "n_points_fraction", ",", "\n", "train", "=", "False", ",", "\n", "rotate", "=", "True", ",", "\n", "translate", "=", "True", ",", "\n", "n_digits", "=", "2", ",", "\n", "canvas_multiplier", "=", "2", ",", "\n", "seed", "=", "args", ".", "dataset", ".", "seed", ",", "\n", ")", "\n", "n", "=", "len", "(", "rotate_extrapolate_testset", ")", "\n", "rotate_extrapolate_testset", "=", "random_split", "(", "\n", "rotate_extrapolate_testset", ",", "\n", "[", "\n", "int", "(", "args", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "n", "-", "int", "(", "args", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "]", ",", "\n", ")", "[", "0", "]", "\n", "\n", "pl", ".", "seed_everything", "(", "args", ".", "seed", ")", "\n", "\n", "if", "\"GP\"", "in", "args", ".", "model", ".", "name", ":", "\n", "        ", "model_class", "=", "LightningGP", "\n", "", "elif", "args", ".", "model", ".", "name", "==", "\"CNP\"", ":", "\n", "        ", "model_class", "=", "LightningImageCNP", "\n", "", "else", ":", "\n", "        ", "model_class", "=", "LightningImageSteerCNP", "\n", "\n", "", "if", "resume_dir", "is", "None", ":", "\n", "        ", "model", "=", "model_class", "(", "**", "args", ".", "model", ")", "\n", "callabacks", "=", "[", "\n", "ModelCheckpoint", "(", "\n", "dirpath", "=", "\"checkpoints\"", ",", "\n", "save_last", "=", "True", ",", "\n", ")", ",", "\n", "ImageCompleationPlotCallback", "(", "dirpath", "=", "\"plots\"", ",", "n_plots", "=", "3", ",", "train", "=", "True", ")", ",", "\n", "PercentageCompleationPlotCallback", "(", "dirpath", "=", "\"plots\"", ",", "n_plots", "=", "3", ",", "train", "=", "True", ")", ",", "\n", "]", "\n", "loggers", "=", "[", "\n", "# Log results to a csv file", "\n", "CSVLogger", "(", "save_dir", "=", "\"\"", ",", "name", "=", "\"logs\"", ",", "version", "=", "\"\"", ")", ",", "\n", "]", "\n", "", "else", ":", "\n", "        ", "model", "=", "model_class", ".", "load_from_checkpoint", "(", "\n", "resume_dir", ",", "\n", "strict", "=", "False", ",", "\n", ")", "\n", "callabacks", "=", "[", "]", "\n", "loggers", "=", "[", "]", "\n", "\n", "# grid = model.steer_cnp.discrete_rkhs_embedder.grid_ranges", "\n", "# n_axes = steer_cnp.steer_cnp.discrete_rkhs_embedder.n_axes", "\n", "\n", "# Load up the trainer per the checkpoint, minus the loggers and callbacks", "\n", "", "trainer", "=", "pl", ".", "Trainer", "(", "\n", "# max_epochs=args.epochs,", "\n", "logger", "=", "loggers", ",", "\n", "callbacks", "=", "callabacks", ",", "\n", "log_every_n_steps", "=", "args", ".", "log_every_n_steps", ",", "\n", "flush_logs_every_n_steps", "=", "args", ".", "flush_logs_every_n_steps", ",", "\n", "val_check_interval", "=", "args", ".", "val_check_interval", ",", "\n", "gpus", "=", "int", "(", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", ",", "\n", "log_gpu_memory", "=", "args", ".", "log_gpu_memory", ",", "\n", "resume_from_checkpoint", "=", "resume_dir", ",", "\n", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"logs\"", ",", "\"test_metrics.csv\"", ")", ")", ":", "\n", "        ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"logs\"", ",", "\"test_metrics.csv\"", ")", ")", "\n", "\n", "", "results_writer", "=", "ExperimentWriter", "(", "\n", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"logs\"", ")", ",", "\n", "metrics_file", "=", "\"test_metrics.csv\"", ",", "\n", "hparams_file", "=", "\"test_hparams.yaml\"", ",", "\n", ")", "\n", "\n", "result", "=", "trainer", ".", "test", "(", "\n", "model", ",", "\n", "test_dataloaders", "=", "[", "\n", "DataLoader", "(", "\n", "no_aug_base_testset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "no_aug_base_testset", ".", "dataset", ".", "_collate_fn", ",", "\n", "**", "{", "\"num_workers\"", ":", "4", ",", "\"pin_memory\"", ":", "True", "}", ",", "\n", ")", ",", "\n", "]", ",", "\n", ")", "\n", "\n", "results_writer", ".", "log_metrics", "(", "{", "\"no_aug_base\"", ":", "result", "[", "0", "]", "[", "\"test_ll\"", "]", "}", ")", "\n", "\n", "result", "=", "trainer", ".", "test", "(", "\n", "model", ",", "\n", "test_dataloaders", "=", "[", "\n", "DataLoader", "(", "\n", "aug_base_testset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "aug_base_testset", ".", "dataset", ".", "_collate_fn", ",", "\n", "**", "{", "\"num_workers\"", ":", "4", ",", "\"pin_memory\"", ":", "True", "}", ",", "\n", ")", ",", "\n", "]", ",", "\n", ")", "\n", "\n", "results_writer", ".", "log_metrics", "(", "{", "\"aug_base\"", ":", "result", "[", "0", "]", "[", "\"test_ll\"", "]", "}", ")", "\n", "\n", "result", "=", "trainer", ".", "test", "(", "\n", "model", ",", "\n", "test_dataloaders", "=", "[", "\n", "DataLoader", "(", "\n", "no_rotate_extrapolate_testset", ",", "\n", "batch_size", "=", "int", "(", "\n", "args", ".", "batch_size", "/", "(", "16", "if", "\"GP\"", "in", "args", ".", "model", ".", "name", "else", "4", ")", "\n", ")", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "no_rotate_extrapolate_testset", ".", "dataset", ".", "_collate_fn", ",", "\n", "**", "{", "\"num_workers\"", ":", "4", ",", "\"pin_memory\"", ":", "True", "}", ",", "\n", ")", ",", "\n", "]", ",", "\n", ")", "\n", "\n", "results_writer", ".", "log_metrics", "(", "{", "\"no_rotate_extrapolate\"", ":", "result", "[", "0", "]", "[", "\"test_ll\"", "]", "}", ")", "\n", "\n", "# steer_cnp.steer_cnp.discrete_rkhs_embedder.set_grid(grid, n_axes)", "\n", "result", "=", "trainer", ".", "test", "(", "\n", "model", ",", "\n", "test_dataloaders", "=", "[", "\n", "DataLoader", "(", "\n", "rotate_extrapolate_testset", ",", "\n", "batch_size", "=", "int", "(", "\n", "args", ".", "batch_size", "/", "(", "16", "if", "\"GP\"", "in", "args", ".", "model", ".", "name", "else", "4", ")", "\n", ")", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "rotate_extrapolate_testset", ".", "dataset", ".", "_collate_fn", ",", "\n", "**", "{", "\"num_workers\"", ":", "4", ",", "\"pin_memory\"", ":", "True", "}", ",", "\n", ")", ",", "\n", "]", ",", "\n", ")", "\n", "\n", "results_writer", ".", "log_metrics", "(", "{", "\"rotate_extrapolate_testset\"", ":", "result", "[", "0", "]", "[", "\"test_ll\"", "]", "}", ")", "\n", "\n", "results_writer", ".", "save", "(", ")", "\n", "\n", "# Save a GP model for reloading later", "\n", "if", "len", "(", "callabacks", ")", ">", "0", ":", "\n", "        ", "callabacks", "[", "0", "]", ".", "save_checkpoint", "(", "trainer", ",", "model", ")", "\n", "loggers", "[", "0", "]", ".", "save", "(", ")", "\n", "\n", "", "Path", "(", "os", ".", "path", ".", "join", "(", "run_path", ",", "\"test_success\"", ")", ")", ".", "touch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.gp_train_models.main": [[27, 95], ["hydra.main", "os.getcwd", "print", "steer_cnp.datasets.GPDataset", "pytorch_lightning.seed_everything", "steer_cnp.lightning.LightningSteerCNP", "steer_cnp.lightning.LightningGPDataModule", "os.path.join", "os.path.join", "steer_cnp.lightning.interpolate_filename", "pytorch_lightning.Trainer", "pl.Trainer.fit", "pl.Trainer.test", "pytorch_lightning.loggers.CSVLogger", "pytorch_lightning.loggers.TensorBoardLogger", "pytorch_lightning.callbacks.ModelCheckpoint", "steer_cnp.lightning.InferencePlotCallback", "steer_cnp.lightning.GPComparePlotCallback", "int", "steer_cnp.datasets.GPDataset.get_kernel", "torch.cuda.is_available"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.gp_train_models.main", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.interpolate_filename", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.get_kernel"], ["@", "hydra", ".", "main", "(", "config_path", "=", "\"config/gp\"", ",", "config_name", "=", "\"config\"", ")", "\n", "def", "main", "(", "args", ")", ":", "\n", "\n", "# get current dir as set by hydra", "\n", "    ", "run_path", "=", "os", ".", "getcwd", "(", ")", "\n", "print", "(", "run_path", ")", "\n", "\n", "# Build dataset", "\n", "dataset", "=", "GPDataset", "(", "\n", "root", "=", "args", ".", "paths", ".", "datadir", ",", "\n", "min_context", "=", "args", ".", "min_context", ",", "\n", "max_context", "=", "args", ".", "max_context", ",", "\n", "n_points", "=", "args", ".", "total_points", ",", "\n", "**", "args", ".", "dataset", ",", "\n", ")", "\n", "\n", "pl", ".", "seed_everything", "(", "args", ".", "seed", ")", "\n", "\n", "steer_cnp", "=", "LightningSteerCNP", "(", "**", "args", ".", "model", ")", "\n", "datamodule", "=", "LightningGPDataModule", "(", "\n", "dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "splits", "=", "args", ".", "splits", "\n", ")", "\n", "\n", "log_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "paths", ".", "logdir", ",", "dataset", ".", "name", ",", "steer_cnp", ".", "name", ")", "\n", "run_name", "=", "args", ".", "experiment_name", "\n", "run_dir", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "run_name", ")", "\n", "run_dir", "=", "interpolate_filename", "(", "run_dir", ")", "\n", "\n", "loggers", "=", "[", "\n", "# Log results to a csv file", "\n", "CSVLogger", "(", "save_dir", "=", "\"\"", ",", "name", "=", "\"logs\"", ",", "version", "=", "\"\"", ")", ",", "\n", "# Log data to tensorboard", "\n", "TensorBoardLogger", "(", "save_dir", "=", "\"\"", ",", "name", "=", "\"logs\"", ",", "version", "=", "\"\"", ")", ",", "\n", "]", "\n", "\n", "callbacks", "=", "[", "\n", "# Callback to save recent + best validation checkpoint", "\n", "ModelCheckpoint", "(", "\n", "dirpath", "=", "\"checkpoints\"", ",", "\n", "monitor", "=", "\"val_ll\"", ",", "\n", "mode", "=", "\"max\"", ",", "\n", "save_last", "=", "True", ",", "\n", ")", ",", "\n", "# Callback to plot inferences on validation", "\n", "InferencePlotCallback", "(", "n_plots", "=", "3", ",", "dirpath", "=", "\"plots\"", ")", ",", "\n", "# Callback to plot comparison of the inference to the GP drawn from", "\n", "GPComparePlotCallback", "(", "\n", "n_plots", "=", "3", ",", "\n", "dirpath", "=", "\"plots\"", ",", "\n", "kernel", "=", "dataset", ".", "get_kernel", "(", ")", ",", "\n", "obs_noise", "=", "dataset", ".", "obs_noise", ",", "\n", ")", ",", "\n", "]", "\n", "\n", "trainer", "=", "pl", ".", "Trainer", "(", "\n", "max_epochs", "=", "args", ".", "epochs", ",", "\n", "# default_root_dir=args.paths.logdir,", "\n", "logger", "=", "loggers", ",", "\n", "callbacks", "=", "callbacks", ",", "\n", "log_every_n_steps", "=", "args", ".", "log_every_n_steps", ",", "\n", "flush_logs_every_n_steps", "=", "args", ".", "flush_logs_every_n_steps", ",", "\n", "val_check_interval", "=", "args", ".", "val_check_interval", ",", "\n", "gpus", "=", "int", "(", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", ",", "\n", "log_gpu_memory", "=", "args", ".", "log_gpu_memory", ",", "\n", ")", "\n", "\n", "trainer", ".", "fit", "(", "steer_cnp", ",", "datamodule", ")", "\n", "trainer", ".", "test", "(", "steer_cnp", ",", "datamodule", "=", "datamodule", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.test_contexts": [[210, 228], ["range", "len", "model", "means.append", "covs.append", "X_context.unsqueeze", "Y_context.unsqueeze", "X_target.unsqueeze", "m.detach().cpu().squeeze().numpy", "c.detach().cpu().squeeze().numpy", "m.detach().cpu().squeeze", "c.detach().cpu().squeeze", "m.detach().cpu", "c.detach().cpu", "m.detach", "c.detach"], "function", ["None"], ["", "", "def", "test_contexts", "(", "model", ",", "X_contexts", ",", "Y_contexts", ",", "X_target", ")", ":", "\n", "    ", "means", "=", "[", "]", "\n", "covs", "=", "[", "]", "\n", "n", "=", "X_target", ".", "shape", "[", "0", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "X_contexts", ")", ")", ":", "\n", "        ", "X_context", "=", "X_contexts", "[", "i", "]", "\n", "Y_context", "=", "Y_contexts", "[", "i", "]", "\n", "\n", "m", ",", "c", "=", "model", "(", "\n", "X_context", ".", "unsqueeze", "(", "0", ")", ",", "Y_context", ".", "unsqueeze", "(", "0", ")", ",", "X_target", ".", "unsqueeze", "(", "0", ")", "\n", ")", "\n", "means", ".", "append", "(", "m", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "squeeze", "(", "0", ")", ".", "numpy", "(", ")", ")", "\n", "covs", ".", "append", "(", "c", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "squeeze", "(", "0", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "return", "(", "\n", "means", ",", "\n", "covs", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.plot_means": [[231, 250], ["range", "matplotlib.subplots", "len", "axs[].imshow", "axs[].get_xaxis().set_ticks", "axs[].get_yaxis().set_ticks", "matplotlib.tight_layout", "len", "steer_cnp.utils.points_to_img", "axs[].set_title", "int", "axs[].get_xaxis", "axs[].get_yaxis", "math.sqrt", "len"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.tests.test_mnist_data.points_to_img"], ["", "def", "plot_means", "(", "means", ",", "xs", ",", "titles", "=", "None", ",", "axs", "=", "None", ")", ":", "\n", "    ", "if", "axs", "is", "None", ":", "\n", "        ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "len", "(", "means", ")", ",", "figsize", "=", "(", "len", "(", "means", ")", "*", "1", ",", "1", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "means", ")", ")", ":", "\n", "        ", "axs", "[", "i", "]", ".", "imshow", "(", "\n", "points_to_img", "(", "int", "(", "math", ".", "sqrt", "(", "means", "[", "i", "]", ".", "shape", "[", "0", "]", ")", ")", ",", "xs", ",", "means", "[", "i", "]", ")", ",", "\n", "cmap", "=", "\"gray\"", ",", "\n", "vmin", "=", "0", ",", "\n", "vmax", "=", "1", ",", "\n", ")", "\n", "axs", "[", "i", "]", ".", "get_xaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "axs", "[", "i", "]", ".", "get_yaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "\n", "if", "titles", "is", "not", "None", ":", "\n", "            ", "axs", "[", "i", "]", ".", "set_title", "(", "titles", "[", "i", "]", ")", "\n", "\n", "", "", "if", "titles", "is", "not", "None", ":", "\n", "        ", "plt", ".", "tight_layout", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.plot_contexts": [[252, 287], ["range", "matplotlib.subplots", "len", "axs[].scatter", "axs[].set_facecolor", "axs[].set_aspect", "axs[].get_xaxis().set_ticks", "axs[].get_yaxis().set_ticks", "axs[].set_ylim", "axs[].set_xlim", "matplotlib.tight_layout", "len", "axs[].set_title", "axs[].get_xaxis", "axs[].get_yaxis", "len"], "function", ["None"], ["", "", "def", "plot_contexts", "(", "context_xs", ",", "context_ys", ",", "titles", "=", "None", ",", "img_size", "=", "28", ",", "axs", "=", "None", ")", ":", "\n", "    ", "if", "axs", "is", "None", ":", "\n", "        ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "len", "(", "context_xs", ")", ",", "figsize", "=", "(", "len", "(", "context_xs", ")", "*", "1", ",", "1", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "context_xs", ")", ")", ":", "\n", "# axs[i].imshow(", "\n", "#     points_to_partial_img(img_size, context_xs[i], context_ys[i]),", "\n", "#     cmap=\"gray\",", "\n", "#     vmin=0,", "\n", "#     vmax=1,", "\n", "# )", "\n", "# print((28.0 / float(img_size)) ** 2)", "\n", "        ", "axs", "[", "i", "]", ".", "scatter", "(", "\n", "context_xs", "[", "i", "]", "[", ":", ",", "0", "]", ",", "\n", "img_size", "-", "context_xs", "[", "i", "]", "[", ":", ",", "1", "]", ",", "\n", "s", "=", "1", ",", "\n", "c", "=", "context_ys", "[", "i", "]", ",", "\n", "marker", "=", "\"s\"", ",", "\n", "cmap", "=", "\"gray\"", ",", "\n", "vmin", "=", "0", ",", "\n", "vmax", "=", "1", ",", "\n", ")", "\n", "axs", "[", "i", "]", ".", "set_facecolor", "(", "[", "0", ",", "0", ",", "1", "]", ")", "\n", "axs", "[", "i", "]", ".", "set_aspect", "(", "\"equal\"", ")", "\n", "# axs[i].invert_yaxis()", "\n", "axs", "[", "i", "]", ".", "get_xaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "axs", "[", "i", "]", ".", "get_yaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "axs", "[", "i", "]", ".", "set_ylim", "(", "[", "0", ",", "img_size", "-", "1", "]", ")", "\n", "axs", "[", "i", "]", ".", "set_xlim", "(", "[", "0", ",", "img_size", "-", "1", "]", ")", "\n", "\n", "if", "titles", "is", "not", "None", ":", "\n", "            ", "axs", "[", "i", "]", ".", "set_title", "(", "titles", "[", "i", "]", ")", "\n", "\n", "", "", "if", "titles", "is", "not", "None", ":", "\n", "        ", "plt", ".", "tight_layout", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.plot_compare_means": [[289, 327], ["len", "matplotlib.subplots", "mnist_image_plots.plot_contexts", "range", "matplotlib.tight_layout", "len", "zip", "[].set_title", "zip", "len", "mnist_image_plots.plot_means", "ax.set_ylabel", "ax.set_title", "range", "range", "range"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.plot_contexts", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.plot_means"], ["", "", "def", "plot_compare_means", "(", "\n", "means", ",", "\n", "mean_xs", ",", "\n", "context_xs", ",", "\n", "context_ys", ",", "\n", "mean_titles", "=", "None", ",", "\n", "context_titles", "=", "None", ",", "\n", "img_size", "=", "28", ",", "\n", ")", ":", "\n", "    ", "rows", "=", "len", "(", "means", "[", "0", "]", ")", "\n", "cols", "=", "1", "+", "len", "(", "means", ")", "\n", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "\n", "rows", ",", "cols", ",", "figsize", "=", "(", "cols", "*", "img_size", "/", "28", ",", "rows", "*", "img_size", "/", "28", ")", ",", "squeeze", "=", "False", "\n", ")", "\n", "\n", "plot_contexts", "(", "\n", "context_xs", ",", "\n", "context_ys", ",", "\n", "titles", "=", "None", ",", "\n", "axs", "=", "[", "axs", "[", "j", "]", "[", "0", "]", "for", "j", "in", "range", "(", "rows", ")", "]", ",", "\n", "img_size", "=", "img_size", ",", "\n", ")", "\n", "if", "context_titles", "is", "not", "None", ":", "\n", "        ", "for", "ax", ",", "t", "in", "zip", "(", "[", "axs", "[", "j", "]", "[", "0", "]", "for", "j", "in", "range", "(", "rows", ")", "]", ",", "context_titles", ")", ":", "\n", "            ", "ax", ".", "set_ylabel", "(", "t", ")", "\n", "\n", "", "", "if", "mean_titles", "is", "not", "None", ":", "\n", "        ", "axs", "[", "0", "]", "[", "0", "]", ".", "set_title", "(", "\"Context\"", ")", "\n", "for", "ax", ",", "t", "in", "zip", "(", "axs", "[", "0", "]", "[", "1", ":", "]", ",", "mean_titles", ")", ":", "\n", "            ", "ax", ".", "set_title", "(", "t", ",", "fontsize", "=", "8", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "means", ")", ")", ":", "\n", "        ", "plot_means", "(", "means", "[", "i", "]", ",", "mean_xs", ",", "axs", "=", "[", "axs", "[", "j", "]", "[", "i", "+", "1", "]", "for", "j", "in", "range", "(", "rows", ")", "]", ")", "\n", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "\n", "return", "fig", ",", "axs", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.rot_mat": [[329, 333], ["torch.tensor", "torch.tensor", "torch.cos", "torch.sin", "torch.cos", "torch.sin"], "function", ["None"], ["", "def", "rot_mat", "(", "theta", ")", ":", "\n", "    ", "theta", "=", "torch", ".", "tensor", "(", "theta", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "return", "torch", ".", "tensor", "(", "\n", "[", "[", "torch", ".", "cos", "(", "theta", ")", ",", "torch", ".", "sin", "(", "theta", ")", "]", ",", "[", "-", "torch", ".", "sin", "(", "theta", ")", ",", "torch", ".", "cos", "(", "theta", ")", "]", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.rot_points": [[336, 340], ["points.to", "mnist_image_plots.rot_mat"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.rot_mat"], ["", "def", "rot_points", "(", "points", ",", "theta", ",", "img_size", ")", ":", "\n", "    ", "return", "(", "\n", "(", "points", ".", "to", "(", "torch", ".", "float32", ")", "-", "img_size", "/", "2.0", ")", "@", "rot_mat", "(", "theta", ")", ".", "T", "\n", ")", "+", "img_size", "/", "2.0", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.rotation_plot": [[342, 402], ["int", "int", "itertools.product", "torch.Tensor", "torch.Tensor", "torch.randperm", "int", "mnist_image_plots.plot_compare_means", "numpy.linspace", "torch.Tensor.min", "torch.Tensor.max", "numpy.arange", "numpy.arange", "int", "int", "numpy.concatenate", "numpy.concatenate", "mnist_image_plots.rot_points", "Xs.append", "Ys.append", "int.numpy().astype", "int.numpy", "list", "X_target.numpy", "list", "int", "Xs.append", "Ys.append", "mnist_image_plots.test_contexts", "models.items", "means.values", "means.keys", "math.sqrt", "int", "int", "numpy.stack", "int.numpy", "range", "int", "int", "numpy.zeros_like", "int", "len", "len"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.plot_compare_means", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.rot_points", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.test_contexts"], ["", "def", "rotation_plot", "(", "dataset", ",", "idx", ",", "models", ",", "n_rot", ",", "frac", "=", "0.3", ")", ":", "\n", "    ", "X", ",", "Y", ",", "_", "=", "dataset", "[", "idx", "]", "\n", "\n", "# X_context = X[:n]", "\n", "# Y_context = Y[:n]", "\n", "X_target", "=", "X", "\n", "Y_target", "=", "Y", "\n", "angles", "=", "np", ".", "linspace", "(", "0", ",", "2", "*", "np", ".", "pi", ",", "n_rot", "+", "1", ")", "[", ":", "-", "1", "]", "\n", "\n", "x_min", "=", "int", "(", "X", ".", "min", "(", ")", ")", "\n", "x_max", "=", "int", "(", "X", ".", "max", "(", ")", ")", "\n", "r", "=", "(", "x_max", "-", "x_min", ")", "*", "1.41421", "/", "2", "\n", "c", "=", "(", "x_max", "-", "x_min", ")", "/", "2", "\n", "\n", "Xs", "=", "[", "]", "\n", "Ys", "=", "[", "]", "\n", "for", "i", ",", "j", "in", "itertools", ".", "product", "(", "\n", "np", ".", "arange", "(", "-", "int", "(", "r", ")", "-", "1", ",", "int", "(", "r", ")", "+", "2", ",", "1", ")", ",", "np", ".", "arange", "(", "-", "int", "(", "r", ")", "-", "1", ",", "int", "(", "r", ")", "+", "2", ",", "1", ")", "\n", ")", ":", "\n", "        ", "x", "=", "int", "(", "i", "+", "c", ")", "\n", "y", "=", "int", "(", "j", "+", "c", ")", "\n", "if", "(", "x", ">", "x_max", ")", "or", "(", "x", "<", "x_min", ")", "or", "(", "y", ">", "x_max", ")", "or", "(", "y", "<", "x_min", ")", ":", "\n", "            ", "Xs", ".", "append", "(", "x", ")", "\n", "Ys", ".", "append", "(", "y", ")", "\n", "\n", "", "", "Y", "=", "torch", ".", "Tensor", "(", "np", ".", "concatenate", "(", "[", "Y", ",", "np", ".", "zeros_like", "(", "Xs", ")", "[", ":", ",", "np", ".", "newaxis", "]", "]", ")", ")", "\n", "X", "=", "torch", ".", "Tensor", "(", "np", ".", "concatenate", "(", "[", "X", ",", "np", ".", "stack", "(", "[", "Xs", ",", "Ys", "]", ",", "axis", "=", "1", ")", "]", ")", ")", "\n", "\n", "inds", "=", "torch", ".", "randperm", "(", "X", ".", "shape", "[", "0", "]", ")", "\n", "X", "=", "X", "[", "inds", "]", "\n", "Y", "=", "Y", "[", "inds", "]", "\n", "\n", "n", "=", "int", "(", "frac", "*", "X", ".", "shape", "[", "0", "]", ")", "\n", "\n", "X_context", "=", "X", "[", ":", "n", "]", "\n", "Y_context", "=", "Y", "[", ":", "n", "]", "\n", "\n", "Xs", "=", "[", "]", "\n", "Ys", "=", "[", "]", "\n", "for", "t", "in", "angles", ":", "\n", "        ", "rot_x", "=", "rot_points", "(", "X_context", ",", "t", ",", "dataset", ".", "grid_size", ")", "\n", "inds", "=", "(", "rot_x", "<=", "x_max", ")", ".", "all", "(", "axis", "=", "1", ")", "&", "(", "rot_x", ">=", "x_min", ")", ".", "all", "(", "axis", "=", "1", ")", "\n", "Xs", ".", "append", "(", "rot_x", "[", "inds", "]", ")", "\n", "Ys", ".", "append", "(", "Y_context", "[", "inds", "]", ")", "\n", "\n", "", "xs", "=", "[", "x", ".", "numpy", "(", ")", ".", "astype", "(", "int", ")", "for", "x", "in", "Xs", "]", "\n", "ys", "=", "[", "y", ".", "numpy", "(", ")", "for", "y", "in", "Ys", "]", "\n", "\n", "means", "=", "{", "\n", "k", ":", "test_contexts", "(", "model", ",", "Xs", ",", "Ys", ",", "X_target", ")", "[", "0", "]", "for", "(", "k", ",", "model", ")", "in", "models", ".", "items", "(", ")", "\n", "}", "\n", "\n", "plot_compare_means", "(", "\n", "list", "(", "means", ".", "values", "(", ")", ")", ",", "\n", "X_target", ".", "numpy", "(", ")", ",", "\n", "Xs", ",", "\n", "Ys", ",", "\n", "list", "(", "means", ".", "keys", "(", ")", ")", ",", "\n", "[", "f\"{i}/{int(len(angles)/2)} $\\pi$\"", "for", "i", "in", "range", "(", "len", "(", "angles", ")", ")", "]", ",", "\n", "int", "(", "math", ".", "sqrt", "(", "X_target", ".", "shape", "[", "0", "]", ")", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.percentage_plot": [[405, 429], ["int", "mnist_image_plots.plot_compare_means", "x.numpy().astype", "y.numpy", "list", "X.numpy", "list", "int", "mnist_image_plots.test_contexts", "models.items", "means.values", "means.keys", "math.sqrt", "int", "int", "x.numpy", "int"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.plot_compare_means", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_image_plots.test_contexts"], ["", "def", "percentage_plot", "(", "dataset", ",", "idx", ",", "models", ",", "percentages", "=", "[", "0.1", ",", "0.2", ",", "0.3", ",", "0.5", ",", "0.7", ",", "0.9", "]", ")", ":", "\n", "    ", "X", ",", "Y", ",", "_", "=", "dataset", "[", "idx", "]", "\n", "n", "=", "int", "(", "X", ".", "shape", "[", "0", "]", ")", "\n", "\n", "X_target", "=", "X", "\n", "Y_target", "=", "Y", "\n", "\n", "Xs", "=", "[", "X", "[", ":", "int", "(", "p", "*", "n", ")", "]", "for", "p", "in", "percentages", "]", "\n", "Ys", "=", "[", "Y", "[", ":", "int", "(", "p", "*", "n", ")", "]", "for", "p", "in", "percentages", "]", "\n", "xs", "=", "[", "x", ".", "numpy", "(", ")", ".", "astype", "(", "int", ")", "for", "x", "in", "Xs", "]", "\n", "ys", "=", "[", "y", ".", "numpy", "(", ")", "for", "y", "in", "Ys", "]", "\n", "\n", "means", "=", "{", "\n", "k", ":", "test_contexts", "(", "model", ",", "Xs", ",", "Ys", ",", "X_target", ")", "[", "0", "]", "for", "(", "k", ",", "model", ")", "in", "models", ".", "items", "(", ")", "\n", "}", "\n", "\n", "plot_compare_means", "(", "\n", "list", "(", "means", ".", "values", "(", ")", ")", ",", "\n", "X", ".", "numpy", "(", ")", ",", "\n", "Xs", ",", "\n", "Ys", ",", "\n", "list", "(", "means", ".", "keys", "(", ")", ")", ",", "\n", "[", "f\"{int(p*100)}\\%\"", "for", "p", "in", "percentages", "]", ",", "\n", "int", "(", "math", ".", "sqrt", "(", "X", ".", "shape", "[", "0", "]", ")", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.flatten": [[21, 30], ["d.items", "dict", "isinstance", "items.extend", "items.append", "flatten().items", "mnist_make_tables_plots.flatten"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.flatten"], ["def", "flatten", "(", "d", ",", "parent_key", "=", "\"\"", ",", "sep", "=", "\"_\"", ")", ":", "\n", "    ", "items", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "        ", "new_key", "=", "parent_key", "+", "sep", "+", "k", "if", "parent_key", "else", "k", "\n", "if", "isinstance", "(", "v", ",", "collections", ".", "MutableMapping", ")", ":", "\n", "            ", "items", ".", "extend", "(", "flatten", "(", "v", ",", "new_key", ",", "sep", "=", "sep", ")", ".", "items", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "items", ".", "append", "(", "(", "new_key", ",", "v", ")", ")", "\n", "", "", "return", "dict", "(", "items", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.walklevel": [[32, 40], ["some_dir.rstrip.rstrip", "os.path.isdir", "some_dir.rstrip.count", "os.walk", "root.count"], "function", ["None"], ["", "def", "walklevel", "(", "some_dir", ",", "level", "=", "1", ",", "equal", "=", "False", ")", ":", "\n", "    ", "some_dir", "=", "some_dir", ".", "rstrip", "(", "os", ".", "path", ".", "sep", ")", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "some_dir", ")", ",", "f\"{some_dir} is not a dir\"", "\n", "num_sep", "=", "some_dir", ".", "count", "(", "os", ".", "path", ".", "sep", ")", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "some_dir", ")", ":", "\n", "        ", "num_sep_this", "=", "root", ".", "count", "(", "os", ".", "path", ".", "sep", ")", "\n", "if", "num_sep", "+", "level", "==", "num_sep_this", ":", "\n", "            ", "yield", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.all_equal": [[42, 49], ["iter", "all", "next"], "function", ["None"], ["", "", "", "def", "all_equal", "(", "iterator", ")", ":", "\n", "    ", "iterator", "=", "iter", "(", "iterator", ")", "\n", "try", ":", "\n", "        ", "first", "=", "next", "(", "iterator", ")", "\n", "", "except", "StopIteration", ":", "\n", "        ", "return", "True", "\n", "", "return", "all", "(", "first", "==", "rest", "for", "rest", "in", "iterator", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.remove_useless_columns": [[52, 58], ["data.copy.copy", "mnist_make_tables_plots.all_equal", "data.copy.pop"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.all_equal"], ["", "def", "remove_useless_columns", "(", "data", ",", "preserve", "=", "[", "]", ")", ":", "\n", "    ", "data", "=", "data", ".", "copy", "(", ")", "\n", "for", "col", "in", "data", ":", "\n", "        ", "if", "all_equal", "(", "data", ".", "loc", "[", ":", ",", "col", "]", ")", "and", "col", "not", "in", "preserve", ":", "\n", "            ", "data", ".", "pop", "(", "col", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.load_configs": [[60, 78], ["pandas.DataFrame", "isinstance", "os.path.isfile", "os.path.isdir", "os.path.join", "opts.append", "os.path.join", "open", "yaml.safe_load", "mnist_make_tables_plots.walklevel", "os.path.join"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.walklevel"], ["", "def", "load_configs", "(", "paths", ")", ":", "\n", "    ", "\"\"\" load all experiments in path folder \"\"\"", "\n", "\n", "opts", "=", "[", "]", "\n", "runs", "=", "[", "]", "\n", "paths", "=", "paths", "if", "isinstance", "(", "paths", ",", "list", ")", "else", "[", "paths", "]", "\n", "for", "path", "in", "paths", ":", "\n", "        ", "runs", "+=", "[", "x", "[", "0", "]", "for", "x", "in", "walklevel", "(", "path", ",", "level", "=", "2", ")", "]", "[", "1", ":", "]", "\n", "\n", "", "for", "run", "in", "runs", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "run", ",", "\".hydra\"", ")", ")", ":", "\n", "            ", "continue", "\n", "", "if", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "run", ",", "\"success.txt\"", ")", ")", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "run", ",", "\".hydra/config.yaml\"", ")", ",", "\"r\"", ")", "as", "stream", ":", "\n", "                ", "args", "=", "yaml", ".", "safe_load", "(", "stream", ")", "\n", "# losses = torch.load(run + \"/losses.rar\")", "\n", "", "opts", ".", "append", "(", "{", "\"path\"", ":", "run", ",", "**", "args", "}", ")", "\n", "", "", "return", "pd", ".", "DataFrame", "(", "opts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.load_experiments": [[80, 97], ["pandas.concat", "pandas.concat().reset_index", "pandas.DataFrame().transpose", "pandas.DataFrame", "pandas.concat", "dfs.append", "isinstance", "open", "yaml.safe_load", "numpy.repeat", "pandas.concat", "os.path.join", "pandas.DataFrame", "pandas.Series", "pandas.read_csv", "mnist_make_tables_plots.flatten", "os.path.join"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.flatten"], ["", "def", "load_experiments", "(", "runs", ",", "metrics_file", "=", "\"logs/metrics.csv\"", ")", ":", "\n", "    ", "dfs", "=", "[", "]", "\n", "for", "run", "in", "runs", ":", "\n", "        ", "if", "not", "isinstance", "(", "metrics_file", ",", "list", ")", ":", "\n", "            ", "metrics_file", "=", "[", "metrics_file", "]", "\n", "", "metrics", "=", "pd", ".", "concat", "(", "\n", "[", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "run", ",", "f", ")", ")", "for", "f", "in", "metrics_file", "]", ",", "axis", "=", "0", "\n", ")", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "run", ",", "\".hydra/config.yaml\"", ")", ",", "\"r\"", ")", "as", "stream", ":", "\n", "            ", "config", "=", "yaml", ".", "safe_load", "(", "stream", ")", "\n", "", "config", "=", "pd", ".", "DataFrame", "(", "pd", ".", "Series", "(", "flatten", "(", "config", ")", ")", ")", ".", "transpose", "(", ")", "\n", "config_rep", "=", "pd", ".", "DataFrame", "(", "np", ".", "repeat", "(", "config", ".", "values", ",", "metrics", ".", "shape", "[", "0", "]", ",", "axis", "=", "0", ")", ")", "\n", "config_rep", ".", "columns", "=", "config", ".", "columns", "\n", "run_df", "=", "pd", ".", "concat", "(", "[", "config_rep", ",", "metrics", "]", ",", "axis", "=", "1", ")", "\n", "dfs", ".", "append", "(", "run_df", ")", "\n", "# print(dfs)", "\n", "", "return", "pd", ".", "concat", "(", "dfs", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.load_configs_from_name": [[99, 105], ["os.path.abspath", "os.path.join", "list", "mnist_make_tables_plots.load_configs", "os.path.join", "map", "os.getcwd", "os.path.join"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.load_configs"], ["", "def", "load_configs_from_name", "(", "experiment_names", ")", ":", "\n", "    ", "parent", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "os", ".", "pardir", ")", ")", "\n", "parent", "=", "os", ".", "path", ".", "join", "(", "parent", ",", "\"example_hydra_lightning/experiments\"", ")", "\n", "paths", "=", "list", "(", "map", "(", "lambda", "x", ":", "os", ".", "path", ".", "join", "(", "parent", ",", "x", ")", ",", "experiment_names", ")", ")", "\n", "loaded_data", "=", "load_configs", "(", "paths", ")", "\n", "return", "loaded_data", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.parse_agg": [[108, 110], ["float", "series.tolist", "len"], "function", ["None"], ["", "def", "parse_agg", "(", "series", ")", ":", "\n", "    ", "return", "float", "(", "series", ")", "if", "len", "(", "series", ")", "==", "1", "else", "series", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.inter_ci": [[112, 114], ["mnist_make_tables_plots.confidence_interval"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.confidence_interval"], ["", "def", "inter_ci", "(", "series", ",", "ci", "=", "None", ",", "stds", "=", "None", ")", ":", "\n", "    ", "return", "confidence_interval", "(", "series", ",", "ci", "=", "ci", ",", "stds", "=", "stds", ")", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.lower_ci": [[116, 118], ["mnist_make_tables_plots.confidence_interval"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.confidence_interval"], ["", "def", "lower_ci", "(", "series", ",", "ci", "=", "None", ",", "stds", "=", "None", ")", ":", "\n", "    ", "return", "confidence_interval", "(", "series", ",", "ci", "=", "ci", ",", "stds", "=", "stds", ")", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.upper_ci": [[120, 122], ["mnist_make_tables_plots.confidence_interval"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.confidence_interval"], ["", "def", "upper_ci", "(", "series", ",", "ci", "=", "None", ",", "stds", "=", "None", ")", ":", "\n", "    ", "return", "confidence_interval", "(", "series", ",", "ci", "=", "ci", ",", "stds", "=", "stds", ")", "[", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.confidence_interval": [[124, 148], ["pandas.DataFrame", "ValueError", "pd.DataFrame.count", "pd.DataFrame.mean", "pd.DataFrame.std", "tuple", "pd.DataFrame.count", "pd.DataFrame.mean", "pd.DataFrame.std", "scipy.stats.t.ppf", "tuple", "map", "len", "numpy.sqrt", "map", "isinstance"], "function", ["None"], ["", "def", "confidence_interval", "(", "series", ",", "ci", "=", "None", ",", "stds", "=", "None", ")", ":", "\n", "    ", "arr", "=", "pd", ".", "DataFrame", "(", "\n", "[", "item", "]", "if", "not", "isinstance", "(", "item", ",", "list", ")", "else", "item", "for", "item", "in", "series", "\n", ")", "\n", "\n", "if", "(", "ci", "is", "not", "None", ")", "and", "(", "stds", "is", "not", "None", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"One of ci or stds must be none.\"", ")", "\n", "", "elif", "stds", "is", "not", "None", ":", "\n", "        ", "count", "=", "arr", ".", "count", "(", "0", ")", "\n", "mean", "=", "arr", ".", "mean", "(", "0", ")", "\n", "std", "=", "arr", ".", "std", "(", "0", ",", "ddof", "=", "1", ")", "\n", "return", "tuple", "(", "map", "(", "parse_agg", ",", "(", "mean", ",", "std", ",", "mean", "-", "std", ",", "mean", "+", "std", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "if", "ci", "is", "None", ":", "\n", "            ", "ci", "=", "95", "\n", "", "count", "=", "arr", ".", "count", "(", "0", ")", "\n", "mean", "=", "arr", ".", "mean", "(", "0", ")", "\n", "std", "=", "arr", ".", "std", "(", "0", ",", "ddof", "=", "1", ")", "\n", "# alpha = 0.05.", "\n", "df", "=", "len", "(", "arr", ")", "-", "1", "\n", "# t = stats.t.ppf(1 - alpha / 2, df)", "\n", "t", "=", "stats", ".", "t", ".", "ppf", "(", "ci", "/", "2", ",", "df", ")", "\n", "sigma", "=", "t", "*", "std", "/", "np", ".", "sqrt", "(", "count", ")", "\n", "return", "tuple", "(", "map", "(", "parse_agg", ",", "(", "mean", ",", "sigma", ",", "mean", "-", "sigma", ",", "mean", "+", "sigma", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.filter_data": [[150, 156], ["data[].notna().all", "mnist_make_tables_plots.remove_useless_columns", "data[].notna"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.remove_useless_columns"], ["", "", "def", "filter_data", "(", "data", ",", "keys", ",", "preserve", "=", "[", "]", ")", ":", "\n", "    ", "dropna_idx", "=", "data", "[", "keys", "]", ".", "notna", "(", ")", ".", "all", "(", "axis", "=", "1", ")", "\n", "data_filtered", "=", "data", "[", "dropna_idx", "]", "\n", "data_filtered", "=", "remove_useless_columns", "(", "data_filtered", ",", "preserve", ")", "\n", "# data_filtered = data_filtered.dropna(axis=1)", "\n", "return", "data_filtered", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.generate_line_plot": [[158, 316], ["range", "data.reset_index().set_index.reset_index().set_index", "len", "len", "matplotlib.subplots", "enumerate", "matplotlib.tight_layout", "isinstance", "list", "list.append", "data.reset_index().set_index.index.unique", "data.reset_index().set_index.index.unique", "data.reset_index().set_index.groupby", "enumerate", "fig.legend", "ax.grid", "data.reset_index().set_index.reset_index", "enumerate", "enumerate", "enumerate", "enumerate", "df.groupby", "enumerate", "ax.get_legend_handles_labels", "zip", "list", "list", "ax.legend", "ax.set_ylim", "range", "range", "data.reset_index().set_index.index.get_level_values().unique", "data.reset_index().set_index.index.get_level_values().unique", "data.reset_index().set_index.index.get_level_values().unique", "data.reset_index().set_index.index.get_level_values().unique", "df.groupby", "enumerate", "legend.values", "legend.keys", "df.groupby", "ax.plot", "ax.fill_between", "data.reset_index().set_index.index.get_level_values", "data.reset_index().set_index.index.get_level_values", "data.reset_index().set_index.index.get_level_values", "data.reset_index().set_index.index.get_level_values", "ax.set_ylabel", "ax.set_xlabel", "ax.set_title", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "ax.set_title"], "function", ["None"], ["", "def", "generate_line_plot", "(", "\n", "data", ",", "\n", "x_key", ",", "\n", "y_key", ",", "\n", "sharex", ",", "\n", "sharey", ",", "\n", "ylim", ",", "\n", "style_first", "=", "False", ",", "\n", "legend_outside", "=", "True", ",", "\n", "fig_size", "=", "None", ",", "\n", "color_index", "=", "0", ",", "\n", "style_index", "=", "1", ",", "\n", "col_index", "=", "2", ",", "\n", "row_index", "=", "3", ",", "\n", ")", ":", "\n", "    ", "colors", "=", "[", "\"C{}\"", ".", "format", "(", "i", ")", "for", "i", "in", "range", "(", "10", ")", "]", "+", "[", "\"C{}\"", ".", "format", "(", "i", ")", "for", "i", "in", "range", "(", "10", ")", "]", "\n", "linestyles", "=", "[", "\"solid\"", ",", "(", "0", ",", "(", "5", ",", "5", ")", ")", ",", "(", "0", ",", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", ",", "(", "0", ",", "(", "1", ",", "1", ")", ")", "]", "\n", "fontsize", "=", "15", "\n", "\n", "# Build out dummy index columns up to 4 levels of MultiIndex", "\n", "if", "not", "isinstance", "(", "data", ".", "index", ",", "pd", ".", "MultiIndex", ")", ":", "\n", "        ", "n", "=", "1", "\n", "index_keys", "=", "[", "data", ".", "index", ".", "name", "]", "\n", "", "else", ":", "\n", "        ", "n", "=", "data", ".", "index", ".", "nlevels", "\n", "index_keys", "=", "list", "(", "data", ".", "index", ".", "names", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "n", ",", "4", ")", ":", "\n", "        ", "data", "[", "f\"dummy_{i}\"", "]", "=", "1.0", "\n", "index_keys", ".", "append", "(", "f\"dummy_{i}\"", ")", "\n", "\n", "", "data", "=", "data", ".", "reset_index", "(", ")", ".", "set_index", "(", "keys", "=", "index_keys", ")", "\n", "\n", "# Number of rows and cols", "\n", "cols", "=", "len", "(", "data", ".", "index", ".", "unique", "(", "level", "=", "2", "if", "style_first", "else", "1", ")", ")", "\n", "rows", "=", "len", "(", "data", ".", "index", ".", "unique", "(", "level", "=", "3", ")", ")", "\n", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "\n", "rows", ",", "\n", "cols", ",", "\n", "sharex", "=", "sharex", ",", "\n", "sharey", "=", "sharey", ",", "\n", "figsize", "=", "(", "7", "*", "1", ",", "6", "*", "rows", "/", "cols", ")", "if", "fig_size", "is", "None", "else", "fig_size", ",", "\n", "squeeze", "=", "False", ",", "\n", ")", "\n", "\n", "# Grab the name of each thing we're grouping by", "\n", "color_title", "=", "index_keys", "[", "0", "]", "\n", "style_title", "=", "index_keys", "[", "1", "if", "style_first", "else", "2", "]", "\n", "col_title", "=", "index_keys", "[", "2", "if", "style_first", "else", "1", "]", "\n", "row_title", "=", "index_keys", "[", "3", "]", "\n", "\n", "# Produce a mapping from items in the index to an integer", "\n", "# Ensures consistency accross plots even when each index item isn't", "\n", "# in each.", "\n", "color_mapping", "=", "{", "\n", "c", ":", "i", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "0", ")", ".", "unique", "(", ")", ")", "\n", "}", "\n", "style_mapping", "=", "{", "\n", "c", ":", "i", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "\n", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "1", "if", "style_first", "else", "2", ")", ".", "unique", "(", ")", "\n", ")", "\n", "}", "\n", "col_mapping", "=", "{", "\n", "c", ":", "i", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "\n", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "2", "if", "style_first", "else", "1", ")", ".", "unique", "(", ")", "\n", ")", "\n", "}", "\n", "row_mapping", "=", "{", "\n", "c", ":", "i", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "3", ")", ".", "unique", "(", ")", ")", "\n", "}", "\n", "\n", "# Loop over the MultiIndices", "\n", "for", "l1", ",", "(", "index1", ",", "df", ")", "in", "enumerate", "(", "data", ".", "groupby", "(", "level", "=", "0", ")", ")", ":", "\n", "        ", "for", "l2", ",", "(", "index2", ",", "df", ")", "in", "enumerate", "(", "df", ".", "groupby", "(", "level", "=", "1", ")", ")", ":", "\n", "            ", "for", "l3", ",", "(", "index3", ",", "df", ")", "in", "enumerate", "(", "df", ".", "groupby", "(", "level", "=", "2", ")", ")", ":", "\n", "                ", "for", "l4", ",", "(", "index4", ",", "df", ")", "in", "enumerate", "(", "df", ".", "groupby", "(", "level", "=", "3", ")", ")", ":", "\n", "# Grab the name of the index item that maps to each property", "\n", "                    ", "color_name", "=", "index1", "\n", "style_name", "=", "index2", "if", "style_first", "else", "index3", "\n", "col_name", "=", "index3", "if", "style_first", "else", "index2", "\n", "row_name", "=", "index4", "\n", "\n", "# Grab the integer index of each index item", "\n", "color", "=", "color_mapping", "[", "color_name", "]", "\n", "style", "=", "style_mapping", "[", "style_name", "]", "\n", "col", "=", "col_mapping", "[", "col_name", "]", "\n", "row", "=", "row_mapping", "[", "row_name", "]", "\n", "\n", "# Pull out the right axis", "\n", "ax", "=", "axes", "[", "row", "]", "[", "col", "]", "\n", "\n", "# Set the x/y labels if first row / col", "\n", "if", "col", "==", "0", ":", "\n", "                        ", "ax", ".", "set_ylabel", "(", "y_key", ",", "fontsize", "=", "fontsize", ")", "\n", "\n", "", "if", "row", "==", "0", ":", "\n", "                        ", "ax", ".", "set_xlabel", "(", "x_key", ",", "fontsize", "=", "fontsize", ")", "\n", "\n", "# Set axis title to contain the things it is splitting on", "\n", "", "if", "n", "==", "4", ":", "\n", "                        ", "ax", ".", "set_title", "(", "\n", "f\"{col_title}: {col_name}, {row_title}: {row_name}\"", ",", "\n", "fontsize", "=", "fontsize", ",", "\n", ")", "\n", "", "elif", "(", "n", "==", "3", "and", "style_first", ")", "or", "(", "n", ">=", "2", "and", "not", "style_first", ")", ":", "\n", "                        ", "ax", ".", "set_title", "(", "f\"{col_title}: {col_name}\"", ",", "fontsize", "=", "fontsize", ")", "\n", "\n", "", "x", "=", "df", "[", "x_key", "]", "\n", "y", ",", "y_low", ",", "y_up", ",", "count", "=", "(", "\n", "np", ".", "array", "(", "df", "[", "(", "y_key", ",", "\"mean\"", ")", "]", ")", ",", "\n", "np", ".", "array", "(", "df", "[", "(", "y_key", ",", "\"lower_ci\"", ")", "]", ")", ",", "\n", "np", ".", "array", "(", "df", "[", "(", "y_key", ",", "\"upper_ci\"", ")", "]", ")", ",", "\n", "np", ".", "array", "(", "df", "[", "(", "y_key", ",", "\"count\"", ")", "]", ")", ",", "\n", ")", "\n", "# Set line label to contain the things it is splitting on", "\n", "if", "(", "n", ">=", "2", "and", "style_first", ")", "or", "(", "n", ">=", "3", "and", "not", "style_first", ")", ":", "\n", "                        ", "label", "=", "(", "\n", "f\"{color_title}: {color_name}, {style_title}: {style_name}\"", "\n", ")", "\n", "", "else", ":", "\n", "                        ", "label", "=", "f\"{color_title}: {color_name}\"", "\n", "\n", "", "ax", ".", "plot", "(", "\n", "x", ",", "\n", "y", ",", "\n", "lw", "=", "2", ",", "\n", "color", "=", "colors", "[", "color", "]", ",", "\n", "linestyle", "=", "linestyles", "[", "style", "]", ",", "\n", "label", "=", "label", ",", "\n", ")", "\n", "ax", ".", "fill_between", "(", "x", ",", "y_low", ",", "y_up", ",", "alpha", "=", "0.2", ",", "facecolor", "=", "colors", "[", "color", "]", ")", "\n", "\n", "", "", "", "", "if", "legend_outside", ":", "\n", "        ", "legend", "=", "{", "}", "\n", "# Loop through all lines in plots and grab a handle for the legend", "\n", "# Avoids duplicate items", "\n", "for", "ax", "in", "fig", ".", "axes", ":", "\n", "            ", "handles", ",", "labels", "=", "ax", ".", "get_legend_handles_labels", "(", ")", "\n", "for", "(", "h", ",", "l", ")", "in", "zip", "(", "handles", ",", "labels", ")", ":", "\n", "                ", "legend", "[", "l", "]", "=", "h", "\n", "", "", "fig", ".", "legend", "(", "\n", "list", "(", "legend", ".", "values", "(", ")", ")", ",", "\n", "list", "(", "legend", ".", "keys", "(", ")", ")", ",", "\n", "loc", "=", "\"upper left\"", ",", "\n", "bbox_to_anchor", "=", "(", "1", ",", "0.95", ")", ",", "\n", ")", "\n", "\n", "", "for", "ax", "in", "[", "a", "for", "axs", "in", "axes", "for", "a", "in", "axs", "]", ":", "\n", "        ", "if", "not", "legend_outside", ":", "\n", "            ", "ax", ".", "legend", "(", "fontsize", "=", "4", "/", "5", "*", "fontsize", ")", "\n", "", "ax", ".", "grid", "(", "True", ")", "\n", "if", "ylim", "is", "not", "None", ":", "\n", "            ", "ax", ".", "set_ylim", "(", "bottom", "=", "ylim", "[", "0", "]", ",", "top", "=", "ylim", "[", "1", "]", ")", "\n", "\n", "", "", "plt", ".", "tight_layout", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.generate_scatter_plot": [[318, 540], ["data.reset_index().set_index.copy", "range", "data.reset_index().set_index.reset_index().set_index", "len", "len", "matplotlib.subplots", "enumerate", "numpy.arange", "matplotlib.tight_layout", "isinstance", "list", "list.append", "data.reset_index().set_index.index.unique", "data.reset_index().set_index.index.unique", "fig.suptitle", "data.reset_index().set_index.groupby", "enumerate", "fig.legend", "ax.set_xticks", "ax.set_xticklabels", "ax.grid", "data.reset_index().set_index.reset_index", "enumerate", "enumerate", "enumerate", "enumerate", "df.groupby", "enumerate", "ax.get_legend_handles_labels", "zip", "list", "list", "len", "len", "ax.legend", "ax.set_ylim", "range", "range", "data.reset_index().set_index.index.get_level_values().unique", "data.reset_index().set_index.index.get_level_values().unique", "data.reset_index().set_index.index.get_level_values().unique", "data.reset_index().set_index.index.get_level_values().unique", "df.groupby", "enumerate", "legend.values", "legend.keys", "itertools.product", "color_mapping.keys", "df.groupby", "ax.scatter", "color_mapping.keys", "style_mapping.keys", "data.reset_index().set_index.index.get_level_values", "data.reset_index().set_index.index.get_level_values", "data.reset_index().set_index.index.get_level_values", "data.reset_index().set_index.index.get_level_values", "ax.set_ylabel", "ax.set_title", "ax.scatter", "y.mean", "ax.set_title", "len", "ax.errorbar", "len", "y.mean", "ax.errorbar", "y.std", "y.mean", "y.std", "ValueError"], "function", ["None"], ["", "def", "generate_scatter_plot", "(", "\n", "data", ",", "\n", "y_key", ",", "\n", "sharex", ",", "\n", "sharey", ",", "\n", "ylim", ",", "\n", "uncertainty", "=", "\"scatter\"", ",", "\n", "title", "=", "None", ",", "\n", "style_first", "=", "False", ",", "\n", "legend_outside", "=", "True", ",", "\n", "legend", "=", "True", ",", "\n", "fig_size", "=", "None", ",", "\n", "color_index", "=", "0", ",", "\n", "style_index", "=", "1", ",", "\n", "col_index", "=", "2", ",", "\n", "row_index", "=", "3", ",", "\n", ")", ":", "\n", "    ", "data", "=", "data", ".", "copy", "(", ")", "\n", "colors", "=", "[", "\"C{}\"", ".", "format", "(", "i", ")", "for", "i", "in", "range", "(", "10", ")", "]", "+", "[", "\"C{}\"", ".", "format", "(", "i", ")", "for", "i", "in", "range", "(", "10", ")", "]", "\n", "markerstyles", "=", "[", "\"o\"", ",", "\"D\"", ",", "\"s\"", ",", "\"+\"", ",", "\"x\"", "]", "\n", "fontsize", "=", "15", "\n", "\n", "# Build out dummy index columns up to 4 levels of MultiIndex", "\n", "if", "not", "isinstance", "(", "data", ".", "index", ",", "pd", ".", "MultiIndex", ")", ":", "\n", "        ", "n", "=", "1", "\n", "index_keys", "=", "[", "data", ".", "index", ".", "name", "]", "\n", "", "else", ":", "\n", "        ", "n", "=", "data", ".", "index", ".", "nlevels", "\n", "index_keys", "=", "list", "(", "data", ".", "index", ".", "names", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "n", ",", "4", ")", ":", "\n", "        ", "data", "[", "f\"dummy_{i}\"", "]", "=", "1.0", "\n", "index_keys", ".", "append", "(", "f\"dummy_{i}\"", ")", "\n", "\n", "", "data", "=", "data", ".", "reset_index", "(", ")", ".", "set_index", "(", "keys", "=", "index_keys", ")", "\n", "\n", "# Number of rows and cols", "\n", "cols", "=", "len", "(", "data", ".", "index", ".", "unique", "(", "level", "=", "2", "if", "style_first", "else", "1", ")", ")", "\n", "rows", "=", "len", "(", "data", ".", "index", ".", "unique", "(", "level", "=", "3", ")", ")", "\n", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "\n", "rows", ",", "\n", "cols", ",", "\n", "sharex", "=", "sharex", ",", "\n", "sharey", "=", "sharey", ",", "\n", "figsize", "=", "(", "7", "*", "1", ",", "6", "*", "rows", "/", "cols", ")", "if", "fig_size", "is", "None", "else", "fig_size", ",", "\n", "squeeze", "=", "False", ",", "\n", ")", "\n", "\n", "if", "title", "is", "not", "None", ":", "\n", "        ", "fig", ".", "suptitle", "(", "title", ")", "\n", "\n", "# Grab the name of each thing we're grouping by", "\n", "", "color_title", "=", "index_keys", "[", "0", "]", "\n", "style_title", "=", "index_keys", "[", "1", "if", "style_first", "else", "2", "]", "\n", "col_title", "=", "index_keys", "[", "2", "if", "style_first", "else", "1", "]", "\n", "row_title", "=", "index_keys", "[", "3", "]", "\n", "\n", "# Produce a mapping from items in the index to an integer", "\n", "# Ensures consistency accross plots even when each index item isn't", "\n", "# in each.", "\n", "color_mapping", "=", "{", "\n", "c", ":", "i", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "0", ")", ".", "unique", "(", ")", ")", "\n", "}", "\n", "style_mapping", "=", "{", "\n", "c", ":", "i", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "\n", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "1", "if", "style_first", "else", "2", ")", ".", "unique", "(", ")", "\n", ")", "\n", "}", "\n", "col_mapping", "=", "{", "\n", "c", ":", "i", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "\n", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "2", "if", "style_first", "else", "1", ")", ".", "unique", "(", ")", "\n", ")", "\n", "}", "\n", "row_mapping", "=", "{", "\n", "c", ":", "i", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "3", ")", ".", "unique", "(", ")", ")", "\n", "}", "\n", "\n", "# Loop over the MultiIndices", "\n", "for", "l1", ",", "(", "index1", ",", "df", ")", "in", "enumerate", "(", "data", ".", "groupby", "(", "level", "=", "0", ")", ")", ":", "\n", "        ", "for", "l2", ",", "(", "index2", ",", "df", ")", "in", "enumerate", "(", "df", ".", "groupby", "(", "level", "=", "1", ")", ")", ":", "\n", "            ", "for", "l3", ",", "(", "index3", ",", "df", ")", "in", "enumerate", "(", "df", ".", "groupby", "(", "level", "=", "2", ")", ")", ":", "\n", "                ", "for", "l4", ",", "(", "index4", ",", "df", ")", "in", "enumerate", "(", "df", ".", "groupby", "(", "level", "=", "3", ")", ")", ":", "\n", "# Grab the name of the index item that maps to each property", "\n", "                    ", "color_name", "=", "index1", "\n", "style_name", "=", "index2", "if", "style_first", "else", "index3", "\n", "col_name", "=", "index3", "if", "style_first", "else", "index2", "\n", "row_name", "=", "index4", "\n", "\n", "# Grab the integer index of each index item", "\n", "color", "=", "color_mapping", "[", "color_name", "]", "\n", "style", "=", "style_mapping", "[", "style_name", "]", "\n", "col", "=", "col_mapping", "[", "col_name", "]", "\n", "row", "=", "row_mapping", "[", "row_name", "]", "\n", "\n", "# Pull out the right axis", "\n", "ax", "=", "axes", "[", "row", "]", "[", "col", "]", "\n", "\n", "# Set the x/y labels if first row / col", "\n", "if", "col", "==", "0", ":", "\n", "                        ", "ax", ".", "set_ylabel", "(", "y_key", ",", "fontsize", "=", "fontsize", ")", "\n", "\n", "# if row == 0:", "\n", "#     ax.set_xlabel(x_key, fontsize=fontsize)", "\n", "\n", "# Set axis title to contain the things it is splitting on", "\n", "", "if", "n", "==", "4", ":", "\n", "                        ", "ax", ".", "set_title", "(", "\n", "f\"{col_title}: {col_name}, {row_title}: {row_name}\"", ",", "\n", "fontsize", "=", "fontsize", ",", "\n", ")", "\n", "", "elif", "(", "n", "==", "3", "and", "style_first", ")", "or", "(", "n", ">=", "2", "and", "not", "style_first", ")", ":", "\n", "                        ", "ax", ".", "set_title", "(", "f\"{col_title}: {col_name}\"", ",", "fontsize", "=", "fontsize", ")", "\n", "\n", "# x = df[x_key]", "\n", "# y, y_low, y_up, count = (", "\n", "#     np.array(df[(y_key, \"mean\")]),", "\n", "#     np.array(df[(y_key, \"lower_ci\")]),", "\n", "#     np.array(df[(y_key, \"upper_ci\")]),", "\n", "#     np.array(df[(y_key, \"count\")]),", "\n", "# )", "\n", "", "y", "=", "df", "[", "y_key", "]", "\n", "# Set line label to contain the things it is splitting on", "\n", "if", "(", "n", ">=", "2", "and", "style_first", ")", "or", "(", "n", ">=", "3", "and", "not", "style_first", ")", ":", "\n", "# label = (", "\n", "#     f\"{color_title}: {color_name}, {style_title}: {style_name}\"", "\n", "# )", "\n", "                        ", "label", "=", "(", "\n", "f\"{color_title}: {color_name}, {style_title}: {style_name}\"", "\n", ")", "\n", "", "else", ":", "\n", "# label = f\"{color_title}: {color_name}\"", "\n", "                        ", "label", "=", "f\"{color_title}: {color_name}\"", "\n", "\n", "", "x", "=", "style", "+", "(", "color", "*", "len", "(", "style_mapping", ")", ")", "\n", "if", "uncertainty", "==", "\"scatter\"", ":", "\n", "                        ", "ax", ".", "scatter", "(", "\n", "[", "x", "]", "*", "len", "(", "y", ")", ",", "\n", "y", ",", "\n", "color", "=", "colors", "[", "color", "]", ",", "\n", "marker", "=", "markerstyles", "[", "style", "]", ",", "\n", "s", "=", "100", ",", "\n", "# label=label,", "\n", "alpha", "=", "0.3", ",", "\n", ")", "\n", "", "elif", "uncertainty", "==", "\"ci-95\"", ":", "\n", "                        ", "ax", ".", "errorbar", "(", "\n", "x", ",", "\n", "y", ".", "mean", "(", ")", ",", "\n", "y", ".", "std", "(", ")", "*", "1.96", ",", "# 95% CI given gaussian assumptions", "\n", "color", "=", "colors", "[", "color", "]", ",", "\n", "capsize", "=", "5", ",", "\n", ")", "\n", "", "elif", "uncertainty", "==", "\"std\"", ":", "\n", "                        ", "ax", ".", "errorbar", "(", "\n", "x", ",", "y", ".", "mean", "(", ")", ",", "y", ".", "std", "(", ")", ",", "color", "=", "colors", "[", "color", "]", ",", "capsize", "=", "5", "\n", ")", "\n", "", "elif", "uncertainty", "is", "None", ":", "\n", "                        ", "pass", "\n", "", "else", ":", "\n", "                        ", "raise", "ValueError", "(", "\"Unrecognised uncertainty type\"", ")", "\n", "", "ax", ".", "scatter", "(", "\n", "x", ",", "\n", "y", ".", "mean", "(", ")", ",", "\n", "color", "=", "colors", "[", "color", "]", ",", "\n", "marker", "=", "markerstyles", "[", "style", "]", ",", "\n", "s", "=", "100", ",", "\n", "label", "=", "label", ",", "\n", "alpha", "=", "1", ",", "\n", ")", "\n", "# ax.fill_between(x, y_low, y_up, alpha=0.2, facecolor=colors[color])", "\n", "\n", "", "", "", "", "if", "legend_outside", "and", "legend", ":", "\n", "        ", "legend", "=", "{", "}", "\n", "# Loop through all lines in plots and grab a handle for the legend", "\n", "# Avoids duplicate items", "\n", "for", "ax", "in", "fig", ".", "axes", ":", "\n", "            ", "handles", ",", "labels", "=", "ax", ".", "get_legend_handles_labels", "(", ")", "\n", "for", "(", "h", ",", "l", ")", "in", "zip", "(", "handles", ",", "labels", ")", ":", "\n", "                ", "legend", "[", "l", "]", "=", "h", "\n", "", "", "fig", ".", "legend", "(", "\n", "list", "(", "legend", ".", "values", "(", ")", ")", ",", "\n", "list", "(", "legend", ".", "keys", "(", ")", ")", ",", "\n", "# loc=\"upper left\",", "\n", "# bbox_to_anchor=(1, 0.95),", "\n", "loc", "=", "\"upper center\"", ",", "\n", "bbox_to_anchor", "=", "(", "0.5", ",", "-", "0.1", ")", ",", "\n", "ncol", "=", "4", ",", "\n", ")", "\n", "\n", "", "ticks", "=", "np", ".", "arange", "(", "len", "(", "color_mapping", ")", "*", "len", "(", "style_mapping", ")", ")", "\n", "if", "(", "n", ">=", "2", "and", "style_first", ")", "or", "(", "n", ">=", "3", "and", "not", "style_first", ")", ":", "\n", "# tick_labels = [", "\n", "#     f\"{color_title}: {color_name}\\n{style_title}: {style_name}\"", "\n", "#     for (color_name, style_name) in itertools.product(", "\n", "#         color_mapping.keys(), style_mapping.keys()", "\n", "#     )", "\n", "# ]", "\n", "        ", "tick_labels", "=", "[", "\n", "f\"{color_name}\\n{style_name}\"", "\n", "for", "(", "color_name", ",", "style_name", ")", "in", "itertools", ".", "product", "(", "\n", "color_mapping", ".", "keys", "(", ")", ",", "style_mapping", ".", "keys", "(", ")", "\n", ")", "\n", "]", "\n", "", "else", ":", "\n", "# tick_labels = [", "\n", "#     f\"{color_title}: {color_name}\" for color_name in color_mapping.keys()", "\n", "# ]", "\n", "        ", "tick_labels", "=", "[", "f\"{color_name}\"", "for", "color_name", "in", "color_mapping", ".", "keys", "(", ")", "]", "\n", "\n", "", "for", "ax", "in", "[", "a", "for", "axs", "in", "axes", "for", "a", "in", "axs", "]", ":", "\n", "        ", "ax", ".", "set_xticks", "(", "ticks", ")", "\n", "ax", ".", "set_xticklabels", "(", "tick_labels", ",", "rotation", "=", "90", ")", "\n", "if", "not", "legend_outside", "and", "legend", ":", "\n", "            ", "ax", ".", "legend", "(", "fontsize", "=", "4", "/", "5", "*", "fontsize", ")", "\n", "", "ax", ".", "grid", "(", "True", ")", "\n", "if", "ylim", "is", "not", "None", ":", "\n", "            ", "ax", ".", "set_ylim", "(", "bottom", "=", "ylim", "[", "0", "]", ",", "top", "=", "ylim", "[", "1", "]", ")", "\n", "\n", "", "", "plt", ".", "tight_layout", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.generate_scatter_plot_2": [[542, 753], ["data.reset_index().set_index.copy", "range", "data.reset_index().set_index.reset_index().set_index", "len", "len", "matplotlib.subplots", "enumerate", "numpy.arange", "matplotlib.tight_layout", "isinstance", "list", "list.append", "data.reset_index().set_index.index.unique", "data.reset_index().set_index.index.unique", "fig.suptitle", "data.reset_index().set_index.groupby", "enumerate", "fig.legend", "ax.set_xticks", "ax.set_xticklabels", "ax.grid", "data.reset_index().set_index.reset_index", "enumerate", "enumerate", "enumerate", "enumerate", "df.groupby", "enumerate", "ax.get_legend_handles_labels", "zip", "list", "list", "len", "len", "len", "len", "len", "ax.legend", "ax.set_ylim", "range", "range", "data.reset_index().set_index.index.get_level_values().unique", "data.reset_index().set_index.index.get_level_values().unique", "data.reset_index().set_index.index.get_level_values().unique", "data.reset_index().set_index.index.get_level_values().unique", "df.groupby", "enumerate", "legend.values", "legend.keys", "itertools.product", "len", "df.groupby", "ax.scatter", "color_mapping.keys", "style_mapping.keys", "color_mapping.keys", "data.reset_index().set_index.index.get_level_values", "data.reset_index().set_index.index.get_level_values", "data.reset_index().set_index.index.get_level_values", "data.reset_index().set_index.index.get_level_values", "ax.set_ylabel", "ax.set_title", "ax.scatter", "y.mean", "style_mapping.keys", "len", "len", "len", "ax.set_title", "len", "len", "len", "len", "ax.errorbar", "len", "ax.set_title", "len", "len", "y.mean", "ax.errorbar", "y.std", "y.mean", "y.std", "ValueError"], "function", ["None"], ["", "def", "generate_scatter_plot_2", "(", "\n", "data", ",", "\n", "y_key", ",", "\n", "sharex", ",", "\n", "sharey", ",", "\n", "ylim", ",", "\n", "uncertainty", "=", "\"scatter\"", ",", "\n", "title", "=", "None", ",", "\n", "style_first", "=", "False", ",", "\n", "legend_outside", "=", "True", ",", "\n", "legend", "=", "True", ",", "\n", "legend_kw", "=", "{", "\"loc\"", ":", "\"upper center\"", ",", "\"bbox_to_anchor\"", ":", "(", "0.5", ",", "-", "0.1", ")", ",", "\"ncol\"", ":", "4", "}", ",", "\n", "fig_size", "=", "None", ",", "\n", "tick_rotation", "=", "90", ",", "\n", "colors", "=", "[", "\"C{}\"", ".", "format", "(", "i", ")", "for", "i", "in", "range", "(", "10", ")", "]", "+", "[", "\"C{}\"", ".", "format", "(", "i", ")", "for", "i", "in", "range", "(", "10", ")", "]", ",", "\n", "markerstyles", "=", "[", "\"o\"", ",", "\"D\"", ",", "\"s\"", ",", "\"+\"", ",", "\"x\"", "]", ",", "\n", "fontsize", "=", "15", ",", "\n", "color_index", "=", "0", ",", "\n", "style_index", "=", "1", ",", "\n", "col_index", "=", "2", ",", "\n", "row_index", "=", "3", ",", "\n", ")", ":", "\n", "    ", "data", "=", "data", ".", "copy", "(", ")", "\n", "\n", "# Build out dummy index columns up to 4 levels of MultiIndex", "\n", "if", "not", "isinstance", "(", "data", ".", "index", ",", "pd", ".", "MultiIndex", ")", ":", "\n", "        ", "n", "=", "1", "\n", "index_keys", "=", "[", "data", ".", "index", ".", "name", "]", "\n", "", "else", ":", "\n", "        ", "n", "=", "data", ".", "index", ".", "nlevels", "\n", "index_keys", "=", "list", "(", "data", ".", "index", ".", "names", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "n", ",", "4", ")", ":", "\n", "        ", "data", "[", "f\"dummy {i}\"", "]", "=", "1.0", "\n", "index_keys", ".", "append", "(", "f\"dummy {i}\"", ")", "\n", "\n", "", "data", "=", "data", ".", "reset_index", "(", ")", ".", "set_index", "(", "keys", "=", "index_keys", ")", "\n", "\n", "# Number of rows and cols", "\n", "cols", "=", "len", "(", "data", ".", "index", ".", "unique", "(", "level", "=", "col_index", ")", ")", "\n", "rows", "=", "len", "(", "data", ".", "index", ".", "unique", "(", "level", "=", "row_index", ")", ")", "\n", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "\n", "rows", ",", "\n", "cols", ",", "\n", "sharex", "=", "sharex", ",", "\n", "sharey", "=", "sharey", ",", "\n", "figsize", "=", "(", "7", "*", "1", ",", "6", "*", "rows", "/", "cols", ")", "if", "fig_size", "is", "None", "else", "fig_size", ",", "\n", "squeeze", "=", "False", ",", "\n", ")", "\n", "\n", "if", "title", "is", "not", "None", ":", "\n", "        ", "fig", ".", "suptitle", "(", "title", ")", "\n", "\n", "# Grab the name of each thing we're grouping by", "\n", "", "color_title", "=", "index_keys", "[", "color_index", "]", "\n", "style_title", "=", "index_keys", "[", "style_index", "]", "\n", "col_title", "=", "index_keys", "[", "col_index", "]", "\n", "row_title", "=", "index_keys", "[", "row_index", "]", "\n", "\n", "# Produce a mapping from items in the index to an integer", "\n", "# Ensures consistency accross plots even when each index item isn't", "\n", "# in each.", "\n", "color_mapping", "=", "{", "\n", "c", ":", "i", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "color_index", ")", ".", "unique", "(", ")", ")", "\n", "}", "\n", "style_mapping", "=", "{", "\n", "c", ":", "i", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "style_index", ")", ".", "unique", "(", ")", ")", "\n", "}", "\n", "col_mapping", "=", "{", "\n", "c", ":", "i", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "col_index", ")", ".", "unique", "(", ")", ")", "\n", "}", "\n", "row_mapping", "=", "{", "\n", "c", ":", "i", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "row_index", ")", ".", "unique", "(", ")", ")", "\n", "}", "\n", "\n", "# Loop over the MultiIndices", "\n", "for", "color_id", ",", "(", "color_name", ",", "df", ")", "in", "enumerate", "(", "\n", "data", ".", "groupby", "(", "level", "=", "color_index", ",", "sort", "=", "False", ")", "\n", ")", ":", "\n", "        ", "for", "style_id", ",", "(", "style_name", ",", "df", ")", "in", "enumerate", "(", "\n", "df", ".", "groupby", "(", "level", "=", "style_index", ",", "sort", "=", "False", ")", "\n", ")", ":", "\n", "            ", "for", "col_id", ",", "(", "col_name", ",", "df", ")", "in", "enumerate", "(", "\n", "df", ".", "groupby", "(", "level", "=", "col_index", ",", "sort", "=", "False", ")", "\n", ")", ":", "\n", "                ", "for", "row_id", ",", "(", "row_name", ",", "df", ")", "in", "enumerate", "(", "\n", "df", ".", "groupby", "(", "level", "=", "row_index", ",", "sort", "=", "False", ")", "\n", ")", ":", "\n", "# Grab the integer index of each index item", "\n", "                    ", "color", "=", "color_mapping", "[", "color_name", "]", "\n", "style", "=", "style_mapping", "[", "style_name", "]", "\n", "col", "=", "col_mapping", "[", "col_name", "]", "\n", "row", "=", "row_mapping", "[", "row_name", "]", "\n", "\n", "# Pull out the right axis", "\n", "ax", "=", "axes", "[", "row_id", "]", "[", "col_id", "]", "\n", "\n", "# Set the x/y labels if first row / col", "\n", "if", "col_id", "==", "0", ":", "\n", "                        ", "ax", ".", "set_ylabel", "(", "y_key", ",", "fontsize", "=", "fontsize", ")", "\n", "\n", "# Set axis title to contain the things it is splitting on", "\n", "", "if", "(", "len", "(", "col_mapping", ")", ">", "1", ")", "and", "(", "len", "(", "row_mapping", ")", ">", "1", ")", ":", "\n", "                        ", "ax", ".", "set_title", "(", "\n", "f\"{col_title}: {col_name}\\n{row_title}: {row_name}\"", ",", "\n", "fontsize", "=", "fontsize", ",", "\n", ")", "\n", "", "elif", "len", "(", "col_mapping", ")", ">", "1", ":", "\n", "                        ", "ax", ".", "set_title", "(", "f\"{col_title}: {col_name}\"", ",", "fontsize", "=", "fontsize", ")", "\n", "", "elif", "len", "(", "row_mapping", ")", ">", "1", ":", "\n", "                        ", "ax", ".", "set_title", "(", "f\"{row_title}: {row_name}\"", ",", "fontsize", "=", "fontsize", ")", "\n", "\n", "", "if", "(", "len", "(", "color_mapping", ")", ">", "1", ")", "and", "(", "len", "(", "style_mapping", ")", ">", "1", ")", ":", "\n", "                        ", "label", "=", "(", "\n", "f\"{color_title}: {color_name}, {style_title}: {style_name}\"", "\n", ")", "\n", "", "elif", "len", "(", "color_mapping", ")", ">", "1", ":", "\n", "                        ", "label", "=", "f\"{color_title}: {color_name}\"", "\n", "", "elif", "len", "(", "style_mapping", ")", ">", "1", ":", "\n", "                        ", "label", "=", "f\"{style_title}: {style_name}\"", "\n", "", "else", ":", "\n", "                        ", "label", "=", "None", "\n", "\n", "", "y", "=", "df", "[", "y_key", "]", "\n", "\n", "x", "=", "style", "+", "(", "color", "*", "len", "(", "style_mapping", ")", ")", "\n", "if", "uncertainty", "==", "\"scatter\"", ":", "\n", "                        ", "ax", ".", "scatter", "(", "\n", "[", "x", "]", "*", "len", "(", "y", ")", ",", "\n", "y", ",", "\n", "color", "=", "colors", "[", "color", "]", ",", "\n", "marker", "=", "markerstyles", "[", "style", "]", ",", "\n", "s", "=", "100", ",", "\n", "# label=label,", "\n", "alpha", "=", "0.3", ",", "\n", ")", "\n", "", "elif", "uncertainty", "==", "\"ci-95\"", ":", "\n", "                        ", "ax", ".", "errorbar", "(", "\n", "x", ",", "\n", "y", ".", "mean", "(", ")", ",", "\n", "y", ".", "std", "(", ")", "*", "1.96", ",", "# 95% CI given gaussian assumptions", "\n", "color", "=", "colors", "[", "color", "]", ",", "\n", "capsize", "=", "5", ",", "\n", ")", "\n", "", "elif", "uncertainty", "==", "\"std\"", ":", "\n", "                        ", "ax", ".", "errorbar", "(", "\n", "x", ",", "y", ".", "mean", "(", ")", ",", "y", ".", "std", "(", ")", ",", "color", "=", "colors", "[", "color", "]", ",", "capsize", "=", "5", "\n", ")", "\n", "", "elif", "uncertainty", "is", "None", ":", "\n", "                        ", "pass", "\n", "", "else", ":", "\n", "                        ", "raise", "ValueError", "(", "\"Unrecognised uncertainty type\"", ")", "\n", "", "ax", ".", "scatter", "(", "\n", "x", ",", "\n", "y", ".", "mean", "(", ")", ",", "\n", "color", "=", "colors", "[", "color", "]", ",", "\n", "marker", "=", "markerstyles", "[", "style", "]", ",", "\n", "s", "=", "100", ",", "\n", "label", "=", "label", ",", "\n", "alpha", "=", "1", ",", "\n", ")", "\n", "# ax.fill_between(x, y_low, y_up, alpha=0.2, facecolor=colors[color])", "\n", "\n", "", "", "", "", "if", "legend_outside", "and", "legend", ":", "\n", "        ", "legend", "=", "{", "}", "\n", "# Loop through all lines in plots and grab a handle for the legend", "\n", "# Avoids duplicate items", "\n", "for", "ax", "in", "fig", ".", "axes", ":", "\n", "            ", "handles", ",", "labels", "=", "ax", ".", "get_legend_handles_labels", "(", ")", "\n", "for", "(", "h", ",", "l", ")", "in", "zip", "(", "handles", ",", "labels", ")", ":", "\n", "                ", "legend", "[", "l", "]", "=", "h", "\n", "", "", "fig", ".", "legend", "(", "\n", "list", "(", "legend", ".", "values", "(", ")", ")", ",", "\n", "list", "(", "legend", ".", "keys", "(", ")", ")", ",", "\n", "# loc=\"upper left\",", "\n", "# bbox_to_anchor=(1, 0.95),", "\n", "**", "legend_kw", ",", "\n", ")", "\n", "\n", "", "ticks", "=", "np", ".", "arange", "(", "len", "(", "color_mapping", ")", "*", "len", "(", "style_mapping", ")", ")", "\n", "if", "(", "len", "(", "color_mapping", ")", ">", "1", ")", "and", "(", "len", "(", "style_mapping", ")", ">", "1", ")", ":", "\n", "        ", "tick_labels", "=", "[", "\n", "f\"{color_name}\\n{style_name}\"", "\n", "for", "(", "color_name", ",", "style_name", ")", "in", "itertools", ".", "product", "(", "\n", "color_mapping", ".", "keys", "(", ")", ",", "style_mapping", ".", "keys", "(", ")", "\n", ")", "\n", "]", "\n", "", "elif", "len", "(", "color_mapping", ")", ">", "1", ":", "\n", "        ", "tick_labels", "=", "[", "f\"{color_name}\"", "for", "color_name", "in", "color_mapping", ".", "keys", "(", ")", "]", "\n", "", "elif", "len", "(", "style_mapping", ")", ">", "1", ":", "\n", "        ", "tick_labels", "=", "[", "f\"{style_name}\"", "for", "style_name", "in", "style_mapping", ".", "keys", "(", ")", "]", "\n", "", "else", ":", "\n", "        ", "tick_labels", "=", "[", "None", "]", "\n", "\n", "", "for", "ax", "in", "[", "a", "for", "axs", "in", "axes", "for", "a", "in", "axs", "]", ":", "\n", "        ", "ax", ".", "set_xticks", "(", "ticks", ")", "\n", "ax", ".", "set_xticklabels", "(", "tick_labels", ",", "rotation", "=", "tick_rotation", ")", "\n", "if", "not", "legend_outside", "and", "legend", ":", "\n", "            ", "ax", ".", "legend", "(", "fontsize", "=", "4", "/", "5", "*", "fontsize", ")", "\n", "", "ax", ".", "grid", "(", "True", ")", "\n", "if", "ylim", "is", "not", "None", ":", "\n", "            ", "ax", ".", "set_ylim", "(", "bottom", "=", "ylim", "[", "0", "]", ",", "top", "=", "ylim", "[", "1", "]", ")", "\n", "\n", "", "", "plt", ".", "tight_layout", "(", ")", "\n", "\n", "return", "fig", ",", "axes", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.generate_heatmap": [[755, 773], ["data_series.unstack", "matplotlib.subplots", "ax.imshow", "ax.set_yticks", "ax.set_yticklabels", "ax.set_xticks", "ax.set_xticklabels", "ax.set_ylabel", "ax.set_xlabel", "mpl_toolkits.axes_grid1.make_axes_locatable", "mpl_toolkits.axes_grid1.make_axes_locatable.append_axes", "fig.colorbar", "numpy.arange", "numpy.arange", "ax.set_title", "len", "len"], "function", ["None"], ["", "def", "generate_heatmap", "(", "data_series", ",", "colormap", "=", "\"viridis\"", ",", "title", "=", "None", ",", "figsize", "=", "(", "6", ",", "8", ")", ")", ":", "\n", "    ", "d", "=", "data_series", ".", "unstack", "(", "level", "=", "1", ")", "\n", "level_0", "=", "d", ".", "index", ".", "values", "\n", "level_1", "=", "d", ".", "columns", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "figsize", ")", "\n", "im", "=", "ax", ".", "imshow", "(", "d", ".", "values", ",", "origin", "=", "\"lower\"", ",", "cmap", "=", "colormap", ")", "\n", "ax", ".", "set_yticks", "(", "np", ".", "arange", "(", "len", "(", "level_0", ")", ")", ")", "\n", "ax", ".", "set_yticklabels", "(", "level_0", ")", "\n", "ax", ".", "set_xticks", "(", "np", ".", "arange", "(", "len", "(", "level_1", ")", ")", ")", "\n", "ax", ".", "set_xticklabels", "(", "level_1", ")", "\n", "ax", ".", "set_ylabel", "(", "d", ".", "index", ".", "names", "[", "0", "]", ")", "\n", "ax", ".", "set_xlabel", "(", "d", ".", "columns", ".", "names", "[", "0", "]", ")", "\n", "\n", "divider", "=", "make_axes_locatable", "(", "ax", ")", "\n", "cax", "=", "divider", ".", "append_axes", "(", "\"right\"", ",", "size", "=", "\"5%\"", ",", "pad", "=", "0.1", ")", "\n", "fig", ".", "colorbar", "(", "im", ",", "cax", "=", "cax", ",", "use_gridspec", "=", "True", ")", "\n", "if", "title", "is", "not", "None", ":", "\n", "        ", "ax", ".", "set_title", "(", "title", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.generate_plot": [[776, 830], ["len", "matplotlib.subplots", "data.index.get_level_values().unique", "enumerate", "fig.suptitle", "matplotlib.legend", "matplotlib.show", "data.index.unique", "isinstance", "data.groupby", "ax.set_title", "enumerate", "ax.legend", "ax.grid", "data.index.get_level_values", "ax.set_ylabel", "new_df.groupby", "ax.plot", "ax.fill_between", "ax.set_ylim", "range", "range", "list().index", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "str", "tuple", "list", "zip"], "function", ["None"], ["", "", "def", "generate_plot", "(", "data", ",", "name", ",", "metrics", ",", "sharey", ",", "ylim", ",", "offset_per", ")", ":", "\n", "    ", "colors", "=", "[", "\"C{}\"", ".", "format", "(", "i", ")", "for", "i", "in", "range", "(", "10", ")", "]", "+", "[", "\"C{}\"", ".", "format", "(", "i", ")", "for", "i", "in", "range", "(", "10", ")", "]", "\n", "linestyles", "=", "[", "\"solid\"", ",", "(", "0", ",", "(", "5", ",", "5", ")", ")", ",", "(", "0", ",", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", ",", "(", "0", ",", "(", "1", ",", "1", ")", ")", "]", "\n", "fontsize", "=", "15", "\n", "# mean_col = (metric, \"mean\")", "\n", "# ci_col = (metric, \"inter_ci\")", "\n", "# count_col = (metric, \"count\")", "\n", "\n", "M", "=", "len", "(", "data", ".", "index", ".", "unique", "(", "level", "=", "0", ")", ")", "\n", "fig", ",", "axis", "=", "plt", ".", "subplots", "(", "1", ",", "M", ",", "sharex", "=", "False", ",", "sharey", "=", "sharey", ",", "figsize", "=", "(", "7", "*", "M", ",", "6", ")", ")", "\n", "axes", "=", "axis", "if", "isinstance", "(", "axis", ",", "np", ".", "ndarray", ")", "else", "[", "axis", "]", "\n", "subplot_values", "=", "data", ".", "index", ".", "get_level_values", "(", "level", "=", "0", ")", ".", "unique", "(", ")", "\n", "\n", "for", "i", ",", "(", "index", ",", "new_df", ")", "in", "enumerate", "(", "data", ".", "groupby", "(", "level", "=", "0", ")", ")", ":", "\n", "        ", "ax", "=", "axes", "[", "list", "(", "subplot_values", ")", ".", "index", "(", "index", ")", "]", "\n", "if", "i", "==", "0", ":", "\n", "            ", "ax", ".", "set_ylabel", "(", "metrics", "[", "1", "]", ",", "fontsize", "=", "fontsize", ")", "\n", "", "ax", ".", "set_title", "(", "\"{}={}\"", ".", "format", "(", "new_df", ".", "index", ".", "names", "[", "0", "]", ",", "index", ")", ",", "fontsize", "=", "fontsize", ")", "\n", "# print(index, new_df)", "\n", "for", "j", ",", "(", "index", ",", "new_df", ")", "in", "enumerate", "(", "new_df", ".", "groupby", "(", "level", "=", "1", ")", ")", ":", "\n", "# print(index, new_df)", "\n", "# if isinstance(row.loc[mean_col], float) and math.isnan(row.loc[mean_col]):", "\n", "# offset = math.floor(offset_per * len(row.loc[mean_col]))", "\n", "# y_ci[:offset], y[:offset] = math.nan, math.nan", "\n", "            ", "x", "=", "new_df", "[", "metrics", "[", "0", "]", "]", "\n", "y", ",", "y_low", ",", "y_up", ",", "count", "=", "(", "\n", "np", ".", "array", "(", "new_df", "[", "(", "metrics", "[", "1", "]", ",", "\"mean\"", ")", "]", ")", ",", "\n", "np", ".", "array", "(", "new_df", "[", "(", "metrics", "[", "1", "]", ",", "\"lower_ci\"", ")", "]", ")", ",", "\n", "np", ".", "array", "(", "new_df", "[", "(", "metrics", "[", "1", "]", ",", "\"upper_ci\"", ")", "]", ")", ",", "\n", "np", ".", "array", "(", "new_df", "[", "(", "metrics", "[", "1", "]", ",", "\"count\"", ")", "]", ")", ",", "\n", ")", "\n", "label", "=", "str", "(", "\n", "tuple", "(", "\n", "\"{}={}\"", ".", "format", "(", "name", ",", "value", ")", "\n", "for", "name", ",", "value", "in", "zip", "(", "new_df", ".", "index", ".", "names", ",", "new_df", ".", "index", "[", "0", "]", ")", "\n", ")", "\n", ")", "+", "\" #{}\"", ".", "format", "(", "count", "[", "0", "]", ")", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "lw", "=", "2", ",", "color", "=", "colors", "[", "j", "]", ",", "linestyle", "=", "linestyles", "[", "j", "]", ",", "label", "=", "label", ")", "\n", "ax", ".", "fill_between", "(", "x", ",", "y_low", ",", "y_up", ",", "alpha", "=", "0.2", ",", "facecolor", "=", "colors", "[", "j", "]", ")", "\n", "# if data.index.nlevels > 1:", "\n", "# for k, (index, row) in enumerate(new_df.iterrows()):", "\n", "# x =", "\n", "\n", "", "ax", ".", "legend", "(", "fontsize", "=", "4", "/", "5", "*", "fontsize", ")", "\n", "ax", ".", "grid", "(", "True", ")", "\n", "if", "ylim", "is", "not", "None", ":", "\n", "            ", "ax", ".", "set_ylim", "(", "bottom", "=", "ylim", "[", "0", "]", ",", "top", "=", "ylim", "[", "1", "]", ")", "\n", "\n", "# title = str(experiment_names) + \"\\n\" + str(criteria)", "\n", "", "", "title", "=", "name", "\n", "fig", ".", "suptitle", "(", "title", ",", "fontsize", "=", "0.75", "*", "fontsize", ",", "y", "=", "0.05", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "fig_name", "=", "\"logs/{}.pdf\"", ".", "format", "(", "name", ")", "\n", "# fig.savefig(fig_name, bbox_inches=\"tight\", transparent=True)", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.write_data_to_latex": [[834, 838], ["os.path.join", "data.to_latex", "os.getcwd"], "function", ["None"], ["", "def", "write_data_to_latex", "(", "data", ")", ":", "\n", "    ", "latex_path", "=", "\"table.tex\"", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "latex_path", ")", "\n", "data", ".", "to_latex", "(", "buf", "=", "filename", ",", "escape", "=", "False", ",", "multirow", "=", "True", ",", "column_format", "=", "\"cccccc\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.compute_ci_and_format": [[840, 859], ["pandas.DataFrame", "data.groupby", "new_df.columns.droplevel", "numpy.argsort", "pandas.DataFrame", "pandas.concat", "len", "zip", "pandas.StringDtype"], "function", ["None"], ["", "def", "compute_ci_and_format", "(", "data", ",", "level", "=", "0", ")", ":", "\n", "    ", "new_data", "=", "pd", ".", "DataFrame", "(", ")", "\n", "for", "_", ",", "new_df", "in", "data", ".", "groupby", "(", "level", "=", "level", ")", ":", "\n", "        ", "new_df", ".", "columns", "=", "new_df", ".", "columns", ".", "droplevel", "(", "level", "=", "0", ")", "\n", "sorted_idx", "=", "np", ".", "argsort", "(", "new_df", "[", "\"mean\"", "]", ")", "\n", "is_gap", "=", "(", "\n", "new_df", ".", "iloc", "[", "sorted_idx", "[", "0", "]", "]", "[", "\"upper_ci\"", "]", "\n", "<", "new_df", ".", "iloc", "[", "sorted_idx", "[", "1", "]", "]", "[", "\"lower_ci\"", "]", "\n", ")", "\n", "bolds", "=", "[", "\"\"", "]", "*", "len", "(", "sorted_idx", ")", "\n", "if", "is_gap", ":", "\n", "            ", "bolds", "[", "sorted_idx", "[", "0", "]", "]", "=", "\"\\\\bm\"", "\n", "", "new_col", "=", "[", "\n", "\"${}{{{:.2f}}}_{{\\pm {:.2f}}}$\"", ".", "format", "(", "bold", ",", "mean", ",", "sigma", ")", "\n", "for", "bold", ",", "mean", ",", "sigma", "in", "zip", "(", "bolds", ",", "new_df", "[", "\"mean\"", "]", ",", "new_df", "[", "\"inter_ci\"", "]", ")", "\n", "]", "\n", "series", "=", "pd", ".", "DataFrame", "(", "new_col", ",", "index", "=", "new_df", ".", "index", ",", "dtype", "=", "pd", ".", "StringDtype", "(", ")", ")", "\n", "new_data", "=", "pd", ".", "concat", "(", "[", "new_data", ",", "series", "]", ")", "\n", "", "return", "new_data", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.compute_ci_format_table": [[861, 899], ["data.fillna.copy", "list", "data.fillna.reset_index().groupby().agg", "data.fillna.fillna", "data.fillna.T.groupby", "data.fillna.xs", "d.columns.droplevel", "numpy.argsort", "d[].apply", "functools.partial", "functools.partial", "data.fillna.reset_index().groupby", "list", "range", "list", "data.fillna.reset_index", "range"], "function", ["None"], ["", "def", "compute_ci_format_table", "(", "data", ",", "reverse_sort", "=", "False", ",", "dp", "=", "3", ",", "ci", "=", "None", ",", "stds", "=", "None", ")", ":", "\n", "    ", "data", "=", "data", ".", "copy", "(", ")", "\n", "contents", "=", "{", "\n", "k", ":", "[", "\n", "\"mean\"", ",", "\n", "partial", "(", "lower_ci", ",", "ci", "=", "ci", ",", "stds", "=", "stds", ")", ",", "\n", "partial", "(", "upper_ci", ",", "ci", "=", "ci", ",", "stds", "=", "stds", ")", ",", "\n", "\"count\"", ",", "\n", "]", "\n", "for", "k", "in", "data", ".", "columns", "\n", "}", "\n", "\n", "gb", "=", "list", "(", "data", ".", "index", ".", "names", ")", "\n", "data", "=", "data", ".", "reset_index", "(", ")", ".", "groupby", "(", "gb", ")", ".", "agg", "(", "contents", ")", "\n", "# propogate mean into missing CI columns", "\n", "data", "=", "data", ".", "fillna", "(", "axis", "=", "1", ",", "method", "=", "\"ffill\"", ")", "\n", "\n", "for", "n", ",", "d", "in", "data", ".", "T", ".", "groupby", "(", "level", "=", "list", "(", "range", "(", "data", ".", "T", ".", "index", ".", "nlevels", "-", "1", ")", ")", ")", ":", "\n", "\n", "        ", "d", "=", "d", ".", "T", "\n", "d", ".", "columns", "=", "d", ".", "columns", ".", "droplevel", "(", "level", "=", "list", "(", "range", "(", "data", ".", "T", ".", "index", ".", "nlevels", "-", "1", ")", ")", ")", "\n", "sorted_idx", "=", "np", ".", "argsort", "(", "d", "[", "\"mean\"", "]", ".", "values", ")", "\n", "best_idx", "=", "sorted_idx", "[", "0", "]", "if", "reverse_sort", "else", "sorted_idx", "[", "-", "1", "]", "\n", "in_best_ci", "=", "(", "\n", "d", "[", "\"lower_ci\"", "]", ">=", "d", ".", "iloc", "[", "best_idx", "]", "[", "\"upper_ci\"", "]", "\n", "if", "reverse_sort", "\n", "else", "d", "[", "\"upper_ci\"", "]", ">=", "d", ".", "iloc", "[", "best_idx", "]", "[", "\"lower_ci\"", "]", "\n", ")", "\n", "\n", "d", "[", "\"mean\"", "]", "=", "d", "[", "\"mean\"", "]", ".", "apply", "(", "lambda", "x", ":", "f\"{x:0.2f}\"", ")", "\n", "d", "[", "\"ci\"", "]", "=", "(", "d", "[", "\"upper_ci\"", "]", "-", "d", "[", "\"lower_ci\"", "]", ")", ".", "apply", "(", "lambda", "x", ":", "f\"{x:0.2f}\"", ")", "\n", "d", "[", "\"text\"", "]", "=", "\"{\"", "+", "d", "[", "\"mean\"", "]", "+", "\"$\\pm$\"", "+", "d", "[", "\"ci\"", "]", "+", "\"}\"", "\n", "d", ".", "loc", "[", "in_best_ci", ",", "\"text\"", "]", "=", "\"\\\\textbf\"", "+", "d", "[", "in_best_ci", "]", "[", "\"text\"", "]", "\n", "# d[\"text\"] = \"$\" + d[\"text\"] + \"$\"", "\n", "\n", "data", ".", "loc", "[", ":", ",", "(", "*", "n", ",", "\"text\"", ")", "]", "=", "d", "[", "\"text\"", "]", "\n", "\n", "", "return", "data", ".", "xs", "(", "\"text\"", ",", "level", "=", "data", ".", "columns", ".", "nlevels", "-", "1", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.None.mnist_make_tables_plots.drop_borked_runs": [[1114, 1135], ["data.copy.copy", "[].drop_duplicates"], "function", ["None"], ["def", "drop_borked_runs", "(", "\n", "data", ",", "\n", "keys", "=", "[", "\n", "\"test log likelihood\"", ",", "\n", "\"MNIST\"", ",", "\n", "\"rotMNIST\"", ",", "\n", "\"extrapolate MNIST\"", ",", "\n", "\"extrapolate rotMNIST\"", ",", "\n", "\"validation log likelihood\"", ",", "\n", "]", ",", "\n", "report_cols", "=", "[", "\"Model\"", ",", "\"Padding mode\"", ",", "\"seed\"", ",", "\"Type\"", "]", ",", "\n", "threshold", "=", "0", ",", "\n", ")", ":", "\n", "    ", "data", "=", "data", ".", "copy", "(", ")", "\n", "inds", "=", "[", "data", "[", "key", "]", "<", "threshold", "for", "key", "in", "keys", "]", "\n", "drop_index", "=", "inds", "[", "0", "]", "\n", "for", "ind", "in", "inds", "[", "1", ":", "]", ":", "\n", "        ", "drop_index", "=", "drop_index", "|", "ind", "\n", "", "report", "=", "data", "[", "report_cols", "]", "[", "drop_index", "]", ".", "drop_duplicates", "(", ")", "\n", "data", "=", "data", "[", "~", "drop_index", "]", "\n", "return", "data", ",", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.rkhs_embedding.DiscretisedRKHSEmbedding.__init__": [[9, 18], ["torch.Module.__init__", "rkhs_embedding.DiscretisedRKHSEmbedding.set_grid"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.rkhs_embedding.DiscretisedRKHSEmbedding.set_grid"], ["    ", "def", "__init__", "(", "self", ",", "grid_ranges", ",", "n_axes", ",", "dim", ",", "kernel", ",", "normalise", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "dim", "==", "kernel", ".", "input_dim", "\n", "\n", "self", ".", "kernel", "=", "kernel", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "normalise", "=", "normalise", "\n", "self", ".", "set_grid", "(", "grid_ranges", ",", "n_axes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.rkhs_embedding.DiscretisedRKHSEmbedding.set_grid": [[19, 58], ["isinstance", "isinstance", "len", "len", "steer_cnp.utils.grid_2d", "steer_cnp.utils.grid_3d", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.grid_2d", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.grid_3d"], ["", "def", "set_grid", "(", "self", ",", "grid_ranges", ",", "n_axes", ")", ":", "\n", "# if passed one range, expand the grid ranges to cover all dims", "\n", "        ", "if", "not", "isinstance", "(", "grid_ranges", "[", "0", "]", ",", "list", ")", ":", "\n", "            ", "grid_ranges", "=", "[", "grid_ranges", "]", "*", "self", ".", "dim", "\n", "\n", "", "if", "not", "isinstance", "(", "n_axes", ",", "list", ")", ":", "\n", "            ", "n_axes", "=", "[", "n_axes", "]", "*", "self", ".", "dim", "\n", "\n", "", "assert", "len", "(", "grid_ranges", ")", "==", "self", ".", "dim", "\n", "assert", "len", "(", "n_axes", ")", "==", "self", ".", "dim", "\n", "\n", "self", ".", "grid_ranges", "=", "grid_ranges", "\n", "self", ".", "n_axes", "=", "n_axes", "\n", "\n", "if", "self", ".", "dim", "==", "2", ":", "\n", "            ", "self", ".", "grid", "=", "grid_2d", "(", "\n", "min_x", "=", "grid_ranges", "[", "0", "]", "[", "0", "]", ",", "\n", "max_x", "=", "grid_ranges", "[", "0", "]", "[", "1", "]", ",", "\n", "min_y", "=", "grid_ranges", "[", "1", "]", "[", "0", "]", ",", "\n", "max_y", "=", "grid_ranges", "[", "1", "]", "[", "1", "]", ",", "\n", "n_xaxis", "=", "n_axes", "[", "0", "]", ",", "\n", "n_yaxis", "=", "n_axes", "[", "1", "]", ",", "\n", "flatten", "=", "True", ",", "\n", ")", "\n", "", "elif", "self", ".", "dim", "==", "3", ":", "\n", "            ", "self", ".", "grid", "=", "grid_3d", "(", "\n", "min_x", "=", "grid_ranges", "[", "0", "]", "[", "0", "]", ",", "\n", "max_x", "=", "grid_ranges", "[", "0", "]", "[", "1", "]", ",", "\n", "min_y", "=", "grid_ranges", "[", "1", "]", "[", "0", "]", ",", "\n", "max_y", "=", "grid_ranges", "[", "1", "]", "[", "1", "]", ",", "\n", "min_z", "=", "grid_ranges", "[", "1", "]", "[", "0", "]", ",", "\n", "max_z", "=", "grid_ranges", "[", "1", "]", "[", "1", "]", ",", "\n", "n_xaxis", "=", "n_axes", "[", "0", "]", ",", "\n", "n_yaxis", "=", "n_axes", "[", "1", "]", ",", "\n", "n_zaxis", "=", "n_axes", "[", "1", "]", ",", "\n", "flatten", "=", "True", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Not implemented for dimension {self.dim}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.rkhs_embedding.DiscretisedRKHSEmbedding.forward": [[59, 79], ["rkhs_embedding.DiscretisedRKHSEmbedding.grid.to", "steer_cnp.utils.expand_with_ones", "steer_cnp.kernel.kernel_smooth", "rkhs_embedding.DiscretisedRKHSEmbedding.grid.unsqueeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rkhs_embedding.DiscretisedRKHSEmbedding.grid.unsqueeze", "Y_grid[].unsqueeze", "Y_grid[].unsqueeze"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.expand_with_ones", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.smooth.kernel_smooth"], ["", "", "def", "forward", "(", "self", ",", "X", ",", "Y", ")", ":", "\n", "# make sure grid is on the right device.", "\n", "        ", "self", ".", "grid", "=", "self", ".", "grid", ".", "to", "(", "X", ".", "device", ")", "\n", "\n", "bs", ",", "n", ",", "_", "=", "X", ".", "shape", "\n", "\n", "Y", "=", "expand_with_ones", "(", "Y", ")", "\n", "\n", "# print(\"RKHS: \", X.device, Y.device, self.grid.device)", "\n", "\n", "Y_grid", "=", "kernel_smooth", "(", "X", ",", "Y", ",", "self", ".", "grid", ".", "unsqueeze", "(", "0", ")", ",", "self", ".", "kernel", ")", "\n", "\n", "if", "self", ".", "normalise", ":", "\n", "# Annoying method to avoid in place operation errors in backward pass", "\n", "            ", "Y_features", "=", "torch", ".", "zeros_like", "(", "Y_grid", "[", ":", ",", ":", ",", "1", ":", "]", ")", "\n", "Y_features", "=", "Y_grid", "[", ":", ",", ":", ",", "1", ":", "]", "/", "(", "Y_grid", "[", ":", ",", ":", ",", "0", "]", ".", "unsqueeze", "(", "-", "1", ")", "+", "1e-6", ")", "\n", "\n", "Y_grid", "=", "torch", ".", "cat", "(", "[", "Y_grid", "[", ":", ",", ":", ",", "0", "]", ".", "unsqueeze", "(", "-", "1", ")", ",", "Y_features", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "return", "self", ".", "grid", ".", "unsqueeze", "(", "0", ")", ",", "Y_grid", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.cnp.CNP.__init__": [[10, 52], ["torch.Module.__init__", "steer_cnp.utils.MLP", "steer_cnp.utils.MLP", "torch.Sequential", "torch.Sequential", "steer_cnp.utils.MLP"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.nn.MLP", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.nn.MLP", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.nn.MLP"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "x_dim", ",", "\n", "context_dim", ",", "\n", "embedding_dim", ",", "\n", "prediction_dim", ",", "\n", "encoder_hidden_dims", ",", "\n", "x_encoder_hidden_dims", ",", "\n", "decoder_hidden_dims", ",", "\n", "covariance_activation_function", ",", "\n", "min_cov", ",", "\n", "batch_norm", "=", "False", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "x_encoder_hidden_dims", "is", "None", ":", "\n", "            ", "self", ".", "x_encoder", "=", "nn", ".", "Sequential", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "x_encoder", "=", "MLP", "(", "\n", "x_dim", ",", "\n", "x_encoder_hidden_dims", ",", "\n", "x_encoder_hidden_dims", "[", "-", "1", "]", ",", "\n", "batch_norm", "=", "batch_norm", ",", "\n", ")", "\n", "x_dim", "=", "x_encoder_hidden_dims", "[", "-", "1", "]", "\n", "\n", "", "self", ".", "encoder", "=", "MLP", "(", "\n", "x_dim", "+", "context_dim", ",", "\n", "encoder_hidden_dims", ",", "\n", "embedding_dim", ",", "\n", "batch_norm", "=", "batch_norm", ",", "\n", ")", "\n", "\n", "self", ".", "decoder", "=", "MLP", "(", "\n", "x_dim", "+", "embedding_dim", ",", "\n", "decoder_hidden_dims", ",", "\n", "prediction_dim", "+", "prediction_dim", ",", "\n", "batch_norm", "=", "batch_norm", ",", "\n", ")", "\n", "self", ".", "prediction_dim", "=", "prediction_dim", "\n", "self", ".", "covariance_activation_function", "=", "covariance_activation_function", "\n", "self", ".", "min_cov", "=", "min_cov", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.cnp.CNP.encode": [[68, 72], ["cnp.CNP.encoder().mean", "cnp.CNP.encoder", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cnp.CNP.x_encoder", "X_context.float"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "X_context", ",", "Y_context", ")", ":", "\n", "        ", "return", "self", ".", "encoder", "(", "\n", "torch", ".", "cat", "(", "[", "self", ".", "x_encoder", "(", "X_context", ".", "float", "(", ")", ")", ",", "Y_context", "]", ",", "dim", "=", "-", "1", ")", "\n", ")", ".", "mean", "(", "dim", "=", "-", "2", ",", "keepdim", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.cnp.CNP.decode": [[73, 94], ["cnp.CNP.decoder", "cnp.CNP.covariance_activation_function", "einops.rearrange", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "embeddings.expand", "cnp.CNP.x_encoder", "X_target.float", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "embeddings", ",", "X_target", ")", ":", "\n", "        ", "decoded", "=", "self", ".", "decoder", "(", "\n", "torch", ".", "cat", "(", "\n", "[", "\n", "embeddings", ".", "expand", "(", "-", "1", ",", "X_target", ".", "shape", "[", "-", "2", "]", ",", "-", "1", ")", ",", "\n", "self", ".", "x_encoder", "(", "X_target", ".", "float", "(", ")", ")", ",", "\n", "]", ",", "\n", "dim", "=", "-", "1", ",", "\n", ")", ",", "\n", ")", "\n", "means", "=", "decoded", "[", "...", ",", ":", "self", ".", "prediction_dim", "]", "\n", "covs", "=", "self", ".", "covariance_activation_function", "(", "decoded", "[", "...", ",", "self", ".", "prediction_dim", ":", "]", ")", "\n", "covs", "=", "rearrange", "(", "\n", "covs", ",", "\n", "\"b n (d1 d2) -> b n d1 d2\"", ",", "\n", "d1", "=", "self", ".", "prediction_dim", ",", "\n", "d2", "=", "self", ".", "prediction_dim", ",", "\n", ")", "\n", "covs", "=", "covs", "+", "torch", ".", "eye", "(", "self", ".", "prediction_dim", ")", ".", "to", "(", "decoded", ".", "device", ")", "*", "self", ".", "min_cov", "\n", "\n", "return", "means", ",", "covs", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.cnp.CNP.forward": [[95, 97], ["cnp.CNP.decode", "cnp.CNP.encode"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.decode", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.encode"], ["", "def", "forward", "(", "self", ",", "X_context", ",", "Y_context", ",", "X_target", ")", ":", "\n", "        ", "return", "self", ".", "decode", "(", "self", ".", "encode", "(", "X_context", ",", "Y_context", ")", ",", "X_target", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.steer_cnp.SteerCNP.__init__": [[11, 24], ["steer_cnp.equiv_deepsets.EquivDeepSet.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "prediction_dim", ",", "\n", "covariance_activation_function", ",", "\n", "min_cov", "=", "0.0", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "\n", "        ", "super", "(", "SteerCNP", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "prediction_dim", "=", "prediction_dim", "\n", "self", ".", "covariance_activation_function", "=", "covariance_activation_function", "\n", "self", ".", "min_cov", "=", "min_cov", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.steer_cnp.SteerCNP.decode": [[25, 63], ["steer_cnp.SteerCNP.stack_to_grid", "steer_cnp.SteerCNP.cnn", "steer_cnp.SteerCNP.grid_to_stack", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "steer_cnp.kernel.kernel_smooth", "einops.rearrange", "steer_cnp.SteerCNP.covariance_activation_function", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.smooth.kernel_smooth"], ["", "def", "decode", "(", "self", ",", "X_grid", ",", "Y_grid", ",", "X_target", ")", ":", "\n", "# reshape Y_grid to go through the CNN", "\n", "        ", "Y_grid", "=", "self", ".", "stack_to_grid", "(", "Y_grid", ")", "\n", "# pass Y's through the CNN", "\n", "Y_grid", "=", "self", ".", "cnn", "(", "Y_grid", ")", "\n", "# reshape Y's back to a stack", "\n", "Y_grid", "=", "self", ".", "grid_to_stack", "(", "Y_grid", ")", "\n", "# apply the covariance activation function to the covariances", "\n", "Y_grid", "=", "torch", ".", "cat", "(", "\n", "[", "\n", "Y_grid", "[", ":", ",", ":", ",", ":", "self", ".", "prediction_dim", "]", ",", "\n", "self", ".", "covariance_activation_function", "(", "\n", "Y_grid", "[", ":", ",", ":", ",", "self", ".", "prediction_dim", ":", "]", "\n", ")", ",", "\n", "]", ",", "\n", "dim", "=", "-", "1", ",", "\n", ")", "\n", "# kernel smooth the outputs to the target points", "\n", "Y_target", "=", "kernel_smooth", "(", "\n", "X_grid", ",", "\n", "Y_grid", ",", "\n", "X_target", ",", "\n", "self", ".", "output_kernel", ",", "\n", "normalise", "=", "self", ".", "normalise_output", ",", "\n", ")", "\n", "# split the output into mean and covariance, and reshape the covariances.", "\n", "Y_mean", "=", "Y_target", "[", ":", ",", ":", ",", ":", "self", ".", "prediction_dim", "]", "\n", "Y_cov", "=", "rearrange", "(", "\n", "Y_target", "[", ":", ",", ":", ",", "self", ".", "prediction_dim", ":", "]", ",", "\n", "\"b m (d1 d2) -> b m d1 d2\"", ",", "\n", "d1", "=", "self", ".", "prediction_dim", ",", "\n", "d2", "=", "self", ".", "prediction_dim", ",", "\n", ")", "\n", "# add on a minimum covariance", "\n", "Y_cov", "=", "Y_cov", "+", "(", "\n", "torch", ".", "eye", "(", "self", ".", "prediction_dim", ")", ".", "to", "(", "Y_target", ".", "device", ")", "*", "self", ".", "min_cov", "\n", ")", "\n", "return", "Y_mean", ",", "Y_cov", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.EquivDeepSet.__init__": [[11, 59], ["torch.Module.__init__", "steer_cnp.rkhs_embedding.DiscretisedRKHSEmbedding", "torch.Sequential", "steer_cnp.utils.Expression", "einops.rearrange", "einops.rearrange", "NotImplementedError", "equiv_deepsets.EquivDeepSet.discrete_rkhs_embedder", "einops.rearrange", "einops.rearrange"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "grid_ranges", ",", "\n", "n_axes", ",", "\n", "embedding_kernel", ",", "\n", "normalise_embedding", ",", "\n", "normalise_output", ",", "\n", "cnn", ",", "\n", "output_kernel", ",", "\n", "dim", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dim", "=", "dim", "\n", "\n", "self", ".", "cnn", "=", "cnn", "\n", "self", ".", "output_kernel", "=", "output_kernel", "\n", "self", ".", "normalise_output", "=", "normalise_output", "\n", "\n", "self", ".", "discrete_rkhs_embedder", "=", "DiscretisedRKHSEmbedding", "(", "\n", "grid_ranges", ",", "n_axes", ",", "dim", ",", "embedding_kernel", ",", "normalise_embedding", "\n", ")", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "Expression", "(", "lambda", "inpt", ":", "self", ".", "discrete_rkhs_embedder", "(", "*", "inpt", ")", ")", ",", "\n", ")", "\n", "\n", "if", "dim", "==", "2", ":", "\n", "            ", "self", ".", "stack_to_grid", "=", "lambda", "Y", ":", "rearrange", "(", "\n", "Y", ",", "\n", "\"b (m1 m2) d -> b d m2 m1\"", ",", "\n", "m1", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "0", "]", ",", "\n", "m2", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "1", "]", ",", "\n", ")", "\n", "self", ".", "grid_to_stack", "=", "lambda", "Y", ":", "rearrange", "(", "Y", ",", "\"b d m2 m1 -> b (m1 m2) d\"", ")", "\n", "", "elif", "dim", "==", "3", ":", "\n", "            ", "self", ".", "stack_to_grid", "=", "lambda", "Y", ":", "rearrange", "(", "\n", "Y", ",", "\n", "\"b (m1 m2 m3) d -> b m1 m2 m3 d\"", ",", "\n", "m1", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "0", "]", ",", "\n", "m2", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "1", "]", ",", "\n", "m3", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "2", "]", ",", "\n", ")", "\n", "self", ".", "grid_to_stack", "=", "lambda", "Y", ":", "rearrange", "(", "\n", "Y", ",", "\"b m1 m2 m3 d -> b (m1 m2 m3) d\"", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Not implemented for dim = {dim}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.EquivDeepSet.encode": [[60, 63], ["equiv_deepsets.EquivDeepSet.discrete_rkhs_embedder"], "methods", ["None"], ["", "", "def", "encode", "(", "self", ",", "X_context", ",", "Y_context", ")", ":", "\n", "# Embed the context set into a discrete gridded RKHS", "\n", "        ", "return", "self", ".", "discrete_rkhs_embedder", "(", "X_context", ",", "Y_context", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.EquivDeepSet.decode": [[64, 74], ["equiv_deepsets.EquivDeepSet.stack_to_grid", "equiv_deepsets.EquivDeepSet.cnn", "equiv_deepsets.EquivDeepSet.grid_to_stack", "steer_cnp.kernel.kernel_smooth"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.smooth.kernel_smooth"], ["", "def", "decode", "(", "self", ",", "X_grid", ",", "Y_grid", ",", "X_target", ")", ":", "\n", "# reshape Y_grid to go through the CNN", "\n", "        ", "Y_grid", "=", "self", ".", "stack_to_grid", "(", "Y_grid", ")", "\n", "# pass Y's through the CNN", "\n", "Y_grid", "=", "self", ".", "cnn", "(", "Y_grid", ")", "\n", "# reshape Y's back to a stack", "\n", "Y_grid", "=", "self", ".", "grid_to_stack", "(", "Y_grid", ")", "\n", "# kernel smooth the outputs to the target points", "\n", "return", "kernel_smooth", "(", "\n", "X_grid", ",", "Y_grid", ",", "X_target", ",", "self", ".", "output_kernel", ",", "self", ".", "normalise_output", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.EquivDeepSet.forward": [[76, 78], ["equiv_deepsets.EquivDeepSet.decode", "equiv_deepsets.EquivDeepSet.encode"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.decode", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.encode"], ["", "def", "forward", "(", "self", ",", "X_context", ",", "Y_context", ",", "X_target", ")", ":", "\n", "        ", "return", "self", ".", "decode", "(", "*", "self", ".", "encode", "(", "X_context", ",", "Y_context", ")", ",", "X_target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.__init__": [[81, 129], ["torch.Module.__init__", "steer_cnp.rkhs_embedding.DiscretisedRKHSEmbedding", "torch.Sequential", "steer_cnp.utils.Expression", "einops.rearrange", "einops.rearrange", "NotImplementedError", "equiv_deepsets.OnGridEquivDeepSet.discrete_rkhs_embedder", "einops.rearrange", "einops.rearrange"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "grid_ranges", ",", "\n", "n_axes", ",", "\n", "embedding_kernel", ",", "\n", "normalise_embedding", ",", "\n", "normalise_output", ",", "\n", "cnn", ",", "\n", "output_kernel", ",", "\n", "dim", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dim", "=", "dim", "\n", "\n", "self", ".", "cnn", "=", "cnn", "\n", "self", ".", "output_kernel", "=", "output_kernel", "\n", "self", ".", "normalise_output", "=", "normalise_output", "\n", "\n", "self", ".", "discrete_rkhs_embedder", "=", "DiscretisedRKHSEmbedding", "(", "\n", "grid_ranges", ",", "n_axes", ",", "dim", ",", "embedding_kernel", ",", "normalise_embedding", "\n", ")", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "Expression", "(", "lambda", "inpt", ":", "self", ".", "discrete_rkhs_embedder", "(", "*", "inpt", ")", ")", ",", "\n", ")", "\n", "\n", "if", "dim", "==", "2", ":", "\n", "            ", "self", ".", "stack_to_grid", "=", "lambda", "Y", ":", "rearrange", "(", "\n", "Y", ",", "\n", "\"b (m1 m2) d -> b d m2 m1\"", ",", "\n", "m1", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "0", "]", ",", "\n", "m2", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "1", "]", ",", "\n", ")", "\n", "self", ".", "grid_to_stack", "=", "lambda", "Y", ":", "rearrange", "(", "Y", ",", "\"b d m2 m1 -> b (m1 m2) d\"", ")", "\n", "", "elif", "dim", "==", "3", ":", "\n", "            ", "self", ".", "stack_to_grid", "=", "lambda", "Y", ":", "rearrange", "(", "\n", "Y", ",", "\n", "\"b (m1 m2 m3) d -> b m1 m2 m3 d\"", ",", "\n", "m1", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "0", "]", ",", "\n", "m2", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "1", "]", ",", "\n", "m3", "=", "self", ".", "discrete_rkhs_embedder", ".", "n_axes", "[", "2", "]", ",", "\n", ")", "\n", "self", ".", "grid_to_stack", "=", "lambda", "Y", ":", "rearrange", "(", "\n", "Y", ",", "\"b m1 m2 m3 d -> b (m1 m2 m3) d\"", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Not implemented for dim = {dim}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.encode": [[130, 133], ["equiv_deepsets.OnGridEquivDeepSet.discrete_rkhs_embedder"], "methods", ["None"], ["", "", "def", "encode", "(", "self", ",", "X_context", ",", "Y_context", ")", ":", "\n", "# Embed the context set into a discrete gridded RKHS", "\n", "        ", "return", "self", ".", "discrete_rkhs_embedder", "(", "X_context", ",", "Y_context", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.decode": [[134, 144], ["equiv_deepsets.OnGridEquivDeepSet.stack_to_grid", "equiv_deepsets.OnGridEquivDeepSet.cnn", "equiv_deepsets.OnGridEquivDeepSet.grid_to_stack", "steer_cnp.kernel.kernel_smooth"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.smooth.kernel_smooth"], ["", "def", "decode", "(", "self", ",", "X_grid", ",", "Y_grid", ",", "X_target", ")", ":", "\n", "# reshape Y_grid to go through the CNN", "\n", "        ", "Y_grid", "=", "self", ".", "stack_to_grid", "(", "Y_grid", ")", "\n", "# pass Y's through the CNN", "\n", "Y_grid", "=", "self", ".", "cnn", "(", "Y_grid", ")", "\n", "# reshape Y's back to a stack", "\n", "Y_grid", "=", "self", ".", "grid_to_stack", "(", "Y_grid", ")", "\n", "# kernel smooth the outputs to the target points", "\n", "return", "kernel_smooth", "(", "\n", "X_grid", ",", "Y_grid", ",", "X_target", ",", "self", ".", "output_kernel", ",", "self", ".", "normalise_output", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.forward": [[146, 148], ["equiv_deepsets.OnGridEquivDeepSet.decode", "equiv_deepsets.OnGridEquivDeepSet.encode"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.decode", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.equiv_deepsets.OnGridEquivDeepSet.encode"], ["", "def", "forward", "(", "self", ",", "X_context", ",", "Y_context", ",", "X_target", ")", ":", "\n", "        ", "return", "self", ".", "decode", "(", "*", "self", ".", "encode", "(", "X_context", ",", "Y_context", ")", ",", "X_target", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.covariance_activations.quadratic_covariance_activation": [[9, 29], ["int", "einops.rearrange", "einops.rearrange", "math.sqrt", "einops.rearrange.transpose"], "function", ["None"], ["def", "quadratic_covariance_activation", "(", "pre_activation", ",", "epsilon", "=", "1e-6", ")", ":", "\n", "    ", "\"\"\"Computes the quadratic covariance activation function\n\n    Parameters\n    ----------\n    pre_activation : torch.Tensor\n        A (bs, n, sigma_dim**2) tensor\n    epsilon : Numerical tolerance parameter to add, optional, by default 1e-6\n    \"\"\"", "\n", "\n", "_", ",", "_", ",", "d2", "=", "pre_activation", ".", "shape", "\n", "d", "=", "int", "(", "math", ".", "sqrt", "(", "d2", ")", ")", "\n", "\n", "pre_activation", "=", "rearrange", "(", "pre_activation", ",", "\"b n (d1 d2) -> b n d2 d1\"", ",", "d1", "=", "d", ",", "d2", "=", "d", ")", "\n", "\n", "covariance", "=", "pre_activation", "@", "pre_activation", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "\n", "# covariance = covariance + (torch.eye(d) * epsilon)", "\n", "\n", "return", "rearrange", "(", "covariance", ",", "\"b n d2 d1 -> b n (d1 d2)\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.covariance_activations.diagonal_quadratic_covariance_activation": [[31, 34], ["torch.diag_embed().view", "torch.diag_embed().view", "torch.diag_embed", "torch.diag_embed", "pre_activation.pow"], "function", ["None"], ["", "def", "diagonal_quadratic_covariance_activation", "(", "pre_activation", ")", ":", "\n", "    ", "b", ",", "n", ",", "_", "=", "pre_activation", ".", "shape", "\n", "return", "torch", ".", "diag_embed", "(", "pre_activation", ".", "pow", "(", "2", ")", ")", ".", "view", "(", "b", ",", "n", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.covariance_activations.diagonal_softplus_covariance_activation": [[36, 39], ["torch.diag_embed().view", "torch.diag_embed().view", "torch.diag_embed", "torch.diag_embed", "torch.softplus"], "function", ["None"], ["", "def", "diagonal_softplus_covariance_activation", "(", "pre_activation", ",", "min_var", "=", "0.0", ")", ":", "\n", "    ", "b", ",", "n", ",", "_", "=", "pre_activation", ".", "shape", "\n", "return", "torch", ".", "diag_embed", "(", "min_var", "+", "F", ".", "softplus", "(", "pre_activation", ")", ")", ".", "view", "(", "b", ",", "n", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.covariance_activations.diagonal_quadratic_softplus_covariance_activation": [[41, 45], ["torch.diag_embed().view", "torch.diag_embed().view", "torch.diag_embed", "torch.diag_embed", "torch.softplus"], "function", ["None"], ["", "def", "diagonal_quadratic_softplus_covariance_activation", "(", "pre_activation", ",", "min_sigma", "=", "0.0", ")", ":", "\n", "    ", "b", ",", "n", ",", "_", "=", "pre_activation", ".", "shape", "\n", "return", "torch", ".", "diag_embed", "(", "(", "min_sigma", "+", "F", ".", "softplus", "(", "pre_activation", ")", ")", ".", "pow", "(", "2", ")", ")", ".", "view", "(", "\n", "b", ",", "n", ",", "-", "1", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.representations.reps_from_ids": [[1, 22], ["irreps.append", "irreps.append", "isinstance", "irreps.append", "irreps.append", "gspace.irrep", "gspace.irrep"], "function", ["None"], ["def", "reps_from_ids", "(", "gspace", ",", "ids", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        gspace - the gspace to get the irreps from\n        ids - list - elements 0,-11 stand for trivial and regular rep,\n                            elements k=1,2,3,4,... for irrep(k) if self.flip is false,\n                            elements [l,k] for l=0,1; k=1,2,3,4,... if self.flip is true\n    Output: list of irreducible representations\n    \"\"\"", "\n", "irreps", "=", "[", "]", "\n", "for", "id", "in", "ids", ":", "\n", "        ", "if", "id", "==", "0", ":", "\n", "            ", "irreps", ".", "append", "(", "gspace", ".", "trivial_repr", ")", "\n", "", "elif", "id", "==", "-", "1", ":", "\n", "            ", "irreps", ".", "append", "(", "gspace", ".", "regular_repr", ")", "\n", "", "elif", "isinstance", "(", "id", ",", "int", ")", ":", "\n", "            ", "irreps", ".", "append", "(", "gspace", ".", "irrep", "(", "id", ")", ")", "\n", "", "else", ":", "\n", "            ", "irreps", ".", "append", "(", "gspace", ".", "irrep", "(", "*", "id", ")", ")", "\n", "\n", "", "", "return", "irreps", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_scalar_field": [[18, 42], ["numpy.meshgrid", "matplotlib.Triangulation", "matplotlib.LinearTriInterpolator", "tri.LinearTriInterpolator.", "ax.contourf", "matplotlib.subplots", "numpy.linspace", "numpy.linspace", "X[].min", "X[].max", "X[].min", "X[].max"], "function", ["None"], ["def", "plot_scalar_field", "(", "\n", "X", ",", "\n", "Y", ",", "\n", "ax", "=", "None", ",", "\n", "colormap", "=", "\"viridis\"", ",", "\n", "zorder", "=", "1", ",", "\n", "n_axis", "=", "50", ",", "\n", "levels", "=", "8", ",", "\n", ")", ":", "\n", "    ", "if", "ax", "==", "None", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "\n", "", "X_1", ",", "X_2", "=", "np", ".", "meshgrid", "(", "\n", "np", ".", "linspace", "(", "X", "[", ":", ",", "0", "]", ".", "min", "(", ")", ",", "X", "[", ":", ",", "0", "]", ".", "max", "(", ")", ",", "num", "=", "n_axis", ")", ",", "\n", "np", ".", "linspace", "(", "X", "[", ":", ",", "1", "]", ".", "min", "(", ")", ",", "X", "[", ":", ",", "1", "]", ".", "max", "(", ")", ",", "num", "=", "n_axis", ")", ",", "\n", ")", "\n", "\n", "triang", "=", "tri", ".", "Triangulation", "(", "X", "[", ":", ",", "0", "]", ",", "X", "[", ":", ",", "1", "]", ")", "\n", "interpolator", "=", "tri", ".", "LinearTriInterpolator", "(", "triang", ",", "Y", ")", "\n", "Z", "=", "interpolator", "(", "X_1", ",", "X_2", ")", "\n", "\n", "ax", ".", "contourf", "(", "X_1", ",", "X_2", ",", "Z", ",", "cmap", "=", "colormap", ",", "zorder", "=", "zorder", ",", "levels", "=", "levels", ")", "\n", "\n", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field": [[44, 78], ["matplotlib.subplots", "ax.quiver", "ax.quiver", "numpy.hypot"], "function", ["None"], ["", "def", "plot_vector_field", "(", "\n", "X", ",", "Y", ",", "ax", "=", "None", ",", "color", "=", "None", ",", "scale", "=", "15", ",", "width", "=", "None", ",", "label", "=", "None", ",", "zorder", "=", "1", "\n", ")", ":", "\n", "    ", "if", "ax", "==", "None", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "\n", "", "if", "color", "is", "None", ":", "\n", "        ", "ax", ".", "quiver", "(", "\n", "X", "[", ":", ",", "0", "]", ",", "\n", "X", "[", ":", ",", "1", "]", ",", "\n", "Y", "[", ":", ",", "0", "]", ",", "\n", "Y", "[", ":", ",", "1", "]", ",", "\n", "np", ".", "hypot", "(", "Y", "[", ":", ",", "0", "]", ",", "Y", "[", ":", ",", "1", "]", ")", ",", "\n", "scale", "=", "scale", ",", "\n", "width", "=", "width", ",", "\n", "label", "=", "label", ",", "\n", "zorder", "=", "zorder", ",", "\n", "pivot", "=", "\"mid\"", ",", "\n", ")", "\n", "", "else", ":", "\n", "        ", "ax", ".", "quiver", "(", "\n", "X", "[", ":", ",", "0", "]", ",", "\n", "X", "[", ":", ",", "1", "]", ",", "\n", "Y", "[", ":", ",", "0", "]", ",", "\n", "Y", "[", ":", ",", "1", "]", ",", "\n", "color", "=", "color", ",", "\n", "scale", "=", "scale", ",", "\n", "width", "=", "width", ",", "\n", "label", "=", "label", ",", "\n", "zorder", "=", "zorder", ",", "\n", "pivot", "=", "\"mid\"", ",", "\n", ")", "\n", "\n", "", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_covariances": [[80, 142], ["range", "matplotlib.subplots", "ax.get_xlim", "ax.get_ylim", "X.size", "torch.eig", "torch.sqrt", "matplotlib.patches.Ellipse", "ax.add_patch", "matplotlib.patches.Ellipse", "len", "torch.diag", "print", "torch.diag.size", "torch.atan", "X[].numpy"], "function", ["None"], ["", "def", "plot_covariances", "(", "\n", "X", ",", "\n", "covariances", ",", "\n", "ax", "=", "None", ",", "\n", "alpha", "=", "0.5", ",", "\n", "color", "=", "\"cyan\"", ",", "\n", "edgecolor", "=", "\"k\"", ",", "\n", "scale", "=", "0.8", ",", "\n", "label", "=", "None", ",", "\n", "zorder", "=", "0", ",", "\n", ")", ":", "\n", "    ", "if", "ax", "==", "None", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "x_lim", "=", "None", "\n", "y_lim", "=", "None", "\n", "", "else", ":", "\n", "        ", "x_lim", "=", "ax", ".", "get_xlim", "(", ")", "\n", "y_lim", "=", "ax", ".", "get_ylim", "(", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "X", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "A", "=", "covariances", "[", "i", "]", "\n", "if", "len", "(", "A", ".", "size", "(", ")", ")", "==", "1", ":", "\n", "            ", "A", "=", "torch", ".", "diag", "(", "A", ")", "\n", "\n", "", "eigen_decomp", "=", "torch", ".", "eig", "(", "A", ",", "eigenvectors", "=", "True", ")", "\n", "u", "=", "eigen_decomp", "[", "1", "]", "[", ":", ",", "0", "]", "\n", "\n", "angle", "=", "360", "*", "torch", ".", "atan", "(", "u", "[", "1", "]", "/", "u", "[", "0", "]", ")", "/", "(", "2", "*", "math", ".", "pi", ")", "\n", "\n", "if", "(", "eigen_decomp", "[", "0", "]", "[", ":", ",", "0", "]", "<", "0", ")", ".", "sum", "(", ")", ">", "0", ":", "\n", "            ", "print", "(", "\"Error: Ill conditioned covariance in plot. Skipping\"", ")", "\n", "continue", "\n", "\n", "# Get the width and height of the ellipses (eigenvalues of A):", "\n", "", "D", "=", "torch", ".", "sqrt", "(", "eigen_decomp", "[", "0", "]", "[", ":", ",", "0", "]", ")", "\n", "\n", "# Plot the Ellipse:", "\n", "E", "=", "Ellipse", "(", "\n", "xy", "=", "X", "[", "\n", "i", ",", "\n", "]", ".", "numpy", "(", ")", ",", "\n", "width", "=", "scale", "*", "D", "[", "0", "]", ",", "\n", "height", "=", "scale", "*", "D", "[", "1", "]", ",", "\n", "angle", "=", "angle", ",", "\n", "color", "=", "color", ",", "\n", "linewidth", "=", "1", ",", "\n", "alpha", "=", "alpha", ",", "\n", "# edgecolor=edgecolor,", "\n", "# facecolor=\"none\",", "\n", "zorder", "=", "zorder", ",", "\n", ")", "\n", "ax", ".", "add_patch", "(", "E", ")", "\n", "\n", "", "if", "label", "is", "not", "None", ":", "\n", "        ", "label_ellipse", "=", "Ellipse", "(", "\n", "color", "=", "color", ",", "\n", "edgecolor", "=", "edgecolor", ",", "\n", "alpha", "=", "alpha", ",", "\n", "label", "=", "label", ",", "\n", "xy", "=", "0", ",", "\n", "width", "=", "1", ",", "\n", "height", "=", "1", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_inference": [[145, 170], ["plotting.plot_vector_field", "matplotlib.subplots", "plotting.plot_vector_field", "plotting.plot_covariances"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_covariances"], ["", "", "def", "plot_inference", "(", "\n", "X_context", ",", "\n", "Y_context", ",", "\n", "X_prediction", ",", "\n", "mean_prediction", "=", "None", ",", "\n", "covariance_prediction", "=", "None", ",", "\n", "title", "=", "\"\"", ",", "\n", "size_scale", "=", "2", ",", "\n", "ellipse_scale", "=", "0.8", ",", "\n", "quiver_scale", "=", "60", ",", "\n", "ax", "=", "None", ",", "\n", ")", ":", "\n", "    ", "if", "ax", "==", "None", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "\n", "", "plot_vector_field", "(", "\n", "X_context", ",", "Y_context", ",", "ax", "=", "ax", ",", "color", "=", "\"red\"", ",", "scale", "=", "quiver_scale", ",", "zorder", "=", "2", "\n", ")", "\n", "if", "mean_prediction", "is", "not", "None", ":", "\n", "        ", "plot_vector_field", "(", "\n", "X_prediction", ",", "mean_prediction", ",", "ax", "=", "ax", ",", "scale", "=", "quiver_scale", ",", "zorder", "=", "1", "\n", ")", "\n", "", "if", "covariance_prediction", "is", "not", "None", ":", "\n", "        ", "plot_covariances", "(", "\n", "X_prediction", ",", "covariance_prediction", ",", "ax", ",", "scale", "=", "ellipse_scale", ",", "zorder", "=", "0", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_mean_cov": [[173, 188], ["plotting.plot_vector_field", "plotting.plot_covariances", "matplotlib.subplots"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_covariances"], ["", "", "def", "plot_mean_cov", "(", "\n", "X", ",", "\n", "Y_mean", ",", "\n", "Y_cov", ",", "\n", "title", "=", "\"\"", ",", "\n", "size_scale", "=", "2", ",", "\n", "ellipse_scale", "=", "0.8", ",", "\n", "quiver_scale", "=", "60", ",", "\n", "ax", "=", "None", ",", "\n", ")", ":", "\n", "\n", "    ", "if", "ax", "==", "None", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "", "plot_vector_field", "(", "X", ",", "Y_mean", ",", "ax", "=", "ax", ",", "scale", "=", "quiver_scale", ",", "zorder", "=", "1", ")", "\n", "plot_covariances", "(", "X", ",", "Y_cov", ",", "ax", "=", "ax", ",", "scale", "=", "ellipse_scale", ",", "zorder", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_embedding": [[190, 225], ["plotting.plot_vector_field", "plotting.plot_vector_field", "einops.rearrange", "einops.rearrange", "ax.contourf", "ax.set_aspect", "matplotlib.subplots", "int", "int", "int", "int", "matplotlib.get_cmap", "math.sqrt", "math.sqrt", "math.sqrt", "math.sqrt"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field"], ["", "def", "plot_embedding", "(", "\n", "X_context", ",", "\n", "Y_context", ",", "\n", "X_embed", ",", "\n", "Y_embed", ",", "\n", "ax", "=", "None", ",", "\n", "quiver_scale", "=", "60", ",", "\n", ")", ":", "\n", "    ", "if", "ax", "is", "None", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "", "plot_vector_field", "(", "\n", "X_context", ",", "Y_context", ",", "ax", "=", "ax", ",", "color", "=", "\"red\"", ",", "scale", "=", "quiver_scale", ",", "zorder", "=", "2", "\n", ")", "\n", "plot_vector_field", "(", "X_embed", ",", "Y_embed", "[", ":", ",", "1", ":", "]", ",", "ax", "=", "ax", ",", "scale", "=", "quiver_scale", ",", "zorder", "=", "1", ")", "\n", "\n", "n", ",", "_", "=", "X_embed", ".", "shape", "\n", "\n", "X_embed", "=", "rearrange", "(", "\n", "X_embed", ",", "\"(m1 m2) d -> m1 m2 d\"", ",", "m1", "=", "int", "(", "math", ".", "sqrt", "(", "n", ")", ")", ",", "m2", "=", "int", "(", "math", ".", "sqrt", "(", "n", ")", ")", "\n", ")", "\n", "Y_embed", "=", "rearrange", "(", "\n", "Y_embed", ",", "\"(m1 m2) d -> m1 m2 d\"", ",", "m1", "=", "int", "(", "math", ".", "sqrt", "(", "n", ")", ")", ",", "m2", "=", "int", "(", "math", ".", "sqrt", "(", "n", ")", ")", "\n", ")", "\n", "\n", "ax", ".", "contourf", "(", "\n", "X_embed", "[", ":", ",", ":", ",", "0", "]", ",", "\n", "X_embed", "[", ":", ",", ":", ",", "1", "]", ",", "\n", "Y_embed", "[", ":", ",", ":", ",", "0", "]", ",", "\n", "levels", "=", "14", ",", "\n", "linewidths", "=", "0.5", ",", "\n", "cmap", "=", "cm", ".", "get_cmap", "(", "\"viridis\"", ")", ",", "\n", "zorder", "=", "0", ",", "\n", ")", "\n", "\n", "ax", ".", "set_aspect", "(", "\"equal\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.points_to_partial_img": [[227, 242], ["numpy.zeros", "x_points.astype.astype", "zip", "len", "numpy.repeat"], "function", ["None"], ["", "def", "points_to_partial_img", "(", "img_size", ",", "x_points", ",", "y_points", ",", "fill_color", "=", "[", "0.0", ",", "0.0", ",", "1.0", "]", ")", ":", "\n", "    ", "img", "=", "np", ".", "zeros", "(", "[", "img_size", ",", "img_size", ",", "3", "]", ")", "\n", "x_points", "=", "x_points", ".", "astype", "(", "int", ")", "\n", "\n", "if", "len", "(", "y_points", ".", "shape", ")", "==", "1", ":", "\n", "        ", "y_points", "=", "np", ".", "repeat", "(", "y_points", "[", ":", ",", "np", ".", "newaxis", "]", ",", "3", ",", "axis", "=", "1", ")", "\n", "\n", "", "img", "[", ":", ",", ":", ",", "0", "]", "=", "fill_color", "[", "0", "]", "\n", "img", "[", ":", ",", ":", ",", "1", "]", "=", "fill_color", "[", "1", "]", "\n", "img", "[", ":", ",", ":", ",", "2", "]", "=", "fill_color", "[", "2", "]", "\n", "\n", "for", "point", ",", "color", "in", "zip", "(", "x_points", ",", "y_points", ")", ":", "\n", "        ", "img", "[", "point", "[", "1", "]", ",", "point", "[", "0", "]", "]", "=", "color", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.points_to_img": [[244, 252], ["numpy.zeros", "x_points.astype.astype", "zip"], "function", ["None"], ["", "def", "points_to_img", "(", "img_size", ",", "x_points", ",", "y_points", ")", ":", "\n", "    ", "img", "=", "np", ".", "zeros", "(", "[", "img_size", ",", "img_size", "]", ")", "\n", "x_points", "=", "x_points", ".", "astype", "(", "int", ")", "\n", "\n", "for", "point", ",", "val", "in", "zip", "(", "x_points", ",", "y_points", ")", ":", "\n", "        ", "img", "[", "point", "[", "1", "]", ",", "point", "[", "0", "]", "]", "=", "val", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_image_compleation": [[254, 307], ["matplotlib.subplots", "plotting.points_to_partial_img", "plotting.points_to_img", "plotting.points_to_img", "plotting.points_to_img", "numpy.abs", "[].imshow", "[].set_title", "[].imshow", "[].set_title", "[].imshow", "[].set_title", "fig.colorbar", "[].imshow", "[].set_title", "[].imshow", "[].set_title", "fig.colorbar", "[].axis", "matplotlib.tight_layout"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.points_to_partial_img", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.tests.test_mnist_data.points_to_img", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.tests.test_mnist_data.points_to_img", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.tests.test_mnist_data.points_to_img"], ["", "def", "plot_image_compleation", "(", "\n", "X_context", ",", "\n", "Y_context", ",", "\n", "X_target", ",", "\n", "Y_target", ",", "\n", "Y_pred_mean", ",", "\n", "Y_pred_cov", ",", "\n", "img_size", ",", "\n", "fill_color", "=", "[", "0.0", ",", "0.0", ",", "1.0", "]", ",", "\n", ")", ":", "\n", "    ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "2", ",", "3", ")", "\n", "\n", "context_img", "=", "points_to_partial_img", "(", "\n", "img_size", ",", "\n", "X_context", ",", "\n", "Y_context", ",", "\n", "fill_color", ",", "\n", ")", "\n", "target_img", "=", "points_to_img", "(", "img_size", ",", "X_target", ",", "Y_target", ")", "\n", "mean_img", "=", "points_to_img", "(", "\n", "img_size", ",", "\n", "X_target", ",", "\n", "Y_pred_mean", ",", "\n", ")", "\n", "var_img", "=", "points_to_img", "(", "\n", "img_size", ",", "\n", "X_target", ",", "\n", "Y_pred_cov", ",", "\n", ")", "\n", "mean_diff_img", "=", "np", ".", "abs", "(", "mean_img", "-", "target_img", ")", "\n", "\n", "axs", "[", "0", "]", "[", "0", "]", ".", "imshow", "(", "context_img", ")", "\n", "axs", "[", "0", "]", "[", "0", "]", ".", "set_title", "(", "\"Context\"", ")", "\n", "\n", "axs", "[", "0", "]", "[", "1", "]", ".", "imshow", "(", "mean_img", ",", "cmap", "=", "\"gray\"", ",", "vmin", "=", "0", ",", "vmax", "=", "1", ")", "\n", "axs", "[", "0", "]", "[", "1", "]", ".", "set_title", "(", "\"Mean\"", ")", "\n", "\n", "im", "=", "axs", "[", "0", "]", "[", "2", "]", ".", "imshow", "(", "var_img", ",", "cmap", "=", "\"viridis\"", ")", "\n", "axs", "[", "0", "]", "[", "2", "]", ".", "set_title", "(", "\"Var\"", ")", "\n", "fig", ".", "colorbar", "(", "im", ",", "ax", "=", "axs", "[", "0", "]", "[", "2", "]", ")", "\n", "\n", "axs", "[", "1", "]", "[", "1", "]", ".", "imshow", "(", "target_img", ",", "cmap", "=", "\"gray\"", ",", "vmin", "=", "0", ",", "vmax", "=", "1", ")", "\n", "axs", "[", "1", "]", "[", "1", "]", ".", "set_title", "(", "\"Target\"", ")", "\n", "\n", "im", "=", "axs", "[", "1", "]", "[", "2", "]", ".", "imshow", "(", "mean_diff_img", ",", "cmap", "=", "\"viridis\"", ")", "\n", "axs", "[", "1", "]", "[", "2", "]", ".", "set_title", "(", "\"Mean - Target\"", ")", "\n", "fig", ".", "colorbar", "(", "im", ",", "ax", "=", "axs", "[", "1", "]", "[", "2", "]", ")", "\n", "\n", "axs", "[", "1", "]", "[", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "\n", "return", "fig", ",", "axs", "\n", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.covariance.eigenvalue_covariance_estimate_rep": [[11, 47], ["np.array", "gspace.fibergroup.order", "isinstance", "e2cnn.group.Representation", "sys.exit", "isinstance", "sys.exit"], "function", ["None"], ["def", "eigenvalue_covariance_estimate_rep", "(", "gspace", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        gspace - instance of e2cnn.gspaces.r2.rot2d_on_r2.Rot2dOnR2 - underlying group\n\n    Output:\n        psd_rep - instance of e2cnn.group.Representation - group representation of the group representation before the covariance\n    \"\"\"", "\n", "# Change of basis matrix:", "\n", "change_of_basis", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1.0", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "1.0", "]", ",", "[", "1", ",", "-", "1.0", ",", "0.0", "]", "]", ")", "\n", "\n", "# Get group order and control:", "\n", "N", "=", "gspace", ".", "fibergroup", ".", "order", "(", ")", "\n", "if", "N", "<=", "3", "and", "N", "!=", "-", "1", ":", "\n", "        ", "sys", ".", "exit", "(", "\"Group order is not valid.\"", ")", "\n", "\n", "", "if", "isinstance", "(", "gspace", ",", "gspaces", ".", "FlipRot2dOnR2", ")", ":", "\n", "        ", "irreps", "=", "(", "\n", "[", "\"irrep_0,0\"", ",", "\"irrep_1,2\"", "]", "\n", "if", "N", ">", "4", "\n", "else", "[", "\"irrep_0,0\"", ",", "\"irrep_1,2\"", ",", "\"irrep_1,2\"", "]", "\n", ")", "\n", "", "elif", "isinstance", "(", "gspace", ",", "gspaces", ".", "Rot2dOnR2", ")", ":", "\n", "        ", "irreps", "=", "[", "\"irrep_0\"", ",", "\"irrep_2\"", "]", "if", "N", ">", "4", "else", "[", "\"irrep_0\"", ",", "\"irrep_2\"", ",", "\"irrep_2\"", "]", "\n", "", "else", ":", "\n", "        ", "sys", ".", "exit", "(", "\"Error: Unknown group.\"", ")", "\n", "\n", "", "psd_rep", "=", "e2cnn", ".", "group", ".", "Representation", "(", "\n", "group", "=", "gspace", ".", "fibergroup", ",", "\n", "name", "=", "\"eig_val_rep\"", ",", "\n", "irreps", "=", "irreps", ",", "\n", "change_of_basis", "=", "change_of_basis", ",", "\n", "supported_nonlinearities", "=", "[", "\"n_relu\"", "]", ",", "\n", ")", "\n", "\n", "return", "psd_rep", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.covariance.get_pre_covariance_field_type": [[49, 69], ["sum", "e2cnn.nn.FieldType", "ValueError", "covariance.eigenvalue_covariance_estimate_rep"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.covariance.eigenvalue_covariance_estimate_rep"], ["", "def", "get_pre_covariance_field_type", "(", "\n", "gspace", ",", "mean_field_type", ",", "covariance_activation", "=", "\"quadratic\"", "\n", ")", ":", "\n", "    ", "if", "covariance_activation", "==", "\"quadratic\"", ":", "\n", "# stack dimension copies of the mean prediction field type", "\n", "        ", "return", "sum", "(", "\n", "(", "mean_field_type", ".", "size", "-", "1", ")", "*", "[", "mean_field_type", "]", ",", "start", "=", "mean_field_type", "\n", ")", "\n", "", "elif", "covariance_activation", "in", "[", "\n", "\"diagonal_softplus_quadratic\"", ",", "\n", "\"diagonal_softplus\"", ",", "\n", "\"diagonal_quadratic\"", ",", "\n", "]", ":", "\n", "# Should ONLY be used with scale fields", "\n", "        ", "return", "mean_field_type", "\n", "", "elif", "covariance_activation", "==", "\"eigenvalue\"", ":", "\n", "        ", "return", "gnn", ".", "FieldType", "(", "gspace", ",", "eigenvalue_covariance_estimate_rep", "(", "gspace", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f\"{covariance_activation} is not a recognised covariance activation type\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.covariance.get_pre_covariance_dim": [[72, 86], ["ValueError"], "function", ["None"], ["", "", "def", "get_pre_covariance_dim", "(", "mean_dim", ",", "covariance_activation", "=", "\"quadratic\"", ")", ":", "\n", "    ", "if", "covariance_activation", "==", "\"quadratic\"", ":", "\n", "        ", "return", "mean_dim", "**", "2", "\n", "", "elif", "covariance_activation", "==", "\"eigenvalue\"", ":", "\n", "        ", "return", "6", "\n", "", "elif", "covariance_activation", "in", "[", "\n", "\"diagonal_softplus_quadratic\"", ",", "\n", "\"diagonal_softplus\"", ",", "\n", "\"diagonal_quadratic\"", ",", "\n", "]", ":", "\n", "        ", "return", "mean_dim", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f\"{covariance_activation} is not a recognised covariance activation type\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_continuous_decoder_parameters": [[40, 92], ["range", "range", "ValueError"], "function", ["None"], ["def", "get_continuous_decoder_parameters", "(", "name", ",", "flip", "=", "False", ")", ":", "\n", "    ", "if", "name", "==", "\"irrep_little\"", ":", "\n", "        ", "if", "flip", ":", "\n", "            ", "hidden_reps_ids", "=", "2", "*", "[", "4", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "", "else", ":", "\n", "            ", "hidden_reps_ids", "=", "2", "*", "[", "8", "*", "[", "1", "]", "]", "\n", "", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_small\"", ":", "\n", "        ", "if", "flip", ":", "\n", "            ", "hidden_reps_ids", "=", "5", "*", "[", "6", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "", "else", ":", "\n", "            ", "hidden_reps_ids", "=", "5", "*", "[", "12", "*", "[", "1", "]", "]", "\n", "", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "24", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_middle\"", ":", "\n", "        ", "if", "flip", ":", "\n", "            ", "hidden_reps_ids", "=", "7", "*", "[", "18", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "", "else", ":", "\n", "            ", "hidden_reps_ids", "=", "7", "*", "[", "36", "*", "[", "1", "]", "]", "\n", "", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "5", ",", "11", ",", "11", ",", "13", ",", "13", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_big\"", ":", "\n", "        ", "if", "flip", ":", "\n", "            ", "hidden_reps_ids", "=", "8", "*", "[", "32", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "", "else", ":", "\n", "            ", "hidden_reps_ids", "=", "8", "*", "[", "64", "*", "[", "1", "]", "]", "\n", "", "kernel_sizes", "=", "[", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "13", ",", "15", ",", "17", ",", "19", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_huge\"", ":", "\n", "        ", "if", "flip", ":", "\n", "            ", "hidden_reps_ids", "=", "10", "*", "[", "40", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "", "else", ":", "\n", "            ", "hidden_reps_ids", "=", "10", "*", "[", "80", "*", "[", "1", "]", "]", "\n", "", "kernel_sizes", "=", "[", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", ",", "11", ",", "13", ",", "17", ",", "19", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_big_gated\"", ":", "\n", "        ", "hidden_reps_ids", "=", "10", "*", "[", "32", "*", "[", "0", "]", "+", "32", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", ",", "13", ",", "15", ",", "17", ",", "19", "]", "\n", "non_linearity", "=", "[", "\"Gated\"", "]", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f\"{name} is not a recognised architecture for continous decoders\"", "\n", ")", "\n", "\n", "", "return", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_C16_parameters": [[94, 151], ["range", "range", "range", "range", "ValueError"], "function", ["None"], ["", "def", "get_C16_parameters", "(", "name", ")", ":", "\n", "# Family of decoders using purely regular fiber representations:", "\n", "    ", "if", "name", "==", "\"regular_little\"", ":", "\n", "        ", "hidden_reps_ids", "=", "2", "*", "[", "3", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_small\"", ":", "\n", "        ", "hidden_reps_ids", "=", "4", "*", "[", "4", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "20", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_middle\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "12", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_big\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_huge\"", ":", "\n", "        ", "hidden_reps_ids", "=", "8", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "9", ",", "15", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "# Family of decoders using irreps and regular representations:", "\n", "\n", "", "elif", "name", "==", "\"irrep_little\"", ":", "\n", "        ", "hidden_reps_ids", "=", "2", "*", "[", "8", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_small\"", ":", "\n", "        ", "hidden_reps_ids", "=", "5", "*", "[", "12", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "24", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_middle\"", ":", "\n", "        ", "hidden_reps_ids", "=", "7", "*", "[", "36", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "5", ",", "11", ",", "11", ",", "13", ",", "13", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_big\"", ":", "\n", "        ", "hidden_reps_ids", "=", "10", "*", "[", "64", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", ",", "13", ",", "15", ",", "17", ",", "19", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_huge\"", ":", "\n", "        ", "hidden_reps_ids", "=", "16", "*", "[", "80", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "7", ",", "7", ",", "11", ",", "11", ",", "11", ",", "11", ",", "13", ",", "15", ",", "17", ",", "19", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"{name} is not a recognised architecture for C16 decoders\"", ")", "\n", "\n", "", "return", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_D8_parameters": [[153, 210], ["range", "range", "range", "range", "ValueError"], "function", ["None"], ["", "def", "get_D8_parameters", "(", "name", ")", ":", "\n", "# Family of decoders using purely regular fiber representations:", "\n", "    ", "if", "name", "==", "\"regular_little\"", ":", "\n", "        ", "hidden_reps_ids", "=", "2", "*", "[", "3", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_small\"", ":", "\n", "        ", "hidden_reps_ids", "=", "4", "*", "[", "4", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "20", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_middle\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "12", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_big\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_huge\"", ":", "\n", "        ", "hidden_reps_ids", "=", "8", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "9", ",", "15", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "# Family of decoders using irreps and regular representations:", "\n", "\n", "", "elif", "name", "==", "\"irrep_little\"", ":", "\n", "        ", "hidden_reps_ids", "=", "2", "*", "[", "8", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_small\"", ":", "\n", "        ", "hidden_reps_ids", "=", "5", "*", "[", "12", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "24", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_middle\"", ":", "\n", "        ", "hidden_reps_ids", "=", "7", "*", "[", "36", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "5", ",", "11", ",", "11", ",", "13", ",", "13", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_big\"", ":", "\n", "        ", "hidden_reps_ids", "=", "10", "*", "[", "64", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", ",", "13", ",", "15", ",", "17", ",", "19", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_huge\"", ":", "\n", "        ", "hidden_reps_ids", "=", "16", "*", "[", "80", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "7", ",", "7", ",", "11", ",", "11", ",", "11", ",", "11", ",", "13", ",", "15", ",", "17", ",", "19", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"{name} is not a recognised architecture for C16 decoders\"", ")", "\n", "\n", "", "return", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_D4_parameters": [[212, 268], ["range", "range", "range", "range", "ValueError"], "function", ["None"], ["", "def", "get_D4_parameters", "(", "name", ")", ":", "\n", "# Family of decoders using purely regular fiber representations:", "\n", "    ", "if", "name", "==", "\"regular_little\"", ":", "\n", "        ", "hidden_reps_ids", "=", "2", "*", "[", "3", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_small\"", ":", "\n", "        ", "hidden_reps_ids", "=", "4", "*", "[", "4", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "20", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_middle\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "12", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_big\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_huge\"", ":", "\n", "        ", "hidden_reps_ids", "=", "8", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "9", ",", "15", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "# Family of decoders using irreps and regular representations:", "\n", "\n", "", "elif", "name", "==", "\"irrep_little\"", ":", "\n", "        ", "hidden_reps_ids", "=", "2", "*", "[", "4", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_small\"", ":", "\n", "        ", "hidden_reps_ids", "=", "5", "*", "[", "6", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "24", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_middle\"", ":", "\n", "        ", "hidden_reps_ids", "=", "7", "*", "[", "18", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "5", ",", "11", ",", "11", ",", "13", ",", "13", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_big\"", ":", "\n", "        ", "hidden_reps_ids", "=", "8", "*", "[", "32", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "13", ",", "15", ",", "17", ",", "19", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_huge\"", ":", "\n", "        ", "hidden_reps_ids", "=", "10", "*", "[", "40", "*", "[", "[", "1", ",", "1", "]", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", ",", "11", ",", "13", ",", "17", ",", "19", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"{name} is not a recognised architecture for C16 decoders\"", ")", "\n", "", "return", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_C8_parameters": [[270, 299], ["range", "range", "ValueError"], "function", ["None"], ["", "def", "get_C8_parameters", "(", "name", ")", ":", "\n", "# Family of decoders using purely regular fiber representations:", "\n", "    ", "if", "name", "==", "\"regular_little\"", ":", "\n", "        ", "hidden_reps_ids", "=", "2", "*", "[", "3", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_small\"", ":", "\n", "        ", "hidden_reps_ids", "=", "4", "*", "[", "4", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "20", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_middle\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "12", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_big\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_huge\"", ":", "\n", "        ", "hidden_reps_ids", "=", "8", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "9", ",", "15", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"{name} is not a recognised architecture for C8 decoders\"", ")", "\n", "", "return", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_C4_parameters": [[301, 357], ["range", "range", "range", "range", "ValueError"], "function", ["None"], ["", "def", "get_C4_parameters", "(", "name", ")", ":", "\n", "# Family of decoders using purely regular fiber representations:", "\n", "    ", "if", "name", "==", "\"regular_little\"", ":", "\n", "        ", "hidden_reps_ids", "=", "2", "*", "[", "3", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_small\"", ":", "\n", "        ", "hidden_reps_ids", "=", "4", "*", "[", "4", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "20", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_middle\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "12", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_big\"", ":", "\n", "        ", "hidden_reps_ids", "=", "6", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"regular_huge\"", ":", "\n", "        ", "hidden_reps_ids", "=", "8", "*", "[", "24", "*", "[", "-", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "5", ",", "5", ",", "7", ",", "7", ",", "9", ",", "15", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "# Family of decoders using irreps and regular representations:", "\n", "\n", "", "elif", "name", "==", "\"irrep_little\"", ":", "\n", "        ", "hidden_reps_ids", "=", "2", "*", "[", "4", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "7", ",", "20", ",", "6", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_small\"", ":", "\n", "        ", "hidden_reps_ids", "=", "5", "*", "[", "6", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "j", "for", "j", "in", "range", "(", "3", ",", "24", ",", "4", ")", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_middle\"", ":", "\n", "        ", "hidden_reps_ids", "=", "7", "*", "[", "18", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "3", ",", "3", ",", "5", ",", "5", ",", "11", ",", "11", ",", "13", ",", "13", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_big\"", ":", "\n", "        ", "hidden_reps_ids", "=", "8", "*", "[", "32", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "13", ",", "15", ",", "17", ",", "19", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"irrep_huge\"", ":", "\n", "        ", "hidden_reps_ids", "=", "10", "*", "[", "40", "*", "[", "1", "]", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "5", ",", "7", ",", "7", ",", "11", ",", "11", ",", "11", ",", "13", ",", "17", ",", "19", ",", "21", "]", "\n", "non_linearity", "=", "[", "\"normrelu\"", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"{name} is not a recognised architecture for C16 decoders\"", ")", "\n", "", "return", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_e2_decoder": [[373, 416], ["steer_cnp.cnns.build_steer_cnn_decoder", "decoders.get_continuous_decoder_parameters", "decoders.get_C16_parameters", "decoders.get_D8_parameters", "decoders.get_C8_parameters", "decoders.get_D4_parameters", "decoders.get_C4_parameters", "ValueError"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.cnns.e2cnn.build_steer_cnn_decoder", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_continuous_decoder_parameters", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_C16_parameters", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_D8_parameters", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_C8_parameters", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_D4_parameters", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_C4_parameters"], ["", "def", "get_e2_decoder", "(", "\n", "N", ",", "\n", "flip", ",", "\n", "name", ",", "\n", "context_rep_ids", ",", "\n", "mean_rep_ids", ",", "\n", "covariance_activation", "=", "\"quadratic\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", "max_frequency", "=", "30", ",", "\n", ")", ":", "\n", "\n", "    ", "if", "N", "==", "-", "1", ":", "\n", "        ", "(", "\n", "hidden_reps_ids", ",", "\n", "kernel_sizes", ",", "\n", "non_linearity", ",", "\n", ")", "=", "get_continuous_decoder_parameters", "(", "name", ",", "flip", ")", "\n", "", "elif", "N", "==", "16", "and", "flip", "==", "False", ":", "\n", "        ", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "=", "get_C16_parameters", "(", "name", ")", "\n", "", "elif", "N", "==", "8", "and", "flip", "==", "True", ":", "\n", "        ", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "=", "get_D8_parameters", "(", "name", ")", "\n", "", "elif", "N", "==", "8", "and", "flip", "==", "False", ":", "\n", "        ", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "=", "get_C8_parameters", "(", "name", ")", "\n", "", "elif", "N", "==", "4", "and", "flip", "==", "True", ":", "\n", "        ", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "=", "get_D4_parameters", "(", "name", ")", "\n", "", "elif", "N", "==", "4", "and", "flip", "==", "False", ":", "\n", "        ", "hidden_reps_ids", ",", "kernel_sizes", ",", "non_linearity", "=", "get_C4_parameters", "(", "name", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f\"{N}, {flip}, {name} are not a valid combination to build an architecture\"", "\n", ")", "\n", "\n", "", "return", "build_steer_cnn_decoder", "(", "\n", "context_rep_ids", ",", "\n", "hidden_reps_ids", ",", "\n", "kernel_sizes", ",", "\n", "mean_rep_ids", ",", "\n", "covariance_activation", ",", "\n", "N", "=", "N", ",", "\n", "flip", "=", "flip", ",", "\n", "activation", "=", "non_linearity", ",", "\n", "padding_mode", "=", "padding_mode", ",", "\n", "max_frequency", "=", "max_frequency", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.decoders.get_cnn_decoder": [[419, 465], ["steer_cnp.utils.get_pre_covariance_dim", "steer_cnp.cnns.build_cnn_decoder", "ValueError"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.covariance.get_pre_covariance_dim", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.cnns.cnn.build_cnn_decoder"], ["", "def", "get_cnn_decoder", "(", "\n", "name", ",", "\n", "context_dim", ",", "\n", "mean_dim", ",", "\n", "covariance_activation", "=", "\"diagonal\"", ",", "\n", "activation", "=", "\"relu\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", ")", ":", "\n", "\n", "    ", "if", "name", "==", "\"little\"", ":", "\n", "        ", "list_hid_channels", "=", "[", "4", ",", "5", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "7", ",", "5", "]", "\n", "non_linearity", "=", "[", "\"relu\"", "]", "\n", "\n", "", "elif", "name", "==", "\"small\"", ":", "\n", "        ", "list_hid_channels", "=", "[", "8", ",", "12", ",", "12", "]", "\n", "kernel_sizes", "=", "[", "5", ",", "9", ",", "11", ",", "5", "]", "\n", "non_linearity", "=", "\"relu\"", "\n", "\n", "", "elif", "name", "==", "\"middle\"", ":", "\n", "        ", "list_hid_channels", "=", "4", "*", "[", "24", "]", "\n", "kernel_sizes", "=", "5", "*", "[", "7", "]", "\n", "non_linearity", "=", "\"relu\"", "\n", "\n", "", "elif", "name", "==", "\"big\"", ":", "\n", "        ", "list_hid_channels", "=", "6", "*", "[", "40", "]", "\n", "kernel_sizes", "=", "7", "*", "[", "7", "]", "\n", "non_linearity", "=", "\"relu\"", "\n", "\n", "", "elif", "name", "==", "\"huge\"", ":", "\n", "        ", "list_hid_channels", "=", "8", "*", "[", "52", "]", "\n", "kernel_sizes", "=", "9", "*", "[", "9", "]", "\n", "non_linearity", "=", "\"relu\"", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"{name} is not a recognised architecture for cnn decoders\"", ")", "\n", "\n", "", "cov_est_dim", "=", "get_pre_covariance_dim", "(", "mean_dim", ",", "covariance_activation", ")", "\n", "\n", "return", "build_cnn_decoder", "(", "\n", "context_dim", ",", "\n", "list_hid_channels", ",", "\n", "kernel_sizes", ",", "\n", "mean_dim", ",", "\n", "cov_est_dim", ",", "\n", "padding_mode", "=", "padding_mode", ",", "\n", "activation", "=", "non_linearity", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.loss.multivariate_log_likelihood": [[6, 12], ["torch.log", "cov.det", "diff.unsqueeze", "diff.unsqueeze", "cov.inverse"], "function", ["None"], ["def", "multivariate_log_likelihood", "(", "mean", ",", "cov", ",", "prediction", ")", ":", "\n", "    ", "_", ",", "_", ",", "d", "=", "mean", ".", "shape", "\n", "diff", "=", "mean", "-", "prediction", "\n", "log_normaliser", "=", "-", "0.5", "*", "torch", ".", "log", "(", "(", "(", "2", "*", "math", ".", "pi", ")", "**", "d", ")", "*", "cov", ".", "det", "(", ")", ")", "\n", "quadratic_term", "=", "(", "diff", ".", "unsqueeze", "(", "-", "2", ")", "@", "cov", ".", "inverse", "(", ")", "@", "diff", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", ")", "\n", "return", "log_normaliser", "-", "0.5", "*", "quadratic_term", "\n", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.grid_2d": [[6, 36], ["torch.linspace", "torch.linspace", "torch.meshgrid", "torch.stack", "einops.rearrange"], "function", ["None"], ["def", "grid_2d", "(", "min_x", ",", "max_x", ",", "n_xaxis", ",", "min_y", "=", "None", ",", "max_y", "=", "None", ",", "n_yaxis", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        min_x,max_x,min_y,max_y: float - range of x-axis/y-axis\n        n_x_axis,n_y_axis: int - number of points per axis\n        flatten: Boolean - determines shape of output\n    Output:\n        torch.tensor - if flatten is True: shape (n_y_axis*n_x_axis,2)\n                                          (element i*n_x_axis+j gives i-th element in y-grid\n                                           and j-th element in  x-grid.\n                                           In other words: x is periodic counter and y the stable counter)\n                       if flatten is not True: shape (n_y_axis,n_x_axis,2)\n    \"\"\"", "\n", "if", "min_y", "is", "None", ":", "\n", "        ", "min_y", "=", "min_x", "\n", "", "if", "max_y", "is", "None", ":", "\n", "        ", "max_y", "=", "max_x", "\n", "", "if", "n_yaxis", "is", "None", ":", "\n", "        ", "n_yaxis", "=", "n_xaxis", "\n", "\n", "", "x", "=", "torch", ".", "linspace", "(", "min_x", ",", "max_x", ",", "n_xaxis", ")", "\n", "y", "=", "torch", ".", "linspace", "(", "min_y", ",", "max_y", ",", "n_yaxis", ")", "\n", "# TODO: reorder the grid - has repercussions later on", "\n", "Y", ",", "X", "=", "torch", ".", "meshgrid", "(", "y", ",", "x", ")", "\n", "grid", "=", "torch", ".", "stack", "(", "(", "X", ",", "Y", ")", ",", "2", ")", "\n", "\n", "if", "flatten", ":", "\n", "        ", "grid", "=", "rearrange", "(", "grid", ",", "\"x y d -> (x y) d\"", ")", "\n", "\n", "", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.grid_3d": [[38, 74], ["torch.linspace", "torch.linspace", "torch.linspace", "torch.meshgrid", "torch.stack", "einops.rearrange"], "function", ["None"], ["", "def", "grid_3d", "(", "\n", "min_x", ",", "\n", "max_x", ",", "\n", "n_xaxis", ",", "\n", "min_y", "=", "None", ",", "\n", "max_y", "=", "None", ",", "\n", "min_z", "=", "None", ",", "\n", "max_z", "=", "None", ",", "\n", "n_yaxis", "=", "None", ",", "\n", "n_zaxis", "=", "None", ",", "\n", "flatten", "=", "True", ",", "\n", ")", ":", "\n", "    ", "if", "min_y", "is", "None", ":", "\n", "        ", "min_y", "=", "min_x", "\n", "", "if", "max_y", "is", "None", ":", "\n", "        ", "max_y", "=", "max_x", "\n", "", "if", "n_yaxis", "is", "None", ":", "\n", "        ", "n_yaxis", "=", "n_xaxis", "\n", "", "if", "min_z", "is", "None", ":", "\n", "        ", "min_z", "=", "min_x", "\n", "", "if", "max_z", "is", "None", ":", "\n", "        ", "max_z", "=", "max_x", "\n", "", "if", "n_zaxis", "is", "None", ":", "\n", "        ", "n_zaxis", "=", "n_xaxis", "\n", "\n", "", "x", "=", "torch", ".", "linspace", "(", "min_x", ",", "max_x", ",", "n_xaxis", ")", "\n", "y", "=", "torch", ".", "linspace", "(", "min_y", ",", "max_y", ",", "n_yaxis", ")", "\n", "z", "=", "torch", ".", "linspace", "(", "min_z", ",", "max_z", ",", "n_zaxis", ")", "\n", "# TODO: reorder the grid - has repercussions later on", "\n", "X", ",", "Y", ",", "Z", "=", "torch", ".", "meshgrid", "(", "x", ",", "y", ",", "z", ")", "\n", "grid", "=", "torch", ".", "stack", "(", "(", "X", ",", "Y", ",", "Z", ")", ",", "-", "1", ")", "\n", "\n", "if", "flatten", ":", "\n", "        ", "grid", "=", "rearrange", "(", "grid", ",", "\"x y z d -> (x y z) d\"", ")", "\n", "\n", "", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.radial_grid_2d": [[76, 91], ["grid.grid_2d", "grid_2d.norm"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.grid_2d"], ["", "def", "radial_grid_2d", "(", "max_r", ",", "n_axis", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        min_r: float - maximum radius from origin\n        n_axis: float - number of points across the x diameter\n    Output:\n        torch.tensor - if flatten is True: shape (n_y_axis*n_x_axis,2)\n    \"\"\"", "\n", "grid", "=", "grid_2d", "(", "min_x", "=", "-", "max_r", ",", "max_x", "=", "max_r", ",", "n_xaxis", "=", "n_axis", ",", "flatten", "=", "True", ")", "\n", "\n", "in_radius_indices", "=", "grid", ".", "norm", "(", "dim", "=", "-", "1", ")", "<=", "max_r", "\n", "\n", "grid", "=", "grid", "[", "in_radius_indices", "]", "\n", "\n", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.expand_with_ones": [[93, 99], ["torch.cat", "torch.ones", "Y.size", "Y.size"], "function", ["None"], ["", "def", "expand_with_ones", "(", "Y", ")", ":", "\n", "    ", "\"\"\"\n    Input: Y - torch.Tensor - shape (batch_size,n,C)\n    Output: torch.Tensor -shape (batch_size,n,C+1) - added a column of ones to Y (at the start) Y[i,j]<--[1,Y[i,j]]\n    \"\"\"", "\n", "return", "torch", ".", "cat", "(", "[", "torch", ".", "ones", "(", "[", "Y", ".", "size", "(", "0", ")", ",", "Y", ".", "size", "(", "1", ")", ",", "1", "]", ",", "device", "=", "Y", ".", "device", ")", ",", "Y", "]", ",", "dim", "=", "2", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.gp.sample_gp_grid_2d": [[9, 38], ["steer_cnp.utils.grid.grid_2d", "steer_cnp.gp.sample_gp_prior", "X.unsqueeze().repeat_interleave.unsqueeze().repeat_interleave", "X.unsqueeze().repeat_interleave.unsqueeze"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.grid_2d", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.gp.gp.sample_gp_prior"], ["def", "sample_gp_grid_2d", "(", "kernel", ",", "samples", "=", "1", ",", "min_x", "=", "-", "2", ",", "max_x", "=", "2", ",", "n_axis", "=", "10", ",", "obs_noise", "=", "1e-4", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    kernel: steer_cnp.kernel.Kernel\n    min_x,max_x: scalar - left-right/lower-upper limit of grid\n    n_grid_points: int - number of grid points per axis\n    Output:\n    X: torch.tensor\n       Shape (n_grid_points**2,2)\n    Y: torch.tensor\n       Shape (n_grid_points**2,D), D...dimension of label space\n    \"\"\"", "\n", "\n", "X", "=", "grid_2d", "(", "min_x", ",", "max_x", ",", "n_axis", ",", "flatten", "=", "True", ")", "\n", "Y", "=", "sample_gp_prior", "(", "X", ",", "kernel", ",", "samples", "=", "samples", ",", "obs_noise", "=", "obs_noise", ")", "\n", "\n", "if", "samples", "!=", "1", ":", "\n", "        ", "X", "=", "X", ".", "unsqueeze", "(", "0", ")", ".", "repeat_interleave", "(", "samples", ",", "0", ")", "\n", "\n", "#   bs, n, d = X.shape", "\n", "\n", "#   batch_inds = torch.arange(bs)[:, None, None]", "\n", "#   perm_inds = torch.randn(X.shape).argsort(dim=1)", "\n", "#   d_inds = torch.arange(d)[None, None, :]", "\n", "\n", "#   X = X[batch_inds, perm_inds, d_inds]", "\n", "#   Y = Y[batch_inds, perm_inds, d_inds]", "\n", "\n", "", "return", "X", ",", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.gp.sample_gp_radial_grid_2d": [[40, 69], ["steer_cnp.utils.grid.radial_grid_2d", "steer_cnp.gp.sample_gp_prior", "X.unsqueeze().repeat_interleave.unsqueeze().repeat_interleave", "X.unsqueeze().repeat_interleave.unsqueeze"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.grid.radial_grid_2d", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.gp.gp.sample_gp_prior"], ["", "def", "sample_gp_radial_grid_2d", "(", "kernel", ",", "samples", "=", "1", ",", "max_r", "=", "2", ",", "n_axis", "=", "10", ",", "obs_noise", "=", "1e-4", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    kernel: steer_cnp.kernel.Kernel\n    max_r: scalar - radius of the grid\n    n_grid_points: int - number of grid points per axis\n    Output:\n    X: torch.tensor\n       Shape (n_grid_points**2,2)\n    Y: torch.tensor\n       Shape (n_grid_points**2,D), D...dimension of label space\n    \"\"\"", "\n", "\n", "X", "=", "radial_grid_2d", "(", "max_r", ",", "n_axis", ")", "\n", "Y", "=", "sample_gp_prior", "(", "X", ",", "kernel", ",", "samples", "=", "samples", ",", "obs_noise", "=", "obs_noise", ")", "\n", "\n", "if", "samples", "!=", "1", ":", "\n", "        ", "X", "=", "X", ".", "unsqueeze", "(", "0", ")", ".", "repeat_interleave", "(", "samples", ",", "0", ")", "\n", "\n", "# bs, n, d = X.shape", "\n", "\n", "# batch_inds = torch.arange(bs)[:, None, None]", "\n", "# perm_inds = torch.randn(X.shape).argsort(dim=1)", "\n", "# d_inds = torch.arange(d)[None, None, :]", "\n", "\n", "# X = X[batch_inds, perm_inds, d_inds]", "\n", "# Y = Y[batch_inds, perm_inds, d_inds]", "\n", "\n", "", "return", "X", ",", "Y", "\n", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.nn.Expression.__init__": [[26, 29], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "func", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "func", "=", "func", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.nn.Expression.forward": [[30, 32], ["torch.Expression.func"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "func", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.nn.Pass.__init__": [[35, 39], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module", ",", "dim", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "module", "=", "module", "\n", "self", ".", "dim", "=", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.nn.Pass.forward": [[40, 44], ["list", "torch.Pass.module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "xs", "=", "list", "(", "x", ")", "\n", "xs", "[", "self", ".", "dim", "]", "=", "self", ".", "module", "(", "xs", "[", "self", ".", "dim", "]", ")", "\n", "return", "xs", "", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.nn.MLP": [[4, 23], ["range", "torch.Sequential", "isinstance", "len", "layers.append", "layers.append", "torch.Linear", "layers.append", "torch.ReLU", "torch.BatchNorm1d"], "function", ["None"], ["def", "MLP", "(", "in_dim", ",", "hidden_dim", ",", "out_dim", ",", "batch_norm", "=", "False", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "hidden_dim", ",", "list", ")", ":", "\n", "        ", "hidden_dim", "=", "[", "hidden_dim", "]", "\n", "\n", "", "dims", "=", "[", "in_dim", "]", "+", "hidden_dim", "+", "[", "out_dim", "]", "\n", "layers", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "dims", "[", ":", "-", "1", "]", ")", ")", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", ")", ")", "\n", "if", "batch_norm", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "dims", "[", "i", "+", "1", "]", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "", "if", "not", "batch_norm", ":", "\n", "        ", "layers", "=", "layers", "[", ":", "-", "1", "]", "\n", "", "else", ":", "\n", "        ", "layers", "=", "layers", "[", ":", "-", "2", "]", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.equivariance.test_equivaraince_example": [[4, 47], ["len", "torch.zeros", "torch.zeros", "model", "Y_mean.squeeze.squeeze", "Y_cov.squeeze.squeeze", "Y_mean.squeeze.abs().sum", "Y_cov.squeeze.abs().sum", "enumerate", "X_context.unsqueeze", "Y_context.unsqueeze", "X_target.unsqueeze", "torch.Tensor", "model", "Y_mean_t.squeeze.squeeze", "Y_cov_t.squeeze.squeeze", "Y_mean.squeeze.abs", "Y_cov.squeeze.abs", "in_field_type.representation", "M.t", "M.t", "M.t", "X_context_t.unsqueeze", "Y_context_t.unsqueeze", "X_target_t.unsqueeze", "mean_diff.abs().sum", "cov_diff.abs().sum", "M.t", "M.t", "mean_diff.abs", "cov_diff.abs"], "function", ["None"], ["def", "test_equivaraince_example", "(", "model", ",", "X_context", ",", "Y_context", ",", "X_target", ",", "in_field_type", ")", ":", "\n", "    ", "n_test", "=", "len", "(", "in_field_type", ".", "testing_elements", ")", "\n", "dtype", "=", "X_context", ".", "dtype", "\n", "device", "=", "X_context", ".", "device", "\n", "\n", "# mean_diffs = torch.zeros(n_test, device=device)", "\n", "# cov_diffs = torch.zeros(n_test, device=device)", "\n", "\n", "mean_diffs_normed", "=", "torch", ".", "zeros", "(", "n_test", ",", "device", "=", "device", ")", "\n", "cov_diffs_normed", "=", "torch", ".", "zeros", "(", "n_test", ",", "device", "=", "device", ")", "\n", "\n", "Y_mean", ",", "Y_cov", "=", "model", "(", "\n", "X_context", ".", "unsqueeze", "(", "0", ")", ",", "Y_context", ".", "unsqueeze", "(", "0", ")", ",", "X_target", ".", "unsqueeze", "(", "0", ")", "\n", ")", "\n", "Y_mean", "=", "Y_mean", ".", "squeeze", "(", "0", ")", "\n", "Y_cov", "=", "Y_cov", ".", "squeeze", "(", "0", ")", "\n", "\n", "Y_mean_norm", "=", "Y_mean", ".", "abs", "(", ")", ".", "sum", "(", ")", "\n", "Y_cov_norm", "=", "Y_cov", ".", "abs", "(", ")", ".", "sum", "(", ")", "\n", "\n", "for", "i", ",", "g", "in", "enumerate", "(", "in_field_type", ".", "testing_elements", ")", ":", "\n", "        ", "R", "=", "torch", ".", "Tensor", "(", "in_field_type", ".", "representation", "(", "g", ")", ",", "device", "=", "device", ")", "\n", "\n", "X_context_t", "=", "X_context", "@", "M", ".", "t", "(", ")", "\n", "Y_context_t", "=", "Y_context", "@", "M", ".", "t", "(", ")", "\n", "X_target_t", "=", "X_target", "@", "M", ".", "t", "(", ")", "\n", "\n", "Y_mean_t", ",", "Y_cov_t", "=", "model", "(", "\n", "X_context_t", ".", "unsqueeze", "(", "0", ")", ",", "Y_context_t", ".", "unsqueeze", "(", "0", ")", ",", "X_target_t", ".", "unsqueeze", "(", "0", ")", "\n", ")", "\n", "Y_mean_t", "=", "Y_mean_t", ".", "squeeze", "(", "0", ")", "\n", "Y_cov_t", "=", "Y_cov_t", ".", "squeeze", "(", "0", ")", "\n", "\n", "mean_diff", "=", "Y_mean_t", "-", "(", "Y_mean", "@", "M", ".", "t", "(", ")", ")", "\n", "cov_diff", "=", "Y_cov_t", "-", "(", "Y_cov", "@", "M", ".", "t", "(", ")", ")", "\n", "\n", "# mean_diffs[i] = mean_diff.sum(-1).mean()", "\n", "# cov_diffs[i] = cov_diff.sum(-1).mean()", "\n", "\n", "mean_diffs_normed", "[", "i", "]", "=", "mean_diff", ".", "abs", "(", ")", ".", "sum", "(", ")", "/", "Y_mean_norm", "\n", "cov_diffs_normed", "[", "i", "]", "=", "cov_diff", ".", "abs", "(", ")", ".", "sum", "(", ")", "/", "Y_cov_norm", "\n", "\n", "", "return", "mean_diffs_normed", ",", "cov_diffs_normed", "\n", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.__init__": [[19, 99], ["isinstance", "os.path.join", "numpy.load", "numpy.load", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "os.path.expanduser", "gp.GPDataset.check_exists", "os.path.join", "os.path.join", "gp.GPDataset.create", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.check_exists", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.create"], ["\n", "\n", "X", "=", "grid_2d", "(", "min_x", ",", "max_x", ",", "n_axis", ",", "flatten", "=", "True", ")", "\n", "Y", "=", "sample_gp_prior", "(", "X", ",", "kernel", ",", "samples", "=", "samples", ",", "obs_noise", "=", "obs_noise", ")", "\n", "\n", "if", "samples", "!=", "1", ":", "\n", "        ", "X", "=", "X", ".", "unsqueeze", "(", "0", ")", ".", "repeat_interleave", "(", "samples", ",", "0", ")", "\n", "\n", "#   bs, n, d = X.shape", "\n", "\n", "#   batch_inds = torch.arange(bs)[:, None, None]", "\n", "#   perm_inds = torch.randn(X.shape).argsort(dim=1)", "\n", "#   d_inds = torch.arange(d)[None, None, :]", "\n", "\n", "#   X = X[batch_inds, perm_inds, d_inds]", "\n", "#   Y = Y[batch_inds, perm_inds, d_inds]", "\n", "\n", "", "return", "X", ",", "Y", "\n", "\n", "\n", "", "def", "sample_gp_radial_grid_2d", "(", "kernel", ",", "samples", "=", "1", ",", "max_r", "=", "2", ",", "n_axis", "=", "10", ",", "obs_noise", "=", "1e-4", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    kernel: steer_cnp.kernel.Kernel\n    max_r: scalar - radius of the grid\n    n_grid_points: int - number of grid points per axis\n    Output:\n    X: torch.tensor\n       Shape (n_grid_points**2,2)\n    Y: torch.tensor\n       Shape (n_grid_points**2,D), D...dimension of label space\n    \"\"\"", "\n", "\n", "X", "=", "radial_grid_2d", "(", "max_r", ",", "n_axis", ")", "\n", "Y", "=", "sample_gp_prior", "(", "X", ",", "kernel", ",", "samples", "=", "samples", ",", "obs_noise", "=", "obs_noise", ")", "\n", "\n", "if", "samples", "!=", "1", ":", "\n", "        ", "X", "=", "X", ".", "unsqueeze", "(", "0", ")", ".", "repeat_interleave", "(", "samples", ",", "0", ")", "\n", "\n", "# bs, n, d = X.shape", "\n", "\n", "# batch_inds = torch.arange(bs)[:, None, None]", "\n", "# perm_inds = torch.randn(X.shape).argsort(dim=1)", "\n", "# d_inds = torch.arange(d)[None, None, :]", "\n", "\n", "# X = X[batch_inds, perm_inds, d_inds]", "\n", "# Y = Y[batch_inds, perm_inds, d_inds]", "\n", "\n", "", "return", "X", ",", "Y", "\n", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.__getitem__": [[100, 114], ["torch.randint().item", "torch.randint().item", "torch.randint().item", "torch.randint().item", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randint", "torch.randint", "torch.randint", "torch.randint"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset._collate_fn": [[115, 126], ["torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.create": [[128, 146], ["os.makedirs", "gp.GPDataset.get_kernel", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "steer_cnp.utils.sample_gp_radial_grid_2d", "numpy.save", "numpy.save", "os.path.join", "os.path.join", "X.numpy", "os.path.join", "Y.numpy"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.get_kernel", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.gp.sample_gp_radial_grid_2d", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.get_kernel": [[147, 168], ["steer_cnp.kernel.SeparableKernel", "steer_cnp.kernel.RBFKernel", "steer_cnp.kernel.RBFDivergenceFreeKernel", "steer_cnp.kernel.RBFCurlFreeKernel", "ValueError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.check_exists": [[169, 173], ["os.path.exists", "os.path.exists", "os.path.join", "os.path.join"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.name": [[174, 178], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.__len__": [[179, 181], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.__repr__": [[182, 190], ["gp.GPDataset.extra_repr().splitlines", "body.append", "gp.GPDataset.__len__", "gp.GPDataset.extra_repr"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.__len__", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.extra_repr"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.datasets.gp.GPDataset.extra_repr": [[191, 194], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.cnns.e2cnn.build_steer_cnn_2d": [[15, 69], ["isinstance", "range", "e2cnn.nn.SequentialModule", "gnn.SequentialModule.parameters", "torch.Sequential", "layers.append", "steer_cnp.utils.Expression", "steer_cnp.utils.Expression", "len", "e2cnn.nn.R2Conv", "layers.append", "p.dim", "len", "len", "e2cnn.nn.GeometricTensor", "int"], "function", ["None"], ["def", "build_steer_cnn_2d", "(", "\n", "in_field_type", ",", "\n", "hidden_field_types", ",", "\n", "kernel_sizes", ",", "\n", "out_field_type", ",", "\n", "gspace", ",", "\n", "activation", "=", "\"relu\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", "modify_init", "=", "1.0", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        in_rep - rep of representation of the input data\n        hidden_reps - the reps to use in the hidden layers\n        kernel sizes - the size of the kernel used in each layer\n        out_rep - the rep to use in the ouput layer\n        activation - the activation to use between layers\n        gspace - the gsapce that data lives in\n    \"\"\"", "\n", "\n", "if", "isinstance", "(", "kernel_sizes", ",", "int", ")", ":", "\n", "        ", "kernel_sizes", "=", "[", "kernel_sizes", "]", "*", "(", "len", "(", "hidden_reps", ")", "+", "1", ")", "\n", "\n", "", "layer_field_types", "=", "[", "in_field_type", ",", "*", "hidden_field_types", ",", "out_field_type", "]", "\n", "\n", "layers", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "layer_field_types", ")", "-", "1", ")", ":", "\n", "        ", "layers", ".", "append", "(", "\n", "gnn", ".", "R2Conv", "(", "\n", "layer_field_types", "[", "i", "]", ",", "\n", "layer_field_types", "[", "i", "+", "1", "]", ",", "\n", "kernel_sizes", "[", "i", "]", ",", "\n", "padding", "=", "int", "(", "(", "kernel_sizes", "[", "i", "]", "-", "1", ")", "/", "2", ")", ",", "\n", "padding_mode", "=", "padding_mode", ",", "\n", "initialize", "=", "True", ",", "\n", ")", "\n", ")", "\n", "if", "i", "!=", "len", "(", "layer_field_types", ")", "-", "2", ":", "\n", "            ", "layers", ".", "append", "(", "activations", "[", "activation", "]", "(", "layer_field_types", "[", "i", "+", "1", "]", ")", ")", "\n", "\n", "", "", "cnn", "=", "gnn", ".", "SequentialModule", "(", "*", "layers", ")", "\n", "\n", "# TODO: dirty fix to alleviate weird initialisations", "\n", "for", "p", "in", "cnn", ".", "parameters", "(", ")", ":", "\n", "        ", "if", "p", ".", "dim", "(", ")", "==", "0", ":", "\n", "            ", "p", ".", "data", "=", "p", ".", "data", "*", "modify_init", "\n", "", "else", ":", "\n", "            ", "p", ".", "data", "[", ":", "]", "=", "p", ".", "data", "*", "modify_init", "\n", "\n", "", "", "return", "nn", ".", "Sequential", "(", "\n", "Expression", "(", "lambda", "X", ":", "gnn", ".", "GeometricTensor", "(", "X", ",", "in_field_type", ")", ")", ",", "\n", "cnn", ",", "\n", "Expression", "(", "lambda", "X", ":", "X", ".", "tensor", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.cnns.e2cnn.build_steer_cnn_decoder": [[72, 127], ["e2cnn.nn.FieldType", "e2cnn.nn.FieldType", "steer_cnp.utils.get_pre_covariance_field_type", "e2cnn.build_steer_cnn_2d", "e2cnn.nn.FieldType", "steer_cnp.utils.reps_from_ids", "e2cnn.gspaces.FlipRot2dOnR2", "e2cnn.gspaces.FlipRot2dOnR2", "e2cnn.gspaces.Rot2dOnR2", "e2cnn.gspaces.Rot2dOnR2", "steer_cnp.utils.reps_from_ids", "steer_cnp.utils.reps_from_ids"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.covariance.get_pre_covariance_field_type", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.cnns.e2cnn.build_steer_cnn_2d", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.representations.reps_from_ids", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.representations.reps_from_ids", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.representations.reps_from_ids"], ["", "def", "build_steer_cnn_decoder", "(", "\n", "context_rep_ids", ",", "\n", "hidden_reps_ids", ",", "\n", "kernel_sizes", ",", "\n", "mean_rep_ids", ",", "\n", "covariance_activation", "=", "\"quadratic\"", ",", "\n", "N", "=", "4", ",", "\n", "flip", "=", "True", ",", "\n", "max_frequency", "=", "30", ",", "\n", "activation", "=", "\"relu\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", ")", ":", "\n", "    ", "if", "flip", ":", "\n", "        ", "gspace", "=", "(", "\n", "gspaces", ".", "FlipRot2dOnR2", "(", "N", "=", "N", ")", "\n", "if", "N", "!=", "-", "1", "\n", "else", "gspaces", ".", "FlipRot2dOnR2", "(", "N", "=", "N", ",", "maximum_frequency", "=", "max_frequency", ")", "\n", ")", "\n", "", "else", ":", "\n", "        ", "gspace", "=", "(", "\n", "gspaces", ".", "Rot2dOnR2", "(", "N", "=", "N", ")", "\n", "if", "N", "!=", "-", "1", "\n", "else", "gspaces", ".", "Rot2dOnR2", "(", "N", "=", "N", ",", "maximum_frequency", "=", "max_frequency", ")", "\n", ")", "\n", "\n", "", "in_field_type", "=", "gnn", ".", "FieldType", "(", "\n", "gspace", ",", "[", "gspace", ".", "trivial_repr", ",", "*", "reps_from_ids", "(", "gspace", ",", "context_rep_ids", ")", "]", "\n", ")", "\n", "\n", "hidden_field_types", "=", "[", "\n", "gnn", ".", "FieldType", "(", "gspace", ",", "reps_from_ids", "(", "gspace", ",", "ids", ")", ")", "for", "ids", "in", "hidden_reps_ids", "\n", "]", "\n", "\n", "mean_field_type", "=", "gnn", ".", "FieldType", "(", "gspace", ",", "reps_from_ids", "(", "gspace", ",", "mean_rep_ids", ")", ")", "\n", "\n", "pre_covariance_field_type", "=", "get_pre_covariance_field_type", "(", "\n", "gspace", ",", "mean_field_type", ",", "covariance_activation", "\n", ")", "\n", "\n", "out_field_type", "=", "mean_field_type", "+", "pre_covariance_field_type", "\n", "\n", "init_modify", "=", "(", "\n", "1.0", "if", "not", "(", "mean_rep_ids", "==", "[", "[", "0", "]", "]", "and", "context_rep_ids", "==", "[", "[", "0", "]", "]", ")", "else", "0.833", ",", "\n", ")", "\n", "if", "N", "==", "-", "1", ":", "\n", "        ", "init_modify", "=", "1.0", "\n", "\n", "", "return", "build_steer_cnn_2d", "(", "\n", "in_field_type", ",", "\n", "hidden_field_types", ",", "\n", "kernel_sizes", ",", "\n", "out_field_type", ",", "\n", "gspace", ",", "\n", "activation", ",", "\n", "padding_mode", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.cnns.cnn.build_cnn_2d": [[7, 43], ["isinstance", "range", "torch.Sequential", "layers.append", "layers.append", "len", "torch.Conv2d", "len", "int"], "function", ["None"], ["def", "build_cnn_2d", "(", "\n", "in_dim", ",", "hidden_dims", ",", "kernel_sizes", ",", "out_dim", ",", "padding_mode", "=", "\"zeros\"", ",", "activation", "=", "\"relu\"", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        in_dim - number of channels to the input data\n        hidden_dims - list of hidden channel dimensions\n        kernel_size - size of the kernels to use in each cnn layer\n        out_dim - number of output channels\n        non_linearity - string name of the activation to use between layers\n    -->Creates a stack of CNN with the specified parameters\n    \"\"\"", "\n", "\n", "if", "isinstance", "(", "kernel_sizes", ",", "int", ")", ":", "\n", "        ", "kernel_sizes", "=", "[", "kernel_sizes", "]", "*", "(", "len", "(", "hidden_dims", ")", "+", "1", ")", "\n", "\n", "", "layer_dims", "=", "[", "in_dim", ",", "*", "hidden_dims", ",", "out_dim", "]", "\n", "\n", "layers", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "layer_dims", ")", "-", "1", ")", ":", "\n", "        ", "layers", ".", "append", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "layer_dims", "[", "i", "]", ",", "\n", "layer_dims", "[", "i", "+", "1", "]", ",", "\n", "kernel_sizes", "[", "i", "]", ",", "\n", "padding_mode", "=", "padding_mode", ",", "\n", "padding", "=", "int", "(", "(", "kernel_sizes", "[", "i", "]", "-", "1", ")", "/", "2", ")", ",", "\n", ")", "\n", ")", "\n", "layers", ".", "append", "(", "activations", "[", "activation", "]", "(", ")", ")", "\n", "\n", "# chop off last unused activation", "\n", "", "layers", "=", "layers", "[", ":", "-", "1", "]", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.cnns.cnn.build_cnn_decoder": [[45, 61], ["cnn.build_cnn_2d"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.cnns.cnn.build_cnn_2d"], ["", "def", "build_cnn_decoder", "(", "\n", "context_dim", ",", "\n", "hidden_dims", ",", "\n", "kernel_sizes", ",", "\n", "mean_dim", ",", "\n", "cov_est_dim", ",", "\n", "activation", "=", "\"relu\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", ")", ":", "\n", "    ", "return", "build_cnn_2d", "(", "\n", "context_dim", "+", "1", ",", "\n", "hidden_dims", ",", "\n", "kernel_sizes", ",", "\n", "mean_dim", "+", "cov_est_dim", ",", "\n", "padding_mode", ",", "\n", "activation", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.__init__": [[15, 31], ["pytorch_lightning.metrics.metric.Metric.__init__", "metrics.Mean.add_state", "metrics.Mean.add_state", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "compute_on_step", "=", "True", ",", "\n", "dist_sync_on_step", "=", "False", ",", "\n", "process_group", "=", "None", ",", "\n", "dist_sync_fn", "=", "None", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "compute_on_step", "=", "compute_on_step", ",", "\n", "dist_sync_on_step", "=", "dist_sync_on_step", ",", "\n", "process_group", "=", "process_group", ",", "\n", "dist_sync_fn", "=", "dist_sync_fn", ",", "\n", ")", "\n", "\n", "self", ".", "add_state", "(", "\"sum_values\"", ",", "default", "=", "torch", ".", "tensor", "(", "0.0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "self", ".", "add_state", "(", "\"total\"", ",", "default", "=", "torch", ".", "tensor", "(", "0", ")", ",", "dist_reduce_fx", "=", "\"sum\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.update": [[32, 37], ["metrics._mean_update"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics._mean_update"], ["", "def", "update", "(", "self", ",", "values", ")", ":", "\n", "        ", "sum_values", ",", "n_obs", "=", "_mean_update", "(", "values", ")", "\n", "\n", "self", ".", "sum_values", "+=", "sum_values", "\n", "self", ".", "total", "+=", "n_obs", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.compute": [[38, 40], ["metrics._mean_compute"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics._mean_compute"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "return", "_mean_compute", "(", "self", ".", "sum_values", ",", "self", ".", "total", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics._mean_update": [[6, 8], ["values.sum", "values.numel"], "function", ["None"], ["def", "_mean_update", "(", "values", ")", ":", "\n", "    ", "return", "values", ".", "sum", "(", ")", ",", "values", ".", "numel", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics._mean_compute": [[10, 12], ["None"], "function", ["None"], ["", "def", "_mean_compute", "(", "sum_values", ",", "n_values", ")", ":", "\n", "    ", "return", "sum_values", "/", "n_values", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningCNP.__init__": [[28, 64], ["pytorch_lightning.LightningModule.__init__", "cnp.LightningCNP.save_hyperparameters", "steer_cnp.CNP", "steer_cnp.lightning.Mean", "steer_cnp.lightning.Mean", "list", "list", "list"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["            ", "self", ".", "x_encoder", "=", "MLP", "(", "\n", "x_dim", ",", "\n", "x_encoder_hidden_dims", ",", "\n", "x_encoder_hidden_dims", "[", "-", "1", "]", ",", "\n", "batch_norm", "=", "batch_norm", ",", "\n", ")", "\n", "x_dim", "=", "x_encoder_hidden_dims", "[", "-", "1", "]", "\n", "\n", "", "self", ".", "encoder", "=", "MLP", "(", "\n", "x_dim", "+", "context_dim", ",", "\n", "encoder_hidden_dims", ",", "\n", "embedding_dim", ",", "\n", "batch_norm", "=", "batch_norm", ",", "\n", ")", "\n", "\n", "self", ".", "decoder", "=", "MLP", "(", "\n", "x_dim", "+", "embedding_dim", ",", "\n", "decoder_hidden_dims", ",", "\n", "prediction_dim", "+", "prediction_dim", ",", "\n", "batch_norm", "=", "batch_norm", ",", "\n", ")", "\n", "self", ".", "prediction_dim", "=", "prediction_dim", "\n", "self", ".", "covariance_activation_function", "=", "covariance_activation_function", "\n", "self", ".", "min_cov", "=", "min_cov", "\n", "\n", "# scale = 1.5", "\n", "# for m in self.encoder.modules():", "\n", "#     if isinstance(m, nn.Linear):", "\n", "#         m.weight.data = m.weight * scale", "\n", "# scale = 5", "\n", "# offset = 5", "\n", "# for m in self.decoder.modules():", "\n", "#     if isinstance(m, nn.Linear):", "\n", "#         m.weight.data = m.weight * scale", "\n", "#         m.bias.data = m.bias + offset", "\n", "\n", "# Hack to increase output variance of decoder", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningCNP.forward": [[65, 67], ["cnp.LightningCNP.cnp"], "methods", ["None"], ["# self.decoder[-1].weight.data = self.decoder[-1].weight.data * 10", "\n", "# self.decoder[-1].bias.data = self.decoder[-1].bias", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningCNP.compute_batch_log_loss": [[68, 80], ["cnp.LightningCNP.forward", "steer_cnp.utils.multivariate_log_likelihood"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.forward", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.loss.multivariate_log_likelihood"], ["", "def", "encode", "(", "self", ",", "X_context", ",", "Y_context", ")", ":", "\n", "        ", "return", "self", ".", "encoder", "(", "\n", "torch", ".", "cat", "(", "[", "self", ".", "x_encoder", "(", "X_context", ".", "float", "(", ")", ")", ",", "Y_context", "]", ",", "dim", "=", "-", "1", ")", "\n", ")", ".", "mean", "(", "dim", "=", "-", "2", ",", "keepdim", "=", "True", ")", "\n", "\n", "", "def", "decode", "(", "self", ",", "embeddings", ",", "X_target", ")", ":", "\n", "        ", "decoded", "=", "self", ".", "decoder", "(", "\n", "torch", ".", "cat", "(", "\n", "[", "\n", "embeddings", ".", "expand", "(", "-", "1", ",", "X_target", ".", "shape", "[", "-", "2", "]", ",", "-", "1", ")", ",", "\n", "self", ".", "x_encoder", "(", "X_target", ".", "float", "(", ")", ")", ",", "\n", "]", ",", "\n", "dim", "=", "-", "1", ",", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningCNP.training_step": [[81, 88], ["cnp.LightningCNP.compute_batch_log_loss", "cnp.LightningCNP.log", "cnp.LightningCNP.log", "cnp.LightningCNP.mean", "cnp.LightningCNP.mean", "cnp.LightningCNP.mean"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss"], [")", ",", "\n", ")", "\n", "means", "=", "decoded", "[", "...", ",", ":", "self", ".", "prediction_dim", "]", "\n", "covs", "=", "self", ".", "covariance_activation_function", "(", "decoded", "[", "...", ",", "self", ".", "prediction_dim", ":", "]", ")", "\n", "covs", "=", "rearrange", "(", "\n", "covs", ",", "\n", "\"b n (d1 d2) -> b n d1 d2\"", ",", "\n", "d1", "=", "self", ".", "prediction_dim", ",", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningCNP.validation_step": [[89, 93], ["cnp.LightningCNP.compute_batch_log_loss", "cnp.LightningCNP.val_ll"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss"], ["d2", "=", "self", ".", "prediction_dim", ",", "\n", ")", "\n", "covs", "=", "covs", "+", "torch", ".", "eye", "(", "self", ".", "prediction_dim", ")", ".", "to", "(", "decoded", ".", "device", ")", "*", "self", ".", "min_cov", "\n", "\n", "return", "means", ",", "covs", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningCNP.validation_epoch_end": [[94, 97], ["cnp.LightningCNP.val_ll.compute", "cnp.LightningCNP.log"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.compute"], ["\n", "", "def", "forward", "(", "self", ",", "X_context", ",", "Y_context", ",", "X_target", ")", ":", "\n", "        ", "return", "self", ".", "decode", "(", "self", ".", "encode", "(", "X_context", ",", "Y_context", ")", ",", "X_target", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningCNP.test_step": [[98, 102], ["cnp.LightningCNP.compute_batch_log_loss", "cnp.LightningCNP.test_ll"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningCNP.test_epoch_end": [[103, 106], ["cnp.LightningCNP.test_ll.compute", "cnp.LightningCNP.log"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.compute"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningCNP.configure_optimizers": [[107, 110], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "cnp.LightningCNP.cnp.parameters"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningImageCNP.__init__": [[113, 122], ["cnp.LightningCNP.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.cnp.LightningImageCNP.forward": [[123, 130], ["cnp.LightningImageCNP.cnp", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.ExperimentWriter.__init__": [[41, 79], ["os.path.join", "os.makedirs", "os.path.exists", "os.path.exists", "pytorch_lightning.utilities.distributed.rank_zero_warn", "loggers.ExperimentWriter.log_hparams", "io.open", "[].split", "io.open", "csv.DictReader", "next", "pytorch_lightning.core.saving.load_hparams_from_yaml", "hasattr", "loggers.ExperimentWriter.log_metrics", "os.path.join", "f.readline"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.ExperimentWriter.log_hparams", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.log_metrics"], ["def", "__init__", "(", "\n", "self", ",", "log_dir", ":", "str", ",", "metrics_file", "=", "\"metrics.csv\"", ",", "hparams_file", "=", "\"hparams.yaml\"", "\n", ")", "->", "None", ":", "\n", "        ", "self", ".", "NAME_HPARAMS_FILE", "=", "hparams_file", "\n", "self", ".", "NAME_METRICS_FILE", "=", "metrics_file", "\n", "\n", "self", ".", "hparams", "=", "{", "}", "\n", "self", ".", "metrics", "=", "[", "]", "\n", "\n", "self", ".", "log_dir", "=", "log_dir", "\n", "self", ".", "metrics_file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "self", ".", "NAME_METRICS_FILE", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "log_dir", ")", "and", "os", ".", "path", ".", "exists", "(", "self", ".", "metrics_file_path", ")", ":", "\n", "            ", "rank_zero_warn", "(", "\n", "f\"Experiment logs directory {self.log_dir} exists and is not empty.\"", "\n", "\" Loading previous results.\"", "\n", ")", "\n", "with", "io", ".", "open", "(", "self", ".", "metrics_file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "                ", "metrics_keys", "=", "f", ".", "readline", "(", ")", "[", ":", "-", "1", "]", ".", "split", "(", "\",\"", ")", "\n", "", "with", "io", ".", "open", "(", "self", ".", "metrics_file_path", ",", "\"r\"", ",", "newline", "=", "\"\"", ")", "as", "f", ":", "\n", "                ", "reader", "=", "csv", ".", "DictReader", "(", "f", ",", "fieldnames", "=", "metrics_keys", ")", "\n", "next", "(", "reader", ")", "\n", "for", "l", "in", "reader", ":", "\n", "                    ", "if", "hasattr", "(", "l", ",", "\"step\"", ")", ":", "\n", "                        ", "step", "=", "l", "[", "\"step\"", "]", "\n", "del", "l", "[", "\"step\"", "]", "\n", "", "else", ":", "\n", "                        ", "step", "=", "None", "\n", "\n", "", "self", ".", "log_metrics", "(", "l", ",", "step", ")", "\n", "\n", "", "", "self", ".", "log_hparams", "(", "\n", "load_hparams_from_yaml", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "self", ".", "NAME_HPARAMS_FILE", ")", "\n", ")", "\n", ")", "\n", "\n", "", "os", ".", "makedirs", "(", "self", ".", "log_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.ExperimentWriter.log_hparams": [[80, 83], ["loggers.ExperimentWriter.hparams.update"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.update"], ["", "def", "log_hparams", "(", "self", ",", "params", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "None", ":", "\n", "        ", "\"\"\"Record hparams\"\"\"", "\n", "self", ".", "hparams", ".", "update", "(", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.ExperimentWriter.log_metrics": [[84, 100], ["loggers.ExperimentWriter.metrics.append", "isinstance", "len", "loggers.ExperimentWriter.log_metrics._handle_value"], "methods", ["None"], ["", "def", "log_metrics", "(", "\n", "self", ",", "metrics_dict", ":", "Dict", "[", "str", ",", "float", "]", ",", "step", ":", "Optional", "[", "int", "]", "=", "None", "\n", ")", "->", "None", ":", "\n", "        ", "\"\"\"Record metrics\"\"\"", "\n", "\n", "def", "_handle_value", "(", "value", ")", ":", "\n", "            ", "if", "isinstance", "(", "value", ",", "torch", ".", "Tensor", ")", ":", "\n", "                ", "return", "value", ".", "item", "(", ")", "\n", "", "return", "value", "\n", "\n", "", "if", "step", "is", "None", ":", "\n", "            ", "step", "=", "len", "(", "self", ".", "metrics", ")", "\n", "\n", "", "metrics", "=", "{", "k", ":", "_handle_value", "(", "v", ")", "for", "k", ",", "v", "in", "metrics_dict", ".", "items", "(", ")", "}", "\n", "metrics", "[", "\"step\"", "]", "=", "step", "\n", "self", ".", "metrics", ".", "append", "(", "metrics", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.ExperimentWriter.save": [[101, 118], ["os.path.join", "pytorch_lightning.core.saving.save_hparams_to_yaml", "list", "last_m.update", "last_m.keys", "io.open", "csv.DictWriter", "loggers.ExperimentWriter.writer.writeheader", "loggers.ExperimentWriter.writer.writerows"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.update"], ["", "def", "save", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Save recorded hparams and metrics into files\"\"\"", "\n", "hparams_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "self", ".", "NAME_HPARAMS_FILE", ")", "\n", "save_hparams_to_yaml", "(", "hparams_file", ",", "self", ".", "hparams", ")", "\n", "\n", "if", "not", "self", ".", "metrics", ":", "\n", "            ", "return", "\n", "\n", "", "last_m", "=", "{", "}", "\n", "for", "m", "in", "self", ".", "metrics", ":", "\n", "            ", "last_m", ".", "update", "(", "m", ")", "\n", "", "metrics_keys", "=", "list", "(", "last_m", ".", "keys", "(", ")", ")", "\n", "\n", "with", "io", ".", "open", "(", "self", ".", "metrics_file_path", ",", "\"w\"", ",", "newline", "=", "\"\"", ")", "as", "f", ":", "\n", "            ", "self", ".", "writer", "=", "csv", ".", "DictWriter", "(", "f", ",", "fieldnames", "=", "metrics_keys", ")", "\n", "self", ".", "writer", ".", "writeheader", "(", ")", "\n", "self", ".", "writer", ".", "writerows", "(", "self", ".", "metrics", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.__init__": [[139, 150], ["pytorch_lightning.loggers.base.LightningLoggerBase.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "save_dir", ":", "str", ",", "\n", "name", ":", "Optional", "[", "str", "]", "=", "\"default\"", ",", "\n", "version", ":", "Optional", "[", "Union", "[", "int", ",", "str", "]", "]", "=", "None", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_save_dir", "=", "save_dir", "\n", "self", ".", "_name", "=", "name", "or", "\"\"", "\n", "self", ".", "_version", "=", "version", "\n", "self", ".", "_experiment", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.root_dir": [[151, 161], ["os.path.join"], "methods", ["None"], ["", "@", "property", "\n", "def", "root_dir", "(", "self", ")", "->", "str", ":", "\n", "        ", "\"\"\"\n        Parent directory for all checkpoint subdirectories.\n        If the experiment name parameter is ``None`` or the empty string, no experiment subdirectory is used\n        and the checkpoint will be saved in \"save_dir/version_dir\"\n        \"\"\"", "\n", "if", "not", "self", ".", "name", ":", "\n", "            ", "return", "self", ".", "save_dir", "\n", "", "return", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "self", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.log_dir": [[162, 175], ["os.path.join", "isinstance"], "methods", ["None"], ["", "@", "property", "\n", "def", "log_dir", "(", "self", ")", "->", "str", ":", "\n", "        ", "\"\"\"\n        The log directory for this run. By default, it is named\n        ``'version_${self.version}'`` but it can be overridden by passing a string value\n        for the constructor's version parameter instead of ``None`` or an int.\n        \"\"\"", "\n", "# create a pseudo standard path ala test-tube", "\n", "version", "=", "(", "\n", "self", ".", "version", "if", "isinstance", "(", "self", ".", "version", ",", "str", ")", "else", "f\"version_{self.version}\"", "\n", ")", "\n", "log_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_dir", ",", "version", ")", "\n", "return", "log_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save_dir": [[176, 179], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "save_dir", "(", "self", ")", "->", "Optional", "[", "str", "]", ":", "\n", "        ", "return", "self", ".", "_save_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.experiment": [[180, 198], ["os.makedirs", "loggers.ExperimentWriter"], "methods", ["None"], ["", "@", "property", "\n", "def", "experiment", "(", "self", ")", "->", "ExperimentWriter", ":", "\n", "        ", "r\"\"\"\n\n        Actual ExperimentWriter object. To use ExperimentWriter features in your\n        :class:`~pytorch_lightning.core.lightning.LightningModule` do the following.\n\n        Example::\n\n            self.logger.experiment.some_experiment_writer_function()\n\n        \"\"\"", "\n", "if", "self", ".", "_experiment", ":", "\n", "            ", "return", "self", ".", "_experiment", "\n", "\n", "", "os", ".", "makedirs", "(", "self", ".", "root_dir", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "_experiment", "=", "ExperimentWriter", "(", "log_dir", "=", "self", ".", "log_dir", ")", "\n", "return", "self", ".", "_experiment", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.log_hyperparams": [[199, 203], ["loggers.CSVLogger._convert_params", "loggers.CSVLogger.experiment.log_hparams"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.ExperimentWriter.log_hparams"], ["", "@", "rank_zero_only", "\n", "def", "log_hyperparams", "(", "self", ",", "params", ":", "Union", "[", "Dict", "[", "str", ",", "Any", "]", ",", "Namespace", "]", ")", "->", "None", ":", "\n", "        ", "params", "=", "self", ".", "_convert_params", "(", "params", ")", "\n", "self", ".", "experiment", ".", "log_hparams", "(", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.log_metrics": [[204, 209], ["loggers.CSVLogger.experiment.log_metrics"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.log_metrics"], ["", "@", "rank_zero_only", "\n", "def", "log_metrics", "(", "\n", "self", ",", "metrics", ":", "Dict", "[", "str", ",", "float", "]", ",", "step", ":", "Optional", "[", "int", "]", "=", "None", "\n", ")", "->", "None", ":", "\n", "        ", "self", ".", "experiment", ".", "log_metrics", "(", "metrics", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save": [[210, 214], ["super().save", "loggers.CSVLogger.experiment.save"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save"], ["", "@", "rank_zero_only", "\n", "def", "save", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "save", "(", ")", "\n", "self", ".", "experiment", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.finalize": [[215, 218], ["loggers.CSVLogger.save"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.save"], ["", "@", "rank_zero_only", "\n", "def", "finalize", "(", "self", ",", "status", ":", "str", ")", "->", "None", ":", "\n", "        ", "self", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.name": [[219, 222], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "self", ".", "_name", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger.version": [[223, 228], ["loggers.CSVLogger._get_next_version"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger._get_next_version"], ["", "@", "property", "\n", "def", "version", "(", "self", ")", "->", "int", ":", "\n", "        ", "if", "self", ".", "_version", "is", "None", ":", "\n", "            ", "self", ".", "_version", "=", "self", ".", "_get_next_version", "(", ")", "\n", "", "return", "self", ".", "_version", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.CSVLogger._get_next_version": [[229, 245], ["os.path.join", "os.listdir", "os.path.isdir", "pytorch_lightning._logger.warning", "len", "max", "os.path.isdir", "d.startswith", "existing_versions.append", "os.path.join", "int", "d.split"], "methods", ["None"], ["", "def", "_get_next_version", "(", "self", ")", ":", "\n", "        ", "root_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "self", ".", "name", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "root_dir", ")", ":", "\n", "            ", "log", ".", "warning", "(", "\"Missing logger folder: %s\"", ",", "root_dir", ")", "\n", "return", "0", "\n", "\n", "", "existing_versions", "=", "[", "]", "\n", "for", "d", "in", "os", ".", "listdir", "(", "root_dir", ")", ":", "\n", "            ", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "root_dir", ",", "d", ")", ")", "and", "d", ".", "startswith", "(", "\"version_\"", ")", ":", "\n", "                ", "existing_versions", ".", "append", "(", "int", "(", "d", ".", "split", "(", "\"_\"", ")", "[", "1", "]", ")", ")", "\n", "\n", "", "", "if", "len", "(", "existing_versions", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "\n", "", "return", "max", "(", "existing_versions", ")", "+", "1", "", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.gp.LightningGP.__init__": [[15, 49], ["pytorch_lightning.LightningModule.__init__", "gp.LightningGP.save_hyperparameters", "utils.parse_kernel", "steer_cnp.lightning.Mean", "steer_cnp.lightning.Mean"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["\n", "\n", "X", "=", "grid_2d", "(", "min_x", ",", "max_x", ",", "n_axis", ",", "flatten", "=", "True", ")", "\n", "Y", "=", "sample_gp_prior", "(", "X", ",", "kernel", ",", "samples", "=", "samples", ",", "obs_noise", "=", "obs_noise", ")", "\n", "\n", "if", "samples", "!=", "1", ":", "\n", "        ", "X", "=", "X", ".", "unsqueeze", "(", "0", ")", ".", "repeat_interleave", "(", "samples", ",", "0", ")", "\n", "\n", "#   bs, n, d = X.shape", "\n", "\n", "#   batch_inds = torch.arange(bs)[:, None, None]", "\n", "#   perm_inds = torch.randn(X.shape).argsort(dim=1)", "\n", "#   d_inds = torch.arange(d)[None, None, :]", "\n", "\n", "#   X = X[batch_inds, perm_inds, d_inds]", "\n", "#   Y = Y[batch_inds, perm_inds, d_inds]", "\n", "\n", "", "return", "X", ",", "Y", "\n", "\n", "\n", "", "def", "sample_gp_radial_grid_2d", "(", "kernel", ",", "samples", "=", "1", ",", "max_r", "=", "2", ",", "n_axis", "=", "10", ",", "obs_noise", "=", "1e-4", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.gp.LightningGP.forward": [[50, 61], ["steer_cnp.gp.conditional_gp_posterior"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.gp.gp.conditional_gp_posterior"], ["\n", "\n", "X", "=", "radial_grid_2d", "(", "max_r", ",", "n_axis", ")", "\n", "Y", "=", "sample_gp_prior", "(", "X", ",", "kernel", ",", "samples", "=", "samples", ",", "obs_noise", "=", "obs_noise", ")", "\n", "\n", "if", "samples", "!=", "1", ":", "\n", "        ", "X", "=", "X", ".", "unsqueeze", "(", "0", ")", ".", "repeat_interleave", "(", "samples", ",", "0", ")", "\n", "\n", "# bs, n, d = X.shape", "\n", "\n", "# batch_inds = torch.arange(bs)[:, None, None]", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.gp.LightningGP.compute_batch_log_loss": [[62, 74], ["gp.LightningGP.forward", "steer_cnp.utils.multivariate_log_likelihood"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.forward", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.loss.multivariate_log_likelihood"], ["# perm_inds = torch.randn(X.shape).argsort(dim=1)", "\n", "# d_inds = torch.arange(d)[None, None, :]", "\n", "\n", "# X = X[batch_inds, perm_inds, d_inds]", "\n", "# Y = Y[batch_inds, perm_inds, d_inds]", "\n", "\n", "", "return", "X", ",", "Y", "\n", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.gp.LightningGP.training_step": [[75, 87], ["gp.LightningGP.compute_batch_log_loss", "gp.LightningGP.log", "gp.LightningGP.log", "gp.LightningGP.log", "gp.LightningGP.mean", "gp.LightningGP.kernel.scalar_kernel.log_length_scale.detach().exp", "gp.LightningGP.mean", "gp.LightningGP.mean", "gp.LightningGP.kernel.scalar_kernel.log_length_scale.detach"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.gp.LightningGP.validation_step": [[88, 92], ["gp.LightningGP.compute_batch_log_loss", "gp.LightningGP.val_ll"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.gp.LightningGP.validation_epoch_end": [[93, 96], ["gp.LightningGP.val_ll.compute", "gp.LightningGP.log"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.compute"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.gp.LightningGP.test_step": [[97, 101], ["gp.LightningGP.compute_batch_log_loss", "gp.LightningGP.test_ll"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.gp.LightningGP.test_epoch_end": [[102, 105], ["gp.LightningGP.test_ll.compute", "gp.LightningGP.log"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.compute"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.gp.LightningGP.configure_optimizers": [[106, 111], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "gp.LightningGP.kernel.parameters"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.__init__": [[16, 96], ["pytorch_lightning.LightningModule.__init__", "steer_cnp.LightningSteerCNP.save_hyperparameters", "utils.parse_kernel", "utils.parse_cnn_covariance_activation", "utils.parse_kernel", "steer_cnp.steer_cnp.SteerCNP", "steer_cnp.lightning.Mean", "steer_cnp.lightning.Mean"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["**", "kwargs", ",", "\n", ")", ":", "\n", "\n", "        ", "super", "(", "SteerCNP", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "prediction_dim", "=", "prediction_dim", "\n", "self", ".", "covariance_activation_function", "=", "covariance_activation_function", "\n", "self", ".", "min_cov", "=", "min_cov", "\n", "\n", "", "def", "decode", "(", "self", ",", "X_grid", ",", "Y_grid", ",", "X_target", ")", ":", "\n", "# reshape Y_grid to go through the CNN", "\n", "        ", "Y_grid", "=", "self", ".", "stack_to_grid", "(", "Y_grid", ")", "\n", "# pass Y's through the CNN", "\n", "Y_grid", "=", "self", ".", "cnn", "(", "Y_grid", ")", "\n", "# reshape Y's back to a stack", "\n", "Y_grid", "=", "self", ".", "grid_to_stack", "(", "Y_grid", ")", "\n", "# apply the covariance activation function to the covariances", "\n", "Y_grid", "=", "torch", ".", "cat", "(", "\n", "[", "\n", "Y_grid", "[", ":", ",", ":", ",", ":", "self", ".", "prediction_dim", "]", ",", "\n", "self", ".", "covariance_activation_function", "(", "\n", "Y_grid", "[", ":", ",", ":", ",", "self", ".", "prediction_dim", ":", "]", "\n", ")", ",", "\n", "]", ",", "\n", "dim", "=", "-", "1", ",", "\n", ")", "\n", "# kernel smooth the outputs to the target points", "\n", "Y_target", "=", "kernel_smooth", "(", "\n", "X_grid", ",", "\n", "Y_grid", ",", "\n", "X_target", ",", "\n", "self", ".", "output_kernel", ",", "\n", "normalise", "=", "self", ".", "normalise_output", ",", "\n", ")", "\n", "# split the output into mean and covariance, and reshape the covariances.", "\n", "Y_mean", "=", "Y_target", "[", ":", ",", ":", ",", ":", "self", ".", "prediction_dim", "]", "\n", "Y_cov", "=", "rearrange", "(", "\n", "Y_target", "[", ":", ",", ":", ",", "self", ".", "prediction_dim", ":", "]", ",", "\n", "\"b m (d1 d2) -> b m d1 d2\"", ",", "\n", "d1", "=", "self", ".", "prediction_dim", ",", "\n", "d2", "=", "self", ".", "prediction_dim", ",", "\n", ")", "\n", "# add on a minimum covariance", "\n", "Y_cov", "=", "Y_cov", "+", "(", "\n", "torch", ".", "eye", "(", "self", ".", "prediction_dim", ")", ".", "to", "(", "Y_target", ".", "device", ")", "*", "self", ".", "min_cov", "\n", ")", "\n", "return", "Y_mean", ",", "Y_cov", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.forward": [[97, 99], ["steer_cnp.LightningSteerCNP.steer_cnp"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss": [[100, 119], ["steer_cnp.LightningSteerCNP.forward", "steer_cnp.utils.multivariate_log_likelihood", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.forward", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.loss.multivariate_log_likelihood"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.training_step": [[120, 139], ["steer_cnp.LightningSteerCNP.compute_batch_log_loss", "steer_cnp.LightningSteerCNP.log", "steer_cnp.LightningSteerCNP.log", "steer_cnp.LightningSteerCNP.log", "steer_cnp.LightningSteerCNP.log", "steer_cnp.LightningSteerCNP.mean", "steer_cnp.LightningSteerCNP.steer_cnp.discrete_rkhs_embedder.kernel.scalar_kernel.log_length_scale.detach().exp", "steer_cnp.LightningSteerCNP.steer_cnp.output_kernel.scalar_kernel.log_length_scale.detach().exp", "steer_cnp.LightningSteerCNP.mean", "steer_cnp.LightningSteerCNP.mean", "steer_cnp.LightningSteerCNP.steer_cnp.discrete_rkhs_embedder.kernel.scalar_kernel.log_length_scale.detach", "steer_cnp.LightningSteerCNP.steer_cnp.output_kernel.scalar_kernel.log_length_scale.detach"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.validation_step": [[140, 144], ["steer_cnp.LightningSteerCNP.compute_batch_log_loss", "steer_cnp.LightningSteerCNP.val_ll"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.validation_epoch_end": [[145, 148], ["steer_cnp.LightningSteerCNP.val_ll.compute", "steer_cnp.LightningSteerCNP.log"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.compute"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.test_step": [[149, 153], ["steer_cnp.LightningSteerCNP.compute_batch_log_loss", "steer_cnp.LightningSteerCNP.test_ll"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.compute_batch_log_loss"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.test_epoch_end": [[154, 157], ["steer_cnp.LightningSteerCNP.test_ll.compute", "steer_cnp.LightningSteerCNP.log"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.metrics.Mean.compute"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningSteerCNP.configure_optimizers": [[158, 161], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "steer_cnp.LightningSteerCNP.steer_cnp.parameters"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningImageSteerCNP.__init__": [[164, 175], ["steer_cnp.LightningSteerCNP.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningImageSteerCNP.on_train_epoch_start": [[176, 184], ["isinstance", "steer_cnp.LightningImageSteerCNP.steer_cnp.discrete_rkhs_embedder.set_grid", "steer_cnp.LightningImageSteerCNP.train_dataloader", "steer_cnp.LightningImageSteerCNP.train_dataloader", "steer_cnp.LightningImageSteerCNP.train_dataloader"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.rkhs_embedding.DiscretisedRKHSEmbedding.set_grid", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.train_dataloader", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.train_dataloader", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.train_dataloader"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningImageSteerCNP.on_test_epoch_start": [[185, 198], ["steer_cnp.LightningImageSteerCNP.test_dataloader", "isinstance", "isinstance", "steer_cnp.LightningImageSteerCNP.steer_cnp.discrete_rkhs_embedder.set_grid"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.test_dataloader", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.rkhs_embedding.DiscretisedRKHSEmbedding.set_grid"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningImageSteerCNP.on_validation_epoch_start": [[199, 212], ["steer_cnp.LightningImageSteerCNP.val_dataloader", "isinstance", "isinstance", "steer_cnp.LightningImageSteerCNP.steer_cnp.discrete_rkhs_embedder.set_grid"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.val_dataloader", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.steer_cnp.rkhs_embedding.DiscretisedRKHSEmbedding.set_grid"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.steer_cnp.LightningImageSteerCNP.forward": [[213, 222], ["steer_cnp.LightningImageSteerCNP.steer_cnp", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.ModelCheckpoint._get_metric_interpolated_filepath_name": [[50, 52], ["callbacks.ModelCheckpoint.format_checkpoint_name"], "methods", ["None"], ["def", "_get_metric_interpolated_filepath_name", "(", "self", ",", "epoch", ",", "ckpt_name_metrics", ")", ":", "\n", "        ", "return", "self", ".", "format_checkpoint_name", "(", "epoch", ",", "ckpt_name_metrics", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.CSVLogger.log_hyperparams": [[57, 61], ["callbacks.CSVLogger._convert_params", "callbacks.CSVLogger.experiment.log_hparams"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.loggers.ExperimentWriter.log_hparams"], ["@", "rank_zero_only", "\n", "def", "log_hyperparams", "(", "self", ",", "params", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "params", "=", "self", ".", "_convert_params", "(", "params", ")", "\n", "self", ".", "experiment", ".", "log_hparams", "(", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.CSVLogger.log_dir": [[62, 65], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "log_dir", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback.__init__": [[68, 77], ["pytorch_lightning.callbacks.base.Callback.__init__", "callbacks.PlotCallback.__init_plots_dir"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback.__init_plots_dir"], ["    ", "def", "__init__", "(", "self", ",", "n_plots", ",", "dirpath", ",", "train", "=", "False", ",", "valid", "=", "True", ",", "test", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_plots", "=", "n_plots", "\n", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "test", "=", "test", "\n", "self", ".", "valid", "=", "valid", "\n", "\n", "self", ".", "__init_plots_dir", "(", "dirpath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback.make_plots": [[78, 80], ["None"], "methods", ["None"], ["", "def", "make_plots", "(", "self", ",", "pl_module", ",", "batch", ",", "trainer", ",", "dataset", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback.on_train_batch_end": [[81, 86], ["callbacks.PlotCallback.make_plots"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PercentageCompleationPlotCallback.make_plots"], ["", "def", "on_train_batch_end", "(", "\n", "self", ",", "trainer", ",", "pl_module", ",", "outputs", ",", "batch", ",", "batch_idx", ",", "dataloader_idx", "\n", ")", ":", "\n", "        ", "if", "(", "batch_idx", "==", "0", ")", "and", "self", ".", "train", ":", "\n", "            ", "self", ".", "make_plots", "(", "pl_module", ",", "batch", ",", "trainer", ",", "\"train\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback.on_validation_batch_end": [[87, 92], ["callbacks.PlotCallback.make_plots"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PercentageCompleationPlotCallback.make_plots"], ["", "", "def", "on_validation_batch_end", "(", "\n", "self", ",", "trainer", ",", "pl_module", ",", "outputs", ",", "batch", ",", "batch_idx", ",", "dataloader_idx", "\n", ")", ":", "\n", "        ", "if", "(", "batch_idx", "==", "0", ")", "and", "self", ".", "valid", ":", "\n", "            ", "self", ".", "make_plots", "(", "pl_module", ",", "batch", ",", "trainer", ",", "\"valid\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback.on_test_batch_end": [[93, 98], ["callbacks.PlotCallback.make_plots"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PercentageCompleationPlotCallback.make_plots"], ["", "", "def", "on_test_batch_end", "(", "\n", "self", ",", "trainer", ",", "pl_module", ",", "outputs", ",", "batch", ",", "batch_idx", ",", "dataloader_idx", "\n", ")", ":", "\n", "        ", "if", "(", "batch_idx", "==", "0", ")", "and", "self", ".", "test", ":", "\n", "            ", "self", ".", "make_plots", "(", "pl_module", ",", "batch", ",", "trainer", ",", "\"test\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback._save_plot": [[99, 103], ["callbacks.PlotCallback._fs.makedirs", "matplotlib.savefig", "matplotlib.savefig", "os.path.dirname", "os.path.dirname", "os.path.dirname", "os.path.dirname"], "methods", ["None"], ["", "", "def", "_save_plot", "(", "self", ",", "filepath", ",", "trainer", ")", ":", "\n", "        ", "if", "trainer", ".", "is_global_zero", ":", "\n", "            ", "self", ".", "_fs", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "filepath", ")", ",", "exist_ok", "=", "True", ")", "\n", "plt", ".", "savefig", "(", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback.__init_plots_dir": [[104, 111], ["pytorch_lightning.utilities.cloud_io.get_filesystem", "str", "os.path.realpath", "os.path.realpath", "os.path.realpath", "os.path.realpath"], "methods", ["None"], ["", "", "def", "__init_plots_dir", "(", "self", ",", "dirpath", ")", ":", "\n", "        ", "self", ".", "_fs", "=", "get_filesystem", "(", "str", "(", "dirpath", ")", ")", "\n", "\n", "if", "dirpath", "and", "self", ".", "_fs", ".", "protocol", "==", "\"file\"", ":", "\n", "            ", "dirpath", "=", "os", ".", "path", ".", "realpath", "(", "dirpath", ")", "\n", "\n", "", "self", ".", "dirpath", "=", "dirpath", "or", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback.__resolve_ckpt_dir": [[112, 150], ["trainer.accelerator_backend.broadcast", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "callbacks.PlotCallback._fs.makedirs", "isinstance"], "methods", ["None"], ["", "def", "__resolve_ckpt_dir", "(", "self", ",", "trainer", ",", "pl_module", ")", ":", "\n", "        ", "\"\"\"\n        Determines model checkpoint save directory at runtime. References attributes from the\n        trainer's logger to determine where to save checkpoints.\n        The base path for saving weights is set in this priority:\n\n        1.  Checkpoint callback's path (if passed in)\n        2.  The default_root_dir from trainer if trainer has no logger\n        3.  The weights_save_path from trainer, if user provides it\n        4.  User provided weights_saved_path\n\n        The base path gets extended with logger name and version (if these are available)\n        and subfolder \"checkpoints\".\n        \"\"\"", "\n", "if", "self", ".", "dirpath", "is", "not", "None", ":", "\n", "            ", "return", "# short circuit", "\n", "\n", "", "if", "trainer", ".", "logger", "is", "not", "None", ":", "\n", "            ", "save_dir", "=", "trainer", ".", "logger", ".", "save_dir", "or", "trainer", ".", "default_root_dir", "\n", "\n", "version", "=", "(", "\n", "trainer", ".", "logger", ".", "version", "\n", "if", "isinstance", "(", "trainer", ".", "logger", ".", "version", ",", "str", ")", "\n", "else", "f\"version_{trainer.logger.version}\"", "\n", ")", "\n", "\n", "version", ",", "name", "=", "trainer", ".", "accelerator_backend", ".", "broadcast", "(", "\n", "(", "version", ",", "trainer", ".", "logger", ".", "name", ")", "\n", ")", "\n", "\n", "ckpt_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "name", ",", "version", ",", "\"checkpoints\"", ")", "\n", "", "else", ":", "\n", "            ", "ckpt_path", "=", "os", ".", "path", ".", "join", "(", "trainer", ".", "weights_save_path", ",", "\"checkpoints\"", ")", "\n", "\n", "", "self", ".", "dirpath", "=", "ckpt_path", "\n", "\n", "if", "trainer", ".", "is_global_zero", ":", "\n", "            ", "self", ".", "_fs", ".", "makedirs", "(", "self", ".", "dirpath", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.InferencePlotCallback.__init__": [[153, 155], ["callbacks.PlotCallback.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.InferencePlotCallback.make_plots": [[156, 199], ["pl_module.forward", "X_context.to.to.cpu().detach", "Y_context.to.to.cpu().detach", "X_target.to.to.cpu().detach", "Y_target.cpu().detach.cpu().detach.cpu().detach", "Y_prediction_mean.cpu().detach.cpu().detach.cpu().detach", "Y_prediction_cov.cpu().detach.cpu().detach.cpu().detach", "range", "X_context.to.to.to", "Y_context.to.to.to", "X_target.to.to.to", "matplotlib.subplots", "matplotlib.subplots", "steer_cnp.utils.plot_inference", "steer_cnp.utils.plot_vector_field", "callbacks.InferencePlotCallback._save_plot", "matplotlib.close", "matplotlib.close", "X_context.to.to.cpu", "Y_context.to.to.cpu", "X_target.to.to.cpu", "Y_target.cpu().detach.cpu().detach.cpu", "Y_prediction_mean.cpu().detach.cpu().detach.cpu", "Y_prediction_cov.cpu().detach.cpu().detach.cpu", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.forward", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_inference", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback._save_plot"], ["", "def", "make_plots", "(", "self", ",", "pl_module", ",", "batch", ",", "trainer", ",", "dataset", ")", ":", "\n", "        ", "X_context", ",", "Y_context", ",", "X_target", ",", "Y_target", "=", "batch", "\n", "\n", "if", "trainer", ".", "on_gpu", ":", "\n", "            ", "X_context", "=", "X_context", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "Y_context", "=", "Y_context", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "X_target", "=", "X_target", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "\n", "# print(\"INFERENCE PLOT: \", trainer.root_device, trainer.root_gpu, trainer.on_gpu)", "\n", "# print(\"INFERENCE PLOT: \", X_context.device, Y_context.device, X_target.device)", "\n", "\n", "", "Y_prediction_mean", ",", "Y_prediction_cov", "=", "pl_module", ".", "forward", "(", "\n", "X_context", ",", "Y_context", ",", "X_target", "\n", ")", "\n", "\n", "X_context", "=", "X_context", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_context", "=", "Y_context", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "X_target", "=", "X_target", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_target", "=", "Y_target", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_prediction_mean", "=", "Y_prediction_mean", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_prediction_cov", "=", "Y_prediction_cov", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_plots", ")", ":", "\n", "            ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "plot_inference", "(", "\n", "X_context", "[", "i", "]", ",", "\n", "Y_context", "[", "i", "]", ",", "\n", "X_target", "[", "i", "]", ",", "\n", "Y_prediction_mean", "[", "i", "]", ",", "\n", "Y_prediction_cov", "[", "i", "]", ",", "\n", "ax", "=", "ax", ",", "\n", ")", "\n", "plot_vector_field", "(", "X_target", "[", "i", "]", ",", "Y_target", "[", "i", "]", ",", "ax", "=", "ax", ")", "\n", "\n", "self", ".", "_save_plot", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dirpath", ",", "\n", "f\"inference_epoch_{trainer.current_epoch}_{trainer.global_step}_{dataset}_{i}.png\"", ",", "\n", ")", ",", "\n", "trainer", ",", "\n", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.GPComparePlotCallback.__init__": [[202, 207], ["callbacks.PlotCallback.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "kernel", ",", "obs_noise", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "kernel", "=", "kernel", "\n", "self", ".", "obs_noise", "=", "obs_noise", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.GPComparePlotCallback.make_plots": [[208, 274], ["pl_module.forward", "steer_cnp.gp.conditional_gp_posterior", "X_context.to.to.cpu().detach", "Y_context.to.to.cpu().detach", "X_target.to.to.cpu().detach", "Y_target.cpu().detach.cpu().detach.cpu().detach", "Y_prediction_mean.cpu().detach.cpu().detach.cpu().detach", "Y_prediction_cov.cpu().detach.cpu().detach.cpu().detach", "Y_gp_mean.cpu().detach.cpu().detach.cpu().detach", "Y_gp_cov.cpu().detach.cpu().detach.cpu().detach", "range", "X_context.to.to.to", "Y_context.to.to.to", "X_target.to.to.to", "matplotlib.subplots", "matplotlib.subplots", "steer_cnp.utils.plot_vector_field", "steer_cnp.utils.plot_vector_field", "steer_cnp.utils.plot_vector_field", "steer_cnp.utils.plot_covariances", "steer_cnp.utils.plot_covariances", "matplotlib.legend", "matplotlib.legend", "callbacks.GPComparePlotCallback._save_plot", "matplotlib.close", "matplotlib.close", "X_context.to.to.cpu", "Y_context.to.to.cpu", "X_target.to.to.cpu", "Y_target.cpu().detach.cpu().detach.cpu", "Y_prediction_mean.cpu().detach.cpu().detach.cpu", "Y_prediction_cov.cpu().detach.cpu().detach.cpu", "Y_gp_mean.cpu().detach.cpu().detach.cpu", "Y_gp_cov.cpu().detach.cpu().detach.cpu", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.forward", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.gp.gp.conditional_gp_posterior", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_vector_field", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_covariances", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_covariances", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback._save_plot"], ["", "def", "make_plots", "(", "self", ",", "pl_module", ",", "batch", ",", "trainer", ",", "dataset", ")", ":", "\n", "        ", "X_context", ",", "Y_context", ",", "X_target", ",", "Y_target", "=", "batch", "\n", "\n", "if", "trainer", ".", "on_gpu", ":", "\n", "            ", "X_context", "=", "X_context", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "Y_context", "=", "Y_context", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "X_target", "=", "X_target", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "\n", "", "Y_prediction_mean", ",", "Y_prediction_cov", "=", "pl_module", ".", "forward", "(", "\n", "X_context", ",", "Y_context", ",", "X_target", "\n", ")", "\n", "\n", "Y_gp_mean", ",", "_", ",", "Y_gp_cov", "=", "conditional_gp_posterior", "(", "\n", "X_context", ",", "Y_context", ",", "X_target", ",", "self", ".", "kernel", ",", "obs_noise", "=", "self", ".", "obs_noise", "\n", ")", "\n", "\n", "X_context", "=", "X_context", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_context", "=", "Y_context", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "X_target", "=", "X_target", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_target", "=", "Y_target", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_prediction_mean", "=", "Y_prediction_mean", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_prediction_cov", "=", "Y_prediction_cov", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_gp_mean", "=", "Y_gp_mean", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y_gp_cov", "=", "Y_gp_cov", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_plots", ")", ":", "\n", "            ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "plot_vector_field", "(", "\n", "X_context", "[", "i", "]", ",", "Y_context", "[", "i", "]", ",", "scale", "=", "50", ",", "ax", "=", "ax", ",", "color", "=", "\"black\"", "\n", ")", "\n", "\n", "plot_vector_field", "(", "\n", "X_target", "[", "i", "]", ",", "\n", "Y_prediction_mean", "[", "i", "]", ",", "\n", "scale", "=", "50", ",", "\n", "ax", "=", "ax", ",", "\n", "color", "=", "\"blue\"", ",", "\n", "label", "=", "\"cnp\"", ",", "\n", ")", "\n", "plot_vector_field", "(", "\n", "X_target", "[", "i", "]", ",", "Y_gp_mean", "[", "i", "]", ",", "scale", "=", "50", ",", "ax", "=", "ax", ",", "color", "=", "\"red\"", ",", "label", "=", "\"gp\"", "\n", ")", "\n", "\n", "plot_covariances", "(", "\n", "X_target", "[", "i", "]", ",", "\n", "Y_prediction_cov", "[", "i", "]", ",", "\n", "ax", "=", "ax", ",", "\n", "scale", "=", "1.5", ",", "\n", "color", "=", "\"blue\"", ",", "\n", "alpha", "=", "0.5", ",", "\n", ")", "\n", "plot_covariances", "(", "\n", "X_target", "[", "i", "]", ",", "Y_gp_cov", "[", "i", "]", ",", "ax", "=", "ax", ",", "scale", "=", "1.5", ",", "color", "=", "\"red\"", ",", "alpha", "=", "0.5", "\n", ")", "\n", "\n", "plt", ".", "legend", "(", ")", "\n", "\n", "self", ".", "_save_plot", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dirpath", ",", "\n", "f\"epoch_{trainer.current_epoch}_{trainer.global_step}_{dataset}_{i}.png\"", ",", "\n", ")", ",", "\n", "trainer", ",", "\n", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.ImageCompleationPlotCallback.__init__": [[277, 281], ["callbacks.PlotCallback.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "fill_color", "=", "[", "0.0", ",", "0.0", ",", "1.0", "]", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "fill_color", "=", "fill_color", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.ImageCompleationPlotCallback.make_plots": [[282, 329], ["torch.cat", "torch.cat", "pl_module.forward", "X_context.to.to.cpu().numpy", "Y_context.to.to.cpu().numpy", "X_target.to.to.cpu().numpy", "Y_target.to.to.cpu().numpy", "Y_prediction_mean.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "Y_prediction_cov.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "int", "range", "X_context.to.to.to", "Y_context.to.to.to", "X_target.to.to.to", "Y_target.to.to.to", "math.sqrt", "steer_cnp.utils.plot_image_compleation", "callbacks.ImageCompleationPlotCallback._save_plot", "matplotlib.close", "matplotlib.close", "X_context.to.to.cpu", "Y_context.to.to.cpu", "X_target.to.to.cpu", "Y_target.to.to.cpu", "Y_prediction_mean.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "Y_prediction_cov.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "Y_prediction_mean.detach().cpu().numpy.detach().cpu().numpy.detach", "Y_prediction_cov.detach().cpu().numpy.detach().cpu().numpy.detach"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.forward", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.utils.plotting.plot_image_compleation", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback._save_plot"], ["", "def", "make_plots", "(", "self", ",", "pl_module", ",", "batch", ",", "trainer", ",", "dataset", ")", ":", "\n", "        ", "X_context", ",", "Y_context", ",", "X_target", ",", "Y_target", "=", "batch", "\n", "\n", "if", "trainer", ".", "on_gpu", ":", "\n", "            ", "X_context", "=", "X_context", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "Y_context", "=", "Y_context", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "X_target", "=", "X_target", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "Y_target", "=", "Y_target", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "\n", "", "X_target", "=", "torch", ".", "cat", "(", "[", "X_context", ",", "X_target", "]", ",", "dim", "=", "1", ")", "\n", "Y_target", "=", "torch", ".", "cat", "(", "[", "Y_context", ",", "Y_target", "]", ",", "dim", "=", "1", ")", "\n", "\n", "Y_prediction_mean", ",", "Y_prediction_cov", "=", "pl_module", ".", "forward", "(", "\n", "X_context", ",", "Y_context", ",", "X_target", "\n", ")", "\n", "\n", "X_context", "=", "X_context", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "Y_context", "=", "Y_context", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "X_target", "=", "X_target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "Y_target", "=", "Y_target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "Y_prediction_mean", "=", "Y_prediction_mean", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "Y_prediction_cov", "=", "Y_prediction_cov", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "img_size", "=", "int", "(", "math", ".", "sqrt", "(", "X_target", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_plots", ")", ":", "\n", "\n", "            ", "fig", ",", "axs", "=", "plot_image_compleation", "(", "\n", "X_context", "[", "i", "]", ",", "\n", "Y_context", "[", "i", "]", ",", "\n", "X_target", "[", "i", "]", ",", "\n", "Y_target", "[", "i", "]", ",", "\n", "Y_prediction_mean", "[", "i", "]", ",", "\n", "Y_prediction_cov", "[", "i", "]", ",", "\n", "img_size", ",", "\n", "self", ".", "fill_color", ",", "\n", ")", "\n", "\n", "self", ".", "_save_plot", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dirpath", ",", "\n", "f\"epoch_{trainer.current_epoch}_{trainer.global_step}_{dataset}_{i}.png\"", ",", "\n", ")", ",", "\n", "trainer", ",", "\n", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PercentageCompleationPlotCallback.__init__": [[362, 373], ["callbacks.PlotCallback.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "*", "args", ",", "\n", "percentages", "=", "[", "0.01", ",", "0.03", ",", "0.05", ",", "0.07", ",", "0.1", ",", "0.2", ",", "0.3", ",", "0.5", ",", "0.8", "]", ",", "\n", "fill_color", "=", "[", "0.0", ",", "0.0", ",", "1.0", "]", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "fill_color", "=", "fill_color", "\n", "self", ".", "percentages", "=", "percentages", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PercentageCompleationPlotCallback.make_plots": [[374, 448], ["torch.cat", "torch.cat", "X_target.to.to.detach().cpu().numpy", "int", "range", "X_context.to.to.to", "Y_context.to.to.to", "X_target.to.to.to", "Y_target.to.to.to", "int", "pl_module.forward", "X_contexts.append", "Y_contexts.append", "Y_prediction_means.append", "Y_prediction_covs.append", "math.sqrt", "matplotlib.subplots", "matplotlib.subplots", "enumerate", "matplotlib.tight_layout", "matplotlib.tight_layout", "callbacks.PercentageCompleationPlotCallback._save_plot", "matplotlib.close", "matplotlib.close", "X_context.to.to.detach().cpu().numpy", "Y_context.to.to.detach().cpu().numpy", "Y_prediction_mean.detach().cpu().numpy", "Y_prediction_cov.detach().cpu().numpy", "X_target.to.to.detach().cpu", "len", "callbacks.plot_context", "callbacks.plot_mean", "[].set_ylabel", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "X_context.to.to.detach().cpu", "Y_context.to.to.detach().cpu", "Y_prediction_mean.detach().cpu", "Y_prediction_cov.detach().cpu", "X_target.to.to.detach", "int", "X_context.to.to.detach", "Y_context.to.to.detach", "Y_prediction_mean.detach", "Y_prediction_cov.detach", "len"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.forward", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.PlotCallback._save_plot", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.plot_context", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.plot_mean"], ["", "def", "make_plots", "(", "self", ",", "pl_module", ",", "batch", ",", "trainer", ",", "dataset", ")", ":", "\n", "        ", "X_context", ",", "Y_context", ",", "X_target", ",", "Y_target", "=", "batch", "\n", "\n", "if", "trainer", ".", "on_gpu", ":", "\n", "            ", "X_context", "=", "X_context", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "Y_context", "=", "Y_context", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "X_target", "=", "X_target", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "Y_target", "=", "Y_target", ".", "to", "(", "trainer", ".", "root_gpu", ")", "\n", "\n", "", "X_target", "=", "torch", ".", "cat", "(", "[", "X_context", ",", "X_target", "]", ",", "dim", "=", "1", ")", "\n", "Y_target", "=", "torch", ".", "cat", "(", "[", "Y_context", ",", "Y_target", "]", ",", "dim", "=", "1", ")", "\n", "\n", "n", "=", "X_target", ".", "shape", "[", "1", "]", "\n", "\n", "X_contexts", "=", "[", "]", "\n", "Y_contexts", "=", "[", "]", "\n", "Y_prediction_means", "=", "[", "]", "\n", "Y_prediction_covs", "=", "[", "]", "\n", "\n", "for", "p", "in", "self", ".", "percentages", ":", "\n", "            ", "np", "=", "int", "(", "n", "*", "p", ")", "\n", "X_context", "=", "X_target", "[", ":", ",", ":", "np", "]", "\n", "Y_context", "=", "Y_target", "[", ":", ",", ":", "np", "]", "\n", "\n", "Y_prediction_mean", ",", "Y_prediction_cov", "=", "pl_module", ".", "forward", "(", "\n", "X_context", ",", "Y_context", ",", "X_target", "\n", ")", "\n", "\n", "X_contexts", ".", "append", "(", "X_context", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "Y_contexts", ".", "append", "(", "Y_context", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "Y_prediction_means", ".", "append", "(", "Y_prediction_mean", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "Y_prediction_covs", ".", "append", "(", "Y_prediction_cov", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "X_target", "=", "X_target", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "img_size", "=", "int", "(", "math", ".", "sqrt", "(", "X_target", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_plots", ")", ":", "\n", "\n", "            ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "\n", "len", "(", "self", ".", "percentages", ")", ",", "\n", "2", ",", "\n", "sharex", "=", "True", ",", "\n", "sharey", "=", "True", ",", "\n", "figsize", "=", "(", "2", "*", "img_size", "/", "28", ",", "len", "(", "self", ".", "percentages", ")", "*", "img_size", "/", "28", ")", ",", "\n", ")", "\n", "\n", "for", "j", ",", "p", "in", "enumerate", "(", "self", ".", "percentages", ")", ":", "\n", "                ", "plot_context", "(", "\n", "X_contexts", "[", "j", "]", "[", "i", "]", ",", "\n", "Y_contexts", "[", "j", "]", "[", "i", "]", ",", "\n", "img_size", ",", "\n", "self", ".", "fill_color", ",", "\n", "ax", "=", "axs", "[", "j", "]", "[", "0", "]", ",", "\n", ")", "\n", "plot_mean", "(", "\n", "X_target", "[", "i", "]", ",", "\n", "Y_prediction_means", "[", "j", "]", "[", "i", "]", ",", "\n", "img_size", ",", "\n", "ax", "=", "axs", "[", "j", "]", "[", "1", "]", ",", "\n", ")", "\n", "axs", "[", "j", "]", "[", "0", "]", ".", "set_ylabel", "(", "f\"{int(p*100)}\\%\"", ")", "\n", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "\n", "self", ".", "_save_plot", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dirpath", ",", "\n", "f\"epoch_{trainer.current_epoch}_{trainer.global_step}_{dataset}_{i}_percentages.png\"", ",", "\n", ")", ",", "\n", "trainer", ",", "\n", ")", "\n", "\n", "plt", ".", "close", "(", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.interpolate_filename": [[32, 45], ["pytorch_lightning.utilities.cloud_io.get_filesystem", "os.path.join", "os.path.join", "pytorch_lightning.utilities.cloud_io.get_filesystem.exists", "str", "os.path.join", "os.path.join", "str"], "function", ["None"], ["def", "interpolate_filename", "(", "filepath", ")", ":", "\n", "    ", "version_cnt", "=", "0", "\n", "\n", "fs", "=", "get_filesystem", "(", "filepath", ")", "\n", "\n", "version", "=", "0", "\n", "interpolate_filepath", "=", "os", ".", "path", ".", "join", "(", "filepath", ",", "str", "(", "version", ")", ")", "\n", "\n", "while", "fs", ".", "exists", "(", "interpolate_filepath", ")", ":", "\n", "        ", "version", "+=", "1", "\n", "interpolate_filepath", "=", "os", ".", "path", ".", "join", "(", "filepath", ",", "str", "(", "version", ")", ")", "\n", "# this epoch called before", "\n", "", "return", "interpolate_filepath", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.plot_context": [[331, 348], ["ax.scatter", "ax.set_facecolor", "ax.set_aspect", "ax.get_xaxis().set_ticks", "ax.get_yaxis().set_ticks", "ax.set_ylim", "ax.set_xlim", "ax.get_xaxis", "ax.get_yaxis"], "function", ["None"], ["", "", "", "def", "plot_context", "(", "X", ",", "Y", ",", "img_size", ",", "fill_color", "=", "[", "0", ",", "0", ",", "1", "]", ",", "ax", "=", "None", ")", ":", "\n", "    ", "ax", ".", "scatter", "(", "\n", "X", "[", ":", ",", "0", "]", ",", "\n", "X", "[", ":", ",", "1", "]", ",", "\n", "s", "=", "1", ",", "\n", "c", "=", "Y", ",", "\n", "marker", "=", "\"s\"", ",", "\n", "cmap", "=", "\"gray\"", ",", "\n", "vmin", "=", "0", ",", "\n", "vmax", "=", "1", ",", "\n", ")", "\n", "ax", ".", "set_facecolor", "(", "fill_color", ")", "\n", "ax", ".", "set_aspect", "(", "\"equal\"", ")", "\n", "ax", ".", "get_xaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "ax", ".", "get_yaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "ax", ".", "set_ylim", "(", "[", "0", ",", "img_size", "-", "1", "]", ")", "\n", "ax", ".", "set_xlim", "(", "[", "0", ",", "img_size", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.callbacks.plot_mean": [[350, 359], ["ax.imshow", "ax.get_xaxis().set_ticks", "ax.get_yaxis().set_ticks", "steer_cnp.utils.points_to_img", "ax.get_xaxis", "ax.get_yaxis"], "function", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.tests.test_mnist_data.points_to_img"], ["", "def", "plot_mean", "(", "X", ",", "Y", ",", "img_size", ",", "ax", "=", "None", ")", ":", "\n", "    ", "ax", ".", "imshow", "(", "\n", "points_to_img", "(", "img_size", ",", "X", ",", "Y", "[", ":", ",", "0", "]", ")", ",", "\n", "cmap", "=", "\"gray\"", ",", "\n", "vmin", "=", "0", ",", "\n", "vmax", "=", "1", ",", "\n", ")", "\n", "ax", ".", "get_xaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "ax", ".", "get_yaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningGPDataModule.__init__": [[10, 16], ["pytorch_lightning.LightningDataModule.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "batch_size", ",", "splits", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "splits", "=", "splits", "\n", "self", ".", "kwargs", "=", "{", "**", "{", "\"num_workers\"", ":", "4", ",", "\"pin_memory\"", ":", "True", "}", ",", "**", "kwargs", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningGPDataModule.setup": [[17, 21], ["len", "torch.utils.data.random_split", "int"], "methods", ["None"], ["", "def", "setup", "(", "self", ",", "stage", "=", "None", ")", ":", "\n", "        ", "n", "=", "len", "(", "self", ".", "dataset", ")", "\n", "self", ".", "trainset", ",", "self", ".", "validset", ",", "self", ".", "testset", "=", "random_split", "(", "\n", "self", ".", "dataset", ",", "[", "int", "(", "i", "*", "n", ")", "for", "i", "in", "self", ".", "splits", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningGPDataModule.train_dataloader": [[23, 30], ["torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "train_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "\n", "self", ".", "trainset", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "collate_fn", "=", "self", ".", "dataset", ".", "_collate_fn", ",", "\n", "**", "self", ".", "kwargs", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningGPDataModule.val_dataloader": [[32, 39], ["torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "val_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "\n", "self", ".", "validset", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "self", ".", "dataset", ".", "_collate_fn", ",", "\n", "**", "self", ".", "kwargs", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningGPDataModule.test_dataloader": [[41, 48], ["torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "test_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "\n", "self", ".", "testset", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "self", ".", "dataset", ".", "_collate_fn", ",", "\n", "**", "self", ".", "kwargs", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.__init__": [[52, 70], ["pytorch_lightning.LightningDataModule.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "trainset", ",", "\n", "testset", ",", "\n", "batch_size", ",", "\n", "test_valid_splits", ",", "\n", "test_batch_size", "=", "None", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "test_batch_size", "=", "(", "\n", "test_batch_size", "if", "test_batch_size", "is", "not", "None", "else", "batch_size", "\n", ")", "\n", "self", ".", "trainset", "=", "trainset", "\n", "self", ".", "testset", "=", "testset", "\n", "self", ".", "test_valid_splits", "=", "test_valid_splits", "\n", "self", ".", "kwargs", "=", "{", "**", "{", "\"num_workers\"", ":", "4", ",", "\"pin_memory\"", ":", "True", "}", ",", "**", "kwargs", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.setup": [[71, 95], ["isinstance", "len", "torch.utils.data.random_split", "len", "torch.utils.data.random_split", "testset.append", "validset.append", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "setup", "(", "self", ",", "stage", "=", "None", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "testset", ",", "list", ")", ":", "\n", "            ", "testset", "=", "[", "]", "\n", "validset", "=", "[", "]", "\n", "for", "dataset", "in", "self", ".", "testset", ":", "\n", "                ", "n", "=", "len", "(", "dataset", ")", "\n", "ts", ",", "vs", "=", "random_split", "(", "\n", "dataset", ",", "\n", "[", "\n", "int", "(", "self", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "n", "-", "int", "(", "self", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "]", ",", "\n", ")", "\n", "testset", ".", "append", "(", "ts", ")", "\n", "validset", ".", "append", "(", "vs", ")", "\n", "", "self", ".", "testset", "=", "testset", "\n", "self", ".", "validset", "=", "validset", "\n", "", "else", ":", "\n", "            ", "n", "=", "len", "(", "self", ".", "testset", ")", "\n", "self", ".", "testset", ",", "self", ".", "validset", "=", "random_split", "(", "\n", "self", ".", "testset", ",", "\n", "[", "\n", "int", "(", "self", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "n", "-", "int", "(", "self", ".", "test_valid_splits", "[", "0", "]", "*", "n", ")", ",", "\n", "]", ",", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.train_dataloader": [[98, 105], ["torch.utils.data.DataLoader"], "methods", ["None"], ["", "", "def", "train_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "\n", "self", ".", "trainset", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "collate_fn", "=", "self", ".", "trainset", ".", "_collate_fn", ",", "\n", "**", "self", ".", "kwargs", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.val_dataloader": [[107, 126], ["isinstance", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "val_dataloader", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "validset", ",", "list", ")", ":", "\n", "            ", "return", "[", "\n", "DataLoader", "(", "\n", "vs", ",", "\n", "batch_size", "=", "self", ".", "test_batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "self", ".", "trainset", ".", "_collate_fn", ",", "\n", "**", "self", ".", "kwargs", "\n", ")", "\n", "for", "vs", "in", "self", ".", "validset", "\n", "]", "\n", "", "else", ":", "\n", "            ", "return", "DataLoader", "(", "\n", "self", ".", "validset", ",", "\n", "batch_size", "=", "self", ".", "test_batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "self", ".", "trainset", ".", "_collate_fn", ",", "\n", "**", "self", ".", "kwargs", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.lightning.datamodules.LightningMNISTDataModule.test_dataloader": [[128, 147], ["isinstance", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "", "def", "test_dataloader", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "testset", ",", "list", ")", ":", "\n", "            ", "return", "[", "\n", "DataLoader", "(", "\n", "ts", ",", "\n", "batch_size", "=", "self", ".", "test_batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "self", ".", "trainset", ".", "_collate_fn", ",", "\n", "**", "self", ".", "kwargs", "\n", ")", "\n", "for", "ts", "in", "self", ".", "testset", "\n", "]", "\n", "", "else", ":", "\n", "            ", "return", "DataLoader", "(", "\n", "self", ".", "testset", ",", "\n", "batch_size", "=", "self", ".", "test_batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "self", ".", "trainset", ".", "_collate_fn", ",", "\n", "**", "self", ".", "kwargs", "\n", ")", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.__init__": [[8, 13], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "rkhs_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "rkhs_dim", "=", "rkhs_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.flatten_gram_matrix": [[14, 23], ["einops.rearrange"], "methods", ["None"], ["", "def", "flatten_gram_matrix", "(", "self", ",", "K", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            K - torch.tensor - shape (batch_size,n,m,D_1,D_2)\n        Output:\n            torch-tensor - shape (batch_size,n*D_1,m*D_2) - block (i,j) of size D_1*D_2 is matrix X[i,j] for i=1,...,n,j=1,...,m\n        \"\"\"", "\n", "\n", "return", "rearrange", "(", "K", ",", "\"b n m d1 d2 -> b (n d1) (m d2)\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.uprank_inputs": [[24, 40], ["len", "X.unsqueeze.unsqueeze.unsqueeze", "len", "Y.unsqueeze.unsqueeze.unsqueeze"], "methods", ["None"], ["", "def", "uprank_inputs", "(", "self", ",", "X", ",", "Y", ")", ":", "\n", "        ", "\"\"\"Upranks inputs from non batched to batched.\n        Fills in the second argument with the first if missing.\n        Unsqueezes the correct dimension for kernel operations.\n        \"\"\"", "\n", "upranked", "=", "False", "\n", "if", "Y", "==", "None", ":", "\n", "            ", "Y", "=", "X", "\n", "", "if", "len", "(", "X", ".", "shape", ")", "==", "2", ":", "\n", "            ", "X", "=", "X", ".", "unsqueeze", "(", "0", ")", "\n", "upranked", "=", "True", "\n", "", "if", "len", "(", "Y", ".", "shape", ")", "==", "2", ":", "\n", "            ", "upranked", "=", "True", "\n", "Y", "=", "Y", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "", "return", "X", ",", "Y", ",", "upranked", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.forward": [[41, 56], ["NotImplementedError"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n        X: torch.tensor\n            Shape: (...,n,d)...n number of obs, d...dimension of state space\n        Y: torch.tensor or None\n            Shape: (...,m,d)...m number of obs, d...dimension of state space\n\n        Output:\n        Gram_matrix: torch.tensor\n                    Shape (...,n,m,rkhs_dim,rkhs_dim) (if Y is not given (...,n,n,rkhs_dim,rkhs_dim))\n                    Block i,j of size DxD gives Kernel value of i-th X-data point and\n                    j-th Y data point\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.ScalarKernel.__init__": [[59, 61], ["kernels.Kernel.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "input_dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFKernel.__init__": [[64, 69], ["kernels.ScalarKernel.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "length_scale", ",", "sigma_var", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "input_dim", ")", "\n", "\n", "self", ".", "length_scale", "=", "length_scale", "\n", "self", ".", "sigma_var", "=", "sigma_var", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFKernel.forward": [[70, 87], ["kernels.RBFKernel.uprank_inputs", "X.unsqueeze.unsqueeze.unsqueeze", "Y.unsqueeze.unsqueeze.unsqueeze", "K.squeeze.squeeze.squeeze().squeeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "kernels.RBFKernel.flatten_gram_matrix", "K.squeeze.squeeze.squeeze", "K.squeeze.squeeze.squeeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.uprank_inputs", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.flatten_gram_matrix"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "X", ",", "Y", ",", "upranked", "=", "self", ".", "uprank_inputs", "(", "X", ",", "Y", ")", "\n", "\n", "X", "=", "X", ".", "unsqueeze", "(", "-", "2", ")", "\n", "Y", "=", "Y", ".", "unsqueeze", "(", "-", "3", ")", "\n", "\n", "dists", "=", "(", "(", "X", "-", "Y", ")", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "K", "=", "self", ".", "sigma_var", "*", "torch", ".", "exp", "(", "-", "0.5", "*", "dists", "/", "self", ".", "length_scale", ")", ".", "unsqueeze", "(", "\n", "-", "1", "\n", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "if", "flatten", ":", "\n", "            ", "K", "=", "self", ".", "flatten_gram_matrix", "(", "K", ")", "\n", "", "if", "upranked", ":", "\n", "            ", "K", "=", "K", ".", "squeeze", "(", "0", ")", "\n", "", "return", "K", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFKernelReparametrised.__init__": [[90, 95], ["kernels.ScalarKernel.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "log_length_scale", ",", "sigma_var", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "input_dim", ")", "\n", "\n", "self", ".", "log_length_scale", "=", "log_length_scale", "\n", "self", ".", "sigma_var", "=", "sigma_var", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFKernelReparametrised.forward": [[96, 117], ["kernels.RBFKernelReparametrised.uprank_inputs", "X.unsqueeze.unsqueeze.unsqueeze", "Y.unsqueeze.unsqueeze.unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "K.squeeze.squeeze.squeeze().squeeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "kernels.RBFKernelReparametrised.flatten_gram_matrix", "K.squeeze.squeeze.squeeze", "K.squeeze.squeeze.squeeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.uprank_inputs", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.flatten_gram_matrix"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "X", ",", "Y", ",", "upranked", "=", "self", ".", "uprank_inputs", "(", "X", ",", "Y", ")", "\n", "\n", "X", "=", "X", ".", "unsqueeze", "(", "-", "2", ")", "\n", "Y", "=", "Y", ".", "unsqueeze", "(", "-", "3", ")", "\n", "\n", "length_scale", "=", "torch", ".", "exp", "(", "self", ".", "log_length_scale", ")", "\n", "\n", "dists", "=", "(", "(", "X", "-", "Y", ")", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "# print(\"KERNL: \", dists.device, length_scale.device)", "\n", "\n", "K", "=", "self", ".", "sigma_var", "*", "torch", ".", "exp", "(", "-", "0.5", "*", "dists", "/", "length_scale", ")", ".", "unsqueeze", "(", "\n", "-", "1", "\n", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "if", "flatten", ":", "\n", "            ", "K", "=", "self", ".", "flatten_gram_matrix", "(", "K", ")", "\n", "", "if", "upranked", ":", "\n", "            ", "K", "=", "K", ".", "squeeze", "(", "0", ")", "\n", "", "return", "K", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.DotProductKernel.__init__": [[120, 122], ["kernels.ScalarKernel.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "input_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.DotProductKernel.forward": [[123, 137], ["kernels.DotProductKernel.uprank_inputs", "Y.transpose", "kernels.DotProductKernel.flatten_gram_matrix().squeeze().squeeze", "K.squeeze.squeeze.squeeze", "kernels.DotProductKernel.flatten_gram_matrix().squeeze", "kernels.DotProductKernel.flatten_gram_matrix", "K.squeeze.squeeze.unsqueeze().unsqueeze", "K.squeeze.squeeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.uprank_inputs", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.flatten_gram_matrix"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "X", ",", "Y", ",", "upranked", "=", "self", ".", "uprank_inputs", "(", "X", ",", "Y", ")", "\n", "\n", "K", "=", "X", "@", "Y", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "\n", "if", "flatten", ":", "\n", "            ", "K", "=", "(", "\n", "self", ".", "flatten_gram_matrix", "(", "K", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ")", "\n", ".", "squeeze", "(", "-", "1", ")", "\n", ".", "squeeze", "(", "-", "1", ")", "\n", ")", "\n", "", "if", "upranked", ":", "\n", "            ", "K", "=", "K", ".", "squeeze", "(", "0", ")", "\n", "", "return", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.SeparableKernel.__init__": [[140, 152], ["kernels.Kernel.__init__", "isinstance", "ValueError", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "rkhs_dim", ",", "scalar_kernel", ",", "B", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "input_dim", ",", "rkhs_dim", ")", "\n", "\n", "if", "not", "isinstance", "(", "scalar_kernel", ",", "ScalarKernel", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f\"{scalar_kernel} is not a scalar kernel\"", ")", "\n", "\n", "", "self", ".", "scalar_kernel", "=", "scalar_kernel", "\n", "\n", "if", "B", "is", "None", ":", "\n", "            ", "B", "=", "torch", ".", "eye", "(", "rkhs_dim", ")", "\n", "\n", "", "self", ".", "B", "=", "B", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.SeparableKernel.forward": [[153, 168], ["kernels.SeparableKernel.uprank_inputs", "kernels.SeparableKernel.scalar_kernel", "kernels.SeparableKernel.unsqueeze().unsqueeze", "kernels.SeparableKernel.B.to", "kernels.SeparableKernel.flatten_gram_matrix", "kernels.SeparableKernel.squeeze", "kernels.SeparableKernel.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.uprank_inputs", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.flatten_gram_matrix"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "X", ",", "Y", ",", "upranked", "=", "self", ".", "uprank_inputs", "(", "X", ",", "Y", ")", "\n", "\n", "K", "=", "self", ".", "scalar_kernel", "(", "X", ",", "Y", ",", "flatten", "=", "False", ")", "\n", "\n", "K", "=", "K", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "K", "=", "K", "*", "self", ".", "B", ".", "to", "(", "K", ".", "device", ")", "\n", "\n", "if", "flatten", ":", "\n", "            ", "K", "=", "self", ".", "flatten_gram_matrix", "(", "K", ")", "\n", "", "if", "upranked", ":", "\n", "            ", "K", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "return", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFDivergenceFreeKernel.__init__": [[175, 180], ["kernels.Kernel.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "length_scale", ",", "sigma_var", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dim", ",", "dim", ")", "\n", "\n", "self", ".", "length_scale", "=", "length_scale", "\n", "self", ".", "sigma_var", "=", "sigma_var", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFDivergenceFreeKernel.forward": [[181, 210], ["kernels.RBFDivergenceFreeKernel.uprank_inputs", "X.unsqueeze.unsqueeze.unsqueeze", "Y.unsqueeze.unsqueeze.unsqueeze", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "diff.unsqueeze", "diff.unsqueeze", "kernels.RBFDivergenceFreeKernel.flatten_gram_matrix", "K.squeeze.squeeze.squeeze", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.uprank_inputs", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.flatten_gram_matrix"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "X", ",", "Y", ",", "upranked", "=", "self", ".", "uprank_inputs", "(", "X", ",", "Y", ")", "\n", "\n", "X", "=", "X", ".", "unsqueeze", "(", "-", "2", ")", "\n", "Y", "=", "Y", ".", "unsqueeze", "(", "-", "3", ")", "\n", "\n", "diff", "=", "X", "-", "Y", "\n", "\n", "dists", "=", "(", "diff", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "K", "=", "self", ".", "sigma_var", "*", "torch", ".", "exp", "(", "-", "0.5", "*", "dists", "/", "self", ".", "length_scale", ")", ".", "unsqueeze", "(", "\n", "-", "1", "\n", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "outer_product", "=", "diff", ".", "unsqueeze", "(", "-", "1", ")", "@", "diff", ".", "unsqueeze", "(", "-", "2", ")", "\n", "I", "=", "torch", ".", "eye", "(", "self", ".", "rkhs_dim", ")", ".", "to", "(", "X", ".", "device", ")", "\n", "\n", "A", "=", "(", "outer_product", "/", "self", ".", "length_scale", ")", "+", "(", "\n", "self", ".", "rkhs_dim", "-", "1", "-", "dists", "/", "self", ".", "length_scale", "\n", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "*", "I", "\n", "\n", "K", "=", "A", "*", "K", "\n", "\n", "if", "flatten", ":", "\n", "            ", "K", "=", "self", ".", "flatten_gram_matrix", "(", "K", ")", "\n", "", "if", "upranked", ":", "\n", "            ", "K", "=", "K", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "return", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFDivergenceFreeKernelReparametrised.__init__": [[217, 222], ["kernels.Kernel.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "log_length_scale", ",", "sigma_var", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dim", ",", "dim", ")", "\n", "\n", "self", ".", "log_length_scale", "=", "log_length_scale", "\n", "self", ".", "sigma_var", "=", "sigma_var", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFDivergenceFreeKernelReparametrised.forward": [[223, 254], ["kernels.RBFDivergenceFreeKernelReparametrised.uprank_inputs", "X.unsqueeze.unsqueeze.unsqueeze", "Y.unsqueeze.unsqueeze.unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "diff.unsqueeze", "diff.unsqueeze", "kernels.RBFDivergenceFreeKernelReparametrised.flatten_gram_matrix", "K.squeeze.squeeze.squeeze", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.uprank_inputs", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.flatten_gram_matrix"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "X", ",", "Y", ",", "upranked", "=", "self", ".", "uprank_inputs", "(", "X", ",", "Y", ")", "\n", "\n", "X", "=", "X", ".", "unsqueeze", "(", "-", "2", ")", "\n", "Y", "=", "Y", ".", "unsqueeze", "(", "-", "3", ")", "\n", "\n", "length_scale", "=", "torch", ".", "exp", "(", "self", ".", "log_length_scale", ")", "\n", "\n", "diff", "=", "X", "-", "Y", "\n", "\n", "dists", "=", "(", "diff", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "K", "=", "self", ".", "sigma_var", "*", "torch", ".", "exp", "(", "-", "0.5", "*", "dists", "/", "length_scale", ")", ".", "unsqueeze", "(", "\n", "-", "1", "\n", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "outer_product", "=", "diff", ".", "unsqueeze", "(", "-", "1", ")", "@", "diff", ".", "unsqueeze", "(", "-", "2", ")", "\n", "I", "=", "torch", ".", "eye", "(", "self", ".", "rkhs_dim", ")", ".", "to", "(", "X", ".", "device", ")", "\n", "\n", "A", "=", "(", "outer_product", "/", "length_scale", ")", "+", "(", "\n", "self", ".", "rkhs_dim", "-", "1", "-", "dists", "/", "length_scale", "\n", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "*", "I", "\n", "\n", "K", "=", "A", "*", "K", "\n", "\n", "if", "flatten", ":", "\n", "            ", "K", "=", "self", ".", "flatten_gram_matrix", "(", "K", ")", "\n", "", "if", "upranked", ":", "\n", "            ", "K", "=", "K", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "return", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernel.__init__": [[261, 266], ["kernels.Kernel.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "length_scale", ",", "sigma_var", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dim", ",", "dim", ")", "\n", "\n", "self", ".", "length_scale", "=", "length_scale", "\n", "self", ".", "sigma_var", "=", "sigma_var", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernel.forward": [[267, 294], ["kernels.RBFCurlFreeKernel.uprank_inputs", "X.unsqueeze.unsqueeze.unsqueeze", "Y.unsqueeze.unsqueeze.unsqueeze", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "diff.unsqueeze", "diff.unsqueeze", "kernels.RBFCurlFreeKernel.flatten_gram_matrix", "K.squeeze.squeeze.squeeze", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.uprank_inputs", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.flatten_gram_matrix"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "X", ",", "Y", ",", "upranked", "=", "self", ".", "uprank_inputs", "(", "X", ",", "Y", ")", "\n", "\n", "X", "=", "X", ".", "unsqueeze", "(", "-", "2", ")", "\n", "Y", "=", "Y", ".", "unsqueeze", "(", "-", "3", ")", "\n", "\n", "diff", "=", "X", "-", "Y", "\n", "\n", "dists", "=", "(", "diff", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "K", "=", "self", ".", "sigma_var", "*", "torch", ".", "exp", "(", "-", "0.5", "*", "dists", "/", "self", ".", "length_scale", ")", ".", "unsqueeze", "(", "\n", "-", "1", "\n", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "outer_product", "=", "diff", ".", "unsqueeze", "(", "-", "1", ")", "@", "diff", ".", "unsqueeze", "(", "-", "2", ")", "\n", "I", "=", "torch", ".", "eye", "(", "self", ".", "rkhs_dim", ")", ".", "to", "(", "X", ".", "device", ")", "\n", "\n", "A", "=", "I", "-", "(", "outer_product", "/", "self", ".", "length_scale", ")", "\n", "\n", "K", "=", "A", "*", "K", "\n", "\n", "if", "flatten", ":", "\n", "            ", "K", "=", "self", ".", "flatten_gram_matrix", "(", "K", ")", "\n", "", "if", "upranked", ":", "\n", "            ", "K", "=", "K", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "return", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__": [[301, 306], ["kernels.Kernel.__init__"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "log_length_scale", ",", "sigma_var", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dim", ",", "dim", ")", "\n", "\n", "self", ".", "log_length_scale", "=", "log_length_scale", "\n", "self", ".", "sigma_var", "=", "sigma_var", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.RBFCurlFreeKernelReparametrised.forward": [[307, 336], ["kernels.RBFCurlFreeKernelReparametrised.uprank_inputs", "X.unsqueeze.unsqueeze.unsqueeze", "Y.unsqueeze.unsqueeze.unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "torch.exp().unsqueeze().unsqueeze", "diff.unsqueeze", "diff.unsqueeze", "kernels.RBFCurlFreeKernelReparametrised.flatten_gram_matrix", "K.squeeze.squeeze.squeeze", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.uprank_inputs", "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.kernels.Kernel.flatten_gram_matrix"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", "=", "None", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "X", ",", "Y", ",", "upranked", "=", "self", ".", "uprank_inputs", "(", "X", ",", "Y", ")", "\n", "\n", "X", "=", "X", ".", "unsqueeze", "(", "-", "2", ")", "\n", "Y", "=", "Y", ".", "unsqueeze", "(", "-", "3", ")", "\n", "\n", "length_scale", "=", "torch", ".", "exp", "(", "self", ".", "log_length_scale", ")", "\n", "\n", "diff", "=", "X", "-", "Y", "\n", "\n", "dists", "=", "(", "diff", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n", "K", "=", "self", ".", "sigma_var", "*", "torch", ".", "exp", "(", "-", "0.5", "*", "dists", "/", "length_scale", ")", ".", "unsqueeze", "(", "\n", "-", "1", "\n", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "outer_product", "=", "diff", ".", "unsqueeze", "(", "-", "1", ")", "@", "diff", ".", "unsqueeze", "(", "-", "2", ")", "\n", "I", "=", "torch", ".", "eye", "(", "self", ".", "rkhs_dim", ")", ".", "to", "(", "X", ".", "device", ")", "\n", "\n", "A", "=", "I", "-", "(", "outer_product", "/", "length_scale", ")", "\n", "\n", "K", "=", "A", "*", "K", "\n", "\n", "if", "flatten", ":", "\n", "            ", "K", "=", "self", ".", "flatten_gram_matrix", "(", "K", ")", "\n", "", "if", "upranked", ":", "\n", "            ", "K", "=", "K", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "return", "K", "", "", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.kernel.smooth.kernel_smooth": [[7, 48], ["kernel", "einops.rearrange", "einops.rearrange", "len", "X_context.unsqueeze.unsqueeze", "len", "Y_context.unsqueeze.unsqueeze", "len", "X_target.unsqueeze.unsqueeze", "einops.rearrange", "Y_target.squeeze.squeeze", "Y_context.unsqueeze.unsqueeze", "Y_target.squeeze.unsqueeze", "einops.rearrange.sum", "torch.eye().to", "torch.eye().to", "torch.eye", "torch.eye"], "function", ["None"], ["def", "kernel_smooth", "(", "X_context", ",", "Y_context", ",", "X_target", ",", "kernel", ",", "normalise", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Inputs: X_Context - torch.tensor -shape (batch_size,n_context_points,D)\n            Y_Context - torch.tensor - shape (batch_size,n_context_points,d)\n            X_Target - torch.tensor - shape (batch_size,n_target_points,D)\n            kernel - steer_cnp.kernel.kernels.Kernel\n    Output:\n            Kernel smooth estimates at X_Target\n            torch.tensor - shape - (batch_size,n_target_points,d)\n    TODO: add normalise option from Peters code\n    \"\"\"", "\n", "upranked", "=", "False", "\n", "if", "len", "(", "X_context", ".", "shape", ")", "==", "2", ":", "\n", "        ", "X_context", "=", "X_context", ".", "unsqueeze", "(", "0", ")", "\n", "upranked", "=", "True", "\n", "", "if", "len", "(", "Y_context", ".", "shape", ")", "==", "2", ":", "\n", "        ", "Y_context", "=", "Y_context", ".", "unsqueeze", "(", "0", ")", "\n", "upranked", "=", "True", "\n", "", "if", "len", "(", "X_target", ".", "shape", ")", "==", "2", ":", "\n", "        ", "X_target", "=", "X_target", ".", "unsqueeze", "(", "0", ")", "\n", "upranked", "=", "True", "\n", "\n", "", "_", ",", "_", ",", "d", "=", "Y_context", ".", "shape", "\n", "\n", "K", "=", "kernel", "(", "X_target", ",", "X_context", ",", "flatten", "=", "True", ")", "\n", "Y_context", "=", "rearrange", "(", "Y_context", ",", "\"b n d -> b (n d)\"", ")", "\n", "Y_target", "=", "(", "K", "@", "Y_context", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "Y_target", "=", "rearrange", "(", "Y_target", ",", "\"b (n d) -> b n d\"", ",", "d", "=", "d", ")", "\n", "\n", "if", "normalise", ":", "\n", "        ", "K", "=", "rearrange", "(", "K", ",", "\"b (n1 d1) (n2 d2) -> b n1 n2 d1 d2\"", ",", "d1", "=", "d", ",", "d2", "=", "d", ")", "\n", "Y_target", "=", "(", "\n", "(", "K", ".", "sum", "(", "dim", "=", "2", ")", "+", "torch", ".", "eye", "(", "d", ")", ".", "to", "(", "K", ".", "device", ")", "*", "1e-6", ")", ".", "inverse", "(", ")", "\n", "# K.sum(dim=2).inverse()", "\n", "@", "Y_target", ".", "unsqueeze", "(", "-", "1", ")", "\n", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "", "if", "upranked", ":", "\n", "        ", "Y_target", "=", "Y_target", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "return", "Y_target", "\n", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.gp.gp.sample_gp_prior": [[6, 24], ["K.cholesky", "torch.randn", "einops.rearrange", "kernel", "Y.squeeze.squeeze", "torch.eye"], "function", ["None"], ["from", "steer_cnp", ".", "gp", "import", "sample_gp_prior", "\n", "\n", "\n", "def", "sample_gp_grid_2d", "(", "kernel", ",", "samples", "=", "1", ",", "min_x", "=", "-", "2", ",", "max_x", "=", "2", ",", "n_axis", "=", "10", ",", "obs_noise", "=", "1e-4", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    kernel: steer_cnp.kernel.Kernel\n    min_x,max_x: scalar - left-right/lower-upper limit of grid\n    n_grid_points: int - number of grid points per axis\n    Output:\n    X: torch.tensor\n       Shape (n_grid_points**2,2)\n    Y: torch.tensor\n       Shape (n_grid_points**2,D), D...dimension of label space\n    \"\"\"", "\n", "\n", "X", "=", "grid_2d", "(", "min_x", ",", "max_x", ",", "n_axis", ",", "flatten", "=", "True", ")", "\n", "Y", "=", "sample_gp_prior", "(", "X", ",", "kernel", ",", "samples", "=", "samples", ",", "obs_noise", "=", "obs_noise", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.gp.gp.conditional_gp_posterior": [[26, 78], ["kernel", "kernel.transpose", "einops.rearrange", "einops.rearrange", "len", "X_context.unsqueeze.unsqueeze", "len", "Y_context.unsqueeze.unsqueeze", "len", "X_target.unsqueeze.unsqueeze", "kernel", "einops.rearrange().unsqueeze", "mean.squeeze.squeeze", "mean.squeeze.squeeze", "covariance.squeeze.squeeze", "variances.squeeze.squeeze", "torch.eye", "kernel", "einops.rearrange", "torch.arange", "torch.arange", "torch.eye"], "function", ["None"], ["        ", "X", "=", "X", ".", "unsqueeze", "(", "0", ")", ".", "repeat_interleave", "(", "samples", ",", "0", ")", "\n", "\n", "#   bs, n, d = X.shape", "\n", "\n", "#   batch_inds = torch.arange(bs)[:, None, None]", "\n", "#   perm_inds = torch.randn(X.shape).argsort(dim=1)", "\n", "#   d_inds = torch.arange(d)[None, None, :]", "\n", "\n", "#   X = X[batch_inds, perm_inds, d_inds]", "\n", "#   Y = Y[batch_inds, perm_inds, d_inds]", "\n", "\n", "", "return", "X", ",", "Y", "\n", "\n", "\n", "", "def", "sample_gp_radial_grid_2d", "(", "kernel", ",", "samples", "=", "1", ",", "max_r", "=", "2", ",", "n_axis", "=", "10", ",", "obs_noise", "=", "1e-4", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    kernel: steer_cnp.kernel.Kernel\n    max_r: scalar - radius of the grid\n    n_grid_points: int - number of grid points per axis\n    Output:\n    X: torch.tensor\n       Shape (n_grid_points**2,2)\n    Y: torch.tensor\n       Shape (n_grid_points**2,D), D...dimension of label space\n    \"\"\"", "\n", "\n", "X", "=", "radial_grid_2d", "(", "max_r", ",", "n_axis", ")", "\n", "Y", "=", "sample_gp_prior", "(", "X", ",", "kernel", ",", "samples", "=", "samples", ",", "obs_noise", "=", "obs_noise", ")", "\n", "\n", "if", "samples", "!=", "1", ":", "\n", "        ", "X", "=", "X", ".", "unsqueeze", "(", "0", ")", ".", "repeat_interleave", "(", "samples", ",", "0", ")", "\n", "\n", "# bs, n, d = X.shape", "\n", "\n", "# batch_inds = torch.arange(bs)[:, None, None]", "\n", "# perm_inds = torch.randn(X.shape).argsort(dim=1)", "\n", "# d_inds = torch.arange(d)[None, None, :]", "\n", "\n", "# X = X[batch_inds, perm_inds, d_inds]", "\n", "# Y = Y[batch_inds, perm_inds, d_inds]", "\n", "\n", "", "return", "X", ",", "Y", "\n", "", ""]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.tests.test_equiv_cnp.test_steeraraince_example": [[111, 154], ["len", "torch.zeros", "torch.zeros", "model", "Y_mean.squeeze.squeeze", "Y_cov.squeeze.squeeze", "Y_mean.squeeze.abs().sum", "Y_cov.squeeze.abs().sum", "enumerate", "list", "X_context.unsqueeze", "Y_context.unsqueeze", "X_target.unsqueeze", "torch.Tensor", "model", "Y_mean_t.squeeze.squeeze", "Y_cov_t.squeeze.squeeze", "torch.zeros.detach", "torch.zeros.detach", "Y_mean.squeeze.abs", "Y_cov.squeeze.abs", "in_field_type.representation", "torch.Tensor.t", "torch.Tensor.t", "torch.Tensor.t", "X_context_t.unsqueeze", "Y_context_t.unsqueeze", "X_target_t.unsqueeze", "mean_diff.abs().sum", "cov_diff.abs().sum", "torch.Tensor.t", "torch.Tensor.t", "mean_diff.abs", "cov_diff.abs"], "function", ["None"], ["def", "test_steeraraince_example", "(", "model", ",", "X_context", ",", "Y_context", ",", "X_target", ",", "in_field_type", ")", ":", "\n", "    ", "n_test", "=", "len", "(", "list", "(", "in_field_type", ".", "testing_elements", ")", ")", "\n", "dtype", "=", "X_context", ".", "dtype", "\n", "device", "=", "X_context", ".", "device", "\n", "\n", "# mean_diffs = torch.zeros(n_test, device=device)", "\n", "# cov_diffs = torch.zeros(n_test, device=device)", "\n", "\n", "mean_diffs_normed", "=", "torch", ".", "zeros", "(", "n_test", ",", "device", "=", "device", ")", "\n", "cov_diffs_normed", "=", "torch", ".", "zeros", "(", "n_test", ",", "device", "=", "device", ")", "\n", "\n", "Y_mean", ",", "Y_cov", "=", "model", "(", "\n", "X_context", ".", "unsqueeze", "(", "0", ")", ",", "Y_context", ".", "unsqueeze", "(", "0", ")", ",", "X_target", ".", "unsqueeze", "(", "0", ")", "\n", ")", "\n", "Y_mean", "=", "Y_mean", ".", "squeeze", "(", "0", ")", "\n", "Y_cov", "=", "Y_cov", ".", "squeeze", "(", "0", ")", "\n", "\n", "Y_mean_norm", "=", "Y_mean", ".", "abs", "(", ")", ".", "sum", "(", ")", "\n", "Y_cov_norm", "=", "Y_cov", ".", "abs", "(", ")", ".", "sum", "(", ")", "\n", "\n", "for", "i", ",", "g", "in", "enumerate", "(", "in_field_type", ".", "testing_elements", ")", ":", "\n", "        ", "R", "=", "torch", ".", "Tensor", "(", "in_field_type", ".", "representation", "(", "g", ")", ",", "device", "=", "device", ")", "\n", "\n", "X_context_t", "=", "X_context", "@", "R", ".", "t", "(", ")", "\n", "Y_context_t", "=", "Y_context", "@", "R", ".", "t", "(", ")", "\n", "X_target_t", "=", "X_target", "@", "R", ".", "t", "(", ")", "\n", "\n", "Y_mean_t", ",", "Y_cov_t", "=", "model", "(", "\n", "X_context_t", ".", "unsqueeze", "(", "0", ")", ",", "Y_context_t", ".", "unsqueeze", "(", "0", ")", ",", "X_target_t", ".", "unsqueeze", "(", "0", ")", "\n", ")", "\n", "Y_mean_t", "=", "Y_mean_t", ".", "squeeze", "(", "0", ")", "\n", "Y_cov_t", "=", "Y_cov_t", ".", "squeeze", "(", "0", ")", "\n", "\n", "mean_diff", "=", "Y_mean_t", "-", "(", "Y_mean", "@", "R", ".", "t", "(", ")", ")", "\n", "cov_diff", "=", "Y_cov_t", "-", "(", "R", "@", "Y_cov", "@", "R", ".", "t", "(", ")", ")", "\n", "\n", "# mean_diffs[i] = mean_diff.sum(-1).mean()", "\n", "# cov_diffs[i] = cov_diff.sum(-1).mean()", "\n", "\n", "mean_diffs_normed", "[", "i", "]", "=", "mean_diff", ".", "abs", "(", ")", ".", "sum", "(", ")", "/", "Y_mean_norm", "\n", "cov_diffs_normed", "[", "i", "]", "=", "cov_diff", ".", "abs", "(", ")", ".", "sum", "(", ")", "/", "Y_cov_norm", "\n", "\n", "", "return", "mean_diffs_normed", ".", "detach", "(", ")", ",", "cov_diffs_normed", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.tests.test_make_multi_mnist.make_multi_mnist": [[18, 61], ["pytorch_lightning.seed_everything", "numpy.zeros().astype", "numpy.stack", "range", "np.zeros().astype.astype", "numpy.random.randint", "numpy.random.uniform", "range", "numpy.zeros", "numpy.random.permutation", "int", "numpy.ones", "PIL.Image.fromarray", "range", "img.rotate.rotate", "numpy.asarray"], "function", ["None"], ["def", "make_multi_mnist", "(", "\n", "dataset", ",", "seed", ",", "rotate", ",", "translate", ",", "n_digits", ",", "base_size", ",", "canvas_size", "\n", ")", ":", "\n", "    ", "pl", ".", "seed_everything", "(", "seed", ")", "\n", "\n", "n", "=", "dataset", ".", "data", ".", "shape", "[", "0", "]", "\n", "\n", "images", "=", "np", ".", "zeros", "(", "(", "n", ",", "canvas_size", ",", "canvas_size", ")", ")", ".", "astype", "(", "\"uint16\"", ")", "\n", "\n", "max_shift", "=", "canvas_size", "-", "base_size", "\n", "max_rot", "=", "360", "\n", "\n", "indices", "=", "np", ".", "stack", "(", "[", "np", ".", "random", ".", "permutation", "(", "n", ")", "for", "i", "in", "range", "(", "n_digits", ")", "]", ",", "axis", "=", "1", ")", "\n", "# indices = np.stack([np.arange(n) for i in range(n_digits)], axis=1)", "\n", "shifts", "=", "(", "\n", "np", ".", "random", ".", "randint", "(", "0", ",", "max_shift", ",", "size", "=", "(", "n", ",", "n_digits", ",", "2", ")", ")", "\n", "if", "translate", "\n", "else", "int", "(", "(", "canvas_size", "-", "base_size", ")", "/", "2", ")", "*", "np", ".", "ones", "(", "(", "n", ",", "n_digits", ",", "2", ")", ",", "dtype", "=", "int", ")", "\n", ")", "\n", "rots", "=", "np", ".", "random", ".", "uniform", "(", "size", "=", "(", "n", ",", "n_digits", ")", ")", "*", "max_rot", "\n", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "n_digits", ")", ":", "\n", "            ", "img", "=", "Image", ".", "fromarray", "(", "dataset", "[", "indices", "[", "i", ",", "j", "]", "]", ")", "\n", "if", "rotate", ":", "\n", "                ", "img", "=", "img", ".", "rotate", "(", "rots", "[", "i", ",", "j", "]", ",", "resample", "=", "Image", ".", "BICUBIC", ")", "\n", "\n", "", "images", "[", "\n", "i", ",", "\n", "shifts", "[", "i", ",", "j", ",", "0", "]", ":", "shifts", "[", "i", ",", "j", ",", "0", "]", "+", "base_size", ",", "\n", "shifts", "[", "i", ",", "j", ",", "1", "]", ":", "shifts", "[", "i", ",", "j", ",", "1", "]", "+", "base_size", ",", "\n", "]", "=", "(", "\n", "np", ".", "asarray", "(", "img", ")", "\n", "+", "images", "[", "\n", "i", ",", "\n", "shifts", "[", "i", ",", "j", ",", "0", "]", ":", "shifts", "[", "i", ",", "j", ",", "0", "]", "+", "base_size", ",", "\n", "shifts", "[", "i", ",", "j", ",", "1", "]", ":", "shifts", "[", "i", ",", "j", ",", "1", "]", "+", "base_size", ",", "\n", "]", "\n", ")", "\n", "\n", "", "", "images", "[", "images", ">=", "255", "]", "=", "255", "\n", "\n", "return", "images", ".", "astype", "(", "\"uint8\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.tests.test_mnist_data.points_to_partial": [[27, 42], ["numpy.zeros", "x_points.astype.astype", "zip", "len", "numpy.repeat"], "function", ["None"], ["def", "points_to_partial", "(", "img_size", ",", "x_points", ",", "y_points", ",", "fill_color", "=", "[", "0.0", ",", "0.0", ",", "1.0", "]", ")", ":", "\n", "    ", "img", "=", "np", ".", "zeros", "(", "[", "img_size", ",", "img_size", ",", "3", "]", ")", "\n", "x_points", "=", "x_points", ".", "astype", "(", "int", ")", "\n", "\n", "if", "len", "(", "y_points", ".", "shape", ")", "==", "1", ":", "\n", "        ", "y_points", "=", "np", ".", "repeat", "(", "y_points", "[", ":", ",", "np", ".", "newaxis", "]", ",", "3", ",", "axis", "=", "1", ")", "\n", "\n", "", "img", "[", ":", ",", ":", ",", "0", "]", "=", "fill_color", "[", "0", "]", "\n", "img", "[", ":", ",", ":", ",", "1", "]", "=", "fill_color", "[", "1", "]", "\n", "img", "[", ":", ",", ":", ",", "2", "]", "=", "fill_color", "[", "2", "]", "\n", "\n", "for", "point", ",", "color", "in", "zip", "(", "x_points", ",", "y_points", ")", ":", "\n", "        ", "img", "[", "point", "[", "1", "]", ",", "point", "[", "0", "]", "]", "=", "color", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous-code-0_SteerableCNP.tests.test_mnist_data.points_to_img": [[44, 52], ["numpy.zeros", "x_points.astype.astype", "zip"], "function", ["None"], ["", "def", "points_to_img", "(", "img_size", ",", "x_points", ",", "y_points", ")", ":", "\n", "    ", "img", "=", "np", ".", "zeros", "(", "[", "img_size", ",", "img_size", "]", ")", "\n", "x_points", "=", "x_points", ".", "astype", "(", "int", ")", "\n", "\n", "for", "point", ",", "val", "in", "zip", "(", "x_points", ",", "y_points", ")", ":", "\n", "        ", "img", "[", "point", "[", "1", "]", ",", "point", "[", "0", "]", "]", "=", "val", "\n", "\n", "", "return", "img", "\n", "\n"]]}