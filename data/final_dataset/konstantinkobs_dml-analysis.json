{"home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.None.utils.get_dataset": [[125, 137], ["Cars196", "CUB200", "StanfordOnlineProducts", "Exception"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "transform", ",", "mode", "=", "\"train\"", ")", ":", "\n", "\t", "if", "dataset", "==", "\"Cars196\"", ":", "\n", "\t\t", "from", "datasets", ".", "cars196", "import", "Cars196", "\n", "return", "Cars196", "(", "\"../data\"", ",", "mode", "=", "mode", ",", "transform", "=", "transform", ",", "download", "=", "True", ")", "\n", "", "elif", "dataset", "==", "\"CUB200\"", ":", "\n", "\t\t", "from", "datasets", ".", "cub200", "import", "CUB200", "\n", "return", "CUB200", "(", "\"../data\"", ",", "mode", "=", "mode", ",", "transform", "=", "transform", ",", "download", "=", "True", ")", "\n", "", "elif", "dataset", "==", "\"SOP\"", ":", "\n", "\t\t", "from", "datasets", ".", "stanford_online_products", "import", "StanfordOnlineProducts", "\n", "return", "StanfordOnlineProducts", "(", "\"../data\"", ",", "mode", "=", "mode", ",", "transform", "=", "transform", ",", "download", "=", "True", ")", "\n", "", "else", ":", "\n", "\t\t", "raise", "Exception", "(", "\"No valid dataset name\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.None.utils.get_model_path": [[138, 223], ["os.path.dirname", "range", "paths.keys", "paths[].keys", "os.path.realpath"], "function", ["None"], ["", "", "def", "get_model_path", "(", "loss", ",", "dataset", ",", "fold", ")", ":", "\n", "\t", "paths", "=", "{", "\n", "\"Contrastive\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_contrastive46_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_contrastive41_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_contrastive21_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"Triplet\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_triplet46_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_triplet37_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_triplet34_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"NTXent\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_ntxent49_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_ntxent28_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_ntxent23_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"ProxyNCA\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_proxy_nca5_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_proxy_nca25_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_proxy_nca23_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"Margin\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_margin_no_weight_decay_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_margin_no_weight_decay15_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_margin_no_weight_decay30_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"Margin / class\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_margin_param_per_class_no_weight_decay20_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_margin_param_per_class_no_weight_decay24_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_margin_param_per_class_no_weight_decay35_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"Normalized Softmax\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_normalized_softmax45_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_normalized_softmax15_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_normalized_softmax47_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"CosFace\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_cosface15_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_cosface20_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_cosface8_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"ArcFace\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_arcface49_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_arcface36_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_arcface49_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"FastAP\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_fastap27_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_fastap17_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_fastap16_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"SNR Contrastive\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_snr_contrastive33_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_snr_contrastive5_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_snr_contrastive29_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"Multi Similarity\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_multi_similarity22_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_multi_similarity9_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_multi_similarity6_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"Multi Similarity + Miner\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_multi_similarity_with_ms_miner38_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_multi_similarity_with_ms_miner45_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_multi_similarity_with_ms_miner36_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "\"SoftTriple\"", ":", "{", "\n", "\"Cars196\"", ":", "f\"models/cars_soft_triple14_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"CUB200\"", ":", "f\"models/cub_soft_triple46_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "\"SOP\"", ":", "f\"models/sop_soft_triple18_reproduction0/Test50_50_Partitions4_{fold}/saved_models\"", ",", "\n", "}", ",", "\n", "}", "\n", "\n", "assert", "fold", "in", "range", "(", "4", ")", ",", "\"No valid fold index specified\"", "\n", "assert", "loss", "in", "paths", ".", "keys", "(", ")", ",", "\"No valid loss function specified\"", "\n", "assert", "dataset", "in", "paths", "[", "\"Contrastive\"", "]", ".", "keys", "(", ")", ",", "\"No valid dataset name specified\"", "\n", "\n", "current_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "\n", "\n", "base_path", "=", "current_dir", "+", "\"/\"", "+", "paths", "[", "loss", "]", "[", "dataset", "]", "\n", "trunk_path", "=", "base_path", "+", "\"/trunk_best.pth\"", "\n", "embedder_path", "=", "base_path", "+", "\"/embedder_best.pth\"", "\n", "\n", "return", "trunk_path", ",", "embedder_path", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.None.utils.convert_to_valid_path": [[224, 228], ["string.lower.lower", "x.isalnum"], "function", ["None"], ["", "def", "convert_to_valid_path", "(", "string", ",", "lower", "=", "False", ")", ":", "\n", "\t", "if", "lower", ":", "\n", "\t\t", "string", "=", "string", ".", "lower", "(", ")", "\n", "", "return", "\"\"", ".", "join", "(", "x", "for", "x", "in", "string", "if", "x", ".", "isalnum", "(", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cars196.Cars196.__init__": [[22, 37], ["os.path.join", "cars196.Cars196.set_paths_and_labels", "cars196.Cars196.set_paths_and_labels", "cars196.Cars196.download_dataset", "cars196.Cars196.set_paths_and_labels"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.download_dataset", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels"], ["def", "__init__", "(", "self", ",", "root", ",", "mode", "=", "\"train\"", ",", "transform", "=", "None", ",", "download", "=", "False", ")", ":", "\n", "        ", "self", ".", "root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "\"cars196\"", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "\n", "assert", "self", ".", "mode", "in", "[", "\"train\"", ",", "\"test\"", ",", "\"all\"", "]", "\n", "\n", "if", "download", ":", "\n", "            ", "try", ":", "\n", "                ", "self", ".", "set_paths_and_labels", "(", "assert_files_exist", "=", "True", ")", "\n", "", "except", ":", "\n", "                ", "self", ".", "download_dataset", "(", ")", "\n", "self", ".", "set_paths_and_labels", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "set_paths_and_labels", "(", ")", "\n", "", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cars196.Cars196.__len__": [[38, 40], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cars196.Cars196.__getitem__": [[41, 49], ["PIL.Image.open().convert", "cars196.Cars196.transform", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "path", "=", "self", ".", "img_paths", "[", "idx", "]", "\n", "img", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "label", "=", "self", ".", "labels", "[", "idx", "]", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "output_dict", "=", "{", "\"data\"", ":", "img", ",", "\"label\"", ":", "label", "}", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cars196.Cars196.load_labels": [[50, 66], ["scipy.loadmat", "numpy.array", "os.path.join", "os.path.join", "list", "range", "list", "list", "range", "range", "set", "len"], "methods", ["None"], ["", "def", "load_labels", "(", "self", ")", ":", "\n", "        ", "img_data", "=", "sio", ".", "loadmat", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_folder", ",", "\"cars_annos.mat\"", ")", ")", "\n", "self", ".", "labels", "=", "np", ".", "array", "(", "[", "i", "[", "0", ",", "0", "]", "-", "1", "for", "i", "in", "img_data", "[", "\"annotations\"", "]", "[", "\"class\"", "]", "[", "0", "]", "]", ")", "\n", "self", ".", "img_paths", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_folder", ",", "i", "[", "0", "]", ")", "for", "i", "in", "img_data", "[", "\"annotations\"", "]", "[", "\"relative_im_path\"", "]", "[", "0", "]", "]", "\n", "\n", "if", "self", ".", "mode", "==", "\"train\"", ":", "\n", "            ", "r", "=", "list", "(", "range", "(", "98", ")", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"test\"", ":", "\n", "            ", "r", "=", "list", "(", "range", "(", "98", ",", "196", ")", ")", "\n", "", "else", ":", "# all", "\n", "            ", "r", "=", "list", "(", "set", "(", "self", ".", "labels", ")", ")", "\n", "\n", "", "self", ".", "img_paths", "=", "[", "self", ".", "img_paths", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "self", ".", "img_paths", ")", ")", "if", "self", ".", "labels", "[", "i", "]", "in", "r", "]", "\n", "self", ".", "labels", "=", "[", "l", "for", "l", "in", "self", ".", "labels", "if", "l", "in", "r", "]", "\n", "\n", "self", ".", "class_names", "=", "[", "i", "[", "0", "]", "for", "i", "in", "img_data", "[", "\"class_names\"", "]", "[", "0", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cars196.Cars196.set_paths_and_labels": [[67, 76], ["cars196.Cars196.load_labels", "logging.info", "tqdm.tqdm.tqdm", "os.path.isfile"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.load_labels"], ["", "def", "set_paths_and_labels", "(", "self", ",", "assert_files_exist", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_folder", "=", "self", ".", "root", "\n", "self", ".", "load_labels", "(", ")", "\n", "# assert len(np.unique(self.labels)) == 196", "\n", "# assert self.__len__() == 16185", "\n", "if", "assert_files_exist", ":", "\n", "            ", "logging", ".", "info", "(", "\"Checking if dataset images exist\"", ")", "\n", "for", "x", "in", "tqdm", "(", "self", ".", "img_paths", ")", ":", "\n", "                ", "assert", "os", ".", "path", ".", "isfile", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cars196.Cars196.download_dataset": [[77, 84], ["torchvision.datasets.utils.download_url", "tarfile.open", "tar.extractall", "os.path.join"], "methods", ["None"], ["", "", "", "def", "download_dataset", "(", "self", ")", ":", "\n", "        ", "url_infos", "=", "[", "(", "self", ".", "ims_url", ",", "self", ".", "ims_filename", ",", "self", ".", "ims_md5", ")", ",", "\n", "(", "self", ".", "annos_url", ",", "self", ".", "annos_filename", ",", "self", ".", "annos_md5", ")", "]", "\n", "for", "url", ",", "filename", ",", "md5", "in", "url_infos", ":", "\n", "            ", "download_url", "(", "url", ",", "self", ".", "root", ",", "filename", "=", "filename", ",", "md5", "=", "md5", ")", "\n", "", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "ims_filename", ")", ",", "\"r:gz\"", ")", "as", "tar", ":", "\n", "            ", "tar", ".", "extractall", "(", "path", "=", "self", ".", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cars196.Cars196.filter_examples": [[85, 88], ["numpy.array", "range", "len"], "methods", ["None"], ["", "", "def", "filter_examples", "(", "self", ",", "c", ")", ":", "\n", "        ", "self", ".", "img_paths", "=", "[", "self", ".", "img_paths", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "self", ".", "img_paths", ")", ")", "if", "self", ".", "labels", "[", "i", "]", "==", "c", "]", "\n", "self", ".", "labels", "=", "np", ".", "array", "(", "[", "l", "for", "l", "in", "self", ".", "labels", "if", "l", "==", "c", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cub200.CUB200.__init__": [[18, 34], ["os.path.join", "os.makedirs", "cub200.CUB200.set_paths_and_labels", "cub200.CUB200.set_paths_and_labels", "cub200.CUB200.download_dataset", "cub200.CUB200.set_paths_and_labels"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.download_dataset", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels"], ["def", "__init__", "(", "self", ",", "root", ",", "mode", "=", "\"train\"", ",", "transform", "=", "None", ",", "download", "=", "False", ")", ":", "\n", "        ", "self", ".", "root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "\"cub2011\"", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "root", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "\n", "assert", "self", ".", "mode", "in", "[", "\"train\"", ",", "\"test\"", ",", "\"all\"", "]", "\n", "\n", "if", "download", ":", "\n", "            ", "try", ":", "\n", "                ", "self", ".", "set_paths_and_labels", "(", ")", "\n", "", "except", ":", "\n", "                ", "self", ".", "download_dataset", "(", ")", "\n", "self", ".", "set_paths_and_labels", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "set_paths_and_labels", "(", ")", "\n", "", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cub200.CUB200.__len__": [[35, 37], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cub200.CUB200.__getitem__": [[38, 44], ["cub200.CUB200.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img", ",", "label", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "output_dict", "=", "{", "\"data\"", ":", "img", ",", "\"label\"", ":", "label", "}", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cub200.CUB200.set_paths_and_labels": [[45, 64], ["os.path.join", "torchvision.datasets.ImageFolder", "numpy.array", "torch.utils.data.Subset", "len", "cub200.CUB200.__len__", "len", "len", "numpy.unique", "numpy.nonzero", "numpy.arange", "numpy.nonzero", "len"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.generate_representations.FakeCarsDataset.__len__"], ["", "def", "set_paths_and_labels", "(", "self", ")", ":", "\n", "        ", "img_folder", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"CUB_200_2011\"", ",", "\"images\"", ")", "\n", "self", ".", "dataset", "=", "datasets", ".", "ImageFolder", "(", "img_folder", ")", "\n", "self", ".", "labels", "=", "np", ".", "array", "(", "[", "b", "for", "(", "a", ",", "b", ")", "in", "self", ".", "dataset", ".", "imgs", "]", ")", "\n", "assert", "len", "(", "np", ".", "unique", "(", "self", ".", "labels", ")", ")", "==", "200", "\n", "assert", "self", ".", "__len__", "(", ")", "==", "11788", "\n", "\n", "if", "self", ".", "mode", "==", "\"train\"", ":", "\n", "# nonzero returns a tuple (one element per dimension)", "\n", "            ", "indices", "=", "np", ".", "nonzero", "(", "self", ".", "labels", "<", "100", ")", "[", "0", "]", "\n", "", "elif", "self", ".", "mode", "==", "\"test\"", ":", "\n", "            ", "indices", "=", "np", ".", "nonzero", "(", "self", ".", "labels", ">=", "100", ")", "[", "0", "]", "\n", "", "else", ":", "# all", "\n", "            ", "indices", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "labels", ")", ")", "\n", "\n", "", "self", ".", "dataset", "=", "Subset", "(", "self", ".", "dataset", ",", "indices", ")", "\n", "self", ".", "labels", "=", "self", ".", "labels", "[", "indices", "]", "\n", "\n", "assert", "len", "(", "self", ".", "dataset", ")", "==", "len", "(", "self", ".", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.cub200.CUB200.download_dataset": [[66, 75], ["os.path.join", "torchvision.datasets.utils.check_integrity", "print", "gdown.download", "gdown.cached_download.assert_md5sum", "tarfile.open", "tar.extractall"], "methods", ["None"], ["", "def", "download_dataset", "(", "self", ")", ":", "\n", "        ", "output_location", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "filename", ")", "\n", "if", "check_integrity", "(", "output_location", ",", "self", ".", "md5", ")", ":", "\n", "            ", "print", "(", "'Using downloaded and verified file: '", "+", "output_location", ")", "\n", "", "else", ":", "\n", "            ", "gdown", ".", "download", "(", "self", ".", "url", ",", "output_location", ",", "quiet", "=", "False", ")", "\n", "assert_md5sum", "(", "output_location", ",", "self", ".", "md5", ")", "\n", "", "with", "tarfile", ".", "open", "(", "output_location", ",", "\"r:gz\"", ")", "as", "tar", ":", "\n", "            ", "tar", ".", "extractall", "(", "path", "=", "self", ".", "root", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.__init__": [[17, 32], ["stanford_online_products.StanfordOnlineProducts.set_paths_and_labels", "stanford_online_products.StanfordOnlineProducts.set_paths_and_labels", "stanford_online_products.StanfordOnlineProducts.download_dataset", "stanford_online_products.StanfordOnlineProducts.set_paths_and_labels"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.download_dataset", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels"], ["def", "__init__", "(", "self", ",", "root", ",", "mode", "=", "\"train\"", ",", "transform", "=", "None", ",", "download", "=", "False", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "mode", "=", "mode", "\n", "\n", "assert", "mode", "in", "[", "\"train\"", ",", "\"test\"", ",", "\"all\"", "]", "\n", "\n", "if", "download", ":", "\n", "            ", "try", ":", "\n", "                ", "self", ".", "set_paths_and_labels", "(", "assert_files_exist", "=", "True", ")", "\n", "", "except", ":", "\n", "                ", "self", ".", "download_dataset", "(", ")", "\n", "self", ".", "set_paths_and_labels", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "set_paths_and_labels", "(", ")", "\n", "", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.__len__": [[33, 35], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.__getitem__": [[36, 44], ["PIL.Image.open().convert", "stanford_online_products.StanfordOnlineProducts.transform", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "path", "=", "self", ".", "img_paths", "[", "idx", "]", "\n", "img", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "label", "=", "self", ".", "labels", "[", "idx", "]", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "output_dict", "=", "{", "\"data\"", ":", "img", ",", "\"label\"", ":", "label", "}", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.load_labels": [[45, 66], ["info_files.items", "numpy.array", "stanford_online_products.StanfordOnlineProducts.img_paths.extend", "stanford_online_products.StanfordOnlineProducts.labels.extend", "len", "len", "len", "read_csv", "list", "os.path.join", "os.path.join", "list"], "methods", ["None"], ["", "def", "load_labels", "(", "self", ")", ":", "\n", "        ", "from", "pandas", "import", "read_csv", "\n", "\n", "if", "self", ".", "mode", "==", "\"train\"", ":", "\n", "            ", "info_files", "=", "{", "\"train\"", ":", "\"Ebay_train.txt\"", "}", "\n", "", "elif", "self", ".", "mode", "==", "\"test\"", ":", "\n", "            ", "info_files", "=", "{", "\"test\"", ":", "\"Ebay_test.txt\"", "}", "\n", "", "else", ":", "# all", "\n", "            ", "info_files", "=", "{", "\"train\"", ":", "\"Ebay_train.txt\"", ",", "\"test\"", ":", "\"Ebay_test.txt\"", "}", "\n", "\n", "", "self", ".", "img_paths", "=", "[", "]", "\n", "self", ".", "labels", "=", "[", "]", "\n", "global_idx", "=", "0", "\n", "for", "k", ",", "v", "in", "info_files", ".", "items", "(", ")", ":", "\n", "            ", "curr_file", "=", "read_csv", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_folder", ",", "v", ")", ",", "delim_whitespace", "=", "True", ",", "header", "=", "0", ")", ".", "values", "\n", "self", ".", "img_paths", ".", "extend", "(", "[", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_folder", ",", "x", ")", "for", "x", "in", "list", "(", "curr_file", "[", ":", ",", "3", "]", ")", "]", ")", "\n", "self", ".", "labels", ".", "extend", "(", "list", "(", "curr_file", "[", ":", ",", "1", "]", "-", "1", ")", ")", "\n", "global_idx", "+=", "len", "(", "curr_file", ")", "\n", "", "self", ".", "labels", "=", "np", ".", "array", "(", "self", ".", "labels", ")", "\n", "\n", "assert", "len", "(", "self", ".", "labels", ")", "==", "len", "(", "self", ".", "img_paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.set_paths_and_labels": [[67, 76], ["os.path.join", "stanford_online_products.StanfordOnlineProducts.load_labels", "logging.info", "tqdm.tqdm", "os.path.isfile"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.load_labels"], ["", "def", "set_paths_and_labels", "(", "self", ",", "assert_files_exist", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset_folder", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"Stanford_Online_Products\"", ")", "\n", "self", ".", "load_labels", "(", ")", "\n", "# assert len(np.unique(self.labels)) == 22634", "\n", "# assert self.__len__() == 120053", "\n", "if", "assert_files_exist", ":", "\n", "            ", "logging", ".", "info", "(", "\"Checking if dataset images exist\"", ")", "\n", "for", "x", "in", "tqdm", ".", "tqdm", "(", "self", ".", "img_paths", ")", ":", "\n", "                ", "assert", "os", ".", "path", ".", "isfile", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.datasets.stanford_online_products.StanfordOnlineProducts.download_dataset": [[77, 81], ["torchvision.datasets.utils.download_url", "zipfile.ZipFile", "zip_ref.extractall", "os.path.join"], "methods", ["None"], ["", "", "", "def", "download_dataset", "(", "self", ")", ":", "\n", "        ", "download_url", "(", "self", ".", "url", ",", "self", ".", "root", ",", "filename", "=", "self", ".", "filename", ",", "md5", "=", "self", ".", "md5", ")", "\n", "with", "zipfile", ".", "ZipFile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "filename", ")", ",", "'r'", ")", "as", "zip_ref", ":", "\n", "            ", "zip_ref", ".", "extractall", "(", "self", ".", "root", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.gradient_explainer.create_stats_table.fisher_z_aggr": [[10, 16], ["aggr_fun", "numpy.log", "numpy.exp", "numpy.exp"], "function", ["None"], ["def", "fisher_z_aggr", "(", "arr", ":", "np", ".", "array", ",", "aggr_fun", ":", "Callable", "=", "np", ".", "mean", ")", "->", "float", ":", "\n", "# According to https://link.springer.com/content/pdf/10.1007%2F978-3-642-12770-0.pdf (p. 160)", "\n", "    ", "zs", "=", "0.5", "*", "np", ".", "log", "(", "(", "1", "+", "arr", ")", "/", "(", "1", "-", "arr", ")", ")", "\n", "z_aggr", "=", "aggr_fun", "(", "zs", ")", "\n", "aggr", "=", "(", "np", ".", "exp", "(", "2", "*", "z_aggr", ")", "-", "1", ")", "/", "(", "np", ".", "exp", "(", "2", "*", "z_aggr", ")", "+", "1", ")", "\n", "return", "aggr", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.gradient_explainer.explainer.Explainer.__init__": [[9, 21], ["hasattr", "explainer.Explainer.generate_base_embedding"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.gradient_explainer.explainer.Explainer.generate_base_embedding"], ["\t", "def", "__init__", "(", "self", ",", "model", ",", "distance", ",", "dataset", ",", "device", "=", "\"cpu\"", ",", "std_dev_spread", "=", "0.15", ",", "num_samples", "=", "25", ")", ":", "\n", "\t\t", "self", ".", "model", "=", "model", "\n", "self", ".", "distance", "=", "distance", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "device", "=", "device", "\n", "\n", "assert", "hasattr", "(", "self", ".", "dataset", ",", "\"transform\"", ")", ",", "\"Dataset has no transform attribute\"", "\n", "self", ".", "base_embedding", "=", "self", ".", "generate_base_embedding", "(", ")", "\n", "\n", "# SmoothGrad parameters", "\n", "self", ".", "std_dev_spread", "=", "std_dev_spread", "\n", "self", ".", "num_samples", "=", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.gradient_explainer.explainer.Explainer.generate_base_embedding": [[22, 28], ["explainer.Explainer.dataset.transform().unsqueeze().to", "explainer.Explainer.model().detach", "explainer.Explainer.dataset.transform().unsqueeze", "explainer.Explainer.model", "explainer.Explainer.dataset.transform", "PIL.Image.fromarray", "numpy.zeros"], "methods", ["None"], ["", "def", "generate_base_embedding", "(", "self", ")", ":", "\n", "# Creates a black image which is transformed/normalized", "\n", "\t\t", "base_img", "=", "self", ".", "dataset", ".", "transform", "(", "Image", ".", "fromarray", "(", "np", ".", "zeros", "(", "(", "500", ",", "500", ",", "3", ")", ")", ",", "mode", "=", "\"RGB\"", ")", ")", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "base_embedding", "=", "self", ".", "model", "(", "base_img", ")", ".", "detach", "(", ")", "\n", "\n", "return", "base_embedding", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.gradient_explainer.explainer.Explainer.calc_grads": [[29, 48], ["item[].to", "item[].detach().numpy", "data.repeat.repeat.unsqueeze_", "data.repeat.repeat.repeat", "data.repeat.repeat.requires_grad_", "explainer.Explainer.model", "explainer.Explainer.distance().mean", "explainer.Explainer.backward", "data.repeat.repeat.grad.mean().detach().cpu", "item[].detach", "torch.randn_like", "data.repeat.repeat.max", "data.repeat.repeat.min", "explainer.Explainer.distance", "data.repeat.repeat.grad.mean().detach", "data.repeat.repeat.grad.mean"], "methods", ["None"], ["", "def", "calc_grads", "(", "self", ",", "idx", ")", ":", "\n", "\t\t", "item", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "data", "=", "item", "[", "\"data\"", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "img", "=", "item", "[", "\"data\"", "]", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "# add fake batch dimension", "\n", "data", ".", "unsqueeze_", "(", "0", ")", "\n", "data", "=", "data", ".", "repeat", "(", "self", ".", "num_samples", ",", "1", ",", "1", ",", "1", ")", "\n", "data", "+=", "torch", ".", "randn_like", "(", "data", ")", "*", "self", ".", "std_dev_spread", "*", "(", "data", ".", "max", "(", ")", "-", "data", ".", "min", "(", ")", ")", "\n", "_", "=", "data", ".", "requires_grad_", "(", ")", "\n", "\n", "out", "=", "self", ".", "model", "(", "data", ")", "\n", "loss", "=", "self", ".", "distance", "(", "out", ",", "self", ".", "base_embedding", ")", ".", "mean", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "grads", "=", "data", ".", "grad", ".", "mean", "(", "dim", "=", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "return", "img", ",", "grads", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.gradient_explainer.explainer.Explainer.process_grads": [[49, 57], ["numpy.clip.abs().sum().detach().numpy", "numpy.percentile", "numpy.min", "numpy.clip", "numpy.clip.abs().sum().detach", "numpy.clip.abs().sum", "numpy.clip.abs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "process_grads", "(", "grads", ",", "percentile", "=", "99", ")", ":", "\n", "\t\t", "grads", "=", "grads", ".", "abs", "(", ")", ".", "sum", "(", "dim", "=", "0", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "v_max", "=", "np", ".", "percentile", "(", "grads", ",", "percentile", ")", "\n", "v_min", "=", "np", ".", "min", "(", "grads", ")", "\n", "grads", "=", "np", ".", "clip", "(", "(", "grads", "-", "v_min", ")", "/", "(", "v_max", "-", "v_min", ")", ",", "0", ",", "1", ")", "\n", "\n", "return", "grads", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.gradient_explainer.explainer.Explainer.visualize_grads": [[58, 69], ["matplotlib.pyplot.imshow", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.savefig"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "visualize_grads", "(", "grads_processed", ",", "title", "=", "\"\"", ",", "save_path", "=", "None", ")", ":", "\n", "\t\t", "plt", ".", "imshow", "(", "grads_processed", ",", "cmap", "=", "\"gray\"", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "\n", "plt", ".", "title", "(", "title", ")", "\n", "\n", "if", "save_path", ":", "\n", "\t\t\t", "plt", ".", "savefig", "(", "save_path", ",", "bbox_inches", "=", "\"tight\"", ")", "\n", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.gradient_explainer.explainer.Explainer.visualize_img": [[70, 85], ["numpy.moveaxis", "matplotlib.pyplot.imshow", "matplotlib.pyplot.axis", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "matplotlib.pyplot.savefig", "numpy.moveaxis.min", "numpy.moveaxis.max", "numpy.moveaxis.min"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "visualize_img", "(", "img", ",", "title", "=", "\"\"", ",", "save_path", "=", "None", ")", ":", "\n", "\t\t", "img", "=", "np", ".", "moveaxis", "(", "img", ",", "0", ",", "-", "1", ")", "\n", "img", "=", "img", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "img", "=", "(", "img", "-", "img", ".", "min", "(", ")", ")", "/", "(", "img", ".", "max", "(", ")", "-", "img", ".", "min", "(", ")", ")", "\n", "\n", "plt", ".", "imshow", "(", "img", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "\n", "plt", ".", "title", "(", "title", ")", "\n", "\n", "if", "save_path", ":", "\n", "\t\t\t", "plt", ".", "savefig", "(", "save_path", ",", "bbox_inches", "=", "\"tight\"", ")", "\n", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.gradient_explainer.compare_gradients.calculate_stats": [[12, 26], ["grad1.flatten.flatten", "grad2.flatten.flatten", "numpy.sum", "numpy.sum", "numpy.square", "numpy.corrcoef", "scipy.spatial.distance.jensenshannon"], "function", ["None"], ["def", "calculate_stats", "(", "grads", ")", ":", "\n", "    ", "grad1", ",", "grad2", "=", "grads", "\n", "grad1", "=", "grad1", ".", "flatten", "(", ")", "\n", "grad2", "=", "grad2", ".", "flatten", "(", ")", "\n", "\n", "corr", "=", "np", ".", "corrcoef", "(", "grad1", ",", "grad2", ")", "[", "0", ",", "1", "]", "\n", "\n", "grad1", "/=", "np", ".", "sum", "(", "grad1", ")", "\n", "grad2", "/=", "np", ".", "sum", "(", "grad2", ")", "\n", "jsd", "=", "np", ".", "square", "(", "jensenshannon", "(", "grad1", ",", "grad2", ")", ")", "\n", "\n", "return", "{", "\n", "\"correlation\"", ":", "corr", ",", "\n", "\"jensenshannondiv\"", ":", "jsd", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.table.Table.__init__": [[5, 14], ["collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "width", "=", "1", ",", "height", "=", "1", ")", ":", "\n", "        ", "self", ".", "width", "=", "width", "\n", "self", ".", "height", "=", "height", "\n", "\n", "# indices of rows: 0 is the top line, self.height after the last row", "\n", "self", ".", "hlines", "=", "[", "]", "\n", "\n", "# keys: tuples of (row, col)", "\n", "self", ".", "_data", "=", "defaultdict", "(", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.table.Table.__getitem__": [[15, 18], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "pos", ")", ":", "\n", "        ", "row", ",", "col", "=", "pos", "\n", "return", "self", ".", "_data", "[", "(", "row", ",", "col", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.table.Table.__setitem__": [[19, 22], ["None"], "methods", ["None"], ["", "def", "__setitem__", "(", "self", ",", "pos", ",", "data", ")", ":", "\n", "        ", "row", ",", "col", "=", "pos", "\n", "self", ".", "_data", "[", "(", "row", ",", "col", ")", "]", "=", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.table.Table.__str__": [[23, 35], ["range", "str", "range"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "table", "=", "\"\"", "\n", "for", "row", "in", "range", "(", "self", ".", "height", ")", ":", "\n", "            ", "if", "row", "in", "self", ".", "hlines", ":", "\n", "                ", "table", "+=", "\"\\\\hline\\n\"", "\n", "", "r", "=", "[", "str", "(", "self", ".", "_data", "[", "(", "row", ",", "col", ")", "]", ")", "for", "col", "in", "range", "(", "self", ".", "width", ")", "]", "\n", "table", "+=", "\" & \"", ".", "join", "(", "r", ")", "+", "\"\\\\\\\\\\n\"", "\n", "\n", "", "if", "row", "+", "1", "in", "self", ".", "hlines", ":", "\n", "            ", "table", "+=", "\"\\\\hline\\n\"", "\n", "\n", "", "return", "table", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.table.Table.__repr__": [[36, 38], ["table.Table.__str__"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.table.Table.__str__"], ["", "def", "__repr__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "self", ".", "__str__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.table.Table.__repr_html__": [[39, 41], ["table.Table.__str__"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.table.Table.__str__"], ["", "def", "__repr_html__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "self", ".", "__str__", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.maybe_get_avg_of_avgs": [[16, 26], ["numpy.mean", "numpy.unique", "pytorch_metric_learning.np_all_from_dim_to_end", "numpy.transpose", "numpy.sum", "numpy.sum", "numpy.mean"], "methods", ["None"], ["    ", "def", "maybe_get_avg_of_avgs", "(", "self", ",", "accuracy_per_sample", ",", "sample_labels", ",", "avg_of_avgs", ")", ":", "\n", "        ", "if", "avg_of_avgs", ":", "\n", "            ", "unique_labels", "=", "np", ".", "unique", "(", "sample_labels", ",", "axis", "=", "0", ")", "\n", "mask", "=", "c_f", ".", "np_all_from_dim_to_end", "(", "sample_labels", "==", "unique_labels", "[", ":", ",", "None", "]", ",", "2", ")", "\n", "mask", "=", "np", ".", "transpose", "(", "mask", ")", "\n", "acc_sum_per_class", "=", "np", ".", "sum", "(", "accuracy_per_sample", "[", ":", ",", "None", "]", "*", "mask", ",", "axis", "=", "0", ")", "\n", "mask_sum_per_class", "=", "np", ".", "sum", "(", "mask", ",", "axis", "=", "0", ")", "\n", "average_per_class", "=", "acc_sum_per_class", "/", "mask_sum_per_class", "\n", "return", "np", ".", "mean", "(", "average_per_class", ")", "\n", "", "return", "np", ".", "mean", "(", "accuracy_per_sample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.get_relevance_mask": [[27, 44], ["numpy.zeros", "zip", "numpy.where", "pytorch_metric_learning.np_all_from_dim_to_end"], "methods", ["None"], ["", "def", "get_relevance_mask", "(", "\n", "self", ",", "\n", "shape", ",", "\n", "gt_labels", ",", "\n", "embeddings_come_from_same_source", ",", "\n", "label_counts", ",", "\n", "label_comparison_fn", ",", "\n", ")", ":", "\n", "        ", "relevance_mask", "=", "np", ".", "zeros", "(", "shape", "=", "shape", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n", "for", "label", ",", "count", "in", "zip", "(", "*", "label_counts", ")", ":", "\n", "            ", "matching_rows", "=", "np", ".", "where", "(", "c_f", ".", "np_all_from_dim_to_end", "(", "gt_labels", "==", "label", ",", "1", ")", ")", "[", "0", "]", "\n", "max_column", "=", "count", "\n", "if", "label_comparison_fn", "is", "np", ".", "equal", "and", "embeddings_come_from_same_source", ":", "\n", "                ", "max_column", "-=", "1", "\n", "", "relevance_mask", "[", "matching_rows", ",", ":", "max_column", "]", "=", "1", "\n", "", "return", "relevance_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.try_getting_not_lone_labels": [[45, 51], ["any"], "methods", ["None"], ["", "def", "try_getting_not_lone_labels", "(", "self", ",", "knn_labels", ",", "query_labels", ",", "not_lone_query_mask", ")", ":", "\n", "        ", "if", "not", "any", "(", "not_lone_query_mask", ")", ":", "\n", "            ", "return", "None", ",", "None", "\n", "", "return", "(", "\n", "knn_labels", "[", "not_lone_query_mask", "]", ",", "\n", "query_labels", "[", "not_lone_query_mask", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.calculate_normalized_r_precision": [[53, 74], ["evaluate.NormalizedRPrecisionCalculator.try_getting_not_lone_labels", "evaluate.NormalizedRPrecisionCalculator.normalized_r_precision"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.try_getting_not_lone_labels", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.normalized_r_precision"], ["", "def", "calculate_normalized_r_precision", "(", "\n", "self", ",", "\n", "knn_labels", ",", "\n", "query_labels", ",", "\n", "not_lone_query_mask", ",", "\n", "embeddings_come_from_same_source", ",", "\n", "label_counts", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "        ", "knn_labels", ",", "query_labels", "=", "self", ".", "try_getting_not_lone_labels", "(", "\n", "knn_labels", ",", "query_labels", ",", "not_lone_query_mask", "\n", ")", "\n", "if", "knn_labels", "is", "None", ":", "\n", "            ", "return", "0", "\n", "", "return", "self", ".", "normalized_r_precision", "(", "\n", "knn_labels", ",", "\n", "query_labels", "[", ":", ",", "None", "]", ",", "\n", "embeddings_come_from_same_source", ",", "\n", "label_counts", ",", "\n", "self", ".", "avg_of_avgs", ",", "\n", "self", ".", "label_comparison_fn", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.normalized_r_precision": [[76, 107], ["evaluate.NormalizedRPrecisionCalculator.get_relevance_mask", "label_comparison_fn", "numpy.sum", "numpy.sum", "numpy.sqrt", "evaluate.NormalizedRPrecisionCalculator.maybe_get_avg_of_avgs", "numpy.squeeze", "len", "evaluate.NormalizedRPrecisionCalculator.astype"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.get_relevance_mask", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.maybe_get_avg_of_avgs"], ["", "def", "normalized_r_precision", "(", "\n", "self", ",", "\n", "knn_labels", ",", "\n", "gt_labels", ",", "\n", "embeddings_come_from_same_source", ",", "\n", "label_counts", ",", "\n", "avg_of_avgs", ",", "\n", "label_comparison_fn", ",", "\n", ")", ":", "\n", "        ", "relevance_mask", "=", "self", ".", "get_relevance_mask", "(", "\n", "knn_labels", ".", "shape", "[", ":", "2", "]", ",", "\n", "gt_labels", ",", "\n", "embeddings_come_from_same_source", ",", "\n", "label_counts", ",", "\n", "label_comparison_fn", ",", "\n", ")", "\n", "same_label", "=", "label_comparison_fn", "(", "gt_labels", ",", "knn_labels", ")", "\n", "X", "=", "np", ".", "sum", "(", "same_label", "*", "relevance_mask", ".", "astype", "(", "bool", ")", ",", "axis", "=", "1", ")", "\n", "del", "same_label", "\n", "p", "=", "np", ".", "squeeze", "(", "label_counts", "[", "1", "]", "[", "gt_labels", "]", ")", "/", "len", "(", "gt_labels", ")", "\n", "n", "=", "np", ".", "sum", "(", "relevance_mask", ",", "axis", "=", "1", ")", "\n", "del", "relevance_mask", "\n", "# z-normalization", "\n", "mean", "=", "n", "*", "p", "\n", "del", "n", "\n", "std", "=", "np", ".", "sqrt", "(", "mean", "*", "(", "1", "-", "p", ")", ")", "\n", "accuracy_per_sample", "=", "(", "X", "-", "mean", ")", "/", "std", "\n", "del", "X", "\n", "del", "mean", "\n", "del", "std", "\n", "return", "self", ".", "maybe_get_avg_of_avgs", "(", "accuracy_per_sample", ",", "gt_labels", ",", "avg_of_avgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.requires_knn": [[108, 110], ["super().requires_knn"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.evaluate.NormalizedRPrecisionCalculator.requires_knn"], ["", "def", "requires_knn", "(", "self", ")", ":", "\n", "        ", "return", "super", "(", ")", ".", "requires_knn", "(", ")", "+", "[", "\"normalized_r_precision\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.generate_representations.FakeCarsDataset.__init__": [[20, 27], ["glob.glob.glob", "sorted", "len", "int", "[].split", "x.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "files", "=", "glob", "(", "\"3D cars dataset/images/*.png\"", ")", "\n", "self", ".", "files", "=", "sorted", "(", "self", ".", "files", ",", "key", "=", "lambda", "x", ":", "int", "(", "x", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", ")", ")", "\n", "\n", "assert", "len", "(", "self", ".", "files", ")", "==", "100000", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.generate_representations.FakeCarsDataset.__len__": [[28, 30], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.3D_cars.generate_representations.FakeCarsDataset.__getitem__": [[31, 39], ["PIL.Image.open().convert", "reality_check.dataset.transform", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "path", "=", "self", ".", "files", "[", "idx", "]", "\n", "img", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "self", ".", "transform", "!=", "None", ":", "\n", "            ", "img", "=", "transform", "(", "img", ")", "\n", "\n", "", "return", "{", "\"data\"", ":", "img", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.dataset.ConvertToBGR.__init__": [[11, 13], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.dataset.ConvertToBGR.__call__": [[14, 18], ["PIL.Image.merge.split", "PIL.Image.merge"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "r", ",", "g", ",", "b", "=", "img", ".", "split", "(", ")", "\n", "img", "=", "Image", ".", "merge", "(", "\"RGB\"", ",", "(", "b", ",", "g", ",", "r", ")", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.dataset.ConvertToBGR.__repr__": [[19, 21], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"{}()\"", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.dataset.Multiplier.__init__": [[24, 26], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "multiple", ")", ":", "\n", "        ", "self", ".", "multiple", "=", "multiple", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.dataset.Multiplier.__call__": [[27, 29], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "img", "*", "self", ".", "multiple", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.dataset.Multiplier.__repr__": [[30, 32], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"{}(multiple={})\"", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ",", "self", ".", "multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.dataset.load_and_convert": [[42, 45], ["PIL.Image.open().convert", "transform", "PIL.Image.open"], "function", ["None"], ["def", "load_and_convert", "(", "path", ":", "str", ")", ":", "\n", "    ", "img", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "return", "img", ",", "transform", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.dataset.load_and_convert_multiple": [[47, 57], ["glob.glob", "dataset.load_and_convert", "imgs.append", "transformed_imgs.append", "torch.cat", "transformed_img.unsqueeze"], "function", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.dataset.load_and_convert"], ["", "def", "load_and_convert_multiple", "(", "path", ":", "str", ")", ":", "\n", "    ", "files", "=", "glob", "(", "path", ")", "\n", "imgs", "=", "[", "]", "\n", "transformed_imgs", "=", "[", "]", "\n", "for", "f", "in", "files", ":", "\n", "        ", "img", ",", "transformed_img", "=", "load_and_convert", "(", "f", ")", "\n", "imgs", ".", "append", "(", "img", ")", "\n", "transformed_imgs", ".", "append", "(", "transformed_img", ".", "unsqueeze", "(", "0", ")", ")", "\n", "\n", "", "return", "imgs", ",", "torch", ".", "cat", "(", "transformed_imgs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.model.MLP.__init__": [[13, 27], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "int", "len", "layer_list.append", "len", "layer_list.append", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.model.Network.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer_sizes", ",", "final_relu", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "layer_list", "=", "[", "]", "\n", "layer_sizes", "=", "[", "int", "(", "x", ")", "for", "x", "in", "layer_sizes", "]", "\n", "num_layers", "=", "len", "(", "layer_sizes", ")", "-", "1", "\n", "final_relu_layer", "=", "num_layers", "if", "final_relu", "else", "num_layers", "-", "1", "\n", "for", "i", "in", "range", "(", "len", "(", "layer_sizes", ")", "-", "1", ")", ":", "\n", "            ", "input_size", "=", "layer_sizes", "[", "i", "]", "\n", "curr_size", "=", "layer_sizes", "[", "i", "+", "1", "]", "\n", "if", "i", "<", "final_relu_layer", ":", "\n", "                ", "layer_list", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "", "layer_list", ".", "append", "(", "nn", ".", "Linear", "(", "input_size", ",", "curr_size", ")", ")", "\n", "", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "*", "layer_list", ")", "\n", "self", ".", "last_linear", "=", "self", ".", "net", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.model.MLP.forward": [[28, 30], ["model.MLP.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.model.Network.__init__": [[33, 48], ["super().__init__", "torch.device", "torch.device", "torch.device", "torch.device", "pretrainedmodels.bninception", "pytorch_metric_learning.utils.common_functions.Identity", "model.MLP", "utils.get_model_path", "model.Network.trunk.load_state_dict", "model.Network.embedder.load_state_dict", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.model.Network.__init__", "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.None.utils.get_model_path"], ["    ", "def", "__init__", "(", "self", ",", "loss", ":", "str", "=", "\"Contrastive\"", ",", "dataset", ":", "str", "=", "\"Cars196\"", ",", "fold", ":", "int", "=", "0", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fold", "=", "fold", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "self", ".", "trunk", "=", "pretrainedmodels", ".", "bninception", "(", ")", "\n", "self", ".", "trunk", ".", "last_linear", "=", "c_f", ".", "Identity", "(", ")", "\n", "self", ".", "embedder", "=", "MLP", "(", "[", "1024", ",", "128", "]", ")", "\n", "\n", "# you can pass \"None\" to loss so this will only yield a freshly initialized model without pretrained weights", "\n", "if", "loss", "!=", "\"None\"", ":", "\n", "            ", "trunk_path", ",", "embedder_path", "=", "get_model_path", "(", "loss", ",", "dataset", ",", "fold", ")", "\n", "self", ".", "trunk", ".", "load_state_dict", "(", "torch", ".", "load", "(", "trunk_path", ",", "map_location", "=", "self", ".", "device", ")", ")", "\n", "self", ".", "embedder", ".", "load_state_dict", "(", "torch", ".", "load", "(", "embedder_path", ",", "map_location", "=", "self", ".", "device", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinkobs_dml-analysis.reality_check.model.Network.forward": [[49, 52], ["model.Network.trunk", "model.Network.embedder"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "trunk", "(", "x", ")", "\n", "return", "self", ".", "embedder", "(", "x", ")", "\n", "", "", ""]]}