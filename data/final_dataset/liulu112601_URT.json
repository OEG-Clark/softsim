{"home.repos.pwc.inspect_result.liulu112601_URT.fast-exps.urt-avg-head.load_config": [[28, 59], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "vars", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "load_config", "(", ")", ":", "\n", "\n", "  ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train URT networks'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_dir'", ",", "type", "=", "str", ",", "help", "=", "\"The saved path in dir.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--cache_dir'", ",", "type", "=", "str", ",", "help", "=", "\"The saved path in dir.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "help", "=", "\"The random seed.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--interval.train'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "'The number to log training information'", ")", "\n", "parser", ".", "add_argument", "(", "'--interval.test'", ",", "type", "=", "int", ",", "default", "=", "2000", ",", "help", "=", "'The number to log training information'", ")", "\n", "parser", ".", "add_argument", "(", "'--interval.train.reset'", ",", "type", "=", "int", ",", "default", "=", "500", ",", "help", "=", "'The number to log training information'", ")", "\n", "\n", "# model args", "\n", "parser", ".", "add_argument", "(", "'--model.backbone'", ",", "default", "=", "'resnet18'", ",", "help", "=", "\"Use ResNet18 for experiments (default: False)\"", ")", "\n", "parser", ".", "add_argument", "(", "'--model.classifier'", ",", "type", "=", "str", ",", "default", "=", "'cosine'", ",", "choices", "=", "[", "'none'", ",", "'linear'", ",", "'cosine'", "]", ",", "help", "=", "\"Do classification using cosine similatity between activations and weights\"", ")", "\n", "\n", "# urt model ", "\n", "parser", ".", "add_argument", "(", "'--urt.variant'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--urt.temp'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--urt.head'", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--urt.penalty_coef'", ",", "type", "=", "float", ")", "\n", "# train args", "\n", "parser", ".", "add_argument", "(", "'--train.max_iter'", ",", "type", "=", "int", ",", "help", "=", "'number of epochs to train (default: 10000)'", ")", "\n", "parser", ".", "add_argument", "(", "'--train.weight_decay'", ",", "type", "=", "float", ",", "help", "=", "\"weight decay coef\"", ")", "\n", "parser", ".", "add_argument", "(", "'--train.optimizer'", ",", "type", "=", "str", ",", "help", "=", "'optimization method (default: momentum)'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--train.scheduler'", ",", "type", "=", "str", ",", "help", "=", "'optimization method (default: momentum)'", ")", "\n", "parser", ".", "add_argument", "(", "'--train.learning_rate'", ",", "type", "=", "float", ",", "help", "=", "'learning rate (default: 0.0001)'", ")", "\n", "parser", ".", "add_argument", "(", "'--train.lr_decay_step_gamma'", ",", "type", "=", "float", ",", "metavar", "=", "'DECAY_GAMMA'", ")", "\n", "parser", ".", "add_argument", "(", "'--train.lr_step'", ",", "type", "=", "int", ",", "help", "=", "'the value to divide learning rate by when decayin lr'", ")", "\n", "\n", "xargs", "=", "vars", "(", "parser", ".", "parse_args", "(", ")", ")", "\n", "return", "xargs", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.fast-exps.urt-avg-head.get_cosine_logits": [[61, 66], ["torch.cosine_similarity", "selected_target.view", "proto.view"], "function", ["None"], ["", "def", "get_cosine_logits", "(", "selected_target", ",", "proto", ",", "temp", ")", ":", "\n", "  ", "n_query", ",", "feat_dim", "=", "selected_target", ".", "shape", "\n", "n_classes", ",", "feat_dim", "=", "proto", ".", "shape", "\n", "logits", "=", "temp", "*", "F", ".", "cosine_similarity", "(", "selected_target", ".", "view", "(", "n_query", ",", "1", ",", "feat_dim", ")", ",", "proto", ".", "view", "(", "1", ",", "n_classes", ",", "feat_dim", ")", ",", "dim", "=", "-", "1", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.fast-exps.urt-avg-head.test_all_dataset": [[68, 113], ["URT_model.eval", "collections.OrderedDict", "utils.pre_load_results", "logger.print", "enumerate", "list", "utils.show_results", "logger.print", "test_loaders.items", "logger.print", "utils.AverageMeter", "enumerate", "writter.add_scalar", "writter.add_scalar", "test_loaders.keys", "test_loaders.keys", "utils.time_string", "len", "models.new_prop_prototype.get_lambda_urt_avg", "models.new_prop_prototype.apply_urt_avg_selection", "models.new_prop_prototype.apply_urt_avg_selection", "range", "torch.stack", "torch.stack", "torch.stack", "numpy.mean", "utils.time_string", "len", "context_features.squeeze().cuda", "context_labels.squeeze().cuda", "target_features.squeeze().cuda", "target_labels.squeeze().cuda", "numpy.unique", "urt_context_features[].mean", "proto_list.append", "torch.no_grad", "torch.no_grad", "torch.no_grad", "urt-avg-head.get_cosine_logits", "torch.cross_entropy", "utils.AverageMeter.update", "torch.argmax", "torch.argmax", "torch.argmax", "torch.eq().float().mean().item", "torch.eq().float().mean().item", "torch.eq().float().mean().item", "[].append", "context_labels.cpu().numpy", "F.cross_entropy.item", "context_features.squeeze", "context_labels.squeeze", "target_features.squeeze", "target_labels.squeeze", "torch.eq().float().mean", "torch.eq().float().mean", "torch.eq().float().mean", "context_labels.cpu", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.eq", "torch.eq", "torch.eq"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.eval", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.pre_load_results", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.show_results", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.get_lambda_urt_avg", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.apply_urt_avg_selection", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.apply_urt_avg_selection", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.fast-exps.urt-avg-head.get_cosine_logits", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean"], ["", "def", "test_all_dataset", "(", "xargs", ",", "test_loaders", ",", "URT_model", ",", "logger", ",", "writter", ",", "mode", ",", "training_iter", ",", "cosine_temp", ")", ":", "\n", "  ", "URT_model", ".", "eval", "(", ")", "\n", "our_name", "=", "'urt'", "\n", "accs_names", "=", "[", "our_name", "]", "\n", "alg2data2accuracy", "=", "collections", ".", "OrderedDict", "(", ")", "\n", "alg2data2accuracy", "[", "'sur-paper'", "]", ",", "alg2data2accuracy", "[", "'sur-exp'", "]", "=", "pre_load_results", "(", ")", "\n", "alg2data2accuracy", "[", "our_name", "]", "=", "{", "name", ":", "[", "]", "for", "name", "in", "test_loaders", ".", "keys", "(", ")", "}", "\n", "\n", "logger", ".", "print", "(", "'\\n{:} starting evaluate the {:} set at the {:}-th iteration.'", ".", "format", "(", "time_string", "(", ")", ",", "mode", ",", "training_iter", ")", ")", "\n", "for", "idata", ",", "(", "test_dataset", ",", "loader", ")", "in", "enumerate", "(", "test_loaders", ".", "items", "(", ")", ")", ":", "\n", "    ", "logger", ".", "print", "(", "'===>>> {:} --->>> {:02d}/{:02d} --->>> {:}'", ".", "format", "(", "time_string", "(", ")", ",", "idata", ",", "len", "(", "test_loaders", ")", ",", "test_dataset", ")", ")", "\n", "our_losses", "=", "AverageMeter", "(", ")", "\n", "for", "idx", ",", "(", "_", ",", "context_features", ",", "context_labels", ",", "target_features", ",", "target_labels", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "      ", "context_features", ",", "context_labels", "=", "context_features", ".", "squeeze", "(", "0", ")", ".", "cuda", "(", ")", ",", "context_labels", ".", "squeeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "target_features", ",", "target_labels", "=", "target_features", ".", "squeeze", "(", "0", ")", ".", "cuda", "(", ")", ",", "target_labels", ".", "squeeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "n_classes", "=", "len", "(", "np", ".", "unique", "(", "context_labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "# optimize selection parameters and perform feature selection", "\n", "avg_urt_params", "=", "get_lambda_urt_avg", "(", "context_features", ",", "context_labels", ",", "n_classes", ",", "URT_model", ",", "normalize", "=", "True", ")", "\n", "\n", "urt_context_features", "=", "apply_urt_avg_selection", "(", "context_features", ",", "avg_urt_params", ",", "normalize", "=", "True", ")", "\n", "urt_target_features", "=", "apply_urt_avg_selection", "(", "target_features", ",", "avg_urt_params", ",", "normalize", "=", "True", ")", "\n", "proto_list", "=", "[", "]", "\n", "for", "label", "in", "range", "(", "n_classes", ")", ":", "\n", "        ", "proto", "=", "urt_context_features", "[", "context_labels", "==", "label", "]", ".", "mean", "(", "dim", "=", "0", ")", "\n", "proto_list", ".", "append", "(", "proto", ")", "\n", "", "urt_proto", "=", "torch", ".", "stack", "(", "proto_list", ")", "\n", "\n", "#if random.random() > 0.99:", "\n", "#  print(\"urt avg score {}\".format(avg_urt_params))", "\n", "#  print(\"-\"*20)", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "logits", "=", "get_cosine_logits", "(", "urt_target_features", ",", "urt_proto", ",", "cosine_temp", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "logits", ",", "target_labels", ")", "\n", "our_losses", ".", "update", "(", "loss", ".", "item", "(", ")", ")", "\n", "predicts", "=", "torch", ".", "argmax", "(", "logits", ",", "dim", "=", "-", "1", ")", "\n", "final_acc", "=", "torch", ".", "eq", "(", "target_labels", ",", "predicts", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "alg2data2accuracy", "[", "our_name", "]", "[", "test_dataset", "]", ".", "append", "(", "final_acc", ")", "\n", "", "", "base_name", "=", "'{:}-{:}'", ".", "format", "(", "test_dataset", ",", "mode", ")", "\n", "writter", ".", "add_scalar", "(", "\"{:}-our-loss\"", ".", "format", "(", "base_name", ")", ",", "our_losses", ".", "avg", ",", "training_iter", ")", "\n", "writter", ".", "add_scalar", "(", "\"{:}-our-acc\"", ".", "format", "(", "base_name", ")", ",", "np", ".", "mean", "(", "alg2data2accuracy", "[", "our_name", "]", "[", "test_dataset", "]", ")", ",", "training_iter", ")", "\n", "\n", "\n", "", "dataset_names", "=", "list", "(", "test_loaders", ".", "keys", "(", ")", ")", "\n", "show_results", "(", "dataset_names", ",", "alg2data2accuracy", ",", "(", "'sur-paper'", ",", "our_name", ")", ",", "logger", ".", "print", ")", "\n", "logger", ".", "print", "(", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.fast-exps.urt-avg-head.main": [[114, 242], ["pathlib.Path().resolve", "Path().resolve.mkdir", "random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "config_utils.Logger", "config_utils.Logger.print", "xargs.items", "config_utils.Logger.print", "torch.utils.tensorboard.SummaryWriter", "datasets.get_train_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "datasets.get_eval_datasets", "collections.OrderedDict", "datasets.get_eval_datasets.items", "datasets.get_eval_datasets", "collections.OrderedDict", "datasets.get_eval_datasets.items", "collections.OrderedDict", "models.new_prop_prototype.MultiHeadURT", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "URT_model.cuda.cuda", "torch.Parameter", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "config_utils.Logger.print", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "config_utils.Logger.print", "last_ckp_path.exists", "enumerate", "urt-avg-head.test_all_dataset", "len", "str", "config_utils.Logger.print", "os.path.join", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "os.path.join", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.load", "torch.load", "torch.load", "URT_model.cuda.load_state_dict", "torch.optim.Adam.load_state_dict", "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict", "config_utils.Logger.print", "config_utils.Logger.print", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "time.time", "URT_model.cuda.train", "len", "models.new_prop_prototype.get_lambda_urt_avg", "torch.pow", "torch.pow", "torch.pow", "models.new_prop_prototype.apply_urt_avg_selection", "models.new_prop_prototype.apply_urt_avg_selection", "range", "torch.stack", "torch.stack", "torch.stack", "urt-avg-head.get_cosine_logits", "torch.optim.Adam.zero_grad", "loss.backward", "torch.optim.Adam.step", "torch.optim.lr_scheduler.CosineAnnealingLR.step", "iter_time.update", "time.time", "pathlib.Path", "list", "utils.time_string", "utils.time_string", "open", "json.load", "context_features.squeeze().cuda", "context_labels.squeeze().cuda", "target_features.squeeze().cuda", "target_labels.squeeze().cuda", "numpy.unique", "torch.norm", "torch.norm", "torch.norm", "urt_context_features[].mean", "proto_list.append", "torch.cross_entropy", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.argmax", "torch.argmax", "torch.argmax", "torch.eq().float().mean().item", "torch.eq().float().mean().item", "torch.eq().float().mean().item", "our_losses.update", "our_accuracies.update", "config_utils.Logger.print", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "utils.convert_secs2time", "config_utils.Logger.print", "urt-avg-head.test_all_dataset", "pathlib.Path().glob", "torch.tensor", "torch.tensor", "torch.tensor", "URT_model.cuda.parameters", "context_labels.cpu().numpy", "loss.item", "our_losses.reset", "our_accuracies.reset", "time.time", "context_features.squeeze", "context_labels.squeeze", "target_features.squeeze", "target_labels.squeeze", "torch.eye().cuda", "torch.eye().cuda", "torch.eye().cuda", "torch.eq().float().mean", "torch.eq().float().mean", "torch.eq().float().mean", "utils.time_string", "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr", "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "pathlib.Path", "context_labels.cpu", "torch.transpose", "torch.transpose", "torch.transpose", "torch.optim.Adam.state_dict", "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict", "URT_model.cuda.state_dict", "torch.eye", "torch.eye", "torch.eye", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.eq", "torch.eq", "torch.eq"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.datasets.__init__.get_train_dataset", "home.repos.pwc.inspect_result.liulu112601_URT.datasets.__init__.get_eval_datasets", "home.repos.pwc.inspect_result.liulu112601_URT.datasets.__init__.get_eval_datasets", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.fast-exps.urt-avg-head.test_all_dataset", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.train", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.get_lambda_urt_avg", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.apply_urt_avg_selection", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.apply_urt_avg_selection", "home.repos.pwc.inspect_result.liulu112601_URT.fast-exps.urt-avg-head.get_cosine_logits", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.IterBeat.step", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.IterBeat.step", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.convert_secs2time", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.fast-exps.urt-avg-head.test_all_dataset", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.reset", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.reset", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string"], ["", "def", "main", "(", "xargs", ")", ":", "\n", "\n", "# set up logger", "\n", "  ", "log_dir", "=", "Path", "(", "xargs", "[", "'save_dir'", "]", ")", ".", "resolve", "(", ")", "\n", "log_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "if", "xargs", "[", "'seed'", "]", "is", "None", "or", "xargs", "[", "'seed'", "]", "<", "0", ":", "\n", "    ", "seed", "=", "len", "(", "list", "(", "Path", "(", "log_dir", ")", ".", "glob", "(", "\"*.txt\"", ")", ")", ")", "\n", "", "else", ":", "\n", "    ", "seed", "=", "xargs", "[", "'seed'", "]", "\n", "", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "logger", "=", "Logger", "(", "str", "(", "log_dir", ")", ",", "seed", ")", "\n", "logger", ".", "print", "(", "'{:} --- args ---'", ".", "format", "(", "time_string", "(", ")", ")", ")", "\n", "for", "key", ",", "value", "in", "xargs", ".", "items", "(", ")", ":", "\n", "    ", "logger", ".", "print", "(", "'  [{:10s}] : {:}'", ".", "format", "(", "key", ",", "value", ")", ")", "\n", "", "logger", ".", "print", "(", "'{:} --- args ---'", ".", "format", "(", "time_string", "(", ")", ")", ")", "\n", "writter", "=", "SummaryWriter", "(", "log_dir", ")", "\n", "\n", "# Setting up datasets", "\n", "extractor_domains", "=", "TRAIN_METADATASET_NAMES", "\n", "train_dataset", "=", "get_train_dataset", "(", "xargs", "[", "'cache_dir'", "]", ",", "xargs", "[", "'train.max_iter'", "]", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "# The validation loaders.", "\n", "val_datasets", "=", "get_eval_datasets", "(", "os", ".", "path", ".", "join", "(", "xargs", "[", "'cache_dir'", "]", ",", "'val-600'", ")", ",", "TRAIN_METADATASET_NAMES", ")", "\n", "val_loaders", "=", "collections", ".", "OrderedDict", "(", ")", "\n", "for", "name", ",", "dataset", "in", "val_datasets", ".", "items", "(", ")", ":", "\n", "    ", "val_loaders", "[", "name", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "# The test loaders", "\n", "", "test_datasets", "=", "get_eval_datasets", "(", "os", ".", "path", ".", "join", "(", "xargs", "[", "'cache_dir'", "]", ",", "'test-600'", ")", ",", "ALL_METADATASET_NAMES", ")", "\n", "test_loaders", "=", "collections", ".", "OrderedDict", "(", ")", "\n", "for", "name", ",", "dataset", "in", "test_datasets", ".", "items", "(", ")", ":", "\n", "    ", "test_loaders", "[", "name", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "\n", "", "class_name_dict", "=", "collections", ".", "OrderedDict", "(", ")", "\n", "for", "d", "in", "extractor_domains", ":", "\n", "    ", "with", "open", "(", "\"{:}/{:}/dataset_spec.json\"", ".", "format", "(", "META_RECORDS_ROOT", ",", "d", ")", ")", "as", "f", ":", "\n", "      ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "class_name_dict", "[", "d", "]", "=", "data", "[", "'class_names'", "]", "\n", "\n", "# init prop model", "\n", "", "", "URT_model", "=", "MultiHeadURT", "(", "key_dim", "=", "512", ",", "query_dim", "=", "8", "*", "512", ",", "hid_dim", "=", "1024", ",", "temp", "=", "1", ",", "att", "=", "\"dotproduct\"", ",", "n_head", "=", "xargs", "[", "'urt.head'", "]", ")", "\n", "URT_model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "URT_model", ")", "\n", "URT_model", "=", "URT_model", ".", "cuda", "(", ")", "\n", "cosine_temp", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "10.0", ")", ".", "cuda", "(", ")", ")", "\n", "params", "=", "[", "p", "for", "p", "in", "URT_model", ".", "parameters", "(", ")", "]", "+", "[", "cosine_temp", "]", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "lr", "=", "xargs", "[", "'train.learning_rate'", "]", ",", "weight_decay", "=", "xargs", "[", "'train.weight_decay'", "]", ")", "\n", "logger", ".", "print", "(", "optimizer", ")", "\n", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "optimizer", "=", "optimizer", ",", "T_max", "=", "xargs", "[", "'train.max_iter'", "]", ")", "\n", "logger", ".", "print", "(", "lr_scheduler", ")", "\n", "\n", "# load checkpoint optional", "\n", "last_ckp_path", "=", "log_dir", "/", "'last-ckp-seed-{:}.pth'", ".", "format", "(", "seed", ")", "\n", "if", "last_ckp_path", ".", "exists", "(", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "last_ckp_path", ")", "\n", "start_iter", "=", "checkpoint", "[", "'train_iter'", "]", "+", "1", "\n", "URT_model", ".", "load_state_dict", "(", "checkpoint", "[", "'URT_model'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "lr_scheduler", ".", "load_state_dict", "(", "checkpoint", "[", "'scheduler'", "]", ")", "\n", "logger", ".", "print", "(", "'load checkpoint from {:}'", ".", "format", "(", "last_ckp_path", ")", ")", "\n", "", "else", ":", "\n", "    ", "logger", ".", "print", "(", "'randomly initialiization'", ")", "\n", "start_iter", "=", "0", "\n", "", "max_iter", "=", "xargs", "[", "'train.max_iter'", "]", "\n", "\n", "our_losses", ",", "our_accuracies", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "iter_time", ",", "timestamp", "=", "AverageMeter", "(", ")", ",", "time", ".", "time", "(", ")", "\n", "\n", "for", "index", ",", "(", "_", ",", "context_features", ",", "context_labels", ",", "target_features", ",", "target_labels", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "    ", "context_features", ",", "context_labels", "=", "context_features", ".", "squeeze", "(", "0", ")", ".", "cuda", "(", ")", ",", "context_labels", ".", "squeeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "target_features", ",", "target_labels", "=", "target_features", ".", "squeeze", "(", "0", ")", ".", "cuda", "(", ")", ",", "target_labels", ".", "squeeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "URT_model", ".", "train", "(", ")", "\n", "n_classes", "=", "len", "(", "np", ".", "unique", "(", "context_labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "# optimize selection parameters and perform feature selection", "\n", "avg_urt_params", "=", "get_lambda_urt_avg", "(", "context_features", ",", "context_labels", ",", "n_classes", ",", "URT_model", ",", "normalize", "=", "True", ")", "\n", "# identity matrix panelize to be sparse, only focus on one aspect", "\n", "penalty", "=", "torch", ".", "pow", "(", "torch", ".", "norm", "(", "torch", ".", "transpose", "(", "avg_urt_params", ",", "0", ",", "1", ")", "@", "avg_urt_params", "-", "torch", ".", "eye", "(", "xargs", "[", "'urt.head'", "]", ")", ".", "cuda", "(", ")", ")", ",", "2", ")", "\n", "# n_samples * (n_head * 512)", "\n", "urt_context_features", "=", "apply_urt_avg_selection", "(", "context_features", ",", "avg_urt_params", ",", "normalize", "=", "True", ")", "\n", "urt_target_features", "=", "apply_urt_avg_selection", "(", "target_features", ",", "avg_urt_params", ",", "normalize", "=", "True", ")", "\n", "proto_list", "=", "[", "]", "\n", "for", "label", "in", "range", "(", "n_classes", ")", ":", "\n", "      ", "proto", "=", "urt_context_features", "[", "context_labels", "==", "label", "]", ".", "mean", "(", "dim", "=", "0", ")", "\n", "proto_list", ".", "append", "(", "proto", ")", "\n", "", "urt_proto", "=", "torch", ".", "stack", "(", "proto_list", ")", "\n", "logits", "=", "get_cosine_logits", "(", "urt_target_features", ",", "urt_proto", ",", "cosine_temp", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "logits", ",", "target_labels", ")", "+", "xargs", "[", "'urt.penalty_coef'", "]", "*", "penalty", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "predicts", "=", "torch", ".", "argmax", "(", "logits", ",", "dim", "=", "-", "1", ")", "\n", "final_acc", "=", "torch", ".", "eq", "(", "target_labels", ",", "predicts", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "our_losses", ".", "update", "(", "loss", ".", "item", "(", ")", ")", "\n", "our_accuracies", ".", "update", "(", "final_acc", "*", "100", ")", "\n", "\n", "", "if", "index", "%", "xargs", "[", "'interval.train'", "]", "==", "0", "or", "index", "+", "1", "==", "max_iter", ":", "\n", "      ", "logger", ".", "print", "(", "\"{:} [{:5d}/{:5d}] [OUR] lr: {:}, loss: {:.5f}, accuracy: {:.4f}\"", ".", "format", "(", "time_string", "(", ")", ",", "index", ",", "max_iter", ",", "lr_scheduler", ".", "get_last_lr", "(", ")", ",", "our_losses", ".", "avg", ",", "our_accuracies", ".", "avg", ")", ")", "\n", "writter", ".", "add_scalar", "(", "\"lr\"", ",", "lr_scheduler", ".", "get_last_lr", "(", ")", "[", "0", "]", ",", "index", ")", "\n", "writter", ".", "add_scalar", "(", "\"train_loss\"", ",", "our_losses", ".", "avg", ",", "index", ")", "\n", "writter", ".", "add_scalar", "(", "\"train_acc\"", ",", "our_accuracies", ".", "avg", ",", "index", ")", "\n", "if", "index", "+", "1", "==", "max_iter", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "          ", "info", "=", "{", "'args'", ":", "xargs", ",", "\n", "'train_iter'", ":", "index", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'scheduler'", ":", "lr_scheduler", ".", "state_dict", "(", ")", ",", "\n", "'URT_model'", ":", "URT_model", ".", "state_dict", "(", ")", "}", "\n", "torch", ".", "save", "(", "info", ",", "\"{:}/ckp-seed-{:}-iter-{:}.pth\"", ".", "format", "(", "log_dir", ",", "seed", ",", "index", ")", ")", "\n", "torch", ".", "save", "(", "info", ",", "last_ckp_path", ")", "\n", "\n", "# Reset the count", "\n", "", "", "if", "index", "%", "xargs", "[", "'interval.train.reset'", "]", "==", "0", ":", "\n", "          ", "our_losses", ".", "reset", "(", ")", "\n", "our_accuracies", ".", "reset", "(", ")", "\n", "", "time_str", "=", "convert_secs2time", "(", "iter_time", ".", "avg", "*", "(", "max_iter", "-", "index", ")", ",", "True", ")", "\n", "logger", ".", "print", "(", "\"iteration [{:5d}/{:5d}], still need {:}\"", ".", "format", "(", "index", ",", "max_iter", ",", "time_str", ")", ")", "\n", "\n", "# measure time", "\n", "", "iter_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "timestamp", ")", "\n", "timestamp", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "(", "index", "+", "1", ")", "%", "xargs", "[", "'interval.test'", "]", "==", "0", "or", "index", "+", "1", "==", "max_iter", ":", "\n", "      ", "test_all_dataset", "(", "xargs", ",", "val_loaders", ",", "URT_model", ",", "logger", ",", "writter", ",", "\"eval\"", ",", "index", ",", "cosine_temp", ")", "\n", "", "", "test_all_dataset", "(", "xargs", ",", "test_loaders", ",", "URT_model", ",", "logger", ",", "writter", ",", "\"test\"", ",", "index", ",", "cosine_temp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.AverageMeter.__init__": [[32, 34], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.AverageMeter.reset": [[35, 40], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "    ", "self", ".", "val", "=", "0.0", "\n", "self", ".", "avg", "=", "0.0", "\n", "self", ".", "sum", "=", "0.0", "\n", "self", ".", "count", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.AverageMeter.update": [[41, 46], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "    ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.AverageMeter.__repr__": [[47, 49], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "return", "(", "'{name}(val={val}, avg={avg}, count={count})'", ".", "format", "(", "name", "=", "self", ".", "__class__", ".", "__name__", ",", "**", "self", ".", "__dict__", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.ConfusionMatrix.__init__": [[52, 55], ["numpy.zeros"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", ")", ":", "\n", "        ", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "mat", "=", "np", ".", "zeros", "(", "[", "n_classes", ",", "n_classes", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.ConfusionMatrix.update_mat": [[56, 61], ["numpy.array"], "methods", ["None"], ["", "def", "update_mat", "(", "self", ",", "preds", ",", "labels", ",", "idxs", ")", ":", "\n", "        ", "idxs", "=", "np", ".", "array", "(", "idxs", ")", "\n", "real_pred", "=", "idxs", "[", "preds", "]", "\n", "real_labels", "=", "idxs", "[", "labels", "]", "\n", "self", ".", "mat", "[", "real_pred", ",", "real_labels", "]", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.ConfusionMatrix.get_mat": [[62, 64], ["None"], "methods", ["None"], ["", "def", "get_mat", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.__init__": [[67, 70], ["numpy.empty"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "max_size", "=", "2000", ")", ":", "\n", "        ", "self", ".", "max_size", "=", "max_size", "\n", "self", ".", "ac", "=", "np", ".", "empty", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append": [[71, 73], ["numpy.append"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "append", "(", "self", ",", "v", ")", ":", "\n", "        ", "self", ".", "ac", "=", "np", ".", "append", "(", "self", ".", "ac", "[", "-", "self", ".", "max_size", ":", "]", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.reset": [[74, 76], ["numpy.empty"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "ac", "=", "np", ".", "empty", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean": [[77, 80], ["utils.Accumulator.ac[].mean"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean"], ["", "def", "mean", "(", "self", ",", "last", "=", "None", ")", ":", "\n", "        ", "last", "=", "last", "if", "last", "else", "self", ".", "max_size", "\n", "return", "self", ".", "ac", "[", "-", "last", ":", "]", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.IterBeat.__init__": [[83, 86], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "freq", ",", "length", "=", "None", ")", ":", "\n", "        ", "self", ".", "length", "=", "length", "\n", "self", ".", "freq", "=", "freq", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.IterBeat.step": [[87, 98], ["time.time", "time.time", "print"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print"], ["", "def", "step", "(", "self", ",", "i", ")", ":", "\n", "        ", "if", "i", "==", "0", ":", "\n", "            ", "self", ".", "t", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "lastcall", "=", "0", "\n", "", "else", ":", "\n", "            ", "if", "(", "(", "i", "%", "self", ".", "freq", ")", "==", "0", ")", "or", "(", "(", "i", "+", "1", ")", "==", "self", ".", "length", ")", ":", "\n", "                ", "t", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'{0} / {1} ---- {2:.2f} it/sec'", ".", "format", "(", "\n", "i", ",", "self", ".", "length", ",", "(", "i", "-", "self", ".", "lastcall", ")", "/", "(", "t", "-", "self", ".", "t", ")", ")", ")", "\n", "self", ".", "lastcall", "=", "i", "\n", "self", ".", "t", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.__init__": [[101, 105], ["array.tobytes"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "array", ")", ":", "\n", "        ", "self", ".", "shape", "=", "array", ".", "shape", "\n", "self", ".", "data", "=", "array", ".", "tobytes", "(", ")", "\n", "self", ".", "dtype", "=", "array", ".", "dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get": [[106, 109], ["numpy.frombuffer", "numpy.reshape"], "methods", ["None"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "array", "=", "np", ".", "frombuffer", "(", "self", ".", "data", ",", "self", ".", "dtype", ")", "\n", "return", "np", ".", "reshape", "(", "array", ",", "self", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.time_string": [[10, 14], ["time.strftime", "time.gmtime", "time.time"], "function", ["None"], ["def", "time_string", "(", ")", ":", "\n", "  ", "ISOTIMEFORMAT", "=", "'%Y-%m-%d %X'", "\n", "string", "=", "'[{:}]'", ".", "format", "(", "time", ".", "strftime", "(", "ISOTIMEFORMAT", ",", "time", ".", "gmtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", "\n", "return", "string", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.convert_secs2time": [[16, 28], ["int", "int", "int"], "function", ["None"], ["", "def", "convert_secs2time", "(", "epoch_time", ",", "string", "=", "True", ",", "xneed", "=", "True", ")", ":", "\n", "  ", "need_hour", "=", "int", "(", "epoch_time", "/", "3600", ")", "\n", "need_mins", "=", "int", "(", "(", "epoch_time", "-", "3600", "*", "need_hour", ")", "/", "60", ")", "\n", "need_secs", "=", "int", "(", "epoch_time", "-", "3600", "*", "need_hour", "-", "60", "*", "need_mins", ")", "\n", "if", "string", ":", "\n", "    ", "if", "xneed", ":", "\n", "      ", "need_time", "=", "'[Need: {:02d}:{:02d}:{:02d}]'", ".", "format", "(", "need_hour", ",", "need_mins", ",", "need_secs", ")", "\n", "", "else", ":", "\n", "      ", "need_time", "=", "'{:02d}:{:02d}:{:02d}'", ".", "format", "(", "need_hour", ",", "need_mins", ",", "need_secs", ")", "\n", "", "return", "need_time", "\n", "", "else", ":", "\n", "    ", "return", "need_hour", ",", "need_mins", ",", "need_secs", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.print_res": [[111, 121], ["print", "numpy.array", "numpy.mean", "numpy.std", "numpy.sqrt", "len", "open", "f.write"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean"], ["", "", "def", "print_res", "(", "array", ",", "name", ",", "file", "=", "None", ",", "prec", "=", "4", ",", "mult", "=", "1", ")", ":", "\n", "    ", "array", "=", "np", ".", "array", "(", "array", ")", "*", "mult", "\n", "mean", ",", "std", "=", "np", ".", "mean", "(", "array", ")", ",", "np", ".", "std", "(", "array", ")", "\n", "conf", "=", "1.96", "*", "std", "/", "np", ".", "sqrt", "(", "len", "(", "array", ")", ")", "\n", "stat_string", "=", "(", "\"test {:s}: {:0.%df} +/- {:0.%df}\"", "\n", "%", "(", "prec", ",", "prec", ")", ")", ".", "format", "(", "name", ",", "mean", ",", "conf", ")", "\n", "print", "(", "stat_string", ")", "\n", "if", "file", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "file", ",", "'a+'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "stat_string", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.process_copies": [[123, 129], ["embeddings.view().mean", "embeddings.view"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean"], ["", "", "", "def", "process_copies", "(", "embeddings", ",", "labels", ",", "args", ")", ":", "\n", "    ", "n_copy", "=", "args", "[", "'test.n_copy'", "]", "\n", "test_embeddings", "=", "embeddings", ".", "view", "(", "\n", "args", "[", "'data.test_query'", "]", "*", "args", "[", "'data.test_way'", "]", ",", "\n", "n_copy", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "1", ")", "\n", "return", "test_embeddings", ",", "labels", "[", "0", ":", ":", "n_copy", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.set_determ": [[131, 137], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all"], "function", ["None"], ["", "def", "set_determ", "(", "seed", "=", "1234", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.merge_dicts": [[139, 157], ["dicts[].keys", "isinstance", "torch.stack", "isinstance", "new_dict[].append", "utils.merge_dicts.stack_fn"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "merge_dicts", "(", "dicts", ",", "torch_stack", "=", "True", ")", ":", "\n", "    ", "def", "stack_fn", "(", "l", ")", ":", "\n", "        ", "if", "isinstance", "(", "l", "[", "0", "]", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "return", "torch", ".", "stack", "(", "l", ")", "\n", "", "elif", "isinstance", "(", "l", "[", "0", "]", ",", "str", ")", ":", "\n", "            ", "return", "l", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "tensor", "(", "l", ")", "\n", "\n", "", "", "keys", "=", "dicts", "[", "0", "]", ".", "keys", "(", ")", "\n", "new_dict", "=", "{", "key", ":", "[", "]", "for", "key", "in", "keys", "}", "\n", "for", "key", "in", "keys", ":", "\n", "        ", "for", "d", "in", "dicts", ":", "\n", "            ", "new_dict", "[", "key", "]", ".", "append", "(", "d", "[", "key", "]", ")", "\n", "", "", "if", "torch_stack", ":", "\n", "        ", "for", "key", "in", "keys", ":", "\n", "            ", "new_dict", "[", "key", "]", "=", "stack_fn", "(", "new_dict", "[", "key", "]", ")", "\n", "", "", "return", "new_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.voting": [[159, 171], ["len", "len", "range", "numpy.unique", "final_preds.append", "final_preds.append", "range", "max", "numpy.argmax"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "voting", "(", "preds", ",", "pref_ind", "=", "0", ")", ":", "\n", "    ", "n_models", "=", "len", "(", "preds", ")", "\n", "n_test", "=", "len", "(", "preds", "[", "0", "]", ")", "\n", "final_preds", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_test", ")", ":", "\n", "        ", "cur_preds", "=", "[", "preds", "[", "k", "]", "[", "i", "]", "for", "k", "in", "range", "(", "n_models", ")", "]", "\n", "classes", ",", "counts", "=", "np", ".", "unique", "(", "cur_preds", ",", "return_counts", "=", "True", ")", "\n", "if", "(", "counts", "==", "max", "(", "counts", ")", ")", ".", "sum", "(", ")", ">", "1", ":", "\n", "            ", "final_preds", ".", "append", "(", "preds", "[", "pref_ind", "]", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "            ", "final_preds", ".", "append", "(", "classes", "[", "np", ".", "argmax", "(", "counts", ")", "]", ")", "\n", "", "", "return", "final_preds", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.agreement": [[173, 181], ["numpy.zeros", "range", "range"], "function", ["None"], ["", "def", "agreement", "(", "preds", ")", ":", "\n", "    ", "n_preds", "=", "preds", ".", "shape", "[", "0", "]", "\n", "mat", "=", "np", ".", "zeros", "(", "(", "n_preds", ",", "n_preds", ")", ")", "\n", "for", "i", "in", "range", "(", "n_preds", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "i", ",", "n_preds", ")", ":", "\n", "            ", "mat", "[", "i", ",", "j", "]", "=", "mat", "[", "j", ",", "i", "]", "=", "(", "\n", "preds", "[", "i", "]", "==", "preds", "[", "j", "]", ")", ".", "astype", "(", "'float'", ")", ".", "mean", "(", ")", "\n", "", "", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.read_textfile": [[183, 189], ["open", "f.read().split", "f.read"], "function", ["None"], ["", "def", "read_textfile", "(", "filename", ",", "skip_last_line", "=", "True", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "container", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "\n", "if", "skip_last_line", ":", "\n", "            ", "container", "=", "container", "[", ":", "-", "1", "]", "\n", "", "", "return", "container", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.check_dir": [[191, 203], ["os.makedirs", "print", "print"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print"], ["", "def", "check_dir", "(", "dirname", ",", "verbose", "=", "True", ")", ":", "\n", "    ", "\"\"\"This function creates a directory\n    in case it doesn't exist\"\"\"", "\n", "try", ":", "\n", "# Create target Directory", "\n", "        ", "os", ".", "makedirs", "(", "dirname", ")", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "\"Directory \"", ",", "dirname", ",", "\" was created\"", ")", "\n", "", "", "except", "FileExistsError", ":", "\n", "        ", "if", "verbose", ":", "\n", "            ", "print", "(", "\"Directory \"", ",", "dirname", ",", "\" already exists\"", ")", "\n", "", "", "return", "dirname", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.pre_load_results": [[205, 209], ["None"], "function", ["None"], ["", "def", "pre_load_results", "(", ")", ":", "\n", "  ", "sur_paper", "=", "{", "\"ilsvrc_2012\"", ":", "[", ".563", "]", ",", "\"omniglot\"", ":", "[", ".931", "]", ",", "\"aircraft\"", ":", "[", ".854", "]", ",", "\"cu_birds\"", ":", "[", ".714", "]", ",", "\"dtd\"", ":", "[", ".715", "]", ",", "\"quickdraw\"", ":", "[", ".813", "]", ",", "\"fungi\"", ":", "[", ".631", "]", ",", "\"vgg_flower\"", ":", "[", ".828", "]", ",", "\"traffic_sign\"", ":", "[", ".704", "]", ",", "\"mscoco\"", ":", "[", ".524", "]", ",", "\"mnist\"", ":", "[", ".943", "]", ",", "\"cifar10\"", ":", "[", ".668", "]", ",", "\"cifar100\"", ":", "[", ".566", "]", "}", "\n", "sur_exp", "=", "{", "\"ilsvrc_2012\"", ":", "[", ".563", "]", ",", "\"omniglot\"", ":", "[", ".931", "]", ",", "\"aircraft\"", ":", "[", ".854", "]", ",", "\"cu_birds\"", ":", "[", ".714", "]", ",", "\"dtd\"", ":", "[", ".715", "]", ",", "\"quickdraw\"", ":", "[", ".813", "]", ",", "\"fungi\"", ":", "[", ".631", "]", ",", "\"vgg_flower\"", ":", "[", ".828", "]", ",", "\"traffic_sign\"", ":", "[", ".704", "]", ",", "\"mscoco\"", ":", "[", ".524", "]", ",", "\"mnist\"", ":", "[", ".943", "]", ",", "\"cifar10\"", ":", "[", ".668", "]", ",", "\"cifar100\"", ":", "[", ".566", "]", "}", "\n", "return", "sur_paper", ",", "sur_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.show_results": [[211, 229], ["tabulate.tabulate", "print_func", "isinstance", "alg2data2accuracy.items", "row.append", "rows.append", "list", "len", "acc.mean", "row.append", "alg2data2accuracy.keys", "numpy.array", "numpy.sqrt", "len", "acc.std", "len"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "show_results", "(", "dataset_names", ",", "alg2data2accuracy", ",", "compares", ",", "print_func", ")", ":", "\n", "  ", "assert", "isinstance", "(", "compares", ",", "tuple", ")", "and", "len", "(", "compares", ")", "==", "2", "\n", "rows", ",", "better", "=", "[", "]", ",", "0", "\n", "for", "dataset_name", "in", "dataset_names", ":", "\n", "    ", "row", "=", "[", "dataset_name", "]", "\n", "xname2acc", "=", "{", "}", "\n", "for", "model_name", ",", "data2accs", "in", "alg2data2accuracy", ".", "items", "(", ")", ":", "\n", "      ", "acc", "=", "np", ".", "array", "(", "data2accs", "[", "dataset_name", "]", ")", "*", "100", "\n", "mean_acc", "=", "acc", ".", "mean", "(", ")", "\n", "conf", "=", "(", "1.96", "*", "acc", ".", "std", "(", ")", ")", "/", "np", ".", "sqrt", "(", "len", "(", "acc", ")", ")", "\n", "row", ".", "append", "(", "f\"{mean_acc:0.2f} +- {conf:0.2f}\"", ")", "\n", "xname2acc", "[", "model_name", "]", "=", "mean_acc", "\n", "", "row", ".", "append", "(", "\"{:.2f}\"", ".", "format", "(", "xname2acc", "[", "compares", "[", "1", "]", "]", "-", "xname2acc", "[", "compares", "[", "0", "]", "]", ")", ")", "\n", "better", "+=", "xname2acc", "[", "compares", "[", "1", "]", "]", ">", "xname2acc", "[", "compares", "[", "0", "]", "]", "\n", "rows", ".", "append", "(", "row", ")", "\n", "", "alg_names", "=", "list", "(", "alg2data2accuracy", ".", "keys", "(", ")", ")", "+", "[", "'ok-{:02d}/{:02d}'", ".", "format", "(", "better", ",", "len", "(", "dataset_names", ")", ")", "]", "\n", "table", "=", "tabulate", "(", "rows", ",", "headers", "=", "[", "'model \\\\ data'", "]", "+", "alg_names", ",", "floatfmt", "=", "\".2f\"", ")", "\n", "print_func", "(", "table", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.datasets.EpisodeMetadata.EpisodeMetadata.__init__": [[8, 20], ["range", "os.path.join", "os.path.join", "os.path.exists", "EpisodeMetadata.EpisodeMetadata.files.append"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["  ", "def", "__init__", "(", "self", ",", "root", ",", "name", ",", "total", ")", ":", "\n", "    ", "self", ".", "name", "=", "name", "\n", "if", "name", "is", "None", ":", "\n", "      ", "self", ".", "root_dir", "=", "root", "\n", "", "else", ":", "\n", "      ", "self", ".", "root_dir", "=", "os", ".", "path", ".", "join", "(", "root", ",", "name", ")", "\n", "", "self", ".", "total", "=", "total", "\n", "self", ".", "files", "=", "[", "]", "\n", "for", "index", "in", "range", "(", "total", ")", ":", "\n", "      ", "xfile", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_dir", ",", "'{:06d}.pth'", ".", "format", "(", "index", ")", ")", "\n", "assert", "os", ".", "path", ".", "exists", "(", "xfile", ")", ",", "'{:}'", ".", "format", "(", "xfile", ")", "\n", "self", ".", "files", ".", "append", "(", "xfile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.datasets.EpisodeMetadata.EpisodeMetadata.__getitem__": [[21, 29], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "xfile", "=", "self", ".", "files", "[", "index", "]", "\n", "xdata", "=", "torch", ".", "load", "(", "xfile", ",", "map_location", "=", "'cpu'", ")", "\n", "context_features", "=", "xdata", "[", "'context_features'", "]", "\n", "context_labels", "=", "xdata", "[", "'context_labels'", "]", "\n", "target_features", "=", "xdata", "[", "'target_features'", "]", "\n", "target_labels", "=", "xdata", "[", "'target_labels'", "]", "\n", "return", "torch", ".", "IntTensor", "(", "[", "index", "]", ")", ",", "context_features", ",", "context_labels", ",", "target_features", ",", "target_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.datasets.EpisodeMetadata.EpisodeMetadata.__len__": [[30, 32], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.datasets.__init__.get_eval_datasets": [[5, 12], ["collections.OrderedDict", "EpisodeMetadata.EpisodeMetadata"], "function", ["None"], ["def", "get_eval_datasets", "(", "root", ",", "dataset_names", ",", "num", "=", "600", ")", ":", "\n", "#eval_dataset_names = ['ilsvrc_2012', 'omniglot', 'aircraft', 'cu_birds', 'dtd', 'quickdraw', 'fungi', 'vgg_flower']", "\n", "  ", "datasets", "=", "OrderedDict", "(", ")", "\n", "for", "name", "in", "dataset_names", ":", "\n", "    ", "dataset", "=", "EpisodeMetadata", "(", "root", ",", "name", ",", "num", ")", "\n", "datasets", "[", "name", "]", "=", "dataset", "\n", "", "return", "datasets", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.datasets.__init__.get_train_dataset": [[14, 16], ["EpisodeMetadata.EpisodeMetadata"], "function", ["None"], ["", "def", "get_train_dataset", "(", "root", ",", "num", "=", "10000", ")", ":", "\n", "  ", "return", "EpisodeMetadata", "(", "root", ",", "'train-{:}'", ".", "format", "(", "num", ")", ",", "num", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.count_parameters_in_MB": [[6, 11], ["isinstance", "numpy.sum", "numpy.sum", "numpy.prod", "numpy.prod", "v.size", "model.parameters", "v.size"], "function", ["None"], ["def", "count_parameters_in_MB", "(", "model", ")", ":", "\n", "  ", "if", "isinstance", "(", "model", ",", "nn", ".", "Module", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "np", ".", "prod", "(", "v", ".", "size", "(", ")", ")", "for", "v", "in", "model", ".", "parameters", "(", ")", ")", "/", "1e6", "\n", "", "else", ":", "\n", "    ", "return", "np", ".", "sum", "(", "np", ".", "prod", "(", "v", ".", "size", "(", ")", ")", "for", "v", "in", "model", ")", "/", "1e6", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.get_model_infos": [[13, 39], ["flop_benchmark.add_flops_counting_methods", "add_flops_counting_methods.eval", "torch.zeros", "torch.zeros", "flop_benchmark.count_parameters_in_MB", "hasattr", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "add_flops_counting_methods.apply", "next", "cache_inputs.cuda.cuda", "torch.no_grad", "torch.no_grad", "add_flops_counting_methods.", "flop_benchmark.compute_average_flops_cost", "flop_benchmark.count_parameters_in_MB", "print", "print", "add_flops_counting_methods.parameters", "add_flops_counting_methods.auxiliary_param"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.add_flops_counting_methods", "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.eval", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.count_parameters_in_MB", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.compute_average_flops_cost", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.count_parameters_in_MB", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print"], ["", "", "def", "get_model_infos", "(", "model", ",", "shape", ")", ":", "\n", "#model = copy.deepcopy( model )", "\n", "\n", "  ", "model", "=", "add_flops_counting_methods", "(", "model", ")", "\n", "#model = model.cuda()", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "#cache_inputs = torch.zeros(*shape).cuda()", "\n", "cache_inputs", "=", "torch", ".", "zeros", "(", "*", "shape", ")", "\n", "if", "next", "(", "model", ".", "parameters", "(", ")", ")", ".", "is_cuda", ":", "cache_inputs", "=", "cache_inputs", ".", "cuda", "(", ")", "\n", "#print_log('In the calculating function : cache input size : {:}'.format(cache_inputs.size()), log)", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "    ", "_____", "=", "model", "(", "cache_inputs", ")", "\n", "", "FLOPs", "=", "compute_average_flops_cost", "(", "model", ")", "/", "1e6", "\n", "Param", "=", "count_parameters_in_MB", "(", "model", ")", "\n", "\n", "if", "hasattr", "(", "model", ",", "'auxiliary_param'", ")", ":", "\n", "    ", "aux_params", "=", "count_parameters_in_MB", "(", "model", ".", "auxiliary_param", "(", ")", ")", "\n", "print", "(", "'The auxiliary params of this model is : {:}'", ".", "format", "(", "aux_params", ")", ")", "\n", "print", "(", "'We remove the auxiliary params from the total params ({:}) when counting'", ".", "format", "(", "Param", ")", ")", "\n", "Param", "=", "Param", "-", "aux_params", "\n", "\n", "#print_log('FLOPs : {:} MB'.format(FLOPs), log)", "\n", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "model", ".", "apply", "(", "remove_hook_function", ")", "\n", "return", "FLOPs", ",", "Param", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.add_flops_counting_methods": [[42, 48], ["flop_benchmark.add_batch_counter_hook_function", "model.apply", "model.apply", "flop_benchmark.remove_hook_function"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.add_batch_counter_hook_function", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.remove_hook_function"], ["", "def", "add_flops_counting_methods", "(", "model", ")", ":", "\n", "  ", "model", ".", "__batch_counter__", "=", "0", "\n", "add_batch_counter_hook_function", "(", "model", ")", "\n", "model", ".", "apply", "(", "add_flops_counter_variable_or_reset", ")", "\n", "model", ".", "apply", "(", "add_flops_counter_hook_function", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.compute_average_flops_cost": [[51, 65], ["model.modules", "isinstance", "isinstance", "isinstance", "hasattr"], "function", ["None"], ["", "def", "compute_average_flops_cost", "(", "model", ")", ":", "\n", "  ", "\"\"\"\n  A method that will be available after add_flops_counting_methods() is called on a desired net object.\n  Returns current mean flops consumption per image.\n  \"\"\"", "\n", "batches_count", "=", "model", ".", "__batch_counter__", "\n", "flops_sum", "=", "0", "\n", "#or isinstance(module, torch.nn.AvgPool2d) or isinstance(module, torch.nn.MaxPool2d) \\", "\n", "for", "module", "in", "model", ".", "modules", "(", ")", ":", "\n", "    ", "if", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "Linear", ")", "or", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "Conv1d", ")", "or", "hasattr", "(", "module", ",", "'calculate_flop_self'", ")", ":", "\n", "      ", "flops_sum", "+=", "module", ".", "__flops__", "\n", "", "", "return", "flops_sum", "/", "batches_count", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.pool_flops_counter_hook": [[68, 76], ["inputs[].size", "inputs[].size", "inputs[].size"], "function", ["None"], ["", "def", "pool_flops_counter_hook", "(", "pool_module", ",", "inputs", ",", "output", ")", ":", "\n", "  ", "batch_size", "=", "inputs", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "kernel_size", "=", "pool_module", ".", "kernel_size", "\n", "out_C", ",", "output_height", ",", "output_width", "=", "output", ".", "shape", "[", "1", ":", "]", "\n", "assert", "out_C", "==", "inputs", "[", "0", "]", ".", "size", "(", "1", ")", ",", "'{:} vs. {:}'", ".", "format", "(", "out_C", ",", "inputs", "[", "0", "]", ".", "size", "(", ")", ")", "\n", "\n", "overall_flops", "=", "batch_size", "*", "out_C", "*", "output_height", "*", "output_width", "*", "kernel_size", "*", "kernel_size", "\n", "pool_module", ".", "__flops__", "+=", "overall_flops", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.self_calculate_flops_counter_hook": [[78, 81], ["flop_benchmark..calculate_flop_self"], "function", ["None"], ["", "def", "self_calculate_flops_counter_hook", "(", "self_module", ",", "inputs", ",", "output", ")", ":", "\n", "  ", "overall_flops", "=", "self_module", ".", "calculate_flop_self", "(", "inputs", "[", "0", "]", ".", "shape", ",", "output", ".", "shape", ")", "\n", "self_module", ".", "__flops__", "+=", "overall_flops", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.fc_flops_counter_hook": [[83, 91], ["inputs[].size", "inputs[].size", "output.size"], "function", ["None"], ["", "def", "fc_flops_counter_hook", "(", "fc_module", ",", "inputs", ",", "output", ")", ":", "\n", "  ", "batch_size", "=", "inputs", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "xin", ",", "xout", "=", "fc_module", ".", "in_features", ",", "fc_module", ".", "out_features", "\n", "assert", "xin", "==", "inputs", "[", "0", "]", ".", "size", "(", "1", ")", "and", "xout", "==", "output", ".", "size", "(", "1", ")", ",", "'IO=({:}, {:})'", ".", "format", "(", "xin", ",", "xout", ")", "\n", "overall_flops", "=", "batch_size", "*", "xin", "*", "xout", "\n", "if", "fc_module", ".", "bias", "is", "not", "None", ":", "\n", "    ", "overall_flops", "+=", "batch_size", "*", "xout", "\n", "", "fc_module", ".", "__flops__", "+=", "overall_flops", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.conv1d_flops_counter_hook": [[93, 108], ["inputs[].size"], "function", ["None"], ["", "def", "conv1d_flops_counter_hook", "(", "conv_module", ",", "inputs", ",", "outputs", ")", ":", "\n", "  ", "batch_size", "=", "inputs", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "outL", "=", "outputs", ".", "shape", "[", "-", "1", "]", "\n", "[", "kernel", "]", "=", "conv_module", ".", "kernel_size", "\n", "in_channels", "=", "conv_module", ".", "in_channels", "\n", "out_channels", "=", "conv_module", ".", "out_channels", "\n", "groups", "=", "conv_module", ".", "groups", "\n", "conv_per_position_flops", "=", "kernel", "*", "in_channels", "*", "out_channels", "/", "groups", "\n", "\n", "active_elements_count", "=", "batch_size", "*", "outL", "\n", "overall_flops", "=", "conv_per_position_flops", "*", "active_elements_count", "\n", "\n", "if", "conv_module", ".", "bias", "is", "not", "None", ":", "\n", "    ", "overall_flops", "+=", "out_channels", "*", "active_elements_count", "\n", "", "conv_module", ".", "__flops__", "+=", "overall_flops", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.conv2d_flops_counter_hook": [[110, 126], ["inputs[].size"], "function", ["None"], ["", "def", "conv2d_flops_counter_hook", "(", "conv_module", ",", "inputs", ",", "output", ")", ":", "\n", "  ", "batch_size", "=", "inputs", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "output_height", ",", "output_width", "=", "output", ".", "shape", "[", "2", ":", "]", "\n", "\n", "kernel_height", ",", "kernel_width", "=", "conv_module", ".", "kernel_size", "\n", "in_channels", "=", "conv_module", ".", "in_channels", "\n", "out_channels", "=", "conv_module", ".", "out_channels", "\n", "groups", "=", "conv_module", ".", "groups", "\n", "conv_per_position_flops", "=", "kernel_height", "*", "kernel_width", "*", "in_channels", "*", "out_channels", "/", "groups", "\n", "\n", "active_elements_count", "=", "batch_size", "*", "output_height", "*", "output_width", "\n", "overall_flops", "=", "conv_per_position_flops", "*", "active_elements_count", "\n", "\n", "if", "conv_module", ".", "bias", "is", "not", "None", ":", "\n", "    ", "overall_flops", "+=", "out_channels", "*", "active_elements_count", "\n", "", "conv_module", ".", "__flops__", "+=", "overall_flops", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.batch_counter_hook": [[128, 133], ["None"], "function", ["None"], ["", "def", "batch_counter_hook", "(", "module", ",", "inputs", ",", "output", ")", ":", "\n", "# Can have multiple inputs, getting the first one", "\n", "  ", "inputs", "=", "inputs", "[", "0", "]", "\n", "batch_size", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "module", ".", "__batch_counter__", "+=", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.add_batch_counter_hook_function": [[135, 139], ["hasattr", "module.register_forward_hook"], "function", ["None"], ["", "def", "add_batch_counter_hook_function", "(", "module", ")", ":", "\n", "  ", "if", "not", "hasattr", "(", "module", ",", "'__batch_counter_handle__'", ")", ":", "\n", "    ", "handle", "=", "module", ".", "register_forward_hook", "(", "batch_counter_hook", ")", "\n", "module", ".", "__batch_counter_handle__", "=", "handle", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.add_flops_counter_variable_or_reset": [[141, 147], ["isinstance", "isinstance", "isinstance", "isinstance", "isinstance", "hasattr"], "function", ["None"], ["", "", "def", "add_flops_counter_variable_or_reset", "(", "module", ")", ":", "\n", "  ", "if", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "Linear", ")", "or", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "Conv1d", ")", "or", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "AvgPool2d", ")", "or", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "MaxPool2d", ")", "or", "hasattr", "(", "module", ",", "'calculate_flop_self'", ")", ":", "\n", "    ", "module", ".", "__flops__", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.add_flops_counter_hook_function": [[149, 170], ["isinstance", "isinstance", "hasattr", "module.register_forward_hook", "isinstance", "hasattr", "module.register_forward_hook", "hasattr", "module.register_forward_hook", "isinstance", "isinstance", "hasattr", "hasattr", "module.register_forward_hook", "hasattr", "module.register_forward_hook"], "function", ["None"], ["", "", "def", "add_flops_counter_hook_function", "(", "module", ")", ":", "\n", "  ", "if", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "Conv2d", ")", ":", "\n", "    ", "if", "not", "hasattr", "(", "module", ",", "'__flops_handle__'", ")", ":", "\n", "      ", "handle", "=", "module", ".", "register_forward_hook", "(", "conv2d_flops_counter_hook", ")", "\n", "module", ".", "__flops_handle__", "=", "handle", "\n", "", "", "elif", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "Conv1d", ")", ":", "\n", "    ", "if", "not", "hasattr", "(", "module", ",", "'__flops_handle__'", ")", ":", "\n", "      ", "handle", "=", "module", ".", "register_forward_hook", "(", "conv1d_flops_counter_hook", ")", "\n", "module", ".", "__flops_handle__", "=", "handle", "\n", "", "", "elif", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "Linear", ")", ":", "\n", "    ", "if", "not", "hasattr", "(", "module", ",", "'__flops_handle__'", ")", ":", "\n", "      ", "handle", "=", "module", ".", "register_forward_hook", "(", "fc_flops_counter_hook", ")", "\n", "module", ".", "__flops_handle__", "=", "handle", "\n", "", "", "elif", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "AvgPool2d", ")", "or", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "MaxPool2d", ")", ":", "\n", "    ", "if", "not", "hasattr", "(", "module", ",", "'__flops_handle__'", ")", ":", "\n", "      ", "handle", "=", "module", ".", "register_forward_hook", "(", "pool_flops_counter_hook", ")", "\n", "module", ".", "__flops_handle__", "=", "handle", "\n", "", "", "elif", "hasattr", "(", "module", ",", "'calculate_flop_self'", ")", ":", "# self-defined module", "\n", "    ", "if", "not", "hasattr", "(", "module", ",", "'__flops_handle__'", ")", ":", "\n", "      ", "handle", "=", "module", ".", "register_forward_hook", "(", "self_calculate_flops_counter_hook", ")", "\n", "module", ".", "__flops_handle__", "=", "handle", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.flop_benchmark.remove_hook_function": [[172, 181], ["hasattr", "hasattr", "getattr", "getattr.remove", "delattr"], "function", ["None"], ["", "", "", "def", "remove_hook_function", "(", "module", ")", ":", "\n", "  ", "hookers", "=", "[", "'__batch_counter_handle__'", ",", "'__flops_handle__'", "]", "\n", "for", "hooker", "in", "hookers", ":", "\n", "    ", "if", "hasattr", "(", "module", ",", "hooker", ")", ":", "\n", "      ", "handle", "=", "getattr", "(", "module", ",", "hooker", ")", "\n", "handle", ".", "remove", "(", ")", "\n", "", "", "keys", "=", "[", "'__flops__'", ",", "'__batch_counter__'", ",", "'__flops__'", "]", "+", "hookers", "\n", "for", "ckey", "in", "keys", ":", "\n", "    ", "if", "hasattr", "(", "module", ",", "ckey", ")", ":", "delattr", "(", "module", ",", "ckey", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.__init__": [[18, 25], ["pathlib.Path", "open", "logger.Logger.log_dir.exists", "os.makedirs", "utils.time_for_file", "str", "str"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_for_file"], ["  ", "def", "__init__", "(", "self", ",", "log_dir", ",", "seed", ")", ":", "\n", "    ", "\"\"\"Create a summary writer logging to log_dir.\"\"\"", "\n", "self", ".", "log_dir", "=", "Path", "(", "\"{:}\"", ".", "format", "(", "str", "(", "log_dir", ")", ")", ")", "\n", "if", "not", "self", ".", "log_dir", ".", "exists", "(", ")", ":", "os", ".", "makedirs", "(", "str", "(", "self", ".", "log_dir", ")", ")", "\n", "\n", "self", ".", "log_file", "=", "'{:}/log-{:}-date-{:}.txt'", ".", "format", "(", "self", ".", "log_dir", ",", "seed", ",", "time_for_file", "(", ")", ")", "\n", "self", ".", "file_writer", "=", "open", "(", "self", ".", "log_file", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.checkpoint": [[26, 28], ["None"], "methods", ["None"], ["", "def", "checkpoint", "(", "self", ",", "name", ")", ":", "\n", "    ", "return", "self", ".", "log_dir", "/", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print": [[29, 35], ["pp.pprint", "logger.Logger.print"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print"], ["", "def", "print", "(", "self", ",", "string", ",", "fprint", "=", "True", ",", "is_pp", "=", "False", ")", ":", "\n", "    ", "if", "is_pp", ":", "pp", ".", "pprint", "(", "string", ")", "\n", "else", ":", "print", "(", "string", ")", "\n", "if", "fprint", ":", "\n", "      ", "self", ".", "file_writer", ".", "write", "(", "'{:}\\n'", ".", "format", "(", "string", ")", ")", "\n", "self", ".", "file_writer", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.close": [[36, 38], ["logger.Logger.file_writer.close"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "    ", "self", ".", "file_writer", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.AverageMeter.__init__": [[11, 16], ["None"], "methods", ["None"], ["  ", "ISOTIMEFORMAT", "=", "'%Y-%m-%d %X'", "\n", "string", "=", "'[{:}]'", ".", "format", "(", "time", ".", "strftime", "(", "ISOTIMEFORMAT", ",", "time", ".", "gmtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", "\n", "return", "string", "\n", "\n", "\n", "", "def", "convert_secs2time", "(", "epoch_time", ",", "string", "=", "True", ",", "xneed", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.AverageMeter.update": [[17, 22], ["None"], "methods", ["None"], ["  ", "need_hour", "=", "int", "(", "epoch_time", "/", "3600", ")", "\n", "need_mins", "=", "int", "(", "(", "epoch_time", "-", "3600", "*", "need_hour", ")", "/", "60", ")", "\n", "need_secs", "=", "int", "(", "epoch_time", "-", "3600", "*", "need_hour", "-", "60", "*", "need_mins", ")", "\n", "if", "string", ":", "\n", "    ", "if", "xneed", ":", "\n", "      ", "need_time", "=", "'[Need: {:02d}:{:02d}:{:02d}]'", ".", "format", "(", "need_hour", ",", "need_mins", ",", "need_secs", ")", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.obtain_accuracy": [[24, 39], ["torch.no_grad", "torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["      ", "need_time", "=", "'{:02d}:{:02d}:{:02d}'", ".", "format", "(", "need_hour", ",", "need_mins", ",", "need_secs", ")", "\n", "", "return", "need_time", "\n", "", "else", ":", "\n", "    ", "return", "need_hour", ",", "need_mins", ",", "need_secs", "\n", "\n", "\n", "", "", "class", "AverageMeter", "(", "object", ")", ":", "\n", "  ", "\"\"\"Computes and stores the average and current value\"\"\"", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "reset", "(", ")", "\n", "\n", "", "def", "reset", "(", "self", ")", ":", "\n", "    ", "self", ".", "val", "=", "0.0", "\n", "self", ".", "avg", "=", "0.0", "\n", "self", ".", "sum", "=", "0.0", "\n", "self", ".", "count", "=", "0.0", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.obtain_per_class_accuracy": [[41, 49], ["torch.argmax", "torch.argmax", "sorted", "list", "cls2accs.append", "sum", "len", "set", "accuracy.item", "xtargets.tolist"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "    ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n", "", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "return", "(", "'{name}(val={val}, avg={avg}, count={count})'", ".", "format", "(", "name", "=", "self", ".", "__class__", ".", "__name__", ",", "**", "self", ".", "__dict__", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.convert_secs2time": [[51, 60], ["int", "int", "int"], "function", ["None"], ["", "", "class", "ConfusionMatrix", "(", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "n_classes", ")", ":", "\n", "        ", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "mat", "=", "np", ".", "zeros", "(", "[", "n_classes", ",", "n_classes", "]", ")", "\n", "\n", "", "def", "update_mat", "(", "self", ",", "preds", ",", "labels", ",", "idxs", ")", ":", "\n", "        ", "idxs", "=", "np", ".", "array", "(", "idxs", ")", "\n", "real_pred", "=", "idxs", "[", "preds", "]", "\n", "real_labels", "=", "idxs", "[", "labels", "]", "\n", "self", ".", "mat", "[", "real_pred", ",", "real_labels", "]", "+=", "1", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string": [[61, 65], ["time.strftime", "time.gmtime", "time.time"], "function", ["None"], ["\n", "", "def", "get_mat", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "mat", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_for_file": [[66, 70], ["time.strftime", "time.gmtime", "time.time"], "function", ["None"], ["", "", "class", "Accumulator", "(", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "max_size", "=", "2000", ")", ":", "\n", "        ", "self", ".", "max_size", "=", "max_size", "\n", "self", ".", "ac", "=", "np", ".", "empty", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.spm_to_tensor": [[71, 78], ["sparse_mx.tocoo().astype.tocoo().astype", "torch.from_numpy().long", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.Size", "torch.Size", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "sparse_mx.tocoo().astype.tocoo", "torch.from_numpy", "torch.from_numpy", "numpy.vstack"], "function", ["None"], ["", "def", "append", "(", "self", ",", "v", ")", ":", "\n", "        ", "self", ".", "ac", "=", "np", ".", "append", "(", "self", ".", "ac", "[", "-", "self", ".", "max_size", ":", "]", ",", "v", ")", "\n", "\n", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "ac", "=", "np", ".", "empty", "(", "0", ")", "\n", "\n", "", "def", "mean", "(", "self", ",", "last", "=", "None", ")", ":", "\n", "        ", "last", "=", "last", "if", "last", "else", "self", ".", "max_size", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.model_utils.CosineClassifier.__init__": [[22, 29], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.FloatTensor().normal_", "torch.nn.Parameter", "torch.tensor", "numpy.sqrt", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "CosineClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "10.0", ")", ",", "requires_grad", "=", "True", ")", "\n", "weight", "=", "torch", ".", "FloatTensor", "(", "n_feat", ",", "num_classes", ")", ".", "normal_", "(", "\n", "0.0", ",", "np", ".", "sqrt", "(", "2.0", "/", "num_classes", ")", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "weight", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.model_utils.CosineClassifier.forward": [[30, 36], ["torch.nn.functional.normalize", "torch.nn.functional.normalize"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_norm", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "x", ",", "p", "=", "2", ",", "dim", "=", "-", "1", ",", "eps", "=", "1e-12", ")", "\n", "weight", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "self", ".", "weight", ",", "p", "=", "2", ",", "dim", "=", "0", ",", "eps", "=", "1e-12", ")", "\n", "cos_dist", "=", "x_norm", "@", "weight", "\n", "scores", "=", "self", ".", "scale", "*", "cos_dist", "\n", "return", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.model_utils.CosineClassifier.extra_repr": [[37, 41], ["model_utils.CosineClassifier.scale.item"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "s", "=", "'CosineClassifier: input_channels={}, num_classes={}; learned_scale: {}'", ".", "format", "(", "\n", "self", ".", "weight", ".", "shape", "[", "0", "]", ",", "self", ".", "weight", ".", "shape", "[", "1", "]", ",", "self", ".", "scale", ".", "item", "(", ")", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.model_utils.CosineConv.__init__": [[44, 50], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.FloatTensor().normal_", "torch.nn.Parameter", "torch.tensor", "numpy.sqrt", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "num_classes", ",", "kernel_size", "=", "1", ")", ":", "\n", "        ", "super", "(", "CosineConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "10.0", ")", ",", "requires_grad", "=", "True", ")", "\n", "weight", "=", "torch", ".", "FloatTensor", "(", "num_classes", ",", "n_feat", ",", "1", ",", "1", ")", ".", "normal_", "(", "\n", "0.0", ",", "np", ".", "sqrt", "(", "2.0", "/", "num_classes", ")", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "weight", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.model_utils.CosineConv.forward": [[51, 60], ["torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.conv2d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_normalized", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "\n", "x", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "eps", "=", "1e-12", ")", "\n", "weight", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "\n", "self", ".", "weight", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "eps", "=", "1e-12", ")", "\n", "\n", "cos_dist", "=", "torch", ".", "nn", ".", "functional", ".", "conv2d", "(", "x_normalized", ",", "weight", ")", "\n", "scores", "=", "self", ".", "scale", "*", "cos_dist", "\n", "return", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.model_utils.CosineConv.extra_repr": [[61, 65], ["model_utils.CosineConv.scale.item"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "s", "=", "'CosineConv: num_inputs={}, num_classes={}, kernel_size=1; scale_value: {}'", ".", "format", "(", "\n", "self", ".", "weight", ".", "shape", "[", "0", "]", ",", "self", ".", "weight", ".", "shape", "[", "1", "]", ",", "self", ".", "scale", ".", "item", "(", ")", ")", "\n", "return", "s", "\n", "", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.models.model_utils.cosine_sim": [[14, 18], ["prots.unsqueeze.unsqueeze", "embeds.unsqueeze.unsqueeze", "F.cosine_similarity"], "function", ["None"], ["def", "cosine_sim", "(", "embeds", ",", "prots", ")", ":", "\n", "    ", "prots", "=", "prots", ".", "unsqueeze", "(", "0", ")", "\n", "embeds", "=", "embeds", ".", "unsqueeze", "(", "1", ")", "\n", "return", "F", ".", "cosine_similarity", "(", "embeds", ",", "prots", ",", "dim", "=", "-", "1", ",", "eps", "=", "1e-30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.MultiHeadURT_value.__init__": [[25, 30], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__"], ["  ", "def", "__init__", "(", "self", ",", "fea_dim", ",", "hid_dim", ",", "temp", "=", "1", ",", "n_head", "=", "1", ")", ":", "\n", "    ", "super", "(", "MultiHeadURT_value", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "w1", "=", "nn", ".", "Linear", "(", "fea_dim", ",", "hid_dim", ")", "\n", "self", ".", "w2", "=", "nn", ".", "Linear", "(", "hid_dim", ",", "n_head", ")", "\n", "self", ".", "temp", "=", "temp", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.MultiHeadURT_value.forward": [[31, 37], ["new_prop_prototype.MultiHeadURT_value.w2", "torch.softmax", "torch.softmax", "new_prop_prototype.MultiHeadURT_value.w1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "cat_proto", ")", ":", "\n", "# cat_proto n_class*8*512", "\n", "    ", "n_class", ",", "n_extractors", ",", "fea_dim", "=", "cat_proto", ".", "shape", "\n", "raw_score", "=", "self", ".", "w2", "(", "self", ".", "w1", "(", "cat_proto", ")", ")", "# n_class*8*n_head ", "\n", "score", "=", "F", ".", "softmax", "(", "self", ".", "temp", "*", "raw_score", ",", "dim", "=", "1", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.URTPropagation.__init__": [[41, 53], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Parameter", "torch.nn.Parameter", "new_prop_prototype.URTPropagation.modules", "torch.eye().unsqueeze().repeat", "torch.eye().unsqueeze().repeat", "torch.eye().unsqueeze().repeat", "torch.eye().unsqueeze().repeat", "isinstance", "m.weight.data.normal_", "torch.eye().unsqueeze", "torch.eye().unsqueeze", "torch.eye().unsqueeze", "torch.eye().unsqueeze", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__"], ["  ", "def", "__init__", "(", "self", ",", "key_dim", ",", "query_dim", ",", "hid_dim", ",", "temp", "=", "1", ",", "att", "=", "\"cosine\"", ")", ":", "\n", "    ", "super", "(", "URTPropagation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear_q", "=", "nn", ".", "Linear", "(", "query_dim", ",", "hid_dim", ",", "bias", "=", "True", ")", "\n", "self", ".", "linear_k", "=", "nn", ".", "Linear", "(", "key_dim", ",", "hid_dim", ",", "bias", "=", "True", ")", "\n", "#self.linear_v_w = nn.Parameter(torch.rand(8, key_dim, key_dim))", "\n", "self", ".", "linear_v_w", "=", "nn", ".", "Parameter", "(", "torch", ".", "eye", "(", "key_dim", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "8", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "temp", "=", "temp", "\n", "self", ".", "att", "=", "att", "\n", "# how different the init is", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "      ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.URTPropagation.forward_transform": [[54, 73], ["samples.view.view.view", "w_trans.view.view.view", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["", "", "", "def", "forward_transform", "(", "self", ",", "samples", ")", ":", "\n", "    ", "bs", ",", "n_extractors", ",", "fea_dim", "=", "samples", ".", "shape", "\n", "'''\n    if self.training:\n      w_trans = torch.nn.functional.gumbel_softmax(self.linear_v_w, tau=10, hard=True)\n    else:\n      # y_soft = torch.softmax(self.linear_v_w, -1)\n      # index = y_soft.max(-1, keepdim=True)[1]\n      index = self.linear_v_w.max(-1, keepdim=True)[1]\n      y_hard = torch.zeros_like(y_soft, memory_format=torch.legacy_contiguous_format).scatter_(-1, index, 1.0)\n      w_trans = y_hard\n      # w_trans = y_hard - y_soft.detach() + y_soft\n    '''", "\n", "w_trans", "=", "self", ".", "linear_v_w", "\n", "# compute regularization", "\n", "regularization", "=", "w_trans", "@", "torch", ".", "transpose", "(", "w_trans", ",", "1", ",", "2", ")", "\n", "samples", "=", "samples", ".", "view", "(", "bs", ",", "n_extractors", ",", "fea_dim", ",", "1", ")", "\n", "w_trans", "=", "w_trans", ".", "view", "(", "1", ",", "8", ",", "fea_dim", ",", "fea_dim", ")", "\n", "return", "torch", ".", "matmul", "(", "w_trans", ",", "samples", ")", ".", "view", "(", "bs", ",", "n_extractors", ",", "fea_dim", ")", ",", "(", "regularization", "**", "2", ")", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.URTPropagation.forward": [[74, 90], ["cat_proto.view", "new_prop_prototype.URTPropagation.linear_q", "new_prop_prototype.URTPropagation.linear_k", "torch.softmax", "torch.softmax", "torch.cosine_similarity", "torch.cosine_similarity", "new_prop_prototype.URTPropagation.view", "new_prop_prototype.URTPropagation.view", "ValueError", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "math.sqrt", "new_prop_prototype.URTPropagation.view", "new_prop_prototype.URTPropagation.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "cat_proto", ")", ":", "\n", "# cat_proto n_class*8*512 ", "\n", "# return: n_class*8", "\n", "    ", "n_class", ",", "n_extractors", ",", "fea_dim", "=", "cat_proto", ".", "shape", "\n", "q", "=", "cat_proto", ".", "view", "(", "n_class", ",", "-", "1", ")", "# n_class * 8_512", "\n", "k", "=", "cat_proto", "# n_class * 8 * 512", "\n", "q_emb", "=", "self", ".", "linear_q", "(", "q", ")", "# n_class * hid_dim", "\n", "k_emb", "=", "self", ".", "linear_k", "(", "k", ")", "# n_class * 8 * hid_dim  | 8 * hid_dim", "\n", "if", "self", ".", "att", "==", "\"cosine\"", ":", "\n", "      ", "raw_score", "=", "F", ".", "cosine_similarity", "(", "q_emb", ".", "view", "(", "n_class", ",", "1", ",", "-", "1", ")", ",", "k_emb", ".", "view", "(", "n_class", ",", "n_extractors", ",", "-", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "", "elif", "self", ".", "att", "==", "\"dotproduct\"", ":", "\n", "      ", "raw_score", "=", "torch", ".", "sum", "(", "q_emb", ".", "view", "(", "n_class", ",", "1", ",", "-", "1", ")", "*", "k_emb", ".", "view", "(", "n_class", ",", "n_extractors", ",", "-", "1", ")", ",", "dim", "=", "-", "1", ")", "/", "(", "math", ".", "sqrt", "(", "fea_dim", ")", ")", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "'invalid att type : {:}'", ".", "format", "(", "self", ".", "att", ")", ")", "\n", "", "score", "=", "F", ".", "softmax", "(", "self", ".", "temp", "*", "raw_score", ",", "dim", "=", "1", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.MultiHeadURT.__init__": [[93, 100], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "new_prop_prototype.URTPropagation", "layers.append"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["  ", "def", "__init__", "(", "self", ",", "key_dim", ",", "query_dim", ",", "hid_dim", ",", "temp", "=", "1", ",", "att", "=", "\"cosine\"", ",", "n_head", "=", "1", ")", ":", "\n", "    ", "super", "(", "MultiHeadURT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_head", ")", ":", "\n", "      ", "layer", "=", "URTPropagation", "(", "key_dim", ",", "query_dim", ",", "hid_dim", ",", "temp", ",", "att", ")", "\n", "layers", ".", "append", "(", "layer", ")", "\n", "", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.MultiHeadURT.forward": [[101, 108], ["enumerate", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "layer", "score_lst.append"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "forward", "(", "self", ",", "cat_proto", ")", ":", "\n", "    ", "score_lst", "=", "[", "]", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "      ", "score", "=", "layer", "(", "cat_proto", ")", "\n", "score_lst", ".", "append", "(", "score", ")", "\n", "# n_class * n_extractor * n_head", "\n", "", "return", "torch", ".", "stack", "(", "score_lst", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.PropagationLayer.__init__": [[175, 186], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "new_prop_prototype.PropagationLayer.modules", "torch.nn.Linear", "torch.nn.Linear", "isinstance", "m.weight.data.normal_"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__"], ["  ", "def", "__init__", "(", "self", ",", "input_dim", "=", "512", ",", "hid_dim", "=", "128", ",", "temp", "=", "1", ",", "transform", "=", "False", ")", ":", "\n", "    ", "super", "(", "PropagationLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear_q", "=", "nn", ".", "Linear", "(", "input_dim", ",", "hid_dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "linear_k", "=", "nn", ".", "Linear", "(", "input_dim", ",", "hid_dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "temp", "=", "temp", "\n", "if", "transform", ":", "\n", "      ", "self", ".", "transform", "=", "nn", ".", "Linear", "(", "input_dim", ",", "input_dim", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "      ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.PropagationLayer.forward": [[187, 201], ["new_prop_prototype.PropagationLayer.linear_q", "new_prop_prototype.PropagationLayer.linear_k", "torch.cosine_similarity", "torch.cosine_similarity", "torch.softmax", "torch.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "new_prop_prototype.PropagationLayer.transform", "new_prop_prototype.PropagationLayer.transform", "new_prop_prototype.PropagationLayer.unsqueeze", "new_prop_prototype.PropagationLayer.unsqueeze", "random.random", "print", "print", "print", "len", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.var", "torch.var", "torch.var", "torch.var", "torch.min", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.transform", "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.transform", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean"], ["", "", "", "def", "forward", "(", "self", ",", "proto", ",", "s_cache", ",", "data2nclss", ",", "use_topk", ")", ":", "\n", "    ", "if", "'transform'", "in", "self", ".", "__dict__", ":", "\n", "      ", "proto", "=", "self", ".", "transform", "(", "proto", ")", "\n", "s_cache", "=", "self", ".", "transform", "(", "s_cache", ")", "\n", "", "proto_emb", "=", "self", ".", "linear_q", "(", "proto", ")", "\n", "s_cache_emb", "=", "self", ".", "linear_k", "(", "s_cache", ")", "\n", "raw_score", "=", "F", ".", "cosine_similarity", "(", "proto_emb", ".", "unsqueeze", "(", "1", ")", ",", "s_cache_emb", ".", "unsqueeze", "(", "0", ")", ",", "dim", "=", "-", "1", ")", "\n", "score", "=", "F", ".", "softmax", "(", "self", ".", "temp", "*", "raw_score", ",", "dim", "=", "1", ")", "\n", "prop_proto", "=", "torch", ".", "matmul", "(", "score", ",", "s_cache", ")", "# n_class * n_cache  @ n_cache * n_dim", "\n", "if", "random", ".", "random", "(", ")", ">", "0.99", ":", "\n", "      ", "print", "(", "\"top_1_idx: {} in {} cache\"", ".", "format", "(", "torch", ".", "topk", "(", "raw_score", ",", "1", ")", "[", "1", "]", ",", "len", "(", "s_cache", ")", ")", ")", "\n", "print", "(", "\"score: {}\"", ".", "format", "(", "score", ")", ")", "\n", "print", "(", "\"mean:{}, var:{}, min:{}, max:{}\"", ".", "format", "(", "torch", ".", "mean", "(", "score", ",", "dim", "=", "1", ")", ".", "data", ",", "torch", ".", "var", "(", "score", ",", "dim", "=", "1", ")", ".", "data", ",", "torch", ".", "min", "(", "score", ",", "dim", "=", "1", ")", "[", "0", "]", ".", "data", ",", "torch", ".", "max", "(", "score", ",", "dim", "=", "1", ")", "[", "0", "]", ".", "data", ")", ")", "\n", "", "return", "raw_score", ",", "prop_proto", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.MultiHeadPropagationLayer.__init__": [[205, 212], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "new_prop_prototype.PropagationLayer", "layers.append"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["  ", "def", "__init__", "(", "self", ",", "input_dim", ",", "hid_dim", ",", "temp", ",", "transform", ",", "n_head", ")", ":", "\n", "    ", "super", "(", "MultiHeadPropagationLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_head", ")", ":", "\n", "      ", "layer", "=", "PropagationLayer", "(", "input_dim", ",", "hid_dim", ",", "temp", ",", "transform", ")", "\n", "layers", ".", "append", "(", "layer", ")", "\n", "", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.MultiHeadPropagationLayer.forward": [[213, 221], ["enumerate", "layer", "raw_score_lst.append", "prop_proto_lst.append", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "pdb.set_trace", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean"], ["", "def", "forward", "(", "self", ",", "proto", ",", "s_cache", ",", "data2nclss", ",", "use_topk", ")", ":", "\n", "    ", "raw_score_lst", ",", "prop_proto_lst", "=", "[", "]", ",", "[", "]", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "      ", "raw_score", ",", "prop_proto", "=", "layer", "(", "proto", ",", "s_cache", ",", "data2nclss", ",", "use_topk", ")", "\n", "if", "torch", ".", "isnan", "(", "raw_score", ")", ".", "any", "(", ")", "or", "torch", ".", "isnan", "(", "prop_proto", ")", ".", "any", "(", ")", ":", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "raw_score_lst", ".", "append", "(", "raw_score", ")", "\n", "prop_proto_lst", ".", "append", "(", "prop_proto", ")", "\n", "", "return", "torch", ".", "stack", "(", "raw_score_lst", ",", "dim", "=", "0", ")", ".", "mean", "(", "0", ")", ",", "torch", ".", "stack", "(", "prop_proto_lst", ",", "dim", "=", "0", ")", ".", "mean", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.get_dotproduct_score": [[9, 14], ["torch.cosine_similarity", "proto_emb.unsqueeze", "s_cache_emb.unsqueeze"], "function", ["None"], ["def", "get_dotproduct_score", "(", "proto", ",", "cache", ",", "model", ")", ":", "\n", "  ", "proto_emb", "=", "model", "[", "'linear_q'", "]", "(", "proto", ")", "\n", "s_cache_emb", "=", "model", "[", "'linear_k'", "]", "(", "cache", ")", "\n", "raw_score", "=", "F", ".", "cosine_similarity", "(", "proto_emb", ".", "unsqueeze", "(", "1", ")", ",", "s_cache_emb", ".", "unsqueeze", "(", "0", ")", ",", "dim", "=", "-", "1", ")", "\n", "return", "raw_score", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.get_mlp_score": [[16, 21], ["raw_score.squeeze"], "function", ["None"], ["", "def", "get_mlp_score", "(", "proto", ",", "cache", ",", "model", ")", ":", "\n", "  ", "n_proto", ",", "fea_dim", "=", "proto", ".", "shape", "\n", "n_cache", ",", "fea_dim", "=", "cache", ".", "shape", "\n", "raw_score", "=", "model", "[", "'w'", "]", "(", "model", "[", "'nonlinear'", "]", "(", "model", "[", "'w1'", "]", "(", "proto", ")", ".", "view", "(", "n_proto", ",", "1", ",", "fea_dim", ")", "+", "model", "[", "'w2'", "]", "(", "cache", ")", ".", "view", "(", "1", ",", "n_cache", ",", "fea_dim", ")", ")", ")", "\n", "return", "raw_score", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.get_lambda_urt_sample": [[109, 122], ["model", "model", "range", "torch.stack", "torch.stack", "torch.normalize", "torch.normalize", "urt_context[].mean", "proto_list.append"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "", "def", "get_lambda_urt_sample", "(", "context_features", ",", "context_labels", ",", "target_features", ",", "num_labels", ",", "model", ",", "normalize", "=", "True", ")", ":", "\n", "  ", "if", "normalize", ":", "\n", "    ", "context_features", "=", "F", ".", "normalize", "(", "context_features", ",", "dim", "=", "-", "1", ")", "\n", "target_features", "=", "F", ".", "normalize", "(", "target_features", ",", "dim", "=", "-", "1", ")", "\n", "", "score_context", ",", "urt_context", "=", "model", "(", "context_features", ")", "\n", "score_target", ",", "urt_target", "=", "model", "(", "target_features", ")", "\n", "proto_list", "=", "[", "]", "\n", "for", "label", "in", "range", "(", "num_labels", ")", ":", "\n", "    ", "proto", "=", "urt_context", "[", "context_labels", "==", "label", "]", ".", "mean", "(", "dim", "=", "0", ")", "\n", "proto_list", ".", "append", "(", "proto", ")", "\n", "", "urt_proto", "=", "torch", ".", "stack", "(", "proto_list", ")", "\n", "# n_samples*8*512", "\n", "return", "score_context", ",", "urt_proto", ",", "score_target", ",", "urt_target", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.get_lambda_urt_avg": [[123, 135], ["range", "torch.stack", "torch.stack", "model", "torch.mean", "torch.mean", "torch.normalize", "context_features[].mean", "proto_list.append"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "get_lambda_urt_avg", "(", "context_features", ",", "context_labels", ",", "num_labels", ",", "model", ",", "normalize", "=", "True", ")", ":", "\n", "  ", "if", "normalize", ":", "\n", "    ", "context_features", "=", "F", ".", "normalize", "(", "context_features", ",", "dim", "=", "-", "1", ")", "\n", "", "proto_list", "=", "[", "]", "\n", "for", "label", "in", "range", "(", "num_labels", ")", ":", "\n", "    ", "proto", "=", "context_features", "[", "context_labels", "==", "label", "]", ".", "mean", "(", "dim", "=", "0", ")", "\n", "proto_list", ".", "append", "(", "proto", ")", "\n", "", "proto", "=", "torch", ".", "stack", "(", "proto_list", ")", "\n", "# n_class*8*512", "\n", "score_proto", "=", "model", "(", "proto", ")", "\n", "# n_extractors * n_head", "\n", "return", "torch", ".", "mean", "(", "score_proto", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.apply_urt_avg_selection": [[136, 159], ["torch.transpose", "torch.transpose", "enumerate", "torch.normalize", "urt_fea_lst.append", "len", "torch.stack().view", "torch.stack().view", "transform.module.layers[].forward_transform", "regularization_losses.append", "torch.sum", "torch.sum", "torch.stack().view", "torch.stack().view", "sum", "torch.stack", "torch.stack", "params.view", "params.view", "torch.stack", "torch.stack"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.URTPropagation.forward_transform", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "apply_urt_avg_selection", "(", "context_features", ",", "selection_params", ",", "normalize", ",", "value", "=", "\"sum\"", ",", "transform", "=", "None", ")", ":", "\n", "  ", "selection_params", "=", "torch", ".", "transpose", "(", "selection_params", ",", "0", ",", "1", ")", "# n_head * 8", "\n", "n_samples", ",", "n_extractors", ",", "fea_dim", "=", "context_features", ".", "shape", "\n", "urt_fea_lst", "=", "[", "]", "\n", "if", "normalize", ":", "\n", "    ", "context_features", "=", "F", ".", "normalize", "(", "context_features", ",", "dim", "=", "-", "1", ")", "\n", "", "regularization_losses", "=", "[", "]", "\n", "for", "i", ",", "params", "in", "enumerate", "(", "selection_params", ")", ":", "\n", "# class-wise lambda ", "\n", "    ", "if", "transform", ":", "\n", "      ", "trans_features", ",", "reg_loss", "=", "transform", ".", "module", ".", "layers", "[", "i", "]", ".", "forward_transform", "(", "context_features", ")", "\n", "regularization_losses", ".", "append", "(", "reg_loss", ")", "\n", "", "else", ":", "\n", "      ", "trans_features", "=", "context_features", "\n", "", "if", "value", "==", "\"sum\"", ":", "\n", "      ", "urt_features", "=", "torch", ".", "sum", "(", "params", ".", "view", "(", "1", ",", "n_extractors", ",", "1", ")", "*", "trans_features", ",", "dim", "=", "1", ")", "# n_sample * 512 ", "\n", "", "elif", "value", "==", "\"cat\"", ":", "\n", "      ", "urt_features", "=", "params", ".", "view", "(", "1", ",", "n_extractors", ",", "1", ")", "*", "trans_features", "# n_sample * 8 * 512", "\n", "", "urt_fea_lst", ".", "append", "(", "urt_features", ")", "\n", "", "if", "len", "(", "regularization_losses", ")", "==", "0", ":", "\n", "    ", "return", "torch", ".", "stack", "(", "urt_fea_lst", ",", "dim", "=", "1", ")", ".", "view", "(", "n_samples", ",", "-", "1", ")", "# n_sample * (n_head * 512) or n_sample * (8 * 512)", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "stack", "(", "urt_fea_lst", ",", "dim", "=", "1", ")", ".", "view", "(", "n_samples", ",", "-", "1", ")", ",", "sum", "(", "regularization_losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.apply_urt_selection": [[161, 172], ["torch.stack", "torch.stack", "torch.sum", "torch.sum", "torch.normalize", "lambda_lst.append", "torch.stack.view"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "", "def", "apply_urt_selection", "(", "context_features", ",", "context_labels", ",", "selection_params", ",", "normalize", ")", ":", "\n", "# class-wise lambda ", "\n", "  ", "if", "normalize", ":", "\n", "    ", "context_features", "=", "F", ".", "normalize", "(", "context_features", ",", "dim", "=", "-", "1", ")", "\n", "", "lambda_lst", "=", "[", "]", "\n", "for", "lab", "in", "context_labels", ":", "\n", "    ", "lambda_lst", ".", "append", "(", "selection_params", "[", "lab", "]", ")", "\n", "", "lambda_tensor", "=", "torch", ".", "stack", "(", "lambda_lst", ",", "dim", "=", "0", ")", "\n", "n_sample", ",", "n_extractors", "=", "lambda_tensor", ".", "shape", "\n", "urt_features", "=", "torch", ".", "sum", "(", "lambda_tensor", ".", "view", "(", "n_sample", ",", "n_extractors", ",", "1", ")", "*", "context_features", ",", "dim", "=", "1", ")", "\n", "return", "urt_features", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_prop_prototype.get_prototypes": [[222, 233], ["range", "torch.stack", "torch.stack", "torch.cuda.device_count", "torch.cuda.device_count", "cache.view().expand", "model", "features[].mean", "proto_list.append", "cache.view"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "", "def", "get_prototypes", "(", "features", ",", "labels", ",", "num_labels", ",", "model", ",", "cache", ")", ":", "\n", "  ", "proto_list", "=", "[", "]", "\n", "for", "label", "in", "range", "(", "num_labels", ")", ":", "\n", "    ", "proto", "=", "features", "[", "labels", "==", "label", "]", ".", "mean", "(", "dim", "=", "0", ")", "\n", "proto_list", ".", "append", "(", "proto", ")", "\n", "", "proto", "=", "torch", ".", "stack", "(", "proto_list", ")", "\n", "num_devices", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_slots", ",", "feature_dim", "=", "cache", ".", "shape", "\n", "cache_for_parallel", "=", "cache", ".", "view", "(", "1", ",", "num_slots", ",", "feature_dim", ")", ".", "expand", "(", "num_devices", ",", "num_slots", ",", "feature_dim", ")", "\n", "raw_score", ",", "prop_proto", "=", "model", "(", "proto", ",", "cache_for_parallel", ")", "\n", "return", "raw_score", ",", "proto", ",", "prop_proto", "\n", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.BasicBlock.__init__": [[21, 30], ["torch.Module.__init__", "resnet18.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "resnet18.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.conv3x3", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "    ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.BasicBlock.forward": [[31, 48], ["resnet18.BasicBlock.conv1", "resnet18.BasicBlock.bn1", "resnet18.BasicBlock.relu", "resnet18.BasicBlock.conv2", "resnet18.BasicBlock.bn2", "resnet18.BasicBlock.relu", "resnet18.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "      ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.ResNet.__init__": [[52, 85], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet18.ResNet._make_layer", "resnet18.ResNet._make_layer", "resnet18.ResNet._make_layer", "resnet18.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Dropout", "torch.Dropout", "resnet18.ResNet.modules", "isinstance", "torch.Linear", "torch.Linear", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "models.model_utils.CosineClassifier", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet._make_layer", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet._make_layer", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet._make_layer", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet._make_layer"], ["  ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "classifier", "=", "None", ",", "num_classes", "=", "64", ",", "\n", "dropout", "=", "0.0", ",", "global_pool", "=", "True", ")", ":", "\n", "    ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "initial_pool", "=", "False", "\n", "inplanes", "=", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "inplanes", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "inplanes", "*", "2", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "inplanes", "*", "4", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "inplanes", "*", "8", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "outplanes", "=", "512", "\n", "\n", "# handle classifier creation", "\n", "if", "num_classes", "is", "not", "None", ":", "\n", "      ", "if", "classifier", "==", "'linear'", ":", "\n", "        ", "self", ".", "cls_fn", "=", "nn", ".", "Linear", "(", "self", ".", "outplanes", ",", "num_classes", ")", "\n", "", "elif", "classifier", "==", "'cosine'", ":", "\n", "        ", "self", ".", "cls_fn", "=", "CosineClassifier", "(", "self", ".", "outplanes", ",", "num_classes", ")", "\n", "", "", "else", ":", "\n", "      ", "self", ".", "cls_fn", "=", "None", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "      ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.ResNet._make_layer": [[86, 101], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet18.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.conv1x1"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "    ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "      ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "      ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.ResNet.forward": [[102, 108], ["resnet18.ResNet.embed", "resnet18.ResNet.dropout", "resnet18.ResNet.cls_fn"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet.embed"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "embed", "(", "x", ")", "\n", "if", "self", ".", "cls_fn", ":", "\n", "      ", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "cls_fn", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.ResNet.embed": [[109, 123], ["resnet18.ResNet.conv1", "resnet18.ResNet.bn1", "resnet18.ResNet.relu", "resnet18.ResNet.layer1", "resnet18.ResNet.layer2", "resnet18.ResNet.layer3", "resnet18.ResNet.layer4", "resnet18.ResNet.avgpool", "resnet18.ResNet.squeeze", "resnet18.ResNet.maxpool"], "methods", ["None"], ["", "def", "embed", "(", "self", ",", "x", ",", "param_dict", "=", "None", ")", ":", "\n", "    ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "if", "self", ".", "initial_pool", ":", "\n", "      ", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "return", "x", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.ResNet.get_state_dict": [[124, 127], ["resnet18.ResNet.state_dict"], "methods", ["None"], ["", "def", "get_state_dict", "(", "self", ")", ":", "\n", "    ", "\"\"\"Outputs all the state elements\"\"\"", "\n", "return", "self", ".", "state_dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.ResNet.get_parameters": [[128, 131], ["resnet18.ResNet.named_parameters"], "methods", ["None"], ["", "def", "get_parameters", "(", "self", ")", ":", "\n", "    ", "\"\"\"Outputs all the parameters\"\"\"", "\n", "return", "[", "v", "for", "k", ",", "v", "in", "self", ".", "named_parameters", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.conv3x3": [[7, 11], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "  ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.conv1x1": [[13, 16], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "  ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18.resnet18": [[133, 144], ["resnet18.ResNet", "torch.load", "torch.load", "ResNet.load_parameters", "print", "resnet18.ResNet.get_state_dict"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet.get_state_dict"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "pretrained_model_path", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "  ", "\"\"\"\n    Constructs a ResNet-18 model.\n  \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "    ", "device", "=", "model", ".", "get_state_dict", "(", ")", "[", "0", "]", ".", "device", "\n", "ckpt_dict", "=", "torch", ".", "load", "(", "pretrained_model_path", ",", "map_location", "=", "device", ")", "\n", "model", ".", "load_parameters", "(", "ckpt_dict", "[", "'state_dict'", "]", ",", "strict", "=", "False", ")", "\n", "print", "(", "'Loaded shared weights from {}'", ".", "format", "(", "pretrained_model_path", ")", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.CheckPointer.__init__": [[13, 25], ["os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "model_name", ",", "model", "=", "None", ",", "optimizer", "=", "None", ")", ":", "\n", "    ", "self", ".", "model", "=", "model", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "model_name", "=", "model_name", "\n", "TORCH_HOME", "=", "'TORCH_HOME'", "\n", "if", "TORCH_HOME", "in", "os", ".", "environ", ":", "\n", "      ", "TORCH_HOME", "=", "os", ".", "environ", "[", "TORCH_HOME", "]", "\n", "", "else", ":", "\n", "      ", "TORCH_HOME", "=", "os", ".", "path", ".", "join", "(", "os", ".", "environ", "[", "'HOME'", "]", ",", "'.torch'", ")", "\n", "", "self", ".", "model_path", "=", "os", ".", "path", ".", "join", "(", "TORCH_HOME", ",", "'sur-weights'", ",", "model_name", ")", "\n", "self", ".", "last_ckpt", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_path", ",", "'checkpoint.pth.tar'", ")", "\n", "self", ".", "best_ckpt", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_path", ",", "'model_best.pth.tar'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.CheckPointer.restore_model": [[26, 44], ["os.path.join", "os.path.join", "os.path.isfile", "os.path.exists", "print", "torch.load", "torch.load.get", "torch.load.get", "torch.load.get", "new_model_helpers.CheckPointer.model.load_state_dict", "new_model_helpers.CheckPointer.optimizer.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get"], ["", "def", "restore_model", "(", "self", ",", "ckpt", "=", "'last'", ",", "model", "=", "True", ",", "optimizer", "=", "True", ",", "strict", "=", "True", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "model_path", ")", ":", "\n", "      ", "assert", "False", ",", "\"Model is not found at {}\"", ".", "format", "(", "self", ".", "model_path", ")", "\n", "", "self", ".", "last_ckpt", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_path", ",", "'checkpoint.pth.tar'", ")", "\n", "self", ".", "best_ckpt", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_path", ",", "'model_best.pth.tar'", ")", "\n", "ckpt_path", "=", "self", ".", "last_ckpt", "if", "ckpt", "==", "'last'", "else", "self", ".", "best_ckpt", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "ckpt_path", ")", ":", "\n", "      ", "print", "(", "\"=> loading {} checkpoint '{}'\"", ".", "format", "(", "ckpt", ",", "ckpt_path", ")", ")", "\n", "ch", "=", "torch", ".", "load", "(", "ckpt_path", ",", "map_location", "=", "'cpu'", ")", "\n", "if", "self", ".", "model", "is", "not", "None", "and", "model", ":", "\n", "        ", "self", ".", "model", ".", "load_state_dict", "(", "ch", "[", "'state_dict'", "]", ",", "strict", "=", "strict", ")", "\n", "", "if", "self", ".", "optimizer", "is", "not", "None", "and", "optimizer", ":", "\n", "        ", "self", ".", "optimizer", ".", "load_state_dict", "(", "ch", "[", "'optimizer'", "]", ")", "\n", "", "", "else", ":", "\n", "      ", "assert", "False", ",", "\"No checkpoint! %s\"", "%", "ckpt_path", "\n", "\n", "", "return", "ch", ".", "get", "(", "'epoch'", ",", "None", ")", ",", "ch", ".", "get", "(", "'best_val_loss'", ",", "None", ")", ",", "ch", ".", "get", "(", "'best_val_acc'", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.get_extractors": [[46, 68], ["collections.OrderedDict", "extractor.cuda.train", "print", "new_model_helpers.CheckPointer", "new_model_helpers.CheckPointer.restore_model", "torch.nn.DataParallel", "copy.deepcopy", "extractor.cuda.load_state_dict", "extractor.cuda.cuda", "extractors[].module.state_dict"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.train", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.CheckPointer.restore_model"], ["", "", "def", "get_extractors", "(", "trainsets", ":", "List", "[", "Text", "]", ",", "\n", "dataset_models", ":", "Dict", "[", "Text", ",", "Text", "]", ",", "\n", "backbone", ":", "Text", ",", "classifier", ":", "Text", ",", "bn_train_mode", ":", "bool", ",", "use_cuda", ":", "bool", "=", "True", ")", ":", "\n", "  ", "extractors", "=", "collections", ".", "OrderedDict", "(", ")", "\n", "for", "dataset_name", "in", "trainsets", ":", "\n", "    ", "if", "dataset_name", "not", "in", "dataset_models", ":", "\n", "      ", "continue", "\n", "", "if", "dataset_name", "==", "'ilsvrc_2012'", ":", "\n", "      ", "extractor", "=", "MODEL_DICT", "[", "'resnet18'", "]", "(", "classifier", "=", "classifier", ",", "num_classes", "=", "None", ",", "global_pool", "=", "False", ",", "dropout", "=", "0.0", ")", "\n", "", "else", ":", "\n", "      ", "extractor", "=", "MODEL_DICT", "[", "backbone", "]", "(", "classifier", "=", "classifier", ",", "num_classes", "=", "None", ",", "global_pool", "=", "False", ",", "dropout", "=", "0.0", ")", "\n", "", "extractor", ".", "train", "(", "bn_train_mode", ")", "\n", "print", "(", "'Create {:}\\'s network with BN={:}'", ".", "format", "(", "dataset_models", "[", "dataset_name", "]", ",", "bn_train_mode", ")", ")", "\n", "if", "backbone", "==", "'resnet18_pnf'", "and", "dataset_name", "!=", "'ilsvrc_2012'", ":", "\n", "      ", "weights", "=", "copy", ".", "deepcopy", "(", "extractors", "[", "'ilsvrc_2012'", "]", ".", "module", ".", "state_dict", "(", ")", ")", "\n", "extractor", ".", "load_state_dict", "(", "weights", ",", "strict", "=", "False", ")", "\n", "", "checkpointer", "=", "CheckPointer", "(", "dataset_models", "[", "dataset_name", "]", ",", "extractor", ",", "optimizer", "=", "None", ")", "\n", "checkpointer", ".", "restore_model", "(", "ckpt", "=", "'best'", ",", "strict", "=", "False", ")", "\n", "if", "use_cuda", ":", "\n", "      ", "extractor", "=", "extractor", ".", "cuda", "(", ")", "\n", "", "extractors", "[", "dataset_name", "]", "=", "torch", ".", "nn", ".", "DataParallel", "(", "extractor", ")", "\n", "", "return", "extractors", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.extract_features": [[70, 76], ["extractors.items", "torch.stack", "extractor", "all_features.append"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "extract_features", "(", "extractors", ",", "images", ")", ":", "\n", "  ", "all_features", "=", "[", "]", "\n", "for", "name", ",", "extractor", "in", "extractors", ".", "items", "(", ")", ":", "\n", "    ", "features", "=", "extractor", "(", "images", ")", "\n", "all_features", ".", "append", "(", "features", ")", "\n", "", "return", "torch", ".", "stack", "(", "all_features", ",", "dim", "=", "1", ")", "# batch x #extractors x #features", "\n", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.models.losses.AdaptiveCosineNCC.__init__": [[45, 48], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "AdaptiveCosineNCC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "10.0", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.losses.AdaptiveCosineNCC.forward": [[49, 61], ["len", "compute_prototypes().unsqueeze", "query_embeddings.unsqueeze", "losses.cross_entropy_loss", "query_labels.unique", "torch.cosine_similarity", "torch.cosine_similarity", "losses.compute_prototypes"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.models.losses.cross_entropy_loss", "home.repos.pwc.inspect_result.liulu112601_URT.models.losses.compute_prototypes"], ["", "def", "forward", "(", "self", ",", "support_embeddings", ",", "support_labels", ",", "\n", "query_embeddings", ",", "query_labels", ",", "return_logits", "=", "False", ")", ":", "\n", "        ", "n_way", "=", "len", "(", "query_labels", ".", "unique", "(", ")", ")", "\n", "\n", "prots", "=", "compute_prototypes", "(", "support_embeddings", ",", "support_labels", ",", "n_way", ")", ".", "unsqueeze", "(", "0", ")", "\n", "embeds", "=", "query_embeddings", ".", "unsqueeze", "(", "1", ")", "\n", "logits", "=", "F", ".", "cosine_similarity", "(", "embeds", ",", "prots", ",", "dim", "=", "-", "1", ",", "eps", "=", "1e-30", ")", "*", "self", ".", "scale", "\n", "\n", "if", "return_logits", ":", "\n", "            ", "return", "logits", "\n", "\n", "", "return", "cross_entropy_loss", "(", "logits", ",", "query_labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.losses.cross_entropy_loss": [[9, 18], ["torch.log_softmax", "F.log_softmax.argmax", "targets.type", "torch.nll_loss", "torch.eq().float().mean", "torch.eq().float().mean", "F.nll_loss.item", "torch.eq().float().mean.item", "log_p_y.argmax.cpu().numpy", "targets.type.cpu().numpy", "torch.eq().float", "torch.eq().float", "log_p_y.argmax.cpu", "targets.type.cpu", "torch.eq", "torch.eq"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean"], ["def", "cross_entropy_loss", "(", "logits", ",", "targets", ")", ":", "\n", "    ", "log_p_y", "=", "F", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "preds", "=", "log_p_y", ".", "argmax", "(", "1", ")", "\n", "labels", "=", "targets", ".", "type", "(", "torch", ".", "long", ")", "\n", "loss", "=", "F", ".", "nll_loss", "(", "log_p_y", ",", "labels", ",", "reduction", "=", "'mean'", ")", "\n", "acc", "=", "torch", ".", "eq", "(", "preds", ",", "labels", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "stats_dict", "=", "{", "'loss'", ":", "loss", ".", "item", "(", ")", ",", "'acc'", ":", "acc", ".", "item", "(", ")", "}", "\n", "pred_dict", "=", "{", "'preds'", ":", "preds", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "'labels'", ":", "labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "}", "\n", "return", "loss", ",", "stats_dict", ",", "pred_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.losses.prototype_loss": [[20, 34], ["len", "compute_prototypes().unsqueeze", "query_embeddings.unsqueeze", "losses.cross_entropy_loss", "query_labels.unique", "losses.compute_prototypes", "torch.pow().sum", "torch.pow().sum", "torch.cosine_similarity", "torch.einsum", "torch.einsum", "torch.pow", "torch.pow"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.models.losses.cross_entropy_loss", "home.repos.pwc.inspect_result.liulu112601_URT.models.losses.compute_prototypes"], ["", "def", "prototype_loss", "(", "support_embeddings", ",", "support_labels", ",", "\n", "query_embeddings", ",", "query_labels", ",", "distance", "=", "'cos'", ")", ":", "\n", "    ", "n_way", "=", "len", "(", "query_labels", ".", "unique", "(", ")", ")", "\n", "\n", "prots", "=", "compute_prototypes", "(", "support_embeddings", ",", "support_labels", ",", "n_way", ")", ".", "unsqueeze", "(", "0", ")", "\n", "embeds", "=", "query_embeddings", ".", "unsqueeze", "(", "1", ")", "\n", "if", "distance", "==", "'l2'", ":", "\n", "        ", "logits", "=", "-", "torch", ".", "pow", "(", "embeds", "-", "prots", ",", "2", ")", ".", "sum", "(", "-", "1", ")", "# shape [n_query, n_way]", "\n", "", "elif", "distance", "==", "'cos'", ":", "\n", "        ", "logits", "=", "F", ".", "cosine_similarity", "(", "embeds", ",", "prots", ",", "dim", "=", "-", "1", ",", "eps", "=", "1e-30", ")", "*", "10", "\n", "", "elif", "distance", "==", "'lin'", ":", "\n", "        ", "logits", "=", "torch", ".", "einsum", "(", "'izd,zjd->ij'", ",", "embeds", ",", "prots", ")", "\n", "\n", "", "return", "cross_entropy_loss", "(", "logits", ",", "query_labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.losses.compute_prototypes": [[36, 42], ["torch.zeros().type().to", "torch.zeros().type().to", "range", "embeddings[].mean", "torch.zeros().type", "torch.zeros().type", "torch.zeros", "torch.zeros"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.mean"], ["", "def", "compute_prototypes", "(", "embeddings", ",", "labels", ",", "n_way", ")", ":", "\n", "    ", "prots", "=", "torch", ".", "zeros", "(", "n_way", ",", "embeddings", ".", "shape", "[", "-", "1", "]", ")", ".", "type", "(", "\n", "embeddings", ".", "dtype", ")", ".", "to", "(", "embeddings", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "n_way", ")", ":", "\n", "        ", "prots", "[", "i", "]", "=", "embeddings", "[", "(", "labels", "==", "i", ")", ".", "nonzero", "(", ")", ",", ":", "]", ".", "mean", "(", "0", ")", "\n", "", "return", "prots", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.CatFilm.__init__": [[20, 24], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__"], ["def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "    ", "super", "(", "CatFilm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "planes", ")", ")", "\n", "self", ".", "beta", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "planes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.CatFilm.forward": [[25, 29], ["resnet18_film.CatFilm.gamma.view", "resnet18_film.CatFilm.beta.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "gamma", "=", "self", ".", "gamma", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "beta", "=", "self", ".", "beta", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "return", "gamma", "*", "x", "+", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.BasicBlockFilm.__init__": [[34, 45], ["torch.Module.__init__", "resnet18_film.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "resnet18_film.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet18_film.CatFilm", "resnet18_film.CatFilm"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.conv3x3", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "    ", "super", "(", "BasicBlockFilm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "film1", "=", "CatFilm", "(", "planes", ")", "\n", "self", ".", "film2", "=", "CatFilm", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.BasicBlockFilm.forward": [[46, 65], ["resnet18_film.BasicBlockFilm.conv1", "resnet18_film.BasicBlockFilm.bn1", "resnet18_film.BasicBlockFilm.film1", "resnet18_film.BasicBlockFilm.relu", "resnet18_film.BasicBlockFilm.conv2", "resnet18_film.BasicBlockFilm.bn2", "resnet18_film.BasicBlockFilm.film2", "resnet18_film.BasicBlockFilm.relu", "resnet18_film.BasicBlockFilm.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "film1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "film2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "      ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet.__init__": [[69, 103], ["torch.Module.__init__", "resnet18_film.CatFilm", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet18_film.ResNet._make_layer", "resnet18_film.ResNet._make_layer", "resnet18_film.ResNet._make_layer", "resnet18_film.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Dropout", "torch.Dropout", "resnet18_film.ResNet.modules", "isinstance", "torch.Linear", "torch.Linear", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "models.model_utils.CosineClassifier", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet._make_layer", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet._make_layer", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet._make_layer", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet._make_layer"], ["  ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "classifier", "=", "None", ",", "num_classes", "=", "None", ",", "\n", "dropout", "=", "0.0", ",", "global_pool", "=", "True", ")", ":", "\n", "    ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "initial_pool", "=", "False", "\n", "self", ".", "film_normalize", "=", "CatFilm", "(", "3", ")", "\n", "inplanes", "=", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "inplanes", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "inplanes", "*", "2", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "inplanes", "*", "4", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "inplanes", "*", "8", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "outplanes", "=", "512", "\n", "\n", "# handle classifier creation", "\n", "if", "num_classes", "is", "not", "None", ":", "\n", "      ", "if", "classifier", "==", "'linear'", ":", "\n", "        ", "self", ".", "cls_fn", "=", "nn", ".", "Linear", "(", "self", ".", "outplanes", ",", "num_classes", ")", "\n", "", "elif", "classifier", "==", "'cosine'", ":", "\n", "        ", "self", ".", "cls_fn", "=", "CosineClassifier", "(", "self", ".", "outplanes", ",", "num_classes", ")", "\n", "", "", "else", ":", "\n", "      ", "self", ".", "cls_fn", "=", "None", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "      ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet._make_layer": [[104, 118], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet18_film.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.conv1x1"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "    ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "      ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", "=", "stride", ",", "downsample", "=", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "      ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet.forward": [[119, 124], ["resnet18_film.ResNet.embed", "resnet18_film.ResNet.cls_fn"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet.embed"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "embed", "(", "x", ")", "\n", "if", "self", ".", "cls_fn", ":", "\n", "      ", "x", "=", "self", ".", "cls_fn", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet.embed": [[125, 141], ["resnet18_film.ResNet.film_normalize", "resnet18_film.ResNet.conv1", "resnet18_film.ResNet.bn1", "resnet18_film.ResNet.relu", "resnet18_film.ResNet.layer1", "resnet18_film.ResNet.layer2", "resnet18_film.ResNet.layer3", "resnet18_film.ResNet.layer4", "resnet18_film.ResNet.avgpool", "resnet18_film.ResNet.squeeze", "resnet18_film.ResNet.maxpool"], "methods", ["None"], ["", "def", "embed", "(", "self", ",", "x", ",", "param_dict", "=", "None", ")", ":", "\n", "    ", "\"\"\"Computing the features\"\"\"", "\n", "x", "=", "self", ".", "film_normalize", "(", "x", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "if", "self", ".", "initial_pool", ":", "\n", "      ", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "return", "x", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet.get_state_dict": [[142, 146], ["resnet18_film.ResNet.state_dict().items", "resnet18_film.ResNet.state_dict"], "methods", ["None"], ["", "def", "get_state_dict", "(", "self", ")", ":", "\n", "    ", "\"\"\"Outputs the state elements that are domain-specific\"\"\"", "\n", "return", "{", "k", ":", "v", "for", "k", ",", "v", "in", "self", ".", "state_dict", "(", ")", ".", "items", "(", ")", "\n", "if", "'film'", "in", "k", "or", "'cls'", "in", "k", "or", "'running'", "in", "k", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet.get_parameters": [[147, 151], ["resnet18_film.ResNet.named_parameters"], "methods", ["None"], ["", "def", "get_parameters", "(", "self", ")", ":", "\n", "    ", "\"\"\"Outputs only the parameters that are domain-specific\"\"\"", "\n", "return", "[", "v", "for", "k", ",", "v", "in", "self", ".", "named_parameters", "(", ")", "\n", "if", "'film'", "in", "k", "or", "'cls'", "in", "k", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.conv3x3": [[7, 11], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "  ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.conv1x1": [[13, 16], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "  ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.resnet18": [[153, 167], ["resnet18_film.ResNet", "ResNet.load_state_dict", "print", "torch.load", "torch.load", "resnet18_film.ResNet.get_parameters", "ckpt_dict.items"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.models.resnet18_film.ResNet.get_parameters"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "pretrained_model_path", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "  ", "\"\"\"\n    Constructs a FiLM adapted ResNet-18 model.\n  \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlockFilm", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "\n", "# loading shared convolutional weights", "\n", "if", "pretrained_model_path", "is", "not", "None", ":", "\n", "    ", "device", "=", "model", ".", "get_parameters", "(", ")", "[", "0", "]", ".", "device", "\n", "ckpt_dict", "=", "torch", ".", "load", "(", "pretrained_model_path", ",", "map_location", "=", "device", ")", "[", "'state_dict'", "]", "\n", "shared_state", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "ckpt_dict", ".", "items", "(", ")", "if", "'cls'", "not", "in", "k", "}", "\n", "model", ".", "load_state_dict", "(", "shared_state", ",", "strict", "=", "False", ")", "\n", "print", "(", "'Loaded shared weights from {}'", ".", "format", "(", "pretrained_model_path", ")", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader.__init__": [[30, 39], ["gin.parse_config_file"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mode", ",", "train_set", ",", "validation_set", ",", "test_set", ")", ":", "\n", "        ", "assert", "(", "train_set", "is", "not", "None", "or", "validation_set", "is", "not", "None", "or", "test_set", "is", "not", "None", ")", "\n", "\n", "self", ".", "data_path", "=", "META_RECORDS_ROOT", "\n", "self", ".", "train_dataset_next_task", "=", "None", "\n", "self", ".", "validation_set_dict", "=", "{", "}", "\n", "self", ".", "test_set_dict", "=", "{", "}", "\n", "self", ".", "specs_dict", "=", "{", "}", "\n", "gin", ".", "parse_config_file", "(", "f\"{PROJECT_ROOT}/lib/data/meta_dataset_config.gin\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader._get_dataset_spec": [[40, 53], ["isinstance", "os.path.join", "meta_dataset.data.dataset_spec.load_dataset_spec", "os.path.join", "meta_dataset.data.dataset_spec.load_dataset_spec", "dataset_specs.append"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "_get_dataset_spec", "(", "self", ",", "items", ")", ":", "\n", "        ", "if", "isinstance", "(", "items", ",", "list", ")", ":", "\n", "            ", "dataset_specs", "=", "[", "]", "\n", "for", "dataset_name", "in", "items", ":", "\n", "                ", "dataset_records_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "dataset_name", ")", "\n", "dataset_spec", "=", "dataset_spec_lib", ".", "load_dataset_spec", "(", "dataset_records_path", ")", "\n", "dataset_specs", ".", "append", "(", "dataset_spec", ")", "\n", "", "return", "dataset_specs", "\n", "", "else", ":", "\n", "            ", "dataset_name", "=", "items", "\n", "dataset_records_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "dataset_name", ")", "\n", "dataset_spec", "=", "dataset_spec_lib", ".", "load_dataset_spec", "(", "dataset_records_path", ")", "\n", "return", "dataset_spec", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader._to_torch": [[54, 65], ["sample.items", "isinstance", "torch.from_numpy", "val.long.long.to", "val.long.long.permute", "val.long.long.long"], "methods", ["None"], ["", "", "def", "_to_torch", "(", "self", ",", "sample", ")", ":", "\n", "        ", "for", "key", ",", "val", "in", "sample", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "val", ",", "str", ")", ":", "\n", "                ", "continue", "\n", "", "val", "=", "torch", ".", "from_numpy", "(", "val", ")", "\n", "if", "'image'", "in", "key", ":", "\n", "                ", "val", "=", "val", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "val", "=", "val", ".", "long", "(", ")", "\n", "", "sample", "[", "key", "]", "=", "val", ".", "to", "(", "'cpu'", ")", "# device", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader.num_classes": [[66, 77], ["isinstance", "len", "specs.get_classes"], "methods", ["None"], ["", "def", "num_classes", "(", "self", ",", "split_name", ")", ":", "\n", "        ", "split", "=", "SPLIT_NAME_TO_SPLIT", "[", "split_name", "]", "\n", "all_split_specs", "=", "self", ".", "specs_dict", "[", "SPLIT_NAME_TO_SPLIT", "[", "'train'", "]", "]", "\n", "\n", "if", "not", "isinstance", "(", "all_split_specs", ",", "list", ")", ":", "\n", "            ", "all_split_specs", "=", "[", "all_split_specs", "]", "\n", "\n", "", "total_n_classes", "=", "0", "\n", "for", "specs", "in", "all_split_specs", ":", "\n", "            ", "total_n_classes", "+=", "len", "(", "specs", ".", "get_classes", "(", "split", ")", ")", "\n", "", "return", "total_n_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader.build_class_to_identity": [[78, 100], ["dict", "dict", "dict", "enumerate", "isinstance", "len", "range", "specs.get_classes", "meta_dataset_reader.MetaDatasetReader.dataset_id_to_dataset_name.items"], "methods", ["None"], ["", "def", "build_class_to_identity", "(", "self", ")", ":", "\n", "        ", "split", "=", "SPLIT_NAME_TO_SPLIT", "[", "'train'", "]", "\n", "all_split_specs", "=", "self", ".", "specs_dict", "[", "SPLIT_NAME_TO_SPLIT", "[", "'train'", "]", "]", "\n", "\n", "if", "not", "isinstance", "(", "all_split_specs", ",", "list", ")", ":", "\n", "            ", "all_split_specs", "=", "[", "all_split_specs", "]", "\n", "\n", "", "self", ".", "cls_to_identity", "=", "dict", "(", ")", "\n", "self", ".", "dataset_id_to_dataset_name", "=", "dict", "(", ")", "\n", "self", ".", "dataset_to_n_cats", "=", "dict", "(", ")", "\n", "offset", "=", "0", "\n", "for", "dataset_id", ",", "specs", "in", "enumerate", "(", "all_split_specs", ")", ":", "\n", "            ", "dataset_name", "=", "specs", ".", "name", "\n", "self", ".", "dataset_id_to_dataset_name", "[", "dataset_id", "]", "=", "dataset_name", "\n", "n_cats", "=", "len", "(", "specs", ".", "get_classes", "(", "split", ")", ")", "\n", "self", ".", "dataset_to_n_cats", "[", "dataset_name", "]", "=", "n_cats", "\n", "for", "cat", "in", "range", "(", "n_cats", ")", ":", "\n", "                ", "self", ".", "cls_to_identity", "[", "offset", "+", "cat", "]", "=", "(", "cat", ",", "dataset_id", ")", "\n", "", "offset", "+=", "n_cats", "\n", "\n", "", "self", ".", "dataset_name_to_dataset_id", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "\n", "self", ".", "dataset_id_to_dataset_name", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.__init__": [[106, 127], ["meta_dataset_reader.MetaDatasetReader.__init__", "meta_dataset.data.config.EpisodeDescriptionConfig", "meta_dataset_reader.MetaDatasetEpisodeReader._init_multi_source_dataset", "meta_dataset.data.config.EpisodeDescriptionConfig", "meta_dataset.data.config.EpisodeDescriptionConfig", "meta_dataset_reader.MetaDatasetEpisodeReader._init_single_source_dataset", "meta_dataset_reader.MetaDatasetEpisodeReader._init_single_source_dataset"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._init_multi_source_dataset", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._init_single_source_dataset", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._init_single_source_dataset"], ["def", "__init__", "(", "self", ",", "mode", ",", "train_set", "=", "None", ",", "validation_set", "=", "None", ",", "test_set", "=", "None", ")", ":", "\n", "        ", "super", "(", "MetaDatasetEpisodeReader", ",", "self", ")", ".", "__init__", "(", "mode", ",", "train_set", ",", "validation_set", ",", "test_set", ")", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "train_episode_desscription", "=", "config", ".", "EpisodeDescriptionConfig", "(", "None", ",", "None", ",", "None", ")", "\n", "self", ".", "train_dataset_next_task", "=", "self", ".", "_init_multi_source_dataset", "(", "\n", "train_set", ",", "SPLIT_NAME_TO_SPLIT", "[", "'train'", "]", ",", "train_episode_desscription", ")", "\n", "\n", "", "if", "mode", "==", "'val'", ":", "\n", "            ", "test_episode_desscription", "=", "config", ".", "EpisodeDescriptionConfig", "(", "None", ",", "None", ",", "None", ")", "\n", "for", "item", "in", "validation_set", ":", "\n", "                ", "next_task", "=", "self", ".", "_init_single_source_dataset", "(", "\n", "item", ",", "SPLIT_NAME_TO_SPLIT", "[", "'val'", "]", ",", "test_episode_desscription", ")", "\n", "self", ".", "validation_set_dict", "[", "item", "]", "=", "next_task", "\n", "\n", "", "", "if", "mode", "==", "'test'", ":", "\n", "            ", "test_episode_desscription", "=", "config", ".", "EpisodeDescriptionConfig", "(", "None", ",", "None", ",", "None", ")", "\n", "for", "item", "in", "test_set", ":", "\n", "                ", "next_task", "=", "self", ".", "_init_single_source_dataset", "(", "\n", "item", ",", "SPLIT_NAME_TO_SPLIT", "[", "'test'", "]", ",", "test_episode_desscription", ")", "\n", "self", ".", "test_set_dict", "[", "item", "]", "=", "next_task", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader._init_multi_source_dataset": [[128, 150], ["meta_dataset_reader.MetaDatasetEpisodeReader._get_dataset_spec", "meta_dataset.data.pipeline.make_multisource_episode_pipeline", "meta_dataset.data.pipeline.make_multisource_episode_pipeline.make_one_shot_iterator", "pipeline.make_multisource_episode_pipeline.make_one_shot_iterator.get_next", "len", "len", "items.index", "items.index"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader._get_dataset_spec"], ["", "", "", "def", "_init_multi_source_dataset", "(", "self", ",", "items", ",", "split", ",", "episode_description", ")", ":", "\n", "        ", "dataset_specs", "=", "self", ".", "_get_dataset_spec", "(", "items", ")", "\n", "self", ".", "specs_dict", "[", "split", "]", "=", "dataset_specs", "\n", "\n", "use_bilevel_ontology_list", "=", "[", "False", "]", "*", "len", "(", "items", ")", "\n", "use_dag_ontology_list", "=", "[", "False", "]", "*", "len", "(", "items", ")", "\n", "# Enable ontology aware sampling for Omniglot and ImageNet.", "\n", "if", "'omniglot'", "in", "items", ":", "\n", "            ", "use_bilevel_ontology_list", "[", "items", ".", "index", "(", "'omniglot'", ")", "]", "=", "True", "\n", "", "if", "'ilsvrc_2012'", "in", "items", ":", "\n", "            ", "use_dag_ontology_list", "[", "items", ".", "index", "(", "'ilsvrc_2012'", ")", "]", "=", "True", "\n", "\n", "", "multi_source_pipeline", "=", "pipeline", ".", "make_multisource_episode_pipeline", "(", "\n", "dataset_spec_list", "=", "dataset_specs", ",", "\n", "use_dag_ontology_list", "=", "use_dag_ontology_list", ",", "\n", "use_bilevel_ontology_list", "=", "use_bilevel_ontology_list", ",", "\n", "split", "=", "split", ",", "\n", "episode_descr_config", "=", "episode_description", ",", "\n", "image_size", "=", "84", ",", "shuffle_buffer_size", "=", "1000", ")", "\n", "\n", "iterator", "=", "multi_source_pipeline", ".", "make_one_shot_iterator", "(", ")", "\n", "return", "iterator", ".", "get_next", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader._init_single_source_dataset": [[151, 174], ["meta_dataset_reader.MetaDatasetEpisodeReader._get_dataset_spec", "meta_dataset.data.pipeline.make_one_source_episode_pipeline", "meta_dataset.data.pipeline.make_one_source_episode_pipeline.make_one_shot_iterator", "pipeline.make_one_source_episode_pipeline.make_one_shot_iterator.get_next"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader._get_dataset_spec"], ["", "def", "_init_single_source_dataset", "(", "self", ",", "dataset_name", ",", "split", ",", "episode_description", ")", ":", "\n", "        ", "dataset_spec", "=", "self", ".", "_get_dataset_spec", "(", "dataset_name", ")", "\n", "self", ".", "specs_dict", "[", "split", "]", "=", "dataset_spec", "\n", "\n", "# Enable ontology aware sampling for Omniglot and ImageNet.", "\n", "use_bilevel_ontology", "=", "False", "\n", "if", "'omniglot'", "in", "dataset_name", ":", "\n", "            ", "use_bilevel_ontology", "=", "True", "\n", "\n", "", "use_dag_ontology", "=", "False", "\n", "if", "'ilsvrc_2012'", "in", "dataset_name", ":", "\n", "            ", "use_dag_ontology", "=", "True", "\n", "\n", "", "single_source_pipeline", "=", "pipeline", ".", "make_one_source_episode_pipeline", "(", "\n", "dataset_spec", "=", "dataset_spec", ",", "\n", "use_dag_ontology", "=", "use_dag_ontology", ",", "\n", "use_bilevel_ontology", "=", "use_bilevel_ontology", ",", "\n", "split", "=", "split", ",", "\n", "episode_descr_config", "=", "episode_description", ",", "\n", "image_size", "=", "84", ",", "shuffle_buffer_size", "=", "1000", ")", "\n", "\n", "iterator", "=", "single_source_pipeline", ".", "make_one_shot_iterator", "(", ")", "\n", "return", "iterator", ".", "get_next", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader._get_task": [[175, 184], ["meta_dataset_reader.MetaDatasetEpisodeReader._to_torch", "session.run"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader._to_torch"], ["", "def", "_get_task", "(", "self", ",", "next_task", ",", "session", ")", ":", "\n", "        ", "episode", "=", "session", ".", "run", "(", "next_task", ")", "[", "0", "]", "\n", "task_dict", "=", "{", "\n", "'context_images'", ":", "episode", "[", "0", "]", ",", "\n", "'context_labels'", ":", "episode", "[", "1", "]", ",", "\n", "'target_images'", ":", "episode", "[", "3", "]", ",", "\n", "'target_labels'", ":", "episode", "[", "4", "]", "\n", "}", "\n", "return", "self", ".", "_to_torch", "(", "task_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.get_train_task": [[185, 187], ["meta_dataset_reader.MetaDatasetEpisodeReader._get_task"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader._get_task"], ["", "def", "get_train_task", "(", "self", ",", "session", ")", ":", "\n", "        ", "return", "self", ".", "_get_task", "(", "self", ".", "train_dataset_next_task", ",", "session", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.get_validation_task": [[188, 191], ["meta_dataset_reader.MetaDatasetEpisodeReader._get_task", "list", "meta_dataset_reader.MetaDatasetEpisodeReader.validation_set_dict.keys"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader._get_task"], ["", "def", "get_validation_task", "(", "self", ",", "session", ",", "item", "=", "None", ")", ":", "\n", "        ", "item", "=", "item", "if", "item", "else", "list", "(", "self", ".", "validation_set_dict", ".", "keys", "(", ")", ")", "[", "0", "]", "\n", "return", "self", ".", "_get_task", "(", "self", ".", "validation_set_dict", "[", "item", "]", ",", "session", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.get_test_task": [[192, 195], ["meta_dataset_reader.MetaDatasetEpisodeReader._get_task", "list", "meta_dataset_reader.MetaDatasetEpisodeReader.test_set_dict.keys"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader._get_task"], ["", "def", "get_test_task", "(", "self", ",", "session", ",", "item", "=", "None", ")", ":", "\n", "        ", "item", "=", "item", "if", "item", "else", "list", "(", "self", ".", "test_set_dict", ".", "keys", "(", ")", ")", "[", "0", "]", "\n", "return", "self", ".", "_get_task", "(", "self", ".", "test_set_dict", "[", "item", "]", ",", "session", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader.__init__": [[201, 224], ["meta_dataset_reader.MetaDatasetReader.__init__", "meta_dataset_reader.MetaDatasetBatchReader.build_class_to_identity", "meta_dataset_reader.MetaDatasetBatchReader._init_multi_source_dataset", "meta_dataset_reader.MetaDatasetBatchReader._init_single_source_dataset", "ValueError", "meta_dataset_reader.MetaDatasetBatchReader._init_single_source_dataset"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader.build_class_to_identity", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._init_multi_source_dataset", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._init_single_source_dataset", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._init_single_source_dataset"], ["def", "__init__", "(", "self", ",", "mode", ",", "train_set", ",", "validation_set", ",", "test_set", ",", "batch_size", ")", ":", "\n", "        ", "super", "(", "MetaDatasetBatchReader", ",", "self", ")", ".", "__init__", "(", "mode", ",", "train_set", ",", "validation_set", ",", "test_set", ")", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "self", ".", "train_dataset_next_task", "=", "self", ".", "_init_multi_source_dataset", "(", "\n", "train_set", ",", "SPLIT_NAME_TO_SPLIT", "[", "'train'", "]", ")", "\n", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "for", "item", "in", "validation_set", ":", "\n", "                ", "next_task", "=", "self", ".", "validation_dataset", "=", "self", ".", "_init_single_source_dataset", "(", "\n", "item", ",", "SPLIT_NAME_TO_SPLIT", "[", "'val'", "]", ")", "\n", "self", ".", "validation_set_dict", "[", "item", "]", "=", "next_task", "\n", "\n", "", "", "elif", "mode", "==", "'test'", ":", "\n", "            ", "for", "item", "in", "test_set", ":", "\n", "                ", "next_task", "=", "self", ".", "_init_single_source_dataset", "(", "\n", "item", ",", "SPLIT_NAME_TO_SPLIT", "[", "'test'", "]", ")", "\n", "self", ".", "test_set_dict", "[", "item", "]", "=", "next_task", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid mode : {:}'", ".", "format", "(", "mode", ")", ")", "\n", "\n", "", "self", ".", "build_class_to_identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._init_multi_source_dataset": [[225, 234], ["meta_dataset_reader.MetaDatasetBatchReader._get_dataset_spec", "meta_dataset.data.pipeline.make_multisource_batch_pipeline", "meta_dataset.data.pipeline.make_multisource_batch_pipeline.make_one_shot_iterator", "pipeline.make_multisource_batch_pipeline.make_one_shot_iterator.get_next"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader._get_dataset_spec"], ["", "def", "_init_multi_source_dataset", "(", "self", ",", "items", ",", "split", ")", ":", "\n", "        ", "dataset_specs", "=", "self", ".", "_get_dataset_spec", "(", "items", ")", "\n", "self", ".", "specs_dict", "[", "split", "]", "=", "dataset_specs", "\n", "multi_source_pipeline", "=", "pipeline", ".", "make_multisource_batch_pipeline", "(", "\n", "dataset_spec_list", "=", "dataset_specs", ",", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "split", "=", "split", ",", "image_size", "=", "84", ",", "add_dataset_offset", "=", "True", ",", "shuffle_buffer_size", "=", "1000", ")", "\n", "\n", "iterator", "=", "multi_source_pipeline", ".", "make_one_shot_iterator", "(", ")", "\n", "return", "iterator", ".", "get_next", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._init_single_source_dataset": [[235, 244], ["meta_dataset_reader.MetaDatasetBatchReader._get_dataset_spec", "meta_dataset.data.pipeline.make_one_source_batch_pipeline", "meta_dataset.data.pipeline.make_one_source_batch_pipeline.make_one_shot_iterator", "pipeline.make_one_source_batch_pipeline.make_one_shot_iterator.get_next"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader._get_dataset_spec"], ["", "def", "_init_single_source_dataset", "(", "self", ",", "dataset_name", ",", "split", ")", ":", "\n", "        ", "dataset_specs", "=", "self", ".", "_get_dataset_spec", "(", "dataset_name", ")", "\n", "self", ".", "specs_dict", "[", "split", "]", "=", "dataset_specs", "\n", "multi_source_pipeline", "=", "pipeline", ".", "make_one_source_batch_pipeline", "(", "\n", "dataset_spec", "=", "dataset_specs", ",", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "split", "=", "split", ",", "image_size", "=", "84", ",", "shuffle_buffer_size", "=", "1000", ")", "\n", "\n", "iterator", "=", "multi_source_pipeline", ".", "make_one_shot_iterator", "(", ")", "\n", "return", "iterator", ".", "get_next", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._get_batch": [[245, 261], ["meta_dataset_reader.MetaDatasetBatchReader._to_torch", "session.run", "local_classes.append", "dataset_ids.append", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetReader._to_torch", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.Accumulator.append"], ["", "def", "_get_batch", "(", "self", ",", "next_task", ",", "session", ")", ":", "\n", "        ", "episode", "=", "session", ".", "run", "(", "next_task", ")", "[", "0", "]", "\n", "images", ",", "labels", "=", "episode", "[", "0", "]", ",", "episode", "[", "1", "]", "\n", "local_classes", ",", "dataset_ids", "=", "[", "]", ",", "[", "]", "\n", "for", "label", "in", "labels", ":", "\n", "            ", "local_class", ",", "dataset_id", "=", "self", ".", "cls_to_identity", "[", "label", "]", "\n", "local_classes", ".", "append", "(", "local_class", ")", "\n", "dataset_ids", ".", "append", "(", "dataset_id", ")", "\n", "", "task_dict", "=", "{", "\n", "'images'", ":", "images", ",", "\n", "'labels'", ":", "labels", ",", "\n", "'local_classes'", ":", "np", ".", "array", "(", "local_classes", ")", ",", "\n", "'dataset_ids'", ":", "np", ".", "array", "(", "dataset_ids", ")", ",", "\n", "'dataset_name'", ":", "self", ".", "dataset_id_to_dataset_name", "[", "dataset_ids", "[", "-", "1", "]", "]", "\n", "}", "\n", "return", "self", ".", "_to_torch", "(", "task_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader.get_train_batch": [[262, 264], ["meta_dataset_reader.MetaDatasetBatchReader._get_batch"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._get_batch"], ["", "def", "get_train_batch", "(", "self", ",", "session", ")", ":", "\n", "        ", "return", "self", ".", "_get_batch", "(", "self", ".", "train_dataset_next_task", ",", "session", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader.get_validation_batch": [[265, 267], ["meta_dataset_reader.MetaDatasetBatchReader._get_batch"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._get_batch"], ["", "def", "get_validation_batch", "(", "self", ",", "item", ",", "session", ")", ":", "\n", "        ", "return", "self", ".", "_get_batch", "(", "self", ".", "validation_set_dict", "[", "item", "]", ",", "session", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader.get_test_batch": [[268, 270], ["meta_dataset_reader.MetaDatasetBatchReader._get_batch"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetBatchReader._get_batch"], ["", "def", "get_test_batch", "(", "self", ",", "item", ",", "session", ")", ":", "\n", "        ", "return", "self", ".", "_get_batch", "(", "self", ".", "test_set_dict", "[", "item", "]", ",", "session", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.__init__": [[17, 32], ["dict", "sum", "os.listdir", "min", "os.path.join", "lmdb_dataset.DatasetReader", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "extractor_domains", ",", "datasets", ",", "backbone", ",", "mode", ",", "dump_name", ",", "limit_len", "=", "None", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "self", ".", "datasets", "=", "datasets", "\n", "\n", "self", ".", "dataset_readers", "=", "dict", "(", ")", "\n", "for", "evalset", "in", "datasets", ":", "\n", "            ", "all_names", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "META_DATA_ROOT", ",", "'Dumps'", ",", "\n", "backbone", ",", "mode", ",", "evalset", ")", ")", "\n", "self", ".", "dataset_readers", "[", "evalset", "]", "=", "[", "\n", "DatasetReader", "(", "extractor_domains", ",", "evalset", ",", "backbone", ",", "mode", ",", "name", ")", "\n", "for", "name", "in", "all_names", "if", "dump_name", "in", "name", "]", "\n", "", "self", ".", "_current_sampling_dataset", "=", "datasets", "[", "0", "]", "\n", "self", ".", "full_len", "=", "sum", "(", "[", "len", "(", "ds", ")", "for", "ds", "in", "self", ".", "dataset_readers", "[", "self", ".", "_current_sampling_dataset", "]", "]", ")", "\n", "if", "limit_len", "is", "not", "None", ":", "\n", "            ", "self", ".", "full_len", "=", "min", "(", "self", ".", "full_len", ",", "limit_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.__len__": [[33, 35], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "full_len", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.__getitem__": [[36, 54], ["sample.items", "isinstance", "random.sample", "random.sample", "torch.from_numpy().long", "range", "sample[].items", "len", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "random_lmdb_subset", "=", "random", ".", "sample", "(", "self", ".", "dataset_readers", "[", "self", ".", "_current_sampling_dataset", "]", ",", "1", ")", "[", "0", "]", "\n", "idx", "=", "random", ".", "sample", "(", "range", "(", "len", "(", "random_lmdb_subset", ")", ")", ",", "1", ")", "[", "0", "]", "\n", "sample", "=", "random_lmdb_subset", "[", "idx", "]", "\n", "", "else", ":", "\n", "            ", "sample", "=", "self", ".", "dataset_readers", "[", "self", ".", "_current_sampling_dataset", "]", "[", "0", "]", "[", "idx", "]", "\n", "\n", "", "for", "key", ",", "val", "in", "sample", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "val", ",", "str", ")", ":", "\n", "                ", "pass", "\n", "", "if", "'label'", "in", "key", ":", "\n", "                ", "sample", "[", "key", "]", "=", "torch", ".", "from_numpy", "(", "val", ")", ".", "long", "(", ")", "\n", "", "elif", "'feature_dict'", "in", "key", ":", "\n", "                ", "for", "fkey", ",", "fval", "in", "sample", "[", "key", "]", ".", "items", "(", ")", ":", "\n", "                    ", "sample", "[", "key", "]", "[", "fkey", "]", "=", "torch", ".", "from_numpy", "(", "fval", ")", "\n", "\n", "", "", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.set_sampling_dataset": [[55, 57], ["None"], "methods", ["None"], ["", "def", "set_sampling_dataset", "(", "self", ",", "sampling_dataset", ")", ":", "\n", "        ", "self", ".", "_current_sampling_dataset", "=", "sampling_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset._load_db": [[60, 86], ["lmdb.open", "lmdb_dataset.LMDBDataset._env.begin", "os.path.join", "os.path.isfile", "ValueError", "pickle.load", "print", "pickle.dump", "str().encode", "open", "lmdb_dataset.LMDBDataset._env.begin", "open", "key.decode", "str", "tqdm.tqdm.tqdm", "str", "txn.cursor"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print"], ["", "def", "_load_db", "(", "self", ",", "info", ",", "class_id", ")", ":", "\n", "        ", "path", "=", "self", ".", "_path", "\n", "\n", "self", ".", "_env", "=", "lmdb", ".", "open", "(", "\n", "self", ".", "_path", ",", "\n", "readonly", "=", "True", ",", "\n", "lock", "=", "False", ",", "\n", "readahead", "=", "False", ",", "\n", "meminit", "=", "False", ")", "\n", "self", ".", "_txn", "=", "self", ".", "_env", ".", "begin", "(", "write", "=", "False", ")", "\n", "\n", "if", "class_id", "is", "None", ":", "\n", "            ", "cache_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "'keys'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "cache_file", ")", ":", "\n", "                ", "self", ".", "keys", "=", "pkl", ".", "load", "(", "open", "(", "cache_file", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Loading dataset keys...'", ")", "\n", "with", "self", ".", "_env", ".", "begin", "(", "write", "=", "False", ")", "as", "txn", ":", "\n", "                    ", "self", ".", "keys", "=", "[", "key", ".", "decode", "(", "'ascii'", ")", "\n", "for", "key", ",", "_", "in", "tqdm", "(", "txn", ".", "cursor", "(", ")", ")", "]", "\n", "", "pkl", ".", "dump", "(", "self", ".", "keys", ",", "open", "(", "cache_file", ",", "'wb'", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "keys", "=", "[", "str", "(", "k", ")", ".", "encode", "(", ")", "for", "k", "in", "info", "[", "'labels2keys'", "]", "[", "str", "(", "class_id", ")", "]", "]", "\n", "\n", "", "if", "not", "self", ".", "keys", ":", "\n", "            ", "raise", "ValueError", "(", "'Empty dataset.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.eval": [[87, 89], ["None"], "methods", ["None"], ["", "", "def", "eval", "(", "self", ")", ":", "\n", "        ", "self", ".", "mode", "=", "'eval'", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.train": [[90, 92], ["None"], "methods", ["None"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "mode", "=", "'train'", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.LMDBDataset.transform": [[93, 100], ["lmdb_dataset.LMDBDataset.train_transform", "lmdb_dataset.LMDBDataset.test_transform"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "out", "=", "self", ".", "train_transform", "(", "x", ")", "if", "self", ".", "train_transform", "else", "x", "\n", "return", "out", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "test_transform", "(", "x", ")", "if", "self", ".", "test_transform", "else", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.DatasetReader.__init__": [[107, 118], ["os.path.join", "lmdb_dataset.DatasetReader._load_db"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.DatasetReader._load_db"], ["def", "__init__", "(", "self", ",", "extractor_domains", ",", "evalset", ",", "backbone", ",", "mode", ",", "name", ")", ":", "\n", "        ", "self", ".", "_mode", "=", "mode", "\n", "self", ".", "_env", "=", "None", "\n", "self", ".", "_txn", "=", "None", "\n", "self", ".", "keys", "=", "None", "\n", "\n", "self", ".", "trainsets", "=", "extractor_domains", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "META_DATA_ROOT", ",", "'Dumps'", ",", "backbone", ",", "mode", ",", "evalset", ",", "name", ")", "\n", "self", ".", "_path", "=", "path", "\n", "\n", "self", ".", "_load_db", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.DatasetReader.__len__": [[119, 121], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "full_len", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.DatasetReader._load_db": [[122, 143], ["lmdb.open", "lmdb_dataset.DatasetReader._env.begin", "os.path.join", "os.path.isfile", "pickle.load", "print", "pickle.dump", "len", "open", "lmdb_dataset.DatasetReader._env.begin", "open", "key.decode", "tqdm.tqdm.tqdm", "txn.cursor"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print"], ["", "def", "_load_db", "(", "self", ")", ":", "\n", "        ", "path", "=", "self", ".", "_path", "\n", "\n", "self", ".", "_env", "=", "lmdb", ".", "open", "(", "\n", "self", ".", "_path", ",", "\n", "readonly", "=", "True", ",", "\n", "lock", "=", "False", ",", "\n", "readahead", "=", "False", ",", "\n", "meminit", "=", "False", ")", "\n", "self", ".", "_txn", "=", "self", ".", "_env", ".", "begin", "(", "write", "=", "False", ")", "\n", "\n", "cache_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "'keys'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "cache_file", ")", ":", "\n", "            ", "self", ".", "keys", "=", "pkl", ".", "load", "(", "open", "(", "cache_file", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Loading dataset keys...'", ")", "\n", "with", "self", ".", "_env", ".", "begin", "(", "write", "=", "False", ")", "as", "txn", ":", "\n", "                ", "self", ".", "keys", "=", "[", "key", ".", "decode", "(", "'ascii'", ")", "\n", "for", "key", ",", "_", "in", "tqdm", "(", "txn", ".", "cursor", "(", ")", ")", "]", "\n", "", "pkl", ".", "dump", "(", "self", ".", "keys", ",", "open", "(", "cache_file", ",", "'wb'", ")", ")", "\n", "", "self", ".", "full_len", "=", "len", "(", "self", ".", "keys", ")", "//", "18", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.lmdb_dataset.DatasetReader.__getitem__": [[144, 159], ["dict", "pickle.loads", "pickle.loads", "pickle.loads.get", "pickle.loads.get", "dict", "dict", "lmdb_dataset.DatasetReader._txn.get", "lmdb_dataset.DatasetReader._txn.get", "pickle.loads", "pickle.loads", "pickle.loads.get", "pickle.loads.get", "lmdb_dataset.DatasetReader._txn.get", "lmdb_dataset.DatasetReader._txn.get"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.SerializableArray.get"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "sample", "=", "dict", "(", ")", "\n", "support_labels", "=", "pkl", ".", "loads", "(", "self", ".", "_txn", ".", "get", "(", "f\"{idx}_labels_support\"", ".", "encode", "(", "\"ascii\"", ")", ")", ")", "\n", "query_labels", "=", "pkl", ".", "loads", "(", "self", ".", "_txn", ".", "get", "(", "f\"{idx}_labels_query\"", ".", "encode", "(", "\"ascii\"", ")", ")", ")", "\n", "sample", "[", "'context_labels'", "]", "=", "support_labels", ".", "get", "(", ")", "\n", "sample", "[", "'target_labels'", "]", "=", "query_labels", ".", "get", "(", ")", "\n", "\n", "sample", "[", "'context_feature_dict'", "]", "=", "dict", "(", ")", "\n", "sample", "[", "'target_feature_dict'", "]", "=", "dict", "(", ")", "\n", "for", "dataset", "in", "self", ".", "trainsets", ":", "\n", "            ", "support_batch", "=", "pkl", ".", "loads", "(", "self", ".", "_txn", ".", "get", "(", "f\"{idx}_{dataset}_support\"", ".", "encode", "(", "\"ascii\"", ")", ")", ")", "\n", "query_batch", "=", "pkl", ".", "loads", "(", "self", ".", "_txn", ".", "get", "(", "f\"{idx}_{dataset}_query\"", ".", "encode", "(", "\"ascii\"", ")", ")", ")", "\n", "sample", "[", "'context_feature_dict'", "]", "[", "dataset", "]", "=", "support_batch", ".", "get", "(", ")", "\n", "sample", "[", "'target_feature_dict'", "]", "[", "dataset", "]", "=", "query_batch", ".", "get", "(", ")", "\n", "", "return", "sample", "\n", "", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_processing.DataAugmentation.__init__": [[9, 37], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "enable_jitter", ",", "jitter_amount", ",", "enable_gaussian_noise", ",", "\n", "gaussian_noise_std", ",", "enable_random_flip", ",", "\n", "enable_random_brightness", ",", "random_brightness_delta", ",", "\n", "enable_random_contrast", ",", "random_contrast_delta", ",", "\n", "enable_random_hue", ",", "random_hue_delta", ",", "enable_random_saturation", ",", "\n", "random_saturation_delta", ")", ":", "\n", "    ", "\"\"\"Initialize a DataAugmentation.\n\n    Args:\n      enable_jitter: bool whether to use image jitter (pad each image using\n        reflection along x and y axes and then random crop).\n      jitter_amount: amount (in pixels) to pad on all sides of the image.\n      enable_gaussian_noise: bool whether to use additive Gaussian noise.\n      gaussian_noise_std: Standard deviation of the Gaussian distribution.\n    \"\"\"", "\n", "self", ".", "enable_jitter", "=", "enable_jitter", "\n", "self", ".", "jitter_amount", "=", "jitter_amount", "\n", "self", ".", "enable_gaussian_noise", "=", "enable_gaussian_noise", "\n", "self", ".", "gaussian_noise_std", "=", "gaussian_noise_std", "\n", "self", ".", "enable_random_flip", "=", "enable_random_flip", "\n", "self", ".", "enable_random_brightness", "=", "enable_random_brightness", "\n", "self", ".", "random_brightness_delta", "=", "random_brightness_delta", "\n", "self", ".", "enable_random_contrast", "=", "enable_random_contrast", "\n", "self", ".", "random_contrast_delta", "=", "random_contrast_delta", "\n", "self", ".", "enable_random_hue", "=", "enable_random_hue", "\n", "self", ".", "random_hue_delta", "=", "random_hue_delta", "\n", "self", ".", "enable_random_saturation", "=", "enable_random_saturation", "\n", "self", ".", "random_saturation_delta", "=", "random_saturation_delta", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_processing.ImageDecoder.__init__": [[43, 55], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "image_size", "=", "None", ",", "data_augmentation", "=", "None", ")", ":", "\n", "    ", "\"\"\"Class constructor.\n\n    Args:\n      image_size: int, desired image size. The extracted image will be resized\n        to `[image_size, image_size]`.\n      data_augmentation: A DataAugmentation object with parameters for\n        perturbing the images.\n    \"\"\"", "\n", "\n", "self", ".", "image_size", "=", "image_size", "\n", "self", ".", "data_augmentation", "=", "data_augmentation", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_processing.ImageDecoder.__call__": [[56, 119], ["tensorflow.image.decode_image", "tensorflow.image.decode_image.set_shape", "tensorflow.image.resize_images", "tensorflow.cast", "tensorflow.parse_single_example", "tensorflow.image.random_brightness", "tensorflow.image.random_saturation", "tensorflow.image.random_contrast", "tensorflow.image.random_hue", "tensorflow.image.random_flip_left_right", "tensorflow.constant", "tensorflow.pad", "tensorflow.image.random_crop", "tensorflow.FixedLenFeature", "tensorflow.FixedLenFeature", "tensorflow.random_normal", "tensorflow.shape"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "example_string", ")", ":", "\n", "    ", "\"\"\"Processes a single example string.\n\n    Extracts and processes the image, and ignores the label. We assume that the\n    image has three channels.\n\n    Args:\n      example_string: str, an Example protocol buffer.\n\n    Returns:\n      image_rescaled: the image, resized to `image_size x image_size` and\n      rescaled to [-1, 1]. Note that Gaussian data augmentation may cause values\n      to go beyond this range.\n    \"\"\"", "\n", "image_string", "=", "tf", ".", "parse_single_example", "(", "\n", "example_string", ",", "\n", "features", "=", "{", "\n", "'image'", ":", "tf", ".", "FixedLenFeature", "(", "[", "]", ",", "dtype", "=", "tf", ".", "string", ")", ",", "\n", "'label'", ":", "tf", ".", "FixedLenFeature", "(", "[", "]", ",", "tf", ".", "int64", ")", "\n", "}", ")", "[", "'image'", "]", "\n", "image_decoded", "=", "tf", ".", "image", ".", "decode_image", "(", "image_string", ",", "channels", "=", "3", ")", "\n", "image_decoded", ".", "set_shape", "(", "[", "None", ",", "None", ",", "3", "]", ")", "\n", "image_resized", "=", "tf", ".", "image", ".", "resize_images", "(", "\n", "image_decoded", ",", "[", "self", ".", "image_size", ",", "self", ".", "image_size", "]", ",", "\n", "method", "=", "tf", ".", "image", ".", "ResizeMethod", ".", "BILINEAR", ",", "\n", "align_corners", "=", "True", ")", "\n", "image", "=", "tf", ".", "cast", "(", "image_resized", ",", "tf", ".", "float32", ")", "\n", "\n", "if", "self", ".", "data_augmentation", "is", "not", "None", ":", "\n", "      ", "if", "self", ".", "data_augmentation", ".", "enable_random_brightness", ":", "\n", "        ", "delta", "=", "self", ".", "data_augmentation", ".", "random_brightness_delta", "\n", "image", "=", "tf", ".", "image", ".", "random_brightness", "(", "image", ",", "delta", ")", "\n", "\n", "", "if", "self", ".", "data_augmentation", ".", "enable_random_saturation", ":", "\n", "        ", "delta", "=", "self", ".", "data_augmentation", ".", "random_saturation_delta", "\n", "image", "=", "tf", ".", "image", ".", "random_saturation", "(", "image", ",", "1", "-", "delta", ",", "1", "+", "delta", ")", "\n", "\n", "", "if", "self", ".", "data_augmentation", ".", "enable_random_contrast", ":", "\n", "        ", "delta", "=", "self", ".", "data_augmentation", ".", "random_contrast_delta", "\n", "image", "=", "tf", ".", "image", ".", "random_contrast", "(", "image", ",", "1", "-", "delta", ",", "1", "+", "delta", ")", "\n", "\n", "", "if", "self", ".", "data_augmentation", ".", "enable_random_hue", ":", "\n", "        ", "delta", "=", "self", ".", "data_augmentation", ".", "random_hue_delta", "\n", "image", "=", "tf", ".", "image", ".", "random_hue", "(", "image", ",", "delta", ")", "\n", "\n", "", "if", "self", ".", "data_augmentation", ".", "enable_random_flip", ":", "\n", "        ", "image", "=", "tf", ".", "image", ".", "random_flip_left_right", "(", "image", ")", "\n", "\n", "", "", "image", "=", "2", "*", "(", "image", "/", "255.0", "-", "0.5", ")", "# Rescale to [-1, 1].", "\n", "\n", "if", "self", ".", "data_augmentation", "is", "not", "None", ":", "\n", "      ", "if", "self", ".", "data_augmentation", ".", "enable_gaussian_noise", ":", "\n", "        ", "image", "=", "image", "+", "tf", ".", "random_normal", "(", "\n", "tf", ".", "shape", "(", "image", ")", ")", "*", "self", ".", "data_augmentation", ".", "gaussian_noise_std", "\n", "\n", "", "if", "self", ".", "data_augmentation", ".", "enable_jitter", ":", "\n", "        ", "j", "=", "self", ".", "data_augmentation", ".", "jitter_amount", "\n", "paddings", "=", "tf", ".", "constant", "(", "[", "[", "j", ",", "j", "]", ",", "[", "j", ",", "j", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "image", "=", "tf", ".", "pad", "(", "image", ",", "paddings", ",", "'REFLECT'", ")", "\n", "image", "=", "tf", ".", "image", ".", "random_crop", "(", "image", ",", "\n", "[", "self", ".", "image_size", ",", "self", ".", "image_size", ",", "3", "]", ")", "\n", "\n", "", "", "return", "image", "\n", "", "", ""]], "home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.__init__": [[25, 58], ["print", "data.meta_dataset_reader.MetaDatasetEpisodeReader", "utils.check_dir", "os.path.join", "os.path.join", "os.path.exists", "os.mkdir", "os.path.exists", "NameError", "data.meta_dataset_reader.MetaDatasetEpisodeReader.get_train_task", "data.meta_dataset_reader.MetaDatasetEpisodeReader.get_test_task", "data.meta_dataset_reader.MetaDatasetEpisodeReader.get_validation_task"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.lib.utils.check_dir", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.get_train_task", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.get_test_task", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.get_validation_task"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "rewrite", "=", "True", ",", "write_frequency", "=", "10", ")", ":", "\n", "        ", "self", ".", "_mode", "=", "args", "[", "'dump.mode'", "]", "\n", "self", ".", "_write_frequency", "=", "write_frequency", "\n", "self", ".", "_db", "=", "None", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "dataset_models", "=", "DATASET_MODELS_DICT", "[", "args", "[", "'model.backbone'", "]", "]", "\n", "print", "(", "self", ".", "dataset_models", ")", "\n", "\n", "trainsets", ",", "valsets", ",", "testsets", "=", "args", "[", "'data.train'", "]", ",", "args", "[", "'data.val'", "]", ",", "args", "[", "'data.test'", "]", "\n", "loader", "=", "MetaDatasetEpisodeReader", "(", "self", ".", "_mode", ",", "trainsets", ",", "valsets", ",", "testsets", ")", "\n", "self", ".", "_map_size", "=", "50000", "*", "100", "**", "2", "*", "512", "*", "8", "\n", "self", ".", "trainsets", "=", "trainsets", "\n", "\n", "if", "self", ".", "_mode", "==", "'train'", ":", "\n", "            ", "evalset", "=", "\"allcat\"", "\n", "self", ".", "load_sample", "=", "lambda", "sess", ":", "loader", ".", "get_train_task", "(", "sess", ")", "\n", "", "elif", "self", ".", "_mode", "==", "'test'", ":", "\n", "            ", "evalset", "=", "testsets", "[", "0", "]", "\n", "self", ".", "load_sample", "=", "lambda", "sess", ":", "loader", ".", "get_test_task", "(", "sess", ",", "evalset", ")", "\n", "", "elif", "self", ".", "_mode", "==", "'val'", ":", "\n", "            ", "evalset", "=", "valsets", "[", "0", "]", "\n", "self", ".", "load_sample", "=", "lambda", "sess", ":", "loader", ".", "get_validation_task", "(", "sess", ",", "evalset", ")", "\n", "\n", "", "dump_name", "=", "mode", "+", "'_dump'", "if", "not", "args", "[", "'dump.name'", "]", "else", "args", "[", "'dump.name'", "]", "\n", "path", "=", "check_dir", "(", "os", ".", "path", ".", "join", "(", "META_DATA_ROOT", ",", "'Dumps'", ",", "self", ".", "args", "[", "'model.backbone'", "]", ",", "\n", "self", ".", "_mode", ",", "evalset", ",", "dump_name", ")", ")", "\n", "self", ".", "_path", "=", "path", "\n", "if", "not", "(", "os", ".", "path", ".", "exists", "(", "path", ")", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "path", ")", "\n", "", "self", ".", "_keys_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "'keys'", ")", "\n", "self", ".", "_keys", "=", "[", "]", "\n", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "rewrite", ":", "\n", "            ", "raise", "NameError", "(", "\"Dataset {} already exists.\"", ".", "format", "(", "self", ".", "_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.init": [[60, 63], ["lmdb.open", "models.model_helpers.get_domain_extractors"], "methods", ["None"], ["", "", "def", "init", "(", "self", ")", ":", "\n", "        ", "self", ".", "_db", "=", "lmdb", ".", "open", "(", "self", ".", "_path", ",", "map_size", "=", "self", ".", "_map_size", ",", "map_async", "=", "True", ")", "\n", "self", ".", "embed_many", "=", "get_domain_extractors", "(", "self", ".", "trainsets", ",", "self", ".", "dataset_models", ",", "self", ".", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.close": [[64, 72], ["tuple", "pickle.dump", "open", "create_features_db.DatasetWriter._db.sync", "create_features_db.DatasetWriter._db.close"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "keys", "=", "tuple", "(", "self", ".", "_keys", ")", "\n", "pkl", ".", "dump", "(", "keys", ",", "open", "(", "self", ".", "_keys_file", ",", "'wb'", ")", ")", "\n", "\n", "if", "self", ".", "_db", "is", "not", "None", ":", "\n", "            ", "self", ".", "_db", ".", "sync", "(", ")", "\n", "self", ".", "_db", ".", "close", "(", ")", "\n", "self", ".", "_db", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.encode_dataset": [[73, 109], ["create_features_db.DatasetWriter._db.begin", "tensorflow.compat.v1.ConfigProto", "create_features_db.DatasetWriter.init", "tensorflow.compat.v1.Session", "tqdm.tqdm.tqdm", "create_features_db.DatasetWriter.commit", "range", "create_features_db.DatasetWriter.load_sample", "create_features_db.DatasetWriter.embed_many", "create_features_db.DatasetWriter.embed_many", "utils.SerializableArray", "utils.SerializableArray", "create_features_db.DatasetWriter.keys", "create_features_db.DatasetWriter.put", "create_features_db.DatasetWriter.put", "create_features_db.DatasetWriter._keys.extend", "sample[].detach().cpu().numpy", "sample[].detach().cpu().numpy", "utils.SerializableArray", "utils.SerializableArray", "create_features_db.DatasetWriter.put", "create_features_db.DatasetWriter.put", "create_features_db.DatasetWriter._keys.extend", "pickle.dumps", "pickle.dumps", "create_features_db.DatasetWriter.commit", "create_features_db.DatasetWriter._db.begin", "support_embed_dict[].detach().cpu().numpy", "query_embed_dict[].detach().cpu().numpy", "pickle.dumps", "pickle.dumps", "sample[].detach().cpu", "sample[].detach().cpu", "support_embed_dict[].detach().cpu", "query_embed_dict[].detach().cpu", "sample[].detach", "sample[].detach", "support_embed_dict[].detach", "query_embed_dict[].detach"], "methods", ["home.repos.pwc.inspect_result.liulu112601_URT.data.create_features_db.DatasetWriter.init"], ["", "", "def", "encode_dataset", "(", "self", ",", "n_tasks", "=", "1000", ")", ":", "\n", "        ", "if", "self", ".", "_db", "is", "None", ":", "\n", "            ", "self", ".", "init", "(", ")", "\n", "\n", "", "txn", "=", "self", ".", "_db", ".", "begin", "(", "write", "=", "True", ")", "\n", "config", "=", "tf", ".", "compat", ".", "v1", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "with", "tf", ".", "compat", ".", "v1", ".", "Session", "(", "config", "=", "config", ")", "as", "session", ":", "\n", "            ", "for", "idx", "in", "tqdm", "(", "range", "(", "n_tasks", ")", ")", ":", "\n", "# compressing image", "\n", "                ", "sample", "=", "self", ".", "load_sample", "(", "session", ")", "\n", "support_embed_dict", "=", "self", ".", "embed_many", "(", "sample", "[", "'context_images'", "]", ")", "\n", "query_embed_dict", "=", "self", ".", "embed_many", "(", "sample", "[", "'target_images'", "]", ")", "\n", "support_labels", "=", "SerializableArray", "(", "sample", "[", "'context_labels'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "query_labels", "=", "SerializableArray", "(", "sample", "[", "'target_labels'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "SerializableArray", ".", "__module__", "=", "'utils'", "\n", "\n", "# writing", "\n", "for", "dataset", "in", "support_embed_dict", ".", "keys", "(", ")", ":", "\n", "                    ", "support_batch", "=", "SerializableArray", "(", "\n", "support_embed_dict", "[", "dataset", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "query_batch", "=", "SerializableArray", "(", "\n", "query_embed_dict", "[", "dataset", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "SerializableArray", ".", "__module__", "=", "'utils'", "\n", "txn", ".", "put", "(", "f\"{idx}_{dataset}_support\"", ".", "encode", "(", "\"ascii\"", ")", ",", "pkl", ".", "dumps", "(", "support_batch", ")", ")", "\n", "txn", ".", "put", "(", "f\"{idx}_{dataset}_query\"", ".", "encode", "(", "\"ascii\"", ")", ",", "pkl", ".", "dumps", "(", "query_batch", ")", ")", "\n", "self", ".", "_keys", ".", "extend", "(", "[", "f\"{idx}_{dataset}_support\"", ",", "f\"{idx}_{dataset}_query\"", "]", ")", "\n", "", "txn", ".", "put", "(", "f\"{idx}_labels_support\"", ".", "encode", "(", "\"ascii\"", ")", ",", "pkl", ".", "dumps", "(", "support_labels", ")", ")", "\n", "txn", ".", "put", "(", "f\"{idx}_labels_query\"", ".", "encode", "(", "\"ascii\"", ")", ",", "pkl", ".", "dumps", "(", "query_labels", ")", ")", "\n", "self", ".", "_keys", ".", "extend", "(", "[", "f\"{idx}_labels_support\"", ",", "f\"{idx}_labels_query\"", "]", ")", "\n", "\n", "# flushing into lmdb", "\n", "if", "idx", ">", "0", "and", "idx", "%", "self", ".", "_write_frequency", "==", "0", ":", "\n", "                    ", "txn", ".", "commit", "(", ")", "\n", "txn", "=", "self", ".", "_db", ".", "begin", "(", "write", "=", "True", ")", "\n", "", "", "txn", ".", "commit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.exps.pre-extract-feature.load_config": [[23, 38], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "vars", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "load_config", "(", ")", ":", "\n", "\n", "  ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train prototypical networks'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_dir'", ",", "type", "=", "str", ",", "help", "=", "\"The saved path in dir.\"", ")", "\n", "\n", "# model args", "\n", "parser", ".", "add_argument", "(", "'--model.backbone'", ",", "default", "=", "'resnet18'", ",", "help", "=", "\"Use ResNet18 for experiments (default: False)\"", ")", "\n", "parser", ".", "add_argument", "(", "'--model.classifier'", ",", "type", "=", "str", ",", "default", "=", "'cosine'", ",", "choices", "=", "[", "'none'", ",", "'linear'", ",", "'cosine'", "]", ",", "help", "=", "\"Do classification using cosine similatity between activations and weights\"", ")", "\n", "\n", "# train args", "\n", "parser", ".", "add_argument", "(", "'--train.max_iter'", ",", "type", "=", "int", ",", "default", "=", "10000", ",", "help", "=", "'number of epochs to train (default: 10000)'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval.max_iter'", ",", "type", "=", "int", ",", "default", "=", "600", ",", "help", "=", "'number of epochs to train (default: 10000)'", ")", "\n", "\n", "xargs", "=", "vars", "(", "parser", ".", "parse_args", "(", ")", ")", "\n", "return", "xargs", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.exps.pre-extract-feature.extract_eval_dataset": [[40, 72], ["logger.print", "tensorflow.compat.v1.ConfigProto", "tensorflow.compat.v1.Session", "enumerate", "utils.time_string", "logger.print", "x_save_dir.mkdir", "tqdm.tqdm", "range", "utils.time_string", "len", "test_loader.get_validation_task", "torch.no_grad", "torch.no_grad", "models.new_model_helpers.extract_features", "models.new_model_helpers.extract_features", "torch.save", "torch.save", "test_loader.get_test_task", "ValueError", "models.new_model_helpers.extract_features.cpu", "context_labels.cpu", "models.new_model_helpers.extract_features.cpu", "target_labels.cpu"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.get_validation_task", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.extract_features", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.extract_features", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.get_test_task"], ["", "def", "extract_eval_dataset", "(", "backbone", ",", "mode", ",", "extractors", ",", "all_test_datasets", ",", "test_loader", ",", "num_iters", ",", "logger", ",", "save_dir", ")", ":", "\n", "# dataset_models = DATASET_MODELS_DICT[backbone]", "\n", "\n", "  ", "logger", ".", "print", "(", "'\\n{:} starting extract the {:} mode by {:} iters.'", ".", "format", "(", "time_string", "(", ")", ",", "mode", ",", "save_dir", ",", "num_iters", ")", ")", "\n", "config", "=", "tf", ".", "compat", ".", "v1", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "with", "tf", ".", "compat", ".", "v1", ".", "Session", "(", "config", "=", "config", ")", "as", "session", ":", "\n", "    ", "for", "idata", ",", "test_dataset", "in", "enumerate", "(", "all_test_datasets", ")", ":", "\n", "      ", "logger", ".", "print", "(", "'===>>> {:} --->>> {:02d}/{:02d} --->>> {:}'", ".", "format", "(", "time_string", "(", ")", ",", "idata", ",", "len", "(", "all_test_datasets", ")", ",", "test_dataset", ")", ")", "\n", "x_save_dir", "=", "save_dir", "/", "'{:}-{:}'", ".", "format", "(", "mode", ",", "num_iters", ")", "/", "'{:}'", ".", "format", "(", "test_dataset", ")", "\n", "x_save_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "for", "idx", "in", "tqdm", "(", "range", "(", "num_iters", ")", ")", ":", "\n", "# extract image features and labels", "\n", "        ", "if", "mode", "==", "\"val\"", ":", "\n", "          ", "sample", "=", "test_loader", ".", "get_validation_task", "(", "session", ",", "test_dataset", ")", "\n", "", "elif", "mode", "==", "\"test\"", ":", "\n", "          ", "sample", "=", "test_loader", ".", "get_test_task", "(", "session", ",", "test_dataset", ")", "\n", "", "else", ":", "\n", "          ", "raise", "ValueError", "(", "\"invalid mode:{}\"", ".", "format", "(", "mode", ")", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "          ", "context_labels", "=", "sample", "[", "'context_labels'", "]", "\n", "target_labels", "=", "sample", "[", "'target_labels'", "]", "\n", "# batch x #extractors x #features", "\n", "context_features", "=", "extract_features", "(", "extractors", ",", "sample", "[", "'context_images'", "]", ")", "\n", "target_features", "=", "extract_features", "(", "extractors", ",", "sample", "[", "'target_images'", "]", ")", "\n", "to_save_info", "=", "{", "'context_features'", ":", "context_features", ".", "cpu", "(", ")", ",", "\n", "'context_labels'", ":", "context_labels", ".", "cpu", "(", ")", ",", "\n", "'target_features'", ":", "target_features", ".", "cpu", "(", ")", ",", "\n", "'target_labels'", ":", "target_labels", ".", "cpu", "(", ")", "}", "\n", "save_name", "=", "x_save_dir", "/", "'{:06d}.pth'", ".", "format", "(", "idx", ")", "\n", "torch", ".", "save", "(", "to_save_info", ",", "save_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liulu112601_URT.exps.pre-extract-feature.main": [[74, 140], ["pathlib.Path().resolve", "Path().resolve.mkdir", "config_utils.Logger", "config_utils.Logger.print", "xargs.items", "config_utils.Logger.print", "data.meta_dataset_reader.MetaDatasetEpisodeReader", "data.meta_dataset_reader.MetaDatasetEpisodeReader", "collections.OrderedDict", "models.new_model_helpers.get_extractors", "pre-extract-feature.extract_eval_dataset", "pre-extract-feature.extract_eval_dataset", "tensorflow.compat.v1.ConfigProto", "xsave_dir.mkdir", "config_utils.Logger.print", "str", "config_utils.Logger.print", "data.meta_dataset_reader.MetaDatasetEpisodeReader", "tensorflow.compat.v1.Session", "tqdm.tqdm", "pathlib.Path", "utils.time_string", "utils.time_string", "open", "json.load", "utils.time_string", "range", "extractor_domains.index", "train_loader.get_train_task", "random.random", "random.choice", "torch.no_grad", "torch.no_grad", "samples[].cpu", "samples[].cpu", "models.new_model_helpers.extract_features", "models.new_model_helpers.extract_features", "torch.save", "torch.save", "models.new_model_helpers.extract_features.cpu", "samples[].cpu.cpu", "models.new_model_helpers.extract_features.cpu", "samples[].cpu.cpu"], "function", ["home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.get_extractors", "home.repos.pwc.inspect_result.liulu112601_URT.exps.pre-extract-feature.extract_eval_dataset", "home.repos.pwc.inspect_result.liulu112601_URT.exps.pre-extract-feature.extract_eval_dataset", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.logger.Logger.print", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string", "home.repos.pwc.inspect_result.liulu112601_URT.config_utils.utils.time_string", "home.repos.pwc.inspect_result.liulu112601_URT.data.meta_dataset_reader.MetaDatasetEpisodeReader.get_train_task", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.extract_features", "home.repos.pwc.inspect_result.liulu112601_URT.models.new_model_helpers.extract_features"], ["", "", "", "", "", "def", "main", "(", "xargs", ")", ":", "\n", "\n", "# set up logger", "\n", "  ", "log_dir", "=", "Path", "(", "xargs", "[", "'save_dir'", "]", ")", ".", "resolve", "(", ")", "\n", "log_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "#log_dir = \"./NEWsave/{}_{}_allcache_{}_{}_{}_{}_{}_{}\".format(args['train.optimizer'], args['train.scheduler'], args['prop.n_hop'], args['prop.temp'], args['prop.nonlinear'], args['prop.transform'], args['prop.layer_type'], args['prop.layer_type.att_space'])", "\n", "\n", "logger", "=", "Logger", "(", "str", "(", "log_dir", ")", ",", "888", ")", "\n", "logger", ".", "print", "(", "'{:} --- args ---'", ".", "format", "(", "time_string", "(", ")", ")", ")", "\n", "for", "key", ",", "value", "in", "xargs", ".", "items", "(", ")", ":", "\n", "    ", "logger", ".", "print", "(", "'  [{:10s}] : {:}'", ".", "format", "(", "key", ",", "value", ")", ")", "\n", "", "logger", ".", "print", "(", "'{:} --- args ---'", ".", "format", "(", "time_string", "(", ")", ")", ")", "\n", "\n", "# Setting up datasets", "\n", "extractor_domains", "=", "TRAIN_METADATASET_NAMES", "\n", "all_val_datasets", "=", "TRAIN_METADATASET_NAMES", "\n", "all_test_datasets", "=", "ALL_METADATASET_NAMES", "\n", "train_loader_lst", "=", "[", "MetaDatasetEpisodeReader", "(", "'train'", ",", "[", "d", "]", ",", "[", "d", "]", ",", "all_test_datasets", ")", "for", "d", "in", "extractor_domains", "]", "\n", "val_loader", "=", "MetaDatasetEpisodeReader", "(", "'val'", ",", "extractor_domains", ",", "extractor_domains", ",", "all_test_datasets", ")", "\n", "test_loader", "=", "MetaDatasetEpisodeReader", "(", "'test'", ",", "extractor_domains", ",", "extractor_domains", ",", "all_test_datasets", ")", "\n", "class_name_dict", "=", "collections", ".", "OrderedDict", "(", ")", "\n", "for", "d", "in", "extractor_domains", ":", "\n", "    ", "with", "open", "(", "\"{:}/{:}/dataset_spec.json\"", ".", "format", "(", "META_RECORDS_ROOT", ",", "d", ")", ")", "as", "f", ":", "\n", "      ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "class_name_dict", "[", "d", "]", "=", "data", "[", "'class_names'", "]", "\n", "\n", "# initialize the feature extractors", "\n", "", "", "dataset_models", "=", "DATASET_MODELS_DICT", "[", "xargs", "[", "'model.backbone'", "]", "]", "\n", "extractors", "=", "get_extractors", "(", "extractor_domains", ",", "dataset_models", ",", "xargs", "[", "'model.backbone'", "]", ",", "xargs", "[", "'model.classifier'", "]", ",", "False", ")", "\n", "\n", "extract_eval_dataset", "(", "xargs", "[", "'model.backbone'", "]", ",", "'test'", ",", "extractors", ",", "all_test_datasets", ",", "test_loader", ",", "xargs", "[", "'eval.max_iter'", "]", ",", "logger", ",", "log_dir", ")", "\n", "# stop at here", "\n", "extract_eval_dataset", "(", "xargs", "[", "'model.backbone'", "]", ",", "'val'", ",", "extractors", ",", "all_val_datasets", ",", "val_loader", ",", "xargs", "[", "'eval.max_iter'", "]", ",", "logger", ",", "log_dir", ")", "\n", "\n", "config", "=", "tf", ".", "compat", ".", "v1", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "\n", "xsave_dir", "=", "log_dir", "/", "'train-{:}'", ".", "format", "(", "xargs", "[", "'train.max_iter'", "]", ")", "\n", "xsave_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "logger", ".", "print", "(", "'{:} save into {:}'", ".", "format", "(", "time_string", "(", ")", ",", "xsave_dir", ")", ")", "\n", "with", "tf", ".", "compat", ".", "v1", ".", "Session", "(", "config", "=", "config", ")", "as", "session", ":", "\n", "    ", "for", "idx", "in", "tqdm", "(", "range", "(", "xargs", "[", "'train.max_iter'", "]", ")", ")", ":", "\n", "      ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "        ", "ep_domain", "=", "extractor_domains", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "ep_domain", "=", "random", ".", "choice", "(", "extractor_domains", "[", "1", ":", "]", ")", "\n", "", "domain_idx", "=", "extractor_domains", ".", "index", "(", "ep_domain", ")", "\n", "train_loader", "=", "train_loader_lst", "[", "domain_idx", "]", "\n", "samples", "=", "train_loader", ".", "get_train_task", "(", "session", ")", "\n", "# import pdb; pdb.set_trace()", "\n", "domain_extractor", "=", "extractors", "[", "ep_domain", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "# batch x #extractors x #features", "\n", "        ", "context_labels", "=", "samples", "[", "'context_labels'", "]", ".", "cpu", "(", ")", "\n", "target_labels", "=", "samples", "[", "'target_labels'", "]", ".", "cpu", "(", ")", "\n", "context_features", "=", "extract_features", "(", "extractors", ",", "samples", "[", "'context_images'", "]", ")", "\n", "target_features", "=", "extract_features", "(", "extractors", ",", "samples", "[", "'target_images'", "]", ")", "\n", "to_save_info", "=", "{", "'context_features'", ":", "context_features", ".", "cpu", "(", ")", ",", "\n", "'context_labels'", ":", "context_labels", ".", "cpu", "(", ")", ",", "\n", "'target_features'", ":", "target_features", ".", "cpu", "(", ")", ",", "\n", "'target_labels'", ":", "target_labels", ".", "cpu", "(", ")", ",", "\n", "'ep_domain'", ":", "ep_domain", ",", "\n", "'domain_idx'", ":", "domain_idx", "}", "\n", "save_name", "=", "xsave_dir", "/", "'{:06d}.pth'", ".", "format", "(", "idx", ")", "\n", "torch", ".", "save", "(", "to_save_info", ",", "save_name", ")", "\n", "\n"]]}