{"home.repos.pwc.inspect_result.shrezaei_MultitaskTrafficClassification.None.singletask.base_model": [[156, 185], ["keras.layers.Input", "keras.models.Model", "keras.optimizers.Adam", "keras.models.Model.compile", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.MaxPooling1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.MaxPooling1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.MaxPooling1D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense"], "function", ["None"], ["", "def", "base_model", "(", ")", ":", "\n", "\n", "    ", "model_input", "=", "Input", "(", "shape", "=", "(", "timestep", ",", "2", ")", ")", "\n", "\n", "x", "=", "Conv1D", "(", "32", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "model_input", ")", "\n", "x", "=", "Conv1D", "(", "32", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling1D", "(", "pool_size", "=", "(", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv1D", "(", "64", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Conv1D", "(", "64", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling1D", "(", "pool_size", "=", "(", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv1D", "(", "128", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Conv1D", "(", "128", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling1D", "(", "pool_size", "=", "(", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "Flatten", "(", ")", "(", "x", ")", "\n", "\n", "x3", "=", "Dense", "(", "256", ")", "(", "x", ")", "\n", "x3", "=", "Activation", "(", "'relu'", ")", "(", "x3", ")", "\n", "x3", "=", "Dense", "(", "256", ")", "(", "x3", ")", "\n", "x3", "=", "Activation", "(", "'relu'", ")", "(", "x3", ")", "\n", "output3", "=", "Dense", "(", "num_class", ",", "activation", "=", "'softmax'", ",", "name", "=", "'Class'", ")", "(", "x3", ")", "\n", "\n", "model", "=", "Model", "(", "inputs", "=", "model_input", ",", "outputs", "=", "[", "output3", "]", ")", "\n", "opt", "=", "Adam", "(", "clipnorm", "=", "1.", ")", "\n", "model", ".", "compile", "(", "loss", "=", "'categorical_crossentropy'", ",", "optimizer", "=", "opt", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shrezaei_MultitaskTrafficClassification.None.multitaskMasked.base_model": [[162, 198], ["keras.layers.Input", "keras.layers.Input", "keras.layers.multiply", "keras.models.Model", "keras.optimizers.Adam", "keras.models.Model.compile", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.MaxPooling1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.MaxPooling1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.MaxPooling1D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense"], "function", ["None"], ["def", "base_model", "(", ")", ":", "\n", "\n", "    ", "model_input", "=", "Input", "(", "shape", "=", "(", "timestep", ",", "2", ")", ")", "\n", "mask_input", "=", "Input", "(", "shape", "=", "(", "256", ",", ")", ")", "\n", "\n", "x", "=", "Conv1D", "(", "32", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "model_input", ")", "\n", "x", "=", "Conv1D", "(", "32", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling1D", "(", "pool_size", "=", "(", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv1D", "(", "64", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Conv1D", "(", "64", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling1D", "(", "pool_size", "=", "(", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv1D", "(", "128", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Conv1D", "(", "128", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling1D", "(", "pool_size", "=", "(", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "Flatten", "(", ")", "(", "x", ")", "\n", "\n", "x", "=", "Dense", "(", "256", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "256", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "\n", "output1", "=", "Dense", "(", "5", ",", "activation", "=", "'softmax'", ",", "name", "=", "'Bandwidth'", ")", "(", "x", ")", "\n", "\n", "output2", "=", "Dense", "(", "4", ",", "activation", "=", "'softmax'", ",", "name", "=", "'Duration'", ")", "(", "x", ")", "\n", "\n", "x3", "=", "multiply", "(", "[", "x", ",", "mask_input", "]", ")", "\n", "output3", "=", "Dense", "(", "5", ",", "activation", "=", "'softmax'", ",", "name", "=", "'Class'", ")", "(", "x3", ")", "\n", "\n", "model", "=", "Model", "(", "inputs", "=", "[", "model_input", ",", "mask_input", "]", ",", "outputs", "=", "[", "output1", ",", "output2", ",", "output3", "]", ")", "\n", "opt", "=", "Adam", "(", "clipnorm", "=", "1.", ")", "\n", "model", ".", "compile", "(", "loss", "=", "[", "'categorical_crossentropy'", ",", "'categorical_crossentropy'", ",", "'categorical_crossentropy'", "]", ",", "loss_weights", "=", "[", "1", ",", "1", ",", "lambda_value", "]", ",", "optimizer", "=", "opt", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shrezaei_MultitaskTrafficClassification.None.dataProcessQuic.loadData": [[33, 189], ["os.listdir", "os.walk", "print", "numpy.random.shuffle", "str", "numpy.array", "numpy.array", "open", "len", "range", "labellist.extend", "print", "str", "f.readline.split", "numpy.array().astype", "range", "numpy.nan_to_num", "datalist.append", "np.array().astype.append", "print", "pdb.set_trace", "numpy.sum", "f.readline", "numpy.random.randint", "list", "len", "str", "print", "pdb.set_trace", "numpy.array", "str", "str", "len", "len", "int", "float", "str", "str", "float", "float", "float", "print", "int", "len", "len", "len", "pad.extend", "str", "float", "str", "float", "len", "pad.extend", "linedata.extend", "int", "float", "numpy.ones", "float", "len"], "function", ["None"], ["def", "loadData", "(", "dirPath", ",", "class_label", ",", "extractedFlows", "=", "0", ")", ":", "\n", "#If it is not set, use the global value", "\n", "    ", "if", "extractedFlows", "==", "0", ":", "\n", "        ", "extractedFlows", "=", "Num_of_extracted_subflow", "\n", "\n", "", "pathDir", "=", "os", ".", "listdir", "(", "dirPath", ")", "\n", "\n", "datalist", "=", "[", "]", "\n", "labellist", "=", "[", "]", "\n", "FileCounter", "=", "0", "\n", "FlowCounter", "=", "0", "\n", "SubflowCounter", "=", "0", "\n", "\n", "# added by Shahbaz", "\n", "custom_features", "=", "[", "\n", "# 0,    #timestamp", "\n", "1", ",", "# RelativeTime", "\n", "2", ",", "# length", "\n", "# 3    #Direction", "\n", "]", "\n", "\n", "for", "folder", ",", "subs", ",", "files", "in", "os", ".", "walk", "(", "dirPath", ")", ":", "\n", "\n", "# if FlowCounter > 1000:", "\n", "#     break", "\n", "\n", "        ", "np", ".", "random", ".", "shuffle", "(", "files", ")", "\n", "\n", "for", "file", "in", "files", ":", "\n", "            ", "filename", "=", "folder", "+", "\"/\"", "+", "file", "\n", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "\n", "                ", "FileCounter", "+=", "1", "\n", "\n", "EntireFile", "=", "[", "]", "\n", "for", "line", "in", "f", ":", "\n", "                    ", "data", "=", "line", ".", "split", "(", ")", "\n", "try", ":", "\n", "                        ", "EntireFile", ".", "append", "(", "data", ")", "\n", "", "except", ":", "\n", "                        ", "print", "(", "EntireFile", ")", "\n", "pdb", ".", "set_trace", "(", ")", "\n", "", "", "try", ":", "\n", "                    ", "EntireFile", "=", "np", ".", "array", "(", "EntireFile", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "", "except", ":", "\n", "                    ", "print", "(", "EntireFile", ")", "\n", "pdb", ".", "set_trace", "(", ")", "\n", "\n", "", "FileLenght", "=", "len", "(", "EntireFile", ")", "\n", "\n", "if", "CompureStatisticsInThisScript", ":", "\n", "                    ", "Duration", "=", "EntireFile", "[", "-", "1", ",", "1", "]", "\n", "Bandwidth", "=", "np", ".", "sum", "(", "EntireFile", "[", ":", ",", "2", "]", ")", "/", "Duration", "\n", "temp_label", "=", "[", "Bandwidth", ",", "Duration", ",", "class_label", "]", "\n", "\n", "", "SubflowFromAFile", "=", "0", "\n", "\n", "#Skip the fist few packets in the file", "\n", "if", "(", "Starting_point", "!=", "0", ")", ":", "\n", "                    ", "for", "jjj", "in", "range", "(", "Starting_point", ")", ":", "\n", "                        ", "line", "=", "f", ".", "readline", "(", ")", "\n", "if", "not", "line", ":", "\n", "                            ", "break", "\n", "\n", "", "", "", "for", "subflow", "in", "range", "(", "extractedFlows", ")", ":", "\n", "\n", "                    ", "startingPoint", "=", "0", "\n", "if", "subflow", "==", "0", ":", "\n", "                        ", "startingPoint", "=", "0", "\n", "", "else", ":", "\n", "                        ", "startingPoint", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "FileLenght", "-", "timestep", ")", "\n", "# startingPoint = Starting_point + subflow*StartingPointMultiply", "\n", "\n", "", "linedata", "=", "[", "]", "\n", "Prev_time", "=", "0", ";", "#Time of the first packet in the subflow", "\n", "\n", "numOfSamples", "=", "0", "\n", "i", "=", "startingPoint", "\n", "SkipSamples", "=", "SkipPacketsForSampling", "\n", "while", "(", "numOfSamples", "<", "timestep", ")", ":", "\n", "                        ", "if", "i", ">=", "FileLenght", ":", "\n", "                            ", "break", "\n", "\n", "", "data", "=", "list", "(", "EntireFile", "[", "i", "]", ")", "#To clone the list, not refering to the same list", "\n", "\n", "#shahbaz: To descretesize the the length", "\n", "if", "DescretesizeLength", ":", "\n", "                            ", "data", "[", "2", "]", "=", "str", "(", "int", "(", "int", "(", "data", "[", "2", "]", ")", "/", "100", ")", ")", "\n", "\n", "", "if", "DirectionLengthCombined", ":", "\n", "                            ", "if", "data", "[", "3", "]", "==", "\"0\"", ":", "\n", "                                ", "if", "float", "(", "data", "[", "2", "]", ")", ">", "0", ":", "\n", "                                    ", "data", "[", "2", "]", "=", "str", "(", "-", "1", "*", "float", "(", "data", "[", "2", "]", ")", ")", "\n", "\n", "", "", "", "if", "NormalizeLength", ":", "\n", "                            ", "data", "[", "2", "]", "=", "str", "(", "float", "(", "data", "[", "2", "]", ")", "/", "MaxLength", ")", "\n", "\n", "", "if", "ComputeInterArrival", ":", "\n", "                            ", "if", "i", "==", "startingPoint", ":", "\n", "                                ", "Prev_time", "=", "float", "(", "data", "[", "1", "]", ")", "\n", "data", "[", "1", "]", "=", "str", "(", "0", ")", "\n", "", "else", ":", "\n", "                                ", "temporary", "=", "str", "(", "float", "(", "data", "[", "1", "]", ")", "-", "Prev_time", ")", "\n", "Prev_time", "=", "float", "(", "data", "[", "1", "]", ")", "\n", "data", "[", "1", "]", "=", "temporary", "\n", "", "", "if", "NormalizeInterArrival", ":", "\n", "                            ", "ttt", "=", "float", "(", "data", "[", "1", "]", ")", "/", "MaxInterArrival", "\n", "if", "ttt", ">", "1", ":", "\n", "                                ", "ttt", "=", "1", "\n", "", "data", "[", "1", "]", "=", "(", "ttt", "-", "0.5", ")", "*", "2", "\n", "\n", "\n", "", "try", ":", "\n", "                            ", "data2", "=", "[", "float", "(", "data", "[", "j", "]", ")", "for", "j", "in", "custom_features", "]", "\n", "", "except", "(", "IndexError", ",", "ValueError", ")", "as", "e", ":", "\n", "                            ", "pass", "\n", "print", "(", "\"Couldn't retrieve all data\"", ",", "filename", ")", "\n", "", "else", ":", "\n", "                            ", "linedata", "+=", "data2", "\n", "\n", "", "numOfSamples", "+=", "1", "\n", "i", "+=", "SkipSamples", "\n", "if", "IncrementalSampling", ":", "\n", "                            ", "if", "numOfSamples", "%", "NumberOfSamplesUntiIncrement", "==", "0", ":", "\n", "                                ", "SkipSamples", "=", "int", "(", "SkipSamples", "*", "IncrementalStepMultiplier", ")", "\n", "\n", "\n", "", "", "", "if", "(", "len", "(", "linedata", ")", "<", "len", "(", "custom_features", ")", "*", "timestep", ")", ":", "\n", "                        ", "if", "(", "PaddingThreshold", ">", "len", "(", "linedata", ")", "/", "len", "(", "custom_features", ")", ")", ":", "\n", "                            ", "continue", "\n", "#print(linedata)", "\n", "", "if", "(", "PaddingEnable", ")", ":", "\n", "                            ", "while", "(", "len", "(", "linedata", ")", "<", "len", "(", "custom_features", ")", "*", "timestep", ")", ":", "\n", "                                ", "pad", "=", "[", "]", "\n", "pad", ".", "extend", "(", "np", ".", "ones", "(", "len", "(", "custom_features", ")", ")", "*", "0", ")", "\n", "if", "PadAtTheBegining", ":", "\n", "                                    ", "pad", ".", "extend", "(", "linedata", ")", "\n", "linedata", "=", "pad", "\n", "", "else", ":", "\n", "                                    ", "linedata", ".", "extend", "(", "pad", ")", "\n", "#print(linedata)", "\n", "", "", "", "else", ":", "\n", "                            ", "continue", "\n", "", "", "np", ".", "nan_to_num", "(", "linedata", ")", "\n", "datalist", ".", "append", "(", "linedata", ")", "\n", "\n", "SubflowCounter", "+=", "1", "\n", "SubflowFromAFile", "+=", "1", "\n", "\n", "", "total_labels", "=", "[", "temp_label", "]", "*", "SubflowFromAFile", "\n", "labellist", ".", "extend", "(", "total_labels", ")", "\n", "FlowCounter", "+=", "1", "\n", "print", "(", "filename", ",", "temp_label", ")", "\n", "", "", "", "ratio", "=", "SubflowCounter", "/", "FlowCounter", "\n", "print", "(", "dirPath", "+", "\":\"", "+", "str", "(", "FlowCounter", ")", "+", "\"/\"", "+", "str", "(", "len", "(", "pathDir", ")", ")", "+", "\" - Subflows:\"", "+", "str", "(", "SubflowCounter", ")", "+", "\" - Ratio:\"", ",", "str", "(", "ratio", ")", ")", "\n", "return", "(", "np", ".", "array", "(", "datalist", ")", ",", "np", ".", "array", "(", "labellist", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shrezaei_MultitaskTrafficClassification.None.transferlearning.base_model": [[143, 173], ["keras.layers.Input", "keras.models.Model", "keras.optimizers.Adam", "keras.models.Model.compile", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.MaxPooling1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.MaxPooling1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.Conv1D", "keras.layers.convolutional.MaxPooling1D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense", "keras.layers.Dense"], "function", ["None"], ["def", "base_model", "(", ")", ":", "\n", "\n", "    ", "model_input", "=", "Input", "(", "shape", "=", "(", "timestep", ",", "2", ")", ")", "\n", "\n", "x", "=", "Conv1D", "(", "32", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "model_input", ")", "\n", "x", "=", "Conv1D", "(", "32", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling1D", "(", "pool_size", "=", "(", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv1D", "(", "64", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Conv1D", "(", "64", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling1D", "(", "pool_size", "=", "(", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv1D", "(", "128", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Conv1D", "(", "128", ",", "3", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling1D", "(", "pool_size", "=", "(", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "Flatten", "(", ")", "(", "x", ")", "\n", "\n", "x1", "=", "Dense", "(", "256", ")", "(", "x", ")", "\n", "x1", "=", "Activation", "(", "'relu'", ")", "(", "x1", ")", "\n", "x1", "=", "Dense", "(", "256", ",", "name", "=", "'feature_extractor'", ")", "(", "x1", ")", "\n", "x1", "=", "Activation", "(", "'relu'", ")", "(", "x1", ")", "\n", "output1", "=", "Dense", "(", "5", ",", "activation", "=", "'softmax'", ",", "name", "=", "'Bandwidth'", ")", "(", "x1", ")", "\n", "output2", "=", "Dense", "(", "4", ",", "activation", "=", "'softmax'", ",", "name", "=", "'Duration'", ")", "(", "x1", ")", "\n", "\n", "model", "=", "Model", "(", "inputs", "=", "model_input", ",", "outputs", "=", "[", "output1", ",", "output2", "]", ")", "\n", "opt", "=", "Adam", "(", "clipnorm", "=", "1.", ")", "\n", "model", ".", "compile", "(", "loss", "=", "[", "'categorical_crossentropy'", ",", "'categorical_crossentropy'", "]", ",", "optimizer", "=", "opt", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shrezaei_MultitaskTrafficClassification.None.transferlearning.target_model": [[180, 188], ["keras.models.Model", "keras.optimizers.Adam", "keras.models.Model.compile", "source_model.get_layer", "keras.layers.Dense"], "function", ["None"], ["def", "target_model", "(", "source_model", ")", ":", "\n", "    ", "feature_extractor_layer", "=", "source_model", ".", "get_layer", "(", "'feature_extractor'", ")", ".", "output", "\n", "output", "=", "Dense", "(", "5", ",", "activation", "=", "'softmax'", ",", "name", "=", "'TrafficClass'", ")", "(", "feature_extractor_layer", ")", "\n", "\n", "target_model", "=", "Model", "(", "inputs", "=", "source_model", ".", "input", ",", "outputs", "=", "output", ")", "\n", "opt", "=", "Adam", "(", "clipnorm", "=", "1.", ")", "\n", "target_model", ".", "compile", "(", "loss", "=", "'categorical_crossentropy'", ",", "optimizer", "=", "opt", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "return", "target_model", "\n", "\n"]]}