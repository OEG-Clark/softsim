{"home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.check_mnist_dir": [[12, 21], ["numpy.all", "generator.download_mnist", "print", "os.isfile", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "os.join"], "function", ["home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.download_mnist"], ["def", "check_mnist_dir", "(", "data_dir", ")", ":", "\n", "\n", "    ", "downloaded", "=", "np", ".", "all", "(", "[", "osp", ".", "isfile", "(", "osp", ".", "join", "(", "data_dir", ",", "key", ")", ")", "for", "key", "in", "mnist_keys", "]", ")", "\n", "if", "not", "downloaded", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "data_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "data_dir", ")", "\n", "", "download_mnist", "(", "data_dir", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'MNIST was found'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.download_mnist": [[23, 36], ["os.path.join", "os.path.join", "print", "subprocess.call", "print", "subprocess.call", "locals"], "function", ["None"], ["", "", "def", "download_mnist", "(", "data_dir", ")", ":", "\n", "\n", "    ", "data_url", "=", "'http://yann.lecun.com/exdb/mnist/'", "\n", "for", "k", "in", "mnist_keys", ":", "\n", "        ", "k", "+=", "'.gz'", "\n", "url", "=", "(", "data_url", "+", "k", ")", ".", "format", "(", "**", "locals", "(", ")", ")", "\n", "target_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "k", ")", "\n", "cmd", "=", "[", "'curl'", ",", "url", ",", "'-o'", ",", "target_path", "]", "\n", "print", "(", "'Downloading '", ",", "k", ")", "\n", "subprocess", ".", "call", "(", "cmd", ")", "\n", "cmd", "=", "[", "'gunzip'", ",", "'-d'", ",", "target_path", "]", "\n", "print", "(", "'Unzip '", ",", "k", ")", "\n", "subprocess", ".", "call", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.extract_mnist": [[38, 61], ["open", "numpy.fromfile", "loaded[].reshape", "open", "numpy.fromfile", "numpy.asarray", "open", "numpy.fromfile", "loaded[].reshape", "open", "numpy.fromfile", "numpy.asarray", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "loaded[].reshape", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "loaded[].reshape", "numpy.concatenate", "numpy.concatenate"], "function", ["None"], ["", "", "def", "extract_mnist", "(", "data_dir", ")", ":", "\n", "\n", "    ", "num_mnist_train", "=", "60000", "\n", "num_mnist_test", "=", "10000", "\n", "\n", "fd", "=", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'train-images-idx3-ubyte'", ")", ")", "\n", "loaded", "=", "np", ".", "fromfile", "(", "file", "=", "fd", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "train_image", "=", "loaded", "[", "16", ":", "]", ".", "reshape", "(", "(", "num_mnist_train", ",", "28", ",", "28", ",", "1", ")", ")", "\n", "\n", "fd", "=", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'train-labels-idx1-ubyte'", ")", ")", "\n", "loaded", "=", "np", ".", "fromfile", "(", "file", "=", "fd", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "train_label", "=", "np", ".", "asarray", "(", "loaded", "[", "8", ":", "]", ".", "reshape", "(", "(", "num_mnist_train", ")", ")", ")", "\n", "\n", "fd", "=", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'t10k-images-idx3-ubyte'", ")", ")", "\n", "loaded", "=", "np", ".", "fromfile", "(", "file", "=", "fd", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "test_image", "=", "loaded", "[", "16", ":", "]", ".", "reshape", "(", "(", "num_mnist_test", ",", "28", ",", "28", ",", "1", ")", ")", "\n", "\n", "fd", "=", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'t10k-labels-idx1-ubyte'", ")", ")", "\n", "loaded", "=", "np", ".", "fromfile", "(", "file", "=", "fd", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "test_label", "=", "np", ".", "asarray", "(", "loaded", "[", "8", ":", "]", ".", "reshape", "(", "(", "num_mnist_test", ")", ")", ")", "\n", "\n", "return", "np", ".", "concatenate", "(", "(", "train_image", ",", "test_image", ")", ")", ",", "np", ".", "concatenate", "(", "(", "train_label", ",", "test_label", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.sample_coordinate": [[63, 68], ["numpy.random.randint", "numpy.zeros().astype", "numpy.zeros"], "function", ["None"], ["", "def", "sample_coordinate", "(", "high", ",", "size", ")", ":", "\n", "    ", "if", "high", ">", "0", ":", "\n", "        ", "return", "np", ".", "random", ".", "randint", "(", "high", ",", "size", "=", "size", ")", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "zeros", "(", "size", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.generator": [[70, 138], ["generator.check_mnist_dir", "generator.extract_mnist", "numpy.random.RandomState", "len", "list", "np.random.RandomState.shuffle", "range", "numpy.random.seed", "enumerate", "numpy.unique", "len", "numpy.array", "int", "indexes.append", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "os.join", "print", "enumerate", "numpy.unique", "range", "list", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "str", "os.join", "print", "range", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "numpy.zeros().astype", "generator.sample_coordinate", "generator.sample_coordinate", "range", "os.join", "imageio.imwrite", "float", "numpy.sum", "numpy.where", "len", "int", "numpy.squeeze", "len", "range", "numpy.zeros", "range", "numpy.random.choice"], "function", ["home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.check_mnist_dir", "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.extract_mnist", "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.sample_coordinate", "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.sample_coordinate"], ["", "", "def", "generator", "(", "config", ")", ":", "\n", "# check if mnist is downloaded. if not, download it", "\n", "    ", "check_mnist_dir", "(", "config", ".", "mnist_path", ")", "\n", "\n", "# extract mnist images and labels", "\n", "image", ",", "label", "=", "extract_mnist", "(", "config", ".", "mnist_path", ")", "\n", "h", ",", "w", "=", "image", ".", "shape", "[", "1", ":", "3", "]", "\n", "\n", "# split: train, val, test", "\n", "rs", "=", "np", ".", "random", ".", "RandomState", "(", "config", ".", "random_seed", ")", "\n", "num_original_class", "=", "len", "(", "np", ".", "unique", "(", "label", ")", ")", "\n", "num_class", "=", "len", "(", "np", ".", "unique", "(", "label", ")", ")", "**", "config", ".", "num_digit", "\n", "classes", "=", "list", "(", "np", ".", "array", "(", "range", "(", "num_class", ")", ")", ")", "\n", "rs", ".", "shuffle", "(", "classes", ")", "\n", "num_train", ",", "num_val", ",", "num_test", "=", "[", "\n", "int", "(", "float", "(", "ratio", ")", "/", "np", ".", "sum", "(", "config", ".", "train_val_test_ratio", ")", "*", "num_class", ")", "\n", "for", "ratio", "in", "config", ".", "train_val_test_ratio", "]", "\n", "train_classes", "=", "classes", "[", ":", "num_train", "]", "\n", "val_classes", "=", "classes", "[", "num_train", ":", "num_train", "+", "num_val", "]", "\n", "test_classes", "=", "classes", "[", "num_train", "+", "num_val", ":", "]", "\n", "\n", "# label index", "\n", "indexes", "=", "[", "]", "\n", "for", "c", "in", "range", "(", "num_original_class", ")", ":", "\n", "        ", "indexes", ".", "append", "(", "list", "(", "np", ".", "where", "(", "label", "==", "c", ")", "[", "0", "]", ")", ")", "\n", "\n", "# generate images for every class", "\n", "", "assert", "config", ".", "image_size", "[", "1", "]", "//", "config", ".", "num_digit", ">=", "w", "\n", "np", ".", "random", ".", "seed", "(", "config", ".", "random_seed", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "multimnist_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "multimnist_path", ")", "\n", "\n", "", "split_classes", "=", "[", "train_classes", ",", "val_classes", ",", "test_classes", "]", "\n", "count", "=", "1", "\n", "for", "i", ",", "split_name", "in", "enumerate", "(", "[", "'train'", ",", "'val'", ",", "'test'", "]", ")", ":", "\n", "        ", "path", "=", "osp", ".", "join", "(", "config", ".", "multimnist_path", ",", "split_name", ")", "\n", "print", "(", "'Generat images for {} at {}'", ".", "format", "(", "split_name", ",", "path", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "for", "j", ",", "current_class", "in", "enumerate", "(", "split_classes", "[", "i", "]", ")", ":", "\n", "            ", "class_str", "=", "str", "(", "current_class", ")", "\n", "class_str", "=", "'0'", "*", "(", "config", ".", "num_digit", "-", "len", "(", "class_str", ")", ")", "+", "class_str", "\n", "class_path", "=", "osp", ".", "join", "(", "path", ",", "class_str", ")", "\n", "print", "(", "'{} (progress: {}/{})'", ".", "format", "(", "class_path", ",", "count", ",", "len", "(", "classes", ")", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "class_path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "class_path", ")", "\n", "", "for", "k", "in", "range", "(", "config", ".", "num_image_per_class", ")", ":", "\n", "# sample images", "\n", "                ", "digits", "=", "[", "int", "(", "class_str", "[", "l", "]", ")", "for", "l", "in", "range", "(", "config", ".", "num_digit", ")", "]", "\n", "imgs", "=", "[", "np", ".", "squeeze", "(", "image", "[", "np", ".", "random", ".", "choice", "(", "indexes", "[", "d", "]", ")", "]", ")", "for", "d", "in", "digits", "]", "\n", "background", "=", "np", ".", "zeros", "(", "(", "config", ".", "image_size", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "# sample coordinates", "\n", "ys", "=", "sample_coordinate", "(", "config", ".", "image_size", "[", "0", "]", "-", "h", ",", "config", ".", "num_digit", ")", "\n", "xs", "=", "sample_coordinate", "(", "config", ".", "image_size", "[", "1", "]", "//", "config", ".", "num_digit", "-", "w", ",", "\n", "size", "=", "config", ".", "num_digit", ")", "\n", "xs", "=", "[", "l", "*", "config", ".", "image_size", "[", "1", "]", "//", "config", ".", "num_digit", "+", "xs", "[", "l", "]", "\n", "for", "l", "in", "range", "(", "config", ".", "num_digit", ")", "]", "\n", "# combine images", "\n", "for", "i", "in", "range", "(", "config", ".", "num_digit", ")", ":", "\n", "                    ", "background", "[", "ys", "[", "i", "]", ":", "ys", "[", "i", "]", "+", "h", ",", "xs", "[", "i", "]", ":", "xs", "[", "i", "]", "+", "w", "]", "=", "imgs", "[", "i", "]", "\n", "# write the image", "\n", "", "image_path", "=", "osp", ".", "join", "(", "class_path", ",", "'{}_{}.png'", ".", "format", "(", "k", ",", "class_str", ")", ")", "\n", "# image_path = osp.join(config.multimnist_path, '{}_{}_{}.png'.format(split_name, k, class_str))", "\n", "imwrite", "(", "image_path", ",", "background", ")", "\n", "", "count", "+=", "1", "\n", "\n", "", "", "return", "image", ",", "label", ",", "indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.argparser": [[140, 159], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "v.lower"], "function", ["None"], ["", "def", "argparser", "(", ")", ":", "\n", "\n", "    ", "def", "str2bool", "(", "v", ")", ":", "\n", "        ", "return", "v", ".", "lower", "(", ")", "==", "'true'", "\n", "\n", "", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "'--mnist_path'", ",", "type", "=", "str", ",", "default", "=", "'./datasets/mnist/'", ",", "\n", "help", "=", "'path to *.gz files'", ")", "\n", "parser", ".", "add_argument", "(", "'--multimnist_path'", ",", "type", "=", "str", ",", "default", "=", "'./datasets/multimnist'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_digit'", ",", "type", "=", "int", ",", "default", "=", "2", ")", "\n", "parser", ".", "add_argument", "(", "'--train_val_test_ratio'", ",", "type", "=", "int", ",", "nargs", "=", "'+'", ",", "\n", "default", "=", "[", "64", ",", "16", ",", "20", "]", ",", "help", "=", "'percentage'", ")", "\n", "parser", ".", "add_argument", "(", "'--image_size'", ",", "type", "=", "int", ",", "nargs", "=", "'+'", ",", "\n", "default", "=", "[", "64", ",", "64", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--num_image_per_class'", ",", "type", "=", "int", ",", "default", "=", "10000", ")", "\n", "parser", ".", "add_argument", "(", "'--random_seed'", ",", "type", "=", "int", ",", "default", "=", "123", ")", "\n", "config", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.main": [[161, 168], ["generator.argparser", "generator.generator", "len", "sum", "len"], "function", ["home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.argparser", "home.repos.pwc.inspect_result.shaohua0116_MultiDigitMNIST.None.generator.generator"], ["", "def", "main", "(", ")", ":", "\n", "\n", "    ", "config", "=", "argparser", "(", ")", "\n", "assert", "len", "(", "config", ".", "train_val_test_ratio", ")", "==", "3", "\n", "assert", "sum", "(", "config", ".", "train_val_test_ratio", ")", "==", "100", "\n", "assert", "len", "(", "config", ".", "image_size", ")", "==", "2", "\n", "generator", "(", "config", ")", "\n", "\n"]]}