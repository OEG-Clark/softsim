{"home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.opts.opts.__init__": [[10, 118], ["argparse.ArgumentParser", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument", "opts.opts.parser.add_argument"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "# basical experiment settings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--task'", ",", "default", "=", "''", ",", "\n", "help", "=", "'current task'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--exp_id'", ",", "default", "=", "'default'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--model_name'", ",", "default", "=", "'None'", ",", "\n", "help", "=", "'current model name'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--load_model'", ",", "default", "=", "''", ",", "\n", "help", "=", "'path to load model'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--rgb_model'", ",", "default", "=", "''", ",", "\n", "help", "=", "'path to rgb model'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "317", ",", "\n", "help", "=", "'random seed'", ")", "\n", "\n", "\n", "# model seeting", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "'dla_34'", ",", "#dla_34", "\n", "help", "=", "'model architecture. Currently tested'", "\n", "'resnet_18 | resnet_101 | dla_34 | I3Dresnet_50 | S3Dresnet50 | TAMresnet_50 | TEAresnet_50 | TDNresnet_50 | TINresnet_50 | TSMresnet_50| MSresnet_50'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--set_head_conv'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ",", "\n", "help", "=", "'conv layer channels for output head'", "\n", "'default setting is 256 for dla and 256 for resnet(except for wh branch) '", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--down_ratio'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "\n", "help", "=", "'output stride. Currently only supports 4.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--K'", ",", "type", "=", "int", ",", "default", "=", "8", ",", "\n", "help", "=", "'length of action tube'", ")", "\n", "\n", "\n", "# system settings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--gpus'", ",", "default", "=", "'0,1'", ",", "\n", "help", "=", "'visible gpu list, use comma for multiple gpus'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "type", "=", "int", ",", "default", "=", "16", ",", "\n", "help", "=", "'dataloader threads. 0 for single-thread.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "\n", "help", "=", "'batch size'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--master_batch_size'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ",", "\n", "help", "=", "'batch size on the master gpu. -1 by default'", ")", "\n", "\n", "# learning rate settings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "5e-4", ",", "\n", "help", "=", "'learning rate for batch size 32.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lr_step'", ",", "type", "=", "str", ",", "default", "=", "'6,8'", ",", "\n", "help", "=", "'drop learning rate by 10.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--num_epochs'", ",", "type", "=", "int", ",", "default", "=", "30", ",", "\n", "help", "=", "'total training epochs.'", ")", "\n", "\n", "# dataset seetings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "'IODVideo'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--split'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "' 3 splits for IODVideo'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_height'", ",", "type", "=", "int", ",", "default", "=", "288", ",", "\n", "help", "=", "'input image height'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_width'", ",", "type", "=", "int", ",", "default", "=", "288", ",", "\n", "help", "=", "'input image width'", ")", "\n", "\n", "# training settings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--pretrain_model'", ",", "default", "=", "'imagenet'", ",", "\n", "help", "=", "'training pretrain_model, imagenet'", ")", "\n", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--auto_stop'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'auto_stop when training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--save_all'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'save each epoch training model'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--val_epoch'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'val after each epoch'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--visual_per_inter'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "\n", "help", "=", "'iter for draw loss by tensorboardX'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--loss_option'", ",", "default", "=", "'STAloss'", ",", "\n", "help", "=", "'MOV or STAloss, MOV is the original implementation'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--temporal_interal'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "\n", "help", "=", "'the hyperparameter between two adjacent frames along the temporal axis'", ")", "\n", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--record_epoch'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "'record_epoch num'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--start_epoch'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "'strat epoch, used for recover experiment'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--pin_memory'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'set pin_memory True'", ")", "\n", "\n", "# loss ratio settings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--hm_weight'", ",", "type", "=", "float", ",", "default", "=", "1", ",", "\n", "help", "=", "'loss weight for center heatmaps.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--mov_weight'", ",", "type", "=", "float", ",", "default", "=", "1", ",", "\n", "help", "=", "'loss weight for moving offsets.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--wh_weight'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "\n", "help", "=", "'loss weight for bbox regression.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--sta_weight'", ",", "type", "=", "float", ",", "default", "=", "1", ",", "\n", "help", "=", "'loss weight for spatio-temporal aggregation.'", ")", "\n", "\n", "# inference settings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--redo'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'redo for count APs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--N'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "\n", "help", "=", "'max number of output objects in the inference.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--max_objs'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "\n", "help", "=", "'max number of objects to be detected in the training.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--inference_dir'", ",", "default", "=", "'tmp'", ",", "\n", "help", "=", "'directory for inferencing'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--th'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "\n", "help", "=", "'threshod for ACT.py'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--pkl_ACT'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "'using TrueLeakedGas_ACT.pkl'", ")", "\n", "\n", "# log", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--print_log'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'print log info'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.opts.opts.parse": [[119, 161], ["range", "os.path.join", "opts.opts.parser.parse_args", "opts.opts.parser.parse_args", "int", "int", "opts.opts.chunk_sizes.append", "os.path.dirname", "opts.opts.gpus.split", "opts.opts.lr_step.split", "len", "len", "range", "len", "len", "len"], "methods", ["None"], ["", "def", "parse", "(", "self", ",", "args", "=", "''", ")", ":", "\n", "        ", "if", "args", "==", "''", ":", "\n", "            ", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", ")", "\n", "", "else", ":", "\n", "            ", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", "args", ")", "\n", "\n", "", "opt", ".", "gpus_str", "=", "opt", ".", "gpus", "\n", "opt", ".", "gpus", "=", "[", "int", "(", "gpu", ")", "for", "gpu", "in", "opt", ".", "gpus", ".", "split", "(", "','", ")", "]", "\n", "opt", ".", "gpus", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "opt", ".", "gpus", ")", ")", "]", "if", "opt", ".", "gpus", "[", "0", "]", ">=", "0", "else", "[", "-", "1", "]", "\n", "opt", ".", "lr_step", "=", "[", "int", "(", "i", ")", "for", "i", "in", "opt", ".", "lr_step", ".", "split", "(", "','", ")", "]", "\n", "\n", "if", "opt", ".", "set_head_conv", "!=", "-", "1", ":", "\n", "            ", "opt", ".", "head_conv", "=", "opt", ".", "set_head_conv", "\n", "", "elif", "'dla'", "in", "opt", ".", "arch", ":", "\n", "            ", "opt", ".", "head_conv", "=", "256", "\n", "", "elif", "'resnet'", "in", "opt", ".", "arch", ":", "\n", "            ", "opt", ".", "head_conv", "=", "256", "\n", "\n", "#opt.mean = [0.485, 0.456, 0.406]", "\n", "#opt.std = [0.229, 0.224, 0.225]", "\n", "\n", "# the lower offset_h_ratio and offset_w_ratio set is helpful for the training stability when K is small", "\n", "", "opt", ".", "offset_h_ratio", "=", "opt", ".", "resize_height", "//", "opt", ".", "down_ratio", "//", "4", "\n", "opt", ".", "offset_w_ratio", "=", "opt", ".", "resize_width", "//", "opt", ".", "down_ratio", "//", "4", "\n", "\n", "opt", ".", "mean", "=", "[", "0.40789654", ",", "0.44719302", ",", "0.47026115", "]", "\n", "opt", ".", "std", "=", "[", "0.28863828", ",", "0.27408164", ",", "0.27809835", "]", "\n", "if", "opt", ".", "master_batch_size", "==", "-", "1", ":", "\n", "            ", "opt", ".", "master_batch_size", "=", "opt", ".", "batch_size", "//", "len", "(", "opt", ".", "gpus", ")", "\n", "", "rest_batch_size", "=", "(", "opt", ".", "batch_size", "-", "opt", ".", "master_batch_size", ")", "\n", "opt", ".", "chunk_sizes", "=", "[", "opt", ".", "master_batch_size", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "opt", ".", "gpus", ")", "-", "1", ")", ":", "\n", "            ", "slave_chunk_size", "=", "rest_batch_size", "//", "(", "len", "(", "opt", ".", "gpus", ")", "-", "1", ")", "\n", "if", "i", "<", "rest_batch_size", "%", "(", "len", "(", "opt", ".", "gpus", ")", "-", "1", ")", ":", "\n", "                ", "slave_chunk_size", "+=", "1", "\n", "", "opt", ".", "chunk_sizes", ".", "append", "(", "slave_chunk_size", ")", "\n", "\n", "", "opt", ".", "root_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "'..'", ")", "\n", "opt", ".", "save_dir", "=", "opt", ".", "rgb_model", "# if opt.rgb_model != '' else opt.flow_model", "\n", "opt", ".", "log_dir", "=", "opt", ".", "save_dir", "+", "'/logs_tensorboardX'", "\n", "\n", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.opts.opts.update_dataset": [[162, 168], ["None"], "methods", ["None"], ["", "def", "update_dataset", "(", "self", ",", "opt", ",", "dataset", ")", ":", "\n", "        ", "opt", ".", "num_classes", "=", "dataset", ".", "num_classes", "\n", "opt", ".", "branch_info", "=", "{", "'hm'", ":", "opt", ".", "num_classes", ",", "\n", "'mov'", ":", "2", "*", "opt", ".", "K", ",", "\n", "'wh'", ":", "2", "*", "opt", ".", "K", "}", "\n", "return", "opt", "\n", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.ACT.frameAP": [[16, 118], ["datasets.init_dataset.get_dataset", "datasets.init_dataset.get_dataset.", "print", "print", "os.path.join", "enumerate", "numpy.mean", "os.path.isfile", "print", "print", "ACT_utils.ACT_build.load_frame_detections", "enumerate", "numpy.empty", "sum", "enumerate", "numpy.array", "open", "open.write", "print", "open.write", "open.close", "print", "open", "pickle.load", "numpy.array", "numpy.argsort", "os.path.join", "open", "pickle.dump", "print", "range", "int", "int", "ACT_utils.ACT_utils.iou2d", "numpy.argmax", "float", "float", "float", "float", "ACT_utils.ACT_utils.pr_to_ap", "gt[].append", "gt.values", "numpy.delete", "int", "tube[].tolist"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.datasets.init_dataset.get_dataset", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_build.load_frame_detections", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.close", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.iou2d", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.pr_to_ap"], ["def", "frameAP", "(", "opt", ",", "print_info", "=", "True", ")", ":", "\n", "    ", "redo", "=", "opt", ".", "redo", "\n", "th", "=", "opt", ".", "th", "\n", "split", "=", "'val'", "\n", "model_name", "=", "opt", ".", "model_name", "\n", "Dataset", "=", "get_dataset", "(", "opt", ".", "dataset", ")", "\n", "dataset", "=", "Dataset", "(", "opt", ",", "split", ")", "\n", "\n", "inference_dirname", "=", "opt", ".", "inference_dir", "\n", "print", "(", "'inference_dirname is '", ",", "inference_dirname", ")", "\n", "print", "(", "'threshold is '", ",", "th", ")", "\n", "\n", "vlist", "=", "dataset", ".", "_test_videos", "[", "opt", ".", "split", "-", "1", "]", "\n", "\n", "# load per-frame detections", "\n", "frame_detections_file", "=", "os", ".", "path", ".", "join", "(", "inference_dirname", ",", "'frame_detections.pkl'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "frame_detections_file", ")", "and", "not", "redo", ":", "\n", "        ", "print", "(", "'load previous linking results...'", ")", "\n", "print", "(", "'if you want to reproduce it, please add --redo'", ")", "\n", "with", "open", "(", "frame_detections_file", ",", "'rb'", ")", "as", "fid", ":", "\n", "            ", "alldets", "=", "pickle", ".", "load", "(", "fid", ")", "\n", "", "", "else", ":", "\n", "        ", "alldets", "=", "load_frame_detections", "(", "opt", ",", "dataset", ",", "opt", ".", "K", ",", "vlist", ",", "inference_dirname", ")", "\n", "try", ":", "\n", "            ", "with", "open", "(", "frame_detections_file", ",", "'wb'", ")", "as", "fid", ":", "\n", "                ", "pickle", ".", "dump", "(", "alldets", ",", "fid", ",", "protocol", "=", "4", ")", "\n", "", "", "except", ":", "\n", "            ", "print", "(", "\"OverflowError: cannot serialize a bytes object larger than 4 GiB\"", ")", "\n", "\n", "", "", "results", "=", "{", "}", "\n", "# compute AP for each class", "\n", "for", "ilabel", ",", "label", "in", "enumerate", "(", "dataset", ".", "labels", ")", ":", "\n", "# detections of this class", "\n", "        ", "detections", "=", "alldets", "[", "alldets", "[", ":", ",", "2", "]", "==", "ilabel", ",", ":", "]", "\n", "\n", "# load ground-truth of this class", "\n", "gt", "=", "{", "}", "\n", "for", "iv", ",", "v", "in", "enumerate", "(", "vlist", ")", ":", "\n", "            ", "tubes", "=", "dataset", ".", "_gttubes", "[", "v", "]", "\n", "\n", "if", "ilabel", "not", "in", "tubes", ":", "\n", "                ", "continue", "\n", "\n", "", "for", "tube", "in", "tubes", "[", "ilabel", "]", ":", "\n", "                ", "for", "i", "in", "range", "(", "tube", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "k", "=", "(", "iv", ",", "int", "(", "tube", "[", "i", ",", "0", "]", ")", ")", "\n", "if", "k", "not", "in", "gt", ":", "\n", "                        ", "gt", "[", "k", "]", "=", "[", "]", "\n", "", "gt", "[", "k", "]", ".", "append", "(", "tube", "[", "i", ",", "1", ":", "5", "]", ".", "tolist", "(", ")", ")", "\n", "\n", "", "", "", "for", "k", "in", "gt", ":", "\n", "            ", "gt", "[", "k", "]", "=", "np", ".", "array", "(", "gt", "[", "k", "]", ")", "\n", "\n", "#print(detections.shape())", "\n", "#print(gt.shape())", "\n", "# pr will be an array containing precision-recall values", "\n", "", "pr", "=", "np", ".", "empty", "(", "(", "detections", ".", "shape", "[", "0", "]", "+", "1", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "# precision,recall", "\n", "pr", "[", "0", ",", "0", "]", "=", "1.0", "\n", "pr", "[", "0", ",", "1", "]", "=", "0.0", "\n", "fn", "=", "sum", "(", "[", "g", ".", "shape", "[", "0", "]", "for", "g", "in", "gt", ".", "values", "(", ")", "]", ")", "# false negatives", "\n", "fp", "=", "0", "# false positives", "\n", "tp", "=", "0", "# true positives", "\n", "\n", "for", "i", ",", "j", "in", "enumerate", "(", "np", ".", "argsort", "(", "-", "detections", "[", ":", ",", "3", "]", ")", ")", ":", "\n", "            ", "k", "=", "(", "int", "(", "detections", "[", "j", ",", "0", "]", ")", ",", "int", "(", "detections", "[", "j", ",", "1", "]", ")", ")", "\n", "box", "=", "detections", "[", "j", ",", "4", ":", "8", "]", "\n", "ispositive", "=", "False", "\n", "\n", "if", "k", "in", "gt", ":", "\n", "                ", "ious", "=", "iou2d", "(", "gt", "[", "k", "]", ",", "box", ")", "\n", "amax", "=", "np", ".", "argmax", "(", "ious", ")", "\n", "\n", "if", "ious", "[", "amax", "]", ">=", "th", ":", "\n", "                    ", "ispositive", "=", "True", "\n", "gt", "[", "k", "]", "=", "np", ".", "delete", "(", "gt", "[", "k", "]", ",", "amax", ",", "0", ")", "\n", "\n", "if", "gt", "[", "k", "]", ".", "size", "==", "0", ":", "\n", "                        ", "del", "gt", "[", "k", "]", "\n", "\n", "", "", "", "if", "ispositive", ":", "\n", "                ", "tp", "+=", "1", "\n", "fn", "-=", "1", "\n", "", "else", ":", "\n", "                ", "fp", "+=", "1", "\n", "\n", "", "pr", "[", "i", "+", "1", ",", "0", "]", "=", "float", "(", "tp", ")", "/", "float", "(", "tp", "+", "fp", ")", "\n", "pr", "[", "i", "+", "1", ",", "1", "]", "=", "float", "(", "tp", ")", "/", "float", "(", "tp", "+", "fn", ")", "\n", "\n", "", "results", "[", "label", "]", "=", "pr", "\n", "\n", "# display results", "\n", "", "ap", "=", "100", "*", "np", ".", "array", "(", "[", "pr_to_ap", "(", "results", "[", "label", "]", ")", "for", "label", "in", "dataset", ".", "labels", "]", ")", "\n", "frameap_result", "=", "np", ".", "mean", "(", "ap", ")", "\n", "if", "print_info", ":", "\n", "        ", "log_file", "=", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "root_dir", ",", "'result'", ",", "opt", ".", "exp_id", ")", ",", "'a+'", ")", "\n", "log_file", ".", "write", "(", "'\\nTask_{} frameAP_{}\\n'", ".", "format", "(", "model_name", ",", "th", ")", ")", "\n", "print", "(", "'Task_{} frameAP_{}\\n'", ".", "format", "(", "model_name", ",", "th", ")", ")", "\n", "log_file", ".", "write", "(", "\"\\n{:20s} {:8.2f}\\n\\n\"", ".", "format", "(", "\"mAP\"", ",", "frameap_result", ")", ")", "\n", "log_file", ".", "close", "(", ")", "\n", "print", "(", "\"{:20s} {:8.2f}\"", ".", "format", "(", "\"mAP\"", ",", "frameap_result", ")", ")", "\n", "\n", "", "return", "frameap_result", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.ACT.frameAP_050_095": [[119, 131], ["range", "open", "open.write", "open.write", "open.close", "print", "print", "ACT.frameAP", "os.path.join"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.close", "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.ACT.frameAP"], ["", "def", "frameAP_050_095", "(", "opt", ")", ":", "\n", "    ", "ap", "=", "0", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "opt", ".", "th", "=", "0.5", "+", "0.05", "*", "i", "\n", "ap", "+=", "frameAP", "(", "opt", ",", "print_info", "=", "False", ")", "\n", "", "ap", "=", "ap", "/", "10.0", "\n", "log_file", "=", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "root_dir", ",", "'result'", ",", "opt", ".", "exp_id", ")", ",", "'a+'", ")", "\n", "log_file", ".", "write", "(", "'\\nTask_{} FrameAP_0.50:0.95 \\n'", ".", "format", "(", "opt", ".", "model_name", ")", ")", "\n", "log_file", ".", "write", "(", "\"\\n{:20s} {:8.2f}\\n\\n\"", ".", "format", "(", "\"mAP\"", ",", "ap", ")", ")", "\n", "log_file", ".", "close", "(", ")", "\n", "print", "(", "'Task_{} FrameAP_0.50:0.95 \\n'", ".", "format", "(", "opt", ".", "model_name", ")", ")", "\n", "print", "(", "\"\\n{:20s} {:8.2f}\\n\\n\"", ".", "format", "(", "\"mAP\"", ",", "ap", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.train.set_seed": [[21, 27], ["torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "random.seed", "numpy.random.seed"], "function", ["None"], ["def", "set_seed", "(", "seed", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.train.worker_init_fn": [[29, 31], ["train.set_seed"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.set_seed"], ["", "def", "worker_init_fn", "(", "dump", ")", ":", "\n", "    ", "set_seed", "(", "GLOBAL_SEED", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.train.main": [[32, 135], ["train.set_seed", "print", "datasets.init_dataset.get_dataset", "opts.opts().update_dataset", "tensorboardX.SummaryWriter", "tensorboardX.SummaryWriter", "tensorboardX.SummaryWriter", "tensorboardX.SummaryWriter", "trainer.logger.Logger", "torch.device", "torch.device", "utils.model.create_model", "torch.optim.Adam", "torch.optim.Adam", "trainer.trainer.Trainer", "trainer.trainer.Trainer.set_device", "print", "print", "range", "trainer.logger.Logger.close", "utils.model.load_imagenet_pretrained_model.parameters", "utils.model.load_imagenet_pretrained_model", "print", "utils.model.load_model", "print", "datasets.init_dataset.get_dataset", "opts.opts().update_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "trainer.trainer.Trainer.train", "trainer.logger.Logger.write", "trainer.train.items", "trainer.logger.Logger.write", "trainer.logger.Logger.write", "opts.opts", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "datasets.init_dataset.get_dataset.", "datasets.init_dataset.get_dataset.", "trainer.logger.Logger.scalar_summary", "trainer.logger.Logger.write", "time.strftime", "utils.model.save_model", "utils.model.save_model", "trainer.val.items", "trainer.logger.Logger.write", "opts.opts", "os.path.join", "os.path.join", "torch.no_grad", "torch.no_grad", "trainer.trainer.Trainer.val", "trainer.logger.Logger.scalar_summary", "trainer.logger.Logger.write", "opts().update_dataset.lr_step.index", "str"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.set_seed", "home.repos.pwc.inspect_result.calayzhou_iod-video.datasets.init_dataset.get_dataset", "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.opts.opts.update_dataset", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.create_model", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.set_device", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.close", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.load_imagenet_pretrained_model", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.load_model", "home.repos.pwc.inspect_result.calayzhou_iod-video.datasets.init_dataset.get_dataset", "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.opts.opts.update_dataset", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.train", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.scalar_summary", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.save_model", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.save_model", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.val", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.scalar_summary", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write"], ["", "def", "main", "(", "opt", ")", ":", "\n", "    ", "set_seed", "(", "opt", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "print", "(", "'dataset: '", "+", "opt", ".", "dataset", "+", "'   task:  '", "+", "opt", ".", "task", ")", "\n", "Dataset", "=", "get_dataset", "(", "opt", ".", "dataset", ")", "\n", "opt", "=", "opts", "(", ")", ".", "update_dataset", "(", "opt", ",", "Dataset", ")", "\n", "\n", "#log", "\n", "train_writer", "=", "tensorboardX", ".", "SummaryWriter", "(", "log_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "log_dir", ",", "'train'", ")", ")", "\n", "epoch_train_writer", "=", "tensorboardX", ".", "SummaryWriter", "(", "log_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "log_dir", ",", "'train_epoch'", ")", ")", "\n", "val_writer", "=", "tensorboardX", ".", "SummaryWriter", "(", "log_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "log_dir", ",", "'val'", ")", ")", "\n", "epoch_val_writer", "=", "tensorboardX", ".", "SummaryWriter", "(", "log_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "log_dir", ",", "'val_epoch'", ")", ")", "\n", "\n", "logger", "=", "Logger", "(", "opt", ",", "epoch_train_writer", ",", "epoch_val_writer", ")", "\n", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "opt", ".", "gpus_str", "\n", "opt", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "opt", ".", "gpus", "[", "0", "]", ">=", "0", "else", "'cpu'", ")", "\n", "\n", "#model define", "\n", "model", "=", "create_model", "(", "opt", ".", "arch", ",", "opt", ".", "branch_info", ",", "opt", ".", "head_conv", ",", "opt", ".", "K", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "opt", ".", "lr", ")", "\n", "start_epoch", "=", "opt", ".", "start_epoch", "\n", "\n", "#load from the imagenet pre-trained model", "\n", "if", "opt", ".", "pretrain_model", "==", "'imagenet'", ":", "\n", "        ", "model", "=", "load_imagenet_pretrained_model", "(", "opt", ",", "model", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"there is no pretrained model, init from random parameter.\"", ")", "\n", "\n", "#load from the already trained model", "\n", "", "if", "opt", ".", "load_model", "!=", "''", ":", "\n", "        ", "model", ",", "optimizer", ",", "_", ",", "_", "=", "load_model", "(", "model", ",", "opt", ".", "load_model", ",", "optimizer", ",", "opt", ".", "lr", ")", "\n", "\n", "#Trainer Class", "\n", "", "trainer", "=", "Trainer", "(", "opt", ",", "model", ",", "optimizer", ")", "\n", "trainer", ".", "set_device", "(", "opt", ".", "gpus", ",", "opt", ".", "chunk_sizes", ",", "opt", ".", "device", ")", "\n", "\n", "print", "(", "'training...'", ")", "\n", "print", "(", "'GPU allocate:'", ",", "opt", ".", "chunk_sizes", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "start_epoch", "+", "1", ",", "opt", ".", "num_epochs", "+", "1", ")", ":", "\n", "        ", "print", "(", "'epoch is '", ",", "epoch", ")", "\n", "\n", "#Dataset Class", "\n", "Dataset", "=", "get_dataset", "(", "opt", ".", "dataset", ")", "\n", "opt", "=", "opts", "(", ")", ".", "update_dataset", "(", "opt", ",", "Dataset", ")", "\n", "\n", "#DataLoader", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "Dataset", "(", "opt", ",", "'train'", ")", ",", "\n", "batch_size", "=", "opt", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "opt", ".", "num_workers", ",", "\n", "pin_memory", "=", "opt", ".", "pin_memory", ",", "\n", "drop_last", "=", "True", ",", "\n", "worker_init_fn", "=", "worker_init_fn", "\n", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "Dataset", "(", "opt", ",", "'val'", ")", ",", "\n", "batch_size", "=", "opt", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "opt", ".", "num_workers", ",", "\n", "pin_memory", "=", "opt", ".", "pin_memory", ",", "\n", "drop_last", "=", "True", ",", "\n", "worker_init_fn", "=", "worker_init_fn", "\n", ")", "\n", "\n", "# train", "\n", "log_dict_train", "=", "trainer", ".", "train", "(", "epoch", ",", "train_loader", ",", "train_writer", ")", "\n", "logger", ".", "write", "(", "'epoch: {} |'", ".", "format", "(", "epoch", ")", ")", "\n", "for", "k", ",", "v", "in", "log_dict_train", ".", "items", "(", ")", ":", "\n", "            ", "logger", ".", "scalar_summary", "(", "'epcho/{}'", ".", "format", "(", "k", ")", ",", "v", ",", "epoch", ",", "'train'", ")", "\n", "logger", ".", "write", "(", "'train: {} {:8f} | '", ".", "format", "(", "k", ",", "v", ")", ")", "\n", "", "logger", ".", "write", "(", "'\\n'", ")", "\n", "\n", "# save the model", "\n", "if", "opt", ".", "save_all", ":", "\n", "            ", "time_str", "=", "time", ".", "strftime", "(", "'%Y-%m-%d-%H-%M'", ")", "\n", "model_name", "=", "'model_[{}]_{}.pth'", ".", "format", "(", "epoch", ",", "time_str", ")", "\n", "save_model", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "save_dir", ",", "model_name", ")", ",", "\n", "model", ",", "optimizer", ",", "epoch", ",", "log_dict_train", "[", "'loss'", "]", ")", "\n", "", "else", ":", "\n", "            ", "model_name", "=", "'model_last.pth'", "\n", "save_model", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "save_dir", ",", "model_name", ")", ",", "\n", "model", ",", "optimizer", ",", "epoch", ",", "log_dict_train", "[", "'loss'", "]", ")", "\n", "\n", "# evaluate the model", "\n", "", "if", "opt", ".", "val_epoch", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "log_dict_val", "=", "trainer", ".", "val", "(", "epoch", ",", "val_loader", ",", "val_writer", ")", "\n", "", "for", "k", ",", "v", "in", "log_dict_val", ".", "items", "(", ")", ":", "\n", "                ", "logger", ".", "scalar_summary", "(", "'epcho/{}'", ".", "format", "(", "k", ")", ",", "v", ",", "epoch", ",", "'val'", ")", "\n", "logger", ".", "write", "(", "'val: {} {:8f} | '", ".", "format", "(", "k", ",", "v", ")", ")", "\n", "", "", "logger", ".", "write", "(", "'\\n'", ")", "\n", "\n", "#decrese the learning rate", "\n", "if", "epoch", "in", "opt", ".", "lr_step", ":", "\n", "            ", "lr", "=", "opt", ".", "lr", "*", "(", "0.1", "**", "(", "opt", ".", "lr_step", ".", "index", "(", "epoch", ")", "+", "1", ")", ")", "\n", "logger", ".", "write", "(", "'Drop LR to '", "+", "str", "(", "lr", ")", "+", "'\\n'", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n", "", "", "", "logger", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.det.set_seed": [[12, 18], ["torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "random.seed", "numpy.random.seed"], "function", ["None"], ["def", "set_seed", "(", "seed", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.gaussian_hm.gaussian_radius": [[8, 29], ["numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "min"], "function", ["None"], ["def", "gaussian_radius", "(", "det_size", ",", "min_overlap", "=", "0.7", ")", ":", "\n", "    ", "height", ",", "width", "=", "det_size", "\n", "\n", "a1", "=", "1", "\n", "b1", "=", "(", "height", "+", "width", ")", "\n", "c1", "=", "width", "*", "height", "*", "(", "1", "-", "min_overlap", ")", "/", "(", "1", "+", "min_overlap", ")", "\n", "sq1", "=", "np", ".", "sqrt", "(", "b1", "**", "2", "-", "4", "*", "a1", "*", "c1", ")", "\n", "r1", "=", "(", "b1", "+", "sq1", ")", "/", "2", "\n", "\n", "a2", "=", "4", "\n", "b2", "=", "2", "*", "(", "height", "+", "width", ")", "\n", "c2", "=", "(", "1", "-", "min_overlap", ")", "*", "width", "*", "height", "\n", "sq2", "=", "np", ".", "sqrt", "(", "b2", "**", "2", "-", "4", "*", "a2", "*", "c2", ")", "\n", "r2", "=", "(", "b2", "+", "sq2", ")", "/", "2", "\n", "\n", "a3", "=", "4", "*", "min_overlap", "\n", "b3", "=", "-", "2", "*", "min_overlap", "*", "(", "height", "+", "width", ")", "\n", "c3", "=", "(", "min_overlap", "-", "1", ")", "*", "width", "*", "height", "\n", "sq3", "=", "np", ".", "sqrt", "(", "b3", "**", "2", "-", "4", "*", "a3", "*", "c3", ")", "\n", "r3", "=", "(", "b3", "+", "sq3", ")", "/", "2", "\n", "return", "min", "(", "r1", ",", "r2", ",", "r3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.gaussian_hm.gaussian2D": [[31, 38], ["numpy.exp", "np.exp.max", "numpy.finfo"], "function", ["None"], ["", "def", "gaussian2D", "(", "shape", ",", "sigma", "=", "1", ")", ":", "\n", "    ", "m", ",", "n", "=", "[", "(", "ss", "-", "1.", ")", "/", "2.", "for", "ss", "in", "shape", "]", "\n", "y", ",", "x", "=", "np", ".", "ogrid", "[", "-", "m", ":", "m", "+", "1", ",", "-", "n", ":", "n", "+", "1", "]", "\n", "\n", "h", "=", "np", ".", "exp", "(", "-", "(", "x", "*", "x", "+", "y", "*", "y", ")", "/", "(", "2", "*", "sigma", "*", "sigma", ")", ")", "\n", "h", "[", "h", "<", "np", ".", "finfo", "(", "h", ".", "dtype", ")", ".", "eps", "*", "h", ".", "max", "(", ")", "]", "=", "0", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.gaussian_hm.draw_umich_gaussian": [[40, 56], ["gaussian_hm.gaussian2D", "int", "int", "min", "min", "min", "min", "numpy.maximum", "min", "min"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.gaussian_hm.gaussian2D"], ["", "def", "draw_umich_gaussian", "(", "heatmap", ",", "center", ",", "radius", ",", "k", "=", "1", ")", ":", "\n", "    ", "diameter", "=", "2", "*", "radius", "+", "1", "\n", "gaussian", "=", "gaussian2D", "(", "(", "diameter", ",", "diameter", ")", ",", "sigma", "=", "diameter", "/", "6", ")", "\n", "\n", "x", ",", "y", "=", "int", "(", "center", "[", "0", "]", ")", ",", "int", "(", "center", "[", "1", "]", ")", "\n", "\n", "height", ",", "width", "=", "heatmap", ".", "shape", "[", "0", ":", "2", "]", "\n", "\n", "left", ",", "right", "=", "min", "(", "x", ",", "radius", ")", ",", "min", "(", "width", "-", "x", ",", "radius", "+", "1", ")", "\n", "top", ",", "bottom", "=", "min", "(", "y", ",", "radius", ")", ",", "min", "(", "height", "-", "y", ",", "radius", "+", "1", ")", "\n", "\n", "masked_heatmap", "=", "heatmap", "[", "y", "-", "top", ":", "y", "+", "bottom", ",", "x", "-", "left", ":", "x", "+", "right", "]", "\n", "masked_gaussian", "=", "gaussian", "[", "radius", "-", "top", ":", "radius", "+", "bottom", ",", "radius", "-", "left", ":", "radius", "+", "right", "]", "\n", "if", "min", "(", "masked_gaussian", ".", "shape", ")", ">", "0", "and", "min", "(", "masked_heatmap", ".", "shape", ")", ">", "0", ":", "# TODO debug", "\n", "        ", "np", ".", "maximum", "(", "masked_heatmap", ",", "masked_gaussian", "*", "k", ",", "out", "=", "masked_heatmap", ")", "\n", "", "return", "heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.gaussian_hm.draw_msra_gaussian": [[58, 80], ["int", "int", "numpy.arange", "numpy.exp", "numpy.maximum", "int", "int", "int", "int", "max", "max", "max", "min", "max", "min", "min", "min"], "function", ["None"], ["", "def", "draw_msra_gaussian", "(", "heatmap", ",", "center", ",", "sigma", ")", ":", "\n", "    ", "tmp_size", "=", "sigma", "*", "3", "\n", "mu_x", "=", "int", "(", "center", "[", "0", "]", "+", "0.5", ")", "\n", "mu_y", "=", "int", "(", "center", "[", "1", "]", "+", "0.5", ")", "\n", "w", ",", "h", "=", "heatmap", ".", "shape", "[", "0", "]", ",", "heatmap", ".", "shape", "[", "1", "]", "\n", "ul", "=", "[", "int", "(", "mu_x", "-", "tmp_size", ")", ",", "int", "(", "mu_y", "-", "tmp_size", ")", "]", "\n", "br", "=", "[", "int", "(", "mu_x", "+", "tmp_size", "+", "1", ")", ",", "int", "(", "mu_y", "+", "tmp_size", "+", "1", ")", "]", "\n", "if", "ul", "[", "0", "]", ">=", "h", "or", "ul", "[", "1", "]", ">=", "w", "or", "br", "[", "0", "]", "<", "0", "or", "br", "[", "1", "]", "<", "0", ":", "\n", "        ", "return", "heatmap", "\n", "", "size", "=", "2", "*", "tmp_size", "+", "1", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "size", ",", "1", ",", "np", ".", "float32", ")", "\n", "y", "=", "x", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "x0", "=", "y0", "=", "size", "//", "2", "\n", "g", "=", "np", ".", "exp", "(", "-", "(", "(", "x", "-", "x0", ")", "**", "2", "+", "(", "y", "-", "y0", ")", "**", "2", ")", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "\n", "g_x", "=", "max", "(", "0", ",", "-", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "h", ")", "-", "ul", "[", "0", "]", "\n", "g_y", "=", "max", "(", "0", ",", "-", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "w", ")", "-", "ul", "[", "1", "]", "\n", "img_x", "=", "max", "(", "0", ",", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "h", ")", "\n", "img_y", "=", "max", "(", "0", ",", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "w", ")", "\n", "heatmap", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", "=", "np", ".", "maximum", "(", "\n", "heatmap", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", ",", "\n", "g", "[", "g_y", "[", "0", "]", ":", "g_y", "[", "1", "]", ",", "g_x", "[", "0", "]", ":", "g_x", "[", "1", "]", "]", ")", "\n", "return", "heatmap", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.__init__": [[44, 64], ["torch.nn.modules.Module.__init__", "torch.cuda.is_available", "list", "len", "data_parallel._DataParallel.module.cuda", "range", "torch.cuda.device_count"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "module", ",", "device_ids", "=", "None", ",", "output_device", "=", "None", ",", "dim", "=", "0", ",", "chunk_sizes", "=", "None", ")", ":", "\n", "        ", "super", "(", "_DataParallel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "module", "=", "module", "\n", "self", ".", "device_ids", "=", "[", "]", "\n", "return", "\n", "\n", "", "if", "device_ids", "is", "None", ":", "\n", "            ", "device_ids", "=", "list", "(", "range", "(", "torch", ".", "cuda", ".", "device_count", "(", ")", ")", ")", "\n", "", "if", "output_device", "is", "None", ":", "\n", "            ", "output_device", "=", "device_ids", "[", "0", "]", "\n", "", "self", ".", "dim", "=", "dim", "\n", "self", ".", "module", "=", "module", "\n", "self", ".", "device_ids", "=", "device_ids", "\n", "\n", "self", ".", "chunk_sizes", "=", "chunk_sizes", "\n", "self", ".", "output_device", "=", "output_device", "\n", "if", "len", "(", "self", ".", "device_ids", ")", "==", "1", ":", "\n", "            ", "self", ".", "module", ".", "cuda", "(", "device_ids", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.forward": [[65, 74], ["data_parallel._DataParallel.scatter", "data_parallel._DataParallel.replicate", "data_parallel._DataParallel.parallel_apply", "data_parallel._DataParallel.gather", "data_parallel._DataParallel.module", "len", "data_parallel._DataParallel.module", "len"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.scatter_gather.scatter", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.replicate", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.parallel_apply", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.gather"], ["", "", "def", "forward", "(", "self", ",", "*", "inputs", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "not", "self", ".", "device_ids", ":", "\n", "            ", "return", "self", ".", "module", "(", "*", "inputs", ",", "**", "kwargs", ")", "\n", "", "inputs", ",", "kwargs", "=", "self", ".", "scatter", "(", "inputs", ",", "kwargs", ",", "self", ".", "device_ids", ",", "self", ".", "chunk_sizes", ")", "\n", "if", "len", "(", "self", ".", "device_ids", ")", "==", "1", ":", "\n", "            ", "return", "self", ".", "module", "(", "*", "inputs", "[", "0", "]", ",", "**", "kwargs", "[", "0", "]", ")", "\n", "", "replicas", "=", "self", ".", "replicate", "(", "self", ".", "module", ",", "self", ".", "device_ids", "[", ":", "len", "(", "inputs", ")", "]", ")", "\n", "outputs", "=", "self", ".", "parallel_apply", "(", "replicas", ",", "inputs", ",", "kwargs", ")", "\n", "return", "self", ".", "gather", "(", "outputs", ",", "self", ".", "output_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.replicate": [[75, 77], ["torch.nn.parallel.replicate.replicate"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.replicate"], ["", "def", "replicate", "(", "self", ",", "module", ",", "device_ids", ")", ":", "\n", "        ", "return", "replicate", "(", "module", ",", "device_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.scatter": [[78, 80], ["scatter_gather.scatter_kwargs"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.scatter_gather.scatter_kwargs"], ["", "def", "scatter", "(", "self", ",", "inputs", ",", "kwargs", ",", "device_ids", ",", "chunk_sizes", ")", ":", "\n", "        ", "return", "scatter_kwargs", "(", "inputs", ",", "kwargs", ",", "device_ids", ",", "dim", "=", "self", ".", "dim", ",", "chunk_sizes", "=", "self", ".", "chunk_sizes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.parallel_apply": [[81, 83], ["torch.nn.parallel.parallel_apply.parallel_apply", "len"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.parallel_apply"], ["", "def", "parallel_apply", "(", "self", ",", "replicas", ",", "inputs", ",", "kwargs", ")", ":", "\n", "        ", "return", "parallel_apply", "(", "replicas", ",", "inputs", ",", "kwargs", ",", "self", ".", "device_ids", "[", ":", "len", "(", "replicas", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.gather": [[84, 86], ["torch.nn.parallel.scatter_gather.gather"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.gather"], ["", "def", "gather", "(", "self", ",", "outputs", ",", "output_device", ")", ":", "\n", "        ", "return", "gather", "(", "outputs", ",", "output_device", ",", "dim", "=", "self", ".", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel.data_parallel": [[88, 119], ["scatter_gather.scatter_kwargs", "torch.nn.parallel.replicate.replicate", "torch.nn.parallel.parallel_apply.parallel_apply", "torch.nn.parallel.scatter_gather.gather", "isinstance", "list", "len", "module", "range", "len", "torch.cuda.device_count"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.scatter_gather.scatter_kwargs", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.replicate", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.parallel_apply", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.gather"], ["", "", "def", "data_parallel", "(", "module", ",", "inputs", ",", "device_ids", "=", "None", ",", "output_device", "=", "None", ",", "dim", "=", "0", ",", "module_kwargs", "=", "None", ")", ":", "\n", "    ", "r\"\"\"Evaluates module(input) in parallel across the GPUs given in device_ids.\n\n    This is the functional version of the DataParallel module.\n\n    Args:\n        module: the module to evaluate in parallel\n        inputs: inputs to the module\n        device_ids: GPU ids on which to replicate module\n        output_device: GPU location of the output  Use -1 to indicate the CPU.\n            (default: device_ids[0])\n    Returns:\n        a Variable containing the result of module(input) located on\n        output_device\n    \"\"\"", "\n", "if", "not", "isinstance", "(", "inputs", ",", "tuple", ")", ":", "\n", "        ", "inputs", "=", "(", "inputs", ",", ")", "\n", "\n", "", "if", "device_ids", "is", "None", ":", "\n", "        ", "device_ids", "=", "list", "(", "range", "(", "torch", ".", "cuda", ".", "device_count", "(", ")", ")", ")", "\n", "\n", "", "if", "output_device", "is", "None", ":", "\n", "        ", "output_device", "=", "device_ids", "[", "0", "]", "\n", "\n", "", "inputs", ",", "module_kwargs", "=", "scatter_kwargs", "(", "inputs", ",", "module_kwargs", ",", "device_ids", ",", "dim", ")", "\n", "if", "len", "(", "device_ids", ")", "==", "1", ":", "\n", "        ", "return", "module", "(", "*", "inputs", "[", "0", "]", ",", "**", "module_kwargs", "[", "0", "]", ")", "\n", "", "used_device_ids", "=", "device_ids", "[", ":", "len", "(", "inputs", ")", "]", "\n", "replicas", "=", "replicate", "(", "module", ",", "used_device_ids", ")", "\n", "outputs", "=", "parallel_apply", "(", "replicas", ",", "inputs", ",", "module_kwargs", ",", "used_device_ids", ")", "\n", "return", "gather", "(", "outputs", ",", "output_device", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel.DataParallel": [[120, 130], ["range", "data_parallel._DataParallel", "torch.nn.DataParallel", "len", "torch.nn.DataParallel"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel.DataParallel", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel.DataParallel"], ["", "def", "DataParallel", "(", "module", ",", "device_ids", "=", "None", ",", "output_device", "=", "None", ",", "dim", "=", "0", ",", "chunk_sizes", "=", "None", ")", ":", "\n", "    ", "if", "chunk_sizes", "is", "None", ":", "\n", "        ", "return", "torch", ".", "nn", ".", "DataParallel", "(", "module", ",", "device_ids", ",", "output_device", ",", "dim", ")", "\n", "", "standard_size", "=", "True", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "chunk_sizes", ")", ")", ":", "\n", "        ", "if", "chunk_sizes", "[", "i", "]", "!=", "chunk_sizes", "[", "0", "]", ":", "\n", "            ", "standard_size", "=", "False", "\n", "", "", "if", "standard_size", ":", "\n", "        ", "return", "torch", ".", "nn", ".", "DataParallel", "(", "module", ",", "device_ids", ",", "output_device", ",", "dim", ")", "\n", "", "return", "_DataParallel", "(", "module", ",", "device_ids", ",", "output_device", ",", "dim", ",", "chunk_sizes", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.create_model": [[15, 20], ["network.STA_Framework.STA_Framework", "int", "arch.find", "arch.find"], "function", ["None"], ["def", "create_model", "(", "arch", ",", "branch_info", ",", "head_conv", ",", "K", ")", ":", "\n", "    ", "num_layers", "=", "int", "(", "arch", "[", "arch", ".", "find", "(", "'_'", ")", "+", "1", ":", "]", ")", "if", "'_'", "in", "arch", "else", "0", "\n", "arch", "=", "arch", "[", ":", "arch", ".", "find", "(", "'_'", ")", "]", "if", "'_'", "in", "arch", "else", "arch", "\n", "model", "=", "STA_Framework", "(", "arch", ",", "num_layers", ",", "branch_info", ",", "head_conv", ",", "K", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.load_model": [[22, 60], ["torch.load", "torch.load", "torch.load", "print", "model.check_state_dict", "model.load_state_dict", "model.state_dict", "k.startswith", "optimizer.load_state_dict", "print", "print", "k.startswith"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.check_state_dict"], ["", "def", "load_model", "(", "model", ",", "model_path", ",", "optimizer", "=", "None", ",", "lr", "=", "None", ")", ":", "\n", "    ", "start_epoch", "=", "0", "\n", "checkpoint", "=", "torch", ".", "load", "(", "model_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "print", "(", "'loaded {}, epoch {}'", ".", "format", "(", "model_path", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "state_dict_", "=", "checkpoint", "[", "'state_dict'", "]", "\n", "state_dict", "=", "{", "}", "\n", "\n", "# convert data_parallal to model", "\n", "for", "k", "in", "state_dict_", ":", "\n", "# if ucf_pretrain:", "\n", "#     if k.startswith('branch.hm') or k.startswith('branch.mov'):", "\n", "#         continue", "\n", "        ", "if", "k", ".", "startswith", "(", "'module'", ")", "and", "not", "k", ".", "startswith", "(", "'module_list'", ")", ":", "\n", "            ", "state_dict", "[", "k", "[", "7", ":", "]", "]", "=", "state_dict_", "[", "k", "]", "\n", "", "else", ":", "\n", "            ", "state_dict", "[", "k", "]", "=", "state_dict_", "[", "k", "]", "\n", "", "", "check_state_dict", "(", "model", ".", "state_dict", "(", ")", ",", "state_dict", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "\n", "# resume optimizer parameters", "\n", "if", "optimizer", "is", "not", "None", ":", "\n", "        ", "if", "'optimizer'", "in", "checkpoint", ":", "\n", "            ", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "print", "(", "'Resumed optimizer with start lr'", ",", "lr", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'No optimizer parameters in checkpoint.'", ")", "\n", "\n", "", "", "if", "'best'", "in", "checkpoint", ":", "\n", "        ", "best", "=", "checkpoint", "[", "'best'", "]", "\n", "", "else", ":", "\n", "        ", "best", "=", "100", "\n", "", "if", "optimizer", "is", "not", "None", ":", "\n", "        ", "return", "model", ",", "optimizer", ",", "start_epoch", ",", "best", "\n", "", "else", ":", "\n", "        ", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.save_model": [[61, 72], ["isinstance", "torch.save", "torch.save", "torch.save", "model.module.state_dict", "model.state_dict", "optimizer.state_dict"], "function", ["None"], ["", "", "def", "save_model", "(", "path", ",", "model", ",", "optimizer", "=", "None", ",", "epoch", "=", "0", ",", "best", "=", "100", ")", ":", "\n", "    ", "if", "isinstance", "(", "model", ",", "torch", ".", "nn", ".", "DataParallel", ")", ":", "\n", "        ", "state_dict", "=", "model", ".", "module", ".", "state_dict", "(", ")", "\n", "", "else", ":", "\n", "        ", "state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "", "data", "=", "{", "'epoch'", ":", "epoch", ",", "\n", "'best'", ":", "best", ",", "\n", "'state_dict'", ":", "state_dict", "}", "\n", "if", "not", "(", "optimizer", "is", "None", ")", ":", "\n", "        ", "data", "[", "'optimizer'", "]", "=", "optimizer", ".", "state_dict", "(", ")", "\n", "", "torch", ".", "save", "(", "data", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.load_imagenet_pretrained_model": [[74, 193], ["model_zoo.load_url.items", "model.load_state_dict", "print", "torch.load_url", "model.check_state_dict", "print", "torch.load_url", "collections.OrderedDict.copy", "model.state_dict", "collections.OrderedDict", "pretrained_dict.copy.items", "collections.OrderedDict.items", "model.load_state_dict", "model.state_dict", "torch.load_url", "model_zoo.load_url.copy", "collections.OrderedDict", "state_dict.copy.items", "model.load_state_dict", "model.state_dict.update", "model.state_dict", "torch.load_url", "model_zoo.load_url.pop", "model_zoo.load_url.pop", "model_zoo.load_url.copy", "collections.OrderedDict", "state_dict.copy.items", "model.load_state_dict", "model.state_dict", "torch.load_url", "model_zoo.load_url.pop", "model_zoo.load_url.pop", "model_zoo.load_url.copy", "collections.OrderedDict", "state_dict.copy.items", "model.load_state_dict", "model.state_dict", "torch.load_url", "network.inflate_from_2d_model.inflate_from_2d_model", "model.load_state_dict", "model.state_dict", "torch.load_url", "network.inflate_from_2d_model.inflate_from_2d_model", "model.load_state_dict", "arch.startswith", "print", "torch.load_url", "print", "int", "arch.find", "arch.find"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.check_state_dict", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.calayzhou_iod-video.network.inflate_from_2d_model.inflate_from_2d_model", "home.repos.pwc.inspect_result.calayzhou_iod-video.network.inflate_from_2d_model.inflate_from_2d_model"], ["", "def", "load_imagenet_pretrained_model", "(", "opt", ",", "model", ")", ":", "\n", "\n", "    ", "model_urls", "=", "{", "\n", "'resnet18'", ":", "'https://download.pytorch.org/models/resnet18-5c106cde.pth'", ",", "\n", "'resnet34'", ":", "'https://download.pytorch.org/models/resnet34-333f7ec4.pth'", ",", "\n", "'resnet50'", ":", "'https://download.pytorch.org/models/resnet50-19c8e357.pth'", ",", "\n", "'resnet101'", ":", "'https://download.pytorch.org/models/resnet101-5d3b4d8f.pth'", ",", "\n", "'resnet152'", ":", "'https://download.pytorch.org/models/resnet152-b121ed2d.pth'", ",", "\n", "'dla34'", ":", "'http://dl.yf.io/dla/models/imagenet/dla34-ba72cf86.pth'", ",", "\n", "'res2net50_26w_4s'", ":", "'https://shanghuagao.oss-cn-beijing.aliyuncs.com/res2net/res2net50_26w_4s-06e79181.pth'", ",", "\n", "'res2net50_48w_2s'", ":", "'http://mc.nankai.edu.cn/projects/res2net/pretrainmodels/res2net50_48w_2s-afed724a.pth'", ",", "\n", "'res2net50_14w_8s'", ":", "'http://mc.nankai.edu.cn/projects/res2net/pretrainmodels/res2net50_14w_8s-6527dddc.pth'", ",", "\n", "'res2net50_26w_6s'", ":", "'http://mc.nankai.edu.cn/projects/res2net/pretrainmodels/res2net50_26w_6s-19041792.pth'", ",", "\n", "'res2net50_26w_8s'", ":", "'http://mc.nankai.edu.cn/projects/res2net/pretrainmodels/res2net50_26w_8s-2c7c9f12.pth'", ",", "\n", "'res2net101_26w_4s'", ":", "'http://mc.nankai.edu.cn/projects/res2net/pretrainmodels/res2net101_26w_4s-02a759a1.pth'", ",", "\n", "'fbresnet50'", ":", "'http://data.lip6.fr/cadene/pretrainedmodels/resnet50-19c8e357.pth'", ",", "\n", "'fbresnet101'", ":", "'http://data.lip6.fr/cadene/pretrainedmodels/resnet101-5d3b4d8f.pth'", "\n", "}", "\n", "\n", "arch", "=", "opt", ".", "arch", "\n", "if", "arch", "==", "'dla_34'", ":", "\n", "        ", "print", "(", "'load imagenet pretrained dla_34'", ")", "\n", "model_url", "=", "model_urls", "[", "'dla34'", "]", "\n", "model_weights", "=", "model_zoo", ".", "load_url", "(", "model_url", ")", "\n", "\n", "\n", "", "elif", "arch", "==", "'MSresnet_50'", ":", "\n", "        ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", "\n", "pretrained_dict_copy", "=", "pretrained_dict", ".", "copy", "(", ")", "\n", "new_state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "OrderedDict", "(", ")", "\n", "for", "key", ",", "value", "in", "pretrained_dict_copy", ".", "items", "(", ")", ":", "\n", "            ", "pretrained_dict", "[", "'backbone.'", "+", "key", "]", "=", "value", "\n", "", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "(", "k", "in", "new_state_dict", ")", ":", "\n", "                ", "new_state_dict", ".", "update", "(", "{", "k", ":", "v", "}", ")", "\n", "#                 print (\"%s layer has pretrained weights\" % k)", "\n", "", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "#check_state_dict(model.state_dict(), pretrained_dict)", "\n", "return", "model", "\n", "\n", "", "elif", "arch", "==", "'TINresnet_50'", "or", "arch", "==", "'TSMresnet_50'", ":", "\n", "# url = 'https://download.pytorch.org/models/resnet50-19c8e357.pth'", "\n", "        ", "state_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", "\n", "state_dict_copy", "=", "state_dict", ".", "copy", "(", ")", "\n", "state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "key", ",", "value", "in", "state_dict_copy", ".", "items", "(", ")", ":", "\n", "            ", "state_dict", "[", "'backbone.base_model.'", "+", "key", "]", "=", "value", "\n", "", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "# check_state_dict(model.state_dict(), state_dict)", "\n", "return", "model", "\n", "\n", "", "elif", "arch", "==", "'TDNresnet_50'", ":", "\n", "        ", "'''\n        the pretrained model is loaded in /network/twod_models/base_module.py\n        '''", "\n", "return", "model", "\n", "\n", "", "elif", "arch", "==", "'TAMresnet_50'", ":", "\n", "        ", "new_model_state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "state_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ",", "map_location", "=", "'cpu'", ",", "progress", "=", "True", ")", "\n", "state_dict", ".", "pop", "(", "'fc.weight'", ",", "None", ")", "\n", "state_dict", ".", "pop", "(", "'fc.bias'", ",", "None", ")", "\n", "state_dict_copy", "=", "state_dict", ".", "copy", "(", ")", "\n", "state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "key", ",", "value", "in", "state_dict_copy", ".", "items", "(", ")", ":", "\n", "            ", "state_dict", "[", "'backbone.'", "+", "key", "]", "=", "value", "\n", "", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "return", "model", "\n", "\n", "", "elif", "arch", "==", "'TEAresnet_50'", ":", "\n", "        ", "new_model_state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "state_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net50_26w_4s'", "]", ",", "map_location", "=", "'cpu'", ",", "progress", "=", "True", ")", "\n", "state_dict", ".", "pop", "(", "'fc.weight'", ",", "None", ")", "\n", "state_dict", ".", "pop", "(", "'fc.bias'", ",", "None", ")", "\n", "state_dict_copy", "=", "state_dict", ".", "copy", "(", ")", "\n", "state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "key", ",", "value", "in", "state_dict_copy", ".", "items", "(", ")", ":", "\n", "            ", "state_dict", "[", "'backbone.'", "+", "key", "]", "=", "value", "\n", "", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "#check_state_dict(model.state_dict(), state_dict)", "\n", "return", "model", "\n", "\n", "", "elif", "arch", "==", "'S3Dresnet_50'", ":", "\n", "        ", "new_model_state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "state_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ",", "map_location", "=", "'cpu'", ",", "progress", "=", "True", ")", "\n", "state_d", "=", "inflate_from_2d_model", "(", "state_dict", ",", "new_model_state_dict", ",", "skipped_keys", "=", "[", "'fc'", "]", ")", "\n", "model", ".", "load_state_dict", "(", "state_d", ",", "strict", "=", "False", ")", "\n", "return", "model", "\n", "\n", "", "elif", "arch", "==", "'I3Dresnet_50'", ":", "\n", "        ", "new_model_state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "state_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ",", "map_location", "=", "'cpu'", ",", "progress", "=", "True", ")", "\n", "state_d", "=", "inflate_from_2d_model", "(", "state_dict", ",", "new_model_state_dict", ",", "skipped_keys", "=", "[", "'fc'", "]", ")", "\n", "model", ".", "load_state_dict", "(", "state_d", ",", "strict", "=", "False", ")", "\n", "return", "model", "\n", "\n", "", "elif", "arch", ".", "startswith", "(", "'resnet'", ")", ":", "\n", "        ", "num_layers", "=", "int", "(", "arch", "[", "arch", ".", "find", "(", "'_'", ")", "+", "1", ":", "]", ")", "if", "'_'", "in", "arch", "else", "0", "\n", "assert", "num_layers", "in", "(", "18", ",", "34", ",", "50", ",", "101", ",", "152", ")", "\n", "arch", "=", "arch", "[", ":", "arch", ".", "find", "(", "'_'", ")", "]", "if", "'_'", "in", "arch", "else", "arch", "\n", "\n", "print", "(", "'load imagenet pretrained '", ",", "arch", ")", "\n", "url", "=", "model_urls", "[", "'resnet{}'", ".", "format", "(", "num_layers", ")", "]", "\n", "model_weights", "=", "model_zoo", ".", "load_url", "(", "url", ")", "\n", "print", "(", "'=> loading pretrained model {}'", ".", "format", "(", "url", ")", ")", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "new_state_dict", "=", "{", "}", "\n", "for", "key", ",", "value", "in", "model_weights", ".", "items", "(", ")", ":", "\n", "        ", "new_key", "=", "'backbone.base.'", "+", "key", "\n", "new_state_dict", "[", "new_key", "]", "=", "value", "\n", "", "if", "opt", ".", "print_log", ":", "\n", "        ", "check_state_dict", "(", "model", ".", "state_dict", "(", ")", ",", "new_state_dict", ")", "\n", "print", "(", "'check done!'", ")", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ",", "strict", "=", "False", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.check_state_dict": [[195, 210], ["print", "print", "print"], "function", ["None"], ["", "def", "check_state_dict", "(", "load_dict", ",", "new_dict", ")", ":", "\n", "# check loaded parameters and created model parameters", "\n", "    ", "for", "k", "in", "new_dict", ":", "\n", "        ", "if", "k", "in", "load_dict", ":", "\n", "            ", "if", "new_dict", "[", "k", "]", ".", "shape", "!=", "load_dict", "[", "k", "]", ".", "shape", ":", "\n", "                ", "print", "(", "'Skip loading parameter {}, required shape{}, '", "\n", "'loaded shape{}.'", ".", "format", "(", "\n", "k", ",", "load_dict", "[", "k", "]", ".", "shape", ",", "new_dict", "[", "k", "]", ".", "shape", ")", ")", "\n", "new_dict", "[", "k", "]", "=", "load_dict", "[", "k", "]", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "'Drop parameter {}.'", ".", "format", "(", "k", ")", ")", "\n", "", "", "for", "k", "in", "load_dict", ":", "\n", "        ", "if", "not", "(", "k", "in", "new_dict", ")", ":", "\n", "            ", "print", "(", "'No param {}.'", ".", "format", "(", "k", ")", ")", "\n", "new_dict", "[", "k", "]", "=", "load_dict", "[", "k", "]", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.scatter_gather.scatter": [[6, 26], ["scatter_gather.scatter.scatter_map"], "function", ["None"], ["def", "scatter", "(", "inputs", ",", "target_gpus", ",", "dim", "=", "0", ",", "chunk_sizes", "=", "None", ")", ":", "\n", "    ", "r\"\"\"\n    Slices variables into approximately equal chunks and\n    distributes them across given GPUs. Duplicates\n    references to objects that are not variables. Does not\n    support Tensors.\n    \"\"\"", "\n", "def", "scatter_map", "(", "obj", ")", ":", "\n", "        ", "if", "isinstance", "(", "obj", ",", "Variable", ")", ":", "\n", "            ", "return", "Scatter", ".", "apply", "(", "target_gpus", ",", "chunk_sizes", ",", "dim", ",", "obj", ")", "\n", "", "assert", "not", "torch", ".", "is_tensor", "(", "obj", ")", ",", "\"Tensors not supported in scatter.\"", "\n", "if", "isinstance", "(", "obj", ",", "tuple", ")", ":", "\n", "            ", "return", "list", "(", "zip", "(", "*", "map", "(", "scatter_map", ",", "obj", ")", ")", ")", "\n", "", "if", "isinstance", "(", "obj", ",", "list", ")", ":", "\n", "            ", "return", "list", "(", "map", "(", "list", ",", "zip", "(", "*", "map", "(", "scatter_map", ",", "obj", ")", ")", ")", ")", "\n", "", "if", "isinstance", "(", "obj", ",", "dict", ")", ":", "\n", "            ", "return", "list", "(", "map", "(", "type", "(", "obj", ")", ",", "zip", "(", "*", "map", "(", "scatter_map", ",", "obj", ".", "items", "(", ")", ")", ")", ")", ")", "\n", "", "return", "[", "obj", "for", "targets", "in", "target_gpus", "]", "\n", "\n", "", "return", "scatter_map", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.scatter_gather.scatter_kwargs": [[28, 39], ["tuple", "tuple", "scatter_gather.scatter", "scatter_gather.scatter", "len", "len", "tuple.extend", "len", "len", "tuple.extend", "range", "range", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.scatter_gather.scatter", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.scatter_gather.scatter"], ["", "def", "scatter_kwargs", "(", "inputs", ",", "kwargs", ",", "target_gpus", ",", "dim", "=", "0", ",", "chunk_sizes", "=", "None", ")", ":", "\n", "    ", "r\"\"\"Scatter with support for kwargs dictionary\"\"\"", "\n", "inputs", "=", "scatter", "(", "inputs", ",", "target_gpus", ",", "dim", ",", "chunk_sizes", ")", "if", "inputs", "else", "[", "]", "\n", "kwargs", "=", "scatter", "(", "kwargs", ",", "target_gpus", ",", "dim", ",", "chunk_sizes", ")", "if", "kwargs", "else", "[", "]", "\n", "if", "len", "(", "inputs", ")", "<", "len", "(", "kwargs", ")", ":", "\n", "        ", "inputs", ".", "extend", "(", "[", "(", ")", "for", "_", "in", "range", "(", "len", "(", "kwargs", ")", "-", "len", "(", "inputs", ")", ")", "]", ")", "\n", "", "elif", "len", "(", "kwargs", ")", "<", "len", "(", "inputs", ")", ":", "\n", "        ", "kwargs", ".", "extend", "(", "[", "{", "}", "for", "_", "in", "range", "(", "len", "(", "inputs", ")", "-", "len", "(", "kwargs", ")", ")", "]", ")", "\n", "", "inputs", "=", "tuple", "(", "inputs", ")", "\n", "kwargs", "=", "tuple", "(", "kwargs", ")", "\n", "return", "inputs", ",", "kwargs", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils.AverageMeter.__init__": [[11, 13], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils.AverageMeter.reset": [[14, 19], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils.AverageMeter.update": [[20, 26], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._gather_feature": [[32, 44], ["feature.gather.gather", "feature.gather.size", "index.unsqueeze().expand", "index.size", "index.size", "index.unsqueeze"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel._DataParallel.gather"], ["", "", "", "def", "_gather_feature", "(", "feature", ",", "index", ",", "index_all", "=", "None", ")", ":", "\n", "# dim = channel = 2*K", "\n", "# feature b, h*w , c", "\n", "# index  b, N --> b, N, c", "\n", "    ", "if", "index_all", "is", "not", "None", ":", "\n", "        ", "index0", "=", "index_all", "\n", "", "else", ":", "\n", "        ", "dim", "=", "feature", ".", "size", "(", "2", ")", "\n", "index0", "=", "index", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "index", ".", "size", "(", "0", ")", ",", "index", ".", "size", "(", "1", ")", ",", "dim", ")", "\n", "", "feature", "=", "feature", ".", "gather", "(", "1", ",", "index0", ")", "\n", "# feature --> b, N, 2*K", "\n", "return", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._tranpose_and_gather_feature": [[46, 54], ["_gather_feature.permute().contiguous", "_gather_feature.view", "utils._gather_feature", "_gather_feature.size", "_gather_feature.size", "_gather_feature.permute"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._gather_feature"], ["", "def", "_tranpose_and_gather_feature", "(", "feature", ",", "index", ",", "index_all", "=", "None", ")", ":", "\n", "# b,c,h,w --> b,h,w,c", "\n", "    ", "feature", "=", "feature", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "# b,h,w,c --> b,h*w,c", "\n", "feature", "=", "feature", ".", "view", "(", "feature", ".", "size", "(", "0", ")", ",", "-", "1", ",", "feature", ".", "size", "(", "3", ")", ")", "\n", "feature", "=", "_gather_feature", "(", "feature", ",", "index", ",", "index_all", "=", "index_all", ")", "\n", "# feature --> b, N, 2*K", "\n", "return", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils.flip_tensor": [[56, 58], ["torch.flip"], "function", ["None"], ["", "def", "flip_tensor", "(", "x", ")", ":", "\n", "    ", "return", "torch", ".", "flip", "(", "x", ",", "[", "3", "]", ")", "\n", "# MODIFY for pytorch 0.4.0", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.inflate_from_2d_model.inflate_from_2d_model": [[12, 65], ["collections.OrderedDict.copy", "collections.OrderedDict", "state_dict_2d.copy.items", "collections.OrderedDict.keys", "state_dict_3d.keys", "print", "print", "print", "collections.OrderedDict", "collections.OrderedDict.items", "print", "print", "print", "state_dict_3d.keys", "missed_keys.append", "collections.OrderedDict.keys", "new_keys.append", "collections.OrderedDict.keys", "state_dict_3d.keys", "initialized_layers.append", "uninitialized_layers.remove", "unused_layers.remove", "torch.unsqueeze", "torch.ones", "state_dict_3d[].size", "torch.unsqueeze.repeat", "torch.unsqueeze.ndimension", "state_dict_3d[].ndimension", "torch.ones.tolist"], "function", ["None"], ["def", "inflate_from_2d_model", "(", "state_dict_2d", ",", "state_dict_3d", ",", "skipped_keys", "=", "None", ",", "inflated_dim", "=", "2", ")", ":", "\n", "\n", "    ", "if", "skipped_keys", "is", "None", ":", "\n", "        ", "skipped_keys", "=", "[", "]", "\n", "# add 'backbone.' for orginal keys to match the current network", "\n", "", "state_dict_2d_copy", "=", "state_dict_2d", ".", "copy", "(", ")", "\n", "state_dict_2d", "=", "OrderedDict", "(", ")", "\n", "for", "key", ",", "value", "in", "state_dict_2d_copy", ".", "items", "(", ")", ":", "\n", "        ", "state_dict_2d", "[", "'backbone.'", "+", "key", "]", "=", "value", "\n", "\n", "\n", "", "missed_keys", "=", "[", "]", "\n", "new_keys", "=", "[", "]", "\n", "for", "old_key", "in", "state_dict_2d", ".", "keys", "(", ")", ":", "\n", "        ", "if", "old_key", "not", "in", "state_dict_3d", ".", "keys", "(", ")", ":", "\n", "            ", "missed_keys", ".", "append", "(", "old_key", ")", "\n", "", "", "for", "new_key", "in", "state_dict_3d", ".", "keys", "(", ")", ":", "\n", "        ", "if", "new_key", "not", "in", "state_dict_2d", ".", "keys", "(", ")", ":", "\n", "            ", "new_keys", ".", "append", "(", "new_key", ")", "\n", "", "", "print", "(", "\"Missed tensors: {}\"", ".", "format", "(", "missed_keys", ")", ")", "# 2D \u9884\u8bad\u7ec3\u6a21\u578b\u6709 \u800c 3D \u65b0\u6a21\u578b\u6ca1\u6709", "\n", "print", "(", "\"New tensors: {}\"", ".", "format", "(", "new_keys", ")", ")", "#  3D \u65b0\u6a21\u578b\u6709 \u800c 2D \u9884\u8bad\u7ec3\u6a21\u578b\u6ca1\u6709", "\n", "print", "(", "\"Following layers will be skipped: {}\"", ".", "format", "(", "skipped_keys", ")", ")", "\n", "\n", "state_d", "=", "OrderedDict", "(", ")", "\n", "unused_layers", "=", "[", "k", "for", "k", "in", "state_dict_2d", ".", "keys", "(", ")", "]", "\n", "uninitialized_layers", "=", "[", "k", "for", "k", "in", "state_dict_3d", ".", "keys", "(", ")", "]", "\n", "initialized_layers", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "state_dict_2d", ".", "items", "(", ")", ":", "\n", "        ", "skipped", "=", "False", "# skip\u7684layer\u4e0d\u5fc5\u7ba1", "\n", "for", "skipped_key", "in", "skipped_keys", ":", "\n", "            ", "if", "skipped_key", "in", "key", ":", "\n", "                ", "skipped", "=", "True", "\n", "break", "\n", "", "", "if", "skipped", ":", "\n", "            ", "continue", "\n", "", "new_value", "=", "value", "\n", "# only inflated conv's weights", "\n", "if", "key", "in", "state_dict_3d", ":", "\n", "            ", "if", "value", ".", "ndimension", "(", ")", "==", "4", "and", "'weight'", "in", "key", ":", "\n", "                ", "value", "=", "torch", ".", "unsqueeze", "(", "value", ",", "inflated_dim", ")", "\n", "repeated_dim", "=", "torch", ".", "ones", "(", "state_dict_3d", "[", "key", "]", ".", "ndimension", "(", ")", ",", "dtype", "=", "torch", ".", "int", ")", "\n", "repeated_dim", "[", "inflated_dim", "]", "=", "state_dict_3d", "[", "key", "]", ".", "size", "(", "inflated_dim", ")", "\n", "new_value", "=", "value", ".", "repeat", "(", "repeated_dim", ".", "tolist", "(", ")", ")", "\n", "", "state_d", "[", "key", "]", "=", "new_value", "\n", "initialized_layers", ".", "append", "(", "key", ")", "\n", "uninitialized_layers", ".", "remove", "(", "key", ")", "\n", "unused_layers", ".", "remove", "(", "key", ")", "\n", "\n", "", "", "print", "(", "\"Initialized layers: {}\"", ".", "format", "(", "initialized_layers", ")", ")", "\n", "print", "(", "\"Uninitialized layers: {}\"", ".", "format", "(", "uninitialized_layers", ")", ")", "\n", "print", "(", "\"Unused layers: {}\"", ".", "format", "(", "unused_layers", ")", ")", "\n", "\n", "return", "state_d", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.STA_Framework.STA_Framework.__init__": [[31, 41], ["torch.nn.Module.__init__", "branch.IOD_Branch", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "arch", ",", "num_layers", ",", "branch_info", ",", "head_conv", ",", "K", ")", ":", "\n", "        ", "super", "(", "STA_Framework", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "K", "=", "K", "\n", "self", ".", "backbone", "=", "backbone", "[", "arch", "]", "(", "num_layers", ",", "K", ")", "\n", "self", ".", "arch", "=", "arch", "\n", "self", ".", "branch", "=", "IOD_Branch", "(", "self", ".", "backbone", ".", "output_channel", ",", "arch", ",", "head_conv", ",", "branch_info", ",", "K", ")", "\n", "self", ".", "R2D", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "K", "*", "self", ".", "backbone", ".", "output_channel", ",", "self", ".", "backbone", ".", "output_channel", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.STA_Framework.STA_Framework.forward": [[42, 59], ["torch.cat", "STA_Framework.STA_Framework.backbone", "STA_Framework.STA_Framework.branch", "input[].unsqueeze", "STA_Framework.STA_Framework.backbone", "STA_Framework.STA_Framework.branch", "STA_Framework.STA_Framework.branch", "range", "STA_Framework.STA_Framework.backbone", "range"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "arch", "==", "'I3Dresnet'", "or", "self", ".", "arch", "==", "'S3Dresnet'", "or", "self", ".", "arch", "==", "'TAMresnet'", "or", "self", ".", "arch", "==", "'MSresnet'", "or", "self", ".", "arch", "==", "'TEAresnet'", "or", "self", ".", "arch", "==", "'TINresnet'", "or", "self", ".", "arch", "==", "'TSMresnet'", ":", "\n", "            ", "inputlist", "=", "[", "input", "[", "i", "]", ".", "unsqueeze", "(", "2", ")", "for", "i", "in", "range", "(", "self", ".", "K", ")", "]", "\n", "input_cat", "=", "torch", ".", "cat", "(", "inputlist", ",", "dim", "=", "2", ")", "# B C T H W", "\n", "chunk", "=", "self", ".", "backbone", "(", "input_cat", ")", "\n", "output1", "=", "self", ".", "branch", "(", "chunk", ")", "\n", "return", "[", "output1", "]", "\n", "", "elif", "self", ".", "arch", "==", "'TDNresnet'", ":", "\n", "#input_cat = torch.cat(input, dim=1)# B C*T  H W", "\n", "            ", "chunk", "=", "self", ".", "backbone", "(", "input", ")", "\n", "output1", "=", "self", ".", "branch", "(", "chunk", ")", "\n", "return", "[", "output1", "]", "\n", "", "else", ":", "\n", "            ", "chunk", "=", "[", "self", ".", "backbone", "(", "input", "[", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "K", ")", "]", "\n", "output1", "=", "self", ".", "branch", "(", "chunk", ")", "\n", "return", "[", "output1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.BasicBlock.__init__": [[32, 41], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.BasicBlock.forward": [[42, 59], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.Bottleneck.__init__": [[64, 78], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ",", "\n", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.Bottleneck.forward": [[79, 100], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.L2Norm.__init__": [[109, 116], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "resnet.L2Norm.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ")", ":", "\n", "        ", "super", "(", "L2Norm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "gamma", "=", "scale", "or", "None", "\n", "self", ".", "eps", "=", "1e-10", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "n_channels", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.L2Norm.reset_parameters": [[117, 119], ["torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "init", ".", "constant_", "(", "self", ".", "weight", ",", "self", ".", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.L2Norm.forward": [[120, 125], ["torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze().expand_as", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze", "torch.div.pow", "torch.div.pow", "torch.div.pow", "resnet.L2Norm.weight.unsqueeze().unsqueeze", "resnet.L2Norm.weight.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "sqrt", "(", ")", "+", "self", ".", "eps", "\n", "x", "=", "torch", ".", "div", "(", "x", ",", "norm", ")", "\n", "out", "=", "self", ".", "weight", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "*", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.IOD_ResNet.__init__": [[127, 172], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.IOD_ResNet._make_layer", "resnet.IOD_ResNet._make_layer", "resnet.IOD_ResNet._make_layer", "resnet.IOD_ResNet._make_layer", "resnet.L2Norm", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet.IOD_ResNet.modules", "resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "K", ")", ":", "\n", "        ", "super", "(", "IOD_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "output_channel", "=", "64", "\n", "block", ",", "layers", "=", "resnet_spec", "[", "num_layers", "]", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "\n", "#CSP deconv", "\n", "self", ".", "expansion", "=", "4", "\n", "self", ".", "norm1", "=", "L2Norm", "(", "64", "*", "self", ".", "expansion", ",", "10", ")", "\n", "self", ".", "deconv2", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "128", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "256", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv4", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "512", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", "*", "self", ".", "expansion", ",", "512", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "L2Norm", "(", "512", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "#self.conv_L2layer3 = nn.Conv2d(256,128,kernel_size=3,stride=1,padding=1)", "\n", "self", ".", "cat", "=", "nn", ".", "Conv2d", "(", "1024", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat64", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat_bn", "=", "nn", ".", "BatchNorm2d", "(", "256", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_bn64", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_act", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "n", "=", "m", ".", "in_features", "*", "m", ".", "out_features", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.IOD_ResNet.forward": [[173, 198], ["resnet.IOD_ResNet.conv1", "resnet.IOD_ResNet.bn1", "resnet.IOD_ResNet.relu", "resnet.IOD_ResNet.maxpool", "resnet.IOD_ResNet.layer1", "resnet.IOD_ResNet.layer2", "resnet.IOD_ResNet.layer3", "resnet.IOD_ResNet.layer4", "resnet.IOD_ResNet.norm1", "resnet.IOD_ResNet.deconv2", "resnet.IOD_ResNet.deconv3", "resnet.IOD_ResNet.deconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet.IOD_ResNet.cat", "resnet.IOD_ResNet.cat_bn", "resnet.IOD_ResNet.cat_act", "resnet.IOD_ResNet.cat64", "resnet.IOD_ResNet.cat_bn64", "resnet.IOD_ResNet.cat_act"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "input", ")", ":", "#2 3 288 288", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "input", ")", "#2 64 144 144", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "#2 64 72 72", "\n", "\n", "x1", "=", "self", ".", "layer1", "(", "x", ")", "# 2 256 72 72", "\n", "x2", "=", "self", ".", "layer2", "(", "x1", ")", "# 2 512 36 36", "\n", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "# 2 1024 18 18", "\n", "x4", "=", "self", ".", "layer4", "(", "x3", ")", "#2 2048 9 9", "\n", "\n", "x1", "=", "self", ".", "norm1", "(", "x1", ")", "\n", "x2", "=", "self", ".", "deconv2", "(", "x2", ")", "\n", "x3", "=", "self", ".", "deconv3", "(", "x3", ")", "\n", "x4", "=", "self", ".", "deconv4", "(", "x4", ")", "\n", "\n", "map", "=", "torch", ".", "cat", "(", "[", "x1", ",", "x2", ",", "x3", ",", "x4", "]", ",", "dim", "=", "1", ")", "\n", "map", "=", "self", ".", "cat", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_act", "(", "map", ")", "\n", "map", "=", "self", ".", "cat64", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn64", "(", "map", ")", "\n", "x_output", "=", "self", ".", "cat_act", "(", "map", ")", "\n", "\n", "return", "x_output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.IOD_ResNet._make_layer": [[199, 215], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ",", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.IOD_ResNet.init_weights": [[218, 243], ["resnet.IOD_ResNet.deconv_L2layer4.named_modules", "resnet.IOD_ResNet.deconv_L2layer3.named_modules", "resnet.IOD_ResNet.deconv_L2layer2.named_modules", "isinstance", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "# print('=> init deconv weights from normal distribution')", "\n", "        ", "for", "name", ",", "m", "in", "self", ".", "deconv_L2layer4", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "", "", "for", "name", ",", "m", "in", "self", ".", "deconv_L2layer3", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "", "", "for", "name", ",", "m", "in", "self", ".", "deconv_L2layer2", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.resnet.conv3x3": [[23, 27], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.branch.IOD_Branch.__init__": [[17, 58], ["torch.nn.Module.__init__", "torch.nn.Sequential", "branch.IOD_Branch.hm[].bias.data.fill_", "torch.nn.Sequential", "branch.fill_fc_weights", "torch.nn.Sequential", "branch.fill_fc_weights", "torch.nn.Sequential", "branch.fill_fc_weights", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Tanh"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.network.branch.fill_fc_weights", "home.repos.pwc.inspect_result.calayzhou_iod-video.network.branch.fill_fc_weights", "home.repos.pwc.inspect_result.calayzhou_iod-video.network.branch.fill_fc_weights"], ["    ", "def", "__init__", "(", "self", ",", "input_channel", ",", "arch", ",", "head_conv", ",", "branch_info", ",", "K", ")", ":", "\n", "        ", "super", "(", "IOD_Branch", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "head_conv", ">", "0", "\n", "wh_head_conv", "=", "64", "if", "arch", "==", "'resnet'", "else", "head_conv", "\n", "\n", "self", ".", "hm", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "K", "*", "input_channel", ",", "head_conv", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "head_conv", ",", "branch_info", "[", "'hm'", "]", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "hm", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "fill_", "(", "-", "2.19", ")", "\n", "\n", "self", ".", "mov", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "K", "*", "input_channel", ",", "head_conv", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "head_conv", ",", "branch_info", "[", "'mov'", "]", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "fill_fc_weights", "(", "self", ".", "mov", ")", "\n", "\n", "self", ".", "wh", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channel", ",", "wh_head_conv", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "wh_head_conv", ",", "branch_info", "[", "'wh'", "]", "//", "K", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "fill_fc_weights", "(", "self", ".", "wh", ")", "\n", "\n", "self", ".", "sta", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channel", ",", "wh_head_conv", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "wh_head_conv", ",", "branch_info", "[", "'wh'", "]", "//", "K", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "fill_fc_weights", "(", "self", ".", "sta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.branch.IOD_Branch.forward": [[59, 78], ["torch.cat", "torch.cat", "torch.cat", "branch.IOD_Branch.hm", "branch.IOD_Branch.mov", "torch.cat.append", "torch.cat.append", "branch.IOD_Branch.wh", "branch.IOD_Branch.sta"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_chunk_pre", ")", ":", "\n", "        ", "output", "=", "{", "}", "\n", "output_wh", "=", "[", "]", "\n", "output_STA_offset", "=", "[", "]", "\n", "\n", "for", "feature", "in", "input_chunk_pre", ":", "# list [ (2 64 72 72),......]", "\n", "            ", "output_wh", ".", "append", "(", "self", ".", "wh", "(", "feature", ")", ")", "#list [ (2 2 72 72),......]", "\n", "output_STA_offset", ".", "append", "(", "self", ".", "sta", "(", "feature", ")", ")", "\n", "\n", "\n", "", "input_chunk", "=", "torch", ".", "cat", "(", "input_chunk_pre", ",", "dim", "=", "1", ")", "#2 192 72 72", "\n", "output_wh", "=", "torch", ".", "cat", "(", "output_wh", ",", "dim", "=", "1", ")", "#2 2*k 72 72", "\n", "output_STA_offset", "=", "torch", ".", "cat", "(", "output_STA_offset", ",", "dim", "=", "1", ")", "\n", "\n", "output", "[", "'hm'", "]", "=", "self", ".", "hm", "(", "input_chunk", ")", "\n", "output", "[", "'mov'", "]", "=", "self", ".", "mov", "(", "input_chunk", ")", "\n", "output", "[", "'STA_offset'", "]", "=", "output_STA_offset", "\n", "output", "[", "'wh'", "]", "=", "output_wh", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.network.branch.fill_fc_weights": [[9, 14], ["layers.modules", "isinstance", "torch.nn.init.constant_"], "function", ["None"], ["def", "fill_fc_weights", "(", "layers", ")", ":", "\n", "    ", "for", "m", "in", "layers", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.mSEModule.__init__": [[21, 59], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "n_segment", "=", "8", ",", "index", "=", "1", ")", ":", "\n", "        ", "super", "(", "mSEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channel", "=", "channel", "\n", "self", ".", "reduction", "=", "16", "\n", "self", ".", "n_segment", "=", "n_segment", "\n", "self", ".", "stride", "=", "2", "**", "(", "index", "-", "1", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "channel", ",", "\n", "out_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "self", ".", "channel", "//", "self", ".", "reduction", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "out_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "groups", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "avg_pool_forward2", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "avg_pool_forward4", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "4", ",", "stride", "=", "4", ")", "\n", "\n", "self", ".", "sigmoid_forward", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "avg_pool_backward2", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "#nn.AdaptiveMaxPool2d(1)", "\n", "self", ".", "avg_pool_backward4", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "4", ",", "stride", "=", "4", ")", "\n", "\n", "self", ".", "sigmoid_backward", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "pad1_forward", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ")", "\n", "self", ".", "pad1_backward", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "out_channels", "=", "self", ".", "channel", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "self", ".", "channel", ")", "\n", "\n", "self", ".", "conv3_smallscale2", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "out_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "padding", "=", "1", ",", "kernel_size", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3_smallscale2", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "self", ".", "channel", "//", "self", ".", "reduction", ")", "\n", "\n", "self", ".", "conv3_smallscale4", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "out_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "padding", "=", "1", ",", "kernel_size", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3_smallscale4", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "self", ".", "channel", "//", "self", ".", "reduction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.mSEModule.spatial_pool": [[60, 75], ["x.size", "input_x.unsqueeze.unsqueeze.view", "input_x.unsqueeze.unsqueeze.unsqueeze", "base_module.mSEModule.conv_mask", "context_mask.view.view.view", "base_module.mSEModule.softmax", "context_mask.view.view.view"], "methods", ["None"], ["", "def", "spatial_pool", "(", "self", ",", "x", ")", ":", "\n", "        ", "nt", ",", "channel", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "input_x", "=", "x", "\n", "# [N, C, H * W]", "\n", "input_x", "=", "input_x", ".", "view", "(", "nt", ",", "channel", ",", "height", "*", "width", ")", "\n", "# [N, 1, C, H * W]", "\n", "input_x", "=", "input_x", ".", "unsqueeze", "(", "1", ")", "\n", "# [N, 1, H, W]", "\n", "context_mask", "=", "self", ".", "conv_mask", "(", "x", ")", "\n", "# [N, 1, H * W]", "\n", "context_mask", "=", "context_mask", ".", "view", "(", "nt", ",", "1", ",", "height", "*", "width", ")", "\n", "# [N, 1, H * W]", "\n", "context_mask", "=", "self", ".", "softmax", "(", "context_mask", ")", "\n", "context_mask", "=", "context_mask", ".", "view", "(", "nt", ",", "1", ",", "height", ",", "width", ")", "\n", "return", "context_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.mSEModule.forward": [[77, 118], ["base_module.mSEModule.conv1", "base_module.mSEModule.bn1", "base_module.mSEModule.view", "base_module.mSEModule.view.split", "base_module.mSEModule.view.split", "base_module.mSEModule.conv2", "base_module.mSEModule.view", "base_module.mSEModule.view.split", "base_module.mSEModule.view.split", "torch.pad", "torch.pad", "torch.pad", "diff_fea_pluszero_forward.view.view.view", "torch.pad", "torch.pad", "torch.pad", "diff_fea_pluszero_backward.view.view.view", "base_module.mSEModule.avg_pool_forward2", "base_module.mSEModule.avg_pool_backward2", "base_module.mSEModule.bn3_smallscale2", "base_module.mSEModule.bn3_smallscale2", "base_module.mSEModule.bn3_smallscale4", "base_module.mSEModule.bn3_smallscale4", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "base_module.mSEModule.bn3", "base_module.mSEModule.bn3", "base_module.mSEModule.conv3_smallscale2", "base_module.mSEModule.conv3_smallscale2", "base_module.mSEModule.conv3_smallscale4", "base_module.mSEModule.conv3_smallscale4", "base_module.mSEModule.conv3", "base_module.mSEModule.conv3", "base_module.mSEModule.sigmoid_forward", "base_module.mSEModule.sigmoid_backward", "diff_fea_pluszero_forward.view.view.size", "diff_fea_pluszero_backward.view.view.size", "base_module.mSEModule.size", "base_module.mSEModule.size", "diff_fea_pluszero_forward.view.view.size", "diff_fea_pluszero_backward.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "bottleneck", "=", "self", ".", "conv1", "(", "x", ")", "# nt, c//r, h, w", "\n", "bottleneck", "=", "self", ".", "bn1", "(", "bottleneck", ")", "# nt, c//r, h, w", "\n", "reshape_bottleneck", "=", "bottleneck", ".", "view", "(", "(", "-", "1", ",", "self", ".", "n_segment", ")", "+", "bottleneck", ".", "size", "(", ")", "[", "1", ":", "]", ")", "# n, t, c//r, h, w", "\n", "\n", "t_fea_forward", ",", "_", "=", "reshape_bottleneck", ".", "split", "(", "[", "self", ".", "n_segment", "-", "1", ",", "1", "]", ",", "dim", "=", "1", ")", "# n, t-1, c//r, h, w", "\n", "_", ",", "t_fea_backward", "=", "reshape_bottleneck", ".", "split", "(", "[", "1", ",", "self", ".", "n_segment", "-", "1", "]", ",", "dim", "=", "1", ")", "# n, t-1, c//r, h, w", "\n", "\n", "conv_bottleneck", "=", "self", ".", "conv2", "(", "bottleneck", ")", "# nt, c//r, h, w", "\n", "reshape_conv_bottleneck", "=", "conv_bottleneck", ".", "view", "(", "(", "-", "1", ",", "self", ".", "n_segment", ")", "+", "conv_bottleneck", ".", "size", "(", ")", "[", "1", ":", "]", ")", "# n, t, c//r, h, w", "\n", "_", ",", "tPlusone_fea_forward", "=", "reshape_conv_bottleneck", ".", "split", "(", "[", "1", ",", "self", ".", "n_segment", "-", "1", "]", ",", "dim", "=", "1", ")", "# n, t-1, c//r, h, w", "\n", "tPlusone_fea_backward", ",", "_", "=", "reshape_conv_bottleneck", ".", "split", "(", "[", "self", ".", "n_segment", "-", "1", ",", "1", "]", ",", "dim", "=", "1", ")", "# n, t-1, c//r, h, w", "\n", "diff_fea_forward", "=", "tPlusone_fea_forward", "-", "t_fea_forward", "# n, t-1, c//r, h, w", "\n", "diff_fea_backward", "=", "tPlusone_fea_backward", "-", "t_fea_backward", "# n, t-1, c//r, h, w", "\n", "diff_fea_pluszero_forward", "=", "F", ".", "pad", "(", "diff_fea_forward", ",", "self", ".", "pad1_forward", ",", "mode", "=", "\"constant\"", ",", "value", "=", "0", ")", "# n, t, c//r, h, w", "\n", "diff_fea_pluszero_forward", "=", "diff_fea_pluszero_forward", ".", "view", "(", "(", "-", "1", ",", ")", "+", "diff_fea_pluszero_forward", ".", "size", "(", ")", "[", "2", ":", "]", ")", "#nt, c//r, h, w", "\n", "diff_fea_pluszero_backward", "=", "F", ".", "pad", "(", "diff_fea_backward", ",", "self", ".", "pad1_backward", ",", "mode", "=", "\"constant\"", ",", "value", "=", "0", ")", "# n, t, c//r, h, w", "\n", "diff_fea_pluszero_backward", "=", "diff_fea_pluszero_backward", ".", "view", "(", "(", "-", "1", ",", ")", "+", "diff_fea_pluszero_backward", ".", "size", "(", ")", "[", "2", ":", "]", ")", "#nt, c//r, h, w", "\n", "y_forward_smallscale2", "=", "self", ".", "avg_pool_forward2", "(", "diff_fea_pluszero_forward", ")", "# nt, c//r, 1, 1", "\n", "y_backward_smallscale2", "=", "self", ".", "avg_pool_backward2", "(", "diff_fea_pluszero_backward", ")", "# nt, c//r, 1, 1", "\n", "\n", "y_forward_smallscale4", "=", "diff_fea_pluszero_forward", "\n", "y_backward_smallscale4", "=", "diff_fea_pluszero_backward", "\n", "y_forward_smallscale2", "=", "self", ".", "bn3_smallscale2", "(", "self", ".", "conv3_smallscale2", "(", "y_forward_smallscale2", ")", ")", "\n", "y_backward_smallscale2", "=", "self", ".", "bn3_smallscale2", "(", "self", ".", "conv3_smallscale2", "(", "y_backward_smallscale2", ")", ")", "\n", "\n", "y_forward_smallscale4", "=", "self", ".", "bn3_smallscale4", "(", "self", ".", "conv3_smallscale4", "(", "y_forward_smallscale4", ")", ")", "\n", "y_backward_smallscale4", "=", "self", ".", "bn3_smallscale4", "(", "self", ".", "conv3_smallscale4", "(", "y_backward_smallscale4", ")", ")", "\n", "\n", "y_forward_smallscale2", "=", "F", ".", "interpolate", "(", "y_forward_smallscale2", ",", "diff_fea_pluszero_forward", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "y_backward_smallscale2", "=", "F", ".", "interpolate", "(", "y_backward_smallscale2", ",", "diff_fea_pluszero_backward", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "\n", "y_forward", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "1.0", "/", "3.0", "*", "diff_fea_pluszero_forward", "+", "1.0", "/", "3.0", "*", "y_forward_smallscale2", "+", "1.0", "/", "3.0", "*", "y_forward_smallscale4", ")", ")", "# nt, c, 1, 1", "\n", "y_backward", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "1.0", "/", "3.0", "*", "diff_fea_pluszero_backward", "+", "1.0", "/", "3.0", "*", "y_backward_smallscale2", "+", "1.0", "/", "3.0", "*", "y_backward_smallscale4", ")", ")", "# nt, c, 1, 1", "\n", "\n", "y_forward", "=", "self", ".", "sigmoid_forward", "(", "y_forward", ")", "-", "0.5", "\n", "y_backward", "=", "self", ".", "sigmoid_backward", "(", "y_backward", ")", "-", "0.5", "\n", "\n", "y", "=", "0.5", "*", "y_forward", "+", "0.5", "*", "y_backward", "\n", "output", "=", "x", "+", "x", "*", "y", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.ShiftModule.__init__": [[120, 143], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "base_module.ShiftModule.conv.weight.data.zero_", "base_module.ShiftModule.conv.weight.data.zero_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "n_segment", "=", "8", ",", "n_div", "=", "8", ",", "mode", "=", "'shift'", ")", ":", "\n", "        ", "super", "(", "ShiftModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_channels", "=", "input_channels", "\n", "self", ".", "n_segment", "=", "n_segment", "\n", "self", ".", "fold_div", "=", "n_div", "\n", "self", ".", "fold", "=", "self", ".", "input_channels", "//", "self", ".", "fold_div", "\n", "self", ".", "conv", "=", "nn", ".", "Conv1d", "(", "self", ".", "fold_div", "*", "self", ".", "fold", ",", "self", ".", "fold_div", "*", "self", ".", "fold", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "groups", "=", "self", ".", "fold_div", "*", "self", ".", "fold", ",", "\n", "bias", "=", "False", ")", "\n", "\n", "if", "mode", "==", "'shift'", ":", "\n", "            ", "self", ".", "conv", ".", "weight", ".", "requires_grad", "=", "True", "\n", "self", ".", "conv", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "conv", ".", "weight", ".", "data", "[", ":", "self", ".", "fold", ",", "0", ",", "2", "]", "=", "1", "# shift left", "\n", "self", ".", "conv", ".", "weight", ".", "data", "[", "self", ".", "fold", ":", "2", "*", "self", ".", "fold", ",", "0", ",", "0", "]", "=", "1", "# shift right", "\n", "if", "2", "*", "self", ".", "fold", "<", "self", ".", "input_channels", ":", "\n", "                ", "self", ".", "conv", ".", "weight", ".", "data", "[", "2", "*", "self", ".", "fold", ":", ",", "0", ",", "1", "]", "=", "1", "# fixed", "\n", "", "", "elif", "mode", "==", "'fixed'", ":", "\n", "            ", "self", ".", "conv", ".", "weight", ".", "requires_grad", "=", "True", "\n", "self", ".", "conv", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "conv", ".", "weight", ".", "data", "[", ":", ",", "0", ",", "1", "]", "=", "1", "# fixed", "\n", "", "elif", "mode", "==", "'norm'", ":", "\n", "            ", "self", ".", "conv", ".", "weight", ".", "requires_grad", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.ShiftModule.forward": [[144, 155], ["x.contiguous().view.contiguous().view.size", "x.contiguous().view.contiguous().view.view", "x.contiguous().view.contiguous().view.permute", "x.contiguous().view.contiguous().view.contiguous().view", "base_module.ShiftModule.conv", "x.contiguous().view.contiguous().view.view", "x.contiguous().view.contiguous().view.permute", "x.contiguous().view.contiguous().view.contiguous().view", "x.contiguous().view.contiguous().view.contiguous", "x.contiguous().view.contiguous().view.contiguous"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "nt", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "n_batch", "=", "nt", "//", "self", ".", "n_segment", "\n", "x", "=", "x", ".", "view", "(", "n_batch", ",", "self", ".", "n_segment", ",", "c", ",", "h", ",", "w", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "4", ",", "2", ",", "1", ")", "# (n_batch, h, w, c, n_segment)", "\n", "x", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "n_batch", "*", "h", "*", "w", ",", "c", ",", "self", ".", "n_segment", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "# (n_batch*h*w, c, n_segment)", "\n", "x", "=", "x", ".", "view", "(", "n_batch", ",", "h", ",", "w", ",", "c", ",", "self", ".", "n_segment", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "4", ",", "3", ",", "1", ",", "2", ")", "# (n_batch, n_segment, c, h, w)", "\n", "x", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "nt", ",", "c", ",", "h", ",", "w", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.BasicBlock.__init__": [[165, 174], ["torch.Module.__init__", "base_module.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "base_module.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "num_segments", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.BasicBlock.forward": [[175, 192], ["base_module.BasicBlock.conv1", "base_module.BasicBlock.bn1", "base_module.BasicBlock.relu", "base_module.BasicBlock.conv2", "base_module.BasicBlock.bn2", "base_module.BasicBlock.relu", "base_module.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.Bottleneck.__init__": [[196, 211], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "num_segments", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.Bottleneck.forward": [[212, 233], ["base_module.Bottleneck.conv1", "base_module.Bottleneck.bn1", "base_module.Bottleneck.relu", "base_module.Bottleneck.conv2", "base_module.Bottleneck.bn2", "base_module.Bottleneck.relu", "base_module.Bottleneck.conv3", "base_module.Bottleneck.bn3", "base_module.Bottleneck.relu", "base_module.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.BottleneckShift.__init__": [[237, 254], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "base_module.mSEModule", "base_module.ShiftModule", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "num_segments", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BottleneckShift", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "num_segments", "=", "num_segments", "\n", "self", ".", "mse", "=", "mSEModule", "(", "planes", ",", "n_segment", "=", "self", ".", "num_segments", ",", "index", "=", "1", ")", "\n", "self", ".", "shift", "=", "ShiftModule", "(", "planes", ",", "n_segment", "=", "self", ".", "num_segments", ",", "n_div", "=", "8", ",", "mode", "=", "'shift'", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.BottleneckShift.forward": [[255, 279], ["base_module.BottleneckShift.conv1", "base_module.BottleneckShift.bn1", "base_module.BottleneckShift.relu", "base_module.BottleneckShift.mse", "base_module.BottleneckShift.shift", "base_module.BottleneckShift.conv2", "base_module.BottleneckShift.bn2", "base_module.BottleneckShift.relu", "base_module.BottleneckShift.conv3", "base_module.BottleneckShift.bn3", "base_module.BottleneckShift.relu", "base_module.BottleneckShift.downsample"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.TemporalShift.shift"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "mse", "(", "out", ")", "\n", "out", "=", "self", ".", "shift", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.FBResNet.__init__": [[282, 310], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "base_module.FBResNet._make_layer", "base_module.FBResNet._make_layer", "base_module.FBResNet._make_layer", "base_module.FBResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "base_module.FBResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "num_segments", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "\n", "self", ".", "input_space", "=", "None", "\n", "self", ".", "input_size", "=", "(", "224", ",", "224", ",", "3", ")", "\n", "self", ".", "mean", "=", "None", "\n", "self", ".", "std", "=", "None", "\n", "self", ".", "num_segments", "=", "num_segments", "\n", "super", "(", "FBResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "self", ".", "num_segments", ",", "Bottleneck", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "self", ".", "num_segments", ",", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "self", ".", "num_segments", ",", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "self", ".", "num_segments", ",", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "last_linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.FBResNet._make_layer": [[312, 328], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "num_segments", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "num_segments", ",", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "num_segments", ",", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.FBResNet.features": [[330, 342], ["base_module.FBResNet.conv1", "base_module.FBResNet.clone", "base_module.FBResNet.bn1", "base_module.FBResNet.relu", "base_module.FBResNet.maxpool", "base_module.FBResNet.layer1", "base_module.FBResNet.layer2", "base_module.FBResNet.layer3", "base_module.FBResNet.layer4"], "methods", ["None"], ["", "def", "features", "(", "self", ",", "input", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "input", ")", "\n", "self", ".", "conv1_input", "=", "x", ".", "clone", "(", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.FBResNet.logits": [[343, 349], ["torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "base_module.FBResNet.view", "base_module.FBResNet.last_linear", "base_module.FBResNet.size"], "methods", ["None"], ["", "def", "logits", "(", "self", ",", "features", ")", ":", "\n", "        ", "adaptiveAvgPoolWidth", "=", "features", ".", "shape", "[", "2", "]", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "features", ",", "kernel_size", "=", "adaptiveAvgPoolWidth", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "last_linear", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.FBResNet.forward": [[351, 355], ["base_module.FBResNet.features", "base_module.FBResNet.logits"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.FBResNet.features", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.FBResNet.logits"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "input", ")", "\n", "x", "=", "self", ".", "logits", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.conv3x3": [[156, 160], ["torch.Conv2d"], "function", ["None"], ["", "", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.fbresnet50": [[356, 368], ["base_module.FBResNet", "FBResNet.load_state_dict", "print", "torch.load_url"], "function", ["None"], ["", "", "def", "fbresnet50", "(", "num_segments", "=", "8", ",", "pretrained", "=", "False", ",", "num_classes", "=", "1000", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "FBResNet", "(", "num_segments", ",", "BottleneckShift", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "if", "pretrained", ":", "\n", "         ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'fbresnet50'", "]", ")", ",", "strict", "=", "False", ")", "\n", "print", "(", "\"TDN backbone: fbresnet50 loaded\"", ")", "\n", "# check_state_dict(model.state_dict(), state_dict)", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.fbresnet101": [[370, 380], ["base_module.FBResNet", "FBResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "fbresnet101", "(", "num_segments", ",", "pretrained", "=", "False", ",", "num_classes", "=", "1000", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "FBResNet", "(", "num_segments", ",", "BottleneckShift", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'fbresnet101'", "]", ")", ",", "strict", "=", "False", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_modeling.SEModule.__init__": [[9, 15], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "dw_conv", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "ks", "=", "1", "\n", "pad", "=", "(", "ks", "-", "1", ")", "//", "2", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "ks", ",", "\n", "padding", "=", "pad", ",", "groups", "=", "channels", "if", "dw_conv", "else", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_modeling.SEModule.forward": [[16, 19], ["temporal_modeling.SEModule.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_modeling.TAM.__init__": [[23, 36], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "temporal_modeling.SEModule", "temporal_modeling.SEModule", "temporal_modeling.SEModule", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "temporal_modeling.SEModule", "range"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "duration", ",", "channels", ",", "dw_conv", "=", "True", ",", "blending_frames", "=", "3", ",", "blending_method", "=", "'sum'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "blending_frames", "=", "blending_frames", "\n", "self", ".", "blending_method", "=", "blending_method", "\n", "\n", "if", "blending_frames", "==", "3", ":", "\n", "            ", "self", ".", "prev_se", "=", "SEModule", "(", "channels", ",", "dw_conv", ")", "\n", "self", ".", "next_se", "=", "SEModule", "(", "channels", ",", "dw_conv", ")", "\n", "self", ".", "curr_se", "=", "SEModule", "(", "channels", ",", "dw_conv", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "blending_layers", "=", "nn", ".", "ModuleList", "(", "[", "SEModule", "(", "channels", ",", "dw_conv", ")", "for", "_", "in", "range", "(", "blending_frames", ")", "]", ")", "\n", "", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "duration", "=", "duration", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_modeling.TAM.name": [[37, 39], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "\"TAM-b{}-{}\"", ".", "format", "(", "self", ".", "blending_frames", ",", "self", ".", "blending_method", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_modeling.TAM.forward": [[40, 90], ["temporal_modeling.TAM.relu", "torch.sum.view", "torch.sum.view", "torch.sum.view", "temporal_modeling.TAM.prev_se", "temporal_modeling.TAM.curr_se", "temporal_modeling.TAM.next_se", "prev_x.view.view.view", "curr_x.view.view.view", "next_x.view.view.view", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "se", "x.view", "shifted_xs.append", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "ValueError", "torch.sum.size", "torch.sum.size", "torch.sum.size", "prev_x.view.view.size", "curr_x.view.view.size", "next_x.view.view.size", "abs", "x.size", "torch.pad", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "if", "self", ".", "blending_frames", "==", "3", ":", "\n", "            ", "prev_x", "=", "self", ".", "prev_se", "(", "x", ")", "\n", "curr_x", "=", "self", ".", "curr_se", "(", "x", ")", "\n", "next_x", "=", "self", ".", "next_se", "(", "x", ")", "\n", "prev_x", "=", "prev_x", ".", "view", "(", "(", "-", "1", ",", "self", ".", "duration", ")", "+", "prev_x", ".", "size", "(", ")", "[", "1", ":", "]", ")", "\n", "curr_x", "=", "curr_x", ".", "view", "(", "(", "-", "1", ",", "self", ".", "duration", ")", "+", "curr_x", ".", "size", "(", ")", "[", "1", ":", "]", ")", "\n", "next_x", "=", "next_x", ".", "view", "(", "(", "-", "1", ",", "self", ".", "duration", ")", "+", "next_x", ".", "size", "(", ")", "[", "1", ":", "]", ")", "\n", "\n", "prev_x", "=", "F", ".", "pad", "(", "prev_x", ",", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ")", ")", "[", ":", ",", ":", "-", "1", ",", "...", "]", "\n", "next_x", "=", "F", ".", "pad", "(", "next_x", ",", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ")", ")", "[", ":", ",", "1", ":", ",", "...", "]", "\n", "\n", "out", "=", "torch", ".", "stack", "(", "[", "prev_x", ",", "curr_x", ",", "next_x", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "# multiple blending", "\n", "            ", "xs", "=", "[", "se", "(", "x", ")", "for", "se", "in", "self", ".", "blending_layers", "]", "\n", "xs", "=", "[", "x", ".", "view", "(", "(", "-", "1", ",", "self", ".", "duration", ")", "+", "x", ".", "size", "(", ")", "[", "1", ":", "]", ")", "for", "x", "in", "xs", "]", "\n", "\n", "shifted_xs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "blending_frames", ")", ":", "\n", "                ", "shift", "=", "i", "-", "(", "self", ".", "blending_frames", "//", "2", ")", "\n", "x_temp", "=", "xs", "[", "i", "]", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "x_temp", ".", "shape", "\n", "start_index", "=", "0", "if", "shift", "<", "0", "else", "shift", "\n", "end_index", "=", "t", "if", "shift", "<", "0", "else", "t", "+", "shift", "\n", "padding", "=", "None", "\n", "if", "shift", "<", "0", ":", "\n", "                    ", "padding", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "abs", "(", "shift", ")", ",", "0", ")", "\n", "", "elif", "shift", ">", "0", ":", "\n", "                    ", "padding", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "shift", ")", "\n", "", "shifted_xs", ".", "append", "(", "F", ".", "pad", "(", "x_temp", ",", "padding", ")", "[", ":", ",", "start_index", ":", "end_index", ",", "...", "]", "\n", "if", "padding", "is", "not", "None", "else", "x_temp", ")", "\n", "\n", "", "out", "=", "torch", ".", "stack", "(", "shifted_xs", ",", "dim", "=", "0", ")", "\n", "\n", "", "if", "self", ".", "blending_method", "==", "'sum'", ":", "\n", "            ", "out", "=", "torch", ".", "sum", "(", "out", ",", "dim", "=", "0", ")", "\n", "", "elif", "self", ".", "blending_method", "==", "'max'", ":", "\n", "            ", "out", ",", "_", "=", "torch", ".", "max", "(", "out", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Blending method %s not supported'", "%", "(", "self", ".", "blending_method", ")", ")", "\n", "\n", "", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "# [N, T, C, N, H]", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "view", "(", "(", "-", "1", ",", ")", "+", "out", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "# out = out.contiguous()", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_modeling.temporal_modeling_module": [[92, 101], ["temporal_modeling.TAM", "ValueError"], "function", ["None"], ["", "", "def", "temporal_modeling_module", "(", "name", ",", "duration", ",", "channels", ",", "dw_conv", "=", "True", ",", "\n", "blending_frames", "=", "3", ",", "blending_method", "=", "'sum'", ")", ":", "\n", "    ", "if", "name", "is", "None", "or", "name", "==", "'TSN'", ":", "\n", "        ", "return", "None", "\n", "\n", "", "if", "name", "==", "'TAM'", ":", "\n", "        ", "return", "TAM", "(", "duration", ",", "channels", ",", "dw_conv", ",", "blending_frames", ",", "blending_method", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'incorrect tsm module name %s'", "%", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.WeightConvNet.__init__": [[55, 59], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "groups", ",", "n_segment", ")", ":", "\n", "        ", "super", "(", "WeightConvNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lastlayer", "=", "nn", ".", "Conv1d", "(", "in_channels", ",", "groups", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.WeightConvNet.forward": [[60, 66], ["temporal_interlace.WeightConvNet.lastlayer", "x.permute.permute.view", "x.permute.permute.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "N", ",", "C", ",", "T", "=", "x", ".", "shape", "\n", "x", "=", "self", ".", "lastlayer", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "self", ".", "groups", ",", "T", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.BiasConvFc2Net.__init__": [[69, 75], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "groups", ",", "n_segment", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ":", "\n", "        ", "super", "(", "BiasConvFc2Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv1d", "(", "in_channels", ",", "1", ",", "kernel_size", ",", "padding", "=", "padding", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_segment", ",", "n_segment", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "lastlayer", "=", "nn", ".", "Linear", "(", "n_segment", ",", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.BiasConvFc2Net.forward": [[76, 84], ["temporal_interlace.BiasConvFc2Net.conv", "x.view.view.view", "temporal_interlace.BiasConvFc2Net.relu", "temporal_interlace.BiasConvFc2Net.lastlayer", "x.view.view.view", "temporal_interlace.BiasConvFc2Net.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "N", ",", "C", ",", "T", "=", "x", ".", "shape", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "T", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "lastlayer", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "1", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.BiasNet.__init__": [[86, 91], ["torch.Module.__init__", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "temporal_interlace.BiasConvFc2Net"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "groups", ",", "n_segment", ")", ":", "\n", "        ", "super", "(", "BiasNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "net", "=", "BiasConvFc2Net", "(", "in_channels", ",", "groups", ",", "n_segment", ",", "3", ",", "1", ")", "\n", "self", ".", "net", ".", "lastlayer", ".", "bias", ".", "data", "[", "...", "]", "=", "0.5108", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.BiasNet.forward": [[92, 96], ["temporal_interlace.BiasNet.net", "temporal_interlace.BiasNet.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "net", "(", "x", ")", "\n", "x", "=", "4", "*", "(", "self", ".", "sigmoid", "(", "x", ")", "-", "0.5", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.WeightNet.__init__": [[99, 107], ["torch.Module.__init__", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "temporal_interlace.WeightConvNet"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "groups", ",", "n_segment", ")", ":", "\n", "        ", "super", "(", "WeightNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "groups", "=", "groups", "*", "2", "\n", "\n", "self", ".", "net", "=", "WeightConvNet", "(", "in_channels", ",", "groups", ",", "n_segment", ")", "\n", "\n", "self", ".", "net", ".", "lastlayer", ".", "bias", ".", "data", "[", "...", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.WeightNet.forward": [[108, 112], ["temporal_interlace.WeightNet.net", "temporal_interlace.WeightNet.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "net", "(", "x", ")", "\n", "x", "=", "2", "*", "self", ".", "sigmoid", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.TemporalDeform.__init__": [[115, 123], ["torch.Module.__init__", "temporal_interlace.BiasNet", "temporal_interlace.WeightNet"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "n_segment", "=", "3", ",", "shift_div", "=", "1", ")", ":", "\n", "        ", "super", "(", "TemporalDeform", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_segment", "=", "n_segment", "\n", "self", ".", "shift_div", "=", "shift_div", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "biasnet", "=", "BiasNet", "(", "in_channels", "//", "shift_div", ",", "2", ",", "n_segment", ")", "\n", "self", ".", "weightnet", "=", "WeightNet", "(", "in_channels", "//", "shift_div", ",", "2", ",", "n_segment", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.TemporalDeform._init_weights": [[125, 131], ["weights.size", "numpy.random.normal", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "weights.size", "weights.size", "numpy.random.normal.reshape", "weights.size"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_init_weights", "(", "weights", ",", "std", ")", ":", "\n", "        ", "fan_out", "=", "weights", ".", "size", "(", "0", ")", "\n", "fan_in", "=", "weights", ".", "size", "(", "1", ")", "*", "weights", ".", "size", "(", "2", ")", "\n", "w", "=", "np", ".", "random", ".", "normal", "(", "0.0", ",", "std", ",", "(", "fan_out", ",", "fan_in", ")", ")", "\n", "return", "torch", ".", "from_numpy", "(", "w", ".", "reshape", "(", "weights", ".", "size", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.TemporalDeform.forward": [[132, 164], ["x.size", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "x_def.view.view.view", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "x_pooled_1d.permute().contiguous.permute().contiguous.permute().contiguous", "temporal_interlace.TemporalDeform.biasnet().view", "temporal_interlace.TemporalDeform.weightnet", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "temporal_interlace.linear_sampler", "x_weight.view.view.repeat", "x_weight.view.view.view", "x_sa.contiguous().view.contiguous().view.contiguous().view", "x_weight.view.view.size", "x_weight.view.view.size", "x_pooled_1d.permute().contiguous.permute().contiguous.permute", "temporal_interlace.TemporalDeform.biasnet", "x_sa.contiguous().view.contiguous().view.contiguous"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.linear_sampler"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "nt", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "n_batch", "=", "nt", "//", "self", ".", "n_segment", "\n", "fold", "=", "c", "//", "self", ".", "shift_div", "\n", "\n", "out", "=", "torch", ".", "zeros_like", "(", "x", ")", "\n", "x_def", "=", "x", "[", ":", ",", ":", "fold", ",", ":", "]", "\n", "\n", "x_def", "=", "x_def", ".", "view", "(", "n_batch", ",", "self", ".", "n_segment", ",", "fold", ",", "h", ",", "w", ")", "\n", "\n", "x_pooled", "=", "torch", ".", "mean", "(", "x_def", ",", "3", ")", "\n", "x_pooled_1d", "=", "torch", ".", "mean", "(", "x_pooled", ",", "3", ")", "\n", "x_pooled_1d", "=", "x_pooled_1d", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "# N * T * C", "\n", "\n", "x_bias", "=", "self", ".", "biasnet", "(", "x_pooled_1d", ")", ".", "view", "(", "n_batch", ",", "-", "1", ")", "\n", "x_weight", "=", "self", ".", "weightnet", "(", "x_pooled_1d", ")", "\n", "\n", "x_bias", "=", "torch", ".", "cat", "(", "[", "x_bias", ",", "-", "x_bias", "]", ",", "1", ")", "\n", "x_sa", "=", "linear_sampler", "(", "x_def", ",", "x_bias", ")", "\n", "\n", "x_weight", "=", "x_weight", "[", ":", ",", ":", ",", ":", ",", "None", "]", "\n", "x_weight", "=", "x_weight", ".", "repeat", "(", "1", ",", "1", ",", "2", ",", "fold", "//", "2", "//", "2", ")", "\n", "x_weight", "=", "x_weight", ".", "view", "(", "x_weight", ".", "size", "(", "0", ")", ",", "x_weight", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "\n", "x_weight", "=", "x_weight", "[", ":", ",", ":", ",", ":", ",", "None", ",", "None", "]", "\n", "x_sa", "=", "x_sa", "*", "x_weight", "\n", "x_sa", "=", "x_sa", ".", "contiguous", "(", ")", ".", "view", "(", "nt", ",", "fold", ",", "h", ",", "w", ")", "\n", "\n", "out", "[", ":", ",", ":", "fold", ",", ":", "]", "=", "x_sa", "\n", "out", "[", ":", ",", "fold", ":", ",", ":", "]", "=", "x", "[", ":", ",", "fold", ":", ",", ":", "]", "\n", "return", "out", ",", "x_bias", ",", "x_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.CombinNet.__init__": [[166, 171], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net1", ",", "net2", ")", ":", "\n", "        ", "super", "(", "CombinNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net1", "=", "net1", "\n", "self", ".", "net2", "=", "net2", "\n", "self", ".", "buffer", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.CombinNet.forward": [[172, 180], ["temporal_interlace.CombinNet.net1", "temporal_interlace.CombinNet.net2", "temporal_interlace.CombinNet.buffer.clear", "temporal_interlace.CombinNet.buffer.append", "temporal_interlace.CombinNet.buffer.append", "x_bias.cpu().detach().numpy", "x_weight.cpu().detach().numpy", "x_bias.cpu().detach", "x_weight.cpu().detach", "x_bias.cpu", "x_weight.cpu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ",", "x_bias", ",", "x_weight", "=", "self", ".", "net1", "(", "x", ")", "\n", "x", "=", "self", ".", "net2", "(", "x", ")", "\n", "self", ".", "buffer", ".", "clear", "(", ")", "\n", "self", ".", "buffer", ".", "append", "(", "x_bias", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "self", ".", "buffer", ".", "append", "(", "x_weight", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.solve_sigmoid": [[15, 17], ["math.log"], "function", ["None"], ["def", "solve_sigmoid", "(", "x", ")", ":", "\n", "    ", "return", "-", "math", ".", "log", "(", "1.0", "/", "x", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.linear_sampler": [[19, 53], ["torch.floor().int", "torch.floor().int", "torch.floor().int", "network.twod_models.cuda_shift.rtc_wrap.ShiftFeatureFunc", "network.twod_models.cuda_shift.rtc_wrap.ShiftFeatureFunc", "data.view().contiguous.view().contiguous", "network.twod_models.cuda_shift.rtc_wrap.ShiftFeatureFunc.apply", "network.twod_models.cuda_shift.rtc_wrap.ShiftFeatureFunc.apply", "w_0[].repeat", "w_0.view.view", "w_1[].repeat", "w_1.view.view", "out.view.view", "w_0.view.size", "w_1.view.size", "torch.floor", "torch.floor", "torch.floor", "data.view().contiguous.view", "torch.floor().int.float"], "function", ["None"], ["", "def", "linear_sampler", "(", "data", ",", "bias", ")", ":", "\n", "    ", "'''\n    data: N * T * C * H * W\n    bias: N * T * Groups\n    weight: N * T\n    '''", "\n", "N", ",", "T", ",", "C", ",", "H", ",", "W", "=", "data", ".", "shape", "\n", "bias_0", "=", "torch", ".", "floor", "(", "bias", ")", ".", "int", "(", ")", "\n", "bias_1", "=", "bias_0", "+", "1", "\n", "\n", "# N * T * C * H * W", "\n", "sf1", "=", "ShiftFeatureFunc", "(", ")", "\n", "sf2", "=", "ShiftFeatureFunc", "(", ")", "\n", "\n", "data", "=", "data", ".", "view", "(", "N", ",", "T", ",", "C", ",", "H", "*", "W", ")", ".", "contiguous", "(", ")", "\n", "data_0", "=", "sf1", ".", "apply", "(", "data", ",", "bias_0", ")", "\n", "data_1", "=", "sf2", ".", "apply", "(", "data", ",", "bias_1", ")", "\n", "\n", "w_0", "=", "1", "-", "(", "bias", "-", "bias_0", ".", "float", "(", ")", ")", "\n", "w_1", "=", "1", "-", "w_0", "\n", "\n", "groupsize", "=", "bias", ".", "shape", "[", "1", "]", "\n", "w_0", "=", "w_0", "[", ":", ",", ":", ",", "None", "]", ".", "repeat", "(", "1", ",", "1", ",", "C", "//", "groupsize", ")", "\n", "w_0", "=", "w_0", ".", "view", "(", "w_0", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "w_1", "=", "w_1", "[", ":", ",", ":", ",", "None", "]", ".", "repeat", "(", "1", ",", "1", ",", "C", "//", "groupsize", ")", "\n", "w_1", "=", "w_1", ".", "view", "(", "w_1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "w_0", "=", "w_0", "[", ":", ",", "None", ",", ":", ",", "None", "]", "\n", "w_1", "=", "w_1", "[", ":", ",", "None", ",", ":", ",", "None", "]", "\n", "\n", "out", "=", "w_0", "*", "data_0", "+", "w_1", "*", "data_1", "\n", "out", "=", "out", ".", "view", "(", "N", ",", "T", ",", "C", ",", "H", ",", "W", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.make_temporal_interlace": [[181, 205], ["print", "temporal_interlace.make_temporal_interlace.make_block_interlace"], "function", ["None"], ["", "", "def", "make_temporal_interlace", "(", "net", ",", "n_segment", ",", "place", "=", "'blockres'", ",", "shift_div", "=", "1", ")", ":", "\n", "    ", "n_segment_list", "=", "[", "n_segment", "]", "*", "4", "\n", "assert", "n_segment_list", "[", "-", "1", "]", ">", "0", "\n", "print", "(", "'=> n_segment per stage: {}'", ".", "format", "(", "n_segment_list", ")", ")", "\n", "\n", "import", "torchvision", "\n", "n_round", "=", "1", "\n", "if", "len", "(", "list", "(", "net", ".", "layer3", ".", "children", "(", ")", ")", ")", ">=", "23", ":", "\n", "        ", "print", "(", "'=> Using n_round {} to insert temporal shift'", ".", "format", "(", "n_round", ")", ")", "\n", "\n", "", "def", "make_block_interlace", "(", "stage", ",", "this_segment", ",", "shift_div", ")", ":", "\n", "        ", "blocks", "=", "list", "(", "stage", ".", "children", "(", ")", ")", "\n", "print", "(", "'=> Processing stage with {} blocks residual'", ".", "format", "(", "len", "(", "blocks", ")", ")", ")", "\n", "for", "i", ",", "b", "in", "enumerate", "(", "blocks", ")", ":", "\n", "            ", "if", "i", "%", "n_round", "==", "0", ":", "\n", "                ", "tds", "=", "TemporalDeform", "(", "b", ".", "conv1", ".", "in_channels", ",", "n_segment", "=", "this_segment", ",", "shift_div", "=", "shift_div", ")", "\n", "blocks", "[", "i", "]", ".", "conv1", "=", "CombinNet", "(", "tds", ",", "blocks", "[", "i", "]", ".", "conv1", ")", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n", "\n", "", "net", ".", "layer1", "=", "make_block_interlace", "(", "net", ".", "layer1", ",", "n_segment_list", "[", "0", "]", ",", "shift_div", ")", "\n", "net", ".", "layer2", "=", "make_block_interlace", "(", "net", ".", "layer2", ",", "n_segment_list", "[", "1", "]", ",", "shift_div", ")", "\n", "net", ".", "layer3", "=", "make_block_interlace", "(", "net", ".", "layer3", ",", "n_segment_list", "[", "2", "]", ",", "shift_div", ")", "\n", "net", ".", "layer4", "=", "make_block_interlace", "(", "net", ".", "layer4", ",", "n_segment_list", "[", "3", "]", ",", "shift_div", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.L2Norm.__init__": [[25, 32], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "TAM_resnet.L2Norm.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ")", ":", "\n", "        ", "super", "(", "L2Norm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "gamma", "=", "scale", "or", "None", "\n", "self", ".", "eps", "=", "1e-10", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "n_channels", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.L2Norm.reset_parameters": [[33, 35], ["torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "init", ".", "constant_", "(", "self", ".", "weight", ",", "self", ".", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.L2Norm.forward": [[36, 41], ["torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "TAM_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze().expand_as", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "TAM_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "TAM_resnet.L2Norm.weight.unsqueeze().unsqueeze", "TAM_resnet.L2Norm.weight.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "sqrt", "(", ")", "+", "self", ".", "eps", "\n", "x", "=", "torch", ".", "div", "(", "x", ",", "norm", ")", "\n", "out", "=", "self", ".", "weight", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "*", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.BasicBlock.__init__": [[56, 68], ["torch.Module.__init__", "TAM_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "TAM_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "temporal_module"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "num_frames", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "temporal_module", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "self", ".", "tam", "=", "temporal_module", "(", "duration", "=", "num_frames", ",", "channels", "=", "inplanes", ")", "if", "temporal_module", "is", "not", "None", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.BasicBlock.forward": [[69, 87], ["TAM_resnet.BasicBlock.conv1", "TAM_resnet.BasicBlock.bn1", "TAM_resnet.BasicBlock.relu", "TAM_resnet.BasicBlock.conv2", "TAM_resnet.BasicBlock.bn2", "TAM_resnet.BasicBlock.relu", "TAM_resnet.BasicBlock.tam", "TAM_resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "if", "self", ".", "tam", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "tam", "(", "x", ")", "\n", "", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "identity", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.Bottleneck.__init__": [[92, 107], ["torch.Module.__init__", "TAM_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "TAM_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "TAM_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "temporal_module"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv1x1", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "num_frames", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "temporal_module", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "planes", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "self", ".", "tam", "=", "temporal_module", "(", "duration", "=", "num_frames", ",", "channels", "=", "inplanes", ")", "if", "temporal_module", "is", "not", "None", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.Bottleneck.forward": [[108, 130], ["TAM_resnet.Bottleneck.conv1", "TAM_resnet.Bottleneck.bn1", "TAM_resnet.Bottleneck.relu", "TAM_resnet.Bottleneck.conv2", "TAM_resnet.Bottleneck.bn2", "TAM_resnet.Bottleneck.relu", "TAM_resnet.Bottleneck.conv3", "TAM_resnet.Bottleneck.bn3", "TAM_resnet.Bottleneck.relu", "TAM_resnet.Bottleneck.tam", "TAM_resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "if", "self", ".", "tam", "is", "not", "None", ":", "\n", "           ", "x", "=", "self", ".", "tam", "(", "x", ")", "\n", "", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "identity", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.IOD_TAM_ResNet.__init__": [[134, 220], ["torch.Module.__init__", "pooling_method.lower", "functools.partial", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "TAM_resnet.IOD_TAM_ResNet._make_layer", "TAM_resnet.IOD_TAM_ResNet._make_layer", "TAM_resnet.IOD_TAM_ResNet._make_layer", "TAM_resnet.IOD_TAM_ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "TAM_resnet.L2Norm", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "TAM_resnet.IOD_TAM_ResNet.modules", "network.twod_models.common.TemporalPooling", "network.twod_models.common.TemporalPooling", "network.twod_models.common.TemporalPooling", "TAM_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "TAM_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "TAM_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "TAM_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "isinstance", "isinstance", "m.weight.data.normal_", "isinstance", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.normal_", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "K", ")", ":", "\n", "        ", "super", "(", "IOD_TAM_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "pooling_method", "=", "'max'", "\n", "self", ".", "pooling_method", "=", "pooling_method", ".", "lower", "(", ")", "\n", "block", "=", "BasicBlock", "if", "depth", "<", "50", "else", "Bottleneck", "\n", "layers", "=", "{", "\n", "18", ":", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "34", ":", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "50", ":", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "101", ":", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "\n", "152", ":", "[", "3", ",", "8", ",", "36", ",", "3", "]", "}", "[", "depth", "]", "\n", "self", ".", "zero_init_residual", "=", "False", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "output_channel", "=", "64", "\n", "self", ".", "num_frames", "=", "K", "# num_frames", "\n", "self", ".", "orig_num_frames", "=", "K", "#num_frames", "\n", "self", ".", "num_classes", "=", "1000", "#num_classes", "\n", "without_t_stride", "=", "False", "if", "K", ">=", "8", "else", "True", "\n", "self", ".", "without_t_stride", "=", "without_t_stride", "\n", "temporal_module", "=", "partial", "(", "temporal_modeling_module", ",", "name", "=", "'TAM'", ",", "\n", "dw_conv", "=", "True", ",", "\n", "blending_frames", "=", "3", ",", "\n", "blending_method", "=", "'sum'", ")", "\n", "self", ".", "temporal_module", "=", "temporal_module", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "if", "not", "self", ".", "without_t_stride", ":", "\n", "            ", "self", ".", "pool1", "=", "TemporalPooling", "(", "self", ".", "num_frames", ",", "3", ",", "2", ",", "self", ".", "pooling_method", ")", "\n", "self", ".", "num_frames", "=", "self", ".", "num_frames", "//", "2", "\n", "", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "if", "not", "self", ".", "without_t_stride", ":", "\n", "            ", "self", ".", "pool2", "=", "TemporalPooling", "(", "self", ".", "num_frames", ",", "3", ",", "2", ",", "self", ".", "pooling_method", ")", "\n", "self", ".", "num_frames", "=", "self", ".", "num_frames", "//", "2", "\n", "", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "if", "not", "self", ".", "without_t_stride", ":", "\n", "            ", "self", ".", "pool3", "=", "TemporalPooling", "(", "self", ".", "num_frames", ",", "3", ",", "2", ",", "self", ".", "pooling_method", ")", "\n", "self", ".", "num_frames", "=", "self", ".", "num_frames", "//", "2", "\n", "", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "dropout", "=", "0.5", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "self", ".", "num_classes", ")", "\n", "\n", "#CSP deconv", "\n", "self", ".", "expansion", "=", "4", "\n", "self", ".", "norm1", "=", "L2Norm", "(", "64", "*", "self", ".", "expansion", ",", "10", ")", "\n", "self", ".", "deconv2", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "128", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "256", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv4", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "512", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", "*", "self", ".", "expansion", ",", "512", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "L2Norm", "(", "512", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n", "\n", "self", ".", "cat", "=", "nn", ".", "Conv2d", "(", "256", "*", "4", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat64", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat_bn", "=", "nn", ".", "BatchNorm2d", "(", "256", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_bn64", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_act", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "n", "=", "m", ".", "in_features", "*", "m", ".", "out_features", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "\n", "", "if", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.IOD_TAM_ResNet._make_layer": [[221, 238], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "TAM_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv1x1"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "self", ".", "num_frames", ",", "stride", ",", "downsample", ",", "\n", "temporal_module", "=", "self", ".", "temporal_module", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "self", ".", "num_frames", ",", "\n", "temporal_module", "=", "self", ".", "temporal_module", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.IOD_TAM_ResNet.forward": [[239, 283], ["TAM_resnet.IOD_TAM_ResNet.view", "TAM_resnet.IOD_TAM_ResNet.squeeze", "TAM_resnet.IOD_TAM_ResNet.conv1", "TAM_resnet.IOD_TAM_ResNet.bn1", "TAM_resnet.IOD_TAM_ResNet.relu", "TAM_resnet.IOD_TAM_ResNet.maxpool", "TAM_resnet.IOD_TAM_ResNet.layer1", "TAM_resnet.IOD_TAM_ResNet.layer2", "TAM_resnet.IOD_TAM_ResNet.layer3", "TAM_resnet.IOD_TAM_ResNet.layer4", "TAM_resnet.IOD_TAM_ResNet.norm1", "TAM_resnet.IOD_TAM_ResNet.deconv2", "TAM_resnet.IOD_TAM_ResNet.deconv3", "TAM_resnet.IOD_TAM_ResNet.deconv4", "TAM_resnet.IOD_TAM_ResNet.view().split", "TAM_resnet.IOD_TAM_ResNet.view().split", "TAM_resnet.IOD_TAM_ResNet.view().split", "TAM_resnet.IOD_TAM_ResNet.view().split", "range", "TAM_resnet.IOD_TAM_ResNet.pool1", "TAM_resnet.IOD_TAM_ResNet.pool2", "TAM_resnet.IOD_TAM_ResNet.pool3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "TAM_resnet.IOD_TAM_ResNet.cat", "TAM_resnet.IOD_TAM_ResNet.cat_bn", "TAM_resnet.IOD_TAM_ResNet.cat_act", "TAM_resnet.IOD_TAM_ResNet.cat64", "TAM_resnet.IOD_TAM_ResNet.cat_bn64", "x_output.append", "TAM_resnet.IOD_TAM_ResNet.view", "TAM_resnet.IOD_TAM_ResNet.view", "TAM_resnet.IOD_TAM_ResNet.view", "TAM_resnet.IOD_TAM_ResNet.view", "TAM_resnet.IOD_TAM_ResNet.cat_act", "x1_split[].squeeze", "x2_split[].squeeze", "x3_split[].squeeze", "x4_split[].squeeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# batch_size, c_t, h, w = x.shape", "\n", "# x = x.view(batch_size * self.orig_num_frames, c_t // self.orig_num_frames, h, w)", "\n", "        ", "batch_size", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "K", "=", "t", "\n", "x", "=", "x", ".", "view", "(", "batch_size", "*", "self", ".", "orig_num_frames", ",", "c", ",", "t", "//", "self", ".", "orig_num_frames", ",", "h", ",", "w", ")", "\n", "x", "=", "x", ".", "squeeze", "(", "2", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "fp1", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "fp2", "=", "self", ".", "layer1", "(", "fp1", ")", "\n", "fp2_d", "=", "self", ".", "pool1", "(", "fp2", ")", "if", "not", "self", ".", "without_t_stride", "else", "fp2", "\n", "fp3", "=", "self", ".", "layer2", "(", "fp2_d", ")", "\n", "fp3_d", "=", "self", ".", "pool2", "(", "fp3", ")", "if", "not", "self", ".", "without_t_stride", "else", "fp3", "\n", "fp4", "=", "self", ".", "layer3", "(", "fp3_d", ")", "\n", "fp4_d", "=", "self", ".", "pool3", "(", "fp4", ")", "if", "not", "self", ".", "without_t_stride", "else", "fp4", "\n", "fp5", "=", "self", ".", "layer4", "(", "fp4_d", ")", "\n", "\n", "# CSP deconv", "\n", "x1", "=", "self", ".", "norm1", "(", "fp2", ")", "\n", "x2", "=", "self", ".", "deconv2", "(", "fp3", ")", "\n", "x3", "=", "self", ".", "deconv3", "(", "fp4", ")", "\n", "x4", "=", "self", ".", "deconv4", "(", "fp5", ")", "\n", "\n", "bt", ",", "c", ",", "h", ",", "w", "=", "x1", ".", "shape", "\n", "x1_split", "=", "x1", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x2_split", "=", "x2", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x3_split", "=", "x3", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x4_split", "=", "x4", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "\n", "x_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "            ", "map", "=", "torch", ".", "cat", "(", "[", "x1_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ",", "x2_split", "[", "i", "//", "2", "]", ".", "squeeze", "(", "2", ")", ",", "x3_split", "[", "i", "//", "4", "]", ".", "squeeze", "(", "2", ")", ",", "x4_split", "[", "i", "//", "8", "]", ".", "squeeze", "(", "2", ")", "]", ",", "dim", "=", "1", ")", "\n", "# map = torch.cat([x1_split[i].squeeze(2),x2_split[i].squeeze(2),x3_split[i].squeeze(2),x4_split[i].squeeze(2)],dim=1)", "\n", "map", "=", "self", ".", "cat", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_act", "(", "map", ")", "\n", "map", "=", "self", ".", "cat64", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn64", "(", "map", ")", "\n", "x_output", ".", "append", "(", "self", ".", "cat_act", "(", "map", ")", ")", "\n", "\n", "", "return", "x_output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.IOD_TAM_ResNet.mean": [[284, 286], ["None"], "methods", ["None"], ["", "def", "mean", "(", "self", ",", "modality", "=", "'rgb'", ")", ":", "\n", "        ", "return", "[", "0.485", ",", "0.456", ",", "0.406", "]", "if", "modality", "==", "'rgb'", "else", "[", "0.5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.IOD_TAM_ResNet.std": [[287, 289], ["numpy.mean"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean"], ["", "def", "std", "(", "self", ",", "modality", "=", "'rgb'", ")", ":", "\n", "        ", "return", "[", "0.229", ",", "0.224", ",", "0.225", "]", "if", "modality", "==", "'rgb'", "else", "[", "np", ".", "mean", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.IOD_TAM_ResNet.network_name": [[290, 307], ["inspect.signature", "str().split", "str().split", "str().split", "str", "str().split", "str", "str", "str"], "methods", ["None"], ["", "@", "property", "\n", "def", "network_name", "(", "self", ")", ":", "\n", "        ", "name", "=", "''", "\n", "if", "self", ".", "temporal_module", "is", "not", "None", ":", "\n", "            ", "param", "=", "signature", "(", "self", ".", "temporal_module", ")", ".", "parameters", "\n", "temporal_module", "=", "str", "(", "param", "[", "'name'", "]", ")", ".", "split", "(", "\"=\"", ")", "[", "-", "1", "]", "[", "1", ":", "-", "1", "]", "\n", "blending_frames", "=", "str", "(", "param", "[", "'blending_frames'", "]", ")", ".", "split", "(", "\"=\"", ")", "[", "-", "1", "]", "\n", "blending_method", "=", "str", "(", "param", "[", "'blending_method'", "]", ")", ".", "split", "(", "\"=\"", ")", "[", "-", "1", "]", "[", "1", ":", "-", "1", "]", "\n", "dw_conv", "=", "True", "if", "str", "(", "param", "[", "'dw_conv'", "]", ")", ".", "split", "(", "\"=\"", ")", "[", "-", "1", "]", "==", "'True'", "else", "False", "\n", "name", "+=", "\"{}-b{}-{}{}-\"", ".", "format", "(", "temporal_module", ",", "blending_frames", ",", "\n", "blending_method", ",", "\n", "\"\"", "if", "dw_conv", "else", "\"-allc\"", ")", "\n", "", "name", "+=", "'resnet-{}'", ".", "format", "(", "self", ".", "depth", ")", "\n", "if", "not", "self", ".", "without_t_stride", ":", "\n", "            ", "name", "+=", "\"-ts-{}\"", ".", "format", "(", "self", ".", "pooling_method", ")", "\n", "\n", "", "return", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.conv3x3": [[42, 46], ["torch.Conv2d"], "function", ["None"], ["", "", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TAM_resnet.conv1x1": [[48, 51], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.L2Norm.__init__": [[18, 25], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "MS_resnet.L2Norm.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ")", ":", "\n", "        ", "super", "(", "L2Norm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "gamma", "=", "scale", "or", "None", "\n", "self", ".", "eps", "=", "1e-10", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "n_channels", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.L2Norm.reset_parameters": [[26, 28], ["torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "init", ".", "constant_", "(", "self", ".", "weight", ",", "self", ".", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.L2Norm.forward": [[29, 34], ["torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "MS_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze().expand_as", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "MS_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "MS_resnet.L2Norm.weight.unsqueeze().unsqueeze", "MS_resnet.L2Norm.weight.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "sqrt", "(", ")", "+", "self", ".", "eps", "\n", "x", "=", "torch", ".", "div", "(", "x", ",", "norm", ")", "\n", "out", "=", "self", ".", "weight", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "*", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.BasicBlock2.__init__": [[66, 77], ["torch.Module.__init__", "MS_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "MS_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "num_segments", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "remainder", "=", "0", ")", ":", "\n", "        ", "super", "(", "BasicBlock2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "remainder", "=", "remainder", "\n", "self", ".", "num_segments", "=", "num_segments", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.BasicBlock2.forward": [[78, 94], ["MS_resnet.BasicBlock2.conv1", "MS_resnet.BasicBlock2.bn1", "MS_resnet.BasicBlock2.relu", "MS_resnet.BasicBlock2.conv2", "MS_resnet.BasicBlock2.bn2", "MS_resnet.BasicBlock2.relu", "MS_resnet.BasicBlock2.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.BasicBlock.__init__": [[99, 110], ["torch.Module.__init__", "MS_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "MS_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "num_segments", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "remainder", "=", "0", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "remainder", "=", "remainder", "\n", "self", ".", "num_segments", "=", "num_segments", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.BasicBlock.forward": [[111, 128], ["network.twod_models.tsm_util.tsm", "MS_resnet.BasicBlock.conv1", "MS_resnet.BasicBlock.bn1", "MS_resnet.BasicBlock.relu", "MS_resnet.BasicBlock.conv2", "MS_resnet.BasicBlock.bn2", "MS_resnet.BasicBlock.relu", "MS_resnet.BasicBlock.downsample"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.tsm_util.tsm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "tsm", "(", "x", ",", "self", ".", "num_segments", ",", "'zero'", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.Bottleneck.__init__": [[133, 146], ["torch.Module.__init__", "MS_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "MS_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "MS_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv1x1", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "num_segments", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "remainder", "=", "0", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "planes", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "remainder", "=", "remainder", "\n", "self", ".", "num_segments", "=", "num_segments", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.Bottleneck.forward": [[147, 168], ["network.twod_models.tsm_util.tsm", "MS_resnet.Bottleneck.conv1", "MS_resnet.Bottleneck.bn1", "MS_resnet.Bottleneck.relu", "MS_resnet.Bottleneck.conv2", "MS_resnet.Bottleneck.bn2", "MS_resnet.Bottleneck.relu", "MS_resnet.Bottleneck.conv3", "MS_resnet.Bottleneck.bn3", "MS_resnet.Bottleneck.relu", "MS_resnet.Bottleneck.downsample"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.tsm_util.tsm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "tsm", "(", "x", ",", "self", ".", "num_segments", ",", "'zero'", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.Matching_layer.__init__": [[171, 176], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "spatial_correlation_sampler.SpatialCorrelationSampler"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ks", ",", "patch", ",", "stride", ",", "pad", ",", "patch_dilation", ")", ":", "\n", "        ", "super", "(", "Matching_layer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "patch", "=", "patch", "\n", "self", ".", "correlation_sampler", "=", "SpatialCorrelationSampler", "(", "ks", ",", "patch", ",", "stride", ",", "pad", ",", "patch_dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.Matching_layer.L2normalize": [[177, 183], ["norm.sum"], "methods", ["None"], ["", "def", "L2normalize", "(", "self", ",", "x", ",", "d", "=", "1", ")", ":", "\n", "        ", "eps", "=", "1e-6", "\n", "norm", "=", "x", "**", "2", "\n", "norm", "=", "norm", ".", "sum", "(", "dim", "=", "d", ",", "keepdim", "=", "True", ")", "+", "eps", "\n", "norm", "=", "norm", "**", "(", "0.5", ")", "\n", "return", "(", "x", "/", "norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.Matching_layer.forward": [[184, 193], ["MS_resnet.Matching_layer.L2normalize", "MS_resnet.Matching_layer.L2normalize", "MS_resnet.Matching_layer.size", "MS_resnet.Matching_layer.size", "MS_resnet.Matching_layer.correlation_sampler", "MS_resnet.Matching_layer.view", "MS_resnet.Matching_layer.relu"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.L2normalize", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.L2normalize"], ["", "def", "forward", "(", "self", ",", "feature1", ",", "feature2", ")", ":", "\n", "        ", "feature1", "=", "self", ".", "L2normalize", "(", "feature1", ")", "\n", "feature2", "=", "self", ".", "L2normalize", "(", "feature2", ")", "\n", "b", ",", "c", ",", "h1", ",", "w1", "=", "feature1", ".", "size", "(", ")", "\n", "b", ",", "c", ",", "h2", ",", "w2", "=", "feature2", ".", "size", "(", ")", "\n", "corr", "=", "self", ".", "correlation_sampler", "(", "feature1", ",", "feature2", ")", "\n", "corr", "=", "corr", ".", "view", "(", "b", ",", "self", ".", "patch", "*", "self", ".", "patch", ",", "h1", "*", "w1", ")", "# Channel : target // Spatial grid : source", "\n", "corr", "=", "self", ".", "relu", "(", "corr", ")", "\n", "return", "corr", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.Flow_refinement.__init__": [[196, 240], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_segments", ",", "expansion", "=", "1", ",", "pos", "=", "2", ")", ":", "\n", "        ", "super", "(", "Flow_refinement", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_segments", "=", "num_segments", "\n", "self", ".", "expansion", "=", "expansion", "\n", "self", ".", "pos", "=", "pos", "\n", "self", ".", "out_channel", "=", "64", "*", "(", "2", "**", "(", "self", ".", "pos", "-", "1", ")", ")", "*", "self", ".", "expansion", "\n", "self", ".", "c1", "=", "16", "\n", "self", ".", "c2", "=", "32", "\n", "self", ".", "c3", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "3", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "groups", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "c1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "c1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "c1", ",", "self", ".", "c1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "self", ".", "c1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "c1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "self", ".", "c1", ",", "self", ".", "c2", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "c2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "c2", ",", "self", ".", "c2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "self", ".", "c2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "c2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "self", ".", "c2", ",", "self", ".", "c3", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "c3", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "c3", ",", "self", ".", "c3", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "self", ".", "c3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "c3", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "self", ".", "c3", ",", "self", ".", "out_channel", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "out_channel", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.Flow_refinement.forward": [[241, 257], ["torch.cat.size", "torch.cat.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "MS_resnet.Flow_refinement.conv1", "MS_resnet.Flow_refinement.conv2", "MS_resnet.Flow_refinement.conv3", "MS_resnet.Flow_refinement.conv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "res", ",", "match_v", ")", ":", "\n", "        ", "if", "match_v", "is", "not", "None", ":", "\n", "            ", "x", "=", "tr", ".", "cat", "(", "[", "x", ",", "match_v", "]", ",", "dim", "=", "1", ")", "\n", "", "_", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "num_segments", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "x", "=", "tr", ".", "cat", "(", "[", "x", ",", "x", "[", ":", ",", "-", "1", ":", ",", ":", ",", ":", ",", ":", "]", "]", ",", "dim", "=", "1", ")", "## (b,t,3,h,w)", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x", "=", "x", "+", "res", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.__init__": [[262, 347], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "MS_resnet.IOD_MS_ResNet._make_layer", "MS_resnet.IOD_MS_ResNet._make_layer", "MS_resnet.IOD_MS_ResNet._make_layer", "MS_resnet.IOD_MS_ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "MS_resnet.IOD_MS_ResNet.modules", "MS_resnet.L2Norm", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "MS_resnet.Matching_layer", "MS_resnet.Flow_refinement", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "isinstance", "MS_resnet.IOD_MS_ResNet.modules", "MS_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "MS_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "MS_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "MS_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "K", ")", ":", "\n", "        ", "super", "(", "IOD_MS_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "block", "=", "Bottleneck", "\n", "block2", "=", "Bottleneck", "\n", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", "\n", "num_segments", "=", "K", "\n", "flow_estimation", "=", "1", "\n", "num_classes", "=", "1000", "\n", "zero_init_residual", "=", "False", "\n", "self", ".", "output_channel", "=", "64", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "self", ".", "num_segments", "=", "K", "#num_segments", "\n", "self", ".", "flow_estimation", "=", "flow_estimation", "\n", "\n", "## MotionSqueeze", "\n", "if", "flow_estimation", ":", "\n", "            ", "self", ".", "patch", "=", "15", "\n", "self", ".", "patch_dilation", "=", "1", "\n", "self", ".", "matching_layer", "=", "Matching_layer", "(", "ks", "=", "1", ",", "patch", "=", "self", ".", "patch", ",", "stride", "=", "1", ",", "pad", "=", "0", ",", "\n", "patch_dilation", "=", "self", ".", "patch_dilation", ")", "\n", "self", ".", "flow_refinement", "=", "Flow_refinement", "(", "num_segments", "=", "num_segments", ",", "expansion", "=", "block", ".", "expansion", ",", "pos", "=", "2", ")", "\n", "self", ".", "soft_argmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n", "self", ".", "chnl_reduction", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", "*", "block", ".", "expansion", ",", "64", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "num_segments", "=", "num_segments", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "num_segments", "=", "num_segments", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "num_segments", "=", "num_segments", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "num_segments", "=", "num_segments", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "#         self.fc1 = nn.Linear(512 * block.expansion, num_classes)", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv1d", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n", "\n", "#CSP deconv", "\n", "", "", "", "self", ".", "expansion", "=", "4", "\n", "self", ".", "norm1", "=", "L2Norm", "(", "64", "*", "self", ".", "expansion", ",", "10", ")", "\n", "self", ".", "deconv2", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "128", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "256", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv4", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "512", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", "*", "self", ".", "expansion", ",", "512", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "L2Norm", "(", "512", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n", "\n", "self", ".", "cat", "=", "nn", ".", "Conv2d", "(", "1024", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat64", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat_bn", "=", "nn", ".", "BatchNorm2d", "(", "256", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_bn64", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_act", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.L2normalize": [[348, 354], ["norm.sum"], "methods", ["None"], ["", "def", "L2normalize", "(", "self", ",", "x", ",", "d", "=", "1", ")", ":", "\n", "        ", "eps", "=", "1e-6", "\n", "norm", "=", "x", "**", "2", "\n", "norm", "=", "norm", ".", "sum", "(", "dim", "=", "d", ",", "keepdim", "=", "True", ")", "+", "eps", "\n", "norm", "=", "norm", "**", "(", "0.5", ")", "\n", "return", "(", "x", "/", "norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.apply_binary_kernel": [[355, 373], ["torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach.view().expand().to().detach", "torch.arange().to().detach.view().expand().to().detach", "torch.arange().to().detach.view().expand().to().detach", "torch.arange().to().detach.view().expand().to().detach", "torch.ones().to().detach", "torch.ones().to().detach", "torch.ones().to().detach", "torch.ones().to().detach", "torch.ones().to().detach", "torch.ones().to().detach", "torch.zeros().to().detach", "torch.zeros().to().detach", "torch.zeros().to().detach", "torch.zeros().to().detach", "torch.zeros().to().detach", "torch.zeros().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "torch.where().to().detach", "kernel.view().to().detach.view().to().detach.view().to().detach", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to().detach.view().expand().to", "torch.arange().to().detach.view().expand().to", "torch.arange().to().detach.view().expand().to", "torch.arange().to().detach.view().expand().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.where().to", "torch.where().to", "torch.where().to", "torch.where().to", "torch.where().to", "torch.where().to", "torch.where().to", "torch.where().to", "torch.where().to", "torch.where().to", "torch.where().to", "torch.where().to", "kernel.view().to().detach.view().to().detach.view().to", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange().to().detach.view().expand", "torch.arange().to().detach.view().expand", "torch.arange().to().detach.view().expand", "torch.arange().to().detach.view().expand", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "kernel.view().to().detach.view().to().detach.view", "torch.arange().to().detach.view", "torch.arange().to().detach.view", "torch.arange().to().detach.view", "torch.arange().to().detach.view", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "apply_binary_kernel", "(", "self", ",", "match", ",", "h", ",", "w", ",", "region", ")", ":", "\n", "# binary kernel", "\n", "        ", "x_line", "=", "tr", ".", "arange", "(", "w", ",", "dtype", "=", "tr", ".", "float", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "y_line", "=", "tr", ".", "arange", "(", "h", ",", "dtype", "=", "tr", ".", "float", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "x_kernel_1", "=", "x_line", ".", "view", "(", "1", ",", "1", ",", "1", ",", "1", ",", "w", ")", ".", "expand", "(", "1", ",", "1", ",", "w", ",", "h", ",", "w", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "y_kernel_1", "=", "y_line", ".", "view", "(", "1", ",", "1", ",", "1", ",", "h", ",", "1", ")", ".", "expand", "(", "1", ",", "h", ",", "1", ",", "h", ",", "w", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "x_kernel_2", "=", "x_line", ".", "view", "(", "1", ",", "1", ",", "w", ",", "1", ",", "1", ")", ".", "expand", "(", "1", ",", "1", ",", "w", ",", "h", ",", "w", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "y_kernel_2", "=", "y_line", ".", "view", "(", "1", ",", "h", ",", "1", ",", "1", ",", "1", ")", ".", "expand", "(", "1", ",", "h", ",", "1", ",", "h", ",", "w", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "\n", "ones", "=", "tr", ".", "ones", "(", "1", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "zeros", "=", "tr", ".", "zeros", "(", "1", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "\n", "eps", "=", "1e-6", "\n", "kx", "=", "tr", ".", "where", "(", "tr", ".", "abs", "(", "x_kernel_1", "-", "x_kernel_2", ")", "<=", "region", ",", "ones", ",", "zeros", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "ky", "=", "tr", ".", "where", "(", "tr", ".", "abs", "(", "y_kernel_1", "-", "y_kernel_2", ")", "<=", "region", ",", "ones", ",", "zeros", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "kernel", "=", "kx", "*", "ky", "+", "eps", "\n", "kernel", "=", "kernel", ".", "view", "(", "1", ",", "h", "*", "w", ",", "h", "*", "w", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "return", "match", "*", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.apply_gaussian_kernel": [[374, 391], ["corr.size", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "torch.arange().to().detach", "x.view().expand().to().detach.view().expand().to().detach.view().expand().to().detach", "y.view().expand().to().detach.view().expand().to().detach.view().expand().to().detach", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "gauss_kernel.view.view.view", "corr.max", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "x.view().expand().to().detach.view().expand().to().detach.view().expand().to", "y.view().expand().to().detach.view().expand().to().detach.view().expand().to", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "x.view().expand().to().detach.view().expand().to().detach.view().expand", "y.view().expand().to().detach.view().expand().to().detach.view().expand", "x.view().expand().to().detach.view().expand().to().detach.view", "y.view().expand().to().detach.view().expand().to().detach.view"], "methods", ["None"], ["", "def", "apply_gaussian_kernel", "(", "self", ",", "corr", ",", "h", ",", "w", ",", "p", ",", "sigma", "=", "5", ")", ":", "\n", "        ", "b", ",", "c", ",", "s", "=", "corr", ".", "size", "(", ")", "\n", "\n", "x", "=", "tr", ".", "arange", "(", "p", ",", "dtype", "=", "tr", ".", "float", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "y", "=", "tr", ".", "arange", "(", "p", ",", "dtype", "=", "tr", ".", "float", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "\n", "idx", "=", "corr", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "# b x hw    get maximum value along channel", "\n", "idx_y", "=", "(", "idx", "//", "p", ")", ".", "view", "(", "b", ",", "1", ",", "1", ",", "h", ",", "w", ")", ".", "float", "(", ")", "\n", "idx_x", "=", "(", "idx", "%", "p", ")", ".", "view", "(", "b", ",", "1", ",", "1", ",", "h", ",", "w", ")", ".", "float", "(", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "1", ",", "1", ",", "p", ",", "1", ",", "1", ")", ".", "expand", "(", "1", ",", "1", ",", "p", ",", "h", ",", "w", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "y", "=", "y", ".", "view", "(", "1", ",", "p", ",", "1", ",", "1", ",", "1", ")", ".", "expand", "(", "1", ",", "p", ",", "1", ",", "h", ",", "w", ")", ".", "to", "(", "'cuda'", ")", ".", "detach", "(", ")", "\n", "\n", "gauss_kernel", "=", "tr", ".", "exp", "(", "-", "(", "(", "x", "-", "idx_x", ")", "**", "2", "+", "(", "y", "-", "idx_y", ")", "**", "2", ")", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "\n", "gauss_kernel", "=", "gauss_kernel", ".", "view", "(", "b", ",", "p", "*", "p", ",", "h", "*", "w", ")", "# .permute(0,2,1).contiguous()", "\n", "\n", "return", "gauss_kernel", "*", "corr", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.match_to_flow_soft": [[392, 428], ["MS_resnet.IOD_MS_ResNet.size", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "idx_x.repeat().to.repeat().to.repeat().to", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "idx_y.repeat().to.repeat().to.repeat().to", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "topk_value.view.view.view", "MS_resnet.IOD_MS_ResNet.apply_gaussian_kernel", "MS_resnet.IOD_MS_ResNet.soft_argmax", "smax.view.view.view", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to.expand().view", "torch.arange().to.expand().view", "smax.view.view.sum", "smax.view.view.sum", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "idx_x.repeat().to.repeat().to.repeat", "idx_y.repeat().to.repeat().to.repeat", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange().to.expand", "torch.arange().to.expand"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.apply_gaussian_kernel"], ["", "def", "match_to_flow_soft", "(", "self", ",", "match", ",", "k", ",", "h", ",", "w", ",", "temperature", "=", "1", ",", "mode", "=", "'softmax'", ")", ":", "\n", "        ", "b", ",", "c", ",", "s", "=", "match", ".", "size", "(", ")", "\n", "idx", "=", "tr", ".", "arange", "(", "h", "*", "w", ",", "dtype", "=", "tr", ".", "float32", ")", ".", "to", "(", "'cuda'", ")", "\n", "idx_x", "=", "idx", "%", "w", "\n", "idx_x", "=", "idx_x", ".", "repeat", "(", "b", ",", "k", ",", "1", ")", ".", "to", "(", "'cuda'", ")", "\n", "idx_y", "=", "tr", ".", "floor", "(", "idx", "/", "w", ")", "\n", "idx_y", "=", "idx_y", ".", "repeat", "(", "b", ",", "k", ",", "1", ")", ".", "to", "(", "'cuda'", ")", "\n", "\n", "soft_idx_x", "=", "idx_x", "[", ":", ",", ":", "1", "]", "\n", "soft_idx_y", "=", "idx_y", "[", ":", ",", ":", "1", "]", "\n", "displacement", "=", "(", "self", ".", "patch", "-", "1", ")", "/", "2", "\n", "\n", "topk_value", ",", "topk_idx", "=", "tr", ".", "topk", "(", "match", ",", "k", ",", "dim", "=", "1", ")", "# (B*T-1, k, H*W)", "\n", "topk_value", "=", "topk_value", ".", "view", "(", "-", "1", ",", "k", ",", "h", ",", "w", ")", "\n", "\n", "match", "=", "self", ".", "apply_gaussian_kernel", "(", "match", ",", "h", ",", "w", ",", "self", ".", "patch", ",", "sigma", "=", "5", ")", "\n", "match", "=", "match", "*", "temperature", "\n", "match_pre", "=", "self", ".", "soft_argmax", "(", "match", ")", "\n", "smax", "=", "match_pre", "\n", "smax", "=", "smax", ".", "view", "(", "b", ",", "self", ".", "patch", ",", "self", ".", "patch", ",", "h", ",", "w", ")", "\n", "x_kernel", "=", "tr", ".", "arange", "(", "-", "displacement", "*", "self", ".", "patch_dilation", ",", "displacement", "*", "self", ".", "patch_dilation", "+", "1", ",", "\n", "step", "=", "self", ".", "patch_dilation", ",", "dtype", "=", "tr", ".", "float", ")", ".", "to", "(", "'cuda'", ")", "\n", "y_kernel", "=", "tr", ".", "arange", "(", "-", "displacement", "*", "self", ".", "patch_dilation", ",", "displacement", "*", "self", ".", "patch_dilation", "+", "1", ",", "\n", "step", "=", "self", ".", "patch_dilation", ",", "dtype", "=", "tr", ".", "float", ")", ".", "to", "(", "'cuda'", ")", "\n", "x_mult", "=", "x_kernel", ".", "expand", "(", "b", ",", "self", ".", "patch", ")", ".", "view", "(", "b", ",", "self", ".", "patch", ",", "1", ",", "1", ")", "\n", "y_mult", "=", "y_kernel", ".", "expand", "(", "b", ",", "self", ".", "patch", ")", ".", "view", "(", "b", ",", "self", ".", "patch", ",", "1", ",", "1", ")", "\n", "\n", "smax_x", "=", "smax", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "# (b,w=k,h,w)", "\n", "smax_y", "=", "smax", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "False", ")", "# (b,h=k,h,w)", "\n", "flow_x", "=", "(", "smax_x", "*", "x_mult", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "view", "(", "-", "1", ",", "1", ",", "h", "*", "w", ")", "# (b,1,h,w)", "\n", "flow_y", "=", "(", "smax_y", "*", "y_mult", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "view", "(", "-", "1", ",", "1", ",", "h", "*", "w", ")", "# (b,1,h,w)", "\n", "\n", "flow_x", "=", "(", "flow_x", "/", "(", "self", ".", "patch_dilation", "*", "displacement", ")", ")", "\n", "flow_y", "=", "(", "flow_y", "/", "(", "self", ".", "patch_dilation", "*", "displacement", ")", ")", "\n", "\n", "return", "flow_x", ",", "flow_y", ",", "topk_value", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet._make_layer": [[429, 445], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "int", "layers.append", "MS_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv1x1"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "num_segments", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "num_segments", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "remainder", "=", "int", "(", "i", "%", "3", ")", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "num_segments", ",", "remainder", "=", "remainder", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.flow_computation": [[446, 473], ["MS_resnet.IOD_MS_ResNet.chnl_reduction", "x.permute().contiguous.permute().contiguous.size", "x.permute().contiguous.permute().contiguous.view", "x.permute().contiguous.permute().contiguous.permute().contiguous", "x.permute().contiguous.permute().contiguous.size", "x[].permute().contiguous().view", "x[].permute().contiguous().view", "MS_resnet.IOD_MS_ResNet.matching_layer", "MS_resnet.IOD_MS_ResNet.match_to_flow_soft", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "x.permute().contiguous.permute().contiguous.permute", "x[].permute().contiguous", "x[].permute().contiguous", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x[].permute", "x[].permute"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.match_to_flow_soft"], ["", "def", "flow_computation", "(", "self", ",", "x", ",", "pos", "=", "2", ",", "temperature", "=", "100", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "chnl_reduction", "(", "x", ")", "\n", "\n", "size", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "(", "-", "1", ",", "self", ".", "num_segments", ")", "+", "size", "[", "1", ":", "]", ")", "# N T C H W", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ".", "contiguous", "(", ")", "# B C T H W", "\n", "\n", "# match to flow", "\n", "k", "=", "1", "\n", "temperature", "=", "temperature", "\n", "b", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "t", "=", "t", "-", "1", "\n", "\n", "x_pre", "=", "x", "[", ":", ",", ":", ",", ":", "-", "1", "]", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "x_post", "=", "x", "[", ":", ",", ":", ",", "1", ":", "]", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "match", "=", "self", ".", "matching_layer", "(", "x_pre", ",", "x_post", ")", "# (B*T-1*group, H*W, H*W)", "\n", "u", ",", "v", ",", "confidence", "=", "self", ".", "match_to_flow_soft", "(", "match", ",", "k", ",", "h", ",", "w", ",", "temperature", ")", "\n", "flow", "=", "tr", ".", "cat", "(", "[", "u", ",", "v", "]", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "2", "*", "k", ",", "h", ",", "w", ")", "# (b, 2, h, w)", "\n", "\n", "# backward flow", "\n", "#             match2 = self.matching_layer(x_post, x_pre)", "\n", "#             u_2, v_2, confidence_2 = self.match_to_flow_soft(match2, k, h, w,temperature)", "\n", "#             flow_2 = tr.cat([u_2,v_2],dim=1).view(-1,2, h, w)", "\n", "\n", "return", "flow", ",", "confidence", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.forward": [[474, 536], ["MS_resnet.IOD_MS_ResNet.view", "MS_resnet.IOD_MS_ResNet.squeeze", "MS_resnet.IOD_MS_ResNet.conv1", "MS_resnet.IOD_MS_ResNet.bn1", "MS_resnet.IOD_MS_ResNet.relu", "MS_resnet.IOD_MS_ResNet.maxpool", "MS_resnet.IOD_MS_ResNet.layer1", "MS_resnet.IOD_MS_ResNet.layer2", "MS_resnet.IOD_MS_ResNet.layer3", "MS_resnet.IOD_MS_ResNet.layer4", "x1.view.view.unsqueeze", "MS_resnet.IOD_MS_ResNet.unsqueeze", "x3.view.view.unsqueeze", "x4.view.view.unsqueeze", "x1.view.view.view", "MS_resnet.IOD_MS_ResNet.view", "x3.view.view.view", "x4.view.view.view", "x1.view.view.split", "MS_resnet.IOD_MS_ResNet.split", "x3.view.view.split", "x4.view.view.split", "range", "MS_resnet.IOD_MS_ResNet.flow_computation", "MS_resnet.IOD_MS_ResNet.flow_refinement", "MS_resnet.IOD_MS_ResNet.norm1", "MS_resnet.IOD_MS_ResNet.deconv2", "MS_resnet.IOD_MS_ResNet.deconv3", "MS_resnet.IOD_MS_ResNet.deconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "MS_resnet.IOD_MS_ResNet.cat", "MS_resnet.IOD_MS_ResNet.cat_bn", "MS_resnet.IOD_MS_ResNet.cat_act", "MS_resnet.IOD_MS_ResNet.cat64", "MS_resnet.IOD_MS_ResNet.cat_bn64", "x_output.append", "x1_split[].squeeze", "range", "x2_split[].squeeze", "range", "x3_split[].squeeze", "range", "x4_split[].squeeze", "range", "MS_resnet.IOD_MS_ResNet.cat_act", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.IOD_MS_ResNet.flow_computation"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "input", "=", "x", "\n", "batch_size", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "batch_size", "*", "self", ".", "num_segments", ",", "c", ",", "t", "//", "self", ".", "num_segments", ",", "h", ",", "w", ")", "\n", "x", "=", "x", ".", "squeeze", "(", "2", ")", "\n", "temperature", "=", "100", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "layer2", "(", "x1", ")", "\n", "\n", "# Flow", "\n", "if", "(", "self", ".", "flow_estimation", "==", "1", ")", ":", "\n", "            ", "flow_1", ",", "match_v", "=", "self", ".", "flow_computation", "(", "x2", ",", "temperature", "=", "temperature", ")", "\n", "x2", "=", "self", ".", "flow_refinement", "(", "flow_1", ",", "x2", ",", "match_v", ")", "\n", "\n", "", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "layer4", "(", "x3", ")", "\n", "\n", "x1", "=", "x1", ".", "unsqueeze", "(", "2", ")", "\n", "x2", "=", "x2", ".", "unsqueeze", "(", "2", ")", "\n", "x3", "=", "x3", ".", "unsqueeze", "(", "2", ")", "\n", "x4", "=", "x4", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "batch_size_new", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x1", ".", "shape", "\n", "batch_size", "=", "batch_size_new", "//", "self", ".", "num_segments", "\n", "x1", "=", "x1", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "batch_size_new", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x2", ".", "shape", "\n", "x2", "=", "x2", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "batch_size_new", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x3", ".", "shape", "\n", "x3", "=", "x3", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "batch_size_new", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x4", ".", "shape", "\n", "x4", "=", "x4", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "x1_split", "=", "x1", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x2_split", "=", "x2", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x3_split", "=", "x3", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x4_split", "=", "x4", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "\n", "x1_split_deconv", "=", "[", "self", ".", "norm1", "(", "x1_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x1_split", ")", ")", "]", "\n", "x2_split_deconv", "=", "[", "self", ".", "deconv2", "(", "x2_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x2_split", ")", ")", "]", "\n", "x3_split_deconv", "=", "[", "self", ".", "deconv3", "(", "x3_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x3_split", ")", ")", "]", "\n", "x4_split_deconv", "=", "[", "self", ".", "deconv4", "(", "x4_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x4_split", ")", ")", "]", "\n", "\n", "x_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_segments", ")", ":", "\n", "            ", "map", "=", "torch", ".", "cat", "(", "[", "x1_split_deconv", "[", "i", "]", ",", "x2_split_deconv", "[", "i", "]", ",", "x3_split_deconv", "[", "i", "]", ",", "x4_split_deconv", "[", "i", "]", "]", ",", "dim", "=", "1", ")", "\n", "map", "=", "self", ".", "cat", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_act", "(", "map", ")", "\n", "map", "=", "self", ".", "cat64", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn64", "(", "map", ")", "\n", "x_output", ".", "append", "(", "self", ".", "cat_act", "(", "map", ")", ")", "\n", "\n", "# x = self.avgpool(x)", "\n", "# x = x.view(x.size(0), -1, 1)", "\n", "#", "\n", "# x = self.fc1(x)", "\n", "", "return", "x_output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv3x3": [[47, 51], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv1x1": [[53, 56], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.MS_resnet.conv1x1x1": [[58, 61], ["torch.Conv3d"], "function", ["None"], ["", "def", "conv1x1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.common.TemporalPooling.__init__": [[6, 27], ["torch.Module.__init__", "torch.AvgPool3d", "torch.MaxPool3d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "frames", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "mode", "=", "'avg'", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ----------\n        frames (int): number of input frames\n        kernel_size\n        stride\n        mode\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "frames", "=", "frames", "\n", "pad_size", "=", "(", "kernel_size", "-", "1", ")", "//", "stride", "\n", "if", "mode", "==", "'avg'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "stride", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "pad_size", ",", "0", ",", "0", ")", ")", "\n", "", "elif", "mode", "==", "'max'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "stride", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "pad_size", ",", "0", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"only support avg or max\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.common.TemporalPooling.forward": [[28, 34], ["x.transpose().contiguous().view.transpose().contiguous().view.view().transpose", "common.TemporalPooling.pool", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "x.transpose().contiguous().view.transpose().contiguous().view.view", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "x.transpose().contiguous().view.transpose().contiguous().view.transpose", "x.transpose().contiguous().view.transpose().contiguous().view.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "nt", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "(", "-", "1", ",", "self", ".", "frames", ")", "+", "x", ".", "size", "(", ")", "[", "1", ":", "]", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TIN_resnet.IOD_TIN_ResNet.__init__": [[11, 75], ["torch.nn.Module.__init__", "TIN_resnet.IOD_TIN_ResNet._prepare_base_model", "network.twod_models.basic_ops.ConsensusModule", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TSM_resnet.IOD_TSM_ResNet._prepare_base_model"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "K", ")", ":", "\n", "        ", "super", "(", "IOD_TIN_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "consensus_type", "=", "'avg'", "\n", "new_length", "=", "None", "\n", "# num_segments = 8", "\n", "num_class", "=", "1", "\n", "before_softmax", "=", "True", "\n", "dropout", "=", "0.8", "\n", "img_feature_dim", "=", "256", "\n", "partial_bn", "=", "True", "\n", "is_shift", "=", "False", "\n", "shift_div", "=", "8", "\n", "shift_place", "=", "'blockres'", "\n", "fc_lr5", "=", "False", "\n", "tin", "=", "True", "\n", "non_local", "=", "False", "\n", "temporal_pool", "=", "False", "\n", "base_model", "=", "'resnet50'", "\n", "self", ".", "K", "=", "K", "\n", "self", ".", "output_channel", "=", "64", "\n", "self", ".", "modality", "=", "'RGB'", "\n", "self", ".", "num_segments", "=", "K", "\n", "self", ".", "reshape", "=", "True", "\n", "self", ".", "before_softmax", "=", "before_softmax", "\n", "self", ".", "dropout", "=", "dropout", "\n", "# self.crop_num = crop_num", "\n", "self", ".", "consensus_type", "=", "consensus_type", "\n", "self", ".", "img_feature_dim", "=", "img_feature_dim", "# the dimension of the CNN feature to represent each frame", "\n", "# self.pretrain = pretrain", "\n", "\n", "self", ".", "is_shift", "=", "is_shift", "\n", "self", ".", "shift_div", "=", "shift_div", "\n", "self", ".", "shift_place", "=", "shift_place", "\n", "\n", "\n", "self", ".", "tin", "=", "tin", "\n", "\n", "self", ".", "base_model_name", "=", "base_model", "\n", "self", ".", "fc_lr5", "=", "fc_lr5", "\n", "self", ".", "temporal_pool", "=", "temporal_pool", "\n", "self", ".", "non_local", "=", "non_local", "\n", "\n", "if", "new_length", "is", "None", ":", "\n", "            ", "self", ".", "new_length", "=", "1", "if", "self", ".", "modality", "==", "\"RGB\"", "else", "5", "\n", "", "else", ":", "\n", "            ", "self", ".", "new_length", "=", "new_length", "\n", "\n", "", "self", ".", "_prepare_base_model", "(", "base_model", ")", "\n", "\n", "# feature_dim = self._prepare_tsn(num_class)", "\n", "\n", "# if self.modality == 'RGBDiff':", "\n", "#     print(\"Converting the ImageNet model to RGB+Diff init model\")", "\n", "#     self.base_model = self._construct_diff_model(self.base_model)", "\n", "#     print(\"Done. RGBDiff model ready.\")", "\n", "\n", "self", ".", "consensus", "=", "ConsensusModule", "(", "consensus_type", ")", "\n", "\n", "if", "not", "self", ".", "before_softmax", ":", "\n", "            ", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", ")", "\n", "\n", "# self._enable_pbn = partial_bn", "\n", "", "if", "partial_bn", ":", "\n", "            ", "self", ".", "_enable_pbn", "=", "True", "\n", "# Override the default train() to freeze the BN parameters", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TIN_resnet.IOD_TIN_ResNet._prepare_base_model": [[89, 125], ["print", "base_model.startswith", "network.resnet.IOD_ResNet", "network.resnet.IOD_ResNet", "torch.nn.AdaptiveAvgPool2d", "getattr", "print", "make_temporal_interlace"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_interlace.make_temporal_interlace"], ["", "", "def", "_prepare_base_model", "(", "self", ",", "base_model", ",", "config", "=", "{", "}", ")", ":", "\n", "        ", "print", "(", "'=> base model: {}'", ".", "format", "(", "base_model", ")", ")", "\n", "\n", "if", "base_model", ".", "startswith", "(", "'resnet'", ")", ":", "\n", "            ", "BaseResnet", "=", "IOD_ResNet", "(", "50", ",", "self", ".", "K", ")", "\n", "\n", "# XXXX = torchvision.models", "\n", "# self.base_model0 = getattr(BaseResnet)(True)", "\n", "self", ".", "base_model", "=", "getattr", "(", "torchvision", ".", "models", ",", "base_model", ")", "(", "True", ")", "\n", "self", ".", "base_model", "=", "IOD_ResNet", "(", "50", ",", "self", ".", "K", ")", "\n", "\n", "# url = 'https://download.pytorch.org/models/resnet50-19c8e357.pth'", "\n", "# model_weights = model_zoo.load_url(url)", "\n", "# self.base_model.load_state_dict(model_weights, strict=False)", "\n", "# state_dict = self.base_model.state_dict()", "\n", "# self.check_state_dict(state_dict, model_weights)", "\n", "#", "\n", "#", "\n", "# if self.is_shift:", "\n", "#     print('Adding temporal shift...')", "\n", "#     from ops.temporal_shift import make_temporal_shift", "\n", "#     make_temporal_shift(self.base_model, self.num_segments,", "\n", "#                         n_div=self.shift_div, place=self.shift_place, temporal_pool=self.temporal_pool, two_path=True)", "\n", "\n", "if", "self", ".", "tin", ":", "\n", "                ", "print", "(", "'Adding temporal deformable conv...'", ")", "\n", "from", "network", ".", "twod_models", ".", "temporal_interlace", "import", "make_temporal_interlace", "\n", "make_temporal_interlace", "(", "self", ".", "base_model", ",", "self", ".", "num_segments", ",", "shift_div", "=", "self", ".", "shift_div", ")", "\n", "\n", "\n", "", "self", ".", "base_model", ".", "last_layer_name", "=", "'fc'", "\n", "self", ".", "input_size", "=", "224", "\n", "self", ".", "input_mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "self", ".", "input_std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "\n", "self", ".", "base_model", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TIN_resnet.IOD_TIN_ResNet.forward": [[127, 140], ["input.squeeze.squeeze.view", "input.squeeze.squeeze.squeeze", "TIN_resnet.IOD_TIN_ResNet.base_model", "base_out.split.split.view", "base_out.split.split.split", "base_out[].squeeze", "range", "len"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "no_reshape", "=", "False", ")", ":", "\n", "        ", "batch_size", ",", "c", ",", "t", ",", "h", ",", "w", "=", "input", ".", "shape", "\n", "input", "=", "input", ".", "view", "(", "batch_size", "*", "self", ".", "num_segments", ",", "c", ",", "t", "//", "self", ".", "num_segments", ",", "h", ",", "w", ")", "\n", "input", "=", "input", ".", "squeeze", "(", "2", ")", "\n", "\n", "base_out", "=", "self", ".", "base_model", "(", "input", ")", "#B*t,C,H,W", "\n", "bt", ",", "c", ",", "h", ",", "w", "=", "base_out", ".", "shape", "\n", "#x_output = base_out.split(bt//self.num_segments,dim = 0)", "\n", "base_out", "=", "base_out", ".", "view", "(", "batch_size", ",", "bt", "//", "batch_size", ",", "c", ",", "h", ",", "w", ")", "\n", "base_out", "=", "base_out", ".", "split", "(", "1", ",", "dim", "=", "1", ")", "\n", "x_output", "=", "[", "base_out", "[", "i", "]", ".", "squeeze", "(", "1", ")", "for", "i", "in", "range", "(", "len", "(", "base_out", ")", ")", "]", "\n", "\n", "return", "x_output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.tsm_util.tsm": [[4, 23], ["tensor.view.size", "tensor.view.view", "tensor.view.split", "torch.cat().view", "torch.cat().view", "torch.pad", "torch.pad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ValueError", "torch.cat", "torch.cat"], "function", ["None"], ["def", "tsm", "(", "tensor", ",", "duration", ",", "version", "=", "'zero'", ")", ":", "\n", "# tensor [N*T, C, H, W]", "\n", "    ", "size", "=", "tensor", ".", "size", "(", ")", "\n", "tensor", "=", "tensor", ".", "view", "(", "(", "-", "1", ",", "duration", ")", "+", "size", "[", "1", ":", "]", ")", "\n", "# tensor [N, T, C, H, W]    ", "\n", "pre_tensor", ",", "post_tensor", ",", "peri_tensor", "=", "tensor", ".", "split", "(", "[", "size", "[", "1", "]", "//", "8", ",", "\n", "size", "[", "1", "]", "//", "8", ",", "\n", "3", "*", "size", "[", "1", "]", "//", "4", "]", ",", "dim", "=", "2", ")", "\n", "if", "version", "==", "'zero'", ":", "\n", "        ", "pre_tensor", "=", "F", ".", "pad", "(", "pre_tensor", ",", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ")", ")", "[", ":", ",", "1", ":", ",", "...", "]", "#F.pad(pre_tensor,  (0, 0, 0, 0, 0, 0, 1, 0))[:,  :-1, ...]", "\n", "post_tensor", "=", "F", ".", "pad", "(", "post_tensor", ",", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ")", ")", "[", ":", ",", ":", "-", "1", ",", "...", "]", "#F.pad(post_tensor, (0, 0, 0, 0, 0, 0, 0, 1))[:, 1:  , ...]", "\n", "", "elif", "version", "==", "'circulant'", ":", "\n", "        ", "pre_tensor", "=", "torch", ".", "cat", "(", "(", "pre_tensor", "[", ":", ",", "-", "1", ":", ",", "...", "]", ",", "\n", "pre_tensor", "[", ":", ",", ":", "-", "1", ",", "...", "]", ")", ",", "dim", "=", "1", ")", "\n", "post_tensor", "=", "torch", ".", "cat", "(", "(", "post_tensor", "[", ":", ",", "1", ":", ",", "...", "]", ",", "\n", "post_tensor", "[", ":", ",", ":", "1", ",", "...", "]", ")", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Unknown TSM version: {}'", ".", "format", "(", "version", ")", ")", "\n", "", "return", "torch", ".", "cat", "(", "(", "pre_tensor", ",", "post_tensor", ",", "peri_tensor", ")", ",", "dim", "=", "2", ")", ".", "view", "(", "size", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.L2Norm.__init__": [[26, 33], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "TEA_resnet.L2Norm.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ")", ":", "\n", "        ", "super", "(", "L2Norm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "gamma", "=", "scale", "or", "None", "\n", "self", ".", "eps", "=", "1e-10", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "n_channels", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.L2Norm.reset_parameters": [[34, 36], ["torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "init", ".", "constant_", "(", "self", ".", "weight", ",", "self", ".", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.L2Norm.forward": [[37, 42], ["torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "TEA_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze().expand_as", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "TEA_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "TEA_resnet.L2Norm.weight.unsqueeze().unsqueeze", "TEA_resnet.L2Norm.weight.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "sqrt", "(", ")", "+", "self", ".", "eps", "\n", "x", "=", "torch", ".", "div", "(", "x", ",", "norm", ")", "\n", "out", "=", "self", ".", "weight", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "*", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.MEModule.__init__": [[69, 100], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ",", "n_segment", "=", "8", ")", ":", "\n", "        ", "super", "(", "MEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channel", "=", "channel", "\n", "self", ".", "reduction", "=", "reduction", "\n", "self", ".", "n_segment", "=", "n_segment", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "self", ".", "channel", ",", "\n", "out_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "self", ".", "channel", "//", "self", ".", "reduction", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "out_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "channel", "//", "self", ".", "reduction", ",", "\n", "bias", "=", "False", ")", "\n", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "pad", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "self", ".", "channel", "//", "self", ".", "reduction", ",", "\n", "out_channels", "=", "self", ".", "channel", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "self", ".", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.MEModule.forward": [[104, 132], ["x.size", "TEA_resnet.MEModule.conv1", "TEA_resnet.MEModule.bn1", "TEA_resnet.MEModule.view", "TEA_resnet.MEModule.view.split", "TEA_resnet.MEModule.conv2", "TEA_resnet.MEModule.view", "TEA_resnet.MEModule.view.split", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "diff_fea_pluszero.view.view.view", "TEA_resnet.MEModule.avg_pool", "TEA_resnet.MEModule.conv3", "TEA_resnet.MEModule.bn3", "TEA_resnet.MEModule.sigmoid", "TEA_resnet.MEModule.expand_as", "TEA_resnet.MEModule.size", "TEA_resnet.MEModule.size", "diff_fea_pluszero.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "nt", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "bottleneck", "=", "self", ".", "conv1", "(", "x", ")", "# nt, c//r, h, w", "\n", "bottleneck", "=", "self", ".", "bn1", "(", "bottleneck", ")", "# nt, c//r, h, w", "\n", "\n", "# t feature", "\n", "reshape_bottleneck", "=", "bottleneck", ".", "view", "(", "(", "-", "1", ",", "self", ".", "n_segment", ")", "+", "bottleneck", ".", "size", "(", ")", "[", "1", ":", "]", ")", "# n, t, c//r, h, w", "\n", "t_fea", ",", "__", "=", "reshape_bottleneck", ".", "split", "(", "[", "self", ".", "n_segment", "-", "1", ",", "1", "]", ",", "dim", "=", "1", ")", "# n, t-1, c//r, h, w", "\n", "\n", "# apply transformation conv to t+1 feature", "\n", "conv_bottleneck", "=", "self", ".", "conv2", "(", "bottleneck", ")", "# nt, c//r, h, w", "\n", "# reshape fea: n, t, c//r, h, w", "\n", "reshape_conv_bottleneck", "=", "conv_bottleneck", ".", "view", "(", "(", "-", "1", ",", "self", ".", "n_segment", ")", "+", "conv_bottleneck", ".", "size", "(", ")", "[", "1", ":", "]", ")", "\n", "__", ",", "tPlusone_fea", "=", "reshape_conv_bottleneck", ".", "split", "(", "[", "1", ",", "self", ".", "n_segment", "-", "1", "]", ",", "dim", "=", "1", ")", "# n, t-1, c//r, h, w", "\n", "\n", "# motion fea = t+1_fea - t_fea", "\n", "# pad the last timestamp", "\n", "diff_fea", "=", "tPlusone_fea", "-", "t_fea", "# n, t-1, c//r, h, w", "\n", "# pad = (0,0,0,0,0,0,0,1)", "\n", "diff_fea_pluszero", "=", "F", ".", "pad", "(", "diff_fea", ",", "self", ".", "pad", ",", "mode", "=", "\"constant\"", ",", "value", "=", "0", ")", "# n, t, c//r, h, w", "\n", "diff_fea_pluszero", "=", "diff_fea_pluszero", ".", "view", "(", "(", "-", "1", ",", ")", "+", "diff_fea_pluszero", ".", "size", "(", ")", "[", "2", ":", "]", ")", "#nt, c//r, h, w", "\n", "y", "=", "self", ".", "avg_pool", "(", "diff_fea_pluszero", ")", "# nt, c//r, 1, 1", "\n", "y", "=", "self", ".", "conv3", "(", "y", ")", "# nt, c, 1, 1", "\n", "y", "=", "self", ".", "bn3", "(", "y", ")", "# nt, c, 1, 1", "\n", "y", "=", "self", ".", "sigmoid", "(", "y", ")", "# nt, c, 1, 1", "\n", "y", "=", "y", "-", "0.5", "\n", "output", "=", "x", "+", "x", "*", "y", ".", "expand_as", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.ShiftModule.__init__": [[137, 162], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "TEA_resnet.ShiftModule.conv.weight.data.zero_", "TEA_resnet.ShiftModule.conv.weight.data.zero_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "input_channels", ",", "n_segment", "=", "8", ",", "n_div", "=", "8", ",", "mode", "=", "'shift'", ")", ":", "\n", "        ", "super", "(", "ShiftModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_channels", "=", "input_channels", "#26", "\n", "self", ".", "n_segment", "=", "n_segment", "\n", "self", ".", "fold_div", "=", "n_div", "#2", "\n", "self", ".", "fold", "=", "self", ".", "input_channels", "//", "self", ".", "fold_div", "#13", "\n", "self", ".", "conv", "=", "nn", ".", "Conv1d", "(", "\n", "2", "*", "self", ".", "fold", ",", "2", "*", "self", ".", "fold", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "groups", "=", "2", "*", "self", ".", "fold", ",", "\n", "bias", "=", "False", ")", "\n", "# weight_size: (2*self.fold, 1, 3)", "\n", "if", "mode", "==", "'shift'", ":", "\n", "# import pdb; pdb.set_trace()", "\n", "            ", "self", ".", "conv", ".", "weight", ".", "requires_grad", "=", "True", "# (26,1,3)", "\n", "self", ".", "conv", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "conv", ".", "weight", ".", "data", "[", ":", "self", ".", "fold", ",", "0", ",", "2", "]", "=", "1", "# shift left", "\n", "self", ".", "conv", ".", "weight", ".", "data", "[", "self", ".", "fold", ":", "2", "*", "self", ".", "fold", ",", "0", ",", "0", "]", "=", "1", "# shift right", "\n", "if", "2", "*", "self", ".", "fold", "<", "self", ".", "input_channels", ":", "\n", "                ", "self", ".", "conv", ".", "weight", ".", "data", "[", "2", "*", "self", ".", "fold", ":", ",", "0", ",", "1", "]", "=", "1", "# fixed", "\n", "", "", "elif", "mode", "==", "'fixed'", ":", "\n", "            ", "self", ".", "conv", ".", "weight", ".", "requires_grad", "=", "True", "\n", "self", ".", "conv", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "conv", ".", "weight", ".", "data", "[", ":", ",", "0", ",", "1", "]", "=", "1", "# fixed", "\n", "", "elif", "mode", "==", "'norm'", ":", "\n", "            ", "self", ".", "conv", ".", "weight", ".", "requires_grad", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.ShiftModule.forward": [[163, 176], ["x.contiguous().view.contiguous().view.size", "x.contiguous().view.contiguous().view.view", "x.contiguous().view.contiguous().view.permute", "x.contiguous().view.contiguous().view.contiguous().view", "TEA_resnet.ShiftModule.conv", "x.contiguous().view.contiguous().view.view", "x.contiguous().view.contiguous().view.permute", "x.contiguous().view.contiguous().view.contiguous().view", "x.contiguous().view.contiguous().view.contiguous", "x.contiguous().view.contiguous().view.contiguous"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# shift by conv", "\n", "# import pdb; pdb.set_trace()", "\n", "        ", "nt", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "n_batch", "=", "nt", "//", "self", ".", "n_segment", "\n", "x", "=", "x", ".", "view", "(", "n_batch", ",", "self", ".", "n_segment", ",", "c", ",", "h", ",", "w", ")", "\n", "x", "=", "x", ".", "permute", "(", "[", "0", ",", "3", ",", "4", ",", "2", ",", "1", "]", ")", "# (n_batch, h, w, c, n_segment)", "\n", "x", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "n_batch", "*", "h", "*", "w", ",", "c", ",", "self", ".", "n_segment", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "# (n_batch*h*w, c, n_segment)", "\n", "x", "=", "x", ".", "view", "(", "n_batch", ",", "h", ",", "w", ",", "c", ",", "self", ".", "n_segment", ")", "\n", "x", "=", "x", ".", "permute", "(", "[", "0", ",", "4", ",", "3", ",", "1", ",", "2", "]", ")", "# (n_batch, n_segment, c, h, w)", "\n", "x", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "nt", ",", "c", ",", "h", ",", "w", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.Bottle2neckShift.__init__": [[180, 230], ["torch.Module.__init__", "int", "TEA_resnet.MEModule", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "range", "shifts.append", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "math.floor", "math.floor", "math.floor", "math.floor", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "convs.append", "bns.append", "shifts.append", "TEA_resnet.ShiftModule", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "TEA_resnet.ShiftModule"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "n_segment", "=", "8", ",", "stype", "=", "'normal'", ")", ":", "\n", "        ", "\"\"\" Constructor\n        Args:\n            inplanes: input channel dimensionality\n            planes: output channel dimensionality\n            stride: conv stride. Replaces pooling layer.\n            downsample: None when stride = 1\n            baseWidth: basic width of conv3x3\n            scale: number of scale.\n            type: 'normal': normal set. 'stage': first block of a new stage.\n        \"\"\"", "\n", "super", "(", "Bottle2neckShift", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "width", "=", "int", "(", "math", ".", "floor", "(", "planes", "*", "(", "baseWidth", "/", "64.0", ")", ")", ")", "\n", "self", ".", "n_segment", "=", "n_segment", "\n", "\n", "self", ".", "me", "=", "MEModule", "(", "width", "*", "scale", ",", "reduction", "=", "16", ",", "n_segment", "=", "self", ".", "n_segment", ")", "#8)", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "width", "*", "scale", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "width", "*", "scale", ")", "\n", "\n", "if", "scale", "==", "1", ":", "\n", "            ", "self", ".", "nums", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "nums", "=", "scale", "-", "1", "\n", "", "if", "stype", "==", "'stage'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "", "convs", "=", "[", "]", "\n", "bns", "=", "[", "]", "\n", "shifts", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "nums", ")", ":", "\n", "            ", "convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "width", ")", ")", "\n", "shifts", ".", "append", "(", "ShiftModule", "(", "width", ",", "n_segment", "=", "self", ".", "n_segment", ",", "n_div", "=", "2", ",", "mode", "=", "'fixed'", ")", ")", "#n_segment=8, n_div=2, mode='fixed'))", "\n", "", "shifts", ".", "append", "(", "ShiftModule", "(", "width", ",", "n_segment", "=", "self", ".", "n_segment", ",", "n_div", "=", "2", ",", "mode", "=", "'shift'", ")", ")", "#8", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "convs", ")", "\n", "self", ".", "bns", "=", "nn", ".", "ModuleList", "(", "bns", ")", "\n", "self", ".", "shifts", "=", "nn", ".", "ModuleList", "(", "shifts", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "width", "*", "scale", ",", "planes", "*", "self", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stype", "=", "stype", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "width", "=", "width", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.Bottle2neckShift.forward": [[231, 271], ["TEA_resnet.Bottle2neckShift.conv1", "TEA_resnet.Bottle2neckShift.bn1", "TEA_resnet.Bottle2neckShift.relu", "TEA_resnet.Bottle2neckShift.me", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "range", "TEA_resnet.Bottle2neckShift.conv3", "TEA_resnet.Bottle2neckShift.bn3", "TEA_resnet.Bottle2neckShift.relu", "TEA_resnet.Bottle2neckShift.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "TEA_resnet.Bottle2neckShift.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "TEA_resnet.Bottle2neckShift.pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# import pdb; pdb.set_trace()", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "me", "(", "out", ")", "\n", "\n", "spx", "=", "torch", ".", "split", "(", "out", ",", "self", ".", "width", ",", "1", ")", "# 4*(nt, c/4, h, w)", "\n", "for", "i", "in", "range", "(", "self", ".", "nums", ")", ":", "\n", "            ", "if", "i", "==", "0", "or", "self", ".", "stype", "==", "'stage'", ":", "\n", "                ", "sp", "=", "spx", "[", "i", "]", "\n", "", "else", ":", "\n", "                ", "sp", "=", "sp", "+", "spx", "[", "i", "]", "\n", "", "sp", "=", "self", ".", "shifts", "[", "i", "]", "(", "sp", ")", "\n", "sp", "=", "self", ".", "convs", "[", "i", "]", "(", "sp", ")", "\n", "sp", "=", "self", ".", "relu", "(", "self", ".", "bns", "[", "i", "]", "(", "sp", ")", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "out", "=", "sp", "\n", "", "else", ":", "\n", "                ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "sp", ")", ",", "1", ")", "\n", "", "", "last_sp", "=", "spx", "[", "self", ".", "nums", "]", "\n", "last_sp", "=", "self", ".", "shifts", "[", "self", ".", "nums", "]", "(", "last_sp", ")", "\n", "if", "self", ".", "scale", "!=", "1", "and", "self", ".", "stype", "==", "'normal'", ":", "\n", "            ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "last_sp", ")", ",", "1", ")", "\n", "", "elif", "self", ".", "scale", "!=", "1", "and", "self", ".", "stype", "==", "'stage'", ":", "\n", "            ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "self", ".", "pool", "(", "last_sp", ")", ")", ",", "1", ")", "\n", "\n", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.Bottle2neck.__init__": [[275, 314], ["torch.Module.__init__", "int", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "math.floor", "math.floor", "math.floor", "math.floor", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "convs.append", "bns.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "stype", "=", "'normal'", ")", ":", "\n", "        ", "\"\"\" Constructor\n        Args:\n            inplanes: input channel dimensionality\n            planes: output channel dimensionality\n            stride: conv stride. Replaces pooling layer.\n            downsample: None when stride = 1\n            baseWidth: basic width of conv3x3\n            scale: number of scale.\n            type: 'normal': normal set. 'stage': first block of a new stage.\n        \"\"\"", "\n", "super", "(", "Bottle2neck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "width", "=", "int", "(", "math", ".", "floor", "(", "planes", "*", "(", "baseWidth", "/", "64.0", ")", ")", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "width", "*", "scale", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "width", "*", "scale", ")", "\n", "\n", "if", "scale", "==", "1", ":", "\n", "          ", "self", ".", "nums", "=", "1", "\n", "", "else", ":", "\n", "          ", "self", ".", "nums", "=", "scale", "-", "1", "\n", "", "if", "stype", "==", "'stage'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "", "convs", "=", "[", "]", "\n", "bns", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "nums", ")", ":", "\n", "          ", "convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "width", ")", ")", "\n", "", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "convs", ")", "\n", "self", ".", "bns", "=", "nn", ".", "ModuleList", "(", "bns", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "width", "*", "scale", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stype", "=", "stype", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "width", "=", "width", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.Bottle2neck.forward": [[315, 350], ["TEA_resnet.Bottle2neck.conv1", "TEA_resnet.Bottle2neck.bn1", "TEA_resnet.Bottle2neck.relu", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "range", "TEA_resnet.Bottle2neck.conv3", "TEA_resnet.Bottle2neck.bn3", "TEA_resnet.Bottle2neck.relu", "TEA_resnet.Bottle2neck.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "TEA_resnet.Bottle2neck.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "TEA_resnet.Bottle2neck.pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# import pdb; pdb.set_trace()", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "spx", "=", "torch", ".", "split", "(", "out", ",", "self", ".", "width", ",", "1", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "nums", ")", ":", "\n", "          ", "if", "i", "==", "0", "or", "self", ".", "stype", "==", "'stage'", ":", "\n", "            ", "sp", "=", "spx", "[", "i", "]", "\n", "", "else", ":", "\n", "            ", "sp", "=", "sp", "+", "spx", "[", "i", "]", "\n", "", "sp", "=", "self", ".", "convs", "[", "i", "]", "(", "sp", ")", "\n", "sp", "=", "self", ".", "relu", "(", "self", ".", "bns", "[", "i", "]", "(", "sp", ")", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "out", "=", "sp", "\n", "", "else", ":", "\n", "            ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "sp", ")", ",", "1", ")", "\n", "", "", "if", "self", ".", "scale", "!=", "1", "and", "self", ".", "stype", "==", "'normal'", ":", "\n", "          ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "spx", "[", "self", ".", "nums", "]", ")", ",", "1", ")", "\n", "", "elif", "self", ".", "scale", "!=", "1", "and", "self", ".", "stype", "==", "'stage'", ":", "\n", "          ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "self", ".", "pool", "(", "spx", "[", "self", ".", "nums", "]", ")", ")", ",", "1", ")", "\n", "\n", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.IOD_TEA_Res2Net.__init__": [[354, 419], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "TEA_resnet.IOD_TEA_Res2Net._make_layer", "TEA_resnet.IOD_TEA_Res2Net._make_layer", "TEA_resnet.IOD_TEA_Res2Net._make_layer", "TEA_resnet.IOD_TEA_Res2Net._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "TEA_resnet.IOD_TEA_Res2Net.modules", "TEA_resnet.L2Norm", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "TEA_resnet.IOD_TEA_Res2Net.modules", "isinstance", "TEA_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "TEA_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "TEA_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "TEA_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "m.weight.data.normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "math.sqrt", "math.sqrt", "math.sqrt", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "math.sqrt", "math.sqrt", "math.sqrt", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "n_segment", ")", ":", "\n", "        ", "super", "(", "IOD_TEA_Res2Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "block", "=", "Bottle2neckShift", "\n", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", "\n", "baseWidth", "=", "26", "\n", "scale", "=", "4", "\n", "num_classes", "=", "1000", "\n", "self", ".", "n_segment", "=", "n_segment", "\n", "self", ".", "output_channel", "=", "64", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "baseWidth", "=", "baseWidth", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ",", "stride", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "#CSP deconv", "\n", "", "", "self", ".", "expansion", "=", "4", "\n", "self", ".", "norm1", "=", "L2Norm", "(", "64", "*", "self", ".", "expansion", ",", "10", ")", "\n", "self", ".", "deconv2", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "128", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "256", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv4", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "512", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", "*", "self", ".", "expansion", ",", "512", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "L2Norm", "(", "512", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n", "# self.cat = nn.Conv2d(256*3,256,kernel_size=3,stride=1,padding=1)", "\n", "# self.conv_output = nn.Conv2d(self.output_channel , self.output_channel * 6, kernel_size=3, stride=1, padding=1)", "\n", "self", ".", "cat", "=", "nn", ".", "Conv2d", "(", "1024", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat64", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat_bn", "=", "nn", ".", "BatchNorm2d", "(", "256", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_bn64", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_act", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "n", "=", "m", ".", "in_features", "*", "m", ".", "out_features", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.IOD_TEA_Res2Net._make_layer": [[420, 437], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", "=", "downsample", ",", "\n", "stype", "=", "'stage'", ",", "baseWidth", "=", "self", ".", "baseWidth", ",", "scale", "=", "self", ".", "scale", ",", "n_segment", "=", "self", ".", "n_segment", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "baseWidth", "=", "self", ".", "baseWidth", ",", "scale", "=", "self", ".", "scale", ",", "n_segment", "=", "self", ".", "n_segment", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TEA_resnet.IOD_TEA_Res2Net.forward": [[438, 490], ["TEA_resnet.IOD_TEA_Res2Net.view", "TEA_resnet.IOD_TEA_Res2Net.squeeze", "TEA_resnet.IOD_TEA_Res2Net.conv1", "TEA_resnet.IOD_TEA_Res2Net.bn1", "TEA_resnet.IOD_TEA_Res2Net.relu", "TEA_resnet.IOD_TEA_Res2Net.maxpool", "TEA_resnet.IOD_TEA_Res2Net.layer1", "TEA_resnet.IOD_TEA_Res2Net.layer2", "TEA_resnet.IOD_TEA_Res2Net.layer3", "TEA_resnet.IOD_TEA_Res2Net.layer4", "x1.view.view.unsqueeze", "x2.view.view.unsqueeze", "x3.view.view.unsqueeze", "x4.view.view.unsqueeze", "x1.view.view.view", "x2.view.view.view", "x3.view.view.view", "x4.view.view.view", "x1.view.view.split", "x2.view.view.split", "x3.view.view.split", "x4.view.view.split", "range", "TEA_resnet.IOD_TEA_Res2Net.norm1", "TEA_resnet.IOD_TEA_Res2Net.deconv2", "TEA_resnet.IOD_TEA_Res2Net.deconv3", "TEA_resnet.IOD_TEA_Res2Net.deconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "TEA_resnet.IOD_TEA_Res2Net.cat", "TEA_resnet.IOD_TEA_Res2Net.cat_bn", "TEA_resnet.IOD_TEA_Res2Net.cat_act", "TEA_resnet.IOD_TEA_Res2Net.cat64", "TEA_resnet.IOD_TEA_Res2Net.cat_bn64", "x_output.append", "x1_split[].squeeze", "range", "x2_split[].squeeze", "range", "x3_split[].squeeze", "range", "x4_split[].squeeze", "range", "TEA_resnet.IOD_TEA_Res2Net.cat_act", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "batch_size", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "self", ".", "n_segment", "=", "t", "\n", "x", "=", "x", ".", "view", "(", "batch_size", "*", "self", ".", "n_segment", ",", "c", ",", "t", "//", "self", ".", "n_segment", ",", "h", ",", "w", ")", "\n", "x", "=", "x", ".", "squeeze", "(", "2", ")", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "layer4", "(", "x3", ")", "\n", "\n", "x1", "=", "x1", ".", "unsqueeze", "(", "2", ")", "\n", "x2", "=", "x2", ".", "unsqueeze", "(", "2", ")", "\n", "x3", "=", "x3", ".", "unsqueeze", "(", "2", ")", "\n", "x4", "=", "x4", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "batch_size_new", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x1", ".", "shape", "\n", "batch_size", "=", "batch_size_new", "//", "self", ".", "n_segment", "\n", "x1", "=", "x1", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "batch_size_new", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x2", ".", "shape", "\n", "x2", "=", "x2", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "batch_size_new", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x3", ".", "shape", "\n", "x3", "=", "x3", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "batch_size_new", ",", "c", ",", "t", ",", "h", ",", "w", "=", "x4", ".", "shape", "\n", "x4", "=", "x4", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "x1_split", "=", "x1", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x2_split", "=", "x2", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x3_split", "=", "x3", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x4_split", "=", "x4", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "\n", "x1_split_deconv", "=", "[", "self", ".", "norm1", "(", "x1_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x1_split", ")", ")", "]", "\n", "x2_split_deconv", "=", "[", "self", ".", "deconv2", "(", "x2_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x2_split", ")", ")", "]", "\n", "x3_split_deconv", "=", "[", "self", ".", "deconv3", "(", "x3_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x3_split", ")", ")", "]", "\n", "x4_split_deconv", "=", "[", "self", ".", "deconv4", "(", "x4_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x4_split", ")", ")", "]", "\n", "\n", "x_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "n_segment", ")", ":", "\n", "            ", "map", "=", "torch", ".", "cat", "(", "[", "x1_split_deconv", "[", "i", "]", ",", "x2_split_deconv", "[", "i", "]", ",", "x3_split_deconv", "[", "i", "]", ",", "x4_split_deconv", "[", "i", "]", "]", ",", "dim", "=", "1", ")", "\n", "map", "=", "self", ".", "cat", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_act", "(", "map", ")", "\n", "map", "=", "self", ".", "cat64", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn64", "(", "map", ")", "\n", "x_output", ".", "append", "(", "self", ".", "cat_act", "(", "map", ")", ")", "\n", "", "return", "x_output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TDN_resnet.L2Norm.__init__": [[16, 23], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "TDN_resnet.L2Norm.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ")", ":", "\n", "        ", "super", "(", "L2Norm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "gamma", "=", "scale", "or", "None", "\n", "self", ".", "eps", "=", "1e-10", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "n_channels", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TDN_resnet.L2Norm.reset_parameters": [[24, 26], ["torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "init", ".", "constant_", "(", "self", ".", "weight", ",", "self", ".", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TDN_resnet.L2Norm.forward": [[27, 32], ["torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "TDN_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze().expand_as", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "TDN_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "TDN_resnet.L2Norm.weight.unsqueeze().unsqueeze", "TDN_resnet.L2Norm.weight.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "sqrt", "(", ")", "+", "self", ".", "eps", "\n", "x", "=", "torch", ".", "div", "(", "x", ",", "norm", ")", "\n", "out", "=", "self", ".", "weight", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "*", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TDN_resnet.IOD_TDN_ResNet.__init__": [[36, 105], ["torch.Module.__init__", "fbresnet50", "fbresnet50", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "TDN_resnet.L2Norm", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "params[].size", "params[].data.mean().expand().contiguous", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "TDN_resnet.IOD_TDN_ResNet.modules", "list", "list", "TDN_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "TDN_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "TDN_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "TDN_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "list", "x.clone", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "list", "isinstance", "fbresnet50.children", "fbresnet50.children", "fbresnet50.children", "TDN_resnet.IOD_TDN_ResNet.conv1_temp.parameters", "params[].data.mean().expand", "fbresnet50.children", "m.weight.data.normal_", "isinstance", "list", "list", "list", "list", "list", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "params[].data.mean", "fbresnet50.children", "fbresnet50.children", "fbresnet50.children", "fbresnet50.children", "fbresnet50.children", "m.weight.data.normal_", "isinstance", "math.sqrt", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.fbresnet50", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.base_module.fbresnet50", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "K", ")", ":", "\n", "        ", "super", "(", "IOD_TDN_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_segments", "=", "K", "\n", "resnet_model", "=", "fbresnet50", "(", "num_segments", "=", "self", ".", "num_segments", ",", "pretrained", "=", "True", ")", "\n", "resnet_model1", "=", "fbresnet50", "(", "num_segments", "=", "self", ".", "num_segments", ",", "pretrained", "=", "True", ")", "\n", "apha", "=", "0.5", "\n", "belta", "=", "0.5", "\n", "\n", "self", ".", "output_channel", "=", "64", "\n", "self", ".", "conv1", "=", "list", "(", "resnet_model", ".", "children", "(", ")", ")", "[", "0", "]", "\n", "self", ".", "bn1", "=", "list", "(", "resnet_model", ".", "children", "(", ")", ")", "[", "1", "]", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "#CSP deconv", "\n", "self", ".", "expansion", "=", "4", "\n", "self", ".", "norm1", "=", "L2Norm", "(", "64", "*", "self", ".", "expansion", ",", "10", ")", "\n", "self", ".", "deconv2", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "128", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "256", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv4", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "512", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", "*", "self", ".", "expansion", ",", "512", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "L2Norm", "(", "512", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n", "\n", "self", ".", "cat", "=", "nn", ".", "Conv2d", "(", "1024", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat64", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat_bn", "=", "nn", ".", "BatchNorm2d", "(", "256", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_bn64", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_act", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "# implement conv1_5 and inflate weight", "\n", "self", ".", "conv1_temp", "=", "list", "(", "resnet_model1", ".", "children", "(", ")", ")", "[", "0", "]", "\n", "params", "=", "[", "x", ".", "clone", "(", ")", "for", "x", "in", "self", ".", "conv1_temp", ".", "parameters", "(", ")", "]", "\n", "kernel_size", "=", "params", "[", "0", "]", ".", "size", "(", ")", "\n", "new_kernel_size", "=", "kernel_size", "[", ":", "1", "]", "+", "(", "3", "*", "4", ",", ")", "+", "kernel_size", "[", "2", ":", "]", "\n", "new_kernels", "=", "params", "[", "0", "]", ".", "data", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "expand", "(", "new_kernel_size", ")", ".", "contiguous", "(", ")", "\n", "self", ".", "conv1_5", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "12", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv1_5", "[", "0", "]", ".", "weight", ".", "data", "=", "new_kernels", "\n", "\n", "self", ".", "maxpool_diff", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "ceil_mode", "=", "False", ")", "\n", "self", ".", "resnext_layer1", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "resnet_model1", ".", "children", "(", ")", ")", "[", "4", "]", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "ceil_mode", "=", "False", ")", "\n", "self", ".", "layer1_bak", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "resnet_model", ".", "children", "(", ")", ")", "[", "4", "]", ")", "\n", "self", ".", "layer2_bak", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "resnet_model", ".", "children", "(", ")", ")", "[", "5", "]", ")", "\n", "self", ".", "layer3_bak", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "resnet_model", ".", "children", "(", ")", ")", "[", "6", "]", ")", "\n", "self", ".", "layer4_bak", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "resnet_model", ".", "children", "(", ")", ")", "[", "7", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ",", "stride", "=", "1", ")", "\n", "self", ".", "avg_diff", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "fc", "=", "list", "(", "resnet_model", ".", "children", "(", ")", ")", "[", "8", "]", "\n", "self", ".", "apha", "=", "apha", "\n", "self", ".", "belta", "=", "belta", "\n", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "n", "=", "m", ".", "in_features", "*", "m", ".", "out_features", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TDN_resnet.IOD_TDN_ResNet.forward": [[106, 167], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "input_cat.view.view.view", "input_cat.view.view.squeeze", "TDN_resnet.IOD_TDN_ResNet.layer2_bak", "TDN_resnet.IOD_TDN_ResNet.layer3_bak", "TDN_resnet.IOD_TDN_ResNet.layer4_bak", "TDN_resnet.IOD_TDN_ResNet.norm1", "TDN_resnet.IOD_TDN_ResNet.deconv2", "TDN_resnet.IOD_TDN_ResNet.deconv3", "TDN_resnet.IOD_TDN_ResNet.deconv4", "TDN_resnet.IOD_TDN_ResNet.view().split", "TDN_resnet.IOD_TDN_ResNet.view().split", "TDN_resnet.IOD_TDN_ResNet.view().split", "TDN_resnet.IOD_TDN_ResNet.view().split", "range", "TDN_resnet.IOD_TDN_ResNet.conv1_5", "TDN_resnet.IOD_TDN_ResNet.maxpool_diff", "TDN_resnet.IOD_TDN_ResNet.resnext_layer1", "TDN_resnet.IOD_TDN_ResNet.conv1", "TDN_resnet.IOD_TDN_ResNet.bn1", "TDN_resnet.IOD_TDN_ResNet.relu", "TDN_resnet.IOD_TDN_ResNet.maxpool", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "TDN_resnet.IOD_TDN_ResNet.layer1_bak", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "x_list.append", "x_list[].unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "TDN_resnet.IOD_TDN_ResNet.cat", "TDN_resnet.IOD_TDN_ResNet.cat_bn", "TDN_resnet.IOD_TDN_ResNet.cat_act", "TDN_resnet.IOD_TDN_ResNet.cat64", "TDN_resnet.IOD_TDN_ResNet.cat_bn64", "x_output.append", "inputpre[].clone", "inputpre[].clone", "inputpre[].clone", "inputpre[].clone", "inputpre[].clone", "TDN_resnet.IOD_TDN_ResNet.avg_diff", "range", "TDN_resnet.IOD_TDN_ResNet.view", "TDN_resnet.IOD_TDN_ResNet.view", "TDN_resnet.IOD_TDN_ResNet.view", "TDN_resnet.IOD_TDN_ResNet.view", "TDN_resnet.IOD_TDN_ResNet.cat_act", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "TDN_resnet.IOD_TDN_ResNet.size", "TDN_resnet.IOD_TDN_ResNet.size", "x0_split[].squeeze", "x1_split[].squeeze", "x2_split[].squeeze", "x3_split[].squeeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "TDN_resnet.IOD_TDN_ResNet.size", "TDN_resnet.IOD_TDN_ResNet.size"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "inputpre", ")", ":", "\n", "        ", "x_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_segments", ")", ":", "\n", "            ", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", "=", "inputpre", "[", "i", "+", "0", "]", ".", "clone", "(", ")", ",", "inputpre", "[", "i", "+", "1", "]", ".", "clone", "(", ")", ",", "inputpre", "[", "i", "+", "2", "]", ".", "clone", "(", ")", ",", "inputpre", "[", "\n", "i", "+", "3", "]", ".", "clone", "(", ")", ",", "inputpre", "[", "i", "+", "4", "]", ".", "clone", "(", ")", "\n", "x_c5", "=", "self", ".", "conv1_5", "(", "\n", "self", ".", "avg_diff", "(", "torch", ".", "cat", "(", "[", "x2", "-", "x1", ",", "x3", "-", "x2", ",", "x4", "-", "x3", ",", "x5", "-", "x4", "]", ",", "1", ")", ".", "view", "(", "-", "1", ",", "12", ",", "x2", ".", "size", "(", ")", "[", "2", "]", ",", "x2", ".", "size", "(", ")", "[", "3", "]", ")", ")", ")", "\n", "x_diff", "=", "self", ".", "maxpool_diff", "(", "1.0", "/", "1.0", "*", "x_c5", ")", "\n", "\n", "temp_out_diff1", "=", "x_diff", "\n", "x_diff", "=", "self", ".", "resnext_layer1", "(", "x_diff", ")", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x3", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "# fusion layer1", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "temp_out_diff1", "=", "F", ".", "interpolate", "(", "temp_out_diff1", ",", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "x", "=", "self", ".", "apha", "*", "x", "+", "self", ".", "belta", "*", "temp_out_diff1", "\n", "# fusion layer2", "\n", "x", "=", "self", ".", "layer1_bak", "(", "x", ")", "\n", "x_diff", "=", "F", ".", "interpolate", "(", "x_diff", ",", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "x", "=", "self", ".", "apha", "*", "x", "+", "self", ".", "belta", "*", "x_diff", "\n", "x_list", ".", "append", "(", "x", ")", "\n", "\n", "", "inputlist", "=", "[", "x_list", "[", "i", "]", ".", "unsqueeze", "(", "2", ")", "for", "i", "in", "range", "(", "self", ".", "num_segments", ")", "]", "\n", "input_cat", "=", "torch", ".", "cat", "(", "inputlist", ",", "dim", "=", "2", ")", "# B C T H W", "\n", "batch_size", ",", "c", ",", "t", ",", "h", ",", "w", "=", "input_cat", ".", "shape", "\n", "input_cat", "=", "input_cat", ".", "view", "(", "batch_size", "*", "self", ".", "num_segments", ",", "c", ",", "t", "//", "self", ".", "num_segments", ",", "h", ",", "w", ")", "\n", "x0", "=", "input_cat", ".", "squeeze", "(", "2", ")", "\n", "\n", "# x0 = torch.cat(input_cat, dim=0)# B*T C  H W", "\n", "x1", "=", "self", ".", "layer2_bak", "(", "x0", ")", "\n", "x2", "=", "self", ".", "layer3_bak", "(", "x1", ")", "\n", "x3", "=", "self", ".", "layer4_bak", "(", "x2", ")", "\n", "\n", "x0", "=", "self", ".", "norm1", "(", "x0", ")", "\n", "x1", "=", "self", ".", "deconv2", "(", "x1", ")", "\n", "x2", "=", "self", ".", "deconv3", "(", "x2", ")", "\n", "x3", "=", "self", ".", "deconv4", "(", "x3", ")", "\n", "\n", "bt", ",", "c", ",", "h", ",", "w", "=", "x1", ".", "shape", "\n", "batch_size", "=", "bt", "//", "self", ".", "num_segments", "\n", "x0_split", "=", "x0", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x1_split", "=", "x1", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x2_split", "=", "x2", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x3_split", "=", "x3", ".", "view", "(", "batch_size", ",", "c", ",", "-", "1", ",", "h", ",", "w", ")", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "\n", "x_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_segments", ")", ":", "\n", "# map = torch.cat([x0_split_deconv[i],x1_split_deconv[i], x2_split_deconv[i], x3_split_deconv[i]], dim=1)", "\n", "            ", "map", "=", "torch", ".", "cat", "(", "\n", "[", "x0_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ",", "x1_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ",", "x2_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ",", "x3_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", "]", ",", "dim", "=", "1", ")", "\n", "map", "=", "self", ".", "cat", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_act", "(", "map", ")", "\n", "map", "=", "self", ".", "cat64", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn64", "(", "map", ")", "\n", "x_output", ".", "append", "(", "self", ".", "cat_act", "(", "map", ")", ")", "\n", "\n", "", "return", "x_output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.basic_ops.Identity.forward": [[5, 7], ["None"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.basic_ops.SegmentConsensus.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "consensus_type", ",", "dim", "=", "1", ")", ":", "\n", "        ", "self", ".", "consensus_type", "=", "consensus_type", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "shape", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.basic_ops.SegmentConsensus.forward": [[16, 26], ["input_tensor.size", "input_tensor.mean"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean"], ["", "def", "forward", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "self", ".", "shape", "=", "input_tensor", ".", "size", "(", ")", "\n", "if", "self", ".", "consensus_type", "==", "'avg'", ":", "\n", "            ", "output", "=", "input_tensor", ".", "mean", "(", "dim", "=", "self", ".", "dim", ",", "keepdim", "=", "True", ")", "\n", "", "elif", "self", ".", "consensus_type", "==", "'identity'", ":", "\n", "            ", "output", "=", "input_tensor", "\n", "", "else", ":", "\n", "            ", "output", "=", "None", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.basic_ops.SegmentConsensus.backward": [[27, 36], ["grad_output.expand", "float"], "methods", ["None"], ["", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "if", "self", ".", "consensus_type", "==", "'avg'", ":", "\n", "            ", "grad_in", "=", "grad_output", ".", "expand", "(", "self", ".", "shape", ")", "/", "float", "(", "self", ".", "shape", "[", "self", ".", "dim", "]", ")", "\n", "", "elif", "self", ".", "consensus_type", "==", "'identity'", ":", "\n", "            ", "grad_in", "=", "grad_output", "\n", "", "else", ":", "\n", "            ", "grad_in", "=", "None", "\n", "\n", "", "return", "grad_in", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.basic_ops.ConsensusModule.__init__": [[40, 44], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "consensus_type", ",", "dim", "=", "1", ")", ":", "\n", "        ", "super", "(", "ConsensusModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "consensus_type", "=", "consensus_type", "if", "consensus_type", "!=", "'rnn'", "else", "'identity'", "\n", "self", ".", "dim", "=", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.basic_ops.ConsensusModule.forward": [[45, 47], ["basic_ops.SegmentConsensus"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "SegmentConsensus", "(", "self", ".", "consensus_type", ",", "self", ".", "dim", ")", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.TemporalShift.__init__": [[12, 21], ["torch.Module.__init__", "print", "print"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net", ",", "n_segment", "=", "3", ",", "n_div", "=", "8", ",", "inplace", "=", "False", ")", ":", "\n", "        ", "super", "(", "TemporalShift", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "n_segment", "=", "n_segment", "\n", "self", ".", "fold_div", "=", "n_div", "\n", "self", ".", "inplace", "=", "inplace", "\n", "if", "inplace", ":", "\n", "            ", "print", "(", "'=> Using in-place shift...'", ")", "\n", "", "print", "(", "'=> Using fold div: {}'", ".", "format", "(", "self", ".", "fold_div", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.TemporalShift.forward": [[22, 25], ["temporal_shift.TemporalShift.shift", "temporal_shift.TemporalShift.net"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.TemporalShift.shift"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "shift", "(", "x", ",", "self", ".", "n_segment", ",", "fold_div", "=", "self", ".", "fold_div", ",", "inplace", "=", "self", ".", "inplace", ")", "\n", "return", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.TemporalShift.shift": [[26, 42], ["x.view.view.size", "x.view.view.view", "torch.zeros_like.view", "torch.zeros_like.view", "torch.zeros_like.view", "InplaceShift.apply", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "shift", "(", "x", ",", "n_segment", ",", "fold_div", "=", "3", ",", "inplace", "=", "False", ")", ":", "\n", "        ", "nt", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "n_batch", "=", "nt", "//", "n_segment", "\n", "x", "=", "x", ".", "view", "(", "n_batch", ",", "n_segment", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "fold", "=", "c", "//", "fold_div", "\n", "if", "inplace", ":", "\n", "            ", "out", "=", "InplaceShift", ".", "apply", "(", "x", ",", "fold", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "torch", ".", "zeros_like", "(", "x", ")", "\n", "out", "[", ":", ",", ":", "-", "1", ",", ":", "fold", "]", "=", "x", "[", ":", ",", "1", ":", ",", ":", "fold", "]", "# shift left", "\n", "out", "[", ":", ",", "1", ":", ",", "fold", ":", "2", "*", "fold", "]", "=", "x", "[", ":", ",", ":", "-", "1", ",", "fold", ":", "2", "*", "fold", "]", "# shift right", "\n", "out", "[", ":", ",", ":", ",", "2", "*", "fold", ":", "]", "=", "x", "[", ":", ",", ":", ",", "2", "*", "fold", ":", "]", "# not shift", "\n", "\n", "", "return", "out", ".", "view", "(", "nt", ",", "c", ",", "h", ",", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.InplaceShift.forward": [[46, 59], ["input.size", "input.data.new().zero_", "input.data.new().zero_.zero_", "input.data.new"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "fold", ")", ":", "\n", "# not support higher order gradient", "\n", "# input = input.detach_()", "\n", "        ", "ctx", ".", "fold_", "=", "fold", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "input", ".", "size", "(", ")", "\n", "buffer", "=", "input", ".", "data", ".", "new", "(", "n", ",", "t", ",", "fold", ",", "h", ",", "w", ")", ".", "zero_", "(", ")", "\n", "buffer", "[", ":", ",", ":", "-", "1", "]", "=", "input", ".", "data", "[", ":", ",", "1", ":", ",", ":", "fold", "]", "\n", "input", ".", "data", "[", ":", ",", ":", ",", ":", "fold", "]", "=", "buffer", "\n", "buffer", ".", "zero_", "(", ")", "\n", "buffer", "[", ":", ",", "1", ":", "]", "=", "input", ".", "data", "[", ":", ",", ":", "-", "1", ",", "fold", ":", "2", "*", "fold", "]", "\n", "input", ".", "data", "[", ":", ",", ":", ",", "fold", ":", "2", "*", "fold", "]", "=", "buffer", "\n", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.InplaceShift.backward": [[60, 72], ["grad_output.size", "grad_output.data.new().zero_", "grad_output.data.new().zero_.zero_", "grad_output.data.new"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "# grad_output = grad_output.detach_()", "\n", "        ", "fold", "=", "ctx", ".", "fold_", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "grad_output", ".", "size", "(", ")", "\n", "buffer", "=", "grad_output", ".", "data", ".", "new", "(", "n", ",", "t", ",", "fold", ",", "h", ",", "w", ")", ".", "zero_", "(", ")", "\n", "buffer", "[", ":", ",", "1", ":", "]", "=", "grad_output", ".", "data", "[", ":", ",", ":", "-", "1", ",", ":", "fold", "]", "\n", "grad_output", ".", "data", "[", ":", ",", ":", ",", ":", "fold", "]", "=", "buffer", "\n", "buffer", ".", "zero_", "(", ")", "\n", "buffer", "[", ":", ",", ":", "-", "1", "]", "=", "grad_output", ".", "data", "[", ":", ",", "1", ":", ",", "fold", ":", "2", "*", "fold", "]", "\n", "grad_output", ".", "data", "[", ":", ",", ":", ",", "fold", ":", "2", "*", "fold", "]", "=", "buffer", "\n", "return", "grad_output", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.TemporalPool.__init__": [[75, 79], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net", ",", "n_segment", ")", ":", "\n", "        ", "super", "(", "TemporalPool", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "n_segment", "=", "n_segment", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.TemporalPool.forward": [[80, 83], ["temporal_shift.TemporalPool.temporal_pool", "temporal_shift.TemporalPool.net"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.TemporalPool.temporal_pool"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "temporal_pool", "(", "x", ",", "n_segment", "=", "self", ".", "n_segment", ")", "\n", "return", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.TemporalPool.temporal_pool": [[84, 94], ["print", "x.transpose().contiguous().view.transpose().contiguous().view.size", "x.transpose().contiguous().view.transpose().contiguous().view.view().transpose", "print", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "x.transpose().contiguous().view.transpose().contiguous().view.size", "x.transpose().contiguous().view.transpose().contiguous().view.size", "x.transpose().contiguous().view.transpose().contiguous().view.view", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "x.transpose().contiguous().view.transpose().contiguous().view.transpose"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "temporal_pool", "(", "x", ",", "n_segment", ")", ":", "\n", "        ", "print", "(", "x", ".", "size", "(", ")", ")", "\n", "nt", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "n_batch", "=", "nt", "//", "n_segment", "\n", "x", "=", "x", ".", "view", "(", "n_batch", ",", "n_segment", ",", "c", ",", "h", ",", "w", ")", ".", "transpose", "(", "1", ",", "2", ")", "# n, c, t, h, w", "\n", "print", "(", "x", ".", "size", "(", ")", ")", "\n", "x", "=", "F", ".", "max_pool3d", "(", "x", ",", "kernel_size", "=", "(", "3", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "0", ",", "0", ")", ")", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "nt", "//", "2", ",", "c", ",", "h", ",", "w", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.make_temporal_shift": [[96, 140], ["print", "NotImplementedError", "temporal_shift.make_temporal_shift.make_block_temporal"], "function", ["None"], ["", "", "def", "make_temporal_shift", "(", "net", ",", "n_segment", ",", "n_div", "=", "8", ",", "place", "=", "'blockres'", ",", "temporal_pool", "=", "False", ",", "two_path", "=", "False", ")", ":", "\n", "    ", "if", "temporal_pool", ":", "\n", "        ", "n_segment_list", "=", "[", "n_segment", ",", "n_segment", "//", "2", ",", "n_segment", "//", "2", ",", "n_segment", "//", "2", "]", "\n", "", "else", ":", "\n", "        ", "n_segment_list", "=", "[", "n_segment", "]", "*", "4", "\n", "", "assert", "n_segment_list", "[", "-", "1", "]", ">", "0", "\n", "print", "(", "'=> n_segment per stage: {}'", ".", "format", "(", "n_segment_list", ")", ")", "\n", "\n", "import", "torchvision", "\n", "if", "True", ":", "#isinstance(net, torchvision.models.ResNet):", "\n", "        ", "if", "place", "==", "'block'", ":", "\n", "            ", "def", "make_block_temporal", "(", "stage", ",", "this_segment", ")", ":", "\n", "                ", "blocks", "=", "list", "(", "stage", ".", "children", "(", ")", ")", "\n", "print", "(", "'=> Processing stage with {} blocks'", ".", "format", "(", "len", "(", "blocks", ")", ")", ")", "\n", "for", "i", ",", "b", "in", "enumerate", "(", "blocks", ")", ":", "\n", "                    ", "blocks", "[", "i", "]", "=", "TemporalShift", "(", "b", ",", "n_segment", "=", "this_segment", ",", "n_div", "=", "n_div", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "(", "blocks", ")", ")", "\n", "\n", "", "net", ".", "layer1", "=", "make_block_temporal", "(", "net", ".", "layer1", ",", "n_segment_list", "[", "0", "]", ")", "\n", "net", ".", "layer2", "=", "make_block_temporal", "(", "net", ".", "layer2", ",", "n_segment_list", "[", "1", "]", ")", "\n", "net", ".", "layer3", "=", "make_block_temporal", "(", "net", ".", "layer3", ",", "n_segment_list", "[", "2", "]", ")", "\n", "net", ".", "layer4", "=", "make_block_temporal", "(", "net", ".", "layer4", ",", "n_segment_list", "[", "3", "]", ")", "\n", "\n", "", "elif", "'blockres'", "in", "place", ":", "\n", "            ", "n_round", "=", "1", "\n", "if", "len", "(", "list", "(", "net", ".", "layer3", ".", "children", "(", ")", ")", ")", ">=", "23", ":", "\n", "                ", "print", "(", "'=> Using n_round {} to insert temporal shift'", ".", "format", "(", "n_round", ")", ")", "\n", "\n", "", "def", "make_block_temporal", "(", "stage", ",", "this_segment", ")", ":", "\n", "                ", "blocks", "=", "list", "(", "stage", ".", "children", "(", ")", ")", "\n", "print", "(", "'=> Processing stage with {} blocks residual'", ".", "format", "(", "len", "(", "blocks", ")", ")", ")", "\n", "for", "i", ",", "b", "in", "enumerate", "(", "blocks", ")", ":", "\n", "                    ", "if", "i", "%", "n_round", "==", "0", ":", "\n", "                        ", "blocks", "[", "i", "]", ".", "conv1", "=", "TemporalShift", "(", "b", ".", "conv1", ",", "n_segment", "=", "this_segment", ",", "n_div", "=", "n_div", ")", "\n", "if", "two_path", ":", "\n", "                            ", "blocks", "[", "i", "]", ".", "conv2", "=", "TemporalShift", "(", "b", ".", "conv2", ",", "n_segment", "=", "this_segment", ",", "n_div", "=", "n_div", ")", "\n", "", "", "", "return", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n", "", "net", ".", "layer1", "=", "make_block_temporal", "(", "net", ".", "layer1", ",", "n_segment_list", "[", "0", "]", ")", "\n", "net", ".", "layer2", "=", "make_block_temporal", "(", "net", ".", "layer2", ",", "n_segment_list", "[", "1", "]", ")", "\n", "net", ".", "layer3", "=", "make_block_temporal", "(", "net", ".", "layer3", ",", "n_segment_list", "[", "2", "]", ")", "\n", "net", ".", "layer4", "=", "make_block_temporal", "(", "net", ".", "layer4", ",", "n_segment_list", "[", "3", "]", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "place", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.make_temporal_pool": [[142, 149], ["isinstance", "print", "temporal_shift.TemporalPool"], "function", ["None"], ["", "", "def", "make_temporal_pool", "(", "net", ",", "n_segment", ")", ":", "\n", "    ", "import", "torchvision", "\n", "if", "isinstance", "(", "net", ",", "torchvision", ".", "models", ".", "ResNet", ")", ":", "\n", "        ", "print", "(", "'=> Injecting nonlocal pooling'", ")", "\n", "net", ".", "layer2", "=", "TemporalPool", "(", "net", ".", "layer2", ",", "n_segment", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TSM_resnet.IOD_TSM_ResNet.__init__": [[11, 71], ["torch.nn.Module.__init__", "TSM_resnet.IOD_TSM_ResNet._prepare_base_model", "network.twod_models.basic_ops.ConsensusModule", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TSM_resnet.IOD_TSM_ResNet._prepare_base_model"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "K", ")", ":", "\n", "        ", "super", "(", "IOD_TSM_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "consensus_type", "=", "'avg'", "\n", "new_length", "=", "None", "\n", "# num_segments = 8", "\n", "num_class", "=", "1", "\n", "before_softmax", "=", "True", "\n", "dropout", "=", "0.8", "\n", "img_feature_dim", "=", "256", "\n", "partial_bn", "=", "True", "\n", "is_shift", "=", "True", "\n", "shift_div", "=", "8", "\n", "shift_place", "=", "'blockres'", "\n", "fc_lr5", "=", "False", "\n", "#tin = True", "\n", "non_local", "=", "False", "\n", "temporal_pool", "=", "False", "\n", "base_model", "=", "'resnet50'", "\n", "self", ".", "output_channel", "=", "64", "\n", "self", ".", "modality", "=", "'RGB'", "\n", "self", ".", "num_segments", "=", "K", "\n", "self", ".", "reshape", "=", "True", "\n", "self", ".", "before_softmax", "=", "before_softmax", "\n", "self", ".", "dropout", "=", "dropout", "\n", "# self.crop_num = crop_num", "\n", "self", ".", "consensus_type", "=", "consensus_type", "\n", "self", ".", "img_feature_dim", "=", "img_feature_dim", "# the dimension of the CNN feature to represent each frame", "\n", "# self.pretrain = pretrain", "\n", "\n", "self", ".", "is_shift", "=", "is_shift", "\n", "self", ".", "shift_div", "=", "shift_div", "\n", "self", ".", "shift_place", "=", "shift_place", "\n", "\n", "self", ".", "base_model_name", "=", "base_model", "\n", "self", ".", "fc_lr5", "=", "fc_lr5", "\n", "self", ".", "temporal_pool", "=", "temporal_pool", "\n", "self", ".", "non_local", "=", "non_local", "\n", "\n", "if", "new_length", "is", "None", ":", "\n", "            ", "self", ".", "new_length", "=", "1", "if", "self", ".", "modality", "==", "\"RGB\"", "else", "5", "\n", "", "else", ":", "\n", "            ", "self", ".", "new_length", "=", "new_length", "\n", "\n", "", "self", ".", "_prepare_base_model", "(", "base_model", ",", "K", ")", "\n", "\n", "# feature_dim = self._prepare_tsn(num_class)", "\n", "\n", "# if self.modality == 'RGBDiff':", "\n", "#     print(\"Converting the ImageNet model to RGB+Diff init model\")", "\n", "#     self.base_model = self._construct_diff_model(self.base_model)", "\n", "#     print(\"Done. RGBDiff model ready.\")", "\n", "\n", "self", ".", "consensus", "=", "ConsensusModule", "(", "consensus_type", ")", "\n", "\n", "if", "not", "self", ".", "before_softmax", ":", "\n", "            ", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", ")", "\n", "\n", "# self._enable_pbn = partial_bn", "\n", "", "if", "partial_bn", ":", "\n", "            ", "self", ".", "_enable_pbn", "=", "True", "\n", "# Override the default train() to freeze the BN parameters", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TSM_resnet.IOD_TSM_ResNet._prepare_base_model": [[85, 121], ["print", "base_model.startswith", "network.resnet.IOD_ResNet", "network.resnet.IOD_ResNet", "torch.nn.AdaptiveAvgPool2d", "getattr", "print", "make_temporal_shift"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.temporal_shift.make_temporal_shift"], ["", "", "def", "_prepare_base_model", "(", "self", ",", "base_model", ",", "K", ",", "config", "=", "{", "}", ")", ":", "\n", "        ", "print", "(", "'=> base model: {}'", ".", "format", "(", "base_model", ")", ")", "\n", "\n", "if", "base_model", ".", "startswith", "(", "'resnet'", ")", ":", "\n", "            ", "BaseResnet", "=", "IOD_ResNet", "(", "50", ",", "K", ")", "\n", "\n", "# XXXX = torchvision.models", "\n", "# self.base_model0 = getattr(BaseResnet)(True)", "\n", "self", ".", "base_model", "=", "getattr", "(", "torchvision", ".", "models", ",", "base_model", ")", "(", "True", ")", "\n", "self", ".", "base_model", "=", "IOD_ResNet", "(", "50", ",", "K", ")", "\n", "\n", "# url = 'https://download.pytorch.org/models/resnet50-19c8e357.pth'", "\n", "# model_weights = model_zoo.load_url(url)", "\n", "# self.base_model.load_state_dict(model_weights, strict=False)", "\n", "# state_dict = self.base_model.state_dict()", "\n", "# self.check_state_dict(state_dict, model_weights)", "\n", "#", "\n", "#", "\n", "if", "self", ".", "is_shift", ":", "\n", "                ", "print", "(", "'Adding temporal shift...'", ")", "\n", "from", "network", ".", "twod_models", ".", "temporal_shift", "import", "make_temporal_shift", "\n", "make_temporal_shift", "(", "self", ".", "base_model", ",", "self", ".", "num_segments", ",", "\n", "n_div", "=", "self", ".", "shift_div", ",", "place", "=", "self", ".", "shift_place", ",", "temporal_pool", "=", "self", ".", "temporal_pool", ",", "two_path", "=", "True", ")", "\n", "\n", "# if self.tin:", "\n", "# print('Adding temporal deformable conv...')", "\n", "# from network.twod_models.temporal_interlace import make_temporal_interlace", "\n", "# make_temporal_interlace(self.base_model, self.num_segments, shift_div=self.shift_div)", "\n", "#", "\n", "\n", "", "self", ".", "base_model", ".", "last_layer_name", "=", "'fc'", "\n", "self", ".", "input_size", "=", "224", "\n", "self", ".", "input_mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "self", ".", "input_std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "\n", "self", ".", "base_model", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.twod_models.TSM_resnet.IOD_TSM_ResNet.forward": [[123, 138], ["input.squeeze.squeeze.view", "input.squeeze.squeeze.squeeze", "TSM_resnet.IOD_TSM_ResNet.base_model", "base_out.split.split.view", "base_out.split.split.split", "base_out[].squeeze", "range", "len"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "no_reshape", "=", "False", ")", ":", "\n", "        ", "batch_size", ",", "c", ",", "t", ",", "h", ",", "w", "=", "input", ".", "shape", "\n", "input", "=", "input", ".", "view", "(", "batch_size", "*", "self", ".", "num_segments", ",", "c", ",", "t", "//", "self", ".", "num_segments", ",", "h", ",", "w", ")", "\n", "input", "=", "input", ".", "squeeze", "(", "2", ")", "\n", "\n", "base_out", "=", "self", ".", "base_model", "(", "input", ")", "#B*t,C,H,W", "\n", "bt", ",", "c", ",", "h", ",", "w", "=", "base_out", ".", "shape", "\n", "#x_output = base_out.split(bt//self.num_segments,dim = 0)", "\n", "\n", "\n", "base_out", "=", "base_out", ".", "view", "(", "batch_size", ",", "bt", "//", "batch_size", ",", "c", ",", "h", ",", "w", ")", "\n", "base_out", "=", "base_out", ".", "split", "(", "1", ",", "dim", "=", "1", ")", "\n", "x_output", "=", "[", "base_out", "[", "i", "]", ".", "squeeze", "(", "1", ")", "for", "i", "in", "range", "(", "len", "(", "base_out", ")", ")", "]", "\n", "\n", "return", "x_output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.cuda_shift.rtc_wrap.ShiftFeatureFunc.__init__": [[11, 13], ["torch.autograd.Function.__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ShiftFeatureFunc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.cuda_shift.rtc_wrap.ShiftFeatureFunc.forward": [[15, 26], ["torch.zeros_like", "cudashift.shift_featuremap_cuda_forward", "rtc_wrap.ShiftFeatureFunc.save_for_backward"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "forward", "(", "self", ",", "data", ",", "shift", ")", ":", "\n", "        ", "if", "not", "data", ".", "is_cuda", "or", "not", "shift", ".", "is_cuda", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "if", "data", ".", "requires_grad", ":", "\n", "            ", "self", ".", "save_for_backward", "(", "shift", ")", "\n", "\n", "", "out", "=", "torch", ".", "zeros_like", "(", "data", ")", "\n", "backend", ".", "shift_featuremap_cuda_forward", "(", "data", ",", "shift", ",", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.cuda_shift.rtc_wrap.ShiftFeatureFunc.backward": [[27, 36], ["grad_output.new().zero_", "shift.new().zero_", "cudashift.shift_featuremap_cuda_backward", "grad_output.new", "shift.new", "grad_output.size", "shift.size"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "if", "not", "grad_output", ".", "is_cuda", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "shift", "=", "self", ".", "saved_tensors", "[", "0", "]", "\n", "data_grad_input", "=", "grad_output", ".", "new", "(", "*", "grad_output", ".", "size", "(", ")", ")", ".", "zero_", "(", ")", "\n", "shift_grad_input", "=", "shift", ".", "new", "(", "*", "shift", ".", "size", "(", ")", ")", ".", "zero_", "(", ")", "\n", "backend", ".", "shift_featuremap_cuda_backward", "(", "grad_output", ",", "shift", ",", "data_grad_input", ")", "\n", "return", "data_grad_input", ",", "shift_grad_input", "\n", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.L2Norm.__init__": [[22, 29], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "s3d_resnet.L2Norm.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ")", ":", "\n", "        ", "super", "(", "L2Norm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "gamma", "=", "scale", "or", "None", "\n", "self", ".", "eps", "=", "1e-10", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "n_channels", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.L2Norm.reset_parameters": [[30, 32], ["torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "init", ".", "constant_", "(", "self", ".", "weight", ",", "self", ".", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.L2Norm.forward": [[33, 38], ["torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "s3d_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze().expand_as", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "s3d_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "s3d_resnet.L2Norm.weight.unsqueeze().unsqueeze", "s3d_resnet.L2Norm.weight.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "sqrt", "(", ")", "+", "self", ".", "eps", "\n", "x", "=", "torch", ".", "div", "(", "x", ",", "norm", ")", "\n", "out", "=", "self", ".", "weight", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "*", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.STBasicBlock.__init__": [[51, 79], ["torch.Module.__init__", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "0", ",", "downsample", "=", "None", ",", "\n", "dw_t_conv", "=", "False", ")", ":", "\n", "        ", "super", "(", "STBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "BasicConv3d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "stride", "[", "1", "]", ",", "stride", "[", "2", "]", ")", ",", "padding", "=", "(", "0", ",", "padding", ",", "padding", ")", ",", "\n", "bias", "=", "False", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1_t", "=", "BasicConv3d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "(", "3", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "stride", "[", "0", "]", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "padding", ",", "0", ",", "0", ")", ",", "bias", "=", "False", ",", "\n", "dw_t_conv", "=", "dw_t_conv", ")", "\n", "self", ".", "bn1_t", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu1_t", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "BasicConv3d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "padding", ",", "padding", ")", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2_t", "=", "BasicConv3d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "(", "3", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "padding", ",", "0", ",", "0", ")", ",", "bias", "=", "False", ",", "\n", "dw_t_conv", "=", "dw_t_conv", ")", "\n", "self", ".", "bn2_t", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu2_t", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.STBasicBlock.forward": [[80, 102], ["s3d_resnet.STBasicBlock.conv1", "s3d_resnet.STBasicBlock.bn1", "s3d_resnet.STBasicBlock.relu1", "s3d_resnet.STBasicBlock.conv1_t", "s3d_resnet.STBasicBlock.bn1_t", "s3d_resnet.STBasicBlock.relu1_t", "s3d_resnet.STBasicBlock.conv2", "s3d_resnet.STBasicBlock.bn2", "s3d_resnet.STBasicBlock.relu2", "s3d_resnet.STBasicBlock.conv2_t", "s3d_resnet.STBasicBlock.bn2_t", "s3d_resnet.STBasicBlock.relu2_t", "s3d_resnet.STBasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv1_t", "(", "out", ")", "\n", "out", "=", "self", ".", "bn1_t", "(", "out", ")", "\n", "out", "=", "self", ".", "relu1_t", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2_t", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2_t", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu2_t", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.STBottleneck.__init__": [[107, 130], ["torch.Module.__init__", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "0", ",", "downsample", "=", "None", ",", "\n", "dw_t_conv", "=", "False", ")", ":", "\n", "        ", "super", "(", "STBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "BasicConv3d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "BasicConv3d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "stride", "[", "1", "]", ",", "stride", "[", "2", "]", ")", ",", "padding", "=", "(", "0", ",", "padding", ",", "padding", ")", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2_t", "=", "BasicConv3d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "(", "3", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "stride", "[", "0", "]", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "padding", ",", "0", ",", "0", ")", ",", "bias", "=", "False", ",", "\n", "dw_t_conv", "=", "dw_t_conv", ")", "\n", "self", ".", "bn2_t", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu2_t", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv3", "=", "BasicConv3d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm3d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu3", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.STBottleneck.forward": [[131, 154], ["s3d_resnet.STBottleneck.conv1", "s3d_resnet.STBottleneck.bn1", "s3d_resnet.STBottleneck.relu1", "s3d_resnet.STBottleneck.conv2", "s3d_resnet.STBottleneck.bn2", "s3d_resnet.STBottleneck.relu2", "s3d_resnet.STBottleneck.conv2_t", "s3d_resnet.STBottleneck.bn2_t", "s3d_resnet.STBottleneck.relu2_t", "s3d_resnet.STBottleneck.conv3", "s3d_resnet.STBottleneck.bn3", "s3d_resnet.STBottleneck.relu3", "s3d_resnet.STBottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2_t", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2_t", "(", "out", ")", "\n", "out", "=", "self", ".", "relu2_t", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu3", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.IOD_S3D_ResNet.__init__": [[156, 239], ["torch.Module.__init__", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "s3d_resnet.IOD_S3D_ResNet._make_layer", "s3d_resnet.IOD_S3D_ResNet._make_layer", "s3d_resnet.IOD_S3D_ResNet._make_layer", "s3d_resnet.IOD_S3D_ResNet._make_layer", "s3d_resnet.IOD_S3D_ResNet.modules", "s3d_resnet.L2Norm", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "s3d_resnet.IOD_S3D_ResNet.modules", "isinstance", "s3d_resnet.IOD_S3D_ResNet.modules", "s3d_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "s3d_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "s3d_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "s3d_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "m.weight.data.normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "m.weight.data.normal_", "isinstance", "math.sqrt", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "K", ")", ":", "\n", "        ", "super", "(", "IOD_S3D_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "{", "\n", "18", ":", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "34", ":", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "50", ":", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "101", ":", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "\n", "152", ":", "[", "3", ",", "8", ",", "36", ",", "3", "]", "}", "[", "depth", "]", "\n", "block", "=", "STBasicBlock", "if", "depth", "<", "50", "else", "STBottleneck", "\n", "self", ".", "num_classes", "=", "1000", "\n", "self", ".", "output_channel", "=", "64", "\n", "self", ".", "dropout_parameter", "=", "0.5", "\n", "self", ".", "zero_init_residual", "=", "False", "\n", "self", ".", "dw_t_conv", "=", "False", "\n", "self", ".", "without_t_stride", "=", "False", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "t_s", "=", "1", "if", "self", ".", "without_t_stride", "else", "2", "\n", "self", ".", "conv1", "=", "BasicConv3d", "(", "3", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "3", ",", "3", ")", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "# self.dropout = nn.Dropout(self.dropout_parameter)", "\n", "# self.fc = nn.Linear(512 * block.expansion, self.num_classes)", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.001", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "self", ".", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "STBottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "STBasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n", "#CSP deconv", "\n", "", "", "", "self", ".", "expansion", "=", "4", "\n", "self", ".", "norm1", "=", "L2Norm", "(", "64", "*", "self", ".", "expansion", ",", "10", ")", "\n", "self", ".", "deconv2", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "128", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "256", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv4", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "512", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", "*", "self", ".", "expansion", ",", "512", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "L2Norm", "(", "512", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "cat", "=", "nn", ".", "Conv2d", "(", "256", "*", "4", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat64", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat_bn", "=", "nn", ".", "BatchNorm2d", "(", "256", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_bn64", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_act", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "n", "=", "m", ".", "in_features", "*", "m", ".", "out_features", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.IOD_S3D_ResNet.mean": [[240, 242], ["None"], "methods", ["None"], ["", "", "", "def", "mean", "(", "self", ",", "modality", "=", "'rgb'", ")", ":", "\n", "        ", "return", "[", "0.485", ",", "0.456", ",", "0.406", "]", "if", "modality", "==", "'rgb'", "else", "[", "0.5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.IOD_S3D_ResNet.std": [[243, 245], ["numpy.mean"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean"], ["", "def", "std", "(", "self", ",", "modality", "=", "'rgb'", ")", ":", "\n", "        ", "return", "[", "0.229", ",", "0.224", ",", "0.225", "]", "if", "modality", "==", "'rgb'", "else", "[", "np", ".", "mean", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.IOD_S3D_ResNet.network_name": [[246, 254], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "network_name", "(", "self", ")", ":", "\n", "        ", "name", "=", "'s3d-resnet-{}'", ".", "format", "(", "self", ".", "depth", ")", "\n", "if", "self", ".", "dw_t_conv", ":", "\n", "            ", "name", "+=", "'-dw-t-conv'", "\n", "", "if", "not", "self", ".", "without_t_stride", ":", "\n", "            ", "name", "+=", "'-ts'", "\n", "", "return", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.IOD_S3D_ResNet._make_layer": [[255, 273], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "s3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "block"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "self", ".", "t_s", "if", "stride", "==", "2", "else", "1", ",", "stride", ",", "stride", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", "=", "(", "self", ".", "t_s", "if", "stride", "==", "2", "else", "1", ",", "stride", ",", "stride", ")", ",", "\n", "padding", "=", "1", ",", "downsample", "=", "downsample", ",", "dw_t_conv", "=", "self", ".", "dw_t_conv", ")", ")", "\n", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "padding", "=", "1", ",", "dw_t_conv", "=", "self", ".", "dw_t_conv", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.IOD_S3D_ResNet.forward": [[274, 309], ["s3d_resnet.IOD_S3D_ResNet.conv1", "s3d_resnet.IOD_S3D_ResNet.bn1", "s3d_resnet.IOD_S3D_ResNet.relu", "s3d_resnet.IOD_S3D_ResNet.maxpool", "s3d_resnet.IOD_S3D_ResNet.layer1", "s3d_resnet.IOD_S3D_ResNet.layer2", "s3d_resnet.IOD_S3D_ResNet.layer3", "s3d_resnet.IOD_S3D_ResNet.layer4", "s3d_resnet.IOD_S3D_ResNet.split", "s3d_resnet.IOD_S3D_ResNet.split", "s3d_resnet.IOD_S3D_ResNet.split", "s3d_resnet.IOD_S3D_ResNet.split", "range", "list", "s3d_resnet.IOD_S3D_ResNet.norm1", "s3d_resnet.IOD_S3D_ResNet.deconv2", "s3d_resnet.IOD_S3D_ResNet.deconv3", "s3d_resnet.IOD_S3D_ResNet.deconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "s3d_resnet.IOD_S3D_ResNet.cat", "s3d_resnet.IOD_S3D_ResNet.cat_bn", "s3d_resnet.IOD_S3D_ResNet.cat_act", "s3d_resnet.IOD_S3D_ResNet.cat64", "s3d_resnet.IOD_S3D_ResNet.cat_bn64", "x_output.append", "s3d_resnet.IOD_S3D_ResNet.size", "x1_split[].squeeze", "range", "x2_split[].squeeze", "range", "x3_split[].squeeze", "range", "x4_split[].squeeze", "range", "s3d_resnet.IOD_S3D_ResNet.cat_act", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "K", "=", "list", "(", "x", ".", "size", "(", ")", ")", "[", "2", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x1", "=", "self", ".", "layer1", "(", "x", ")", "# 2 256 72 72", "\n", "x2", "=", "self", ".", "layer2", "(", "x1", ")", "# 2 512 36 36", "\n", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "# 2 1024 18 18", "\n", "x4", "=", "self", ".", "layer4", "(", "x3", ")", "# 2 1024 18 18", "\n", "\n", "\n", "x1_split", "=", "x1", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x2_split", "=", "x2", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x3_split", "=", "x3", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x4_split", "=", "x4", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "\n", "x1_split_deconv", "=", "[", "self", ".", "norm1", "(", "x1_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x1_split", ")", ")", "]", "\n", "x2_split_deconv", "=", "[", "self", ".", "deconv2", "(", "x2_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x2_split", ")", ")", "]", "\n", "x3_split_deconv", "=", "[", "self", ".", "deconv3", "(", "x3_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x3_split", ")", ")", "]", "\n", "x4_split_deconv", "=", "[", "self", ".", "deconv4", "(", "x4_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x4_split", ")", ")", "]", "\n", "\n", "\n", "x_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "            ", "map", "=", "torch", ".", "cat", "(", "[", "x1_split_deconv", "[", "i", "]", ",", "x2_split_deconv", "[", "i", "//", "2", "]", ",", "x3_split_deconv", "[", "i", "//", "4", "]", ",", "x4_split_deconv", "[", "i", "//", "8", "]", "]", ",", "dim", "=", "1", ")", "\n", "map", "=", "self", ".", "cat", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_act", "(", "map", ")", "\n", "map", "=", "self", ".", "cat64", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn64", "(", "map", ")", "\n", "x_output", ".", "append", "(", "self", ".", "cat_act", "(", "map", ")", ")", "\n", "\n", "", "return", "x_output", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.s3d_resnet.BasicConv3d": [[40, 46], ["torch.Conv3d"], "function", ["None"], ["", "", "def", "BasicConv3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "\n", "bias", "=", "False", ",", "dw_t_conv", "=", "False", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ",", "\n", "groups", "=", "in_planes", "if", "dw_t_conv", "else", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.__init__": [[32, 39], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "i3d_resnet.L2Norm.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ")", ":", "\n", "        ", "super", "(", "L2Norm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "gamma", "=", "scale", "or", "None", "\n", "self", ".", "eps", "=", "1e-10", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "n_channels", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.reset_parameters": [[40, 42], ["torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "init", ".", "constant_", "(", "self", ".", "weight", ",", "self", ".", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.L2Norm.forward": [[43, 48], ["torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "torch.div.pow().sum().sqrt", "i3d_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze().expand_as", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "torch.div.pow().sum", "i3d_resnet.L2Norm.weight.unsqueeze().unsqueeze().unsqueeze", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "torch.div.pow", "i3d_resnet.L2Norm.weight.unsqueeze().unsqueeze", "i3d_resnet.L2Norm.weight.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "sqrt", "(", ")", "+", "self", ".", "eps", "\n", "x", "=", "torch", ".", "div", "(", "x", ",", "norm", ")", "\n", "out", "=", "self", ".", "weight", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "*", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicBlock.__init__": [[61, 75], ["torch.Module.__init__", "i3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "i3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "0", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "BasicConv3d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "conv2", "=", "BasicConv3d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicBlock.forward": [[76, 90], ["i3d_resnet.BasicBlock.conv1", "i3d_resnet.BasicBlock.bn1", "i3d_resnet.BasicBlock.relu1", "i3d_resnet.BasicBlock.conv2", "i3d_resnet.BasicBlock.bn2", "i3d_resnet.BasicBlock.relu2", "i3d_resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.Bottleneck.__init__": [[95, 111], ["torch.Module.__init__", "i3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "i3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "i3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "BasicConv3d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "BasicConv3d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv3", "=", "BasicConv3d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm3d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu3", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.Bottleneck.forward": [[112, 132], ["i3d_resnet.Bottleneck.conv1", "i3d_resnet.Bottleneck.bn1", "i3d_resnet.Bottleneck.relu1", "i3d_resnet.Bottleneck.conv2", "i3d_resnet.Bottleneck.bn2", "i3d_resnet.Bottleneck.relu2", "i3d_resnet.Bottleneck.conv3", "i3d_resnet.Bottleneck.bn3", "i3d_resnet.Bottleneck.relu3", "i3d_resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu3", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.__init__": [[134, 221], ["torch.Module.__init__", "i3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "i3d_resnet.IOD_I3D_ResNet._make_layer", "i3d_resnet.IOD_I3D_ResNet._make_layer", "i3d_resnet.IOD_I3D_ResNet._make_layer", "i3d_resnet.IOD_I3D_ResNet._make_layer", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "i3d_resnet.IOD_I3D_ResNet.modules", "i3d_resnet.L2Norm", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "i3d_resnet.IOD_I3D_ResNet.modules", "isinstance", "i3d_resnet.IOD_I3D_ResNet.modules", "i3d_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "i3d_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "i3d_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "i3d_resnet.L2Norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "m.weight.data.normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "m.weight.data.normal_", "isinstance", "math.sqrt", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "K", ")", ":", "\n", "# model = i3d_resnet(50, 400, 0.5, without_t_stride=False)", "\n", "\n", "        ", "super", "(", "IOD_I3D_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "{", "\n", "18", ":", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "34", ":", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "50", ":", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "101", ":", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "\n", "152", ":", "[", "3", ",", "8", ",", "36", ",", "3", "]", "}", "[", "depth", "]", "\n", "block", "=", "BasicBlock", "if", "depth", "<", "50", "else", "Bottleneck", "\n", "self", ".", "num_classes", "=", "1000", "\n", "self", ".", "dropout_parameter", "=", "0.5", "\n", "self", ".", "without_t_stride", "=", "False", "\n", "self", ".", "zero_init_residual", "=", "False", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "t_s", "=", "1", "if", "self", ".", "without_t_stride", "else", "2", "\n", "self", ".", "conv1", "=", "BasicConv3d", "(", "3", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "3", ",", "3", ")", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "output_channel", "=", "64", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "self", ".", "dropout_parameter", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "self", ".", "num_classes", ")", "\n", "\n", "# uised for deconv layers", "\n", "#self.deconv_layer = deconv_layers(self.inplanes, BN_MOMENTUM)", "\n", "#self.init_weights()", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.001", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "self", ".", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n", "#CSP deconv", "\n", "", "", "", "self", ".", "expansion", "=", "4", "\n", "self", ".", "norm1", "=", "L2Norm", "(", "64", "*", "self", ".", "expansion", ",", "10", ")", "\n", "\n", "self", ".", "deconv2", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "128", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "256", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", "*", "self", ".", "expansion", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "deconv4", "=", "nn", ".", "Sequential", "(", "L2Norm", "(", "512", "*", "self", ".", "expansion", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", "*", "self", ".", "expansion", ",", "512", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "L2Norm", "(", "512", ",", "10", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n", "self", ".", "cat", "=", "nn", ".", "Conv2d", "(", "256", "*", "4", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat64", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "cat_bn", "=", "nn", ".", "BatchNorm2d", "(", "256", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_bn64", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "0.01", ")", "\n", "self", ".", "cat_act", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "n", "=", "m", ".", "in_features", "*", "m", ".", "out_features", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean": [[222, 224], ["None"], "methods", ["None"], ["", "", "", "def", "mean", "(", "self", ",", "modality", "=", "'rgb'", ")", ":", "\n", "        ", "return", "[", "0.485", ",", "0.456", ",", "0.406", "]", "if", "modality", "==", "'rgb'", "else", "[", "0.5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.std": [[225, 227], ["numpy.mean"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean"], ["", "def", "std", "(", "self", ",", "modality", "=", "'rgb'", ")", ":", "\n", "        ", "return", "[", "0.229", ",", "0.224", ",", "0.225", "]", "if", "modality", "==", "'rgb'", "else", "[", "np", ".", "mean", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.network_name": [[228, 235], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "network_name", "(", "self", ")", ":", "\n", "        ", "name", "=", "'i3d-resnet-{}'", ".", "format", "(", "self", ".", "depth", ")", "\n", "\n", "if", "not", "self", ".", "without_t_stride", ":", "\n", "            ", "name", "+=", "'-ts'", ".", "format", "(", "self", ".", "depth", ")", "\n", "", "return", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet._make_layer": [[236, 254], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "i3d_resnet.BasicConv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "block"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "self", ".", "t_s", "if", "stride", "==", "2", "else", "1", ",", "stride", ",", "stride", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", "=", "(", "self", ".", "t_s", "if", "stride", "==", "2", "else", "1", ",", "stride", ",", "stride", ")", ",", "\n", "padding", "=", "1", ",", "downsample", "=", "downsample", ")", ")", "\n", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.forward": [[255, 290], ["i3d_resnet.IOD_I3D_ResNet.conv1", "i3d_resnet.IOD_I3D_ResNet.bn1", "i3d_resnet.IOD_I3D_ResNet.relu", "i3d_resnet.IOD_I3D_ResNet.maxpool", "i3d_resnet.IOD_I3D_ResNet.layer1", "i3d_resnet.IOD_I3D_ResNet.layer2", "i3d_resnet.IOD_I3D_ResNet.layer3", "i3d_resnet.IOD_I3D_ResNet.layer4", "i3d_resnet.IOD_I3D_ResNet.split", "i3d_resnet.IOD_I3D_ResNet.split", "i3d_resnet.IOD_I3D_ResNet.split", "i3d_resnet.IOD_I3D_ResNet.split", "range", "list", "i3d_resnet.IOD_I3D_ResNet.norm1", "i3d_resnet.IOD_I3D_ResNet.deconv2", "i3d_resnet.IOD_I3D_ResNet.deconv3", "i3d_resnet.IOD_I3D_ResNet.deconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "i3d_resnet.IOD_I3D_ResNet.cat", "i3d_resnet.IOD_I3D_ResNet.cat_bn", "i3d_resnet.IOD_I3D_ResNet.cat_act", "i3d_resnet.IOD_I3D_ResNet.cat64", "i3d_resnet.IOD_I3D_ResNet.cat_bn64", "x_output.append", "i3d_resnet.IOD_I3D_ResNet.size", "x1_split[].squeeze", "range", "x2_split[].squeeze", "range", "x3_split[].squeeze", "range", "x4_split[].squeeze", "range", "i3d_resnet.IOD_I3D_ResNet.cat_act", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "#2 3 6 288 288   3Dconv  3-> 64 (  6 7 7 )", "\n", "        ", "K", "=", "list", "(", "x", ".", "size", "(", ")", ")", "[", "2", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "#2 64 3 144 144", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "#2 64 3 72 72", "\n", "\n", "\n", "x1", "=", "self", ".", "layer1", "(", "x", ")", "#2 256 3 72 72", "\n", "x2", "=", "self", ".", "layer2", "(", "x1", ")", "#2 512 2 36 36", "\n", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "#2 1024 1 18 18", "\n", "x4", "=", "self", ".", "layer4", "(", "x3", ")", "#2 2048 1 9 9", "\n", "\n", "x1_split", "=", "x1", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x2_split", "=", "x2", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x3_split", "=", "x3", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "x4_split", "=", "x4", ".", "split", "(", "1", ",", "dim", "=", "2", ")", "\n", "\n", "x1_split_deconv", "=", "[", "self", ".", "norm1", "(", "x1_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x1_split", ")", ")", "]", "\n", "x2_split_deconv", "=", "[", "self", ".", "deconv2", "(", "x2_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x2_split", ")", ")", "]", "\n", "x3_split_deconv", "=", "[", "self", ".", "deconv3", "(", "x3_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x3_split", ")", ")", "]", "\n", "x4_split_deconv", "=", "[", "self", ".", "deconv4", "(", "x4_split", "[", "i", "]", ".", "squeeze", "(", "2", ")", ")", "for", "i", "in", "range", "(", "len", "(", "x4_split", ")", ")", "]", "\n", "\n", "x_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "            ", "map", "=", "torch", ".", "cat", "(", "[", "x1_split_deconv", "[", "i", "]", ",", "x2_split_deconv", "[", "i", "//", "2", "]", ",", "x3_split_deconv", "[", "i", "//", "4", "]", ",", "x4_split_deconv", "[", "i", "//", "8", "]", "]", ",", "dim", "=", "1", ")", "\n", "map", "=", "self", ".", "cat", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_act", "(", "map", ")", "\n", "map", "=", "self", ".", "cat64", "(", "map", ")", "\n", "map", "=", "self", ".", "cat_bn64", "(", "map", ")", "\n", "x_output", ".", "append", "(", "self", ".", "cat_act", "(", "map", ")", ")", "\n", "\n", "# return logits", "\n", "", "return", "x_output", "# 264 72 72", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.init_weights": [[291, 297], ["i3d_resnet.IOD_I3D_ResNet.deconv_layer.named_modules", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "# print('=> init deconv weights from normal distribution')", "\n", "        ", "for", "name", ",", "m", "in", "self", ".", "deconv_layer", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.BasicConv3d": [[51, 56], ["torch.Conv3d"], "function", ["None"], ["", "", "def", "BasicConv3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "\n", "bias", "=", "False", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.datasets.init_dataset.get_dataset": [[11, 15], ["None"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ")", ":", "\n", "    ", "class", "Dataset", "(", "switch_dataset", "[", "dataset", "]", ",", "Sampler", ")", ":", "\n", "        ", "pass", "\n", "", "return", "Dataset", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.dataset.IODVideo.IODVideo.__init__": [[9, 13], ["os.path.join", "base_dataset.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "opt", ",", "mode", ")", ":", "\n", "        ", "self", ".", "ROOT_DATASET_PATH", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "root_dir", ",", "'data/TLGDM'", ")", "\n", "pkl_filename", "=", "'TrueLeakedGas.pkl'", "\n", "super", "(", "IODVideo", ",", "self", ")", ".", "__init__", "(", "opt", ",", "mode", ",", "self", ".", "ROOT_DATASET_PATH", ",", "pkl_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.dataset.IODVideo.IODVideo.imagefile": [[14, 16], ["os.path.join"], "methods", ["None"], ["", "def", "imagefile", "(", "self", ",", "v", ",", "i", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "ROOT_DATASET_PATH", ",", "'Frames'", ",", "v", ",", "'{:0>5}.png'", ".", "format", "(", "i", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.dataset.TLGDM.IODVideo.__init__": [[9, 13], ["os.path.join", "base_dataset.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ",", "opt", ",", "mode", ")", ":", "\n", "        ", "self", ".", "ROOT_DATASET_PATH", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "root_dir", ",", "'data/TLGDM'", ")", "\n", "pkl_filename", "=", "'TrueLeakedGas.pkl'", "\n", "super", "(", "IODVideo", ",", "self", ")", ".", "__init__", "(", "opt", ",", "mode", ",", "self", ".", "ROOT_DATASET_PATH", ",", "pkl_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.dataset.TLGDM.IODVideo.imagefile": [[14, 16], ["os.path.join"], "methods", ["None"], ["", "def", "imagefile", "(", "self", ",", "v", ",", "i", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "ROOT_DATASET_PATH", ",", "'Frames'", ",", "v", ",", "'{:0>5}.png'", ".", "format", "(", "i", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.dataset.base_dataset.BaseDataset.__init__": [[14, 109], ["torch.Dataset.__init__", "os.path.join", "random.shuffle", "random.shuffle", "random.shuffle", "random.shuffle", "open", "pickle.load", "setattr", "len", "sum", "len", "len", "base_dataset.BaseDataset._gttubes[].values", "range", "ACT_utils.ACT_utils.tubelet_in_out_tubes", "ACT_utils.ACT_utils.tubelet_has_gt"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.tubelet_in_out_tubes", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.tubelet_has_gt"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "mode", ",", "ROOT_DATASET_PATH", ",", "pkl_filename", ")", ":", "\n", "        ", "super", "(", "BaseDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "opt", ".", "pkl_ACT", "==", "1", ":", "\n", "            ", "pkl_filename", "=", "\"TrueLeakedGas_ACT1.pkl\"", "#used for det", "\n", "", "pkl_file", "=", "os", ".", "path", ".", "join", "(", "ROOT_DATASET_PATH", ",", "pkl_filename", ")", "\n", "\n", "with", "open", "(", "pkl_file", ",", "'rb'", ")", "as", "fid", ":", "\n", "            ", "pkl", "=", "pickle", ".", "load", "(", "fid", ",", "encoding", "=", "'iso-8859-1'", ")", "\n", "", "for", "k", "in", "pkl", ":", "\n", "# read the pkl and add to the self.", "\n", "            ", "setattr", "(", "self", ",", "(", "'_'", "if", "k", "!=", "'labels'", "else", "''", ")", "+", "k", ",", "pkl", "[", "k", "]", ")", "\n", "\n", "", "self", ".", "split", "=", "opt", ".", "split", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "K", "=", "opt", ".", "K", "\n", "self", ".", "opt", "=", "opt", "\n", "self", ".", "_mean_values", "=", "[", "104.0136177", ",", "114.0342201", ",", "119.91659325", "]", "\n", "self", ".", "_resize_height", "=", "opt", ".", "resize_height", "\n", "self", ".", "_resize_width", "=", "opt", ".", "resize_width", "\n", "\n", "assert", "len", "(", "self", ".", "_train_videos", "[", "self", ".", "split", "-", "1", "]", ")", "+", "len", "(", "self", ".", "_test_videos", "[", "self", ".", "split", "-", "1", "]", ")", "==", "len", "(", "self", ".", "_nframes", ")", "\n", "self", ".", "_indices", "=", "[", "]", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "# get train video list", "\n", "            ", "video_list", "=", "self", ".", "_train_videos", "[", "self", ".", "split", "-", "1", "]", "\n", "", "else", ":", "\n", "# get test video list", "\n", "            ", "video_list", "=", "self", ".", "_test_videos", "[", "self", ".", "split", "-", "1", "]", "\n", "\n", "# ie. [v]: TrueLeakedGas/546_cylinder_dynamic_clear", "\n", "#     [vtubes] : a dict(key, value)", "\n", "#                key is the class;  value is a list of <frame number> <x1> <y1> <x2> <y2>. for exactly [v]", "\n", "# ps: each v refer to one vtubes in _gttubes (vtubes = _gttubes[v])", "\n", "#                                          or (each video has many frames with one classes)", "\n", "", "for", "v", "in", "video_list", ":", "\n", "#vtubes[0] = [[<frame number> <x1> <y1> <x2> <y2>],.......,[<frame number> <x1> <y1> <x2> <y2>]]", "\n", "            ", "vtubes", "=", "sum", "(", "self", ".", "_gttubes", "[", "v", "]", ".", "values", "(", ")", ",", "[", "]", ")", "\n", "self", ".", "_indices", "+=", "[", "(", "v", ",", "i", ")", "for", "i", "in", "range", "(", "1", ",", "self", ".", "_nframes", "[", "v", "]", "+", "2", "-", "self", ".", "K", ")", "\n", "if", "tubelet_in_out_tubes", "(", "vtubes", ",", "i", ",", "self", ".", "K", ")", "and", "tubelet_has_gt", "(", "vtubes", ",", "i", ",", "self", ".", "K", ")", "]", "\n", "\n", "", "random", ".", "shuffle", "(", "self", ".", "_indices", ")", "\n", "\n", "self", ".", "distort_param", "=", "{", "\n", "'brightness_prob'", ":", "0.5", ",", "\n", "'brightness_delta'", ":", "32", ",", "\n", "'contrast_prob'", ":", "0.5", ",", "\n", "'contrast_lower'", ":", "0.5", ",", "\n", "'contrast_upper'", ":", "1.5", ",", "\n", "'hue_prob'", ":", "0.5", ",", "\n", "'hue_delta'", ":", "18", ",", "\n", "'saturation_prob'", ":", "0.5", ",", "\n", "'saturation_lower'", ":", "0.5", ",", "\n", "'saturation_upper'", ":", "1.5", ",", "\n", "'random_order_prob'", ":", "0.0", ",", "\n", "}", "\n", "self", ".", "expand_param", "=", "{", "\n", "'expand_prob'", ":", "0.5", ",", "\n", "'max_expand_ratio'", ":", "4.0", ",", "\n", "}", "\n", "self", ".", "batch_samplers", "=", "[", "{", "\n", "'sampler'", ":", "{", "}", ",", "\n", "'max_trials'", ":", "1", ",", "\n", "'max_sample'", ":", "1", ",", "\n", "}", ",", "{", "\n", "'sampler'", ":", "{", "'min_scale'", ":", "0.3", ",", "'max_scale'", ":", "1.0", ",", "'min_aspect_ratio'", ":", "0.5", ",", "'max_aspect_ratio'", ":", "2.0", ",", "}", ",", "\n", "'sample_constraint'", ":", "{", "'min_jaccard_overlap'", ":", "0.1", ",", "}", ",", "\n", "'max_trials'", ":", "50", ",", "\n", "'max_sample'", ":", "1", ",", "\n", "}", ",", "{", "\n", "'sampler'", ":", "{", "'min_scale'", ":", "0.3", ",", "'max_scale'", ":", "1.0", ",", "'min_aspect_ratio'", ":", "0.5", ",", "'max_aspect_ratio'", ":", "2.0", ",", "}", ",", "\n", "'sample_constraint'", ":", "{", "'min_jaccard_overlap'", ":", "0.3", ",", "}", ",", "\n", "'max_trials'", ":", "50", ",", "\n", "'max_sample'", ":", "1", ",", "\n", "}", ",", "{", "\n", "'sampler'", ":", "{", "'min_scale'", ":", "0.3", ",", "'max_scale'", ":", "1.0", ",", "'min_aspect_ratio'", ":", "0.5", ",", "'max_aspect_ratio'", ":", "2.0", ",", "}", ",", "\n", "'sample_constraint'", ":", "{", "'min_jaccard_overlap'", ":", "0.5", ",", "}", ",", "\n", "'max_trials'", ":", "50", ",", "\n", "'max_sample'", ":", "1", ",", "\n", "}", ",", "{", "\n", "'sampler'", ":", "{", "'min_scale'", ":", "0.3", ",", "'max_scale'", ":", "1.0", ",", "'min_aspect_ratio'", ":", "0.5", ",", "'max_aspect_ratio'", ":", "2.0", ",", "}", ",", "\n", "'sample_constraint'", ":", "{", "'min_jaccard_overlap'", ":", "0.7", ",", "}", ",", "\n", "'max_trials'", ":", "50", ",", "\n", "'max_sample'", ":", "1", ",", "\n", "}", ",", "{", "\n", "'sampler'", ":", "{", "'min_scale'", ":", "0.3", ",", "'max_scale'", ":", "1.0", ",", "'min_aspect_ratio'", ":", "0.5", ",", "'max_aspect_ratio'", ":", "2.0", ",", "}", ",", "\n", "'sample_constraint'", ":", "{", "'min_jaccard_overlap'", ":", "0.9", ",", "}", ",", "\n", "'max_trials'", ":", "50", ",", "\n", "'max_sample'", ":", "1", ",", "\n", "}", ",", "{", "\n", "'sampler'", ":", "{", "'min_scale'", ":", "0.3", ",", "'max_scale'", ":", "1.0", ",", "'min_aspect_ratio'", ":", "0.5", ",", "'max_aspect_ratio'", ":", "2.0", ",", "}", ",", "\n", "'sample_constraint'", ":", "{", "'max_jaccard_overlap'", ":", "1.0", ",", "}", ",", "\n", "'max_trials'", ":", "50", ",", "\n", "'max_sample'", ":", "1", ",", "\n", "}", ",", "]", "\n", "self", ".", "max_objs", "=", "self", ".", "opt", ".", "max_objs", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.dataset.base_dataset.BaseDataset.__len__": [[110, 112], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.dataset.base_dataset.BaseDataset.imagefile": [[113, 115], ["None"], "methods", ["None"], ["", "def", "imagefile", "(", "self", ",", "v", ",", "i", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.dataset.base_dataset.BaseDataset.flowfile": [[116, 118], ["None"], "methods", ["None"], ["", "def", "flowfile", "(", "self", ",", "v", ",", "i", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.sample.sampler.Sampler.__getitem__": [[13, 180], ["cv2.setNumThreads", "numpy.tile", "numpy.tile", "range", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "range", "sampler.Sampler._gttubes[].items", "ACT_utils.ACT_aug.apply_distort", "ACT_utils.ACT_aug.apply_expand", "ACT_utils.ACT_aug.crop_image", "sampler.Sampler._gttubes[].items", "range", "cv2.resize", "numpy.transpose", "range", "cv2.imread().astype", "ACT_utils.ACT_aug.apply_distort.append", "cv2.imread().astype", "ACT_utils.ACT_aug.apply_distort.append", "numpy.empty", "numpy.empty", "random.getrandbits", "len", "numpy.array", "numpy.array", "len", "utils.gaussian_hm.gaussian_radius", "max", "numpy.array", "numpy.array.astype", "utils.gaussian_hm.draw_umich_gaussian", "range", "range", "range", "t.copy.copy.copy", "range", "numpy.array", "gt_bbox[].append", "t.copy.copy.copy", "range", "numpy.array", "gt_bbox[].append", "int", "numpy.array", "numpy.array.astype", "cv2.imread", "cv2.imread", "numpy.array.append", "numpy.array.append", "math.ceil", "math.ceil", "sampler.Sampler.imagefile", "sampler.Sampler.imagefile"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.apply_distort", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.apply_expand", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.crop_image", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.gaussian_hm.gaussian_radius", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.gaussian_hm.draw_umich_gaussian", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_dataset.VisualizationDataset.imagefile", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_dataset.VisualizationDataset.imagefile"], ["    ", "def", "__getitem__", "(", "self", ",", "id", ")", ":", "\n", "        ", "v", ",", "frame", "=", "self", ".", "_indices", "[", "id", "]", "\n", "frame_reorder", "=", "frame", "\n", "K", "=", "self", ".", "K", "\n", "num_classes", "=", "self", ".", "num_classes", "\n", "input_h", "=", "self", ".", "_resize_height", "\n", "input_w", "=", "self", ".", "_resize_width", "\n", "output_h", "=", "input_h", "//", "self", ".", "opt", ".", "down_ratio", "\n", "output_w", "=", "input_w", "//", "self", ".", "opt", ".", "down_ratio", "\n", "# read images", "\n", "if", "self", ".", "opt", ".", "arch", "==", "'TDNresnet_50'", ":", "\n", "            ", "images", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "K", "+", "4", ")", ":", "\n", "                ", "frame_i", "=", "frame", "+", "i", "-", "2", "\n", "video_len", "=", "self", ".", "_nframes", "[", "v", "]", "\n", "if", "(", "frame_i", ">", "video_len", ")", ":", "\n", "                    ", "frame_i", "=", "video_len", "\n", "", "if", "(", "frame_i", "<", "1", ")", ":", "\n", "                    ", "frame_i", "=", "1", "\n", "", "image", "=", "cv2", ".", "imread", "(", "self", ".", "imagefile", "(", "v", ",", "frame_i", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "images", ".", "append", "(", "image", ")", "\n", "", "", "else", ":", "\n", "            ", "images", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "                ", "frame_i", "=", "frame", "+", "i", "\n", "video_len", "=", "self", ".", "_nframes", "[", "v", "]", "\n", "if", "(", "frame_i", ">", "video_len", ")", ":", "\n", "                    ", "frame_i", "=", "video_len", "\n", "", "if", "(", "frame_i", "<", "1", ")", ":", "\n", "                    ", "frame_i", "=", "1", "\n", "", "image", "=", "cv2", ".", "imread", "(", "self", ".", "imagefile", "(", "v", ",", "frame_i", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "images", ".", "append", "(", "image", ")", "\n", "", "", "cv2", ".", "setNumThreads", "(", "0", ")", "\n", "\n", "if", "self", ".", "opt", ".", "arch", "==", "'TDNresnet_50'", ":", "\n", "            ", "data", "=", "[", "np", ".", "empty", "(", "(", "3", ",", "self", ".", "_resize_height", ",", "self", ".", "_resize_width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "K", "+", "4", ")", "]", "\n", "", "else", ":", "\n", "            ", "data", "=", "[", "np", ".", "empty", "(", "(", "3", ",", "self", ".", "_resize_height", ",", "self", ".", "_resize_width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "K", ")", "]", "\n", "\n", "", "'''\n        image pre process\n        '''", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "do_mirror", "=", "random", ".", "getrandbits", "(", "1", ")", "==", "1", "\n", "# filp the image", "\n", "if", "do_mirror", ":", "\n", "                ", "images", "=", "[", "im", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", "for", "im", "in", "images", "]", "\n", "", "h", ",", "w", "=", "self", ".", "_resolution", "[", "v", "]", "\n", "gt_bbox", "=", "{", "}", "\n", "for", "ilabel", ",", "tubes", "in", "self", ".", "_gttubes", "[", "v", "]", ".", "items", "(", ")", ":", "\n", "                ", "for", "t", "in", "tubes", ":", "\n", "                    ", "if", "frame", "not", "in", "t", "[", ":", ",", "0", "]", ":", "\n", "                        ", "continue", "\n", "# assert frame + K - 1 in t[:, 0]", "\n", "# copy otherwise it will change the gt of the dataset also", "\n", "", "t", "=", "t", ".", "copy", "(", ")", "\n", "if", "do_mirror", ":", "\n", "# filp the gt bbox", "\n", "                        ", "xmin", "=", "w", "-", "t", "[", ":", ",", "3", "]", "\n", "t", "[", ":", ",", "3", "]", "=", "w", "-", "t", "[", ":", ",", "1", "]", "\n", "t", "[", ":", ",", "1", "]", "=", "xmin", "\n", "", "boxes", "=", "[", "]", "\n", "#avoid frame_i out of the video length", "\n", "for", "frame_i", "in", "range", "(", "frame", ",", "frame", "+", "K", ",", "1", ")", ":", "\n", "                        ", "if", "(", "frame_i", ">=", "t", ".", "shape", "[", "0", "]", ")", ":", "\n", "                            ", "frame_i", "=", "t", ".", "shape", "[", "0", "]", "\n", "", "boxes", ".", "append", "(", "t", "[", "frame_i", "-", "1", ",", "1", ":", "5", "]", ")", "\n", "", "boxes", "=", "np", ".", "array", "(", "boxes", ")", "\n", "\n", "assert", "boxes", ".", "shape", "[", "0", "]", "==", "K", "\n", "if", "ilabel", "not", "in", "gt_bbox", ":", "\n", "                        ", "gt_bbox", "[", "ilabel", "]", "=", "[", "]", "\n", "# gt_bbox[ilabel] ---> a list of numpy array, each one is K, x1, x2, y1, y2", "\n", "", "gt_bbox", "[", "ilabel", "]", ".", "append", "(", "boxes", ")", "\n", "\n", "# apply data augmentation", "\n", "", "", "images", "=", "apply_distort", "(", "images", ",", "self", ".", "distort_param", ")", "\n", "images", ",", "gt_bbox", ",", "expand_ratio", "=", "apply_expand", "(", "images", ",", "gt_bbox", ",", "self", ".", "expand_param", ",", "self", ".", "_mean_values", ")", "\n", "images", ",", "gt_bbox", ",", "crop_areas", "=", "crop_image", "(", "images", ",", "gt_bbox", ",", "self", ".", "batch_samplers", ")", "\n", "\n", "", "else", ":", "\n", "# no data augmentation or flip when validation", "\n", "            ", "gt_bbox", "=", "{", "}", "\n", "for", "ilabel", ",", "tubes", "in", "self", ".", "_gttubes", "[", "v", "]", ".", "items", "(", ")", ":", "\n", "                ", "for", "t", "in", "tubes", ":", "\n", "                    ", "if", "frame", "not", "in", "t", "[", ":", ",", "0", "]", ":", "\n", "                        ", "continue", "\n", "", "assert", "frame", "+", "K", "-", "1", "in", "t", "[", ":", ",", "0", "]", "\n", "t", "=", "t", ".", "copy", "(", ")", "\n", "boxes", "=", "[", "]", "\n", "for", "frame_i", "in", "range", "(", "frame", ",", "frame", "+", "K", ",", "1", ")", ":", "\n", "                        ", "if", "(", "frame_i", ">=", "t", ".", "shape", "[", "0", "]", ")", ":", "#1109", "\n", "                            ", "frame_i", "=", "t", ".", "shape", "[", "0", "]", "\n", "", "boxes", ".", "append", "(", "t", "[", "frame_i", "-", "1", ",", "1", ":", "5", "]", ")", "\n", "", "boxes", "=", "np", ".", "array", "(", "boxes", ")", "\n", "\n", "assert", "boxes", ".", "shape", "[", "0", "]", "==", "K", "\n", "if", "ilabel", "not", "in", "gt_bbox", ":", "\n", "                        ", "gt_bbox", "[", "ilabel", "]", "=", "[", "]", "\n", "", "gt_bbox", "[", "ilabel", "]", ".", "append", "(", "boxes", ")", "\n", "\n", "", "", "", "original_h", ",", "original_w", "=", "images", "[", "0", "]", ".", "shape", "[", ":", "2", "]", "\n", "# resize the original img and it's GT bbox", "\n", "for", "ilabel", "in", "gt_bbox", ":", "\n", "            ", "for", "itube", "in", "range", "(", "len", "(", "gt_bbox", "[", "ilabel", "]", ")", ")", ":", "\n", "                ", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", ":", ",", "0", "]", "=", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", ":", ",", "0", "]", "/", "original_w", "*", "output_w", "\n", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", ":", ",", "1", "]", "=", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", ":", ",", "1", "]", "/", "original_h", "*", "output_h", "\n", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", ":", ",", "2", "]", "=", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", ":", ",", "2", "]", "/", "original_w", "*", "output_w", "\n", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", ":", ",", "3", "]", "=", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", ":", ",", "3", "]", "/", "original_h", "*", "output_h", "\n", "", "", "images", "=", "[", "cv2", ".", "resize", "(", "im", ",", "(", "input_w", ",", "input_h", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "for", "im", "in", "images", "]", "\n", "# transpose image channel and normalize", "\n", "mean", "=", "np", ".", "tile", "(", "np", ".", "array", "(", "self", ".", "opt", ".", "mean", ",", "dtype", "=", "np", ".", "float32", ")", "[", ":", ",", "None", ",", "None", "]", ",", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "std", "=", "np", ".", "tile", "(", "np", ".", "array", "(", "self", ".", "opt", ".", "std", ",", "dtype", "=", "np", ".", "float32", ")", "[", ":", ",", "None", ",", "None", "]", ",", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "if", "self", ".", "opt", ".", "arch", "==", "'TDNresnet_50'", ":", "\n", "            ", "K_i", "=", "K", "+", "4", "\n", "", "else", ":", "\n", "            ", "K_i", "=", "K", "\n", "", "for", "i", "in", "range", "(", "K_i", ")", ":", "\n", "            ", "data", "[", "i", "]", "[", "0", ":", "3", ",", ":", ",", ":", "]", "=", "np", ".", "transpose", "(", "images", "[", "i", "]", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "data", "[", "i", "]", "=", "(", "(", "data", "[", "i", "]", "/", "255.", ")", "-", "mean", ")", "/", "std", "\n", "\n", "# draw ground truth", "\n", "", "hm", "=", "np", ".", "zeros", "(", "(", "num_classes", ",", "output_h", ",", "output_w", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "wh", "=", "np", ".", "zeros", "(", "(", "self", ".", "max_objs", ",", "K", "*", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "mov", "=", "np", ".", "zeros", "(", "(", "self", ".", "max_objs", ",", "K", "*", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "centerKpoints", "=", "np", ".", "zeros", "(", "(", "self", ".", "max_objs", ",", "K", "*", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "index", "=", "np", ".", "zeros", "(", "(", "self", ".", "max_objs", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "index_all", "=", "np", ".", "zeros", "(", "(", "self", ".", "max_objs", ",", "K", "*", "2", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "mask", "=", "np", ".", "zeros", "(", "(", "self", ".", "max_objs", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "num_objs", "=", "0", "\n", "for", "ilabel", "in", "gt_bbox", ":", "\n", "            ", "for", "itube", "in", "range", "(", "len", "(", "gt_bbox", "[", "ilabel", "]", ")", ")", ":", "\n", "                ", "key", "=", "K", "//", "2", "\n", "# key frame's bbox height and width \uff08both on the feature map\uff09", "\n", "key_h", ",", "key_w", "=", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "key", ",", "3", "]", "-", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "key", ",", "1", "]", ",", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "key", ",", "2", "]", "-", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "key", ",", "0", "]", "\n", "# create gaussian heatmap", "\n", "radius", "=", "gaussian_radius", "(", "(", "math", ".", "ceil", "(", "key_h", ")", ",", "math", ".", "ceil", "(", "key_w", ")", ")", ")", "\n", "radius", "=", "max", "(", "0", ",", "int", "(", "radius", ")", ")", "\n", "# ground truth bbox's center in key frame", "\n", "center", "=", "np", ".", "array", "(", "[", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "key", ",", "0", "]", "+", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "key", ",", "2", "]", ")", "/", "2", ",", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "key", ",", "1", "]", "+", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "key", ",", "3", "]", ")", "/", "2", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "center_int", "=", "center", ".", "astype", "(", "np", ".", "int32", ")", "\n", "assert", "0", "<=", "center_int", "[", "0", "]", "and", "center_int", "[", "0", "]", "<=", "output_w", "and", "0", "<=", "center_int", "[", "1", "]", "and", "center_int", "[", "1", "]", "<=", "output_h", "\n", "# draw ground truth gaussian heatmap at each center location", "\n", "draw_umich_gaussian", "(", "hm", "[", "ilabel", "]", ",", "center_int", ",", "radius", ")", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "                    ", "center_all", "=", "np", ".", "array", "(", "[", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "0", "]", "+", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "2", "]", ")", "/", "2", ",", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "1", "]", "+", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "3", "]", ")", "/", "2", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "center_all_int", "=", "center_all", ".", "astype", "(", "np", ".", "int32", ")", "\n", "# wh is ground truth bbox's height and width in i_th frame", "\n", "wh", "[", "num_objs", ",", "i", "*", "2", ":", "i", "*", "2", "+", "2", "]", "=", "1.", "*", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "2", "]", "-", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "0", "]", ")", ",", "1.", "*", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "3", "]", "-", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "1", "]", ")", "\n", "# mov is ground truth movement from i_th frame to key frame", "\n", "mov", "[", "num_objs", ",", "i", "*", "2", ":", "i", "*", "2", "+", "2", "]", "=", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "0", "]", "+", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "2", "]", ")", "/", "2", "-", "center_int", "[", "0", "]", ",", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "1", "]", "+", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "3", "]", ")", "/", "2", "-", "center_int", "[", "1", "]", "\n", "# centerKpoints is the box center of ground truth for all K frames", "\n", "centerKpoints", "[", "num_objs", ",", "i", "*", "2", ":", "i", "*", "2", "+", "2", "]", "=", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "0", "]", "+", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "2", "]", ")", "/", "2", ",", "(", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "1", "]", "+", "gt_bbox", "[", "ilabel", "]", "[", "itube", "]", "[", "i", ",", "3", "]", ")", "/", "2", "\n", "# index_all are all frame's bbox center position", "\n", "index_all", "[", "num_objs", ",", "i", "*", "2", ":", "i", "*", "2", "+", "2", "]", "=", "center_all_int", "[", "1", "]", "*", "output_w", "+", "center_all_int", "[", "0", "]", ",", "center_all_int", "[", "1", "]", "*", "output_w", "+", "center_all_int", "[", "0", "]", "\n", "# index is key frame's boox center position", "\n", "", "index", "[", "num_objs", "]", "=", "center_int", "[", "1", "]", "*", "output_w", "+", "center_int", "[", "0", "]", "\n", "# mask indicate how many objects in this tube", "\n", "mask", "[", "num_objs", "]", "=", "1", "\n", "num_objs", "=", "num_objs", "+", "1", "\n", "\n", "", "", "result", "=", "{", "'input'", ":", "data", ",", "'hm'", ":", "hm", ",", "'mov'", ":", "mov", ",", "'centerKpoints'", ":", "centerKpoints", ",", "'wh'", ":", "wh", ",", "'mask'", ":", "mask", ",", "'index'", ":", "index", ",", "'index_all'", ":", "index_all", "}", "\n", "return", "result", "\n", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.tubelet_in_tube": [[6, 11], ["all", "range"], "function", ["None"], ["def", "tubelet_in_tube", "(", "tube", ",", "i", ",", "K", ")", ":", "\n", "# True if all frames from i to (i + K - 1) are inside tube", "\n", "# it's sufficient to just check the first and last frame.", "\n", "# return (i in tube[: ,0] and i + K - 1 in tube[:, 0])", "\n", "    ", "return", "all", "(", "[", "j", "in", "tube", "[", ":", ",", "0", "]", "for", "j", "in", "range", "(", "i", ",", "i", "+", "K", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.tubelet_out_tube": [[13, 16], ["all", "range"], "function", ["None"], ["", "def", "tubelet_out_tube", "(", "tube", ",", "i", ",", "K", ")", ":", "\n", "# True if all frames between i and (i + K - 1) are outside of tube", "\n", "    ", "return", "all", "(", "[", "not", "j", "in", "tube", "[", ":", ",", "0", "]", "for", "j", "in", "range", "(", "i", ",", "i", "+", "K", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.tubelet_in_out_tubes": [[18, 23], ["all", "ACT_utils.tubelet_in_tube", "ACT_utils.tubelet_out_tube"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.tubelet_in_tube", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.tubelet_out_tube"], ["", "def", "tubelet_in_out_tubes", "(", "tube_list", ",", "i", ",", "K", ")", ":", "\n", "# Given a list of tubes: tube_list, return True if", "\n", "# all frames from i to (i + K - 1) are either inside (tubelet_in_tube)", "\n", "# or outside (tubelet_out_tube) the tubes.", "\n", "    ", "return", "all", "(", "[", "tubelet_in_tube", "(", "tube", ",", "i", ",", "K", ")", "or", "tubelet_out_tube", "(", "tube", ",", "i", ",", "K", ")", "for", "tube", "in", "tube_list", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.tubelet_has_gt": [[25, 30], ["any", "ACT_utils.tubelet_in_tube"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.tubelet_in_tube"], ["", "def", "tubelet_has_gt", "(", "tube_list", ",", "i", ",", "K", ")", ":", "\n", "# Given a list of tubes: tube_list, return True if", "\n", "# the tubelet starting spanning from [i to (i + K - 1)]", "\n", "# is inside (tubelet_in_tube) at least a tube in tube_list.", "\n", "    ", "return", "any", "(", "[", "tubelet_in_tube", "(", "tube", ",", "i", ",", "K", ")", "for", "tube", "in", "tube_list", "]", ")", "#tube -> [[<frame number> <x1> <y1> <x2> <y2>],.......,[<frame number> <x1> <y1> <x2> <y2>]]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.area2d": [[37, 41], ["None"], "function", ["None"], ["def", "area2d", "(", "b", ")", ":", "\n", "    ", "\"\"\"Compute the areas for a set of 2D boxes\"\"\"", "\n", "\n", "return", "(", "b", "[", ":", ",", "2", "]", "-", "b", "[", ":", ",", "0", "]", "+", "1", ")", "*", "(", "b", "[", ":", ",", "3", "]", "-", "b", "[", ":", ",", "1", "]", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.overlap2d": [[43, 55], ["numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum"], "function", ["None"], ["", "def", "overlap2d", "(", "b1", ",", "b2", ")", ":", "\n", "    ", "\"\"\"Compute the overlaps between a set of boxes b1 and one box b2\"\"\"", "\n", "\n", "xmin", "=", "np", ".", "maximum", "(", "b1", "[", ":", ",", "0", "]", ",", "b2", "[", ":", ",", "0", "]", ")", "\n", "ymin", "=", "np", ".", "maximum", "(", "b1", "[", ":", ",", "1", "]", ",", "b2", "[", ":", ",", "1", "]", ")", "\n", "xmax", "=", "np", ".", "minimum", "(", "b1", "[", ":", ",", "2", "]", "+", "1", ",", "b2", "[", ":", ",", "2", "]", "+", "1", ")", "\n", "ymax", "=", "np", ".", "minimum", "(", "b1", "[", ":", ",", "3", "]", "+", "1", ",", "b2", "[", ":", ",", "3", "]", "+", "1", ")", "\n", "\n", "width", "=", "np", ".", "maximum", "(", "0", ",", "xmax", "-", "xmin", ")", "\n", "height", "=", "np", ".", "maximum", "(", "0", ",", "ymax", "-", "ymin", ")", "\n", "\n", "return", "width", "*", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.iou2d": [[57, 70], ["ACT_utils.overlap2d", "ACT_utils.area2d", "ACT_utils.area2d"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.overlap2d", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.area2d", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.area2d"], ["", "def", "iou2d", "(", "b1", ",", "b2", ")", ":", "\n", "    ", "\"\"\"Compute the IoU between a set of boxes b1 and 1 box b2\"\"\"", "\n", "\n", "if", "b1", ".", "ndim", "==", "1", ":", "\n", "        ", "b1", "=", "b1", "[", "None", ",", ":", "]", "\n", "", "if", "b2", ".", "ndim", "==", "1", ":", "\n", "        ", "b2", "=", "b2", "[", "None", ",", ":", "]", "\n", "\n", "", "assert", "b2", ".", "shape", "[", "0", "]", "==", "1", "\n", "\n", "ov", "=", "overlap2d", "(", "b1", ",", "b2", ")", "\n", "\n", "return", "ov", "/", "(", "area2d", "(", "b1", ")", "+", "area2d", "(", "b2", ")", "-", "ov", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.nms2d": [[72, 110], ["numpy.array", "numpy.argsort", "numpy.zeros_like", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.where", "numpy.where"], "function", ["None"], ["", "def", "nms2d", "(", "boxes", ",", "overlap", "=", "0.6", ")", ":", "\n", "    ", "\"\"\"Compute the soft nms given a set of scored boxes,\n    as numpy array with 5 columns <x1> <y1> <x2> <y2> <score>\n    return the indices of the tubelets to keep\n    \"\"\"", "\n", "if", "boxes", ".", "size", "==", "0", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "2", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "\n", "scores", "=", "boxes", "[", ":", ",", "4", "]", "\n", "areas", "=", "(", "x2", "-", "x1", "+", "1", ")", "*", "(", "y2", "-", "y1", "+", "1", ")", "\n", "order", "=", "np", ".", "argsort", "(", "scores", ")", "[", ":", ":", "-", "1", "]", "\n", "weight", "=", "np", ".", "zeros_like", "(", "scores", ")", "+", "1", "\n", "\n", "while", "order", ".", "size", ">", "0", ":", "\n", "        ", "i", "=", "order", "[", "0", "]", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "\n", "inter", "=", "np", ".", "maximum", "(", "0.0", ",", "xx2", "-", "xx1", "+", "1", ")", "*", "np", ".", "maximum", "(", "0.0", ",", "yy2", "-", "yy1", "+", "1", ")", "\n", "iou", "=", "inter", "/", "(", "areas", "[", "i", "]", "+", "areas", "[", "order", "[", "1", ":", "]", "]", "-", "inter", ")", "\n", "\n", "index", "=", "np", ".", "where", "(", "iou", ">", "overlap", ")", "[", "0", "]", "\n", "weight", "[", "order", "[", "index", "+", "1", "]", "]", "=", "1", "-", "iou", "[", "index", "]", "\n", "\n", "index2", "=", "np", ".", "where", "(", "iou", "<=", "overlap", ")", "[", "0", "]", "\n", "order", "=", "order", "[", "index2", "+", "1", "]", "\n", "\n", "", "boxes", "[", ":", ",", "4", "]", "=", "boxes", "[", ":", ",", "4", "]", "*", "weight", "\n", "\n", "return", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.nms_tubelets": [[116, 173], ["int", "len", "len", "numpy.argsort", "numpy.zeros_like", "sum", "numpy.argsort", "range", "range", "range", "range", "range", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.where", "numpy.where", "range", "range", "range", "range", "range", "range", "range", "range"], "function", ["None"], ["def", "nms_tubelets", "(", "dets", ",", "overlapThresh", "=", "0.3", ",", "top_k", "=", "None", ")", ":", "\n", "    ", "\"\"\"Compute the NMS for a set of scored tubelets\n    scored tubelets are numpy array with 4K+1 columns, last one being the score\n    return the indices of the tubelets to keep\n    \"\"\"", "\n", "\n", "# If there are no detections, return an empty list", "\n", "if", "len", "(", "dets", ")", "==", "0", ":", "\n", "        ", "dets", "\n", "", "if", "top_k", "is", "None", ":", "\n", "        ", "top_k", "=", "len", "(", "dets", ")", "\n", "\n", "", "K", "=", "int", "(", "(", "dets", ".", "shape", "[", "1", "]", "-", "1", ")", "/", "4", ")", "\n", "\n", "# Coordinates of bounding boxes", "\n", "x1", "=", "[", "dets", "[", ":", ",", "4", "*", "k", "]", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "y1", "=", "[", "dets", "[", ":", ",", "4", "*", "k", "+", "1", "]", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "x2", "=", "[", "dets", "[", ":", ",", "4", "*", "k", "+", "2", "]", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "y2", "=", "[", "dets", "[", ":", ",", "4", "*", "k", "+", "3", "]", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "\n", "# Compute the area of the bounding boxes and sort the bounding", "\n", "# boxes by the bottom-right y-coordinate of the bounding box", "\n", "# area = (x2 - x1 + 1) * (y2 - y1 + 1)", "\n", "scores", "=", "dets", "[", ":", ",", "-", "1", "]", "\n", "area", "=", "[", "(", "x2", "[", "k", "]", "-", "x1", "[", "k", "]", "+", "1", ")", "*", "(", "y2", "[", "k", "]", "-", "y1", "[", "k", "]", "+", "1", ")", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "order", "=", "np", ".", "argsort", "(", "scores", ")", "[", ":", ":", "-", "1", "]", "\n", "weight", "=", "np", ".", "zeros_like", "(", "scores", ")", "+", "1", "\n", "counter", "=", "0", "\n", "\n", "while", "order", ".", "size", ">", "0", ":", "\n", "        ", "i", "=", "order", "[", "0", "]", "\n", "counter", "+=", "1", "\n", "\n", "# Compute overlap", "\n", "xx1", "=", "[", "np", ".", "maximum", "(", "x1", "[", "k", "]", "[", "i", "]", ",", "x1", "[", "k", "]", "[", "order", "[", "1", ":", "]", "]", ")", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "yy1", "=", "[", "np", ".", "maximum", "(", "y1", "[", "k", "]", "[", "i", "]", ",", "y1", "[", "k", "]", "[", "order", "[", "1", ":", "]", "]", ")", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "xx2", "=", "[", "np", ".", "minimum", "(", "x2", "[", "k", "]", "[", "i", "]", ",", "x2", "[", "k", "]", "[", "order", "[", "1", ":", "]", "]", ")", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "yy2", "=", "[", "np", ".", "minimum", "(", "y2", "[", "k", "]", "[", "i", "]", ",", "y2", "[", "k", "]", "[", "order", "[", "1", ":", "]", "]", ")", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "\n", "w", "=", "[", "np", ".", "maximum", "(", "0", ",", "xx2", "[", "k", "]", "-", "xx1", "[", "k", "]", "+", "1", ")", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "h", "=", "[", "np", ".", "maximum", "(", "0", ",", "yy2", "[", "k", "]", "-", "yy1", "[", "k", "]", "+", "1", ")", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "\n", "inter_area", "=", "[", "w", "[", "k", "]", "*", "h", "[", "k", "]", "for", "k", "in", "range", "(", "K", ")", "]", "\n", "ious", "=", "sum", "(", "[", "inter_area", "[", "k", "]", "/", "(", "area", "[", "k", "]", "[", "order", "[", "1", ":", "]", "]", "+", "area", "[", "k", "]", "[", "i", "]", "-", "inter_area", "[", "k", "]", ")", "for", "k", "in", "range", "(", "K", ")", "]", ")", "\n", "index", "=", "np", ".", "where", "(", "ious", ">", "overlapThresh", "*", "K", ")", "[", "0", "]", "\n", "weight", "[", "order", "[", "index", "+", "1", "]", "]", "=", "1", "-", "ious", "[", "index", "]", "\n", "\n", "index2", "=", "np", ".", "where", "(", "ious", "<=", "overlapThresh", "*", "K", ")", "[", "0", "]", "\n", "order", "=", "order", "[", "index2", "+", "1", "]", "\n", "\n", "", "dets", "[", ":", ",", "-", "1", "]", "=", "dets", "[", ":", ",", "-", "1", "]", "*", "weight", "\n", "\n", "new_scores", "=", "dets", "[", ":", ",", "-", "1", "]", "\n", "new_order", "=", "np", ".", "argsort", "(", "new_scores", ")", "[", ":", ":", "-", "1", "]", "\n", "dets", "=", "dets", "[", "new_order", ",", ":", "]", "\n", "\n", "return", "dets", "[", ":", "top_k", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.iou3d": [[179, 188], ["numpy.all", "ACT_utils.overlap2d", "numpy.mean", "ACT_utils.area2d", "ACT_utils.area2d"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.overlap2d", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.area2d", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.area2d"], ["def", "iou3d", "(", "b1", ",", "b2", ")", ":", "\n", "    ", "\"\"\"Compute the IoU between two tubes with same temporal extent\"\"\"", "\n", "\n", "assert", "b1", ".", "shape", "[", "0", "]", "==", "b2", ".", "shape", "[", "0", "]", "\n", "assert", "np", ".", "all", "(", "b1", "[", ":", ",", "0", "]", "==", "b2", "[", ":", ",", "0", "]", ")", "\n", "\n", "ov", "=", "overlap2d", "(", "b1", "[", ":", ",", "1", ":", "5", "]", ",", "b2", "[", ":", ",", "1", ":", "5", "]", ")", "\n", "\n", "return", "np", ".", "mean", "(", "ov", "/", "(", "area2d", "(", "b1", "[", ":", ",", "1", ":", "5", "]", ")", "+", "area2d", "(", "b2", "[", ":", ",", "1", ":", "5", "]", ")", "-", "ov", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.iou3dt": [[190, 206], ["max", "min", "ACT_utils.iou3d", "max", "min", "int", "int", "int", "int", "numpy.where", "numpy.where", "numpy.where", "numpy.where"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.iou3d"], ["", "def", "iou3dt", "(", "b1", ",", "b2", ",", "spatialonly", "=", "False", ")", ":", "\n", "    ", "\"\"\"Compute the spatio-temporal IoU between two tubes\"\"\"", "\n", "\n", "tmin", "=", "max", "(", "b1", "[", "0", ",", "0", "]", ",", "b2", "[", "0", ",", "0", "]", ")", "\n", "tmax", "=", "min", "(", "b1", "[", "-", "1", ",", "0", "]", ",", "b2", "[", "-", "1", ",", "0", "]", ")", "\n", "\n", "if", "tmax", "<", "tmin", ":", "\n", "        ", "return", "0.0", "\n", "\n", "", "temporal_inter", "=", "tmax", "-", "tmin", "+", "1", "\n", "temporal_union", "=", "max", "(", "b1", "[", "-", "1", ",", "0", "]", ",", "b2", "[", "-", "1", ",", "0", "]", ")", "-", "min", "(", "b1", "[", "0", ",", "0", "]", ",", "b2", "[", "0", ",", "0", "]", ")", "+", "1", "\n", "\n", "tube1", "=", "b1", "[", "int", "(", "np", ".", "where", "(", "b1", "[", ":", ",", "0", "]", "==", "tmin", ")", "[", "0", "]", ")", ":", "int", "(", "np", ".", "where", "(", "b1", "[", ":", ",", "0", "]", "==", "tmax", ")", "[", "0", "]", ")", "+", "1", ",", ":", "]", "\n", "tube2", "=", "b2", "[", "int", "(", "np", ".", "where", "(", "b2", "[", ":", ",", "0", "]", "==", "tmin", ")", "[", "0", "]", ")", ":", "int", "(", "np", ".", "where", "(", "b2", "[", ":", ",", "0", "]", "==", "tmax", ")", "[", "0", "]", ")", "+", "1", ",", ":", "]", "\n", "\n", "return", "iou3d", "(", "tube1", ",", "tube2", ")", "*", "(", "1.", "if", "spatialonly", "else", "temporal_inter", "/", "temporal_union", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.nms3dt": [[208, 228], ["numpy.argsort", "numpy.zeros", "numpy.array", "numpy.array", "ACT_utils.iou3dt", "numpy.where"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.iou3dt"], ["", "def", "nms3dt", "(", "tubes", ",", "overlap", "=", "0.5", ")", ":", "\n", "    ", "\"\"\"Compute NMS of scored tubes. Tubes are given as list of (tube, score)\n    return the list of indices to keep\n    \"\"\"", "\n", "\n", "if", "not", "tubes", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "I", "=", "np", ".", "argsort", "(", "[", "t", "[", "1", "]", "for", "t", "in", "tubes", "]", ")", "\n", "indices", "=", "np", ".", "zeros", "(", "I", ".", "size", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "counter", "=", "0", "\n", "\n", "while", "I", ".", "size", ">", "0", ":", "\n", "        ", "i", "=", "I", "[", "-", "1", "]", "\n", "indices", "[", "counter", "]", "=", "i", "\n", "counter", "+=", "1", "\n", "ious", "=", "np", ".", "array", "(", "[", "iou3dt", "(", "tubes", "[", "ii", "]", "[", "0", "]", ",", "tubes", "[", "i", "]", "[", "0", "]", ")", "for", "ii", "in", "I", "[", ":", "-", "1", "]", "]", ")", "\n", "I", "=", "I", "[", "np", ".", "where", "(", "ious", "<=", "overlap", ")", "[", "0", "]", "]", "\n", "\n", "", "return", "indices", "[", ":", "counter", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.pr_to_ap": [[232, 241], ["numpy.sum"], "function", ["None"], ["", "def", "pr_to_ap", "(", "pr", ")", ":", "\n", "    ", "\"\"\"Compute AP given precision-recall\n    pr is a Nx2 array with first row being precision and second row being recall\n    \"\"\"", "\n", "\n", "prdif", "=", "pr", "[", "1", ":", ",", "1", "]", "-", "pr", "[", ":", "-", "1", ",", "1", "]", "\n", "prsum", "=", "pr", "[", "1", ":", ",", "0", "]", "+", "pr", "[", ":", "-", "1", ",", "0", "]", "\n", "\n", "return", "np", ".", "sum", "(", "prdif", "*", "prsum", "*", "0.5", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_build.load_frame_detections": [[17, 63], ["progress.bar.Bar", "enumerate", "progress.bar.Bar.finish", "numpy.concatenate", "range", "progress.bar.Bar.next", "len", "numpy.empty", "os.path.join", "range", "alldets.append", "len", "range", "os.path.isfile", "print", "sys.exit", "open", "pickle.load", "numpy.empty", "range", "len", "vdets[].astype", "ACT_utils.nms2d", "numpy.concatenate", "numpy.where", "numpy.concatenate", "numpy.ones", "numpy.ones", "numpy.concatenate", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.nms2d"], ["def", "load_frame_detections", "(", "opt", ",", "dataset", ",", "K", ",", "vlist", ",", "inference_dir", ")", ":", "\n", "    ", "alldets", "=", "[", "]", "# list of numpy array with <video_index> <frame_index> <ilabel> <score> <x1> <y1> <x2> <y2>", "\n", "bar", "=", "Bar", "(", "'{}'", ".", "format", "(", "'FrameAP'", ")", ",", "max", "=", "len", "(", "vlist", ")", ")", "\n", "for", "iv", ",", "v", "in", "enumerate", "(", "vlist", ")", ":", "\n", "        ", "h", ",", "w", "=", "dataset", ".", "_resolution", "[", "v", "]", "\n", "\n", "# aggregate the results for each frame", "\n", "vdets", "=", "{", "i", ":", "np", ".", "empty", "(", "(", "0", ",", "6", ")", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "1", ",", "1", "+", "dataset", ".", "_nframes", "[", "v", "]", ")", "}", "# x1, y1, x2, y2, score, ilabel", "\n", "\n", "# load results for each starting frame", "\n", "for", "i", "in", "range", "(", "1", ",", "1", "+", "dataset", ".", "_nframes", "[", "v", "]", "-", "K", "+", "1", ")", ":", "\n", "            ", "pkl", "=", "os", ".", "path", ".", "join", "(", "inference_dir", ",", "v", ",", "\"{:0>5}.pkl\"", ".", "format", "(", "i", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "pkl", ")", ":", "\n", "                ", "print", "(", "\"ERROR: Missing extracted tubelets \"", "+", "pkl", ")", "\n", "sys", ".", "exit", "(", ")", "\n", "\n", "", "with", "open", "(", "pkl", ",", "'rb'", ")", "as", "fid", ":", "\n", "                ", "dets", "=", "pickle", ".", "load", "(", "fid", ")", "\n", "\n", "", "for", "label", "in", "dets", ":", "\n", "# dets  : {label:  N, 4K+1}", "\n", "# 4*K+1 : (x1, y1, x2, y2) * K, score", "\n", "                ", "tubelets", "=", "dets", "[", "label", "]", "\n", "labels", "=", "np", ".", "empty", "(", "(", "tubelets", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "labels", "[", ":", ",", "0", "]", "=", "label", "-", "1", "\n", "for", "k", "in", "range", "(", "K", ")", ":", "\n", "                    ", "if", "(", "i", "+", "k", "<=", "dataset", ".", "_nframes", "[", "v", "]", ")", ":", "\n", "                        ", "vdets", "[", "i", "+", "k", "]", "=", "np", ".", "concatenate", "(", "(", "vdets", "[", "i", "+", "k", "]", ",", "np", ".", "concatenate", "(", "(", "tubelets", "[", ":", ",", "np", ".", "array", "(", "[", "4", "*", "k", ",", "1", "+", "4", "*", "k", ",", "2", "+", "4", "*", "k", ",", "3", "+", "4", "*", "k", ",", "-", "1", "]", ")", "]", ",", "labels", ")", ",", "axis", "=", "1", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# Perform NMS in each frame", "\n", "# vdets : {frame_num:  K*N, 6} ---- x1, x2, y1, y2, score, label", "\n", "", "", "", "", "for", "i", "in", "vdets", ":", "\n", "            ", "num_objs", "=", "vdets", "[", "i", "]", ".", "shape", "[", "0", "]", "\n", "for", "ilabel", "in", "range", "(", "len", "(", "dataset", ".", "labels", ")", ")", ":", "\n", "                ", "vdets", "[", "i", "]", "=", "vdets", "[", "i", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "a", "=", "np", ".", "where", "(", "vdets", "[", "i", "]", "[", ":", ",", "5", "]", "==", "ilabel", ")", "[", "0", "]", "\n", "if", "a", ".", "size", "==", "0", ":", "\n", "                    ", "continue", "\n", "", "vdets", "[", "i", "]", "[", "vdets", "[", "i", "]", "[", ":", ",", "5", "]", "==", "ilabel", ",", ":", "5", "]", "=", "nms2d", "(", "vdets", "[", "i", "]", "[", "vdets", "[", "i", "]", "[", ":", ",", "5", "]", "==", "ilabel", ",", ":", "5", "]", ",", "0.6", ")", "\n", "# alldets: N,8 --------> ith_video, ith_frame, label, score, x1, x2, y1, y2", "\n", "", "alldets", ".", "append", "(", "np", ".", "concatenate", "(", "(", "iv", "*", "np", ".", "ones", "(", "(", "num_objs", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", ",", "i", "*", "np", ".", "ones", "(", "(", "num_objs", ",", "1", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", ",", "vdets", "[", "i", "]", "[", ":", ",", "np", ".", "array", "(", "[", "5", ",", "4", ",", "0", ",", "1", ",", "2", ",", "3", "]", ",", "dtype", "=", "np", ".", "int32", ")", "]", ")", ",", "axis", "=", "1", ")", ")", "\n", "", "Bar", ".", "suffix", "=", "'[{0}/{1}]:{2}|Tot: {total:} |ETA: {eta:} '", ".", "format", "(", "iv", "+", "1", ",", "len", "(", "vlist", ")", ",", "v", ",", "total", "=", "bar", ".", "elapsed_td", ",", "eta", "=", "bar", ".", "eta_td", ")", "\n", "bar", ".", "next", "(", ")", "\n", "", "bar", ".", "finish", "(", ")", "\n", "return", "np", ".", "concatenate", "(", "alldets", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_build.BuildTubes": [[65, 196], ["datasets.init_dataset.get_dataset", "datasets.init_dataset.get_dataset.", "print", "progress.bar.Bar", "enumerate", "progress.bar.Bar.finish", "print", "print", "os.path.join", "range", "range", "progress.bar.Bar.next", "len", "os.path.isfile", "os.path.join", "len", "range", "open", "pickle.dump", "len", "os.path.isfile", "print", "sys.exit", "open", "pickle.load", "numpy.mean", "ACT_utils.nms_tubelets", "numpy.argsort", "enumerate", "range", "ACT_build.BuildTubes.tubescore"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.datasets.init_dataset.get_dataset", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.nms_tubelets"], ["", "def", "BuildTubes", "(", "opt", ")", ":", "\n", "    ", "redo", "=", "opt", ".", "redo", "\n", "if", "not", "redo", ":", "\n", "        ", "print", "(", "'load previous linking results...'", ")", "\n", "print", "(", "'if you want to reproduce it, please add --redo'", ")", "\n", "", "Dataset", "=", "get_dataset", "(", "opt", ".", "dataset", ")", "\n", "inference_dirname", "=", "opt", ".", "inference_dir", "\n", "K", "=", "opt", ".", "K", "\n", "split", "=", "'val'", "\n", "dataset", "=", "Dataset", "(", "opt", ",", "split", ")", "\n", "\n", "print", "(", "'inference_dirname is '", ",", "inference_dirname", ")", "\n", "vlist", "=", "dataset", ".", "_test_videos", "[", "opt", ".", "split", "-", "1", "]", "\n", "bar", "=", "Bar", "(", "'{}'", ".", "format", "(", "'BuildTubes'", ")", ",", "max", "=", "len", "(", "vlist", ")", ")", "\n", "for", "iv", ",", "v", "in", "enumerate", "(", "vlist", ")", ":", "\n", "        ", "outfile", "=", "os", ".", "path", ".", "join", "(", "inference_dirname", ",", "v", "+", "\"_tubes.pkl\"", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "outfile", ")", "and", "not", "redo", ":", "\n", "            ", "continue", "\n", "\n", "", "RES", "=", "{", "}", "\n", "nframes", "=", "dataset", ".", "_nframes", "[", "v", "]", "\n", "\n", "# load detected tubelets", "\n", "VDets", "=", "{", "}", "\n", "for", "startframe", "in", "range", "(", "1", ",", "nframes", "+", "2", "-", "K", ")", ":", "\n", "            ", "resname", "=", "os", ".", "path", ".", "join", "(", "inference_dirname", ",", "v", ",", "\"{:0>5}.pkl\"", ".", "format", "(", "startframe", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "resname", ")", ":", "\n", "                ", "print", "(", "\"ERROR: Missing extracted tubelets \"", "+", "resname", ")", "\n", "sys", ".", "exit", "(", ")", "\n", "\n", "", "with", "open", "(", "resname", ",", "'rb'", ")", "as", "fid", ":", "\n", "                ", "VDets", "[", "startframe", "]", "=", "pickle", ".", "load", "(", "fid", ")", "\n", "", "", "for", "ilabel", "in", "range", "(", "len", "(", "dataset", ".", "labels", ")", ")", ":", "\n", "            ", "FINISHED_TUBES", "=", "[", "]", "\n", "CURRENT_TUBES", "=", "[", "]", "# tubes is a list of tuple (frame, lstubelets)", "\n", "# calculate average scores of tubelets in tubes", "\n", "\n", "def", "tubescore", "(", "tt", ")", ":", "\n", "                ", "return", "np", ".", "mean", "(", "np", ".", "array", "(", "[", "tt", "[", "i", "]", "[", "1", "]", "[", "-", "1", "]", "for", "i", "in", "range", "(", "len", "(", "tt", ")", ")", "]", ")", ")", "\n", "\n", "", "for", "frame", "in", "range", "(", "1", ",", "dataset", ".", "_nframes", "[", "v", "]", "+", "2", "-", "K", ")", ":", "\n", "# load boxes of the new frame and do nms while keeping Nkeep highest scored", "\n", "                ", "ltubelets", "=", "VDets", "[", "frame", "]", "[", "ilabel", "+", "1", "]", "# [:,range(4*K) + [4*K + 1 + ilabel]]  Nx(4K+1) with (x1 y1 x2 y2)*K ilabel-score", "\n", "\n", "ltubelets", "=", "nms_tubelets", "(", "ltubelets", ",", "0.6", ",", "top_k", "=", "10", ")", "\n", "\n", "# just start new tubes", "\n", "if", "frame", "==", "1", ":", "\n", "                    ", "for", "i", "in", "range", "(", "ltubelets", ".", "shape", "[", "0", "]", ")", ":", "\n", "                        ", "CURRENT_TUBES", ".", "append", "(", "[", "(", "1", ",", "ltubelets", "[", "i", ",", ":", "]", ")", "]", ")", "\n", "", "continue", "\n", "\n", "# sort current tubes according to average score", "\n", "", "avgscore", "=", "[", "tubescore", "(", "t", ")", "for", "t", "in", "CURRENT_TUBES", "]", "\n", "argsort", "=", "np", ".", "argsort", "(", "-", "np", ".", "array", "(", "avgscore", ")", ")", "\n", "CURRENT_TUBES", "=", "[", "CURRENT_TUBES", "[", "i", "]", "for", "i", "in", "argsort", "]", "\n", "# loop over tubes", "\n", "finished", "=", "[", "]", "\n", "for", "it", ",", "t", "in", "enumerate", "(", "CURRENT_TUBES", ")", ":", "\n", "# compute ious between the last box of t and ltubelets", "\n", "                    ", "last_frame", ",", "last_tubelet", "=", "t", "[", "-", "1", "]", "\n", "ious", "=", "[", "]", "\n", "offset", "=", "frame", "-", "last_frame", "\n", "if", "offset", "<", "K", ":", "\n", "                        ", "nov", "=", "K", "-", "offset", "\n", "ious", "=", "sum", "(", "[", "iou2d", "(", "ltubelets", "[", ":", ",", "4", "*", "iov", ":", "4", "*", "iov", "+", "4", "]", ",", "last_tubelet", "[", "4", "*", "(", "iov", "+", "offset", ")", ":", "4", "*", "(", "iov", "+", "offset", "+", "1", ")", "]", ")", "for", "iov", "in", "range", "(", "nov", ")", "]", ")", "/", "float", "(", "nov", ")", "\n", "", "else", ":", "\n", "                        ", "ious", "=", "iou2d", "(", "ltubelets", "[", ":", ",", ":", "4", "]", ",", "last_tubelet", "[", "4", "*", "K", "-", "4", ":", "4", "*", "K", "]", ")", "\n", "\n", "", "valid", "=", "np", ".", "where", "(", "ious", ">=", "0.5", ")", "[", "0", "]", "\n", "\n", "if", "valid", ".", "size", ">", "0", ":", "\n", "# take the one with maximum score", "\n", "                        ", "idx", "=", "valid", "[", "np", ".", "argmax", "(", "ltubelets", "[", "valid", ",", "-", "1", "]", ")", "]", "\n", "CURRENT_TUBES", "[", "it", "]", ".", "append", "(", "(", "frame", ",", "ltubelets", "[", "idx", ",", ":", "]", ")", ")", "\n", "ltubelets", "=", "np", ".", "delete", "(", "ltubelets", ",", "idx", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "                        ", "if", "offset", ">=", "opt", ".", "K", ":", "\n", "                            ", "finished", ".", "append", "(", "it", ")", "\n", "\n", "# finished tubes that are done", "\n", "", "", "", "for", "it", "in", "finished", "[", ":", ":", "-", "1", "]", ":", "# process in reverse order to delete them with the right index why --++--", "\n", "                    ", "FINISHED_TUBES", ".", "append", "(", "CURRENT_TUBES", "[", "it", "]", "[", ":", "]", ")", "\n", "del", "CURRENT_TUBES", "[", "it", "]", "\n", "\n", "# start new tubes", "\n", "", "for", "i", "in", "range", "(", "ltubelets", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "CURRENT_TUBES", ".", "append", "(", "[", "(", "frame", ",", "ltubelets", "[", "i", ",", ":", "]", ")", "]", ")", "\n", "\n", "# all tubes are not finished", "\n", "", "", "FINISHED_TUBES", "+=", "CURRENT_TUBES", "\n", "\n", "# build real tubes", "\n", "output", "=", "[", "]", "\n", "for", "t", "in", "FINISHED_TUBES", ":", "\n", "                ", "score", "=", "tubescore", "(", "t", ")", "\n", "\n", "# just start new tubes", "\n", "if", "score", "<", "0.005", ":", "\n", "                    ", "continue", "\n", "\n", "", "beginframe", "=", "t", "[", "0", "]", "[", "0", "]", "\n", "endframe", "=", "t", "[", "-", "1", "]", "[", "0", "]", "+", "K", "-", "1", "\n", "length", "=", "endframe", "+", "1", "-", "beginframe", "\n", "\n", "# delete tubes with short duraton", "\n", "if", "length", "<", "15", ":", "\n", "                    ", "continue", "\n", "\n", "# build final tubes by average the tubelets", "\n", "", "out", "=", "np", ".", "zeros", "(", "(", "length", ",", "6", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "out", "[", ":", ",", "0", "]", "=", "np", ".", "arange", "(", "beginframe", ",", "endframe", "+", "1", ")", "\n", "n_per_frame", "=", "np", ".", "zeros", "(", "(", "length", ",", "1", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "t", ")", ")", ":", "\n", "                    ", "frame", ",", "box", "=", "t", "[", "i", "]", "\n", "for", "k", "in", "range", "(", "K", ")", ":", "\n", "                        ", "out", "[", "frame", "-", "beginframe", "+", "k", ",", "1", ":", "5", "]", "+=", "box", "[", "4", "*", "k", ":", "4", "*", "k", "+", "4", "]", "\n", "out", "[", "frame", "-", "beginframe", "+", "k", ",", "-", "1", "]", "+=", "box", "[", "-", "1", "]", "# single frame confidence", "\n", "n_per_frame", "[", "frame", "-", "beginframe", "+", "k", ",", "0", "]", "+=", "1", "\n", "", "", "out", "[", ":", ",", "1", ":", "]", "/=", "n_per_frame", "\n", "output", ".", "append", "(", "[", "out", ",", "score", "]", ")", "\n", "# out: [num_frames, (frame idx, x1, y1, x2, y2, score)]", "\n", "\n", "", "RES", "[", "ilabel", "]", "=", "output", "\n", "# RES{ilabel:[(out[length,6],score)]}ilabel[0,...]", "\n", "", "with", "open", "(", "outfile", ",", "'wb'", ")", "as", "fid", ":", "\n", "            ", "pickle", ".", "dump", "(", "RES", ",", "fid", ")", "\n", "", "Bar", ".", "suffix", "=", "'[{0}/{1}]:{2}|Tot: {total:} |ETA: {eta:} '", ".", "format", "(", "\n", "iv", "+", "1", ",", "len", "(", "vlist", ")", ",", "v", ",", "total", "=", "bar", ".", "elapsed_td", ",", "eta", "=", "bar", ".", "eta_td", ")", "\n", "bar", ".", "next", "(", ")", "\n", "", "bar", ".", "finish", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_brightness": [[8, 15], ["random.random", "random.uniform", "range", "len"], "function", ["None"], ["def", "random_brightness", "(", "imglist", ",", "brightness_prob", ",", "brightness_delta", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "brightness_prob", ":", "\n", "        ", "brig", "=", "random", ".", "uniform", "(", "-", "brightness_delta", ",", "brightness_delta", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "imglist", ")", ")", ":", "\n", "            ", "imglist", "[", "i", "]", "+=", "brig", "\n", "\n", "", "", "return", "imglist", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_contrast": [[17, 24], ["random.random", "random.uniform", "range", "len"], "function", ["None"], ["", "def", "random_contrast", "(", "imglist", ",", "contrast_prob", ",", "contrast_lower", ",", "contrast_upper", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "contrast_prob", ":", "\n", "        ", "cont", "=", "random", ".", "uniform", "(", "contrast_lower", ",", "contrast_upper", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "imglist", ")", ")", ":", "\n", "            ", "imglist", "[", "i", "]", "*=", "cont", "\n", "\n", "", "", "return", "imglist", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_saturation": [[26, 35], ["random.random", "random.uniform", "range", "len", "cv2.cvtColor", "cv2.cvtColor"], "function", ["None"], ["", "def", "random_saturation", "(", "imglist", ",", "saturation_prob", ",", "saturation_lower", ",", "saturation_upper", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "saturation_prob", ":", "\n", "        ", "satu", "=", "random", ".", "uniform", "(", "saturation_lower", ",", "saturation_upper", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "imglist", ")", ")", ":", "\n", "            ", "hsv", "=", "cv2", ".", "cvtColor", "(", "imglist", "[", "i", "]", ",", "cv2", ".", "COLOR_BGR2HSV", ")", "\n", "hsv", "[", ":", ",", ":", ",", "1", "]", "*=", "satu", "\n", "imglist", "[", "i", "]", "=", "cv2", ".", "cvtColor", "(", "hsv", ",", "cv2", ".", "COLOR_HSV2BGR", ")", "\n", "\n", "", "", "return", "imglist", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_hue": [[37, 46], ["random.random", "random.uniform", "range", "len", "cv2.cvtColor", "cv2.cvtColor"], "function", ["None"], ["", "def", "random_hue", "(", "imglist", ",", "hue_prob", ",", "hue_delta", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "hue_prob", ":", "\n", "        ", "hue", "=", "random", ".", "uniform", "(", "-", "hue_delta", ",", "hue_delta", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "imglist", ")", ")", ":", "\n", "            ", "hsv", "=", "cv2", ".", "cvtColor", "(", "imglist", "[", "i", "]", ",", "cv2", ".", "COLOR_BGR2HSV", ")", "\n", "hsv", "[", ":", ",", ":", ",", "0", "]", "+=", "hue", "\n", "imglist", "[", "i", "]", "=", "cv2", ".", "cvtColor", "(", "hsv", ",", "cv2", ".", "COLOR_HSV2BGR", ")", "\n", "\n", "", "", "return", "imglist", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.apply_distort": [[48, 66], ["random.random", "ACT_aug.random_brightness", "ACT_aug.random_contrast", "ACT_aug.random_saturation", "ACT_aug.random_hue", "ACT_aug.random_brightness", "ACT_aug.random_saturation", "ACT_aug.random_hue", "ACT_aug.random_contrast"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_brightness", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_contrast", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_saturation", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_hue", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_brightness", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_saturation", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_hue", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.random_contrast"], ["", "def", "apply_distort", "(", "imglist", ",", "distort_param", ")", ":", "\n", "    ", "out_imglist", "=", "imglist", "\n", "\n", "if", "distort_param", "[", "'random_order_prob'", "]", "!=", "0", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "        ", "out_imglist", "=", "random_brightness", "(", "out_imglist", ",", "distort_param", "[", "'brightness_prob'", "]", ",", "distort_param", "[", "'brightness_delta'", "]", ")", "\n", "out_imglist", "=", "random_contrast", "(", "out_imglist", ",", "distort_param", "[", "'contrast_prob'", "]", ",", "distort_param", "[", "'contrast_lower'", "]", ",", "distort_param", "[", "'contrast_upper'", "]", ")", "\n", "out_imglist", "=", "random_saturation", "(", "out_imglist", ",", "distort_param", "[", "'saturation_prob'", "]", ",", "distort_param", "[", "'saturation_lower'", "]", ",", "distort_param", "[", "'saturation_upper'", "]", ")", "\n", "out_imglist", "=", "random_hue", "(", "out_imglist", ",", "distort_param", "[", "'hue_prob'", "]", ",", "distort_param", "[", "'hue_delta'", "]", ")", "\n", "", "else", ":", "\n", "        ", "out_imglist", "=", "random_brightness", "(", "out_imglist", ",", "distort_param", "[", "'brightness_prob'", "]", ",", "distort_param", "[", "'brightness_delta'", "]", ")", "\n", "out_imglist", "=", "random_saturation", "(", "out_imglist", ",", "distort_param", "[", "'saturation_prob'", "]", ",", "distort_param", "[", "'saturation_lower'", "]", ",", "distort_param", "[", "'saturation_upper'", "]", ")", "\n", "out_imglist", "=", "random_hue", "(", "out_imglist", ",", "distort_param", "[", "'hue_prob'", "]", ",", "distort_param", "[", "'hue_delta'", "]", ")", "\n", "out_imglist", "=", "random_contrast", "(", "out_imglist", ",", "distort_param", "[", "'contrast_prob'", "]", ",", "distort_param", "[", "'contrast_lower'", "]", ",", "distort_param", "[", "'contrast_upper'", "]", ")", "\n", "\n", "", "return", "out_imglist", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.apply_expand": [[68, 92], ["random.random", "random.uniform", "int", "int", "int", "int", "range", "numpy.zeros", "numpy.floor", "numpy.floor", "range", "len", "range", "range", "len", "numpy.array().reshape", "len", "numpy.array", "len", "numpy.array"], "function", ["None"], ["", "def", "apply_expand", "(", "imglist", ",", "tubes", ",", "expand_param", ",", "mean_values", "=", "None", ")", ":", "\n", "# Tubes: dict of label -> list of tubes with tubes being <x1> <y1> <x2> <y2>", "\n", "    ", "out_imglist", "=", "imglist", "\n", "out_tubes", "=", "tubes", "\n", "expand_ratio", "=", "1.0", "\n", "if", "random", ".", "random", "(", ")", "<", "expand_param", "[", "'expand_prob'", "]", ":", "\n", "        ", "expand_ratio", "=", "random", ".", "uniform", "(", "1", ",", "expand_param", "[", "'max_expand_ratio'", "]", ")", "\n", "oh", ",", "ow", "=", "imglist", "[", "0", "]", ".", "shape", "[", ":", "2", "]", "\n", "h", "=", "int", "(", "oh", "*", "expand_ratio", ")", "\n", "w", "=", "int", "(", "ow", "*", "expand_ratio", ")", "\n", "out_imglist", "=", "[", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "len", "(", "imglist", ")", ")", "]", "\n", "h_off", "=", "int", "(", "np", ".", "floor", "(", "h", "-", "oh", ")", ")", "\n", "w_off", "=", "int", "(", "np", ".", "floor", "(", "w", "-", "ow", ")", ")", "\n", "if", "mean_values", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "imglist", ")", ")", ":", "\n", "                ", "out_imglist", "[", "i", "]", "+=", "np", ".", "array", "(", "mean_values", ")", ".", "reshape", "(", "1", ",", "1", ",", "3", ")", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "imglist", ")", ")", ":", "\n", "            ", "out_imglist", "[", "i", "]", "[", "h_off", ":", "h_off", "+", "oh", ",", "w_off", ":", "w_off", "+", "ow", ",", ":", "]", "=", "imglist", "[", "i", "]", "\n", "# project boxes", "\n", "", "for", "ilabel", "in", "tubes", ":", "\n", "            ", "for", "itube", "in", "range", "(", "len", "(", "tubes", "[", "ilabel", "]", ")", ")", ":", "\n", "                ", "out_tubes", "[", "ilabel", "]", "[", "itube", "]", "+=", "np", ".", "array", "(", "[", "[", "w_off", ",", "h_off", ",", "w_off", ",", "h_off", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "", "", "", "return", "out_imglist", ",", "out_tubes", ",", "expand_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.sample_cuboids": [[94, 145], ["random.uniform", "random.uniform", "random.uniform", "random.uniform", "numpy.array", "numpy.array", "numpy.sqrt", "numpy.sqrt", "sampled_cuboids.append", "sampled_cuboids.append", "sampled_cuboids.append", "numpy.mean", "np.array.max", "np.array.min", "ACT_utils.iou2d", "sum", "tubes.values"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.iou2d"], ["", "def", "sample_cuboids", "(", "tubes", ",", "batch_samplers", ",", "imheight", ",", "imwidth", ")", ":", "\n", "    ", "sampled_cuboids", "=", "[", "]", "\n", "for", "batch_sampler", "in", "batch_samplers", ":", "\n", "        ", "max_trials", "=", "batch_sampler", "[", "'max_trials'", "]", "\n", "max_sample", "=", "batch_sampler", "[", "'max_sample'", "]", "\n", "itrial", "=", "0", "\n", "isample", "=", "0", "\n", "sampler", "=", "batch_sampler", "[", "'sampler'", "]", "\n", "\n", "min_scale", "=", "sampler", "[", "'min_scale'", "]", "if", "'min_scale'", "in", "sampler", "else", "1", "\n", "max_scale", "=", "sampler", "[", "'max_scale'", "]", "if", "'max_scale'", "in", "sampler", "else", "1", "\n", "min_aspect", "=", "sampler", "[", "'min_aspect_ratio'", "]", "if", "'min_aspect_ratio'", "in", "sampler", "else", "1", "\n", "max_aspect", "=", "sampler", "[", "'max_aspect_ratio'", "]", "if", "'max_aspect_ratio'", "in", "sampler", "else", "1", "\n", "\n", "while", "itrial", "<", "max_trials", "and", "isample", "<", "max_sample", ":", "\n", "# sample a normalized box", "\n", "            ", "scale", "=", "random", ".", "uniform", "(", "min_scale", ",", "max_scale", ")", "\n", "aspect", "=", "random", ".", "uniform", "(", "min_aspect", ",", "max_aspect", ")", "\n", "width", "=", "scale", "*", "np", ".", "sqrt", "(", "aspect", ")", "\n", "height", "=", "scale", "/", "np", ".", "sqrt", "(", "aspect", ")", "\n", "if", "width", ">", "1", "or", "height", ">", "1", ":", "\n", "                ", "continue", "\n", "", "x", "=", "random", ".", "uniform", "(", "0", ",", "1", "-", "width", ")", "\n", "y", "=", "random", ".", "uniform", "(", "0", ",", "1", "-", "height", ")", "\n", "\n", "# rescale the box", "\n", "sampled_cuboid", "=", "np", ".", "array", "(", "[", "x", "*", "imwidth", ",", "y", "*", "imheight", ",", "(", "x", "+", "width", ")", "*", "imwidth", ",", "(", "y", "+", "height", ")", "*", "imheight", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# check constraint", "\n", "itrial", "+=", "1", "\n", "if", "not", "'sample_constraint'", "in", "batch_sampler", ":", "\n", "                ", "sampled_cuboids", ".", "append", "(", "sampled_cuboid", ")", "\n", "isample", "+=", "1", "\n", "continue", "\n", "\n", "", "constraints", "=", "batch_sampler", "[", "'sample_constraint'", "]", "\n", "ious", "=", "np", ".", "array", "(", "[", "np", ".", "mean", "(", "iou2d", "(", "t", ",", "sampled_cuboid", ")", ")", "for", "t", "in", "sum", "(", "tubes", ".", "values", "(", ")", ",", "[", "]", ")", "]", ")", "\n", "if", "ious", ".", "size", "==", "0", ":", "# empty gt", "\n", "                ", "isample", "+=", "1", "\n", "continue", "\n", "\n", "", "if", "'min_jaccard_overlap'", "in", "constraints", "and", "ious", ".", "max", "(", ")", ">=", "constraints", "[", "'min_jaccard_overlap'", "]", ":", "\n", "                ", "sampled_cuboids", ".", "append", "(", "sampled_cuboid", ")", "\n", "isample", "+=", "1", "\n", "continue", "\n", "\n", "", "if", "'max_jaccard_overlap'", "in", "constraints", "and", "ious", ".", "min", "(", ")", ">=", "constraints", "[", "'max_jaccard_overlap'", "]", ":", "\n", "                ", "sampled_cuboids", ".", "append", "(", "sampled_cuboid", ")", "\n", "isample", "+=", "1", "\n", "continue", "\n", "\n", "", "", "", "return", "sampled_cuboids", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.crop_image": [[147, 191], ["ACT_aug.sample_cuboids", "random.choice", "map", "range", "random.choice.tolist", "len", "range", "len", "numpy.array", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "out_tubes[].append", "numpy.any", "numpy.any", "numpy.any", "numpy.any"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_aug.sample_cuboids"], ["", "def", "crop_image", "(", "imglist", ",", "tubes", ",", "batch_samplers", ")", ":", "\n", "    ", "candidate_cuboids", "=", "sample_cuboids", "(", "tubes", ",", "batch_samplers", ",", "imglist", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "imglist", "[", "0", "]", ".", "shape", "[", "1", "]", ")", "\n", "crop_areas", "=", "[", "0.0", ",", "0.0", ",", "1.0", ",", "1.0", "]", "\n", "if", "not", "candidate_cuboids", ":", "\n", "        ", "return", "imglist", ",", "tubes", ",", "crop_areas", "\n", "", "h", "=", "imglist", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "w", "=", "imglist", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "crop_cuboid", "=", "random", ".", "choice", "(", "candidate_cuboids", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "map", "(", "int", ",", "crop_cuboid", ".", "tolist", "(", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "imglist", ")", ")", ":", "\n", "         ", "imglist", "[", "i", "]", "=", "imglist", "[", "i", "]", "[", "y1", ":", "y2", "+", "1", ",", "x1", ":", "x2", "+", "1", ",", ":", "]", "\n", "", "out_tubes", "=", "{", "}", "\n", "wi", "=", "x2", "-", "x1", "\n", "hi", "=", "y2", "-", "y1", "\n", "# if x1<0 or x2>w or y1<0 or y2>h:", "\n", "#    print('error:')", "\n", "#    print(x1,y1,x2,y2)", "\n", "#    print(imglist[0].shape)", "\n", "\n", "for", "ilabel", "in", "tubes", ":", "\n", "        ", "for", "itube", "in", "range", "(", "len", "(", "tubes", "[", "ilabel", "]", ")", ")", ":", "\n", "            ", "t", "=", "tubes", "[", "ilabel", "]", "[", "itube", "]", "\n", "t", "-=", "np", ".", "array", "(", "[", "[", "x1", ",", "y1", ",", "x1", ",", "y1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "# check if valid", "\n", "cx", "=", "0.5", "*", "(", "t", "[", ":", ",", "0", "]", "+", "t", "[", ":", ",", "2", "]", ")", "\n", "cy", "=", "0.5", "*", "(", "t", "[", ":", ",", "1", "]", "+", "t", "[", ":", ",", "3", "]", ")", "\n", "\n", "if", "np", ".", "any", "(", "cx", "<", "0", ")", "or", "np", ".", "any", "(", "cy", "<", "0", ")", "or", "np", ".", "any", "(", "cx", ">", "wi", ")", "or", "np", ".", "any", "(", "cy", ">", "hi", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "not", "ilabel", "in", "out_tubes", ":", "\n", "                ", "out_tubes", "[", "ilabel", "]", "=", "[", "]", "\n", "\n", "# clip box", "\n", "", "t", "[", ":", ",", "0", "]", "=", "np", ".", "maximum", "(", "0", ",", "t", "[", ":", ",", "0", "]", ")", "\n", "t", "[", ":", ",", "1", "]", "=", "np", ".", "maximum", "(", "0", ",", "t", "[", ":", ",", "1", "]", ")", "\n", "t", "[", ":", ",", "2", "]", "=", "np", ".", "minimum", "(", "wi", ",", "t", "[", ":", ",", "2", "]", ")", "\n", "t", "[", ":", ",", "3", "]", "=", "np", ".", "minimum", "(", "hi", ",", "t", "[", ":", ",", "3", "]", ")", "\n", "\n", "out_tubes", "[", "ilabel", "]", ".", "append", "(", "t", ")", "\n", "", "", "crop_areas", "=", "[", "x1", "/", "w", ",", "y1", "/", "h", ",", "x2", "/", "w", ",", "y2", "/", "h", "]", "\n", "return", "imglist", ",", "out_tubes", ",", "crop_areas", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.ModleWithLoss.__init__": [[14, 18], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "loss", ")", ":", "\n", "        ", "super", "(", "ModleWithLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "loss", "=", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.ModleWithLoss.forward": [[19, 23], ["trainer.ModleWithLoss.model", "trainer.ModleWithLoss.loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "batch", ")", ":", "\n", "        ", "[", "output", "]", "=", "self", ".", "model", "(", "batch", "[", "'input'", "]", ")", "\n", "loss", ",", "loss_stats", "=", "self", ".", "loss", "(", "output", ",", "batch", ")", "\n", "return", "output", ",", "loss", ",", "loss_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.TrainLoss.__init__": [[25, 33], ["super().__init__", "losses.FocalLoss", "losses.RegL1Loss", "losses.RegL1Loss", "losses.STAloss", "losses.STAloss2"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", "TrainLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "crit_hm", "=", "FocalLoss", "(", ")", "\n", "self", ".", "crit_mov", "=", "RegL1Loss", "(", ")", "\n", "self", ".", "crit_wh", "=", "RegL1Loss", "(", ")", "\n", "self", ".", "crit_STAloss", "=", "STAloss", "(", "opt", ")", "\n", "self", ".", "crit_STAloss2", "=", "STAloss2", "(", "opt", ")", "\n", "self", ".", "opt", "=", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.TrainLoss.forward": [[34, 76], ["torch.clamp", "trainer.TrainLoss.crit_hm", "trainer.TrainLoss.crit_mov", "trainer.TrainLoss.crit_wh", "trainer.TrainLoss.crit_STAloss", "loss.unsqueeze.unsqueeze.unsqueeze", "hm_loss.unsqueeze.unsqueeze.unsqueeze", "wh_loss.unsqueeze.unsqueeze.unsqueeze", "mov_loss.unsqueeze.unsqueeze.unsqueeze", "sta_sin_loss.mean().unsqueeze.mean().unsqueeze.mean().unsqueeze", "sta_cos_loss.mean().unsqueeze.mean().unsqueeze.mean().unsqueeze", "output[].sigmoid_", "sta_sin_loss.mean().unsqueeze.mean().unsqueeze.mean", "sta_cos_loss.mean().unsqueeze.mean().unsqueeze.mean", "mov_loss.unsqueeze.unsqueeze.mean", "hm_loss.unsqueeze.unsqueeze.mean", "wh_loss.unsqueeze.unsqueeze.mean", "sta_sin_loss.mean().unsqueeze.mean().unsqueeze.mean", "sta_cos_loss.mean().unsqueeze.mean().unsqueeze.mean", "hm_loss.unsqueeze.unsqueeze.mean", "wh_loss.unsqueeze.unsqueeze.mean"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean"], ["", "def", "forward", "(", "self", ",", "output", ",", "batch", ")", ":", "\n", "        ", "opt", "=", "self", ".", "opt", "\n", "output", "[", "'hm'", "]", "=", "torch", ".", "clamp", "(", "output", "[", "'hm'", "]", ".", "sigmoid_", "(", ")", ",", "min", "=", "1e-4", ",", "max", "=", "1", "-", "1e-4", ")", "\n", "\n", "hm_loss", "=", "self", ".", "crit_hm", "(", "output", "[", "'hm'", "]", ",", "batch", "[", "'hm'", "]", ")", "\n", "\n", "mov_loss", "=", "self", ".", "crit_mov", "(", "output", "[", "'mov'", "]", ",", "batch", "[", "'mask'", "]", ",", "\n", "batch", "[", "'index'", "]", ",", "batch", "[", "'mov'", "]", ")", "\n", "\n", "wh_loss", "=", "self", ".", "crit_wh", "(", "output", "[", "'wh'", "]", ",", "batch", "[", "'mask'", "]", ",", "\n", "batch", "[", "'index'", "]", ",", "batch", "[", "'wh'", "]", ",", "\n", "index_all", "=", "batch", "[", "'index_all'", "]", ")", "\n", "\n", "sta_sin_loss", ",", "sta_cos_loss", "=", "self", ".", "crit_STAloss", "(", "batch", "[", "'centerKpoints'", "]", ",", "batch", "[", "'wh'", "]", ",", "\n", "output", "[", "'hm'", "]", ",", "output", "[", "'wh'", "]", ",", "output", "[", "'STA_offset'", "]", ",", "\n", "batch", "[", "'mask'", "]", ",", "batch", "[", "'index'", "]", ",", "\n", "index_all", "=", "batch", "[", "'index_all'", "]", ")", "\n", "\n", "# sta_sin_loss2,sta_cos_loss2 = self.crit_STAloss2(batch['centerKpoints'], batch['wh'],", "\n", "#                                               output['hm'],output['wh'],output['STA_offset'],", "\n", "#                                               batch['mask'],batch['index'],", "\n", "#                                               index_all=batch['index_all'])", "\n", "\n", "if", "self", ".", "opt", ".", "loss_option", "==", "'STAloss'", ":", "\n", "            ", "loss", "=", "opt", ".", "hm_weight", "*", "hm_loss", ".", "mean", "(", ")", "+", "opt", ".", "wh_weight", "*", "wh_loss", ".", "mean", "(", ")", "+", "opt", ".", "sta_weight", "*", "(", "sta_sin_loss", ".", "mean", "(", ")", "+", "sta_cos_loss", ".", "mean", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "opt", ".", "hm_weight", "*", "hm_loss", ".", "mean", "(", ")", "+", "opt", ".", "wh_weight", "*", "wh_loss", ".", "mean", "(", ")", "+", "opt", ".", "mov_weight", "*", "mov_loss", ".", "mean", "(", ")", "\n", "\n", "", "loss", "=", "loss", ".", "unsqueeze", "(", "0", ")", "\n", "hm_loss", "=", "hm_loss", ".", "unsqueeze", "(", "0", ")", "\n", "wh_loss", "=", "wh_loss", ".", "unsqueeze", "(", "0", ")", "\n", "mov_loss", "=", "mov_loss", ".", "unsqueeze", "(", "0", ")", "\n", "sta_sin_loss", "=", "sta_sin_loss", ".", "mean", "(", ")", ".", "unsqueeze", "(", "0", ")", "\n", "sta_cos_loss", "=", "sta_cos_loss", ".", "mean", "(", ")", ".", "unsqueeze", "(", "0", ")", "\n", "# sta_sin_loss2 = sta_sin_loss2.mean().unsqueeze(0)", "\n", "# sta_cos_loss2 = sta_cos_loss2.mean().unsqueeze(0)", "\n", "# print(sta_cos_loss.detach().cpu().numpy(),\"==\",sta_cos_loss2.detach().cpu().numpy())", "\n", "# print(sta_sin_loss.detach().cpu().numpy(),\"==\",sta_sin_loss2.detach().cpu().numpy())", "\n", "\n", "loss_stats", "=", "{", "'loss'", ":", "loss", ",", "'hm_loss'", ":", "hm_loss", ",", "'wh_loss'", ":", "wh_loss", ",", "'mov_loss'", ":", "mov_loss", ",", "'sta_sin_loss'", ":", "sta_sin_loss", ",", "'sta_cos_loss'", ":", "sta_cos_loss", "}", "\n", "\n", "return", "loss", ",", "loss_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.__init__": [[79, 85], ["trainer.ModleWithLoss", "trainer.TrainLoss"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "model", ",", "optimizer", "=", "None", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "loss_stats", "=", "[", "'loss'", ",", "'hm_loss'", ",", "'wh_loss'", ",", "'sta_sin_loss'", ",", "'sta_cos_loss'", "]", "if", "self", ".", "opt", ".", "loss_option", "==", "'STAloss'", "else", "[", "'loss'", ",", "'hm_loss'", ",", "'wh_loss'", ",", "'mov_loss'", "]", "\n", "self", ".", "model_with_loss", "=", "ModleWithLoss", "(", "model", ",", "TrainLoss", "(", "opt", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.train": [[86, 88], ["trainer.Trainer.run_epoch"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.run_epoch"], ["", "def", "train", "(", "self", ",", "epoch", ",", "data_loader", ",", "writer", ")", ":", "\n", "        ", "return", "self", ".", "run_epoch", "(", "'train'", ",", "epoch", ",", "data_loader", ",", "writer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.val": [[89, 91], ["trainer.Trainer.run_epoch"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.run_epoch"], ["", "def", "val", "(", "self", ",", "epoch", ",", "data_loader", ",", "writer", ")", ":", "\n", "        ", "return", "self", ".", "run_epoch", "(", "'val'", ",", "epoch", ",", "data_loader", ",", "writer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.run_epoch": [[92, 145], ["len", "progress.bar.Bar", "enumerate", "progress.bar.Bar.finish", "model_with_loss.train", "model_with_loss.eval", "torch.cuda.empty_cache", "utils.utils.AverageMeter", "model_with_loss", "loss.mean.mean.mean", "progress.bar.Bar.next", "progress.bar.Bar.elapsed_td.total_seconds", "trainer.Trainer.optimizer.zero_grad", "loss.mean.mean.backward", "trainer.Trainer.optimizer.step", "avg_loss_stats[].update", "avg_loss_stats.items", "range", "batch[].to", "loss_stats[].mean().item", "[].size", "writer.add_scalar", "writer.flush", "len", "[].to", "loss_stats[].mean"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.train", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.cuda_shift.rtc_wrap.ShiftFeatureFunc.backward", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean"], ["", "def", "run_epoch", "(", "self", ",", "phase", ",", "epoch", ",", "data_loader", ",", "writer", ")", ":", "\n", "        ", "model_with_loss", "=", "self", ".", "model_with_loss", "\n", "if", "phase", "==", "'train'", ":", "\n", "            ", "model_with_loss", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "            ", "model_with_loss", ".", "eval", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "", "opt", "=", "self", ".", "opt", "\n", "avg_loss_stats", "=", "{", "l", ":", "AverageMeter", "(", ")", "for", "l", "in", "self", ".", "loss_stats", "}", "\n", "num_iters", "=", "len", "(", "data_loader", ")", "\n", "bar", "=", "Bar", "(", "opt", ".", "exp_id", ",", "max", "=", "num_iters", ")", "\n", "\n", "for", "iter", ",", "batch", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "            ", "if", "iter", ">=", "num_iters", ":", "\n", "                ", "break", "\n", "\n", "", "for", "k", "in", "batch", ":", "\n", "                ", "if", "k", "==", "'input'", ":", "\n", "                    ", "for", "i", "in", "range", "(", "len", "(", "batch", "[", "k", "]", ")", ")", ":", "\n", "                        ", "batch", "[", "k", "]", "[", "i", "]", "=", "batch", "[", "k", "]", "[", "i", "]", ".", "to", "(", "device", "=", "opt", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "", "", "else", ":", "\n", "                        ", "batch", "[", "k", "]", "=", "batch", "[", "k", "]", ".", "to", "(", "device", "=", "opt", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "\n", "", "", "output", ",", "loss", ",", "loss_stats", "=", "model_with_loss", "(", "batch", ")", "\n", "\n", "loss", "=", "loss", ".", "mean", "(", ")", "\n", "if", "phase", "==", "'train'", ":", "\n", "                ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "Bar", ".", "suffix", "=", "'{phase}: [{0}][{1}/{2}]|Tot: {total:} |ETA: {eta:} '", ".", "format", "(", "\n", "epoch", ",", "iter", ",", "num_iters", ",", "phase", "=", "phase", ",", "\n", "total", "=", "bar", ".", "elapsed_td", ",", "eta", "=", "bar", ".", "eta_td", ")", "\n", "\n", "step", "=", "iter", "//", "opt", ".", "visual_per_inter", "+", "num_iters", "//", "opt", ".", "visual_per_inter", "*", "(", "epoch", "-", "1", ")", "\n", "\n", "for", "l", "in", "self", ".", "loss_stats", ":", "\n", "                ", "avg_loss_stats", "[", "l", "]", ".", "update", "(", "\n", "loss_stats", "[", "l", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "batch", "[", "'input'", "]", "[", "0", "]", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "phase", "==", "'train'", "and", "iter", "%", "opt", ".", "visual_per_inter", "==", "0", "and", "iter", "!=", "0", ":", "\n", "                    ", "writer", ".", "add_scalar", "(", "'train/{}'", ".", "format", "(", "l", ")", ",", "avg_loss_stats", "[", "l", "]", ".", "avg", ",", "step", ")", "\n", "writer", ".", "flush", "(", ")", "\n", "", "Bar", ".", "suffix", "=", "Bar", ".", "suffix", "+", "'|{} {:.4f} '", ".", "format", "(", "l", ",", "avg_loss_stats", "[", "l", "]", ".", "avg", ")", "\n", "", "bar", ".", "next", "(", ")", "\n", "del", "output", ",", "loss", ",", "loss_stats", "\n", "\n", "", "bar", ".", "finish", "(", ")", "\n", "ret", "=", "{", "k", ":", "v", ".", "avg", "for", "k", ",", "v", "in", "avg_loss_stats", ".", "items", "(", ")", "}", "\n", "ret", "[", "'time'", "]", "=", "bar", ".", "elapsed_td", ".", "total_seconds", "(", ")", "/", "60.", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.trainer.Trainer.set_device": [[146, 159], ["trainer.Trainer.optimizer.state.values", "len", "utils.data_parallel.DataParallel().to", "trainer.Trainer.model_with_loss.to", "state.items", "isinstance", "utils.data_parallel.DataParallel", "v.to"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel.DataParallel"], ["", "def", "set_device", "(", "self", ",", "gpus", ",", "chunk_sizes", ",", "device", ")", ":", "\n", "        ", "if", "len", "(", "gpus", ")", ">", "1", ":", "\n", "            ", "self", ".", "model_with_loss", "=", "DataParallel", "(", "\n", "self", ".", "model_with_loss", ",", "device_ids", "=", "gpus", ",", "\n", "chunk_sizes", "=", "chunk_sizes", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "model_with_loss", "=", "self", ".", "model_with_loss", ".", "to", "(", "device", ")", "\n", "\n", "", "for", "state", "in", "self", ".", "optimizer", ".", "state", ".", "values", "(", ")", ":", "\n", "            ", "for", "k", ",", "v", "in", "state", ".", "items", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "v", ",", "torch", ".", "Tensor", ")", ":", "\n", "# MODIFY for pytorch 0.4.0", "\n", "                    ", "state", "[", "k", "]", "=", "v", ".", "to", "(", "device", "=", "device", ",", "non_blocking", "=", "True", ")", "\n", "# state[k] = v.to(device=device)", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.__init__": [[13, 39], ["time.strftime", "dict", "os.path.join", "open", "os.path.exists", "os.makedirs", "open", "opt_file.write", "opt_file.write", "opt_file.write", "opt_file.write", "opt_file.write", "sorted", "str", "dict.items", "opt_file.write", "getattr", "dir", "torch.backends.cudnn.version", "name.startswith", "str", "str"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "train_writer", ",", "val_writer", ")", ":", "\n", "        ", "self", ".", "train_writer", "=", "train_writer", "\n", "self", ".", "val_writer", "=", "val_writer", "\n", "\"\"\"Create a summary writer logging to log_dir.\"\"\"", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "save_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "opt", ".", "save_dir", ")", "\n", "\n", "", "time_str", "=", "time", ".", "strftime", "(", "'%Y-%m-%d-%H-%M'", ")", "\n", "\n", "# write args in opt.txt", "\n", "args", "=", "dict", "(", "(", "name", ",", "getattr", "(", "opt", ",", "name", ")", ")", "for", "name", "in", "dir", "(", "opt", ")", "\n", "if", "not", "name", ".", "startswith", "(", "'_'", ")", ")", "\n", "f", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "save_dir", ",", "'opt.txt'", ")", "\n", "with", "open", "(", "f", ",", "'wt'", ")", "as", "opt_file", ":", "\n", "            ", "opt_file", ".", "write", "(", "'==> torch version: {}\\n'", ".", "format", "(", "torch", ".", "__version__", ")", ")", "\n", "opt_file", ".", "write", "(", "'==> cudnn version: {}\\n'", ".", "format", "(", "\n", "torch", ".", "backends", ".", "cudnn", ".", "version", "(", ")", ")", ")", "\n", "opt_file", ".", "write", "(", "'==> Cmd:\\n'", ")", "\n", "opt_file", ".", "write", "(", "str", "(", "sys", ".", "argv", ")", ")", "\n", "opt_file", ".", "write", "(", "'\\n==> Opt:\\n'", ")", "\n", "for", "k", ",", "v", "in", "sorted", "(", "args", ".", "items", "(", ")", ")", ":", "\n", "                ", "opt_file", ".", "write", "(", "'  %s: %s\\n'", "%", "(", "str", "(", "k", ")", ",", "str", "(", "v", ")", ")", ")", "\n", "\n", "", "", "self", ".", "log", "=", "open", "(", "opt", ".", "log_dir", "+", "'/log.txt'", ",", "'a+'", ")", "\n", "\n", "self", ".", "start_line", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write": [[40, 50], ["time.strftime", "logger.Logger.log.write", "logger.Logger.log.write", "logger.Logger.log.flush"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write"], ["", "def", "write", "(", "self", ",", "txt", ")", ":", "\n", "        ", "if", "self", ".", "start_line", ":", "\n", "            ", "time_str", "=", "time", ".", "strftime", "(", "'%Y-%m-%d-%H-%M'", ")", "\n", "self", ".", "log", ".", "write", "(", "'{}: {}'", ".", "format", "(", "time_str", ",", "txt", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "log", ".", "write", "(", "txt", ")", "\n", "", "self", ".", "start_line", "=", "False", "\n", "if", "'\\n'", "in", "txt", ":", "\n", "            ", "self", ".", "start_line", "=", "True", "\n", "self", ".", "log", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.close": [[51, 53], ["logger.Logger.log.close"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "log", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.scalar_summary": [[54, 62], ["logger.Logger.train_writer.add_scalar", "logger.Logger.train_writer.flush", "logger.Logger.val_writer.add_scalar", "logger.Logger.val_writer.flush"], "methods", ["None"], ["", "def", "scalar_summary", "(", "self", ",", "tag", ",", "value", ",", "step", ",", "type", ")", ":", "\n", "        ", "\"\"\"Log a scalar variable.\"\"\"", "\n", "if", "type", "==", "'train'", ":", "\n", "            ", "self", ".", "train_writer", ".", "add_scalar", "(", "tag", ",", "value", ",", "step", ")", "\n", "self", ".", "train_writer", ".", "flush", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "val_writer", ".", "add_scalar", "(", "tag", ",", "value", ",", "step", ")", "\n", "self", ".", "val_writer", ".", "flush", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.FocalLoss.__init__": [[81, 84], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "FocalLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "neg_loss", "=", "_neg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.FocalLoss.forward": [[85, 87], ["losses.FocalLoss.neg_loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "out", ",", "target", ")", ":", "\n", "        ", "return", "self", ".", "neg_loss", "(", "out", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.RegL1Loss.__init__": [[91, 98], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "RegL1Loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gamma", "=", "1.5", "\n", "self", ".", "beta", "=", "1.0", "\n", "self", ".", "alpha", "=", "0.5", "\n", "self", ".", "Beta", "=", "1.", "/", "9", "\n", "self", ".", "b", "=", "np", ".", "e", "**", "(", "self", ".", "gamma", "/", "self", ".", "alpha", ")", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.RegL1Loss.forward": [[100, 109], ["utils.utils._tranpose_and_gather_feature", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.unsqueeze().expand_as().float", "torch.l1_loss", "torch.l1_loss", "torch.l1_loss", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.unsqueeze().expand_as", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.sum", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._tranpose_and_gather_feature"], ["", "def", "forward", "(", "self", ",", "output", ",", "mask", ",", "index", ",", "target", ",", "index_all", "=", "None", ")", ":", "\n", "        ", "pred", "=", "_tranpose_and_gather_feature", "(", "output", ",", "index", ",", "index_all", "=", "index_all", ")", "\n", "# pred --> b, N, 2*K", "\n", "# mask --> b, N ---> b, N, 2*K", "\n", "mask", "=", "mask", ".", "unsqueeze", "(", "2", ")", ".", "expand_as", "(", "pred", ")", ".", "float", "(", ")", "\n", "# L1 loss", "\n", "loss", "=", "F", ".", "l1_loss", "(", "pred", "*", "mask", ",", "target", "*", "mask", ",", "size_average", "=", "False", ")", "\n", "loss", "=", "loss", "/", "(", "mask", ".", "sum", "(", ")", "+", "1e-4", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.STAloss.__init__": [[111, 114], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", "STAloss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "opt", "=", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.STAloss.forward": [[115, 192], ["utils.utils._tranpose_and_gather_feature", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.unsqueeze().expand_as().float", "losses.loss_nms", "losses.loss_topN", "utils.utils._tranpose_and_gather_feature", "pred[].unsqueeze", "offset[].unsqueeze", "target[].unsqueeze", "centerKpoints[].unsqueeze", "xs[].unsqueeze", "ys[].unsqueeze", "pred.view.view.size", "pred.view.view.view().contiguous", "pred.view.view.view", "target.view.view.view().contiguous", "target.view.view.view", "centerKpoints.view.view.view().contiguous", "centerKpoints.view.view.view", "offset.view.view.view().contiguous", "offset.view.view.view", "xs.view().repeat.view().repeat.view().repeat", "ys.view().repeat.view().repeat.view().repeat", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "losses.STAloss.STAloss_core", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.unsqueeze().expand_as", "pred.view.view.view", "target.view.view.view", "centerKpoints.view.view.view", "offset.view.view.view", "xs.view().repeat.view().repeat.view", "ys.view().repeat.view().repeat.view", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._tranpose_and_gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.loss_nms", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.loss_topN", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._tranpose_and_gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.STAloss.STAloss_core"], ["", "def", "forward", "(", "self", ",", "centerKpoints", ",", "target_wh", ",", "output_hm", ",", "output_wh", ",", "output_STA_offset", ",", "mask", ",", "index", ",", "index_all", "=", "None", ")", ":", "\n", "        ", "'''\n        Args:\n            centerKpoints: GT box centers of K frames\n            target_wh: GT box width and height of K frames\n            output_hm: predicted center heatmap\n            output_wh: predicted width and height of K frames\n            output_STA_offset: width and height offsets of STAloss\n            mask: mask indicate how many objects in this tube\n            index: index is key frame's boox center position\n            index_all: index_all are all frame's bbox center position\n        Returns:\n        '''", "\n", "\n", "#pred_wh:[B N 2*K] mask:[B N]->[B N 2*K]", "\n", "pred_wh", "=", "_tranpose_and_gather_feature", "(", "output_wh", ",", "index", ",", "index_all", "=", "index_all", ")", "\n", "mask", "=", "mask", ".", "unsqueeze", "(", "2", ")", ".", "expand_as", "(", "pred_wh", ")", ".", "float", "(", ")", "\n", "\n", "#heat:[B 1 W H ] offset:[B N 2*K]  N:object num", "\n", "#key frame center xs:[B N]  ys:[B N]", "\n", "heat", "=", "loss_nms", "(", "output_hm", ")", "# B 1 72 72", "\n", "scores", ",", "index_pred", ",", "classes", ",", "ys", ",", "xs", "=", "loss_topN", "(", "heat", ",", "N", "=", "1", ")", "\n", "offset", "=", "_tranpose_and_gather_feature", "(", "output_STA_offset", ",", "index_pred", ")", "#B N(1) 2*K", "\n", "\n", "#extract the objects to be trained", "\n", "# [B N 2*K]", "\n", "pred", "=", "pred_wh", "#* mask", "\n", "target", "=", "target_wh", "*", "mask", "\n", "centerKpoints", "=", "centerKpoints", "*", "mask", "\n", "# offset = offset * mask_expand", "\n", "\n", "# [B N]", "\n", "# xs = xs * mask", "\n", "# ys = ys * mask", "\n", "\n", "#only one box in IOD-Video dataset", "\n", "pred", "=", "pred", "[", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", "#B 1 2*K", "\n", "offset", "=", "offset", "[", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", "#B 1 2*K", "\n", "target", "=", "target", "[", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", "#B 1 2*K", "\n", "centerKpoints", "=", "centerKpoints", "[", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "1", ")", "\n", "xs", "=", "xs", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "\n", "ys", "=", "ys", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "# [B N 2*K] -> [B*N, K, 2]", "\n", "B", ",", "N", ",", "K2", "=", "pred", ".", "size", "(", ")", "\n", "K", "=", "K2", "//", "2", "\n", "pred", "=", "pred", ".", "view", "(", "B", ",", "N", ",", "K", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "pred", "=", "pred", ".", "view", "(", "B", "*", "N", ",", "K", ",", "2", ")", "\n", "target", "=", "target", ".", "view", "(", "B", ",", "N", ",", "K", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "target", "=", "target", ".", "view", "(", "B", "*", "N", ",", "K", ",", "2", ")", "\n", "centerKpoints", "=", "centerKpoints", ".", "view", "(", "B", ",", "N", ",", "K", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "centerKpoints", "=", "centerKpoints", ".", "view", "(", "B", "*", "N", ",", "K", ",", "2", ")", "\n", "offset", "=", "offset", ".", "view", "(", "B", ",", "N", ",", "K", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "offset", "=", "offset", ".", "view", "(", "B", "*", "N", ",", "K", ",", "2", ")", "\n", "\n", "# [B N ] -> [B*N, K]", "\n", "xs", "=", "xs", ".", "view", "(", "B", "*", "N", ",", "1", ")", ".", "repeat", "(", "1", ",", "K", ")", "\n", "ys", "=", "ys", ".", "view", "(", "B", "*", "N", ",", "1", ")", ".", "repeat", "(", "1", ",", "K", ")", "\n", "\n", "#predicted boxes for K frames", "\n", "pred_x1y1x2y2", "=", "torch", ".", "zeros", "(", "B", "*", "N", ",", "K", ",", "4", ")", ".", "cuda", "(", ")", "#B*N K 4", "\n", "target_x1y1x2y2", "=", "torch", ".", "zeros", "(", "B", "*", "N", ",", "K", ",", "4", ")", ".", "cuda", "(", ")", "#B*N K 4", "\n", "\n", "pred_x1y1x2y2", "[", ":", ",", ":", ",", "0", "]", "=", "xs", "+", "offset", "[", ":", ",", ":", ",", "0", "]", "*", "self", ".", "opt", ".", "offset_w_ratio", "-", "pred", "[", ":", ",", ":", ",", "0", "]", "*", "0.5", "\n", "pred_x1y1x2y2", "[", ":", ",", ":", ",", "1", "]", "=", "ys", "+", "offset", "[", ":", ",", ":", ",", "1", "]", "*", "self", ".", "opt", ".", "offset_h_ratio", "-", "pred", "[", ":", ",", ":", ",", "1", "]", "*", "0.5", "\n", "pred_x1y1x2y2", "[", ":", ",", ":", ",", "2", "]", "=", "xs", "+", "offset", "[", ":", ",", ":", ",", "0", "]", "*", "self", ".", "opt", ".", "offset_w_ratio", "+", "pred", "[", ":", ",", ":", ",", "0", "]", "*", "0.5", "\n", "pred_x1y1x2y2", "[", ":", ",", ":", ",", "3", "]", "=", "ys", "+", "offset", "[", ":", ",", ":", ",", "1", "]", "*", "self", ".", "opt", ".", "offset_h_ratio", "+", "pred", "[", ":", ",", ":", ",", "1", "]", "*", "0.5", "\n", "\n", "target_x1y1x2y2", "[", ":", ",", ":", ",", "0", "]", "=", "centerKpoints", "[", ":", ",", ":", ",", "0", "]", "-", "target", "[", ":", ",", ":", ",", "0", "]", "*", "0.5", "\n", "target_x1y1x2y2", "[", ":", ",", ":", ",", "1", "]", "=", "centerKpoints", "[", ":", ",", ":", ",", "1", "]", "-", "target", "[", ":", ",", ":", ",", "1", "]", "*", "0.5", "\n", "target_x1y1x2y2", "[", ":", ",", ":", ",", "2", "]", "=", "centerKpoints", "[", ":", ",", ":", ",", "0", "]", "+", "target", "[", ":", ",", ":", ",", "0", "]", "*", "0.5", "\n", "target_x1y1x2y2", "[", ":", ",", ":", ",", "3", "]", "=", "centerKpoints", "[", ":", ",", ":", ",", "1", "]", "+", "target", "[", ":", ",", ":", ",", "1", "]", "*", "0.5", "\n", "# print(\"target_x1y1x2y2 v5\",target_x1y1x2y2.sum().detach().cpu().numpy())", "\n", "# print(\"pred_x1y1x2y2 v5\",pred_x1y1x2y2.sum().detach().cpu().numpy())", "\n", "\n", "loss_3d_sin", ",", "loss_3d_cos", "=", "self", ".", "STAloss_core", "(", "pred_x1y1x2y2", ",", "target_x1y1x2y2", ",", "eps", "=", "1e-7", ")", "\n", "return", "loss_3d_sin", ",", "loss_3d_cos", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.STAloss.STAloss_core": [[194, 252], ["loss_sta_cos.view().squeeze.view().squeeze.view().squeeze", "loss_sta_sin.view().squeeze.view().squeeze.view().squeeze", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "loss_sta_cos.view().squeeze.view().squeeze.view", "loss_sta_sin.view().squeeze.view().squeeze.view"], "methods", ["None"], ["", "def", "STAloss_core", "(", "self", ",", "pred", ",", "target", ",", "eps", "=", "1e-7", ")", ":", "\n", "        ", "\"\"\"`\n        Args:\n            pred (Tensor): Predicted bboxes of format (x1, y1, x2, y2),\n                shape (n, K, 4).\n            target (Tensor): Corresponding gt bboxes, shape (n, K, 4).\n            B: BATCHSIZE\n        Return:\n            Tensor: Loss tensor.\n        \"\"\"", "\n", "\n", "# pred: B*N K 4   target: B*N K 4", "\n", "# Px1 Py1...: B*N K", "\n", "Px1", ",", "Py1", "=", "pred", "[", ":", ",", ":", ",", "0", "]", ",", "pred", "[", ":", ",", ":", ",", "1", "]", "\n", "Px2", ",", "Py2", "=", "pred", "[", ":", ",", ":", ",", "2", "]", ",", "pred", "[", ":", ",", ":", ",", "3", "]", "\n", "Gx1", ",", "Gy1", "=", "target", "[", ":", ",", ":", ",", "0", "]", ",", "target", "[", ":", ",", ":", ",", "1", "]", "\n", "Gx2", ",", "Gy2", "=", "target", "[", ":", ",", ":", ",", "2", "]", ",", "target", "[", ":", ",", ":", ",", "3", "]", "\n", "\n", "#boxes center", "\n", "Px", ",", "Py", "=", "(", "Px1", "+", "Px2", ")", "/", "2", ",", "(", "Py1", "+", "Py2", ")", "/", "2", "#B*N K", "\n", "Gx", ",", "Gy", "=", "(", "Gx1", "+", "Gx2", ")", "/", "2", ",", "(", "Gy1", "+", "Gy2", ")", "/", "2", "#B*N K", "\n", "\n", "# vector", "\n", "Px_nex", ",", "Gx_nex", "=", "Px", "[", ":", ",", "1", ":", "]", ",", "Gx", "[", ":", ",", "1", ":", "]", "#B*N K-1", "\n", "Px_pre", ",", "Gx_pre", "=", "Px", "[", ":", ",", ":", "-", "1", "]", ",", "Gx", "[", ":", ",", ":", "-", "1", "]", "\n", "Py_nex", ",", "Gy_nex", "=", "Py", "[", ":", ",", "1", ":", "]", ",", "Gy", "[", ":", ",", "1", ":", "]", "\n", "Py_pre", ",", "Gy_pre", "=", "Py", "[", ":", ",", ":", "-", "1", "]", ",", "Gy", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "Vggx", ",", "Vggy", "=", "Gx_nex", "-", "Gx_pre", ",", "Gy_nex", "-", "Gy_pre", "\n", "Vppx", ",", "Vppy", "=", "Px_nex", "-", "Px_pre", ",", "Py_nex", "-", "Py_pre", "\n", "Vgpx", ",", "Vgpy", "=", "Gx_nex", "-", "Px_pre", ",", "Gy_nex", "-", "Py_pre", "\n", "Vpgx", ",", "Vpgy", "=", "Px_nex", "-", "Gx_pre", ",", "Py_nex", "-", "Gy_pre", "\n", "\n", "DPpgx", ",", "DPpgy", "=", "Px_pre", "-", "Gx_pre", ",", "Py_pre", "-", "Gy_pre", "\n", "DNpgx", ",", "DNpgy", "=", "Px_nex", "-", "Gx_nex", ",", "Py_nex", "-", "Gy_nex", "\n", "\n", "#STAloss", "\n", "HH", "=", "self", ".", "opt", ".", "temporal_interal", "\n", "loss_sta_sin_P", "=", "torch", ".", "sqrt", "(", "DPpgx", "*", "DPpgx", "+", "DPpgy", "*", "DPpgy", "+", "eps", ")", "/", "torch", ".", "sqrt", "(", "Vgpx", "*", "Vgpx", "+", "Vgpy", "*", "Vgpy", "+", "HH", ")", "\n", "loss_sta_sin_N", "=", "torch", ".", "sqrt", "(", "DNpgx", "*", "DNpgx", "+", "DNpgy", "*", "DNpgy", "+", "eps", ")", "/", "torch", ".", "sqrt", "(", "Vpgx", "*", "Vpgx", "+", "Vpgy", "*", "Vpgy", "+", "HH", ")", "\n", "loss_sta_sin", "=", "(", "loss_sta_sin_P", "+", "loss_sta_sin_N", ")", "/", "2", "\n", "\n", "loss_sta_cross", "=", "(", "Vgpx", "*", "Vpgx", "+", "Vgpy", "*", "Vpgy", "+", "HH", ")", "/", "(", "torch", ".", "sqrt", "(", "Vgpx", "*", "Vgpx", "+", "Vgpy", "*", "Vgpy", "+", "HH", ")", "*", "torch", ".", "sqrt", "(", "Vpgx", "*", "Vpgx", "+", "Vpgy", "*", "Vpgy", "+", "HH", ")", ")", "\n", "loss_sta_own", "=", "(", "Vggx", "*", "Vppx", "+", "Vggy", "*", "Vppy", "+", "HH", ")", "/", "(", "torch", ".", "sqrt", "(", "Vggx", "*", "Vggx", "+", "Vggy", "*", "Vggy", "+", "HH", ")", "*", "torch", ".", "sqrt", "(", "Vppx", "*", "Vppx", "+", "Vppy", "*", "Vppy", "+", "HH", ")", ")", "\n", "loss_sta_cos", "=", "(", "loss_sta_cross", "+", "loss_sta_own", ")", "/", "2", "\n", "\n", "loss_sta_cos", "=", "loss_sta_cos", ".", "view", "(", "-", "1", ",", "1", ")", ".", "squeeze", "(", "1", ")", "\n", "loss_sta_sin", "=", "loss_sta_sin", ".", "view", "(", "-", "1", ",", "1", ")", ".", "squeeze", "(", "1", ")", "\n", "loss_sta_cos", "=", "1", "-", "loss_sta_cos", "\n", "\n", "loss_sta_sin", "=", "0.5", "*", "loss_sta_sin", "\n", "loss_sta_cos", "=", "0.5", "*", "loss_sta_cos", "\n", "\n", "return", "loss_sta_sin", ",", "loss_sta_cos", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.STAloss2.__init__": [[254, 257], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", "STAloss2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "opt", "=", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.STAloss2.forward": [[258, 331], ["utils.utils._tranpose_and_gather_feature", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.unsqueeze().expand_as().float", "losses.loss_nms", "losses.loss_topN", "utils.utils._tranpose_and_gather_feature", "pred_1.squeeze.squeeze.size", "pred_1.squeeze.squeeze.view().contiguous", "pred_1.squeeze.squeeze.view", "pred_1.squeeze.squeeze.squeeze", "offset_1.squeeze.squeeze.view().contiguous", "offset_1.squeeze.squeeze.view", "offset_1.squeeze.squeeze.squeeze", "target_1.squeeze.squeeze.view().contiguous", "target_1.squeeze.squeeze.view", "target_1.squeeze.squeeze.squeeze", "centerKpoints_1.squeeze.squeeze.view().contiguous", "centerKpoints_1.squeeze.squeeze.view", "centerKpoints_1.squeeze.squeeze.squeeze", "xs.repeat().view().squeeze.repeat().view().squeeze.repeat().view().squeeze", "ys.repeat().view().squeeze.repeat().view().squeeze.repeat().view().squeeze", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "losses.STAloss2.STAloss_core2", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.unsqueeze().expand_as", "pred_1.squeeze.squeeze.view", "offset_1.squeeze.squeeze.view", "target_1.squeeze.squeeze.view", "centerKpoints_1.squeeze.squeeze.view", "xs.repeat().view().squeeze.repeat().view().squeeze.repeat().view", "ys.repeat().view().squeeze.repeat().view().squeeze.repeat().view", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "mask.unsqueeze().expand_as().float.unsqueeze().expand_as().float.unsqueeze", "xs.repeat().view().squeeze.repeat().view().squeeze.repeat", "ys.repeat().view().squeeze.repeat().view().squeeze.repeat"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._tranpose_and_gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.loss_nms", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.loss_topN", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._tranpose_and_gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.STAloss2.STAloss_core2"], ["", "def", "forward", "(", "self", ",", "centerKpoints", ",", "target_wh", ",", "output_hm", ",", "output_wh", ",", "output_STA_offset", ",", "mask", ",", "index", ",", "index_all", "=", "None", ")", ":", "\n", "        ", "'''\n        Args:\n            centerKpoints: GT box centers of K frames\n            target_wh: GT box width and height of K frames\n            output_hm: predicted center heatmap\n            output_wh: predicted width and height of K frames\n            output_STA_offset: width and height offsets of STAloss\n            mask: mask indicate how many objects in this tube\n            index: index is key frame's boox center position\n            index_all: index_all are all frame's bbox center position\n        Returns:\n        '''", "\n", "\n", "#pred_wh:[B N 2*K] mask:[B N]->[B N 2*K]", "\n", "pred_wh", "=", "_tranpose_and_gather_feature", "(", "output_wh", ",", "index", ",", "index_all", "=", "index_all", ")", "\n", "mask", "=", "mask", ".", "unsqueeze", "(", "2", ")", ".", "expand_as", "(", "pred_wh", ")", ".", "float", "(", ")", "\n", "\n", "#heat:[B 1 W H ] offset:[B 1 2*K]  1:only one class", "\n", "#key frame center xs:[B 1]  ys:[B 1]", "\n", "heat", "=", "loss_nms", "(", "output_hm", ")", "# B 1 72 72", "\n", "scores", ",", "index_pred", ",", "classes", ",", "ys", ",", "xs", "=", "loss_topN", "(", "heat", ",", "N", "=", "1", ")", "#", "\n", "offset", "=", "_tranpose_and_gather_feature", "(", "output_STA_offset", ",", "index_pred", ")", "#B N(1) 2*K", "\n", "\n", "\n", "#[B N 2*K]->[B 1 2*K]-> [B 2*K]", "\n", "pred", "=", "pred_wh", "*", "mask", "\n", "target", "=", "target_wh", "*", "mask", "\n", "centerKpoints", "=", "centerKpoints", "*", "mask", "\n", "#due to only one box for every frame in IOD-Video", "\n", "pred_1", "=", "pred", "[", ":", ",", "0", ",", ":", "]", "\n", "offset_1", "=", "offset", "[", ":", ",", "0", ",", ":", "]", "\n", "target_1", "=", "target", "[", ":", ",", "0", ",", ":", "]", "\n", "centerKpoints_1", "=", "centerKpoints", "[", ":", ",", "0", ",", ":", "]", "\n", "\n", "#[B 2*K]->[B*K 2]", "\n", "B", ",", "K2", "=", "pred_1", ".", "size", "(", ")", "\n", "pred_1", "=", "pred_1", ".", "view", "(", "B", ",", "K2", "//", "2", ",", "2", ")", ".", "contiguous", "(", ")", "#B K 2", "\n", "pred_1", "=", "pred_1", ".", "view", "(", "B", "*", "K2", "//", "2", ",", "1", ",", "2", ")", "# B*K 1 2", "\n", "pred_1", "=", "pred_1", ".", "squeeze", "(", "1", ")", "#B*K 2", "\n", "offset_1", "=", "offset_1", ".", "view", "(", "B", ",", "K2", "//", "2", ",", "2", ")", ".", "contiguous", "(", ")", "#B K 2", "\n", "offset_1", "=", "offset_1", ".", "view", "(", "B", "*", "K2", "//", "2", ",", "1", ",", "2", ")", "# B*K 1 2", "\n", "offset_1", "=", "offset_1", ".", "squeeze", "(", "1", ")", "#B*K 2", "\n", "target_1", "=", "target_1", ".", "view", "(", "B", ",", "K2", "//", "2", ",", "2", ")", ".", "contiguous", "(", ")", "#B K 2", "\n", "target_1", "=", "target_1", ".", "view", "(", "B", "*", "K2", "//", "2", ",", "1", ",", "2", ")", "# B*K 1 2", "\n", "target_1", "=", "target_1", ".", "squeeze", "(", "1", ")", "#B*K 2", "\n", "centerKpoints_1", "=", "centerKpoints_1", ".", "view", "(", "B", ",", "K2", "//", "2", ",", "2", ")", ".", "contiguous", "(", ")", "#B K 2", "\n", "centerKpoints_1", "=", "centerKpoints_1", ".", "view", "(", "B", "*", "K2", "//", "2", ",", "1", ",", "2", ")", "# B*K 1 2", "\n", "centerKpoints_1", "=", "centerKpoints_1", ".", "squeeze", "(", "1", ")", "#B*K 2", "\n", "\n", "xs", "=", "xs", ".", "repeat", "(", "1", ",", "K2", "//", "2", ")", ".", "view", "(", "B", "*", "K2", "//", "2", ",", "1", ")", ".", "squeeze", "(", "1", ")", "#B*K 1 -> B*K", "\n", "ys", "=", "ys", ".", "repeat", "(", "1", ",", "K2", "//", "2", ")", ".", "view", "(", "B", "*", "K2", "//", "2", ",", "1", ")", ".", "squeeze", "(", "1", ")", "#B*K 1 -> B*K", "\n", "\n", "#predicted boxes for K frames", "\n", "pred_x1y1x2y2", "=", "torch", ".", "zeros", "(", "B", "*", "K2", "//", "2", ",", "4", ")", ".", "cuda", "(", ")", "#B*K 4", "\n", "target_x1y1x2y2", "=", "torch", ".", "zeros", "(", "B", "*", "K2", "//", "2", ",", "4", ")", ".", "cuda", "(", ")", "#B*K 4", "\n", "\n", "self", ".", "opt", ".", "offset_max", "=", "18", "\n", "#pred_x1y1x2y2:[B*K,4] target_x1y1x2y2:[B*K,4]", "\n", "pred_x1y1x2y2", "[", ":", ",", "0", "]", "=", "xs", "+", "offset_1", "[", ":", ",", "0", "]", "*", "self", ".", "opt", ".", "offset_max", "-", "pred_1", "[", ":", ",", "0", "]", "*", "0.5", "\n", "pred_x1y1x2y2", "[", ":", ",", "1", "]", "=", "ys", "+", "offset_1", "[", ":", ",", "1", "]", "*", "self", ".", "opt", ".", "offset_max", "-", "pred_1", "[", ":", ",", "1", "]", "*", "0.5", "\n", "pred_x1y1x2y2", "[", ":", ",", "2", "]", "=", "xs", "+", "offset_1", "[", ":", ",", "0", "]", "*", "self", ".", "opt", ".", "offset_max", "+", "pred_1", "[", ":", ",", "0", "]", "*", "0.5", "\n", "pred_x1y1x2y2", "[", ":", ",", "3", "]", "=", "ys", "+", "offset_1", "[", ":", ",", "1", "]", "*", "self", ".", "opt", ".", "offset_max", "+", "pred_1", "[", ":", ",", "1", "]", "*", "0.5", "\n", "\n", "target_x1y1x2y2", "[", ":", ",", "0", "]", "=", "centerKpoints_1", "[", ":", ",", "0", "]", "-", "target_1", "[", ":", ",", "0", "]", "*", "0.5", "\n", "target_x1y1x2y2", "[", ":", ",", "1", "]", "=", "centerKpoints_1", "[", ":", ",", "1", "]", "-", "target_1", "[", ":", ",", "1", "]", "*", "0.5", "\n", "target_x1y1x2y2", "[", ":", ",", "2", "]", "=", "centerKpoints_1", "[", ":", ",", "0", "]", "+", "target_1", "[", ":", ",", "0", "]", "*", "0.5", "\n", "target_x1y1x2y2", "[", ":", ",", "3", "]", "=", "centerKpoints_1", "[", ":", ",", "1", "]", "+", "target_1", "[", ":", ",", "1", "]", "*", "0.5", "\n", "# print(\"target_x1y1x2y2 v4\",target_x1y1x2y2.sum().detach().cpu().numpy())", "\n", "# print(\"pred_x1y1x2y2 v4\",pred_x1y1x2y2.sum().detach().cpu().numpy())", "\n", "\n", "loss_3d_sin", ",", "loss_3d_cos", "=", "self", ".", "STAloss_core2", "(", "pred_x1y1x2y2", ",", "target_x1y1x2y2", ",", "B", ",", "eps", "=", "1e-7", ")", "\n", "return", "loss_3d_sin", ",", "loss_3d_cos", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.STAloss2.STAloss_core2": [[333, 398], ["Px.view.view.view", "Py.view.view.view", "Gx.view.view.view", "Gy.view.view.view", "loss_sta_cos.view().squeeze.view().squeeze.view().squeeze", "loss_sta_sin.view().squeeze.view().squeeze.view().squeeze", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "loss_sta_cos.view().squeeze.view().squeeze.view", "loss_sta_sin.view().squeeze.view().squeeze.view"], "methods", ["None"], ["", "def", "STAloss_core2", "(", "self", ",", "pred", ",", "target", ",", "B", ",", "eps", "=", "1e-7", ")", ":", "\n", "        ", "\"\"\"`\n        Args:\n            pred (Tensor): Predicted bboxes of format (x1, y1, x2, y2),\n                shape (n, 4).\n            target (Tensor): Corresponding gt bboxes, shape (n, 4).\n            B: BATCHSIZE\n        Return:\n            Tensor: Loss tensor.\n        \"\"\"", "\n", "#predict boxes:[b1_x1,b1_y1,b1_x2,b1_y2]", "\n", "#Gt boxes[b2_x1,b2_y1,b2_x2,b2_y2]", "\n", "b1_x1", ",", "b1_y1", "=", "pred", "[", ":", ",", "0", "]", ",", "pred", "[", ":", ",", "1", "]", "\n", "b1_x2", ",", "b1_y2", "=", "pred", "[", ":", ",", "2", "]", ",", "pred", "[", ":", ",", "3", "]", "\n", "b2_x1", ",", "b2_y1", "=", "target", "[", ":", ",", "0", "]", ",", "target", "[", ":", ",", "1", "]", "\n", "b2_x2", ",", "b2_y2", "=", "target", "[", ":", ",", "2", "]", ",", "target", "[", ":", ",", "3", "]", "\n", "\n", "#boxes center", "\n", "Px", ",", "Py", "=", "(", "b1_x2", "+", "b1_x1", ")", "/", "2", ",", "(", "b1_y2", "+", "b1_y1", ")", "/", "2", "#B*K 1", "\n", "Gx", ",", "Gy", "=", "(", "b2_x2", "+", "b2_x1", ")", "/", "2", ",", "(", "b2_y2", "+", "b2_y1", ")", "/", "2", "#B*K 1", "\n", "\n", "Px", "=", "Px", ".", "view", "(", "B", ",", "-", "1", ")", "#B K", "\n", "Py", "=", "Py", ".", "view", "(", "B", ",", "-", "1", ")", "\n", "Gx", "=", "Gx", ".", "view", "(", "B", ",", "-", "1", ")", "\n", "Gy", "=", "Gy", ".", "view", "(", "B", ",", "-", "1", ")", "\n", "\n", "Px_nex", "=", "Px", "[", ":", ",", "1", ":", "]", "#B K-1", "\n", "Px_pre", "=", "Px", "[", ":", ",", ":", "-", "1", "]", "\n", "Py_nex", "=", "Py", "[", ":", ",", "1", ":", "]", "\n", "Py_pre", "=", "Py", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "Gx_nex", "=", "Gx", "[", ":", ",", "1", ":", "]", "#B K-1", "\n", "Gx_pre", "=", "Gx", "[", ":", ",", ":", "-", "1", "]", "\n", "Gy_nex", "=", "Gy", "[", ":", ",", "1", ":", "]", "\n", "Gy_pre", "=", "Gy", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "Vggx", ",", "Vggy", "=", "Gx_nex", "-", "Gx_pre", ",", "Gy_nex", "-", "Gy_pre", "\n", "Vppx", ",", "Vppy", "=", "Px_nex", "-", "Px_pre", ",", "Py_nex", "-", "Py_pre", "\n", "Vgpx", ",", "Vgpy", "=", "Gx_nex", "-", "Px_pre", ",", "Gy_nex", "-", "Py_pre", "\n", "Vpgx", ",", "Vpgy", "=", "Px_nex", "-", "Gx_pre", ",", "Py_nex", "-", "Gy_pre", "\n", "\n", "DPpgx", ",", "DPpgy", "=", "Px_pre", "-", "Gx_pre", ",", "Py_pre", "-", "Gy_pre", "\n", "DNpgx", ",", "DNpgy", "=", "Px_nex", "-", "Gx_nex", ",", "Py_nex", "-", "Gy_nex", "\n", "\n", "HH", "=", "self", ".", "opt", ".", "temporal_interal", "\n", "loss_sta_sin_P", "=", "torch", ".", "sqrt", "(", "DPpgx", "*", "DPpgx", "+", "DPpgy", "*", "DPpgy", "+", "eps", ")", "/", "torch", ".", "sqrt", "(", "Vgpx", "*", "Vgpx", "+", "Vgpy", "*", "Vgpy", "+", "HH", ")", "\n", "loss_sta_sin_N", "=", "torch", ".", "sqrt", "(", "DNpgx", "*", "DNpgx", "+", "DNpgy", "*", "DNpgy", "+", "eps", ")", "/", "torch", ".", "sqrt", "(", "Vpgx", "*", "Vpgx", "+", "Vpgy", "*", "Vpgy", "+", "HH", ")", "\n", "loss_sta_sin", "=", "(", "loss_sta_sin_P", "+", "loss_sta_sin_N", ")", "/", "2", "\n", "\n", "loss_sta_cross", "=", "(", "Vgpx", "*", "Vpgx", "+", "Vgpy", "*", "Vpgy", "+", "HH", ")", "/", "(", "torch", ".", "sqrt", "(", "Vgpx", "*", "Vgpx", "+", "Vgpy", "*", "Vgpy", "+", "HH", ")", "*", "torch", ".", "sqrt", "(", "Vpgx", "*", "Vpgx", "+", "Vpgy", "*", "Vpgy", "+", "HH", ")", ")", "\n", "loss_sta_own", "=", "(", "Vggx", "*", "Vppx", "+", "Vggy", "*", "Vppy", "+", "HH", ")", "/", "(", "torch", ".", "sqrt", "(", "Vggx", "*", "Vggx", "+", "Vggy", "*", "Vggy", "+", "HH", ")", "*", "torch", ".", "sqrt", "(", "Vppx", "*", "Vppx", "+", "Vppy", "*", "Vppy", "+", "HH", ")", ")", "\n", "loss_sta_cos", "=", "(", "loss_sta_cross", "+", "loss_sta_own", ")", "/", "2", "\n", "\n", "loss_sta_cos", "=", "loss_sta_cos", ".", "view", "(", "-", "1", ",", "1", ")", ".", "squeeze", "(", "1", ")", "\n", "loss_sta_sin", "=", "loss_sta_sin", ".", "view", "(", "-", "1", ",", "1", ")", ".", "squeeze", "(", "1", ")", "\n", "loss_sta_cos", "=", "1", "-", "loss_sta_cos", "\n", "\n", "loss_sta_sin", "=", "loss_sta_sin", "/", "2", "\n", "loss_sta_cos", "=", "loss_sta_cos", "/", "2", "\n", "\n", "return", "loss_sta_sin", ",", "loss_sta_cos", "", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.loss_nms": [[19, 27], ["torch.functional.max_pool2d"], "function", ["None"], ["def", "loss_nms", "(", "heat", ",", "kernel", "=", "3", ")", ":", "\n", "    ", "pad", "=", "(", "kernel", "-", "1", ")", "//", "2", "\n", "\n", "hmax", "=", "nn", ".", "functional", ".", "max_pool2d", "(", "\n", "heat", ",", "(", "kernel", ",", "kernel", ")", ",", "stride", "=", "1", ",", "padding", "=", "pad", ")", "\n", "keep", "=", "(", "hmax", "==", "heat", ")", ".", "float", "(", ")", "\n", "\n", "return", "heat", "*", "keep", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses.loss_topN": [[29, 48], ["scores.size", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "utils.utils._gather_feature().view", "utils.utils._gather_feature().view", "utils.utils._gather_feature().view", "scores.view", "topk_scores.view", "utils.utils._gather_feature", "utils.utils._gather_feature", "utils.utils._gather_feature", "_gather_feature().view.view", "_gather_feature().view.view", "_gather_feature().view.view"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._gather_feature"], ["", "def", "loss_topN", "(", "scores", ",", "N", "=", "40", ")", ":", "\n", "    ", "batch", ",", "cat", ",", "height", ",", "width", "=", "scores", ".", "size", "(", ")", "\n", "\n", "# each class, top N in h*w    [b, c, N]", "\n", "topk_scores", ",", "topk_index", "=", "torch", ".", "topk", "(", "scores", ".", "view", "(", "batch", ",", "cat", ",", "-", "1", ")", ",", "N", ")", "\n", "\n", "topk_index", "=", "topk_index", "%", "(", "height", "*", "width", ")", "\n", "topk_ys", "=", "(", "topk_index", "/", "width", ")", ".", "int", "(", ")", ".", "float", "(", ")", "\n", "topk_xs", "=", "(", "topk_index", "%", "width", ")", ".", "int", "(", ")", ".", "float", "(", ")", "\n", "\n", "# cross class, top N    [b, N]", "\n", "topk_score", ",", "topk_ind", "=", "torch", ".", "topk", "(", "topk_scores", ".", "view", "(", "batch", ",", "-", "1", ")", ",", "N", ")", "\n", "\n", "topk_classes", "=", "(", "topk_ind", "/", "N", ")", ".", "int", "(", ")", "\n", "topk_index", "=", "_gather_feature", "(", "topk_index", ".", "view", "(", "batch", ",", "-", "1", ",", "1", ")", ",", "topk_ind", ")", ".", "view", "(", "batch", ",", "N", ")", "\n", "topk_ys", "=", "_gather_feature", "(", "topk_ys", ".", "view", "(", "batch", ",", "-", "1", ",", "1", ")", ",", "topk_ind", ")", ".", "view", "(", "batch", ",", "N", ")", "\n", "topk_xs", "=", "_gather_feature", "(", "topk_xs", ".", "view", "(", "batch", ",", "-", "1", ",", "1", ")", ",", "topk_ind", ")", ".", "view", "(", "batch", ",", "N", ")", "\n", "\n", "return", "topk_score", ",", "topk_index", ",", "topk_classes", ",", "topk_ys", ",", "topk_xs", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.losses._neg_loss": [[51, 76], ["gt.eq().float", "gt.lt().float", "torch.pow", "torch.pow", "torch.pow", "gt.eq().float.float().sum", "pos_loss.sum.sum", "neg_loss.sum.sum", "gt.eq", "gt.lt", "torch.log", "torch.log", "torch.log", "torch.pow", "torch.pow", "torch.pow", "gt.eq().float.float", "torch.log", "torch.log", "torch.log", "torch.pow", "torch.pow", "torch.pow"], "function", ["None"], ["", "def", "_neg_loss", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "''' Modified focal loss. Exactly the same as CornerNet.\n        Runs faster and costs a little bit more memory\n      Arguments:\n        pred (batch x c x h x w)\n        gt_regr (batch x c x h x w)\n    '''", "\n", "pos_inds", "=", "gt", ".", "eq", "(", "1", ")", ".", "float", "(", ")", "\n", "neg_inds", "=", "gt", ".", "lt", "(", "1", ")", ".", "float", "(", ")", "\n", "\n", "neg_weights", "=", "torch", ".", "pow", "(", "1", "-", "gt", ",", "4", ")", "\n", "\n", "loss", "=", "0", "\n", "\n", "pos_loss", "=", "torch", ".", "log", "(", "pred", ")", "*", "torch", ".", "pow", "(", "1", "-", "pred", ",", "2", ")", "*", "pos_inds", "\n", "neg_loss", "=", "torch", ".", "log", "(", "1", "-", "pred", ")", "*", "torch", ".", "pow", "(", "pred", ",", "2", ")", "*", "neg_weights", "*", "neg_inds", "\n", "\n", "num_pos", "=", "pos_inds", ".", "float", "(", ")", ".", "sum", "(", ")", "\n", "pos_loss", "=", "pos_loss", ".", "sum", "(", ")", "\n", "neg_loss", "=", "neg_loss", ".", "sum", "(", ")", "\n", "if", "num_pos", "==", "0", ":", "\n", "        ", "loss", "=", "loss", "-", "neg_loss", "\n", "", "else", ":", "\n", "        ", "loss", "=", "loss", "-", "(", "pos_loss", "+", "neg_loss", ")", "/", "num_pos", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.PrefetchDataset.__init__": [[31, 49], ["range", "os.path.exists", "normal_inference.PrefetchDataset.outfile"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.PrefetchDataset.outfile"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "dataset", ",", "pre_process_func", ")", ":", "\n", "        ", "self", ".", "pre_process_func", "=", "pre_process_func", "\n", "self", ".", "opt", "=", "opt", "\n", "self", ".", "K", "=", "opt", ".", "K", "\n", "self", ".", "vlist", "=", "dataset", ".", "_test_videos", "[", "dataset", ".", "split", "-", "1", "]", "\n", "self", ".", "gttubes", "=", "dataset", ".", "_gttubes", "\n", "self", ".", "nframes", "=", "dataset", ".", "_nframes", "\n", "self", ".", "imagefile", "=", "dataset", ".", "imagefile", "\n", "self", ".", "resolution", "=", "dataset", ".", "_resolution", "\n", "self", ".", "input_h", "=", "dataset", ".", "_resize_height", "\n", "self", ".", "input_w", "=", "dataset", ".", "_resize_width", "\n", "self", ".", "output_h", "=", "self", ".", "input_h", "//", "self", ".", "opt", ".", "down_ratio", "\n", "self", ".", "output_w", "=", "self", ".", "input_w", "//", "self", ".", "opt", ".", "down_ratio", "\n", "self", ".", "indices", "=", "[", "]", "\n", "for", "v", "in", "self", ".", "vlist", ":", "\n", "            ", "for", "i", "in", "range", "(", "1", ",", "1", "+", "self", ".", "nframes", "[", "v", "]", "-", "self", ".", "opt", ".", "K", "+", "1", ")", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "outfile", "(", "v", ",", "i", ")", ")", ":", "\n", "                         ", "self", ".", "indices", "+=", "[", "(", "v", ",", "i", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.PrefetchDataset.__getitem__": [[51, 79], ["normal_inference.PrefetchDataset.outfile", "normal_inference.PrefetchDataset.pre_process_func", "os.path.isdir", "os.system", "range", "os.path.dirname", "cv2.imread().astype", "normal_inference.PrefetchDataset.append", "cv2.imread().astype", "range", "os.path.dirname", "cv2.imread", "cv2.imread", "normal_inference.PrefetchDataset.imagefile", "normal_inference.PrefetchDataset.imagefile"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.PrefetchDataset.outfile", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_dataset.VisualizationDataset.imagefile", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_dataset.VisualizationDataset.imagefile"], ["", "", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "v", ",", "frame", "=", "self", ".", "indices", "[", "index", "]", "\n", "h", ",", "w", "=", "self", ".", "resolution", "[", "v", "]", "\n", "images", "=", "[", "]", "\n", "\n", "if", "self", ".", "opt", ".", "rgb_model", "!=", "''", ":", "\n", "            ", "if", "self", ".", "opt", ".", "arch", "==", "'TDNresnet_50'", ":", "\n", "                ", "images", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "K", "+", "4", ")", ":", "\n", "                    ", "frame_i", "=", "frame", "+", "i", "-", "2", "\n", "video_len", "=", "self", ".", "nframes", "[", "v", "]", "\n", "if", "(", "frame_i", ">", "video_len", ")", ":", "\n", "                        ", "frame_i", "=", "video_len", "\n", "", "if", "(", "frame_i", "<", "1", ")", ":", "\n", "                        ", "frame_i", "=", "1", "\n", "", "image", "=", "cv2", ".", "imread", "(", "self", ".", "imagefile", "(", "v", ",", "frame_i", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "images", ".", "append", "(", "image", ")", "\n", "", "K", "=", "self", ".", "K", "+", "4", "\n", "", "else", ":", "\n", "                ", "images", "=", "[", "cv2", ".", "imread", "(", "self", ".", "imagefile", "(", "v", ",", "frame", "+", "i", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "self", ".", "opt", ".", "K", ")", "]", "\n", "K", "=", "self", ".", "K", "\n", "", "images", "=", "self", ".", "pre_process_func", "(", "images", ",", "K", ")", "\n", "\n", "", "outfile", "=", "self", ".", "outfile", "(", "v", ",", "frame", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "dirname", "(", "outfile", ")", ")", ":", "\n", "            ", "os", ".", "system", "(", "\"mkdir -p '\"", "+", "os", ".", "path", ".", "dirname", "(", "outfile", ")", "+", "\"'\"", ")", "\n", "\n", "", "return", "{", "'outfile'", ":", "outfile", ",", "'images'", ":", "images", ",", "'meta'", ":", "{", "'height'", ":", "h", ",", "'width'", ":", "w", ",", "'output_height'", ":", "self", ".", "output_h", ",", "'output_width'", ":", "self", ".", "output_w", "}", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.PrefetchDataset.outfile": [[80, 82], ["os.path.join"], "methods", ["None"], ["", "def", "outfile", "(", "self", ",", "v", ",", "i", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "opt", ".", "inference_dir", ",", "v", ",", "\"{:0>5}.pkl\"", ".", "format", "(", "i", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.PrefetchDataset.__len__": [[83, 85], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.set_seed": [[20, 26], ["torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "random.seed", "numpy.random.seed"], "function", ["None"], ["def", "set_seed", "(", "seed", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.worker_init_fn": [[27, 29], ["normal_inference.set_seed"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.set_seed"], ["", "def", "worker_init_fn", "(", "dump", ")", ":", "\n", "    ", "set_seed", "(", "GLOBAL_SEED", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.inference.normal_inference.normal_inference": [[87, 125], ["opts.opts().update_dataset", "Dataset", "detector.normal_det.Detector", "normal_inference.PrefetchDataset", "len", "torch.utils.data.DataLoader", "len", "progress.bar.Bar", "print", "print", "enumerate", "progress.bar.Bar.finish", "len", "detector.normal_det.Detector.run", "range", "progress.bar.Bar.next", "opts.opts", "len", "open", "pickle.dump"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.src_IOD.opts.opts.update_dataset", "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.run"], ["", "", "def", "normal_inference", "(", "opt", ",", "drop_last", "=", "False", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "opt", ".", "gpus_str", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "Dataset", "=", "switch_dataset", "[", "opt", ".", "dataset", "]", "\n", "opt", "=", "opts", "(", ")", ".", "update_dataset", "(", "opt", ",", "Dataset", ")", "\n", "\n", "dataset", "=", "Dataset", "(", "opt", ",", "'test'", ")", "\n", "detector", "=", "Detector", "(", "opt", ")", "\n", "prefetch_dataset", "=", "PrefetchDataset", "(", "opt", ",", "dataset", ",", "detector", ".", "pre_process", ")", "\n", "total_num", "=", "len", "(", "prefetch_dataset", ")", "\n", "data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "prefetch_dataset", ",", "\n", "batch_size", "=", "opt", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "opt", ".", "num_workers", ",", "\n", "pin_memory", "=", "opt", ".", "pin_memory", ",", "\n", "drop_last", "=", "drop_last", ",", "\n", "worker_init_fn", "=", "worker_init_fn", ")", "\n", "\n", "num_iters", "=", "len", "(", "data_loader", ")", "\n", "bar", "=", "Bar", "(", "opt", ".", "exp_id", ",", "max", "=", "num_iters", ")", "\n", "\n", "print", "(", "'inference chunk_sizes:'", ",", "opt", ".", "chunk_sizes", ")", "\n", "print", "(", "len", "(", "data_loader", ")", ")", "\n", "for", "iter", ",", "data", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "        ", "outfile", "=", "data", "[", "'outfile'", "]", "\n", "detections", "=", "detector", ".", "run", "(", "data", ")", "\n", "#save the inference results", "\n", "for", "i", "in", "range", "(", "len", "(", "outfile", ")", ")", ":", "\n", "            ", "with", "open", "(", "outfile", "[", "i", "]", ",", "'wb'", ")", "as", "file", ":", "\n", "                ", "pickle", ".", "dump", "(", "detections", "[", "i", "]", ",", "file", ")", "\n", "\n", "", "", "Bar", ".", "suffix", "=", "'inference: [{0}/{1}]|Tot: {total:} |ETA: {eta:} '", ".", "format", "(", "\n", "iter", ",", "num_iters", ",", "total", "=", "bar", ".", "elapsed_td", ",", "eta", "=", "bar", ".", "eta_td", ")", "\n", "bar", ".", "next", "(", ")", "\n", "", "bar", ".", "finish", "(", ")", "\n", "return", "total_num", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.__init__": [[29, 45], ["torch.device", "torch.device", "print", "utils.model.create_model", "utils.model.load_model", "utils.data_parallel.DataParallel().to", "normal_det.Detector.rgb_model.eval", "utils.data_parallel.DataParallel"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.create_model", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.model.load_model", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.data_parallel.DataParallel"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "gpus", "[", "0", "]", ">=", "0", ":", "\n", "            ", "opt", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "", "else", ":", "\n", "            ", "opt", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "", "self", ".", "rgb_model", "=", "None", "\n", "if", "opt", ".", "rgb_model", "!=", "''", ":", "\n", "            ", "print", "(", "'create rgb model'", ")", "\n", "self", ".", "rgb_model", "=", "create_model", "(", "opt", ".", "arch", ",", "opt", ".", "branch_info", ",", "opt", ".", "head_conv", ",", "opt", ".", "K", ")", "\n", "self", ".", "rgb_model", "=", "load_model", "(", "self", ".", "rgb_model", ",", "opt", ".", "rgb_model", ")", "\n", "self", ".", "rgb_model", "=", "DataParallel", "(", "\n", "self", ".", "rgb_model", ",", "device_ids", "=", "opt", ".", "gpus", ",", "\n", "chunk_sizes", "=", "opt", ".", "chunk_sizes", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "self", ".", "rgb_model", ".", "eval", "(", ")", "\n", "", "self", ".", "num_classes", "=", "opt", ".", "num_classes", "\n", "self", ".", "opt", "=", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.pre_process": [[46, 61], ["numpy.tile", "numpy.tile", "range", "cv2.resize", "numpy.empty", "numpy.transpose", "range", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "pre_process", "(", "self", ",", "images", ",", "K", ")", ":", "\n", "\n", "#K = self.opt.K", "\n", "        ", "images", "=", "[", "cv2", ".", "resize", "(", "im", ",", "(", "self", ".", "opt", ".", "resize_height", ",", "self", ".", "opt", ".", "resize_width", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "for", "im", "in", "images", "]", "\n", "\n", "data", "=", "[", "np", ".", "empty", "(", "(", "3", ",", "self", ".", "opt", ".", "resize_height", ",", "self", ".", "opt", ".", "resize_width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "K", ")", "]", "\n", "\n", "mean", "=", "np", ".", "tile", "(", "np", ".", "array", "(", "self", ".", "opt", ".", "mean", ",", "dtype", "=", "np", ".", "float32", ")", "[", ":", ",", "None", ",", "None", "]", ",", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "std", "=", "np", ".", "tile", "(", "np", ".", "array", "(", "self", ".", "opt", ".", "std", ",", "dtype", "=", "np", ".", "float32", ")", "[", ":", ",", "None", ",", "None", "]", ",", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "            ", "data", "[", "i", "]", "[", "0", ":", "3", ",", ":", ",", ":", "]", "=", "np", ".", "transpose", "(", "images", "[", "i", "]", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "# normalize", "\n", "data", "[", "i", "]", "=", "(", "(", "data", "[", "i", "]", "/", "255.", ")", "-", "mean", ")", "/", "std", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.process": [[62, 73], ["torch.no_grad", "decode.decode.decode", "normal_det.Detector.rgb_model", "[].sigmoid_"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.detector.decode.decode"], ["", "def", "process", "(", "self", ",", "images", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "self", ".", "rgb_model", "is", "not", "None", ":", "\n", "                ", "rgb_output", "=", "self", ".", "rgb_model", "(", "images", ")", "\n", "hm", "=", "rgb_output", "[", "0", "]", "[", "'hm'", "]", ".", "sigmoid_", "(", ")", "\n", "wh", "=", "rgb_output", "[", "0", "]", "[", "'wh'", "]", "\n", "STAoffset", "=", "rgb_output", "[", "0", "]", "[", "'STA_offset'", "]", "\n", "mov", "=", "rgb_output", "[", "0", "]", "[", "'mov'", "]", "\n", "\n", "", "detections", "=", "decode", "(", "hm", ",", "wh", ",", "mov", ",", "STAoffset", ",", "self", ".", "opt", ",", "N", "=", "self", ".", "opt", ".", "N", ",", "K", "=", "self", ".", "opt", ".", "K", ")", "\n", "return", "detections", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.post_process": [[74, 91], ["detections.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "range", "range", "range", "results.append", "detections.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "numpy.maximum", "numpy.maximum", "detections[].astype", "numpy.minimum", "numpy.minimum", "detections.detach().cpu().numpy.detach().cpu().numpy.detach"], "methods", ["None"], ["", "", "def", "post_process", "(", "self", ",", "detections", ",", "height", ",", "width", ",", "output_height", ",", "output_width", ",", "K", ")", ":", "\n", "        ", "detections", "=", "detections", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "results", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "detections", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "top_preds", "=", "{", "}", "\n", "for", "j", "in", "range", "(", "(", "detections", ".", "shape", "[", "2", "]", "-", "2", ")", "//", "2", ")", ":", "\n", "# tailor bbox to prevent out of bounds", "\n", "                ", "detections", "[", "i", ",", ":", ",", "2", "*", "j", "]", "=", "np", ".", "maximum", "(", "0", ",", "np", ".", "minimum", "(", "width", "-", "1", ",", "detections", "[", "i", ",", ":", ",", "2", "*", "j", "]", "/", "output_width", "*", "width", ")", ")", "\n", "detections", "[", "i", ",", ":", ",", "2", "*", "j", "+", "1", "]", "=", "np", ".", "maximum", "(", "0", ",", "np", ".", "minimum", "(", "height", "-", "1", ",", "detections", "[", "i", ",", ":", ",", "2", "*", "j", "+", "1", "]", "/", "output_height", "*", "height", ")", ")", "\n", "", "classes", "=", "detections", "[", "i", ",", ":", ",", "-", "1", "]", "\n", "# gather bbox for each class", "\n", "for", "c", "in", "range", "(", "self", ".", "opt", ".", "num_classes", ")", ":", "\n", "                ", "inds", "=", "(", "classes", "==", "c", ")", "\n", "top_preds", "[", "c", "+", "1", "]", "=", "detections", "[", "i", ",", "inds", ",", ":", "4", "*", "K", "+", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "results", ".", "append", "(", "top_preds", ")", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.run": [[92, 111], ["normal_det.Detector.process", "normal_det.Detector.post_process", "range", "len", "images[].to", "v.numpy", "meta.items"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.process", "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.post_process"], ["", "def", "run", "(", "self", ",", "data", ")", ":", "\n", "\n", "        ", "images", "=", "None", "\n", "\n", "if", "self", ".", "rgb_model", "is", "not", "None", ":", "\n", "            ", "images", "=", "data", "[", "'images'", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "images", ")", ")", ":", "\n", "                ", "images", "[", "i", "]", "=", "images", "[", "i", "]", ".", "to", "(", "self", ".", "opt", ".", "device", ")", "\n", "\n", "", "", "meta", "=", "data", "[", "'meta'", "]", "\n", "meta", "=", "{", "k", ":", "v", ".", "numpy", "(", ")", "[", "0", "]", "for", "k", ",", "v", "in", "meta", ".", "items", "(", ")", "}", "\n", "\n", "detections", "=", "self", ".", "process", "(", "images", ")", "\n", "\n", "detections", "=", "self", ".", "post_process", "(", "detections", ",", "meta", "[", "'height'", "]", ",", "meta", "[", "'width'", "]", ",", "\n", "meta", "[", "'output_height'", "]", ",", "meta", "[", "'output_width'", "]", ",", "\n", "self", ".", "opt", ".", "K", ")", "\n", "\n", "return", "detections", "\n", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.decode._nms": [[9, 17], ["torch.functional.max_pool2d"], "function", ["None"], ["def", "_nms", "(", "heat", ",", "kernel", "=", "3", ")", ":", "\n", "    ", "pad", "=", "(", "kernel", "-", "1", ")", "//", "2", "\n", "\n", "hmax", "=", "nn", ".", "functional", ".", "max_pool2d", "(", "\n", "heat", ",", "(", "kernel", ",", "kernel", ")", ",", "stride", "=", "1", ",", "padding", "=", "pad", ")", "\n", "keep", "=", "(", "hmax", "==", "heat", ")", ".", "float", "(", ")", "\n", "\n", "return", "heat", "*", "keep", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.decode._topN": [[18, 37], ["scores.size", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "utils.utils._gather_feature().view", "utils.utils._gather_feature().view", "utils.utils._gather_feature().view", "scores.view", "topk_scores.view", "utils.utils._gather_feature", "utils.utils._gather_feature", "utils.utils._gather_feature", "_gather_feature().view.view", "_gather_feature().view.view", "_gather_feature().view.view"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._gather_feature"], ["", "def", "_topN", "(", "scores", ",", "N", "=", "40", ")", ":", "\n", "    ", "batch", ",", "cat", ",", "height", ",", "width", "=", "scores", ".", "size", "(", ")", "\n", "\n", "# each class, top N in h*w    [b, c, N]", "\n", "topk_scores", ",", "topk_index", "=", "torch", ".", "topk", "(", "scores", ".", "view", "(", "batch", ",", "cat", ",", "-", "1", ")", ",", "N", ")", "\n", "\n", "topk_index", "=", "topk_index", "%", "(", "height", "*", "width", ")", "\n", "topk_ys", "=", "(", "topk_index", "/", "width", ")", ".", "int", "(", ")", ".", "float", "(", ")", "\n", "topk_xs", "=", "(", "topk_index", "%", "width", ")", ".", "int", "(", ")", ".", "float", "(", ")", "\n", "\n", "# cross class, top N    [b, N]", "\n", "topk_score", ",", "topk_ind", "=", "torch", ".", "topk", "(", "topk_scores", ".", "view", "(", "batch", ",", "-", "1", ")", ",", "N", ")", "\n", "\n", "topk_classes", "=", "(", "topk_ind", "/", "N", ")", ".", "int", "(", ")", "\n", "topk_index", "=", "_gather_feature", "(", "topk_index", ".", "view", "(", "batch", ",", "-", "1", ",", "1", ")", ",", "topk_ind", ")", ".", "view", "(", "batch", ",", "N", ")", "\n", "topk_ys", "=", "_gather_feature", "(", "topk_ys", ".", "view", "(", "batch", ",", "-", "1", ",", "1", ")", ",", "topk_ind", ")", ".", "view", "(", "batch", ",", "N", ")", "\n", "topk_xs", "=", "_gather_feature", "(", "topk_xs", ".", "view", "(", "batch", ",", "-", "1", ",", "1", ")", ",", "topk_ind", ")", ".", "view", "(", "batch", ",", "N", ")", "\n", "\n", "return", "topk_score", ",", "topk_index", ",", "topk_classes", ",", "topk_ys", ",", "topk_xs", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.decode.decode": [[38, 95], ["_nms.size", "decode._nms", "decode._topN", "utils.utils._tranpose_and_gather_feature", "mov.view.view", "mov.view.clone", "mov_copy.view.view", "torch.zeros().cuda", "torch.zeros().cuda", "xs.view.clone().unsqueeze().expand", "ys.view.clone().unsqueeze().expand", "xs_all.long.long", "ys_all.long.long", "index_all.view().long.view().long", "utils.utils._tranpose_and_gather_feature", "wh.view.view", "utils.utils._tranpose_and_gather_feature", "STAoffset.view.view", "classes.view().float.view().float", "scores.view.view", "xs.view.view", "ys.view.view", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "xs.view.clone().unsqueeze", "ys.view.clone().unsqueeze", "index_all.view().long.view", "classes.view().float.view", "torch.cat.extend", "torch.cat.extend", "xs.view.clone", "ys.view.clone"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.detector.decode._nms", "home.repos.pwc.inspect_result.calayzhou_iod-video.detector.decode._topN", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._tranpose_and_gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._tranpose_and_gather_feature", "home.repos.pwc.inspect_result.calayzhou_iod-video.utils.utils._tranpose_and_gather_feature"], ["", "def", "decode", "(", "heat", ",", "wh", ",", "mov", ",", "STAoffset", ",", "opt", ",", "N", "=", "100", ",", "K", "=", "8", ")", ":", "\n", "    ", "batch", ",", "cat", ",", "height", ",", "width", "=", "heat", ".", "size", "(", ")", "\n", "\n", "# perform 'nms' on heatmaps", "\n", "heat", "=", "_nms", "(", "heat", ")", "\n", "scores", ",", "index", ",", "classes", ",", "ys", ",", "xs", "=", "_topN", "(", "heat", ",", "N", "=", "N", ")", "\n", "\n", "mov", "=", "_tranpose_and_gather_feature", "(", "mov", ",", "index", ")", "\n", "mov", "=", "mov", ".", "view", "(", "batch", ",", "N", ",", "2", "*", "K", ")", "\n", "\n", "mov_copy", "=", "mov", ".", "clone", "(", ")", "\n", "mov_copy", "=", "mov_copy", ".", "view", "(", "batch", ",", "N", ",", "K", ",", "2", ")", "\n", "index_all", "=", "torch", ".", "zeros", "(", "(", "batch", ",", "N", ",", "K", ",", "2", ")", ")", ".", "cuda", "(", ")", "\n", "xs_all", "=", "xs", ".", "clone", "(", ")", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "batch", ",", "N", ",", "K", ")", "\n", "ys_all", "=", "ys", ".", "clone", "(", ")", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "batch", ",", "N", ",", "K", ")", "\n", "if", "opt", ".", "loss_option", "==", "'MOV'", ":", "\n", "        ", "xs_all", "=", "xs_all", "+", "mov_copy", "[", ":", ",", ":", ",", ":", ",", "0", "]", "\n", "ys_all", "=", "ys_all", "+", "mov_copy", "[", ":", ",", ":", ",", ":", ",", "1", "]", "\n", "", "xs_all", "[", ":", ",", ":", ",", "K", "//", "2", "]", "=", "xs", "\n", "ys_all", "[", ":", ",", ":", ",", "K", "//", "2", "]", "=", "ys", "\n", "\n", "xs_all", "=", "xs_all", ".", "long", "(", ")", "\n", "ys_all", "=", "ys_all", ".", "long", "(", ")", "\n", "\n", "index_all", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "xs_all", "+", "ys_all", "*", "width", "\n", "index_all", "[", ":", ",", ":", ",", ":", ",", "1", "]", "=", "xs_all", "+", "ys_all", "*", "width", "\n", "index_all", "[", "index_all", "<", "0", "]", "=", "0", "\n", "index_all", "[", "index_all", ">", "width", "*", "height", "-", "1", "]", "=", "width", "*", "height", "-", "1", "\n", "index_all", "=", "index_all", ".", "view", "(", "batch", ",", "N", ",", "K", "*", "2", ")", ".", "long", "(", ")", "\n", "\n", "# gather wh in each location after movement", "\n", "wh", "=", "_tranpose_and_gather_feature", "(", "wh", ",", "index", ",", "index_all", "=", "index_all", ")", "\n", "wh", "=", "wh", ".", "view", "(", "batch", ",", "N", ",", "2", "*", "K", ")", "\n", "\n", "STAoffset", "=", "_tranpose_and_gather_feature", "(", "STAoffset", ",", "index", ",", "index_all", "=", "index_all", ")", "\n", "STAoffset", "=", "STAoffset", ".", "view", "(", "batch", ",", "N", ",", "2", "*", "K", ")", "\n", "\n", "classes", "=", "classes", ".", "view", "(", "batch", ",", "N", ",", "1", ")", ".", "float", "(", ")", "\n", "scores", "=", "scores", ".", "view", "(", "batch", ",", "N", ",", "1", ")", "\n", "xs", "=", "xs", ".", "view", "(", "batch", ",", "N", ",", "1", ")", "\n", "ys", "=", "ys", ".", "view", "(", "batch", ",", "N", ",", "1", ")", "\n", "bboxes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "        ", "if", "opt", ".", "loss_option", "==", "'MOV'", ":", "\n", "            ", "bboxes", ".", "extend", "(", "[", "xs", "+", "mov", "[", "...", ",", "2", "*", "i", ":", "2", "*", "i", "+", "1", "]", "-", "wh", "[", "...", ",", "2", "*", "i", ":", "2", "*", "i", "+", "1", "]", "/", "2", ",", "\n", "ys", "+", "mov", "[", "...", ",", "2", "*", "i", "+", "1", ":", "2", "*", "i", "+", "2", "]", "-", "wh", "[", "...", ",", "2", "*", "i", "+", "1", ":", "2", "*", "i", "+", "2", "]", "/", "2", ",", "\n", "xs", "+", "mov", "[", "...", ",", "2", "*", "i", ":", "2", "*", "i", "+", "1", "]", "+", "wh", "[", "...", ",", "2", "*", "i", ":", "2", "*", "i", "+", "1", "]", "/", "2", ",", "\n", "ys", "+", "mov", "[", "...", ",", "2", "*", "i", "+", "1", ":", "2", "*", "i", "+", "2", "]", "+", "wh", "[", "...", ",", "2", "*", "i", "+", "1", ":", "2", "*", "i", "+", "2", "]", "/", "2", "]", ")", "\n", "", "else", ":", "\n", "            ", "bboxes", ".", "extend", "(", "[", "xs", "+", "STAoffset", "[", "...", ",", "2", "*", "i", ":", "2", "*", "i", "+", "1", "]", "*", "opt", ".", "offset_w_ratio", "-", "wh", "[", "...", ",", "2", "*", "i", ":", "2", "*", "i", "+", "1", "]", "/", "2", ",", "\n", "ys", "+", "STAoffset", "[", "...", ",", "2", "*", "i", "+", "1", ":", "2", "*", "i", "+", "2", "]", "*", "opt", ".", "offset_h_ratio", "-", "wh", "[", "...", ",", "2", "*", "i", "+", "1", ":", "2", "*", "i", "+", "2", "]", "/", "2", ",", "\n", "xs", "+", "STAoffset", "[", "...", ",", "2", "*", "i", ":", "2", "*", "i", "+", "1", "]", "*", "opt", ".", "offset_w_ratio", "+", "wh", "[", "...", ",", "2", "*", "i", ":", "2", "*", "i", "+", "1", "]", "/", "2", ",", "\n", "ys", "+", "STAoffset", "[", "...", ",", "2", "*", "i", "+", "1", ":", "2", "*", "i", "+", "2", "]", "*", "opt", ".", "offset_h_ratio", "+", "wh", "[", "...", ",", "2", "*", "i", "+", "1", ":", "2", "*", "i", "+", "2", "]", "/", "2", "]", ")", "\n", "", "", "bboxes", "=", "torch", ".", "cat", "(", "bboxes", ",", "dim", "=", "2", ")", "\n", "detections", "=", "torch", ".", "cat", "(", "[", "bboxes", ",", "scores", ",", "classes", "]", ",", "dim", "=", "2", ")", "\n", "\n", "return", "detections", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_dataset.VisualizationDataset.__init__": [[12, 26], ["torch.Dataset.__init__", "os.listdir", "os.path.join", "jpg.endswith", "jpg.endswith"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "\n", "        ", "super", "(", "VisualizationDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "K", "=", "opt", ".", "K", "\n", "self", ".", "opt", "=", "opt", "\n", "self", ".", "inference_dir", "=", "opt", ".", "inference_dir", "\n", "\n", "# self._ninput = opt.ninput", "\n", "self", ".", "_resize_height", "=", "opt", ".", "resize_height", "\n", "self", ".", "_resize_width", "=", "opt", ".", "resize_width", "\n", "self", ".", "_nframes", "=", "0", "\n", "for", "jpg", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "inference_dir", ",", "'VideoFrames'", ")", ")", ":", "\n", "            ", "if", "jpg", ".", "endswith", "(", "'.jpg'", ")", "or", "jpg", ".", "endswith", "(", "'.png'", ")", ":", "\n", "                ", "self", ".", "_nframes", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_dataset.VisualizationDataset.imagefile": [[27, 29], ["os.path.join"], "methods", ["None"], ["", "", "", "def", "imagefile", "(", "self", ",", "fid", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "inference_dir", ",", "'VideoFrames'", ",", "'{:0>5}.jpg'", ".", "format", "(", "fid", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.takeLast": [[11, 13], ["None"], "function", ["None"], ["def", "takeLast", "(", "elem", ")", ":", "\n", "    ", "return", "elem", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.pkl_decode": [[14, 41], ["print", "pickle.load.keys", "open", "pickle.load", "os.path.join", "len", "out.sort", "range", "bbox_dict[].append", "bbox_dict[].append"], "function", ["None"], ["", "def", "pkl_decode", "(", "opt", ")", ":", "\n", "    ", "print", "(", "'build finish, decode detection results'", ",", "flush", "=", "True", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "inference_dir", ",", "'tubes.pkl'", ")", ",", "'rb'", ")", "as", "fid", ":", "\n", "        ", "pkl", "=", "pickle", ".", "load", "(", "fid", ")", "\n", "\n", "", "bbox_dict", "=", "{", "}", "\n", "tube_id", "=", "0", "\n", "for", "label", "in", "pkl", ".", "keys", "(", ")", ":", "\n", "        ", "out", "=", "pkl", "[", "label", "]", "\n", "if", "len", "(", "out", ")", ">", "0", ":", "\n", "            ", "out", ".", "sort", "(", "key", "=", "takeLast", ",", "reverse", "=", "True", ")", "\n", "for", "tube", "in", "out", ":", "\n", "                ", "tube_score", "=", "tube", "[", "1", "]", "\n", "if", "tube_score", ">", "opt", ".", "tube_vis_th", ":", "\n", "                    ", "label_name", "=", "label_class", "[", "label", "]", "\n", "for", "frame", "in", "range", "(", "tube", "[", "0", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "                        ", "frame_score", "=", "tube", "[", "0", "]", "[", "frame", "]", "[", "5", "]", "\n", "if", "frame_score", ">", "opt", ".", "frame_vis_th", ":", "\n", "                            ", "fid", "=", "tube", "[", "0", "]", "[", "frame", "]", "[", "0", "]", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "tube", "[", "0", "]", "[", "frame", "]", "[", "1", "]", ",", "tube", "[", "0", "]", "[", "frame", "]", "[", "2", "]", ",", "tube", "[", "0", "]", "[", "frame", "]", "[", "3", "]", ",", "tube", "[", "0", "]", "[", "frame", "]", "[", "4", "]", "\n", "if", "fid", "not", "in", "bbox_dict", ":", "\n", "                                ", "bbox_dict", "[", "fid", "]", "=", "[", "]", "\n", "bbox_dict", "[", "fid", "]", ".", "append", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "frame_score", ",", "label_name", ",", "tube_id", "]", ")", "\n", "", "else", ":", "\n", "                                ", "bbox_dict", "[", "fid", "]", ".", "append", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "frame_score", ",", "label_name", ",", "tube_id", "]", ")", "\n", "", "", "", "tube_id", "+=", "1", "\n", "", "", "", "", "return", "bbox_dict", "#{frame:[x1, y1, x2, y2, frame_score, label_name, tube_id]}", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.vis_bbox": [[43, 86], ["print", "os.listdir", "os.listdir.sort", "os.path.isdir", "os.system", "os.path.dirname", "pic.endswith", "pic.endswith", "matplotlib.pyplot.imread", "matplotlib.pyplot.figure", "plt.figure.add_axes", "fig.add_axes.axis", "fig.add_axes.imshow", "int", "os.path.join", "matplotlib.pyplot.savefig", "float", "float", "pic.split", "matplotlib.pyplot.savefig", "fig.add_axes.add_patch", "fig.add_axes.text", "matplotlib.pyplot.savefig", "matplotlib.pyplot.Rectangle", "dict", "len"], "function", ["None"], ["", "def", "vis_bbox", "(", "opt", ",", "inference_dir", ",", "bbox_dict", ",", "instance_level", "=", "False", ")", ":", "\n", "    ", "print", "(", "'draw bboxes on each frame'", ",", "flush", "=", "True", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "dirname", "(", "'tmp'", ")", ")", ":", "\n", "        ", "os", ".", "system", "(", "\"mkdir -p tmp\"", ")", "\n", "", "dpi", "=", "80", "\n", "im_list", "=", "os", ".", "listdir", "(", "inference_dir", ")", "\n", "im_list", ".", "sort", "(", ")", "\n", "for", "pic", "in", "im_list", ":", "\n", "        ", "if", "pic", ".", "endswith", "(", "'.jpg'", ")", "or", "pic", ".", "endswith", "(", "'.png'", ")", ":", "\n", "            ", "im_data", "=", "plt", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "inference_dir", ",", "pic", ")", ")", "\n", "height", ",", "width", ",", "nbands", "=", "im_data", ".", "shape", "\n", "figsize", "=", "width", "/", "float", "(", "dpi", ")", ",", "height", "/", "float", "(", "dpi", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "figsize", ")", "\n", "ax", "=", "fig", ".", "add_axes", "(", "[", "0", ",", "0", ",", "1", ",", "1", "]", ")", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "imshow", "(", "im_data", ",", "interpolation", "=", "'nearest'", ")", "\n", "fid", "=", "int", "(", "pic", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "if", "fid", "not", "in", "bbox_dict", ":", "\n", "                ", "plt", ".", "savefig", "(", "'tmp/'", "+", "pic", ")", "\n", "continue", "\n", "", "bbox_list", "=", "bbox_dict", "[", "fid", "]", "\n", "for", "bbox", "in", "bbox_list", ":", "\n", "                ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "bbox", "[", "0", "]", ",", "bbox", "[", "1", "]", ",", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", "\n", "\n", "if", "bbox", "[", "4", "]", "<", "opt", ".", "simple_th", "and", "opt", ".", "SimpleFrameProcess", ":", "\n", "                    ", "plt", ".", "savefig", "(", "'tmp/'", "+", "pic", ")", "\n", "", "else", ":", "\n", "                    ", "edgecolor", "=", "instance_color", "[", "bbox", "[", "6", "]", "]", "if", "instance_level", "and", "bbox", "[", "6", "]", "<", "len", "(", "instance_color", ")", "else", "'yellow'", "\n", "ax", ".", "add_patch", "(", "plt", ".", "Rectangle", "(", "\n", "(", "x1", ",", "y1", ")", ",", "\n", "x2", "-", "x1", ",", "\n", "y2", "-", "y1", ",", "\n", "fill", "=", "False", ",", "\n", "edgecolor", "=", "edgecolor", ",", "\n", "linewidth", "=", "2", ")", ")", "\n", "\n", "text", "=", "bbox", "[", "5", "]", "+", "', '", "+", "\"%.2f\"", "%", "bbox", "[", "4", "]", "\n", "\n", "ax", ".", "text", "(", "x1", "-", "2", ",", "y1", "-", "10", ",", "\n", "text", ",", "\n", "bbox", "=", "dict", "(", "facecolor", "=", "'navy'", ",", "alpha", "=", "0.7", ")", ",", "\n", "fontsize", "=", "12", ",", "color", "=", "'yellow'", ")", "\n", "plt", ".", "savefig", "(", "'tmp/'", "+", "pic", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.video2frames": [[88, 100], ["print", "cv2.VideoCapture", "cv2.VideoCapture.read", "os.path.join", "cv2.imwrite", "cv2.VideoCapture.read", "os.path.join"], "function", ["None"], ["", "", "", "", "", "def", "video2frames", "(", "opt", ")", ":", "\n", "# if opt.pre_extracted_brox_flow:", "\n", "#     pre_extracted_frames(opt)", "\n", "# else:", "\n", "    ", "print", "(", "'start extracting frames'", ")", "\n", "vidcap", "=", "cv2", ".", "VideoCapture", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "DATA_ROOT", ",", "opt", ".", "vname", ")", ")", "\n", "success", ",", "image", "=", "vidcap", ".", "read", "(", ")", "\n", "fid", "=", "1", "\n", "while", "success", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "inference_dir", ",", "'VideoFrames'", ",", "'{:0>5}.jpg'", ".", "format", "(", "fid", ")", ")", ",", "image", ")", "\n", "fid", "=", "fid", "+", "1", "\n", "success", ",", "image", "=", "vidcap", ".", "read", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.rgb2avi": [[108, 125], ["print", "cv2.VideoWriter_fourcc", "cv2.VideoWriter", "os.listdir", "os.listdir.sort", "cv2.VideoWriter.release", "cv2.destroyAllWindows", "cv2.imread", "pic.endswith", "pic.endswith", "cv2.VideoWriter.write", "cv2.imread", "os.path.join"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.trainer.logger.Logger.write"], ["", "", "def", "rgb2avi", "(", "inference_dir", ",", "video_name", "=", "'result_video.avi'", ")", ":", "\n", "    ", "print", "(", "'convert .JPG to .AVI'", ",", "flush", "=", "True", ")", "\n", "fps", "=", "25", "\n", "height", ",", "width", ",", "_", "=", "cv2", ".", "imread", "(", "'tmp/00001.jpg'", ")", ".", "shape", "\n", "size", "=", "(", "width", ",", "height", ")", "\n", "\n", "fourcc", "=", "cv2", ".", "VideoWriter_fourcc", "(", "*", "'MPEG'", ")", "\n", "video", "=", "cv2", ".", "VideoWriter", "(", "inference_dir", "+", "'/'", "+", "video_name", ",", "fourcc", ",", "fps", ",", "size", ")", "\n", "\n", "filelist", "=", "os", ".", "listdir", "(", "'tmp'", ")", "\n", "filelist", ".", "sort", "(", ")", "\n", "for", "pic", "in", "filelist", ":", "\n", "        ", "if", "pic", ".", "endswith", "(", "'.jpg'", ")", "or", "pic", ".", "endswith", "(", "'.png'", ")", ":", "\n", "            ", "video", ".", "write", "(", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "'tmp'", ",", "pic", ")", ")", ")", "\n", "\n", "", "", "video", ".", "release", "(", ")", "\n", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "# os.system(\"rm -rf tmp\")", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.rgb2gif": [[130, 141], ["print", "os.listdir", "os.listdir.sort", "imageio.mimsave", "pic.endswith", "pic.endswith", "GIF.append", "cv2.imread", "os.path.join"], "function", ["None"], ["", "def", "rgb2gif", "(", "opt", ")", ":", "\n", "    ", "print", "(", "'convert .JPG to .GIF'", ",", "flush", "=", "True", ")", "\n", "import", "imageio", "\n", "GIF", "=", "[", "]", "\n", "filelist", "=", "os", ".", "listdir", "(", "'tmp'", ")", "\n", "filelist", ".", "sort", "(", ")", "\n", "for", "pic", "in", "filelist", ":", "\n", "        ", "if", "pic", ".", "endswith", "(", "'.jpg'", ")", "or", "pic", ".", "endswith", "(", "'.png'", ")", ":", "\n", "            ", "pic", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "'tmp'", ",", "pic", ")", ")", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "GIF", ".", "append", "(", "pic", ")", "\n", "", "", "imageio", ".", "mimsave", "(", "opt", ".", "inference_dir", "+", "'/'", "+", "opt", ".", "vname", "[", ":", "-", "4", "]", "+", "'.gif'", ",", "GIF", ",", "duration", "=", "0.04", ")", "# the lower duration, the quicker gif speed", "\n", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.build.build_tubes": [[17, 131], ["print", "vis_dataset.VisualizationDataset", "os.path.join", "range", "range", "os.system", "os.path.join", "range", "open", "pickle.dump", "os.path.isfile", "print", "sys.exit", "open", "pickle.load", "numpy.mean", "ACT_utils.ACT_utils.nms_tubelets", "numpy.argsort", "enumerate", "range", "build.build_tubes.tubescore"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.threed_models.i3d_resnet.IOD_I3D_ResNet.mean", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.nms_tubelets"], ["def", "build_tubes", "(", "opt", ")", ":", "\n", "    ", "print", "(", "'inference finish, start building tubes!'", ",", "flush", "=", "True", ")", "\n", "K", "=", "opt", ".", "K", "\n", "dataset", "=", "VisualizationDataset", "(", "opt", ")", "\n", "\n", "outfile", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "inference_dir", ",", "\"tubes.pkl\"", ")", "\n", "\n", "RES", "=", "{", "}", "\n", "# load detected tubelets", "\n", "VDets", "=", "{", "}", "\n", "for", "startframe", "in", "range", "(", "1", ",", "dataset", ".", "_nframes", "+", "2", "-", "K", ")", ":", "\n", "        ", "resname", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "inference_dir", ",", "'VideoFrames'", ",", "\"{:0>5}.pkl\"", ".", "format", "(", "startframe", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "resname", ")", ":", "\n", "            ", "print", "(", "\"ERROR: Missing extracted tubelets \"", "+", "resname", ",", "flush", "=", "True", ")", "\n", "sys", ".", "exit", "(", ")", "\n", "\n", "", "with", "open", "(", "resname", ",", "'rb'", ")", "as", "fid", ":", "\n", "            ", "VDets", "[", "startframe", "]", "=", "pickle", ".", "load", "(", "fid", ")", "\n", "", "", "for", "ilabel", "in", "range", "(", "opt", ".", "num_classes", ")", ":", "\n", "        ", "FINISHED_TUBES", "=", "[", "]", "\n", "CURRENT_TUBES", "=", "[", "]", "# tubes is a list of tuple (frame, lstubelets)", "\n", "# calculate average scores of tubelets in tubes", "\n", "\n", "def", "tubescore", "(", "tt", ")", ":", "\n", "            ", "return", "np", ".", "mean", "(", "np", ".", "array", "(", "[", "tt", "[", "i", "]", "[", "1", "]", "[", "-", "1", "]", "for", "i", "in", "range", "(", "len", "(", "tt", ")", ")", "]", ")", ")", "\n", "\n", "", "for", "frame", "in", "range", "(", "1", ",", "dataset", ".", "_nframes", "+", "2", "-", "K", ")", ":", "\n", "# load boxes of the new frame and do nms while keeping Nkeep highest scored", "\n", "            ", "ltubelets", "=", "VDets", "[", "frame", "]", "[", "ilabel", "+", "1", "]", "# [:,range(4*K) + [4*K + 1 + ilabel]]  Nx(4K+1) with (x1 y1 x2 y2)*K ilabel-score", "\n", "#nms in a single frame", "\n", "ltubelets", "=", "nms_tubelets", "(", "ltubelets", ",", "0.6", ",", "top_k", "=", "10", ")", "\n", "\n", "# just start new tubes", "\n", "if", "frame", "==", "1", ":", "\n", "                ", "for", "i", "in", "range", "(", "ltubelets", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "CURRENT_TUBES", ".", "append", "(", "[", "(", "1", ",", "ltubelets", "[", "i", ",", ":", "]", ")", "]", ")", "\n", "", "continue", "\n", "\n", "# sort current tubes according to average score", "\n", "", "avgscore", "=", "[", "tubescore", "(", "t", ")", "for", "t", "in", "CURRENT_TUBES", "]", "\n", "argsort", "=", "np", ".", "argsort", "(", "-", "np", ".", "array", "(", "avgscore", ")", ")", "\n", "CURRENT_TUBES", "=", "[", "CURRENT_TUBES", "[", "i", "]", "for", "i", "in", "argsort", "]", "\n", "# loop over tubes", "\n", "finished", "=", "[", "]", "\n", "for", "it", ",", "t", "in", "enumerate", "(", "CURRENT_TUBES", ")", ":", "\n", "# compute ious between the last box of t and ltubelets", "\n", "                ", "last_frame", ",", "last_tubelet", "=", "t", "[", "-", "1", "]", "\n", "ious", "=", "[", "]", "\n", "offset", "=", "frame", "-", "last_frame", "\n", "if", "offset", "<", "K", ":", "\n", "                    ", "nov", "=", "K", "-", "offset", "\n", "ious", "=", "sum", "(", "[", "iou2d", "(", "ltubelets", "[", ":", ",", "4", "*", "iov", ":", "4", "*", "iov", "+", "4", "]", ",", "last_tubelet", "[", "4", "*", "(", "iov", "+", "offset", ")", ":", "4", "*", "(", "iov", "+", "offset", "+", "1", ")", "]", ")", "for", "iov", "in", "range", "(", "nov", ")", "]", ")", "/", "float", "(", "nov", ")", "\n", "", "else", ":", "\n", "                    ", "ious", "=", "iou2d", "(", "ltubelets", "[", ":", ",", ":", "4", "]", ",", "last_tubelet", "[", "4", "*", "K", "-", "4", ":", "4", "*", "K", "]", ")", "\n", "\n", "", "valid", "=", "np", ".", "where", "(", "ious", ">=", "0.5", ")", "[", "0", "]", "\n", "\n", "if", "valid", ".", "size", ">", "0", ":", "\n", "# take the one with maximum score", "\n", "                    ", "idx", "=", "valid", "[", "np", ".", "argmax", "(", "ltubelets", "[", "valid", ",", "-", "1", "]", ")", "]", "\n", "CURRENT_TUBES", "[", "it", "]", ".", "append", "(", "(", "frame", ",", "ltubelets", "[", "idx", ",", ":", "]", ")", ")", "\n", "ltubelets", "=", "np", ".", "delete", "(", "ltubelets", ",", "idx", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "                    ", "if", "offset", ">=", "opt", ".", "K", ":", "\n", "                        ", "finished", ".", "append", "(", "it", ")", "\n", "\n", "# finished tubes that are done", "\n", "", "", "", "for", "it", "in", "finished", "[", ":", ":", "-", "1", "]", ":", "# process in reverse order to delete them with the right index why --++--", "\n", "                ", "FINISHED_TUBES", ".", "append", "(", "CURRENT_TUBES", "[", "it", "]", "[", ":", "]", ")", "\n", "del", "CURRENT_TUBES", "[", "it", "]", "\n", "\n", "# start new tubes", "\n", "", "for", "i", "in", "range", "(", "ltubelets", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "CURRENT_TUBES", ".", "append", "(", "[", "(", "frame", ",", "ltubelets", "[", "i", ",", ":", "]", ")", "]", ")", "\n", "\n", "# all tubes are not finished", "\n", "", "", "FINISHED_TUBES", "+=", "CURRENT_TUBES", "\n", "\n", "# build real tubes", "\n", "output", "=", "[", "]", "\n", "for", "t", "in", "FINISHED_TUBES", ":", "\n", "            ", "score", "=", "tubescore", "(", "t", ")", "\n", "\n", "# just start new tubes", "\n", "if", "score", "<", "0.005", ":", "\n", "                ", "continue", "\n", "\n", "", "beginframe", "=", "t", "[", "0", "]", "[", "0", "]", "\n", "endframe", "=", "t", "[", "-", "1", "]", "[", "0", "]", "+", "K", "-", "1", "\n", "length", "=", "endframe", "+", "1", "-", "beginframe", "\n", "\n", "# delete tubes with short duraton", "\n", "if", "length", "<", "15", ":", "\n", "                ", "continue", "\n", "\n", "# build final tubes by average the tubelets", "\n", "", "out", "=", "np", ".", "zeros", "(", "(", "length", ",", "6", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "out", "[", ":", ",", "0", "]", "=", "np", ".", "arange", "(", "beginframe", ",", "endframe", "+", "1", ")", "\n", "n_per_frame", "=", "np", ".", "zeros", "(", "(", "length", ",", "1", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "t", ")", ")", ":", "\n", "                ", "frame", ",", "box", "=", "t", "[", "i", "]", "\n", "for", "k", "in", "range", "(", "K", ")", ":", "\n", "                    ", "out", "[", "frame", "-", "beginframe", "+", "k", ",", "1", ":", "5", "]", "+=", "box", "[", "4", "*", "k", ":", "4", "*", "k", "+", "4", "]", "\n", "out", "[", "frame", "-", "beginframe", "+", "k", ",", "-", "1", "]", "+=", "box", "[", "-", "1", "]", "# single frame confidence", "\n", "n_per_frame", "[", "frame", "-", "beginframe", "+", "k", ",", "0", "]", "+=", "1", "\n", "", "", "out", "[", ":", ",", "1", ":", "]", "/=", "n_per_frame", "\n", "output", ".", "append", "(", "[", "out", ",", "score", "]", ")", "\n", "# out: [num_frames, (frame idx, x1, y1, x2, y2, score)]", "\n", "\n", "", "RES", "[", "ilabel", "]", "=", "output", "\n", "# RES{ilabel:[(out[length,6],score)]}ilabel[0,...]", "\n", "", "os", ".", "system", "(", "\"rm -rf \"", "+", "opt", ".", "inference_dir", "+", "\"/*.pkl\"", ")", "\n", "with", "open", "(", "outfile", ",", "'wb'", ")", "as", "fid", ":", "\n", "        ", "pickle", ".", "dump", "(", "RES", ",", "fid", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.PrefetchDataset.__init__": [[21, 37], ["range", "cv2.imread", "os.path.exists", "vis_det.PrefetchDataset.indices.append", "vis_det.PrefetchDataset.imagefile", "vis_det.PrefetchDataset.outfile"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_dataset.VisualizationDataset.imagefile", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.PrefetchDataset.outfile"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "dataset", ",", "pre_process", ")", ":", "\n", "        ", "self", ".", "pre_process", "=", "pre_process", "\n", "self", ".", "opt", "=", "opt", "\n", "self", ".", "nframes", "=", "dataset", ".", "_nframes", "\n", "self", ".", "imagefile", "=", "dataset", ".", "imagefile", "\n", "\n", "self", ".", "input_h", "=", "dataset", ".", "_resize_height", "\n", "self", ".", "input_w", "=", "dataset", ".", "_resize_width", "\n", "self", ".", "output_h", "=", "self", ".", "input_h", "//", "self", ".", "opt", ".", "down_ratio", "\n", "self", ".", "output_w", "=", "self", ".", "input_w", "//", "self", ".", "opt", ".", "down_ratio", "\n", "self", ".", "indices", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "1", "+", "self", ".", "nframes", "-", "self", ".", "opt", ".", "K", "+", "1", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "outfile", "(", "i", ")", ")", ":", "\n", "                ", "self", ".", "indices", ".", "append", "(", "i", ")", "\n", "", "", "self", ".", "last_frame", "=", "-", "1", "\n", "self", ".", "h", ",", "self", ".", "w", ",", "_", "=", "cv2", ".", "imread", "(", "self", ".", "imagefile", "(", "1", ")", ")", ".", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.PrefetchDataset.__getitem__": [[38, 57], ["vis_det.PrefetchDataset.pre_process", "vis_det.PrefetchDataset.outfile", "cv2.imread().astype", "os.path.isdir", "os.system", "range", "os.path.dirname", "cv2.imread", "vis_det.PrefetchDataset.imagefile", "os.path.dirname"], "methods", ["home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.pre_process", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.PrefetchDataset.outfile", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_dataset.VisualizationDataset.imagefile"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "frame", "=", "self", ".", "indices", "[", "index", "]", "\n", "\n", "# if there is a new video", "\n", "if", "frame", "==", "self", ".", "last_frame", "+", "1", ":", "\n", "            ", "video_tag", "=", "1", "\n", "", "else", ":", "\n", "            ", "video_tag", "=", "0", "\n", "\n", "", "self", ".", "last_frame", "=", "frame", "\n", "\n", "images", "=", "[", "cv2", ".", "imread", "(", "self", ".", "imagefile", "(", "frame", "+", "i", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "self", ".", "opt", ".", "K", ")", "]", "\n", "images", "=", "self", ".", "pre_process", "(", "images", ")", "\n", "\n", "outfile", "=", "self", ".", "outfile", "(", "frame", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "dirname", "(", "outfile", ")", ")", ":", "\n", "            ", "os", ".", "system", "(", "\"mkdir -p '\"", "+", "os", ".", "path", ".", "dirname", "(", "outfile", ")", "+", "\"'\"", ")", "\n", "\n", "", "return", "{", "'outfile'", ":", "outfile", ",", "'images'", ":", "images", ",", "'meta'", ":", "{", "'height'", ":", "self", ".", "h", ",", "'width'", ":", "self", ".", "w", ",", "'output_height'", ":", "self", ".", "output_h", ",", "'output_width'", ":", "self", ".", "output_w", "}", ",", "'video_tag'", ":", "video_tag", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.PrefetchDataset.outfile": [[58, 60], ["os.path.join"], "methods", ["None"], ["", "def", "outfile", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "opt", ".", "inference_dir", ",", "'VideoFrames'", ",", "\"{:0>5}.pkl\"", ".", "format", "(", "i", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.PrefetchDataset.__len__": [[61, 63], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.demo_inference": [[65, 90], ["vis_dataset.VisualizationDataset", "detector.normal_det.Detector", "vis_det.PrefetchDataset", "torch.utils.data.DataLoader", "print", "enumerate", "detector.normal_det.Detector.run", "range", "len", "open", "pickle.dump"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.run"], ["", "", "def", "demo_inference", "(", "opt", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "\"0\"", "\n", "# torch.backends.cudnn.benchmark = True", "\n", "\n", "dataset", "=", "VisualizationDataset", "(", "opt", ")", "\n", "detector", "=", "Detector", "(", "opt", ")", "\n", "prefetch_dataset", "=", "PrefetchDataset", "(", "opt", ",", "dataset", ",", "detector", ".", "pre_process", ")", "#, detector.pre_process_single_frame)", "\n", "data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "prefetch_dataset", ",", "\n", "batch_size", "=", "1", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "0", ",", "\n", "pin_memory", "=", "False", ",", "\n", "drop_last", "=", "False", ")", "\n", "\n", "print", "(", "'inference begin!'", ",", "flush", "=", "True", ")", "\n", "for", "iter", ",", "data", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "\n", "        ", "outfile", "=", "data", "[", "'outfile'", "]", "\n", "\n", "detections", "=", "detector", ".", "run", "(", "data", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "outfile", ")", ")", ":", "\n", "            ", "with", "open", "(", "outfile", "[", "i", "]", ",", "'wb'", ")", "as", "file", ":", "\n", "                ", "pickle", ".", "dump", "(", "detections", "[", "i", "]", ",", "file", ")", "#{Class1: N 4*K+1}", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.simple_inference": [[92, 125], ["vis_dataset.VisualizationDataset", "detector.normal_det.Detector", "vis_det.PrefetchDataset", "torch.utils.data.DataLoader", "print", "enumerate", "print", "range", "detector.normal_det.Detector.run", "ACT_utils.ACT_utils.nms_tubelets", "bbox_dict[].append"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.detector.normal_det.Detector.run", "home.repos.pwc.inspect_result.calayzhou_iod-video.ACT_utils.ACT_utils.nms_tubelets"], ["", "", "", "", "def", "simple_inference", "(", "opt", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "\"0\"", "\n", "# torch.backends.cudnn.benchmark = True", "\n", "dataset", "=", "VisualizationDataset", "(", "opt", ")", "\n", "detector", "=", "Detector", "(", "opt", ")", "\n", "prefetch_dataset", "=", "PrefetchDataset", "(", "opt", ",", "dataset", ",", "detector", ".", "pre_process", ")", "#, detector.pre_process_single_frame)", "\n", "data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "prefetch_dataset", ",", "\n", "batch_size", "=", "1", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "0", ",", "\n", "pin_memory", "=", "False", ",", "\n", "drop_last", "=", "False", ")", "\n", "VDets", "=", "{", "}", "\n", "K", "=", "opt", ".", "K", "\n", "label_name", ",", "tube_id", "=", "'LeakedGas'", ",", "0", "\n", "print", "(", "'inference begin!'", ",", "flush", "=", "True", ")", "\n", "for", "iter", ",", "data", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "        ", "detections", "=", "detector", ".", "run", "(", "data", ")", "\n", "VDets", "[", "iter", "+", "1", "]", "=", "nms_tubelets", "(", "detections", "[", "0", "]", "[", "1", "]", ",", "0.6", ",", "top_k", "=", "1", ")", "\n", "", "print", "(", "'inference finish!'", ",", "flush", "=", "True", ")", "\n", "\n", "# load detected tubelets", "\n", "bbox_dict", "=", "{", "}", "\n", "for", "frame", "in", "range", "(", "1", ",", "dataset", ".", "_nframes", "+", "2", "-", "K", ")", ":", "\n", "        ", "bbox_dict", "[", "frame", "]", "=", "[", "]", "\n", "#simply retain only one box", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "frame_score", "=", "VDets", "[", "frame", "]", "[", "0", ",", "0", "]", ",", "VDets", "[", "frame", "]", "[", "0", ",", "1", "]", ",", "VDets", "[", "frame", "]", "[", "0", ",", "2", "]", ",", "VDets", "[", "frame", "]", "[", "0", ",", "3", "]", ",", "VDets", "[", "frame", "]", "[", "0", ",", "-", "1", "]", "\n", "\n", "bbox_dict", "[", "frame", "]", ".", "append", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "frame_score", ",", "label_name", ",", "tube_id", "]", ")", "\n", "\n", "#bbox_dict {frame:[x1, y1, x2, y2, frame_score, label_name, tube_id]}", "\n", "", "return", "bbox_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.det": [[126, 164], ["tiny_opt.opts().parse", "os.system", "os.system", "os.system", "print", "vis_utils.video2frames", "os.system", "os.system", "print", "vis_det.simple_inference", "vis_utils.vis_bbox", "vis_utils.rgb2avi", "vis_det.demo_inference", "build.build_tubes", "vis_utils.pkl_decode", "vis_utils.vis_bbox", "vis_utils.rgb2avi", "vis_utils.rgb2gif", "tiny_opt.opts", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.parse", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.video2frames", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.simple_inference", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.vis_bbox", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.rgb2avi", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_det.demo_inference", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.build.build_tubes", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.pkl_decode", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.vis_bbox", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.rgb2avi", "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.vis_utils.rgb2gif"], ["", "def", "det", "(", ")", ":", "\n", "    ", "opt", "=", "opts", "(", ")", ".", "parse", "(", ")", "\n", "os", ".", "system", "(", "\"rm -rf \"", "+", "os", ".", "path", ".", "join", "(", "opt", ".", "inference_dir", ",", "'VideoFrames'", ")", ")", "#+ \"/*\")", "\n", "os", ".", "system", "(", "\"rm -rf tmp\"", ")", "\n", "os", ".", "system", "(", "\"mkdir -p '\"", "+", "os", ".", "path", ".", "join", "(", "opt", ".", "inference_dir", ",", "'VideoFrames'", ")", "+", "\"'\"", ")", "\n", "\n", "print", "(", "'inference '", "+", "opt", ".", "vname", "+", "' start!'", ")", "\n", "\n", "#extract frames from video", "\n", "video2frames", "(", "opt", ")", "\n", "\n", "#process in a simple way", "\n", "if", "opt", ".", "SimpleFrameProcess", ":", "\n", "        ", "bbox_dict_frame", "=", "simple_inference", "(", "opt", ")", "\n", "vis_bbox", "(", "opt", ",", "os", ".", "path", ".", "join", "(", "opt", ".", "inference_dir", ",", "'VideoFrames'", ")", ",", "bbox_dict_frame", ",", "opt", ".", "instance_level", ")", "\n", "rgb2avi", "(", "opt", ".", "inference_dir", ",", "opt", ".", "vname", "+", "'_simpleframe_result.avi'", ")", "\n", "\n", "#demo by linking video tubes", "\n", "", "else", ":", "\n", "#generate pkl for each frame", "\n", "        ", "demo_inference", "(", "opt", ")", "\n", "#link frame bboxes to build tubes", "\n", "build_tubes", "(", "opt", ")", "\n", "#decode tubes", "\n", "bbox_dict_video", "=", "pkl_decode", "(", "opt", ")", "\n", "#draw boxes", "\n", "vis_bbox", "(", "opt", ",", "os", ".", "path", ".", "join", "(", "opt", ".", "inference_dir", ",", "'VideoFrames'", ")", ",", "bbox_dict_video", ",", "opt", ".", "instance_level", ")", "\n", "#write video", "\n", "rgb2avi", "(", "opt", ".", "inference_dir", ",", "opt", ".", "vname", "+", "'_videotubes_result.avi'", ")", "\n", "\n", "\n", "", "if", "opt", ".", "save_gif", ":", "\n", "        ", "rgb2gif", "(", "opt", ")", "\n", "\n", "", "os", ".", "system", "(", "\"rm -rf tmp\"", ")", "\n", "os", ".", "system", "(", "\"rm -rf \"", "+", "opt", ".", "inference_dir", "+", "\"/rgb\"", ")", "\n", "\n", "print", "(", "'Finish!'", ",", "flush", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.__init__": [[9, 60], ["argparse.ArgumentParser", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument", "tiny_opt.opts.parser.add_argument"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "# basical experiment settings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--simple_th'", ",", "type", "=", "float", ",", "default", "=", "0.0", ",", "\n", "help", "=", "'min score for visualize frame in the simple process'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--tube_vis_th'", ",", "type", "=", "float", ",", "default", "=", "0.12", ",", "\n", "help", "=", "'min score for visualize tube'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--frame_vis_th'", ",", "type", "=", "float", ",", "default", "=", "0.015", ",", "\n", "help", "=", "'min score for visualize individual frame'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--DATA_ROOT'", ",", "default", "=", "'./demo_video'", ",", "\n", "help", "=", "'dataset root path'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--inference_dir'", ",", "default", "=", "'./demo_video'", ",", "\n", "help", "=", "'vis inference_dir'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--vname'", ",", "default", "=", "'001_wild_static_vague.avi'", ",", "\n", "help", "=", "'video name'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--rgb_model'", ",", "default", "=", "'../../experiment/result_model/TEA_STA_K8S3/TEA_STA_K8S3_model_last.pth'", ",", "\n", "help", "=", "'path to rgb model'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--instance_level'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'draw instance_level action bbox in different color'", ")", "\n", "\n", "# model seeting", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "'TEAresnet_50'", ",", "\n", "help", "=", "'model architecture. Currently tested'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--head_conv'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "\n", "help", "=", "'conv layer channels for output head'", "\n", "'default setting is 256 '", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--down_ratio'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "\n", "help", "=", "'output stride. Currently only supports 4.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--K'", ",", "type", "=", "int", ",", "default", "=", "8", ",", "\n", "help", "=", "'length of action tube'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--num_classes'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'1 num_classes for TLGDM'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--loss_option'", ",", "default", "=", "'STAloss'", ",", "\n", "help", "=", "'MOV or STAloss, MOV is the original implementation'", ")", "\n", "\n", "# dataset seetings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_height'", ",", "type", "=", "int", ",", "default", "=", "288", ",", "\n", "help", "=", "'input image height'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_width'", ",", "type", "=", "int", ",", "default", "=", "288", ",", "\n", "help", "=", "'input image width'", ")", "\n", "\n", "# inference settings", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--N'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "\n", "help", "=", "'max number of output objects.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--IMAGE_ROOT'", ",", "default", "=", "'./'", ",", "\n", "help", "=", "'dataset root path'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--save_gif'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'save uncompressed GIF'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--SimpleFrameProcess'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'simple process in the frame level'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.calayzhou_iod-video.vis.tiny_opt.opts.parse": [[62, 85], ["tiny_opt.opts.parser.parse_args", "tiny_opt.opts.parser.parse_args"], "methods", ["None"], ["", "def", "parse", "(", "self", ",", "args", "=", "''", ")", ":", "\n", "        ", "if", "args", "==", "''", ":", "\n", "            ", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", ")", "\n", "", "else", ":", "\n", "            ", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", "args", ")", "\n", "\n", "# if opt.flow_model != '':", "\n", "#     opt.pre_extracted_brox_flow = True", "\n", "", "opt", ".", "mean", "=", "[", "0.40789654", ",", "0.44719302", ",", "0.47026115", "]", "\n", "opt", ".", "std", "=", "[", "0.28863828", ",", "0.27408164", ",", "0.27809835", "]", "\n", "\n", "opt", ".", "offset_h_ratio", "=", "1", "\n", "opt", ".", "offset_w_ratio", "=", "1", "\n", "\n", "opt", ".", "gpus", "=", "[", "0", "]", "\n", "# opt.vname = opt.vname.split('_')[1] + '/' + opt.vname", "\n", "opt", ".", "branch_info", "=", "{", "'hm'", ":", "opt", ".", "num_classes", ",", "\n", "'mov'", ":", "2", "*", "opt", ".", "K", ",", "\n", "'wh'", ":", "2", "*", "opt", ".", "K", "}", "\n", "\n", "opt", ".", "chunk_sizes", "=", "[", "1", "]", "#batch=1 only one sample", "\n", "\n", "return", "opt", "\n", "", "", ""]]}